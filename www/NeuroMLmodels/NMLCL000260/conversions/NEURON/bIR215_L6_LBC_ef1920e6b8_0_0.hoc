// Cell: bIR215_L6_LBC_ef1920e6b8_0_0
/*
{
  "id" : "bIR215_L6_LBC_ef1920e6b8_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.47547, -21.1079, 2.51381, 3.10391", "-2.25244, -19.1651, 2.29568, 4.54795", "-2.02941, -17.2222, 2.07754, 6.86414", "-1.80638, -15.2794, 1.85941, 9.59749", "-1.58335, -13.3366, 1.64128, 11.8194", "-1.36032, -11.3938, 1.42315, 13.5674", "-1.13729, -9.45099, 1.20502, 14.4744", "-0.914264, -7.50817, 0.986887, 14.6773", "-0.691235, -5.56535, 0.768756, 14.5415", "-0.468206, -3.62254, 0.550625, 13.3405", "-0.245177, -1.67972, 0.332493, 12.1443", "-0.0221479, 0.263091, 0.114362, 10.4715", "0.200881, 2.20591, -0.103769, 8.18984", "0.42391, 4.14872, -0.321901, 6.18554", "0.64694, 6.09154, -0.540032, 4.57765", "0.869969, 8.03435, -0.758163, 3.2886", "1.093, 9.97717, -0.976295, 3.75178", "1.31603, 11.92, -1.19443, 4.68351", "1.53906, 13.8628, -1.41256, 5.54689", "1.76209, 15.8056, -1.63069, 4.92105", "1.98511, 17.7484, -1.84882, 3.22657" ]
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-3.49001, -20.4825, 2.0349, 1.25", "-2.88922, -22.9153, 3.86014, 1.25", "-2.489, -24.5359, 5.07604, 1.33", "-2.11761, -26.0397, 6.20435, 1.33", "-1.66891, -27.8566, 7.56754, 1.33", "-1.22746, -29.6441, 8.90871, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064008978086
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-4.04001, -21.5536, -0.915102, 2.06", "-4.42615, -22.619, -0.10768, 2.06", "-4.78831, -23.6184, 0.649602, 2.06", "-5.51512, -25.624, 2.1694, 2.06", "-5.67846, -26.0746, 2.51093, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064008978086
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-0.350012, 11.6999, -7.6651, 0.59", "-1.06966, 10.9433, -7.60044, 0.44", "-1.85094, 10.1475, -7.49887, 0.44", "-3.73021, 8.31318, -7.09402, 0.37", "-4.92419, 7.17839, -6.78798, 0.22", "-7.82842, 4.42009, -5.91236, 0.22", "-9.00105, 3.29774, -5.51725, 0.22", "-10.6317, 1.74648, -4.84309, 0.29", "-12.8988, -0.399915, -3.70371, 0.29", "-15.2028, -2.52745, -2.33442, 0.15", "-16.611, -3.79353, -1.37069, 0.15", "-17.6466, -4.71341, -0.550316, 0.15", "-19.2469, -6.16016, 0.870949, 0.15", "-20.6358, -7.44779, 2.26279, 0.15", "-21.6795, -8.46586, 3.43103, 0.15", "-22.9665, -9.77886, 5.04138, 0.15", "-23.866, -10.6987, 6.17643, 0.15", "-24.9288, -11.8433, 7.50389, 0.15", "-26.407, -13.5666, 9.24096, 0.15", "-27.6242, -15.0809, 10.6128, 0.15", "-29.3065, -17.2202, 12.4073, 0.15", "-30.7737, -19.1203, 13.8587, 0.15", "-32.6343, -21.4962, 15.5897, 0.15", "-35.1844, -24.7789, 17.8995, 0.15", "-36.4991, -26.538, 19.0966, 0.15", "-37.5304, -27.9053, 20.0023, 0.15", "-38.6882, -29.3262, 20.9508, 0.15", "-40.1517, -30.9427, 22.0758, 0.22", "-42.3576, -33.1886, 23.7883, 0.22", "-43.794, -34.5865, 24.9477, 0.22", "-45.5728, -36.2903, 26.4407, 0.22", "-48.1545, -38.8067, 28.7847, 0.22", "-49.918, -40.5123, 30.4334, 0.22", "-51.992, -42.4628, 32.3175, 0.22", "-53.333, -43.6465, 33.5262, 0.22", "-54.0877, -44.3216, 34.2631, 0.37", "-55.159, -45.5036, 35.6033, 0.37", "-56.0333, -46.8865, 37.1697, 0.37", "-63.5879, -54.8059, 41.6683, 0.37" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064008978086,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "0.099989, 19.9635, -1.8651, 1.18", "0.0290792, 21.8791, -0.283425, 1.18", "-0.0208714, 23.2286, 0.830746, 1.4", "-0.163149, 27.0723, 4.00431, 1.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064008978086
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "3.21999, 15.2489, -5.5151, 1.33", "3.69911, 16.85, -6.73242, 1.33", "4.26358, 18.7363, -8.16657, 1.33", "4.726, 20.2816, -9.34146, 1.55", "5.20435, 21.8801, -10.5568, 1.55", "5.61787, 23.2619, -11.6075, 1.55", "6.11962, 24.9386, -12.8823, 1.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064008978086
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.43001, 18.5565, -6.9151, 1.11", "-3.26094, 19.358, -6.9151, 1.11", "-4.38797, 20.6205, -6.9151, 1.18", "-5.02343, 21.3937, -6.9151, 1.4", "-5.93132, 22.525, -6.9151, 1.4", "-6.25996, 22.9141, -6.93284, 1.4", "-7.54492, 24.3079, -7.06105, 1.25", "-8.27776, 25.0233, -7.15935, 1.25", "-9.76717, 26.2743, -7.38918, 1.25", "-11.04, 27.163, -7.59438, 1.25", "-13.266, 28.3769, -7.94984, 0.81", "-14.5677, 28.92, -8.14225, 0.81", "-15.8571, 29.3147, -8.31505, 0.59", "-17.2748, 29.6532, -8.48454, 0.81", "-18.4584, 29.8529, -8.61625, 0.81", "-19.6257, 29.9884, -8.71872, 0.81", "-21.0148, 30.1067, -8.75823, 1.03", "-22.2649, 30.2715, -8.74971, 1.03", "-22.6295, 30.3443, -8.74656, 1.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064008978086
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.98511, 17.7484, -1.84882, 1.04688", "3.69583, 32.6505, -1.84882, 1.04688", "5.40654, 47.5527, -1.84882, 1.04688" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-1.22746, -29.6441, 8.90871, 1.11", "-1.00265, -32.6154, 9.84107, 1.11", "-1.04988, -35.0133, 10.9268, 1.11", "-1.06123, -37.9828, 12.5554, 1.11", "-1.02438, -38.7839, 13.0799, 1.11", "-0.916249, -39.8782, 13.894, 1.11", "-0.672903, -41.659, 15.2949, 1.11", "-0.225699, -43.8953, 17.4234, 1.11", "0.155803, -45.261, 18.8806, 0.96", "0.675948, -46.8016, 20.7059, 0.81", "1.26731, -48.3223, 22.4231, 0.81", "1.78774, -49.4684, 23.602, 0.81", "2.2487, -50.3251, 24.3422, 0.81", "2.89305, -51.4112, 25.1133, 0.59", "3.8096, -53.0012, 26.0395, 0.59", "4.68084, -54.4199, 26.6645, 0.88", "5.87025, -56.1685, 27.262, 0.88", "6.93449, -57.5957, 27.7048, 0.88", "7.95555, -58.895, 28.1183, 0.88", "8.95483, -60.0701, 28.5488, 0.88", "9.92622, -61.061, 29.077, 0.88", "10.5692, -61.641, 29.5671, 0.88", "11.6749, -62.5972, 30.8288, 0.88", "12.3367, -63.2739, 32.0379, 0.88", "12.5676, -63.6299, 32.7216, 0.88", "12.8522, -64.3584, 33.9674, 0.88", "12.9936, -64.8697, 34.8546, 0.88", "13.102, -65.504, 35.8573, 0.88", "13.1996, -66.4802, 37.0933, 0.88", "13.3266, -67.7425, 38.3048, 0.88", "13.4448, -68.9918, 39.2719, 0.88", "15.454, -78.5807, 44.4399, 0.88", "16.7992, -88.0036, 50.0687, 0.88", "17.7432, -96.9342, 56.4515, 0.88", "19.6099, -105.241, 63.384, 0.88", "20.5144, -113.77, 70.253, 0.88", "21.7165, -120.325, 78.8316, 0.88", "23.666, -126.138, 87.7547, 0.88", "25.274, -131.43, 97.0296, 0.88", "28.6783, -136.523, 105.922, 0.88", "30.3112, -140.69, 115.695, 0.88", "30.9654, -144.846, 125.582, 0.88", "30.2607, -148.316, 135.696, 0.88", "29.0694, -153.451, 145.095, 0.88", "29.7133, -159.08, 154.301, 0.88" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-1.22746, -29.6441, 8.90871, 0.96", "-0.654326, -30.0537, 9.54186, 0.96", "-0.0577284, -30.4724, 10.2251, 0.81", "0.86709, -31.185, 11.362, 0.81", "2.03834, -32.1541, 12.8476, 0.59", "3.09283, -33.0758, 14.3009, 0.59", "3.51585, -33.4379, 14.8751, 0.59", "4.10915, -33.915, 15.6543, 0.59", "4.74843, -34.3747, 16.4553, 0.59", "5.48302, -34.8202, 17.3324, 0.59", "6.58234, -35.4005, 18.7193, 0.59", "7.46807, -35.8294, 19.9278, 0.37", "8.36612, -36.1719, 21.3213, 0.37", "8.54672, -36.2137, 21.6494, 0.37", "8.78471, -36.2278, 22.1178, 0.37", "9.40638, -36.195, 23.3738, 0.37", "9.81079, -36.1408, 24.1345, 0.37", "10.6977, -35.9778, 25.8767, 0.37", "10.9962, -35.9221, 26.4355, 0.37", "11.7075, -35.814, 27.6434, 0.37", "12.4389, -35.7108, 28.7173, 0.37", "13.2384, -35.6058, 29.6403, 0.37", "13.762, -35.5398, 30.1223, 0.37", "14.6152, -35.4283, 30.6824, 0.37", "21.2022, -37.7308, 37.2709, 0.37" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-5.67846, -26.0746, 2.51093, 0.29", "-5.61013, -26.1862, 1.72967, 0.29", "-5.4046, -26.4955, -0.666722, 0.44", "-5.31495, -26.624, -1.68507, 0.44", "-5.25998, -26.7658, -2.50408, 0.66", "-5.22585, -26.9232, -3.13222, 0.66", "-5.22747, -27.1055, -3.66125, 0.66", "-5.3212, -27.4444, -4.27816, 0.88", "-5.39072, -27.6202, -4.47615, 0.88", "-5.83854, -28.4923, -5.13302, 1.03", "-6.30735, -29.2477, -5.51995, 1.03", "-7.10125, -30.3224, -5.97661, 1.18", "-8.04784, -31.4651, -6.4317, 1.18", "-8.66647, -32.195, -6.69764, 1.18", "-9.91115, -33.7126, -7.21868, 0.88", "-11.1201, -35.2433, -7.72179, 0.88", "-12.4265, -36.946, -8.36396, 0.88", "-13.5819, -38.571, -9.05281, 0.88", "-14.1783, -39.457, -9.48679, 0.88", "-14.9146, -40.6416, -10.1926, 0.59", "-15.2175, -41.1849, -10.6164, 0.59", "-15.8412, -42.5253, -11.8475, 0.59", "-16.2013, -43.4693, -12.7149, 0.59", "-16.3373, -43.8664, -13.0955, 0.81", "-16.6474, -44.7725, -13.9492, 0.81", "-16.8894, -45.4943, -14.5785, 0.81", "-17.2393, -46.6507, -15.4367, 0.81", "-17.7277, -48.4096, -16.5729, 0.59", "-18.1655, -49.993, -17.5776, 0.59", "-18.3861, -50.7336, -18.0452, 0.59", "-18.5569, -51.242, -18.3887, 0.59", "-19.0404, -52.4441, -19.1983, 0.74", "-19.5359, -53.4713, -19.9688, 0.74", "-20.0354, -54.4211, -20.7786, 0.74", "-20.3603, -55.017, -21.2849, 0.74", "-20.9691, -56.0838, -22.2154, 0.96", "-21.7133, -57.3215, -23.2942, 1.11", "-22.6187, -58.8729, -24.618, 1.11", "-23.0755, -59.7102, -25.2883, 1.11", "-23.4647, -60.4302, -25.8681, 1.11", "-24.0539, -61.5336, -26.7767, 0.88", "-24.4188, -62.1579, -27.3371, 0.88", "-24.8823, -62.8734, -28.1095, 0.88", "-25.3688, -63.556, -28.8895, 0.88", "-25.8448, -64.1773, -29.6471, 0.88", "-26.482, -64.8977, -30.6615, 0.88", "-27.2756, -65.6876, -31.8618, 0.88", "-27.9397, -66.3141, -32.8165, 0.88", "-28.3888, -66.7035, -33.4134, 1.11", "-29.071, -67.2736, -34.2849, 1.11", "-30.639, -68.626, -36.2408, 0.96", "-31.1531, -69.1209, -36.9263, 0.66", "-31.8829, -69.9773, -37.951, 0.66", "-32.2522, -70.5119, -38.5376, 0.66", "-32.6888, -71.3396, -39.366, 0.66", "-32.996, -72.153, -40.0702, 0.88", "-33.519, -74.0989, -41.4918, 0.88", "-33.8274, -75.3319, -42.3195, 0.88", "-34.1633, -76.5873, -43.1283, 0.88", "-34.437, -77.5874, -43.756, 0.88", "-34.6799, -78.411, -44.255, 0.88", "-35.2559, -80.1288, -45.2396, 0.88", "-35.5567, -80.8633, -45.6325, 0.88", "-36.0975, -81.9166, -46.2494, 1.03", "-36.5592, -82.6647, -46.7303, 1.03", "-37.1197, -83.4598, -47.3915, 1.03", "-37.57, -84.0569, -47.9537, 0.74", "-37.962, -84.5352, -48.4188, 0.74", "-38.4874, -85.1515, -49.0544, 0.74", "-39.2726, -86.0513, -50.0007, 0.81", "-40.1794, -87.1276, -51.0705, 0.88", "-40.7196, -87.8598, -51.7588, 0.88", "-41.1886, -88.5781, -52.3821, 0.88", "-41.777, -89.6264, -53.2502, 0.88", "-42.222, -90.4969, -53.9627, 0.88", "-42.6756, -91.3738, -54.683, 0.59", "-43.2795, -92.4993, -55.647, 0.88", "-43.839, -93.5049, -56.5986, 0.88", "-44.2981, -94.3012, -57.356, 0.88", "-44.7103, -94.9701, -57.9313, 0.88", "-45.0481, -95.4972, -58.3683, 0.88", "-45.5278, -96.2483, -58.9673, 0.88", "-45.9239, -96.913, -59.4198, 0.88", "-46.5055, -97.9583, -60.082, 0.88", "-47.3188, -99.4206, -60.9781, 0.88", "-47.9273, -100.471, -61.6284, 0.74", "-48.3787, -101.222, -62.1335, 0.74", "-49.1479, -102.456, -63.0051, 0.74", "-49.6861, -103.255, -63.6011, 0.74", "-50.3228, -104.162, -64.3246, 0.74", "-51.0951, -105.227, -65.2054, 0.74", "-52.0951, -106.505, -66.278, 0.74", "-53.0486, -107.61, -67.2326, 0.74", "-53.874, -108.493, -68.0302, 0.74", "-55.1867, -109.904, -69.2813, 0.52", "-55.8344, -110.639, -69.9243, 0.52", "-56.5816, -111.554, -70.6719, 0.52", "-57.2195, -112.383, -71.3296, 0.52", "-57.979, -113.445, -72.1644, 0.52", "-58.3494, -114.028, -72.5438, 0.52", "-59.2334, -115.552, -73.3565, 0.52", "-59.9423, -116.864, -73.976, 0.52", "-60.9023, -118.74, -74.7691, 0.52", "-61.6241, -120.139, -75.3072, 0.52", "-62.8471, -122.367, -76.1412, 0.52", "-63.3042, -123.115, -76.4452, 0.52", "-64.0999, -124.253, -76.9633, 0.52", "-65.0204, -125.429, -77.5807, 0.74", "-65.8542, -126.414, -78.0426, 0.74", "-66.7711, -127.394, -78.6269, 0.88", "-67.419, -127.972, -79.1026, 0.88", "-68.3112, -128.747, -79.7966, 0.88", "-68.8103, -129.213, -80.2085, 0.88", "-70.0271, -130.529, -81.2621, 1.11", "-71.6489, -132.686, -82.7869, 1.11", "-72.3591, -133.86, -83.5688, 0.74", "-73.0534, -135.28, -84.5281, 0.74", "-73.5575, -136.445, -85.3114, 0.96", "-74.2715, -138.177, -86.4908, 0.96", "-74.7912, -139.393, -87.3552, 0.81", "-75.6126, -141.171, -88.5762, 0.81", "-76.4729, -142.733, -89.7643, 0.66", "-77.5593, -144.246, -91.1446, 0.66", "-78.1991, -144.922, -91.8805, 0.66", "-78.9189, -145.48, -92.6102, 0.66", "-80.0058, -146.14, -93.571, 0.66", "-81.5754, -146.922, -94.9121, 0.66", "-82.4795, -147.328, -95.7596, 0.66", "-83.2604, -147.701, -96.5881, 0.66", "-84.2029, -148.249, -97.7103, 0.66", "-85.043, -148.85, -98.8208, 0.66", "-86.4505, -150.063, -100.874, 0.66", "-87.5254, -151.177, -102.628, 0.44", "-88.2063, -151.953, -103.774, 0.44", "-89.0281, -152.962, -105.25, 0.44", "-89.3951, -153.426, -105.947, 0.52", "-90.0214, -154.152, -107.097, 0.52", "-90.5916, -154.735, -108.087, 0.52", "-91.2057, -155.232, -109.185, 0.52", "-91.4499, -155.376, -109.644, 0.59", "-92.1896, -155.703, -111.096, 0.59", "-92.8164, -155.934, -112.412, 0.59", "-93.4406, -156.115, -113.711, 0.59", "-94.0868, -156.291, -114.929, 0.59", "-94.4887, -156.416, -115.615, 0.59", "-95.0561, -156.625, -116.46, 0.59", "-95.3522, -156.736, -116.843, 0.59", "-96.0091, -156.96, -117.604, 0.59", "-97.0452, -157.254, -118.685, 0.37", "-97.9329, -157.418, -119.549, 0.37", "-98.7141, -157.481, -120.286, 0.37", "-99.5331, -157.475, -121.02, 0.37", "-100.517, -157.399, -121.826, 0.37", "-101.514, -157.26, -122.658, 0.37", "-102.509, -157.085, -123.472, 0.37", "-103.248, -156.963, -124.012, 0.37", "-103.676, -156.93, -124.27, 0.52", "-105.004, -156.956, -125.053, 0.66", "-107.037, -157.139, -126.14, 0.66", "-107.581, -157.203, -126.399, 0.66", "-108.446, -157.323, -126.795, 0.66", "-110.685, -157.638, -127.887, 0.15", "-112.781, -157.925, -128.988, 0.37", "-114.326, -158.106, -129.819, 0.52", "-115.7, -158.224, -130.516, 0.52", "-117.274, -158.317, -131.362, 0.52", "-118.963, -158.379, -132.328, 0.52", "-120.163, -158.401, -133.114, 0.52", "-121.616, -158.45, -134.107, 0.52", "-122.402, -158.494, -134.712, 0.52", "-123.396, -158.571, -135.495, 0.52", "-123.959, -158.623, -135.953, 0.52", "-125.682, -158.816, -137.409, 0.52", "-126.794, -158.978, -138.47, 0.52", "-127.081, -159.032, -138.774, 0.52", "-127.472, -159.108, -139.198, 0.52", "-128.955, -159.459, -140.838, 0.52", "-129.714, -159.707, -141.717, 0.52", "-130.563, -160.068, -142.788, 0.52", "-131.402, -160.494, -143.952, 0.52", "-132.041, -160.863, -144.92, 0.52", "-132.984, -161.437, -146.383, 0.29", "-133.762, -161.933, -147.564, 0.29", "-134.639, -162.536, -148.993, 0.29", "-134.903, -162.749, -149.475, 0.29", "-135.544, -163.401, -150.931, 0.29" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-5.67846, -26.0746, 2.51093, 2.06", "-6.19868, -27.44, 2.91397, 2.06", "-6.49084, -28.2534, 3.08794, 2.06", "-6.99968, -29.7181, 3.3121, 2.06", "-7.43975, -30.976, 3.47986, 1.99", "-8.06506, -32.7004, 3.7485, 1.99", "-8.86281, -34.847, 4.12114, 1.99", "-9.72973, -37.1338, 4.49136, 1.99", "-10.7403, -39.7637, 4.91705, 1.99", "-11.4496, -41.6189, 5.2015, 1.99", "-12.2045, -43.5817, 5.52468, 1.99", "-12.9756, -45.5355, 5.89878, 1.99", "-13.2472, -46.1798, 6.04963, 1.99", "-13.7956, -47.4012, 6.40705, 1.99" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-63.5879, -54.8059, 41.6683, 0.07", "-70.0499, -60.7095, 47.2284, 0.07", "-76.5721, -65.9056, 53.3461, 0.07", "-82.1878, -72.4028, 59.242, 0.07", "-88.7935, -77.3906, 65.4268, 0.07", "-93.7354, -82.5813, 72.9346, 0.07", "-98.8948, -87.8139, 80.2607, 0.07", "-103.337, -92.5761, 88.3317, 0.07", "-109.526, -95.2913, 96.0555, 0.07", "-115.585, -99.7644, 103.121, 0.07", "-120.546, -105.481, 110.255, 0.07", "-125.727, -110.134, 117.914, 0.07", "-132.173, -113.441, 125.205, 0.07", "-137.267, -116.927, 133.46, 0.07" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-63.5879, -54.8059, 41.6683, 0.29", "-67.8896, -59.2078, 45.1802, 0.07", "-71.1303, -63.6483, 49.6935, 0.07", "-73.5332, -69.3471, 53.3644, 0.07", "-75.0502, -74.8292, 57.7772, 0.07", "-75.349, -79.9041, 62.8671, 0.07", "-74.9943, -83.9041, 68.7688, 0.07", "-75.4967, -88.087, 74.5342, 0.07", "-76.3844, -92.5034, 80.0857, 0.07", "-77.5432, -96.3498, 85.958, 0.07", "-78.1977, -101.322, 91.1009, 0.07", "-78.1485, -106.741, 95.8678, 0.07", "-78.7689, -112.358, 100.362, 0.07", "-79.2987, -118.89, 103.506, 0.07", "-78.9235, -125.092, 107.268, 0.07" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-0.163149, 27.0723, 4.00431, 0.88", "-0.259665, 28.7233, 4.54503, 0.88", "-0.264956, 29.9285, 5.02424, 1.11", "-0.272779, 31.7099, 5.73265, 1.11", "-0.278424, 32.9956, 6.2439, 1.11", "-0.284049, 34.2768, 6.75337, 1.25", "-0.294507, 36.6584, 7.70043, 1.25", "-0.29969, 37.473, 8.1189, 1.25" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-0.163149, 27.0723, 4.00431, 0.81", "-0.908317, 28.1651, 4.17766, 0.81", "-1.8245, 29.4604, 4.40121, 0.81", "-2.89541, 30.9615, 4.68822, 0.81", "-3.92249, 32.4109, 4.98926, 0.66", "-4.9366, 33.8314, 5.36061, 0.66", "-5.3841, 34.4455, 5.57293, 0.37", "-5.94302, 35.2418, 5.92079, 0.22", "-6.60377, 36.157, 6.43102, 0.22", "-6.89838, 36.5199, 6.68253, 0.37", "-7.63628, 37.2527, 7.42651, 0.37", "-8.54681, 38.093, 8.4219, 0.37", "-9.13503, 38.6299, 9.06955, 0.22", "-9.53215, 38.9792, 9.48977, 0.22", "-9.96019, 39.3423, 9.91567, 0.22", "-11.093, 40.3125, 10.9875, 0.29", "-12.8595, 41.8421, 12.5447, 0.52", "-13.7723, 42.6753, 13.3336, 0.52", "-14.7677, 43.6356, 14.2461, 0.52", "-14.9836, 43.8571, 14.4539, 0.66", "-15.6535, 44.5912, 15.1784, 0.81", "-16.3588, 45.4593, 16.0142, 0.81", "-17.0559, 46.4056, 16.9641, 0.59", "-17.6017, 47.2629, 17.8049, 0.59", "-18.3988, 48.6887, 19.155, 0.59", "-19.4656, 50.7889, 21.0098, 0.59", "-19.799, 51.4942, 21.5806, 0.07", "-20.1198, 52.0811, 22.0367, 0.07", "-20.3745, 52.4433, 22.339, 0.07", "-20.8414, 52.9592, 22.809, 0.15", "-21.437, 53.4475, 23.294, 0.15", "-21.971, 53.787, 23.655, 0.15", "-24.2966, 55.1086, 25.165, 0.37", "-26.2505, 56.1743, 26.3203, 0.52", "-27.5921, 56.9259, 27.0909, 0.66", "-28.6036, 57.5182, 27.6634, 0.44", "-29.5237, 58.0934, 28.1787, 0.44", "-30.3853, 58.6802, 28.6646, 0.44", "-31.7752, 59.7496, 29.4399, 0.44", "-32.8644, 60.6194, 30.0636, 0.44", "-33.9409, 61.5195, 30.7217, 0.44", "-34.3164, 61.85, 30.9941, 0.44", "-35.4601, 62.8416, 31.942, 0.44", "-36.0601, 63.335, 32.4891, 0.44", "-36.727, 63.8513, 33.2725, 0.44", "-41.585, 69.1916, 38.3781, 0.44", "-45.5504, 73.9061, 44.6766, 0.44", "-48.2153, 79.0681, 51.3326, 0.44", "-50.4923, 84.1056, 58.2159, 0.44", "-53.5806, 87.3957, 65.7146, 0.44", "-57.7652, 90.195, 72.8536, 0.44", "-61.8332, 91.7264, 80.3988, 0.44", "-64.9153, 94.0051, 88.234, 0.44", "-67.235, 96.0508, 96.3845, 0.44", "-70.5086, 98.8807, 103.974, 0.44", "-73.702, 102.638, 111.225, 0.44", "-77.2774, 106.062, 118.448, 0.44", "-80.9802, 109.289, 125.689, 0.44" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "6.11962, 24.9386, -12.8823, 1.03", "7.67606, 26.3561, -13.594, 1.03", "8.87072, 27.3175, -14.1822, 1.25", "11.4005, 29.1148, -15.4496, 1.25", "13.4821, 30.4415, -16.4583, 1.25", "15.469, 31.5765, -17.2719, 1.25", "17.7175, 32.7303, -18.004, 1.25", "20.7855, 33.8747, -18.6652, 1.25", "22.6222, 34.3374, -18.7964, 0.96", "24.4897, 34.667, -18.7993, 0.96", "27.5145, 35.0121, -18.5702, 0.96", "29.8547, 35.1531, -18.1925, 0.96", "33.674, 35.2359, -17.1829, 0.96", "38.1103, 35.2471, -15.5344, 0.96" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "6.11962, 24.9386, -12.8823, 0.59", "7.30837, 24.0315, -13.991, 0.59", "9.65472, 22.105, -16.5023, 0.59", "10.9259, 20.9874, -17.8904, 0.59", "12.0543, 19.9347, -19.1662, 0.59", "14.0287, 18.0932, -21.5104, 0.59", "16.3683, 15.9501, -24.3278, 0.59", "19.8281, 12.7645, -28.6637, 0.37", "22.5906, 10.1679, -32.1973, 0.37", "25.2589, 7.70194, -35.5906, 0.37", "28.966, 4.42159, -40.3368, 0.37", "32.1745, 1.70944, -44.4717, 0.07", "35.5161, -0.8787, -48.9587, 0.07", "37.3903, -2.23012, -51.6167, 0.07", "39.1337, -3.37486, -54.2927, 0.07", "41.5679, -4.85264, -58.2688, 0.07", "43.0588, -5.73983, -60.9162, 0.22", "47.0675, -8.10866, -68.7023, 0.22", "48.3453, -8.84267, -71.2668, 0.37", "50.3478, -9.95122, -75.2878, 0.37", "51.247, -10.4384, -77.0709, 0.37", "52.0368, -10.8512, -78.5553, 0.37", "53.0392, -11.3307, -80.2999, 0.37", "54.5923, -11.9723, -82.6502, 0.37", "57.8873, -13.1307, -87.4886, 0.37", "59.5817, -13.6331, -89.9889, 0.37", "62.794, -14.398, -95.257, 0.37", "64.2171, -14.6343, -97.9813, 0.37", "64.9532, -14.6773, -99.7439, 0.37", "65.6799, -14.5997, -102.207, 0.37", "65.9666, -14.4188, -104.101, 0.37", "66.129, -13.6068, -109.461, 0.37", "65.9895, -13.1561, -111.924, 0.37", "65.8468, -12.8018, -113.969, 0.37", "65.7259, -12.4319, -116.397, 0.37", "65.7801, -11.9703, -119.46, 0.37", "65.9104, -11.5678, -121.859, 0.37", "66.279, -10.8518, -125.413, 0.37", "66.7598, -10.1362, -128.593, 0.37", "67.2466, -9.20641, -131.823, 0.37", "67.9924, -7.67422, -136.268, 0.37", "68.5787, -6.44379, -139.326, 0.37", "69.1762, -4.96079, -142.439, 0.37", "69.7194, -3.30238, -145.292, 0.37", "70.7604, 1.05561, -151.273, 0.07", "71.3802, 4.4779, -155.195, 0.07", "71.7863, 6.80692, -157.606, 0.07", "72.2048, 8.76415, -159.547, 0.07", "73.0046, 11.814, -162.507, 0.07", "74.5433, 16.5009, -167.052, 0.07", "75.103, 17.7001, -168.289, 0.07", "77.558, 21.9221, -173.089, 0.07", "79.3472, 24.7522, -176.363, 0.07", "80.4552, 26.3989, -178.28, 0.07", "81.9135, 28.5803, -180.787, 0.07", "84.1681, 32.0643, -184.67, 0.07", "85.8, 35.0259, -187.677, 0.07", "88.1367, 40.6282, -192.596, 0.07", "89.13, 43.7301, -195.025, 0.07", "89.7579, 46.2265, -196.929, 0.07", "90.1272, 48.1034, -198.363, 0.07", "90.4182, 49.785, -199.627, 0.07", "91.1322, 52.545, -201.827, 0.07", "91.8379, 54.1403, -203.299, 0.07", "94.7822, 58.2783, -207.177, 0.07", "96.8466, 60.3178, -209.0, 0.07", "98.9575, 61.9973, -210.25, 0.07", "102.602, 64.4944, -211.604, 0.07", "104.489, 65.6822, -211.95, 0.07", "109.366, 68.7285, -212.064, 0.07", "111.692, 70.2445, -211.685, 0.07", "114.387, 72.099, -210.924, 0.07", "116.367, 73.5177, -210.191, 0.07", "118.529, 75.0573, -209.127, 0.07", "120.865, 76.5836, -207.894, 0.07", "123.385, 77.985, -206.755, 0.07", "127.046, 79.6794, -205.485, 0.07", "132.009, 81.5972, -204.276, 0.07", "134.914, 82.5451, -203.793, 0.07", "138.322, 83.5048, -203.485, 0.07", "146.29, 85.6583, -203.389, 0.07", "148.146, 86.1903, -203.474, 0.07", "151.55, 87.1841, -203.869, 0.07", "153.266, 87.7255, -204.209, 0.07", "155.073, 88.4064, -204.681, 0.07", "157.474, 89.5276, -205.354, 0.07", "159.868, 91.1326, -206.156, 0.07" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-22.6295, 30.3443, -8.74656, 0.29", "-25.2606, 32.0138, -10.5549, 0.29", "-29.0698, 34.1494, -13.156, 0.29", "-31.1123, 35.2188, -14.5192, 0.07", "-32.6361, 35.9987, -15.5028, 0.07", "-33.153, 36.2705, -15.8357, 0.07", "-35.8329, 37.7361, -17.6405, 0.37", "-36.8757, 38.2748, -18.3621, 0.37", "-38.3127, 39.0267, -19.3736, 0.37", "-39.5332, 39.7004, -20.3518, 0.37", "-40.9973, 40.4841, -21.6011, 0.59", "-42.2986, 41.1169, -22.7473, 0.59", "-43.4142, 41.5607, -23.7325, 0.59", "-45.6574, 42.2681, -25.6064, 0.59", "-47.5972, 42.7715, -27.2392, 0.59", "-50.1631, 43.2746, -29.3665, 0.81", "-51.8311, 43.486, -30.6693, 0.81", "-53.6324, 43.6219, -31.9696, 0.81", "-55.8487, 43.6727, -33.5161, 1.03" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-22.6295, 30.3443, -8.74656, 0.29", "-24.1457, 30.3371, -8.80615, 0.29", "-25.2358, 30.3376, -8.83822, 0.29", "-26.7446, 30.3579, -8.87311, 0.29", "-28.3739, 30.4096, -8.90398, 0.52", "-30.7838, 30.5142, -8.94084, 0.88", "-32.7352, 30.6333, -8.96522, 0.37", "-33.7245, 30.7714, -8.97343, 0.37", "-34.8041, 30.9929, -8.95773, 0.37", "-35.675, 31.22, -8.92569, 0.37", "-36.9013, 31.595, -8.85599, 0.37", "-37.9073, 31.9302, -8.78422, 0.37", "-40.0776, 32.7282, -8.62909, 0.37", "-42.0175, 33.4365, -8.43516, 0.37", "-43.1569, 33.8429, -8.29867, 0.37", "-45.686, 34.746, -7.9636, 0.15", "-47.1576, 35.28, -7.72796, 0.15", "-48.9215, 35.9286, -7.40689, 0.15", "-51.4882, 36.8763, -6.87104, 0.15", "-54.1745, 37.906, -6.31, 0.15", "-55.9789, 38.613, -5.88801, 0.15", "-57.2339, 39.1249, -5.56055, 0.29", "-58.2573, 39.5627, -5.27651, 0.29", "-60.3313, 40.4895, -4.68089, 0.15", "-61.6641, 41.1295, -4.32399, 0.37", "-62.5299, 41.5054, -4.08758, 0.37", "-63.6813, 41.9414, -3.80586, 0.37", "-64.6406, 42.2524, -3.58578, 0.37", "-66.3825, 42.735, -3.1868, 0.37", "-68.0607, 43.1471, -2.81177, 0.37", "-70.8976, 43.8226, -2.19003, 0.59", "-73.1722, 44.383, -1.71645, 0.59", "-74.6202, 44.8002, -1.37886, 0.44", "-75.5613, 45.1228, -1.13332, 0.44", "-76.5746, 45.5216, -0.860505, 0.44", "-78.8144, 46.5336, -0.256017, 0.29", "-80.338, 47.3641, 0.140192, 0.29", "-82.4596, 48.6384, 0.668935, 0.37", "-83.9211, 49.532, 0.973626, 0.07", "-84.9813, 50.1648, 1.16807, 0.07", "-86.2103, 50.8461, 1.34747, 0.07", "-87.1778, 51.3252, 1.4405, 0.29", "-88.44, 51.8983, 1.49314, 0.29", "-90.1813, 52.6298, 1.46944, 0.29", "-90.7687, 52.8853, 1.45921, 0.29", "-92.4636, 53.7308, 1.45705, 0.29", "-93.586, 54.3408, 1.4575, 0.59", "-95.3439, 55.3422, 1.45902, 0.59", "-96.5353, 56.0379, 1.4614, 0.15", "-97.4097, 56.5584, 1.46453, 0.15", "-98.6352, 57.2394, 1.48518, 0.15", "-99.5292, 57.7374, 1.49997, 0.15", "-100.744, 58.4164, 1.51351, 0.22", "-102.533, 59.41, 1.5263, 0.22", "-103.491, 59.9425, 1.53035, 0.22", "-105.702, 61.107, 1.43531, 0.22", "-107.68, 62.147, 1.2949, 0.22", "-109.691, 63.23, 1.11521, 0.22", "-111.234, 64.0844, 0.947814, 0.22", "-112.512, 64.7775, 0.799449, 0.22", "-116.22, 66.7289, 0.365998, 0.22", "-118.557, 67.9408, 0.0853106, 0.22", "-120.177, 68.7733, -0.0947017, 0.22", "-123.616, 70.5992, -0.482346, 0.22", "-126.685, 72.31, -0.816278, 0.22", "-128.478, 73.3677, -0.965585, 0.22", "-130.071, 74.3639, -1.05028, 0.22", "-132.527, 76.0029, -1.18096, 0.22", "-135.006, 77.8382, -1.32037, 0.22", "-137.547, 79.905, -1.43632, 0.22", "-140.456, 82.4355, -1.54539, 0.22", "-142.222, 83.9963, -1.59304, 0.22", "-144.919, 86.3722, -1.63064, 0.22", "-147.017, 88.2121, -1.63859, 0.22", "-148.651, 89.6811, -1.6286, 0.22", "-150.743, 91.6625, -1.64299, 0.22", "-152.282, 93.2082, -1.67919, 0.22", "-153.367, 94.3912, -1.70405, 0.22", "-156.867, 98.5365, -1.69027, 0.22", "-158.178, 100.221, -1.66458, 0.22", "-159.664, 102.318, -1.52193, 0.22", "-161.226, 104.812, -1.21538, 0.22", "-162.307, 106.678, -0.896786, 0.22", "-163.095, 108.082, -0.607848, 0.22", "-163.555, 108.928, -0.405748, 0.22", "-165.892, 112.684, 0.329967, 0.22", "-166.47, 113.519, 0.448315, 0.22", "-168.656, 116.646, 0.694954, 0.22", "-170.555, 119.391, 0.77002, 0.22", "-172.358, 122.198, 0.706747, 0.22", "-174.534, 125.996, 0.592662, 0.37", "-176.303, 129.497, 0.432899, 0.37", "-177.76, 132.78, 0.355651, 0.37", "-178.348, 134.548, 0.365669, 0.37", "-179.103, 137.617, 0.474915, 0.07", "-179.74, 141.458, 0.717229, 0.07", "-179.892, 143.685, 0.928911, 0.07", "-179.855, 147.373, 1.20957, 0.07", "-179.689, 151.911, 1.56142, 0.07", "-179.558, 153.966, 1.70455, 0.07", "-179.338, 156.007, 1.80287, 0.07", "-178.96, 158.212, 1.78264, 0.07", "-178.312, 160.978, 1.70321, 0.07" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "5.40654, 47.5527, -1.84882, 0.405153", "7.11726, 62.4548, -1.84882, 0.405153", "8.82798, 77.3569, -1.84882, 0.405153" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "21.2022, -37.7308, 37.2709, 0.07", "24.6395, -38.989, 41.879, 0.07", "27.5768, -41.2974, 46.4665, 0.07", "30.8133, -44.0131, 50.6354, 0.07" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "21.2022, -37.7308, 37.2709, 0.29", "25.2651, -39.2231, 42.8913, 0.07", "29.3025, -39.7501, 48.6801, 0.07" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-13.7956, -47.4012, 6.40705, 0.96", "-12.7484, -51.4998, 7.9212, 0.96", "-11.955, -54.536, 8.9507, 0.96", "-11.1465, -58.2653, 10.1243, 0.96", "-10.1291, -64.2384, 11.8922, 1.18", "-9.75444, -67.2231, 12.7214, 1.18", "-9.44886, -70.3323, 13.5553, 1.18", "-9.34126, -72.1069, 14.0322, 1.18", "-9.19173, -75.0637, 14.7601, 1.03", "-9.09515, -76.8485, 15.2008, 1.03", "-8.84633, -79.6503, 16.0513, 1.03", "-8.58781, -81.0235, 16.594, 1.03", "-7.88888, -84.0214, 17.9192, 1.03", "-6.71867, -87.9207, 19.7927, 1.03", "-5.82667, -90.1682, 20.9579, 1.03", "-4.38667, -93.2249, 22.6635, 1.03", "-2.55677, -96.5863, 24.7188, 1.03" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-13.7956, -47.4012, 6.40705, 1.33", "-14.2889, -49.0734, 4.90209, 1.33", "-15.121, -51.8939, 2.3638, 1.33", "-16.0329, -54.9848, -0.417847, 1.33", "-16.4037, -56.2416, -1.54886, 1.4" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-0.29969, 37.473, 8.1189, 0.66", "0.399972, 39.1257, 7.85875, 0.66", "1.13439, 40.415, 7.6878, 0.66", "2.04162, 41.7293, 7.5422, 0.88", "3.20447, 43.4138, 7.35557, 0.88", "3.86989, 44.3777, 7.24878, 0.88", "4.92946, 45.9127, 7.07873, 1.03", "5.72275, 46.8234, 7.01325, 0.74", "6.44098, 47.4949, 6.957, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.29969, 37.473, 8.1189, 0.59", "-1.2224, 38.7379, 8.7678, 0.59", "-1.99935, 39.8552, 9.48508, 0.59", "-2.60688, 40.7902, 10.1709, 0.74", "-3.26684, 41.8848, 11.0347, 1.11", "-3.7613, 42.7995, 11.8164, 1.11", "-4.30037, 43.9213, 12.8304, 1.11", "-4.61784, 44.8341, 13.7969, 1.25", "-4.76834, 45.6216, 14.7277, 1.47", "-4.78566, 46.2902, 15.553, 1.47", "-4.65627, 47.0864, 16.518, 1.47", "-4.48734, 47.6046, 17.087, 1.47", "-4.20477, 48.2613, 17.6933, 1.47", "-3.86515, 49.0148, 18.2919, 1.47", "-3.5355, 49.763, 18.7838, 1.47", "-3.13605, 50.6693, 19.3267, 1.62", "-2.70043, 51.7379, 19.8876, 1.62", "-2.29505, 52.8033, 20.3959, 1.69", "-1.45798, 55.2102, 21.433, 1.69", "-1.10291, 56.3776, 21.9067, 1.69" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "38.1103, 35.2471, -15.5344, 0.81", "41.1113, 35.3349, -14.6579, 0.81", "42.701, 35.4987, -14.0941, 0.81", "44.4273, 35.772, -13.3474, 0.52", "45.7323, 36.0659, -12.7279, 0.52", "47.0623, 36.425, -12.0897, 0.52", "48.2389, 36.7467, -11.5071, 0.74", "49.6401, 37.1304, -10.7959, 0.74", "51.2049, 37.5631, -9.97693, 0.74", "52.71, 37.9349, -9.24463, 0.74", "55.5529, 38.3995, -7.96354, 0.37", "56.5028, 38.4773, -7.59069, 0.37", "58.9741, 38.5789, -6.69948, 0.66", "59.5977, 38.5846, -6.50653, 0.66", "62.1031, 38.503, -5.82479, 1.03", "63.795, 38.3508, -5.39617, 1.03", "66.3662, 38.0284, -4.82134, 1.03" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "38.1103, 35.2471, -15.5344, 0.59", "39.5101, 36.7011, -16.015, 0.59", "41.0749, 38.3265, -16.5523, 0.59", "43.656, 41.0075, -17.4385, 0.59", "44.6485, 42.0384, -17.7793, 0.59", "46.9592, 44.4386, -18.5728, 0.59", "48.7995, 46.35, -19.2046, 0.59" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-55.8487, 43.6727, -33.5161, 0.74", "-57.3556, 45.0988, -35.7443, 0.74", "-58.6833, 46.4099, -37.7911, 0.74", "-59.3168, 47.1072, -38.8093, 0.74", "-60.9429, 48.9098, -41.3367, 0.74", "-61.6014, 49.6061, -42.3146, 0.52", "-62.1923, 50.192, -43.1244, 0.52", "-62.9699, 50.959, -44.055, 0.52", "-64.3294, 52.198, -45.3652, 0.52", "-65.2224, 52.8927, -46.0731, 0.52", "-66.0728, 53.4437, -46.6008, 0.52", "-67.3877, 54.238, -47.2763, 0.15", "-68.5705, 54.9108, -47.7918, 0.15", "-70.1427, 55.7436, -48.3914, 0.15", "-71.957, 56.6359, -49.041, 0.15", "-73.2669, 57.2767, -49.5315, 0.15", "-74.3532, 57.8005, -49.957, 0.15", "-75.1152, 58.1195, -50.2876, 0.15", "-77.2746, 58.8527, -51.3207, 0.29", "-77.9234, 59.0236, -51.686, 0.29", "-79.0852, 59.2532, -52.4757, 0.29", "-79.7977, 59.341, -53.012, 0.29", "-81.3925, 59.4512, -54.2867, 0.29", "-82.1891, 59.5098, -54.9336, 0.29", "-83.8671, 59.7031, -56.2924, 0.44", "-84.9367, 59.9098, -57.1551, 0.44", "-86.144, 60.2852, -58.0448, 0.44", "-86.722, 60.5578, -58.4724, 0.22", "-88.0345, 61.4211, -59.4334, 0.22", "-89.1839, 62.343, -60.2924, 0.22", "-89.6896, 62.8249, -60.7092, 0.22", "-91.0831, 64.3012, -62.1019, 0.22", "-92.3671, 65.7197, -63.5848, 0.22", "-92.9825, 66.4073, -64.3746, 0.22", "-94.1918, 67.6995, -65.9543, 0.22", "-95.1134, 68.6855, -67.1555, 0.22", "-96.5874, 70.2851, -69.0554, 0.22", "-97.8319, 71.6608, -70.7789, 0.22", "-99.1494, 73.0126, -72.4515, 0.22", "-101.374, 75.0642, -74.9539, 0.22", "-103.054, 76.3194, -76.5358, 0.22", "-104.206, 76.9928, -77.4398, 0.22", "-107.136, 78.3348, -79.43, 0.22", "-109.848, 79.2931, -81.0971, 0.22", "-112.739, 80.0981, -82.689, 0.22", "-116.819, 80.9602, -84.8122, 0.07", "-119.342, 81.37, -86.0886, 0.07", "-120.958, 81.5823, -86.8821, 0.07", "-124.405, 81.9941, -88.5871, 0.07", "-125.939, 82.1903, -89.4282, 0.07", "-128.361, 82.5515, -90.8285, 0.07", "-130.643, 82.9544, -92.1083, 0.07", "-134.199, 83.6102, -93.988, 0.07", "-137.075, 84.1596, -95.4545, 0.07", "-139.189, 84.6162, -96.4986, 0.07", "-140.729, 85.0149, -97.2536, 0.07", "-143.826, 85.9777, -98.7311, 0.07", "-146.561, 86.9764, -100.065, 0.07", "-149.19, 88.083, -101.449, 0.07", "-151.911, 89.3261, -103.009, 0.07", "-154.302, 90.5162, -104.512, 0.07", "-156.353, 91.6459, -105.792, 0.07", "-158.031, 92.6855, -106.788, 0.07", "-159.538, 93.7258, -107.621, 0.07", "-160.944, 94.7704, -108.339, 0.07", "-163.005, 96.4785, -109.371, 0.07", "-167.23, 100.448, -111.461, 0.07", "-169.612, 102.958, -112.705, 0.07", "-171.09, 104.64, -113.505, 0.07", "-172.538, 106.409, -114.317, 0.07", "-174.157, 108.549, -115.298, 0.07", "-175.452, 110.433, -116.231, 0.07", "-176.964, 112.881, -117.576, 0.07", "-177.885, 114.331, -118.436, 0.07", "-178.753, 115.625, -119.213, 0.07", "-179.821, 117.148, -120.127, 0.07", "-180.762, 118.38, -120.894, 0.07", "-181.776, 119.676, -121.696, 0.07", "-183.164, 121.429, -122.658, 0.07" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-55.8487, 43.6727, -33.5161, 0.44", "-56.9013, 43.8272, -34.0515, 0.44", "-57.8155, 44.0073, -34.4652, 0.44", "-59.259, 44.2917, -35.1183, 0.44", "-60.4988, 44.5359, -35.6792, 0.44", "-62.262, 44.8832, -36.477, 0.44", "-64.7174, 45.3669, -37.5879, 0.44", "-67.2158, 46.019, -38.7551, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "30.8133, -44.0131, 50.6354, 0.07", "30.3206, -40.7069, 57.805, 0.07", "28.9582, -38.7146, 65.3023, 0.07", "28.8247, -36.4317, 72.8459, 0.07", "30.2162, -33.4049, 80.0136, 0.07", "30.2532, -31.461, 87.6461, 0.07", "30.1736, -30.2395, 95.4171, 0.07", "30.2376, -29.0088, 103.187, 0.07", "30.4665, -26.0321, 110.502, 0.07", "29.9284, -22.5429, 117.588, 0.07", "31.0284, -17.7429, 123.865, 0.07", "33.2571, -11.7692, 128.788, 0.07", "35.3844, -5.82034, 133.782, 0.07", "36.0435, 0.151426, 139.139, 0.07", "35.8896, 5.26702, 145.279, 0.07", "34.5592, 11.2146, 150.528, 0.07", "34.7578, 18.1904, 154.688, 0.07", "35.9532, 24.5677, 159.504, 0.07", "36.9446, 30.6511, 164.694, 0.07", "38.6474, 36.6122, 169.833, 0.07", "39.3986, 43.5893, 173.931, 0.07", "40.3758, 49.9378, 178.829, 0.07", "40.6789, 56.4897, 183.566, 0.07", "39.6002, 62.2872, 189.021, 0.07", "37.5127, 68.4489, 193.775, 0.07", "34.9144, 73.3933, 199.475, 0.07", "32.1166, 76.9659, 205.964, 0.07", "30.1978, 81.1555, 212.434, 0.07" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "30.8133, -44.0131, 50.6354, 0.07", "39.1939, -49.1666, 53.5068, 0.07", "46.2937, -55.5326, 57.3876, 0.07", "52.4847, -63.3849, 60.2116, 0.07", "58.1531, -70.802, 64.6463, 0.07", "63.3723, -78.5564, 69.0901, 0.07", "67.9377, -85.9673, 74.606, 0.07", "70.4373, -93.5575, 81.0587, 0.07", "73.7647, -100.029, 88.2271, 0.07", "76.9322, -106.431, 95.5185, 0.07", "79.4723, -114.862, 100.93, 0.07", "81.3828, -124.309, 104.861, 0.07", "84.0523, -133.065, 109.725, 0.07", "86.386, -142.485, 113.512, 0.07", "88.4936, -151.473, 118.24, 0.07", "90.2739, -160.041, 123.727, 0.07", "91.0268, -168.681, 129.307, 0.07", "93.9282, -177.316, 134.245, 0.07", "96.2349, -186.117, 139.202, 0.07", "98.106, -194.993, 144.198, 0.07", "99.0484, -204.27, 148.735, 0.07", "97.4001, -212.937, 153.996, 0.07", "94.8084, -221.298, 159.3, 0.07" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "29.3025, -39.7501, 48.6801, 0.07", "32.6028, -41.1111, 56.0352, 0.07", "36.4727, -43.8422, 62.7516, 0.07" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "29.3025, -39.7501, 48.6801, 0.07", "34.2657, -41.0214, 57.1944, 0.07", "37.7494, -42.2197, 66.4173, 0.07", "39.5331, -43.2226, 76.1304, 0.07", "40.7179, -44.5071, 85.9028, 0.07", "42.5913, -43.9657, 95.6369, 0.07", "44.8678, -44.543, 105.279, 0.07", "46.0219, -43.9151, 115.122, 0.07", "45.76, -43.8007, 125.045, 0.07", "46.7846, -44.4786, 134.893, 0.07", "47.195, -45.6866, 144.737, 0.07", "48.3217, -48.0281, 154.332, 0.07", "50.1586, -48.4299, 164.076, 0.07", "53.7047, -50.1502, 173.2, 0.07", "57.2265, -51.3614, 182.407, 0.07", "59.1249, -52.777, 192.05, 0.07", "60.0326, -55.5341, 201.565, 0.07", "60.6107, -57.0715, 211.357, 0.07", "59.9961, -59.1014, 221.058, 0.07", "59.8576, -58.9294, 230.984, 0.07", "60.6671, -59.2126, 240.871, 0.07", "61.0449, -60.4412, 250.714, 0.07", "62.2808, -60.9349, 260.548, 0.07", "62.9442, -62.6092, 270.314, 0.07" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-2.55677, -96.5863, 24.7188, 0.81", "-2.19304, -97.3076, 25.7009, 0.81", "-1.99589, -97.8605, 26.8246, 0.81", "-1.84923, -98.4704, 28.2351, 0.81", "-1.75857, -98.763, 28.9119, 0.81", "-1.51981, -99.4643, 30.4395, 0.81", "-1.03104, -100.856, 33.1978, 0.81", "-0.631003, -102.002, 35.3605, 0.81", "-0.402831, -102.587, 36.4099, 0.81", "0.0166488, -103.501, 38.1417, 0.52", "0.274776, -104.016, 39.1273, 0.52", "0.613871, -104.657, 40.2553, 0.52", "0.846791, -105.036, 40.7547, 0.52", "1.20848, -105.653, 41.423, 0.52", "1.75642, -106.807, 42.6005, 0.66", "1.98669, -107.646, 43.4205, 0.66", "2.04417, -108.258, 43.992, 0.66", "1.95919, -109.116, 44.7132, 0.66", "1.64762, -110.228, 45.5739, 0.66", "1.18636, -111.213, 46.25, 0.81", "0.620779, -112.113, 46.8103, 0.81", "-0.104387, -113.009, 47.3602, 0.66", "-0.818933, -113.792, 47.8631, 0.66", "-1.57969, -114.534, 48.3713, 0.66", "-2.36877, -115.198, 48.7918, 0.37", "-3.06855, -115.705, 49.0843, 0.37", "-4.11754, -116.369, 49.4491, 0.37", "-5.95786, -124.446, 56.9092, 0.37", "-6.31856, -130.538, 66.1066, 0.37", "-5.26715, -137.181, 74.9052, 0.37", "-3.13727, -145.082, 82.4893, 0.37", "-1.84424, -153.618, 89.6197, 0.37", "-1.74297, -162.791, 96.1062, 0.37", "-3.17881, -171.906, 102.492, 0.37", "-4.50166, -179.679, 110.35, 0.37", "-7.06871, -188.302, 116.985, 0.37", "-10.768, -197.479, 122.248, 0.37", "-14.1637, -207.238, 126.697, 0.37", "-15.8983, -216.528, 132.767, 0.37", "-16.1594, -225.309, 139.723, 0.37", "-19.0151, -233.338, 146.895, 0.37", "-23.1987, -240.698, 154.055, 0.37", "-27.9963, -247.719, 161.133, 0.37", "-31.5994, -255.635, 168.07, 0.37", "-36.75, -261.954, 175.491, 0.37", "-41.0066, -268.978, 182.909, 0.37" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-2.55677, -96.5863, 24.7188, 1.03", "-4.82672, -97.7897, 25.5547, 1.03", "-6.44362, -98.7015, 26.2598, 1.03", "-8.05797, -99.685, 27.1249, 1.03", "-9.3085, -100.524, 27.8819, 0.96", "-10.1382, -101.15, 28.4301, 0.96", "-11.1065, -102.0, 29.1439, 0.96", "-11.9843, -102.971, 29.8782, 0.66", "-13.2951, -104.826, 31.208, 0.66", "-13.8931, -105.832, 31.9495, 0.66", "-14.5199, -106.908, 32.7778, 0.66", "-15.358, -108.286, 33.7717, 0.66", "-15.8681, -109.127, 34.3067, 0.66", "-16.3363, -109.891, 34.7492, 0.66", "-16.9702, -110.883, 35.2961, 0.37", "-17.7481, -111.903, 35.8793, 0.37", "-18.6315, -112.813, 36.452, 0.52", "-19.6707, -113.692, 37.0527, 0.52", "-20.8256, -114.613, 37.7361, 0.37", "-21.4319, -115.107, 38.1376, 0.37", "-21.9716, -115.586, 38.5191, 0.37", "-22.576, -116.146, 38.9858, 0.37", "-22.8416, -116.363, 39.1969, 0.37", "-23.4201, -116.729, 39.5283, 0.37", "-24.0218, -117.05, 39.8167, 0.37", "-29.1949, -122.829, 45.4304, 0.37", "-34.2309, -128.385, 51.3658, 0.37", "-38.7299, -135.504, 56.094, 0.37", "-41.6658, -143.96, 59.9822, 0.37", "-44.1162, -153.125, 62.5039, 0.37", "-45.1727, -162.573, 65.0702, 0.37", "-46.9023, -171.865, 67.7716, 0.37", "-48.157, -181.391, 69.9476, 0.37", "-47.6471, -191.035, 71.9809, 0.37", "-46.8414, -200.478, 74.6837, 0.37", "-46.5447, -209.403, 78.7492, 0.37", "-47.1117, -217.94, 83.4836, 0.37", "-47.1557, -225.665, 89.3816, 0.37", "-46.3947, -232.474, 96.1901, 0.37", "-45.019, -237.893, 103.965, 0.37", "-45.0941, -241.585, 112.71, 0.37", "-43.7346, -244.644, 121.571, 0.37", "-42.3771, -248.008, 130.333, 0.37", "-40.7648, -252.802, 138.427, 0.37", "-38.4568, -258.358, 145.891, 0.37" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-16.4037, -56.2416, -1.54886, 1.18", "-16.5792, -57.4042, -2.83591, 1.18", "-16.6639, -59.3417, -4.97083, 1.18", "-16.556, -60.9437, -6.42415, 1.4", "-16.452, -62.1436, -7.3906, 1.69", "-16.3853, -63.137, -8.18115, 1.69", "-16.3127, -65.0024, -9.61568, 1.69", "-16.2746, -65.9419, -10.313, 1.69", "-16.1669, -68.6526, -12.0313, 1.4", "-16.1264, -69.7873, -12.7159, 1.4", "-16.0924, -71.8531, -13.966, 1.4", "-16.1516, -73.892, -15.2069, 1.4", "-16.3073, -76.0158, -16.5681, 1.4", "-16.4837, -77.84, -17.7879, 1.4", "-16.7061, -79.8879, -19.2639, 1.55", "-16.83, -81.4572, -20.3779, 1.55", "-16.9585, -83.8705, -22.0165, 1.55", "-17.0694, -86.0154, -23.5639, 1.4" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-16.4037, -56.2416, -1.54886, 0.88", "-18.1035, -57.0211, -1.56317, 0.88", "-18.9878, -57.414, -1.56949, 0.88", "-20.0496, -57.8711, -1.57581, 0.66", "-22.0014, -58.6658, -1.58434, 0.66", "-23.6622, -59.3067, -1.58969, 0.66", "-24.8779, -59.7659, -1.59208, 0.81", "-26.5882, -60.4509, -1.6043, 0.81", "-27.4686, -60.8736, -1.6057, 0.81", "-29.0297, -61.7608, -1.59518, 0.59", "-29.7949, -62.2499, -1.5581, 0.59", "-31.3094, -63.2612, -1.42295, 0.59", "-32.6474, -64.2126, -1.25158, 0.59", "-33.9606, -65.2421, -1.03491, 0.59", "-35.1199, -66.2324, -0.811302, 0.59", "-36.5618, -67.6008, -0.496074, 0.96", "-37.3918, -68.4168, -0.287345, 0.96", "-37.693, -68.6925, -0.20064, 0.96", "-38.6641, -69.4431, 0.096188, 0.29", "-39.4846, -70.0268, 0.359056, 0.29", "-40.6334, -70.9078, 0.718686, 0.29", "-41.1398, -71.336, 0.837735, 0.29", "-42.4898, -72.5158, 1.04415, 0.29", "-43.0659, -72.9735, 1.08874, 0.29", "-43.4861, -73.2496, 1.09375, 0.29", "-44.948, -74.1905, 1.00813, 0.29", "-46.0804, -74.9331, 0.856822, 0.29", "-47.3146, -75.7046, 0.600856, 0.29", "-48.605, -76.433, 0.301366, 0.29", "-49.8421, -77.0376, 0.0542111, 0.29", "-51.3915, -77.6596, -0.164898, 0.29", "-51.9922, -77.8622, -0.216462, 0.29", "-54.2263, -78.5845, -0.331717, 0.29", "-56.9108, -79.3987, -0.423089, 0.52", "-59.7242, -80.192, -0.493831, 0.52", "-64.0875, -81.347, -0.49801, 0.52", "-69.7014, -82.7083, -0.219094, 0.52", "-72.6306, -83.4149, 0.0918679, 0.52", "-74.8615, -83.9761, 0.461833, 0.37", "-76.1452, -84.2887, 0.757196, 0.37", "-77.5976, -84.602, 1.22354, 0.37", "-80.3915, -85.1279, 2.43316, 0.37", "-83.8338, -85.7308, 4.27433, 0.37", "-85.1868, -85.9717, 5.04969, 0.37", "-86.561, -86.2288, 5.85325, 0.37", "-88.3727, -86.5501, 6.84012, 0.29", "-89.1089, -86.6587, 7.19667, 0.29", "-90.8522, -86.8553, 7.93781, 0.29", "-92.3805, -86.9764, 8.55795, 0.44", "-93.8921, -87.1159, 9.10544, 0.66", "-95.3281, -87.2667, 9.54913, 0.66", "-96.3838, -87.3881, 9.79852, 0.66", "-97.0697, -87.4632, 9.9242, 0.66", "-99.5245, -87.819, 10.242, 0.66", "-102.46, -88.4217, 10.4496, 0.81", "-104.077, -88.8754, 10.4771, 0.81", "-105.987, -89.5342, 10.4426, 0.66", "-107.177, -90.0122, 10.3932, 0.66", "-108.951, -90.724, 10.226, 0.66", "-110.119, -91.1506, 10.0316, 0.66", "-111.778, -91.6694, 9.71346, 0.66", "-114.382, -92.4097, 9.18005, 0.66", "-116.443, -92.9291, 8.75318, 0.66", "-121.627, -94.0215, 7.66527, 0.66", "-124.667, -94.514, 6.9237, 0.66", "-126.624, -94.7876, 6.39213, 0.74", "-128.136, -94.9789, 5.89905, 0.74", "-128.695, -95.0513, 5.65834, 0.74", "-129.921, -95.2569, 5.0319, 0.74", "-131.452, -95.6875, 4.0261, 0.74", "-132.6, -96.1036, 3.04613, 0.74", "-134.195, -96.7241, 1.245, 0.74", "-135.468, -97.1977, -0.456051, 0.81", "-136.13, -97.443, -1.52401, 0.81", "-136.938, -97.6999, -3.10439, 0.88", "-137.727, -97.8366, -4.91443, 0.88", "-138.436, -97.7754, -6.93391, 0.88", "-138.645, -97.6602, -7.69791, 0.88", "-139.018, -97.2577, -9.37579, 0.74", "-139.327, -96.7454, -11.1064, 0.74", "-139.544, -96.2552, -12.5929, 0.74", "-139.691, -95.8804, -13.6039, 0.74", "-139.984, -95.2203, -15.3444, 0.52", "-140.095, -95.0111, -15.9512, 0.52", "-140.405, -94.5205, -17.7195, 0.52", "-140.819, -94.0261, -20.3166, 0.52", "-141.011, -93.8696, -21.5741, 0.52", "-141.214, -93.7554, -22.9138, 0.52", "-141.354, -93.7028, -23.8241, 0.52", "-141.666, -93.5244, -26.4112, 0.52", "-141.727, -93.4456, -27.2266, 0.52", "-141.729, -93.3849, -27.7192, 0.52", "-141.695, -93.2726, -28.5145, 0.29", "-141.667, -93.1671, -29.1446, 0.29", "-141.608, -92.9517, -30.3553, 0.29", "-141.564, -92.831, -31.1274, 0.29", "-141.347, -92.4319, -34.1037, 0.29", "-141.231, -92.2996, -35.2469, 0.29", "-140.93, -92.0798, -37.3565, 0.29", "-140.659, -91.9186, -38.6835, 0.29", "-140.187, -91.68, -40.3321, 0.29", "-139.771, -91.5102, -41.4174, 0.29", "-139.086, -91.3133, -42.7114, 0.29", "-138.6, -91.1933, -43.472, 0.15", "-137.695, -90.9563, -44.733, 0.15", "-137.1, -90.7826, -45.531, 0.15", "-136.414, -90.5713, -46.4534, 0.15", "-135.563, -90.3007, -47.719, 0.15", "-134.908, -90.1048, -48.8222, 0.15", "-134.363, -89.9623, -49.9092, 0.15", "-134.013, -89.8781, -50.6842, 0.15", "-133.163, -89.6467, -52.6646, 0.15", "-132.22, -89.334, -54.9153, 0.15", "-131.859, -89.2006, -55.8521, 0.15", "-131.369, -89.0806, -57.206, 0.15" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "6.44098, 47.4949, 6.957, 0.59", "7.62105, 48.2951, 6.62268, 0.59", "8.29567, 48.8032, 6.45118, 0.52", "9.41713, 49.6922, 6.20199, 0.52", "10.9683, 50.9734, 5.9261, 0.44", "11.7246, 51.6126, 5.80631, 0.44", "12.8087, 52.5142, 5.59596, 0.44", "14.4133, 53.7913, 5.27487, 0.44", "15.6923, 54.8293, 5.03931, 0.44", "17.5048, 56.3446, 4.74573, 0.44", "18.3404, 57.0582, 4.62673, 0.44", "19.8872, 58.3544, 4.40411, 0.44", "21.1876, 59.4319, 4.251, 0.59", "22.3235, 60.3363, 4.14517, 0.59", "25.6458, 62.9363, 3.92965, 0.74", "27.3449, 64.2516, 3.87578, 0.74", "29.393, 65.8467, 3.88569, 0.74", "31.351, 67.3739, 3.9602, 0.74", "32.7329, 68.464, 3.97806, 0.44", "33.8487, 69.3404, 3.97275, 0.44", "35.4742, 70.6078, 3.94853, 0.29", "36.2807, 71.2218, 3.91745, 0.29", "38.7863, 73.0835, 3.72128, 0.29", "41.849, 75.3163, 3.41809, 0.15", "44.2308, 77.0281, 3.16425, 0.15", "46.2439, 78.4217, 2.94266, 0.15", "48.1718, 79.6882, 2.78534, 0.15", "50.724, 81.3051, 2.66726, 0.15", "52.1543, 82.2053, 2.67418, 0.07", "53.6669, 83.1345, 2.7941, 0.07", "55.0945, 84.0662, 2.99717, 0.07", "56.6203, 85.1228, 3.34434, 0.07", "57.0988, 85.4881, 3.48596, 0.07", "58.0136, 86.2642, 3.81125, 0.07", "58.6167, 86.8246, 3.95692, 0.07", "59.0791, 87.2962, 4.0534, 0.07", "59.8739, 88.0916, 4.15782, 0.07", "61.3441, 89.3713, 4.30681, 0.07", "62.2993, 90.0735, 4.46064, 0.22", "63.2924, 90.7046, 4.68873, 0.22", "64.9323, 91.6702, 5.24114, 0.22", "65.7283, 92.0866, 5.60981, 0.22", "67.0872, 92.7124, 6.42477, 0.44", "67.9576, 93.03, 7.03103, 0.44", "68.4862, 93.202, 7.3947, 0.44", "69.2427, 93.4622, 7.92438, 0.44", "70.5677, 94.0161, 8.77356, 0.44", "71.6087, 94.558, 9.34889, 0.22", "72.6991, 95.2397, 9.86929, 0.22", "74.217, 96.2942, 10.5316, 0.37", "75.2253, 97.0684, 10.9429, 0.37", "76.6267, 98.3327, 11.4208, 0.37", "78.0157, 99.8512, 11.8098, 0.37", "78.8707, 100.992, 12.0081, 0.37", "79.6376, 102.216, 12.1851, 0.37", "80.2001, 103.236, 12.3142, 0.37", "81.5788, 105.832, 12.6589, 0.37", "82.2424, 107.135, 12.8602, 0.59", "82.9225, 108.446, 13.078, 0.74", "83.8289, 110.092, 13.3759, 0.74", "84.7371, 111.628, 13.7172, 0.74", "85.6262, 113.023, 14.1367, 0.74", "86.3843, 114.112, 14.5776, 0.74", "87.3196, 115.318, 15.1207, 0.74", "88.1684, 116.348, 15.6111, 0.96", "88.6687, 116.951, 15.9014, 0.96", "89.2715, 117.662, 16.2393, 0.96", "89.6738, 118.132, 16.4533, 0.96", "90.9346, 119.62, 17.1461, 1.18", "91.8546, 120.803, 17.6806, 1.18", "92.3811, 121.542, 17.9764, 1.18", "93.4238, 123.209, 18.56, 1.03", "94.172, 124.585, 19.0311, 1.03", "94.5727, 125.455, 19.3268, 1.03", "94.9691, 126.577, 19.7119, 1.03", "95.2797, 127.694, 20.0711, 0.74", "95.5022, 128.831, 20.4471, 0.59", "95.5984, 129.89, 20.8254, 0.59", "95.6412, 130.612, 21.0686, 0.59", "95.7674, 131.66, 21.4541, 0.59", "104.063, 137.798, 23.2546, 0.59", "112.812, 143.433, 24.2198, 0.59", "122.087, 147.891, 25.7213, 0.59", "131.353, 152.633, 25.9788, 0.59", "140.698, 156.5, 28.3149, 0.59", "150.04, 159.156, 31.8892, 0.59", "158.953, 163.494, 35.023, 0.59", "168.168, 168.29, 35.7453, 0.59", "177.282, 173.001, 37.5102, 0.59", "186.488, 176.972, 40.2118, 0.59", "195.267, 181.623, 43.3115, 0.59", "204.258, 185.769, 46.4596, 0.59", "213.344, 190.413, 48.5069, 0.59", "222.087, 195.523, 50.9856, 0.59", "231.339, 199.313, 53.7652, 0.59" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "6.44098, 47.4949, 6.957, 0.44", "6.8266, 49.1966, 7.98638, 0.44", "7.29988, 50.6541, 9.06644, 0.44", "7.63513, 51.3887, 9.76751, 0.37", "8.22883, 52.4376, 10.9839, 0.37", "8.64397, 53.0155, 11.8219, 0.44", "8.97933, 53.4093, 12.5087, 0.74", "9.48059, 53.7682, 13.4803, 0.74", "10.1246, 54.0661, 14.7717, 0.74", "10.4428, 54.2052, 15.4081, 0.74", "11.0969, 54.5148, 16.7606, 0.74", "11.6131, 54.8657, 17.9052, 0.74", "11.847, 55.0895, 18.5451, 0.74", "12.1446, 55.5655, 19.7027, 0.74", "12.355, 56.2866, 21.1346, 0.96", "12.4125, 56.8293, 22.059, 0.96", "12.3797, 57.9309, 23.7277, 0.66", "12.336, 58.7909, 24.8952, 0.52", "12.3503, 59.2905, 25.5847, 0.52", "12.4139, 59.8553, 26.4067, 0.66", "12.5822, 60.5854, 27.5771, 0.66", "12.7059, 60.8515, 28.0077, 0.66", "13.1924, 61.5016, 29.0038, 0.66", "14.2262, 62.6028, 30.6538, 0.66", "14.7948, 63.1748, 31.483, 0.66", "15.3684, 63.7478, 32.3143, 0.81", "16.2039, 64.6003, 33.541, 0.81", "17.0093, 65.5055, 34.8391, 0.66", "17.8231, 66.5539, 36.3348, 0.66", "18.3034, 67.2879, 37.3414, 0.66", "18.5367, 67.6775, 37.8664, 0.66", "18.6908, 67.9577, 38.2478, 0.66", "19.1243, 68.8595, 39.4951, 0.66", "19.3024, 69.2206, 40.0316, 0.66", "19.7497, 69.9372, 41.0033, 0.66", "20.5725, 70.9901, 42.1791, 0.66", "20.8833, 71.3736, 42.509, 0.66", "21.3916, 71.9776, 42.9059, 0.66", "22.3642, 73.0557, 43.4457, 0.66", "23.4008, 74.1919, 43.9423, 0.52", "24.4545, 75.3906, 44.3567, 0.52", "25.2256, 76.3028, 44.6239, 0.44", "26.1098, 77.3917, 44.8729, 0.44", "26.554, 77.9707, 44.9518, 0.44", "32.4513, 84.8444, 53.1749, 0.44", "39.6174, 89.4775, 61.8055, 0.44", "47.5452, 94.2411, 69.6688, 0.44", "55.0715, 98.1547, 78.3179, 0.44", "64.3004, 100.684, 85.6947, 0.44", "73.9716, 101.557, 92.8575, 0.44", "84.6517, 99.6349, 98.1862, 0.44", "94.5884, 96.5619, 104.398, 0.44", "103.361, 92.6475, 111.817, 0.44", "111.874, 88.5785, 119.46, 0.44", "119.007, 82.8063, 127.512, 0.44", "127.596, 78.5882, 134.997, 0.44", "135.549, 75.5985, 143.625, 0.44", "144.836, 74.8875, 151.303, 0.44", "154.146, 76.3947, 158.836, 0.44", "163.665, 79.0865, 165.777, 0.44", "172.379, 83.4191, 173.009, 0.44", "181.673, 87.7319, 179.488, 0.44", "191.344, 93.4506, 184.167, 0.44", "201.165, 97.4187, 190.04, 0.44", "211.492, 101.953, 194.499, 0.44", "221.688, 106.981, 198.766, 0.44", "232.415, 109.56, 203.691, 0.44", "243.932, 112.267, 206.145, 0.44", "255.424, 112.672, 209.798, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-1.10291, 56.3776, 21.9067, 0.74", "-0.566778, 57.1302, 22.0822, 0.74", "0.352155, 58.4946, 22.412, 0.74", "1.10883, 59.6609, 22.6548, 0.96", "1.5811, 60.3747, 22.7705, 0.96", "1.93438, 60.8911, 22.836, 0.96", "2.54565, 61.7308, 22.9083, 0.59", "2.86321, 62.1314, 22.9193, 0.59", "3.25111, 62.5442, 22.8651, 0.37", "3.789, 63.1183, 22.7246, 0.37", "4.00099, 63.3667, 22.6607, 0.37", "4.44404, 63.9442, 22.5266, 0.37", "4.92335, 64.6576, 22.4188, 0.37", "5.30128, 65.3266, 22.3621, 0.37", "5.74688, 66.077, 22.3579, 0.37", "6.25569, 66.9338, 22.3793, 0.37", "6.51686, 67.3841, 22.4074, 0.37", "6.97221, 68.2824, 22.4969, 0.52", "7.65117, 69.8413, 22.6813, 0.66", "8.21594, 71.3913, 22.8524, 0.66", "8.51686, 72.3638, 22.9472, 0.66", "8.83282, 73.5766, 23.0394, 0.52", "9.17145, 75.208, 23.1942, 0.74", "9.35126, 76.3369, 23.3212, 0.74", "9.66891, 78.6194, 23.6115, 0.74", "9.88813, 80.1822, 23.808, 0.88", "10.4589, 83.2949, 24.3187, 0.88", "10.7895, 84.6268, 24.6033, 0.88", "10.9904, 85.2289, 24.7693, 0.81", "11.4149, 86.2657, 25.1232, 0.81", "12.0084, 87.5793, 25.6256, 0.81", "12.7103, 89.1638, 26.2304, 0.81", "13.1885, 90.2968, 26.6441, 0.81", "13.6391, 91.4239, 27.0076, 0.44", "13.9433, 92.2978, 27.2739, 0.44", "14.3597, 93.7318, 27.6923, 0.44", "14.6286, 94.7438, 27.9627, 0.44", "15.0876, 96.5722, 28.3626, 0.44", "15.5513, 98.5508, 28.7935, 0.44", "15.7175, 99.2991, 28.9792, 0.44", "15.9669, 100.414, 29.2845, 0.44", "16.1329, 101.075, 29.4998, 0.44", "16.2584, 101.474, 29.6205, 0.44", "16.4809, 102.126, 29.7859, 0.44", "16.6624, 102.64, 29.8931, 0.44", "17.002, 103.499, 30.0739, 0.44", "17.4447, 104.515, 30.2881, 0.44", "18.5443, 106.824, 30.8255, 0.44", "18.6747, 107.063, 30.8851, 0.44", "22.4018, 114.973, 33.2723, 0.44", "25.0784, 123.551, 34.8562, 0.44", "27.7872, 131.643, 37.9734, 0.44", "30.6082, 139.506, 41.4968, 0.44", "33.1009, 147.084, 45.7641, 0.44", "34.8954, 154.976, 49.8705, 0.44", "37.2004, 163.014, 53.4168, 0.44", "38.5068, 170.357, 58.5203, 0.44", "39.1738, 177.396, 64.1187, 0.44", "38.7844, 184.557, 69.6117, 0.44", "37.3584, 191.669, 75.0014, 0.44", "35.2798, 198.498, 80.5147, 0.44", "33.5214, 206.3, 84.8381, 0.44", "29.8875, 214.02, 87.9916, 0.44", "27.0138, 222.459, 90.0623, 0.44", "24.913, 231.406, 90.1797, 0.44", "24.137, 240.472, 88.8837, 0.44", "24.3955, 249.04, 85.7174, 0.44", "24.2657, 258.028, 83.8604, 0.44" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-1.10291, 56.3776, 21.9067, 1.47", "-2.38015, 58.8232, 24.1767, 1.47", "-2.9284, 59.9336, 25.3138, 1.03", "-3.21874, 60.7194, 26.179, 0.59", "-3.30117, 61.0243, 26.5064, 0.59", "-3.49611, 61.8642, 27.3845, 0.81", "-3.71232, 62.7722, 28.289, 0.81", "-3.92468, 63.5563, 28.9969, 0.96", "-4.24247, 64.853, 29.9773, 0.96", "-4.44953, 65.6665, 30.5255, 0.59", "-4.89339, 67.2178, 31.4311, 0.59", "-5.22866, 68.2228, 31.9305, 0.74", "-5.77155, 69.5734, 32.5239, 0.96", "-6.72703, 71.6449, 33.3314, 1.11", "-7.50408, 73.1915, 33.9257, 1.11", "-7.88215, 73.8896, 34.2219, 1.11", "-8.51291, 75.0059, 34.7173, 0.66", "-8.94882, 75.7647, 35.0729, 0.66", "-9.47044, 76.6368, 35.5154, 0.66", "-10.3002, 77.8344, 36.1601, 0.66", "-11.1551, 79.0588, 36.7947, 0.66", "-11.7727, 79.9315, 37.2617, 0.44", "-12.643, 81.1284, 37.9086, 0.29", "-13.8364, 82.7219, 38.778, 0.37", "-14.9877, 84.1836, 39.5638, 0.22", "-21.8953, 91.2831, 45.4513, 0.22" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "66.3662, 38.0284, -4.82134, 0.66", "68.4452, 38.2919, -4.46199, 0.66", "72.2664, 38.5259, -3.76149, 0.66", "75.4229, 38.5626, -3.35679, 0.66", "79.1417, 38.5363, -3.09881, 0.88", "80.7221, 38.508, -3.06569, 0.88", "84.3038, 38.4391, -3.11557, 1.11", "86.8326, 38.3765, -3.25654, 1.11", "91.7429, 38.1223, -3.62386, 1.11", "95.0447, 37.9052, -4.05745, 0.74", "97.3776, 37.7452, -4.50599, 0.74", "100.078, 37.6249, -5.14575, 0.74", "103.164, 37.6661, -6.08281, 0.74" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "66.3662, 38.0284, -4.82134, 0.29", "66.6657, 39.168, -3.97427, 0.29", "66.8203, 40.4131, -3.17917, 0.29", "66.8235, 43.3616, -1.4692, 0.29", "66.8246, 44.3193, -0.91382, 0.29", "66.8261, 45.6672, -0.132114, 0.29", "66.8264, 45.9808, 0.0497844, 0.29", "66.6283, 47.8061, 1.08277, 0.29", "66.391, 48.6067, 1.32815, 0.29" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "48.7995, 46.35, -19.2046, 0.66", "49.9809, 47.7001, -19.7002, 0.66", "52.4457, 50.5943, -20.659, 0.66", "54.6983, 53.2657, -21.3981, 0.81", "56.5865, 55.6715, -21.9261, 0.59", "57.6767, 57.1154, -22.1836, 0.59", "58.6423, 58.44, -22.3774, 0.37", "59.7318, 60.1167, -22.5347, 0.37", "61.2919, 62.7132, -22.5974, 0.37", "62.9769, 65.3561, -22.5341, 0.37", "64.1637, 67.104, -22.4434, 0.37", "65.3882, 68.7692, -22.3311, 0.37", "66.6276, 70.3662, -22.2835, 0.37", "67.6915, 71.7142, -22.3105, 0.37", "70.2342, 74.8559, -22.5413, 0.37", "71.4283, 76.2777, -22.7175, 0.37", "74.2863, 79.6771, -23.281, 0.37", "76.4112, 82.1682, -23.8151, 0.37", "77.4622, 83.3834, -24.14, 0.22", "78.8308, 85.0224, -24.6407, 0.22", "79.4834, 85.849, -24.9317, 0.22", "80.5509, 87.2177, -25.4479, 0.22", "81.5891, 88.5844, -25.929, 0.22", "83.0102, 90.3908, -26.4617, 0.22", "84.6177, 92.3607, -27.0094, 0.22", "85.1634, 93.0213, -27.1436, 0.22", "85.9228, 93.949, -27.2563, 0.22", "87.8675, 96.3604, -27.376, 0.29", "89.2143, 98.0198, -27.3371, 0.29", "90.5903, 99.6613, -27.2506, 0.29", "92.4629, 101.725, -27.1267, 0.29", "94.1418, 103.468, -27.0026, 0.07", "95.1492, 104.478, -26.8595, 0.07", "96.4481, 105.785, -26.5705, 0.07", "98.0023, 107.29, -26.1712, 0.07", "100.934, 110.007, -25.4804, 0.07", "103.767, 112.571, -24.9309, 0.07", "107.48, 115.946, -24.2917, 0.07", "110.484, 118.783, -23.8296, 0.07", "112.029, 120.349, -23.6216, 0.07", "113.37, 121.879, -23.4821, 0.07", "115.076, 124.149, -23.451, 0.07", "117.273, 127.612, -23.4636, 0.07", "118.327, 129.552, -23.4844, 0.07", "119.418, 131.703, -23.3758, 0.07", "120.972, 134.955, -22.8198, 0.07", "122.198, 137.468, -22.0638, 0.07", "124.385, 141.686, -20.3022, 0.07", "125.372, 143.523, -19.3508, 0.07", "127.463, 147.152, -17.168, 0.07", "129.399, 150.205, -14.9333, 0.07", "131.009, 152.51, -13.0231, 0.07", "132.427, 154.497, -11.3134, 0.07", "133.685, 156.31, -9.80583, 0.07", "134.539, 157.664, -8.75091, 0.07", "137.576, 162.902, -4.89788, 0.22", "139.046, 165.568, -3.11021, 0.22", "140.522, 168.39, -1.34694, 0.22", "141.539, 170.445, -0.138373, 0.22", "143.162, 173.93, 1.80935, 0.22", "144.387, 176.81, 3.30106, 0.22", "145.427, 179.49, 4.57759, 0.22", "147.09, 184.042, 6.74299, 0.22", "148.039, 186.597, 7.95167, 0.22", "149.099, 189.325, 9.24007, 0.22", "149.94, 191.552, 10.2702, 0.22", "150.577, 193.472, 11.0576, 0.22", "151.257, 195.484, 11.855, 0.22", "151.993, 197.739, 12.5457, 0.22", "152.907, 200.478, 13.1451, 0.22", "153.578, 202.529, 13.3915, 0.22", "154.482, 205.444, 13.5111, 0.22", "155.577, 208.799, 13.4376, 0.22", "157.154, 213.16, 13.1003, 0.22", "157.86, 214.984, 12.8836, 0.22", "158.554, 216.673, 12.6362, 0.22", "160.47, 221.069, 11.9481, 0.22", "161.183, 222.642, 11.6987, 0.22", "162.547, 225.63, 11.2521, 0.22", "164.52, 229.557, 10.9262, 0.22", "165.325, 231.144, 10.8588, 0.22", "166.389, 233.178, 10.8607, 0.22", "167.036, 234.327, 10.9153, 0.22", "168.396, 236.595, 11.1505, 0.22", "170.24, 239.441, 11.6018, 0.22", "171.783, 241.616, 11.9974, 0.22", "173.511, 243.853, 12.4278, 0.22", "175.449, 246.085, 12.8829, 0.22", "176.707, 247.465, 13.1275, 0.22", "178.866, 249.782, 13.4601, 0.22", "179.901, 250.804, 13.5573, 0.22", "181.919, 252.637, 13.6324, 0.22", "183.268, 253.784, 13.6254, 0.22", "185.946, 255.716, 13.6135, 0.22", "188.842, 257.419, 13.725, 0.22", "191.275, 258.61, 13.9219, 0.22", "193.159, 259.433, 14.1799, 0.22", "195.055, 260.164, 14.5352, 0.22", "198.849, 261.457, 15.4782, 0.22", "202.552, 262.486, 16.5271, 0.22", "204.539, 262.964, 17.1414, 0.22", "206.353, 263.443, 17.7878, 0.22", "207.955, 263.883, 18.4505, 0.22", "210.677, 264.744, 19.7286, 0.22" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "48.7995, 46.35, -19.2046, 0.44", "48.1205, 47.4046, -17.8958, 0.44", "47.3471, 48.6918, -16.3198, 0.44", "46.2933, 50.6041, -13.8651, 0.44", "45.8695, 51.3497, -12.8775, 0.44", "45.1246, 52.5815, -11.2442, 0.44", "44.7318, 53.1937, -10.4239, 0.44", "44.3626, 53.7012, -9.69458, 0.44", "43.2126, 55.1954, -7.52077, 0.44", "41.6634, 57.01, -4.74398, 0.07", "41.1744, 57.4865, -3.91127, 0.07", "40.641, 57.896, -3.06521, 0.07", "39.8745, 58.3578, -1.98529, 0.07", "39.1409, 58.7157, -1.04289, 0.07", "37.8533, 59.2504, 0.478551, 0.07", "36.8384, 59.6511, 1.67051, 0.07", "35.9814, 60.0606, 2.67529, 0.07", "34.1877, 61.1772, 4.57566, 0.07", "33.1385, 61.9596, 5.58937, 0.07", "31.6861, 63.2272, 6.86653, 0.07", "30.6483, 64.2572, 7.64164, 0.07", "29.2616, 65.7733, 8.63608, 0.07", "26.9967, 68.3655, 10.211, 0.07", "26.3838, 69.0826, 10.6293, 0.07", "25.5403, 70.065, 11.2039, 0.07", "23.7743, 71.9877, 12.2631, 0.07", "22.121, 73.7248, 13.2495, 0.07", "20.8661, 74.9323, 14.0271, 0.07", "19.2341, 76.3757, 15.1338, 0.07", "17.9303, 77.4793, 16.0215, 0.07", "15.9742, 79.0381, 17.3686, 0.07", "12.1359, 85.1622, 23.823, 0.07" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-67.2158, 46.019, -38.7551, 0.07", "-68.6441, 46.2364, -41.1348, 0.07", "-69.6817, 46.3314, -42.818, 0.29", "-70.7308, 46.3816, -44.4365, 0.29", "-72.124, 46.3908, -46.5086, 0.29", "-73.1934, 46.3247, -48.0714, 0.29", "-74.202, 46.1984, -49.502, 0.29", "-75.9363, 45.8301, -51.7413, 0.29", "-76.7624, 45.5935, -52.7089, 0.29", "-77.5368, 45.3455, -53.4733, 0.29", "-78.4684, 45.0413, -54.3416, 0.29", "-79.839, 44.6284, -55.5189, 0.29", "-81.3061, 44.221, -56.6568, 0.29", "-83.3804, 43.7719, -58.1182, 0.29", "-86.0318, 43.3834, -59.9171, 0.29", "-88.7112, 43.2617, -61.6315, 0.29", "-90.3953, 43.3208, -62.6662, 0.29", "-91.452, 43.3938, -63.2981, 0.29", "-93.0545, 43.5574, -64.2235, 0.29", "-95.868, 43.8749, -65.8347, 0.29", "-99.9943, 44.3864, -68.0964, 0.07", "-101.712, 44.5494, -68.9704, 0.07", "-103.325, 44.6688, -69.8051, 0.07", "-105.254, 44.7755, -70.8916, 0.07", "-107.715, 44.8215, -72.3268, 0.07", "-109.465, 44.8145, -73.3869, 0.07", "-112.12, 44.7368, -75.1646, 0.15", "-113.044, 44.7158, -75.8738, 0.37", "-115.631, 44.6718, -78.0375, 0.37", "-117.379, 44.6082, -79.7155, 0.37", "-118.947, 44.5599, -81.398, 0.37", "-120.943, 44.4815, -83.7198, 0.37", "-123.499, 44.3709, -86.8966, 0.37", "-124.943, 44.2734, -88.7175, 0.37", "-126.81, 44.0894, -91.1626, 0.37", "-128.026, 43.9369, -92.9402, 0.22", "-128.902, 43.8349, -94.3281, 0.22", "-129.562, 43.7759, -95.4315, 0.22", "-130.057, 43.7445, -96.2733, 0.22", "-130.847, 43.7156, -97.6259, 0.22", "-131.987, 43.6691, -99.4583, 0.22", "-133.115, 43.5965, -101.286, 0.22", "-133.779, 43.557, -102.395, 0.22", "-134.349, 43.5287, -103.321, 0.22", "-134.98, 43.5009, -104.306, 0.22", "-136.642, 43.4782, -106.938, 0.22", "-137.597, 43.499, -108.566, 0.22", "-138.82, 43.6171, -110.784, 0.22", "-139.682, 43.8034, -112.47, 0.22", "-140.388, 44.0424, -113.796, 0.22", "-141.879, 44.5861, -116.259, 0.22", "-142.898, 44.9055, -117.768, 0.22", "-144.05, 45.1751, -119.349, 0.22", "-146.172, 45.4642, -122.204, 0.22", "-148.719, 45.5901, -125.711, 0.22", "-150.175, 45.5435, -127.716, 0.22", "-152.82, 45.2842, -131.343, 0.22", "-153.978, 45.1236, -133.0, 0.22", "-156.014, 44.7428, -136.207, 0.22", "-156.942, 44.5322, -137.895, 0.22", "-157.765, 44.3423, -139.788, 0.22", "-158.446, 44.2839, -141.839, 0.22", "-158.886, 44.3605, -143.59, 0.22", "-159.144, 44.4687, -144.998, 0.22", "-159.392, 44.6378, -147.021, 0.22", "-159.469, 44.6941, -148.044, 0.22", "-159.517, 44.6654, -150.822, 0.22", "-159.46, 44.436, -152.861, 0.22", "-159.381, 44.193, -154.127, 0.22", "-159.26, 43.9223, -155.23, 0.22", "-159.177, 43.7687, -155.751, 0.22", "-158.724, 42.9582, -158.191, 0.22", "-158.301, 42.1905, -160.299, 0.22", "-158.088, 41.834, -161.285, 0.22", "-157.884, 41.4887, -162.318, 0.22", "-157.59, 40.9208, -164.134, 0.22", "-157.537, 40.7867, -164.592, 0.22", "-157.51, 40.6393, -165.176, 0.22", "-157.566, 40.3878, -166.299, 0.22", "-157.82, 40.0336, -167.921, 0.22", "-158.302, 39.6289, -169.746, 0.22", "-159.035, 39.2384, -171.643, 0.22", "-160.31, 38.6823, -174.281, 0.22", "-161.35, 38.3347, -175.979, 0.22", "-162.759, 38.0247, -177.849, 0.22", "-164.383, 37.8166, -179.648, 0.22", "-166.287, 37.6975, -181.449, 0.22", "-167.393, 37.6758, -182.407, 0.22", "-169.118, 37.7022, -183.906, 0.22", "-170.411, 37.7572, -185.22, 0.22", "-171.459, 37.8049, -186.62, 0.22", "-171.863, 37.8108, -187.33, 0.22", "-172.727, 37.6736, -189.382, 0.22", "-173.357, 37.442, -191.155, 0.22", "-173.812, 37.1544, -192.741, 0.22", "-174.284, 36.7066, -194.608, 0.22", "-174.612, 36.3216, -195.991, 0.22", "-175.311, 35.481, -198.688, 0.22", "-175.714, 35.0266, -199.943, 0.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-67.2158, 46.019, -38.7551, 0.29", "-67.1189, 47.3076, -38.8098, 0.29", "-66.9402, 48.8203, -38.9032, 0.29", "-66.8008, 49.6053, -38.9543, 0.22", "-66.6207, 50.527, -39.0544, 0.22", "-66.0952, 52.8332, -39.3907, 0.22", "-65.4538, 55.3589, -39.8348, 0.22", "-65.0736, 56.619, -40.1098, 0.22", "-64.5762, 58.0039, -40.4803, 0.22", "-63.9264, 59.5584, -40.992, 0.22", "-62.8917, 61.5353, -41.965, 0.22", "-62.4289, 62.2834, -42.4567, 0.22", "-61.8383, 63.1243, -43.0907, 0.22", "-61.1985, 63.9672, -43.8129, 0.22", "-60.3543, 65.0139, -44.7641, 0.22", "-58.0996, 67.6519, -47.1642, 0.22", "-57.4506, 68.4081, -47.8607, 0.22", "-56.7537, 69.2214, -48.6115, 0.22", "-55.6722, 70.4947, -49.7809, 0.22", "-54.9018, 71.4142, -50.6239, 0.22", "-54.0238, 72.5085, -51.5069, 0.22", "-53.5053, 73.1899, -51.8959, 0.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-17.0694, -86.0154, -23.5639, 1.03", "-17.5762, -89.6537, -23.6209, 1.03", "-17.7887, -92.319, -23.6437, 1.03", "-17.9345, -95.927, -23.6398, 1.03", "-18.0843, -100.872, -23.6393, 1.03", "-18.1809, -104.922, -23.6366, 1.03", "-18.2807, -110.002, -23.6355, 1.03", "-18.2649, -112.384, -23.6464, 1.03", "-18.2669, -114.743, -23.6376, 1.03", "-18.3352, -117.232, -23.6165, 1.03", "-18.4954, -119.208, -23.6147, 1.03", "-18.6976, -120.779, -23.6184, 1.03", "-19.4183, -125.482, -23.6169, 1.25", "-19.8181, -128.233, -23.5954, 1.25", "-20.2467, -131.268, -23.5593, 1.25", "-20.6153, -134.068, -23.5036, 1.25", "-21.0373, -137.226, -23.435, 1.25", "-21.5101, -140.55, -23.2614, 0.81", "-21.7409, -142.287, -23.1492, 0.81", "-22.1719, -145.54, -22.9092, 0.74", "-22.3747, -146.899, -22.8228, 0.74", "-22.7058, -148.716, -22.7849, 1.18", "-23.5371, -153.177, -22.9534, 1.18", "-23.8303, -154.739, -23.074, 1.18", "-24.1338, -156.524, -23.2704, 1.25", "-24.6761, -160.6, -23.805, 1.25", "-25.2791, -165.877, -24.7962, 1.25", "-25.6078, -169.117, -25.6466, 1.25", "-25.79, -170.956, -26.2898, 0.74", "-26.0675, -173.333, -27.1821, 0.74", "-26.1889, -174.287, -27.5918, 0.74", "-26.6906, -177.742, -29.2959, 0.74", "-26.9403, -179.21, -30.1052, 0.74", "-27.3942, -181.842, -31.4058, 0.52", "-27.92, -186.556, -33.4354, 0.52", "-27.9778, -187.172, -33.6376, 0.52", "-28.0907, -188.22, -33.8865, 0.81", "-28.2218, -189.594, -34.072, 1.18", "-28.4771, -192.686, -34.3611, 1.18", "-28.6415, -195.192, -34.5913, 1.18", "-28.8887, -198.101, -34.9152, 0.96", "-29.1582, -200.214, -35.1439, 0.96", "-29.6213, -202.958, -35.4412, 0.96", "-30.024, -204.966, -35.6515, 0.96", "-30.5044, -207.063, -35.8223, 1.4", "-31.2962, -210.273, -35.9998, 1.4", "-32.5099, -214.698, -36.2638, 1.4", "-33.2577, -217.095, -36.4275, 1.4", "-34.1687, -219.756, -36.6193, 1.4", "-35.3841, -223.075, -36.8398, 1.4", "-36.3489, -225.57, -36.9527, 1.62", "-37.602, -228.789, -37.0521, 1.62", "-37.9594, -229.661, -37.0818, 1.62" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-17.0694, -86.0154, -23.5639, 0.66", "-18.4952, -87.624, -23.221, 0.66", "-19.3917, -88.6354, -23.0054, 0.37", "-20.4601, -89.8407, -22.7484, 0.37", "-21.3051, -90.7941, -22.5452, 0.37", "-21.8726, -91.4344, -22.4087, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "103.164, 37.6661, -6.08281, 0.37", "105.985, 38.4855, -4.71465, 0.37", "108.164, 38.9917, -3.88763, 0.37", "110.146, 39.4051, -3.23434, 0.37", "112.95, 39.9956, -2.42631, 0.37", "117.548, 40.9452, -1.17976, 0.37", "119.946, 41.4659, -0.56188, 0.37", "123.851, 42.2414, 0.209593, 0.37", "125.135, 42.497, 0.400711, 0.37", "127.175, 42.9074, 0.637081, 0.52", "130.196, 43.5267, 0.937062, 0.52", "131.979, 43.8563, 1.17514, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "103.164, 37.6661, -6.08281, 0.74", "105.03, 37.2036, -7.91343, 0.74", "107.04, 36.6845, -9.93084, 0.52", "108.0, 36.3883, -10.9325, 0.52", "109.757, 35.7781, -12.8957, 0.52", "111.33, 35.1903, -14.7706, 0.52", "112.764, 34.6759, -16.5222, 0.52", "113.515, 34.4287, -17.5632, 0.52", "114.275, 34.1566, -18.5827, 0.52", "115.366, 33.826, -20.1056, 0.52", "116.506, 33.5549, -21.7505, 0.52", "117.639, 33.3442, -23.4636, 0.52", "119.023, 33.1201, -25.4783, 0.52", "120.587, 32.9339, -27.682, 0.22", "122.535, 32.6612, -30.3459, 0.22", "123.951, 32.3862, -32.2221, 0.22", "125.751, 31.9214, -34.5927, 0.22", "127.123, 31.4556, -36.3883, 0.22", "128.016, 31.0636, -37.446, 0.22", "129.413, 30.4166, -39.0442, 0.22", "130.387, 29.9225, -40.0514, 0.37", "130.947, 29.6179, -40.5991, 0.37", "132.488, 28.7511, -41.9866, 0.37", "134.713, 27.5035, -43.8616, 0.37", "137.77, 25.877, -46.1419, 0.37", "139.656, 24.9645, -47.4076, 0.07", "140.618, 24.5189, -47.9852, 0.07", "142.651, 23.5975, -49.1038, 0.07", "145.315, 22.4089, -50.4556, 0.07", "148.188, 21.1066, -51.8238, 0.07", "149.537, 20.4319, -52.3823, 0.29", "151.842, 19.2194, -53.4157, 0.29", "153.09, 18.542, -54.0224, 0.29", "154.323, 17.8321, -54.752, 0.29", "155.639, 16.9942, -55.8508, 0.29", "156.952, 16.0225, -57.2155, 0.29", "158.458, 14.7074, -59.0263, 0.29", "159.342, 13.8406, -60.2039, 0.29", "160.866, 12.3184, -62.2449, 0.29", "162.825, 10.3782, -64.8752, 0.29", "163.899, 9.38481, -66.2897, 0.37", "164.949, 8.46051, -67.5573, 0.37", "165.611, 7.88453, -68.2329, 0.37", "166.349, 7.25498, -68.9692, 0.37", "166.996, 6.73112, -69.5169, 0.37", "168.112, 5.89221, -70.4175, 0.37", "169.21, 5.16611, -71.3591, 0.37", "169.98, 4.73457, -72.0126, 0.37", "171.574, 3.88137, -73.3261, 0.37", "172.48, 3.39131, -74.0857, 0.37", "173.6, 2.76437, -75.0182, 0.37", "176.171, 1.20681, -77.1895, 0.37", "177.903, 0.050123, -78.7203, 0.37", "178.737, -0.539894, -79.44, 0.37", "179.694, -1.20498, -80.2019, 0.37", "181.09, -2.14972, -81.291, 0.37", "182.868, -3.3128, -82.5965, 0.37", "183.662, -3.82984, -83.1571, 0.37", "184.693, -4.47809, -83.7777, 0.37", "186.626, -5.64592, -84.8173, 0.37", "187.614, -6.22445, -85.294, 0.37", "188.321, -6.63059, -85.6224, 0.37", "189.85, -7.49116, -86.3056, 0.37", "190.903, -8.10366, -86.7818, 0.37", "192.407, -9.06638, -87.3767, 0.37", "195.732, -11.2553, -88.3817, 0.37", "196.994, -12.0501, -88.6496, 0.37", "198.074, -12.7296, -88.8117, 0.37", "199.233, -13.4464, -88.9264, 0.37", "202.523, -15.4638, -89.1234, 0.37", "205.437, -17.2321, -89.2207, 0.37", "207.807, -18.7034, -89.2285, 0.37", "210.028, -20.1281, -89.253, 0.37", "212.773, -21.969, -89.3396, 0.37", "214.579, -23.2458, -89.4259, 0.37", "217.743, -25.5749, -89.6712, 0.37", "219.244, -26.7636, -89.808, 0.37", "220.645, -27.9069, -89.9661, 0.29", "221.492, -28.6463, -90.0741, 0.29", "223.09, -30.1217, -90.2832, 0.29", "224.9, -31.8623, -90.5343, 0.29", "227.286, -34.3235, -90.8866, 0.29", "229.049, -36.1977, -91.2016, 0.29", "230.97, -38.2604, -91.5663, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "12.1359, 85.1622, 23.823, 0.07", "5.53085, 91.714, 30.1968, 0.07", "-1.2199, 96.6011, 37.6828, 0.07", "-6.72116, 99.8481, 46.8239, 0.07", "-11.6898, 101.838, 56.5848, 0.07", "-17.7153, 102.482, 65.9164, 0.07", "-23.0887, 101.96, 75.6537, 0.07", "-26.477, 100.556, 86.1816, 0.07", "-28.7952, 97.4796, 96.6905, 0.07", "-28.9993, 94.1135, 107.374, 0.07", "-26.7257, 89.8226, 117.51, 0.07", "-23.3051, 86.6875, 127.699, 0.07", "-19.2741, 83.6142, 137.679, 0.07", "-15.1108, 79.6302, 147.313, 0.07", "-13.0655, 75.1175, 157.412, 0.07", "-9.83596, 69.5793, 166.712, 0.07", "-5.57258, 64.8047, 175.974, 0.07", "-1.85375, 59.9416, 185.428, 0.07", "2.09389, 54.4739, 194.484, 0.07", "3.68353, 48.4516, 203.939, 0.07", "3.79099, 40.6532, 212.288, 0.07", "4.65242, 32.8699, 220.608, 0.07", "6.82762, 24.544, 228.176, 0.07", "9.58576, 16.5462, 235.873, 0.07", "11.6345, 7.58293, 242.785, 0.07", "15.0676, 0.257496, 250.809, 0.07", "18.4178, -6.57435, 259.252, 0.07", "22.6949, -10.6884, 268.786, 0.07", "28.412, -14.5164, 277.646, 0.07", "35.3082, -16.1863, 286.251, 0.07", "40.3375, -18.7453, 295.898, 0.07", "45.4213, -19.7485, 305.762, 0.07", "48.9718, -19.9592, 316.311, 0.07" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "12.1359, 85.1622, 23.823, 0.07", "7.38565, 89.9598, 26.6193, 0.07" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-37.9594, -229.661, -37.0818, 0.96", "-38.9844, -231.015, -37.2593, 0.96", "-39.6859, -232.184, -37.3834, 0.96", "-40.1311, -233.036, -37.4179, 0.59", "-40.6132, -234.035, -37.426, 0.59", "-40.9229, -234.7, -37.4234, 0.59", "-41.4074, -235.719, -37.4394, 0.96", "-42.1055, -237.281, -37.4644, 0.96", "-42.6902, -238.638, -37.4892, 0.96", "-42.9837, -239.333, -37.5048, 0.96", "-43.3415, -240.197, -37.5712, 0.59", "-43.7477, -241.049, -37.7083, 0.52", "-43.8382, -241.212, -37.754, 0.29", "-44.0806, -241.661, -37.9262, 0.29", "-44.1828, -241.909, -38.0271, 0.44", "-44.5106, -242.992, -38.3926, 0.44", "-44.701, -243.836, -38.6233, 0.66", "-44.9831, -245.42, -38.9638, 0.66", "-45.1984, -246.836, -39.2178, 0.88", "-45.322, -247.884, -39.3705, 0.88", "-45.4418, -249.044, -39.458, 0.88", "-45.4853, -249.533, -39.462, 0.88", "-45.5371, -250.176, -39.4577, 0.88", "-45.6667, -251.501, -39.4242, 0.66", "-45.7448, -252.086, -39.4027, 0.66", "-46.0153, -253.637, -39.3744, 0.88", "-46.231, -254.761, -39.3739, 0.88", "-46.5446, -256.227, -39.3962, 0.88", "-46.7249, -256.917, -39.4428, 0.88", "-46.97, -257.671, -39.5342, 0.88", "-47.4027, -258.726, -39.7218, 0.88", "-47.6803, -259.305, -39.8691, 0.88", "-48.0456, -260.003, -40.0754, 1.11", "-48.7099, -261.296, -40.536, 1.11", "-49.0181, -261.956, -40.8156, 0.44", "-49.3959, -262.902, -41.276, 0.44", "-49.6081, -263.467, -41.5729, 0.66", "-49.8537, -264.207, -41.9932, 0.66", "-50.0276, -265.033, -42.4863, 0.66", "-50.0159, -265.749, -42.9057, 0.66", "-49.9061, -266.232, -43.2275, 0.66" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-37.9594, -229.661, -37.0818, 0.29", "-37.9817, -230.941, -37.6698, 0.29", "-38.1366, -232.63, -38.5022, 0.29", "-38.3766, -234.686, -39.5703, 0.07", "-38.5743, -236.475, -40.5918, 0.29", "-38.6995, -238.145, -41.6147, 0.29", "-38.7424, -239.403, -42.4458, 0.29", "-38.7487, -240.286, -43.1197, 0.29", "-38.7402, -241.04, -43.7611, 0.29", "-38.6531, -242.133, -44.8467, 0.29", "-38.5242, -242.892, -45.7338, 0.52", "-38.3544, -243.594, -46.6486, 0.52", "-38.2308, -244.076, -47.4086, 0.52", "-38.1505, -244.476, -48.2397, 0.52", "-38.1451, -244.857, -49.2556, 0.52", "-38.2017, -245.285, -50.8039, 0.52", "-38.2548, -245.463, -51.6959, 0.52", "-38.3763, -245.704, -53.7256, 0.52", "-38.4397, -245.797, -55.8136, 0.52", "-38.4585, -245.784, -56.4559, 0.52", "-38.5165, -245.61, -58.9031, 0.52", "-38.541, -245.522, -59.7339, 0.52", "-38.5624, -245.45, -60.2774, 0.52", "-38.6895, -245.141, -62.1587, 0.52", "-38.8098, -244.879, -63.5883, 0.52", "-38.9789, -244.487, -65.4654, 0.52", "-39.0247, -244.332, -66.1285, 0.52", "-39.0267, -244.187, -66.806, 0.52", "-38.9788, -243.998, -67.8481, 0.52", "-38.8684, -243.855, -68.8754, 0.52", "-38.7234, -243.782, -69.5987, 0.52", "-38.1185, -243.653, -71.984, 0.52", "-37.5939, -243.66, -73.7249, 0.52", "-37.2276, -243.747, -74.794, 0.52", "-36.5557, -244.058, -76.55, 0.52", "-36.1512, -244.305, -77.4657, 0.52", "-35.6378, -244.664, -78.4795, 0.52", "-35.3508, -244.881, -78.9694, 0.52", "-34.6201, -245.383, -80.1199, 0.52", "-34.1527, -245.647, -80.8748, 0.52", "-33.5866, -245.912, -81.845, 0.52", "-33.2447, -246.035, -82.4572, 0.52", "-33.0277, -246.102, -82.8173, 0.52", "-32.1869, -246.267, -84.2461, 0.52", "-31.5573, -246.302, -85.3308, 0.44", "-31.4415, -246.302, -85.5444, 0.15", "-31.0883, -246.343, -86.2922, 0.07", "-30.4368, -246.537, -87.6213, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-21.8726, -91.4344, -22.4087, 0.07", "-22.8811, -91.4545, -21.6453, 0.07", "-25.4234, -91.5791, -20.0196, 0.07", "-27.2001, -91.7286, -18.9746, 0.07", "-29.1226, -92.0549, -17.9338, 0.07", "-31.1216, -92.5738, -16.8386, 0.07", "-34.2339, -93.5905, -15.0642, 0.07", "-37.593, -94.9869, -13.0255, 0.07", "-42.0237, -96.9911, -10.4502, 0.07", "-45.8444, -98.868, -8.27792, 0.07", "-49.3064, -100.729, -6.24978, 0.07", "-50.7882, -101.651, -5.29984, 0.07", "-52.6298, -103.112, -3.93872, 0.07" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-21.8726, -91.4344, -22.4087, 0.07", "-21.8945, -92.7219, -21.6294, 0.07", "-21.9378, -94.1603, -20.8906, 0.07", "-21.9612, -95.6077, -20.1419, 0.07", "-22.0143, -97.3383, -19.2513, 0.07", "-22.2676, -101.276, -17.3111, 0.07", "-22.3763, -102.965, -16.4788, 0.07", "-22.7038, -107.707, -14.1508, 0.15", "-22.9519, -110.606, -12.7686, 0.15", "-23.1625, -112.905, -11.7142, 0.15", "-23.4575, -116.305, -10.2107, 0.07" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "131.979, 43.8563, 1.17514, 0.44", "133.67, 44.4564, 0.857926, 0.44", "135.868, 45.1591, 0.68887, 0.44", "136.916, 45.4613, 0.586693, 0.44", "137.969, 45.7512, 0.472409, 0.44", "139.458, 46.1068, 0.319329, 0.44", "140.884, 46.4273, 0.222502, 0.44", "143.453, 46.956, 0.163892, 0.44", "145.853, 47.4075, 0.251638, 0.44", "147.591, 47.705, 0.353833, 0.44", "150.149, 48.0881, 0.577265, 0.44", "152.126, 48.3173, 0.77844, 0.44", "154.308, 48.5333, 1.03725, 0.44", "155.884, 48.647, 1.26752, 0.44", "157.173, 48.6959, 1.52326, 0.44", "158.565, 48.7169, 1.74413, 0.44", "159.55, 48.7022, 1.81222, 0.44", "160.511, 48.7009, 1.75985, 0.44", "161.328, 48.7387, 1.67953, 0.44", "162.555, 48.8653, 1.56484, 0.44", "165.008, 49.2448, 1.35236, 0.44", "167.218, 49.7376, 1.16058, 0.44", "169.784, 50.4514, 0.93329, 0.44", "171.782, 51.0967, 0.735614, 0.44", "173.653, 51.7645, 0.515554, 0.44", "174.525, 52.0975, 0.409608, 0.22", "175.698, 52.547, 0.277084, 0.07", "176.465, 52.8562, 0.174308, 0.07", "177.942, 53.3925, 0.00675321, 0.07", "178.716, 53.6713, -0.0623165, 0.07", "180.03, 54.1903, -0.058299, 0.22", "181.434, 54.8244, 0.130064, 0.22", "182.086, 55.1333, 0.326283, 0.22", "183.62, 55.8623, 0.834987, 0.22", "185.223, 56.564, 1.3127, 0.22", "186.487, 57.1094, 1.76845, 0.22", "187.4, 57.4627, 2.09321, 0.22", "189.297, 58.0978, 2.66365, 0.22", "191.303, 58.6676, 3.18233, 0.22", "195.1, 59.6127, 4.12275, 0.37", "198.402, 60.3254, 4.88097, 0.37", "200.955, 60.7723, 5.46934, 0.37", "202.479, 61.0055, 5.81896, 0.37", "203.849, 61.2114, 6.12408, 0.37", "206.284, 61.5608, 6.74788, 0.37", "207.995, 61.6916, 7.10313, 0.37", "209.616, 61.7095, 7.28831, 0.22", "210.681, 61.7351, 7.40773, 0.22", "211.558, 61.7787, 7.48778, 0.22", "212.134, 61.8186, 7.51122, 0.22", "214.445, 62.0606, 7.51505, 0.22", "217.364, 62.4124, 7.55944, 0.22", "219.043, 62.6552, 7.53729, 0.22", "221.55, 63.0349, 7.49284, 0.22", "222.382, 63.1757, 7.47356, 0.22", "223.635, 63.4433, 7.43422, 0.22", "234.414, 64.9765, 9.35016, 0.22" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "131.979, 43.8563, 1.17514, 0.52", "133.567, 44.3602, 1.76738, 0.52", "135.675, 45.1636, 2.592, 0.52", "136.933, 45.7625, 3.11581, 0.52", "140.147, 47.6537, 4.69391, 0.52", "142.723, 49.255, 6.23188, 0.52", "143.967, 50.0468, 7.02228, 0.52", "146.01, 51.3683, 8.34917, 0.52", "147.481, 52.3673, 9.29197, 0.52", "149.543, 53.7157, 10.6937, 0.52", "152.07, 55.3767, 12.643, 0.52", "154.428, 56.7952, 14.4338, 0.52", "155.171, 57.2191, 14.9851, 0.52", "156.276, 57.7145, 15.7334, 0.52", "159.76, 58.9806, 18.0376, 0.52", "160.994, 59.3617, 18.8211, 0.29", "162.307, 59.7434, 19.7208, 0.29", "163.167, 59.9366, 20.4759, 0.29", "164.099, 60.0996, 21.464, 0.29", "165.745, 60.2656, 23.5261, 0.29", "166.964, 60.2706, 25.3426, 0.44", "167.955, 60.1635, 26.9839, 0.44", "169.147, 59.9399, 29.234, 0.44", "169.988, 59.7215, 30.9125, 0.44", "170.565, 59.5518, 32.1439, 0.44", "171.306, 59.2783, 33.7226, 0.44", "172.639, 58.7125, 36.4544, 0.44", "173.079, 58.5459, 37.2623, 0.44", "173.788, 58.3409, 38.4766, 0.44", "174.522, 58.1982, 39.7408, 0.44", "175.061, 58.1843, 40.729, 0.44", "175.877, 58.2796, 42.1407, 0.44", "176.182, 58.3506, 42.6753, 0.44", "177.102, 58.6149, 44.3037, 0.44", "177.472, 58.7627, 44.9632, 0.44", "178.406, 59.2446, 46.6133, 0.37", "179.642, 60.0042, 48.6232, 0.22", "180.877, 60.8544, 50.2227, 0.22", "181.482, 61.2666, 50.8853, 0.22", "182.311, 61.8292, 51.6269, 0.22", "182.922, 62.28, 52.0795, 0.22", "183.942, 63.1556, 52.7278, 0.22", "185.775, 65.2235, 53.6834, 0.22", "186.355, 65.9763, 53.8636, 0.22", "187.437, 67.539, 54.001, 0.22", "188.671, 69.4682, 53.8893, 0.22", "189.366, 70.6375, 53.627, 0.22", "190.379, 72.4543, 52.8648, 0.22", "190.931, 73.443, 52.2199, 0.22", "191.435, 74.2706, 51.5312, 0.22", "191.589, 74.4929, 51.2971, 0.22", "192.054, 75.0128, 50.618, 0.22", "192.639, 75.5701, 49.7048, 0.22", "193.262, 76.1044, 48.7652, 0.22", "193.809, 76.5903, 47.9503, 0.22", "194.126, 76.889, 47.4863, 0.22", "194.394, 77.1759, 47.0729, 0.22", "195.352, 78.3932, 45.4019, 0.22", "195.73, 79.0019, 44.5833, 0.22", "196.035, 79.6032, 43.7739, 0.22", "196.278, 80.1258, 43.0329, 0.22", "196.536, 80.6649, 42.2642, 0.22", "197.592, 82.9395, 39.2369, 0.22", "197.958, 83.7321, 38.2498, 0.22", "198.388, 84.7836, 36.9704, 0.22", "198.867, 86.0856, 35.4625, 0.22", "199.119, 86.8765, 34.5922, 0.22", "199.561, 88.5674, 32.8135, 0.22", "199.645, 89.0383, 32.3467, 0.22", "199.874, 90.2658, 31.1765, 0.22", "199.935, 90.6957, 30.8028, 0.22", "199.959, 91.4224, 30.212, 0.22", "199.839, 92.3104, 29.3465, 0.22", "199.698, 92.7149, 28.8121, 0.22", "209.084, 97.303, 30.6987, 0.22", "218.545, 101.517, 32.9897, 0.22", "227.113, 106.283, 37.1843, 0.22", "236.488, 109.288, 41.0698, 0.22", "245.696, 110.643, 46.0276, 0.22", "255.609, 111.108, 49.5023, 0.22", "264.856, 111.157, 54.5145, 0.22", "273.714, 111.717, 60.1837, 0.22", "282.796, 111.01, 65.4216, 0.22" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "230.97, -38.2604, -91.5663, 0.29", "232.182, -38.9151, -92.3845, 0.29", "234.535, -40.1855, -93.9723, 0.29", "238.148, -42.1373, -96.4115, 0.29", "241.662, -44.035, -98.7831, 0.29", "244.564, -45.6024, -100.742, 0.29", "245.979, -46.3664, -101.697, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "230.97, -38.2604, -91.5663, 0.29", "231.259, -39.2019, -90.8815, 0.29", "231.799, -41.0002, -89.5906, 0.29", "232.287, -42.805, -88.3195, 0.29", "232.545, -43.7774, -87.7494, 0.29", "232.839, -44.9207, -86.9886, 0.29", "233.078, -45.8341, -86.3371, 0.29", "233.733, -48.2733, -84.4702, 0.29", "234.067, -49.5627, -83.4594, 0.29", "234.583, -51.5203, -81.853, 0.29", "235.914, -55.9005, -78.0412, 0.29", "236.421, -57.3866, -76.6806, 0.29", "236.869, -58.5422, -75.585, 0.29", "237.32, -59.5403, -74.6402, 0.29", "237.791, -60.4756, -73.7663, 0.29", "238.524, -61.8118, -72.4515, 0.29", "238.966, -62.5059, -71.9459, 0.29", "239.597, -63.4316, -71.3383, 0.29", "240.244, -64.3263, -70.8275, 0.29", "241.045, -65.3628, -70.2927, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-49.9061, -266.232, -43.2275, 0.81", "-49.4691, -266.764, -43.6982, 0.81", "-48.8292, -267.537, -44.3193, 0.81", "-47.8338, -268.771, -45.1581, 0.81", "-47.057, -269.8, -45.7225, 0.59", "-46.6948, -270.313, -45.9572, 0.59", "-46.2795, -270.947, -46.2136, 0.59", "-45.6536, -272.042, -46.595, 0.66", "-45.2223, -272.928, -46.8375, 0.66", "-44.7739, -273.977, -47.1211, 0.66", "-44.5274, -274.551, -47.3158, 0.66", "-44.2673, -275.132, -47.5556, 0.66", "-43.6601, -276.442, -48.2453, 0.96", "-43.3097, -277.111, -48.6738, 0.96", "-42.7148, -278.053, -49.4326, 0.96", "-42.2414, -278.661, -50.0025, 0.96", "-41.852, -279.081, -50.4619, 0.96", "-41.4492, -279.476, -50.9312, 0.96", "-41.0043, -279.904, -51.4231, 0.96", "-40.4039, -280.535, -52.0841, 0.96", "-40.0398, -280.95, -52.4549, 0.96", "-38.8376, -282.385, -53.6361, 0.81", "-38.3542, -282.955, -54.1089, 0.66", "-37.8668, -283.533, -54.5599, 0.66", "-37.3887, -284.068, -54.9289, 0.37", "-36.6667, -284.843, -55.3163, 0.37", "-36.3901, -285.115, -55.4107, 0.37", "-35.8762, -285.547, -55.4868, 0.37", "-35.4236, -285.891, -55.5243, 0.44", "-34.0255, -286.964, -55.5895, 0.44", "-33.0096, -287.756, -55.5752, 0.44", "-32.2476, -288.391, -55.5312, 0.44", "-31.5347, -289.006, -55.4382, 0.44", "-30.5516, -289.88, -55.2901, 0.44", "-29.3528, -290.966, -55.1079, 0.22", "-28.962, -291.341, -55.0476, 0.22", "-27.7171, -292.586, -54.865, 0.22", "-26.8981, -293.526, -54.7482, 0.22", "-25.8853, -294.935, -54.6082, 0.22", "-25.3598, -295.796, -54.549, 0.22", "-25.0832, -296.439, -54.5182, 0.22", "-24.8731, -297.302, -54.4882, 0.37", "-24.7514, -298.636, -54.5131, 0.37", "-24.6975, -300.006, -54.6292, 0.37", "-24.6903, -300.409, -54.6838, 0.59", "-24.6283, -302.267, -55.0398, 0.59", "-24.5273, -303.694, -55.3632, 0.59", "-24.3026, -305.642, -55.8045, 0.59", "-23.919, -308.069, -56.3209, 0.59", "-23.6997, -309.222, -56.5141, 0.59", "-23.5247, -310.088, -56.6084, 0.59", "-23.2092, -311.428, -56.7139, 0.59", "-22.8573, -312.852, -56.7189, 0.59", "-22.6218, -313.755, -56.5897, 0.59", "-22.336, -315.156, -56.1768, 0.44", "-22.2092, -316.068, -55.8657, 0.44", "-22.1608, -316.921, -55.5585, 0.44", "-22.1629, -318.288, -55.0596, 0.44", "-22.2596, -321.092, -54.0186, 0.44", "-22.3766, -324.266, -52.7014, 0.44", "-22.4372, -325.295, -52.2607, 0.44", "-22.5593, -326.514, -51.7035, 0.44", "-22.6753, -327.325, -51.3076, 0.44", "-22.8055, -328.007, -51.0084, 0.44", "-22.917, -328.785, -50.6909, 0.44", "-22.9873, -329.778, -50.1655, 0.44", "-23.0357, -330.439, -49.8153, 0.66", "-23.0883, -331.212, -49.4407, 0.66", "-23.2062, -333.063, -48.6684, 0.66", "-23.308, -334.481, -48.1696, 0.66", "-23.4067, -336.301, -47.6123, 0.37", "-23.4317, -338.238, -47.0788, 0.37", "-23.3877, -339.392, -46.8051, 0.37", "-23.2771, -340.607, -46.565, 0.37", "-23.0335, -341.955, -46.3407, 0.37", "-22.7871, -342.992, -46.2202, 0.37", "-22.3585, -344.183, -46.093, 0.37", "-21.9594, -344.996, -45.9675, 0.37", "-21.3448, -346.079, -45.7307, 0.37", "-20.5447, -347.382, -45.329, 0.37", "-20.0339, -348.171, -45.0416, 0.37", "-19.3761, -349.274, -44.6096, 0.37", "-18.799, -350.323, -44.1727, 0.15", "-18.1702, -351.583, -43.6229, 0.15", "-17.7583, -352.491, -43.1932, 0.15", "-17.5587, -353.023, -42.9278, 0.15", "-17.0043, -354.54, -42.1931, 0.15", "-16.6928, -355.395, -41.8136, 0.15", "-16.3199, -356.422, -41.4131, 0.15", "-15.9096, -357.523, -41.007, 0.15", "-15.5032, -358.657, -40.5918, 0.15", "-15.0366, -360.105, -40.0513, 0.15", "-14.691, -361.195, -39.6487, 0.15", "-14.4001, -362.165, -39.3183, 0.15", "-14.1395, -363.115, -39.0371, 0.15", "-13.7724, -364.535, -38.6913, 0.15", "-13.5873, -365.28, -38.505, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-49.9061, -266.232, -43.2275, 0.66", "-48.7622, -266.438, -43.3115, 0.66", "-48.1705, -266.544, -43.355, 0.66", "-47.6449, -266.639, -43.3936, 0.66" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "245.979, -46.3664, -101.697, 0.22", "247.612, -46.6923, -103.113, 0.22", "250.282, -47.2251, -105.428, 0.22", "252.454, -47.6584, -107.311, 0.22", "254.25, -48.0168, -108.869, 0.22", "255.605, -48.2871, -110.043, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "245.979, -46.3664, -101.697, 0.15", "247.4, -48.351, -102.034, 0.15", "248.657, -50.108, -102.333, 0.15", "249.826, -51.7396, -102.61, 0.15" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_38", "dend_35", "dend_26", "dend_7", "dend_0", "dend_63", "dend_56", "dend_54", "dend_39", "dend_37", "dend_36", "dend_28", "dend_27", "dend_9", "dend_8", "dend_2", "dend_1", "dend_60", "dend_57", "dend_51", "dend_40", "dend_32", "dend_29", "dend_15", "dend_10", "dend_6", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_53", "dend_52", "dend_42", "dend_41", "dend_34", "dend_33", "dend_31", "dend_30", "dend_17", "dend_16", "dend_14", "dend_11", "dend_5", "dend_4", "dend_46", "dend_43", "dend_23", "dend_18", "dend_13", "dend_12", "dend_48", "dend_47", "dend_45", "dend_44", "dend_25", "dend_24", "dend_20", "dend_19", "dend_50", "dend_49", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_55", "dend_38", "dend_35", "dend_26", "dend_7", "dend_0", "dend_63", "dend_56", "dend_54", "dend_39", "dend_37", "dend_36", "dend_28", "dend_27", "dend_9", "dend_8", "dend_2", "dend_1", "dend_60", "dend_57", "dend_51", "dend_40", "dend_32", "dend_29", "dend_15", "dend_10", "dend_6", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_53", "dend_52", "dend_42", "dend_41", "dend_34", "dend_33", "dend_31", "dend_30", "dend_17", "dend_16", "dend_14", "dend_11", "dend_5", "dend_4", "dend_46", "dend_43", "dend_23", "dend_18", "dend_13", "dend_12", "dend_48", "dend_47", "dend_45", "dend_44", "dend_25", "dend_24", "dend_20", "dend_19", "dend_50", "dend_49", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_26", "dend_26", "dend_26", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_40", "dend_40", "dend_40", "dend_40", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L6_LBC_ef1920e6b8_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_63, id: dend_63, parent: dend_55
create dend_63
public dend_63
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_38
create dend_54
public dend_54
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_39
create dend_51
public dend_51
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_15, id: dend_15, parent: dend_9
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_38, dend_35, dend_26, dend_7, dend_0, dend_63, dend_56, dend_54, dend_39, dend_37, dend_36, dend_28, dend_27, dend_9, dend_8, dend_2, dend_1, dend_60, dend_57, dend_51, dend_40, dend_32, dend_29, dend_15, dend_10, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_42, dend_41, dend_34, dend_33, dend_31, dend_30, dend_17, dend_16, dend_14, dend_11, dend_5, dend_4, dend_46, dend_43, dend_23, dend_18, dend_13, dend_12, dend_48, dend_47, dend_45, dend_44, dend_25, dend_24, dend_20, dend_19, dend_50, dend_49, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_38, dend_35, dend_26, dend_7, dend_0, dend_63, dend_56, dend_54, dend_39, dend_37, dend_36, dend_28, dend_27, dend_9, dend_8, dend_2, dend_1, dend_60, dend_57, dend_51, dend_40, dend_32, dend_29, dend_15, dend_10, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_42, dend_41, dend_34, dend_33, dend_31, dend_30, dend_17, dend_16, dend_14, dend_11, dend_5, dend_4, dend_46, dend_43, dend_23, dend_18, dend_13, dend_12, dend_48, dend_47, dend_45, dend_44, dend_25, dend_24, dend_20, dend_19, dend_50, dend_49, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_63
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_26, dend_26, dend_26, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_60, dend_60, dend_60, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_55(0), soma_0(0.45000064008978086)
    connect dend_38(0), soma_0(0.45000064008978086)
    connect dend_35(0), soma_0(0.45000064008978086)
    connect dend_26(0), soma_0(0.45000064008978086)
    connect dend_7(0), soma_0(0.45000064008978086)
    connect dend_0(0), soma_0(0.45000064008978086)
    connect axon_0(0), soma_0(1.0)
    connect dend_63(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_15(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.47547, -21.1079, 2.51381, 3.10391 ) }
    soma_0 { pt3dadd( -2.25244, -19.1651, 2.29568, 4.54795 ) }
    soma_0 { pt3dadd( -2.02941, -17.2222, 2.07754, 6.86414 ) }
    soma_0 { pt3dadd( -1.80638, -15.2794, 1.85941, 9.59749 ) }
    soma_0 { pt3dadd( -1.58335, -13.3366, 1.64128, 11.8194 ) }
    soma_0 { pt3dadd( -1.36032, -11.3938, 1.42315, 13.5674 ) }
    soma_0 { pt3dadd( -1.13729, -9.45099, 1.20502, 14.4744 ) }
    soma_0 { pt3dadd( -0.914264, -7.50817, 0.986887, 14.6773 ) }
    soma_0 { pt3dadd( -0.691235, -5.56535, 0.768756, 14.5415 ) }
    soma_0 { pt3dadd( -0.468206, -3.62254, 0.550625, 13.3405 ) }
    soma_0 { pt3dadd( -0.245177, -1.67972, 0.332493, 12.1443 ) }
    soma_0 { pt3dadd( -0.0221479, 0.263091, 0.114362, 10.4715 ) }
    soma_0 { pt3dadd( 0.200881, 2.20591, -0.103769, 8.18984 ) }
    soma_0 { pt3dadd( 0.42391, 4.14872, -0.321901, 6.18554 ) }
    soma_0 { pt3dadd( 0.64694, 6.09154, -0.540032, 4.57765 ) }
    soma_0 { pt3dadd( 0.869969, 8.03435, -0.758163, 3.2886 ) }
    soma_0 { pt3dadd( 1.093, 9.97717, -0.976295, 3.75178 ) }
    soma_0 { pt3dadd( 1.31603, 11.92, -1.19443, 4.68351 ) }
    soma_0 { pt3dadd( 1.53906, 13.8628, -1.41256, 5.54689 ) }
    soma_0 { pt3dadd( 1.76209, 15.8056, -1.63069, 4.92105 ) }
    soma_0 { pt3dadd( 1.98511, 17.7484, -1.84882, 3.22657 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 21/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -3.49001, -20.4825, 2.0349, 1.25 ) }
    dend_55 { pt3dadd( -2.88922, -22.9153, 3.86014, 1.25 ) }
    dend_55 { pt3dadd( -2.489, -24.5359, 5.07604, 1.33 ) }
    dend_55 { pt3dadd( -2.11761, -26.0397, 6.20435, 1.33 ) }
    dend_55 { pt3dadd( -1.66891, -27.8566, 7.56754, 1.33 ) }
    dend_55 { pt3dadd( -1.22746, -29.6441, 8.90871, 1.33 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 27/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -4.04001, -21.5536, -0.915102, 2.06 ) }
    dend_38 { pt3dadd( -4.42615, -22.619, -0.10768, 2.06 ) }
    dend_38 { pt3dadd( -4.78831, -23.6184, 0.649602, 2.06 ) }
    dend_38 { pt3dadd( -5.51512, -25.624, 2.1694, 2.06 ) }
    dend_38 { pt3dadd( -5.67846, -26.0746, 2.51093, 2.06 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 32/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -0.350012, 11.6999, -7.6651, 0.59 ) }
    dend_35 { pt3dadd( -1.06966, 10.9433, -7.60044, 0.44 ) }
    dend_35 { pt3dadd( -1.85094, 10.1475, -7.49887, 0.44 ) }
    dend_35 { pt3dadd( -3.73021, 8.31318, -7.09402, 0.37 ) }
    dend_35 { pt3dadd( -4.92419, 7.17839, -6.78798, 0.22 ) }
    dend_35 { pt3dadd( -7.82842, 4.42009, -5.91236, 0.22 ) }
    dend_35 { pt3dadd( -9.00105, 3.29774, -5.51725, 0.22 ) }
    dend_35 { pt3dadd( -10.6317, 1.74648, -4.84309, 0.29 ) }
    dend_35 { pt3dadd( -12.8988, -0.399915, -3.70371, 0.29 ) }
    dend_35 { pt3dadd( -15.2028, -2.52745, -2.33442, 0.15 ) }
    dend_35 { pt3dadd( -16.611, -3.79353, -1.37069, 0.15 ) }
    dend_35 { pt3dadd( -17.6466, -4.71341, -0.550316, 0.15 ) }
    dend_35 { pt3dadd( -19.2469, -6.16016, 0.870949, 0.15 ) }
    dend_35 { pt3dadd( -20.6358, -7.44779, 2.26279, 0.15 ) }
    dend_35 { pt3dadd( -21.6795, -8.46586, 3.43103, 0.15 ) }
    dend_35 { pt3dadd( -22.9665, -9.77886, 5.04138, 0.15 ) }
    dend_35 { pt3dadd( -23.866, -10.6987, 6.17643, 0.15 ) }
    dend_35 { pt3dadd( -24.9288, -11.8433, 7.50389, 0.15 ) }
    dend_35 { pt3dadd( -26.407, -13.5666, 9.24096, 0.15 ) }
    dend_35 { pt3dadd( -27.6242, -15.0809, 10.6128, 0.15 ) }
    dend_35 { pt3dadd( -29.3065, -17.2202, 12.4073, 0.15 ) }
    dend_35 { pt3dadd( -30.7737, -19.1203, 13.8587, 0.15 ) }
    dend_35 { pt3dadd( -32.6343, -21.4962, 15.5897, 0.15 ) }
    dend_35 { pt3dadd( -35.1844, -24.7789, 17.8995, 0.15 ) }
    dend_35 { pt3dadd( -36.4991, -26.538, 19.0966, 0.15 ) }
    dend_35 { pt3dadd( -37.5304, -27.9053, 20.0023, 0.15 ) }
    dend_35 { pt3dadd( -38.6882, -29.3262, 20.9508, 0.15 ) }
    dend_35 { pt3dadd( -40.1517, -30.9427, 22.0758, 0.22 ) }
    dend_35 { pt3dadd( -42.3576, -33.1886, 23.7883, 0.22 ) }
    dend_35 { pt3dadd( -43.794, -34.5865, 24.9477, 0.22 ) }
    dend_35 { pt3dadd( -45.5728, -36.2903, 26.4407, 0.22 ) }
    dend_35 { pt3dadd( -48.1545, -38.8067, 28.7847, 0.22 ) }
    dend_35 { pt3dadd( -49.918, -40.5123, 30.4334, 0.22 ) }
    dend_35 { pt3dadd( -51.992, -42.4628, 32.3175, 0.22 ) }
    dend_35 { pt3dadd( -53.333, -43.6465, 33.5262, 0.22 ) }
    dend_35 { pt3dadd( -54.0877, -44.3216, 34.2631, 0.37 ) }
    dend_35 { pt3dadd( -55.159, -45.5036, 35.6033, 0.37 ) }
    dend_35 { pt3dadd( -56.0333, -46.8865, 37.1697, 0.37 ) }
    dend_35 { pt3dadd( -63.5879, -54.8059, 41.6683, 0.37 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 71/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 0.099989, 19.9635, -1.8651, 1.18 ) }
    dend_26 { pt3dadd( 0.0290792, 21.8791, -0.283425, 1.18 ) }
    dend_26 { pt3dadd( -0.0208714, 23.2286, 0.830746, 1.4 ) }
    dend_26 { pt3dadd( -0.163149, 27.0723, 4.00431, 1.55 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 75/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 3.21999, 15.2489, -5.5151, 1.33 ) }
    dend_7 { pt3dadd( 3.69911, 16.85, -6.73242, 1.33 ) }
    dend_7 { pt3dadd( 4.26358, 18.7363, -8.16657, 1.33 ) }
    dend_7 { pt3dadd( 4.726, 20.2816, -9.34146, 1.55 ) }
    dend_7 { pt3dadd( 5.20435, 21.8801, -10.5568, 1.55 ) }
    dend_7 { pt3dadd( 5.61787, 23.2619, -11.6075, 1.55 ) }
    dend_7 { pt3dadd( 6.11962, 24.9386, -12.8823, 1.55 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 82/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.43001, 18.5565, -6.9151, 1.11 ) }
    dend_0 { pt3dadd( -3.26094, 19.358, -6.9151, 1.11 ) }
    dend_0 { pt3dadd( -4.38797, 20.6205, -6.9151, 1.18 ) }
    dend_0 { pt3dadd( -5.02343, 21.3937, -6.9151, 1.4 ) }
    dend_0 { pt3dadd( -5.93132, 22.525, -6.9151, 1.4 ) }
    dend_0 { pt3dadd( -6.25996, 22.9141, -6.93284, 1.4 ) }
    dend_0 { pt3dadd( -7.54492, 24.3079, -7.06105, 1.25 ) }
    dend_0 { pt3dadd( -8.27776, 25.0233, -7.15935, 1.25 ) }
    dend_0 { pt3dadd( -9.76717, 26.2743, -7.38918, 1.25 ) }
    dend_0 { pt3dadd( -11.04, 27.163, -7.59438, 1.25 ) }
    dend_0 { pt3dadd( -13.266, 28.3769, -7.94984, 0.81 ) }
    dend_0 { pt3dadd( -14.5677, 28.92, -8.14225, 0.81 ) }
    dend_0 { pt3dadd( -15.8571, 29.3147, -8.31505, 0.59 ) }
    dend_0 { pt3dadd( -17.2748, 29.6532, -8.48454, 0.81 ) }
    dend_0 { pt3dadd( -18.4584, 29.8529, -8.61625, 0.81 ) }
    dend_0 { pt3dadd( -19.6257, 29.9884, -8.71872, 0.81 ) }
    dend_0 { pt3dadd( -21.0148, 30.1067, -8.75823, 1.03 ) }
    dend_0 { pt3dadd( -22.2649, 30.2715, -8.74971, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( -22.6295, 30.3443, -8.74656, 1.18 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 1/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.98511, 17.7484, -1.84882, 1.04688 ) }
    axon_0 { pt3dadd( 3.69583, 32.6505, -1.84882, 1.04688 ) }
    axon_0 { pt3dadd( 5.40654, 47.5527, -1.84882, 1.04688 ) }
    // Section: dend_63, id: dend_63, parent: dend_55 (entry count 4/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -1.22746, -29.6441, 8.90871, 1.11 ) }
    dend_63 { pt3dadd( -1.00265, -32.6154, 9.84107, 1.11 ) }
    dend_63 { pt3dadd( -1.04988, -35.0133, 10.9268, 1.11 ) }
    dend_63 { pt3dadd( -1.06123, -37.9828, 12.5554, 1.11 ) }
    dend_63 { pt3dadd( -1.02438, -38.7839, 13.0799, 1.11 ) }
    dend_63 { pt3dadd( -0.916249, -39.8782, 13.894, 1.11 ) }
    dend_63 { pt3dadd( -0.672903, -41.659, 15.2949, 1.11 ) }
    dend_63 { pt3dadd( -0.225699, -43.8953, 17.4234, 1.11 ) }
    dend_63 { pt3dadd( 0.155803, -45.261, 18.8806, 0.96 ) }
    dend_63 { pt3dadd( 0.675948, -46.8016, 20.7059, 0.81 ) }
    dend_63 { pt3dadd( 1.26731, -48.3223, 22.4231, 0.81 ) }
    dend_63 { pt3dadd( 1.78774, -49.4684, 23.602, 0.81 ) }
    dend_63 { pt3dadd( 2.2487, -50.3251, 24.3422, 0.81 ) }
    dend_63 { pt3dadd( 2.89305, -51.4112, 25.1133, 0.59 ) }
    dend_63 { pt3dadd( 3.8096, -53.0012, 26.0395, 0.59 ) }
    dend_63 { pt3dadd( 4.68084, -54.4199, 26.6645, 0.88 ) }
    dend_63 { pt3dadd( 5.87025, -56.1685, 27.262, 0.88 ) }
    dend_63 { pt3dadd( 6.93449, -57.5957, 27.7048, 0.88 ) }
    dend_63 { pt3dadd( 7.95555, -58.895, 28.1183, 0.88 ) }
    dend_63 { pt3dadd( 8.95483, -60.0701, 28.5488, 0.88 ) }
    dend_63 { pt3dadd( 9.92622, -61.061, 29.077, 0.88 ) }
    dend_63 { pt3dadd( 10.5692, -61.641, 29.5671, 0.88 ) }
    dend_63 { pt3dadd( 11.6749, -62.5972, 30.8288, 0.88 ) }
    dend_63 { pt3dadd( 12.3367, -63.2739, 32.0379, 0.88 ) }
    dend_63 { pt3dadd( 12.5676, -63.6299, 32.7216, 0.88 ) }
    dend_63 { pt3dadd( 12.8522, -64.3584, 33.9674, 0.88 ) }
    dend_63 { pt3dadd( 12.9936, -64.8697, 34.8546, 0.88 ) }
    dend_63 { pt3dadd( 13.102, -65.504, 35.8573, 0.88 ) }
    dend_63 { pt3dadd( 13.1996, -66.4802, 37.0933, 0.88 ) }
    dend_63 { pt3dadd( 13.3266, -67.7425, 38.3048, 0.88 ) }
    dend_63 { pt3dadd( 13.4448, -68.9918, 39.2719, 0.88 ) }
    dend_63 { pt3dadd( 15.454, -78.5807, 44.4399, 0.88 ) }
    dend_63 { pt3dadd( 16.7992, -88.0036, 50.0687, 0.88 ) }
    dend_63 { pt3dadd( 17.7432, -96.9342, 56.4515, 0.88 ) }
    dend_63 { pt3dadd( 19.6099, -105.241, 63.384, 0.88 ) }
    dend_63 { pt3dadd( 20.5144, -113.77, 70.253, 0.88 ) }
    dend_63 { pt3dadd( 21.7165, -120.325, 78.8316, 0.88 ) }
    dend_63 { pt3dadd( 23.666, -126.138, 87.7547, 0.88 ) }
    dend_63 { pt3dadd( 25.274, -131.43, 97.0296, 0.88 ) }
    dend_63 { pt3dadd( 28.6783, -136.523, 105.922, 0.88 ) }
    dend_63 { pt3dadd( 30.3112, -140.69, 115.695, 0.88 ) }
    dend_63 { pt3dadd( 30.9654, -144.846, 125.582, 0.88 ) }
    dend_63 { pt3dadd( 30.2607, -148.316, 135.696, 0.88 ) }
    dend_63 { pt3dadd( 29.0694, -153.451, 145.095, 0.88 ) }
    dend_63 { pt3dadd( 29.7133, -159.08, 154.301, 0.88 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 49/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -1.22746, -29.6441, 8.90871, 0.96 ) }
    dend_56 { pt3dadd( -0.654326, -30.0537, 9.54186, 0.96 ) }
    dend_56 { pt3dadd( -0.0577284, -30.4724, 10.2251, 0.81 ) }
    dend_56 { pt3dadd( 0.86709, -31.185, 11.362, 0.81 ) }
    dend_56 { pt3dadd( 2.03834, -32.1541, 12.8476, 0.59 ) }
    dend_56 { pt3dadd( 3.09283, -33.0758, 14.3009, 0.59 ) }
    dend_56 { pt3dadd( 3.51585, -33.4379, 14.8751, 0.59 ) }
    dend_56 { pt3dadd( 4.10915, -33.915, 15.6543, 0.59 ) }
    dend_56 { pt3dadd( 4.74843, -34.3747, 16.4553, 0.59 ) }
    dend_56 { pt3dadd( 5.48302, -34.8202, 17.3324, 0.59 ) }
    dend_56 { pt3dadd( 6.58234, -35.4005, 18.7193, 0.59 ) }
    dend_56 { pt3dadd( 7.46807, -35.8294, 19.9278, 0.37 ) }
    dend_56 { pt3dadd( 8.36612, -36.1719, 21.3213, 0.37 ) }
    dend_56 { pt3dadd( 8.54672, -36.2137, 21.6494, 0.37 ) }
    dend_56 { pt3dadd( 8.78471, -36.2278, 22.1178, 0.37 ) }
    dend_56 { pt3dadd( 9.40638, -36.195, 23.3738, 0.37 ) }
    dend_56 { pt3dadd( 9.81079, -36.1408, 24.1345, 0.37 ) }
    dend_56 { pt3dadd( 10.6977, -35.9778, 25.8767, 0.37 ) }
    dend_56 { pt3dadd( 10.9962, -35.9221, 26.4355, 0.37 ) }
    dend_56 { pt3dadd( 11.7075, -35.814, 27.6434, 0.37 ) }
    dend_56 { pt3dadd( 12.4389, -35.7108, 28.7173, 0.37 ) }
    dend_56 { pt3dadd( 13.2384, -35.6058, 29.6403, 0.37 ) }
    dend_56 { pt3dadd( 13.762, -35.5398, 30.1223, 0.37 ) }
    dend_56 { pt3dadd( 14.6152, -35.4283, 30.6824, 0.37 ) }
    dend_56 { pt3dadd( 21.2022, -37.7308, 37.2709, 0.37 ) }
    // Section: dend_54, id: dend_54, parent: dend_38 (entry count 74/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -5.67846, -26.0746, 2.51093, 0.29 ) }
    dend_54 { pt3dadd( -5.61013, -26.1862, 1.72967, 0.29 ) }
    dend_54 { pt3dadd( -5.4046, -26.4955, -0.666722, 0.44 ) }
    dend_54 { pt3dadd( -5.31495, -26.624, -1.68507, 0.44 ) }
    dend_54 { pt3dadd( -5.25998, -26.7658, -2.50408, 0.66 ) }
    dend_54 { pt3dadd( -5.22585, -26.9232, -3.13222, 0.66 ) }
    dend_54 { pt3dadd( -5.22747, -27.1055, -3.66125, 0.66 ) }
    dend_54 { pt3dadd( -5.3212, -27.4444, -4.27816, 0.88 ) }
    dend_54 { pt3dadd( -5.39072, -27.6202, -4.47615, 0.88 ) }
    dend_54 { pt3dadd( -5.83854, -28.4923, -5.13302, 1.03 ) }
    dend_54 { pt3dadd( -6.30735, -29.2477, -5.51995, 1.03 ) }
    dend_54 { pt3dadd( -7.10125, -30.3224, -5.97661, 1.18 ) }
    dend_54 { pt3dadd( -8.04784, -31.4651, -6.4317, 1.18 ) }
    dend_54 { pt3dadd( -8.66647, -32.195, -6.69764, 1.18 ) }
    dend_54 { pt3dadd( -9.91115, -33.7126, -7.21868, 0.88 ) }
    dend_54 { pt3dadd( -11.1201, -35.2433, -7.72179, 0.88 ) }
    dend_54 { pt3dadd( -12.4265, -36.946, -8.36396, 0.88 ) }
    dend_54 { pt3dadd( -13.5819, -38.571, -9.05281, 0.88 ) }
    dend_54 { pt3dadd( -14.1783, -39.457, -9.48679, 0.88 ) }
    dend_54 { pt3dadd( -14.9146, -40.6416, -10.1926, 0.59 ) }
    dend_54 { pt3dadd( -15.2175, -41.1849, -10.6164, 0.59 ) }
    dend_54 { pt3dadd( -15.8412, -42.5253, -11.8475, 0.59 ) }
    dend_54 { pt3dadd( -16.2013, -43.4693, -12.7149, 0.59 ) }
    dend_54 { pt3dadd( -16.3373, -43.8664, -13.0955, 0.81 ) }
    dend_54 { pt3dadd( -16.6474, -44.7725, -13.9492, 0.81 ) }
    dend_54 { pt3dadd( -16.8894, -45.4943, -14.5785, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_54 { pt3dadd( -17.2393, -46.6507, -15.4367, 0.81 ) }
    dend_54 { pt3dadd( -17.7277, -48.4096, -16.5729, 0.59 ) }
    dend_54 { pt3dadd( -18.1655, -49.993, -17.5776, 0.59 ) }
    dend_54 { pt3dadd( -18.3861, -50.7336, -18.0452, 0.59 ) }
    dend_54 { pt3dadd( -18.5569, -51.242, -18.3887, 0.59 ) }
    dend_54 { pt3dadd( -19.0404, -52.4441, -19.1983, 0.74 ) }
    dend_54 { pt3dadd( -19.5359, -53.4713, -19.9688, 0.74 ) }
    dend_54 { pt3dadd( -20.0354, -54.4211, -20.7786, 0.74 ) }
    dend_54 { pt3dadd( -20.3603, -55.017, -21.2849, 0.74 ) }
    dend_54 { pt3dadd( -20.9691, -56.0838, -22.2154, 0.96 ) }
    dend_54 { pt3dadd( -21.7133, -57.3215, -23.2942, 1.11 ) }
    dend_54 { pt3dadd( -22.6187, -58.8729, -24.618, 1.11 ) }
    dend_54 { pt3dadd( -23.0755, -59.7102, -25.2883, 1.11 ) }
    dend_54 { pt3dadd( -23.4647, -60.4302, -25.8681, 1.11 ) }
    dend_54 { pt3dadd( -24.0539, -61.5336, -26.7767, 0.88 ) }
    dend_54 { pt3dadd( -24.4188, -62.1579, -27.3371, 0.88 ) }
    dend_54 { pt3dadd( -24.8823, -62.8734, -28.1095, 0.88 ) }
    dend_54 { pt3dadd( -25.3688, -63.556, -28.8895, 0.88 ) }
    dend_54 { pt3dadd( -25.8448, -64.1773, -29.6471, 0.88 ) }
    dend_54 { pt3dadd( -26.482, -64.8977, -30.6615, 0.88 ) }
    dend_54 { pt3dadd( -27.2756, -65.6876, -31.8618, 0.88 ) }
    dend_54 { pt3dadd( -27.9397, -66.3141, -32.8165, 0.88 ) }
    dend_54 { pt3dadd( -28.3888, -66.7035, -33.4134, 1.11 ) }
    dend_54 { pt3dadd( -29.071, -67.2736, -34.2849, 1.11 ) }
    dend_54 { pt3dadd( -30.639, -68.626, -36.2408, 0.96 ) }
    dend_54 { pt3dadd( -31.1531, -69.1209, -36.9263, 0.66 ) }
    dend_54 { pt3dadd( -31.8829, -69.9773, -37.951, 0.66 ) }
    dend_54 { pt3dadd( -32.2522, -70.5119, -38.5376, 0.66 ) }
    dend_54 { pt3dadd( -32.6888, -71.3396, -39.366, 0.66 ) }
    dend_54 { pt3dadd( -32.996, -72.153, -40.0702, 0.88 ) }
    dend_54 { pt3dadd( -33.519, -74.0989, -41.4918, 0.88 ) }
    dend_54 { pt3dadd( -33.8274, -75.3319, -42.3195, 0.88 ) }
    dend_54 { pt3dadd( -34.1633, -76.5873, -43.1283, 0.88 ) }
    dend_54 { pt3dadd( -34.437, -77.5874, -43.756, 0.88 ) }
    dend_54 { pt3dadd( -34.6799, -78.411, -44.255, 0.88 ) }
    dend_54 { pt3dadd( -35.2559, -80.1288, -45.2396, 0.88 ) }
    dend_54 { pt3dadd( -35.5567, -80.8633, -45.6325, 0.88 ) }
    dend_54 { pt3dadd( -36.0975, -81.9166, -46.2494, 1.03 ) }
    dend_54 { pt3dadd( -36.5592, -82.6647, -46.7303, 1.03 ) }
    dend_54 { pt3dadd( -37.1197, -83.4598, -47.3915, 1.03 ) }
    dend_54 { pt3dadd( -37.57, -84.0569, -47.9537, 0.74 ) }
    dend_54 { pt3dadd( -37.962, -84.5352, -48.4188, 0.74 ) }
    dend_54 { pt3dadd( -38.4874, -85.1515, -49.0544, 0.74 ) }
    dend_54 { pt3dadd( -39.2726, -86.0513, -50.0007, 0.81 ) }
    dend_54 { pt3dadd( -40.1794, -87.1276, -51.0705, 0.88 ) }
    dend_54 { pt3dadd( -40.7196, -87.8598, -51.7588, 0.88 ) }
    dend_54 { pt3dadd( -41.1886, -88.5781, -52.3821, 0.88 ) }
    dend_54 { pt3dadd( -41.777, -89.6264, -53.2502, 0.88 ) }
    dend_54 { pt3dadd( -42.222, -90.4969, -53.9627, 0.88 ) }
    dend_54 { pt3dadd( -42.6756, -91.3738, -54.683, 0.59 ) }
    dend_54 { pt3dadd( -43.2795, -92.4993, -55.647, 0.88 ) }
    dend_54 { pt3dadd( -43.839, -93.5049, -56.5986, 0.88 ) }
    dend_54 { pt3dadd( -44.2981, -94.3012, -57.356, 0.88 ) }
    dend_54 { pt3dadd( -44.7103, -94.9701, -57.9313, 0.88 ) }
    dend_54 { pt3dadd( -45.0481, -95.4972, -58.3683, 0.88 ) }
    dend_54 { pt3dadd( -45.5278, -96.2483, -58.9673, 0.88 ) }
    dend_54 { pt3dadd( -45.9239, -96.913, -59.4198, 0.88 ) }
    dend_54 { pt3dadd( -46.5055, -97.9583, -60.082, 0.88 ) }
    dend_54 { pt3dadd( -47.3188, -99.4206, -60.9781, 0.88 ) }
    dend_54 { pt3dadd( -47.9273, -100.471, -61.6284, 0.74 ) }
    dend_54 { pt3dadd( -48.3787, -101.222, -62.1335, 0.74 ) }
    dend_54 { pt3dadd( -49.1479, -102.456, -63.0051, 0.74 ) }
    dend_54 { pt3dadd( -49.6861, -103.255, -63.6011, 0.74 ) }
    dend_54 { pt3dadd( -50.3228, -104.162, -64.3246, 0.74 ) }
    dend_54 { pt3dadd( -51.0951, -105.227, -65.2054, 0.74 ) }
    dend_54 { pt3dadd( -52.0951, -106.505, -66.278, 0.74 ) }
    dend_54 { pt3dadd( -53.0486, -107.61, -67.2326, 0.74 ) }
    dend_54 { pt3dadd( -53.874, -108.493, -68.0302, 0.74 ) }
    dend_54 { pt3dadd( -55.1867, -109.904, -69.2813, 0.52 ) }
    dend_54 { pt3dadd( -55.8344, -110.639, -69.9243, 0.52 ) }
    dend_54 { pt3dadd( -56.5816, -111.554, -70.6719, 0.52 ) }
    dend_54 { pt3dadd( -57.2195, -112.383, -71.3296, 0.52 ) }
    dend_54 { pt3dadd( -57.979, -113.445, -72.1644, 0.52 ) }
    dend_54 { pt3dadd( -58.3494, -114.028, -72.5438, 0.52 ) }
    dend_54 { pt3dadd( -59.2334, -115.552, -73.3565, 0.52 ) }
    dend_54 { pt3dadd( -59.9423, -116.864, -73.976, 0.52 ) }
    dend_54 { pt3dadd( -60.9023, -118.74, -74.7691, 0.52 ) }
    dend_54 { pt3dadd( -61.6241, -120.139, -75.3072, 0.52 ) }
    dend_54 { pt3dadd( -62.8471, -122.367, -76.1412, 0.52 ) }
    dend_54 { pt3dadd( -63.3042, -123.115, -76.4452, 0.52 ) }
    dend_54 { pt3dadd( -64.0999, -124.253, -76.9633, 0.52 ) }
    dend_54 { pt3dadd( -65.0204, -125.429, -77.5807, 0.74 ) }
    dend_54 { pt3dadd( -65.8542, -126.414, -78.0426, 0.74 ) }
    dend_54 { pt3dadd( -66.7711, -127.394, -78.6269, 0.88 ) }
    dend_54 { pt3dadd( -67.419, -127.972, -79.1026, 0.88 ) }
    dend_54 { pt3dadd( -68.3112, -128.747, -79.7966, 0.88 ) }
    dend_54 { pt3dadd( -68.8103, -129.213, -80.2085, 0.88 ) }
    dend_54 { pt3dadd( -70.0271, -130.529, -81.2621, 1.11 ) }
    dend_54 { pt3dadd( -71.6489, -132.686, -82.7869, 1.11 ) }
    dend_54 { pt3dadd( -72.3591, -133.86, -83.5688, 0.74 ) }
    dend_54 { pt3dadd( -73.0534, -135.28, -84.5281, 0.74 ) }
    dend_54 { pt3dadd( -73.5575, -136.445, -85.3114, 0.96 ) }
    dend_54 { pt3dadd( -74.2715, -138.177, -86.4908, 0.96 ) }
    dend_54 { pt3dadd( -74.7912, -139.393, -87.3552, 0.81 ) }
    dend_54 { pt3dadd( -75.6126, -141.171, -88.5762, 0.81 ) }
    dend_54 { pt3dadd( -76.4729, -142.733, -89.7643, 0.66 ) }
    dend_54 { pt3dadd( -77.5593, -144.246, -91.1446, 0.66 ) }
    dend_54 { pt3dadd( -78.1991, -144.922, -91.8805, 0.66 ) }
    dend_54 { pt3dadd( -78.9189, -145.48, -92.6102, 0.66 ) }
    dend_54 { pt3dadd( -80.0058, -146.14, -93.571, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_54 { pt3dadd( -81.5754, -146.922, -94.9121, 0.66 ) }
    dend_54 { pt3dadd( -82.4795, -147.328, -95.7596, 0.66 ) }
    dend_54 { pt3dadd( -83.2604, -147.701, -96.5881, 0.66 ) }
    dend_54 { pt3dadd( -84.2029, -148.249, -97.7103, 0.66 ) }
    dend_54 { pt3dadd( -85.043, -148.85, -98.8208, 0.66 ) }
    dend_54 { pt3dadd( -86.4505, -150.063, -100.874, 0.66 ) }
    dend_54 { pt3dadd( -87.5254, -151.177, -102.628, 0.44 ) }
    dend_54 { pt3dadd( -88.2063, -151.953, -103.774, 0.44 ) }
    dend_54 { pt3dadd( -89.0281, -152.962, -105.25, 0.44 ) }
    dend_54 { pt3dadd( -89.3951, -153.426, -105.947, 0.52 ) }
    dend_54 { pt3dadd( -90.0214, -154.152, -107.097, 0.52 ) }
    dend_54 { pt3dadd( -90.5916, -154.735, -108.087, 0.52 ) }
    dend_54 { pt3dadd( -91.2057, -155.232, -109.185, 0.52 ) }
    dend_54 { pt3dadd( -91.4499, -155.376, -109.644, 0.59 ) }
    dend_54 { pt3dadd( -92.1896, -155.703, -111.096, 0.59 ) }
    dend_54 { pt3dadd( -92.8164, -155.934, -112.412, 0.59 ) }
    dend_54 { pt3dadd( -93.4406, -156.115, -113.711, 0.59 ) }
    dend_54 { pt3dadd( -94.0868, -156.291, -114.929, 0.59 ) }
    dend_54 { pt3dadd( -94.4887, -156.416, -115.615, 0.59 ) }
    dend_54 { pt3dadd( -95.0561, -156.625, -116.46, 0.59 ) }
    dend_54 { pt3dadd( -95.3522, -156.736, -116.843, 0.59 ) }
    dend_54 { pt3dadd( -96.0091, -156.96, -117.604, 0.59 ) }
    dend_54 { pt3dadd( -97.0452, -157.254, -118.685, 0.37 ) }
    dend_54 { pt3dadd( -97.9329, -157.418, -119.549, 0.37 ) }
    dend_54 { pt3dadd( -98.7141, -157.481, -120.286, 0.37 ) }
    dend_54 { pt3dadd( -99.5331, -157.475, -121.02, 0.37 ) }
    dend_54 { pt3dadd( -100.517, -157.399, -121.826, 0.37 ) }
    dend_54 { pt3dadd( -101.514, -157.26, -122.658, 0.37 ) }
    dend_54 { pt3dadd( -102.509, -157.085, -123.472, 0.37 ) }
    dend_54 { pt3dadd( -103.248, -156.963, -124.012, 0.37 ) }
    dend_54 { pt3dadd( -103.676, -156.93, -124.27, 0.52 ) }
    dend_54 { pt3dadd( -105.004, -156.956, -125.053, 0.66 ) }
    dend_54 { pt3dadd( -107.037, -157.139, -126.14, 0.66 ) }
    dend_54 { pt3dadd( -107.581, -157.203, -126.399, 0.66 ) }
    dend_54 { pt3dadd( -108.446, -157.323, -126.795, 0.66 ) }
    dend_54 { pt3dadd( -110.685, -157.638, -127.887, 0.15 ) }
    dend_54 { pt3dadd( -112.781, -157.925, -128.988, 0.37 ) }
    dend_54 { pt3dadd( -114.326, -158.106, -129.819, 0.52 ) }
    dend_54 { pt3dadd( -115.7, -158.224, -130.516, 0.52 ) }
    dend_54 { pt3dadd( -117.274, -158.317, -131.362, 0.52 ) }
    dend_54 { pt3dadd( -118.963, -158.379, -132.328, 0.52 ) }
    dend_54 { pt3dadd( -120.163, -158.401, -133.114, 0.52 ) }
    dend_54 { pt3dadd( -121.616, -158.45, -134.107, 0.52 ) }
    dend_54 { pt3dadd( -122.402, -158.494, -134.712, 0.52 ) }
    dend_54 { pt3dadd( -123.396, -158.571, -135.495, 0.52 ) }
    dend_54 { pt3dadd( -123.959, -158.623, -135.953, 0.52 ) }
    dend_54 { pt3dadd( -125.682, -158.816, -137.409, 0.52 ) }
    dend_54 { pt3dadd( -126.794, -158.978, -138.47, 0.52 ) }
    dend_54 { pt3dadd( -127.081, -159.032, -138.774, 0.52 ) }
    dend_54 { pt3dadd( -127.472, -159.108, -139.198, 0.52 ) }
    dend_54 { pt3dadd( -128.955, -159.459, -140.838, 0.52 ) }
    dend_54 { pt3dadd( -129.714, -159.707, -141.717, 0.52 ) }
    dend_54 { pt3dadd( -130.563, -160.068, -142.788, 0.52 ) }
    dend_54 { pt3dadd( -131.402, -160.494, -143.952, 0.52 ) }
    dend_54 { pt3dadd( -132.041, -160.863, -144.92, 0.52 ) }
    dend_54 { pt3dadd( -132.984, -161.437, -146.383, 0.29 ) }
    dend_54 { pt3dadd( -133.762, -161.933, -147.564, 0.29 ) }
    dend_54 { pt3dadd( -134.639, -162.536, -148.993, 0.29 ) }
    dend_54 { pt3dadd( -134.903, -162.749, -149.475, 0.29 ) }
    dend_54 { pt3dadd( -135.544, -163.401, -150.931, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 60/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -5.67846, -26.0746, 2.51093, 2.06 ) }
    dend_39 { pt3dadd( -6.19868, -27.44, 2.91397, 2.06 ) }
    dend_39 { pt3dadd( -6.49084, -28.2534, 3.08794, 2.06 ) }
    dend_39 { pt3dadd( -6.99968, -29.7181, 3.3121, 2.06 ) }
    dend_39 { pt3dadd( -7.43975, -30.976, 3.47986, 1.99 ) }
    dend_39 { pt3dadd( -8.06506, -32.7004, 3.7485, 1.99 ) }
    dend_39 { pt3dadd( -8.86281, -34.847, 4.12114, 1.99 ) }
    dend_39 { pt3dadd( -9.72973, -37.1338, 4.49136, 1.99 ) }
    dend_39 { pt3dadd( -10.7403, -39.7637, 4.91705, 1.99 ) }
    dend_39 { pt3dadd( -11.4496, -41.6189, 5.2015, 1.99 ) }
    dend_39 { pt3dadd( -12.2045, -43.5817, 5.52468, 1.99 ) }
    dend_39 { pt3dadd( -12.9756, -45.5355, 5.89878, 1.99 ) }
    dend_39 { pt3dadd( -13.2472, -46.1798, 6.04963, 1.99 ) }
    dend_39 { pt3dadd( -13.7956, -47.4012, 6.40705, 1.99 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 74/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -63.5879, -54.8059, 41.6683, 0.07 ) }
    dend_37 { pt3dadd( -70.0499, -60.7095, 47.2284, 0.07 ) }
    dend_37 { pt3dadd( -76.5721, -65.9056, 53.3461, 0.07 ) }
    dend_37 { pt3dadd( -82.1878, -72.4028, 59.242, 0.07 ) }
    dend_37 { pt3dadd( -88.7935, -77.3906, 65.4268, 0.07 ) }
    dend_37 { pt3dadd( -93.7354, -82.5813, 72.9346, 0.07 ) }
    dend_37 { pt3dadd( -98.8948, -87.8139, 80.2607, 0.07 ) }
    dend_37 { pt3dadd( -103.337, -92.5761, 88.3317, 0.07 ) }
    dend_37 { pt3dadd( -109.526, -95.2913, 96.0555, 0.07 ) }
    dend_37 { pt3dadd( -115.585, -99.7644, 103.121, 0.07 ) }
    dend_37 { pt3dadd( -120.546, -105.481, 110.255, 0.07 ) }
    dend_37 { pt3dadd( -125.727, -110.134, 117.914, 0.07 ) }
    dend_37 { pt3dadd( -132.173, -113.441, 125.205, 0.07 ) }
    dend_37 { pt3dadd( -137.267, -116.927, 133.46, 0.07 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 88/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -63.5879, -54.8059, 41.6683, 0.29 ) }
    dend_36 { pt3dadd( -67.8896, -59.2078, 45.1802, 0.07 ) }
    dend_36 { pt3dadd( -71.1303, -63.6483, 49.6935, 0.07 ) }
    dend_36 { pt3dadd( -73.5332, -69.3471, 53.3644, 0.07 ) }
    dend_36 { pt3dadd( -75.0502, -74.8292, 57.7772, 0.07 ) }
    dend_36 { pt3dadd( -75.349, -79.9041, 62.8671, 0.07 ) }
    dend_36 { pt3dadd( -74.9943, -83.9041, 68.7688, 0.07 ) }
    dend_36 { pt3dadd( -75.4967, -88.087, 74.5342, 0.07 ) }
    dend_36 { pt3dadd( -76.3844, -92.5034, 80.0857, 0.07 ) }
    dend_36 { pt3dadd( -77.5432, -96.3498, 85.958, 0.07 ) }
    dend_36 { pt3dadd( -78.1977, -101.322, 91.1009, 0.07 ) }
    dend_36 { pt3dadd( -78.1485, -106.741, 95.8678, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( -78.7689, -112.358, 100.362, 0.07 ) }
    dend_36 { pt3dadd( -79.2987, -118.89, 103.506, 0.07 ) }
    dend_36 { pt3dadd( -78.9235, -125.092, 107.268, 0.07 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 3/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -0.163149, 27.0723, 4.00431, 0.88 ) }
    dend_28 { pt3dadd( -0.259665, 28.7233, 4.54503, 0.88 ) }
    dend_28 { pt3dadd( -0.264956, 29.9285, 5.02424, 1.11 ) }
    dend_28 { pt3dadd( -0.272779, 31.7099, 5.73265, 1.11 ) }
    dend_28 { pt3dadd( -0.278424, 32.9956, 6.2439, 1.11 ) }
    dend_28 { pt3dadd( -0.284049, 34.2768, 6.75337, 1.25 ) }
    dend_28 { pt3dadd( -0.294507, 36.6584, 7.70043, 1.25 ) }
    dend_28 { pt3dadd( -0.29969, 37.473, 8.1189, 1.25 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 11/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -0.163149, 27.0723, 4.00431, 0.81 ) }
    dend_27 { pt3dadd( -0.908317, 28.1651, 4.17766, 0.81 ) }
    dend_27 { pt3dadd( -1.8245, 29.4604, 4.40121, 0.81 ) }
    dend_27 { pt3dadd( -2.89541, 30.9615, 4.68822, 0.81 ) }
    dend_27 { pt3dadd( -3.92249, 32.4109, 4.98926, 0.66 ) }
    dend_27 { pt3dadd( -4.9366, 33.8314, 5.36061, 0.66 ) }
    dend_27 { pt3dadd( -5.3841, 34.4455, 5.57293, 0.37 ) }
    dend_27 { pt3dadd( -5.94302, 35.2418, 5.92079, 0.22 ) }
    dend_27 { pt3dadd( -6.60377, 36.157, 6.43102, 0.22 ) }
    dend_27 { pt3dadd( -6.89838, 36.5199, 6.68253, 0.37 ) }
    dend_27 { pt3dadd( -7.63628, 37.2527, 7.42651, 0.37 ) }
    dend_27 { pt3dadd( -8.54681, 38.093, 8.4219, 0.37 ) }
    dend_27 { pt3dadd( -9.13503, 38.6299, 9.06955, 0.22 ) }
    dend_27 { pt3dadd( -9.53215, 38.9792, 9.48977, 0.22 ) }
    dend_27 { pt3dadd( -9.96019, 39.3423, 9.91567, 0.22 ) }
    dend_27 { pt3dadd( -11.093, 40.3125, 10.9875, 0.29 ) }
    dend_27 { pt3dadd( -12.8595, 41.8421, 12.5447, 0.52 ) }
    dend_27 { pt3dadd( -13.7723, 42.6753, 13.3336, 0.52 ) }
    dend_27 { pt3dadd( -14.7677, 43.6356, 14.2461, 0.52 ) }
    dend_27 { pt3dadd( -14.9836, 43.8571, 14.4539, 0.66 ) }
    dend_27 { pt3dadd( -15.6535, 44.5912, 15.1784, 0.81 ) }
    dend_27 { pt3dadd( -16.3588, 45.4593, 16.0142, 0.81 ) }
    dend_27 { pt3dadd( -17.0559, 46.4056, 16.9641, 0.59 ) }
    dend_27 { pt3dadd( -17.6017, 47.2629, 17.8049, 0.59 ) }
    dend_27 { pt3dadd( -18.3988, 48.6887, 19.155, 0.59 ) }
    dend_27 { pt3dadd( -19.4656, 50.7889, 21.0098, 0.59 ) }
    dend_27 { pt3dadd( -19.799, 51.4942, 21.5806, 0.07 ) }
    dend_27 { pt3dadd( -20.1198, 52.0811, 22.0367, 0.07 ) }
    dend_27 { pt3dadd( -20.3745, 52.4433, 22.339, 0.07 ) }
    dend_27 { pt3dadd( -20.8414, 52.9592, 22.809, 0.15 ) }
    dend_27 { pt3dadd( -21.437, 53.4475, 23.294, 0.15 ) }
    dend_27 { pt3dadd( -21.971, 53.787, 23.655, 0.15 ) }
    dend_27 { pt3dadd( -24.2966, 55.1086, 25.165, 0.37 ) }
    dend_27 { pt3dadd( -26.2505, 56.1743, 26.3203, 0.52 ) }
    dend_27 { pt3dadd( -27.5921, 56.9259, 27.0909, 0.66 ) }
    dend_27 { pt3dadd( -28.6036, 57.5182, 27.6634, 0.44 ) }
    dend_27 { pt3dadd( -29.5237, 58.0934, 28.1787, 0.44 ) }
    dend_27 { pt3dadd( -30.3853, 58.6802, 28.6646, 0.44 ) }
    dend_27 { pt3dadd( -31.7752, 59.7496, 29.4399, 0.44 ) }
    dend_27 { pt3dadd( -32.8644, 60.6194, 30.0636, 0.44 ) }
    dend_27 { pt3dadd( -33.9409, 61.5195, 30.7217, 0.44 ) }
    dend_27 { pt3dadd( -34.3164, 61.85, 30.9941, 0.44 ) }
    dend_27 { pt3dadd( -35.4601, 62.8416, 31.942, 0.44 ) }
    dend_27 { pt3dadd( -36.0601, 63.335, 32.4891, 0.44 ) }
    dend_27 { pt3dadd( -36.727, 63.8513, 33.2725, 0.44 ) }
    dend_27 { pt3dadd( -41.585, 69.1916, 38.3781, 0.44 ) }
    dend_27 { pt3dadd( -45.5504, 73.9061, 44.6766, 0.44 ) }
    dend_27 { pt3dadd( -48.2153, 79.0681, 51.3326, 0.44 ) }
    dend_27 { pt3dadd( -50.4923, 84.1056, 58.2159, 0.44 ) }
    dend_27 { pt3dadd( -53.5806, 87.3957, 65.7146, 0.44 ) }
    dend_27 { pt3dadd( -57.7652, 90.195, 72.8536, 0.44 ) }
    dend_27 { pt3dadd( -61.8332, 91.7264, 80.3988, 0.44 ) }
    dend_27 { pt3dadd( -64.9153, 94.0051, 88.234, 0.44 ) }
    dend_27 { pt3dadd( -67.235, 96.0508, 96.3845, 0.44 ) }
    dend_27 { pt3dadd( -70.5086, 98.8807, 103.974, 0.44 ) }
    dend_27 { pt3dadd( -73.702, 102.638, 111.225, 0.44 ) }
    dend_27 { pt3dadd( -77.2774, 106.062, 118.448, 0.44 ) }
    dend_27 { pt3dadd( -80.9802, 109.289, 125.689, 0.44 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 69/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 6.11962, 24.9386, -12.8823, 1.03 ) }
    dend_9 { pt3dadd( 7.67606, 26.3561, -13.594, 1.03 ) }
    dend_9 { pt3dadd( 8.87072, 27.3175, -14.1822, 1.25 ) }
    dend_9 { pt3dadd( 11.4005, 29.1148, -15.4496, 1.25 ) }
    dend_9 { pt3dadd( 13.4821, 30.4415, -16.4583, 1.25 ) }
    dend_9 { pt3dadd( 15.469, 31.5765, -17.2719, 1.25 ) }
    dend_9 { pt3dadd( 17.7175, 32.7303, -18.004, 1.25 ) }
    dend_9 { pt3dadd( 20.7855, 33.8747, -18.6652, 1.25 ) }
    dend_9 { pt3dadd( 22.6222, 34.3374, -18.7964, 0.96 ) }
    dend_9 { pt3dadd( 24.4897, 34.667, -18.7993, 0.96 ) }
    dend_9 { pt3dadd( 27.5145, 35.0121, -18.5702, 0.96 ) }
    dend_9 { pt3dadd( 29.8547, 35.1531, -18.1925, 0.96 ) }
    dend_9 { pt3dadd( 33.674, 35.2359, -17.1829, 0.96 ) }
    dend_9 { pt3dadd( 38.1103, 35.2471, -15.5344, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 83/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 6.11962, 24.9386, -12.8823, 0.59 ) }
    dend_8 { pt3dadd( 7.30837, 24.0315, -13.991, 0.59 ) }
    dend_8 { pt3dadd( 9.65472, 22.105, -16.5023, 0.59 ) }
    dend_8 { pt3dadd( 10.9259, 20.9874, -17.8904, 0.59 ) }
    dend_8 { pt3dadd( 12.0543, 19.9347, -19.1662, 0.59 ) }
    dend_8 { pt3dadd( 14.0287, 18.0932, -21.5104, 0.59 ) }
    dend_8 { pt3dadd( 16.3683, 15.9501, -24.3278, 0.59 ) }
    dend_8 { pt3dadd( 19.8281, 12.7645, -28.6637, 0.37 ) }
    dend_8 { pt3dadd( 22.5906, 10.1679, -32.1973, 0.37 ) }
    dend_8 { pt3dadd( 25.2589, 7.70194, -35.5906, 0.37 ) }
    dend_8 { pt3dadd( 28.966, 4.42159, -40.3368, 0.37 ) }
    dend_8 { pt3dadd( 32.1745, 1.70944, -44.4717, 0.07 ) }
    dend_8 { pt3dadd( 35.5161, -0.8787, -48.9587, 0.07 ) }
    dend_8 { pt3dadd( 37.3903, -2.23012, -51.6167, 0.07 ) }
    dend_8 { pt3dadd( 39.1337, -3.37486, -54.2927, 0.07 ) }
    dend_8 { pt3dadd( 41.5679, -4.85264, -58.2688, 0.07 ) }
    dend_8 { pt3dadd( 43.0588, -5.73983, -60.9162, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_8 { pt3dadd( 47.0675, -8.10866, -68.7023, 0.22 ) }
    dend_8 { pt3dadd( 48.3453, -8.84267, -71.2668, 0.37 ) }
    dend_8 { pt3dadd( 50.3478, -9.95122, -75.2878, 0.37 ) }
    dend_8 { pt3dadd( 51.247, -10.4384, -77.0709, 0.37 ) }
    dend_8 { pt3dadd( 52.0368, -10.8512, -78.5553, 0.37 ) }
    dend_8 { pt3dadd( 53.0392, -11.3307, -80.2999, 0.37 ) }
    dend_8 { pt3dadd( 54.5923, -11.9723, -82.6502, 0.37 ) }
    dend_8 { pt3dadd( 57.8873, -13.1307, -87.4886, 0.37 ) }
    dend_8 { pt3dadd( 59.5817, -13.6331, -89.9889, 0.37 ) }
    dend_8 { pt3dadd( 62.794, -14.398, -95.257, 0.37 ) }
    dend_8 { pt3dadd( 64.2171, -14.6343, -97.9813, 0.37 ) }
    dend_8 { pt3dadd( 64.9532, -14.6773, -99.7439, 0.37 ) }
    dend_8 { pt3dadd( 65.6799, -14.5997, -102.207, 0.37 ) }
    dend_8 { pt3dadd( 65.9666, -14.4188, -104.101, 0.37 ) }
    dend_8 { pt3dadd( 66.129, -13.6068, -109.461, 0.37 ) }
    dend_8 { pt3dadd( 65.9895, -13.1561, -111.924, 0.37 ) }
    dend_8 { pt3dadd( 65.8468, -12.8018, -113.969, 0.37 ) }
    dend_8 { pt3dadd( 65.7259, -12.4319, -116.397, 0.37 ) }
    dend_8 { pt3dadd( 65.7801, -11.9703, -119.46, 0.37 ) }
    dend_8 { pt3dadd( 65.9104, -11.5678, -121.859, 0.37 ) }
    dend_8 { pt3dadd( 66.279, -10.8518, -125.413, 0.37 ) }
    dend_8 { pt3dadd( 66.7598, -10.1362, -128.593, 0.37 ) }
    dend_8 { pt3dadd( 67.2466, -9.20641, -131.823, 0.37 ) }
    dend_8 { pt3dadd( 67.9924, -7.67422, -136.268, 0.37 ) }
    dend_8 { pt3dadd( 68.5787, -6.44379, -139.326, 0.37 ) }
    dend_8 { pt3dadd( 69.1762, -4.96079, -142.439, 0.37 ) }
    dend_8 { pt3dadd( 69.7194, -3.30238, -145.292, 0.37 ) }
    dend_8 { pt3dadd( 70.7604, 1.05561, -151.273, 0.07 ) }
    dend_8 { pt3dadd( 71.3802, 4.4779, -155.195, 0.07 ) }
    dend_8 { pt3dadd( 71.7863, 6.80692, -157.606, 0.07 ) }
    dend_8 { pt3dadd( 72.2048, 8.76415, -159.547, 0.07 ) }
    dend_8 { pt3dadd( 73.0046, 11.814, -162.507, 0.07 ) }
    dend_8 { pt3dadd( 74.5433, 16.5009, -167.052, 0.07 ) }
    dend_8 { pt3dadd( 75.103, 17.7001, -168.289, 0.07 ) }
    dend_8 { pt3dadd( 77.558, 21.9221, -173.089, 0.07 ) }
    dend_8 { pt3dadd( 79.3472, 24.7522, -176.363, 0.07 ) }
    dend_8 { pt3dadd( 80.4552, 26.3989, -178.28, 0.07 ) }
    dend_8 { pt3dadd( 81.9135, 28.5803, -180.787, 0.07 ) }
    dend_8 { pt3dadd( 84.1681, 32.0643, -184.67, 0.07 ) }
    dend_8 { pt3dadd( 85.8, 35.0259, -187.677, 0.07 ) }
    dend_8 { pt3dadd( 88.1367, 40.6282, -192.596, 0.07 ) }
    dend_8 { pt3dadd( 89.13, 43.7301, -195.025, 0.07 ) }
    dend_8 { pt3dadd( 89.7579, 46.2265, -196.929, 0.07 ) }
    dend_8 { pt3dadd( 90.1272, 48.1034, -198.363, 0.07 ) }
    dend_8 { pt3dadd( 90.4182, 49.785, -199.627, 0.07 ) }
    dend_8 { pt3dadd( 91.1322, 52.545, -201.827, 0.07 ) }
    dend_8 { pt3dadd( 91.8379, 54.1403, -203.299, 0.07 ) }
    dend_8 { pt3dadd( 94.7822, 58.2783, -207.177, 0.07 ) }
    dend_8 { pt3dadd( 96.8466, 60.3178, -209.0, 0.07 ) }
    dend_8 { pt3dadd( 98.9575, 61.9973, -210.25, 0.07 ) }
    dend_8 { pt3dadd( 102.602, 64.4944, -211.604, 0.07 ) }
    dend_8 { pt3dadd( 104.489, 65.6822, -211.95, 0.07 ) }
    dend_8 { pt3dadd( 109.366, 68.7285, -212.064, 0.07 ) }
    dend_8 { pt3dadd( 111.692, 70.2445, -211.685, 0.07 ) }
    dend_8 { pt3dadd( 114.387, 72.099, -210.924, 0.07 ) }
    dend_8 { pt3dadd( 116.367, 73.5177, -210.191, 0.07 ) }
    dend_8 { pt3dadd( 118.529, 75.0573, -209.127, 0.07 ) }
    dend_8 { pt3dadd( 120.865, 76.5836, -207.894, 0.07 ) }
    dend_8 { pt3dadd( 123.385, 77.985, -206.755, 0.07 ) }
    dend_8 { pt3dadd( 127.046, 79.6794, -205.485, 0.07 ) }
    dend_8 { pt3dadd( 132.009, 81.5972, -204.276, 0.07 ) }
    dend_8 { pt3dadd( 134.914, 82.5451, -203.793, 0.07 ) }
    dend_8 { pt3dadd( 138.322, 83.5048, -203.485, 0.07 ) }
    dend_8 { pt3dadd( 146.29, 85.6583, -203.389, 0.07 ) }
    dend_8 { pt3dadd( 148.146, 86.1903, -203.474, 0.07 ) }
    dend_8 { pt3dadd( 151.55, 87.1841, -203.869, 0.07 ) }
    dend_8 { pt3dadd( 153.266, 87.7255, -204.209, 0.07 ) }
    dend_8 { pt3dadd( 155.073, 88.4064, -204.681, 0.07 ) }
    dend_8 { pt3dadd( 157.474, 89.5276, -205.354, 0.07 ) }
    dend_8 { pt3dadd( 159.868, 91.1326, -206.156, 0.07 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 70/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -22.6295, 30.3443, -8.74656, 0.29 ) }
    dend_2 { pt3dadd( -25.2606, 32.0138, -10.5549, 0.29 ) }
    dend_2 { pt3dadd( -29.0698, 34.1494, -13.156, 0.29 ) }
    dend_2 { pt3dadd( -31.1123, 35.2188, -14.5192, 0.07 ) }
    dend_2 { pt3dadd( -32.6361, 35.9987, -15.5028, 0.07 ) }
    dend_2 { pt3dadd( -33.153, 36.2705, -15.8357, 0.07 ) }
    dend_2 { pt3dadd( -35.8329, 37.7361, -17.6405, 0.37 ) }
    dend_2 { pt3dadd( -36.8757, 38.2748, -18.3621, 0.37 ) }
    dend_2 { pt3dadd( -38.3127, 39.0267, -19.3736, 0.37 ) }
    dend_2 { pt3dadd( -39.5332, 39.7004, -20.3518, 0.37 ) }
    dend_2 { pt3dadd( -40.9973, 40.4841, -21.6011, 0.59 ) }
    dend_2 { pt3dadd( -42.2986, 41.1169, -22.7473, 0.59 ) }
    dend_2 { pt3dadd( -43.4142, 41.5607, -23.7325, 0.59 ) }
    dend_2 { pt3dadd( -45.6574, 42.2681, -25.6064, 0.59 ) }
    dend_2 { pt3dadd( -47.5972, 42.7715, -27.2392, 0.59 ) }
    dend_2 { pt3dadd( -50.1631, 43.2746, -29.3665, 0.81 ) }
    dend_2 { pt3dadd( -51.8311, 43.486, -30.6693, 0.81 ) }
    dend_2 { pt3dadd( -53.6324, 43.6219, -31.9696, 0.81 ) }
    dend_2 { pt3dadd( -55.8487, 43.6727, -33.5161, 1.03 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 89/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -22.6295, 30.3443, -8.74656, 0.29 ) }
    dend_1 { pt3dadd( -24.1457, 30.3371, -8.80615, 0.29 ) }
    dend_1 { pt3dadd( -25.2358, 30.3376, -8.83822, 0.29 ) }
    dend_1 { pt3dadd( -26.7446, 30.3579, -8.87311, 0.29 ) }
    dend_1 { pt3dadd( -28.3739, 30.4096, -8.90398, 0.52 ) }
    dend_1 { pt3dadd( -30.7838, 30.5142, -8.94084, 0.88 ) }
    dend_1 { pt3dadd( -32.7352, 30.6333, -8.96522, 0.37 ) }
    dend_1 { pt3dadd( -33.7245, 30.7714, -8.97343, 0.37 ) }
    dend_1 { pt3dadd( -34.8041, 30.9929, -8.95773, 0.37 ) }
    dend_1 { pt3dadd( -35.675, 31.22, -8.92569, 0.37 ) }
    dend_1 { pt3dadd( -36.9013, 31.595, -8.85599, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_1 { pt3dadd( -37.9073, 31.9302, -8.78422, 0.37 ) }
    dend_1 { pt3dadd( -40.0776, 32.7282, -8.62909, 0.37 ) }
    dend_1 { pt3dadd( -42.0175, 33.4365, -8.43516, 0.37 ) }
    dend_1 { pt3dadd( -43.1569, 33.8429, -8.29867, 0.37 ) }
    dend_1 { pt3dadd( -45.686, 34.746, -7.9636, 0.15 ) }
    dend_1 { pt3dadd( -47.1576, 35.28, -7.72796, 0.15 ) }
    dend_1 { pt3dadd( -48.9215, 35.9286, -7.40689, 0.15 ) }
    dend_1 { pt3dadd( -51.4882, 36.8763, -6.87104, 0.15 ) }
    dend_1 { pt3dadd( -54.1745, 37.906, -6.31, 0.15 ) }
    dend_1 { pt3dadd( -55.9789, 38.613, -5.88801, 0.15 ) }
    dend_1 { pt3dadd( -57.2339, 39.1249, -5.56055, 0.29 ) }
    dend_1 { pt3dadd( -58.2573, 39.5627, -5.27651, 0.29 ) }
    dend_1 { pt3dadd( -60.3313, 40.4895, -4.68089, 0.15 ) }
    dend_1 { pt3dadd( -61.6641, 41.1295, -4.32399, 0.37 ) }
    dend_1 { pt3dadd( -62.5299, 41.5054, -4.08758, 0.37 ) }
    dend_1 { pt3dadd( -63.6813, 41.9414, -3.80586, 0.37 ) }
    dend_1 { pt3dadd( -64.6406, 42.2524, -3.58578, 0.37 ) }
    dend_1 { pt3dadd( -66.3825, 42.735, -3.1868, 0.37 ) }
    dend_1 { pt3dadd( -68.0607, 43.1471, -2.81177, 0.37 ) }
    dend_1 { pt3dadd( -70.8976, 43.8226, -2.19003, 0.59 ) }
    dend_1 { pt3dadd( -73.1722, 44.383, -1.71645, 0.59 ) }
    dend_1 { pt3dadd( -74.6202, 44.8002, -1.37886, 0.44 ) }
    dend_1 { pt3dadd( -75.5613, 45.1228, -1.13332, 0.44 ) }
    dend_1 { pt3dadd( -76.5746, 45.5216, -0.860505, 0.44 ) }
    dend_1 { pt3dadd( -78.8144, 46.5336, -0.256017, 0.29 ) }
    dend_1 { pt3dadd( -80.338, 47.3641, 0.140192, 0.29 ) }
    dend_1 { pt3dadd( -82.4596, 48.6384, 0.668935, 0.37 ) }
    dend_1 { pt3dadd( -83.9211, 49.532, 0.973626, 0.07 ) }
    dend_1 { pt3dadd( -84.9813, 50.1648, 1.16807, 0.07 ) }
    dend_1 { pt3dadd( -86.2103, 50.8461, 1.34747, 0.07 ) }
    dend_1 { pt3dadd( -87.1778, 51.3252, 1.4405, 0.29 ) }
    dend_1 { pt3dadd( -88.44, 51.8983, 1.49314, 0.29 ) }
    dend_1 { pt3dadd( -90.1813, 52.6298, 1.46944, 0.29 ) }
    dend_1 { pt3dadd( -90.7687, 52.8853, 1.45921, 0.29 ) }
    dend_1 { pt3dadd( -92.4636, 53.7308, 1.45705, 0.29 ) }
    dend_1 { pt3dadd( -93.586, 54.3408, 1.4575, 0.59 ) }
    dend_1 { pt3dadd( -95.3439, 55.3422, 1.45902, 0.59 ) }
    dend_1 { pt3dadd( -96.5353, 56.0379, 1.4614, 0.15 ) }
    dend_1 { pt3dadd( -97.4097, 56.5584, 1.46453, 0.15 ) }
    dend_1 { pt3dadd( -98.6352, 57.2394, 1.48518, 0.15 ) }
    dend_1 { pt3dadd( -99.5292, 57.7374, 1.49997, 0.15 ) }
    dend_1 { pt3dadd( -100.744, 58.4164, 1.51351, 0.22 ) }
    dend_1 { pt3dadd( -102.533, 59.41, 1.5263, 0.22 ) }
    dend_1 { pt3dadd( -103.491, 59.9425, 1.53035, 0.22 ) }
    dend_1 { pt3dadd( -105.702, 61.107, 1.43531, 0.22 ) }
    dend_1 { pt3dadd( -107.68, 62.147, 1.2949, 0.22 ) }
    dend_1 { pt3dadd( -109.691, 63.23, 1.11521, 0.22 ) }
    dend_1 { pt3dadd( -111.234, 64.0844, 0.947814, 0.22 ) }
    dend_1 { pt3dadd( -112.512, 64.7775, 0.799449, 0.22 ) }
    dend_1 { pt3dadd( -116.22, 66.7289, 0.365998, 0.22 ) }
    dend_1 { pt3dadd( -118.557, 67.9408, 0.0853106, 0.22 ) }
    dend_1 { pt3dadd( -120.177, 68.7733, -0.0947017, 0.22 ) }
    dend_1 { pt3dadd( -123.616, 70.5992, -0.482346, 0.22 ) }
    dend_1 { pt3dadd( -126.685, 72.31, -0.816278, 0.22 ) }
    dend_1 { pt3dadd( -128.478, 73.3677, -0.965585, 0.22 ) }
    dend_1 { pt3dadd( -130.071, 74.3639, -1.05028, 0.22 ) }
    dend_1 { pt3dadd( -132.527, 76.0029, -1.18096, 0.22 ) }
    dend_1 { pt3dadd( -135.006, 77.8382, -1.32037, 0.22 ) }
    dend_1 { pt3dadd( -137.547, 79.905, -1.43632, 0.22 ) }
    dend_1 { pt3dadd( -140.456, 82.4355, -1.54539, 0.22 ) }
    dend_1 { pt3dadd( -142.222, 83.9963, -1.59304, 0.22 ) }
    dend_1 { pt3dadd( -144.919, 86.3722, -1.63064, 0.22 ) }
    dend_1 { pt3dadd( -147.017, 88.2121, -1.63859, 0.22 ) }
    dend_1 { pt3dadd( -148.651, 89.6811, -1.6286, 0.22 ) }
    dend_1 { pt3dadd( -150.743, 91.6625, -1.64299, 0.22 ) }
    dend_1 { pt3dadd( -152.282, 93.2082, -1.67919, 0.22 ) }
    dend_1 { pt3dadd( -153.367, 94.3912, -1.70405, 0.22 ) }
    dend_1 { pt3dadd( -156.867, 98.5365, -1.69027, 0.22 ) }
    dend_1 { pt3dadd( -158.178, 100.221, -1.66458, 0.22 ) }
    dend_1 { pt3dadd( -159.664, 102.318, -1.52193, 0.22 ) }
    dend_1 { pt3dadd( -161.226, 104.812, -1.21538, 0.22 ) }
    dend_1 { pt3dadd( -162.307, 106.678, -0.896786, 0.22 ) }
    dend_1 { pt3dadd( -163.095, 108.082, -0.607848, 0.22 ) }
    dend_1 { pt3dadd( -163.555, 108.928, -0.405748, 0.22 ) }
    dend_1 { pt3dadd( -165.892, 112.684, 0.329967, 0.22 ) }
    dend_1 { pt3dadd( -166.47, 113.519, 0.448315, 0.22 ) }
    dend_1 { pt3dadd( -168.656, 116.646, 0.694954, 0.22 ) }
    dend_1 { pt3dadd( -170.555, 119.391, 0.77002, 0.22 ) }
    dend_1 { pt3dadd( -172.358, 122.198, 0.706747, 0.22 ) }
    dend_1 { pt3dadd( -174.534, 125.996, 0.592662, 0.37 ) }
    dend_1 { pt3dadd( -176.303, 129.497, 0.432899, 0.37 ) }
    dend_1 { pt3dadd( -177.76, 132.78, 0.355651, 0.37 ) }
    dend_1 { pt3dadd( -178.348, 134.548, 0.365669, 0.37 ) }
    dend_1 { pt3dadd( -179.103, 137.617, 0.474915, 0.07 ) }
    dend_1 { pt3dadd( -179.74, 141.458, 0.717229, 0.07 ) }
    dend_1 { pt3dadd( -179.892, 143.685, 0.928911, 0.07 ) }
    dend_1 { pt3dadd( -179.855, 147.373, 1.20957, 0.07 ) }
    dend_1 { pt3dadd( -179.689, 151.911, 1.56142, 0.07 ) }
    dend_1 { pt3dadd( -179.558, 153.966, 1.70455, 0.07 ) }
    dend_1 { pt3dadd( -179.338, 156.007, 1.80287, 0.07 ) }
    dend_1 { pt3dadd( -178.96, 158.212, 1.78264, 0.07 ) }
    dend_1 { pt3dadd( -178.312, 160.978, 1.70321, 0.07 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 92/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 5.40654, 47.5527, -1.84882, 0.405153 ) }
    axon_1 { pt3dadd( 7.11726, 62.4548, -1.84882, 0.405153 ) }
    axon_1 { pt3dadd( 8.82798, 77.3569, -1.84882, 0.405153 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 95/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 21.2022, -37.7308, 37.2709, 0.07 ) }
    dend_60 { pt3dadd( 24.6395, -38.989, 41.879, 0.07 ) }
    dend_60 { pt3dadd( 27.5768, -41.2974, 46.4665, 0.07 ) }
    dend_60 { pt3dadd( 30.8133, -44.0131, 50.6354, 0.07 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 99/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 21.2022, -37.7308, 37.2709, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_57 { pt3dadd( 25.2651, -39.2231, 42.8913, 0.07 ) }
    dend_57 { pt3dadd( 29.3025, -39.7501, 48.6801, 0.07 ) }
    // Section: dend_51, id: dend_51, parent: dend_39 (entry count 2/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -13.7956, -47.4012, 6.40705, 0.96 ) }
    dend_51 { pt3dadd( -12.7484, -51.4998, 7.9212, 0.96 ) }
    dend_51 { pt3dadd( -11.955, -54.536, 8.9507, 0.96 ) }
    dend_51 { pt3dadd( -11.1465, -58.2653, 10.1243, 0.96 ) }
    dend_51 { pt3dadd( -10.1291, -64.2384, 11.8922, 1.18 ) }
    dend_51 { pt3dadd( -9.75444, -67.2231, 12.7214, 1.18 ) }
    dend_51 { pt3dadd( -9.44886, -70.3323, 13.5553, 1.18 ) }
    dend_51 { pt3dadd( -9.34126, -72.1069, 14.0322, 1.18 ) }
    dend_51 { pt3dadd( -9.19173, -75.0637, 14.7601, 1.03 ) }
    dend_51 { pt3dadd( -9.09515, -76.8485, 15.2008, 1.03 ) }
    dend_51 { pt3dadd( -8.84633, -79.6503, 16.0513, 1.03 ) }
    dend_51 { pt3dadd( -8.58781, -81.0235, 16.594, 1.03 ) }
    dend_51 { pt3dadd( -7.88888, -84.0214, 17.9192, 1.03 ) }
    dend_51 { pt3dadd( -6.71867, -87.9207, 19.7927, 1.03 ) }
    dend_51 { pt3dadd( -5.82667, -90.1682, 20.9579, 1.03 ) }
    dend_51 { pt3dadd( -4.38667, -93.2249, 22.6635, 1.03 ) }
    dend_51 { pt3dadd( -2.55677, -96.5863, 24.7188, 1.03 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 19/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -13.7956, -47.4012, 6.40705, 1.33 ) }
    dend_40 { pt3dadd( -14.2889, -49.0734, 4.90209, 1.33 ) }
    dend_40 { pt3dadd( -15.121, -51.8939, 2.3638, 1.33 ) }
    dend_40 { pt3dadd( -16.0329, -54.9848, -0.417847, 1.33 ) }
    dend_40 { pt3dadd( -16.4037, -56.2416, -1.54886, 1.4 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 24/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -0.29969, 37.473, 8.1189, 0.66 ) }
    dend_32 { pt3dadd( 0.399972, 39.1257, 7.85875, 0.66 ) }
    dend_32 { pt3dadd( 1.13439, 40.415, 7.6878, 0.66 ) }
    dend_32 { pt3dadd( 2.04162, 41.7293, 7.5422, 0.88 ) }
    dend_32 { pt3dadd( 3.20447, 43.4138, 7.35557, 0.88 ) }
    dend_32 { pt3dadd( 3.86989, 44.3777, 7.24878, 0.88 ) }
    dend_32 { pt3dadd( 4.92946, 45.9127, 7.07873, 1.03 ) }
    dend_32 { pt3dadd( 5.72275, 46.8234, 7.01325, 0.74 ) }
    dend_32 { pt3dadd( 6.44098, 47.4949, 6.957, 0.52 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 33/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.29969, 37.473, 8.1189, 0.59 ) }
    dend_29 { pt3dadd( -1.2224, 38.7379, 8.7678, 0.59 ) }
    dend_29 { pt3dadd( -1.99935, 39.8552, 9.48508, 0.59 ) }
    dend_29 { pt3dadd( -2.60688, 40.7902, 10.1709, 0.74 ) }
    dend_29 { pt3dadd( -3.26684, 41.8848, 11.0347, 1.11 ) }
    dend_29 { pt3dadd( -3.7613, 42.7995, 11.8164, 1.11 ) }
    dend_29 { pt3dadd( -4.30037, 43.9213, 12.8304, 1.11 ) }
    dend_29 { pt3dadd( -4.61784, 44.8341, 13.7969, 1.25 ) }
    dend_29 { pt3dadd( -4.76834, 45.6216, 14.7277, 1.47 ) }
    dend_29 { pt3dadd( -4.78566, 46.2902, 15.553, 1.47 ) }
    dend_29 { pt3dadd( -4.65627, 47.0864, 16.518, 1.47 ) }
    dend_29 { pt3dadd( -4.48734, 47.6046, 17.087, 1.47 ) }
    dend_29 { pt3dadd( -4.20477, 48.2613, 17.6933, 1.47 ) }
    dend_29 { pt3dadd( -3.86515, 49.0148, 18.2919, 1.47 ) }
    dend_29 { pt3dadd( -3.5355, 49.763, 18.7838, 1.47 ) }
    dend_29 { pt3dadd( -3.13605, 50.6693, 19.3267, 1.62 ) }
    dend_29 { pt3dadd( -2.70043, 51.7379, 19.8876, 1.62 ) }
    dend_29 { pt3dadd( -2.29505, 52.8033, 20.3959, 1.69 ) }
    dend_29 { pt3dadd( -1.45798, 55.2102, 21.433, 1.69 ) }
    dend_29 { pt3dadd( -1.10291, 56.3776, 21.9067, 1.69 ) }
    // Section: dend_15, id: dend_15, parent: dend_9 (entry count 53/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 38.1103, 35.2471, -15.5344, 0.81 ) }
    dend_15 { pt3dadd( 41.1113, 35.3349, -14.6579, 0.81 ) }
    dend_15 { pt3dadd( 42.701, 35.4987, -14.0941, 0.81 ) }
    dend_15 { pt3dadd( 44.4273, 35.772, -13.3474, 0.52 ) }
    dend_15 { pt3dadd( 45.7323, 36.0659, -12.7279, 0.52 ) }
    dend_15 { pt3dadd( 47.0623, 36.425, -12.0897, 0.52 ) }
    dend_15 { pt3dadd( 48.2389, 36.7467, -11.5071, 0.74 ) }
    dend_15 { pt3dadd( 49.6401, 37.1304, -10.7959, 0.74 ) }
    dend_15 { pt3dadd( 51.2049, 37.5631, -9.97693, 0.74 ) }
    dend_15 { pt3dadd( 52.71, 37.9349, -9.24463, 0.74 ) }
    dend_15 { pt3dadd( 55.5529, 38.3995, -7.96354, 0.37 ) }
    dend_15 { pt3dadd( 56.5028, 38.4773, -7.59069, 0.37 ) }
    dend_15 { pt3dadd( 58.9741, 38.5789, -6.69948, 0.66 ) }
    dend_15 { pt3dadd( 59.5977, 38.5846, -6.50653, 0.66 ) }
    dend_15 { pt3dadd( 62.1031, 38.503, -5.82479, 1.03 ) }
    dend_15 { pt3dadd( 63.795, 38.3508, -5.39617, 1.03 ) }
    dend_15 { pt3dadd( 66.3662, 38.0284, -4.82134, 1.03 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 70/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 38.1103, 35.2471, -15.5344, 0.59 ) }
    dend_10 { pt3dadd( 39.5101, 36.7011, -16.015, 0.59 ) }
    dend_10 { pt3dadd( 41.0749, 38.3265, -16.5523, 0.59 ) }
    dend_10 { pt3dadd( 43.656, 41.0075, -17.4385, 0.59 ) }
    dend_10 { pt3dadd( 44.6485, 42.0384, -17.7793, 0.59 ) }
    dend_10 { pt3dadd( 46.9592, 44.4386, -18.5728, 0.59 ) }
    dend_10 { pt3dadd( 48.7995, 46.35, -19.2046, 0.59 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 77/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -55.8487, 43.6727, -33.5161, 0.74 ) }
    dend_6 { pt3dadd( -57.3556, 45.0988, -35.7443, 0.74 ) }
    dend_6 { pt3dadd( -58.6833, 46.4099, -37.7911, 0.74 ) }
    dend_6 { pt3dadd( -59.3168, 47.1072, -38.8093, 0.74 ) }
    dend_6 { pt3dadd( -60.9429, 48.9098, -41.3367, 0.74 ) }
    dend_6 { pt3dadd( -61.6014, 49.6061, -42.3146, 0.52 ) }
    dend_6 { pt3dadd( -62.1923, 50.192, -43.1244, 0.52 ) }
    dend_6 { pt3dadd( -62.9699, 50.959, -44.055, 0.52 ) }
    dend_6 { pt3dadd( -64.3294, 52.198, -45.3652, 0.52 ) }
    dend_6 { pt3dadd( -65.2224, 52.8927, -46.0731, 0.52 ) }
    dend_6 { pt3dadd( -66.0728, 53.4437, -46.6008, 0.52 ) }
    dend_6 { pt3dadd( -67.3877, 54.238, -47.2763, 0.15 ) }
    dend_6 { pt3dadd( -68.5705, 54.9108, -47.7918, 0.15 ) }
    dend_6 { pt3dadd( -70.1427, 55.7436, -48.3914, 0.15 ) }
    dend_6 { pt3dadd( -71.957, 56.6359, -49.041, 0.15 ) }
    dend_6 { pt3dadd( -73.2669, 57.2767, -49.5315, 0.15 ) }
    dend_6 { pt3dadd( -74.3532, 57.8005, -49.957, 0.15 ) }
    dend_6 { pt3dadd( -75.1152, 58.1195, -50.2876, 0.15 ) }
    dend_6 { pt3dadd( -77.2746, 58.8527, -51.3207, 0.29 ) }
    dend_6 { pt3dadd( -77.9234, 59.0236, -51.686, 0.29 ) }
    dend_6 { pt3dadd( -79.0852, 59.2532, -52.4757, 0.29 ) }
    dend_6 { pt3dadd( -79.7977, 59.341, -53.012, 0.29 ) }
    dend_6 { pt3dadd( -81.3925, 59.4512, -54.2867, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_6 { pt3dadd( -82.1891, 59.5098, -54.9336, 0.29 ) }
    dend_6 { pt3dadd( -83.8671, 59.7031, -56.2924, 0.44 ) }
    dend_6 { pt3dadd( -84.9367, 59.9098, -57.1551, 0.44 ) }
    dend_6 { pt3dadd( -86.144, 60.2852, -58.0448, 0.44 ) }
    dend_6 { pt3dadd( -86.722, 60.5578, -58.4724, 0.22 ) }
    dend_6 { pt3dadd( -88.0345, 61.4211, -59.4334, 0.22 ) }
    dend_6 { pt3dadd( -89.1839, 62.343, -60.2924, 0.22 ) }
    dend_6 { pt3dadd( -89.6896, 62.8249, -60.7092, 0.22 ) }
    dend_6 { pt3dadd( -91.0831, 64.3012, -62.1019, 0.22 ) }
    dend_6 { pt3dadd( -92.3671, 65.7197, -63.5848, 0.22 ) }
    dend_6 { pt3dadd( -92.9825, 66.4073, -64.3746, 0.22 ) }
    dend_6 { pt3dadd( -94.1918, 67.6995, -65.9543, 0.22 ) }
    dend_6 { pt3dadd( -95.1134, 68.6855, -67.1555, 0.22 ) }
    dend_6 { pt3dadd( -96.5874, 70.2851, -69.0554, 0.22 ) }
    dend_6 { pt3dadd( -97.8319, 71.6608, -70.7789, 0.22 ) }
    dend_6 { pt3dadd( -99.1494, 73.0126, -72.4515, 0.22 ) }
    dend_6 { pt3dadd( -101.374, 75.0642, -74.9539, 0.22 ) }
    dend_6 { pt3dadd( -103.054, 76.3194, -76.5358, 0.22 ) }
    dend_6 { pt3dadd( -104.206, 76.9928, -77.4398, 0.22 ) }
    dend_6 { pt3dadd( -107.136, 78.3348, -79.43, 0.22 ) }
    dend_6 { pt3dadd( -109.848, 79.2931, -81.0971, 0.22 ) }
    dend_6 { pt3dadd( -112.739, 80.0981, -82.689, 0.22 ) }
    dend_6 { pt3dadd( -116.819, 80.9602, -84.8122, 0.07 ) }
    dend_6 { pt3dadd( -119.342, 81.37, -86.0886, 0.07 ) }
    dend_6 { pt3dadd( -120.958, 81.5823, -86.8821, 0.07 ) }
    dend_6 { pt3dadd( -124.405, 81.9941, -88.5871, 0.07 ) }
    dend_6 { pt3dadd( -125.939, 82.1903, -89.4282, 0.07 ) }
    dend_6 { pt3dadd( -128.361, 82.5515, -90.8285, 0.07 ) }
    dend_6 { pt3dadd( -130.643, 82.9544, -92.1083, 0.07 ) }
    dend_6 { pt3dadd( -134.199, 83.6102, -93.988, 0.07 ) }
    dend_6 { pt3dadd( -137.075, 84.1596, -95.4545, 0.07 ) }
    dend_6 { pt3dadd( -139.189, 84.6162, -96.4986, 0.07 ) }
    dend_6 { pt3dadd( -140.729, 85.0149, -97.2536, 0.07 ) }
    dend_6 { pt3dadd( -143.826, 85.9777, -98.7311, 0.07 ) }
    dend_6 { pt3dadd( -146.561, 86.9764, -100.065, 0.07 ) }
    dend_6 { pt3dadd( -149.19, 88.083, -101.449, 0.07 ) }
    dend_6 { pt3dadd( -151.911, 89.3261, -103.009, 0.07 ) }
    dend_6 { pt3dadd( -154.302, 90.5162, -104.512, 0.07 ) }
    dend_6 { pt3dadd( -156.353, 91.6459, -105.792, 0.07 ) }
    dend_6 { pt3dadd( -158.031, 92.6855, -106.788, 0.07 ) }
    dend_6 { pt3dadd( -159.538, 93.7258, -107.621, 0.07 ) }
    dend_6 { pt3dadd( -160.944, 94.7704, -108.339, 0.07 ) }
    dend_6 { pt3dadd( -163.005, 96.4785, -109.371, 0.07 ) }
    dend_6 { pt3dadd( -167.23, 100.448, -111.461, 0.07 ) }
    dend_6 { pt3dadd( -169.612, 102.958, -112.705, 0.07 ) }
    dend_6 { pt3dadd( -171.09, 104.64, -113.505, 0.07 ) }
    dend_6 { pt3dadd( -172.538, 106.409, -114.317, 0.07 ) }
    dend_6 { pt3dadd( -174.157, 108.549, -115.298, 0.07 ) }
    dend_6 { pt3dadd( -175.452, 110.433, -116.231, 0.07 ) }
    dend_6 { pt3dadd( -176.964, 112.881, -117.576, 0.07 ) }
    dend_6 { pt3dadd( -177.885, 114.331, -118.436, 0.07 ) }
    dend_6 { pt3dadd( -178.753, 115.625, -119.213, 0.07 ) }
    dend_6 { pt3dadd( -179.821, 117.148, -120.127, 0.07 ) }
    dend_6 { pt3dadd( -180.762, 118.38, -120.894, 0.07 ) }
    dend_6 { pt3dadd( -181.776, 119.676, -121.696, 0.07 ) }
    dend_6 { pt3dadd( -183.164, 121.429, -122.658, 0.07 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 56/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -55.8487, 43.6727, -33.5161, 0.44 ) }
    dend_3 { pt3dadd( -56.9013, 43.8272, -34.0515, 0.44 ) }
    dend_3 { pt3dadd( -57.8155, 44.0073, -34.4652, 0.44 ) }
    dend_3 { pt3dadd( -59.259, 44.2917, -35.1183, 0.44 ) }
    dend_3 { pt3dadd( -60.4988, 44.5359, -35.6792, 0.44 ) }
    dend_3 { pt3dadd( -62.262, 44.8832, -36.477, 0.44 ) }
    dend_3 { pt3dadd( -64.7174, 45.3669, -37.5879, 0.44 ) }
    dend_3 { pt3dadd( -67.2158, 46.019, -38.7551, 0.44 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 64/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 30.8133, -44.0131, 50.6354, 0.07 ) }
    dend_62 { pt3dadd( 30.3206, -40.7069, 57.805, 0.07 ) }
    dend_62 { pt3dadd( 28.9582, -38.7146, 65.3023, 0.07 ) }
    dend_62 { pt3dadd( 28.8247, -36.4317, 72.8459, 0.07 ) }
    dend_62 { pt3dadd( 30.2162, -33.4049, 80.0136, 0.07 ) }
    dend_62 { pt3dadd( 30.2532, -31.461, 87.6461, 0.07 ) }
    dend_62 { pt3dadd( 30.1736, -30.2395, 95.4171, 0.07 ) }
    dend_62 { pt3dadd( 30.2376, -29.0088, 103.187, 0.07 ) }
    dend_62 { pt3dadd( 30.4665, -26.0321, 110.502, 0.07 ) }
    dend_62 { pt3dadd( 29.9284, -22.5429, 117.588, 0.07 ) }
    dend_62 { pt3dadd( 31.0284, -17.7429, 123.865, 0.07 ) }
    dend_62 { pt3dadd( 33.2571, -11.7692, 128.788, 0.07 ) }
    dend_62 { pt3dadd( 35.3844, -5.82034, 133.782, 0.07 ) }
    dend_62 { pt3dadd( 36.0435, 0.151426, 139.139, 0.07 ) }
    dend_62 { pt3dadd( 35.8896, 5.26702, 145.279, 0.07 ) }
    dend_62 { pt3dadd( 34.5592, 11.2146, 150.528, 0.07 ) }
    dend_62 { pt3dadd( 34.7578, 18.1904, 154.688, 0.07 ) }
    dend_62 { pt3dadd( 35.9532, 24.5677, 159.504, 0.07 ) }
    dend_62 { pt3dadd( 36.9446, 30.6511, 164.694, 0.07 ) }
    dend_62 { pt3dadd( 38.6474, 36.6122, 169.833, 0.07 ) }
    dend_62 { pt3dadd( 39.3986, 43.5893, 173.931, 0.07 ) }
    dend_62 { pt3dadd( 40.3758, 49.9378, 178.829, 0.07 ) }
    dend_62 { pt3dadd( 40.6789, 56.4897, 183.566, 0.07 ) }
    dend_62 { pt3dadd( 39.6002, 62.2872, 189.021, 0.07 ) }
    dend_62 { pt3dadd( 37.5127, 68.4489, 193.775, 0.07 ) }
    dend_62 { pt3dadd( 34.9144, 73.3933, 199.475, 0.07 ) }
    dend_62 { pt3dadd( 32.1166, 76.9659, 205.964, 0.07 ) }
    dend_62 { pt3dadd( 30.1978, 81.1555, 212.434, 0.07 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 92/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 30.8133, -44.0131, 50.6354, 0.07 ) }
    dend_61 { pt3dadd( 39.1939, -49.1666, 53.5068, 0.07 ) }
    dend_61 { pt3dadd( 46.2937, -55.5326, 57.3876, 0.07 ) }
    dend_61 { pt3dadd( 52.4847, -63.3849, 60.2116, 0.07 ) }
    dend_61 { pt3dadd( 58.1531, -70.802, 64.6463, 0.07 ) }
    dend_61 { pt3dadd( 63.3723, -78.5564, 69.0901, 0.07 ) }
    dend_61 { pt3dadd( 67.9377, -85.9673, 74.606, 0.07 ) }
    dend_61 { pt3dadd( 70.4373, -93.5575, 81.0587, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_61 { pt3dadd( 73.7647, -100.029, 88.2271, 0.07 ) }
    dend_61 { pt3dadd( 76.9322, -106.431, 95.5185, 0.07 ) }
    dend_61 { pt3dadd( 79.4723, -114.862, 100.93, 0.07 ) }
    dend_61 { pt3dadd( 81.3828, -124.309, 104.861, 0.07 ) }
    dend_61 { pt3dadd( 84.0523, -133.065, 109.725, 0.07 ) }
    dend_61 { pt3dadd( 86.386, -142.485, 113.512, 0.07 ) }
    dend_61 { pt3dadd( 88.4936, -151.473, 118.24, 0.07 ) }
    dend_61 { pt3dadd( 90.2739, -160.041, 123.727, 0.07 ) }
    dend_61 { pt3dadd( 91.0268, -168.681, 129.307, 0.07 ) }
    dend_61 { pt3dadd( 93.9282, -177.316, 134.245, 0.07 ) }
    dend_61 { pt3dadd( 96.2349, -186.117, 139.202, 0.07 ) }
    dend_61 { pt3dadd( 98.106, -194.993, 144.198, 0.07 ) }
    dend_61 { pt3dadd( 99.0484, -204.27, 148.735, 0.07 ) }
    dend_61 { pt3dadd( 97.4001, -212.937, 153.996, 0.07 ) }
    dend_61 { pt3dadd( 94.8084, -221.298, 159.3, 0.07 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 15/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 29.3025, -39.7501, 48.6801, 0.07 ) }
    dend_59 { pt3dadd( 32.6028, -41.1111, 56.0352, 0.07 ) }
    dend_59 { pt3dadd( 36.4727, -43.8422, 62.7516, 0.07 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 18/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 29.3025, -39.7501, 48.6801, 0.07 ) }
    dend_58 { pt3dadd( 34.2657, -41.0214, 57.1944, 0.07 ) }
    dend_58 { pt3dadd( 37.7494, -42.2197, 66.4173, 0.07 ) }
    dend_58 { pt3dadd( 39.5331, -43.2226, 76.1304, 0.07 ) }
    dend_58 { pt3dadd( 40.7179, -44.5071, 85.9028, 0.07 ) }
    dend_58 { pt3dadd( 42.5913, -43.9657, 95.6369, 0.07 ) }
    dend_58 { pt3dadd( 44.8678, -44.543, 105.279, 0.07 ) }
    dend_58 { pt3dadd( 46.0219, -43.9151, 115.122, 0.07 ) }
    dend_58 { pt3dadd( 45.76, -43.8007, 125.045, 0.07 ) }
    dend_58 { pt3dadd( 46.7846, -44.4786, 134.893, 0.07 ) }
    dend_58 { pt3dadd( 47.195, -45.6866, 144.737, 0.07 ) }
    dend_58 { pt3dadd( 48.3217, -48.0281, 154.332, 0.07 ) }
    dend_58 { pt3dadd( 50.1586, -48.4299, 164.076, 0.07 ) }
    dend_58 { pt3dadd( 53.7047, -50.1502, 173.2, 0.07 ) }
    dend_58 { pt3dadd( 57.2265, -51.3614, 182.407, 0.07 ) }
    dend_58 { pt3dadd( 59.1249, -52.777, 192.05, 0.07 ) }
    dend_58 { pt3dadd( 60.0326, -55.5341, 201.565, 0.07 ) }
    dend_58 { pt3dadd( 60.6107, -57.0715, 211.357, 0.07 ) }
    dend_58 { pt3dadd( 59.9961, -59.1014, 221.058, 0.07 ) }
    dend_58 { pt3dadd( 59.8576, -58.9294, 230.984, 0.07 ) }
    dend_58 { pt3dadd( 60.6671, -59.2126, 240.871, 0.07 ) }
    dend_58 { pt3dadd( 61.0449, -60.4412, 250.714, 0.07 ) }
    dend_58 { pt3dadd( 62.2808, -60.9349, 260.548, 0.07 ) }
    dend_58 { pt3dadd( 62.9442, -62.6092, 270.314, 0.07 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 42/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -2.55677, -96.5863, 24.7188, 0.81 ) }
    dend_53 { pt3dadd( -2.19304, -97.3076, 25.7009, 0.81 ) }
    dend_53 { pt3dadd( -1.99589, -97.8605, 26.8246, 0.81 ) }
    dend_53 { pt3dadd( -1.84923, -98.4704, 28.2351, 0.81 ) }
    dend_53 { pt3dadd( -1.75857, -98.763, 28.9119, 0.81 ) }
    dend_53 { pt3dadd( -1.51981, -99.4643, 30.4395, 0.81 ) }
    dend_53 { pt3dadd( -1.03104, -100.856, 33.1978, 0.81 ) }
    dend_53 { pt3dadd( -0.631003, -102.002, 35.3605, 0.81 ) }
    dend_53 { pt3dadd( -0.402831, -102.587, 36.4099, 0.81 ) }
    dend_53 { pt3dadd( 0.0166488, -103.501, 38.1417, 0.52 ) }
    dend_53 { pt3dadd( 0.274776, -104.016, 39.1273, 0.52 ) }
    dend_53 { pt3dadd( 0.613871, -104.657, 40.2553, 0.52 ) }
    dend_53 { pt3dadd( 0.846791, -105.036, 40.7547, 0.52 ) }
    dend_53 { pt3dadd( 1.20848, -105.653, 41.423, 0.52 ) }
    dend_53 { pt3dadd( 1.75642, -106.807, 42.6005, 0.66 ) }
    dend_53 { pt3dadd( 1.98669, -107.646, 43.4205, 0.66 ) }
    dend_53 { pt3dadd( 2.04417, -108.258, 43.992, 0.66 ) }
    dend_53 { pt3dadd( 1.95919, -109.116, 44.7132, 0.66 ) }
    dend_53 { pt3dadd( 1.64762, -110.228, 45.5739, 0.66 ) }
    dend_53 { pt3dadd( 1.18636, -111.213, 46.25, 0.81 ) }
    dend_53 { pt3dadd( 0.620779, -112.113, 46.8103, 0.81 ) }
    dend_53 { pt3dadd( -0.104387, -113.009, 47.3602, 0.66 ) }
    dend_53 { pt3dadd( -0.818933, -113.792, 47.8631, 0.66 ) }
    dend_53 { pt3dadd( -1.57969, -114.534, 48.3713, 0.66 ) }
    dend_53 { pt3dadd( -2.36877, -115.198, 48.7918, 0.37 ) }
    dend_53 { pt3dadd( -3.06855, -115.705, 49.0843, 0.37 ) }
    dend_53 { pt3dadd( -4.11754, -116.369, 49.4491, 0.37 ) }
    dend_53 { pt3dadd( -5.95786, -124.446, 56.9092, 0.37 ) }
    dend_53 { pt3dadd( -6.31856, -130.538, 66.1066, 0.37 ) }
    dend_53 { pt3dadd( -5.26715, -137.181, 74.9052, 0.37 ) }
    dend_53 { pt3dadd( -3.13727, -145.082, 82.4893, 0.37 ) }
    dend_53 { pt3dadd( -1.84424, -153.618, 89.6197, 0.37 ) }
    dend_53 { pt3dadd( -1.74297, -162.791, 96.1062, 0.37 ) }
    dend_53 { pt3dadd( -3.17881, -171.906, 102.492, 0.37 ) }
    dend_53 { pt3dadd( -4.50166, -179.679, 110.35, 0.37 ) }
    dend_53 { pt3dadd( -7.06871, -188.302, 116.985, 0.37 ) }
    dend_53 { pt3dadd( -10.768, -197.479, 122.248, 0.37 ) }
    dend_53 { pt3dadd( -14.1637, -207.238, 126.697, 0.37 ) }
    dend_53 { pt3dadd( -15.8983, -216.528, 132.767, 0.37 ) }
    dend_53 { pt3dadd( -16.1594, -225.309, 139.723, 0.37 ) }
    dend_53 { pt3dadd( -19.0151, -233.338, 146.895, 0.37 ) }
    dend_53 { pt3dadd( -23.1987, -240.698, 154.055, 0.37 ) }
    dend_53 { pt3dadd( -27.9963, -247.719, 161.133, 0.37 ) }
    dend_53 { pt3dadd( -31.5994, -255.635, 168.07, 0.37 ) }
    dend_53 { pt3dadd( -36.75, -261.954, 175.491, 0.37 ) }
    dend_53 { pt3dadd( -41.0066, -268.978, 182.909, 0.37 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 88/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -2.55677, -96.5863, 24.7188, 1.03 ) }
    dend_52 { pt3dadd( -4.82672, -97.7897, 25.5547, 1.03 ) }
    dend_52 { pt3dadd( -6.44362, -98.7015, 26.2598, 1.03 ) }
    dend_52 { pt3dadd( -8.05797, -99.685, 27.1249, 1.03 ) }
    dend_52 { pt3dadd( -9.3085, -100.524, 27.8819, 0.96 ) }
    dend_52 { pt3dadd( -10.1382, -101.15, 28.4301, 0.96 ) }
    dend_52 { pt3dadd( -11.1065, -102.0, 29.1439, 0.96 ) }
    dend_52 { pt3dadd( -11.9843, -102.971, 29.8782, 0.66 ) }
    dend_52 { pt3dadd( -13.2951, -104.826, 31.208, 0.66 ) }
    dend_52 { pt3dadd( -13.8931, -105.832, 31.9495, 0.66 ) }
    dend_52 { pt3dadd( -14.5199, -106.908, 32.7778, 0.66 ) }
    dend_52 { pt3dadd( -15.358, -108.286, 33.7717, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_52 { pt3dadd( -15.8681, -109.127, 34.3067, 0.66 ) }
    dend_52 { pt3dadd( -16.3363, -109.891, 34.7492, 0.66 ) }
    dend_52 { pt3dadd( -16.9702, -110.883, 35.2961, 0.37 ) }
    dend_52 { pt3dadd( -17.7481, -111.903, 35.8793, 0.37 ) }
    dend_52 { pt3dadd( -18.6315, -112.813, 36.452, 0.52 ) }
    dend_52 { pt3dadd( -19.6707, -113.692, 37.0527, 0.52 ) }
    dend_52 { pt3dadd( -20.8256, -114.613, 37.7361, 0.37 ) }
    dend_52 { pt3dadd( -21.4319, -115.107, 38.1376, 0.37 ) }
    dend_52 { pt3dadd( -21.9716, -115.586, 38.5191, 0.37 ) }
    dend_52 { pt3dadd( -22.576, -116.146, 38.9858, 0.37 ) }
    dend_52 { pt3dadd( -22.8416, -116.363, 39.1969, 0.37 ) }
    dend_52 { pt3dadd( -23.4201, -116.729, 39.5283, 0.37 ) }
    dend_52 { pt3dadd( -24.0218, -117.05, 39.8167, 0.37 ) }
    dend_52 { pt3dadd( -29.1949, -122.829, 45.4304, 0.37 ) }
    dend_52 { pt3dadd( -34.2309, -128.385, 51.3658, 0.37 ) }
    dend_52 { pt3dadd( -38.7299, -135.504, 56.094, 0.37 ) }
    dend_52 { pt3dadd( -41.6658, -143.96, 59.9822, 0.37 ) }
    dend_52 { pt3dadd( -44.1162, -153.125, 62.5039, 0.37 ) }
    dend_52 { pt3dadd( -45.1727, -162.573, 65.0702, 0.37 ) }
    dend_52 { pt3dadd( -46.9023, -171.865, 67.7716, 0.37 ) }
    dend_52 { pt3dadd( -48.157, -181.391, 69.9476, 0.37 ) }
    dend_52 { pt3dadd( -47.6471, -191.035, 71.9809, 0.37 ) }
    dend_52 { pt3dadd( -46.8414, -200.478, 74.6837, 0.37 ) }
    dend_52 { pt3dadd( -46.5447, -209.403, 78.7492, 0.37 ) }
    dend_52 { pt3dadd( -47.1117, -217.94, 83.4836, 0.37 ) }
    dend_52 { pt3dadd( -47.1557, -225.665, 89.3816, 0.37 ) }
    dend_52 { pt3dadd( -46.3947, -232.474, 96.1901, 0.37 ) }
    dend_52 { pt3dadd( -45.019, -237.893, 103.965, 0.37 ) }
    dend_52 { pt3dadd( -45.0941, -241.585, 112.71, 0.37 ) }
    dend_52 { pt3dadd( -43.7346, -244.644, 121.571, 0.37 ) }
    dend_52 { pt3dadd( -42.3771, -248.008, 130.333, 0.37 ) }
    dend_52 { pt3dadd( -40.7648, -252.802, 138.427, 0.37 ) }
    dend_52 { pt3dadd( -38.4568, -258.358, 145.891, 0.37 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 33/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -16.4037, -56.2416, -1.54886, 1.18 ) }
    dend_42 { pt3dadd( -16.5792, -57.4042, -2.83591, 1.18 ) }
    dend_42 { pt3dadd( -16.6639, -59.3417, -4.97083, 1.18 ) }
    dend_42 { pt3dadd( -16.556, -60.9437, -6.42415, 1.4 ) }
    dend_42 { pt3dadd( -16.452, -62.1436, -7.3906, 1.69 ) }
    dend_42 { pt3dadd( -16.3853, -63.137, -8.18115, 1.69 ) }
    dend_42 { pt3dadd( -16.3127, -65.0024, -9.61568, 1.69 ) }
    dend_42 { pt3dadd( -16.2746, -65.9419, -10.313, 1.69 ) }
    dend_42 { pt3dadd( -16.1669, -68.6526, -12.0313, 1.4 ) }
    dend_42 { pt3dadd( -16.1264, -69.7873, -12.7159, 1.4 ) }
    dend_42 { pt3dadd( -16.0924, -71.8531, -13.966, 1.4 ) }
    dend_42 { pt3dadd( -16.1516, -73.892, -15.2069, 1.4 ) }
    dend_42 { pt3dadd( -16.3073, -76.0158, -16.5681, 1.4 ) }
    dend_42 { pt3dadd( -16.4837, -77.84, -17.7879, 1.4 ) }
    dend_42 { pt3dadd( -16.7061, -79.8879, -19.2639, 1.55 ) }
    dend_42 { pt3dadd( -16.83, -81.4572, -20.3779, 1.55 ) }
    dend_42 { pt3dadd( -16.9585, -83.8705, -22.0165, 1.55 ) }
    dend_42 { pt3dadd( -17.0694, -86.0154, -23.5639, 1.4 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 51/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -16.4037, -56.2416, -1.54886, 0.88 ) }
    dend_41 { pt3dadd( -18.1035, -57.0211, -1.56317, 0.88 ) }
    dend_41 { pt3dadd( -18.9878, -57.414, -1.56949, 0.88 ) }
    dend_41 { pt3dadd( -20.0496, -57.8711, -1.57581, 0.66 ) }
    dend_41 { pt3dadd( -22.0014, -58.6658, -1.58434, 0.66 ) }
    dend_41 { pt3dadd( -23.6622, -59.3067, -1.58969, 0.66 ) }
    dend_41 { pt3dadd( -24.8779, -59.7659, -1.59208, 0.81 ) }
    dend_41 { pt3dadd( -26.5882, -60.4509, -1.6043, 0.81 ) }
    dend_41 { pt3dadd( -27.4686, -60.8736, -1.6057, 0.81 ) }
    dend_41 { pt3dadd( -29.0297, -61.7608, -1.59518, 0.59 ) }
    dend_41 { pt3dadd( -29.7949, -62.2499, -1.5581, 0.59 ) }
    dend_41 { pt3dadd( -31.3094, -63.2612, -1.42295, 0.59 ) }
    dend_41 { pt3dadd( -32.6474, -64.2126, -1.25158, 0.59 ) }
    dend_41 { pt3dadd( -33.9606, -65.2421, -1.03491, 0.59 ) }
    dend_41 { pt3dadd( -35.1199, -66.2324, -0.811302, 0.59 ) }
    dend_41 { pt3dadd( -36.5618, -67.6008, -0.496074, 0.96 ) }
    dend_41 { pt3dadd( -37.3918, -68.4168, -0.287345, 0.96 ) }
    dend_41 { pt3dadd( -37.693, -68.6925, -0.20064, 0.96 ) }
    dend_41 { pt3dadd( -38.6641, -69.4431, 0.096188, 0.29 ) }
    dend_41 { pt3dadd( -39.4846, -70.0268, 0.359056, 0.29 ) }
    dend_41 { pt3dadd( -40.6334, -70.9078, 0.718686, 0.29 ) }
    dend_41 { pt3dadd( -41.1398, -71.336, 0.837735, 0.29 ) }
    dend_41 { pt3dadd( -42.4898, -72.5158, 1.04415, 0.29 ) }
    dend_41 { pt3dadd( -43.0659, -72.9735, 1.08874, 0.29 ) }
    dend_41 { pt3dadd( -43.4861, -73.2496, 1.09375, 0.29 ) }
    dend_41 { pt3dadd( -44.948, -74.1905, 1.00813, 0.29 ) }
    dend_41 { pt3dadd( -46.0804, -74.9331, 0.856822, 0.29 ) }
    dend_41 { pt3dadd( -47.3146, -75.7046, 0.600856, 0.29 ) }
    dend_41 { pt3dadd( -48.605, -76.433, 0.301366, 0.29 ) }
    dend_41 { pt3dadd( -49.8421, -77.0376, 0.0542111, 0.29 ) }
    dend_41 { pt3dadd( -51.3915, -77.6596, -0.164898, 0.29 ) }
    dend_41 { pt3dadd( -51.9922, -77.8622, -0.216462, 0.29 ) }
    dend_41 { pt3dadd( -54.2263, -78.5845, -0.331717, 0.29 ) }
    dend_41 { pt3dadd( -56.9108, -79.3987, -0.423089, 0.52 ) }
    dend_41 { pt3dadd( -59.7242, -80.192, -0.493831, 0.52 ) }
    dend_41 { pt3dadd( -64.0875, -81.347, -0.49801, 0.52 ) }
    dend_41 { pt3dadd( -69.7014, -82.7083, -0.219094, 0.52 ) }
    dend_41 { pt3dadd( -72.6306, -83.4149, 0.0918679, 0.52 ) }
    dend_41 { pt3dadd( -74.8615, -83.9761, 0.461833, 0.37 ) }
    dend_41 { pt3dadd( -76.1452, -84.2887, 0.757196, 0.37 ) }
    dend_41 { pt3dadd( -77.5976, -84.602, 1.22354, 0.37 ) }
    dend_41 { pt3dadd( -80.3915, -85.1279, 2.43316, 0.37 ) }
    dend_41 { pt3dadd( -83.8338, -85.7308, 4.27433, 0.37 ) }
    dend_41 { pt3dadd( -85.1868, -85.9717, 5.04969, 0.37 ) }
    dend_41 { pt3dadd( -86.561, -86.2288, 5.85325, 0.37 ) }
    dend_41 { pt3dadd( -88.3727, -86.5501, 6.84012, 0.29 ) }
    dend_41 { pt3dadd( -89.1089, -86.6587, 7.19667, 0.29 ) }
    dend_41 { pt3dadd( -90.8522, -86.8553, 7.93781, 0.29 ) }
    dend_41 { pt3dadd( -92.3805, -86.9764, 8.55795, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( -93.8921, -87.1159, 9.10544, 0.66 ) }
    dend_41 { pt3dadd( -95.3281, -87.2667, 9.54913, 0.66 ) }
    dend_41 { pt3dadd( -96.3838, -87.3881, 9.79852, 0.66 ) }
    dend_41 { pt3dadd( -97.0697, -87.4632, 9.9242, 0.66 ) }
    dend_41 { pt3dadd( -99.5245, -87.819, 10.242, 0.66 ) }
    dend_41 { pt3dadd( -102.46, -88.4217, 10.4496, 0.81 ) }
    dend_41 { pt3dadd( -104.077, -88.8754, 10.4771, 0.81 ) }
    dend_41 { pt3dadd( -105.987, -89.5342, 10.4426, 0.66 ) }
    dend_41 { pt3dadd( -107.177, -90.0122, 10.3932, 0.66 ) }
    dend_41 { pt3dadd( -108.951, -90.724, 10.226, 0.66 ) }
    dend_41 { pt3dadd( -110.119, -91.1506, 10.0316, 0.66 ) }
    dend_41 { pt3dadd( -111.778, -91.6694, 9.71346, 0.66 ) }
    dend_41 { pt3dadd( -114.382, -92.4097, 9.18005, 0.66 ) }
    dend_41 { pt3dadd( -116.443, -92.9291, 8.75318, 0.66 ) }
    dend_41 { pt3dadd( -121.627, -94.0215, 7.66527, 0.66 ) }
    dend_41 { pt3dadd( -124.667, -94.514, 6.9237, 0.66 ) }
    dend_41 { pt3dadd( -126.624, -94.7876, 6.39213, 0.74 ) }
    dend_41 { pt3dadd( -128.136, -94.9789, 5.89905, 0.74 ) }
    dend_41 { pt3dadd( -128.695, -95.0513, 5.65834, 0.74 ) }
    dend_41 { pt3dadd( -129.921, -95.2569, 5.0319, 0.74 ) }
    dend_41 { pt3dadd( -131.452, -95.6875, 4.0261, 0.74 ) }
    dend_41 { pt3dadd( -132.6, -96.1036, 3.04613, 0.74 ) }
    dend_41 { pt3dadd( -134.195, -96.7241, 1.245, 0.74 ) }
    dend_41 { pt3dadd( -135.468, -97.1977, -0.456051, 0.81 ) }
    dend_41 { pt3dadd( -136.13, -97.443, -1.52401, 0.81 ) }
    dend_41 { pt3dadd( -136.938, -97.6999, -3.10439, 0.88 ) }
    dend_41 { pt3dadd( -137.727, -97.8366, -4.91443, 0.88 ) }
    dend_41 { pt3dadd( -138.436, -97.7754, -6.93391, 0.88 ) }
    dend_41 { pt3dadd( -138.645, -97.6602, -7.69791, 0.88 ) }
    dend_41 { pt3dadd( -139.018, -97.2577, -9.37579, 0.74 ) }
    dend_41 { pt3dadd( -139.327, -96.7454, -11.1064, 0.74 ) }
    dend_41 { pt3dadd( -139.544, -96.2552, -12.5929, 0.74 ) }
    dend_41 { pt3dadd( -139.691, -95.8804, -13.6039, 0.74 ) }
    dend_41 { pt3dadd( -139.984, -95.2203, -15.3444, 0.52 ) }
    dend_41 { pt3dadd( -140.095, -95.0111, -15.9512, 0.52 ) }
    dend_41 { pt3dadd( -140.405, -94.5205, -17.7195, 0.52 ) }
    dend_41 { pt3dadd( -140.819, -94.0261, -20.3166, 0.52 ) }
    dend_41 { pt3dadd( -141.011, -93.8696, -21.5741, 0.52 ) }
    dend_41 { pt3dadd( -141.214, -93.7554, -22.9138, 0.52 ) }
    dend_41 { pt3dadd( -141.354, -93.7028, -23.8241, 0.52 ) }
    dend_41 { pt3dadd( -141.666, -93.5244, -26.4112, 0.52 ) }
    dend_41 { pt3dadd( -141.727, -93.4456, -27.2266, 0.52 ) }
    dend_41 { pt3dadd( -141.729, -93.3849, -27.7192, 0.52 ) }
    dend_41 { pt3dadd( -141.695, -93.2726, -28.5145, 0.29 ) }
    dend_41 { pt3dadd( -141.667, -93.1671, -29.1446, 0.29 ) }
    dend_41 { pt3dadd( -141.608, -92.9517, -30.3553, 0.29 ) }
    dend_41 { pt3dadd( -141.564, -92.831, -31.1274, 0.29 ) }
    dend_41 { pt3dadd( -141.347, -92.4319, -34.1037, 0.29 ) }
    dend_41 { pt3dadd( -141.231, -92.2996, -35.2469, 0.29 ) }
    dend_41 { pt3dadd( -140.93, -92.0798, -37.3565, 0.29 ) }
    dend_41 { pt3dadd( -140.659, -91.9186, -38.6835, 0.29 ) }
    dend_41 { pt3dadd( -140.187, -91.68, -40.3321, 0.29 ) }
    dend_41 { pt3dadd( -139.771, -91.5102, -41.4174, 0.29 ) }
    dend_41 { pt3dadd( -139.086, -91.3133, -42.7114, 0.29 ) }
    dend_41 { pt3dadd( -138.6, -91.1933, -43.472, 0.15 ) }
    dend_41 { pt3dadd( -137.695, -90.9563, -44.733, 0.15 ) }
    dend_41 { pt3dadd( -137.1, -90.7826, -45.531, 0.15 ) }
    dend_41 { pt3dadd( -136.414, -90.5713, -46.4534, 0.15 ) }
    dend_41 { pt3dadd( -135.563, -90.3007, -47.719, 0.15 ) }
    dend_41 { pt3dadd( -134.908, -90.1048, -48.8222, 0.15 ) }
    dend_41 { pt3dadd( -134.363, -89.9623, -49.9092, 0.15 ) }
    dend_41 { pt3dadd( -134.013, -89.8781, -50.6842, 0.15 ) }
    dend_41 { pt3dadd( -133.163, -89.6467, -52.6646, 0.15 ) }
    dend_41 { pt3dadd( -132.22, -89.334, -54.9153, 0.15 ) }
    dend_41 { pt3dadd( -131.859, -89.2006, -55.8521, 0.15 ) }
    dend_41 { pt3dadd( -131.369, -89.0806, -57.206, 0.15 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 66/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 6.44098, 47.4949, 6.957, 0.59 ) }
    dend_34 { pt3dadd( 7.62105, 48.2951, 6.62268, 0.59 ) }
    dend_34 { pt3dadd( 8.29567, 48.8032, 6.45118, 0.52 ) }
    dend_34 { pt3dadd( 9.41713, 49.6922, 6.20199, 0.52 ) }
    dend_34 { pt3dadd( 10.9683, 50.9734, 5.9261, 0.44 ) }
    dend_34 { pt3dadd( 11.7246, 51.6126, 5.80631, 0.44 ) }
    dend_34 { pt3dadd( 12.8087, 52.5142, 5.59596, 0.44 ) }
    dend_34 { pt3dadd( 14.4133, 53.7913, 5.27487, 0.44 ) }
    dend_34 { pt3dadd( 15.6923, 54.8293, 5.03931, 0.44 ) }
    dend_34 { pt3dadd( 17.5048, 56.3446, 4.74573, 0.44 ) }
    dend_34 { pt3dadd( 18.3404, 57.0582, 4.62673, 0.44 ) }
    dend_34 { pt3dadd( 19.8872, 58.3544, 4.40411, 0.44 ) }
    dend_34 { pt3dadd( 21.1876, 59.4319, 4.251, 0.59 ) }
    dend_34 { pt3dadd( 22.3235, 60.3363, 4.14517, 0.59 ) }
    dend_34 { pt3dadd( 25.6458, 62.9363, 3.92965, 0.74 ) }
    dend_34 { pt3dadd( 27.3449, 64.2516, 3.87578, 0.74 ) }
    dend_34 { pt3dadd( 29.393, 65.8467, 3.88569, 0.74 ) }
    dend_34 { pt3dadd( 31.351, 67.3739, 3.9602, 0.74 ) }
    dend_34 { pt3dadd( 32.7329, 68.464, 3.97806, 0.44 ) }
    dend_34 { pt3dadd( 33.8487, 69.3404, 3.97275, 0.44 ) }
    dend_34 { pt3dadd( 35.4742, 70.6078, 3.94853, 0.29 ) }
    dend_34 { pt3dadd( 36.2807, 71.2218, 3.91745, 0.29 ) }
    dend_34 { pt3dadd( 38.7863, 73.0835, 3.72128, 0.29 ) }
    dend_34 { pt3dadd( 41.849, 75.3163, 3.41809, 0.15 ) }
    dend_34 { pt3dadd( 44.2308, 77.0281, 3.16425, 0.15 ) }
    dend_34 { pt3dadd( 46.2439, 78.4217, 2.94266, 0.15 ) }
    dend_34 { pt3dadd( 48.1718, 79.6882, 2.78534, 0.15 ) }
    dend_34 { pt3dadd( 50.724, 81.3051, 2.66726, 0.15 ) }
    dend_34 { pt3dadd( 52.1543, 82.2053, 2.67418, 0.07 ) }
    dend_34 { pt3dadd( 53.6669, 83.1345, 2.7941, 0.07 ) }
    dend_34 { pt3dadd( 55.0945, 84.0662, 2.99717, 0.07 ) }
    dend_34 { pt3dadd( 56.6203, 85.1228, 3.34434, 0.07 ) }
    dend_34 { pt3dadd( 57.0988, 85.4881, 3.48596, 0.07 ) }
    dend_34 { pt3dadd( 58.0136, 86.2642, 3.81125, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_34 { pt3dadd( 58.6167, 86.8246, 3.95692, 0.07 ) }
    dend_34 { pt3dadd( 59.0791, 87.2962, 4.0534, 0.07 ) }
    dend_34 { pt3dadd( 59.8739, 88.0916, 4.15782, 0.07 ) }
    dend_34 { pt3dadd( 61.3441, 89.3713, 4.30681, 0.07 ) }
    dend_34 { pt3dadd( 62.2993, 90.0735, 4.46064, 0.22 ) }
    dend_34 { pt3dadd( 63.2924, 90.7046, 4.68873, 0.22 ) }
    dend_34 { pt3dadd( 64.9323, 91.6702, 5.24114, 0.22 ) }
    dend_34 { pt3dadd( 65.7283, 92.0866, 5.60981, 0.22 ) }
    dend_34 { pt3dadd( 67.0872, 92.7124, 6.42477, 0.44 ) }
    dend_34 { pt3dadd( 67.9576, 93.03, 7.03103, 0.44 ) }
    dend_34 { pt3dadd( 68.4862, 93.202, 7.3947, 0.44 ) }
    dend_34 { pt3dadd( 69.2427, 93.4622, 7.92438, 0.44 ) }
    dend_34 { pt3dadd( 70.5677, 94.0161, 8.77356, 0.44 ) }
    dend_34 { pt3dadd( 71.6087, 94.558, 9.34889, 0.22 ) }
    dend_34 { pt3dadd( 72.6991, 95.2397, 9.86929, 0.22 ) }
    dend_34 { pt3dadd( 74.217, 96.2942, 10.5316, 0.37 ) }
    dend_34 { pt3dadd( 75.2253, 97.0684, 10.9429, 0.37 ) }
    dend_34 { pt3dadd( 76.6267, 98.3327, 11.4208, 0.37 ) }
    dend_34 { pt3dadd( 78.0157, 99.8512, 11.8098, 0.37 ) }
    dend_34 { pt3dadd( 78.8707, 100.992, 12.0081, 0.37 ) }
    dend_34 { pt3dadd( 79.6376, 102.216, 12.1851, 0.37 ) }
    dend_34 { pt3dadd( 80.2001, 103.236, 12.3142, 0.37 ) }
    dend_34 { pt3dadd( 81.5788, 105.832, 12.6589, 0.37 ) }
    dend_34 { pt3dadd( 82.2424, 107.135, 12.8602, 0.59 ) }
    dend_34 { pt3dadd( 82.9225, 108.446, 13.078, 0.74 ) }
    dend_34 { pt3dadd( 83.8289, 110.092, 13.3759, 0.74 ) }
    dend_34 { pt3dadd( 84.7371, 111.628, 13.7172, 0.74 ) }
    dend_34 { pt3dadd( 85.6262, 113.023, 14.1367, 0.74 ) }
    dend_34 { pt3dadd( 86.3843, 114.112, 14.5776, 0.74 ) }
    dend_34 { pt3dadd( 87.3196, 115.318, 15.1207, 0.74 ) }
    dend_34 { pt3dadd( 88.1684, 116.348, 15.6111, 0.96 ) }
    dend_34 { pt3dadd( 88.6687, 116.951, 15.9014, 0.96 ) }
    dend_34 { pt3dadd( 89.2715, 117.662, 16.2393, 0.96 ) }
    dend_34 { pt3dadd( 89.6738, 118.132, 16.4533, 0.96 ) }
    dend_34 { pt3dadd( 90.9346, 119.62, 17.1461, 1.18 ) }
    dend_34 { pt3dadd( 91.8546, 120.803, 17.6806, 1.18 ) }
    dend_34 { pt3dadd( 92.3811, 121.542, 17.9764, 1.18 ) }
    dend_34 { pt3dadd( 93.4238, 123.209, 18.56, 1.03 ) }
    dend_34 { pt3dadd( 94.172, 124.585, 19.0311, 1.03 ) }
    dend_34 { pt3dadd( 94.5727, 125.455, 19.3268, 1.03 ) }
    dend_34 { pt3dadd( 94.9691, 126.577, 19.7119, 1.03 ) }
    dend_34 { pt3dadd( 95.2797, 127.694, 20.0711, 0.74 ) }
    dend_34 { pt3dadd( 95.5022, 128.831, 20.4471, 0.59 ) }
    dend_34 { pt3dadd( 95.5984, 129.89, 20.8254, 0.59 ) }
    dend_34 { pt3dadd( 95.6412, 130.612, 21.0686, 0.59 ) }
    dend_34 { pt3dadd( 95.7674, 131.66, 21.4541, 0.59 ) }
    dend_34 { pt3dadd( 104.063, 137.798, 23.2546, 0.59 ) }
    dend_34 { pt3dadd( 112.812, 143.433, 24.2198, 0.59 ) }
    dend_34 { pt3dadd( 122.087, 147.891, 25.7213, 0.59 ) }
    dend_34 { pt3dadd( 131.353, 152.633, 25.9788, 0.59 ) }
    dend_34 { pt3dadd( 140.698, 156.5, 28.3149, 0.59 ) }
    dend_34 { pt3dadd( 150.04, 159.156, 31.8892, 0.59 ) }
    dend_34 { pt3dadd( 158.953, 163.494, 35.023, 0.59 ) }
    dend_34 { pt3dadd( 168.168, 168.29, 35.7453, 0.59 ) }
    dend_34 { pt3dadd( 177.282, 173.001, 37.5102, 0.59 ) }
    dend_34 { pt3dadd( 186.488, 176.972, 40.2118, 0.59 ) }
    dend_34 { pt3dadd( 195.267, 181.623, 43.3115, 0.59 ) }
    dend_34 { pt3dadd( 204.258, 185.769, 46.4596, 0.59 ) }
    dend_34 { pt3dadd( 213.344, 190.413, 48.5069, 0.59 ) }
    dend_34 { pt3dadd( 222.087, 195.523, 50.9856, 0.59 ) }
    dend_34 { pt3dadd( 231.339, 199.313, 53.7652, 0.59 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 61/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 6.44098, 47.4949, 6.957, 0.44 ) }
    dend_33 { pt3dadd( 6.8266, 49.1966, 7.98638, 0.44 ) }
    dend_33 { pt3dadd( 7.29988, 50.6541, 9.06644, 0.44 ) }
    dend_33 { pt3dadd( 7.63513, 51.3887, 9.76751, 0.37 ) }
    dend_33 { pt3dadd( 8.22883, 52.4376, 10.9839, 0.37 ) }
    dend_33 { pt3dadd( 8.64397, 53.0155, 11.8219, 0.44 ) }
    dend_33 { pt3dadd( 8.97933, 53.4093, 12.5087, 0.74 ) }
    dend_33 { pt3dadd( 9.48059, 53.7682, 13.4803, 0.74 ) }
    dend_33 { pt3dadd( 10.1246, 54.0661, 14.7717, 0.74 ) }
    dend_33 { pt3dadd( 10.4428, 54.2052, 15.4081, 0.74 ) }
    dend_33 { pt3dadd( 11.0969, 54.5148, 16.7606, 0.74 ) }
    dend_33 { pt3dadd( 11.6131, 54.8657, 17.9052, 0.74 ) }
    dend_33 { pt3dadd( 11.847, 55.0895, 18.5451, 0.74 ) }
    dend_33 { pt3dadd( 12.1446, 55.5655, 19.7027, 0.74 ) }
    dend_33 { pt3dadd( 12.355, 56.2866, 21.1346, 0.96 ) }
    dend_33 { pt3dadd( 12.4125, 56.8293, 22.059, 0.96 ) }
    dend_33 { pt3dadd( 12.3797, 57.9309, 23.7277, 0.66 ) }
    dend_33 { pt3dadd( 12.336, 58.7909, 24.8952, 0.52 ) }
    dend_33 { pt3dadd( 12.3503, 59.2905, 25.5847, 0.52 ) }
    dend_33 { pt3dadd( 12.4139, 59.8553, 26.4067, 0.66 ) }
    dend_33 { pt3dadd( 12.5822, 60.5854, 27.5771, 0.66 ) }
    dend_33 { pt3dadd( 12.7059, 60.8515, 28.0077, 0.66 ) }
    dend_33 { pt3dadd( 13.1924, 61.5016, 29.0038, 0.66 ) }
    dend_33 { pt3dadd( 14.2262, 62.6028, 30.6538, 0.66 ) }
    dend_33 { pt3dadd( 14.7948, 63.1748, 31.483, 0.66 ) }
    dend_33 { pt3dadd( 15.3684, 63.7478, 32.3143, 0.81 ) }
    dend_33 { pt3dadd( 16.2039, 64.6003, 33.541, 0.81 ) }
    dend_33 { pt3dadd( 17.0093, 65.5055, 34.8391, 0.66 ) }
    dend_33 { pt3dadd( 17.8231, 66.5539, 36.3348, 0.66 ) }
    dend_33 { pt3dadd( 18.3034, 67.2879, 37.3414, 0.66 ) }
    dend_33 { pt3dadd( 18.5367, 67.6775, 37.8664, 0.66 ) }
    dend_33 { pt3dadd( 18.6908, 67.9577, 38.2478, 0.66 ) }
    dend_33 { pt3dadd( 19.1243, 68.8595, 39.4951, 0.66 ) }
    dend_33 { pt3dadd( 19.3024, 69.2206, 40.0316, 0.66 ) }
    dend_33 { pt3dadd( 19.7497, 69.9372, 41.0033, 0.66 ) }
    dend_33 { pt3dadd( 20.5725, 70.9901, 42.1791, 0.66 ) }
    dend_33 { pt3dadd( 20.8833, 71.3736, 42.509, 0.66 ) }
    dend_33 { pt3dadd( 21.3916, 71.9776, 42.9059, 0.66 ) }
    dend_33 { pt3dadd( 22.3642, 73.0557, 43.4457, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_33 { pt3dadd( 23.4008, 74.1919, 43.9423, 0.52 ) }
    dend_33 { pt3dadd( 24.4545, 75.3906, 44.3567, 0.52 ) }
    dend_33 { pt3dadd( 25.2256, 76.3028, 44.6239, 0.44 ) }
    dend_33 { pt3dadd( 26.1098, 77.3917, 44.8729, 0.44 ) }
    dend_33 { pt3dadd( 26.554, 77.9707, 44.9518, 0.44 ) }
    dend_33 { pt3dadd( 32.4513, 84.8444, 53.1749, 0.44 ) }
    dend_33 { pt3dadd( 39.6174, 89.4775, 61.8055, 0.44 ) }
    dend_33 { pt3dadd( 47.5452, 94.2411, 69.6688, 0.44 ) }
    dend_33 { pt3dadd( 55.0715, 98.1547, 78.3179, 0.44 ) }
    dend_33 { pt3dadd( 64.3004, 100.684, 85.6947, 0.44 ) }
    dend_33 { pt3dadd( 73.9716, 101.557, 92.8575, 0.44 ) }
    dend_33 { pt3dadd( 84.6517, 99.6349, 98.1862, 0.44 ) }
    dend_33 { pt3dadd( 94.5884, 96.5619, 104.398, 0.44 ) }
    dend_33 { pt3dadd( 103.361, 92.6475, 111.817, 0.44 ) }
    dend_33 { pt3dadd( 111.874, 88.5785, 119.46, 0.44 ) }
    dend_33 { pt3dadd( 119.007, 82.8063, 127.512, 0.44 ) }
    dend_33 { pt3dadd( 127.596, 78.5882, 134.997, 0.44 ) }
    dend_33 { pt3dadd( 135.549, 75.5985, 143.625, 0.44 ) }
    dend_33 { pt3dadd( 144.836, 74.8875, 151.303, 0.44 ) }
    dend_33 { pt3dadd( 154.146, 76.3947, 158.836, 0.44 ) }
    dend_33 { pt3dadd( 163.665, 79.0865, 165.777, 0.44 ) }
    dend_33 { pt3dadd( 172.379, 83.4191, 173.009, 0.44 ) }
    dend_33 { pt3dadd( 181.673, 87.7319, 179.488, 0.44 ) }
    dend_33 { pt3dadd( 191.344, 93.4506, 184.167, 0.44 ) }
    dend_33 { pt3dadd( 201.165, 97.4187, 190.04, 0.44 ) }
    dend_33 { pt3dadd( 211.492, 101.953, 194.499, 0.44 ) }
    dend_33 { pt3dadd( 221.688, 106.981, 198.766, 0.44 ) }
    dend_33 { pt3dadd( 232.415, 109.56, 203.691, 0.44 ) }
    dend_33 { pt3dadd( 243.932, 112.267, 206.145, 0.44 ) }
    dend_33 { pt3dadd( 255.424, 112.672, 209.798, 0.44 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 30/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -1.10291, 56.3776, 21.9067, 0.74 ) }
    dend_31 { pt3dadd( -0.566778, 57.1302, 22.0822, 0.74 ) }
    dend_31 { pt3dadd( 0.352155, 58.4946, 22.412, 0.74 ) }
    dend_31 { pt3dadd( 1.10883, 59.6609, 22.6548, 0.96 ) }
    dend_31 { pt3dadd( 1.5811, 60.3747, 22.7705, 0.96 ) }
    dend_31 { pt3dadd( 1.93438, 60.8911, 22.836, 0.96 ) }
    dend_31 { pt3dadd( 2.54565, 61.7308, 22.9083, 0.59 ) }
    dend_31 { pt3dadd( 2.86321, 62.1314, 22.9193, 0.59 ) }
    dend_31 { pt3dadd( 3.25111, 62.5442, 22.8651, 0.37 ) }
    dend_31 { pt3dadd( 3.789, 63.1183, 22.7246, 0.37 ) }
    dend_31 { pt3dadd( 4.00099, 63.3667, 22.6607, 0.37 ) }
    dend_31 { pt3dadd( 4.44404, 63.9442, 22.5266, 0.37 ) }
    dend_31 { pt3dadd( 4.92335, 64.6576, 22.4188, 0.37 ) }
    dend_31 { pt3dadd( 5.30128, 65.3266, 22.3621, 0.37 ) }
    dend_31 { pt3dadd( 5.74688, 66.077, 22.3579, 0.37 ) }
    dend_31 { pt3dadd( 6.25569, 66.9338, 22.3793, 0.37 ) }
    dend_31 { pt3dadd( 6.51686, 67.3841, 22.4074, 0.37 ) }
    dend_31 { pt3dadd( 6.97221, 68.2824, 22.4969, 0.52 ) }
    dend_31 { pt3dadd( 7.65117, 69.8413, 22.6813, 0.66 ) }
    dend_31 { pt3dadd( 8.21594, 71.3913, 22.8524, 0.66 ) }
    dend_31 { pt3dadd( 8.51686, 72.3638, 22.9472, 0.66 ) }
    dend_31 { pt3dadd( 8.83282, 73.5766, 23.0394, 0.52 ) }
    dend_31 { pt3dadd( 9.17145, 75.208, 23.1942, 0.74 ) }
    dend_31 { pt3dadd( 9.35126, 76.3369, 23.3212, 0.74 ) }
    dend_31 { pt3dadd( 9.66891, 78.6194, 23.6115, 0.74 ) }
    dend_31 { pt3dadd( 9.88813, 80.1822, 23.808, 0.88 ) }
    dend_31 { pt3dadd( 10.4589, 83.2949, 24.3187, 0.88 ) }
    dend_31 { pt3dadd( 10.7895, 84.6268, 24.6033, 0.88 ) }
    dend_31 { pt3dadd( 10.9904, 85.2289, 24.7693, 0.81 ) }
    dend_31 { pt3dadd( 11.4149, 86.2657, 25.1232, 0.81 ) }
    dend_31 { pt3dadd( 12.0084, 87.5793, 25.6256, 0.81 ) }
    dend_31 { pt3dadd( 12.7103, 89.1638, 26.2304, 0.81 ) }
    dend_31 { pt3dadd( 13.1885, 90.2968, 26.6441, 0.81 ) }
    dend_31 { pt3dadd( 13.6391, 91.4239, 27.0076, 0.44 ) }
    dend_31 { pt3dadd( 13.9433, 92.2978, 27.2739, 0.44 ) }
    dend_31 { pt3dadd( 14.3597, 93.7318, 27.6923, 0.44 ) }
    dend_31 { pt3dadd( 14.6286, 94.7438, 27.9627, 0.44 ) }
    dend_31 { pt3dadd( 15.0876, 96.5722, 28.3626, 0.44 ) }
    dend_31 { pt3dadd( 15.5513, 98.5508, 28.7935, 0.44 ) }
    dend_31 { pt3dadd( 15.7175, 99.2991, 28.9792, 0.44 ) }
    dend_31 { pt3dadd( 15.9669, 100.414, 29.2845, 0.44 ) }
    dend_31 { pt3dadd( 16.1329, 101.075, 29.4998, 0.44 ) }
    dend_31 { pt3dadd( 16.2584, 101.474, 29.6205, 0.44 ) }
    dend_31 { pt3dadd( 16.4809, 102.126, 29.7859, 0.44 ) }
    dend_31 { pt3dadd( 16.6624, 102.64, 29.8931, 0.44 ) }
    dend_31 { pt3dadd( 17.002, 103.499, 30.0739, 0.44 ) }
    dend_31 { pt3dadd( 17.4447, 104.515, 30.2881, 0.44 ) }
    dend_31 { pt3dadd( 18.5443, 106.824, 30.8255, 0.44 ) }
    dend_31 { pt3dadd( 18.6747, 107.063, 30.8851, 0.44 ) }
    dend_31 { pt3dadd( 22.4018, 114.973, 33.2723, 0.44 ) }
    dend_31 { pt3dadd( 25.0784, 123.551, 34.8562, 0.44 ) }
    dend_31 { pt3dadd( 27.7872, 131.643, 37.9734, 0.44 ) }
    dend_31 { pt3dadd( 30.6082, 139.506, 41.4968, 0.44 ) }
    dend_31 { pt3dadd( 33.1009, 147.084, 45.7641, 0.44 ) }
    dend_31 { pt3dadd( 34.8954, 154.976, 49.8705, 0.44 ) }
    dend_31 { pt3dadd( 37.2004, 163.014, 53.4168, 0.44 ) }
    dend_31 { pt3dadd( 38.5068, 170.357, 58.5203, 0.44 ) }
    dend_31 { pt3dadd( 39.1738, 177.396, 64.1187, 0.44 ) }
    dend_31 { pt3dadd( 38.7844, 184.557, 69.6117, 0.44 ) }
    dend_31 { pt3dadd( 37.3584, 191.669, 75.0014, 0.44 ) }
    dend_31 { pt3dadd( 35.2798, 198.498, 80.5147, 0.44 ) }
    dend_31 { pt3dadd( 33.5214, 206.3, 84.8381, 0.44 ) }
    dend_31 { pt3dadd( 29.8875, 214.02, 87.9916, 0.44 ) }
    dend_31 { pt3dadd( 27.0138, 222.459, 90.0623, 0.44 ) }
    dend_31 { pt3dadd( 24.913, 231.406, 90.1797, 0.44 ) }
    dend_31 { pt3dadd( 24.137, 240.472, 88.8837, 0.44 ) }
    dend_31 { pt3dadd( 24.3955, 249.04, 85.7174, 0.44 ) }
    dend_31 { pt3dadd( 24.2657, 258.028, 83.8604, 0.44 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 98/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -1.10291, 56.3776, 21.9067, 1.47 ) }
    dend_30 { pt3dadd( -2.38015, 58.8232, 24.1767, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_30 { pt3dadd( -2.9284, 59.9336, 25.3138, 1.03 ) }
    dend_30 { pt3dadd( -3.21874, 60.7194, 26.179, 0.59 ) }
    dend_30 { pt3dadd( -3.30117, 61.0243, 26.5064, 0.59 ) }
    dend_30 { pt3dadd( -3.49611, 61.8642, 27.3845, 0.81 ) }
    dend_30 { pt3dadd( -3.71232, 62.7722, 28.289, 0.81 ) }
    dend_30 { pt3dadd( -3.92468, 63.5563, 28.9969, 0.96 ) }
    dend_30 { pt3dadd( -4.24247, 64.853, 29.9773, 0.96 ) }
    dend_30 { pt3dadd( -4.44953, 65.6665, 30.5255, 0.59 ) }
    dend_30 { pt3dadd( -4.89339, 67.2178, 31.4311, 0.59 ) }
    dend_30 { pt3dadd( -5.22866, 68.2228, 31.9305, 0.74 ) }
    dend_30 { pt3dadd( -5.77155, 69.5734, 32.5239, 0.96 ) }
    dend_30 { pt3dadd( -6.72703, 71.6449, 33.3314, 1.11 ) }
    dend_30 { pt3dadd( -7.50408, 73.1915, 33.9257, 1.11 ) }
    dend_30 { pt3dadd( -7.88215, 73.8896, 34.2219, 1.11 ) }
    dend_30 { pt3dadd( -8.51291, 75.0059, 34.7173, 0.66 ) }
    dend_30 { pt3dadd( -8.94882, 75.7647, 35.0729, 0.66 ) }
    dend_30 { pt3dadd( -9.47044, 76.6368, 35.5154, 0.66 ) }
    dend_30 { pt3dadd( -10.3002, 77.8344, 36.1601, 0.66 ) }
    dend_30 { pt3dadd( -11.1551, 79.0588, 36.7947, 0.66 ) }
    dend_30 { pt3dadd( -11.7727, 79.9315, 37.2617, 0.44 ) }
    dend_30 { pt3dadd( -12.643, 81.1284, 37.9086, 0.29 ) }
    dend_30 { pt3dadd( -13.8364, 82.7219, 38.778, 0.37 ) }
    dend_30 { pt3dadd( -14.9877, 84.1836, 39.5638, 0.22 ) }
    dend_30 { pt3dadd( -21.8953, 91.2831, 45.4513, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 24/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 66.3662, 38.0284, -4.82134, 0.66 ) }
    dend_17 { pt3dadd( 68.4452, 38.2919, -4.46199, 0.66 ) }
    dend_17 { pt3dadd( 72.2664, 38.5259, -3.76149, 0.66 ) }
    dend_17 { pt3dadd( 75.4229, 38.5626, -3.35679, 0.66 ) }
    dend_17 { pt3dadd( 79.1417, 38.5363, -3.09881, 0.88 ) }
    dend_17 { pt3dadd( 80.7221, 38.508, -3.06569, 0.88 ) }
    dend_17 { pt3dadd( 84.3038, 38.4391, -3.11557, 1.11 ) }
    dend_17 { pt3dadd( 86.8326, 38.3765, -3.25654, 1.11 ) }
    dend_17 { pt3dadd( 91.7429, 38.1223, -3.62386, 1.11 ) }
    dend_17 { pt3dadd( 95.0447, 37.9052, -4.05745, 0.74 ) }
    dend_17 { pt3dadd( 97.3776, 37.7452, -4.50599, 0.74 ) }
    dend_17 { pt3dadd( 100.078, 37.6249, -5.14575, 0.74 ) }
    dend_17 { pt3dadd( 103.164, 37.6661, -6.08281, 0.74 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 37/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 66.3662, 38.0284, -4.82134, 0.29 ) }
    dend_16 { pt3dadd( 66.6657, 39.168, -3.97427, 0.29 ) }
    dend_16 { pt3dadd( 66.8203, 40.4131, -3.17917, 0.29 ) }
    dend_16 { pt3dadd( 66.8235, 43.3616, -1.4692, 0.29 ) }
    dend_16 { pt3dadd( 66.8246, 44.3193, -0.91382, 0.29 ) }
    dend_16 { pt3dadd( 66.8261, 45.6672, -0.132114, 0.29 ) }
    dend_16 { pt3dadd( 66.8264, 45.9808, 0.0497844, 0.29 ) }
    dend_16 { pt3dadd( 66.6283, 47.8061, 1.08277, 0.29 ) }
    dend_16 { pt3dadd( 66.391, 48.6067, 1.32815, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 46/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 48.7995, 46.35, -19.2046, 0.66 ) }
    dend_14 { pt3dadd( 49.9809, 47.7001, -19.7002, 0.66 ) }
    dend_14 { pt3dadd( 52.4457, 50.5943, -20.659, 0.66 ) }
    dend_14 { pt3dadd( 54.6983, 53.2657, -21.3981, 0.81 ) }
    dend_14 { pt3dadd( 56.5865, 55.6715, -21.9261, 0.59 ) }
    dend_14 { pt3dadd( 57.6767, 57.1154, -22.1836, 0.59 ) }
    dend_14 { pt3dadd( 58.6423, 58.44, -22.3774, 0.37 ) }
    dend_14 { pt3dadd( 59.7318, 60.1167, -22.5347, 0.37 ) }
    dend_14 { pt3dadd( 61.2919, 62.7132, -22.5974, 0.37 ) }
    dend_14 { pt3dadd( 62.9769, 65.3561, -22.5341, 0.37 ) }
    dend_14 { pt3dadd( 64.1637, 67.104, -22.4434, 0.37 ) }
    dend_14 { pt3dadd( 65.3882, 68.7692, -22.3311, 0.37 ) }
    dend_14 { pt3dadd( 66.6276, 70.3662, -22.2835, 0.37 ) }
    dend_14 { pt3dadd( 67.6915, 71.7142, -22.3105, 0.37 ) }
    dend_14 { pt3dadd( 70.2342, 74.8559, -22.5413, 0.37 ) }
    dend_14 { pt3dadd( 71.4283, 76.2777, -22.7175, 0.37 ) }
    dend_14 { pt3dadd( 74.2863, 79.6771, -23.281, 0.37 ) }
    dend_14 { pt3dadd( 76.4112, 82.1682, -23.8151, 0.37 ) }
    dend_14 { pt3dadd( 77.4622, 83.3834, -24.14, 0.22 ) }
    dend_14 { pt3dadd( 78.8308, 85.0224, -24.6407, 0.22 ) }
    dend_14 { pt3dadd( 79.4834, 85.849, -24.9317, 0.22 ) }
    dend_14 { pt3dadd( 80.5509, 87.2177, -25.4479, 0.22 ) }
    dend_14 { pt3dadd( 81.5891, 88.5844, -25.929, 0.22 ) }
    dend_14 { pt3dadd( 83.0102, 90.3908, -26.4617, 0.22 ) }
    dend_14 { pt3dadd( 84.6177, 92.3607, -27.0094, 0.22 ) }
    dend_14 { pt3dadd( 85.1634, 93.0213, -27.1436, 0.22 ) }
    dend_14 { pt3dadd( 85.9228, 93.949, -27.2563, 0.22 ) }
    dend_14 { pt3dadd( 87.8675, 96.3604, -27.376, 0.29 ) }
    dend_14 { pt3dadd( 89.2143, 98.0198, -27.3371, 0.29 ) }
    dend_14 { pt3dadd( 90.5903, 99.6613, -27.2506, 0.29 ) }
    dend_14 { pt3dadd( 92.4629, 101.725, -27.1267, 0.29 ) }
    dend_14 { pt3dadd( 94.1418, 103.468, -27.0026, 0.07 ) }
    dend_14 { pt3dadd( 95.1492, 104.478, -26.8595, 0.07 ) }
    dend_14 { pt3dadd( 96.4481, 105.785, -26.5705, 0.07 ) }
    dend_14 { pt3dadd( 98.0023, 107.29, -26.1712, 0.07 ) }
    dend_14 { pt3dadd( 100.934, 110.007, -25.4804, 0.07 ) }
    dend_14 { pt3dadd( 103.767, 112.571, -24.9309, 0.07 ) }
    dend_14 { pt3dadd( 107.48, 115.946, -24.2917, 0.07 ) }
    dend_14 { pt3dadd( 110.484, 118.783, -23.8296, 0.07 ) }
    dend_14 { pt3dadd( 112.029, 120.349, -23.6216, 0.07 ) }
    dend_14 { pt3dadd( 113.37, 121.879, -23.4821, 0.07 ) }
    dend_14 { pt3dadd( 115.076, 124.149, -23.451, 0.07 ) }
    dend_14 { pt3dadd( 117.273, 127.612, -23.4636, 0.07 ) }
    dend_14 { pt3dadd( 118.327, 129.552, -23.4844, 0.07 ) }
    dend_14 { pt3dadd( 119.418, 131.703, -23.3758, 0.07 ) }
    dend_14 { pt3dadd( 120.972, 134.955, -22.8198, 0.07 ) }
    dend_14 { pt3dadd( 122.198, 137.468, -22.0638, 0.07 ) }
    dend_14 { pt3dadd( 124.385, 141.686, -20.3022, 0.07 ) }
    dend_14 { pt3dadd( 125.372, 143.523, -19.3508, 0.07 ) }
    dend_14 { pt3dadd( 127.463, 147.152, -17.168, 0.07 ) }
    dend_14 { pt3dadd( 129.399, 150.205, -14.9333, 0.07 ) }
    dend_14 { pt3dadd( 131.009, 152.51, -13.0231, 0.07 ) }
    dend_14 { pt3dadd( 132.427, 154.497, -11.3134, 0.07 ) }
    dend_14 { pt3dadd( 133.685, 156.31, -9.80583, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_14 { pt3dadd( 134.539, 157.664, -8.75091, 0.07 ) }
    dend_14 { pt3dadd( 137.576, 162.902, -4.89788, 0.22 ) }
    dend_14 { pt3dadd( 139.046, 165.568, -3.11021, 0.22 ) }
    dend_14 { pt3dadd( 140.522, 168.39, -1.34694, 0.22 ) }
    dend_14 { pt3dadd( 141.539, 170.445, -0.138373, 0.22 ) }
    dend_14 { pt3dadd( 143.162, 173.93, 1.80935, 0.22 ) }
    dend_14 { pt3dadd( 144.387, 176.81, 3.30106, 0.22 ) }
    dend_14 { pt3dadd( 145.427, 179.49, 4.57759, 0.22 ) }
    dend_14 { pt3dadd( 147.09, 184.042, 6.74299, 0.22 ) }
    dend_14 { pt3dadd( 148.039, 186.597, 7.95167, 0.22 ) }
    dend_14 { pt3dadd( 149.099, 189.325, 9.24007, 0.22 ) }
    dend_14 { pt3dadd( 149.94, 191.552, 10.2702, 0.22 ) }
    dend_14 { pt3dadd( 150.577, 193.472, 11.0576, 0.22 ) }
    dend_14 { pt3dadd( 151.257, 195.484, 11.855, 0.22 ) }
    dend_14 { pt3dadd( 151.993, 197.739, 12.5457, 0.22 ) }
    dend_14 { pt3dadd( 152.907, 200.478, 13.1451, 0.22 ) }
    dend_14 { pt3dadd( 153.578, 202.529, 13.3915, 0.22 ) }
    dend_14 { pt3dadd( 154.482, 205.444, 13.5111, 0.22 ) }
    dend_14 { pt3dadd( 155.577, 208.799, 13.4376, 0.22 ) }
    dend_14 { pt3dadd( 157.154, 213.16, 13.1003, 0.22 ) }
    dend_14 { pt3dadd( 157.86, 214.984, 12.8836, 0.22 ) }
    dend_14 { pt3dadd( 158.554, 216.673, 12.6362, 0.22 ) }
    dend_14 { pt3dadd( 160.47, 221.069, 11.9481, 0.22 ) }
    dend_14 { pt3dadd( 161.183, 222.642, 11.6987, 0.22 ) }
    dend_14 { pt3dadd( 162.547, 225.63, 11.2521, 0.22 ) }
    dend_14 { pt3dadd( 164.52, 229.557, 10.9262, 0.22 ) }
    dend_14 { pt3dadd( 165.325, 231.144, 10.8588, 0.22 ) }
    dend_14 { pt3dadd( 166.389, 233.178, 10.8607, 0.22 ) }
    dend_14 { pt3dadd( 167.036, 234.327, 10.9153, 0.22 ) }
    dend_14 { pt3dadd( 168.396, 236.595, 11.1505, 0.22 ) }
    dend_14 { pt3dadd( 170.24, 239.441, 11.6018, 0.22 ) }
    dend_14 { pt3dadd( 171.783, 241.616, 11.9974, 0.22 ) }
    dend_14 { pt3dadd( 173.511, 243.853, 12.4278, 0.22 ) }
    dend_14 { pt3dadd( 175.449, 246.085, 12.8829, 0.22 ) }
    dend_14 { pt3dadd( 176.707, 247.465, 13.1275, 0.22 ) }
    dend_14 { pt3dadd( 178.866, 249.782, 13.4601, 0.22 ) }
    dend_14 { pt3dadd( 179.901, 250.804, 13.5573, 0.22 ) }
    dend_14 { pt3dadd( 181.919, 252.637, 13.6324, 0.22 ) }
    dend_14 { pt3dadd( 183.268, 253.784, 13.6254, 0.22 ) }
    dend_14 { pt3dadd( 185.946, 255.716, 13.6135, 0.22 ) }
    dend_14 { pt3dadd( 188.842, 257.419, 13.725, 0.22 ) }
    dend_14 { pt3dadd( 191.275, 258.61, 13.9219, 0.22 ) }
    dend_14 { pt3dadd( 193.159, 259.433, 14.1799, 0.22 ) }
    dend_14 { pt3dadd( 195.055, 260.164, 14.5352, 0.22 ) }
    dend_14 { pt3dadd( 198.849, 261.457, 15.4782, 0.22 ) }
    dend_14 { pt3dadd( 202.552, 262.486, 16.5271, 0.22 ) }
    dend_14 { pt3dadd( 204.539, 262.964, 17.1414, 0.22 ) }
    dend_14 { pt3dadd( 206.353, 263.443, 17.7878, 0.22 ) }
    dend_14 { pt3dadd( 207.955, 263.883, 18.4505, 0.22 ) }
    dend_14 { pt3dadd( 210.677, 264.744, 19.7286, 0.22 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 50/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 48.7995, 46.35, -19.2046, 0.44 ) }
    dend_11 { pt3dadd( 48.1205, 47.4046, -17.8958, 0.44 ) }
    dend_11 { pt3dadd( 47.3471, 48.6918, -16.3198, 0.44 ) }
    dend_11 { pt3dadd( 46.2933, 50.6041, -13.8651, 0.44 ) }
    dend_11 { pt3dadd( 45.8695, 51.3497, -12.8775, 0.44 ) }
    dend_11 { pt3dadd( 45.1246, 52.5815, -11.2442, 0.44 ) }
    dend_11 { pt3dadd( 44.7318, 53.1937, -10.4239, 0.44 ) }
    dend_11 { pt3dadd( 44.3626, 53.7012, -9.69458, 0.44 ) }
    dend_11 { pt3dadd( 43.2126, 55.1954, -7.52077, 0.44 ) }
    dend_11 { pt3dadd( 41.6634, 57.01, -4.74398, 0.07 ) }
    dend_11 { pt3dadd( 41.1744, 57.4865, -3.91127, 0.07 ) }
    dend_11 { pt3dadd( 40.641, 57.896, -3.06521, 0.07 ) }
    dend_11 { pt3dadd( 39.8745, 58.3578, -1.98529, 0.07 ) }
    dend_11 { pt3dadd( 39.1409, 58.7157, -1.04289, 0.07 ) }
    dend_11 { pt3dadd( 37.8533, 59.2504, 0.478551, 0.07 ) }
    dend_11 { pt3dadd( 36.8384, 59.6511, 1.67051, 0.07 ) }
    dend_11 { pt3dadd( 35.9814, 60.0606, 2.67529, 0.07 ) }
    dend_11 { pt3dadd( 34.1877, 61.1772, 4.57566, 0.07 ) }
    dend_11 { pt3dadd( 33.1385, 61.9596, 5.58937, 0.07 ) }
    dend_11 { pt3dadd( 31.6861, 63.2272, 6.86653, 0.07 ) }
    dend_11 { pt3dadd( 30.6483, 64.2572, 7.64164, 0.07 ) }
    dend_11 { pt3dadd( 29.2616, 65.7733, 8.63608, 0.07 ) }
    dend_11 { pt3dadd( 26.9967, 68.3655, 10.211, 0.07 ) }
    dend_11 { pt3dadd( 26.3838, 69.0826, 10.6293, 0.07 ) }
    dend_11 { pt3dadd( 25.5403, 70.065, 11.2039, 0.07 ) }
    dend_11 { pt3dadd( 23.7743, 71.9877, 12.2631, 0.07 ) }
    dend_11 { pt3dadd( 22.121, 73.7248, 13.2495, 0.07 ) }
    dend_11 { pt3dadd( 20.8661, 74.9323, 14.0271, 0.07 ) }
    dend_11 { pt3dadd( 19.2341, 76.3757, 15.1338, 0.07 ) }
    dend_11 { pt3dadd( 17.9303, 77.4793, 16.0215, 0.07 ) }
    dend_11 { pt3dadd( 15.9742, 79.0381, 17.3686, 0.07 ) }
    dend_11 { pt3dadd( 12.1359, 85.1622, 23.823, 0.07 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 82/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -67.2158, 46.019, -38.7551, 0.07 ) }
    dend_5 { pt3dadd( -68.6441, 46.2364, -41.1348, 0.07 ) }
    dend_5 { pt3dadd( -69.6817, 46.3314, -42.818, 0.29 ) }
    dend_5 { pt3dadd( -70.7308, 46.3816, -44.4365, 0.29 ) }
    dend_5 { pt3dadd( -72.124, 46.3908, -46.5086, 0.29 ) }
    dend_5 { pt3dadd( -73.1934, 46.3247, -48.0714, 0.29 ) }
    dend_5 { pt3dadd( -74.202, 46.1984, -49.502, 0.29 ) }
    dend_5 { pt3dadd( -75.9363, 45.8301, -51.7413, 0.29 ) }
    dend_5 { pt3dadd( -76.7624, 45.5935, -52.7089, 0.29 ) }
    dend_5 { pt3dadd( -77.5368, 45.3455, -53.4733, 0.29 ) }
    dend_5 { pt3dadd( -78.4684, 45.0413, -54.3416, 0.29 ) }
    dend_5 { pt3dadd( -79.839, 44.6284, -55.5189, 0.29 ) }
    dend_5 { pt3dadd( -81.3061, 44.221, -56.6568, 0.29 ) }
    dend_5 { pt3dadd( -83.3804, 43.7719, -58.1182, 0.29 ) }
    dend_5 { pt3dadd( -86.0318, 43.3834, -59.9171, 0.29 ) }
    dend_5 { pt3dadd( -88.7112, 43.2617, -61.6315, 0.29 ) }
    dend_5 { pt3dadd( -90.3953, 43.3208, -62.6662, 0.29 ) }
    dend_5 { pt3dadd( -91.452, 43.3938, -63.2981, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_5 { pt3dadd( -93.0545, 43.5574, -64.2235, 0.29 ) }
    dend_5 { pt3dadd( -95.868, 43.8749, -65.8347, 0.29 ) }
    dend_5 { pt3dadd( -99.9943, 44.3864, -68.0964, 0.07 ) }
    dend_5 { pt3dadd( -101.712, 44.5494, -68.9704, 0.07 ) }
    dend_5 { pt3dadd( -103.325, 44.6688, -69.8051, 0.07 ) }
    dend_5 { pt3dadd( -105.254, 44.7755, -70.8916, 0.07 ) }
    dend_5 { pt3dadd( -107.715, 44.8215, -72.3268, 0.07 ) }
    dend_5 { pt3dadd( -109.465, 44.8145, -73.3869, 0.07 ) }
    dend_5 { pt3dadd( -112.12, 44.7368, -75.1646, 0.15 ) }
    dend_5 { pt3dadd( -113.044, 44.7158, -75.8738, 0.37 ) }
    dend_5 { pt3dadd( -115.631, 44.6718, -78.0375, 0.37 ) }
    dend_5 { pt3dadd( -117.379, 44.6082, -79.7155, 0.37 ) }
    dend_5 { pt3dadd( -118.947, 44.5599, -81.398, 0.37 ) }
    dend_5 { pt3dadd( -120.943, 44.4815, -83.7198, 0.37 ) }
    dend_5 { pt3dadd( -123.499, 44.3709, -86.8966, 0.37 ) }
    dend_5 { pt3dadd( -124.943, 44.2734, -88.7175, 0.37 ) }
    dend_5 { pt3dadd( -126.81, 44.0894, -91.1626, 0.37 ) }
    dend_5 { pt3dadd( -128.026, 43.9369, -92.9402, 0.22 ) }
    dend_5 { pt3dadd( -128.902, 43.8349, -94.3281, 0.22 ) }
    dend_5 { pt3dadd( -129.562, 43.7759, -95.4315, 0.22 ) }
    dend_5 { pt3dadd( -130.057, 43.7445, -96.2733, 0.22 ) }
    dend_5 { pt3dadd( -130.847, 43.7156, -97.6259, 0.22 ) }
    dend_5 { pt3dadd( -131.987, 43.6691, -99.4583, 0.22 ) }
    dend_5 { pt3dadd( -133.115, 43.5965, -101.286, 0.22 ) }
    dend_5 { pt3dadd( -133.779, 43.557, -102.395, 0.22 ) }
    dend_5 { pt3dadd( -134.349, 43.5287, -103.321, 0.22 ) }
    dend_5 { pt3dadd( -134.98, 43.5009, -104.306, 0.22 ) }
    dend_5 { pt3dadd( -136.642, 43.4782, -106.938, 0.22 ) }
    dend_5 { pt3dadd( -137.597, 43.499, -108.566, 0.22 ) }
    dend_5 { pt3dadd( -138.82, 43.6171, -110.784, 0.22 ) }
    dend_5 { pt3dadd( -139.682, 43.8034, -112.47, 0.22 ) }
    dend_5 { pt3dadd( -140.388, 44.0424, -113.796, 0.22 ) }
    dend_5 { pt3dadd( -141.879, 44.5861, -116.259, 0.22 ) }
    dend_5 { pt3dadd( -142.898, 44.9055, -117.768, 0.22 ) }
    dend_5 { pt3dadd( -144.05, 45.1751, -119.349, 0.22 ) }
    dend_5 { pt3dadd( -146.172, 45.4642, -122.204, 0.22 ) }
    dend_5 { pt3dadd( -148.719, 45.5901, -125.711, 0.22 ) }
    dend_5 { pt3dadd( -150.175, 45.5435, -127.716, 0.22 ) }
    dend_5 { pt3dadd( -152.82, 45.2842, -131.343, 0.22 ) }
    dend_5 { pt3dadd( -153.978, 45.1236, -133.0, 0.22 ) }
    dend_5 { pt3dadd( -156.014, 44.7428, -136.207, 0.22 ) }
    dend_5 { pt3dadd( -156.942, 44.5322, -137.895, 0.22 ) }
    dend_5 { pt3dadd( -157.765, 44.3423, -139.788, 0.22 ) }
    dend_5 { pt3dadd( -158.446, 44.2839, -141.839, 0.22 ) }
    dend_5 { pt3dadd( -158.886, 44.3605, -143.59, 0.22 ) }
    dend_5 { pt3dadd( -159.144, 44.4687, -144.998, 0.22 ) }
    dend_5 { pt3dadd( -159.392, 44.6378, -147.021, 0.22 ) }
    dend_5 { pt3dadd( -159.469, 44.6941, -148.044, 0.22 ) }
    dend_5 { pt3dadd( -159.517, 44.6654, -150.822, 0.22 ) }
    dend_5 { pt3dadd( -159.46, 44.436, -152.861, 0.22 ) }
    dend_5 { pt3dadd( -159.381, 44.193, -154.127, 0.22 ) }
    dend_5 { pt3dadd( -159.26, 43.9223, -155.23, 0.22 ) }
    dend_5 { pt3dadd( -159.177, 43.7687, -155.751, 0.22 ) }
    dend_5 { pt3dadd( -158.724, 42.9582, -158.191, 0.22 ) }
    dend_5 { pt3dadd( -158.301, 42.1905, -160.299, 0.22 ) }
    dend_5 { pt3dadd( -158.088, 41.834, -161.285, 0.22 ) }
    dend_5 { pt3dadd( -157.884, 41.4887, -162.318, 0.22 ) }
    dend_5 { pt3dadd( -157.59, 40.9208, -164.134, 0.22 ) }
    dend_5 { pt3dadd( -157.537, 40.7867, -164.592, 0.22 ) }
    dend_5 { pt3dadd( -157.51, 40.6393, -165.176, 0.22 ) }
    dend_5 { pt3dadd( -157.566, 40.3878, -166.299, 0.22 ) }
    dend_5 { pt3dadd( -157.82, 40.0336, -167.921, 0.22 ) }
    dend_5 { pt3dadd( -158.302, 39.6289, -169.746, 0.22 ) }
    dend_5 { pt3dadd( -159.035, 39.2384, -171.643, 0.22 ) }
    dend_5 { pt3dadd( -160.31, 38.6823, -174.281, 0.22 ) }
    dend_5 { pt3dadd( -161.35, 38.3347, -175.979, 0.22 ) }
    dend_5 { pt3dadd( -162.759, 38.0247, -177.849, 0.22 ) }
    dend_5 { pt3dadd( -164.383, 37.8166, -179.648, 0.22 ) }
    dend_5 { pt3dadd( -166.287, 37.6975, -181.449, 0.22 ) }
    dend_5 { pt3dadd( -167.393, 37.6758, -182.407, 0.22 ) }
    dend_5 { pt3dadd( -169.118, 37.7022, -183.906, 0.22 ) }
    dend_5 { pt3dadd( -170.411, 37.7572, -185.22, 0.22 ) }
    dend_5 { pt3dadd( -171.459, 37.8049, -186.62, 0.22 ) }
    dend_5 { pt3dadd( -171.863, 37.8108, -187.33, 0.22 ) }
    dend_5 { pt3dadd( -172.727, 37.6736, -189.382, 0.22 ) }
    dend_5 { pt3dadd( -173.357, 37.442, -191.155, 0.22 ) }
    dend_5 { pt3dadd( -173.812, 37.1544, -192.741, 0.22 ) }
    dend_5 { pt3dadd( -174.284, 36.7066, -194.608, 0.22 ) }
    dend_5 { pt3dadd( -174.612, 36.3216, -195.991, 0.22 ) }
    dend_5 { pt3dadd( -175.311, 35.481, -198.688, 0.22 ) }
    dend_5 { pt3dadd( -175.714, 35.0266, -199.943, 0.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 81/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -67.2158, 46.019, -38.7551, 0.29 ) }
    dend_4 { pt3dadd( -67.1189, 47.3076, -38.8098, 0.29 ) }
    dend_4 { pt3dadd( -66.9402, 48.8203, -38.9032, 0.29 ) }
    dend_4 { pt3dadd( -66.8008, 49.6053, -38.9543, 0.22 ) }
    dend_4 { pt3dadd( -66.6207, 50.527, -39.0544, 0.22 ) }
    dend_4 { pt3dadd( -66.0952, 52.8332, -39.3907, 0.22 ) }
    dend_4 { pt3dadd( -65.4538, 55.3589, -39.8348, 0.22 ) }
    dend_4 { pt3dadd( -65.0736, 56.619, -40.1098, 0.22 ) }
    dend_4 { pt3dadd( -64.5762, 58.0039, -40.4803, 0.22 ) }
    dend_4 { pt3dadd( -63.9264, 59.5584, -40.992, 0.22 ) }
    dend_4 { pt3dadd( -62.8917, 61.5353, -41.965, 0.22 ) }
    dend_4 { pt3dadd( -62.4289, 62.2834, -42.4567, 0.22 ) }
    dend_4 { pt3dadd( -61.8383, 63.1243, -43.0907, 0.22 ) }
    dend_4 { pt3dadd( -61.1985, 63.9672, -43.8129, 0.22 ) }
    dend_4 { pt3dadd( -60.3543, 65.0139, -44.7641, 0.22 ) }
    dend_4 { pt3dadd( -58.0996, 67.6519, -47.1642, 0.22 ) }
    dend_4 { pt3dadd( -57.4506, 68.4081, -47.8607, 0.22 ) }
    dend_4 { pt3dadd( -56.7537, 69.2214, -48.6115, 0.22 ) }
    dend_4 { pt3dadd( -55.6722, 70.4947, -49.7809, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_4 { pt3dadd( -54.9018, 71.4142, -50.6239, 0.22 ) }
    dend_4 { pt3dadd( -54.0238, 72.5085, -51.5069, 0.22 ) }
    dend_4 { pt3dadd( -53.5053, 73.1899, -51.8959, 0.22 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 3/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -17.0694, -86.0154, -23.5639, 1.03 ) }
    dend_46 { pt3dadd( -17.5762, -89.6537, -23.6209, 1.03 ) }
    dend_46 { pt3dadd( -17.7887, -92.319, -23.6437, 1.03 ) }
    dend_46 { pt3dadd( -17.9345, -95.927, -23.6398, 1.03 ) }
    dend_46 { pt3dadd( -18.0843, -100.872, -23.6393, 1.03 ) }
    dend_46 { pt3dadd( -18.1809, -104.922, -23.6366, 1.03 ) }
    dend_46 { pt3dadd( -18.2807, -110.002, -23.6355, 1.03 ) }
    dend_46 { pt3dadd( -18.2649, -112.384, -23.6464, 1.03 ) }
    dend_46 { pt3dadd( -18.2669, -114.743, -23.6376, 1.03 ) }
    dend_46 { pt3dadd( -18.3352, -117.232, -23.6165, 1.03 ) }
    dend_46 { pt3dadd( -18.4954, -119.208, -23.6147, 1.03 ) }
    dend_46 { pt3dadd( -18.6976, -120.779, -23.6184, 1.03 ) }
    dend_46 { pt3dadd( -19.4183, -125.482, -23.6169, 1.25 ) }
    dend_46 { pt3dadd( -19.8181, -128.233, -23.5954, 1.25 ) }
    dend_46 { pt3dadd( -20.2467, -131.268, -23.5593, 1.25 ) }
    dend_46 { pt3dadd( -20.6153, -134.068, -23.5036, 1.25 ) }
    dend_46 { pt3dadd( -21.0373, -137.226, -23.435, 1.25 ) }
    dend_46 { pt3dadd( -21.5101, -140.55, -23.2614, 0.81 ) }
    dend_46 { pt3dadd( -21.7409, -142.287, -23.1492, 0.81 ) }
    dend_46 { pt3dadd( -22.1719, -145.54, -22.9092, 0.74 ) }
    dend_46 { pt3dadd( -22.3747, -146.899, -22.8228, 0.74 ) }
    dend_46 { pt3dadd( -22.7058, -148.716, -22.7849, 1.18 ) }
    dend_46 { pt3dadd( -23.5371, -153.177, -22.9534, 1.18 ) }
    dend_46 { pt3dadd( -23.8303, -154.739, -23.074, 1.18 ) }
    dend_46 { pt3dadd( -24.1338, -156.524, -23.2704, 1.25 ) }
    dend_46 { pt3dadd( -24.6761, -160.6, -23.805, 1.25 ) }
    dend_46 { pt3dadd( -25.2791, -165.877, -24.7962, 1.25 ) }
    dend_46 { pt3dadd( -25.6078, -169.117, -25.6466, 1.25 ) }
    dend_46 { pt3dadd( -25.79, -170.956, -26.2898, 0.74 ) }
    dend_46 { pt3dadd( -26.0675, -173.333, -27.1821, 0.74 ) }
    dend_46 { pt3dadd( -26.1889, -174.287, -27.5918, 0.74 ) }
    dend_46 { pt3dadd( -26.6906, -177.742, -29.2959, 0.74 ) }
    dend_46 { pt3dadd( -26.9403, -179.21, -30.1052, 0.74 ) }
    dend_46 { pt3dadd( -27.3942, -181.842, -31.4058, 0.52 ) }
    dend_46 { pt3dadd( -27.92, -186.556, -33.4354, 0.52 ) }
    dend_46 { pt3dadd( -27.9778, -187.172, -33.6376, 0.52 ) }
    dend_46 { pt3dadd( -28.0907, -188.22, -33.8865, 0.81 ) }
    dend_46 { pt3dadd( -28.2218, -189.594, -34.072, 1.18 ) }
    dend_46 { pt3dadd( -28.4771, -192.686, -34.3611, 1.18 ) }
    dend_46 { pt3dadd( -28.6415, -195.192, -34.5913, 1.18 ) }
    dend_46 { pt3dadd( -28.8887, -198.101, -34.9152, 0.96 ) }
    dend_46 { pt3dadd( -29.1582, -200.214, -35.1439, 0.96 ) }
    dend_46 { pt3dadd( -29.6213, -202.958, -35.4412, 0.96 ) }
    dend_46 { pt3dadd( -30.024, -204.966, -35.6515, 0.96 ) }
    dend_46 { pt3dadd( -30.5044, -207.063, -35.8223, 1.4 ) }
    dend_46 { pt3dadd( -31.2962, -210.273, -35.9998, 1.4 ) }
    dend_46 { pt3dadd( -32.5099, -214.698, -36.2638, 1.4 ) }
    dend_46 { pt3dadd( -33.2577, -217.095, -36.4275, 1.4 ) }
    dend_46 { pt3dadd( -34.1687, -219.756, -36.6193, 1.4 ) }
    dend_46 { pt3dadd( -35.3841, -223.075, -36.8398, 1.4 ) }
    dend_46 { pt3dadd( -36.3489, -225.57, -36.9527, 1.62 ) }
    dend_46 { pt3dadd( -37.602, -228.789, -37.0521, 1.62 ) }
    dend_46 { pt3dadd( -37.9594, -229.661, -37.0818, 1.62 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 56/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -17.0694, -86.0154, -23.5639, 0.66 ) }
    dend_43 { pt3dadd( -18.4952, -87.624, -23.221, 0.66 ) }
    dend_43 { pt3dadd( -19.3917, -88.6354, -23.0054, 0.37 ) }
    dend_43 { pt3dadd( -20.4601, -89.8407, -22.7484, 0.37 ) }
    dend_43 { pt3dadd( -21.3051, -90.7941, -22.5452, 0.37 ) }
    dend_43 { pt3dadd( -21.8726, -91.4344, -22.4087, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 62/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 103.164, 37.6661, -6.08281, 0.37 ) }
    dend_23 { pt3dadd( 105.985, 38.4855, -4.71465, 0.37 ) }
    dend_23 { pt3dadd( 108.164, 38.9917, -3.88763, 0.37 ) }
    dend_23 { pt3dadd( 110.146, 39.4051, -3.23434, 0.37 ) }
    dend_23 { pt3dadd( 112.95, 39.9956, -2.42631, 0.37 ) }
    dend_23 { pt3dadd( 117.548, 40.9452, -1.17976, 0.37 ) }
    dend_23 { pt3dadd( 119.946, 41.4659, -0.56188, 0.37 ) }
    dend_23 { pt3dadd( 123.851, 42.2414, 0.209593, 0.37 ) }
    dend_23 { pt3dadd( 125.135, 42.497, 0.400711, 0.37 ) }
    dend_23 { pt3dadd( 127.175, 42.9074, 0.637081, 0.52 ) }
    dend_23 { pt3dadd( 130.196, 43.5267, 0.937062, 0.52 ) }
    dend_23 { pt3dadd( 131.979, 43.8563, 1.17514, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 74/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 103.164, 37.6661, -6.08281, 0.74 ) }
    dend_18 { pt3dadd( 105.03, 37.2036, -7.91343, 0.74 ) }
    dend_18 { pt3dadd( 107.04, 36.6845, -9.93084, 0.52 ) }
    dend_18 { pt3dadd( 108.0, 36.3883, -10.9325, 0.52 ) }
    dend_18 { pt3dadd( 109.757, 35.7781, -12.8957, 0.52 ) }
    dend_18 { pt3dadd( 111.33, 35.1903, -14.7706, 0.52 ) }
    dend_18 { pt3dadd( 112.764, 34.6759, -16.5222, 0.52 ) }
    dend_18 { pt3dadd( 113.515, 34.4287, -17.5632, 0.52 ) }
    dend_18 { pt3dadd( 114.275, 34.1566, -18.5827, 0.52 ) }
    dend_18 { pt3dadd( 115.366, 33.826, -20.1056, 0.52 ) }
    dend_18 { pt3dadd( 116.506, 33.5549, -21.7505, 0.52 ) }
    dend_18 { pt3dadd( 117.639, 33.3442, -23.4636, 0.52 ) }
    dend_18 { pt3dadd( 119.023, 33.1201, -25.4783, 0.52 ) }
    dend_18 { pt3dadd( 120.587, 32.9339, -27.682, 0.22 ) }
    dend_18 { pt3dadd( 122.535, 32.6612, -30.3459, 0.22 ) }
    dend_18 { pt3dadd( 123.951, 32.3862, -32.2221, 0.22 ) }
    dend_18 { pt3dadd( 125.751, 31.9214, -34.5927, 0.22 ) }
    dend_18 { pt3dadd( 127.123, 31.4556, -36.3883, 0.22 ) }
    dend_18 { pt3dadd( 128.016, 31.0636, -37.446, 0.22 ) }
    dend_18 { pt3dadd( 129.413, 30.4166, -39.0442, 0.22 ) }
    dend_18 { pt3dadd( 130.387, 29.9225, -40.0514, 0.37 ) }
    dend_18 { pt3dadd( 130.947, 29.6179, -40.5991, 0.37 ) }
    dend_18 { pt3dadd( 132.488, 28.7511, -41.9866, 0.37 ) }
    dend_18 { pt3dadd( 134.713, 27.5035, -43.8616, 0.37 ) }
    dend_18 { pt3dadd( 137.77, 25.877, -46.1419, 0.37 ) }
    dend_18 { pt3dadd( 139.656, 24.9645, -47.4076, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_18 { pt3dadd( 140.618, 24.5189, -47.9852, 0.07 ) }
    dend_18 { pt3dadd( 142.651, 23.5975, -49.1038, 0.07 ) }
    dend_18 { pt3dadd( 145.315, 22.4089, -50.4556, 0.07 ) }
    dend_18 { pt3dadd( 148.188, 21.1066, -51.8238, 0.07 ) }
    dend_18 { pt3dadd( 149.537, 20.4319, -52.3823, 0.29 ) }
    dend_18 { pt3dadd( 151.842, 19.2194, -53.4157, 0.29 ) }
    dend_18 { pt3dadd( 153.09, 18.542, -54.0224, 0.29 ) }
    dend_18 { pt3dadd( 154.323, 17.8321, -54.752, 0.29 ) }
    dend_18 { pt3dadd( 155.639, 16.9942, -55.8508, 0.29 ) }
    dend_18 { pt3dadd( 156.952, 16.0225, -57.2155, 0.29 ) }
    dend_18 { pt3dadd( 158.458, 14.7074, -59.0263, 0.29 ) }
    dend_18 { pt3dadd( 159.342, 13.8406, -60.2039, 0.29 ) }
    dend_18 { pt3dadd( 160.866, 12.3184, -62.2449, 0.29 ) }
    dend_18 { pt3dadd( 162.825, 10.3782, -64.8752, 0.29 ) }
    dend_18 { pt3dadd( 163.899, 9.38481, -66.2897, 0.37 ) }
    dend_18 { pt3dadd( 164.949, 8.46051, -67.5573, 0.37 ) }
    dend_18 { pt3dadd( 165.611, 7.88453, -68.2329, 0.37 ) }
    dend_18 { pt3dadd( 166.349, 7.25498, -68.9692, 0.37 ) }
    dend_18 { pt3dadd( 166.996, 6.73112, -69.5169, 0.37 ) }
    dend_18 { pt3dadd( 168.112, 5.89221, -70.4175, 0.37 ) }
    dend_18 { pt3dadd( 169.21, 5.16611, -71.3591, 0.37 ) }
    dend_18 { pt3dadd( 169.98, 4.73457, -72.0126, 0.37 ) }
    dend_18 { pt3dadd( 171.574, 3.88137, -73.3261, 0.37 ) }
    dend_18 { pt3dadd( 172.48, 3.39131, -74.0857, 0.37 ) }
    dend_18 { pt3dadd( 173.6, 2.76437, -75.0182, 0.37 ) }
    dend_18 { pt3dadd( 176.171, 1.20681, -77.1895, 0.37 ) }
    dend_18 { pt3dadd( 177.903, 0.050123, -78.7203, 0.37 ) }
    dend_18 { pt3dadd( 178.737, -0.539894, -79.44, 0.37 ) }
    dend_18 { pt3dadd( 179.694, -1.20498, -80.2019, 0.37 ) }
    dend_18 { pt3dadd( 181.09, -2.14972, -81.291, 0.37 ) }
    dend_18 { pt3dadd( 182.868, -3.3128, -82.5965, 0.37 ) }
    dend_18 { pt3dadd( 183.662, -3.82984, -83.1571, 0.37 ) }
    dend_18 { pt3dadd( 184.693, -4.47809, -83.7777, 0.37 ) }
    dend_18 { pt3dadd( 186.626, -5.64592, -84.8173, 0.37 ) }
    dend_18 { pt3dadd( 187.614, -6.22445, -85.294, 0.37 ) }
    dend_18 { pt3dadd( 188.321, -6.63059, -85.6224, 0.37 ) }
    dend_18 { pt3dadd( 189.85, -7.49116, -86.3056, 0.37 ) }
    dend_18 { pt3dadd( 190.903, -8.10366, -86.7818, 0.37 ) }
    dend_18 { pt3dadd( 192.407, -9.06638, -87.3767, 0.37 ) }
    dend_18 { pt3dadd( 195.732, -11.2553, -88.3817, 0.37 ) }
    dend_18 { pt3dadd( 196.994, -12.0501, -88.6496, 0.37 ) }
    dend_18 { pt3dadd( 198.074, -12.7296, -88.8117, 0.37 ) }
    dend_18 { pt3dadd( 199.233, -13.4464, -88.9264, 0.37 ) }
    dend_18 { pt3dadd( 202.523, -15.4638, -89.1234, 0.37 ) }
    dend_18 { pt3dadd( 205.437, -17.2321, -89.2207, 0.37 ) }
    dend_18 { pt3dadd( 207.807, -18.7034, -89.2285, 0.37 ) }
    dend_18 { pt3dadd( 210.028, -20.1281, -89.253, 0.37 ) }
    dend_18 { pt3dadd( 212.773, -21.969, -89.3396, 0.37 ) }
    dend_18 { pt3dadd( 214.579, -23.2458, -89.4259, 0.37 ) }
    dend_18 { pt3dadd( 217.743, -25.5749, -89.6712, 0.37 ) }
    dend_18 { pt3dadd( 219.244, -26.7636, -89.808, 0.37 ) }
    dend_18 { pt3dadd( 220.645, -27.9069, -89.9661, 0.29 ) }
    dend_18 { pt3dadd( 221.492, -28.6463, -90.0741, 0.29 ) }
    dend_18 { pt3dadd( 223.09, -30.1217, -90.2832, 0.29 ) }
    dend_18 { pt3dadd( 224.9, -31.8623, -90.5343, 0.29 ) }
    dend_18 { pt3dadd( 227.286, -34.3235, -90.8866, 0.29 ) }
    dend_18 { pt3dadd( 229.049, -36.1977, -91.2016, 0.29 ) }
    dend_18 { pt3dadd( 230.97, -38.2604, -91.5663, 0.29 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 58/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 12.1359, 85.1622, 23.823, 0.07 ) }
    dend_13 { pt3dadd( 5.53085, 91.714, 30.1968, 0.07 ) }
    dend_13 { pt3dadd( -1.2199, 96.6011, 37.6828, 0.07 ) }
    dend_13 { pt3dadd( -6.72116, 99.8481, 46.8239, 0.07 ) }
    dend_13 { pt3dadd( -11.6898, 101.838, 56.5848, 0.07 ) }
    dend_13 { pt3dadd( -17.7153, 102.482, 65.9164, 0.07 ) }
    dend_13 { pt3dadd( -23.0887, 101.96, 75.6537, 0.07 ) }
    dend_13 { pt3dadd( -26.477, 100.556, 86.1816, 0.07 ) }
    dend_13 { pt3dadd( -28.7952, 97.4796, 96.6905, 0.07 ) }
    dend_13 { pt3dadd( -28.9993, 94.1135, 107.374, 0.07 ) }
    dend_13 { pt3dadd( -26.7257, 89.8226, 117.51, 0.07 ) }
    dend_13 { pt3dadd( -23.3051, 86.6875, 127.699, 0.07 ) }
    dend_13 { pt3dadd( -19.2741, 83.6142, 137.679, 0.07 ) }
    dend_13 { pt3dadd( -15.1108, 79.6302, 147.313, 0.07 ) }
    dend_13 { pt3dadd( -13.0655, 75.1175, 157.412, 0.07 ) }
    dend_13 { pt3dadd( -9.83596, 69.5793, 166.712, 0.07 ) }
    dend_13 { pt3dadd( -5.57258, 64.8047, 175.974, 0.07 ) }
    dend_13 { pt3dadd( -1.85375, 59.9416, 185.428, 0.07 ) }
    dend_13 { pt3dadd( 2.09389, 54.4739, 194.484, 0.07 ) }
    dend_13 { pt3dadd( 3.68353, 48.4516, 203.939, 0.07 ) }
    dend_13 { pt3dadd( 3.79099, 40.6532, 212.288, 0.07 ) }
    dend_13 { pt3dadd( 4.65242, 32.8699, 220.608, 0.07 ) }
    dend_13 { pt3dadd( 6.82762, 24.544, 228.176, 0.07 ) }
    dend_13 { pt3dadd( 9.58576, 16.5462, 235.873, 0.07 ) }
    dend_13 { pt3dadd( 11.6345, 7.58293, 242.785, 0.07 ) }
    dend_13 { pt3dadd( 15.0676, 0.257496, 250.809, 0.07 ) }
    dend_13 { pt3dadd( 18.4178, -6.57435, 259.252, 0.07 ) }
    dend_13 { pt3dadd( 22.6949, -10.6884, 268.786, 0.07 ) }
    dend_13 { pt3dadd( 28.412, -14.5164, 277.646, 0.07 ) }
    dend_13 { pt3dadd( 35.3082, -16.1863, 286.251, 0.07 ) }
    dend_13 { pt3dadd( 40.3375, -18.7453, 295.898, 0.07 ) }
    dend_13 { pt3dadd( 45.4213, -19.7485, 305.762, 0.07 ) }
    dend_13 { pt3dadd( 48.9718, -19.9592, 316.311, 0.07 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 91/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 12.1359, 85.1622, 23.823, 0.07 ) }
    dend_12 { pt3dadd( 7.38565, 89.9598, 26.6193, 0.07 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 93/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -37.9594, -229.661, -37.0818, 0.96 ) }
    dend_48 { pt3dadd( -38.9844, -231.015, -37.2593, 0.96 ) }
    dend_48 { pt3dadd( -39.6859, -232.184, -37.3834, 0.96 ) }
    dend_48 { pt3dadd( -40.1311, -233.036, -37.4179, 0.59 ) }
    dend_48 { pt3dadd( -40.6132, -234.035, -37.426, 0.59 ) }
    dend_48 { pt3dadd( -40.9229, -234.7, -37.4234, 0.59 ) }
    dend_48 { pt3dadd( -41.4074, -235.719, -37.4394, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_48 { pt3dadd( -42.1055, -237.281, -37.4644, 0.96 ) }
    dend_48 { pt3dadd( -42.6902, -238.638, -37.4892, 0.96 ) }
    dend_48 { pt3dadd( -42.9837, -239.333, -37.5048, 0.96 ) }
    dend_48 { pt3dadd( -43.3415, -240.197, -37.5712, 0.59 ) }
    dend_48 { pt3dadd( -43.7477, -241.049, -37.7083, 0.52 ) }
    dend_48 { pt3dadd( -43.8382, -241.212, -37.754, 0.29 ) }
    dend_48 { pt3dadd( -44.0806, -241.661, -37.9262, 0.29 ) }
    dend_48 { pt3dadd( -44.1828, -241.909, -38.0271, 0.44 ) }
    dend_48 { pt3dadd( -44.5106, -242.992, -38.3926, 0.44 ) }
    dend_48 { pt3dadd( -44.701, -243.836, -38.6233, 0.66 ) }
    dend_48 { pt3dadd( -44.9831, -245.42, -38.9638, 0.66 ) }
    dend_48 { pt3dadd( -45.1984, -246.836, -39.2178, 0.88 ) }
    dend_48 { pt3dadd( -45.322, -247.884, -39.3705, 0.88 ) }
    dend_48 { pt3dadd( -45.4418, -249.044, -39.458, 0.88 ) }
    dend_48 { pt3dadd( -45.4853, -249.533, -39.462, 0.88 ) }
    dend_48 { pt3dadd( -45.5371, -250.176, -39.4577, 0.88 ) }
    dend_48 { pt3dadd( -45.6667, -251.501, -39.4242, 0.66 ) }
    dend_48 { pt3dadd( -45.7448, -252.086, -39.4027, 0.66 ) }
    dend_48 { pt3dadd( -46.0153, -253.637, -39.3744, 0.88 ) }
    dend_48 { pt3dadd( -46.231, -254.761, -39.3739, 0.88 ) }
    dend_48 { pt3dadd( -46.5446, -256.227, -39.3962, 0.88 ) }
    dend_48 { pt3dadd( -46.7249, -256.917, -39.4428, 0.88 ) }
    dend_48 { pt3dadd( -46.97, -257.671, -39.5342, 0.88 ) }
    dend_48 { pt3dadd( -47.4027, -258.726, -39.7218, 0.88 ) }
    dend_48 { pt3dadd( -47.6803, -259.305, -39.8691, 0.88 ) }
    dend_48 { pt3dadd( -48.0456, -260.003, -40.0754, 1.11 ) }
    dend_48 { pt3dadd( -48.7099, -261.296, -40.536, 1.11 ) }
    dend_48 { pt3dadd( -49.0181, -261.956, -40.8156, 0.44 ) }
    dend_48 { pt3dadd( -49.3959, -262.902, -41.276, 0.44 ) }
    dend_48 { pt3dadd( -49.6081, -263.467, -41.5729, 0.66 ) }
    dend_48 { pt3dadd( -49.8537, -264.207, -41.9932, 0.66 ) }
    dend_48 { pt3dadd( -50.0276, -265.033, -42.4863, 0.66 ) }
    dend_48 { pt3dadd( -50.0159, -265.749, -42.9057, 0.66 ) }
    dend_48 { pt3dadd( -49.9061, -266.232, -43.2275, 0.66 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 34/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -37.9594, -229.661, -37.0818, 0.29 ) }
    dend_47 { pt3dadd( -37.9817, -230.941, -37.6698, 0.29 ) }
    dend_47 { pt3dadd( -38.1366, -232.63, -38.5022, 0.29 ) }
    dend_47 { pt3dadd( -38.3766, -234.686, -39.5703, 0.07 ) }
    dend_47 { pt3dadd( -38.5743, -236.475, -40.5918, 0.29 ) }
    dend_47 { pt3dadd( -38.6995, -238.145, -41.6147, 0.29 ) }
    dend_47 { pt3dadd( -38.7424, -239.403, -42.4458, 0.29 ) }
    dend_47 { pt3dadd( -38.7487, -240.286, -43.1197, 0.29 ) }
    dend_47 { pt3dadd( -38.7402, -241.04, -43.7611, 0.29 ) }
    dend_47 { pt3dadd( -38.6531, -242.133, -44.8467, 0.29 ) }
    dend_47 { pt3dadd( -38.5242, -242.892, -45.7338, 0.52 ) }
    dend_47 { pt3dadd( -38.3544, -243.594, -46.6486, 0.52 ) }
    dend_47 { pt3dadd( -38.2308, -244.076, -47.4086, 0.52 ) }
    dend_47 { pt3dadd( -38.1505, -244.476, -48.2397, 0.52 ) }
    dend_47 { pt3dadd( -38.1451, -244.857, -49.2556, 0.52 ) }
    dend_47 { pt3dadd( -38.2017, -245.285, -50.8039, 0.52 ) }
    dend_47 { pt3dadd( -38.2548, -245.463, -51.6959, 0.52 ) }
    dend_47 { pt3dadd( -38.3763, -245.704, -53.7256, 0.52 ) }
    dend_47 { pt3dadd( -38.4397, -245.797, -55.8136, 0.52 ) }
    dend_47 { pt3dadd( -38.4585, -245.784, -56.4559, 0.52 ) }
    dend_47 { pt3dadd( -38.5165, -245.61, -58.9031, 0.52 ) }
    dend_47 { pt3dadd( -38.541, -245.522, -59.7339, 0.52 ) }
    dend_47 { pt3dadd( -38.5624, -245.45, -60.2774, 0.52 ) }
    dend_47 { pt3dadd( -38.6895, -245.141, -62.1587, 0.52 ) }
    dend_47 { pt3dadd( -38.8098, -244.879, -63.5883, 0.52 ) }
    dend_47 { pt3dadd( -38.9789, -244.487, -65.4654, 0.52 ) }
    dend_47 { pt3dadd( -39.0247, -244.332, -66.1285, 0.52 ) }
    dend_47 { pt3dadd( -39.0267, -244.187, -66.806, 0.52 ) }
    dend_47 { pt3dadd( -38.9788, -243.998, -67.8481, 0.52 ) }
    dend_47 { pt3dadd( -38.8684, -243.855, -68.8754, 0.52 ) }
    dend_47 { pt3dadd( -38.7234, -243.782, -69.5987, 0.52 ) }
    dend_47 { pt3dadd( -38.1185, -243.653, -71.984, 0.52 ) }
    dend_47 { pt3dadd( -37.5939, -243.66, -73.7249, 0.52 ) }
    dend_47 { pt3dadd( -37.2276, -243.747, -74.794, 0.52 ) }
    dend_47 { pt3dadd( -36.5557, -244.058, -76.55, 0.52 ) }
    dend_47 { pt3dadd( -36.1512, -244.305, -77.4657, 0.52 ) }
    dend_47 { pt3dadd( -35.6378, -244.664, -78.4795, 0.52 ) }
    dend_47 { pt3dadd( -35.3508, -244.881, -78.9694, 0.52 ) }
    dend_47 { pt3dadd( -34.6201, -245.383, -80.1199, 0.52 ) }
    dend_47 { pt3dadd( -34.1527, -245.647, -80.8748, 0.52 ) }
    dend_47 { pt3dadd( -33.5866, -245.912, -81.845, 0.52 ) }
    dend_47 { pt3dadd( -33.2447, -246.035, -82.4572, 0.52 ) }
    dend_47 { pt3dadd( -33.0277, -246.102, -82.8173, 0.52 ) }
    dend_47 { pt3dadd( -32.1869, -246.267, -84.2461, 0.52 ) }
    dend_47 { pt3dadd( -31.5573, -246.302, -85.3308, 0.44 ) }
    dend_47 { pt3dadd( -31.4415, -246.302, -85.5444, 0.15 ) }
    dend_47 { pt3dadd( -31.0883, -246.343, -86.2922, 0.07 ) }
    dend_47 { pt3dadd( -30.4368, -246.537, -87.6213, 0.22 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 82/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -21.8726, -91.4344, -22.4087, 0.07 ) }
    dend_45 { pt3dadd( -22.8811, -91.4545, -21.6453, 0.07 ) }
    dend_45 { pt3dadd( -25.4234, -91.5791, -20.0196, 0.07 ) }
    dend_45 { pt3dadd( -27.2001, -91.7286, -18.9746, 0.07 ) }
    dend_45 { pt3dadd( -29.1226, -92.0549, -17.9338, 0.07 ) }
    dend_45 { pt3dadd( -31.1216, -92.5738, -16.8386, 0.07 ) }
    dend_45 { pt3dadd( -34.2339, -93.5905, -15.0642, 0.07 ) }
    dend_45 { pt3dadd( -37.593, -94.9869, -13.0255, 0.07 ) }
    dend_45 { pt3dadd( -42.0237, -96.9911, -10.4502, 0.07 ) }
    dend_45 { pt3dadd( -45.8444, -98.868, -8.27792, 0.07 ) }
    dend_45 { pt3dadd( -49.3064, -100.729, -6.24978, 0.07 ) }
    dend_45 { pt3dadd( -50.7882, -101.651, -5.29984, 0.07 ) }
    dend_45 { pt3dadd( -52.6298, -103.112, -3.93872, 0.07 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 95/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -21.8726, -91.4344, -22.4087, 0.07 ) }
    dend_44 { pt3dadd( -21.8945, -92.7219, -21.6294, 0.07 ) }
    dend_44 { pt3dadd( -21.9378, -94.1603, -20.8906, 0.07 ) }
    dend_44 { pt3dadd( -21.9612, -95.6077, -20.1419, 0.07 ) }
    dend_44 { pt3dadd( -22.0143, -97.3383, -19.2513, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_44 { pt3dadd( -22.2676, -101.276, -17.3111, 0.07 ) }
    dend_44 { pt3dadd( -22.3763, -102.965, -16.4788, 0.07 ) }
    dend_44 { pt3dadd( -22.7038, -107.707, -14.1508, 0.15 ) }
    dend_44 { pt3dadd( -22.9519, -110.606, -12.7686, 0.15 ) }
    dend_44 { pt3dadd( -23.1625, -112.905, -11.7142, 0.15 ) }
    dend_44 { pt3dadd( -23.4575, -116.305, -10.2107, 0.07 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 6/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 131.979, 43.8563, 1.17514, 0.44 ) }
    dend_25 { pt3dadd( 133.67, 44.4564, 0.857926, 0.44 ) }
    dend_25 { pt3dadd( 135.868, 45.1591, 0.68887, 0.44 ) }
    dend_25 { pt3dadd( 136.916, 45.4613, 0.586693, 0.44 ) }
    dend_25 { pt3dadd( 137.969, 45.7512, 0.472409, 0.44 ) }
    dend_25 { pt3dadd( 139.458, 46.1068, 0.319329, 0.44 ) }
    dend_25 { pt3dadd( 140.884, 46.4273, 0.222502, 0.44 ) }
    dend_25 { pt3dadd( 143.453, 46.956, 0.163892, 0.44 ) }
    dend_25 { pt3dadd( 145.853, 47.4075, 0.251638, 0.44 ) }
    dend_25 { pt3dadd( 147.591, 47.705, 0.353833, 0.44 ) }
    dend_25 { pt3dadd( 150.149, 48.0881, 0.577265, 0.44 ) }
    dend_25 { pt3dadd( 152.126, 48.3173, 0.77844, 0.44 ) }
    dend_25 { pt3dadd( 154.308, 48.5333, 1.03725, 0.44 ) }
    dend_25 { pt3dadd( 155.884, 48.647, 1.26752, 0.44 ) }
    dend_25 { pt3dadd( 157.173, 48.6959, 1.52326, 0.44 ) }
    dend_25 { pt3dadd( 158.565, 48.7169, 1.74413, 0.44 ) }
    dend_25 { pt3dadd( 159.55, 48.7022, 1.81222, 0.44 ) }
    dend_25 { pt3dadd( 160.511, 48.7009, 1.75985, 0.44 ) }
    dend_25 { pt3dadd( 161.328, 48.7387, 1.67953, 0.44 ) }
    dend_25 { pt3dadd( 162.555, 48.8653, 1.56484, 0.44 ) }
    dend_25 { pt3dadd( 165.008, 49.2448, 1.35236, 0.44 ) }
    dend_25 { pt3dadd( 167.218, 49.7376, 1.16058, 0.44 ) }
    dend_25 { pt3dadd( 169.784, 50.4514, 0.93329, 0.44 ) }
    dend_25 { pt3dadd( 171.782, 51.0967, 0.735614, 0.44 ) }
    dend_25 { pt3dadd( 173.653, 51.7645, 0.515554, 0.44 ) }
    dend_25 { pt3dadd( 174.525, 52.0975, 0.409608, 0.22 ) }
    dend_25 { pt3dadd( 175.698, 52.547, 0.277084, 0.07 ) }
    dend_25 { pt3dadd( 176.465, 52.8562, 0.174308, 0.07 ) }
    dend_25 { pt3dadd( 177.942, 53.3925, 0.00675321, 0.07 ) }
    dend_25 { pt3dadd( 178.716, 53.6713, -0.0623165, 0.07 ) }
    dend_25 { pt3dadd( 180.03, 54.1903, -0.058299, 0.22 ) }
    dend_25 { pt3dadd( 181.434, 54.8244, 0.130064, 0.22 ) }
    dend_25 { pt3dadd( 182.086, 55.1333, 0.326283, 0.22 ) }
    dend_25 { pt3dadd( 183.62, 55.8623, 0.834987, 0.22 ) }
    dend_25 { pt3dadd( 185.223, 56.564, 1.3127, 0.22 ) }
    dend_25 { pt3dadd( 186.487, 57.1094, 1.76845, 0.22 ) }
    dend_25 { pt3dadd( 187.4, 57.4627, 2.09321, 0.22 ) }
    dend_25 { pt3dadd( 189.297, 58.0978, 2.66365, 0.22 ) }
    dend_25 { pt3dadd( 191.303, 58.6676, 3.18233, 0.22 ) }
    dend_25 { pt3dadd( 195.1, 59.6127, 4.12275, 0.37 ) }
    dend_25 { pt3dadd( 198.402, 60.3254, 4.88097, 0.37 ) }
    dend_25 { pt3dadd( 200.955, 60.7723, 5.46934, 0.37 ) }
    dend_25 { pt3dadd( 202.479, 61.0055, 5.81896, 0.37 ) }
    dend_25 { pt3dadd( 203.849, 61.2114, 6.12408, 0.37 ) }
    dend_25 { pt3dadd( 206.284, 61.5608, 6.74788, 0.37 ) }
    dend_25 { pt3dadd( 207.995, 61.6916, 7.10313, 0.37 ) }
    dend_25 { pt3dadd( 209.616, 61.7095, 7.28831, 0.22 ) }
    dend_25 { pt3dadd( 210.681, 61.7351, 7.40773, 0.22 ) }
    dend_25 { pt3dadd( 211.558, 61.7787, 7.48778, 0.22 ) }
    dend_25 { pt3dadd( 212.134, 61.8186, 7.51122, 0.22 ) }
    dend_25 { pt3dadd( 214.445, 62.0606, 7.51505, 0.22 ) }
    dend_25 { pt3dadd( 217.364, 62.4124, 7.55944, 0.22 ) }
    dend_25 { pt3dadd( 219.043, 62.6552, 7.53729, 0.22 ) }
    dend_25 { pt3dadd( 221.55, 63.0349, 7.49284, 0.22 ) }
    dend_25 { pt3dadd( 222.382, 63.1757, 7.47356, 0.22 ) }
    dend_25 { pt3dadd( 223.635, 63.4433, 7.43422, 0.22 ) }
    dend_25 { pt3dadd( 234.414, 64.9765, 9.35016, 0.22 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 63/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 131.979, 43.8563, 1.17514, 0.52 ) }
    dend_24 { pt3dadd( 133.567, 44.3602, 1.76738, 0.52 ) }
    dend_24 { pt3dadd( 135.675, 45.1636, 2.592, 0.52 ) }
    dend_24 { pt3dadd( 136.933, 45.7625, 3.11581, 0.52 ) }
    dend_24 { pt3dadd( 140.147, 47.6537, 4.69391, 0.52 ) }
    dend_24 { pt3dadd( 142.723, 49.255, 6.23188, 0.52 ) }
    dend_24 { pt3dadd( 143.967, 50.0468, 7.02228, 0.52 ) }
    dend_24 { pt3dadd( 146.01, 51.3683, 8.34917, 0.52 ) }
    dend_24 { pt3dadd( 147.481, 52.3673, 9.29197, 0.52 ) }
    dend_24 { pt3dadd( 149.543, 53.7157, 10.6937, 0.52 ) }
    dend_24 { pt3dadd( 152.07, 55.3767, 12.643, 0.52 ) }
    dend_24 { pt3dadd( 154.428, 56.7952, 14.4338, 0.52 ) }
    dend_24 { pt3dadd( 155.171, 57.2191, 14.9851, 0.52 ) }
    dend_24 { pt3dadd( 156.276, 57.7145, 15.7334, 0.52 ) }
    dend_24 { pt3dadd( 159.76, 58.9806, 18.0376, 0.52 ) }
    dend_24 { pt3dadd( 160.994, 59.3617, 18.8211, 0.29 ) }
    dend_24 { pt3dadd( 162.307, 59.7434, 19.7208, 0.29 ) }
    dend_24 { pt3dadd( 163.167, 59.9366, 20.4759, 0.29 ) }
    dend_24 { pt3dadd( 164.099, 60.0996, 21.464, 0.29 ) }
    dend_24 { pt3dadd( 165.745, 60.2656, 23.5261, 0.29 ) }
    dend_24 { pt3dadd( 166.964, 60.2706, 25.3426, 0.44 ) }
    dend_24 { pt3dadd( 167.955, 60.1635, 26.9839, 0.44 ) }
    dend_24 { pt3dadd( 169.147, 59.9399, 29.234, 0.44 ) }
    dend_24 { pt3dadd( 169.988, 59.7215, 30.9125, 0.44 ) }
    dend_24 { pt3dadd( 170.565, 59.5518, 32.1439, 0.44 ) }
    dend_24 { pt3dadd( 171.306, 59.2783, 33.7226, 0.44 ) }
    dend_24 { pt3dadd( 172.639, 58.7125, 36.4544, 0.44 ) }
    dend_24 { pt3dadd( 173.079, 58.5459, 37.2623, 0.44 ) }
    dend_24 { pt3dadd( 173.788, 58.3409, 38.4766, 0.44 ) }
    dend_24 { pt3dadd( 174.522, 58.1982, 39.7408, 0.44 ) }
    dend_24 { pt3dadd( 175.061, 58.1843, 40.729, 0.44 ) }
    dend_24 { pt3dadd( 175.877, 58.2796, 42.1407, 0.44 ) }
    dend_24 { pt3dadd( 176.182, 58.3506, 42.6753, 0.44 ) }
    dend_24 { pt3dadd( 177.102, 58.6149, 44.3037, 0.44 ) }
    dend_24 { pt3dadd( 177.472, 58.7627, 44.9632, 0.44 ) }
    dend_24 { pt3dadd( 178.406, 59.2446, 46.6133, 0.37 ) }
    dend_24 { pt3dadd( 179.642, 60.0042, 48.6232, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_24 { pt3dadd( 180.877, 60.8544, 50.2227, 0.22 ) }
    dend_24 { pt3dadd( 181.482, 61.2666, 50.8853, 0.22 ) }
    dend_24 { pt3dadd( 182.311, 61.8292, 51.6269, 0.22 ) }
    dend_24 { pt3dadd( 182.922, 62.28, 52.0795, 0.22 ) }
    dend_24 { pt3dadd( 183.942, 63.1556, 52.7278, 0.22 ) }
    dend_24 { pt3dadd( 185.775, 65.2235, 53.6834, 0.22 ) }
    dend_24 { pt3dadd( 186.355, 65.9763, 53.8636, 0.22 ) }
    dend_24 { pt3dadd( 187.437, 67.539, 54.001, 0.22 ) }
    dend_24 { pt3dadd( 188.671, 69.4682, 53.8893, 0.22 ) }
    dend_24 { pt3dadd( 189.366, 70.6375, 53.627, 0.22 ) }
    dend_24 { pt3dadd( 190.379, 72.4543, 52.8648, 0.22 ) }
    dend_24 { pt3dadd( 190.931, 73.443, 52.2199, 0.22 ) }
    dend_24 { pt3dadd( 191.435, 74.2706, 51.5312, 0.22 ) }
    dend_24 { pt3dadd( 191.589, 74.4929, 51.2971, 0.22 ) }
    dend_24 { pt3dadd( 192.054, 75.0128, 50.618, 0.22 ) }
    dend_24 { pt3dadd( 192.639, 75.5701, 49.7048, 0.22 ) }
    dend_24 { pt3dadd( 193.262, 76.1044, 48.7652, 0.22 ) }
    dend_24 { pt3dadd( 193.809, 76.5903, 47.9503, 0.22 ) }
    dend_24 { pt3dadd( 194.126, 76.889, 47.4863, 0.22 ) }
    dend_24 { pt3dadd( 194.394, 77.1759, 47.0729, 0.22 ) }
    dend_24 { pt3dadd( 195.352, 78.3932, 45.4019, 0.22 ) }
    dend_24 { pt3dadd( 195.73, 79.0019, 44.5833, 0.22 ) }
    dend_24 { pt3dadd( 196.035, 79.6032, 43.7739, 0.22 ) }
    dend_24 { pt3dadd( 196.278, 80.1258, 43.0329, 0.22 ) }
    dend_24 { pt3dadd( 196.536, 80.6649, 42.2642, 0.22 ) }
    dend_24 { pt3dadd( 197.592, 82.9395, 39.2369, 0.22 ) }
    dend_24 { pt3dadd( 197.958, 83.7321, 38.2498, 0.22 ) }
    dend_24 { pt3dadd( 198.388, 84.7836, 36.9704, 0.22 ) }
    dend_24 { pt3dadd( 198.867, 86.0856, 35.4625, 0.22 ) }
    dend_24 { pt3dadd( 199.119, 86.8765, 34.5922, 0.22 ) }
    dend_24 { pt3dadd( 199.561, 88.5674, 32.8135, 0.22 ) }
    dend_24 { pt3dadd( 199.645, 89.0383, 32.3467, 0.22 ) }
    dend_24 { pt3dadd( 199.874, 90.2658, 31.1765, 0.22 ) }
    dend_24 { pt3dadd( 199.935, 90.6957, 30.8028, 0.22 ) }
    dend_24 { pt3dadd( 199.959, 91.4224, 30.212, 0.22 ) }
    dend_24 { pt3dadd( 199.839, 92.3104, 29.3465, 0.22 ) }
    dend_24 { pt3dadd( 199.698, 92.7149, 28.8121, 0.22 ) }
    dend_24 { pt3dadd( 209.084, 97.303, 30.6987, 0.22 ) }
    dend_24 { pt3dadd( 218.545, 101.517, 32.9897, 0.22 ) }
    dend_24 { pt3dadd( 227.113, 106.283, 37.1843, 0.22 ) }
    dend_24 { pt3dadd( 236.488, 109.288, 41.0698, 0.22 ) }
    dend_24 { pt3dadd( 245.696, 110.643, 46.0276, 0.22 ) }
    dend_24 { pt3dadd( 255.609, 111.108, 49.5023, 0.22 ) }
    dend_24 { pt3dadd( 264.856, 111.157, 54.5145, 0.22 ) }
    dend_24 { pt3dadd( 273.714, 111.717, 60.1837, 0.22 ) }
    dend_24 { pt3dadd( 282.796, 111.01, 65.4216, 0.22 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 46/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 230.97, -38.2604, -91.5663, 0.29 ) }
    dend_20 { pt3dadd( 232.182, -38.9151, -92.3845, 0.29 ) }
    dend_20 { pt3dadd( 234.535, -40.1855, -93.9723, 0.29 ) }
    dend_20 { pt3dadd( 238.148, -42.1373, -96.4115, 0.29 ) }
    dend_20 { pt3dadd( 241.662, -44.035, -98.7831, 0.29 ) }
    dend_20 { pt3dadd( 244.564, -45.6024, -100.742, 0.29 ) }
    dend_20 { pt3dadd( 245.979, -46.3664, -101.697, 0.29 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 53/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 230.97, -38.2604, -91.5663, 0.29 ) }
    dend_19 { pt3dadd( 231.259, -39.2019, -90.8815, 0.29 ) }
    dend_19 { pt3dadd( 231.799, -41.0002, -89.5906, 0.29 ) }
    dend_19 { pt3dadd( 232.287, -42.805, -88.3195, 0.29 ) }
    dend_19 { pt3dadd( 232.545, -43.7774, -87.7494, 0.29 ) }
    dend_19 { pt3dadd( 232.839, -44.9207, -86.9886, 0.29 ) }
    dend_19 { pt3dadd( 233.078, -45.8341, -86.3371, 0.29 ) }
    dend_19 { pt3dadd( 233.733, -48.2733, -84.4702, 0.29 ) }
    dend_19 { pt3dadd( 234.067, -49.5627, -83.4594, 0.29 ) }
    dend_19 { pt3dadd( 234.583, -51.5203, -81.853, 0.29 ) }
    dend_19 { pt3dadd( 235.914, -55.9005, -78.0412, 0.29 ) }
    dend_19 { pt3dadd( 236.421, -57.3866, -76.6806, 0.29 ) }
    dend_19 { pt3dadd( 236.869, -58.5422, -75.585, 0.29 ) }
    dend_19 { pt3dadd( 237.32, -59.5403, -74.6402, 0.29 ) }
    dend_19 { pt3dadd( 237.791, -60.4756, -73.7663, 0.29 ) }
    dend_19 { pt3dadd( 238.524, -61.8118, -72.4515, 0.29 ) }
    dend_19 { pt3dadd( 238.966, -62.5059, -71.9459, 0.29 ) }
    dend_19 { pt3dadd( 239.597, -63.4316, -71.3383, 0.29 ) }
    dend_19 { pt3dadd( 240.244, -64.3263, -70.8275, 0.29 ) }
    dend_19 { pt3dadd( 241.045, -65.3628, -70.2927, 0.29 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 73/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -49.9061, -266.232, -43.2275, 0.81 ) }
    dend_50 { pt3dadd( -49.4691, -266.764, -43.6982, 0.81 ) }
    dend_50 { pt3dadd( -48.8292, -267.537, -44.3193, 0.81 ) }
    dend_50 { pt3dadd( -47.8338, -268.771, -45.1581, 0.81 ) }
    dend_50 { pt3dadd( -47.057, -269.8, -45.7225, 0.59 ) }
    dend_50 { pt3dadd( -46.6948, -270.313, -45.9572, 0.59 ) }
    dend_50 { pt3dadd( -46.2795, -270.947, -46.2136, 0.59 ) }
    dend_50 { pt3dadd( -45.6536, -272.042, -46.595, 0.66 ) }
    dend_50 { pt3dadd( -45.2223, -272.928, -46.8375, 0.66 ) }
    dend_50 { pt3dadd( -44.7739, -273.977, -47.1211, 0.66 ) }
    dend_50 { pt3dadd( -44.5274, -274.551, -47.3158, 0.66 ) }
    dend_50 { pt3dadd( -44.2673, -275.132, -47.5556, 0.66 ) }
    dend_50 { pt3dadd( -43.6601, -276.442, -48.2453, 0.96 ) }
    dend_50 { pt3dadd( -43.3097, -277.111, -48.6738, 0.96 ) }
    dend_50 { pt3dadd( -42.7148, -278.053, -49.4326, 0.96 ) }
    dend_50 { pt3dadd( -42.2414, -278.661, -50.0025, 0.96 ) }
    dend_50 { pt3dadd( -41.852, -279.081, -50.4619, 0.96 ) }
    dend_50 { pt3dadd( -41.4492, -279.476, -50.9312, 0.96 ) }
    dend_50 { pt3dadd( -41.0043, -279.904, -51.4231, 0.96 ) }
    dend_50 { pt3dadd( -40.4039, -280.535, -52.0841, 0.96 ) }
    dend_50 { pt3dadd( -40.0398, -280.95, -52.4549, 0.96 ) }
    dend_50 { pt3dadd( -38.8376, -282.385, -53.6361, 0.81 ) }
    dend_50 { pt3dadd( -38.3542, -282.955, -54.1089, 0.66 ) }
    dend_50 { pt3dadd( -37.8668, -283.533, -54.5599, 0.66 ) }
    dend_50 { pt3dadd( -37.3887, -284.068, -54.9289, 0.37 ) }
    dend_50 { pt3dadd( -36.6667, -284.843, -55.3163, 0.37 ) }
    dend_50 { pt3dadd( -36.3901, -285.115, -55.4107, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_50 { pt3dadd( -35.8762, -285.547, -55.4868, 0.37 ) }
    dend_50 { pt3dadd( -35.4236, -285.891, -55.5243, 0.44 ) }
    dend_50 { pt3dadd( -34.0255, -286.964, -55.5895, 0.44 ) }
    dend_50 { pt3dadd( -33.0096, -287.756, -55.5752, 0.44 ) }
    dend_50 { pt3dadd( -32.2476, -288.391, -55.5312, 0.44 ) }
    dend_50 { pt3dadd( -31.5347, -289.006, -55.4382, 0.44 ) }
    dend_50 { pt3dadd( -30.5516, -289.88, -55.2901, 0.44 ) }
    dend_50 { pt3dadd( -29.3528, -290.966, -55.1079, 0.22 ) }
    dend_50 { pt3dadd( -28.962, -291.341, -55.0476, 0.22 ) }
    dend_50 { pt3dadd( -27.7171, -292.586, -54.865, 0.22 ) }
    dend_50 { pt3dadd( -26.8981, -293.526, -54.7482, 0.22 ) }
    dend_50 { pt3dadd( -25.8853, -294.935, -54.6082, 0.22 ) }
    dend_50 { pt3dadd( -25.3598, -295.796, -54.549, 0.22 ) }
    dend_50 { pt3dadd( -25.0832, -296.439, -54.5182, 0.22 ) }
    dend_50 { pt3dadd( -24.8731, -297.302, -54.4882, 0.37 ) }
    dend_50 { pt3dadd( -24.7514, -298.636, -54.5131, 0.37 ) }
    dend_50 { pt3dadd( -24.6975, -300.006, -54.6292, 0.37 ) }
    dend_50 { pt3dadd( -24.6903, -300.409, -54.6838, 0.59 ) }
    dend_50 { pt3dadd( -24.6283, -302.267, -55.0398, 0.59 ) }
    dend_50 { pt3dadd( -24.5273, -303.694, -55.3632, 0.59 ) }
    dend_50 { pt3dadd( -24.3026, -305.642, -55.8045, 0.59 ) }
    dend_50 { pt3dadd( -23.919, -308.069, -56.3209, 0.59 ) }
    dend_50 { pt3dadd( -23.6997, -309.222, -56.5141, 0.59 ) }
    dend_50 { pt3dadd( -23.5247, -310.088, -56.6084, 0.59 ) }
    dend_50 { pt3dadd( -23.2092, -311.428, -56.7139, 0.59 ) }
    dend_50 { pt3dadd( -22.8573, -312.852, -56.7189, 0.59 ) }
    dend_50 { pt3dadd( -22.6218, -313.755, -56.5897, 0.59 ) }
    dend_50 { pt3dadd( -22.336, -315.156, -56.1768, 0.44 ) }
    dend_50 { pt3dadd( -22.2092, -316.068, -55.8657, 0.44 ) }
    dend_50 { pt3dadd( -22.1608, -316.921, -55.5585, 0.44 ) }
    dend_50 { pt3dadd( -22.1629, -318.288, -55.0596, 0.44 ) }
    dend_50 { pt3dadd( -22.2596, -321.092, -54.0186, 0.44 ) }
    dend_50 { pt3dadd( -22.3766, -324.266, -52.7014, 0.44 ) }
    dend_50 { pt3dadd( -22.4372, -325.295, -52.2607, 0.44 ) }
    dend_50 { pt3dadd( -22.5593, -326.514, -51.7035, 0.44 ) }
    dend_50 { pt3dadd( -22.6753, -327.325, -51.3076, 0.44 ) }
    dend_50 { pt3dadd( -22.8055, -328.007, -51.0084, 0.44 ) }
    dend_50 { pt3dadd( -22.917, -328.785, -50.6909, 0.44 ) }
    dend_50 { pt3dadd( -22.9873, -329.778, -50.1655, 0.44 ) }
    dend_50 { pt3dadd( -23.0357, -330.439, -49.8153, 0.66 ) }
    dend_50 { pt3dadd( -23.0883, -331.212, -49.4407, 0.66 ) }
    dend_50 { pt3dadd( -23.2062, -333.063, -48.6684, 0.66 ) }
    dend_50 { pt3dadd( -23.308, -334.481, -48.1696, 0.66 ) }
    dend_50 { pt3dadd( -23.4067, -336.301, -47.6123, 0.37 ) }
    dend_50 { pt3dadd( -23.4317, -338.238, -47.0788, 0.37 ) }
    dend_50 { pt3dadd( -23.3877, -339.392, -46.8051, 0.37 ) }
    dend_50 { pt3dadd( -23.2771, -340.607, -46.565, 0.37 ) }
    dend_50 { pt3dadd( -23.0335, -341.955, -46.3407, 0.37 ) }
    dend_50 { pt3dadd( -22.7871, -342.992, -46.2202, 0.37 ) }
    dend_50 { pt3dadd( -22.3585, -344.183, -46.093, 0.37 ) }
    dend_50 { pt3dadd( -21.9594, -344.996, -45.9675, 0.37 ) }
    dend_50 { pt3dadd( -21.3448, -346.079, -45.7307, 0.37 ) }
    dend_50 { pt3dadd( -20.5447, -347.382, -45.329, 0.37 ) }
    dend_50 { pt3dadd( -20.0339, -348.171, -45.0416, 0.37 ) }
    dend_50 { pt3dadd( -19.3761, -349.274, -44.6096, 0.37 ) }
    dend_50 { pt3dadd( -18.799, -350.323, -44.1727, 0.15 ) }
    dend_50 { pt3dadd( -18.1702, -351.583, -43.6229, 0.15 ) }
    dend_50 { pt3dadd( -17.7583, -352.491, -43.1932, 0.15 ) }
    dend_50 { pt3dadd( -17.5587, -353.023, -42.9278, 0.15 ) }
    dend_50 { pt3dadd( -17.0043, -354.54, -42.1931, 0.15 ) }
    dend_50 { pt3dadd( -16.6928, -355.395, -41.8136, 0.15 ) }
    dend_50 { pt3dadd( -16.3199, -356.422, -41.4131, 0.15 ) }
    dend_50 { pt3dadd( -15.9096, -357.523, -41.007, 0.15 ) }
    dend_50 { pt3dadd( -15.5032, -358.657, -40.5918, 0.15 ) }
    dend_50 { pt3dadd( -15.0366, -360.105, -40.0513, 0.15 ) }
    dend_50 { pt3dadd( -14.691, -361.195, -39.6487, 0.15 ) }
    dend_50 { pt3dadd( -14.4001, -362.165, -39.3183, 0.15 ) }
    dend_50 { pt3dadd( -14.1395, -363.115, -39.0371, 0.15 ) }
    dend_50 { pt3dadd( -13.7724, -364.535, -38.6913, 0.15 ) }
    dend_50 { pt3dadd( -13.5873, -365.28, -38.505, 0.15 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 70/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -49.9061, -266.232, -43.2275, 0.66 ) }
    dend_49 { pt3dadd( -48.7622, -266.438, -43.3115, 0.66 ) }
    dend_49 { pt3dadd( -48.1705, -266.544, -43.355, 0.66 ) }
    dend_49 { pt3dadd( -47.6449, -266.639, -43.3936, 0.66 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 74/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 245.979, -46.3664, -101.697, 0.22 ) }
    dend_22 { pt3dadd( 247.612, -46.6923, -103.113, 0.22 ) }
    dend_22 { pt3dadd( 250.282, -47.2251, -105.428, 0.22 ) }
    dend_22 { pt3dadd( 252.454, -47.6584, -107.311, 0.22 ) }
    dend_22 { pt3dadd( 254.25, -48.0168, -108.869, 0.22 ) }
    dend_22 { pt3dadd( 255.605, -48.2871, -110.043, 0.22 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 80/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 245.979, -46.3664, -101.697, 0.15 ) }
    dend_21 { pt3dadd( 247.4, -48.351, -102.034, 0.15 ) }
    dend_21 { pt3dadd( 248.657, -50.108, -102.333, 0.15 ) }
    dend_21 { pt3dadd( 249.826, -51.7396, -102.61, 0.15 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_38, dend_35, dend_26, dend_7, dend_0, dend_63, dend_56, dend_54, dend_39, dend_37, dend_36, dend_28, dend_27, dend_9, dend_8, dend_2, dend_1, dend_60, dend_57, dend_51, dend_40, dend_32, dend_29, dend_15, dend_10, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_42, dend_41, dend_34, dend_33, dend_31, dend_30, dend_17, dend_16, dend_14, dend_11, dend_5, dend_4, dend_46, dend_43, dend_23, dend_18, dend_13, dend_12, dend_48, dend_47, dend_45, dend_44, dend_25, dend_24, dend_20, dend_19, dend_50, dend_49, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_55 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_38, dend_35, dend_26, dend_7, dend_0, dend_63, dend_56, dend_54, dend_39, dend_37, dend_36, dend_28, dend_27, dend_9, dend_8, dend_2, dend_1, dend_60, dend_57, dend_51, dend_40, dend_32, dend_29, dend_15, dend_10, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_42, dend_41, dend_34, dend_33, dend_31, dend_30, dend_17, dend_16, dend_14, dend_11, dend_5, dend_4, dend_46, dend_43, dend_23, dend_18, dend_13, dend_12, dend_48, dend_47, dend_45, dend_44, dend_25, dend_24, dend_20, dend_19, dend_50, dend_49, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_35 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_63 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_54 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_37 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_36 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_27 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_8 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_51 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_6 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_62 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_61 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_58 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_53 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_52 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_41 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_34 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_33 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_31 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_30 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_14 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_11 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_5 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_46 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_18 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_13 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_48 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_47 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_25 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_24 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_50 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_38 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_26 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_55 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_7 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_28 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_39 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_32 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_40 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_9 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_56 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_57 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_10 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_60 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_42 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_15 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_59 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_43 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_16 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_44 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_4 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_17 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_45 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_12 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_23 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_49 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_20 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_21 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_22 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_19 OneSecGrp_SectionRef_63.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_26, dend_26, dend_26, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_60, dend_60, dend_60, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_35 nseg = 5
    dend_63 nseg = 11
    dend_54 nseg = 13
    dend_37 nseg = 7
    dend_36 nseg = 5
    dend_27 nseg = 9
    dend_8 nseg = 17
    dend_2 nseg = 3
    dend_1 nseg = 11
    dend_51 nseg = 3
    dend_6 nseg = 9
    dend_62 nseg = 11
    dend_61 nseg = 11
    dend_58 nseg = 11
    dend_53 nseg = 13
    dend_52 nseg = 11
    dend_41 nseg = 9
    dend_34 nseg = 15
    dend_33 nseg = 17
    dend_31 nseg = 11
    dend_30 nseg = 3
    dend_14 nseg = 15
    dend_11 nseg = 3
    dend_5 nseg = 11
    dend_46 nseg = 7
    dend_18 nseg = 9
    dend_13 nseg = 19
    dend_48 nseg = 3
    dend_47 nseg = 3
    dend_25 nseg = 5
    dend_24 nseg = 11
    dend_50 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L6_LBC_ef1920e6b8_0_0


