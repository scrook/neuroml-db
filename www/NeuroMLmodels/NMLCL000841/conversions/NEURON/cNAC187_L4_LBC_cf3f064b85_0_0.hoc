// Cell: cNAC187_L4_LBC_cf3f064b85_0_0
/*
{
  "id" : "cNAC187_L4_LBC_cf3f064b85_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.162869, -11.0647, -2.58105, 2.87216", "-0.134852, -10.0555, -2.3364, 4.81021", "-0.106835, -9.04625, -2.09174, 6.29865", "-0.0788176, -8.037, -1.84709, 7.78708", "-0.0508004, -7.02776, -1.60244, 9.27866", "-0.0227833, -6.01852, -1.35779, 10.8108", "0.00523389, -5.00927, -1.11314, 12.351", "0.033251, -4.00003, -0.868484, 13.0944", "0.0612682, -2.99079, -0.623832, 13.4108", "0.0892853, -1.98154, -0.37918, 13.7272", "0.117302, -0.972301, -0.134529, 13.7558", "0.14532, 0.0369421, 0.110123, 13.5627", "0.173337, 1.04619, 0.354775, 13.3661", "0.201354, 2.05543, 0.599427, 13.1696", "0.229371, 3.06467, 0.844079, 12.973", "0.257388, 4.07391, 1.08873, 12.4764", "0.285405, 5.08316, 1.33338, 11.5304", "0.313423, 6.0924, 1.57803, 10.5843", "0.34144, 7.10164, 1.82269, 9.63824", "0.369457, 8.11089, 2.06734, 7.56191", "0.397474, 9.12013, 2.31199, 4.12248" ]
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-1.32254, 0.627652, -22.8114, 1.33", "-2.38986, 2.63179, -28.8868, 0.67", "-3.01892, 3.66801, -31.5084, 0.67", "-4.17392, 5.66944, -35.7616, 0.67", "-5.0937, 7.41726, -39.1805, 0.67", "-6.6345, 10.8732, -45.7277, 0.67", "-7.56535, 13.2293, -50.0641, 0.33", "-7.73116, 14.1703, -51.7253, 0.33", "-7.83271, 15.9002, -54.3752, 1.33", "-7.89192, 19.4333, -58.3815, 0.33", "-7.8043, 20.7185, -59.539, 0.33", "-7.69141, 21.0678, -59.8132, 0.67", "-6.74327, 23.5505, -61.3204, 0.33", "-6.1599, 25.1022, -62.2547, 2.0", "-4.75662, 29.5703, -64.5802, 0.33", "-4.46076, 31.0481, -65.2549, 1.33", "-3.98193, 36.9138, -68.283, 0.33", "-4.00987, 38.0829, -68.9285, 0.33", "-4.28852, 40.3836, -70.9695, 1.33", "-4.55991, 42.4922, -73.5709, 0.33", "-4.72775, 43.8252, -75.4388, 0.33", "-4.87369, 45.6581, -78.1649, 0.33", "-4.85685, 46.6833, -79.7835, 2.0", "-3.77092, 52.8147, -90.8474, 0.33", "-3.44775, 53.983, -93.2375, 1.33", "-2.89802, 55.5353, -96.7206, 0.33", "-2.453, 56.7291, -99.2868, 1.33", "-1.97303, 58.38, -102.48, 0.33", "-1.50285, 60.5783, -106.377, 1.33", "-1.20194, 64.7781, -112.101, 0.33", "-1.22872, 65.5003, -113.003, 0.67", "-1.583, 68.4339, -116.412, 0.33", "-2.22058, 70.9895, -118.829, 0.33", "-2.54045, 71.8803, -119.519, 1.33", "-4.11895, 75.6634, -121.484, 0.33", "-4.60808, 76.6641, -121.831, 0.33", "-4.7619, 76.9382, -121.909, 0.67", "-6.44502, 79.6618, -122.441, 0.33", "-6.83582, 80.3411, -122.617, 0.67", "-9.11336, 84.8732, -123.77, 0.33", "-9.32116, 85.4545, -123.962, 1.33", "-9.97109, 88.2179, -124.892, 0.33", "-10.1334, 89.2334, -125.304, 1.33", "-10.5993, 93.989, -127.476, 0.33", "-10.6444, 96.2495, -128.554, 1.33", "-10.3748, 101.692, -131.51, 0.33", "-10.2666, 103.937, -132.854, 1.33", "-10.1148, 108.025, -135.472, 0.33", "-10.101, 108.806, -135.962, 0.67", "-10.1945, 112.771, -138.338, 0.33", "-10.2761, 114.335, -139.367, 1.33", "-10.5957, 117.822, -141.709, 0.33", "-10.6775, 118.649, -142.303, 0.67", "-10.9509, 122.08, -144.507, 0.33", "-11.0647, 122.979, -145.123, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992625513693,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-5.70254, -6.0246, -3.1514, 2.0", "-6.80886, -6.81329, -1.9174, 1.33", "-9.07435, -8.42832, 0.609561, 1.33", "-10.523, -9.46107, 2.22543, 1.33", "-11.8648, -10.4176, 3.72214, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992625513693
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "1.99746, -5.6146, -19.3514, 2.0", "0.565796, -6.70579, -19.3514, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992625513693
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-0.82254, -11.5083, -5.4014, 1.33", "-2.9373, -10.302, -7.4479, 1.33", "-5.05501, -8.87698, -9.64408, 1.33", "-9.84406, -5.80435, -14.3418, 1.33", "-12.1192, -4.49327, -16.2364, 1.33", "-15.8585, -2.33845, -19.3501, 1.33", "-18.4299, -0.856662, -21.4914, 0.67", "-18.8446, -0.553808, -21.8629, 0.67", "-20.5985, 1.00054, -23.5599, 1.33", "-25.1081, 5.24964, -27.373, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992625513693
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.00253968, -9.70434, 5.9486, 2.0", "3.09086, -12.1027, 4.31271, 1.33", "6.74712, -14.9374, 2.37916, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992625513693
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "1.05746, 3.8359, 19.0286, 1.33", "2.9102, 4.8065, 19.0286, 1.33", "5.61886, 6.22549, 19.0286, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992625513693
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.92746, 9.23765, -8.1714, 2.0", "5.53432, 10.4262, -8.1714, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992625513693
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.397474, 9.12013, 2.31199, 0.67", "0.813722, 24.1144, 2.31199, 0.67", "1.22997, 39.1086, 2.31199, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-11.8648, -10.4176, 3.72214, 0.67", "-18.5441, -12.3663, 2.65938, 0.67", "-21.8109, -13.3424, 2.55031, 0.67", "-24.4727, -14.1322, 2.55593, 0.67", "-26.8361, -14.8788, 2.51521, 0.67", "-29.945, -15.8704, 2.41762, 0.67", "-32.6218, -16.8023, 2.32412, 0.67", "-35.8018, -18.1186, 2.3499, 0.67", "-38.9288, -19.6391, 2.44827, 0.67", "-41.3696, -20.9532, 2.36114, 0.67", "-45.6144, -23.797, 1.92519, 0.67", "-47.0798, -24.9569, 1.56931, 0.67", "-48.8731, -26.5631, 0.916202, 0.67", "-49.938, -27.5423, 0.418165, 0.67", "-52.4549, -29.8953, -0.799671, 0.67", "-54.5775, -31.896, -1.87753, 0.67", "-56.9123, -34.0794, -3.09777, 0.67", "-58.7794, -35.7139, -3.96979, 0.67", "-61.6167, -37.8292, -4.82862, 1.33", "-63.7579, -39.4426, -5.40268, 0.33", "-64.6174, -40.1129, -5.57833, 0.33", "-67.6147, -42.3746, -5.96939, 0.67", "-69.6442, -44.007, -6.05528, 0.67", "-74.7342, -48.5276, -6.05335, 0.67", "-77.6435, -51.2381, -6.02345, 0.67", "-79.7261, -53.1973, -5.98253, 0.33", "-81.5063, -54.8444, -5.94712, 0.67", "-83.4576, -56.7217, -5.89714, 0.67", "-84.623, -57.8664, -5.86528, 0.33", "-85.8821, -59.178, -5.81958, 0.33", "-87.7637, -60.8295, -5.66177, 0.67", "-88.5991, -61.5304, -5.6188, 0.67", "-89.95, -62.5829, -5.60061, 0.33", "-90.9791, -63.263, -5.60274, 0.67", "-96.0261, -66.4135, -5.6446, 0.33", "-97.8432, -67.5157, -5.66815, 0.33", "-99.3462, -68.4048, -5.69596, 0.33", "-100.446, -68.9972, -5.7249, 0.67", "-102.63, -70.0538, -5.80088, 0.33", "-104.218, -70.8008, -5.86316, 0.33", "-105.614, -71.3597, -5.91959, 0.67", "-106.862, -71.8468, -5.96104, 0.67", "-109.373, -72.8239, -6.1548, 0.33", "-110.249, -73.1863, -6.22322, 0.33", "-111.383, -73.6747, -6.31493, 0.33", "-115.31, -75.1791, -6.67239, 0.67", "-118.136, -76.2327, -6.95192, 0.33", "-120.007, -76.8643, -7.15964, 0.67" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-11.8648, -10.4176, 3.72214, 0.67", "-13.6034, -9.56752, 4.49683, 0.67", "-14.9463, -8.6916, 5.08449, 0.67", "-20.4534, -4.94007, 7.15577, 0.67", "-22.0051, -4.02806, 7.73504, 0.67", "-24.7862, -2.59328, 8.64573, 0.67", "-27.6019, -1.14071, 9.56772, 0.67", "-30.5907, 0.412483, 10.5008, 0.67", "-32.3705, 1.42711, 11.0202, 0.67", "-35.8169, 3.60966, 11.5435, 0.33", "-38.0908, 4.67236, 11.9901, 0.33", "-45.6831, 9.34673, 15.1322, 0.33", "-53.9068, 13.4151, 17.4075, 0.33", "-62.4514, 17.1457, 18.9765, 0.33", "-70.9881, 20.4776, 21.2562, 0.33", "-78.4973, 25.5647, 23.9585, 0.33", "-86.096, 31.0058, 25.5681, 0.33", "-94.1665, 35.9935, 25.8496, 0.33", "-102.099, 40.7006, 27.971, 0.33", "-109.426, 44.8261, 32.2554, 0.33", "-117.012, 47.8822, 36.943, 0.33", "-123.69, 51.848, 42.2898, 0.33", "-129.85, 54.8135, 48.7734, 0.33", "-137.003, 55.3142, 54.8948, 0.33", "-143.285, 56.7332, 61.7784, 0.33", "-149.847, 57.1134, 68.5438, 0.33", "-154.824, 57.4405, 76.5633, 0.33", "-157.933, 55.807, 85.3829, 0.33", "-160.066, 52.5662, 94.0958, 0.33", "-163.264, 50.9888, 102.892, 0.33", "-166.355, 49.6219, 111.757, 0.33" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "0.565796, -6.70579, -19.3514, 1.33", "-3.99213, -9.66027, -17.6819, 1.33", "-6.18986, -11.0848, -16.8768, 1.33" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "0.565796, -6.70579, -19.3514, 0.67", "-3.02625, -11.0671, -16.9003, 0.67", "-5.40426, -13.9544, -15.2777, 0.33" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-25.1081, 5.24964, -27.373, 0.67", "-27.259, 6.5791, -28.1708, 0.67", "-28.197, 7.06537, -28.5852, 1.33", "-31.2914, 8.62964, -29.631, 0.67", "-32.9451, 9.43472, -30.1015, 0.67", "-34.3207, 10.0045, -30.6486, 0.33", "-36.4877, 10.8421, -31.6899, 0.67", "-39.9619, 11.8706, -33.3645, 0.67", "-42.5038, 12.4903, -34.8548, 0.33", "-43.2877, 12.6855, -35.3616, 0.33", "-47.9467, 13.6218, -38.3043, 1.33", "-49.3128, 13.8795, -39.3119, 0.67", "-51.9176, 14.3679, -41.5907, 0.67", "-54.5627, 14.894, -44.0571, 1.33", "-56.2017, 15.2899, -45.6621, 0.33", "-57.1782, 15.6314, -46.6312, 0.33", "-60.7247, 17.153, -49.9887, 0.67", "-63.4293, 18.5086, -52.6843, 0.33", "-64.7244, 19.327, -54.0216, 0.67", "-65.9106, 20.1625, -55.1823, 0.33", "-68.4693, 22.1958, -57.7629, 0.67", "-71.2517, 24.5074, -60.2733, 0.33", "-72.4952, 25.5288, -61.1938, 1.33", "-75.3567, 27.5561, -62.8425, 0.33", "-75.9332, 27.8844, -63.1063, 0.67", "-78.4451, 28.9481, -63.8655, 0.33", "-82.0541, 30.1652, -64.3628, 0.33", "-83.834, 30.6963, -64.43, 1.33", "-88.9944, 31.8593, -64.6845, 0.33", "-89.8831, 32.0171, -64.7297, 0.67", "-92.9959, 32.5736, -64.9253, 0.33", "-94.49, 32.8554, -65.1013, 0.67", "-95.9797, 33.242, -65.4515, 0.33", "-99.4937, 34.4924, -66.6293, 0.67", "-100.668, 35.0732, -67.2013, 0.33", "-101.455, 35.5148, -67.6157, 0.67", "-104.364, 37.3984, -69.2887, 0.33", "-104.811, 37.7558, -69.5733, 1.33", "-106.175, 39.1002, -70.4298, 0.33", "-106.992, 40.0727, -70.9038, 0.67", "-107.738, 41.0656, -71.3792, 0.33", "-108.106, 41.6066, -71.6587, 0.67", "-110.572, 45.4203, -73.6666, 0.33", "-111.132, 46.3068, -74.1432, 1.33", "-112.058, 47.7358, -74.9373, 0.33", "-112.428, 48.2881, -75.2259, 0.67", "-115.546, 52.7715, -77.2846, 0.33", "-115.903, 53.2642, -77.4737, 0.67", "-118.19, 56.1055, -78.2818, 0.33", "-118.656, 56.6285, -78.3905, 0.67", "-121.201, 59.2153, -78.6961, 0.33", "-122.375, 60.2786, -78.7148, 0.67", "-123.707, 61.3337, -78.5842, 0.33", "-125.225, 62.4749, -78.4185, 1.33", "-127.217, 63.8408, -78.185, 0.33", "-127.777, 64.2728, -78.1422, 0.67", "-130.907, 66.8849, -78.0015, 0.33", "-131.66, 67.555, -77.9999, 0.67", "-134.567, 70.3007, -78.0425, 0.33", "-135.274, 71.023, -78.0692, 0.67", "-140.232, 76.2777, -78.3681, 0.33", "-140.451, 76.5052, -78.3939, 1.33", "-143.163, 79.2583, -78.8493, 0.33", "-143.98, 80.0433, -79.0174, 0.67", "-145.465, 81.3586, -79.3829, 0.33", "-146.547, 82.2389, -79.6302, 0.67", "-151.169, 85.5952, -80.6239, 0.33", "-151.956, 86.1204, -80.7705, 0.67", "-154.849, 87.8918, -81.2219, 0.33", "-155.685, 88.3584, -81.3249, 0.67", "-159.949, 90.5679, -81.6906, 0.33", "-160.339, 90.7702, -81.6996, 1.33", "-162.622, 91.9352, -81.5964, 1.33", "-165.135, 93.2369, -81.4678, 0.33", "-165.934, 93.6474, -81.417, 0.67", "-168.755, 95.0701, -81.2182, 0.33", "-170.834, 95.9653, -81.0734, 0.67" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-25.1081, 5.24964, -27.373, 0.67", "-28.4618, -1.50163, -37.2984, 0.67", "-29.7938, -3.81179, -40.5729, 0.67", "-31.5237, -6.56302, -43.7542, 0.33", "-32.2803, -7.69431, -44.8315, 2.0", "-34.0374, -10.3171, -46.9574, 0.33", "-36.0671, -13.1059, -48.868, 0.33", "-36.9938, -14.1266, -49.151, 0.33", "-40.7177, -17.7018, -49.8535, 0.67", "-42.6153, -19.2884, -50.1572, 0.33", "-43.9019, -20.1757, -50.3912, 0.33", "-47.5495, -22.06, -51.0597, 2.0", "-50.0925, -23.0749, -51.4777, 0.33", "-51.8899, -23.537, -51.9792, 0.33", "-58.2614, -24.1267, -54.4579, 0.67", "-60.9305, -24.2174, -55.6259, 1.33", "-63.1195, -24.1541, -56.73, 0.33", "-64.3085, -24.1041, -57.4237, 0.67", "-69.0736, -23.7908, -60.3535, 0.33", "-71.8934, -23.6759, -62.0789, 1.33", "-74.839, -23.5386, -63.85, 0.33", "-77.6888, -23.4859, -65.6132, 0.67", "-81.0953, -23.5739, -67.847, 0.33", "-82.8946, -23.7546, -69.1566, 0.33", "-83.9969, -23.9313, -69.9805, 0.33", "-85.7357, -24.4325, -71.4894, 0.67", "-88.3542, -25.5375, -74.0353, 0.33", "-91.0877, -27.0528, -76.7804, 0.67", "-94.8714, -29.2913, -80.8094, 0.33", "-95.8629, -29.8292, -81.9762, 0.67", "-97.7261, -30.6122, -84.1242, 0.33", "-99.1985, -31.1682, -85.802, 0.33", "-100.044, -31.4245, -86.6337, 0.33", "-101.981, -31.9018, -88.253, 1.33", "-108.007, -33.2254, -92.8283, 0.33", "-110.73, -33.8314, -94.8651, 0.67", "-115.357, -34.9402, -98.168, 0.33", "-117.484, -35.5186, -99.7354, 1.33", "-120.17, -36.3759, -101.709, 0.33", "-121.974, -37.0291, -102.982, 0.33", "-124.818, -38.2044, -104.994, 0.67", "-128.694, -39.5974, -107.825, 0.33", "-129.975, -39.8678, -108.745, 0.67", "-131.438, -39.9985, -109.967, 0.33", "-132.464, -39.9617, -110.877, 2.0", "-137.201, -39.4414, -115.189, 0.33", "-140.303, -38.9309, -118.117, 0.67", "-143.264, -38.1683, -121.076, 0.33", "-146.322, -37.3596, -124.169, 0.33", "-146.568, -37.2942, -124.452, 0.67" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.74712, -14.9374, 2.37916, 0.67", "8.47614, -19.048, 3.98469, 0.67", "10.4182, -24.5935, 6.0227, 0.67", "12.868, -33.3668, 8.87462, 0.67", "14.0628, -39.7209, 10.9968, 0.67", "14.6709, -43.9691, 12.4062, 0.67", "14.8531, -45.5585, 12.9266, 0.67", "14.9599, -48.5984, 13.8902, 0.67", "15.0782, -54.4455, 15.6678, 0.67", "15.192, -61.2393, 17.3536, 0.67", "15.5593, -65.2515, 18.5207, 0.67", "15.8476, -66.8009, 19.0581, 0.67", "16.9412, -70.9346, 20.6096, 0.67", "18.89, -76.0651, 22.6623, 0.67", "21.9149, -82.5874, 25.4182, 0.67", "24.4709, -87.1215, 27.3081, 0.67", "27.1845, -91.558, 29.3534, 0.67", "28.1108, -92.9523, 30.0608, 0.67", "29.477, -94.7971, 31.1762, 0.33", "33.153, -105.427, 35.8564, 0.33", "35.5424, -116.918, 39.2471, 0.33", "35.5034, -128.625, 42.784, 0.33", "35.4955, -139.362, 48.5653, 0.33", "36.4039, -150.063, 54.3355, 0.33", "39.1331, -159.141, 61.9034, 0.33", "40.6672, -167.465, 70.5591, 0.33", "44.3883, -173.633, 80.2058, 0.33", "48.1682, -181.43, 88.6314, 0.33", "51.7948, -188.489, 97.7179, 0.33" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "6.74712, -14.9374, 2.37916, 1.33", "6.13005, -17.5345, 2.25335, 1.33", "4.65927, -23.4318, 1.97203, 1.33", "2.12082, -33.4327, 1.50203, 0.67", "-0.682729, -43.9427, 1.17474, 0.67", "-2.0443, -48.9056, 1.07346, 0.67", "-3.1426, -53.2056, 1.02134, 0.67", "-3.8107, -56.5431, 1.08581, 0.67", "-4.21956, -58.9802, 1.26369, 0.67", "-4.6758, -62.3888, 1.70609, 0.67", "-4.94054, -65.5663, 2.24913, 0.67", "-5.35727, -70.8232, 2.99789, 0.67", "-5.91747, -81.0614, 4.67621, 0.67", "-6.21859, -87.0231, 5.68833, 0.67", "-6.36007, -89.0255, 6.06804, 0.67", "-6.74935, -94.0283, 7.04141, 0.67", "-7.6478, -101.017, 8.41249, 0.67", "-8.90029, -107.158, 9.44255, 0.67", "-9.78633, -110.829, 9.97933, 0.67", "-11.0542, -116.475, 10.7815, 0.67", "-11.8668, -119.808, 11.3178, 0.67", "-12.9031, -123.704, 12.062, 0.33", "-14.0554, -128.457, 13.1128, 0.33", "-14.7605, -130.996, 13.3168, 0.33", "-15.7215, -134.752, 13.5169, 0.33", "-19.0825, -144.196, 15.3355, 0.33", "-22.6201, -153.215, 18.4221, 0.33", "-27.8362, -160.824, 22.5621, 0.33", "-31.91, -167.617, 28.8002, 0.33", "-35.0976, -172.825, 36.7674, 0.33", "-37.8467, -178.411, 44.6533, 0.33" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "5.61886, 6.22549, 19.0286, 0.67", "7.30529, 2.01666, 19.4241, 0.67", "9.30206, -2.38387, 20.9435, 0.67", "10.4816, -4.3128, 22.1095, 1.33", "12.8867, -7.27235, 24.5685, 1.33", "13.9892, -8.20612, 25.587, 0.67", "16.5335, -9.93821, 27.7336, 0.67", "17.4735, -10.2464, 28.9685, 0.67", "18.5742, -9.88505, 30.3023, 0.33", "19.1021, -9.58499, 30.8007, 0.67", "20.5937, -8.67836, 31.2628, 0.33", "23.924, -7.10754, 31.7016, 0.33", "31.0563, -14.0149, 35.5949, 0.33", "36.6552, -21.6403, 40.5722, 0.33" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "5.61886, 6.22549, 19.0286, 1.33", "2.87371, 8.74827, 18.6262, 1.33", "-0.362104, 12.2063, 18.0741, 0.67", "-4.21006, 16.6053, 17.3974, 0.67", "-8.29289, 21.6159, 16.3701, 0.67", "-11.6779, 26.3595, 15.3128, 0.33", "-14.4749, 30.737, 14.324, 0.67", "-15.9716, 33.8711, 13.4954, 0.33", "-16.6949, 35.8813, 12.9327, 0.33", "-17.8741, 40.517, 11.3907, 0.67", "-18.496, 44.9061, 9.82864, 0.33", "-18.7176, 47.8242, 8.70709, 0.67", "-18.9232, 52.5931, 6.89932, 0.33", "-18.9706, 54.6497, 6.07357, 0.33", "-18.9405, 58.776, 4.49479, 0.33", "-18.959, 59.6594, 4.24324, 0.67" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "5.53432, 10.4262, -8.1714, 1.33", "5.1892, 13.9797, -10.429, 1.33", "4.72981, 18.7098, -13.434, 1.33", "4.00195, 26.2041, -18.1952, 1.33", "3.78899, 28.3969, -19.5883, 1.33", "3.18592, 34.6063, -23.5332, 2.0" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "5.53432, 10.4262, -8.1714, 1.33", "8.27042, 10.9861, -7.94226, 1.33", "13.8155, 12.368, -7.61077, 1.33", "17.706, 13.6382, -7.11366, 1.33", "21.4501, 15.1451, -6.52437, 1.33", "29.7281, 19.0166, -5.62001, 0.67", "34.1069, 21.1052, -5.28189, 0.67", "38.0575, 23.1019, -5.30307, 0.67", "42.8956, 25.655, -5.81334, 0.67", "44.9605, 26.9893, -6.10639, 0.67", "49.423, 30.4278, -7.24091, 0.67", "53.53, 33.8452, -8.7024, 0.67", "58.1756, 37.6466, -10.9013, 0.67", "62.6294, 41.2021, -13.3051, 0.67", "67.3221, 44.9182, -16.0201, 0.67", "74.1948, 50.4064, -19.8702, 0.67", "78.1932, 53.7596, -22.0266, 0.67", "80.8241, 56.0766, -23.5198, 0.67", "81.7207, 56.811, -23.9931, 0.33", "84.6583, 58.8341, -25.3011, 0.33", "86.7634, 59.7878, -25.9674, 1.33", "89.2041, 60.3516, -26.3769, 0.67", "90.981, 60.5326, -26.7641, 0.67", "93.7226, 60.6073, -27.5293, 0.33", "97.9047, 60.5918, -28.788, 0.33", "98.9967, 60.6132, -29.1894, 1.33", "104.847, 61.0733, -31.6339, 0.33", "106.96, 61.3521, -32.5293, 0.67", "109.21, 61.8007, -33.4645, 0.33", "110.724, 62.2121, -34.1088, 1.33", "115.804, 64.0776, -36.2132, 0.33", "116.155, 64.2326, -36.353, 0.67", "119.365, 66.0294, -37.5749, 0.33", "120.366, 66.6778, -37.9412, 1.33", "123.99, 69.3954, -39.232, 0.33", "127.464, 72.4096, -40.4681, 0.33", "129.599, 74.3136, -41.0989, 0.33", "131.814, 76.2152, -41.7771, 1.33", "136.037, 79.8908, -43.164, 0.33", "136.355, 80.1555, -43.2615, 1.33", "140.236, 82.8526, -44.2364, 0.33", "143.967, 84.8319, -45.059, 0.67", "148.515, 86.657, -45.965, 0.33", "149.708, 86.9976, -46.1711, 1.33", "152.839, 87.5386, -46.5909, 0.33", "157.024, 88.089, -46.9083, 0.33", "159.462, 88.305, -47.055, 0.67", "162.337, 88.6008, -47.382, 0.33", "163.236, 88.6956, -47.5035, 1.33", "167.776, 89.0269, -48.584, 0.33", "169.188, 89.1161, -49.0406, 1.33", "175.294, 89.6807, -51.7191, 0.33", "177.934, 89.9568, -53.0685, 0.33", "178.432, 90.0111, -53.3375, 0.67", "184.96, 90.7318, -57.0283, 0.33", "185.747, 90.8259, -57.4728, 0.67", "190.407, 91.222, -59.9664, 0.33", "192.781, 91.3803, -61.1256, 0.33", "195.874, 91.5723, -62.4532, 0.33", "199.275, 91.8153, -63.9103, 0.33", "201.644, 92.0972, -64.8388, 0.67", "207.031, 92.4685, -66.8721, 0.33", "207.031, 92.4685, -66.8721, 0.67", "209.366, 92.4557, -67.6602, 0.33", "212.61, 92.3768, -68.8448, 0.67", "215.062, 92.2625, -69.705, 0.33", "217.498, 92.0028, -70.5701, 0.33", "220.635, 91.6235, -71.5327, 0.33", "221.964, 91.433, -71.9402, 0.67", "227.109, 90.4882, -73.5125, 0.33", "227.657, 90.367, -73.6622, 0.67", "232.852, 89.0353, -75.3046, 0.33", "233.93, 88.784, -75.6868, 0.67" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.22997, 39.1086, 2.31199, 0.67", "1.64622, 54.1028, 2.31199, 0.67", "2.06247, 69.097, 2.31199, 0.67" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-6.18986, -11.0848, -16.8768, 1.33", "-10.2145, -14.7689, -26.3156, 1.33", "-11.1331, -16.0236, -28.9437, 0.67", "-12.0339, -17.2432, -31.1691, 0.67", "-12.3941, -17.6913, -31.9347, 0.67", "-14.4851, -20.1453, -35.7043, 0.67", "-15.1365, -20.8655, -36.8841, 1.33", "-17.917, -23.9811, -41.1128, 0.33", "-19.3686, -25.6145, -43.268, 1.33", "-20.1366, -26.4159, -44.309, 0.67", "-22.3118, -28.3686, -46.902, 2.0", "-25.376, -30.6197, -49.9204, 0.33", "-27.9215, -32.292, -52.2637, 0.33", "-28.9834, -32.9659, -53.0679, 1.33", "-32.3859, -35.3069, -55.4444, 0.33", "-32.6936, -35.5446, -55.6136, 0.67", "-34.3733, -37.0587, -56.312, 0.33", "-35.113, -37.8286, -56.5116, 0.67", "-37.7562, -40.8006, -57.1681, 0.33", "-38.7158, -42.0027, -57.346, 2.0", "-40.7362, -44.6021, -57.7479, 0.67", "-42.7587, -46.9734, -58.5786, 0.67", "-43.9269, -48.3033, -59.2938, 0.33", "-44.9829, -49.3675, -60.3048, 1.33", "-46.0727, -50.2235, -61.6444, 0.33", "-48.1112, -51.6105, -64.5661, 0.67", "-50.0129, -52.8003, -67.4364, 0.33", "-51.038, -53.3736, -68.9242, 1.33", "-53.9027, -54.7766, -73.1822, 0.33", "-55.8603, -55.6986, -76.0466, 0.33", "-57.9385, -56.5812, -78.8502, 0.67", "-59.9617, -57.4369, -81.195, 0.33", "-61.3695, -57.9937, -82.5235, 0.33", "-64.1743, -58.9337, -84.5945, 0.33", "-65.889, -59.3614, -85.3355, 0.33", "-67.317, -59.7043, -85.7441, 0.33", "-68.7178, -59.9339, -85.9737, 1.33", "-71.0781, -60.203, -86.3928, 0.33", "-72.7671, -60.4656, -86.7271, 0.33", "-75.755, -60.9238, -87.3053, 0.33", "-78.5579, -61.1057, -88.2239, 0.33", "-79.8959, -61.1064, -88.8457, 0.67", "-83.6768, -60.9519, -90.944, 0.33", "-84.6007, -60.8897, -91.5063, 0.67", "-85.8663, -60.8056, -92.3014, 0.33", "-89.3257, -60.8449, -94.872, 2.0", "-91.6999, -60.8551, -96.6157, 0.33", "-92.6807, -60.9264, -97.3565, 1.33", "-95.037, -61.2001, -99.0548, 0.33", "-95.5732, -61.2836, -99.4465, 0.67", "-100.405, -62.5358, -102.81, 0.33", "-102.516, -63.3046, -104.325, 1.33", "-104.127, -64.0325, -105.591, 0.33", "-105.347, -64.6155, -106.711, 0.33", "-107.625, -65.7703, -108.881, 1.33", "-109.039, -66.4221, -110.147, 0.33", "-111.904, -67.6592, -112.649, 1.33", "-113.719, -68.3926, -114.323, 0.67", "-116.779, -69.4087, -117.04, 0.33", "-118.379, -69.9456, -118.411, 0.67", "-119.934, -70.4475, -119.591, 0.67", "-123.587, -71.4249, -122.354, 0.33", "-124.364, -71.5732, -122.876, 0.67", "-125.945, -71.7531, -123.942, 0.33", "-127.069, -71.9018, -124.67, 0.67", "-128.5, -72.078, -125.646, 0.33", "-130.769, -72.4074, -127.136, 0.67", "-132.023, -72.5259, -127.95, 0.33", "-132.804, -72.6318, -128.459, 1.33", "-136.531, -73.2025, -131.052, 0.33", "-137.966, -73.4492, -132.022, 0.33", "-138.696, -73.6049, -132.513, 0.67", "-141.257, -74.3864, -134.214, 0.33", "-143.329, -75.2166, -135.685, 0.67", "-145.778, -76.3352, -137.42, 0.33", "-147.107, -77.0724, -138.592, 0.33", "-147.301, -77.1939, -138.783, 0.67", "-149.076, -78.5515, -140.653, 0.33", "-149.748, -79.1829, -141.45, 0.67", "-150.602, -80.0656, -142.771, 0.67", "-153.495, -83.232, -147.589, 0.33", "-154.262, -84.0658, -148.979, 0.33", "-155.385, -85.2841, -151.108, 0.33", "-156.262, -86.2662, -152.943, 0.67", "-158.099, -88.3066, -157.101, 0.33" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-6.18986, -11.0848, -16.8768, 1.33", "-8.05177, -11.991, -17.8023, 1.33", "-10.7127, -12.8926, -18.8263, 0.67", "-11.6892, -13.1999, -19.1065, 1.33", "-15.1544, -14.5786, -20.0899, 1.33", "-16.8897, -15.1857, -20.3654, 0.67", "-19.0087, -15.9998, -20.6104, 0.67", "-20.9962, -16.86, -20.814, 0.67", "-22.6792, -17.5688, -21.1033, 1.33", "-24.7626, -18.2402, -21.412, 0.67", "-28.6152, -19.1125, -21.9723, 0.33", "-30.0539, -19.3889, -22.2335, 0.33", "-33.7698, -20.0951, -23.0043, 1.33", "-38.2322, -20.831, -24.0861, 0.67", "-40.344, -21.0692, -24.6093, 0.33", "-42.7694, -21.2317, -25.1806, 1.33", "-44.283, -21.3036, -25.5534, 0.33", "-45.0346, -21.3195, -25.694, 1.33", "-48.4121, -21.3521, -25.9185, 0.33", "-51.015, -21.3995, -25.7512, 0.33", "-52.2843, -21.4798, -25.5815, 0.33", "-53.0033, -21.5484, -25.4823, 1.33", "-55.0473, -21.7353, -25.2434, 0.33", "-57.283, -21.9756, -24.9798, 0.67", "-59.1328, -22.2267, -24.8724, 0.33", "-60.998, -22.5066, -24.9967, 1.33", "-64.5058, -23.1014, -25.5239, 0.33", "-64.8551, -23.1525, -25.5906, 0.67", "-66.4306, -23.3227, -25.9556, 0.33", "-69.203, -23.4632, -26.7776, 0.67", "-70.6774, -23.4159, -27.208, 0.33", "-71.2384, -23.3463, -27.3092, 0.67", "-73.5651, -22.868, -27.4485, 0.33", "-74.4524, -22.6542, -27.5161, 0.67", "-76.9706, -21.9577, -27.6927, 0.33", "-77.6704, -21.7499, -27.7184, 0.67", "-80.626, -20.8951, -28.0565, 0.33", "-80.9792, -20.8105, -28.1121, 1.33", "-84.026, -20.2476, -28.602, 0.33", "-84.5914, -20.1741, -28.6768, 0.33", "-84.5914, -20.1741, -28.6768, 0.67", "-88.6706, -20.0291, -28.9095, 0.33", "-89.4528, -20.0307, -28.9134, 0.67", "-92.0073, -20.0943, -28.7288, 0.33", "-92.7648, -20.0899, -28.5768, 0.67", "-94.6549, -20.0128, -28.0893, 0.33", "-95.196, -19.9655, -27.9121, 0.67", "-97.6095, -19.6087, -26.8638, 0.33", "-98.1218, -19.4815, -26.6328, 1.33", "-101.042, -18.4591, -25.2502, 0.33", "-101.261, -18.3561, -25.1603, 0.67", "-102.144, -17.8363, -24.8479, 0.33", "-102.619, -17.5464, -24.7103, 0.67", "-103.983, -16.6776, -24.4172, 0.33", "-104.298, -16.5009, -24.3665, 1.33", "-107.016, -15.2541, -24.132, 0.33", "-107.551, -15.0526, -24.0799, 1.33", "-109.044, -14.6172, -23.8737, 0.33", "-109.287, -14.5586, -23.8197, 0.67", "-110.498, -14.3454, -23.4493, 0.33", "-110.498, -14.3454, -23.4493, 0.67", "-111.936, -14.2531, -22.6521, 0.33", "-112.882, -14.166, -22.0933, 0.67", "-114.6, -13.8424, -20.9635, 0.33", "-114.807, -13.7965, -20.8204, 0.67" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-5.40426, -13.9544, -15.2777, 0.67", "-7.36043, -19.2891, -21.171, 0.67", "-8.51728, -22.5024, -24.3917, 0.67", "-10.2727, -27.4878, -29.2746, 0.67", "-11.2801, -30.3934, -32.0659, 1.33", "-13.8984, -37.7883, -39.52, 0.67", "-14.9528, -40.6039, -42.5056, 0.33", "-15.7099, -42.7231, -44.8321, 0.33", "-16.7913, -45.7908, -48.5623, 2.0", "-18.7183, -50.8811, -55.0556, 0.67", "-20.2351, -54.5995, -59.9879, 0.33", "-22.1202, -58.3269, -64.8845, 1.33", "-25.0765, -63.2231, -71.4326, 0.33", "-25.4395, -63.7979, -72.1892, 0.67", "-26.6013, -65.4682, -74.2093, 0.33", "-27.7824, -66.9707, -75.8189, 0.67", "-30.3328, -70.0656, -78.552, 0.33", "-32.8932, -73.0082, -80.7522, 0.33", "-35.3654, -75.7912, -82.6342, 0.67", "-36.3913, -77.0559, -83.5467, 0.33", "-37.3513, -78.4081, -84.5102, 0.67", "-39.358, -81.5336, -86.7673, 0.33", "-39.7908, -82.2607, -87.3213, 1.33", "-41.6258, -85.4004, -89.6395, 0.33", "-41.9341, -85.8814, -89.9482, 0.67", "-43.6999, -88.623, -91.78, 0.33", "-45.2309, -90.7084, -93.1608, 1.33", "-47.1121, -93.0054, -94.8468, 0.33", "-47.634, -93.5667, -95.3175, 0.67", "-49.9094, -95.773, -97.4856, 0.33", "-51.4057, -97.1394, -98.9513, 0.67", "-54.7016, -99.9021, -102.34, 0.33", "-57.1426, -101.845, -104.81, 0.67", "-59.3216, -103.419, -107.055, 0.33", "-61.2137, -104.794, -109.154, 1.33" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-5.40426, -13.9544, -15.2777, 0.33", "-7.96755, -16.658, -15.2039, 0.33", "-10.1567, -19.3587, -14.9861, 0.67", "-11.1308, -20.6106, -14.8791, 0.67", "-14.1835, -24.3842, -14.4108, 0.67", "-16.7138, -27.5965, -13.9771, 0.67", "-20.7754, -32.3276, -13.2878, 0.67", "-24.8108, -36.5461, -12.6295, 0.67", "-27.1505, -38.8727, -12.2421, 1.33", "-32.0219, -43.6039, -11.4376, 0.67", "-36.2821, -47.5856, -10.755, 0.67", "-42.3546, -52.797, -10.0202, 0.67", "-45.5277, -55.1351, -9.68244, 0.33", "-46.2859, -55.5934, -9.61948, 0.67" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-146.568, -37.2942, -124.452, 0.33", "-147.895, -36.3228, -125.611, 0.33", "-148.194, -36.1344, -125.817, 0.67", "-150.075, -35.0592, -127.278, 0.33", "-154.2, -32.723, -130.462, 0.67", "-158.47, -30.2298, -133.854, 0.33", "-161.506, -28.4327, -136.178, 1.33", "-162.963, -27.5588, -137.313, 1.33", "-168.562, -24.169, -141.514, 0.33", "-169.923, -23.4173, -142.486, 0.33", "-171.988, -22.3165, -143.766, 0.67", "-173.815, -21.3792, -144.929, 0.33", "-173.815, -21.3792, -144.929, 0.67", "-176.464, -19.7073, -146.9, 0.33", "-179.279, -18.0901, -147.854, 0.67" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-146.568, -37.2942, -124.452, 0.33", "-143.925, -35.6513, -122.673, 0.33", "-142.6, -34.8279, -121.782, 0.67" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "51.7948, -188.489, 97.7179, 0.67", "54.6477, -196.99, 102.569, 0.67", "57.9783, -204.712, 108.285, 0.67", "62.2797, -211.957, 113.938, 0.67", "67.936, -218.736, 118.889, 0.67", "73.6402, -224.993, 124.413, 0.67", "78.5393, -232.234, 129.553, 0.67", "84.8412, -238.523, 134.331, 0.67" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "51.7948, -188.489, 97.7179, 0.33", "53.5558, -196.655, 102.025, 0.67", "55.8062, -204.846, 106.048, 0.67", "59.3985, -213.044, 108.894, 0.67", "62.3375, -221.886, 110.252, 0.67", "65.3985, -230.255, 113.245, 0.67", "70.0051, -237.917, 116.048, 0.67", "74.5769, -245.356, 119.427, 0.67", "77.4257, -254.064, 121.583, 0.67", "80.4531, -262.896, 122.796, 0.67" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-37.8467, -178.411, 44.6533, 0.67", "-41.8714, -189.442, 42.4192, 0.67", "-44.6691, -200.985, 40.8893, 0.67", "-48.1123, -212.421, 40.0948, 0.67", "-51.7651, -223.813, 39.8597, 0.67", "-54.2275, -235.504, 40.728, 0.67", "-54.7625, -247.355, 42.4231, 0.67", "-55.1006, -259.339, 42.7046, 0.67", "-54.6477, -271.21, 41.0769, 0.67" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-37.8467, -178.411, 44.6533, 0.33", "-38.6811, -186.409, 50.7922, 0.67", "-38.917, -194.504, 56.8609, 0.67", "-40.0915, -203.65, 61.1444, 0.67", "-42.3996, -212.388, 65.7657, 0.67", "-45.3094, -220.504, 71.0766, 0.67", "-47.9111, -227.749, 77.6028, 0.67", "-51.4263, -234.034, 84.6321, 0.67", "-56.1236, -240.007, 91.2191, 0.67", "-61.7543, -245.093, 97.7856, 0.67" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "36.6552, -21.6403, 40.5722, 0.67", "44.7497, -27.4216, 45.085, 0.67", "51.6915, -33.2919, 51.1486, 0.67", "57.5465, -40.384, 57.116, 0.67", "64.0304, -48.5855, 60.5225, 0.67", "70.8216, -55.9869, 64.931, 0.67", "76.5748, -63.7372, 70.1725, 0.67", "82.546, -71.9396, 74.4166, 0.67" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "36.6552, -21.6403, 40.5722, 0.33", "43.6884, -27.9022, 45.1928, 0.67" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-18.959, 59.6594, 4.24324, 0.67", "-19.9758, 63.8997, 2.98767, 0.67", "-20.553, 66.3067, 2.27492, 0.67" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-18.959, 59.6594, 4.24324, 0.33", "-20.3998, 60.9413, 7.10288, 0.33", "-20.9428, 61.4245, 8.18059, 0.33", "-21.7215, 62.1173, 9.7261, 0.33", "-24.0513, 66.206, 15.9664, 0.33", "-27.1438, 70.9932, 21.348, 0.33", "-29.2761, 76.928, 26.0634, 0.33", "-30.1083, 82.7351, 31.3012, 0.33", "-30.5023, 88.2701, 36.8585, 0.33", "-29.4967, 93.3007, 42.7765, 0.33", "-28.2301, 99.0467, 47.9788, 0.33", "-26.0991, 105.794, 51.4627, 0.33" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "3.18592, 34.6063, -23.5332, 0.67", "1.15104, 39.956, -23.711, 0.67", "-0.110122, 43.3932, -23.5114, 0.67", "-2.21164, 48.8335, -23.0155, 0.67", "-3.70531, 52.5969, -22.6534, 0.67", "-5.67041, 57.4152, -22.2071, 0.67", "-8.15759, 63.9028, -21.6838, 0.67", "-9.60002, 67.9979, -21.4116, 0.67", "-10.3173, 70.6012, -21.2583, 0.67", "-11.5609, 75.9898, -20.9759, 0.67", "-12.1687, 78.5826, -20.8341, 0.67", "-13.7894, 85.651, -20.3794, 0.67", "-14.4519, 88.6922, -20.3844, 0.67", "-14.9726, 91.3294, -20.426, 0.67", "-15.2892, 92.9874, -20.4296, 0.67", "-16.1507, 97.2466, -20.4018, 0.67", "-17.1904, 102.217, -20.3452, 0.67", "-18.34, 106.996, -20.147, 0.67", "-19.6876, 112.009, -19.8463, 0.67", "-20.8723, 116.077, -19.5635, 0.67", "-22.0728, 120.534, -19.3577, 0.33", "-22.9032, 124.033, -19.2242, 0.67", "-23.6555, 127.504, -19.0279, 0.33", "-23.9598, 129.26, -18.8919, 0.67", "-24.5188, 133.226, -18.4471, 0.33", "-24.7901, 137.57, -17.822, 1.33", "-24.644, 141.538, -16.8226, 0.33", "-24.3691, 143.133, -16.2707, 0.33", "-24.0535, 144.529, -15.7667, 0.67", "-23.4671, 147.214, -14.7249, 0.33", "-22.6204, 151.372, -12.9292, 0.33", "-22.0791, 155.545, -10.9089, 0.33", "-21.9183, 157.462, -10.0731, 0.33", "-21.7622, 162.432, -8.22717, 0.33", "-21.8552, 165.251, -7.40173, 0.33", "-21.9391, 166.615, -7.07266, 0.67", "-22.0624, 169.63, -6.4662, 0.33", "-22.1119, 171.141, -6.27113, 0.67", "-22.2783, 175.504, -5.78715, 0.33", "-22.1053, 179.457, -5.38559, 0.33", "-21.8712, 183.591, -5.0714, 0.33", "-21.6524, 186.698, -4.91459, 0.67", "-20.9457, 193.092, -4.69887, 0.67", "-20.6459, 195.34, -4.62537, 0.67", "-19.657, 201.916, -4.43936, 0.67", "-18.9745, 206.14, -4.36049, 0.67", "-18.6754, 208.818, -4.31764, 0.67", "-18.4443, 211.776, -4.32526, 0.33", "-18.3828, 213.652, -4.37779, 0.33", "-18.3118, 216.713, -4.50412, 0.67", "-18.5273, 225.624, -5.00163, 0.67", "-18.6642, 230.568, -5.29369, 0.67", "-18.9036, 235.166, -5.60363, 0.67", "-19.2515, 239.85, -5.95013, 0.67", "-19.9347, 247.977, -6.57257, 0.67", "-20.485, 253.473, -6.95003, 0.67", "-20.9628, 257.314, -7.18009, 0.67", "-21.249, 259.994, -7.28889, 0.67", "-21.4656, 261.867, -7.29729, 1.33", "-22.0216, 268.161, -7.09577, 0.67", "-22.5042, 273.809, -6.7399, 0.33", "-22.5509, 275.344, -6.59232, 0.67", "-22.5498, 279.498, -6.18475, 0.33", "-22.3998, 283.683, -5.70316, 0.33", "-21.9842, 289.266, -4.9891, 0.33", "-21.7223, 291.331, -4.68746, 0.33", "-21.5889, 292.271, -4.55946, 0.33", "-20.9478, 297.864, -3.83979, 0.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "3.18592, 34.6063, -23.5332, 1.33", "3.20195, 38.6738, -27.5211, 1.33", "3.23027, 45.855, -34.5618, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-20.553, 66.3067, 2.27492, 0.67", "-19.9033, 65.4616, -4.24432, 0.67", "-19.6346, 65.1679, -6.00326, 0.67", "-19.3871, 64.8384, -7.63603, 1.33", "-19.0122, 64.3368, -11.6396, 0.33", "-18.5621, 63.8348, -15.5256, 0.33", "-18.4071, 63.657, -16.7556, 0.33", "-18.1544, 63.4621, -17.9368, 0.67", "-17.9697, 63.2778, -19.1306, 0.67", "-17.146, 62.5409, -26.3648, 0.67", "-16.92, 62.4639, -28.3727, 0.67", "-16.8358, 62.3082, -30.4385, 0.67" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-20.553, 66.3067, 2.27492, 0.33", "-22.6316, 68.2067, 7.24553, 0.33", "-23.3171, 68.4959, 8.61825, 0.33", "-23.93, 68.5763, 9.84304, 1.33", "-27.1129, 68.2649, 16.9921, 0.67", "-28.0365, 68.1745, 19.0666, 0.67", "-29.8792, 67.9942, 23.2054, 1.33", "-30.8063, 67.6053, 26.0867, 0.33", "-31.4996, 67.2573, 28.333, 0.33", "-32.3422, 66.6575, 30.6878, 0.67", "-34.8088, 66.5757, 41.7733, 0.67", "-37.6283, 65.7109, 52.7412, 0.67", "-41.3146, 65.0104, 63.4604, 0.67", "-44.393, 64.485, 74.3795, 0.67", "-48.0013, 65.0187, 85.1366, 0.67", "-54.0096, 63.886, 94.7075, 0.67", "-59.1733, 61.1852, 104.466, 0.67", "-66.5269, 60.7977, 113.113, 0.67", "-73.8242, 61.0643, 121.814, 0.67", "-79.7563, 61.3717, 131.497, 0.67" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "3.23027, 45.855, -34.5618, 0.67", "7.40013, 56.4347, -36.5264, 0.67", "8.35284, 59.1871, -37.1555, 0.67", "9.20277, 62.0407, -37.8943, 0.33", "9.60725, 63.7275, -38.3727, 1.33", "10.6663, 69.3107, -39.8835, 0.33", "10.9354, 71.2126, -40.2692, 0.33", "11.0708, 73.3901, -40.6671, 1.33", "11.2055, 76.9414, -41.0806, 0.67", "11.4841, 83.6311, -41.7933, 0.33", "11.6961, 89.2639, -42.2691, 1.33", "11.9419, 95.1349, -42.5323, 0.33", "12.0185, 96.4401, -42.5972, 0.67", "12.3714, 102.288, -42.9172, 0.33", "12.6712, 106.683, -43.1566, 0.33", "12.9897, 110.01, -43.3748, 0.33", "13.3631, 112.736, -43.7131, 0.67", "13.9596, 115.348, -44.3585, 0.33", "14.3067, 116.712, -44.7218, 0.33", "14.5966, 117.721, -45.0211, 0.33", "15.0578, 119.206, -45.4465, 0.33", "15.7658, 120.929, -46.0519, 0.67", "18.1119, 126.0, -48.1099, 0.33", "18.9844, 127.803, -48.9308, 0.33", "19.9254, 129.692, -49.8132, 0.67", "20.6435, 131.142, -50.4952, 0.33", "21.5805, 132.901, -51.4198, 0.33", "22.051, 133.697, -51.8495, 1.33", "23.9726, 136.917, -53.7374, 0.33", "24.4944, 137.76, -54.2676, 0.33", "24.8246, 138.307, -54.591, 0.67", "26.6337, 141.492, -56.4296, 0.33", "27.0529, 142.316, -56.9183, 1.33", "29.8151, 148.053, -60.3291, 0.33", "30.3659, 149.35, -61.1036, 1.33", "31.2857, 151.867, -62.5851, 0.33", "31.3763, 152.176, -62.7458, 0.67", "32.1673, 155.286, -63.9522, 0.33", "32.3285, 155.961, -64.1491, 0.67", "33.2998, 159.955, -64.7104, 0.33", "33.4991, 160.74, -64.7792, 0.67", "34.2757, 163.836, -64.9593, 0.33", "35.4706, 168.334, -64.9822, 0.33", "35.9436, 169.982, -64.832, 0.67", "37.0363, 173.377, -64.3295, 0.33", "37.215, 173.852, -64.2033, 0.67" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "3.23027, 45.855, -34.5618, 0.67", "0.240761, 47.937, -36.18, 0.67", "-2.12182, 49.2916, -37.2176, 0.67", "-4.40326, 50.3006, -38.369, 0.67", "-7.40706, 51.6402, -40.1575, 1.33", "-8.78028, 52.3157, -40.9058, 0.33", "-10.8758, 53.4173, -41.975, 0.33", "-13.2641, 54.619, -43.0053, 1.33", "-17.4447, 56.7618, -44.9216, 0.33", "-19.5128, 57.977, -45.9087, 1.33", "-23.3306, 60.5497, -47.9212, 0.67", "-24.5543, 61.4634, -48.6763, 1.33", "-26.5763, 63.1086, -50.0275, 0.33", "-28.1513, 64.6171, -51.1098, 0.67", "-29.3834, 65.883, -51.907, 0.33", "-29.6011, 66.0913, -52.0674, 0.67", "-31.6488, 68.1703, -54.0449, 0.33", "-32.317, 68.9135, -54.7773, 0.67", "-33.84, 70.7332, -56.53, 0.33", "-34.5711, 71.6662, -57.4924, 1.33", "-36.7437, 74.7412, -60.7989, 0.33", "-37.903, 76.5744, -62.8663, 1.33", "-39.3411, 78.994, -65.7251, 0.33", "-39.6399, 79.6292, -66.5609, 0.67", "-41.0627, 83.3277, -71.939, 0.33", "-41.2569, 83.9367, -72.9945, 0.67", "-41.676, 85.5825, -76.473, 0.33", "-41.7416, 85.7906, -77.123, 0.67", "-42.2316, 86.9224, -82.8171, 0.33", "-42.377, 87.0587, -84.1968, 1.33", "-42.9705, 86.8988, -88.6164, 0.33", "-43.0236, 86.8692, -88.9569, 0.67", "-43.816, 86.1408, -93.5085, 0.33", "-44.0166, 85.9337, -94.5606, 1.33", "-44.4483, 85.4571, -96.1619, 0.33", "-45.4954, 84.3355, -100.423, 1.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-79.7563, 61.3717, 131.497, 0.67", "-83.6019, 60.6792, 142.396, 0.67", "-88.5214, 58.7206, 152.695, 0.67", "-95.288, 54.6945, 161.22, 0.67", "-101.715, 50.3713, 169.867, 0.67", "-107.528, 46.8389, 179.257, 0.67", "-113.683, 44.6322, 188.819, 0.67", "-119.854, 40.3724, 197.679, 0.67" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-79.7563, 61.3717, 131.497, 0.33", "-87.4348, 60.7999, 140.825, 0.67", "-95.9253, 62.2586, 149.328, 0.67", "-104.731, 66.264, 156.66, 0.67" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-45.4954, 84.3355, -100.423, 0.33", "-46.0206, 88.1658, -103.675, 0.33", "-46.216, 89.5908, -104.884, 0.67", "-46.4299, 91.1501, -106.208, 0.33", "-46.7002, 93.1212, -107.881, 0.67" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-45.4954, 84.3355, -100.423, 0.33", "-44.3112, 80.5627, -102.424, 0.33", "-43.5906, 78.267, -103.642, 0.33", "-43.319, 77.4017, -104.101, 0.67" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_42", "dend_39", "dend_32", "dend_27", "dend_20", "dend_9", "dend_0", "dend_41", "dend_40", "dend_36", "dend_33", "dend_31", "dend_28", "dend_24", "dend_21", "dend_17", "dend_10", "dend_2", "dend_1", "dend_38", "dend_37", "dend_35", "dend_34", "dend_30", "dend_29", "dend_26", "dend_25", "dend_23", "dend_22", "dend_19", "dend_18", "dend_12", "dend_11", "dend_8", "dend_3", "dend_16", "dend_13", "dend_7", "dend_4", "dend_15", "dend_14", "dend_6", "dend_5" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_42", "dend_39", "dend_32", "dend_27", "dend_20", "dend_9", "dend_0", "dend_41", "dend_40", "dend_36", "dend_33", "dend_31", "dend_28", "dend_24", "dend_21", "dend_17", "dend_10", "dend_2", "dend_1", "dend_38", "dend_37", "dend_35", "dend_34", "dend_30", "dend_29", "dend_26", "dend_25", "dend_23", "dend_22", "dend_19", "dend_18", "dend_12", "dend_11", "dend_8", "dend_3", "dend_16", "dend_13", "dend_7", "dend_4", "dend_15", "dend_14", "dend_6", "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_9", "dend_9", "dend_0", "axon_0", "axon_0", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L4_LBC_cf3f064b85_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_9
create dend_17
public dend_17
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_42, dend_39, dend_32, dend_27, dend_20, dend_9, dend_0, dend_41, dend_40, dend_36, dend_33, dend_31, dend_28, dend_24, dend_21, dend_17, dend_10, dend_2, dend_1, dend_38, dend_37, dend_35, dend_34, dend_30, dend_29, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_3, dend_16, dend_13, dend_7, dend_4, dend_15, dend_14, dend_6, dend_5]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_42, dend_39, dend_32, dend_27, dend_20, dend_9, dend_0, dend_41, dend_40, dend_36, dend_33, dend_31, dend_28, dend_24, dend_21, dend_17, dend_10, dend_2, dend_1, dend_38, dend_37, dend_35, dend_34, dend_30, dend_29, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_3, dend_16, dend_13, dend_7, dend_4, dend_15, dend_14, dend_6, dend_5]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_44
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_9, dend_9, dend_0, axon_0, axon_0, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_42(0), soma_0(0.4999992625513693)
    connect dend_39(0), soma_0(0.4999992625513693)
    connect dend_32(0), soma_0(0.4999992625513693)
    connect dend_27(0), soma_0(0.4999992625513693)
    connect dend_20(0), soma_0(0.4999992625513693)
    connect dend_9(0), soma_0(0.4999992625513693)
    connect dend_0(0), soma_0(0.4999992625513693)
    connect axon_0(0), soma_0(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.162869, -11.0647, -2.58105, 2.87216 ) }
    soma_0 { pt3dadd( -0.134852, -10.0555, -2.3364, 4.81021 ) }
    soma_0 { pt3dadd( -0.106835, -9.04625, -2.09174, 6.29865 ) }
    soma_0 { pt3dadd( -0.0788176, -8.037, -1.84709, 7.78708 ) }
    soma_0 { pt3dadd( -0.0508004, -7.02776, -1.60244, 9.27866 ) }
    soma_0 { pt3dadd( -0.0227833, -6.01852, -1.35779, 10.8108 ) }
    soma_0 { pt3dadd( 0.00523389, -5.00927, -1.11314, 12.351 ) }
    soma_0 { pt3dadd( 0.033251, -4.00003, -0.868484, 13.0944 ) }
    soma_0 { pt3dadd( 0.0612682, -2.99079, -0.623832, 13.4108 ) }
    soma_0 { pt3dadd( 0.0892853, -1.98154, -0.37918, 13.7272 ) }
    soma_0 { pt3dadd( 0.117302, -0.972301, -0.134529, 13.7558 ) }
    soma_0 { pt3dadd( 0.14532, 0.0369421, 0.110123, 13.5627 ) }
    soma_0 { pt3dadd( 0.173337, 1.04619, 0.354775, 13.3661 ) }
    soma_0 { pt3dadd( 0.201354, 2.05543, 0.599427, 13.1696 ) }
    soma_0 { pt3dadd( 0.229371, 3.06467, 0.844079, 12.973 ) }
    soma_0 { pt3dadd( 0.257388, 4.07391, 1.08873, 12.4764 ) }
    soma_0 { pt3dadd( 0.285405, 5.08316, 1.33338, 11.5304 ) }
    soma_0 { pt3dadd( 0.313423, 6.0924, 1.57803, 10.5843 ) }
    soma_0 { pt3dadd( 0.34144, 7.10164, 1.82269, 9.63824 ) }
    soma_0 { pt3dadd( 0.369457, 8.11089, 2.06734, 7.56191 ) }
    soma_0 { pt3dadd( 0.397474, 9.12013, 2.31199, 4.12248 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 21/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -1.32254, 0.627652, -22.8114, 1.33 ) }
    dend_42 { pt3dadd( -2.38986, 2.63179, -28.8868, 0.67 ) }
    dend_42 { pt3dadd( -3.01892, 3.66801, -31.5084, 0.67 ) }
    dend_42 { pt3dadd( -4.17392, 5.66944, -35.7616, 0.67 ) }
    dend_42 { pt3dadd( -5.0937, 7.41726, -39.1805, 0.67 ) }
    dend_42 { pt3dadd( -6.6345, 10.8732, -45.7277, 0.67 ) }
    dend_42 { pt3dadd( -7.56535, 13.2293, -50.0641, 0.33 ) }
    dend_42 { pt3dadd( -7.73116, 14.1703, -51.7253, 0.33 ) }
    dend_42 { pt3dadd( -7.83271, 15.9002, -54.3752, 1.33 ) }
    dend_42 { pt3dadd( -7.89192, 19.4333, -58.3815, 0.33 ) }
    dend_42 { pt3dadd( -7.8043, 20.7185, -59.539, 0.33 ) }
    dend_42 { pt3dadd( -7.69141, 21.0678, -59.8132, 0.67 ) }
    dend_42 { pt3dadd( -6.74327, 23.5505, -61.3204, 0.33 ) }
    dend_42 { pt3dadd( -6.1599, 25.1022, -62.2547, 2.0 ) }
    dend_42 { pt3dadd( -4.75662, 29.5703, -64.5802, 0.33 ) }
    dend_42 { pt3dadd( -4.46076, 31.0481, -65.2549, 1.33 ) }
    dend_42 { pt3dadd( -3.98193, 36.9138, -68.283, 0.33 ) }
    dend_42 { pt3dadd( -4.00987, 38.0829, -68.9285, 0.33 ) }
    dend_42 { pt3dadd( -4.28852, 40.3836, -70.9695, 1.33 ) }
    dend_42 { pt3dadd( -4.55991, 42.4922, -73.5709, 0.33 ) }
    dend_42 { pt3dadd( -4.72775, 43.8252, -75.4388, 0.33 ) }
    dend_42 { pt3dadd( -4.87369, 45.6581, -78.1649, 0.33 ) }
    dend_42 { pt3dadd( -4.85685, 46.6833, -79.7835, 2.0 ) }
    dend_42 { pt3dadd( -3.77092, 52.8147, -90.8474, 0.33 ) }
    dend_42 { pt3dadd( -3.44775, 53.983, -93.2375, 1.33 ) }
    dend_42 { pt3dadd( -2.89802, 55.5353, -96.7206, 0.33 ) }
    dend_42 { pt3dadd( -2.453, 56.7291, -99.2868, 1.33 ) }
    dend_42 { pt3dadd( -1.97303, 58.38, -102.48, 0.33 ) }
    dend_42 { pt3dadd( -1.50285, 60.5783, -106.377, 1.33 ) }
    dend_42 { pt3dadd( -1.20194, 64.7781, -112.101, 0.33 ) }
    dend_42 { pt3dadd( -1.22872, 65.5003, -113.003, 0.67 ) }
    dend_42 { pt3dadd( -1.583, 68.4339, -116.412, 0.33 ) }
    dend_42 { pt3dadd( -2.22058, 70.9895, -118.829, 0.33 ) }
    dend_42 { pt3dadd( -2.54045, 71.8803, -119.519, 1.33 ) }
    dend_42 { pt3dadd( -4.11895, 75.6634, -121.484, 0.33 ) }
    dend_42 { pt3dadd( -4.60808, 76.6641, -121.831, 0.33 ) }
    dend_42 { pt3dadd( -4.7619, 76.9382, -121.909, 0.67 ) }
    dend_42 { pt3dadd( -6.44502, 79.6618, -122.441, 0.33 ) }
    dend_42 { pt3dadd( -6.83582, 80.3411, -122.617, 0.67 ) }
    dend_42 { pt3dadd( -9.11336, 84.8732, -123.77, 0.33 ) }
    dend_42 { pt3dadd( -9.32116, 85.4545, -123.962, 1.33 ) }
    dend_42 { pt3dadd( -9.97109, 88.2179, -124.892, 0.33 ) }
    dend_42 { pt3dadd( -10.1334, 89.2334, -125.304, 1.33 ) }
    dend_42 { pt3dadd( -10.5993, 93.989, -127.476, 0.33 ) }
    dend_42 { pt3dadd( -10.6444, 96.2495, -128.554, 1.33 ) }
    dend_42 { pt3dadd( -10.3748, 101.692, -131.51, 0.33 ) }
    dend_42 { pt3dadd( -10.2666, 103.937, -132.854, 1.33 ) }
    dend_42 { pt3dadd( -10.1148, 108.025, -135.472, 0.33 ) }
    dend_42 { pt3dadd( -10.101, 108.806, -135.962, 0.67 ) }
    dend_42 { pt3dadd( -10.1945, 112.771, -138.338, 0.33 ) }
    dend_42 { pt3dadd( -10.2761, 114.335, -139.367, 1.33 ) }
    dend_42 { pt3dadd( -10.5957, 117.822, -141.709, 0.33 ) }
    dend_42 { pt3dadd( -10.6775, 118.649, -142.303, 0.67 ) }
    dend_42 { pt3dadd( -10.9509, 122.08, -144.507, 0.33 ) }
    dend_42 { pt3dadd( -11.0647, 122.979, -145.123, 0.67 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 76/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -5.70254, -6.0246, -3.1514, 2.0 ) }
    dend_39 { pt3dadd( -6.80886, -6.81329, -1.9174, 1.33 ) }
    dend_39 { pt3dadd( -9.07435, -8.42832, 0.609561, 1.33 ) }
    dend_39 { pt3dadd( -10.523, -9.46107, 2.22543, 1.33 ) }
    dend_39 { pt3dadd( -11.8648, -10.4176, 3.72214, 1.33 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 81/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 1.99746, -5.6146, -19.3514, 2.0 ) }
    dend_32 { pt3dadd( 0.565796, -6.70579, -19.3514, 2.0 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 83/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -0.82254, -11.5083, -5.4014, 1.33 ) }
    dend_27 { pt3dadd( -2.9373, -10.302, -7.4479, 1.33 ) }
    dend_27 { pt3dadd( -5.05501, -8.87698, -9.64408, 1.33 ) }
    dend_27 { pt3dadd( -9.84406, -5.80435, -14.3418, 1.33 ) }
    dend_27 { pt3dadd( -12.1192, -4.49327, -16.2364, 1.33 ) }
    dend_27 { pt3dadd( -15.8585, -2.33845, -19.3501, 1.33 ) }
    dend_27 { pt3dadd( -18.4299, -0.856662, -21.4914, 0.67 ) }
    dend_27 { pt3dadd( -18.8446, -0.553808, -21.8629, 0.67 ) }
    dend_27 { pt3dadd( -20.5985, 1.00054, -23.5599, 1.33 ) }
    dend_27 { pt3dadd( -25.1081, 5.24964, -27.373, 1.33 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 93/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.00253968, -9.70434, 5.9486, 2.0 ) }
    dend_20 { pt3dadd( 3.09086, -12.1027, 4.31271, 1.33 ) }
    dend_20 { pt3dadd( 6.74712, -14.9374, 2.37916, 1.33 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 96/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 1.05746, 3.8359, 19.0286, 1.33 ) }
    dend_9 { pt3dadd( 2.9102, 4.8065, 19.0286, 1.33 ) }
    dend_9 { pt3dadd( 5.61886, 6.22549, 19.0286, 2.0 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 99/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.92746, 9.23765, -8.1714, 2.0 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 5.53432, 10.4262, -8.1714, 2.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 1/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.397474, 9.12013, 2.31199, 0.67 ) }
    axon_0 { pt3dadd( 0.813722, 24.1144, 2.31199, 0.67 ) }
    axon_0 { pt3dadd( 1.22997, 39.1086, 2.31199, 0.67 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 4/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -11.8648, -10.4176, 3.72214, 0.67 ) }
    dend_41 { pt3dadd( -18.5441, -12.3663, 2.65938, 0.67 ) }
    dend_41 { pt3dadd( -21.8109, -13.3424, 2.55031, 0.67 ) }
    dend_41 { pt3dadd( -24.4727, -14.1322, 2.55593, 0.67 ) }
    dend_41 { pt3dadd( -26.8361, -14.8788, 2.51521, 0.67 ) }
    dend_41 { pt3dadd( -29.945, -15.8704, 2.41762, 0.67 ) }
    dend_41 { pt3dadd( -32.6218, -16.8023, 2.32412, 0.67 ) }
    dend_41 { pt3dadd( -35.8018, -18.1186, 2.3499, 0.67 ) }
    dend_41 { pt3dadd( -38.9288, -19.6391, 2.44827, 0.67 ) }
    dend_41 { pt3dadd( -41.3696, -20.9532, 2.36114, 0.67 ) }
    dend_41 { pt3dadd( -45.6144, -23.797, 1.92519, 0.67 ) }
    dend_41 { pt3dadd( -47.0798, -24.9569, 1.56931, 0.67 ) }
    dend_41 { pt3dadd( -48.8731, -26.5631, 0.916202, 0.67 ) }
    dend_41 { pt3dadd( -49.938, -27.5423, 0.418165, 0.67 ) }
    dend_41 { pt3dadd( -52.4549, -29.8953, -0.799671, 0.67 ) }
    dend_41 { pt3dadd( -54.5775, -31.896, -1.87753, 0.67 ) }
    dend_41 { pt3dadd( -56.9123, -34.0794, -3.09777, 0.67 ) }
    dend_41 { pt3dadd( -58.7794, -35.7139, -3.96979, 0.67 ) }
    dend_41 { pt3dadd( -61.6167, -37.8292, -4.82862, 1.33 ) }
    dend_41 { pt3dadd( -63.7579, -39.4426, -5.40268, 0.33 ) }
    dend_41 { pt3dadd( -64.6174, -40.1129, -5.57833, 0.33 ) }
    dend_41 { pt3dadd( -67.6147, -42.3746, -5.96939, 0.67 ) }
    dend_41 { pt3dadd( -69.6442, -44.007, -6.05528, 0.67 ) }
    dend_41 { pt3dadd( -74.7342, -48.5276, -6.05335, 0.67 ) }
    dend_41 { pt3dadd( -77.6435, -51.2381, -6.02345, 0.67 ) }
    dend_41 { pt3dadd( -79.7261, -53.1973, -5.98253, 0.33 ) }
    dend_41 { pt3dadd( -81.5063, -54.8444, -5.94712, 0.67 ) }
    dend_41 { pt3dadd( -83.4576, -56.7217, -5.89714, 0.67 ) }
    dend_41 { pt3dadd( -84.623, -57.8664, -5.86528, 0.33 ) }
    dend_41 { pt3dadd( -85.8821, -59.178, -5.81958, 0.33 ) }
    dend_41 { pt3dadd( -87.7637, -60.8295, -5.66177, 0.67 ) }
    dend_41 { pt3dadd( -88.5991, -61.5304, -5.6188, 0.67 ) }
    dend_41 { pt3dadd( -89.95, -62.5829, -5.60061, 0.33 ) }
    dend_41 { pt3dadd( -90.9791, -63.263, -5.60274, 0.67 ) }
    dend_41 { pt3dadd( -96.0261, -66.4135, -5.6446, 0.33 ) }
    dend_41 { pt3dadd( -97.8432, -67.5157, -5.66815, 0.33 ) }
    dend_41 { pt3dadd( -99.3462, -68.4048, -5.69596, 0.33 ) }
    dend_41 { pt3dadd( -100.446, -68.9972, -5.7249, 0.67 ) }
    dend_41 { pt3dadd( -102.63, -70.0538, -5.80088, 0.33 ) }
    dend_41 { pt3dadd( -104.218, -70.8008, -5.86316, 0.33 ) }
    dend_41 { pt3dadd( -105.614, -71.3597, -5.91959, 0.67 ) }
    dend_41 { pt3dadd( -106.862, -71.8468, -5.96104, 0.67 ) }
    dend_41 { pt3dadd( -109.373, -72.8239, -6.1548, 0.33 ) }
    dend_41 { pt3dadd( -110.249, -73.1863, -6.22322, 0.33 ) }
    dend_41 { pt3dadd( -111.383, -73.6747, -6.31493, 0.33 ) }
    dend_41 { pt3dadd( -115.31, -75.1791, -6.67239, 0.67 ) }
    dend_41 { pt3dadd( -118.136, -76.2327, -6.95192, 0.33 ) }
    dend_41 { pt3dadd( -120.007, -76.8643, -7.15964, 0.67 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 52/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -11.8648, -10.4176, 3.72214, 0.67 ) }
    dend_40 { pt3dadd( -13.6034, -9.56752, 4.49683, 0.67 ) }
    dend_40 { pt3dadd( -14.9463, -8.6916, 5.08449, 0.67 ) }
    dend_40 { pt3dadd( -20.4534, -4.94007, 7.15577, 0.67 ) }
    dend_40 { pt3dadd( -22.0051, -4.02806, 7.73504, 0.67 ) }
    dend_40 { pt3dadd( -24.7862, -2.59328, 8.64573, 0.67 ) }
    dend_40 { pt3dadd( -27.6019, -1.14071, 9.56772, 0.67 ) }
    dend_40 { pt3dadd( -30.5907, 0.412483, 10.5008, 0.67 ) }
    dend_40 { pt3dadd( -32.3705, 1.42711, 11.0202, 0.67 ) }
    dend_40 { pt3dadd( -35.8169, 3.60966, 11.5435, 0.33 ) }
    dend_40 { pt3dadd( -38.0908, 4.67236, 11.9901, 0.33 ) }
    dend_40 { pt3dadd( -45.6831, 9.34673, 15.1322, 0.33 ) }
    dend_40 { pt3dadd( -53.9068, 13.4151, 17.4075, 0.33 ) }
    dend_40 { pt3dadd( -62.4514, 17.1457, 18.9765, 0.33 ) }
    dend_40 { pt3dadd( -70.9881, 20.4776, 21.2562, 0.33 ) }
    dend_40 { pt3dadd( -78.4973, 25.5647, 23.9585, 0.33 ) }
    dend_40 { pt3dadd( -86.096, 31.0058, 25.5681, 0.33 ) }
    dend_40 { pt3dadd( -94.1665, 35.9935, 25.8496, 0.33 ) }
    dend_40 { pt3dadd( -102.099, 40.7006, 27.971, 0.33 ) }
    dend_40 { pt3dadd( -109.426, 44.8261, 32.2554, 0.33 ) }
    dend_40 { pt3dadd( -117.012, 47.8822, 36.943, 0.33 ) }
    dend_40 { pt3dadd( -123.69, 51.848, 42.2898, 0.33 ) }
    dend_40 { pt3dadd( -129.85, 54.8135, 48.7734, 0.33 ) }
    dend_40 { pt3dadd( -137.003, 55.3142, 54.8948, 0.33 ) }
    dend_40 { pt3dadd( -143.285, 56.7332, 61.7784, 0.33 ) }
    dend_40 { pt3dadd( -149.847, 57.1134, 68.5438, 0.33 ) }
    dend_40 { pt3dadd( -154.824, 57.4405, 76.5633, 0.33 ) }
    dend_40 { pt3dadd( -157.933, 55.807, 85.3829, 0.33 ) }
    dend_40 { pt3dadd( -160.066, 52.5662, 94.0958, 0.33 ) }
    dend_40 { pt3dadd( -163.264, 50.9888, 102.892, 0.33 ) }
    dend_40 { pt3dadd( -166.355, 49.6219, 111.757, 0.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 83/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 0.565796, -6.70579, -19.3514, 1.33 ) }
    dend_36 { pt3dadd( -3.99213, -9.66027, -17.6819, 1.33 ) }
    dend_36 { pt3dadd( -6.18986, -11.0848, -16.8768, 1.33 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 86/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 0.565796, -6.70579, -19.3514, 0.67 ) }
    dend_33 { pt3dadd( -3.02625, -11.0671, -16.9003, 0.67 ) }
    dend_33 { pt3dadd( -5.40426, -13.9544, -15.2777, 0.33 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 89/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -25.1081, 5.24964, -27.373, 0.67 ) }
    dend_31 { pt3dadd( -27.259, 6.5791, -28.1708, 0.67 ) }
    dend_31 { pt3dadd( -28.197, 7.06537, -28.5852, 1.33 ) }
    dend_31 { pt3dadd( -31.2914, 8.62964, -29.631, 0.67 ) }
    dend_31 { pt3dadd( -32.9451, 9.43472, -30.1015, 0.67 ) }
    dend_31 { pt3dadd( -34.3207, 10.0045, -30.6486, 0.33 ) }
    dend_31 { pt3dadd( -36.4877, 10.8421, -31.6899, 0.67 ) }
    dend_31 { pt3dadd( -39.9619, 11.8706, -33.3645, 0.67 ) }
    dend_31 { pt3dadd( -42.5038, 12.4903, -34.8548, 0.33 ) }
    dend_31 { pt3dadd( -43.2877, 12.6855, -35.3616, 0.33 ) }
    dend_31 { pt3dadd( -47.9467, 13.6218, -38.3043, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_31 { pt3dadd( -49.3128, 13.8795, -39.3119, 0.67 ) }
    dend_31 { pt3dadd( -51.9176, 14.3679, -41.5907, 0.67 ) }
    dend_31 { pt3dadd( -54.5627, 14.894, -44.0571, 1.33 ) }
    dend_31 { pt3dadd( -56.2017, 15.2899, -45.6621, 0.33 ) }
    dend_31 { pt3dadd( -57.1782, 15.6314, -46.6312, 0.33 ) }
    dend_31 { pt3dadd( -60.7247, 17.153, -49.9887, 0.67 ) }
    dend_31 { pt3dadd( -63.4293, 18.5086, -52.6843, 0.33 ) }
    dend_31 { pt3dadd( -64.7244, 19.327, -54.0216, 0.67 ) }
    dend_31 { pt3dadd( -65.9106, 20.1625, -55.1823, 0.33 ) }
    dend_31 { pt3dadd( -68.4693, 22.1958, -57.7629, 0.67 ) }
    dend_31 { pt3dadd( -71.2517, 24.5074, -60.2733, 0.33 ) }
    dend_31 { pt3dadd( -72.4952, 25.5288, -61.1938, 1.33 ) }
    dend_31 { pt3dadd( -75.3567, 27.5561, -62.8425, 0.33 ) }
    dend_31 { pt3dadd( -75.9332, 27.8844, -63.1063, 0.67 ) }
    dend_31 { pt3dadd( -78.4451, 28.9481, -63.8655, 0.33 ) }
    dend_31 { pt3dadd( -82.0541, 30.1652, -64.3628, 0.33 ) }
    dend_31 { pt3dadd( -83.834, 30.6963, -64.43, 1.33 ) }
    dend_31 { pt3dadd( -88.9944, 31.8593, -64.6845, 0.33 ) }
    dend_31 { pt3dadd( -89.8831, 32.0171, -64.7297, 0.67 ) }
    dend_31 { pt3dadd( -92.9959, 32.5736, -64.9253, 0.33 ) }
    dend_31 { pt3dadd( -94.49, 32.8554, -65.1013, 0.67 ) }
    dend_31 { pt3dadd( -95.9797, 33.242, -65.4515, 0.33 ) }
    dend_31 { pt3dadd( -99.4937, 34.4924, -66.6293, 0.67 ) }
    dend_31 { pt3dadd( -100.668, 35.0732, -67.2013, 0.33 ) }
    dend_31 { pt3dadd( -101.455, 35.5148, -67.6157, 0.67 ) }
    dend_31 { pt3dadd( -104.364, 37.3984, -69.2887, 0.33 ) }
    dend_31 { pt3dadd( -104.811, 37.7558, -69.5733, 1.33 ) }
    dend_31 { pt3dadd( -106.175, 39.1002, -70.4298, 0.33 ) }
    dend_31 { pt3dadd( -106.992, 40.0727, -70.9038, 0.67 ) }
    dend_31 { pt3dadd( -107.738, 41.0656, -71.3792, 0.33 ) }
    dend_31 { pt3dadd( -108.106, 41.6066, -71.6587, 0.67 ) }
    dend_31 { pt3dadd( -110.572, 45.4203, -73.6666, 0.33 ) }
    dend_31 { pt3dadd( -111.132, 46.3068, -74.1432, 1.33 ) }
    dend_31 { pt3dadd( -112.058, 47.7358, -74.9373, 0.33 ) }
    dend_31 { pt3dadd( -112.428, 48.2881, -75.2259, 0.67 ) }
    dend_31 { pt3dadd( -115.546, 52.7715, -77.2846, 0.33 ) }
    dend_31 { pt3dadd( -115.903, 53.2642, -77.4737, 0.67 ) }
    dend_31 { pt3dadd( -118.19, 56.1055, -78.2818, 0.33 ) }
    dend_31 { pt3dadd( -118.656, 56.6285, -78.3905, 0.67 ) }
    dend_31 { pt3dadd( -121.201, 59.2153, -78.6961, 0.33 ) }
    dend_31 { pt3dadd( -122.375, 60.2786, -78.7148, 0.67 ) }
    dend_31 { pt3dadd( -123.707, 61.3337, -78.5842, 0.33 ) }
    dend_31 { pt3dadd( -125.225, 62.4749, -78.4185, 1.33 ) }
    dend_31 { pt3dadd( -127.217, 63.8408, -78.185, 0.33 ) }
    dend_31 { pt3dadd( -127.777, 64.2728, -78.1422, 0.67 ) }
    dend_31 { pt3dadd( -130.907, 66.8849, -78.0015, 0.33 ) }
    dend_31 { pt3dadd( -131.66, 67.555, -77.9999, 0.67 ) }
    dend_31 { pt3dadd( -134.567, 70.3007, -78.0425, 0.33 ) }
    dend_31 { pt3dadd( -135.274, 71.023, -78.0692, 0.67 ) }
    dend_31 { pt3dadd( -140.232, 76.2777, -78.3681, 0.33 ) }
    dend_31 { pt3dadd( -140.451, 76.5052, -78.3939, 1.33 ) }
    dend_31 { pt3dadd( -143.163, 79.2583, -78.8493, 0.33 ) }
    dend_31 { pt3dadd( -143.98, 80.0433, -79.0174, 0.67 ) }
    dend_31 { pt3dadd( -145.465, 81.3586, -79.3829, 0.33 ) }
    dend_31 { pt3dadd( -146.547, 82.2389, -79.6302, 0.67 ) }
    dend_31 { pt3dadd( -151.169, 85.5952, -80.6239, 0.33 ) }
    dend_31 { pt3dadd( -151.956, 86.1204, -80.7705, 0.67 ) }
    dend_31 { pt3dadd( -154.849, 87.8918, -81.2219, 0.33 ) }
    dend_31 { pt3dadd( -155.685, 88.3584, -81.3249, 0.67 ) }
    dend_31 { pt3dadd( -159.949, 90.5679, -81.6906, 0.33 ) }
    dend_31 { pt3dadd( -160.339, 90.7702, -81.6996, 1.33 ) }
    dend_31 { pt3dadd( -162.622, 91.9352, -81.5964, 1.33 ) }
    dend_31 { pt3dadd( -165.135, 93.2369, -81.4678, 0.33 ) }
    dend_31 { pt3dadd( -165.934, 93.6474, -81.417, 0.67 ) }
    dend_31 { pt3dadd( -168.755, 95.0701, -81.2182, 0.33 ) }
    dend_31 { pt3dadd( -170.834, 95.9653, -81.0734, 0.67 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 66/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -25.1081, 5.24964, -27.373, 0.67 ) }
    dend_28 { pt3dadd( -28.4618, -1.50163, -37.2984, 0.67 ) }
    dend_28 { pt3dadd( -29.7938, -3.81179, -40.5729, 0.67 ) }
    dend_28 { pt3dadd( -31.5237, -6.56302, -43.7542, 0.33 ) }
    dend_28 { pt3dadd( -32.2803, -7.69431, -44.8315, 2.0 ) }
    dend_28 { pt3dadd( -34.0374, -10.3171, -46.9574, 0.33 ) }
    dend_28 { pt3dadd( -36.0671, -13.1059, -48.868, 0.33 ) }
    dend_28 { pt3dadd( -36.9938, -14.1266, -49.151, 0.33 ) }
    dend_28 { pt3dadd( -40.7177, -17.7018, -49.8535, 0.67 ) }
    dend_28 { pt3dadd( -42.6153, -19.2884, -50.1572, 0.33 ) }
    dend_28 { pt3dadd( -43.9019, -20.1757, -50.3912, 0.33 ) }
    dend_28 { pt3dadd( -47.5495, -22.06, -51.0597, 2.0 ) }
    dend_28 { pt3dadd( -50.0925, -23.0749, -51.4777, 0.33 ) }
    dend_28 { pt3dadd( -51.8899, -23.537, -51.9792, 0.33 ) }
    dend_28 { pt3dadd( -58.2614, -24.1267, -54.4579, 0.67 ) }
    dend_28 { pt3dadd( -60.9305, -24.2174, -55.6259, 1.33 ) }
    dend_28 { pt3dadd( -63.1195, -24.1541, -56.73, 0.33 ) }
    dend_28 { pt3dadd( -64.3085, -24.1041, -57.4237, 0.67 ) }
    dend_28 { pt3dadd( -69.0736, -23.7908, -60.3535, 0.33 ) }
    dend_28 { pt3dadd( -71.8934, -23.6759, -62.0789, 1.33 ) }
    dend_28 { pt3dadd( -74.839, -23.5386, -63.85, 0.33 ) }
    dend_28 { pt3dadd( -77.6888, -23.4859, -65.6132, 0.67 ) }
    dend_28 { pt3dadd( -81.0953, -23.5739, -67.847, 0.33 ) }
    dend_28 { pt3dadd( -82.8946, -23.7546, -69.1566, 0.33 ) }
    dend_28 { pt3dadd( -83.9969, -23.9313, -69.9805, 0.33 ) }
    dend_28 { pt3dadd( -85.7357, -24.4325, -71.4894, 0.67 ) }
    dend_28 { pt3dadd( -88.3542, -25.5375, -74.0353, 0.33 ) }
    dend_28 { pt3dadd( -91.0877, -27.0528, -76.7804, 0.67 ) }
    dend_28 { pt3dadd( -94.8714, -29.2913, -80.8094, 0.33 ) }
    dend_28 { pt3dadd( -95.8629, -29.8292, -81.9762, 0.67 ) }
    dend_28 { pt3dadd( -97.7261, -30.6122, -84.1242, 0.33 ) }
    dend_28 { pt3dadd( -99.1985, -31.1682, -85.802, 0.33 ) }
    dend_28 { pt3dadd( -100.044, -31.4245, -86.6337, 0.33 ) }
    dend_28 { pt3dadd( -101.981, -31.9018, -88.253, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_28 { pt3dadd( -108.007, -33.2254, -92.8283, 0.33 ) }
    dend_28 { pt3dadd( -110.73, -33.8314, -94.8651, 0.67 ) }
    dend_28 { pt3dadd( -115.357, -34.9402, -98.168, 0.33 ) }
    dend_28 { pt3dadd( -117.484, -35.5186, -99.7354, 1.33 ) }
    dend_28 { pt3dadd( -120.17, -36.3759, -101.709, 0.33 ) }
    dend_28 { pt3dadd( -121.974, -37.0291, -102.982, 0.33 ) }
    dend_28 { pt3dadd( -124.818, -38.2044, -104.994, 0.67 ) }
    dend_28 { pt3dadd( -128.694, -39.5974, -107.825, 0.33 ) }
    dend_28 { pt3dadd( -129.975, -39.8678, -108.745, 0.67 ) }
    dend_28 { pt3dadd( -131.438, -39.9985, -109.967, 0.33 ) }
    dend_28 { pt3dadd( -132.464, -39.9617, -110.877, 2.0 ) }
    dend_28 { pt3dadd( -137.201, -39.4414, -115.189, 0.33 ) }
    dend_28 { pt3dadd( -140.303, -38.9309, -118.117, 0.67 ) }
    dend_28 { pt3dadd( -143.264, -38.1683, -121.076, 0.33 ) }
    dend_28 { pt3dadd( -146.322, -37.3596, -124.169, 0.33 ) }
    dend_28 { pt3dadd( -146.568, -37.2942, -124.452, 0.67 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 16/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.74712, -14.9374, 2.37916, 0.67 ) }
    dend_24 { pt3dadd( 8.47614, -19.048, 3.98469, 0.67 ) }
    dend_24 { pt3dadd( 10.4182, -24.5935, 6.0227, 0.67 ) }
    dend_24 { pt3dadd( 12.868, -33.3668, 8.87462, 0.67 ) }
    dend_24 { pt3dadd( 14.0628, -39.7209, 10.9968, 0.67 ) }
    dend_24 { pt3dadd( 14.6709, -43.9691, 12.4062, 0.67 ) }
    dend_24 { pt3dadd( 14.8531, -45.5585, 12.9266, 0.67 ) }
    dend_24 { pt3dadd( 14.9599, -48.5984, 13.8902, 0.67 ) }
    dend_24 { pt3dadd( 15.0782, -54.4455, 15.6678, 0.67 ) }
    dend_24 { pt3dadd( 15.192, -61.2393, 17.3536, 0.67 ) }
    dend_24 { pt3dadd( 15.5593, -65.2515, 18.5207, 0.67 ) }
    dend_24 { pt3dadd( 15.8476, -66.8009, 19.0581, 0.67 ) }
    dend_24 { pt3dadd( 16.9412, -70.9346, 20.6096, 0.67 ) }
    dend_24 { pt3dadd( 18.89, -76.0651, 22.6623, 0.67 ) }
    dend_24 { pt3dadd( 21.9149, -82.5874, 25.4182, 0.67 ) }
    dend_24 { pt3dadd( 24.4709, -87.1215, 27.3081, 0.67 ) }
    dend_24 { pt3dadd( 27.1845, -91.558, 29.3534, 0.67 ) }
    dend_24 { pt3dadd( 28.1108, -92.9523, 30.0608, 0.67 ) }
    dend_24 { pt3dadd( 29.477, -94.7971, 31.1762, 0.33 ) }
    dend_24 { pt3dadd( 33.153, -105.427, 35.8564, 0.33 ) }
    dend_24 { pt3dadd( 35.5424, -116.918, 39.2471, 0.33 ) }
    dend_24 { pt3dadd( 35.5034, -128.625, 42.784, 0.33 ) }
    dend_24 { pt3dadd( 35.4955, -139.362, 48.5653, 0.33 ) }
    dend_24 { pt3dadd( 36.4039, -150.063, 54.3355, 0.33 ) }
    dend_24 { pt3dadd( 39.1331, -159.141, 61.9034, 0.33 ) }
    dend_24 { pt3dadd( 40.6672, -167.465, 70.5591, 0.33 ) }
    dend_24 { pt3dadd( 44.3883, -173.633, 80.2058, 0.33 ) }
    dend_24 { pt3dadd( 48.1682, -181.43, 88.6314, 0.33 ) }
    dend_24 { pt3dadd( 51.7948, -188.489, 97.7179, 0.33 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 45/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 6.74712, -14.9374, 2.37916, 1.33 ) }
    dend_21 { pt3dadd( 6.13005, -17.5345, 2.25335, 1.33 ) }
    dend_21 { pt3dadd( 4.65927, -23.4318, 1.97203, 1.33 ) }
    dend_21 { pt3dadd( 2.12082, -33.4327, 1.50203, 0.67 ) }
    dend_21 { pt3dadd( -0.682729, -43.9427, 1.17474, 0.67 ) }
    dend_21 { pt3dadd( -2.0443, -48.9056, 1.07346, 0.67 ) }
    dend_21 { pt3dadd( -3.1426, -53.2056, 1.02134, 0.67 ) }
    dend_21 { pt3dadd( -3.8107, -56.5431, 1.08581, 0.67 ) }
    dend_21 { pt3dadd( -4.21956, -58.9802, 1.26369, 0.67 ) }
    dend_21 { pt3dadd( -4.6758, -62.3888, 1.70609, 0.67 ) }
    dend_21 { pt3dadd( -4.94054, -65.5663, 2.24913, 0.67 ) }
    dend_21 { pt3dadd( -5.35727, -70.8232, 2.99789, 0.67 ) }
    dend_21 { pt3dadd( -5.91747, -81.0614, 4.67621, 0.67 ) }
    dend_21 { pt3dadd( -6.21859, -87.0231, 5.68833, 0.67 ) }
    dend_21 { pt3dadd( -6.36007, -89.0255, 6.06804, 0.67 ) }
    dend_21 { pt3dadd( -6.74935, -94.0283, 7.04141, 0.67 ) }
    dend_21 { pt3dadd( -7.6478, -101.017, 8.41249, 0.67 ) }
    dend_21 { pt3dadd( -8.90029, -107.158, 9.44255, 0.67 ) }
    dend_21 { pt3dadd( -9.78633, -110.829, 9.97933, 0.67 ) }
    dend_21 { pt3dadd( -11.0542, -116.475, 10.7815, 0.67 ) }
    dend_21 { pt3dadd( -11.8668, -119.808, 11.3178, 0.67 ) }
    dend_21 { pt3dadd( -12.9031, -123.704, 12.062, 0.33 ) }
    dend_21 { pt3dadd( -14.0554, -128.457, 13.1128, 0.33 ) }
    dend_21 { pt3dadd( -14.7605, -130.996, 13.3168, 0.33 ) }
    dend_21 { pt3dadd( -15.7215, -134.752, 13.5169, 0.33 ) }
    dend_21 { pt3dadd( -19.0825, -144.196, 15.3355, 0.33 ) }
    dend_21 { pt3dadd( -22.6201, -153.215, 18.4221, 0.33 ) }
    dend_21 { pt3dadd( -27.8362, -160.824, 22.5621, 0.33 ) }
    dend_21 { pt3dadd( -31.91, -167.617, 28.8002, 0.33 ) }
    dend_21 { pt3dadd( -35.0976, -172.825, 36.7674, 0.33 ) }
    dend_21 { pt3dadd( -37.8467, -178.411, 44.6533, 0.33 ) }
    // Section: dend_17, id: dend_17, parent: dend_9 (entry count 76/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 5.61886, 6.22549, 19.0286, 0.67 ) }
    dend_17 { pt3dadd( 7.30529, 2.01666, 19.4241, 0.67 ) }
    dend_17 { pt3dadd( 9.30206, -2.38387, 20.9435, 0.67 ) }
    dend_17 { pt3dadd( 10.4816, -4.3128, 22.1095, 1.33 ) }
    dend_17 { pt3dadd( 12.8867, -7.27235, 24.5685, 1.33 ) }
    dend_17 { pt3dadd( 13.9892, -8.20612, 25.587, 0.67 ) }
    dend_17 { pt3dadd( 16.5335, -9.93821, 27.7336, 0.67 ) }
    dend_17 { pt3dadd( 17.4735, -10.2464, 28.9685, 0.67 ) }
    dend_17 { pt3dadd( 18.5742, -9.88505, 30.3023, 0.33 ) }
    dend_17 { pt3dadd( 19.1021, -9.58499, 30.8007, 0.67 ) }
    dend_17 { pt3dadd( 20.5937, -8.67836, 31.2628, 0.33 ) }
    dend_17 { pt3dadd( 23.924, -7.10754, 31.7016, 0.33 ) }
    dend_17 { pt3dadd( 31.0563, -14.0149, 35.5949, 0.33 ) }
    dend_17 { pt3dadd( 36.6552, -21.6403, 40.5722, 0.33 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 90/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 5.61886, 6.22549, 19.0286, 1.33 ) }
    dend_10 { pt3dadd( 2.87371, 8.74827, 18.6262, 1.33 ) }
    dend_10 { pt3dadd( -0.362104, 12.2063, 18.0741, 0.67 ) }
    dend_10 { pt3dadd( -4.21006, 16.6053, 17.3974, 0.67 ) }
    dend_10 { pt3dadd( -8.29289, 21.6159, 16.3701, 0.67 ) }
    dend_10 { pt3dadd( -11.6779, 26.3595, 15.3128, 0.33 ) }
    dend_10 { pt3dadd( -14.4749, 30.737, 14.324, 0.67 ) }
    dend_10 { pt3dadd( -15.9716, 33.8711, 13.4954, 0.33 ) }
    dend_10 { pt3dadd( -16.6949, 35.8813, 12.9327, 0.33 ) }
    dend_10 { pt3dadd( -17.8741, 40.517, 11.3907, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_10 { pt3dadd( -18.496, 44.9061, 9.82864, 0.33 ) }
    dend_10 { pt3dadd( -18.7176, 47.8242, 8.70709, 0.67 ) }
    dend_10 { pt3dadd( -18.9232, 52.5931, 6.89932, 0.33 ) }
    dend_10 { pt3dadd( -18.9706, 54.6497, 6.07357, 0.33 ) }
    dend_10 { pt3dadd( -18.9405, 58.776, 4.49479, 0.33 ) }
    dend_10 { pt3dadd( -18.959, 59.6594, 4.24324, 0.67 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 6/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 5.53432, 10.4262, -8.1714, 1.33 ) }
    dend_2 { pt3dadd( 5.1892, 13.9797, -10.429, 1.33 ) }
    dend_2 { pt3dadd( 4.72981, 18.7098, -13.434, 1.33 ) }
    dend_2 { pt3dadd( 4.00195, 26.2041, -18.1952, 1.33 ) }
    dend_2 { pt3dadd( 3.78899, 28.3969, -19.5883, 1.33 ) }
    dend_2 { pt3dadd( 3.18592, 34.6063, -23.5332, 2.0 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 12/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 5.53432, 10.4262, -8.1714, 1.33 ) }
    dend_1 { pt3dadd( 8.27042, 10.9861, -7.94226, 1.33 ) }
    dend_1 { pt3dadd( 13.8155, 12.368, -7.61077, 1.33 ) }
    dend_1 { pt3dadd( 17.706, 13.6382, -7.11366, 1.33 ) }
    dend_1 { pt3dadd( 21.4501, 15.1451, -6.52437, 1.33 ) }
    dend_1 { pt3dadd( 29.7281, 19.0166, -5.62001, 0.67 ) }
    dend_1 { pt3dadd( 34.1069, 21.1052, -5.28189, 0.67 ) }
    dend_1 { pt3dadd( 38.0575, 23.1019, -5.30307, 0.67 ) }
    dend_1 { pt3dadd( 42.8956, 25.655, -5.81334, 0.67 ) }
    dend_1 { pt3dadd( 44.9605, 26.9893, -6.10639, 0.67 ) }
    dend_1 { pt3dadd( 49.423, 30.4278, -7.24091, 0.67 ) }
    dend_1 { pt3dadd( 53.53, 33.8452, -8.7024, 0.67 ) }
    dend_1 { pt3dadd( 58.1756, 37.6466, -10.9013, 0.67 ) }
    dend_1 { pt3dadd( 62.6294, 41.2021, -13.3051, 0.67 ) }
    dend_1 { pt3dadd( 67.3221, 44.9182, -16.0201, 0.67 ) }
    dend_1 { pt3dadd( 74.1948, 50.4064, -19.8702, 0.67 ) }
    dend_1 { pt3dadd( 78.1932, 53.7596, -22.0266, 0.67 ) }
    dend_1 { pt3dadd( 80.8241, 56.0766, -23.5198, 0.67 ) }
    dend_1 { pt3dadd( 81.7207, 56.811, -23.9931, 0.33 ) }
    dend_1 { pt3dadd( 84.6583, 58.8341, -25.3011, 0.33 ) }
    dend_1 { pt3dadd( 86.7634, 59.7878, -25.9674, 1.33 ) }
    dend_1 { pt3dadd( 89.2041, 60.3516, -26.3769, 0.67 ) }
    dend_1 { pt3dadd( 90.981, 60.5326, -26.7641, 0.67 ) }
    dend_1 { pt3dadd( 93.7226, 60.6073, -27.5293, 0.33 ) }
    dend_1 { pt3dadd( 97.9047, 60.5918, -28.788, 0.33 ) }
    dend_1 { pt3dadd( 98.9967, 60.6132, -29.1894, 1.33 ) }
    dend_1 { pt3dadd( 104.847, 61.0733, -31.6339, 0.33 ) }
    dend_1 { pt3dadd( 106.96, 61.3521, -32.5293, 0.67 ) }
    dend_1 { pt3dadd( 109.21, 61.8007, -33.4645, 0.33 ) }
    dend_1 { pt3dadd( 110.724, 62.2121, -34.1088, 1.33 ) }
    dend_1 { pt3dadd( 115.804, 64.0776, -36.2132, 0.33 ) }
    dend_1 { pt3dadd( 116.155, 64.2326, -36.353, 0.67 ) }
    dend_1 { pt3dadd( 119.365, 66.0294, -37.5749, 0.33 ) }
    dend_1 { pt3dadd( 120.366, 66.6778, -37.9412, 1.33 ) }
    dend_1 { pt3dadd( 123.99, 69.3954, -39.232, 0.33 ) }
    dend_1 { pt3dadd( 127.464, 72.4096, -40.4681, 0.33 ) }
    dend_1 { pt3dadd( 129.599, 74.3136, -41.0989, 0.33 ) }
    dend_1 { pt3dadd( 131.814, 76.2152, -41.7771, 1.33 ) }
    dend_1 { pt3dadd( 136.037, 79.8908, -43.164, 0.33 ) }
    dend_1 { pt3dadd( 136.355, 80.1555, -43.2615, 1.33 ) }
    dend_1 { pt3dadd( 140.236, 82.8526, -44.2364, 0.33 ) }
    dend_1 { pt3dadd( 143.967, 84.8319, -45.059, 0.67 ) }
    dend_1 { pt3dadd( 148.515, 86.657, -45.965, 0.33 ) }
    dend_1 { pt3dadd( 149.708, 86.9976, -46.1711, 1.33 ) }
    dend_1 { pt3dadd( 152.839, 87.5386, -46.5909, 0.33 ) }
    dend_1 { pt3dadd( 157.024, 88.089, -46.9083, 0.33 ) }
    dend_1 { pt3dadd( 159.462, 88.305, -47.055, 0.67 ) }
    dend_1 { pt3dadd( 162.337, 88.6008, -47.382, 0.33 ) }
    dend_1 { pt3dadd( 163.236, 88.6956, -47.5035, 1.33 ) }
    dend_1 { pt3dadd( 167.776, 89.0269, -48.584, 0.33 ) }
    dend_1 { pt3dadd( 169.188, 89.1161, -49.0406, 1.33 ) }
    dend_1 { pt3dadd( 175.294, 89.6807, -51.7191, 0.33 ) }
    dend_1 { pt3dadd( 177.934, 89.9568, -53.0685, 0.33 ) }
    dend_1 { pt3dadd( 178.432, 90.0111, -53.3375, 0.67 ) }
    dend_1 { pt3dadd( 184.96, 90.7318, -57.0283, 0.33 ) }
    dend_1 { pt3dadd( 185.747, 90.8259, -57.4728, 0.67 ) }
    dend_1 { pt3dadd( 190.407, 91.222, -59.9664, 0.33 ) }
    dend_1 { pt3dadd( 192.781, 91.3803, -61.1256, 0.33 ) }
    dend_1 { pt3dadd( 195.874, 91.5723, -62.4532, 0.33 ) }
    dend_1 { pt3dadd( 199.275, 91.8153, -63.9103, 0.33 ) }
    dend_1 { pt3dadd( 201.644, 92.0972, -64.8388, 0.67 ) }
    dend_1 { pt3dadd( 207.031, 92.4685, -66.8721, 0.33 ) }
    dend_1 { pt3dadd( 207.031, 92.4685, -66.8721, 0.67 ) }
    dend_1 { pt3dadd( 209.366, 92.4557, -67.6602, 0.33 ) }
    dend_1 { pt3dadd( 212.61, 92.3768, -68.8448, 0.67 ) }
    dend_1 { pt3dadd( 215.062, 92.2625, -69.705, 0.33 ) }
    dend_1 { pt3dadd( 217.498, 92.0028, -70.5701, 0.33 ) }
    dend_1 { pt3dadd( 220.635, 91.6235, -71.5327, 0.33 ) }
    dend_1 { pt3dadd( 221.964, 91.433, -71.9402, 0.67 ) }
    dend_1 { pt3dadd( 227.109, 90.4882, -73.5125, 0.33 ) }
    dend_1 { pt3dadd( 227.657, 90.367, -73.6622, 0.67 ) }
    dend_1 { pt3dadd( 232.852, 89.0353, -75.3046, 0.33 ) }
    dend_1 { pt3dadd( 233.93, 88.784, -75.6868, 0.67 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 85/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.22997, 39.1086, 2.31199, 0.67 ) }
    axon_1 { pt3dadd( 1.64622, 54.1028, 2.31199, 0.67 ) }
    axon_1 { pt3dadd( 2.06247, 69.097, 2.31199, 0.67 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 88/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -6.18986, -11.0848, -16.8768, 1.33 ) }
    dend_38 { pt3dadd( -10.2145, -14.7689, -26.3156, 1.33 ) }
    dend_38 { pt3dadd( -11.1331, -16.0236, -28.9437, 0.67 ) }
    dend_38 { pt3dadd( -12.0339, -17.2432, -31.1691, 0.67 ) }
    dend_38 { pt3dadd( -12.3941, -17.6913, -31.9347, 0.67 ) }
    dend_38 { pt3dadd( -14.4851, -20.1453, -35.7043, 0.67 ) }
    dend_38 { pt3dadd( -15.1365, -20.8655, -36.8841, 1.33 ) }
    dend_38 { pt3dadd( -17.917, -23.9811, -41.1128, 0.33 ) }
    dend_38 { pt3dadd( -19.3686, -25.6145, -43.268, 1.33 ) }
    dend_38 { pt3dadd( -20.1366, -26.4159, -44.309, 0.67 ) }
    dend_38 { pt3dadd( -22.3118, -28.3686, -46.902, 2.0 ) }
    dend_38 { pt3dadd( -25.376, -30.6197, -49.9204, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_38 { pt3dadd( -27.9215, -32.292, -52.2637, 0.33 ) }
    dend_38 { pt3dadd( -28.9834, -32.9659, -53.0679, 1.33 ) }
    dend_38 { pt3dadd( -32.3859, -35.3069, -55.4444, 0.33 ) }
    dend_38 { pt3dadd( -32.6936, -35.5446, -55.6136, 0.67 ) }
    dend_38 { pt3dadd( -34.3733, -37.0587, -56.312, 0.33 ) }
    dend_38 { pt3dadd( -35.113, -37.8286, -56.5116, 0.67 ) }
    dend_38 { pt3dadd( -37.7562, -40.8006, -57.1681, 0.33 ) }
    dend_38 { pt3dadd( -38.7158, -42.0027, -57.346, 2.0 ) }
    dend_38 { pt3dadd( -40.7362, -44.6021, -57.7479, 0.67 ) }
    dend_38 { pt3dadd( -42.7587, -46.9734, -58.5786, 0.67 ) }
    dend_38 { pt3dadd( -43.9269, -48.3033, -59.2938, 0.33 ) }
    dend_38 { pt3dadd( -44.9829, -49.3675, -60.3048, 1.33 ) }
    dend_38 { pt3dadd( -46.0727, -50.2235, -61.6444, 0.33 ) }
    dend_38 { pt3dadd( -48.1112, -51.6105, -64.5661, 0.67 ) }
    dend_38 { pt3dadd( -50.0129, -52.8003, -67.4364, 0.33 ) }
    dend_38 { pt3dadd( -51.038, -53.3736, -68.9242, 1.33 ) }
    dend_38 { pt3dadd( -53.9027, -54.7766, -73.1822, 0.33 ) }
    dend_38 { pt3dadd( -55.8603, -55.6986, -76.0466, 0.33 ) }
    dend_38 { pt3dadd( -57.9385, -56.5812, -78.8502, 0.67 ) }
    dend_38 { pt3dadd( -59.9617, -57.4369, -81.195, 0.33 ) }
    dend_38 { pt3dadd( -61.3695, -57.9937, -82.5235, 0.33 ) }
    dend_38 { pt3dadd( -64.1743, -58.9337, -84.5945, 0.33 ) }
    dend_38 { pt3dadd( -65.889, -59.3614, -85.3355, 0.33 ) }
    dend_38 { pt3dadd( -67.317, -59.7043, -85.7441, 0.33 ) }
    dend_38 { pt3dadd( -68.7178, -59.9339, -85.9737, 1.33 ) }
    dend_38 { pt3dadd( -71.0781, -60.203, -86.3928, 0.33 ) }
    dend_38 { pt3dadd( -72.7671, -60.4656, -86.7271, 0.33 ) }
    dend_38 { pt3dadd( -75.755, -60.9238, -87.3053, 0.33 ) }
    dend_38 { pt3dadd( -78.5579, -61.1057, -88.2239, 0.33 ) }
    dend_38 { pt3dadd( -79.8959, -61.1064, -88.8457, 0.67 ) }
    dend_38 { pt3dadd( -83.6768, -60.9519, -90.944, 0.33 ) }
    dend_38 { pt3dadd( -84.6007, -60.8897, -91.5063, 0.67 ) }
    dend_38 { pt3dadd( -85.8663, -60.8056, -92.3014, 0.33 ) }
    dend_38 { pt3dadd( -89.3257, -60.8449, -94.872, 2.0 ) }
    dend_38 { pt3dadd( -91.6999, -60.8551, -96.6157, 0.33 ) }
    dend_38 { pt3dadd( -92.6807, -60.9264, -97.3565, 1.33 ) }
    dend_38 { pt3dadd( -95.037, -61.2001, -99.0548, 0.33 ) }
    dend_38 { pt3dadd( -95.5732, -61.2836, -99.4465, 0.67 ) }
    dend_38 { pt3dadd( -100.405, -62.5358, -102.81, 0.33 ) }
    dend_38 { pt3dadd( -102.516, -63.3046, -104.325, 1.33 ) }
    dend_38 { pt3dadd( -104.127, -64.0325, -105.591, 0.33 ) }
    dend_38 { pt3dadd( -105.347, -64.6155, -106.711, 0.33 ) }
    dend_38 { pt3dadd( -107.625, -65.7703, -108.881, 1.33 ) }
    dend_38 { pt3dadd( -109.039, -66.4221, -110.147, 0.33 ) }
    dend_38 { pt3dadd( -111.904, -67.6592, -112.649, 1.33 ) }
    dend_38 { pt3dadd( -113.719, -68.3926, -114.323, 0.67 ) }
    dend_38 { pt3dadd( -116.779, -69.4087, -117.04, 0.33 ) }
    dend_38 { pt3dadd( -118.379, -69.9456, -118.411, 0.67 ) }
    dend_38 { pt3dadd( -119.934, -70.4475, -119.591, 0.67 ) }
    dend_38 { pt3dadd( -123.587, -71.4249, -122.354, 0.33 ) }
    dend_38 { pt3dadd( -124.364, -71.5732, -122.876, 0.67 ) }
    dend_38 { pt3dadd( -125.945, -71.7531, -123.942, 0.33 ) }
    dend_38 { pt3dadd( -127.069, -71.9018, -124.67, 0.67 ) }
    dend_38 { pt3dadd( -128.5, -72.078, -125.646, 0.33 ) }
    dend_38 { pt3dadd( -130.769, -72.4074, -127.136, 0.67 ) }
    dend_38 { pt3dadd( -132.023, -72.5259, -127.95, 0.33 ) }
    dend_38 { pt3dadd( -132.804, -72.6318, -128.459, 1.33 ) }
    dend_38 { pt3dadd( -136.531, -73.2025, -131.052, 0.33 ) }
    dend_38 { pt3dadd( -137.966, -73.4492, -132.022, 0.33 ) }
    dend_38 { pt3dadd( -138.696, -73.6049, -132.513, 0.67 ) }
    dend_38 { pt3dadd( -141.257, -74.3864, -134.214, 0.33 ) }
    dend_38 { pt3dadd( -143.329, -75.2166, -135.685, 0.67 ) }
    dend_38 { pt3dadd( -145.778, -76.3352, -137.42, 0.33 ) }
    dend_38 { pt3dadd( -147.107, -77.0724, -138.592, 0.33 ) }
    dend_38 { pt3dadd( -147.301, -77.1939, -138.783, 0.67 ) }
    dend_38 { pt3dadd( -149.076, -78.5515, -140.653, 0.33 ) }
    dend_38 { pt3dadd( -149.748, -79.1829, -141.45, 0.67 ) }
    dend_38 { pt3dadd( -150.602, -80.0656, -142.771, 0.67 ) }
    dend_38 { pt3dadd( -153.495, -83.232, -147.589, 0.33 ) }
    dend_38 { pt3dadd( -154.262, -84.0658, -148.979, 0.33 ) }
    dend_38 { pt3dadd( -155.385, -85.2841, -151.108, 0.33 ) }
    dend_38 { pt3dadd( -156.262, -86.2662, -152.943, 0.67 ) }
    dend_38 { pt3dadd( -158.099, -88.3066, -157.101, 0.33 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 73/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -6.18986, -11.0848, -16.8768, 1.33 ) }
    dend_37 { pt3dadd( -8.05177, -11.991, -17.8023, 1.33 ) }
    dend_37 { pt3dadd( -10.7127, -12.8926, -18.8263, 0.67 ) }
    dend_37 { pt3dadd( -11.6892, -13.1999, -19.1065, 1.33 ) }
    dend_37 { pt3dadd( -15.1544, -14.5786, -20.0899, 1.33 ) }
    dend_37 { pt3dadd( -16.8897, -15.1857, -20.3654, 0.67 ) }
    dend_37 { pt3dadd( -19.0087, -15.9998, -20.6104, 0.67 ) }
    dend_37 { pt3dadd( -20.9962, -16.86, -20.814, 0.67 ) }
    dend_37 { pt3dadd( -22.6792, -17.5688, -21.1033, 1.33 ) }
    dend_37 { pt3dadd( -24.7626, -18.2402, -21.412, 0.67 ) }
    dend_37 { pt3dadd( -28.6152, -19.1125, -21.9723, 0.33 ) }
    dend_37 { pt3dadd( -30.0539, -19.3889, -22.2335, 0.33 ) }
    dend_37 { pt3dadd( -33.7698, -20.0951, -23.0043, 1.33 ) }
    dend_37 { pt3dadd( -38.2322, -20.831, -24.0861, 0.67 ) }
    dend_37 { pt3dadd( -40.344, -21.0692, -24.6093, 0.33 ) }
    dend_37 { pt3dadd( -42.7694, -21.2317, -25.1806, 1.33 ) }
    dend_37 { pt3dadd( -44.283, -21.3036, -25.5534, 0.33 ) }
    dend_37 { pt3dadd( -45.0346, -21.3195, -25.694, 1.33 ) }
    dend_37 { pt3dadd( -48.4121, -21.3521, -25.9185, 0.33 ) }
    dend_37 { pt3dadd( -51.015, -21.3995, -25.7512, 0.33 ) }
    dend_37 { pt3dadd( -52.2843, -21.4798, -25.5815, 0.33 ) }
    dend_37 { pt3dadd( -53.0033, -21.5484, -25.4823, 1.33 ) }
    dend_37 { pt3dadd( -55.0473, -21.7353, -25.2434, 0.33 ) }
    dend_37 { pt3dadd( -57.283, -21.9756, -24.9798, 0.67 ) }
    dend_37 { pt3dadd( -59.1328, -22.2267, -24.8724, 0.33 ) }
    dend_37 { pt3dadd( -60.998, -22.5066, -24.9967, 1.33 ) }
    dend_37 { pt3dadd( -64.5058, -23.1014, -25.5239, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_37 { pt3dadd( -64.8551, -23.1525, -25.5906, 0.67 ) }
    dend_37 { pt3dadd( -66.4306, -23.3227, -25.9556, 0.33 ) }
    dend_37 { pt3dadd( -69.203, -23.4632, -26.7776, 0.67 ) }
    dend_37 { pt3dadd( -70.6774, -23.4159, -27.208, 0.33 ) }
    dend_37 { pt3dadd( -71.2384, -23.3463, -27.3092, 0.67 ) }
    dend_37 { pt3dadd( -73.5651, -22.868, -27.4485, 0.33 ) }
    dend_37 { pt3dadd( -74.4524, -22.6542, -27.5161, 0.67 ) }
    dend_37 { pt3dadd( -76.9706, -21.9577, -27.6927, 0.33 ) }
    dend_37 { pt3dadd( -77.6704, -21.7499, -27.7184, 0.67 ) }
    dend_37 { pt3dadd( -80.626, -20.8951, -28.0565, 0.33 ) }
    dend_37 { pt3dadd( -80.9792, -20.8105, -28.1121, 1.33 ) }
    dend_37 { pt3dadd( -84.026, -20.2476, -28.602, 0.33 ) }
    dend_37 { pt3dadd( -84.5914, -20.1741, -28.6768, 0.33 ) }
    dend_37 { pt3dadd( -84.5914, -20.1741, -28.6768, 0.67 ) }
    dend_37 { pt3dadd( -88.6706, -20.0291, -28.9095, 0.33 ) }
    dend_37 { pt3dadd( -89.4528, -20.0307, -28.9134, 0.67 ) }
    dend_37 { pt3dadd( -92.0073, -20.0943, -28.7288, 0.33 ) }
    dend_37 { pt3dadd( -92.7648, -20.0899, -28.5768, 0.67 ) }
    dend_37 { pt3dadd( -94.6549, -20.0128, -28.0893, 0.33 ) }
    dend_37 { pt3dadd( -95.196, -19.9655, -27.9121, 0.67 ) }
    dend_37 { pt3dadd( -97.6095, -19.6087, -26.8638, 0.33 ) }
    dend_37 { pt3dadd( -98.1218, -19.4815, -26.6328, 1.33 ) }
    dend_37 { pt3dadd( -101.042, -18.4591, -25.2502, 0.33 ) }
    dend_37 { pt3dadd( -101.261, -18.3561, -25.1603, 0.67 ) }
    dend_37 { pt3dadd( -102.144, -17.8363, -24.8479, 0.33 ) }
    dend_37 { pt3dadd( -102.619, -17.5464, -24.7103, 0.67 ) }
    dend_37 { pt3dadd( -103.983, -16.6776, -24.4172, 0.33 ) }
    dend_37 { pt3dadd( -104.298, -16.5009, -24.3665, 1.33 ) }
    dend_37 { pt3dadd( -107.016, -15.2541, -24.132, 0.33 ) }
    dend_37 { pt3dadd( -107.551, -15.0526, -24.0799, 1.33 ) }
    dend_37 { pt3dadd( -109.044, -14.6172, -23.8737, 0.33 ) }
    dend_37 { pt3dadd( -109.287, -14.5586, -23.8197, 0.67 ) }
    dend_37 { pt3dadd( -110.498, -14.3454, -23.4493, 0.33 ) }
    dend_37 { pt3dadd( -110.498, -14.3454, -23.4493, 0.67 ) }
    dend_37 { pt3dadd( -111.936, -14.2531, -22.6521, 0.33 ) }
    dend_37 { pt3dadd( -112.882, -14.166, -22.0933, 0.67 ) }
    dend_37 { pt3dadd( -114.6, -13.8424, -20.9635, 0.33 ) }
    dend_37 { pt3dadd( -114.807, -13.7965, -20.8204, 0.67 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 38/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -5.40426, -13.9544, -15.2777, 0.67 ) }
    dend_35 { pt3dadd( -7.36043, -19.2891, -21.171, 0.67 ) }
    dend_35 { pt3dadd( -8.51728, -22.5024, -24.3917, 0.67 ) }
    dend_35 { pt3dadd( -10.2727, -27.4878, -29.2746, 0.67 ) }
    dend_35 { pt3dadd( -11.2801, -30.3934, -32.0659, 1.33 ) }
    dend_35 { pt3dadd( -13.8984, -37.7883, -39.52, 0.67 ) }
    dend_35 { pt3dadd( -14.9528, -40.6039, -42.5056, 0.33 ) }
    dend_35 { pt3dadd( -15.7099, -42.7231, -44.8321, 0.33 ) }
    dend_35 { pt3dadd( -16.7913, -45.7908, -48.5623, 2.0 ) }
    dend_35 { pt3dadd( -18.7183, -50.8811, -55.0556, 0.67 ) }
    dend_35 { pt3dadd( -20.2351, -54.5995, -59.9879, 0.33 ) }
    dend_35 { pt3dadd( -22.1202, -58.3269, -64.8845, 1.33 ) }
    dend_35 { pt3dadd( -25.0765, -63.2231, -71.4326, 0.33 ) }
    dend_35 { pt3dadd( -25.4395, -63.7979, -72.1892, 0.67 ) }
    dend_35 { pt3dadd( -26.6013, -65.4682, -74.2093, 0.33 ) }
    dend_35 { pt3dadd( -27.7824, -66.9707, -75.8189, 0.67 ) }
    dend_35 { pt3dadd( -30.3328, -70.0656, -78.552, 0.33 ) }
    dend_35 { pt3dadd( -32.8932, -73.0082, -80.7522, 0.33 ) }
    dend_35 { pt3dadd( -35.3654, -75.7912, -82.6342, 0.67 ) }
    dend_35 { pt3dadd( -36.3913, -77.0559, -83.5467, 0.33 ) }
    dend_35 { pt3dadd( -37.3513, -78.4081, -84.5102, 0.67 ) }
    dend_35 { pt3dadd( -39.358, -81.5336, -86.7673, 0.33 ) }
    dend_35 { pt3dadd( -39.7908, -82.2607, -87.3213, 1.33 ) }
    dend_35 { pt3dadd( -41.6258, -85.4004, -89.6395, 0.33 ) }
    dend_35 { pt3dadd( -41.9341, -85.8814, -89.9482, 0.67 ) }
    dend_35 { pt3dadd( -43.6999, -88.623, -91.78, 0.33 ) }
    dend_35 { pt3dadd( -45.2309, -90.7084, -93.1608, 1.33 ) }
    dend_35 { pt3dadd( -47.1121, -93.0054, -94.8468, 0.33 ) }
    dend_35 { pt3dadd( -47.634, -93.5667, -95.3175, 0.67 ) }
    dend_35 { pt3dadd( -49.9094, -95.773, -97.4856, 0.33 ) }
    dend_35 { pt3dadd( -51.4057, -97.1394, -98.9513, 0.67 ) }
    dend_35 { pt3dadd( -54.7016, -99.9021, -102.34, 0.33 ) }
    dend_35 { pt3dadd( -57.1426, -101.845, -104.81, 0.67 ) }
    dend_35 { pt3dadd( -59.3216, -103.419, -107.055, 0.33 ) }
    dend_35 { pt3dadd( -61.2137, -104.794, -109.154, 1.33 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 73/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -5.40426, -13.9544, -15.2777, 0.33 ) }
    dend_34 { pt3dadd( -7.96755, -16.658, -15.2039, 0.33 ) }
    dend_34 { pt3dadd( -10.1567, -19.3587, -14.9861, 0.67 ) }
    dend_34 { pt3dadd( -11.1308, -20.6106, -14.8791, 0.67 ) }
    dend_34 { pt3dadd( -14.1835, -24.3842, -14.4108, 0.67 ) }
    dend_34 { pt3dadd( -16.7138, -27.5965, -13.9771, 0.67 ) }
    dend_34 { pt3dadd( -20.7754, -32.3276, -13.2878, 0.67 ) }
    dend_34 { pt3dadd( -24.8108, -36.5461, -12.6295, 0.67 ) }
    dend_34 { pt3dadd( -27.1505, -38.8727, -12.2421, 1.33 ) }
    dend_34 { pt3dadd( -32.0219, -43.6039, -11.4376, 0.67 ) }
    dend_34 { pt3dadd( -36.2821, -47.5856, -10.755, 0.67 ) }
    dend_34 { pt3dadd( -42.3546, -52.797, -10.0202, 0.67 ) }
    dend_34 { pt3dadd( -45.5277, -55.1351, -9.68244, 0.33 ) }
    dend_34 { pt3dadd( -46.2859, -55.5934, -9.61948, 0.67 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 87/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -146.568, -37.2942, -124.452, 0.33 ) }
    dend_30 { pt3dadd( -147.895, -36.3228, -125.611, 0.33 ) }
    dend_30 { pt3dadd( -148.194, -36.1344, -125.817, 0.67 ) }
    dend_30 { pt3dadd( -150.075, -35.0592, -127.278, 0.33 ) }
    dend_30 { pt3dadd( -154.2, -32.723, -130.462, 0.67 ) }
    dend_30 { pt3dadd( -158.47, -30.2298, -133.854, 0.33 ) }
    dend_30 { pt3dadd( -161.506, -28.4327, -136.178, 1.33 ) }
    dend_30 { pt3dadd( -162.963, -27.5588, -137.313, 1.33 ) }
    dend_30 { pt3dadd( -168.562, -24.169, -141.514, 0.33 ) }
    dend_30 { pt3dadd( -169.923, -23.4173, -142.486, 0.33 ) }
    dend_30 { pt3dadd( -171.988, -22.3165, -143.766, 0.67 ) }
    dend_30 { pt3dadd( -173.815, -21.3792, -144.929, 0.33 ) }
    dend_30 { pt3dadd( -173.815, -21.3792, -144.929, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_30 { pt3dadd( -176.464, -19.7073, -146.9, 0.33 ) }
    dend_30 { pt3dadd( -179.279, -18.0901, -147.854, 0.67 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 2/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -146.568, -37.2942, -124.452, 0.33 ) }
    dend_29 { pt3dadd( -143.925, -35.6513, -122.673, 0.33 ) }
    dend_29 { pt3dadd( -142.6, -34.8279, -121.782, 0.67 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 5/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 51.7948, -188.489, 97.7179, 0.67 ) }
    dend_26 { pt3dadd( 54.6477, -196.99, 102.569, 0.67 ) }
    dend_26 { pt3dadd( 57.9783, -204.712, 108.285, 0.67 ) }
    dend_26 { pt3dadd( 62.2797, -211.957, 113.938, 0.67 ) }
    dend_26 { pt3dadd( 67.936, -218.736, 118.889, 0.67 ) }
    dend_26 { pt3dadd( 73.6402, -224.993, 124.413, 0.67 ) }
    dend_26 { pt3dadd( 78.5393, -232.234, 129.553, 0.67 ) }
    dend_26 { pt3dadd( 84.8412, -238.523, 134.331, 0.67 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 13/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 51.7948, -188.489, 97.7179, 0.33 ) }
    dend_25 { pt3dadd( 53.5558, -196.655, 102.025, 0.67 ) }
    dend_25 { pt3dadd( 55.8062, -204.846, 106.048, 0.67 ) }
    dend_25 { pt3dadd( 59.3985, -213.044, 108.894, 0.67 ) }
    dend_25 { pt3dadd( 62.3375, -221.886, 110.252, 0.67 ) }
    dend_25 { pt3dadd( 65.3985, -230.255, 113.245, 0.67 ) }
    dend_25 { pt3dadd( 70.0051, -237.917, 116.048, 0.67 ) }
    dend_25 { pt3dadd( 74.5769, -245.356, 119.427, 0.67 ) }
    dend_25 { pt3dadd( 77.4257, -254.064, 121.583, 0.67 ) }
    dend_25 { pt3dadd( 80.4531, -262.896, 122.796, 0.67 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 23/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -37.8467, -178.411, 44.6533, 0.67 ) }
    dend_23 { pt3dadd( -41.8714, -189.442, 42.4192, 0.67 ) }
    dend_23 { pt3dadd( -44.6691, -200.985, 40.8893, 0.67 ) }
    dend_23 { pt3dadd( -48.1123, -212.421, 40.0948, 0.67 ) }
    dend_23 { pt3dadd( -51.7651, -223.813, 39.8597, 0.67 ) }
    dend_23 { pt3dadd( -54.2275, -235.504, 40.728, 0.67 ) }
    dend_23 { pt3dadd( -54.7625, -247.355, 42.4231, 0.67 ) }
    dend_23 { pt3dadd( -55.1006, -259.339, 42.7046, 0.67 ) }
    dend_23 { pt3dadd( -54.6477, -271.21, 41.0769, 0.67 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 32/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -37.8467, -178.411, 44.6533, 0.33 ) }
    dend_22 { pt3dadd( -38.6811, -186.409, 50.7922, 0.67 ) }
    dend_22 { pt3dadd( -38.917, -194.504, 56.8609, 0.67 ) }
    dend_22 { pt3dadd( -40.0915, -203.65, 61.1444, 0.67 ) }
    dend_22 { pt3dadd( -42.3996, -212.388, 65.7657, 0.67 ) }
    dend_22 { pt3dadd( -45.3094, -220.504, 71.0766, 0.67 ) }
    dend_22 { pt3dadd( -47.9111, -227.749, 77.6028, 0.67 ) }
    dend_22 { pt3dadd( -51.4263, -234.034, 84.6321, 0.67 ) }
    dend_22 { pt3dadd( -56.1236, -240.007, 91.2191, 0.67 ) }
    dend_22 { pt3dadd( -61.7543, -245.093, 97.7856, 0.67 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 42/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 36.6552, -21.6403, 40.5722, 0.67 ) }
    dend_19 { pt3dadd( 44.7497, -27.4216, 45.085, 0.67 ) }
    dend_19 { pt3dadd( 51.6915, -33.2919, 51.1486, 0.67 ) }
    dend_19 { pt3dadd( 57.5465, -40.384, 57.116, 0.67 ) }
    dend_19 { pt3dadd( 64.0304, -48.5855, 60.5225, 0.67 ) }
    dend_19 { pt3dadd( 70.8216, -55.9869, 64.931, 0.67 ) }
    dend_19 { pt3dadd( 76.5748, -63.7372, 70.1725, 0.67 ) }
    dend_19 { pt3dadd( 82.546, -71.9396, 74.4166, 0.67 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 50/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 36.6552, -21.6403, 40.5722, 0.33 ) }
    dend_18 { pt3dadd( 43.6884, -27.9022, 45.1928, 0.67 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 52/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -18.959, 59.6594, 4.24324, 0.67 ) }
    dend_12 { pt3dadd( -19.9758, 63.8997, 2.98767, 0.67 ) }
    dend_12 { pt3dadd( -20.553, 66.3067, 2.27492, 0.67 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 55/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -18.959, 59.6594, 4.24324, 0.33 ) }
    dend_11 { pt3dadd( -20.3998, 60.9413, 7.10288, 0.33 ) }
    dend_11 { pt3dadd( -20.9428, 61.4245, 8.18059, 0.33 ) }
    dend_11 { pt3dadd( -21.7215, 62.1173, 9.7261, 0.33 ) }
    dend_11 { pt3dadd( -24.0513, 66.206, 15.9664, 0.33 ) }
    dend_11 { pt3dadd( -27.1438, 70.9932, 21.348, 0.33 ) }
    dend_11 { pt3dadd( -29.2761, 76.928, 26.0634, 0.33 ) }
    dend_11 { pt3dadd( -30.1083, 82.7351, 31.3012, 0.33 ) }
    dend_11 { pt3dadd( -30.5023, 88.2701, 36.8585, 0.33 ) }
    dend_11 { pt3dadd( -29.4967, 93.3007, 42.7765, 0.33 ) }
    dend_11 { pt3dadd( -28.2301, 99.0467, 47.9788, 0.33 ) }
    dend_11 { pt3dadd( -26.0991, 105.794, 51.4627, 0.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 67/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 3.18592, 34.6063, -23.5332, 0.67 ) }
    dend_8 { pt3dadd( 1.15104, 39.956, -23.711, 0.67 ) }
    dend_8 { pt3dadd( -0.110122, 43.3932, -23.5114, 0.67 ) }
    dend_8 { pt3dadd( -2.21164, 48.8335, -23.0155, 0.67 ) }
    dend_8 { pt3dadd( -3.70531, 52.5969, -22.6534, 0.67 ) }
    dend_8 { pt3dadd( -5.67041, 57.4152, -22.2071, 0.67 ) }
    dend_8 { pt3dadd( -8.15759, 63.9028, -21.6838, 0.67 ) }
    dend_8 { pt3dadd( -9.60002, 67.9979, -21.4116, 0.67 ) }
    dend_8 { pt3dadd( -10.3173, 70.6012, -21.2583, 0.67 ) }
    dend_8 { pt3dadd( -11.5609, 75.9898, -20.9759, 0.67 ) }
    dend_8 { pt3dadd( -12.1687, 78.5826, -20.8341, 0.67 ) }
    dend_8 { pt3dadd( -13.7894, 85.651, -20.3794, 0.67 ) }
    dend_8 { pt3dadd( -14.4519, 88.6922, -20.3844, 0.67 ) }
    dend_8 { pt3dadd( -14.9726, 91.3294, -20.426, 0.67 ) }
    dend_8 { pt3dadd( -15.2892, 92.9874, -20.4296, 0.67 ) }
    dend_8 { pt3dadd( -16.1507, 97.2466, -20.4018, 0.67 ) }
    dend_8 { pt3dadd( -17.1904, 102.217, -20.3452, 0.67 ) }
    dend_8 { pt3dadd( -18.34, 106.996, -20.147, 0.67 ) }
    dend_8 { pt3dadd( -19.6876, 112.009, -19.8463, 0.67 ) }
    dend_8 { pt3dadd( -20.8723, 116.077, -19.5635, 0.67 ) }
    dend_8 { pt3dadd( -22.0728, 120.534, -19.3577, 0.33 ) }
    dend_8 { pt3dadd( -22.9032, 124.033, -19.2242, 0.67 ) }
    dend_8 { pt3dadd( -23.6555, 127.504, -19.0279, 0.33 ) }
    dend_8 { pt3dadd( -23.9598, 129.26, -18.8919, 0.67 ) }
    dend_8 { pt3dadd( -24.5188, 133.226, -18.4471, 0.33 ) }
    dend_8 { pt3dadd( -24.7901, 137.57, -17.822, 1.33 ) }
    dend_8 { pt3dadd( -24.644, 141.538, -16.8226, 0.33 ) }
    dend_8 { pt3dadd( -24.3691, 143.133, -16.2707, 0.33 ) }
    dend_8 { pt3dadd( -24.0535, 144.529, -15.7667, 0.67 ) }
    dend_8 { pt3dadd( -23.4671, 147.214, -14.7249, 0.33 ) }
    dend_8 { pt3dadd( -22.6204, 151.372, -12.9292, 0.33 ) }
    dend_8 { pt3dadd( -22.0791, 155.545, -10.9089, 0.33 ) }
    dend_8 { pt3dadd( -21.9183, 157.462, -10.0731, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_8 { pt3dadd( -21.7622, 162.432, -8.22717, 0.33 ) }
    dend_8 { pt3dadd( -21.8552, 165.251, -7.40173, 0.33 ) }
    dend_8 { pt3dadd( -21.9391, 166.615, -7.07266, 0.67 ) }
    dend_8 { pt3dadd( -22.0624, 169.63, -6.4662, 0.33 ) }
    dend_8 { pt3dadd( -22.1119, 171.141, -6.27113, 0.67 ) }
    dend_8 { pt3dadd( -22.2783, 175.504, -5.78715, 0.33 ) }
    dend_8 { pt3dadd( -22.1053, 179.457, -5.38559, 0.33 ) }
    dend_8 { pt3dadd( -21.8712, 183.591, -5.0714, 0.33 ) }
    dend_8 { pt3dadd( -21.6524, 186.698, -4.91459, 0.67 ) }
    dend_8 { pt3dadd( -20.9457, 193.092, -4.69887, 0.67 ) }
    dend_8 { pt3dadd( -20.6459, 195.34, -4.62537, 0.67 ) }
    dend_8 { pt3dadd( -19.657, 201.916, -4.43936, 0.67 ) }
    dend_8 { pt3dadd( -18.9745, 206.14, -4.36049, 0.67 ) }
    dend_8 { pt3dadd( -18.6754, 208.818, -4.31764, 0.67 ) }
    dend_8 { pt3dadd( -18.4443, 211.776, -4.32526, 0.33 ) }
    dend_8 { pt3dadd( -18.3828, 213.652, -4.37779, 0.33 ) }
    dend_8 { pt3dadd( -18.3118, 216.713, -4.50412, 0.67 ) }
    dend_8 { pt3dadd( -18.5273, 225.624, -5.00163, 0.67 ) }
    dend_8 { pt3dadd( -18.6642, 230.568, -5.29369, 0.67 ) }
    dend_8 { pt3dadd( -18.9036, 235.166, -5.60363, 0.67 ) }
    dend_8 { pt3dadd( -19.2515, 239.85, -5.95013, 0.67 ) }
    dend_8 { pt3dadd( -19.9347, 247.977, -6.57257, 0.67 ) }
    dend_8 { pt3dadd( -20.485, 253.473, -6.95003, 0.67 ) }
    dend_8 { pt3dadd( -20.9628, 257.314, -7.18009, 0.67 ) }
    dend_8 { pt3dadd( -21.249, 259.994, -7.28889, 0.67 ) }
    dend_8 { pt3dadd( -21.4656, 261.867, -7.29729, 1.33 ) }
    dend_8 { pt3dadd( -22.0216, 268.161, -7.09577, 0.67 ) }
    dend_8 { pt3dadd( -22.5042, 273.809, -6.7399, 0.33 ) }
    dend_8 { pt3dadd( -22.5509, 275.344, -6.59232, 0.67 ) }
    dend_8 { pt3dadd( -22.5498, 279.498, -6.18475, 0.33 ) }
    dend_8 { pt3dadd( -22.3998, 283.683, -5.70316, 0.33 ) }
    dend_8 { pt3dadd( -21.9842, 289.266, -4.9891, 0.33 ) }
    dend_8 { pt3dadd( -21.7223, 291.331, -4.68746, 0.33 ) }
    dend_8 { pt3dadd( -21.5889, 292.271, -4.55946, 0.33 ) }
    dend_8 { pt3dadd( -20.9478, 297.864, -3.83979, 0.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 35/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 3.18592, 34.6063, -23.5332, 1.33 ) }
    dend_3 { pt3dadd( 3.20195, 38.6738, -27.5211, 1.33 ) }
    dend_3 { pt3dadd( 3.23027, 45.855, -34.5618, 1.33 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 38/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -20.553, 66.3067, 2.27492, 0.67 ) }
    dend_16 { pt3dadd( -19.9033, 65.4616, -4.24432, 0.67 ) }
    dend_16 { pt3dadd( -19.6346, 65.1679, -6.00326, 0.67 ) }
    dend_16 { pt3dadd( -19.3871, 64.8384, -7.63603, 1.33 ) }
    dend_16 { pt3dadd( -19.0122, 64.3368, -11.6396, 0.33 ) }
    dend_16 { pt3dadd( -18.5621, 63.8348, -15.5256, 0.33 ) }
    dend_16 { pt3dadd( -18.4071, 63.657, -16.7556, 0.33 ) }
    dend_16 { pt3dadd( -18.1544, 63.4621, -17.9368, 0.67 ) }
    dend_16 { pt3dadd( -17.9697, 63.2778, -19.1306, 0.67 ) }
    dend_16 { pt3dadd( -17.146, 62.5409, -26.3648, 0.67 ) }
    dend_16 { pt3dadd( -16.92, 62.4639, -28.3727, 0.67 ) }
    dend_16 { pt3dadd( -16.8358, 62.3082, -30.4385, 0.67 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 50/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -20.553, 66.3067, 2.27492, 0.33 ) }
    dend_13 { pt3dadd( -22.6316, 68.2067, 7.24553, 0.33 ) }
    dend_13 { pt3dadd( -23.3171, 68.4959, 8.61825, 0.33 ) }
    dend_13 { pt3dadd( -23.93, 68.5763, 9.84304, 1.33 ) }
    dend_13 { pt3dadd( -27.1129, 68.2649, 16.9921, 0.67 ) }
    dend_13 { pt3dadd( -28.0365, 68.1745, 19.0666, 0.67 ) }
    dend_13 { pt3dadd( -29.8792, 67.9942, 23.2054, 1.33 ) }
    dend_13 { pt3dadd( -30.8063, 67.6053, 26.0867, 0.33 ) }
    dend_13 { pt3dadd( -31.4996, 67.2573, 28.333, 0.33 ) }
    dend_13 { pt3dadd( -32.3422, 66.6575, 30.6878, 0.67 ) }
    dend_13 { pt3dadd( -34.8088, 66.5757, 41.7733, 0.67 ) }
    dend_13 { pt3dadd( -37.6283, 65.7109, 52.7412, 0.67 ) }
    dend_13 { pt3dadd( -41.3146, 65.0104, 63.4604, 0.67 ) }
    dend_13 { pt3dadd( -44.393, 64.485, 74.3795, 0.67 ) }
    dend_13 { pt3dadd( -48.0013, 65.0187, 85.1366, 0.67 ) }
    dend_13 { pt3dadd( -54.0096, 63.886, 94.7075, 0.67 ) }
    dend_13 { pt3dadd( -59.1733, 61.1852, 104.466, 0.67 ) }
    dend_13 { pt3dadd( -66.5269, 60.7977, 113.113, 0.67 ) }
    dend_13 { pt3dadd( -73.8242, 61.0643, 121.814, 0.67 ) }
    dend_13 { pt3dadd( -79.7563, 61.3717, 131.497, 0.67 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 70/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 3.23027, 45.855, -34.5618, 0.67 ) }
    dend_7 { pt3dadd( 7.40013, 56.4347, -36.5264, 0.67 ) }
    dend_7 { pt3dadd( 8.35284, 59.1871, -37.1555, 0.67 ) }
    dend_7 { pt3dadd( 9.20277, 62.0407, -37.8943, 0.33 ) }
    dend_7 { pt3dadd( 9.60725, 63.7275, -38.3727, 1.33 ) }
    dend_7 { pt3dadd( 10.6663, 69.3107, -39.8835, 0.33 ) }
    dend_7 { pt3dadd( 10.9354, 71.2126, -40.2692, 0.33 ) }
    dend_7 { pt3dadd( 11.0708, 73.3901, -40.6671, 1.33 ) }
    dend_7 { pt3dadd( 11.2055, 76.9414, -41.0806, 0.67 ) }
    dend_7 { pt3dadd( 11.4841, 83.6311, -41.7933, 0.33 ) }
    dend_7 { pt3dadd( 11.6961, 89.2639, -42.2691, 1.33 ) }
    dend_7 { pt3dadd( 11.9419, 95.1349, -42.5323, 0.33 ) }
    dend_7 { pt3dadd( 12.0185, 96.4401, -42.5972, 0.67 ) }
    dend_7 { pt3dadd( 12.3714, 102.288, -42.9172, 0.33 ) }
    dend_7 { pt3dadd( 12.6712, 106.683, -43.1566, 0.33 ) }
    dend_7 { pt3dadd( 12.9897, 110.01, -43.3748, 0.33 ) }
    dend_7 { pt3dadd( 13.3631, 112.736, -43.7131, 0.67 ) }
    dend_7 { pt3dadd( 13.9596, 115.348, -44.3585, 0.33 ) }
    dend_7 { pt3dadd( 14.3067, 116.712, -44.7218, 0.33 ) }
    dend_7 { pt3dadd( 14.5966, 117.721, -45.0211, 0.33 ) }
    dend_7 { pt3dadd( 15.0578, 119.206, -45.4465, 0.33 ) }
    dend_7 { pt3dadd( 15.7658, 120.929, -46.0519, 0.67 ) }
    dend_7 { pt3dadd( 18.1119, 126.0, -48.1099, 0.33 ) }
    dend_7 { pt3dadd( 18.9844, 127.803, -48.9308, 0.33 ) }
    dend_7 { pt3dadd( 19.9254, 129.692, -49.8132, 0.67 ) }
    dend_7 { pt3dadd( 20.6435, 131.142, -50.4952, 0.33 ) }
    dend_7 { pt3dadd( 21.5805, 132.901, -51.4198, 0.33 ) }
    dend_7 { pt3dadd( 22.051, 133.697, -51.8495, 1.33 ) }
    dend_7 { pt3dadd( 23.9726, 136.917, -53.7374, 0.33 ) }
    dend_7 { pt3dadd( 24.4944, 137.76, -54.2676, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_7 { pt3dadd( 24.8246, 138.307, -54.591, 0.67 ) }
    dend_7 { pt3dadd( 26.6337, 141.492, -56.4296, 0.33 ) }
    dend_7 { pt3dadd( 27.0529, 142.316, -56.9183, 1.33 ) }
    dend_7 { pt3dadd( 29.8151, 148.053, -60.3291, 0.33 ) }
    dend_7 { pt3dadd( 30.3659, 149.35, -61.1036, 1.33 ) }
    dend_7 { pt3dadd( 31.2857, 151.867, -62.5851, 0.33 ) }
    dend_7 { pt3dadd( 31.3763, 152.176, -62.7458, 0.67 ) }
    dend_7 { pt3dadd( 32.1673, 155.286, -63.9522, 0.33 ) }
    dend_7 { pt3dadd( 32.3285, 155.961, -64.1491, 0.67 ) }
    dend_7 { pt3dadd( 33.2998, 159.955, -64.7104, 0.33 ) }
    dend_7 { pt3dadd( 33.4991, 160.74, -64.7792, 0.67 ) }
    dend_7 { pt3dadd( 34.2757, 163.836, -64.9593, 0.33 ) }
    dend_7 { pt3dadd( 35.4706, 168.334, -64.9822, 0.33 ) }
    dend_7 { pt3dadd( 35.9436, 169.982, -64.832, 0.67 ) }
    dend_7 { pt3dadd( 37.0363, 173.377, -64.3295, 0.33 ) }
    dend_7 { pt3dadd( 37.215, 173.852, -64.2033, 0.67 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 16/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 3.23027, 45.855, -34.5618, 0.67 ) }
    dend_4 { pt3dadd( 0.240761, 47.937, -36.18, 0.67 ) }
    dend_4 { pt3dadd( -2.12182, 49.2916, -37.2176, 0.67 ) }
    dend_4 { pt3dadd( -4.40326, 50.3006, -38.369, 0.67 ) }
    dend_4 { pt3dadd( -7.40706, 51.6402, -40.1575, 1.33 ) }
    dend_4 { pt3dadd( -8.78028, 52.3157, -40.9058, 0.33 ) }
    dend_4 { pt3dadd( -10.8758, 53.4173, -41.975, 0.33 ) }
    dend_4 { pt3dadd( -13.2641, 54.619, -43.0053, 1.33 ) }
    dend_4 { pt3dadd( -17.4447, 56.7618, -44.9216, 0.33 ) }
    dend_4 { pt3dadd( -19.5128, 57.977, -45.9087, 1.33 ) }
    dend_4 { pt3dadd( -23.3306, 60.5497, -47.9212, 0.67 ) }
    dend_4 { pt3dadd( -24.5543, 61.4634, -48.6763, 1.33 ) }
    dend_4 { pt3dadd( -26.5763, 63.1086, -50.0275, 0.33 ) }
    dend_4 { pt3dadd( -28.1513, 64.6171, -51.1098, 0.67 ) }
    dend_4 { pt3dadd( -29.3834, 65.883, -51.907, 0.33 ) }
    dend_4 { pt3dadd( -29.6011, 66.0913, -52.0674, 0.67 ) }
    dend_4 { pt3dadd( -31.6488, 68.1703, -54.0449, 0.33 ) }
    dend_4 { pt3dadd( -32.317, 68.9135, -54.7773, 0.67 ) }
    dend_4 { pt3dadd( -33.84, 70.7332, -56.53, 0.33 ) }
    dend_4 { pt3dadd( -34.5711, 71.6662, -57.4924, 1.33 ) }
    dend_4 { pt3dadd( -36.7437, 74.7412, -60.7989, 0.33 ) }
    dend_4 { pt3dadd( -37.903, 76.5744, -62.8663, 1.33 ) }
    dend_4 { pt3dadd( -39.3411, 78.994, -65.7251, 0.33 ) }
    dend_4 { pt3dadd( -39.6399, 79.6292, -66.5609, 0.67 ) }
    dend_4 { pt3dadd( -41.0627, 83.3277, -71.939, 0.33 ) }
    dend_4 { pt3dadd( -41.2569, 83.9367, -72.9945, 0.67 ) }
    dend_4 { pt3dadd( -41.676, 85.5825, -76.473, 0.33 ) }
    dend_4 { pt3dadd( -41.7416, 85.7906, -77.123, 0.67 ) }
    dend_4 { pt3dadd( -42.2316, 86.9224, -82.8171, 0.33 ) }
    dend_4 { pt3dadd( -42.377, 87.0587, -84.1968, 1.33 ) }
    dend_4 { pt3dadd( -42.9705, 86.8988, -88.6164, 0.33 ) }
    dend_4 { pt3dadd( -43.0236, 86.8692, -88.9569, 0.67 ) }
    dend_4 { pt3dadd( -43.816, 86.1408, -93.5085, 0.33 ) }
    dend_4 { pt3dadd( -44.0166, 85.9337, -94.5606, 1.33 ) }
    dend_4 { pt3dadd( -44.4483, 85.4571, -96.1619, 0.33 ) }
    dend_4 { pt3dadd( -45.4954, 84.3355, -100.423, 1.33 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 52/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -79.7563, 61.3717, 131.497, 0.67 ) }
    dend_15 { pt3dadd( -83.6019, 60.6792, 142.396, 0.67 ) }
    dend_15 { pt3dadd( -88.5214, 58.7206, 152.695, 0.67 ) }
    dend_15 { pt3dadd( -95.288, 54.6945, 161.22, 0.67 ) }
    dend_15 { pt3dadd( -101.715, 50.3713, 169.867, 0.67 ) }
    dend_15 { pt3dadd( -107.528, 46.8389, 179.257, 0.67 ) }
    dend_15 { pt3dadd( -113.683, 44.6322, 188.819, 0.67 ) }
    dend_15 { pt3dadd( -119.854, 40.3724, 197.679, 0.67 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 60/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -79.7563, 61.3717, 131.497, 0.33 ) }
    dend_14 { pt3dadd( -87.4348, 60.7999, 140.825, 0.67 ) }
    dend_14 { pt3dadd( -95.9253, 62.2586, 149.328, 0.67 ) }
    dend_14 { pt3dadd( -104.731, 66.264, 156.66, 0.67 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 64/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -45.4954, 84.3355, -100.423, 0.33 ) }
    dend_6 { pt3dadd( -46.0206, 88.1658, -103.675, 0.33 ) }
    dend_6 { pt3dadd( -46.216, 89.5908, -104.884, 0.67 ) }
    dend_6 { pt3dadd( -46.4299, 91.1501, -106.208, 0.33 ) }
    dend_6 { pt3dadd( -46.7002, 93.1212, -107.881, 0.67 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 69/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -45.4954, 84.3355, -100.423, 0.33 ) }
    dend_5 { pt3dadd( -44.3112, 80.5627, -102.424, 0.33 ) }
    dend_5 { pt3dadd( -43.5906, 78.267, -103.642, 0.33 ) }
    dend_5 { pt3dadd( -43.319, 77.4017, -104.101, 0.67 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_42, dend_39, dend_32, dend_27, dend_20, dend_9, dend_0, dend_41, dend_40, dend_36, dend_33, dend_31, dend_28, dend_24, dend_21, dend_17, dend_10, dend_2, dend_1, dend_38, dend_37, dend_35, dend_34, dend_30, dend_29, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_3, dend_16, dend_13, dend_7, dend_4, dend_15, dend_14, dend_6, dend_5]}
    ModelViewParmSubset_2 = new SectionList()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_42, dend_39, dend_32, dend_27, dend_20, dend_9, dend_0, dend_41, dend_40, dend_36, dend_33, dend_31, dend_28, dend_24, dend_21, dend_17, dend_10, dend_2, dend_1, dend_38, dend_37, dend_35, dend_34, dend_30, dend_29, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_11, dend_8, dend_3, dend_16, dend_13, dend_7, dend_4, dend_15, dend_14, dend_6, dend_5]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_42 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_41 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_40 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_31 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_28 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_24 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_21 OneSecGrp_SectionRef_17.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_17 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_10 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_1 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_38 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_37 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_35 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_34 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_30 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_26 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_25 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_23 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_22 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_19 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_11 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_8 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_7 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_4 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_15 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_9 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_20 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_36 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_39 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_2 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_27 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_3 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_18 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_12 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_16 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_5 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_6 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_29 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_14 OneSecGrp_SectionRef_44.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_9, dend_9, dend_0, axon_0, axon_0, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_42 nseg = 9
    dend_41 nseg = 7
    dend_40 nseg = 11
    dend_31 nseg = 9
    dend_28 nseg = 9
    dend_24 nseg = 11
    dend_21 nseg = 9
    dend_17 nseg = 3
    dend_10 nseg = 3
    dend_1 nseg = 13
    dend_38 nseg = 11
    dend_37 nseg = 5
    dend_35 nseg = 7
    dend_34 nseg = 3
    dend_30 nseg = 3
    dend_26 nseg = 3
    dend_25 nseg = 5
    dend_23 nseg = 5
    dend_22 nseg = 5
    dend_19 nseg = 3
    dend_11 nseg = 3
    dend_8 nseg = 13
    dend_13 nseg = 7
    dend_7 nseg = 7
    dend_4 nseg = 5
    dend_15 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L4_LBC_cf3f064b85_0_0


