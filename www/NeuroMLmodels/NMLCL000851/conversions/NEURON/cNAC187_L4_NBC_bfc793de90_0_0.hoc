// Cell: cNAC187_L4_NBC_bfc793de90_0_0
/*
{
  "id" : "cNAC187_L4_NBC_bfc793de90_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.06688, 8.74128, -1.1272, 2.20257", "-0.937306, 7.82691, -0.999547, 3.85541", "-0.807729, 6.91254, -0.871898, 5.84624", "-0.678152, 5.99818, -0.744249, 7.26434", "-0.548576, 5.08381, -0.6166, 10.3712", "-0.418999, 4.16944, -0.488951, 11.2076", "-0.289422, 3.25508, -0.361302, 11.8779", "-0.159846, 2.34071, -0.233653, 11.9642", "-0.0302691, 1.42634, -0.106004, 11.5058", "0.0993075, 0.511976, 0.0216455, 11.0473", "0.228884, -0.402391, 0.149295, 10.6248", "0.358461, -1.31676, 0.276944, 10.1128", "0.488037, -2.23113, 0.404593, 9.57755", "0.617614, -3.14549, 0.532242, 9.04063", "0.747191, -4.05986, 0.659891, 8.48926", "0.876767, -4.97423, 0.78754, 7.85518", "1.00634, -5.88859, 0.915189, 7.19302", "1.13592, -6.80296, 1.04284, 6.47635", "1.2655, -7.71733, 1.17049, 5.43009", "1.39507, -8.63169, 1.29814, 3.7337", "1.52465, -9.54606, 1.42578, 2.56951" ]
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-4.70824, 3.35321, -7.70142, 0.83", "-7.28724, 3.96998, -10.3517, 0.83", "-9.50755, 3.96336, -12.3408, 1.11", "-13.5033, 3.94862, -15.7321, 1.11", "-17.2217, 3.4835, -20.2678, 1.11", "-18.3765, 3.2521, -21.7563, 0.83", "-22.0946, 2.30568, -26.539, 0.83", "-23.4056, 1.79207, -28.3932, 0.55", "-25.833, 0.395968, -31.9261, 0.55", "-31.4937, -3.61957, -40.2206, 0.83", "-34.052, -5.51428, -44.0793, 0.55", "-34.8416, -6.04186, -45.5014, 0.83", "-35.7453, -6.5814, -47.5097, 0.55", "-36.4278, -6.99, -49.1343, 1.11", "-38.2446, -8.01279, -53.575, 1.11", "-40.5878, -8.91445, -58.9053, 0.83", "-43.0249, -9.66454, -65.1084, 0.83", "-45.2334, -10.0462, -70.666, 0.28", "-45.6105, -10.0536, -71.5688, 0.55", "-46.5725, -9.94309, -73.7653, 0.28", "-47.5887, -9.66169, -75.8887, 0.55", "-48.5558, -9.22747, -77.5989, 0.28", "-49.5776, -8.79728, -78.9442, 0.83", "-52.0163, -7.63844, -82.4297, 0.28", "-52.1802, -7.5528, -82.6915, 0.55", "-53.2907, -6.91964, -84.7667, 0.28", "-54.3469, -6.29002, -87.0006, 0.83", "-54.6125, -6.15941, -87.6098, 0.83", "-57.6465, -4.9989, -94.9133, 0.28", "-58.0763, -4.86829, -95.9176, 0.55", "-59.9173, -4.44785, -100.02, 0.28", "-60.7062, -4.32961, -101.787, 0.83", "-62.2794, -4.09492, -105.161, 0.28", "-63.0865, -3.97234, -106.733, 0.55", "-63.9363, -3.86375, -108.167, 0.28", "-64.3866, -3.79089, -108.948, 0.55", "-68.6917, -2.79913, -116.164, 0.28", "-69.2063, -2.60844, -117.108, 0.55", "-69.6898, -2.36939, -118.066, 0.28", "-70.0875, -2.10467, -119.045, 0.83", "-71.483, -0.919151, -123.322, 0.28", "-71.6393, -0.724038, -123.947, 0.83", "-72.2212, 0.372727, -126.949, 0.28", "-72.3224, 0.523672, -127.452, 0.83", "-73.0018, 1.49223, -130.829, 0.28", "-73.1132, 1.64815, -131.378, 0.83", "-73.8805, 2.70329, -135.055, 0.28", "-74.0207, 2.88835, -135.724, 0.83", "-76.1421, 5.3854, -145.104, 0.28", "-77.3357, 6.61323, -149.944, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-3.88824, 6.39321, -6.65142, 1.11", "-4.86455, 7.02264, -8.58577, 1.11", "-5.57784, 7.2164, -9.79721, 1.11", "-7.05681, 7.31347, -12.3209, 0.83", "-8.22484, 7.24316, -14.2779, 1.38", "-12.1751, 6.63767, -20.9506, 0.83", "-14.0393, 6.3156, -24.2343, 0.83", "-18.1088, 5.31863, -32.223, 0.83", "-22.7611, 3.90683, -41.5353, 0.83", "-24.2645, 3.33066, -44.5179, 0.83", "-25.2564, 2.89434, -46.3937, 0.83", "-26.6046, 2.22789, -48.8721, 0.83", "-27.704, 1.56904, -51.4033, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-2.44824, 7.31321, -3.11142, 0.83", "-3.71496, 9.02208, -3.21861, 0.55", "-4.46905, 10.0838, -3.27265, 0.55", "-5.09096, 11.0214, -3.37571, 1.11", "-5.95698, 12.3768, -3.54967, 0.83", "-7.61422, 15.3481, -3.96604, 0.83", "-8.73899, 17.6016, -4.28246, 0.83", "-9.90639, 20.1725, -4.63657, 0.83", "-10.684, 22.1493, -4.81067, 0.83", "-11.2683, 24.0524, -4.89756, 1.38", "-11.8347, 26.7128, -4.84836, 0.55", "-12.0036, 28.6489, -4.65357, 0.55", "-12.0659, 29.999, -4.409, 0.55", "-12.1938, 32.5057, -3.82994, 0.55", "-12.2617, 33.5457, -3.5501, 0.55", "-12.4593, 35.5193, -3.02046, 0.55", "-13.0339, 39.2429, -2.14722, 0.55", "-13.3102, 40.8602, -1.85351, 0.28", "-13.6322, 42.6236, -1.65166, 0.28", "-13.8734, 44.1018, -1.56884, 0.55", "-14.0498, 45.6012, -1.56497, 0.28", "-14.3324, 49.7115, -1.78565, 0.83", "-14.3413, 51.3833, -1.98551, 0.55", "-14.2248, 53.3147, -2.29178, 0.28", "-14.0883, 54.708, -2.53869, 0.55", "-13.4814, 59.1025, -3.41493, 0.28", "-13.3339, 59.8508, -3.5867, 0.83", "-12.6099, 62.5982, -4.37566, 0.28", "-12.3732, 63.3959, -4.63085, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-3.69824, 6.32321, 3.79858, 1.11", "-4.51147, 10.5809, 4.33616, 1.11", "-5.83321, 16.4668, 5.11146, 1.11", "-6.61462, 20.3016, 5.58236, 1.11", "-7.73858, 25.2961, 6.19502, 1.11", "-8.97775, 30.4625, 6.78572, 1.11", "-9.91499, 34.7231, 7.21157, 1.11", "-10.6099, 38.0309, 7.34011, 1.11", "-11.3857, 42.141, 7.24002, 1.11", "-11.9113, 45.7472, 7.0799, 1.11", "-12.3268, 50.1783, 6.83783, 1.11", "-12.6327, 55.5042, 6.4404, 1.11", "-12.712, 62.7319, 5.74541, 1.11", "-12.7022, 65.6, 5.45446, 1.11", "-12.6496, 69.2078, 5.10594, 0.83", "-12.4587, 72.4768, 4.81638, 0.83", "-12.19, 76.1806, 4.56019, 1.11", "-11.9092, 80.4221, 4.42063, 1.11", "-11.8031, 81.7703, 4.44417, 0.28", "-11.6355, 84.2587, 4.50743, 0.55", "-11.5707, 86.0078, 4.55127, 0.55", "-11.5256, 88.7873, 4.56024, 0.55", "-11.5161, 91.1969, 4.51076, 0.28", "-11.5004, 92.0529, 4.43778, 0.83", "-11.4782, 93.9511, 4.21743, 0.28", "-11.5681, 99.0609, 3.69946, 0.55", "-11.6506, 102.241, 3.33704, 0.28", "-11.6661, 104.474, 3.07216, 1.11", "-11.5828, 109.077, 2.50967, 0.28", "-11.4303, 112.183, 2.18236, 1.11", "-11.1173, 115.866, 1.85302, 0.28", "-10.7652, 118.278, 1.72198, 0.55", "-10.257, 120.827, 1.78601, 0.28", "-9.91557, 122.132, 1.9059, 0.28", "-9.46279, 123.512, 2.136, 0.55", "-8.74683, 125.331, 2.43548, 0.28", "-8.1563, 126.721, 2.64843, 0.83", "-7.26853, 128.909, 3.09988, 0.28", "-7.03792, 129.51, 3.22086, 0.83", "-6.10392, 132.044, 3.68761, 0.55", "-5.36566, 134.082, 4.02382, 0.28", "-5.09421, 134.87, 4.15717, 0.55", "-4.253, 137.174, 4.53366, 0.28", "-4.05595, 137.731, 4.61715, 0.55", "-3.40259, 139.51, 4.89247, 0.28", "-3.16903, 140.121, 4.9842, 0.55", "-2.50495, 142.1, 5.25072, 0.28", "-1.71553, 144.975, 5.56968, 0.83", "-1.33309, 146.752, 5.72981, 0.28", "-1.15619, 147.943, 5.73927, 0.83", "-0.924087, 150.084, 5.62738, 0.28", "-0.745057, 151.829, 5.45576, 0.55", "-0.625021, 153.119, 5.28744, 0.28", "-0.450224, 155.482, 4.91655, 0.83", "-0.078395, 160.102, 4.16736, 0.28", "0.011123, 161.186, 3.99621, 0.55", "0.434733, 166.118, 3.22636, 0.55", "0.501605, 166.707, 3.1354, 0.55", "0.786497, 168.861, 2.82604, 0.28", "0.930048, 169.955, 2.68287, 0.55", "1.08602, 171.295, 2.6187, 0.28", "1.15388, 172.665, 2.55531, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "4.18176, 4.76321, -6.33142, 0.83", "4.49967, 6.70774, -9.14903, 0.83", "4.43023, 7.94839, -11.2911, 0.83", "4.35443, 8.96259, -12.9869, 1.94", "4.27906, 10.7206, -16.0619, 0.83", "4.23048, 11.8195, -17.931, 1.11", "4.13274, 14.3679, -21.917, 1.38", "3.916, 15.6702, -23.918, 0.28", "3.63168, 16.8818, -25.6366, 0.83", "2.93321, 19.4104, -28.6508, 0.28", "2.64967, 20.4095, -29.5563, 0.83", "2.15975, 22.1718, -30.7517, 0.83", "1.52101, 24.3035, -31.8911, 1.11", "0.313955, 27.7977, -33.6671, 0.28", "-0.397481, 29.4837, -34.4936, 0.83", "-1.54849, 31.9232, -35.5905, 0.55", "-2.40026, 33.5921, -36.3902, 0.83", "-3.52752, 35.6609, -37.4092, 0.28", "-5.00513, 38.2945, -38.7329, 0.83", "-6.38656, 40.7717, -39.8361, 0.55", "-7.40546, 42.5651, -40.6288, 0.83", "-9.28967, 45.6328, -41.9328, 0.28", "-9.75564, 46.376, -42.2264, 0.55", "-10.5358, 47.61, -42.6669, 0.28", "-12.1612, 50.1175, -43.4998, 0.83", "-13.3622, 52.0704, -44.1229, 0.28", "-14.3873, 53.786, -44.6614, 0.83", "-14.7913, 54.4873, -44.8571, 0.28", "-15.743, 56.1481, -45.3322, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.99176, 3.38321, -9.40142, 1.11", "7.94722, 3.25952, -9.40142, 1.11", "10.1715, 3.16643, -9.40142, 1.11", "13.2967, 3.03564, -9.40142, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-5.36824, 1.16321, 0.248578, 0.55", "-7.4337, 1.4414, -1.20652, 0.55", "-9.21442, 1.68124, -2.46103, 0.83", "-12.7046, 2.15132, -4.91986, 0.83", "-18.959, 2.9937, -9.32603, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "2.65176, -7.97679, -3.47142, 0.83", "3.09201, -10.0702, -4.3516, 0.83", "3.40035, -12.0703, -5.36294, 0.83", "3.68256, -14.6783, -7.05726, 1.11", "4.02231, -18.1087, -9.5124, 0.83", "4.40158, -21.7219, -12.2744, 0.83", "4.75848, -25.1083, -14.9782, 0.55", "4.89957, -26.5672, -16.2884, 0.83", "5.16685, -29.4969, -19.2755, 0.55", "5.22998, -30.2624, -20.1797, 0.55", "5.21125, -32.0714, -22.5986, 0.83", "5.06371, -33.4925, -24.7321, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.14824, -9.92679, 4.18858, 2.22", "-0.911972, -12.3897, 4.32794, 2.22", "-1.82487, -15.3336, 4.49453, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.52465, -9.54606, 1.42578, 1.11", "3.6293, -24.3977, 1.42578, 1.11", "5.73394, -39.2493, 1.42578, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-15.743, 56.1481, -45.3322, 0.28", "-18.6082, 57.2273, -44.9451, 0.28", "-19.6425, 57.6042, -44.815, 0.28", "-20.9536, 58.0907, -44.6675, 0.55", "-22.3053, 58.5785, -44.5178, 0.28", "-23.3756, 58.9565, -44.4037, 0.55", "-25.4473, 59.6791, -44.1912, 0.28", "-27.1917, 60.2911, -43.9654, 0.28", "-28.9146, 60.959, -43.7339, 0.55", "-31.2913, 61.9336, -43.457, 0.28", "-32.3207, 62.4047, -43.3987, 0.28", "-33.0963, 62.8018, -43.3804, 0.55", "-36.6505, 64.9446, -43.4856, 0.28", "-39.4748, 66.789, -43.6508, 0.28", "-40.4779, 67.5044, -43.7502, 0.55", "-43.9151, 70.2041, -44.1585, 0.28", "-44.673, 70.8324, -44.2523, 0.55", "-49.014, 74.537, -44.8609, 0.28", "-49.5515, 75.0138, -44.9508, 1.38", "-53.8217, 78.8627, -45.618, 0.28", "-57.4332, 82.141, -46.0649, 0.28", "-59.5991, 84.1174, -46.2453, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-15.743, 56.1481, -45.3322, 0.83", "-16.0307, 56.8888, -46.0237, 0.83", "-16.3588, 57.7336, -46.8125, 0.28", "-16.9495, 59.2544, -48.2323, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "13.2967, 3.03564, -9.40142, 1.11", "15.5415, 2.94545, -10.4663, 1.11", "17.4535, 2.7372, -11.4127, 1.11", "19.5299, 2.52832, -12.5848, 1.11", "21.9493, 2.31844, -14.0562, 1.11", "25.321, 2.01439, -16.1169, 1.11", "28.5809, 1.72041, -18.1093, 1.11", "31.7429, 1.55408, -20.1565, 0.83", "34.2356, 1.44285, -21.8729, 0.83", "36.0142, 1.33033, -23.1436, 0.83", "39.3901, 1.09201, -25.6307, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "13.2967, 3.03564, -9.40142, 0.55", "15.9871, 3.78221, -8.99111, 0.55", "18.0431, 4.35273, -8.67756, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-18.959, 2.9937, -9.32603, 0.83", "-21.8321, 2.84842, -10.2018, 0.83", "-23.4318, 2.97052, -10.788, 0.83", "-24.9305, 2.99564, -11.3295, 1.94", "-27.5121, 2.60728, -13.1561, 0.55", "-29.4221, 2.25892, -14.6365, 0.55", "-31.9572, 1.86152, -16.6331, 0.83", "-33.8246, 1.56001, -18.1218, 0.83", "-35.7781, 1.32178, -19.7898, 0.83", "-43.1148, 0.685342, -26.2202, 1.38", "-45.9106, 0.524462, -28.6724, 0.55", "-48.2747, 0.377939, -30.8127, 0.55", "-50.0606, 0.253784, -32.418, 1.11", "-52.9551, 0.214334, -34.8729, 0.28", "-53.4862, 0.276881, -35.2547, 0.28", "-54.3078, 0.502092, -35.6396, 0.83", "-57.4206, 1.61156, -36.9788, 0.28", "-58.1874, 1.93434, -37.2751, 0.55", "-60.4965, 3.0579, -38.1872, 0.28", "-63.1944, 4.30623, -39.3499, 1.11", "-65.0642, 5.16688, -40.299, 0.28", "-66.4063, 5.77703, -41.0687, 0.83", "-69.8168, 7.40089, -43.2472, 0.28", "-71.2414, 8.11954, -44.3407, 0.83", "-74.1003, 9.60218, -46.8671, 0.55", "-75.4572, 10.3477, -48.1961, 0.55", "-76.5448, 10.9686, -49.2861, 0.83", "-77.5575, 11.599, -50.3599, 0.83", "-80.3286, 13.6616, -53.4759, 0.28", "-80.5737, 13.8656, -53.7508, 0.83", "-81.7987, 15.108, -55.1753, 0.28", "-82.3565, 15.6722, -55.8404, 0.55", "-83.2874, 16.5835, -56.9294, 0.28", "-84.075, 17.2255, -57.7819, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-18.959, 2.9937, -9.32603, 0.28", "-20.0165, 1.42601, -9.64532, 0.28", "-20.3571, 0.907332, -9.7289, 0.83", "-21.3037, -0.694323, -10.1341, 0.28", "-22.0988, -2.00216, -10.5014, 0.28", "-22.4125, -2.48979, -10.6539, 0.55", "-23.6959, -4.41309, -11.2941, 0.28", "-24.5128, -5.62642, -11.7047, 1.11", "-27.4446, -9.62097, -13.0857, 0.28", "-28.1121, -10.4709, -13.3884, 0.55", "-28.8476, -11.3711, -13.7005, 0.28", "-29.8225, -12.4795, -14.0886, 0.28", "-30.474, -13.1398, -14.3253, 0.55", "-31.9228, -14.5645, -14.6303, 0.28", "-32.3305, -14.9874, -14.5317, 0.55", "-33.5498, -16.3986, -13.9183, 0.28", "-34.0102, -17.0268, -13.5631, 0.55", "-34.6945, -18.0214, -12.9366, 0.28", "-35.8151, -19.6669, -11.9347, 0.83", "-38.3106, -23.5039, -9.73071, 0.28", "-38.7144, -24.1272, -9.40785, 0.83", "-40.1519, -26.5275, -8.38098, 0.28", "-40.686, -27.4603, -8.05777, 0.55", "-42.4038, -30.6098, -7.25198, 0.28", "-43.0378, -31.8271, -7.1232, 0.28", "-43.5503, -32.8463, -7.15384, 0.55", "-44.3671, -34.571, -7.24028, 0.28", "-44.6153, -35.1148, -7.29175, 1.11", "-45.912, -38.5888, -7.57558, 0.28", "-46.2935, -40.0573, -7.67449, 0.83", "-50.3874, -48.718, -6.01771, 0.83", "-54.4927, -57.4424, -4.77472, 0.83", "-57.2365, -66.7686, -4.69683, 0.83", "-60.0739, -76.0658, -4.54065, 0.83", "-64.3362, -84.6252, -6.29633, 0.83", "-67.7665, -93.7203, -6.45639, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "5.06371, -33.4925, -24.7321, 0.83", "6.15937, -34.1687, -25.1071, 0.83", "7.36518, -34.9107, -25.4848, 0.28", "7.94775, -35.2712, -25.6588, 1.11", "9.24509, -36.1215, -26.0447, 0.55", "10.1067, -36.6723, -26.284, 0.55", "12.0597, -37.8722, -26.8017, 1.38", "12.9683, -38.3664, -27.0947, 0.28", "13.1758, -38.4755, -27.1726, 0.55", "13.7488, -38.7671, -27.4641, 0.55", "14.8453, -39.2976, -28.1102, 0.55", "15.5266, -39.624, -28.6278, 1.38", "17.3821, -40.5095, -30.2462, 0.55", "17.9299, -40.7838, -30.7298, 1.11", "19.6509, -41.6556, -32.2471, 0.28", "20.3533, -42.0148, -32.8662, 1.11", "21.5677, -42.6897, -33.9429, 0.55", "22.8741, -43.4301, -35.0142, 0.28", "23.4323, -43.7369, -35.3896, 1.11", "24.4953, -44.2541, -36.009, 0.28", "24.6421, -44.3138, -36.0713, 0.55", "25.3635, -44.5674, -36.3253, 0.28", "25.8441, -44.7038, -36.4364, 0.55", "26.6828, -44.8961, -36.5865, 0.28", "27.3411, -45.0557, -36.6968, 0.55", "28.1594, -45.2536, -36.8008, 0.28", "28.7155, -45.3941, -36.8957, 0.28", "28.9843, -45.4609, -36.9484, 0.55", "30.1592, -45.8061, -37.2387, 0.28", "30.5757, -45.943, -37.3587, 0.55", "31.5089, -46.345, -37.7612, 0.55", "32.2516, -46.7089, -38.1695, 0.28", "32.4515, -46.8096, -38.3277, 0.55", "33.2088, -47.1873, -38.969, 0.28", "33.3396, -47.2495, -39.0818, 0.55", "34.8634, -47.9319, -40.3818, 0.28", "35.1717, -48.0683, -40.636, 0.83", "36.8713, -48.7053, -41.8683, 0.28", "38.0606, -49.0931, -42.6506, 0.28", "38.6777, -49.2596, -42.9892, 0.55", "40.4401, -49.6635, -43.7877, 0.28", "41.1257, -49.7762, -43.9909, 0.83", "42.3148, -49.9549, -44.2188, 0.28", "42.6524, -50.0104, -44.2454, 0.28", "44.1186, -50.236, -44.3, 0.28", "44.354, -50.2737, -44.2978, 0.83", "45.9177, -50.5272, -44.1844, 0.28", "47.1193, -50.7365, -44.0978, 0.55", "48.1908, -50.9522, -44.0145, 0.55", "49.2304, -51.1665, -43.928, 0.28", "49.6005, -51.2429, -43.8939, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "5.06371, -33.4925, -24.7321, 0.28", "4.16581, -36.1181, -25.2953, 0.28", "3.93712, -36.7868, -25.4387, 0.55", "3.42971, -38.2705, -25.7569, 0.28", "3.11311, -39.1963, -25.9555, 0.83", "1.78749, -43.0726, -26.7868, 0.28", "1.56498, -43.7232, -26.9264, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-1.82487, -15.3336, 4.49453, 2.22", "-1.81599, -20.6032, 6.15905, 2.22", "-1.80654, -26.2156, 7.93185, 1.94" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.82487, -15.3336, 4.49453, 0.55", "-4.36809, -15.311, 3.58954, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "5.73394, -39.2493, 1.42578, 0.28", "7.83859, -54.1009, 1.42578, 0.28", "9.94324, -68.9525, 1.42578, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-16.9495, 59.2544, -48.2323, 0.28", "-19.0381, 61.3, -48.0759, 0.28", "-20.0317, 62.4289, -48.2285, 1.11", "-20.9963, 63.591, -48.4024, 0.28", "-21.9154, 64.7684, -48.6362, 0.55", "-22.8842, 66.0947, -48.9041, 0.28", "-24.0055, 67.7401, -49.2256, 1.38", "-26.4822, 71.6823, -50.0532, 0.28", "-27.1079, 72.8077, -50.3245, 0.55", "-28.2678, 75.1311, -50.9191, 0.28", "-28.921, 76.6832, -51.4083, 0.83", "-30.0567, 79.6684, -52.4503, 0.28", "-30.298, 80.3367, -52.677, 0.55", "-31.9818, 85.0691, -54.2717, 0.28", "-32.3218, 86.01, -54.6135, 0.55", "-33.9162, 90.3516, -56.1946, 0.28", "-34.4687, 91.8464, -56.7851, 0.55", "-35.004, 93.3093, -57.3971, 0.28", "-35.1871, 93.7988, -57.6005, 1.11", "-36.7075, 97.1697, -58.9036, 0.28", "-37.1594, 98.1027, -59.2329, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-16.9495, 59.2544, -48.2323, 0.55", "-14.7846, 59.4904, -48.0263, 0.55", "-12.9653, 59.6886, -47.8532, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "39.3901, 1.09201, -25.6307, 0.28", "41.6579, 0.503982, -29.1011, 0.28", "43.5821, 0.0951211, -32.0548, 0.83", "46.4643, -0.38304, -36.2566, 0.28", "47.2065, -0.491366, -37.2572, 0.83", "49.4108, -0.738792, -40.0066, 0.28", "49.99, -0.783207, -40.6874, 0.55", "50.9011, -0.737137, -41.5846, 0.28", "52.0637, -0.518537, -42.5329, 0.28", "53.379, -0.168753, -43.3122, 0.83", "54.4175, 0.129545, -43.9174, 0.83", "56.2451, 0.666092, -44.9129, 0.28", "57.7099, 1.13708, -45.7812, 0.83", "59.8264, 1.89681, -47.0645, 0.28", "59.8264, 1.89681, -47.0645, 0.55", "61.8508, 2.77208, -48.3465, 0.28", "62.4809, 3.0251, -48.7302, 0.55", "64.0779, 3.67384, -49.8956, 0.28", "65.2035, 4.13352, -50.9403, 1.11", "66.7845, 4.73198, -52.9289, 0.28", "67.8009, 5.11591, -54.377, 0.55", "68.6693, 5.4697, -55.7466, 0.28", "71.0752, 6.55098, -59.8934, 0.55", "72.2837, 7.15397, -62.1616, 1.11", "74.6094, 8.47017, -66.8327, 0.28", "75.0482, 8.78737, -67.7936, 0.55", "75.6715, 9.37284, -69.2252, 0.28", "76.048, 9.83808, -70.0866, 0.55", "76.8136, 10.9529, -71.6323, 0.28", "77.1317, 11.5693, -72.3754, 1.38", "78.1671, 14.1553, -75.1497, 0.28", "78.3995, 14.8531, -75.9825, 0.83", "78.9262, 16.6808, -78.3423, 0.28", "79.0352, 17.1246, -78.9579, 0.55", "79.3544, 18.6755, -81.1589, 0.28", "79.4271, 19.0665, -81.7247, 0.55", "79.7304, 20.8189, -84.1483, 0.28", "79.8246, 21.2785, -84.7465, 0.55", "80.1553, 22.8631, -86.6373, 0.28", "80.2867, 23.3768, -87.1621, 0.83", "80.71, 24.7917, -88.3647, 0.28", "80.9918, 25.6137, -88.9385, 0.55", "82.057, 28.1645, -90.2475, 0.28", "82.3893, 28.8379, -90.4894, 0.83", "83.6872, 31.1728, -91.039, 0.28", "83.8845, 31.4748, -91.0887, 0.55", "85.2368, 33.3127, -91.2631, 0.28", "86.0958, 34.4376, -91.317, 0.55", "88.0289, 36.8947, -91.2455, 0.28", "88.187, 37.0886, -91.2392, 0.55", "90.4353, 39.8108, -91.2577, 0.28", "90.5921, 39.9941, -91.2594, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "39.3901, 1.09201, -25.6307, 0.83", "40.5498, 1.38582, -26.3774, 0.83", "41.1133, 1.52586, -26.7433, 0.55", "41.5288, 1.59988, -26.9935, 0.55", "42.5057, 1.74215, -27.5615, 1.11", "44.3743, 1.90495, -28.7151, 0.28", "44.6532, 1.92422, -28.8847, 1.11", "45.88, 1.9533, -29.6577, 0.28", "46.7615, 1.97102, -30.1913, 0.28", "47.4391, 1.99136, -30.5858, 0.83", "48.8251, 2.06171, -31.3878, 0.28", "49.7397, 2.10781, -31.844, 0.28", "50.2266, 2.13984, -32.0965, 1.11", "51.4048, 2.25756, -32.7339, 0.28", "51.7907, 2.33278, -32.953, 0.55", "53.3617, 2.72836, -33.7707, 0.28" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-84.075, 17.2255, -57.7819, 0.28", "-85.8343, 18.9117, -58.491, 0.28", "-86.2824, 19.3106, -58.7677, 0.55", "-87.5701, 20.3767, -59.6077, 0.28", "-88.9368, 21.4775, -60.6201, 0.55", "-90.4573, 22.7213, -61.7454, 0.28", "-90.7829, 22.9881, -61.9858, 0.55", "-92.9839, 24.7545, -63.6972, 0.28", "-93.6066, 25.2593, -64.2102, 0.83", "-95.1974, 26.5812, -65.7253, 0.28", "-96.2063, 27.4774, -66.7933, 0.83", "-98.0199, 29.2716, -68.7982, 0.28", "-98.1753, 29.4448, -68.9689, 0.83", "-99.5882, 31.2399, -70.5332, 0.28", "-101.139, 33.4689, -72.5069, 0.83", "-102.037, 34.9365, -73.7772, 0.28", "-102.357, 35.5709, -74.3736, 0.55", "-102.791, 36.6588, -75.4247, 0.28", "-103.029, 37.388, -76.0749, 0.55", "-103.507, 39.3665, -77.6005, 0.28", "-103.61, 39.884, -77.8778, 0.83", "-104.129, 42.5483, -79.143, 0.28", "-104.244, 43.2034, -79.4193, 0.55", "-104.622, 45.3822, -80.2381, 0.28", "-104.752, 46.2113, -80.4779, 0.83", "-105.67, 52.3105, -81.9551, 0.28", "-105.875, 53.8607, -82.2657, 0.55", "-106.754, 61.3929, -83.5212, 0.28", "-106.861, 62.2982, -83.6658, 0.83", "-108.063, 72.2695, -85.2713, 0.28", "-108.237, 73.7398, -85.4951, 0.83", "-108.66, 77.6429, -86.017, 0.28", "-109.448, 84.7538, -86.8852, 0.28", "-109.733, 87.233, -87.1528, 0.28", "-109.846, 88.1532, -87.2692, 0.83", "-110.122, 89.9331, -87.5229, 0.28", "-110.475, 91.9558, -87.8735, 0.55", "-110.812, 93.6022, -88.2692, 0.28", "-111.003, 94.4735, -88.4995, 0.55", "-111.355, 96.0254, -88.9243, 0.28", "-111.586, 96.8496, -89.1077, 0.55", "-113.078, 101.316, -89.9313, 0.28", "-114.608, 105.075, -90.499, 0.28", "-115.292, 106.578, -90.6823, 0.28", "-115.771, 107.524, -90.7907, 1.11", "-117.773, 111.116, -91.1711, 0.28", "-118.321, 112.016, -91.2433, 0.55", "-120.935, 115.807, -91.4415, 0.28", "-121.114, 116.056, -91.4544, 0.55", "-122.98, 118.84, -91.7013, 0.28", "-123.204, 119.193, -91.7471, 0.83", "-125.678, 123.124, -92.4209, 0.28", "-126.324, 124.178, -92.5898, 0.55", "-128.05, 127.02, -93.011, 0.28", "-129.551, 129.529, -93.4011, 0.28", "-131.581, 132.868, -93.9312, 0.28", "-132.085, 133.664, -94.0621, 0.83", "-133.764, 136.159, -94.4943, 0.28", "-134.152, 136.707, -94.5582, 0.55", "-137.008, 140.506, -94.7638, 0.28", "-137.771, 141.447, -94.7635, 0.55", "-138.863, 142.778, -94.6989, 0.28", "-139.282, 143.298, -94.6435, 0.55", "-141.45, 145.909, -94.1825, 0.28", "-142.075, 146.762, -94.0168, 0.55", "-142.804, 147.836, -93.7836, 0.28", "-143.265, 148.621, -93.6438, 0.55", "-144.697, 151.33, -93.2739, 0.28", "-144.81, 151.582, -93.2613, 0.55", "-146.619, 156.165, -93.3914, 0.28", "-146.962, 157.175, -93.4259, 0.55", "-147.424, 158.698, -93.4638, 0.28", "-147.705, 159.734, -93.4767, 0.55", "-148.932, 165.454, -93.622, 0.28", "-149.113, 166.441, -93.6311, 0.55", "-149.575, 169.389, -93.6359, 0.28", "-149.763, 170.722, -93.6292, 0.83", "-150.222, 174.184, -93.5807, 0.28", "-150.82, 179.438, -93.3751, 0.28", "-150.887, 180.191, -93.3031, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-84.075, 17.2255, -57.7819, 0.28", "-85.3162, 17.5035, -57.6248, 0.28", "-85.8519, 17.6235, -57.5569, 0.55", "-87.3651, 17.9624, -57.3654, 0.28", "-87.8377, 18.0682, -57.3056, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-1.80654, -26.2156, 7.93185, 1.66", "-4.45322, -31.4107, 8.16905, 1.66", "-7.46229, -37.3172, 8.43873, 1.66", "-10.4069, -43.0971, 8.70264, 1.66", "-13.2692, -48.7154, 8.95916, 1.66" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-1.80654, -26.2156, 7.93185, 0.83", "2.58936, -28.2185, 12.0699, 0.83", "4.34635, -29.3225, 13.9859, 0.55", "6.03178, -30.6102, 16.2244, 1.11", "7.32144, -31.8601, 18.2178, 0.55", "8.47912, -32.9821, 20.0073, 0.55", "10.8121, -35.2431, 23.6134, 0.28", "11.6698, -36.5222, 25.3213, 0.83", "13.1462, -38.6626, 28.4283, 0.83", "14.0399, -40.3103, 30.8021, 0.55", "21.1752, -44.8818, 38.2734, 0.55", "26.6518, -50.5105, 46.3948, 0.55", "31.962, -58.0845, 52.881, 0.55", "35.8443, -65.4038, 60.5613, 0.55", "38.9663, -72.5182, 68.7632, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-4.36809, -15.311, 3.58954, 0.83", "-4.68735, -15.3439, 3.50825, 0.83", "-8.04275, -15.5815, 2.74811, 0.83", "-11.3833, -15.799, 2.01825, 0.83", "-13.9638, -15.8678, 1.45702, 0.83", "-14.9811, -15.875, 1.23319, 0.83", "-16.462, -15.8503, 0.910906, 1.11", "-19.5463, -15.7804, 0.148316, 0.83", "-21.3807, -15.6451, -0.378647, 0.83", "-23.2243, -15.3749, -1.13972, 0.55", "-24.2254, -15.1934, -1.75431, 0.55", "-25.1953, -14.9941, -2.50397, 0.55", "-27.1829, -14.6578, -4.43458, 0.55", "-28.3244, -14.5863, -5.73313, 0.55", "-29.9968, -14.5454, -7.88381, 0.55", "-32.2441, -14.627, -10.8494, 0.55", "-33.1789, -14.6902, -12.0392, 0.55", "-34.4816, -14.8376, -13.7015, 0.28", "-35.8369, -15.0524, -15.3692, 0.55", "-37.0227, -15.3082, -16.7596, 0.28", "-38.6536, -15.6353, -18.4735, 0.83", "-39.7136, -15.8624, -19.4526, 0.28", "-41.6593, -16.3236, -21.0913, 0.55", "-43.307, -16.6733, -22.3423, 0.55", "-44.8682, -17.0501, -23.433, 0.55", "-46.0711, -17.412, -24.1869, 0.83", "-48.5347, -18.2404, -25.6789, 0.55", "-49.9371, -18.7061, -26.4367, 0.28", "-50.392, -18.8538, -26.66, 0.83", "-52.0257, -19.3977, -27.4723, 0.83", "-53.2596, -19.8557, -28.1504, 0.55", "-54.4793, -20.3368, -28.9116, 0.28", "-56.9358, -21.3215, -30.4672, 0.55", "-58.538, -22.0067, -31.4516, 0.28", "-59.233, -22.3129, -31.847, 0.55", "-60.6424, -22.9201, -32.5624, 0.28", "-61.0749, -23.1025, -32.7408, 0.83", "-62.9205, -23.9609, -33.3854, 0.28", "-63.3338, -24.1987, -33.6121, 0.55", "-65.3778, -25.5127, -34.8349, 0.28", "-66.1541, -26.0678, -35.4098, 0.55", "-67.0212, -26.6994, -36.0878, 0.28", "-67.9497, -27.3667, -36.8569, 0.55", "-71.6016, -29.8509, -40.3575, 0.28", "-73.2099, -30.7976, -41.8723, 0.55", "-75.2567, -31.9022, -43.7655, 0.28", "-76.193, -32.3597, -44.6426, 0.55", "-78.1692, -33.2297, -46.4033, 0.28", "-79.7509, -33.7544, -47.5666, 0.55", "-81.6447, -34.1586, -48.6216, 0.28", "-82.3261, -34.2116, -49.0568, 0.55", "-84.1487, -34.0934, -50.1823, 0.28", "-84.5652, -33.9786, -50.5976, 0.55", "-85.3585, -33.4844, -51.6954, 0.28", "-85.6637, -33.2397, -52.069, 0.83", "-87.1577, -31.6983, -53.7641, 0.28", "-87.7734, -30.99, -54.2717, 0.83", "-91.2132, -26.6494, -55.9362, 0.28", "-91.4644, -26.2956, -56.0035, 0.83", "-94.6795, -21.4377, -55.9766, 0.28", "-95.0805, -20.8515, -55.8334, 1.11", "-95.7162, -20.0684, -55.2123, 0.28", "-96.0815, -19.6575, -54.7405, 0.55", "-96.6096, -19.1318, -53.9544, 0.28", "-96.9344, -18.7762, -53.4958, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-4.36809, -15.311, 3.58954, 0.55", "-5.74722, -15.5207, 3.54246, 0.55", "-7.59637, -15.9289, 3.5528, 0.55", "-10.4751, -16.6021, 3.52508, 0.55", "-12.2961, -17.0019, 3.47175, 0.55", "-13.2116, -17.2029, 3.44493, 0.83", "-15.2107, -17.6417, 3.38638, 0.83", "-17.0993, -18.0374, 3.34812, 0.83", "-18.2978, -18.3932, 3.34522, 0.55", "-19.9925, -18.9595, 3.36051, 0.55", "-27.6422, -21.1211, 4.07759, 0.55", "-35.2715, -23.3857, 3.47006, 0.55", "-43.1477, -24.662, 3.67363, 0.55", "-51.0738, -25.595, 3.57339, 0.55", "-58.9353, -26.619, 4.49701, 0.55", "-66.486, -28.3492, 6.41996, 0.55", "-74.0822, -28.7123, 8.84281, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "53.3617, 2.72836, -33.7707, 0.55", "54.5338, 3.47089, -33.7841, 0.55", "55.4316, 4.07477, -33.8151, 0.55", "56.7355, 4.97741, -33.8474, 0.28", "57.6102, 5.59055, -33.8674, 0.28", "58.006, 5.8671, -33.8723, 0.55", "59.6258, 6.98838, -33.8858, 0.28", "60.4894, 7.61696, -33.8636, 0.83", "61.4472, 8.35618, -33.8113, 0.28", "61.8272, 8.6502, -33.7369, 0.55", "62.5522, 9.16966, -33.5192, 0.28", "63.0694, 9.54298, -33.3381, 0.55", "64.5619, 10.635, -32.6925, 0.28", "65.3714, 11.1993, -32.2948, 0.83", "67.442, 12.6376, -31.1658, 0.28", "68.2416, 13.1896, -30.6853, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "53.3617, 2.72836, -33.7707, 0.55", "54.5858, 1.6816, -32.7644, 0.55", "56.7085, 0.0688902, -31.046, 0.55", "57.5157, -0.30145, -30.0883, 0.83", "58.107, -0.491763, -29.3101, 0.28", "58.4713, -0.595952, -28.8099, 0.55", "59.8291, -0.99103, -26.8805, 0.28", "60.4618, -1.12282, -25.9463, 0.83", "63.6993, -1.57848, -20.8374, 0.28", "64.1882, -1.63568, -20.0885, 0.55", "64.9182, -1.74004, -19.0021, 0.28", "65.3005, -1.82164, -18.4221, 0.55", "66.3928, -2.2156, -16.755, 0.28", "66.5655, -2.3209, -16.5011, 0.55", "67.0706, -2.77629, -15.9052, 0.28", "67.6001, -3.16261, -15.2055, 0.55", "69.0263, -4.04145, -13.269, 0.28", "69.4178, -4.27375, -12.7239, 0.83", "70.8463, -5.11573, -10.6205, 0.28", "72.6614, -6.17479, -7.92559, 0.83", "75.3813, -7.67867, -3.90381, 0.28", "75.6295, -7.80012, -3.55658, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-13.2692, -48.7154, 8.95916, 1.11", "-14.0735, -52.5236, 8.88298, 1.11", "-14.4622, -54.7542, 8.86865, 1.11", "-15.5798, -58.9419, 9.01228, 1.11", "-17.0189, -63.6422, 9.22862, 1.11", "-18.2923, -67.7672, 9.49686, 1.11", "-19.6211, -71.9671, 9.824, 1.11", "-22.4683, -80.0737, 10.7489, 1.11", "-25.5748, -88.364, 11.8125, 1.11", "-27.5734, -93.4723, 12.5236, 1.11", "-29.3775, -98.0039, 13.1918, 1.11", "-30.6921, -101.282, 13.6901, 1.11", "-31.9948, -104.709, 14.2178, 1.11", "-33.8052, -109.855, 14.9416, 1.11", "-35.1201, -114.677, 15.4489, 1.11", "-36.5695, -120.519, 15.93, 1.11", "-37.3285, -124.109, 15.9844, 1.11", "-38.1047, -128.919, 15.832, 1.11", "-38.404, -132.415, 15.5684, 1.11", "-38.5146, -135.933, 15.1687, 1.11", "-38.5047, -140.015, 14.6091, 1.11", "-38.3459, -145.76, 13.6728, 1.11", "-37.8811, -155.677, 11.9722, 1.11", "-37.2881, -162.172, 10.7927, 1.11", "-36.9102, -166.872, 10.0404, 0.83", "-36.6374, -170.078, 9.59716, 0.83", "-36.138, -176.17, 8.97271, 0.83", "-35.5003, -182.985, 8.5755, 0.83", "-35.0404, -188.55, 8.38821, 0.83", "-34.6471, -196.584, 8.37803, 0.83", "-34.3738, -202.718, 8.5169, 0.83", "-34.0987, -208.401, 8.97229, 0.83", "-33.3848, -217.333, 10.7438, 0.83", "-33.0526, -220.825, 11.5734, 0.83", "-32.7875, -223.574, 12.3602, 0.83", "-32.3464, -226.3, 13.2869, 0.83", "-31.0613, -234.557, 16.7858, 0.83", "-29.302, -242.452, 21.1521, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-13.2692, -48.7154, 8.95916, 0.83", "-11.6021, -50.1556, 8.05293, 0.83", "-9.83965, -51.6782, 7.09483, 0.83", "-6.92958, -54.1923, 5.51289, 0.83", "-6.57556, -54.4981, 5.32045, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "38.9663, -72.5182, 68.7632, 0.83", "44.2898, -78.5782, 76.6321, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "38.9663, -72.5182, 68.7632, 0.55", "41.5955, -75.9357, 73.9187, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-74.0822, -28.7123, 8.84281, 0.83", "-84.2748, -29.0806, 3.12874, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-74.0822, -28.7123, 8.84281, 0.55", "-79.148, -29.5188, 20.3623, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-29.302, -242.452, 21.1521, 0.55", "-31.0056, -244.232, 20.9187, 0.55", "-32.9732, -246.546, 20.5924, 0.55", "-34.5097, -248.447, 20.3153, 0.28", "-35.8976, -250.344, 19.9839, 0.55", "-36.9575, -251.91, 19.7028, 0.28", "-37.3211, -252.473, 19.6022, 0.55", "-39.2887, -255.905, 19.0837, 0.28", "-39.5198, -256.342, 19.0292, 0.83", "-41.0241, -259.233, 18.7686, 0.28", "-41.8479, -260.787, 18.6338, 0.28", "-42.2889, -261.613, 18.5905, 0.55", "-43.6189, -264.058, 18.5018, 0.28", "-43.8464, -264.462, 18.5076, 0.55", "-44.5577, -265.644, 18.5836, 0.28", "-45.3318, -266.679, 18.8148, 0.83", "-48.3303, -273.63, 17.519, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-29.302, -242.452, 21.1521, 0.55", "-28.406, -244.12, 22.4282, 0.55", "-27.8393, -245.066, 23.0673, 0.28", "-27.56, -245.484, 23.3191, 0.55", "-26.6536, -246.724, 24.0076, 0.55", "-25.8555, -247.831, 24.5738, 0.55", "-25.0177, -248.993, 25.1682, 0.55", "-24.2287, -250.142, 25.6153, 0.55", "-23.7543, -250.76, 25.8402, 0.28", "-23.3878, -251.192, 25.9798, 0.55", "-22.113, -252.535, 26.2669, 0.28", "-18.2225, -257.136, 29.0028, 0.28" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-6.57556, -54.4981, 5.32045, 0.28", "-7.25389, -51.86, 4.89287, 0.28", "-7.30236, -51.5998, 4.85183, 0.83", "-7.50678, -50.073, 4.62302, 0.28", "-7.55234, -49.2837, 4.54873, 0.83", "-7.5146, -46.0887, 4.34934, 0.28", "-7.49721, -45.3114, 4.27244, 0.55", "-7.47186, -43.7878, 4.10307, 0.28", "-7.43808, -43.0104, 4.00365, 0.55", "-7.30764, -41.4669, 3.77534, 0.28", "-7.12678, -40.1437, 3.61327, 0.55", "-6.40642, -37.1997, 3.42436, 0.28", "-6.25018, -36.3885, 3.32513, 0.55", "-5.1477, -26.8998, 3.849, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-6.57556, -54.4981, 5.32045, 0.83", "-6.89453, -57.3119, 5.47361, 0.83", "-7.36433, -60.9323, 5.82831, 0.83", "-7.63696, -62.8682, 6.05136, 0.83", "-8.10104, -66.6418, 6.43652, 0.83", "-8.53278, -71.6082, 6.74473, 0.83", "-8.61235, -73.5348, 6.77435, 0.83", "-8.59652, -75.9073, 6.74384, 0.83", "-8.5075, -79.1133, 6.53202, 0.83", "-8.33692, -82.1203, 6.17227, 0.83", "-8.11864, -85.3375, 5.61348, 0.83", "-7.93724, -89.4297, 4.69436, 0.83", "-7.83607, -91.4435, 4.18789, 0.83", "-7.40933, -97.9566, 2.38235, 0.83", "-7.2888, -99.7673, 1.87395, 0.83", "-7.00774, -104.802, 0.509316, 0.83", "-6.80193, -108.128, -0.201159, 0.83", "-6.43623, -112.251, -0.936729, 0.83", "-6.23986, -114.266, -1.20247, 0.55", "-6.02157, -117.318, -1.35353, 0.55", "-5.90739, -119.347, -1.30611, 0.83", "-5.63418, -125.141, -0.85145, 0.83", "-5.52016, -128.711, -0.425707, 0.55", "-5.5323, -132.838, 0.222567, 0.55", "-5.68018, -137.551, 1.06859, 0.55", "-5.85785, -140.796, 1.70126, 0.55", "-6.42464, -147.586, 2.97993, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-6.42464, -147.586, 2.97993, 0.55", "-6.34729, -149.625, 2.12428, 0.55", "-6.4256, -152.169, 0.953213, 0.55", "-6.80378, -157.754, -1.583, 0.55", "-7.16033, -161.463, -3.20791, 0.55", "-7.49386, -164.517, -4.49427, 0.55", "-8.04059, -167.757, -5.93087, 0.55", "-9.01815, -171.863, -7.81752, 0.55", "-9.6814, -174.002, -8.82494, 0.55", "-10.5629, -176.466, -9.96249, 0.55", "-11.2039, -178.395, -10.9239, 0.83", "-12.6575, -183.304, -13.2242, 0.55", "-12.9017, -184.313, -13.6741, 0.55", "-13.356, -186.829, -14.7318, 0.55", "-13.9901, -191.274, -16.6, 0.55", "-14.274, -194.134, -17.7233, 0.55", "-14.5388, -198.882, -19.3629, 0.55", "-14.5314, -201.031, -19.9809, 0.83", "-14.5399, -202.414, -20.3695, 0.28", "-14.5515, -202.824, -20.4781, 0.55", "-14.6287, -204.097, -20.77, 0.28", "-14.6733, -205.03, -20.989, 0.55", "-14.6578, -206.942, -21.5629, 0.28", "-14.4372, -209.89, -22.7024, 0.55", "-14.0415, -212.946, -24.1586, 0.28", "-13.8892, -213.736, -24.6079, 0.83", "-13.1849, -216.644, -26.5972, 0.28", "-12.8059, -217.931, -27.6002, 0.55", "-12.1645, -219.721, -29.1701, 0.55", "-11.5403, -221.22, -30.6817, 0.55", "-10.8282, -222.751, -32.3658, 0.55", "-10.0963, -224.354, -34.139, 0.28", "-9.91279, -224.819, -34.6239, 0.55", "-9.48251, -226.227, -35.9082, 0.28", "-9.40546, -226.562, -36.1708, 0.55", "-9.04412, -228.321, -37.4416, 0.28", "-8.97528, -228.827, -37.7766, 0.83", "-8.53934, -233.025, -40.4594, 0.28", "-8.53646, -233.292, -40.6403, 0.55", "-8.64953, -235.965, -42.5693, 0.28", "-8.72169, -236.742, -43.1506, 0.55", "-9.00502, -238.921, -44.8067, 0.28", "-9.03434, -239.168, -44.9938, 0.55", "-9.51525, -243.124, -48.0823, 0.28", "-9.58497, -243.847, -48.6317, 0.55", "-9.73856, -245.826, -50.0335, 0.28", "-9.80652, -247.301, -51.0703, 0.83", "-9.80152, -250.567, -53.2889, 0.28", "-9.80152, -250.567, -53.2889, 0.55", "-9.77361, -252.002, -54.3711, 0.55", "-9.73648, -253.202, -55.3284, 0.55", "-9.51072, -256.674, -58.3136, 0.28", "-9.43917, -257.636, -59.1916, 0.55", "-9.15533, -260.134, -61.6504, 0.28", "-8.9686, -261.354, -62.8713, 0.28", "-8.68272, -263.118, -64.8151, 0.55", "-8.57923, -263.638, -65.4104, 0.28", "-8.51642, -263.923, -65.718, 0.55", "-8.20115, -265.465, -67.3019, 0.28", "-8.11478, -266.085, -67.9942, 0.55", "-7.76576, -269.668, -72.1839, 0.28", "-7.79542, -270.742, -73.5505, 0.83", "-7.90308, -271.751, -74.8607, 0.28", "-7.95958, -272.143, -75.3766, 0.55", "-8.68075, -275.633, -80.0531, 0.28", "-8.96867, -276.862, -81.8016, 0.55", "-9.72326, -279.279, -85.4116, 0.28", "-9.86325, -279.581, -85.9374, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-6.42464, -147.586, 2.97993, 0.55", "-6.5618, -149.872, 3.68722, 0.55", "-6.61867, -151.8, 4.25198, 0.28", "-6.66656, -152.956, 4.5826, 0.83", "-6.75416, -155.131, 5.27311, 0.28", "-6.79349, -155.677, 5.43332, 0.83", "-7.01781, -158.018, 6.1926, 0.28", "-7.05223, -158.289, 6.27379, 0.55", "-7.22978, -159.255, 6.56983, 0.55", "-7.54415, -160.601, 7.0181, 0.28", "-7.96641, -162.25, 7.54276, 0.55", "-8.74178, -165.282, 8.61188, 0.28", "-9.09388, -166.718, 9.15629, 0.83", "-9.63249, -168.94, 10.0315, 0.28", "-10.1276, -171.096, 10.9225, 0.28", "-10.6746, -173.353, 11.9106, 0.28", "-11.2113, -175.514, 12.973, 0.83", "-11.6541, -177.183, 13.7877, 0.28", "-12.1075, -178.94, 14.7082, 0.83", "-12.5928, -180.687, 15.633, 0.28", "-12.7927, -181.424, 16.0435, 0.28", "-13.4016, -183.057, 17.0506, 0.55", "-14.1203, -184.703, 17.8992, 0.55", "-16.8389, -193.632, 21.9816, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_42", "dend_41", "dend_40", "dend_39", "dend_34", "dend_27", "dend_22", "dend_19", "dend_0", "dend_38", "dend_35", "dend_29", "dend_28", "dend_24", "dend_23", "dend_21", "dend_20", "dend_6", "dend_1", "dend_37", "dend_36", "dend_33", "dend_30", "dend_26", "dend_25", "dend_10", "dend_7", "dend_5", "dend_2", "dend_32", "dend_31", "dend_16", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "dend_18", "dend_17", "dend_15", "dend_12", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_42", "dend_41", "dend_40", "dend_39", "dend_34", "dend_27", "dend_22", "dend_19", "dend_0", "dend_38", "dend_35", "dend_29", "dend_28", "dend_24", "dend_23", "dend_21", "dend_20", "dend_6", "dend_1", "dend_37", "dend_36", "dend_33", "dend_30", "dend_26", "dend_25", "dend_10", "dend_7", "dend_5", "dend_2", "dend_32", "dend_31", "dend_16", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "dend_18", "dend_17", "dend_15", "dend_12", "dend_14", "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_0", "dend_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_6", "dend_6", "dend_1", "axon_1", "axon_1", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L4_NBC_bfc793de90_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_42, dend_41, dend_40, dend_39, dend_34, dend_27, dend_22, dend_19, dend_0, dend_38, dend_35, dend_29, dend_28, dend_24, dend_23, dend_21, dend_20, dend_6, dend_1, dend_37, dend_36, dend_33, dend_30, dend_26, dend_25, dend_10, dend_7, dend_5, dend_2, dend_32, dend_31, dend_16, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17, dend_15, dend_12, dend_14, dend_13]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_42, dend_41, dend_40, dend_39, dend_34, dend_27, dend_22, dend_19, dend_0, dend_38, dend_35, dend_29, dend_28, dend_24, dend_23, dend_21, dend_20, dend_6, dend_1, dend_37, dend_36, dend_33, dend_30, dend_26, dend_25, dend_10, dend_7, dend_5, dend_2, dend_32, dend_31, dend_16, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17, dend_15, dend_12, dend_14, dend_13]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_41
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_6, dend_6, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_42(0), soma_0(0.45000007819020027)
    connect dend_41(0), soma_0(0.45000007819020027)
    connect dend_40(0), soma_0(0.45000007819020027)
    connect dend_39(0), soma_0(0.45000007819020027)
    connect dend_34(0), soma_0(0.45000007819020027)
    connect dend_27(0), soma_0(0.45000007819020027)
    connect dend_22(0), soma_0(0.45000007819020027)
    connect dend_19(0), soma_0(0.45000007819020027)
    connect dend_0(0), soma_0(0.45000007819020027)
    connect axon_0(0), soma_0(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.06688, 8.74128, -1.1272, 2.20257 ) }
    soma_0 { pt3dadd( -0.937306, 7.82691, -0.999547, 3.85541 ) }
    soma_0 { pt3dadd( -0.807729, 6.91254, -0.871898, 5.84624 ) }
    soma_0 { pt3dadd( -0.678152, 5.99818, -0.744249, 7.26434 ) }
    soma_0 { pt3dadd( -0.548576, 5.08381, -0.6166, 10.3712 ) }
    soma_0 { pt3dadd( -0.418999, 4.16944, -0.488951, 11.2076 ) }
    soma_0 { pt3dadd( -0.289422, 3.25508, -0.361302, 11.8779 ) }
    soma_0 { pt3dadd( -0.159846, 2.34071, -0.233653, 11.9642 ) }
    soma_0 { pt3dadd( -0.0302691, 1.42634, -0.106004, 11.5058 ) }
    soma_0 { pt3dadd( 0.0993075, 0.511976, 0.0216455, 11.0473 ) }
    soma_0 { pt3dadd( 0.228884, -0.402391, 0.149295, 10.6248 ) }
    soma_0 { pt3dadd( 0.358461, -1.31676, 0.276944, 10.1128 ) }
    soma_0 { pt3dadd( 0.488037, -2.23113, 0.404593, 9.57755 ) }
    soma_0 { pt3dadd( 0.617614, -3.14549, 0.532242, 9.04063 ) }
    soma_0 { pt3dadd( 0.747191, -4.05986, 0.659891, 8.48926 ) }
    soma_0 { pt3dadd( 0.876767, -4.97423, 0.78754, 7.85518 ) }
    soma_0 { pt3dadd( 1.00634, -5.88859, 0.915189, 7.19302 ) }
    soma_0 { pt3dadd( 1.13592, -6.80296, 1.04284, 6.47635 ) }
    soma_0 { pt3dadd( 1.2655, -7.71733, 1.17049, 5.43009 ) }
    soma_0 { pt3dadd( 1.39507, -8.63169, 1.29814, 3.7337 ) }
    soma_0 { pt3dadd( 1.52465, -9.54606, 1.42578, 2.56951 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 21/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -4.70824, 3.35321, -7.70142, 0.83 ) }
    dend_42 { pt3dadd( -7.28724, 3.96998, -10.3517, 0.83 ) }
    dend_42 { pt3dadd( -9.50755, 3.96336, -12.3408, 1.11 ) }
    dend_42 { pt3dadd( -13.5033, 3.94862, -15.7321, 1.11 ) }
    dend_42 { pt3dadd( -17.2217, 3.4835, -20.2678, 1.11 ) }
    dend_42 { pt3dadd( -18.3765, 3.2521, -21.7563, 0.83 ) }
    dend_42 { pt3dadd( -22.0946, 2.30568, -26.539, 0.83 ) }
    dend_42 { pt3dadd( -23.4056, 1.79207, -28.3932, 0.55 ) }
    dend_42 { pt3dadd( -25.833, 0.395968, -31.9261, 0.55 ) }
    dend_42 { pt3dadd( -31.4937, -3.61957, -40.2206, 0.83 ) }
    dend_42 { pt3dadd( -34.052, -5.51428, -44.0793, 0.55 ) }
    dend_42 { pt3dadd( -34.8416, -6.04186, -45.5014, 0.83 ) }
    dend_42 { pt3dadd( -35.7453, -6.5814, -47.5097, 0.55 ) }
    dend_42 { pt3dadd( -36.4278, -6.99, -49.1343, 1.11 ) }
    dend_42 { pt3dadd( -38.2446, -8.01279, -53.575, 1.11 ) }
    dend_42 { pt3dadd( -40.5878, -8.91445, -58.9053, 0.83 ) }
    dend_42 { pt3dadd( -43.0249, -9.66454, -65.1084, 0.83 ) }
    dend_42 { pt3dadd( -45.2334, -10.0462, -70.666, 0.28 ) }
    dend_42 { pt3dadd( -45.6105, -10.0536, -71.5688, 0.55 ) }
    dend_42 { pt3dadd( -46.5725, -9.94309, -73.7653, 0.28 ) }
    dend_42 { pt3dadd( -47.5887, -9.66169, -75.8887, 0.55 ) }
    dend_42 { pt3dadd( -48.5558, -9.22747, -77.5989, 0.28 ) }
    dend_42 { pt3dadd( -49.5776, -8.79728, -78.9442, 0.83 ) }
    dend_42 { pt3dadd( -52.0163, -7.63844, -82.4297, 0.28 ) }
    dend_42 { pt3dadd( -52.1802, -7.5528, -82.6915, 0.55 ) }
    dend_42 { pt3dadd( -53.2907, -6.91964, -84.7667, 0.28 ) }
    dend_42 { pt3dadd( -54.3469, -6.29002, -87.0006, 0.83 ) }
    dend_42 { pt3dadd( -54.6125, -6.15941, -87.6098, 0.83 ) }
    dend_42 { pt3dadd( -57.6465, -4.9989, -94.9133, 0.28 ) }
    dend_42 { pt3dadd( -58.0763, -4.86829, -95.9176, 0.55 ) }
    dend_42 { pt3dadd( -59.9173, -4.44785, -100.02, 0.28 ) }
    dend_42 { pt3dadd( -60.7062, -4.32961, -101.787, 0.83 ) }
    dend_42 { pt3dadd( -62.2794, -4.09492, -105.161, 0.28 ) }
    dend_42 { pt3dadd( -63.0865, -3.97234, -106.733, 0.55 ) }
    dend_42 { pt3dadd( -63.9363, -3.86375, -108.167, 0.28 ) }
    dend_42 { pt3dadd( -64.3866, -3.79089, -108.948, 0.55 ) }
    dend_42 { pt3dadd( -68.6917, -2.79913, -116.164, 0.28 ) }
    dend_42 { pt3dadd( -69.2063, -2.60844, -117.108, 0.55 ) }
    dend_42 { pt3dadd( -69.6898, -2.36939, -118.066, 0.28 ) }
    dend_42 { pt3dadd( -70.0875, -2.10467, -119.045, 0.83 ) }
    dend_42 { pt3dadd( -71.483, -0.919151, -123.322, 0.28 ) }
    dend_42 { pt3dadd( -71.6393, -0.724038, -123.947, 0.83 ) }
    dend_42 { pt3dadd( -72.2212, 0.372727, -126.949, 0.28 ) }
    dend_42 { pt3dadd( -72.3224, 0.523672, -127.452, 0.83 ) }
    dend_42 { pt3dadd( -73.0018, 1.49223, -130.829, 0.28 ) }
    dend_42 { pt3dadd( -73.1132, 1.64815, -131.378, 0.83 ) }
    dend_42 { pt3dadd( -73.8805, 2.70329, -135.055, 0.28 ) }
    dend_42 { pt3dadd( -74.0207, 2.88835, -135.724, 0.83 ) }
    dend_42 { pt3dadd( -76.1421, 5.3854, -145.104, 0.28 ) }
    dend_42 { pt3dadd( -77.3357, 6.61323, -149.944, 0.83 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 71/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -3.88824, 6.39321, -6.65142, 1.11 ) }
    dend_41 { pt3dadd( -4.86455, 7.02264, -8.58577, 1.11 ) }
    dend_41 { pt3dadd( -5.57784, 7.2164, -9.79721, 1.11 ) }
    dend_41 { pt3dadd( -7.05681, 7.31347, -12.3209, 0.83 ) }
    dend_41 { pt3dadd( -8.22484, 7.24316, -14.2779, 1.38 ) }
    dend_41 { pt3dadd( -12.1751, 6.63767, -20.9506, 0.83 ) }
    dend_41 { pt3dadd( -14.0393, 6.3156, -24.2343, 0.83 ) }
    dend_41 { pt3dadd( -18.1088, 5.31863, -32.223, 0.83 ) }
    dend_41 { pt3dadd( -22.7611, 3.90683, -41.5353, 0.83 ) }
    dend_41 { pt3dadd( -24.2645, 3.33066, -44.5179, 0.83 ) }
    dend_41 { pt3dadd( -25.2564, 2.89434, -46.3937, 0.83 ) }
    dend_41 { pt3dadd( -26.6046, 2.22789, -48.8721, 0.83 ) }
    dend_41 { pt3dadd( -27.704, 1.56904, -51.4033, 1.11 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 84/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -2.44824, 7.31321, -3.11142, 0.83 ) }
    dend_40 { pt3dadd( -3.71496, 9.02208, -3.21861, 0.55 ) }
    dend_40 { pt3dadd( -4.46905, 10.0838, -3.27265, 0.55 ) }
    dend_40 { pt3dadd( -5.09096, 11.0214, -3.37571, 1.11 ) }
    dend_40 { pt3dadd( -5.95698, 12.3768, -3.54967, 0.83 ) }
    dend_40 { pt3dadd( -7.61422, 15.3481, -3.96604, 0.83 ) }
    dend_40 { pt3dadd( -8.73899, 17.6016, -4.28246, 0.83 ) }
    dend_40 { pt3dadd( -9.90639, 20.1725, -4.63657, 0.83 ) }
    dend_40 { pt3dadd( -10.684, 22.1493, -4.81067, 0.83 ) }
    dend_40 { pt3dadd( -11.2683, 24.0524, -4.89756, 1.38 ) }
    dend_40 { pt3dadd( -11.8347, 26.7128, -4.84836, 0.55 ) }
    dend_40 { pt3dadd( -12.0036, 28.6489, -4.65357, 0.55 ) }
    dend_40 { pt3dadd( -12.0659, 29.999, -4.409, 0.55 ) }
    dend_40 { pt3dadd( -12.1938, 32.5057, -3.82994, 0.55 ) }
    dend_40 { pt3dadd( -12.2617, 33.5457, -3.5501, 0.55 ) }
    dend_40 { pt3dadd( -12.4593, 35.5193, -3.02046, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_40 { pt3dadd( -13.0339, 39.2429, -2.14722, 0.55 ) }
    dend_40 { pt3dadd( -13.3102, 40.8602, -1.85351, 0.28 ) }
    dend_40 { pt3dadd( -13.6322, 42.6236, -1.65166, 0.28 ) }
    dend_40 { pt3dadd( -13.8734, 44.1018, -1.56884, 0.55 ) }
    dend_40 { pt3dadd( -14.0498, 45.6012, -1.56497, 0.28 ) }
    dend_40 { pt3dadd( -14.3324, 49.7115, -1.78565, 0.83 ) }
    dend_40 { pt3dadd( -14.3413, 51.3833, -1.98551, 0.55 ) }
    dend_40 { pt3dadd( -14.2248, 53.3147, -2.29178, 0.28 ) }
    dend_40 { pt3dadd( -14.0883, 54.708, -2.53869, 0.55 ) }
    dend_40 { pt3dadd( -13.4814, 59.1025, -3.41493, 0.28 ) }
    dend_40 { pt3dadd( -13.3339, 59.8508, -3.5867, 0.83 ) }
    dend_40 { pt3dadd( -12.6099, 62.5982, -4.37566, 0.28 ) }
    dend_40 { pt3dadd( -12.3732, 63.3959, -4.63085, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 13/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -3.69824, 6.32321, 3.79858, 1.11 ) }
    dend_39 { pt3dadd( -4.51147, 10.5809, 4.33616, 1.11 ) }
    dend_39 { pt3dadd( -5.83321, 16.4668, 5.11146, 1.11 ) }
    dend_39 { pt3dadd( -6.61462, 20.3016, 5.58236, 1.11 ) }
    dend_39 { pt3dadd( -7.73858, 25.2961, 6.19502, 1.11 ) }
    dend_39 { pt3dadd( -8.97775, 30.4625, 6.78572, 1.11 ) }
    dend_39 { pt3dadd( -9.91499, 34.7231, 7.21157, 1.11 ) }
    dend_39 { pt3dadd( -10.6099, 38.0309, 7.34011, 1.11 ) }
    dend_39 { pt3dadd( -11.3857, 42.141, 7.24002, 1.11 ) }
    dend_39 { pt3dadd( -11.9113, 45.7472, 7.0799, 1.11 ) }
    dend_39 { pt3dadd( -12.3268, 50.1783, 6.83783, 1.11 ) }
    dend_39 { pt3dadd( -12.6327, 55.5042, 6.4404, 1.11 ) }
    dend_39 { pt3dadd( -12.712, 62.7319, 5.74541, 1.11 ) }
    dend_39 { pt3dadd( -12.7022, 65.6, 5.45446, 1.11 ) }
    dend_39 { pt3dadd( -12.6496, 69.2078, 5.10594, 0.83 ) }
    dend_39 { pt3dadd( -12.4587, 72.4768, 4.81638, 0.83 ) }
    dend_39 { pt3dadd( -12.19, 76.1806, 4.56019, 1.11 ) }
    dend_39 { pt3dadd( -11.9092, 80.4221, 4.42063, 1.11 ) }
    dend_39 { pt3dadd( -11.8031, 81.7703, 4.44417, 0.28 ) }
    dend_39 { pt3dadd( -11.6355, 84.2587, 4.50743, 0.55 ) }
    dend_39 { pt3dadd( -11.5707, 86.0078, 4.55127, 0.55 ) }
    dend_39 { pt3dadd( -11.5256, 88.7873, 4.56024, 0.55 ) }
    dend_39 { pt3dadd( -11.5161, 91.1969, 4.51076, 0.28 ) }
    dend_39 { pt3dadd( -11.5004, 92.0529, 4.43778, 0.83 ) }
    dend_39 { pt3dadd( -11.4782, 93.9511, 4.21743, 0.28 ) }
    dend_39 { pt3dadd( -11.5681, 99.0609, 3.69946, 0.55 ) }
    dend_39 { pt3dadd( -11.6506, 102.241, 3.33704, 0.28 ) }
    dend_39 { pt3dadd( -11.6661, 104.474, 3.07216, 1.11 ) }
    dend_39 { pt3dadd( -11.5828, 109.077, 2.50967, 0.28 ) }
    dend_39 { pt3dadd( -11.4303, 112.183, 2.18236, 1.11 ) }
    dend_39 { pt3dadd( -11.1173, 115.866, 1.85302, 0.28 ) }
    dend_39 { pt3dadd( -10.7652, 118.278, 1.72198, 0.55 ) }
    dend_39 { pt3dadd( -10.257, 120.827, 1.78601, 0.28 ) }
    dend_39 { pt3dadd( -9.91557, 122.132, 1.9059, 0.28 ) }
    dend_39 { pt3dadd( -9.46279, 123.512, 2.136, 0.55 ) }
    dend_39 { pt3dadd( -8.74683, 125.331, 2.43548, 0.28 ) }
    dend_39 { pt3dadd( -8.1563, 126.721, 2.64843, 0.83 ) }
    dend_39 { pt3dadd( -7.26853, 128.909, 3.09988, 0.28 ) }
    dend_39 { pt3dadd( -7.03792, 129.51, 3.22086, 0.83 ) }
    dend_39 { pt3dadd( -6.10392, 132.044, 3.68761, 0.55 ) }
    dend_39 { pt3dadd( -5.36566, 134.082, 4.02382, 0.28 ) }
    dend_39 { pt3dadd( -5.09421, 134.87, 4.15717, 0.55 ) }
    dend_39 { pt3dadd( -4.253, 137.174, 4.53366, 0.28 ) }
    dend_39 { pt3dadd( -4.05595, 137.731, 4.61715, 0.55 ) }
    dend_39 { pt3dadd( -3.40259, 139.51, 4.89247, 0.28 ) }
    dend_39 { pt3dadd( -3.16903, 140.121, 4.9842, 0.55 ) }
    dend_39 { pt3dadd( -2.50495, 142.1, 5.25072, 0.28 ) }
    dend_39 { pt3dadd( -1.71553, 144.975, 5.56968, 0.83 ) }
    dend_39 { pt3dadd( -1.33309, 146.752, 5.72981, 0.28 ) }
    dend_39 { pt3dadd( -1.15619, 147.943, 5.73927, 0.83 ) }
    dend_39 { pt3dadd( -0.924087, 150.084, 5.62738, 0.28 ) }
    dend_39 { pt3dadd( -0.745057, 151.829, 5.45576, 0.55 ) }
    dend_39 { pt3dadd( -0.625021, 153.119, 5.28744, 0.28 ) }
    dend_39 { pt3dadd( -0.450224, 155.482, 4.91655, 0.83 ) }
    dend_39 { pt3dadd( -0.078395, 160.102, 4.16736, 0.28 ) }
    dend_39 { pt3dadd( 0.011123, 161.186, 3.99621, 0.55 ) }
    dend_39 { pt3dadd( 0.434733, 166.118, 3.22636, 0.55 ) }
    dend_39 { pt3dadd( 0.501605, 166.707, 3.1354, 0.55 ) }
    dend_39 { pt3dadd( 0.786497, 168.861, 2.82604, 0.28 ) }
    dend_39 { pt3dadd( 0.930048, 169.955, 2.68287, 0.55 ) }
    dend_39 { pt3dadd( 1.08602, 171.295, 2.6187, 0.28 ) }
    dend_39 { pt3dadd( 1.15388, 172.665, 2.55531, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 75/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 4.18176, 4.76321, -6.33142, 0.83 ) }
    dend_34 { pt3dadd( 4.49967, 6.70774, -9.14903, 0.83 ) }
    dend_34 { pt3dadd( 4.43023, 7.94839, -11.2911, 0.83 ) }
    dend_34 { pt3dadd( 4.35443, 8.96259, -12.9869, 1.94 ) }
    dend_34 { pt3dadd( 4.27906, 10.7206, -16.0619, 0.83 ) }
    dend_34 { pt3dadd( 4.23048, 11.8195, -17.931, 1.11 ) }
    dend_34 { pt3dadd( 4.13274, 14.3679, -21.917, 1.38 ) }
    dend_34 { pt3dadd( 3.916, 15.6702, -23.918, 0.28 ) }
    dend_34 { pt3dadd( 3.63168, 16.8818, -25.6366, 0.83 ) }
    dend_34 { pt3dadd( 2.93321, 19.4104, -28.6508, 0.28 ) }
    dend_34 { pt3dadd( 2.64967, 20.4095, -29.5563, 0.83 ) }
    dend_34 { pt3dadd( 2.15975, 22.1718, -30.7517, 0.83 ) }
    dend_34 { pt3dadd( 1.52101, 24.3035, -31.8911, 1.11 ) }
    dend_34 { pt3dadd( 0.313955, 27.7977, -33.6671, 0.28 ) }
    dend_34 { pt3dadd( -0.397481, 29.4837, -34.4936, 0.83 ) }
    dend_34 { pt3dadd( -1.54849, 31.9232, -35.5905, 0.55 ) }
    dend_34 { pt3dadd( -2.40026, 33.5921, -36.3902, 0.83 ) }
    dend_34 { pt3dadd( -3.52752, 35.6609, -37.4092, 0.28 ) }
    dend_34 { pt3dadd( -5.00513, 38.2945, -38.7329, 0.83 ) }
    dend_34 { pt3dadd( -6.38656, 40.7717, -39.8361, 0.55 ) }
    dend_34 { pt3dadd( -7.40546, 42.5651, -40.6288, 0.83 ) }
    dend_34 { pt3dadd( -9.28967, 45.6328, -41.9328, 0.28 ) }
    dend_34 { pt3dadd( -9.75564, 46.376, -42.2264, 0.55 ) }
    dend_34 { pt3dadd( -10.5358, 47.61, -42.6669, 0.28 ) }
    dend_34 { pt3dadd( -12.1612, 50.1175, -43.4998, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_34 { pt3dadd( -13.3622, 52.0704, -44.1229, 0.28 ) }
    dend_34 { pt3dadd( -14.3873, 53.786, -44.6614, 0.83 ) }
    dend_34 { pt3dadd( -14.7913, 54.4873, -44.8571, 0.28 ) }
    dend_34 { pt3dadd( -15.743, 56.1481, -45.3322, 0.28 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 4/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.99176, 3.38321, -9.40142, 1.11 ) }
    dend_27 { pt3dadd( 7.94722, 3.25952, -9.40142, 1.11 ) }
    dend_27 { pt3dadd( 10.1715, 3.16643, -9.40142, 1.11 ) }
    dend_27 { pt3dadd( 13.2967, 3.03564, -9.40142, 1.11 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 8/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -5.36824, 1.16321, 0.248578, 0.55 ) }
    dend_22 { pt3dadd( -7.4337, 1.4414, -1.20652, 0.55 ) }
    dend_22 { pt3dadd( -9.21442, 1.68124, -2.46103, 0.83 ) }
    dend_22 { pt3dadd( -12.7046, 2.15132, -4.91986, 0.83 ) }
    dend_22 { pt3dadd( -18.959, 2.9937, -9.32603, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 13/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 2.65176, -7.97679, -3.47142, 0.83 ) }
    dend_19 { pt3dadd( 3.09201, -10.0702, -4.3516, 0.83 ) }
    dend_19 { pt3dadd( 3.40035, -12.0703, -5.36294, 0.83 ) }
    dend_19 { pt3dadd( 3.68256, -14.6783, -7.05726, 1.11 ) }
    dend_19 { pt3dadd( 4.02231, -18.1087, -9.5124, 0.83 ) }
    dend_19 { pt3dadd( 4.40158, -21.7219, -12.2744, 0.83 ) }
    dend_19 { pt3dadd( 4.75848, -25.1083, -14.9782, 0.55 ) }
    dend_19 { pt3dadd( 4.89957, -26.5672, -16.2884, 0.83 ) }
    dend_19 { pt3dadd( 5.16685, -29.4969, -19.2755, 0.55 ) }
    dend_19 { pt3dadd( 5.22998, -30.2624, -20.1797, 0.55 ) }
    dend_19 { pt3dadd( 5.21125, -32.0714, -22.5986, 0.83 ) }
    dend_19 { pt3dadd( 5.06371, -33.4925, -24.7321, 0.55 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 25/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.14824, -9.92679, 4.18858, 2.22 ) }
    dend_0 { pt3dadd( -0.911972, -12.3897, 4.32794, 2.22 ) }
    dend_0 { pt3dadd( -1.82487, -15.3336, 4.49453, 3.05 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 28/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.52465, -9.54606, 1.42578, 1.11 ) }
    axon_0 { pt3dadd( 3.6293, -24.3977, 1.42578, 1.11 ) }
    axon_0 { pt3dadd( 5.73394, -39.2493, 1.42578, 1.11 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 31/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -15.743, 56.1481, -45.3322, 0.28 ) }
    dend_38 { pt3dadd( -18.6082, 57.2273, -44.9451, 0.28 ) }
    dend_38 { pt3dadd( -19.6425, 57.6042, -44.815, 0.28 ) }
    dend_38 { pt3dadd( -20.9536, 58.0907, -44.6675, 0.55 ) }
    dend_38 { pt3dadd( -22.3053, 58.5785, -44.5178, 0.28 ) }
    dend_38 { pt3dadd( -23.3756, 58.9565, -44.4037, 0.55 ) }
    dend_38 { pt3dadd( -25.4473, 59.6791, -44.1912, 0.28 ) }
    dend_38 { pt3dadd( -27.1917, 60.2911, -43.9654, 0.28 ) }
    dend_38 { pt3dadd( -28.9146, 60.959, -43.7339, 0.55 ) }
    dend_38 { pt3dadd( -31.2913, 61.9336, -43.457, 0.28 ) }
    dend_38 { pt3dadd( -32.3207, 62.4047, -43.3987, 0.28 ) }
    dend_38 { pt3dadd( -33.0963, 62.8018, -43.3804, 0.55 ) }
    dend_38 { pt3dadd( -36.6505, 64.9446, -43.4856, 0.28 ) }
    dend_38 { pt3dadd( -39.4748, 66.789, -43.6508, 0.28 ) }
    dend_38 { pt3dadd( -40.4779, 67.5044, -43.7502, 0.55 ) }
    dend_38 { pt3dadd( -43.9151, 70.2041, -44.1585, 0.28 ) }
    dend_38 { pt3dadd( -44.673, 70.8324, -44.2523, 0.55 ) }
    dend_38 { pt3dadd( -49.014, 74.537, -44.8609, 0.28 ) }
    dend_38 { pt3dadd( -49.5515, 75.0138, -44.9508, 1.38 ) }
    dend_38 { pt3dadd( -53.8217, 78.8627, -45.618, 0.28 ) }
    dend_38 { pt3dadd( -57.4332, 82.141, -46.0649, 0.28 ) }
    dend_38 { pt3dadd( -59.5991, 84.1174, -46.2453, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 53/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -15.743, 56.1481, -45.3322, 0.83 ) }
    dend_35 { pt3dadd( -16.0307, 56.8888, -46.0237, 0.83 ) }
    dend_35 { pt3dadd( -16.3588, 57.7336, -46.8125, 0.28 ) }
    dend_35 { pt3dadd( -16.9495, 59.2544, -48.2323, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 57/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 13.2967, 3.03564, -9.40142, 1.11 ) }
    dend_29 { pt3dadd( 15.5415, 2.94545, -10.4663, 1.11 ) }
    dend_29 { pt3dadd( 17.4535, 2.7372, -11.4127, 1.11 ) }
    dend_29 { pt3dadd( 19.5299, 2.52832, -12.5848, 1.11 ) }
    dend_29 { pt3dadd( 21.9493, 2.31844, -14.0562, 1.11 ) }
    dend_29 { pt3dadd( 25.321, 2.01439, -16.1169, 1.11 ) }
    dend_29 { pt3dadd( 28.5809, 1.72041, -18.1093, 1.11 ) }
    dend_29 { pt3dadd( 31.7429, 1.55408, -20.1565, 0.83 ) }
    dend_29 { pt3dadd( 34.2356, 1.44285, -21.8729, 0.83 ) }
    dend_29 { pt3dadd( 36.0142, 1.33033, -23.1436, 0.83 ) }
    dend_29 { pt3dadd( 39.3901, 1.09201, -25.6307, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 68/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 13.2967, 3.03564, -9.40142, 0.55 ) }
    dend_28 { pt3dadd( 15.9871, 3.78221, -8.99111, 0.55 ) }
    dend_28 { pt3dadd( 18.0431, 4.35273, -8.67756, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 71/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -18.959, 2.9937, -9.32603, 0.83 ) }
    dend_24 { pt3dadd( -21.8321, 2.84842, -10.2018, 0.83 ) }
    dend_24 { pt3dadd( -23.4318, 2.97052, -10.788, 0.83 ) }
    dend_24 { pt3dadd( -24.9305, 2.99564, -11.3295, 1.94 ) }
    dend_24 { pt3dadd( -27.5121, 2.60728, -13.1561, 0.55 ) }
    dend_24 { pt3dadd( -29.4221, 2.25892, -14.6365, 0.55 ) }
    dend_24 { pt3dadd( -31.9572, 1.86152, -16.6331, 0.83 ) }
    dend_24 { pt3dadd( -33.8246, 1.56001, -18.1218, 0.83 ) }
    dend_24 { pt3dadd( -35.7781, 1.32178, -19.7898, 0.83 ) }
    dend_24 { pt3dadd( -43.1148, 0.685342, -26.2202, 1.38 ) }
    dend_24 { pt3dadd( -45.9106, 0.524462, -28.6724, 0.55 ) }
    dend_24 { pt3dadd( -48.2747, 0.377939, -30.8127, 0.55 ) }
    dend_24 { pt3dadd( -50.0606, 0.253784, -32.418, 1.11 ) }
    dend_24 { pt3dadd( -52.9551, 0.214334, -34.8729, 0.28 ) }
    dend_24 { pt3dadd( -53.4862, 0.276881, -35.2547, 0.28 ) }
    dend_24 { pt3dadd( -54.3078, 0.502092, -35.6396, 0.83 ) }
    dend_24 { pt3dadd( -57.4206, 1.61156, -36.9788, 0.28 ) }
    dend_24 { pt3dadd( -58.1874, 1.93434, -37.2751, 0.55 ) }
    dend_24 { pt3dadd( -60.4965, 3.0579, -38.1872, 0.28 ) }
    dend_24 { pt3dadd( -63.1944, 4.30623, -39.3499, 1.11 ) }
    dend_24 { pt3dadd( -65.0642, 5.16688, -40.299, 0.28 ) }
    dend_24 { pt3dadd( -66.4063, 5.77703, -41.0687, 0.83 ) }
    dend_24 { pt3dadd( -69.8168, 7.40089, -43.2472, 0.28 ) }
    dend_24 { pt3dadd( -71.2414, 8.11954, -44.3407, 0.83 ) }
    dend_24 { pt3dadd( -74.1003, 9.60218, -46.8671, 0.55 ) }
    dend_24 { pt3dadd( -75.4572, 10.3477, -48.1961, 0.55 ) }
    dend_24 { pt3dadd( -76.5448, 10.9686, -49.2861, 0.83 ) }
    dend_24 { pt3dadd( -77.5575, 11.599, -50.3599, 0.83 ) }
    dend_24 { pt3dadd( -80.3286, 13.6616, -53.4759, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_24 { pt3dadd( -80.5737, 13.8656, -53.7508, 0.83 ) }
    dend_24 { pt3dadd( -81.7987, 15.108, -55.1753, 0.28 ) }
    dend_24 { pt3dadd( -82.3565, 15.6722, -55.8404, 0.55 ) }
    dend_24 { pt3dadd( -83.2874, 16.5835, -56.9294, 0.28 ) }
    dend_24 { pt3dadd( -84.075, 17.2255, -57.7819, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 5/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -18.959, 2.9937, -9.32603, 0.28 ) }
    dend_23 { pt3dadd( -20.0165, 1.42601, -9.64532, 0.28 ) }
    dend_23 { pt3dadd( -20.3571, 0.907332, -9.7289, 0.83 ) }
    dend_23 { pt3dadd( -21.3037, -0.694323, -10.1341, 0.28 ) }
    dend_23 { pt3dadd( -22.0988, -2.00216, -10.5014, 0.28 ) }
    dend_23 { pt3dadd( -22.4125, -2.48979, -10.6539, 0.55 ) }
    dend_23 { pt3dadd( -23.6959, -4.41309, -11.2941, 0.28 ) }
    dend_23 { pt3dadd( -24.5128, -5.62642, -11.7047, 1.11 ) }
    dend_23 { pt3dadd( -27.4446, -9.62097, -13.0857, 0.28 ) }
    dend_23 { pt3dadd( -28.1121, -10.4709, -13.3884, 0.55 ) }
    dend_23 { pt3dadd( -28.8476, -11.3711, -13.7005, 0.28 ) }
    dend_23 { pt3dadd( -29.8225, -12.4795, -14.0886, 0.28 ) }
    dend_23 { pt3dadd( -30.474, -13.1398, -14.3253, 0.55 ) }
    dend_23 { pt3dadd( -31.9228, -14.5645, -14.6303, 0.28 ) }
    dend_23 { pt3dadd( -32.3305, -14.9874, -14.5317, 0.55 ) }
    dend_23 { pt3dadd( -33.5498, -16.3986, -13.9183, 0.28 ) }
    dend_23 { pt3dadd( -34.0102, -17.0268, -13.5631, 0.55 ) }
    dend_23 { pt3dadd( -34.6945, -18.0214, -12.9366, 0.28 ) }
    dend_23 { pt3dadd( -35.8151, -19.6669, -11.9347, 0.83 ) }
    dend_23 { pt3dadd( -38.3106, -23.5039, -9.73071, 0.28 ) }
    dend_23 { pt3dadd( -38.7144, -24.1272, -9.40785, 0.83 ) }
    dend_23 { pt3dadd( -40.1519, -26.5275, -8.38098, 0.28 ) }
    dend_23 { pt3dadd( -40.686, -27.4603, -8.05777, 0.55 ) }
    dend_23 { pt3dadd( -42.4038, -30.6098, -7.25198, 0.28 ) }
    dend_23 { pt3dadd( -43.0378, -31.8271, -7.1232, 0.28 ) }
    dend_23 { pt3dadd( -43.5503, -32.8463, -7.15384, 0.55 ) }
    dend_23 { pt3dadd( -44.3671, -34.571, -7.24028, 0.28 ) }
    dend_23 { pt3dadd( -44.6153, -35.1148, -7.29175, 1.11 ) }
    dend_23 { pt3dadd( -45.912, -38.5888, -7.57558, 0.28 ) }
    dend_23 { pt3dadd( -46.2935, -40.0573, -7.67449, 0.83 ) }
    dend_23 { pt3dadd( -50.3874, -48.718, -6.01771, 0.83 ) }
    dend_23 { pt3dadd( -54.4927, -57.4424, -4.77472, 0.83 ) }
    dend_23 { pt3dadd( -57.2365, -66.7686, -4.69683, 0.83 ) }
    dend_23 { pt3dadd( -60.0739, -76.0658, -4.54065, 0.83 ) }
    dend_23 { pt3dadd( -64.3362, -84.6252, -6.29633, 0.83 ) }
    dend_23 { pt3dadd( -67.7665, -93.7203, -6.45639, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 41/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 5.06371, -33.4925, -24.7321, 0.83 ) }
    dend_21 { pt3dadd( 6.15937, -34.1687, -25.1071, 0.83 ) }
    dend_21 { pt3dadd( 7.36518, -34.9107, -25.4848, 0.28 ) }
    dend_21 { pt3dadd( 7.94775, -35.2712, -25.6588, 1.11 ) }
    dend_21 { pt3dadd( 9.24509, -36.1215, -26.0447, 0.55 ) }
    dend_21 { pt3dadd( 10.1067, -36.6723, -26.284, 0.55 ) }
    dend_21 { pt3dadd( 12.0597, -37.8722, -26.8017, 1.38 ) }
    dend_21 { pt3dadd( 12.9683, -38.3664, -27.0947, 0.28 ) }
    dend_21 { pt3dadd( 13.1758, -38.4755, -27.1726, 0.55 ) }
    dend_21 { pt3dadd( 13.7488, -38.7671, -27.4641, 0.55 ) }
    dend_21 { pt3dadd( 14.8453, -39.2976, -28.1102, 0.55 ) }
    dend_21 { pt3dadd( 15.5266, -39.624, -28.6278, 1.38 ) }
    dend_21 { pt3dadd( 17.3821, -40.5095, -30.2462, 0.55 ) }
    dend_21 { pt3dadd( 17.9299, -40.7838, -30.7298, 1.11 ) }
    dend_21 { pt3dadd( 19.6509, -41.6556, -32.2471, 0.28 ) }
    dend_21 { pt3dadd( 20.3533, -42.0148, -32.8662, 1.11 ) }
    dend_21 { pt3dadd( 21.5677, -42.6897, -33.9429, 0.55 ) }
    dend_21 { pt3dadd( 22.8741, -43.4301, -35.0142, 0.28 ) }
    dend_21 { pt3dadd( 23.4323, -43.7369, -35.3896, 1.11 ) }
    dend_21 { pt3dadd( 24.4953, -44.2541, -36.009, 0.28 ) }
    dend_21 { pt3dadd( 24.6421, -44.3138, -36.0713, 0.55 ) }
    dend_21 { pt3dadd( 25.3635, -44.5674, -36.3253, 0.28 ) }
    dend_21 { pt3dadd( 25.8441, -44.7038, -36.4364, 0.55 ) }
    dend_21 { pt3dadd( 26.6828, -44.8961, -36.5865, 0.28 ) }
    dend_21 { pt3dadd( 27.3411, -45.0557, -36.6968, 0.55 ) }
    dend_21 { pt3dadd( 28.1594, -45.2536, -36.8008, 0.28 ) }
    dend_21 { pt3dadd( 28.7155, -45.3941, -36.8957, 0.28 ) }
    dend_21 { pt3dadd( 28.9843, -45.4609, -36.9484, 0.55 ) }
    dend_21 { pt3dadd( 30.1592, -45.8061, -37.2387, 0.28 ) }
    dend_21 { pt3dadd( 30.5757, -45.943, -37.3587, 0.55 ) }
    dend_21 { pt3dadd( 31.5089, -46.345, -37.7612, 0.55 ) }
    dend_21 { pt3dadd( 32.2516, -46.7089, -38.1695, 0.28 ) }
    dend_21 { pt3dadd( 32.4515, -46.8096, -38.3277, 0.55 ) }
    dend_21 { pt3dadd( 33.2088, -47.1873, -38.969, 0.28 ) }
    dend_21 { pt3dadd( 33.3396, -47.2495, -39.0818, 0.55 ) }
    dend_21 { pt3dadd( 34.8634, -47.9319, -40.3818, 0.28 ) }
    dend_21 { pt3dadd( 35.1717, -48.0683, -40.636, 0.83 ) }
    dend_21 { pt3dadd( 36.8713, -48.7053, -41.8683, 0.28 ) }
    dend_21 { pt3dadd( 38.0606, -49.0931, -42.6506, 0.28 ) }
    dend_21 { pt3dadd( 38.6777, -49.2596, -42.9892, 0.55 ) }
    dend_21 { pt3dadd( 40.4401, -49.6635, -43.7877, 0.28 ) }
    dend_21 { pt3dadd( 41.1257, -49.7762, -43.9909, 0.83 ) }
    dend_21 { pt3dadd( 42.3148, -49.9549, -44.2188, 0.28 ) }
    dend_21 { pt3dadd( 42.6524, -50.0104, -44.2454, 0.28 ) }
    dend_21 { pt3dadd( 44.1186, -50.236, -44.3, 0.28 ) }
    dend_21 { pt3dadd( 44.354, -50.2737, -44.2978, 0.83 ) }
    dend_21 { pt3dadd( 45.9177, -50.5272, -44.1844, 0.28 ) }
    dend_21 { pt3dadd( 47.1193, -50.7365, -44.0978, 0.55 ) }
    dend_21 { pt3dadd( 48.1908, -50.9522, -44.0145, 0.55 ) }
    dend_21 { pt3dadd( 49.2304, -51.1665, -43.928, 0.28 ) }
    dend_21 { pt3dadd( 49.6005, -51.2429, -43.8939, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 92/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 5.06371, -33.4925, -24.7321, 0.28 ) }
    dend_20 { pt3dadd( 4.16581, -36.1181, -25.2953, 0.28 ) }
    dend_20 { pt3dadd( 3.93712, -36.7868, -25.4387, 0.55 ) }
    dend_20 { pt3dadd( 3.42971, -38.2705, -25.7569, 0.28 ) }
    dend_20 { pt3dadd( 3.11311, -39.1963, -25.9555, 0.83 ) }
    dend_20 { pt3dadd( 1.78749, -43.0726, -26.7868, 0.28 ) }
    dend_20 { pt3dadd( 1.56498, -43.7232, -26.9264, 1.11 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 99/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -1.82487, -15.3336, 4.49453, 2.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_6 { pt3dadd( -1.81599, -20.6032, 6.15905, 2.22 ) }
    dend_6 { pt3dadd( -1.80654, -26.2156, 7.93185, 1.94 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 2/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.82487, -15.3336, 4.49453, 0.55 ) }
    dend_1 { pt3dadd( -4.36809, -15.311, 3.58954, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 4/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 5.73394, -39.2493, 1.42578, 0.28 ) }
    axon_1 { pt3dadd( 7.83859, -54.1009, 1.42578, 0.28 ) }
    axon_1 { pt3dadd( 9.94324, -68.9525, 1.42578, 0.28 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 7/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -16.9495, 59.2544, -48.2323, 0.28 ) }
    dend_37 { pt3dadd( -19.0381, 61.3, -48.0759, 0.28 ) }
    dend_37 { pt3dadd( -20.0317, 62.4289, -48.2285, 1.11 ) }
    dend_37 { pt3dadd( -20.9963, 63.591, -48.4024, 0.28 ) }
    dend_37 { pt3dadd( -21.9154, 64.7684, -48.6362, 0.55 ) }
    dend_37 { pt3dadd( -22.8842, 66.0947, -48.9041, 0.28 ) }
    dend_37 { pt3dadd( -24.0055, 67.7401, -49.2256, 1.38 ) }
    dend_37 { pt3dadd( -26.4822, 71.6823, -50.0532, 0.28 ) }
    dend_37 { pt3dadd( -27.1079, 72.8077, -50.3245, 0.55 ) }
    dend_37 { pt3dadd( -28.2678, 75.1311, -50.9191, 0.28 ) }
    dend_37 { pt3dadd( -28.921, 76.6832, -51.4083, 0.83 ) }
    dend_37 { pt3dadd( -30.0567, 79.6684, -52.4503, 0.28 ) }
    dend_37 { pt3dadd( -30.298, 80.3367, -52.677, 0.55 ) }
    dend_37 { pt3dadd( -31.9818, 85.0691, -54.2717, 0.28 ) }
    dend_37 { pt3dadd( -32.3218, 86.01, -54.6135, 0.55 ) }
    dend_37 { pt3dadd( -33.9162, 90.3516, -56.1946, 0.28 ) }
    dend_37 { pt3dadd( -34.4687, 91.8464, -56.7851, 0.55 ) }
    dend_37 { pt3dadd( -35.004, 93.3093, -57.3971, 0.28 ) }
    dend_37 { pt3dadd( -35.1871, 93.7988, -57.6005, 1.11 ) }
    dend_37 { pt3dadd( -36.7075, 97.1697, -58.9036, 0.28 ) }
    dend_37 { pt3dadd( -37.1594, 98.1027, -59.2329, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 28/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -16.9495, 59.2544, -48.2323, 0.55 ) }
    dend_36 { pt3dadd( -14.7846, 59.4904, -48.0263, 0.55 ) }
    dend_36 { pt3dadd( -12.9653, 59.6886, -47.8532, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 31/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 39.3901, 1.09201, -25.6307, 0.28 ) }
    dend_33 { pt3dadd( 41.6579, 0.503982, -29.1011, 0.28 ) }
    dend_33 { pt3dadd( 43.5821, 0.0951211, -32.0548, 0.83 ) }
    dend_33 { pt3dadd( 46.4643, -0.38304, -36.2566, 0.28 ) }
    dend_33 { pt3dadd( 47.2065, -0.491366, -37.2572, 0.83 ) }
    dend_33 { pt3dadd( 49.4108, -0.738792, -40.0066, 0.28 ) }
    dend_33 { pt3dadd( 49.99, -0.783207, -40.6874, 0.55 ) }
    dend_33 { pt3dadd( 50.9011, -0.737137, -41.5846, 0.28 ) }
    dend_33 { pt3dadd( 52.0637, -0.518537, -42.5329, 0.28 ) }
    dend_33 { pt3dadd( 53.379, -0.168753, -43.3122, 0.83 ) }
    dend_33 { pt3dadd( 54.4175, 0.129545, -43.9174, 0.83 ) }
    dend_33 { pt3dadd( 56.2451, 0.666092, -44.9129, 0.28 ) }
    dend_33 { pt3dadd( 57.7099, 1.13708, -45.7812, 0.83 ) }
    dend_33 { pt3dadd( 59.8264, 1.89681, -47.0645, 0.28 ) }
    dend_33 { pt3dadd( 59.8264, 1.89681, -47.0645, 0.55 ) }
    dend_33 { pt3dadd( 61.8508, 2.77208, -48.3465, 0.28 ) }
    dend_33 { pt3dadd( 62.4809, 3.0251, -48.7302, 0.55 ) }
    dend_33 { pt3dadd( 64.0779, 3.67384, -49.8956, 0.28 ) }
    dend_33 { pt3dadd( 65.2035, 4.13352, -50.9403, 1.11 ) }
    dend_33 { pt3dadd( 66.7845, 4.73198, -52.9289, 0.28 ) }
    dend_33 { pt3dadd( 67.8009, 5.11591, -54.377, 0.55 ) }
    dend_33 { pt3dadd( 68.6693, 5.4697, -55.7466, 0.28 ) }
    dend_33 { pt3dadd( 71.0752, 6.55098, -59.8934, 0.55 ) }
    dend_33 { pt3dadd( 72.2837, 7.15397, -62.1616, 1.11 ) }
    dend_33 { pt3dadd( 74.6094, 8.47017, -66.8327, 0.28 ) }
    dend_33 { pt3dadd( 75.0482, 8.78737, -67.7936, 0.55 ) }
    dend_33 { pt3dadd( 75.6715, 9.37284, -69.2252, 0.28 ) }
    dend_33 { pt3dadd( 76.048, 9.83808, -70.0866, 0.55 ) }
    dend_33 { pt3dadd( 76.8136, 10.9529, -71.6323, 0.28 ) }
    dend_33 { pt3dadd( 77.1317, 11.5693, -72.3754, 1.38 ) }
    dend_33 { pt3dadd( 78.1671, 14.1553, -75.1497, 0.28 ) }
    dend_33 { pt3dadd( 78.3995, 14.8531, -75.9825, 0.83 ) }
    dend_33 { pt3dadd( 78.9262, 16.6808, -78.3423, 0.28 ) }
    dend_33 { pt3dadd( 79.0352, 17.1246, -78.9579, 0.55 ) }
    dend_33 { pt3dadd( 79.3544, 18.6755, -81.1589, 0.28 ) }
    dend_33 { pt3dadd( 79.4271, 19.0665, -81.7247, 0.55 ) }
    dend_33 { pt3dadd( 79.7304, 20.8189, -84.1483, 0.28 ) }
    dend_33 { pt3dadd( 79.8246, 21.2785, -84.7465, 0.55 ) }
    dend_33 { pt3dadd( 80.1553, 22.8631, -86.6373, 0.28 ) }
    dend_33 { pt3dadd( 80.2867, 23.3768, -87.1621, 0.83 ) }
    dend_33 { pt3dadd( 80.71, 24.7917, -88.3647, 0.28 ) }
    dend_33 { pt3dadd( 80.9918, 25.6137, -88.9385, 0.55 ) }
    dend_33 { pt3dadd( 82.057, 28.1645, -90.2475, 0.28 ) }
    dend_33 { pt3dadd( 82.3893, 28.8379, -90.4894, 0.83 ) }
    dend_33 { pt3dadd( 83.6872, 31.1728, -91.039, 0.28 ) }
    dend_33 { pt3dadd( 83.8845, 31.4748, -91.0887, 0.55 ) }
    dend_33 { pt3dadd( 85.2368, 33.3127, -91.2631, 0.28 ) }
    dend_33 { pt3dadd( 86.0958, 34.4376, -91.317, 0.55 ) }
    dend_33 { pt3dadd( 88.0289, 36.8947, -91.2455, 0.28 ) }
    dend_33 { pt3dadd( 88.187, 37.0886, -91.2392, 0.55 ) }
    dend_33 { pt3dadd( 90.4353, 39.8108, -91.2577, 0.28 ) }
    dend_33 { pt3dadd( 90.5921, 39.9941, -91.2594, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 83/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 39.3901, 1.09201, -25.6307, 0.83 ) }
    dend_30 { pt3dadd( 40.5498, 1.38582, -26.3774, 0.83 ) }
    dend_30 { pt3dadd( 41.1133, 1.52586, -26.7433, 0.55 ) }
    dend_30 { pt3dadd( 41.5288, 1.59988, -26.9935, 0.55 ) }
    dend_30 { pt3dadd( 42.5057, 1.74215, -27.5615, 1.11 ) }
    dend_30 { pt3dadd( 44.3743, 1.90495, -28.7151, 0.28 ) }
    dend_30 { pt3dadd( 44.6532, 1.92422, -28.8847, 1.11 ) }
    dend_30 { pt3dadd( 45.88, 1.9533, -29.6577, 0.28 ) }
    dend_30 { pt3dadd( 46.7615, 1.97102, -30.1913, 0.28 ) }
    dend_30 { pt3dadd( 47.4391, 1.99136, -30.5858, 0.83 ) }
    dend_30 { pt3dadd( 48.8251, 2.06171, -31.3878, 0.28 ) }
    dend_30 { pt3dadd( 49.7397, 2.10781, -31.844, 0.28 ) }
    dend_30 { pt3dadd( 50.2266, 2.13984, -32.0965, 1.11 ) }
    dend_30 { pt3dadd( 51.4048, 2.25756, -32.7339, 0.28 ) }
    dend_30 { pt3dadd( 51.7907, 2.33278, -32.953, 0.55 ) }
    dend_30 { pt3dadd( 53.3617, 2.72836, -33.7707, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 99/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -84.075, 17.2255, -57.7819, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( -85.8343, 18.9117, -58.491, 0.28 ) }
    dend_26 { pt3dadd( -86.2824, 19.3106, -58.7677, 0.55 ) }
    dend_26 { pt3dadd( -87.5701, 20.3767, -59.6077, 0.28 ) }
    dend_26 { pt3dadd( -88.9368, 21.4775, -60.6201, 0.55 ) }
    dend_26 { pt3dadd( -90.4573, 22.7213, -61.7454, 0.28 ) }
    dend_26 { pt3dadd( -90.7829, 22.9881, -61.9858, 0.55 ) }
    dend_26 { pt3dadd( -92.9839, 24.7545, -63.6972, 0.28 ) }
    dend_26 { pt3dadd( -93.6066, 25.2593, -64.2102, 0.83 ) }
    dend_26 { pt3dadd( -95.1974, 26.5812, -65.7253, 0.28 ) }
    dend_26 { pt3dadd( -96.2063, 27.4774, -66.7933, 0.83 ) }
    dend_26 { pt3dadd( -98.0199, 29.2716, -68.7982, 0.28 ) }
    dend_26 { pt3dadd( -98.1753, 29.4448, -68.9689, 0.83 ) }
    dend_26 { pt3dadd( -99.5882, 31.2399, -70.5332, 0.28 ) }
    dend_26 { pt3dadd( -101.139, 33.4689, -72.5069, 0.83 ) }
    dend_26 { pt3dadd( -102.037, 34.9365, -73.7772, 0.28 ) }
    dend_26 { pt3dadd( -102.357, 35.5709, -74.3736, 0.55 ) }
    dend_26 { pt3dadd( -102.791, 36.6588, -75.4247, 0.28 ) }
    dend_26 { pt3dadd( -103.029, 37.388, -76.0749, 0.55 ) }
    dend_26 { pt3dadd( -103.507, 39.3665, -77.6005, 0.28 ) }
    dend_26 { pt3dadd( -103.61, 39.884, -77.8778, 0.83 ) }
    dend_26 { pt3dadd( -104.129, 42.5483, -79.143, 0.28 ) }
    dend_26 { pt3dadd( -104.244, 43.2034, -79.4193, 0.55 ) }
    dend_26 { pt3dadd( -104.622, 45.3822, -80.2381, 0.28 ) }
    dend_26 { pt3dadd( -104.752, 46.2113, -80.4779, 0.83 ) }
    dend_26 { pt3dadd( -105.67, 52.3105, -81.9551, 0.28 ) }
    dend_26 { pt3dadd( -105.875, 53.8607, -82.2657, 0.55 ) }
    dend_26 { pt3dadd( -106.754, 61.3929, -83.5212, 0.28 ) }
    dend_26 { pt3dadd( -106.861, 62.2982, -83.6658, 0.83 ) }
    dend_26 { pt3dadd( -108.063, 72.2695, -85.2713, 0.28 ) }
    dend_26 { pt3dadd( -108.237, 73.7398, -85.4951, 0.83 ) }
    dend_26 { pt3dadd( -108.66, 77.6429, -86.017, 0.28 ) }
    dend_26 { pt3dadd( -109.448, 84.7538, -86.8852, 0.28 ) }
    dend_26 { pt3dadd( -109.733, 87.233, -87.1528, 0.28 ) }
    dend_26 { pt3dadd( -109.846, 88.1532, -87.2692, 0.83 ) }
    dend_26 { pt3dadd( -110.122, 89.9331, -87.5229, 0.28 ) }
    dend_26 { pt3dadd( -110.475, 91.9558, -87.8735, 0.55 ) }
    dend_26 { pt3dadd( -110.812, 93.6022, -88.2692, 0.28 ) }
    dend_26 { pt3dadd( -111.003, 94.4735, -88.4995, 0.55 ) }
    dend_26 { pt3dadd( -111.355, 96.0254, -88.9243, 0.28 ) }
    dend_26 { pt3dadd( -111.586, 96.8496, -89.1077, 0.55 ) }
    dend_26 { pt3dadd( -113.078, 101.316, -89.9313, 0.28 ) }
    dend_26 { pt3dadd( -114.608, 105.075, -90.499, 0.28 ) }
    dend_26 { pt3dadd( -115.292, 106.578, -90.6823, 0.28 ) }
    dend_26 { pt3dadd( -115.771, 107.524, -90.7907, 1.11 ) }
    dend_26 { pt3dadd( -117.773, 111.116, -91.1711, 0.28 ) }
    dend_26 { pt3dadd( -118.321, 112.016, -91.2433, 0.55 ) }
    dend_26 { pt3dadd( -120.935, 115.807, -91.4415, 0.28 ) }
    dend_26 { pt3dadd( -121.114, 116.056, -91.4544, 0.55 ) }
    dend_26 { pt3dadd( -122.98, 118.84, -91.7013, 0.28 ) }
    dend_26 { pt3dadd( -123.204, 119.193, -91.7471, 0.83 ) }
    dend_26 { pt3dadd( -125.678, 123.124, -92.4209, 0.28 ) }
    dend_26 { pt3dadd( -126.324, 124.178, -92.5898, 0.55 ) }
    dend_26 { pt3dadd( -128.05, 127.02, -93.011, 0.28 ) }
    dend_26 { pt3dadd( -129.551, 129.529, -93.4011, 0.28 ) }
    dend_26 { pt3dadd( -131.581, 132.868, -93.9312, 0.28 ) }
    dend_26 { pt3dadd( -132.085, 133.664, -94.0621, 0.83 ) }
    dend_26 { pt3dadd( -133.764, 136.159, -94.4943, 0.28 ) }
    dend_26 { pt3dadd( -134.152, 136.707, -94.5582, 0.55 ) }
    dend_26 { pt3dadd( -137.008, 140.506, -94.7638, 0.28 ) }
    dend_26 { pt3dadd( -137.771, 141.447, -94.7635, 0.55 ) }
    dend_26 { pt3dadd( -138.863, 142.778, -94.6989, 0.28 ) }
    dend_26 { pt3dadd( -139.282, 143.298, -94.6435, 0.55 ) }
    dend_26 { pt3dadd( -141.45, 145.909, -94.1825, 0.28 ) }
    dend_26 { pt3dadd( -142.075, 146.762, -94.0168, 0.55 ) }
    dend_26 { pt3dadd( -142.804, 147.836, -93.7836, 0.28 ) }
    dend_26 { pt3dadd( -143.265, 148.621, -93.6438, 0.55 ) }
    dend_26 { pt3dadd( -144.697, 151.33, -93.2739, 0.28 ) }
    dend_26 { pt3dadd( -144.81, 151.582, -93.2613, 0.55 ) }
    dend_26 { pt3dadd( -146.619, 156.165, -93.3914, 0.28 ) }
    dend_26 { pt3dadd( -146.962, 157.175, -93.4259, 0.55 ) }
    dend_26 { pt3dadd( -147.424, 158.698, -93.4638, 0.28 ) }
    dend_26 { pt3dadd( -147.705, 159.734, -93.4767, 0.55 ) }
    dend_26 { pt3dadd( -148.932, 165.454, -93.622, 0.28 ) }
    dend_26 { pt3dadd( -149.113, 166.441, -93.6311, 0.55 ) }
    dend_26 { pt3dadd( -149.575, 169.389, -93.6359, 0.28 ) }
    dend_26 { pt3dadd( -149.763, 170.722, -93.6292, 0.83 ) }
    dend_26 { pt3dadd( -150.222, 174.184, -93.5807, 0.28 ) }
    dend_26 { pt3dadd( -150.82, 179.438, -93.3751, 0.28 ) }
    dend_26 { pt3dadd( -150.887, 180.191, -93.3031, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 79/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -84.075, 17.2255, -57.7819, 0.28 ) }
    dend_25 { pt3dadd( -85.3162, 17.5035, -57.6248, 0.28 ) }
    dend_25 { pt3dadd( -85.8519, 17.6235, -57.5569, 0.55 ) }
    dend_25 { pt3dadd( -87.3651, 17.9624, -57.3654, 0.28 ) }
    dend_25 { pt3dadd( -87.8377, 18.0682, -57.3056, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 84/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -1.80654, -26.2156, 7.93185, 1.66 ) }
    dend_10 { pt3dadd( -4.45322, -31.4107, 8.16905, 1.66 ) }
    dend_10 { pt3dadd( -7.46229, -37.3172, 8.43873, 1.66 ) }
    dend_10 { pt3dadd( -10.4069, -43.0971, 8.70264, 1.66 ) }
    dend_10 { pt3dadd( -13.2692, -48.7154, 8.95916, 1.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 89/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -1.80654, -26.2156, 7.93185, 0.83 ) }
    dend_7 { pt3dadd( 2.58936, -28.2185, 12.0699, 0.83 ) }
    dend_7 { pt3dadd( 4.34635, -29.3225, 13.9859, 0.55 ) }
    dend_7 { pt3dadd( 6.03178, -30.6102, 16.2244, 1.11 ) }
    dend_7 { pt3dadd( 7.32144, -31.8601, 18.2178, 0.55 ) }
    dend_7 { pt3dadd( 8.47912, -32.9821, 20.0073, 0.55 ) }
    dend_7 { pt3dadd( 10.8121, -35.2431, 23.6134, 0.28 ) }
    dend_7 { pt3dadd( 11.6698, -36.5222, 25.3213, 0.83 ) }
    dend_7 { pt3dadd( 13.1462, -38.6626, 28.4283, 0.83 ) }
    dend_7 { pt3dadd( 14.0399, -40.3103, 30.8021, 0.55 ) }
    dend_7 { pt3dadd( 21.1752, -44.8818, 38.2734, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_7 { pt3dadd( 26.6518, -50.5105, 46.3948, 0.55 ) }
    dend_7 { pt3dadd( 31.962, -58.0845, 52.881, 0.55 ) }
    dend_7 { pt3dadd( 35.8443, -65.4038, 60.5613, 0.55 ) }
    dend_7 { pt3dadd( 38.9663, -72.5182, 68.7632, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 4/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -4.36809, -15.311, 3.58954, 0.83 ) }
    dend_5 { pt3dadd( -4.68735, -15.3439, 3.50825, 0.83 ) }
    dend_5 { pt3dadd( -8.04275, -15.5815, 2.74811, 0.83 ) }
    dend_5 { pt3dadd( -11.3833, -15.799, 2.01825, 0.83 ) }
    dend_5 { pt3dadd( -13.9638, -15.8678, 1.45702, 0.83 ) }
    dend_5 { pt3dadd( -14.9811, -15.875, 1.23319, 0.83 ) }
    dend_5 { pt3dadd( -16.462, -15.8503, 0.910906, 1.11 ) }
    dend_5 { pt3dadd( -19.5463, -15.7804, 0.148316, 0.83 ) }
    dend_5 { pt3dadd( -21.3807, -15.6451, -0.378647, 0.83 ) }
    dend_5 { pt3dadd( -23.2243, -15.3749, -1.13972, 0.55 ) }
    dend_5 { pt3dadd( -24.2254, -15.1934, -1.75431, 0.55 ) }
    dend_5 { pt3dadd( -25.1953, -14.9941, -2.50397, 0.55 ) }
    dend_5 { pt3dadd( -27.1829, -14.6578, -4.43458, 0.55 ) }
    dend_5 { pt3dadd( -28.3244, -14.5863, -5.73313, 0.55 ) }
    dend_5 { pt3dadd( -29.9968, -14.5454, -7.88381, 0.55 ) }
    dend_5 { pt3dadd( -32.2441, -14.627, -10.8494, 0.55 ) }
    dend_5 { pt3dadd( -33.1789, -14.6902, -12.0392, 0.55 ) }
    dend_5 { pt3dadd( -34.4816, -14.8376, -13.7015, 0.28 ) }
    dend_5 { pt3dadd( -35.8369, -15.0524, -15.3692, 0.55 ) }
    dend_5 { pt3dadd( -37.0227, -15.3082, -16.7596, 0.28 ) }
    dend_5 { pt3dadd( -38.6536, -15.6353, -18.4735, 0.83 ) }
    dend_5 { pt3dadd( -39.7136, -15.8624, -19.4526, 0.28 ) }
    dend_5 { pt3dadd( -41.6593, -16.3236, -21.0913, 0.55 ) }
    dend_5 { pt3dadd( -43.307, -16.6733, -22.3423, 0.55 ) }
    dend_5 { pt3dadd( -44.8682, -17.0501, -23.433, 0.55 ) }
    dend_5 { pt3dadd( -46.0711, -17.412, -24.1869, 0.83 ) }
    dend_5 { pt3dadd( -48.5347, -18.2404, -25.6789, 0.55 ) }
    dend_5 { pt3dadd( -49.9371, -18.7061, -26.4367, 0.28 ) }
    dend_5 { pt3dadd( -50.392, -18.8538, -26.66, 0.83 ) }
    dend_5 { pt3dadd( -52.0257, -19.3977, -27.4723, 0.83 ) }
    dend_5 { pt3dadd( -53.2596, -19.8557, -28.1504, 0.55 ) }
    dend_5 { pt3dadd( -54.4793, -20.3368, -28.9116, 0.28 ) }
    dend_5 { pt3dadd( -56.9358, -21.3215, -30.4672, 0.55 ) }
    dend_5 { pt3dadd( -58.538, -22.0067, -31.4516, 0.28 ) }
    dend_5 { pt3dadd( -59.233, -22.3129, -31.847, 0.55 ) }
    dend_5 { pt3dadd( -60.6424, -22.9201, -32.5624, 0.28 ) }
    dend_5 { pt3dadd( -61.0749, -23.1025, -32.7408, 0.83 ) }
    dend_5 { pt3dadd( -62.9205, -23.9609, -33.3854, 0.28 ) }
    dend_5 { pt3dadd( -63.3338, -24.1987, -33.6121, 0.55 ) }
    dend_5 { pt3dadd( -65.3778, -25.5127, -34.8349, 0.28 ) }
    dend_5 { pt3dadd( -66.1541, -26.0678, -35.4098, 0.55 ) }
    dend_5 { pt3dadd( -67.0212, -26.6994, -36.0878, 0.28 ) }
    dend_5 { pt3dadd( -67.9497, -27.3667, -36.8569, 0.55 ) }
    dend_5 { pt3dadd( -71.6016, -29.8509, -40.3575, 0.28 ) }
    dend_5 { pt3dadd( -73.2099, -30.7976, -41.8723, 0.55 ) }
    dend_5 { pt3dadd( -75.2567, -31.9022, -43.7655, 0.28 ) }
    dend_5 { pt3dadd( -76.193, -32.3597, -44.6426, 0.55 ) }
    dend_5 { pt3dadd( -78.1692, -33.2297, -46.4033, 0.28 ) }
    dend_5 { pt3dadd( -79.7509, -33.7544, -47.5666, 0.55 ) }
    dend_5 { pt3dadd( -81.6447, -34.1586, -48.6216, 0.28 ) }
    dend_5 { pt3dadd( -82.3261, -34.2116, -49.0568, 0.55 ) }
    dend_5 { pt3dadd( -84.1487, -34.0934, -50.1823, 0.28 ) }
    dend_5 { pt3dadd( -84.5652, -33.9786, -50.5976, 0.55 ) }
    dend_5 { pt3dadd( -85.3585, -33.4844, -51.6954, 0.28 ) }
    dend_5 { pt3dadd( -85.6637, -33.2397, -52.069, 0.83 ) }
    dend_5 { pt3dadd( -87.1577, -31.6983, -53.7641, 0.28 ) }
    dend_5 { pt3dadd( -87.7734, -30.99, -54.2717, 0.83 ) }
    dend_5 { pt3dadd( -91.2132, -26.6494, -55.9362, 0.28 ) }
    dend_5 { pt3dadd( -91.4644, -26.2956, -56.0035, 0.83 ) }
    dend_5 { pt3dadd( -94.6795, -21.4377, -55.9766, 0.28 ) }
    dend_5 { pt3dadd( -95.0805, -20.8515, -55.8334, 1.11 ) }
    dend_5 { pt3dadd( -95.7162, -20.0684, -55.2123, 0.28 ) }
    dend_5 { pt3dadd( -96.0815, -19.6575, -54.7405, 0.55 ) }
    dend_5 { pt3dadd( -96.6096, -19.1318, -53.9544, 0.28 ) }
    dend_5 { pt3dadd( -96.9344, -18.7762, -53.4958, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 69/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -4.36809, -15.311, 3.58954, 0.55 ) }
    dend_2 { pt3dadd( -5.74722, -15.5207, 3.54246, 0.55 ) }
    dend_2 { pt3dadd( -7.59637, -15.9289, 3.5528, 0.55 ) }
    dend_2 { pt3dadd( -10.4751, -16.6021, 3.52508, 0.55 ) }
    dend_2 { pt3dadd( -12.2961, -17.0019, 3.47175, 0.55 ) }
    dend_2 { pt3dadd( -13.2116, -17.2029, 3.44493, 0.83 ) }
    dend_2 { pt3dadd( -15.2107, -17.6417, 3.38638, 0.83 ) }
    dend_2 { pt3dadd( -17.0993, -18.0374, 3.34812, 0.83 ) }
    dend_2 { pt3dadd( -18.2978, -18.3932, 3.34522, 0.55 ) }
    dend_2 { pt3dadd( -19.9925, -18.9595, 3.36051, 0.55 ) }
    dend_2 { pt3dadd( -27.6422, -21.1211, 4.07759, 0.55 ) }
    dend_2 { pt3dadd( -35.2715, -23.3857, 3.47006, 0.55 ) }
    dend_2 { pt3dadd( -43.1477, -24.662, 3.67363, 0.55 ) }
    dend_2 { pt3dadd( -51.0738, -25.595, 3.57339, 0.55 ) }
    dend_2 { pt3dadd( -58.9353, -26.619, 4.49701, 0.55 ) }
    dend_2 { pt3dadd( -66.486, -28.3492, 6.41996, 0.55 ) }
    dend_2 { pt3dadd( -74.0822, -28.7123, 8.84281, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 86/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 53.3617, 2.72836, -33.7707, 0.55 ) }
    dend_32 { pt3dadd( 54.5338, 3.47089, -33.7841, 0.55 ) }
    dend_32 { pt3dadd( 55.4316, 4.07477, -33.8151, 0.55 ) }
    dend_32 { pt3dadd( 56.7355, 4.97741, -33.8474, 0.28 ) }
    dend_32 { pt3dadd( 57.6102, 5.59055, -33.8674, 0.28 ) }
    dend_32 { pt3dadd( 58.006, 5.8671, -33.8723, 0.55 ) }
    dend_32 { pt3dadd( 59.6258, 6.98838, -33.8858, 0.28 ) }
    dend_32 { pt3dadd( 60.4894, 7.61696, -33.8636, 0.83 ) }
    dend_32 { pt3dadd( 61.4472, 8.35618, -33.8113, 0.28 ) }
    dend_32 { pt3dadd( 61.8272, 8.6502, -33.7369, 0.55 ) }
    dend_32 { pt3dadd( 62.5522, 9.16966, -33.5192, 0.28 ) }
    dend_32 { pt3dadd( 63.0694, 9.54298, -33.3381, 0.55 ) }
    dend_32 { pt3dadd( 64.5619, 10.635, -32.6925, 0.28 ) }
    dend_32 { pt3dadd( 65.3714, 11.1993, -32.2948, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_32 { pt3dadd( 67.442, 12.6376, -31.1658, 0.28 ) }
    dend_32 { pt3dadd( 68.2416, 13.1896, -30.6853, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 53.3617, 2.72836, -33.7707, 0.55 ) }
    dend_31 { pt3dadd( 54.5858, 1.6816, -32.7644, 0.55 ) }
    dend_31 { pt3dadd( 56.7085, 0.0688902, -31.046, 0.55 ) }
    dend_31 { pt3dadd( 57.5157, -0.30145, -30.0883, 0.83 ) }
    dend_31 { pt3dadd( 58.107, -0.491763, -29.3101, 0.28 ) }
    dend_31 { pt3dadd( 58.4713, -0.595952, -28.8099, 0.55 ) }
    dend_31 { pt3dadd( 59.8291, -0.99103, -26.8805, 0.28 ) }
    dend_31 { pt3dadd( 60.4618, -1.12282, -25.9463, 0.83 ) }
    dend_31 { pt3dadd( 63.6993, -1.57848, -20.8374, 0.28 ) }
    dend_31 { pt3dadd( 64.1882, -1.63568, -20.0885, 0.55 ) }
    dend_31 { pt3dadd( 64.9182, -1.74004, -19.0021, 0.28 ) }
    dend_31 { pt3dadd( 65.3005, -1.82164, -18.4221, 0.55 ) }
    dend_31 { pt3dadd( 66.3928, -2.2156, -16.755, 0.28 ) }
    dend_31 { pt3dadd( 66.5655, -2.3209, -16.5011, 0.55 ) }
    dend_31 { pt3dadd( 67.0706, -2.77629, -15.9052, 0.28 ) }
    dend_31 { pt3dadd( 67.6001, -3.16261, -15.2055, 0.55 ) }
    dend_31 { pt3dadd( 69.0263, -4.04145, -13.269, 0.28 ) }
    dend_31 { pt3dadd( 69.4178, -4.27375, -12.7239, 0.83 ) }
    dend_31 { pt3dadd( 70.8463, -5.11573, -10.6205, 0.28 ) }
    dend_31 { pt3dadd( 72.6614, -6.17479, -7.92559, 0.83 ) }
    dend_31 { pt3dadd( 75.3813, -7.67867, -3.90381, 0.28 ) }
    dend_31 { pt3dadd( 75.6295, -7.80012, -3.55658, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 24/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -13.2692, -48.7154, 8.95916, 1.11 ) }
    dend_16 { pt3dadd( -14.0735, -52.5236, 8.88298, 1.11 ) }
    dend_16 { pt3dadd( -14.4622, -54.7542, 8.86865, 1.11 ) }
    dend_16 { pt3dadd( -15.5798, -58.9419, 9.01228, 1.11 ) }
    dend_16 { pt3dadd( -17.0189, -63.6422, 9.22862, 1.11 ) }
    dend_16 { pt3dadd( -18.2923, -67.7672, 9.49686, 1.11 ) }
    dend_16 { pt3dadd( -19.6211, -71.9671, 9.824, 1.11 ) }
    dend_16 { pt3dadd( -22.4683, -80.0737, 10.7489, 1.11 ) }
    dend_16 { pt3dadd( -25.5748, -88.364, 11.8125, 1.11 ) }
    dend_16 { pt3dadd( -27.5734, -93.4723, 12.5236, 1.11 ) }
    dend_16 { pt3dadd( -29.3775, -98.0039, 13.1918, 1.11 ) }
    dend_16 { pt3dadd( -30.6921, -101.282, 13.6901, 1.11 ) }
    dend_16 { pt3dadd( -31.9948, -104.709, 14.2178, 1.11 ) }
    dend_16 { pt3dadd( -33.8052, -109.855, 14.9416, 1.11 ) }
    dend_16 { pt3dadd( -35.1201, -114.677, 15.4489, 1.11 ) }
    dend_16 { pt3dadd( -36.5695, -120.519, 15.93, 1.11 ) }
    dend_16 { pt3dadd( -37.3285, -124.109, 15.9844, 1.11 ) }
    dend_16 { pt3dadd( -38.1047, -128.919, 15.832, 1.11 ) }
    dend_16 { pt3dadd( -38.404, -132.415, 15.5684, 1.11 ) }
    dend_16 { pt3dadd( -38.5146, -135.933, 15.1687, 1.11 ) }
    dend_16 { pt3dadd( -38.5047, -140.015, 14.6091, 1.11 ) }
    dend_16 { pt3dadd( -38.3459, -145.76, 13.6728, 1.11 ) }
    dend_16 { pt3dadd( -37.8811, -155.677, 11.9722, 1.11 ) }
    dend_16 { pt3dadd( -37.2881, -162.172, 10.7927, 1.11 ) }
    dend_16 { pt3dadd( -36.9102, -166.872, 10.0404, 0.83 ) }
    dend_16 { pt3dadd( -36.6374, -170.078, 9.59716, 0.83 ) }
    dend_16 { pt3dadd( -36.138, -176.17, 8.97271, 0.83 ) }
    dend_16 { pt3dadd( -35.5003, -182.985, 8.5755, 0.83 ) }
    dend_16 { pt3dadd( -35.0404, -188.55, 8.38821, 0.83 ) }
    dend_16 { pt3dadd( -34.6471, -196.584, 8.37803, 0.83 ) }
    dend_16 { pt3dadd( -34.3738, -202.718, 8.5169, 0.83 ) }
    dend_16 { pt3dadd( -34.0987, -208.401, 8.97229, 0.83 ) }
    dend_16 { pt3dadd( -33.3848, -217.333, 10.7438, 0.83 ) }
    dend_16 { pt3dadd( -33.0526, -220.825, 11.5734, 0.83 ) }
    dend_16 { pt3dadd( -32.7875, -223.574, 12.3602, 0.83 ) }
    dend_16 { pt3dadd( -32.3464, -226.3, 13.2869, 0.83 ) }
    dend_16 { pt3dadd( -31.0613, -234.557, 16.7858, 0.83 ) }
    dend_16 { pt3dadd( -29.302, -242.452, 21.1521, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 62/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -13.2692, -48.7154, 8.95916, 0.83 ) }
    dend_11 { pt3dadd( -11.6021, -50.1556, 8.05293, 0.83 ) }
    dend_11 { pt3dadd( -9.83965, -51.6782, 7.09483, 0.83 ) }
    dend_11 { pt3dadd( -6.92958, -54.1923, 5.51289, 0.83 ) }
    dend_11 { pt3dadd( -6.57556, -54.4981, 5.32045, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 67/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 38.9663, -72.5182, 68.7632, 0.83 ) }
    dend_9 { pt3dadd( 44.2898, -78.5782, 76.6321, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 69/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 38.9663, -72.5182, 68.7632, 0.55 ) }
    dend_8 { pt3dadd( 41.5955, -75.9357, 73.9187, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 71/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -74.0822, -28.7123, 8.84281, 0.83 ) }
    dend_4 { pt3dadd( -84.2748, -29.0806, 3.12874, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 73/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -74.0822, -28.7123, 8.84281, 0.55 ) }
    dend_3 { pt3dadd( -79.148, -29.5188, 20.3623, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 75/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -29.302, -242.452, 21.1521, 0.55 ) }
    dend_18 { pt3dadd( -31.0056, -244.232, 20.9187, 0.55 ) }
    dend_18 { pt3dadd( -32.9732, -246.546, 20.5924, 0.55 ) }
    dend_18 { pt3dadd( -34.5097, -248.447, 20.3153, 0.28 ) }
    dend_18 { pt3dadd( -35.8976, -250.344, 19.9839, 0.55 ) }
    dend_18 { pt3dadd( -36.9575, -251.91, 19.7028, 0.28 ) }
    dend_18 { pt3dadd( -37.3211, -252.473, 19.6022, 0.55 ) }
    dend_18 { pt3dadd( -39.2887, -255.905, 19.0837, 0.28 ) }
    dend_18 { pt3dadd( -39.5198, -256.342, 19.0292, 0.83 ) }
    dend_18 { pt3dadd( -41.0241, -259.233, 18.7686, 0.28 ) }
    dend_18 { pt3dadd( -41.8479, -260.787, 18.6338, 0.28 ) }
    dend_18 { pt3dadd( -42.2889, -261.613, 18.5905, 0.55 ) }
    dend_18 { pt3dadd( -43.6189, -264.058, 18.5018, 0.28 ) }
    dend_18 { pt3dadd( -43.8464, -264.462, 18.5076, 0.55 ) }
    dend_18 { pt3dadd( -44.5577, -265.644, 18.5836, 0.28 ) }
    dend_18 { pt3dadd( -45.3318, -266.679, 18.8148, 0.83 ) }
    dend_18 { pt3dadd( -48.3303, -273.63, 17.519, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 92/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -29.302, -242.452, 21.1521, 0.55 ) }
    dend_17 { pt3dadd( -28.406, -244.12, 22.4282, 0.55 ) }
    dend_17 { pt3dadd( -27.8393, -245.066, 23.0673, 0.28 ) }
    dend_17 { pt3dadd( -27.56, -245.484, 23.3191, 0.55 ) }
    dend_17 { pt3dadd( -26.6536, -246.724, 24.0076, 0.55 ) }
    dend_17 { pt3dadd( -25.8555, -247.831, 24.5738, 0.55 ) }
    dend_17 { pt3dadd( -25.0177, -248.993, 25.1682, 0.55 ) }
    dend_17 { pt3dadd( -24.2287, -250.142, 25.6153, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( -23.7543, -250.76, 25.8402, 0.28 ) }
    dend_17 { pt3dadd( -23.3878, -251.192, 25.9798, 0.55 ) }
    dend_17 { pt3dadd( -22.113, -252.535, 26.2669, 0.28 ) }
    dend_17 { pt3dadd( -18.2225, -257.136, 29.0028, 0.28 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 4/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -6.57556, -54.4981, 5.32045, 0.28 ) }
    dend_15 { pt3dadd( -7.25389, -51.86, 4.89287, 0.28 ) }
    dend_15 { pt3dadd( -7.30236, -51.5998, 4.85183, 0.83 ) }
    dend_15 { pt3dadd( -7.50678, -50.073, 4.62302, 0.28 ) }
    dend_15 { pt3dadd( -7.55234, -49.2837, 4.54873, 0.83 ) }
    dend_15 { pt3dadd( -7.5146, -46.0887, 4.34934, 0.28 ) }
    dend_15 { pt3dadd( -7.49721, -45.3114, 4.27244, 0.55 ) }
    dend_15 { pt3dadd( -7.47186, -43.7878, 4.10307, 0.28 ) }
    dend_15 { pt3dadd( -7.43808, -43.0104, 4.00365, 0.55 ) }
    dend_15 { pt3dadd( -7.30764, -41.4669, 3.77534, 0.28 ) }
    dend_15 { pt3dadd( -7.12678, -40.1437, 3.61327, 0.55 ) }
    dend_15 { pt3dadd( -6.40642, -37.1997, 3.42436, 0.28 ) }
    dend_15 { pt3dadd( -6.25018, -36.3885, 3.32513, 0.55 ) }
    dend_15 { pt3dadd( -5.1477, -26.8998, 3.849, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 18/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -6.57556, -54.4981, 5.32045, 0.83 ) }
    dend_12 { pt3dadd( -6.89453, -57.3119, 5.47361, 0.83 ) }
    dend_12 { pt3dadd( -7.36433, -60.9323, 5.82831, 0.83 ) }
    dend_12 { pt3dadd( -7.63696, -62.8682, 6.05136, 0.83 ) }
    dend_12 { pt3dadd( -8.10104, -66.6418, 6.43652, 0.83 ) }
    dend_12 { pt3dadd( -8.53278, -71.6082, 6.74473, 0.83 ) }
    dend_12 { pt3dadd( -8.61235, -73.5348, 6.77435, 0.83 ) }
    dend_12 { pt3dadd( -8.59652, -75.9073, 6.74384, 0.83 ) }
    dend_12 { pt3dadd( -8.5075, -79.1133, 6.53202, 0.83 ) }
    dend_12 { pt3dadd( -8.33692, -82.1203, 6.17227, 0.83 ) }
    dend_12 { pt3dadd( -8.11864, -85.3375, 5.61348, 0.83 ) }
    dend_12 { pt3dadd( -7.93724, -89.4297, 4.69436, 0.83 ) }
    dend_12 { pt3dadd( -7.83607, -91.4435, 4.18789, 0.83 ) }
    dend_12 { pt3dadd( -7.40933, -97.9566, 2.38235, 0.83 ) }
    dend_12 { pt3dadd( -7.2888, -99.7673, 1.87395, 0.83 ) }
    dend_12 { pt3dadd( -7.00774, -104.802, 0.509316, 0.83 ) }
    dend_12 { pt3dadd( -6.80193, -108.128, -0.201159, 0.83 ) }
    dend_12 { pt3dadd( -6.43623, -112.251, -0.936729, 0.83 ) }
    dend_12 { pt3dadd( -6.23986, -114.266, -1.20247, 0.55 ) }
    dend_12 { pt3dadd( -6.02157, -117.318, -1.35353, 0.55 ) }
    dend_12 { pt3dadd( -5.90739, -119.347, -1.30611, 0.83 ) }
    dend_12 { pt3dadd( -5.63418, -125.141, -0.85145, 0.83 ) }
    dend_12 { pt3dadd( -5.52016, -128.711, -0.425707, 0.55 ) }
    dend_12 { pt3dadd( -5.5323, -132.838, 0.222567, 0.55 ) }
    dend_12 { pt3dadd( -5.68018, -137.551, 1.06859, 0.55 ) }
    dend_12 { pt3dadd( -5.85785, -140.796, 1.70126, 0.55 ) }
    dend_12 { pt3dadd( -6.42464, -147.586, 2.97993, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 45/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -6.42464, -147.586, 2.97993, 0.55 ) }
    dend_14 { pt3dadd( -6.34729, -149.625, 2.12428, 0.55 ) }
    dend_14 { pt3dadd( -6.4256, -152.169, 0.953213, 0.55 ) }
    dend_14 { pt3dadd( -6.80378, -157.754, -1.583, 0.55 ) }
    dend_14 { pt3dadd( -7.16033, -161.463, -3.20791, 0.55 ) }
    dend_14 { pt3dadd( -7.49386, -164.517, -4.49427, 0.55 ) }
    dend_14 { pt3dadd( -8.04059, -167.757, -5.93087, 0.55 ) }
    dend_14 { pt3dadd( -9.01815, -171.863, -7.81752, 0.55 ) }
    dend_14 { pt3dadd( -9.6814, -174.002, -8.82494, 0.55 ) }
    dend_14 { pt3dadd( -10.5629, -176.466, -9.96249, 0.55 ) }
    dend_14 { pt3dadd( -11.2039, -178.395, -10.9239, 0.83 ) }
    dend_14 { pt3dadd( -12.6575, -183.304, -13.2242, 0.55 ) }
    dend_14 { pt3dadd( -12.9017, -184.313, -13.6741, 0.55 ) }
    dend_14 { pt3dadd( -13.356, -186.829, -14.7318, 0.55 ) }
    dend_14 { pt3dadd( -13.9901, -191.274, -16.6, 0.55 ) }
    dend_14 { pt3dadd( -14.274, -194.134, -17.7233, 0.55 ) }
    dend_14 { pt3dadd( -14.5388, -198.882, -19.3629, 0.55 ) }
    dend_14 { pt3dadd( -14.5314, -201.031, -19.9809, 0.83 ) }
    dend_14 { pt3dadd( -14.5399, -202.414, -20.3695, 0.28 ) }
    dend_14 { pt3dadd( -14.5515, -202.824, -20.4781, 0.55 ) }
    dend_14 { pt3dadd( -14.6287, -204.097, -20.77, 0.28 ) }
    dend_14 { pt3dadd( -14.6733, -205.03, -20.989, 0.55 ) }
    dend_14 { pt3dadd( -14.6578, -206.942, -21.5629, 0.28 ) }
    dend_14 { pt3dadd( -14.4372, -209.89, -22.7024, 0.55 ) }
    dend_14 { pt3dadd( -14.0415, -212.946, -24.1586, 0.28 ) }
    dend_14 { pt3dadd( -13.8892, -213.736, -24.6079, 0.83 ) }
    dend_14 { pt3dadd( -13.1849, -216.644, -26.5972, 0.28 ) }
    dend_14 { pt3dadd( -12.8059, -217.931, -27.6002, 0.55 ) }
    dend_14 { pt3dadd( -12.1645, -219.721, -29.1701, 0.55 ) }
    dend_14 { pt3dadd( -11.5403, -221.22, -30.6817, 0.55 ) }
    dend_14 { pt3dadd( -10.8282, -222.751, -32.3658, 0.55 ) }
    dend_14 { pt3dadd( -10.0963, -224.354, -34.139, 0.28 ) }
    dend_14 { pt3dadd( -9.91279, -224.819, -34.6239, 0.55 ) }
    dend_14 { pt3dadd( -9.48251, -226.227, -35.9082, 0.28 ) }
    dend_14 { pt3dadd( -9.40546, -226.562, -36.1708, 0.55 ) }
    dend_14 { pt3dadd( -9.04412, -228.321, -37.4416, 0.28 ) }
    dend_14 { pt3dadd( -8.97528, -228.827, -37.7766, 0.83 ) }
    dend_14 { pt3dadd( -8.53934, -233.025, -40.4594, 0.28 ) }
    dend_14 { pt3dadd( -8.53646, -233.292, -40.6403, 0.55 ) }
    dend_14 { pt3dadd( -8.64953, -235.965, -42.5693, 0.28 ) }
    dend_14 { pt3dadd( -8.72169, -236.742, -43.1506, 0.55 ) }
    dend_14 { pt3dadd( -9.00502, -238.921, -44.8067, 0.28 ) }
    dend_14 { pt3dadd( -9.03434, -239.168, -44.9938, 0.55 ) }
    dend_14 { pt3dadd( -9.51525, -243.124, -48.0823, 0.28 ) }
    dend_14 { pt3dadd( -9.58497, -243.847, -48.6317, 0.55 ) }
    dend_14 { pt3dadd( -9.73856, -245.826, -50.0335, 0.28 ) }
    dend_14 { pt3dadd( -9.80652, -247.301, -51.0703, 0.83 ) }
    dend_14 { pt3dadd( -9.80152, -250.567, -53.2889, 0.28 ) }
    dend_14 { pt3dadd( -9.80152, -250.567, -53.2889, 0.55 ) }
    dend_14 { pt3dadd( -9.77361, -252.002, -54.3711, 0.55 ) }
    dend_14 { pt3dadd( -9.73648, -253.202, -55.3284, 0.55 ) }
    dend_14 { pt3dadd( -9.51072, -256.674, -58.3136, 0.28 ) }
    dend_14 { pt3dadd( -9.43917, -257.636, -59.1916, 0.55 ) }
    dend_14 { pt3dadd( -9.15533, -260.134, -61.6504, 0.28 ) }
    dend_14 { pt3dadd( -8.9686, -261.354, -62.8713, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( -8.68272, -263.118, -64.8151, 0.55 ) }
    dend_14 { pt3dadd( -8.57923, -263.638, -65.4104, 0.28 ) }
    dend_14 { pt3dadd( -8.51642, -263.923, -65.718, 0.55 ) }
    dend_14 { pt3dadd( -8.20115, -265.465, -67.3019, 0.28 ) }
    dend_14 { pt3dadd( -8.11478, -266.085, -67.9942, 0.55 ) }
    dend_14 { pt3dadd( -7.76576, -269.668, -72.1839, 0.28 ) }
    dend_14 { pt3dadd( -7.79542, -270.742, -73.5505, 0.83 ) }
    dend_14 { pt3dadd( -7.90308, -271.751, -74.8607, 0.28 ) }
    dend_14 { pt3dadd( -7.95958, -272.143, -75.3766, 0.55 ) }
    dend_14 { pt3dadd( -8.68075, -275.633, -80.0531, 0.28 ) }
    dend_14 { pt3dadd( -8.96867, -276.862, -81.8016, 0.55 ) }
    dend_14 { pt3dadd( -9.72326, -279.279, -85.4116, 0.28 ) }
    dend_14 { pt3dadd( -9.86325, -279.581, -85.9374, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 13/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -6.42464, -147.586, 2.97993, 0.55 ) }
    dend_13 { pt3dadd( -6.5618, -149.872, 3.68722, 0.55 ) }
    dend_13 { pt3dadd( -6.61867, -151.8, 4.25198, 0.28 ) }
    dend_13 { pt3dadd( -6.66656, -152.956, 4.5826, 0.83 ) }
    dend_13 { pt3dadd( -6.75416, -155.131, 5.27311, 0.28 ) }
    dend_13 { pt3dadd( -6.79349, -155.677, 5.43332, 0.83 ) }
    dend_13 { pt3dadd( -7.01781, -158.018, 6.1926, 0.28 ) }
    dend_13 { pt3dadd( -7.05223, -158.289, 6.27379, 0.55 ) }
    dend_13 { pt3dadd( -7.22978, -159.255, 6.56983, 0.55 ) }
    dend_13 { pt3dadd( -7.54415, -160.601, 7.0181, 0.28 ) }
    dend_13 { pt3dadd( -7.96641, -162.25, 7.54276, 0.55 ) }
    dend_13 { pt3dadd( -8.74178, -165.282, 8.61188, 0.28 ) }
    dend_13 { pt3dadd( -9.09388, -166.718, 9.15629, 0.83 ) }
    dend_13 { pt3dadd( -9.63249, -168.94, 10.0315, 0.28 ) }
    dend_13 { pt3dadd( -10.1276, -171.096, 10.9225, 0.28 ) }
    dend_13 { pt3dadd( -10.6746, -173.353, 11.9106, 0.28 ) }
    dend_13 { pt3dadd( -11.2113, -175.514, 12.973, 0.83 ) }
    dend_13 { pt3dadd( -11.6541, -177.183, 13.7877, 0.28 ) }
    dend_13 { pt3dadd( -12.1075, -178.94, 14.7082, 0.83 ) }
    dend_13 { pt3dadd( -12.5928, -180.687, 15.633, 0.28 ) }
    dend_13 { pt3dadd( -12.7927, -181.424, 16.0435, 0.28 ) }
    dend_13 { pt3dadd( -13.4016, -183.057, 17.0506, 0.55 ) }
    dend_13 { pt3dadd( -14.1203, -184.703, 17.8992, 0.55 ) }
    dend_13 { pt3dadd( -16.8389, -193.632, 21.9816, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_42, dend_41, dend_40, dend_39, dend_34, dend_27, dend_22, dend_19, dend_0, dend_38, dend_35, dend_29, dend_28, dend_24, dend_23, dend_21, dend_20, dend_6, dend_1, dend_37, dend_36, dend_33, dend_30, dend_26, dend_25, dend_10, dend_7, dend_5, dend_2, dend_32, dend_31, dend_16, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17, dend_15, dend_12, dend_14, dend_13]}
    ModelViewParmSubset_2 = new SectionList()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_42, dend_41, dend_40, dend_39, dend_34, dend_27, dend_22, dend_19, dend_0, dend_38, dend_35, dend_29, dend_28, dend_24, dend_23, dend_21, dend_20, dend_6, dend_1, dend_37, dend_36, dend_33, dend_30, dend_26, dend_25, dend_10, dend_7, dend_5, dend_2, dend_32, dend_31, dend_16, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17, dend_15, dend_12, dend_14, dend_13]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_42 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_41 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_40 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_39 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_34 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_38 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_24 OneSecGrp_SectionRef_16.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_21 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_37 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_33 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_26 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_7 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_5 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_2 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_16 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_14 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_13 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_0 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_27 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_1 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_28 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_22 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_6 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_19 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_29 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_10 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_20 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_11 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_32 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_35 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_15 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_36 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_3 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_25 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_8 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_9 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_17 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_18 OneSecGrp_SectionRef_41.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_6, dend_6, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    axon_0 all.append()
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_42 nseg = 9
    dend_41 nseg = 3
    dend_40 nseg = 3
    dend_39 nseg = 9
    dend_34 nseg = 3
    dend_38 nseg = 3
    dend_24 nseg = 5
    dend_23 nseg = 5
    dend_21 nseg = 3
    dend_37 nseg = 3
    dend_33 nseg = 5
    dend_26 nseg = 9
    dend_7 nseg = 5
    dend_5 nseg = 7
    dend_2 nseg = 3
    dend_16 nseg = 11
    dend_12 nseg = 5
    dend_14 nseg = 9
    dend_13 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L4_NBC_bfc793de90_0_0


