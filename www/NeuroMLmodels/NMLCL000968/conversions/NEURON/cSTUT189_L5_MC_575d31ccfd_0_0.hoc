// Cell: cSTUT189_L5_MC_575d31ccfd_0_0
/*
{
  "id" : "cSTUT189_L5_MC_575d31ccfd_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-10.7304, -0.873466, 0.0, 2.87054", "-9.6745, -0.74567, 0.0, 5.00777", "-8.61857, -0.617875, 0.0, 6.72434", "-7.56263, -0.490079, 0.0, 8.00365", "-6.5067, -0.362283, 0.0, 9.09761", "-5.45077, -0.234487, 0.0, 10.1793", "-4.39483, -0.106692, 0.0, 11.1366", "-3.3389, 0.021104, 0.0, 11.7855", "-2.28296, 0.1489, 0.0, 12.3612", "-1.22703, 0.276695, 0.0, 12.8218", "-0.171095, 0.404491, 0.0, 12.9777", "0.884839, 0.532287, 0.0, 12.7621", "1.94077, 0.660083, 0.0, 12.4756", "2.99671, 0.787878, 0.0, 12.1076", "4.05264, 0.915674, 0.0, 11.5969", "5.10858, 1.04347, 0.0, 10.956", "6.16451, 1.17127, 0.0, 10.0344", "7.22044, 1.29906, 0.0, 8.74098", "8.27638, 1.42686, 0.0, 7.28149", "9.33231, 1.55465, 0.0, 5.39697", "10.3882, 1.68245, 0.0, 3.02868" ]
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-9.48889, 0.159882, 10.77, 1.25", "-9.48889, 0.159882, 10.77, 1.25", "-10.6339, 0.0324668, 12.4145, 1.18", "-11.5894, 0.0344744, 14.0201, 1.33", "-12.7218, 0.198516, 16.3429, 1.55", "-13.7315, 0.560557, 18.922, 1.77", "-14.3934, 0.987307, 21.0075, 1.92", "-14.757, 1.49263, 22.7114, 1.92", "-14.984, 2.37551, 24.8584, 1.55", "-15.0307, 3.3051, 26.762, 1.33", "-14.911, 4.30972, 28.4451, 1.4", "-14.701, 5.21038, 29.6975, 1.55", "-14.39, 6.27311, 30.9883, 1.84", "-14.0409, 7.42853, 32.2794, 2.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999999322079115
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "6.08109, -2.74562, -7.15, 4.06", "6.08109, -2.74562, -7.15, 4.06", "6.04352, -3.71818, -7.39915, 2.43", "5.92708, -5.11601, -7.79818, 2.58", "5.74808, -7.0109, -8.38082, 2.58", "5.62909, -8.27058, -8.76815, 2.8", "5.54368, -9.17476, -9.04617, 3.02", "5.38827, -10.8394, -9.5812, 3.02", "5.22577, -12.6231, -10.2058, 3.32", "5.03245, -14.2057, -10.8115, 4.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999999322079115
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "10.6111, 1.76864, -10.71, 2.21", "10.6111, 1.76864, -10.71, 2.21", "12.22, 2.1759, -11.2474, 1.55", "13.9571, 2.488, -11.8882, 1.03", "14.9754, 2.58965, -12.3138, 1.18", "16.412, 2.63815, -13.0072, 1.62", "17.438, 2.61517, -13.5973, 1.99", "18.5271, 2.47479, -14.4026, 1.84", "19.765, 2.12401, -15.5555, 1.11", "20.7199, 1.69185, -16.5824, 1.25", "21.4844, 1.23705, -17.4726, 1.25", "22.4004, 0.565193, -18.5385, 1.47", "23.4324, -0.290191, -19.6364, 1.4", "24.077, -0.867691, -20.2171, 1.25", "25.0132, -1.74556, -20.9015, 1.03", "26.1253, -2.82869, -21.5138, 1.03", "27.1008, -3.81301, -21.9034, 1.33", "28.2326, -5.11071, -22.2197, 1.25", "29.0319, -6.21226, -22.3797, 1.33", "29.7207, -7.36759, -22.5217, 1.62", "30.1899, -8.27947, -22.6451, 1.7", "30.2867, -8.4882, -22.6811, 1.7", "31.0178, -10.1064, -23.1386, 1.18", "31.5223, -11.1332, -23.6177, 1.03", "31.9638, -11.7892, -24.1333, 0.74", "32.5107, -12.352, -24.8632, 0.96", "33.1953, -12.8413, -25.8297, 1.03", "33.9437, -13.2754, -26.8863, 1.4", "34.6793, -13.5748, -27.9185, 1.55", "35.643, -13.8751, -29.3397, 1.33", "36.4321, -14.0945, -30.5974, 0.96", "37.0505, -14.2476, -31.6422, 0.96" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999999322079115,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "8.9411, 5.14213, -0.18, 2.21", "8.9411, 5.14213, -0.18, 2.21", "10.2207, 5.93263, 0.32814, 1.55", "11.6704, 6.70688, 0.994865, 1.92", "12.9184, 7.29694, 1.62979, 1.84", "14.0451, 7.78549, 2.26783, 1.62", "15.3837, 8.35098, 3.16406, 1.7", "16.6815, 8.83664, 4.11255, 1.55", "17.7658, 9.17514, 4.97645, 1.7", "19.0633, 9.52523, 6.06625, 1.99", "20.2099, 9.83347, 7.0168, 1.47", "22.4234, 10.4813, 8.77964, 1.7", "23.3811, 10.7823, 9.54625, 1.84", "24.6745, 11.1969, 10.552, 1.7", "26.0139, 11.6352, 11.5514, 1.47", "27.1458, 12.0095, 12.3319, 1.77", "28.6756, 12.5044, 13.2128, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999999322079115
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-10.6189, -2.06312, 7.6, 1.99", "-10.6189, -2.06312, 7.6, 1.99", "-11.6844, -2.28094, 6.38071, 1.84", "-12.7819, -2.45912, 5.20671, 1.92", "-13.5523, -2.57344, 4.41059, 1.92", "-14.6598, -2.74555, 3.32952, 1.77", "-16.2143, -3.03129, 1.91362, 1.7", "-17.9011, -3.37048, 0.490449, 1.47", "-19.4282, -3.70779, -0.688909, 1.18", "-20.7421, -4.0293, -1.59854, 1.47", "-22.228, -4.4634, -2.49562, 1.47", "-23.701, -4.95873, -3.2797, 1.33", "-24.6726, -5.31829, -3.75953, 1.55", "-25.9767, -5.82885, -4.43344, 1.62", "-27.2228, -6.30732, -5.07515, 2.58", "-29.2257, -7.05241, -6.11166, 1.33", "-30.412, -7.50066, -6.71688, 1.47", "-31.9213, -8.09487, -7.43531, 1.33", "-33.7282, -8.87641, -8.13998, 1.62", "-34.8922, -9.44604, -8.46308, 1.7", "-36.8656, -10.5481, -8.76696, 1.55", "-38.7717, -11.7484, -8.76643, 1.11", "-39.9487, -12.5619, -8.63143, 1.55", "-41.6176, -13.7548, -8.23633, 1.4", "-43.1102, -14.7786, -7.73168, 1.25", "-44.1524, -15.4299, -7.34163, 1.55", "-45.1608, -15.9582, -6.92455, 1.99", "-46.5516, -16.5323, -6.39235, 1.33", "-48.1729, -17.0668, -5.89437, 1.11", "-49.6879, -17.4697, -5.54387, 1.4", "-50.9551, -17.7712, -5.32964, 1.25", "-52.503, -18.1565, -5.16471, 1.11", "-54.04, -18.6112, -5.09884, 1.33", "-54.9864, -18.9939, -5.14288, 1.7", "-56.6151, -19.9261, -5.52186, 1.33", "-57.4626, -20.5514, -5.885, 1.62", "-58.272, -21.243, -6.31528, 1.99", "-59.1298, -22.0808, -6.89874, 1.92", "-60.3462, -23.4215, -7.90946, 1.33", "-61.1961, -24.494, -8.7532, 1.47", "-61.7951, -25.4074, -9.55363, 1.99" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999999322079115,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "10.3882, 1.68245, 0.0, 0.710197", "25.2795, 3.4847, 0.0, 0.710197", "40.1709, 5.28695, 0.0, 0.710197" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-14.0409, 7.42853, 32.2794, 1.4", "-13.5244, 8.42926, 33.567, 1.4", "-12.648, 9.94328, 35.2511, 1.4", "-11.9673, 11.0235, 36.2894, 1.33", "-11.157, 12.2159, 37.3341, 1.11", "-10.2447, 13.3704, 38.2855, 0.52", "-9.64028, 14.0351, 38.8409, 0.37", "-8.87624, 14.7159, 39.3196, 0.88", "-8.05532, 15.2771, 39.6651, 1.62", "-7.56168, 15.4541, 39.8842, 1.62", "-6.66549, 15.017, 41.0133, 0.44", "-6.35843, 14.5588, 41.851, 0.44", "-6.08222, 13.9534, 42.8955, 0.44", "-5.82529, 13.3226, 44.0204, 0.74", "-5.45709, 12.4417, 45.6547, 1.11", "-5.12199, 11.7909, 47.0416, 1.25", "-4.82399, 11.5124, 47.9157, 1.25", "-4.26599, 11.4891, 48.6801, 0.44", "-3.51676, 11.6719, 49.2297, 0.44", "-2.53017, 11.9604, 49.747, 0.59", "-1.42912, 12.2721, 50.2057, 0.88", "0.65529, 12.8348, 51.0251, 0.52", "1.55773, 13.0533, 51.3961, 0.52", "2.77532, 13.2999, 51.9262, 0.74", "3.98165, 13.4657, 52.4754, 0.88", "5.45462, 13.5773, 53.2212, 0.52", "6.41644, 13.608, 53.7336, 0.96", "7.48646, 13.6616, 54.3116, 1.62", "8.39701, 13.7675, 54.7912, 1.03", "9.86633, 14.0931, 55.4861, 0.52", "11.0228, 14.4738, 56.0009, 1.4", "12.2084, 14.9917, 56.4906, 2.21", "13.6604, 15.7525, 57.0652, 0.29", "14.1921, 16.0701, 57.2818, 0.29", "15.4262, 16.8769, 57.8303, 0.29", "16.4106, 17.5788, 58.3286, 0.44", "17.3008, 18.2145, 58.8949, 0.96", "18.382, 18.9153, 59.7726, 1.33", "19.524, 19.532, 60.8026, 1.77", "20.5962, 20.0215, 61.8286, 1.33", "21.7241, 20.4594, 63.0276, 0.96", "23.2212, 20.953, 64.7343, 0.59", "24.3885, 21.2696, 66.2677, 0.37", "25.0156, 21.4195, 67.2683, 0.66", "25.3099, 21.4916, 67.8941, 0.66", "25.6257, 21.5994, 68.7108, 0.66", "25.7261, 21.6632, 68.9764, 0.66", "26.1569, 22.1112, 70.1078, 0.66", "26.6526, 22.7924, 71.4672, 0.52", "27.3375, 23.8786, 73.4316, 1.18", "27.6819, 24.4967, 74.3965, 1.47", "28.3009, 25.7362, 76.101, 0.44", "28.5999, 26.4235, 76.975, 0.44", "28.8397, 27.1708, 77.8942, 0.44", "28.9672, 27.8087, 78.6859, 0.96", "29.0718, 28.924, 80.0751, 1.62", "29.0878, 29.8949, 81.2881, 1.77", "29.0704, 30.7056, 82.2488, 1.18", "29.1072, 32.296, 84.0643, 0.74", "29.2019, 33.1118, 85.0049, 0.74", "29.3994, 33.9642, 86.0572, 0.59", "29.7818, 34.8547, 87.2875, 0.44", "30.2641, 35.6146, 88.4166, 0.29", "31.0445, 36.5676, 89.8625, 0.81", "31.7236, 37.3005, 90.9494, 1.7", "32.1861, 37.7965, 91.6983, 1.7", "32.8262, 38.5474, 92.8312, 0.44", "33.3998, 39.2903, 93.9278, 0.44", "33.813, 39.9405, 94.7977, 0.44", "34.2122, 40.7182, 95.6397, 1.11", "34.3924, 41.1151, 96.0039, 1.11", "34.8775, 42.3953, 97.0416, 0.29", "35.0874, 43.0988, 97.5513, 0.29", "35.3012, 43.8512, 98.0577, 0.29", "35.4443, 44.3949, 98.4233, 1.18", "35.6942, 45.1564, 98.955, 1.47" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-14.0409, 7.42853, 32.2794, 0.81", "-15.4964, 7.56751, 32.4722, 0.81", "-16.7098, 7.73631, 32.6416, 0.81", "-17.8813, 7.95824, 32.7929, 0.96", "-19.2996, 8.25362, 32.9581, 1.25", "-20.8611, 8.56811, 33.0947, 1.62", "-22.1947, 8.82386, 33.2182, 1.62", "-23.3382, 9.05985, 33.335, 1.62", "-25.289, 9.51327, 33.5361, 1.18", "-26.673, 9.87924, 33.668, 1.4", "-28.4764, 10.393, 33.8688, 1.33", "-30.2996, 10.9476, 34.1386, 0.96", "-31.5031, 11.3271, 34.3434, 0.96", "-32.9626, 11.792, 34.5977, 1.62", "-34.4208, 12.2559, 34.8548, 2.14", "-35.7069, 12.6648, 35.0692, 2.14", "-37.4676, 13.2582, 35.3733, 0.96", "-38.4622, 13.5888, 35.5154, 1.4", "-40.0948, 14.0736, 35.7264, 1.92", "-41.461, 14.4173, 35.8733, 2.06", "-42.7059, 14.6577, 35.9309, 2.06" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "5.03245, -14.2057, -10.8115, 2.58", "5.94527, -15.33, -11.1553, 2.58", "6.95527, -16.5683, -11.5275, 1.4", "8.02477, -17.8198, -11.9125, 1.47", "9.151, -19.1133, -12.3204, 1.47", "10.1558, -20.256, -12.6734, 1.47", "10.9059, -21.1152, -12.9317, 1.47", "11.7282, -22.0598, -13.2147, 1.7", "13.018, -23.5621, -13.6255, 1.18", "13.6298, -24.3272, -13.7994, 1.47", "14.2899, -25.2585, -13.9554, 1.7", "15.1515, -26.6494, -14.0664, 1.7", "15.6275, -27.5042, -14.0715, 1.77", "16.3468, -28.985, -13.9775, 1.25", "16.8924, -30.3174, -13.7885, 1.55", "17.4347, -31.7859, -13.5169, 1.4", "17.9186, -33.1628, -13.2417, 1.7", "18.3741, -34.4737, -12.9592, 1.7", "18.9311, -36.0576, -12.5954, 1.47", "19.5003, -37.6044, -12.2069, 1.4", "19.94, -38.7382, -11.9188, 1.55", "20.7323, -40.6956, -11.4464, 1.25", "21.2953, -42.1138, -11.1585, 1.55", "21.7421, -43.3046, -10.9238, 1.99", "22.0236, -43.9997, -10.7873, 1.99" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "5.03245, -14.2057, -10.8115, 1.7", "3.68236, -15.8376, -11.5056, 1.7", "2.90051, -16.8319, -11.809, 1.62", "1.85041, -18.2065, -12.0523, 1.4", "1.13348, -19.1722, -12.1044, 1.7", "0.34576, -20.2838, -12.0351, 1.84", "-0.386841, -21.3365, -11.8725, 1.7", "-1.37411, -22.7879, -11.5177, 2.21", "-2.52655, -24.3912, -10.9954, 1.62", "-3.48775, -25.6229, -10.5561, 1.47", "-4.49802, -26.7823, -10.1133, 1.62", "-5.22542, -27.5308, -9.87207, 1.7", "-6.55263, -28.7572, -9.64979, 1.47", "-7.52416, -29.5755, -9.64565, 1.62", "-8.66229, -30.4405, -9.73584, 1.62", "-9.40636, -30.9553, -9.82842, 1.7", "-11.1668, -32.1252, -10.0498, 1.47", "-12.4509, -33.0055, -10.1595, 1.84", "-13.4494, -33.7401, -10.1802, 2.21", "-14.7381, -34.7506, -10.212, 1.7", "-15.8476, -35.6477, -10.2764, 1.7", "-16.892, -36.5053, -10.3988, 1.47", "-17.6493, -37.115, -10.5319, 1.55", "-18.8906, -38.1681, -10.8561, 1.33", "-19.8692, -39.0971, -11.2241, 1.47", "-20.9949, -40.3331, -11.8158, 1.25", "-21.7832, -41.3729, -12.3777, 1.33", "-22.7396, -42.8988, -13.3509, 0.96", "-23.1347, -43.7335, -13.9602, 1.33", "-23.4066, -44.6061, -14.6619, 1.62", "-23.5122, -45.3273, -15.2929, 1.62", "-23.5269, -46.4149, -16.3213, 1.25", "-23.493, -47.4364, -17.3429, 1.25", "-23.4717, -48.4736, -18.4309, 1.4", "-23.5301, -49.2455, -19.207, 1.47", "-23.7116, -50.3636, -20.2627, 1.47", "-23.9321, -51.2891, -21.0867, 1.47", "-24.221, -52.2779, -21.9356, 1.7", "-24.417, -52.9259, -22.4745, 1.84", "-24.9373, -54.4376, -23.7113, 1.33", "-25.3103, -55.4347, -24.5311, 1.4", "-25.7057, -56.3419, -25.3079, 1.55", "-26.1868, -57.2993, -26.1854, 1.99", "-26.7181, -58.1681, -26.9984, 2.06", "-27.6691, -59.4568, -28.1144, 1.47", "-28.702, -60.653, -28.9897, 1.7", "-29.8316, -61.9016, -29.6535, 1.33", "-30.8141, -62.9996, -30.0183, 1.33", "-32.2481, -64.6553, -30.3407, 1.11", "-33.434, -66.1497, -30.5121, 1.4", "-34.4336, -67.6497, -30.6306, 1.25", "-35.1171, -68.9093, -30.7467, 1.33", "-35.6138, -70.1714, -30.9823, 1.33", "-35.9716, -71.624, -31.4619, 1.25", "-36.1853, -73.0168, -32.1272, 1.25", "-36.3324, -74.45, -32.9918, 1.25", "-36.4277, -75.7484, -33.9411, 1.4", "-36.4885, -77.1353, -35.0999, 1.84", "-36.4887, -78.3463, -36.1899, 1.18", "-36.4607, -79.3867, -37.1273, 1.18" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "37.0505, -14.2476, -31.6422, 0.52", "38.2778, -14.7572, -32.2249, 0.52", "39.0028, -15.0907, -32.545, 0.52", "39.8168, -15.4686, -32.9085, 0.52", "40.8204, -15.883, -33.3729, 0.96", "41.6902, -16.1817, -33.7592, 0.52", "42.6266, -16.4145, -34.1517, 0.81", "43.3845, -16.5274, -34.4962, 0.81", "44.359, -16.4947, -34.8759, 0.74", "45.4888, -15.9913, -35.1993, 0.88", "46.1276, -15.2352, -35.3043, 0.74", "46.7172, -14.1564, -35.3896, 0.74", "47.437, -12.4961, -35.4708, 0.59", "47.9096, -11.2532, -35.5398, 1.03", "48.4682, -9.60969, -35.6609, 0.81", "48.8523, -8.33312, -35.8282, 0.96", "49.1803, -7.27679, -36.0773, 0.96", "49.7769, -5.68249, -36.6436, 0.66", "50.3096, -4.61624, -37.1781, 0.66", "50.7874, -3.8682, -37.6741, 0.74", "51.6365, -2.84943, -38.4862, 0.81", "52.5683, -1.94582, -39.3028, 0.59", "53.3781, -1.31539, -39.904, 1.03", "54.293, -0.776365, -40.4168, 1.11", "55.2892, -0.358619, -40.7144, 0.81", "56.2991, -0.0730579, -40.8168, 0.88", "57.1757, 0.0694925, -40.7702, 0.74", "58.3047, 0.131768, -40.5832, 0.74", "59.8722, 0.0809453, -40.1911, 0.88", "61.4327, -0.119402, -39.6651, 0.74", "62.5936, -0.413468, -39.1983, 0.66", "63.6963, -0.829992, -38.7042, 0.59", "64.9447, -1.42159, -38.1226, 0.74", "65.7324, -1.85815, -37.7655, 0.81", "66.7982, -2.51128, -37.2776, 0.66", "68.1731, -3.36505, -36.6502, 0.59", "69.191, -3.93748, -36.2107, 1.11", "70.508, -4.53373, -35.727, 1.03", "71.3653, -4.8312, -35.5069, 1.03", "72.5744, -5.12906, -35.3427, 1.11", "74.1074, -5.34761, -35.3365, 0.81", "75.4286, -5.41558, -35.4781, 0.81", "77.047, -5.40037, -35.798, 0.66", "78.8703, -5.23393, -36.2916, 0.74", "79.7789, -5.07818, -36.5771, 1.18", "80.9076, -4.7701, -36.9729, 1.18", "81.8169, -4.37218, -37.2878, 1.18", "82.4811, -3.95207, -37.4768, 1.18", "83.6042, -3.02066, -37.7093, 0.52", "84.4308, -2.20301, -37.8432, 0.52", "85.2493, -1.28758, -38.0052, 0.66", "86.457, 0.139742, -38.333, 0.81", "87.5698, 1.44421, -38.7827, 0.59", "88.1588, 2.05083, -39.071, 0.59", "89.039, 2.79287, -39.5904, 0.81", "89.6117, 3.17666, -39.9811, 0.81", "90.6136, 3.71246, -40.7714, 0.66", "91.468, 4.07084, -41.5245, 0.59", "92.6379, 4.48079, -42.5789, 0.52", "93.1597, 4.63128, -43.0207, 0.66", "94.0346, 4.85696, -43.7094, 0.59", "95.0747, 5.14171, -44.5, 0.44", "96.082, 5.46294, -45.2559, 0.74", "96.759, 5.74372, -45.7058, 0.88", "97.98, 6.40866, -46.3494, 0.44", "98.9223, 6.97871, -46.661, 0.44", "99.6572, 7.45637, -46.8008, 0.44", "100.288, 7.92747, -46.854, 0.52", "101.894, 9.34245, -46.8687, 0.29", "103.207, 10.6596, -46.8266, 0.22", "104.282, 11.7899, -46.7446, 0.22", "104.763, 12.2644, -46.6995, 0.22", "105.501, 12.9686, -46.6385, 0.22", "105.99, 13.4166, -46.6092, 0.22", "106.958, 14.1977, -46.6092, 0.22", "108.034, 14.9636, -46.6092, 0.37", "108.899, 15.5281, -46.6092, 0.37", "118.127, 18.4906, -48.9783, 0.37" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "37.0505, -14.2476, -31.6422, 0.66", "37.3097, -15.1006, -31.7694, 0.66", "37.6331, -16.2658, -32.1276, 0.59", "37.7912, -16.8547, -32.3938, 0.96", "37.9172, -17.3624, -32.6982, 1.4", "38.0976, -18.0464, -33.2053, 1.4", "38.4045, -19.1435, -34.1166, 0.81", "38.7262, -20.2808, -35.1991, 0.96", "38.8998, -20.8913, -35.852, 1.11", "39.1005, -21.5374, -36.6043, 1.11", "39.3812, -22.3539, -37.64, 0.74", "39.739, -23.2424, -38.8894, 1.03", "40.0486, -23.8747, -39.8856, 1.03" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "28.6756, 12.5044, 13.2128, 1.92", "28.7978, 13.702, 12.8595, 1.92", "28.9348, 15.5673, 12.2462, 0.96", "29.018, 16.7839, 11.842, 1.47", "29.1454, 18.4755, 11.2702, 1.11", "29.267, 20.0482, 10.7552, 1.25", "29.3807, 21.5885, 10.2753, 1.4", "29.435, 22.6627, 9.94584, 1.4", "29.4659, 23.768, 9.63459, 1.4", "29.5091, 24.9767, 9.36127, 1.33", "29.5672, 26.2612, 9.12178, 1.84", "29.623, 27.338, 8.98953, 1.47", "29.6842, 28.3185, 8.91702, 1.03", "29.7812, 29.5467, 8.85773, 1.33", "29.9475, 31.1862, 8.79217, 1.47", "30.119, 32.3867, 8.76031, 1.47", "30.4719, 34.1836, 8.71367, 1.47", "30.7628, 35.3013, 8.68685, 1.33", "31.0819, 36.3793, 8.6623, 1.11", "31.3369, 37.1191, 8.64835, 1.33", "31.8182, 38.325, 8.6385, 0.88", "32.1722, 39.0572, 8.65118, 1.11", "32.6512, 39.8425, 8.63519, 1.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "28.6756, 12.5044, 13.2128, 1.11", "30.7922, 12.5132, 13.2609, 1.11", "32.3363, 12.494, 13.437, 0.88", "33.1291, 12.4404, 13.6089, 1.33", "34.3594, 12.3572, 13.8758, 1.7", "35.8934, 12.2535, 14.2085, 1.11", "36.9761, 12.1803, 14.4433, 1.11", "38.327, 12.0798, 14.9204, 1.03", "39.8313, 11.8912, 15.5914, 1.03" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-61.7951, -25.4074, -9.55363, 0.74", "-62.5669, -26.7498, -9.60345, 0.74", "-63.2724, -27.8255, -9.6882, 0.88", "-63.7594, -28.515, -9.69562, 0.81", "-64.0078, -28.8682, -9.69196, 1.18", "-64.84, -30.094, -9.68769, 1.25", "-65.3002, -30.7863, -9.68801, 1.55", "-66.1343, -31.9928, -9.69127, 1.18", "-67.1365, -33.4328, -9.64055, 0.96", "-68.0451, -34.702, -9.52836, 1.25", "-68.6925, -35.597, -9.40482, 0.96", "-69.5812, -36.8391, -9.1762, 0.59", "-70.0724, -37.482, -9.05611, 0.88", "-70.851, -38.4387, -8.90296, 1.33", "-71.4916, -39.2131, -8.82965, 1.33", "-72.4278, -40.3794, -8.78215, 1.18", "-73.1389, -41.3983, -8.78742, 0.74", "-73.7765, -42.5891, -8.86925, 0.96", "-74.1204, -43.5305, -8.99622, 1.25", "-74.4528, -45.1697, -9.31903, 0.88", "-74.5312, -46.3727, -9.5699, 0.88", "-74.5136, -47.6769, -9.81339, 1.03", "-74.4755, -48.7061, -9.96359, 0.66", "-74.3862, -49.5589, -10.0535, 0.81", "-74.2976, -50.2163, -10.1037, 0.96", "-74.2073, -51.0502, -10.1514, 0.88", "-74.2538, -52.5881, -10.1529, 1.11", "-74.4753, -53.3654, -10.1652, 0.88" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-61.7951, -25.4074, -9.55363, 1.18", "-63.5598, -25.5731, -9.89768, 1.18", "-65.3465, -25.8182, -10.089, 0.88", "-67.0206, -26.0538, -10.1744, 1.11", "-68.4197, -26.2271, -10.2337, 1.33", "-70.1979, -26.405, -10.3703, 0.74", "-71.9756, -26.5591, -10.5805, 0.96", "-73.2857, -26.7341, -10.7816, 0.88", "-74.7554, -26.943, -11.0605, 0.66", "-75.8481, -27.0893, -11.3096, 1.11", "-77.2512, -27.2941, -11.7273, 1.62", "-78.2223, -27.4673, -12.159, 1.4", "-79.0522, -27.6583, -12.67, 1.03", "-79.7476, -27.8549, -13.1723, 0.96", "-80.6625, -28.1736, -13.8678, 0.96", "-81.62, -28.523, -14.5436, 1.18", "-82.646, -28.919, -15.2205, 1.47", "-83.815, -29.3942, -15.9659, 0.96", "-84.9195, -29.8497, -16.6748, 1.03", "-86.4443, -30.4889, -17.6639, 0.88", "-87.4532, -30.8916, -18.3047, 0.88", "-88.4349, -31.2784, -18.9072, 0.59", "-89.8907, -31.9051, -19.7725, 0.88", "-91.0487, -32.4922, -20.4416, 1.11", "-91.9066, -32.9789, -20.9339, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "40.1709, 5.28695, 0.0, 0.15", "55.0622, 7.0892, 0.0, 0.15", "69.9535, 8.89145, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "35.6942, 45.1564, 98.955, 0.37", "34.9024, 45.9265, 101.576, 0.37", "34.4525, 46.271, 102.881, 0.37", "33.7978, 46.6878, 104.875, 0.88", "33.5379, 46.8377, 105.821, 0.88", "32.997, 47.1295, 108.219, 0.52", "32.7458, 47.2764, 109.722, 0.74", "32.6144, 47.3468, 111.078, 0.74", "32.5723, 47.4094, 112.719, 1.03", "32.6438, 47.4601, 114.783, 1.18", "32.7716, 47.4682, 116.771, 1.18", "33.0638, 47.4028, 120.26, 0.96", "33.2232, 47.3551, 122.651, 0.66", "33.2862, 47.3504, 124.419, 0.52", "33.2587, 47.4084, 126.909, 0.52", "33.1289, 47.5101, 129.271, 0.52", "32.9974, 47.6157, 130.737, 0.52", "32.7793, 47.7375, 132.297, 0.37", "32.6048, 47.823, 133.191, 0.81", "32.141, 48.0838, 135.162, 0.37", "31.7433, 48.4271, 136.68, 0.37", "31.4499, 48.9457, 138.1, 0.88" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "35.6942, 45.1564, 98.955, 0.37", "36.6096, 45.6003, 100.295, 0.37", "37.2627, 45.9756, 101.325, 0.37", "37.891, 46.4303, 102.467, 1.03", "38.8489, 47.2781, 104.469, 1.62", "39.376, 47.8082, 105.69, 0.52", "39.8779, 48.3, 106.852, 0.37", "40.1008, 48.5564, 107.48, 0.37", "40.5427, 48.9835, 108.952, 0.29", "40.6767, 49.0711, 109.446, 0.29", "40.9155, 49.1343, 110.241, 0.29", "41.3282, 49.1633, 111.461, 0.52", "41.9907, 49.177, 113.019, 0.88", "43.4444, 49.2539, 115.814, 1.62", "43.9768, 49.3193, 116.718, 1.99", "45.1731, 49.5581, 118.607, 0.66", "46.2961, 49.8844, 120.231, 0.59", "47.1312, 50.2201, 121.335, 1.55", "48.311, 50.7765, 122.697, 0.44", "49.8041, 51.5901, 124.192, 0.44", "50.3582, 51.9379, 124.732, 0.74", "51.1051, 52.4819, 125.463, 0.74", "51.9373, 53.1431, 126.347, 0.37", "52.9267, 53.9664, 127.711, 0.52", "53.3646, 54.2983, 128.434, 0.52", "53.5189, 54.3848, 128.709, 0.52", "53.7804, 54.4865, 129.174, 0.59", "54.2514, 54.6215, 129.99, 0.59", "54.9781, 54.8272, 131.121, 0.59", "55.6883, 55.0922, 132.12, 0.59", "56.5232, 55.5091, 133.134, 0.44", "57.2698, 55.9579, 133.924, 0.74", "58.3104, 56.6771, 134.907, 0.44", "59.0717, 57.3106, 135.631, 1.03", "59.6298, 57.8631, 136.199, 1.77", "60.7078, 59.0944, 137.393, 0.44", "61.5474, 60.1475, 138.348, 0.22", "62.2908, 61.11, 139.15, 1.03", "63.5711, 62.7484, 140.418, 0.37", "64.4864, 63.8843, 141.287, 0.96", "65.1088, 64.6108, 141.878, 0.96", "65.8079, 65.3283, 142.547, 1.03", "66.9804, 66.3505, 143.686, 0.37", "67.6336, 66.8088, 144.345, 0.37", "68.4189, 67.2718, 145.184, 0.81", "69.1457, 67.6831, 146.118, 1.47", "70.035, 68.2367, 147.611, 0.81", "70.8088, 68.8176, 149.389, 1.11", "71.3344, 69.3192, 151.045, 1.7", "71.7798, 69.8595, 152.927, 0.52", "72.0549, 70.2878, 154.5, 0.52", "72.2543, 70.7001, 156.073, 0.52", "72.444, 71.0996, 157.653, 0.52", "72.6697, 71.3579, 158.866, 0.52", "73.2306, 71.6514, 160.875, 0.81", "73.5445, 71.7191, 161.645, 0.81", "74.5895, 71.8579, 163.488, 0.81", "75.7468, 72.0387, 165.108, 0.59", "77.2093, 72.3795, 166.884, 0.44", "78.0465, 72.6901, 167.836, 1.03", "78.9953, 73.1876, 168.839, 0.44", "79.9713, 73.8327, 169.853, 0.96", "81.019, 74.64, 170.889, 0.59", "81.9278, 75.4119, 171.814, 1.11", "82.9618, 76.333, 172.951, 0.52", "83.6546, 76.9068, 173.71, 0.29", "84.2242, 77.3176, 174.301, 0.81", "84.8646, 77.7045, 174.912, 0.81", "86.0732, 78.2949, 175.903, 0.37", "87.5838, 78.9485, 176.935, 0.81", "88.2524, 79.2254, 177.312, 1.03", "90.1967, 80.1153, 178.298, 0.37", "90.8231, 80.4498, 178.614, 0.37", "91.8046, 81.0744, 179.09, 0.88", "92.5121, 81.5829, 179.397, 0.37", "93.6207, 82.423, 179.818, 0.96", "95.1581, 83.5871, 180.365, 0.59", "96.4746, 84.5215, 180.749, 0.59", "97.9046, 85.5117, 181.115, 0.81", "98.7497, 86.0916, 181.281, 0.81", "99.8409, 86.7988, 181.403, 1.11", "100.952, 87.4746, 181.356, 0.52", "102.015, 88.0627, 181.149, 0.52", "102.724, 88.4273, 180.926, 0.74", "103.596, 88.8548, 180.601, 0.88", "104.751, 89.4702, 180.079, 0.52", "105.743, 90.0835, 179.536, 1.18", "106.4, 90.5977, 179.118, 1.18", "107.099, 91.2994, 178.556, 0.22", "107.516, 91.7552, 178.167, 0.22", "108.175, 92.4874, 177.558, 0.22", "108.661, 93.0113, 177.141, 0.96", "109.135, 93.4604, 176.786, 1.55", "110.584, 94.652, 175.738, 0.44", "111.861, 95.557, 174.88, 1.03", "113.002, 96.2619, 174.17, 0.74", "114.212, 96.9054, 173.518, 0.37", "115.472, 97.4999, 172.896, 0.29", "116.34, 97.8794, 172.502, 0.29", "117.221, 98.2483, 172.137, 0.88", "117.958, 98.5537, 171.789, 1.11", "118.9, 98.8909, 171.23, 0.22", "119.532, 99.0258, 170.763, 0.22", "120.055, 99.0503, 170.285, 0.22", "120.629, 99.0086, 169.698, 0.22", "121.195, 98.9081, 169.073, 0.74", "122.038, 98.7441, 168.063, 1.18", "123.095, 98.5869, 166.618, 0.37", "123.874, 98.5405, 165.451, 0.37", "124.341, 98.5569, 164.721, 0.88", "124.748, 98.6105, 164.022, 0.88", "125.496, 98.762, 162.622, 0.29", "126.418, 98.9631, 160.878, 0.59", "127.092, 99.079, 159.683, 0.59", "127.46, 99.099, 159.141, 0.59", "128.454, 99.0946, 157.847, 0.59", "129.1, 99.0764, 157.11, 1.33", "130.483, 98.9845, 155.839, 0.52", "131.775, 98.8762, 154.882, 1.4", "133.433, 98.7206, 153.776, 0.44", "134.585, 98.6178, 153.061, 0.88", "135.58, 98.5369, 152.51, 0.22", "136.575, 98.4367, 151.981, 0.22", "137.943, 98.2845, 151.265, 0.44", "139.137, 98.0796, 150.626, 0.15", "139.438, 97.9875, 150.451, 0.29", "140.082, 97.6915, 150.119, 0.15", "140.651, 97.3387, 149.842, 0.59" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-42.7059, 14.6577, 35.9309, 0.66", "-43.3168, 15.0267, 34.5052, 0.66", "-43.7461, 15.2349, 33.4703, 0.44", "-44.2827, 15.4509, 32.1947, 0.88", "-45.0911, 15.7191, 30.4802, 1.11", "-46.0185, 16.0101, 28.5879, 1.33", "-46.9534, 16.3164, 26.6821, 1.03", "-47.6383, 16.5968, 25.1148, 1.33", "-48.05, 16.7817, 24.0087, 1.33", "-48.4982, 16.995, 22.6823, 0.44", "-48.8522, 17.1567, 21.5673, 0.44", "-49.0825, 17.2662, 20.8113, 0.81", "-49.6833, 17.5997, 18.8493, 0.81", "-50.1497, 17.9217, 17.5284, 0.81", "-50.3512, 18.0649, 17.0463, 0.81", "-51.0586, 18.5261, 15.7127, 0.88", "-52.0638, 19.0772, 14.5042, 1.4", "-53.1856, 19.6304, 13.6937, 1.7", "-55.0541, 20.5017, 12.9333, 0.44", "-55.672, 20.789, 12.7827, 0.96", "-56.7827, 21.3022, 12.5915, 1.18", "-58.0631, 21.8807, 12.4303, 1.11", "-59.3038, 22.3927, 12.2519, 1.47", "-60.2938, 22.7444, 12.0145, 1.47", "-61.6135, 23.1164, 11.518, 0.81", "-62.7628, 23.4092, 10.9843, 0.52", "-63.8103, 23.6681, 10.4129, 0.52", "-64.9561, 23.943, 9.74837, 0.96", "-66.1216, 24.2247, 9.08187, 0.37", "-66.8546, 24.3949, 8.71018, 0.81", "-67.9922, 24.6457, 8.21657, 0.96", "-68.9169, 24.8636, 7.89254, 1.47", "-69.8464, 25.0943, 7.64215, 0.96", "-70.8114, 25.3632, 7.44145, 0.44", "-71.6886, 25.6343, 7.26178, 0.44", "-72.4956, 25.9197, 7.05898, 0.74", "-73.5523, 26.3372, 6.75015, 1.25", "-74.2627, 26.6394, 6.53162, 1.25", "-75.7155, 27.3269, 6.09818, 0.44", "-76.6735, 27.8409, 5.86052, 0.81", "-77.6544, 28.4251, 5.68187, 0.88", "-78.9935, 29.2404, 5.57334, 0.96", "-79.6482, 29.6099, 5.57864, 0.59", "-80.7111, 30.1661, 5.6538, 0.29", "-81.6113, 30.6036, 5.75794, 0.59", "-82.7441, 31.1406, 5.94509, 0.96", "-84.0495, 31.7329, 6.2212, 0.66", "-86.027, 32.5957, 6.68903, 0.44", "-87.021, 33.0063, 6.91676, 0.81", "-88.3221, 33.4887, 7.17618, 2.14" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-42.7059, 14.6577, 35.9309, 0.44", "-43.6658, 16.0675, 36.4801, 0.44", "-44.5898, 17.1236, 36.9835, 0.44", "-45.3905, 17.9005, 37.3714, 1.18", "-46.0732, 18.4694, 37.6951, 0.96", "-47.2742, 19.3079, 38.2485, 0.74", "-48.381, 19.9403, 38.7479, 0.88", "-50.0446, 20.6022, 39.5248, 0.44", "-50.7375, 20.8099, 39.8419, 0.81", "-51.6858, 21.0821, 40.2772, 1.25", "-52.8444, 21.4716, 40.78, 1.33", "-54.2336, 22.057, 41.3512, 1.03", "-55.5313, 22.7418, 41.8683, 0.52", "-56.314, 23.2249, 42.1599, 1.11", "-57.6699, 24.1365, 42.6876, 1.55", "-59.0886, 25.1923, 43.2314, 1.84", "-59.938, 25.8738, 43.5454, 1.11", "-60.7199, 26.4889, 43.8058, 0.29", "-61.796, 27.2637, 44.1422, 0.37", "-62.9035, 27.9673, 44.448, 0.29", "-63.8624, 28.5162, 44.6977, 1.33", "-65.1651, 29.2834, 45.0411, 0.44", "-66.2952, 30.0211, 45.3669, 0.44", "-67.1092, 30.6336, 45.6103, 1.03", "-68.2839, 31.5978, 45.9661, 1.84", "-69.1549, 32.2986, 46.2202, 1.92", "-71.0912, 33.8052, 46.8983, 0.44", "-71.8145, 34.3803, 47.1972, 0.44", "-72.4556, 34.9143, 47.5048, 0.44", "-73.2179, 35.5747, 47.9106, 0.44", "-74.0253, 36.3155, 48.4177, 0.59", "-75.0354, 37.2577, 49.0902, 1.11", "-76.3161, 38.4226, 49.9532, 0.44", "-77.1687, 39.1617, 50.4852, 0.44", "-77.869, 39.7612, 50.9058, 0.29", "-78.9061, 40.6387, 51.4543, 0.66", "-80.1282, 41.6306, 51.9859, 0.88", "-80.7987, 42.1089, 52.2021, 1.62", "-81.7981, 42.6813, 52.4361, 2.43", "-82.2428, 42.8849, 52.5153, 2.43", "-83.8911, 43.4864, 52.7885, 0.74", "-85.3151, 43.9454, 53.049, 0.29", "-86.3094, 44.2674, 53.261, 0.29", "-87.5433, 44.6955, 53.546, 0.59", "-88.8859, 45.1917, 53.8306, 0.29", "-90.1022, 45.6686, 54.0365, 0.96", "-91.4404, 46.2516, 54.1422, 0.22", "-92.3487, 46.6755, 54.1144, 1.03", "-93.8108, 47.3913, 53.9143, 0.22", "-95.0188, 47.9967, 53.6094, 0.22", "-95.7549, 48.3479, 53.3294, 0.88", "-97.379, 49.0399, 52.5742, 0.37", "-98.3482, 49.3858, 52.0993, 1.11", "-99.1164, 49.6452, 51.7351, 1.03", "-100.657, 50.2002, 51.058, 0.29", "-101.878, 50.6937, 50.573, 0.22", "-102.694, 51.0761, 50.2532, 0.81", "-103.59, 51.6089, 49.9367, 1.25", "-105.316, 53.0919, 49.4924, 0.37", "-105.98, 53.9142, 49.4797, 0.37", "-106.42, 54.6618, 49.6557, 0.37", "-106.691, 55.2235, 49.8957, 0.74", "-107.187, 56.4373, 50.592, 1.47", "-107.802, 58.148, 51.7305, 0.59", "-108.255, 59.4659, 52.7033, 0.37", "-108.584, 60.3936, 53.3944, 0.29", "-108.999, 61.5436, 54.2169, 0.66", "-109.491, 62.8932, 55.0979, 0.22", "-109.764, 63.7237, 55.5465, 0.22", "-110.004, 64.7214, 55.9554, 0.22", "-110.05, 65.2225, 56.083, 0.52", "-109.945, 66.1468, 56.1949, 1.03", "-109.757, 66.8445, 56.2154, 0.37", "-109.38, 67.848, 56.1955, 0.29", "-108.958, 68.8356, 56.2059, 0.44", "-108.559, 69.8307, 56.2379, 0.52", "-107.862, 71.8887, 56.3375, 0.22", "-107.683, 72.5451, 56.3782, 0.44", "-107.526, 73.4435, 56.4229, 1.03", "-107.44, 74.8216, 56.4927, 0.52", "-107.493, 76.2481, 56.564, 0.22", "-107.602, 77.0985, 56.6181, 0.66", "-107.764, 77.8034, 56.6654, 0.44", "-108.129, 79.1724, 56.7488, 0.22", "-108.459, 80.3401, 56.8112, 0.22", "-108.673, 81.1819, 56.8442, 0.37", "-108.848, 81.9736, 56.902, 0.96", "-109.045, 82.8851, 57.0147, 0.59", "-109.341, 84.3654, 57.254, 0.29", "-109.459, 84.9846, 57.3881, 0.29", "-109.675, 86.0831, 57.6391, 0.88", "-109.998, 87.5426, 58.0282, 0.22", "-110.21, 88.3861, 58.2655, 0.52", "-110.554, 89.5925, 58.6282, 0.29", "-110.855, 90.464, 58.8977, 0.88", "-111.271, 91.4526, 59.1744, 1.47", "-112.254, 93.3177, 59.7372, 0.15", "-112.774, 94.1735, 60.0136, 0.15", "-113.129, 94.683, 60.1865, 0.81", "-113.68, 95.3623, 60.4591, 1.11", "-114.975, 96.724, 61.0967, 0.22", "-116.195, 97.8124, 61.6926, 0.22", "-116.613, 98.133, 61.8878, 0.22", "-117.203, 98.5842, 62.1588, 0.88", "-117.946, 99.1659, 62.4777, 0.88", "-119.196, 100.168, 62.9499, 0.22", "-119.889, 100.755, 63.1872, 0.52", "-120.257, 101.098, 63.3025, 1.03", "-121.567, 102.397, 63.7203, 0.44", "-122.227, 103.099, 63.9321, 0.22", "-122.859, 103.832, 64.1208, 0.44", "-124.018, 105.32, 64.4271, 0.22", "-124.538, 106.053, 64.5316, 0.74", "-124.963, 106.747, 64.5609, 1.11", "-125.51, 108.004, 64.4163, 0.22", "-125.777, 109.26, 64.046, 0.29", "-125.8, 110.36, 63.5406, 0.22", "-125.657, 111.593, 62.7707, 0.37", "-125.373, 112.833, 61.8803, 0.29", "-124.949, 114.007, 60.9597, 0.22", "-124.551, 114.829, 60.2821, 0.88", "-124.046, 115.759, 59.5462, 0.22", "-123.447, 116.871, 58.7633, 0.22", "-122.966, 117.849, 58.1807, 0.22", "-122.602, 118.664, 57.7825, 0.22", "-122.331, 119.326, 57.5266, 1.18", "-121.76, 120.765, 57.0649, 0.15", "-121.446, 121.565, 56.8714, 0.29", "-121.14, 122.444, 56.7442, 0.07", "-120.913, 123.334, 56.6525, 0.74", "-120.849, 123.69, 56.6236, 0.74" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "22.0236, -43.9997, -10.7873, 0.88", "21.1848, -46.0096, -11.3644, 0.88", "20.4514, -47.5468, -11.8954, 0.74", "19.7773, -48.7819, -12.2993, 0.88", "19.0452, -49.9553, -12.664, 1.18", "18.4304, -50.8552, -12.9417, 0.88", "17.8264, -51.7334, -13.1998, 0.74", "17.1292, -52.6858, -13.4866, 0.96", "16.4779, -53.6004, -13.7044, 0.81", "16.0087, -54.3777, -13.8239, 0.66", "15.5376, -55.3963, -13.9355, 0.88", "15.1522, -56.3989, -14.0468, 0.88", "14.6755, -57.8162, -14.2193, 0.88", "14.4989, -58.453, -14.3106, 0.74", "14.1712, -59.8869, -14.596, 0.59", "13.9541, -60.9725, -14.8476, 0.59", "13.717, -61.941, -15.1034, 1.03", "13.3584, -63.0469, -15.467, 1.03", "12.8752, -64.2658, -15.9468, 0.74", "12.5213, -65.1013, -16.2865, 0.74", "12.1436, -65.9463, -16.6401, 0.81", "11.559, -67.1847, -17.1678, 0.66", "11.0703, -68.1347, -17.5425, 0.74", "10.5168, -69.1404, -17.8651, 0.88", "10.0939, -69.8507, -18.0457, 1.25", "9.67887, -70.5252, -18.1304, 1.25", "9.03794, -71.6044, -18.1381, 0.88", "8.49759, -72.6913, -17.9967, 0.81", "8.04578, -73.7153, -17.6878, 0.88", "7.76756, -74.3984, -17.3673, 0.88", "7.36949, -75.4986, -16.6966, 0.59", "7.21757, -76.0279, -16.3115, 1.03", "6.98282, -77.1925, -15.3701, 0.59", "6.84187, -78.1974, -14.5061, 0.81", "6.71795, -79.1063, -13.7165, 1.11", "6.56999, -80.2501, -12.7359, 0.66", "6.45257, -81.3677, -11.7959, 0.66", "6.37574, -82.443, -10.8928, 0.59", "6.34911, -83.3887, -10.1261, 0.44", "6.37917, -84.1762, -9.54781, 0.59", "6.46186, -84.8915, -9.07983, 0.81", "6.71479, -86.3376, -8.29373, 0.59", "6.97139, -87.4134, -7.85888, 0.74", "7.17086, -88.0207, -7.67636, 0.81", "7.49681, -88.729, -7.51199, 0.74", "8.04597, -89.6215, -7.29299, 0.88", "8.90544, -90.7469, -6.96583, 0.52", "9.62379, -91.5919, -6.6815, 0.59", "10.1753, -92.2436, -6.38827, 0.59", "10.8303, -93.0135, -5.91958, 0.81", "11.596, -93.9175, -5.24957, 0.66", "12.2377, -94.7443, -4.56858, 0.88", "12.7084, -95.4468, -3.98431, 0.96", "13.2902, -96.5337, -3.15001, 0.66", "13.7202, -97.6133, -2.46889, 0.88", "14.0457, -98.7195, -1.91417, 0.66", "14.3676, -100.135, -1.39541, 0.88", "14.6325, -101.517, -1.03183, 1.18", "14.8301, -102.676, -0.851259, 1.33", "15.0681, -104.394, -0.765959, 0.59", "15.1575, -105.39, -0.794338, 0.59", "15.1829, -106.43, -0.876792, 0.88", "15.1312, -107.226, -0.940653, 0.88", "14.924, -108.58, -0.986341, 0.74", "14.6132, -110.069, -0.932353, 0.88", "14.4312, -110.883, -0.824504, 0.66", "14.1673, -112.085, -0.572579, 0.81", "13.7662, -113.707, -0.133743, 0.74", "13.4492, -114.837, 0.206618, 0.66", "13.141, -115.829, 0.535519, 0.66", "12.8067, -116.877, 0.855584, 0.59", "12.5192, -117.831, 1.06786, 1.03", "12.1598, -119.213, 1.26624, 0.88", "11.9905, -120.012, 1.31906, 1.03", "11.8056, -121.048, 1.32742, 1.03", "11.6325, -122.474, 1.28532, 0.74", "11.5589, -124.022, 1.18207, 0.96", "11.631, -125.305, 1.06756, 0.81", "11.8678, -126.664, 0.918522, 0.66", "12.1577, -127.649, 0.82835, 0.66", "12.7184, -128.928, 0.762078, 0.74", "13.1406, -129.615, 0.779056, 1.11", "13.6183, -130.204, 0.853665, 0.88", "14.2729, -130.846, 1.00035, 1.03", "15.5742, -131.929, 1.39283, 0.74", "16.7473, -132.817, 1.81719, 0.74", "17.8334, -133.621, 2.26636, 0.88", "18.7224, -134.322, 2.69385, 1.03", "19.5608, -135.072, 3.17056, 0.66", "20.1864, -135.796, 3.62332, 0.81", "20.394, -136.175, 3.84379, 0.81", "20.7784, -137.514, 4.55353, 0.59", "20.9339, -138.745, 5.13393, 1.11", "20.9916, -139.798, 5.61112, 0.81", "21.0467, -141.173, 6.21724, 0.59", "21.1203, -142.356, 6.7186, 0.59", "21.1961, -143.212, 7.08494, 0.88", "21.314, -144.214, 7.49847, 1.33", "21.5534, -145.891, 8.17169, 0.74", "21.7462, -147.078, 8.68048, 0.74", "21.9171, -147.926, 9.06627, 0.52", "22.1488, -148.839, 9.51961, 1.11", "22.3995, -149.723, 10.0031, 0.88", "22.7257, -150.885, 10.7023, 0.59", "22.9292, -151.807, 11.2898, 0.59", "23.0985, -153.076, 12.1698, 0.88", "23.1074, -154.149, 12.9536, 0.88", "23.0306, -154.736, 13.372, 1.18", "22.8284, -155.477, 13.8829, 1.25", "22.4205, -156.523, 14.5262, 0.96", "21.9573, -157.477, 15.0624, 1.47", "21.2787, -158.692, 15.7366, 1.4", "20.7891, -159.574, 16.2499, 1.4", "20.2209, -160.717, 16.9321, 0.74", "19.759, -161.786, 17.5909, 0.59", "19.3818, -162.786, 18.216, 1.25", "18.9692, -163.964, 18.9865, 0.81", "18.4767, -165.445, 19.9987, 0.66", "18.1825, -166.303, 20.5882, 0.74", "17.9014, -167.108, 21.0879, 1.4", "17.5827, -168.174, 21.6438, 1.03", "17.3823, -169.354, 22.0905, 0.66", "17.3713, -170.468, 22.3849, 0.52", "17.5241, -171.552, 22.5829, 0.88", "17.8741, -172.966, 22.8025, 1.47", "18.3354, -174.341, 23.0282, 0.96", "19.003, -175.923, 23.3322, 0.81", "19.6985, -177.304, 23.685, 0.66", "20.2648, -178.27, 24.073, 0.66", "20.8328, -179.145, 24.621, 0.59", "21.3861, -180.003, 25.3925, 0.59", "21.8081, -180.693, 26.1897, 0.96", "22.2576, -181.473, 27.2803, 1.18", "22.7576, -182.283, 28.5382, 0.88", "23.18, -182.956, 29.5991, 0.74", "23.6162, -183.635, 30.6573, 0.88", "23.9916, -184.24, 31.5621, 1.03", "24.5096, -185.12, 32.832, 0.74", "24.9924, -186.016, 34.0349, 0.96", "25.3443, -186.738, 34.9563, 0.66", "25.5123, -187.093, 35.4262, 0.66", "25.9887, -188.067, 36.8463, 1.03", "26.2651, -188.634, 37.8062, 1.25", "26.5758, -189.273, 39.0513, 0.96", "26.862, -189.868, 40.3525, 0.81", "27.0221, -190.163, 41.0209, 0.81", "27.1801, -190.398, 41.4928, 0.81", "27.5738, -190.848, 42.2236, 0.81", "28.238, -191.462, 43.0305, 0.59", "28.8923, -191.983, 43.5934, 0.96", "29.6339, -192.526, 44.0973, 0.66", "30.7113, -193.286, 44.7295, 0.29", "31.4623, -193.835, 45.1384, 0.81", "32.2565, -194.457, 45.5837, 1.03", "33.1374, -195.246, 46.1833, 0.88", "33.7418, -195.895, 46.703, 0.88", "34.6304, -197.288, 47.7692, 0.44", "34.899, -198.049, 48.3021, 0.66", "35.0953, -199.322, 49.0882, 0.44", "35.0873, -200.815, 49.9238, 0.88", "34.9699, -201.868, 50.511, 1.25", "34.6384, -203.729, 51.6134, 0.74", "34.3647, -204.945, 52.3627, 0.81", "34.0953, -206.087, 53.0888, 1.03", "33.7593, -207.287, 53.8939, 0.81", "33.3727, -208.421, 54.7156, 0.66", "32.8115, -209.675, 55.7765, 1.11", "32.3536, -210.46, 56.6006, 1.4", "31.6608, -211.415, 57.7658, 0.44", "30.7634, -212.477, 59.2243, 0.44", "30.2508, -213.044, 60.0826, 0.81", "29.5407, -213.757, 61.2505, 0.66", "28.8872, -214.391, 62.3413, 1.25", "28.3914, -214.908, 63.2448, 1.77", "27.7869, -215.674, 64.5723, 1.25", "27.2128, -216.654, 66.2243, 0.59", "26.7706, -217.677, 68.0149, 0.44", "26.6453, -218.158, 68.9141, 0.88", "26.6317, -218.815, 70.2029, 0.44", "26.8002, -219.255, 71.1634, 0.44", "27.1918, -219.609, 72.0547, 0.59", "28.0458, -220.066, 73.3185, 0.37", "28.8317, -220.421, 74.3478, 0.52", "29.5535, -220.777, 75.3418, 0.29", "30.1926, -221.163, 76.2978, 0.81", "30.893, -221.8, 77.4834, 1.77", "31.6359, -222.857, 79.0538, 0.37", "32.072, -223.883, 80.3447, 0.52", "32.3392, -224.994, 81.6144, 1.18", "32.407, -225.811, 82.4808, 1.18", "32.3137, -227.089, 83.7146, 0.37", "32.0595, -228.111, 84.6341, 0.37", "31.7383, -228.917, 85.3443, 1.03", "31.4707, -229.467, 85.8571, 1.03", "31.0434, -230.242, 86.6264, 0.44", "30.5029, -231.162, 87.5384, 0.44", "30.0123, -231.975, 88.3378, 0.37", "29.4275, -233.031, 89.2603, 0.88", "28.9276, -234.003, 89.9429, 1.7", "28.5946, -234.699, 90.2887, 1.03", "27.8142, -236.393, 90.7776, 0.29", "27.5712, -236.945, 90.8208, 1.18", "27.1876, -237.807, 90.7366, 1.77", "26.481, -239.354, 90.3911, 0.15", "25.9752, -240.436, 90.0504, 0.74", "25.5176, -241.414, 89.7012, 0.22", "25.2005, -242.113, 89.4116, 0.52", "24.7487, -243.115, 88.9925, 1.18", "24.3874, -243.94, 88.6497, 0.22", "24.1007, -244.652, 88.3984, 0.15", "23.8486, -245.355, 88.1744, 0.81", "23.5148, -246.365, 87.8396, 0.15", "23.2777, -247.065, 87.6262, 0.74" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "22.0236, -43.9997, -10.7873, 0.96", "22.6411, -45.6449, -11.223, 0.96", "22.9335, -46.6524, -11.4812, 0.96", "23.1873, -47.6749, -11.7263, 1.11", "23.4793, -48.8572, -12.0305, 1.11", "23.9121, -50.4237, -12.4347, 1.33", "24.4018, -51.9559, -12.8524, 1.11", "24.7861, -53.0648, -13.2201, 1.11", "25.1535, -53.9493, -13.55, 1.18", "25.8123, -55.1652, -14.0315, 1.18", "26.5158, -56.1564, -14.4638, 1.18", "27.2356, -57.0066, -14.864, 1.11", "28.1835, -58.0517, -15.3161, 1.4", "29.1373, -59.1528, -15.6996, 1.25", "29.8969, -60.1616, -15.8945, 1.18", "30.6073, -61.401, -15.8916, 1.18", "31.0278, -62.4011, -15.7517, 1.11", "31.5028, -63.9046, -15.3518, 1.33", "31.8692, -65.2789, -14.898, 1.18", "32.2411, -66.6921, -14.3606, 1.33", "32.5803, -67.9571, -13.8725, 1.03", "32.8322, -68.8255, -13.5524, 1.11", "33.1625, -69.769, -13.2801, 1.55", "33.6013, -70.8718, -13.087, 1.47", "34.2517, -72.4171, -12.9499, 1.18", "34.6953, -73.4895, -12.9159, 1.18", "35.0109, -74.3378, -12.8726, 1.18", "35.3759, -75.5107, -12.7088, 1.11", "35.6217, -76.4102, -12.5742, 1.11", "35.8838, -77.585, -12.3509, 1.62", "36.0425, -78.4272, -12.1814, 1.03", "36.2896, -79.7417, -11.8233, 1.18", "36.6136, -81.523, -11.1341, 1.92" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-36.4607, -79.3867, -37.1273, 0.66", "-36.957, -81.0273, -37.6782, 0.66", "-37.3182, -81.9235, -38.0165, 0.88", "-37.7726, -82.8264, -38.3385, 0.66", "-38.339, -83.8867, -38.6452, 0.44", "-38.919, -85.0018, -38.8538, 0.44", "-39.3924, -85.9286, -38.9429, 0.74", "-39.9543, -86.9928, -38.8559, 0.81", "-40.5492, -88.2838, -38.5493, 0.59", "-40.8825, -89.2212, -38.2236, 0.59", "-41.2778, -90.7091, -37.5776, 0.29", "-41.4531, -91.6159, -37.0938, 0.29", "-41.5617, -92.7341, -36.4164, 0.22", "-41.5731, -93.7267, -35.7548, 0.22", "-41.5237, -94.8343, -35.0031, 0.15", "-41.4876, -95.4323, -34.6068, 0.15", "-41.4033, -96.3898, -33.9701, 0.15", "-41.2929, -97.3892, -33.3214, 0.22", "-41.2304, -98.253, -32.7711, 0.22", "-42.3939, -107.927, -32.3444, 0.22", "-44.8984, -117.364, -32.1281, 0.22", "-47.3422, -126.7, -33.6607, 0.22", "-47.7558, -136.44, -33.5132, 0.22", "-46.4468, -145.982, -31.9272, 0.22", "-46.7734, -155.301, -29.0046, 0.22", "-48.1935, -164.723, -26.8566, 0.22", "-48.3281, -174.22, -24.6003, 0.22", "-48.6874, -183.928, -23.7468, 0.22", "-48.0874, -193.306, -21.0789, 0.22", "-45.8432, -202.23, -17.7344, 0.22", "-42.523, -210.02, -12.7186, 0.22", "-38.005, -216.047, -6.28679, 0.22" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-36.4607, -79.3867, -37.1273, 1.11", "-36.8345, -80.1544, -36.9225, 1.11", "-37.5755, -81.5203, -36.7902, 0.81", "-38.4343, -82.9793, -36.8641, 1.11", "-39.1172, -84.1043, -37.0264, 1.11", "-39.8696, -85.4163, -37.2871, 0.88", "-40.5034, -86.631, -37.5859, 1.11", "-41.0541, -87.8591, -38.0287, 1.11", "-41.4973, -89.022, -38.5823, 1.11", "-41.8292, -90.0393, -39.1422, 1.18", "-42.1961, -91.4932, -39.9667, 0.96", "-42.4276, -92.6673, -40.6169, 1.11", "-42.6489, -93.8474, -41.2466, 0.81", "-42.8844, -94.9337, -41.7989, 1.11", "-43.2398, -96.2932, -42.4721, 1.11", "-43.5698, -97.3664, -42.9732, 1.4", "-43.8025, -97.997, -43.2346, 1.7", "-44.2302, -99.0435, -43.5526, 1.47", "-44.9226, -100.686, -43.8444, 1.47", "-45.1654, -101.253, -43.8769, 1.55", "-45.7486, -102.648, -43.8618, 1.03", "-46.1889, -103.759, -43.8453, 0.88", "-46.7454, -105.262, -43.8813, 1.18", "-47.1871, -106.523, -43.9695, 0.88", "-47.6344, -107.807, -44.1567, 0.96", "-48.2235, -109.319, -44.4689, 0.88", "-48.8313, -110.663, -44.8233, 0.74", "-49.42, -111.9, -45.2055, 0.96", "-49.8708, -112.869, -45.5462, 1.03", "-50.4272, -114.154, -46.0206, 0.74", "-51.059, -115.843, -46.6195, 0.66", "-51.3357, -116.637, -46.8522, 0.66", "-51.6109, -117.461, -47.0481, 0.74", "-51.9022, -118.426, -47.2327, 0.81", "-52.1907, -119.421, -47.3957, 0.81", "-52.5467, -120.678, -47.587, 0.74", "-52.798, -121.719, -47.7553, 0.66", "-52.9319, -122.297, -47.8516, 0.66", "-53.2477, -123.477, -48.0522, 1.11", "-53.7071, -124.874, -48.2779, 0.29", "-54.1089, -125.927, -48.4142, 0.29", "-56.412, -135.184, -50.5497, 0.29", "-57.5318, -144.038, -54.5841, 0.29", "-59.6224, -152.234, -59.5806, 0.29", "-62.111, -160.059, -65.0041, 0.29", "-63.9788, -168.544, -69.5594, 0.29", "-63.9616, -177.417, -73.7058, 0.29", "-65.4802, -186.336, -77.4467, 0.29", "-67.1602, -195.702, -79.6626, 0.29", "-70.4825, -204.763, -81.2734, 0.29", "-74.974, -213.312, -82.9908, 0.29", "-80.2814, -221.054, -85.9524, 0.29", "-86.6816, -228.324, -87.8077, 0.29" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "118.127, 18.4906, -48.9783, 0.15", "126.666, 22.8145, -51.7015, 0.15", "134.169, 27.1373, -56.6059, 0.15", "141.933, 32.4496, -59.7733, 0.15" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "118.127, 18.4906, -48.9783, 0.15", "127.746, 21.0631, -49.6912, 0.15", "137.323, 23.5942, -48.4466, 0.15", "146.482, 27.074, -46.612, 0.15", "154.845, 31.1687, -43.0857, 0.15", "162.781, 34.8966, -38.3537, 0.15", "170.401, 39.2138, -33.6279, 0.15", "178.055, 44.1154, -29.6096, 0.15", "185.869, 48.0425, -24.8434, 0.15", "192.725, 51.9988, -18.7998, 0.15", "200.097, 54.5212, -12.5578, 0.15", "208.447, 56.1254, -7.30723, 0.15", "217.292, 58.2821, -3.19807, 0.15", "225.221, 60.8925, 2.27541, 0.15", "233.507, 64.943, 6.02705, 0.15", "241.02, 69.7868, 10.3717, 0.15", "249.198, 72.9688, 15.1113, 0.15" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "40.0486, -23.8747, -39.8856, 0.22", "38.9191, -24.0264, -40.7709, 0.22", "38.1532, -24.1771, -41.4002, 0.22", "37.342, -24.3914, -42.1082, 0.29", "36.4819, -24.706, -42.9174, 0.22", "35.991, -24.9382, -43.4051, 0.22", "35.6178, -25.1684, -43.7796, 0.22", "35.3486, -25.4279, -44.0264, 0.22", "35.1161, -25.7656, -44.2586, 0.22", "34.9085, -26.2881, -44.5462, 0.22", "34.8228, -26.6918, -44.7248, 0.22", "34.6811, -27.5166, -44.9991, 0.22", "34.5262, -28.3158, -45.2027, 0.22", "28.2579, -32.2425, -51.8726, 0.22", "21.5442, -36.9329, -57.5103, 0.22", "14.4821, -42.1234, -62.1779, 0.22", "7.07914, -46.8617, -66.8232, 0.22", "0.64651, -53.0715, -71.0725, 0.22", "-5.20079, -59.7617, -75.3998, 0.22", "-11.275, -66.8049, -78.7045, 0.22", "-15.9801, -74.1223, -83.3451, 0.22", "-19.78, -82.2703, -87.3103, 0.22", "-22.5835, -90.2742, -92.2853, 0.22", "-26.6789, -98.3179, -96.1796, 0.22", "-31.7971, -106.295, -98.7968, 0.22", "-37.9144, -112.987, -102.73, 0.22", "-45.0796, -119.376, -105.123, 0.22", "-50.7065, -126.944, -107.967, 0.22", "-55.3863, -135.283, -110.193, 0.22" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "40.0486, -23.8747, -39.8856, 0.74", "39.9858, -24.8456, -39.9371, 0.74", "39.7761, -25.8207, -40.0344, 0.59", "39.5679, -26.5117, -40.1171, 0.59", "39.3237, -27.1885, -40.2038, 0.59", "38.9978, -28.1407, -40.3198, 0.66", "38.7609, -28.9787, -40.4385, 0.81", "38.5326, -29.7786, -40.6086, 0.81", "38.3807, -30.4213, -40.784, 1.03", "38.1522, -31.5156, -41.1077, 0.74", "37.9967, -32.611, -41.4565, 0.74", "37.925, -33.9323, -41.9059, 0.66", "37.9572, -35.0026, -42.2829, 0.66", "38.0789, -35.9871, -42.661, 1.4" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "32.6512, 39.8425, 8.63519, 0.22", "34.3941, 40.9632, 8.11694, 0.22", "34.8904, 41.2687, 7.93838, 0.37", "35.473, 41.6163, 7.69908, 0.66", "36.3035, 42.0816, 7.28503, 0.52", "36.7778, 42.3178, 7.00422, 0.74", "37.7736, 42.7501, 6.3754, 0.59", "38.6694, 43.0765, 5.7629, 0.81", "39.8655, 43.4906, 4.92402, 1.11", "40.9449, 43.8895, 4.15665, 0.29", "41.9658, 44.3384, 3.42398, 0.29", "42.7626, 44.8319, 2.8613, 0.37", "43.5276, 45.4613, 2.3376, 0.74", "44.3655, 46.3377, 1.74923, 0.81", "45.1695, 47.3692, 1.13074, 0.74", "45.8199, 48.3595, 0.565806, 1.03", "46.8248, 50.0838, -0.47078, 0.44", "47.2448, 50.8594, -1.01876, 0.44", "47.7193, 51.7231, -1.82306, 0.29", "48.0606, 52.2359, -2.55577, 0.29", "48.4682, 52.6392, -3.55639, 0.44", "48.8186, 52.8034, -4.46598, 0.44", "49.1525, 52.8251, -5.3363, 0.44", "49.7221, 52.8282, -6.75073, 0.59", "50.1486, 52.8792, -7.77226, 0.59", "50.3194, 52.961, -8.21384, 0.59", "50.6584, 53.4105, -9.3603, 0.52", "50.7659, 53.7977, -9.94749, 0.52", "50.8702, 54.5737, -10.8367, 0.66", "50.9399, 55.4767, -11.722, 0.88", "51.0142, 56.629, -12.8137, 0.29", "51.0636, 57.3374, -13.5224, 0.29", "51.143, 58.1759, -14.4651, 0.29", "51.2343, 58.7323, -15.2191, 0.29", "51.3535, 59.1387, -16.0015, 0.29", "51.4823, 59.4302, -16.7721, 0.29", "51.6365, 59.6628, -17.5139, 0.29", "51.8275, 59.9476, -18.381, 0.29", "51.9372, 60.2096, -18.9683, 0.29", "52.1078, 61.0444, -20.1799, 0.29", "52.1414, 61.5396, -20.712, 0.66", "52.1049, 62.3678, -21.4911, 0.44", "52.0197, 63.5108, -22.4239, 0.37", "51.9871, 64.6567, -23.262, 0.29", "52.0508, 65.8804, -24.0789, 0.29", "52.2592, 67.089, -24.8091, 0.96", "52.5946, 68.3707, -25.6137, 0.22", "52.7957, 69.0411, -26.0699, 0.66", "53.1399, 70.0201, -26.734, 0.29", "53.5114, 70.7666, -27.2423, 0.22", "54.2306, 71.7773, -27.9268, 0.22", "55.0131, 72.583, -28.3955, 0.22", "55.8851, 73.3774, -28.8398, 0.22", "56.233, 73.6995, -29.0504, 0.22", "56.6047, 74.1274, -29.3592, 0.22", "57.1273, 74.7976, -29.9272, 0.37", "57.8666, 75.7673, -30.9347, 0.37", "60.8496, 82.9613, -36.9894, 0.37", "63.817, 91.248, -41.3434, 0.37", "67.1679, 100.17, -43.5893, 0.37" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "32.6512, 39.8425, 8.63519, 1.25", "32.9347, 40.9333, 9.37411, 1.25", "33.1672, 42.2462, 10.2318, 0.88", "33.3889, 43.6258, 11.0766, 0.81", "33.5524, 44.631, 11.6325, 0.88", "33.7143, 45.6005, 12.112, 0.74", "33.9163, 46.8998, 12.6712, 0.88", "34.0438, 47.8687, 13.0128, 1.03", "34.1454, 48.7436, 13.2936, 0.88", "34.2922, 49.9356, 13.6684, 1.03", "34.5523, 51.6859, 14.2563, 1.03", "34.8506, 53.2794, 14.8722, 0.81", "35.0261, 54.1095, 15.2533, 0.66", "35.2186, 55.0114, 15.7363, 0.88", "35.4018, 55.8656, 16.2787, 0.88", "35.6883, 56.9649, 17.098, 1.4", "36.0611, 57.9937, 17.9996, 1.25", "36.5283, 58.866, 18.8855, 1.4", "37.2703, 59.8606, 19.9184, 0.59", "37.6944, 60.2881, 20.357, 0.59", "38.298, 60.796, 20.8192, 0.52", "39.0768, 61.3874, 21.2736, 1.11", "40.0627, 62.1128, 21.7508, 1.4", "41.2334, 63.0041, 22.2686, 1.11", "42.4564, 64.0358, 22.7697, 0.96", "43.482, 65.0456, 23.2007, 0.59", "44.0693, 65.7245, 23.4876, 0.59", "44.6318, 66.5202, 23.8646, 0.96", "45.166, 67.4459, 24.3776, 1.62", "45.6788, 68.4667, 25.07, 1.47", "46.1598, 69.4216, 25.8684, 1.33", "46.5089, 70.0533, 26.5348, 1.47", "47.3255, 71.3787, 28.2031, 0.59", "47.7796, 72.1051, 29.1894, 0.74", "48.2913, 72.9055, 30.3876, 1.18", "48.8947, 73.8212, 31.9242, 1.47", "49.4378, 74.5612, 33.2783, 1.55", "49.7954, 74.9536, 34.0559, 1.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "39.8313, 11.8912, 15.5914, 1.62", "40.6116, 12.054, 15.8276, 1.62", "41.7785, 12.3739, 15.9105, 1.84", "43.4933, 12.8725, 15.8338, 0.88", "44.2296, 13.0806, 15.7884, 0.66", "45.5885, 13.4672, 15.7546, 0.96", "46.8025, 13.8187, 15.7987, 0.74", "48.0501, 14.2614, 15.8756, 1.03", "49.6366, 14.8958, 15.9826, 0.66", "50.5553, 15.285, 16.0808, 1.33", "51.6598, 15.7191, 16.2589, 1.47", "52.9205, 16.154, 16.4703, 0.96", "54.3089, 16.5521, 16.6931, 1.03", "55.7631, 16.8405, 16.8661, 0.81", "56.9021, 16.9281, 16.9063, 0.96", "58.3926, 16.848, 16.8368, 1.11", "59.8331, 16.6171, 16.707, 1.11", "61.319, 16.2411, 16.5648, 1.33", "62.6145, 15.8209, 16.4712, 0.88", "64.0327, 15.3269, 16.4416, 0.88", "65.6487, 14.7875, 16.4928, 0.59", "66.7167, 14.5205, 16.6162, 0.88", "67.7765, 14.3765, 16.8442, 1.03", "68.985, 14.3516, 17.1728, 0.74", "70.0997, 14.4483, 17.5247, 0.96", "70.9941, 14.6174, 17.8405, 1.25", "72.7328, 15.0918, 18.4585, 0.66", "73.8004, 15.4524, 18.7828, 1.11", "74.4746, 15.7205, 18.9282, 1.11", "75.8242, 16.2881, 19.1094, 0.74", "77.409, 16.9491, 19.1816, 0.52", "78.6175, 17.4137, 19.1421, 0.88", "79.8575, 17.7919, 19.0141, 0.66", "81.7556, 18.2386, 18.8268, 0.44", "82.5296, 18.3862, 18.7901, 0.96", "83.338, 18.5073, 18.7937, 1.11", "84.6347, 18.6909, 18.9253, 0.96", "86.0776, 18.923, 19.2393, 1.33", "87.8866, 19.299, 19.9018, 0.44", "88.8308, 19.5625, 20.4568, 0.66", "89.5144, 19.8029, 20.9636, 1.18", "90.8269, 20.329, 22.0352, 0.96", "91.4681, 20.605, 22.5663, 0.74", "92.5409, 21.0556, 23.3543, 0.29", "94.5378, 21.7393, 24.4455, 0.52", "95.6418, 21.9712, 24.8271, 0.81", "97.3152, 22.1215, 25.1552, 0.88", "98.4324, 22.1236, 25.1847, 1.11", "100.048, 22.0657, 25.0151, 1.11", "101.685, 21.9522, 24.6249, 0.74", "103.041, 21.8202, 24.1635, 0.59", "103.745, 21.7212, 23.9107, 0.37", "105.035, 21.4849, 23.5338, 0.37", "105.761, 21.3407, 23.4104, 0.37", "106.686, 21.1659, 23.4221, 0.66", "107.439, 21.0361, 23.5734, 0.88", "108.984, 20.8231, 24.1036, 0.74", "110.432, 20.6413, 24.7145, 0.59", "111.137, 20.5556, 25.0583, 0.88", "112.461, 20.4021, 25.7387, 0.66", "113.513, 20.2922, 26.3006, 0.96", "114.758, 20.1544, 26.9973, 1.4", "116.796, 19.8821, 28.2467, 0.37", "117.766, 19.7394, 28.8682, 0.37", "118.834, 19.5489, 29.5955, 0.88", "119.496, 19.4041, 30.058, 1.25", "120.572, 19.155, 30.808, 1.33", "121.963, 18.8402, 31.8147, 0.74", "123.207, 18.6018, 32.7789, 0.88", "124.343, 18.4485, 33.6818, 0.37", "124.92, 18.4222, 34.1671, 0.52", "126.074, 18.4713, 35.1648, 0.22", "126.579, 18.5384, 35.583, 0.22", "127.231, 18.6828, 36.0973, 0.29", "128.054, 18.9178, 36.6634, 0.44", "129.115, 19.2721, 37.2749, 0.44", "130.171, 19.6396, 37.8197, 1.03", "131.222, 20.0159, 38.3124, 1.47", "132.54, 20.4982, 38.8343, 1.7", "134.893, 21.4464, 39.5186, 0.37", "136.463, 22.1804, 39.8296, 0.37", "137.542, 22.7758, 39.9752, 0.66", "138.473, 23.4019, 40.0417, 1.03", "139.621, 24.3088, 40.0658, 1.03", "141.081, 25.6123, 39.9872, 0.74", "142.315, 26.8446, 39.8486, 0.44", "143.046, 27.6161, 39.7608, 0.96", "144.245, 28.8718, 39.5979, 1.55", "145.446, 30.0025, 39.4311, 0.37", "146.361, 30.7184, 39.3325, 0.88", "147.077, 31.1807, 39.2806, 1.03", "148.851, 32.1775, 39.1484, 0.37", "150.138, 32.8503, 39.0592, 0.59", "151.78, 33.6863, 38.9808, 0.59", "153.664, 34.6943, 38.8754, 0.44", "154.609, 35.2436, 38.8069, 1.18", "155.317, 35.6993, 38.7222, 1.4", "157.184, 37.0318, 38.3953, 0.29", "157.906, 37.6135, 38.2635, 0.59", "159.049, 38.6299, 38.0553, 1.25", "160.289, 39.7866, 37.815, 0.44", "161.167, 40.6007, 37.6516, 0.88", "162.095, 41.4442, 37.4817, 1.4", "163.005, 42.2543, 37.3222, 1.4", "164.559, 43.6065, 37.0915, 0.52", "165.337, 44.2544, 37.01, 0.37", "166.345, 45.0544, 36.9391, 0.66", "167.254, 45.7346, 36.8968, 1.03", "167.845, 46.1699, 36.875, 1.4", "168.705, 46.8254, 36.8463, 0.66", "169.807, 47.702, 36.8559, 0.44", "170.872, 48.5564, 36.9107, 0.59", "172.595, 49.9529, 37.0641, 0.44", "173.203, 50.4628, 37.1278, 0.59", "174.459, 51.5502, 37.2782, 0.52", "175.582, 52.541, 37.3975, 0.44", "176.164, 53.0833, 37.4736, 0.96", "176.66, 53.5562, 37.5643, 1.18", "177.385, 54.2313, 37.7462, 0.59", "178.044, 54.797, 37.9083, 0.37", "179.195, 55.6931, 38.1522, 0.96", "180.633, 56.711, 38.3564, 0.88", "181.934, 57.576, 38.5022, 0.52", "183.3, 58.4353, 38.6306, 0.29", "184.286, 59.0213, 38.7077, 0.29", "185.334, 59.6192, 38.7445, 0.74", "186.597, 60.3108, 38.7471, 0.52", "187.501, 60.7773, 38.6874, 0.74", "188.26, 61.1459, 38.6139, 1.25", "189.068, 61.4943, 38.5399, 1.25", "190.736, 62.122, 38.4526, 0.59", "191.552, 62.3735, 38.4316, 0.88", "192.584, 62.6048, 38.4297, 1.18", "193.773, 62.7373, 38.4517, 0.88", "195.144, 62.7304, 38.5165, 0.29", "195.834, 62.6379, 38.5908, 0.37", "196.545, 62.4886, 38.7442, 0.44", "197.373, 62.3129, 38.9942, 0.22", "198.31, 62.128, 39.2738, 0.29", "198.817, 62.0499, 39.4033, 1.03", "200.19, 61.9348, 39.6285, 1.62", "202.1, 61.8848, 39.8368, 0.74", "203.518, 61.8895, 39.9179, 0.52", "205.253, 61.91, 39.8579, 0.88", "206.303, 61.9147, 39.6717, 1.18", "207.702, 61.9016, 39.3482, 1.18", "209.001, 61.844, 39.0327, 0.29", "210.027, 61.7346, 38.8323, 0.29", "211.472, 61.5025, 38.787, 0.96", "212.983, 61.1972, 39.1252, 1.18", "214.91, 60.8167, 39.7828, 0.44", "216.439, 60.5963, 40.3009, 1.03", "217.748, 60.5031, 40.6999, 0.37", "218.892, 60.5278, 41.0667, 1.33", "220.694, 60.7693, 41.6237, 0.22", "221.957, 61.0597, 41.9473, 1.55", "224.198, 61.804, 42.2376, 0.29", "224.783, 62.0317, 42.2745, 0.88", "225.807, 62.4505, 42.307, 1.4", "227.522, 63.1696, 42.4021, 0.44", "228.285, 63.4631, 42.4926, 0.44", "229.397, 63.8201, 42.7219, 0.96", "230.582, 64.1259, 43.0564, 0.44", "231.611, 64.3575, 43.3412, 0.44", "232.755, 64.5672, 43.7075, 0.44", "233.849, 64.7372, 44.1648, 0.44", "235.082, 64.9245, 44.7973, 0.37", "236.0, 65.0515, 45.3387, 1.18", "236.613, 65.11, 45.7357, 1.18", "238.463, 65.1584, 46.9662, 0.37", "239.623, 65.1182, 47.6677, 0.74", "240.763, 65.0361, 48.2547, 0.96", "241.663, 64.9251, 48.6202, 0.29", "242.773, 64.7891, 48.8996, 0.22", "243.649, 64.7035, 48.9996, 0.88", "245.721, 64.5782, 49.0299, 0.22", "247.237, 64.5461, 49.0578, 0.81", "247.748, 64.5631, 49.0928, 1.11", "249.307, 64.7805, 49.3463, 0.29", "249.994, 64.9627, 49.5353, 0.44", "251.408, 65.4494, 50.1728, 0.29", "252.446, 65.8452, 50.8649, 0.59", "253.084, 66.0849, 51.3772, 0.22", "253.642, 66.2527, 51.842, 0.22", "254.151, 66.3464, 52.2762, 0.74", "255.512, 66.5327, 53.3964, 0.37", "256.426, 66.6156, 54.0731, 1.33", "257.229, 66.6478, 54.653, 1.77", "258.647, 66.6203, 55.7226, 0.29", "259.461, 66.5463, 56.3493, 1.18" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "39.8313, 11.8912, 15.5914, 0.74", "40.3949, 12.2582, 16.9188, 0.74", "41.1775, 12.5926, 18.7967, 0.74", "41.7794, 12.7217, 20.4437, 0.74", "42.2899, 12.7607, 22.2129, 0.74", "42.5456, 12.7227, 23.5297, 0.74", "42.7287, 12.6466, 25.0702, 1.03", "42.799, 12.4948, 26.9541, 1.18", "42.7313, 12.2723, 29.1111, 0.74", "42.5884, 12.0867, 30.7606, 0.74", "42.3163, 11.8515, 32.7985, 0.52", "42.1223, 11.7013, 34.0431, 0.52", "41.8819, 11.5068, 35.6649, 0.52", "41.7358, 11.3292, 36.8788, 0.52", "41.66, 11.1319, 37.818, 0.52", "41.5609, 10.4335, 39.9314, 0.52", "41.5031, 9.63794, 41.5052, 1.03", "41.4085, 8.49935, 42.9693, 1.03", "41.2858, 7.39352, 43.9223, 0.66", "41.1322, 6.1577, 44.6526, 0.96", "40.9322, 4.54587, 45.3269, 1.25", "40.6959, 2.61507, 45.862, 0.66", "40.5508, 1.28211, 46.1483, 0.37", "40.4319, 0.298131, 46.3167, 0.52", "40.2499, -0.822959, 46.5136, 0.44", "39.9279, -2.23343, 46.8601, 0.88", "39.718, -2.87204, 47.1056, 0.88", "38.981, -4.50028, 47.9777, 0.44", "38.5597, -5.25923, 48.4266, 0.22", "38.0105, -6.22573, 48.9789, 0.22", "37.3905, -7.3669, 49.5981, 0.44", "37.0409, -8.05539, 49.9606, 1.33", "36.5801, -9.00272, 50.4978, 1.11", "36.1585, -9.82747, 51.0176, 0.81", "35.5177, -11.0865, 51.9134, 0.37", "34.9359, -12.2572, 52.8027, 0.29", "34.3492, -13.4112, 53.6771, 0.88", "33.781, -14.464, 54.489, 0.88", "33.0648, -15.694, 55.4176, 1.11", "32.2156, -17.0511, 56.3943, 0.37", "31.7897, -17.6944, 56.8083, 0.37", "31.0617, -18.8332, 57.3391, 0.29", "30.5662, -19.6849, 57.5623, 1.03", "30.0313, -20.7408, 57.6268, 0.22", "29.7813, -21.3768, 57.5643, 0.37", "29.5587, -22.0727, 57.4225, 1.18", "29.3191, -23.0179, 57.2068, 1.92", "29.1363, -24.1638, 56.9595, 0.37", "29.0817, -25.2621, 56.7577, 0.15", "29.1358, -26.5784, 56.5696, 0.22", "29.2793, -28.1183, 56.5179, 0.22", "29.3813, -29.1992, 56.5573, 0.22", "29.4696, -30.2056, 56.6399, 1.18", "29.5341, -31.465, 56.7876, 1.99", "29.5112, -32.5373, 56.9475, 1.25", "29.2268, -35.281, 57.3684, 0.37", "28.9433, -36.9917, 57.6599, 0.22", "28.8139, -37.5293, 57.7544, 0.66", "28.4621, -38.6431, 57.9396, 1.03", "27.9835, -39.8969, 58.1379, 0.29", "27.5583, -40.8861, 58.2856, 0.29", "27.1128, -41.8681, 58.4027, 1.18", "26.783, -42.6901, 58.4867, 1.18", "26.2159, -44.3209, 58.6199, 0.29", "25.9345, -45.2749, 58.6688, 0.29", "25.6389, -46.4122, 58.6878, 0.81", "25.3859, -47.4935, 58.6652, 0.29", "25.1012, -48.7544, 58.5578, 0.29", "24.9412, -49.4614, 58.4517, 0.29", "24.7041, -50.4111, 58.2332, 0.29", "24.4082, -51.3953, 57.938, 0.29", "24.0415, -52.4923, 57.5827, 0.59", "23.6278, -53.6792, 57.2117, 1.33", "23.1569, -55.0788, 56.8885, 1.4", "22.844, -56.1277, 56.684, 1.4", "22.2933, -58.3836, 56.402, 0.59", "21.9733, -60.1995, 56.3081, 0.52", "21.8045, -61.8495, 56.3701, 0.81", "21.75, -63.9889, 56.6311, 0.29", "21.7919, -64.8508, 56.7915, 0.81", "21.925, -66.2867, 57.1082, 1.11", "22.053, -67.4153, 57.3446, 1.25", "22.261, -69.5609, 57.6919, 0.37", "22.3467, -70.7746, 57.8059, 0.59", "22.4012, -71.9631, 57.8161, 1.33", "22.4244, -73.3536, 57.7648, 0.96", "22.3988, -74.9161, 57.5934, 0.37", "22.3684, -75.6229, 57.4907, 0.37", "22.2731, -76.914, 57.2733, 0.59", "22.0667, -78.7417, 56.939, 0.37", "21.8842, -80.0151, 56.6894, 0.37", "21.687, -81.3566, 56.3961, 0.81", "21.4947, -82.628, 56.0815, 1.11", "21.2429, -84.136, 55.6156, 0.66", "20.9254, -85.7844, 54.98, 0.37", "20.738, -86.5784, 54.6203, 0.52", "20.3902, -87.8828, 53.9451, 0.81", "20.0389, -89.0981, 53.2483, 0.81", "19.7014, -90.1498, 52.5946, 1.11", "19.3581, -91.1354, 51.967, 1.47", "18.8724, -92.4405, 51.2114, 1.4", "18.2308, -94.1224, 50.3162, 0.29", "18.0375, -94.6131, 50.0692, 0.29", "17.7513, -95.3282, 49.7026, 0.66", "17.3426, -96.3135, 49.1661, 1.03", "16.6995, -97.7067, 48.3677, 0.37", "16.1389, -98.7826, 47.714, 0.37", "15.5924, -99.6338, 47.1658, 0.66", "14.9363, -100.505, 46.5669, 1.33", "14.3203, -101.205, 46.0636, 1.33", "13.2795, -102.23, 45.318, 0.37", "12.5681, -102.93, 44.9005, 0.37", "11.784, -103.764, 44.5685, 0.37", "11.4205, -104.186, 44.463, 0.81", "10.9636, -104.769, 44.3824, 1.47", "10.352, -105.629, 44.3042, 1.47", "9.17206, -107.35, 44.19, 0.29", "8.54044, -108.252, 44.1232, 0.37", "7.60033, -109.576, 44.0035, 0.29", "7.18733, -110.188, 43.9278, 0.81", "6.80272, -110.783, 43.8406, 1.18", "6.08341, -111.91, 43.65, 0.44", "5.41132, -112.971, 43.4152, 0.37", "4.84323, -113.967, 43.1709, 1.25", "3.99542, -115.711, 42.73, 0.29", "3.7235, -116.316, 42.5823, 0.74", "3.41699, -117.04, 42.4308, 1.11", "2.89, -118.345, 42.1857, 0.29", "2.48337, -119.25, 42.0573, 0.88", "2.05706, -120.083, 41.957, 0.37", "1.50369, -121.078, 41.8522, 0.22", "1.09053, -121.861, 41.8034, 0.66", "0.688605, -122.711, 41.784, 1.33", "-0.0867287, -124.658, 41.8163, 0.96", "-0.408148, -125.696, 41.8508, 0.96", "-0.700851, -127.213, 41.9562, 0.52", "-0.816324, -128.624, 42.094, 0.66", "-0.819722, -129.8, 42.2543, 0.29", "-0.745055, -130.833, 42.4272, 0.44", "-0.606425, -131.811, 42.6165, 0.44", "-0.339927, -133.718, 43.0133, 0.44", "-0.270074, -134.521, 43.1842, 0.59", "-0.315321, -135.774, 43.4343, 0.29", "-0.484722, -136.751, 43.6396, 0.29", "-0.778524, -137.753, 43.8549, 0.22", "-1.06895, -138.499, 44.026, 0.22", "-1.49005, -139.415, 44.2491, 0.88", "-2.1474, -140.729, 44.6132, 0.29", "-2.71125, -141.714, 44.904, 0.22", "-3.2229, -142.52, 45.2026, 0.74", "-3.87822, -143.509, 45.6457, 0.22", "-4.27796, -144.126, 45.9698, 0.88", "-4.71589, -144.833, 46.3637, 0.88", "-5.29161, -145.77, 46.9421, 0.29", "-5.89376, -146.701, 47.5402, 0.29", "-6.33571, -147.393, 47.9835, 0.15", "-6.9094, -148.294, 48.5486, 0.81", "-7.57927, -149.329, 49.1572, 0.37", "-8.33658, -150.438, 49.7721, 0.29", "-8.96065, -151.298, 50.2153, 0.96", "-9.72878, -152.29, 50.662, 0.29", "-10.6301, -153.391, 51.1177, 0.59", "-11.4546, -154.296, 51.4643, 0.22", "-12.2341, -155.042, 51.6619, 0.52", "-12.7221, -155.473, 51.7083, 0.22", "-13.3, -155.943, 51.7066, 0.22", "-13.691, -156.236, 51.6729, 0.22", "-14.5496, -156.863, 51.547, 0.88", "-15.8669, -157.773, 51.3612, 0.22", "-16.6046, -158.215, 51.2761, 0.22", "-17.5418, -158.667, 51.2198, 0.74", "-18.3781, -158.975, 51.2017, 1.03", "-19.3261, -159.253, 51.2208, 1.25", "-20.9988, -159.673, 51.3363, 0.44", "-22.9275, -160.119, 51.5558, 0.22", "-24.1925, -160.415, 51.643, 0.22", "-25.1194, -160.667, 51.6692, 0.74", "-26.1671, -161.068, 51.6427, 0.15", "-26.8949, -161.464, 51.5265, 0.15", "-27.4945, -161.958, 51.2519, 0.44", "-28.4408, -163.104, 50.4018, 0.22", "-28.9328, -163.848, 49.7259, 0.96", "-29.4524, -164.805, 48.6976, 0.22", "-29.8244, -165.6, 47.7089, 0.15", "-30.2077, -166.451, 46.5474, 0.15", "-30.4872, -167.098, 45.5866, 0.22", "-30.7754, -167.796, 44.4628, 0.22", "-31.0195, -168.434, 43.2538, 0.22", "-31.1533, -168.845, 42.3138, 0.22" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-74.4753, -53.3654, -10.1652, 0.29", "-76.1701, -54.1392, -9.95995, 0.29", "-76.96, -54.571, -9.70224, 0.29", "-77.3312, -54.8033, -9.55136, 0.88", "-77.6363, -55.011, -9.42334, 0.88", "-78.2116, -55.4658, -9.17834, 0.74", "-79.1457, -56.2879, -8.77717, 0.37", "-80.4386, -57.7798, -8.13155, 0.37", "-80.7482, -58.2091, -7.93657, 0.74", "-81.3419, -59.1406, -7.46842, 0.81", "-82.0667, -60.3285, -6.79191, 0.59", "-82.4525, -60.9743, -6.38233, 0.81", "-82.9504, -61.8686, -5.71856, 0.29", "-83.4384, -62.7845, -4.91869, 0.37", "-83.824, -63.5139, -3.94234, 0.59", "-83.9965, -63.9094, -3.03622, 0.59", "-84.0484, -64.0702, -2.46517, 0.66", "-84.0756, -64.371, -1.17921, 0.66", "-84.0288, -64.5654, -0.385128, 0.66", "-83.7803, -64.9228, 0.856903, 0.66", "-83.087, -65.6198, 2.87976, 0.66", "-82.5376, -66.0934, 4.05806, 0.96", "-82.0266, -66.4982, 4.96958, 1.11", "-81.2804, -67.0556, 6.10926, 0.59", "-80.2411, -67.7897, 7.49492, 0.22", "-79.6382, -68.1941, 8.16168, 0.52", "-79.0059, -68.6371, 8.75077, 0.66", "-78.1712, -69.3411, 9.45334, 0.29", "-77.6096, -69.97, 9.90102, 0.88", "-77.4179, -70.3376, 10.0596, 1.55", "-77.1496, -71.385, 10.2666, 0.59", "-76.9274, -72.8214, 10.3601, 0.22", "-76.7817, -74.1049, 10.3299, 0.22", "-76.7196, -74.7086, 10.2767, 0.74", "-76.5947, -75.6191, 10.2026, 1.55", "-76.5076, -76.0528, 10.1879, 1.55", "-76.2829, -76.8216, 10.2061, 0.74", "-75.8484, -77.8722, 10.332, 0.22", "-75.6003, -78.3647, 10.4232, 0.88", "-75.0742, -79.3039, 10.6148, 1.62", "-74.5293, -80.1695, 10.7928, 0.96", "-73.7776, -81.2557, 11.027, 0.44", "-72.8975, -82.4108, 11.286, 0.52", "-71.949, -83.5321, 11.5366, 0.22", "-71.7373, -83.7687, 11.5931, 0.22", "-71.4406, -84.1058, 11.6683, 0.22", "-71.1603, -84.4316, 11.7386, 0.22", "-70.9397, -84.7007, 11.7738, 0.44", "-70.3069, -85.5153, 11.7511, 0.88", "-69.4837, -86.6156, 11.5542, 0.22", "-68.9073, -87.4124, 11.3075, 0.29", "-68.3522, -88.2124, 10.9717, 0.29", "-67.8381, -89.0025, 10.5778, 0.29", "-67.2848, -89.8888, 10.0917, 0.29", "-66.7516, -90.7723, 9.57372, 0.29", "-66.2745, -91.533, 9.11193, 0.59", "-65.8315, -92.223, 8.73615, 0.81", "-65.23, -93.1697, 8.30291, 1.4", "-64.6795, -94.0536, 8.00847, 0.59", "-64.2142, -94.8271, 7.8337, 0.29", "-63.8335, -95.488, 7.77019, 0.44", "-63.4452, -96.1656, 7.76525, 0.44", "-62.8524, -97.1506, 7.76966, 0.37", "-62.4151, -97.8471, 7.7709, 1.33", "-61.9983, -98.5084, 7.76242, 1.84", "-61.2295, -99.8288, 7.73048, 0.29", "-60.8503, -100.548, 7.70788, 0.59", "-60.1427, -101.988, 7.63441, 0.22", "-59.9175, -102.494, 7.57539, 0.74", "-59.676, -103.074, 7.44289, 1.11", "-59.1601, -104.439, 7.04065, 0.22", "-58.9646, -104.969, 6.85707, 0.15", "-58.6791, -105.769, 6.56344, 0.88", "-58.2522, -106.971, 6.12438, 0.37", "-57.8631, -108.055, 5.69613, 0.74", "-57.3924, -109.32, 5.15071, 0.15", "-57.1064, -110.008, 4.81925, 0.15", "-56.83, -110.647, 4.51092, 0.74", "-56.5713, -111.216, 4.26474, 0.88" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-74.4753, -53.3654, -10.1652, 0.29", "-74.3252, -54.5312, -10.7129, 0.29", "-74.298, -55.0648, -10.9889, 0.74", "-74.3303, -55.6614, -11.2973, 0.88", "-74.4909, -56.6798, -11.7843, 0.52", "-74.7891, -57.6254, -12.1678, 0.52", "-75.2569, -58.7559, -12.5103, 0.74", "-75.6599, -59.4624, -12.6373, 0.88", "-76.1525, -60.2221, -12.695, 0.96", "-76.6888, -61.0608, -12.7223, 0.96", "-77.5409, -62.4763, -12.7417, 0.74", "-78.0548, -63.4202, -12.7472, 0.74", "-78.5703, -64.523, -12.7645, 0.81", "-78.8706, -65.301, -12.8204, 0.81", "-79.3282, -66.7331, -12.9918, 0.52", "-79.5695, -67.6658, -13.1402, 0.88", "-79.7928, -68.7561, -13.3115, 0.66", "-79.9541, -69.621, -13.4387, 0.96", "-80.1366, -70.6239, -13.5623, 1.18", "-80.3607, -71.8619, -13.7015, 0.59", "-80.5244, -72.9102, -13.8258, 0.52", "-80.6086, -74.0067, -14.0034, 0.96", "-80.5692, -75.0481, -14.2703, 0.74", "-80.4139, -76.0761, -14.6112, 0.59", "-80.0846, -77.2427, -15.1058, 0.59", "-79.7011, -78.2164, -15.6174, 0.44", "-79.2915, -79.1589, -16.2179, 0.37", "-78.9296, -79.9991, -16.8442, 0.66", "-78.638, -80.7605, -17.5147, 0.88", "-78.4085, -81.5757, -18.3556, 0.44", "-78.3513, -82.28, -19.3204, 0.66", "-78.4252, -82.9017, -20.4384, 0.66", "-78.5646, -83.3712, -21.4696, 0.81", "-78.8467, -84.0634, -23.1703, 0.52", "-79.0428, -84.5141, -24.3954, 0.52", "-79.3621, -85.2922, -26.7318, 0.52", "-79.4976, -85.7221, -28.2903, 0.52", "-79.5415, -86.038, -29.6507, 0.52", "-79.5209, -86.4054, -31.3222, 0.44", "-79.4369, -86.6728, -32.5326, 0.44", "-79.2941, -86.94, -33.7357, 0.66", "-79.0022, -87.3159, -35.4055, 0.81", "-78.8988, -87.3913, -35.9476, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-91.9066, -32.9789, -20.9339, 0.29", "-92.7832, -31.5339, -20.9339, 0.29", "-93.2453, -30.772, -20.9339, 0.22", "-93.7357, -29.9636, -20.9339, 0.22", "-94.2473, -29.1202, -20.9339, 0.22", "-99.4378, -20.9222, -22.4704, 0.22", "-104.283, -12.4337, -23.3232, 0.22", "-109.22, -4.0954, -24.9013, 0.22", "-113.997, 3.91086, -28.0235, 0.22", "-117.708, 11.8148, -32.5525, 0.22", "-119.506, 20.8718, -35.7893, 0.22", "-120.717, 30.0503, -38.9377, 0.22", "-120.818, 39.7427, -40.0191, 0.22", "-119.296, 49.379, -40.0579, 0.22", "-117.461, 58.8423, -38.4995, 0.22", "-114.54, 68.0801, -37.1963, 0.22", "-110.852, 77.1252, -36.619, 0.22", "-107.204, 86.0028, -34.6719, 0.22", "-103.198, 94.8981, -33.8269, 0.22", "-98.9447, 103.697, -34.5136, 0.22", "-94.35, 112.332, -33.8373, 0.22", "-90.4591, 121.281, -33.0476, 0.22", "-87.5482, 130.6, -32.6404, 0.22", "-83.7623, 139.589, -31.8211, 0.22", "-79.4026, 148.338, -31.1409, 0.22", "-75.63, 157.305, -30.0553, 0.22", "-72.6315, 166.605, -30.269, 0.22", "-68.9433, 175.607, -31.331, 0.22", "-66.7133, 185.094, -30.7383, 0.22", "-65.4913, 194.646, -29.1421, 0.22", "-65.6204, 204.219, -27.2585, 0.22", "-66.8855, 213.775, -25.7189, 0.22", "-68.7653, 223.299, -24.7065, 0.22", "-69.8913, 232.986, -24.4956, 0.22", "-72.4567, 242.256, -26.2347, 0.22" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-91.9066, -32.9789, -20.9339, 0.96", "-92.8978, -33.3722, -20.8968, 0.96", "-93.5262, -33.6084, -20.8646, 0.88", "-95.345, -34.1429, -20.6986, 0.52", "-96.7716, -34.4295, -20.4751, 0.37", "-97.549, -34.5178, -20.295, 0.59", "-98.6091, -34.6031, -20.0116, 0.52", "-99.2436, -34.6194, -19.8137, 0.74", "-100.538, -34.6601, -19.3229, 0.44", "-101.644, -34.725, -18.7951, 0.44", "-102.97, -34.8485, -18.1086, 0.29", "-103.848, -34.9254, -17.6538, 0.29", "-104.772, -34.9621, -17.2136, 0.22", "-105.935, -34.957, -16.7139, 0.29", "-106.573, -34.947, -16.4762, 0.29", "-107.87, -34.8694, -16.0486, 0.29", "-109.168, -34.6903, -15.6321, 0.29", "-110.425, -34.3921, -15.2247, 0.22", "-111.574, -34.0044, -14.8674, 0.22", "-112.279, -33.7034, -14.6748, 0.29", "-112.63, -33.5407, -14.5871, 0.29", "-122.41, -34.4354, -12.7112, 0.29", "-131.828, -36.0345, -9.77724, 0.29", "-140.898, -37.1971, -5.73802, 0.29", "-149.963, -39.9874, -2.63399, 0.29" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-88.3221, 33.4887, 7.17618, 0.59", "-88.52, 34.027, 6.28686, 0.59", "-88.7231, 34.5373, 5.36178, 0.44", "-88.9852, 35.2385, 4.12945, 0.29", "-89.0747, 35.8376, 3.22204, 0.29", "-89.0392, 36.1562, 2.80384, 0.29", "-88.9851, 36.3362, 2.56935, 0.29", "-88.85, 36.6238, 2.15686, 0.29", "-88.6125, 37.0102, 1.56833, 0.29", "-88.0595, 37.8233, 0.349854, 0.29", "-87.613, 38.4349, -0.594457, 0.22", "-87.135, 39.0723, -1.62733, 0.59", "-86.5257, 39.9788, -3.12829, 1.03", "-86.1898, 40.5417, -4.14946, 1.03", "-85.8924, 41.1318, -5.35865, 0.29", "-85.6914, 41.71, -6.66468, 0.44", "-85.6054, 42.1473, -7.6255, 0.88", "-85.5691, 42.7808, -8.80109, 0.29", "-85.6273, 43.3548, -9.68592, 0.29", "-85.7998, 43.8243, -10.3591, 0.66", "-86.0729, 44.2249, -10.8919, 0.88", "-86.5463, 44.7184, -11.4704, 0.59", "-87.4574, 45.5172, -12.2702, 0.44", "-88.0896, 45.9903, -12.6619, 0.29", "-89.2991, 46.7742, -13.213, 0.22", "-89.8164, 47.0314, -13.3944, 0.22", "-90.7516, 47.3607, -13.6524, 0.59", "-91.7893, 47.5882, -13.8899, 0.29", "-93.3123, 47.7505, -14.1657, 0.22", "-94.2532, 47.7925, -14.3194, 0.22", "-95.3227, 47.7962, -14.4837, 0.44", "-96.3441, 47.7364, -14.6591, 0.44", "-97.4281, 47.5985, -14.8686, 0.74", "-98.4025, 47.3995, -15.0895, 0.44", "-99.3503, 47.133, -15.343, 0.37", "-100.389, 46.7871, -15.6554, 0.96", "-101.77, 46.2509, -16.1113, 0.22", "-102.723, 45.8213, -16.461, 0.74", "-103.418, 45.4799, -16.7211, 0.22", "-104.086, 45.1671, -16.9356, 0.22", "-104.425, 45.0243, -17.007, 0.22", "-104.804, 44.8849, -17.0759, 0.22", "-105.558, 44.6906, -17.201, 0.22", "-106.452, 44.5417, -17.3647, 0.44", "-107.679, 44.3828, -17.6226, 0.74", "-108.885, 44.222, -17.9242, 0.29", "-109.903, 44.0235, -18.2339, 0.44", "-111.057, 43.6942, -18.6586, 0.37", "-111.974, 43.3423, -19.051, 0.81", "-112.684, 43.0114, -19.406, 0.66", "-113.419, 42.6331, -19.8055, 1.03", "-114.599, 42.0119, -20.4675, 0.29", "-115.585, 41.527, -20.9871, 0.52", "-117.014, 40.8976, -21.704, 0.37", "-117.813, 40.6225, -22.059, 0.37", "-119.005, 40.3654, -22.5045, 0.29", "-119.855, 40.2878, -22.766, 0.29", "-120.923, 40.3234, -23.0416, 0.52", "-121.442, 40.3896, -23.1478, 0.52", "-122.008, 40.5086, -23.2481, 0.22", "-122.656, 40.6906, -23.3733, 0.59", "-123.713, 41.0824, -23.6094, 0.29", "-124.063, 41.2452, -23.7026, 0.29", "-125.002, 41.7601, -24.0643, 0.22", "-125.665, 42.1453, -24.3976, 0.37", "-126.342, 42.5637, -24.7927, 0.52", "-126.724, 42.8281, -25.0457, 0.29", "-127.217, 43.2411, -25.4225, 0.44", "-127.994, 43.9526, -26.0931, 0.22", "-128.54, 44.5249, -26.6497, 0.15", "-128.977, 44.9623, -27.0782, 0.29", "-137.108, 48.3563, -31.7447, 0.29", "-144.901, 52.3494, -36.4876, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-88.3221, 33.4887, 7.17618, 1.55", "-89.5784, 33.7272, 6.99543, 1.55", "-90.7209, 34.0002, 6.89001, 0.81", "-91.9271, 34.3812, 6.78691, 0.37", "-93.241, 34.858, 6.6707, 0.59", "-94.0674, 35.1714, 6.57361, 0.59", "-94.9347, 35.492, 6.43742, 0.59", "-95.8886, 35.8759, 6.21286, 0.29", "-96.7933, 36.2556, 5.91061, 0.22", "-97.068, 36.3614, 5.7773, 0.22", "-97.7709, 36.5773, 5.26832, 0.22", "-98.5977, 36.7692, 4.56076, 0.44", "-99.3204, 36.9316, 3.92671, 1.25", "-99.9407, 37.0825, 3.40427, 1.4", "-101.061, 37.3868, 2.55742, 0.66", "-101.873, 37.6717, 2.01314, 0.88", "-102.832, 38.107, 1.48372, 1.47", "-104.09, 38.7972, 1.00611, 0.37", "-104.919, 39.3134, 0.829047, 0.29", "-105.427, 39.6616, 0.765367, 0.88", "-106.047, 40.1292, 0.720401, 0.88", "-106.911, 40.8175, 0.653687, 0.44", "-108.253, 41.9625, 0.511366, 0.44", "-109.359, 42.9489, 0.346723, 0.52", "-110.226, 43.7641, 0.201842, 0.22", "-110.749, 44.2918, 0.10569, 0.22", "-111.368, 44.9944, -0.0220912, 0.22", "-112.014, 45.8613, -0.169153, 0.44", "-112.425, 46.5235, -0.233307, 0.22", "-112.752, 47.0645, -0.243692, 0.74", "-113.148, 47.7104, -0.209849, 1.33", "-113.654, 48.4969, -0.165945, 1.03", "-114.354, 49.5509, -0.117133, 0.37", "-115.215, 50.7352, -0.160349, 0.74", "-116.159, 51.8812, -0.281463, 0.22", "-116.492, 52.2331, -0.33391, 0.52", "-117.357, 53.0076, -0.473357, 1.03", "-117.907, 53.4071, -0.563179, 1.03", "-119.28, 54.1849, -0.840371, 0.22", "-120.435, 54.6777, -1.11083, 0.22", "-121.348, 54.9354, -1.29434, 0.37", "-122.108, 55.0482, -1.41873, 0.44", "-123.001, 55.0503, -1.48647, 0.22", "-124.127, 54.9101, -1.47726, 0.22", "-124.574, 54.8094, -1.44082, 0.37", "-125.51, 54.5498, -1.37719, 0.88", "-126.397, 54.286, -1.34046, 0.96", "-127.832, 53.8577, -1.2513, 1.33", "-129.481, 53.4027, -1.09851, 0.44", "-130.289, 53.1962, -0.988929, 0.22", "-131.249, 52.9494, -0.863675, 0.81", "-132.147, 52.7061, -0.764933, 1.25" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "36.6136, -81.523, -11.1341, 1.7", "36.4376, -82.38, -11.7624, 1.7", "36.2102, -83.5182, -12.4589, 0.81", "35.9916, -84.8966, -13.0855, 0.81", "35.8815, -85.9622, -13.4641, 0.88", "35.8051, -87.4916, -13.8714, 0.59", "35.7921, -88.2955, -13.9936, 0.88", "35.8252, -89.1747, -14.0093, 0.96", "35.963, -90.5825, -13.8186, 0.74", "36.0687, -91.4356, -13.593, 0.88", "36.244, -92.9198, -13.0522, 0.74", "36.4165, -94.4267, -12.4294, 0.81", "36.496, -95.2344, -12.0988, 0.81", "36.5705, -96.0266, -11.7603, 0.52", "36.6713, -97.1088, -11.3299, 0.52", "36.8014, -98.161, -10.9147, 1.03", "37.0046, -99.1511, -10.5121, 1.55", "37.3926, -100.359, -10.0142, 1.4", "37.8631, -101.374, -9.53195, 1.25", "38.5499, -102.568, -8.93566, 0.88", "39.3269, -103.775, -8.37622, 0.52", "40.0441, -104.843, -7.92019, 0.66", "40.7581, -105.932, -7.53498, 0.96", "41.5358, -107.174, -7.22703, 0.96", "42.2503, -108.359, -7.12163, 0.59", "42.8437, -109.367, -7.16557, 1.11", "43.4083, -110.461, -7.39379, 0.59", "44.0721, -111.946, -7.8785, 0.88", "44.4604, -112.871, -8.2614, 1.18", "44.8558, -113.79, -8.69035, 1.11", "45.1241, -114.365, -8.95693, 1.33", "45.6691, -115.481, -9.3836, 0.96", "46.0976, -116.359, -9.64402, 1.25", "46.6564, -117.474, -9.87164, 1.33", "47.0422, -118.255, -10.0401, 1.11", "47.5194, -119.216, -10.2951, 0.44", "48.0329, -120.146, -10.6107, 1.33", "48.5044, -120.797, -10.8965, 1.18", "49.5188, -121.858, -11.5238, 0.88", "50.6764, -122.781, -12.215, 1.11", "51.5855, -123.361, -12.7456, 1.55", "52.3632, -123.775, -13.185, 1.92", "53.907, -124.498, -14.0545, 0.88", "55.0527, -124.953, -14.6408, 0.66", "56.0675, -125.29, -15.0958, 0.52", "56.6961, -125.476, -15.3523, 0.52", "57.6516, -125.742, -15.7764, 0.81", "58.5158, -125.96, -16.2367, 0.66", "59.7376, -126.253, -16.9916, 0.96", "60.6212, -126.451, -17.5551, 0.96", "62.0136, -126.748, -18.3712, 0.81", "63.3142, -127.046, -19.04, 1.03", "64.8732, -127.464, -19.704, 0.81", "66.1273, -127.882, -20.0992, 0.59", "67.0957, -128.27, -20.3052, 0.74", "68.7528, -129.059, -20.456, 1.11", "69.754, -129.652, -20.4284, 0.96", "70.5867, -130.257, -20.3208, 1.33", "71.2898, -130.871, -20.1645, 1.11", "72.1409, -131.703, -19.8957, 0.66", "72.9679, -132.563, -19.5676, 0.66", "73.8521, -133.6, -19.0672, 0.74", "74.4947, -134.495, -18.533, 0.96", "74.8208, -135.117, -18.1321, 1.11", "75.2464, -136.251, -17.4428, 1.11", "75.4977, -137.234, -16.9256, 0.88", "75.7081, -138.322, -16.4779, 0.74", "75.8972, -139.199, -16.2655, 0.96", "76.3613, -140.704, -16.2542, 0.44", "76.9763, -142.11, -16.4876, 0.66", "77.548, -143.133, -16.7792, 1.11", "77.9818, -143.731, -16.9466, 1.25", "78.9504, -144.786, -17.1592, 0.66", "79.8872, -145.671, -17.2143, 0.96", "80.6568, -146.369, -17.171, 0.44", "81.5655, -147.229, -17.0059, 0.44", "82.9291, -148.592, -16.6832, 0.59", "83.9564, -149.701, -16.4292, 0.44", "84.832, -150.734, -16.2206, 0.96", "85.9065, -152.014, -16.0648, 0.37", "86.661, -152.857, -16.0389, 0.96", "87.2302, -153.438, -16.1049, 0.96", "87.8638, -154.044, -16.2892, 0.59", "88.712, -154.813, -16.6216, 1.03", "90.2066, -156.098, -17.2851, 0.52", "91.2962, -157.027, -17.7883, 0.66", "92.4669, -158.07, -18.354, 0.44", "93.32, -158.919, -18.7515, 0.66", "93.8435, -159.542, -18.9904, 1.11", "94.3372, -160.235, -19.2017, 1.11", "94.9251, -161.214, -19.4359, 0.81", "95.4122, -162.02, -19.6007, 0.81", "96.2033, -163.122, -19.7896, 0.59", "96.9131, -164.036, -19.9311, 0.66", "97.8709, -165.151, -20.1268, 0.52", "98.3872, -165.667, -20.2275, 0.52", "99.4211, -166.455, -20.401, 0.74", "100.432, -167.007, -20.5212, 1.11" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "36.6136, -81.523, -11.1341, 1.03", "36.7449, -82.2433, -10.4133, 1.03", "37.0651, -83.3193, -9.30661, 1.03", "37.6839, -84.7898, -7.86647, 1.25", "38.2205, -85.7988, -6.93929, 1.25", "38.8975, -86.8561, -6.028, 1.47", "39.7664, -88.0578, -5.03449, 1.4", "40.3835, -88.782, -4.47902, 1.25", "41.4356, -89.9303, -3.70617, 1.03", "42.2208, -90.7624, -3.19085, 1.03", "42.9862, -91.5851, -2.6763, 0.96", "43.8381, -92.5655, -2.04257, 1.11", "44.4547, -93.3862, -1.51873, 0.74", "45.0273, -94.2598, -0.928607, 1.03", "45.612, -95.2563, -0.198502, 1.47", "46.2178, -96.3942, 0.653012, 1.92", "46.772, -97.4486, 1.44144, 1.47", "47.4476, -98.6741, 2.35788, 1.84", "48.3273, -100.206, 3.48877, 1.03", "48.8124, -101.05, 4.07151, 1.11", "49.3719, -102.008, 4.68817, 1.4", "50.1822, -103.273, 5.45865, 1.18", "50.9648, -104.302, 6.04629, 1.03", "51.9153, -105.335, 6.57881, 0.81", "52.713, -106.096, 6.92726, 0.66", "53.6864, -106.958, 7.23556, 0.66", "54.699, -107.799, 7.42611, 1.18", "55.8412, -108.734, 7.45503, 1.33", "57.1018, -109.757, 7.28943, 0.52", "57.8202, -110.362, 7.09607, 0.96", "58.7927, -111.248, 6.70042, 1.62", "59.6238, -112.081, 6.23952, 1.47", "60.5422, -113.049, 5.61648, 1.03", "61.1432, -113.693, 5.1422, 1.55", "62.3162, -114.918, 4.12494, 0.74", "63.2359, -115.847, 3.32671, 1.25", "63.7588, -116.373, 2.88858, 1.33", "64.7569, -117.371, 2.10258, 0.66", "65.4688, -118.046, 1.58855, 0.96", "66.3486, -118.852, 0.972856, 1.62", "66.8624, -119.301, 0.61808, 1.99", "68.3114, -120.494, -0.310173, 0.66", "69.1483, -121.151, -0.82197, 1.11", "69.8167, -121.677, -1.27497, 1.33", "70.741, -122.436, -1.99929, 0.59", "71.2975, -122.944, -2.52699, 1.11", "72.1332, -123.815, -3.52658, 0.44", "72.5888, -124.364, -4.23964, 0.59", "73.399, -125.521, -5.83216, 0.81", "73.8199, -126.229, -6.82899, 0.59", "74.1818, -126.897, -7.75301, 0.59", "74.5224, -127.598, -8.6682, 0.59", "75.0218, -128.774, -10.0625, 1.03", "75.2953, -129.424, -10.7479, 0.88", "75.6952, -130.4, -11.5776, 1.03", "76.0769, -131.445, -12.2954, 0.52", "76.3802, -132.49, -12.8216, 0.52", "76.6092, -133.572, -13.1856, 0.74", "76.6942, -134.143, -13.3181, 0.88", "76.8748, -135.57, -13.6035, 0.66", "76.9908, -136.415, -13.7798, 1.18", "77.1954, -137.535, -14.08, 0.66", "77.4939, -138.634, -14.4593, 0.66", "77.8677, -139.607, -14.8721, 0.88", "78.3127, -140.52, -15.309, 0.74", "79.0417, -141.74, -15.922, 0.59", "79.7016, -142.719, -16.3614, 0.59", "80.2493, -143.509, -16.6398, 0.52", "80.7631, -144.272, -16.8289, 0.44", "81.1606, -144.934, -16.9516, 0.59", "81.6621, -145.952, -17.1339, 1.03", "82.189, -147.382, -17.4599, 0.74", "82.5826, -148.697, -17.9079, 0.52", "82.7918, -149.356, -18.2642, 0.37", "83.1926, -150.357, -19.1456, 0.52", "83.6334, -151.083, -20.1272, 0.52", "84.1406, -151.647, -21.2197, 0.66", "84.7382, -152.128, -22.4519, 0.74", "85.3787, -152.562, -23.7236, 0.52", "86.1277, -153.057, -25.178, 0.88", "86.778, -153.516, -26.405, 0.59", "87.1272, -153.811, -27.1086, 0.52", "87.2992, -154.008, -27.5383, 0.52", "87.6286, -154.615, -28.7199, 0.66", "87.8441, -155.135, -29.6676, 0.52", "88.098, -155.602, -30.5505, 0.81", "88.5053, -156.07, -31.5669, 0.66", "89.037, -156.389, -32.4822, 0.81", "89.7659, -156.664, -33.5, 0.59", "90.7909, -156.926, -34.7185, 0.88", "91.8811, -157.201, -35.8354, 0.52", "92.8916, -157.462, -36.7663, 0.88", "94.1639, -157.817, -37.8894, 0.44", "95.1299, -158.085, -38.739, 0.74", "95.7688, -158.242, -39.3381, 0.52", "97.1087, -158.574, -40.7536, 0.44", "97.7008, -158.749, -41.5026, 0.37", "98.428, -159.005, -42.6259, 0.37", "98.8362, -159.212, -43.3806, 0.29", "99.4165, -159.572, -44.4941, 0.29", "99.7128, -159.809, -45.0484, 0.29", "100.048, -160.145, -45.6198, 0.29", "100.483, -160.746, -46.1459, 0.29", "101.286, -161.977, -46.8025, 0.29", "101.837, -162.771, -47.0971, 0.22", "102.408, -163.602, -47.3308, 0.22", "102.89, -164.279, -47.4851, 0.22", "103.652, -165.332, -47.6698, 0.22", "104.017, -165.822, -47.7352, 0.22", "104.735, -166.63, -47.8558, 0.22", "110.556, -173.473, -51.9606, 0.22", "115.247, -181.673, -54.6597, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "38.0789, -35.9871, -42.661, 0.29", "36.6087, -35.8451, -41.9622, 0.29", "35.1292, -35.6999, -41.1752, 0.22", "34.0153, -35.6094, -40.4615, 0.29", "32.9898, -35.5523, -39.6135, 0.29", "32.5305, -35.5455, -39.1137, 0.29", "32.2745, -35.5537, -38.7238, 0.29", "31.9452, -35.5688, -37.988, 0.29", "31.7676, -35.6339, -37.1602, 0.29", "31.6524, -35.7319, -36.1181, 0.29", "31.6703, -35.859, -35.1991, 0.52", "31.7634, -36.0592, -34.0191, 0.52", "25.8574, -36.2069, -25.9509, 0.52", "18.6513, -36.8318, -19.0472, 0.52" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "38.0789, -35.9871, -42.661, 0.81", "37.8607, -37.6843, -43.7196, 0.81", "37.702, -38.6533, -44.325, 0.81", "37.5191, -39.7997, -44.9875, 0.81", "37.3437, -40.9316, -45.5979, 0.59", "37.1657, -42.0065, -46.1196, 0.59", "37.0283, -42.9254, -46.5274, 1.18", "36.9597, -43.4459, -46.7127, 1.4", "36.8826, -44.4865, -47.0189, 0.22", "36.8849, -44.9189, -47.1012, 0.22", "36.9638, -46.0406, -47.0931, 0.37", "37.0835, -47.2068, -46.7407, 0.22", "37.1757, -47.9791, -46.2763, 0.22", "37.2315, -49.1071, -45.3337, 0.29", "37.1616, -49.9159, -44.4433, 0.29", "37.076, -50.5481, -43.5976, 0.29", "36.9829, -50.9517, -42.9028, 0.29", "36.8715, -51.2038, -42.3777, 0.29", "36.5865, -51.6296, -41.4703, 0.22", "36.2653, -51.9953, -40.8794, 0.22", "35.731, -61.7284, -41.1262, 0.22", "34.9403, -71.4361, -40.6359, 0.22", "32.602, -80.8829, -39.8266, 0.22", "30.2848, -90.3633, -39.5355, 0.22" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "67.1679, 100.17, -43.5893, 0.15", "71.2924, 106.894, -49.5418, 0.15", "75.8063, 113.911, -54.8163, 0.15", "78.6911, 120.697, -61.392, 0.15" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "67.1679, 100.17, -43.5893, 0.15", "70.79, 107.206, -49.4887, 0.15", "74.8076, 114.974, -54.0028, 0.15", "77.8621, 123.098, -58.6131, 0.15" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "49.7954, 74.9536, 34.0559, 1.18", "50.6599, 74.4566, 34.6956, 1.18", "52.0372, 73.6647, 35.7149, 0.66" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "49.7954, 74.9536, 34.0559, 0.66", "49.5732, 76.0296, 34.2528, 0.66", "49.5289, 77.1556, 34.4147, 0.29", "49.6004, 77.7636, 34.4812, 0.29", "49.7073, 78.2506, 34.5229, 0.29", "49.8339, 78.7605, 34.5814, 0.66", "49.9811, 79.3596, 34.6573, 0.96", "50.2647, 80.4311, 34.7851, 0.29", "50.5261, 81.4134, 34.8842, 0.52", "50.7223, 82.226, 34.949, 0.22", "50.8995, 83.2683, 35.0085, 0.66", "50.9473, 83.7291, 35.0271, 0.74", "50.9964, 85.1042, 35.0602, 0.52", "50.9855, 85.8392, 35.0897, 0.81", "50.9616, 87.0179, 35.1824, 1.18", "50.9833, 88.5942, 35.3448, 0.37", "51.0194, 89.0894, 35.403, 0.96", "51.1243, 89.853, 35.5458, 1.55", "51.3665, 90.9877, 35.846, 0.66", "51.6465, 92.1094, 36.2489, 0.22", "51.7878, 92.6255, 36.5035, 0.22", "51.9074, 93.0577, 36.7652, 0.96", "52.1373, 93.9805, 37.3857, 1.4", "52.3009, 94.6678, 37.9149, 0.74", "52.5644, 95.8764, 38.8526, 0.52", "52.7526, 96.8272, 39.5402, 0.37", "52.9016, 97.5958, 40.0624, 0.37", "52.9982, 98.0388, 40.3637, 0.66", "53.2253, 98.975, 40.9377, 0.88", "53.6262, 100.622, 41.8321, 0.29", "53.8918, 101.692, 42.2913, 0.96", "54.0045, 102.171, 42.4482, 1.47", "54.2471, 103.293, 42.7413, 1.7", "54.5378, 104.774, 43.0529, 0.44", "54.6545, 105.499, 43.1811, 0.44", "54.7743, 106.415, 43.3475, 0.29", "54.8326, 107.288, 43.5323, 0.96", "54.8396, 107.948, 43.665, 1.25", "54.7981, 108.856, 43.8274, 1.25", "54.652, 110.29, 44.1134, 0.22", "54.5509, 110.916, 44.2435, 0.96", "54.2005, 112.367, 44.5766, 0.15", "53.918, 113.389, 44.8308, 0.22", "53.6997, 114.179, 45.0258, 0.22", "53.5285, 114.785, 45.1694, 1.03", "53.2298, 115.835, 45.3967, 1.92", "52.8074, 117.376, 45.7281, 1.47", "52.337, 119.191, 46.1169, 0.44", "51.9811, 120.579, 46.4271, 0.22", "51.754, 121.511, 46.6382, 0.22", "51.4461, 122.838, 46.938, 0.29", "51.163, 124.087, 47.2041, 0.22", "50.9294, 124.997, 47.3683, 1.25" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-78.8988, -87.3913, -35.9476, 0.22", "-79.596, -86.2374, -35.1531, 0.22", "-80.2166, -85.2103, -34.446, 0.22", "-80.8368, -84.1841, -33.7393, 0.22", "-81.3563, -83.3243, -33.1474, 0.15", "-81.7997, -82.5906, -32.6422, 0.15", "-81.9474, -82.3461, -32.4739, 0.15", "-86.1032, -74.9682, -27.4274, 0.15", "-90.1946, -67.8362, -21.9727, 0.15", "-94.7217, -60.6635, -16.9342, 0.15", "-99.4855, -53.075, -12.8442, 0.15", "-103.583, -45.2928, -8.42809, 0.15", "-109.245, -38.2037, -4.54453, 0.15", "-115.157, -30.8432, -1.70545, 0.15", "-120.769, -23.0525, 0.450886, 0.15" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-78.8988, -87.3913, -35.9476, 0.29", "-79.9031, -86.6527, -36.3121, 0.29", "-80.8173, -85.9804, -36.6439, 0.29", "-81.8513, -85.2199, -37.0192, 0.15", "-89.3573, -79.1184, -39.14, 0.15", "-97.1694, -73.0393, -39.4482, 0.15", "-105.813, -68.6255, -41.639, 0.15", "-115.339, -65.6595, -41.7274, 0.15", "-124.111, -61.0868, -42.7537, 0.15", "-132.565, -55.951, -43.6393, 0.15" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-144.901, 52.3494, -36.4876, 0.15", "-151.933, 56.2476, -42.3668, 0.15", "-158.786, 58.8552, -49.141, 0.15", "-165.836, 62.6418, -55.0752, 0.15" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-144.901, 52.3494, -36.4876, 0.15", "-152.782, 54.2001, -42.3435, 0.15", "-160.31, 56.5212, -48.4797, 0.15", "-167.42, 59.2271, -54.9416, 0.15" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-132.147, 52.7061, -0.764933, 0.22", "-132.733, 51.9205, -1.61229, 0.22", "-133.139, 51.6045, -2.14311, 0.22", "-133.47, 51.4122, -2.52093, 0.22", "-133.895, 51.1882, -2.9909, 0.22", "-134.274, 50.9819, -3.4013, 0.74", "-135.159, 50.4448, -4.38555, 0.29", "-135.835, 50.0481, -5.12953, 0.29", "-136.402, 49.7319, -5.73853, 0.22", "-136.996, 49.3981, -6.33404, 0.59", "-137.579, 49.0447, -6.91357, 0.66", "-138.105, 48.6569, -7.4909, 0.22", "-138.671, 48.0933, -8.22778, 0.22", "-138.861, 47.8471, -8.52565, 0.22", "-139.076, 47.4745, -8.97899, 0.22", "-139.294, 46.9303, -9.62168, 0.22", "-139.407, 46.2328, -10.4629, 0.44", "-139.359, 45.6503, -11.1406, 0.88", "-139.217, 45.1767, -11.6515, 0.96", "-138.952, 44.5325, -12.2797, 0.52", "-138.725, 44.0885, -12.6703, 0.15", "-138.244, 43.2949, -13.2678, 0.44", "-137.941, 42.8584, -13.5789, 0.44", "-137.745, 42.6078, -13.7655, 0.22", "-137.496, 42.317, -14.0231, 0.22", "-137.3, 42.0994, -14.2472, 0.22", "-136.873, 41.5719, -14.8593, 0.29", "-136.532, 41.0658, -15.4769, 0.29", "-136.247, 40.5618, -16.0824, 0.29", "-135.974, 39.9571, -16.784, 0.66", "-135.725, 39.2414, -17.6141, 0.81", "-135.517, 38.464, -18.4839, 0.59", "-135.384, 37.8384, -19.1148, 0.59", "-135.249, 37.1629, -19.7302, 0.81", "-135.072, 36.1562, -20.5724, 0.29", "-134.945, 35.2861, -21.2221, 0.29", "-134.881, 34.6359, -21.6441, 0.66", "-134.819, 33.7061, -22.1417, 0.29", "-134.761, 32.5172, -22.656, 0.22", "-134.76, 32.0248, -22.8243, 0.22", "-134.835, 31.2789, -22.9881, 0.22", "-135.06, 30.249, -23.0892, 0.29", "-135.423, 29.1959, -23.082, 0.22", "-135.736, 28.4707, -22.9909, 0.22", "-136.021, 27.823, -22.8527, 0.22", "-136.312, 27.0474, -22.6616, 0.22", "-136.63, 26.1535, -22.4039, 0.29", "-136.888, 25.4201, -22.1464, 0.22", "-137.155, 24.6632, -21.8251, 0.22", "-137.438, 23.786, -21.4048, 0.37", "-137.52, 23.2828, -21.1537, 0.22", "-139.839, 14.7341, -25.3668, 0.22" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-132.147, 52.7061, -0.764933, 0.15", "-133.504, 52.4714, -0.630012, 0.15", "-134.072, 52.3633, -0.567232, 0.15", "-134.841, 52.1969, -0.481184, 0.15", "-135.92, 51.9633, -0.36038, 0.22", "-136.579, 51.8205, -0.286535, 0.15", "-137.545, 51.6112, -0.178287, 0.15", "-138.047, 51.4748, -0.118512, 0.37", "-138.609, 51.3162, -0.0404338, 0.37" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "100.432, -167.007, -20.5212, 0.29", "101.085, -166.26, -20.8337, 0.29", "101.81, -165.434, -21.1807, 0.29", "102.703, -164.414, -21.6074, 0.15", "103.376, -163.646, -21.9294, 0.15", "103.86, -163.094, -22.1608, 0.22", "104.186, -162.721, -22.317, 0.22", "109.836, -154.731, -23.2798, 0.22", "116.803, -147.762, -23.8796, 0.22", "122.93, -140.348, -26.0309, 0.22", "130.353, -134.312, -28.5979, 0.22", "138.078, -128.242, -29.8463, 0.22", "145.326, -121.525, -29.8484, 0.22", "153.178, -115.511, -29.3011, 0.22", "160.866, -109.719, -26.9319, 0.22", "167.671, -102.988, -24.4744, 0.22", "174.842, -97.248, -20.7447, 0.22" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "100.432, -167.007, -20.5212, 0.81", "101.395, -167.449, -20.5236, 0.81", "102.371, -167.934, -20.592, 0.81", "103.665, -168.63, -20.7202, 0.74", "104.821, -169.317, -20.8491, 0.52", "105.919, -170.1, -21.0148, 1.03", "106.818, -170.865, -21.2134, 0.74", "107.537, -171.671, -21.503, 0.59", "108.216, -172.691, -21.9081, 0.44", "108.632, -173.516, -22.2477, 0.52", "109.237, -175.016, -22.8071, 0.44", "109.685, -176.255, -23.2092, 0.88", "110.203, -177.729, -23.639, 0.66", "110.504, -178.572, -23.8583, 0.66", "110.896, -179.591, -24.129, 0.81", "111.25, -180.38, -24.3479, 0.66", "111.734, -181.255, -24.614, 0.96", "112.297, -182.169, -24.9512, 0.44", "113.038, -183.273, -25.4874, 0.66", "113.534, -183.977, -25.9065, 0.74", "114.16, -184.826, -26.5049, 0.52", "114.868, -185.74, -27.2403, 0.74", "115.549, -186.598, -27.9736, 0.88", "116.378, -187.587, -28.8539, 0.44", "116.753, -187.993, -29.2238, 0.66", "117.45, -188.665, -29.8523, 0.52", "118.244, -189.309, -30.4972, 0.59", "118.852, -189.749, -30.9321, 0.66", "119.656, -190.286, -31.4399, 0.66", "120.311, -190.74, -31.8592, 0.74", "121.257, -191.471, -32.4928, 0.44", "122.11, -192.268, -33.1033, 0.37", "122.847, -193.202, -33.7227, 0.37", "123.004, -193.923, -34.0644, 0.74", "122.523, -194.876, -34.2837, 0.81", "121.955, -195.658, -34.3637, 0.59", "120.925, -196.921, -34.3619, 0.22", "119.916, -198.121, -34.2764, 0.22", "119.023, -199.225, -34.1326, 0.22", "118.085, -200.546, -33.8726, 0.22", "117.508, -201.617, -33.564, 0.22", "117.125, -202.553, -33.2576, 0.22", "116.908, -203.707, -32.8243, 0.22", "116.96, -204.876, -32.3382, 0.22", "117.155, -205.585, -32.0093, 0.44", "117.536, -206.312, -31.6478, 0.59", "122.319, -214.803, -32.7819, 0.59", "125.894, -223.908, -32.837, 0.59", "129.62, -232.945, -32.3762, 0.59" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "30.2848, -90.3633, -39.5355, 0.15", "28.1862, -99.8956, -39.6418, 0.15", "25.6675, -109.246, -40.9332, 0.15", "21.4848, -118.101, -41.1184, 0.15", "18.4182, -127.364, -41.685, 0.15", "15.4311, -136.622, -42.6486, 0.15" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "30.2848, -90.3633, -39.5355, 0.15", "29.8628, -100.007, -38.1233, 0.15", "29.8797, -109.581, -36.2345, 0.15", "28.6558, -119.248, -35.7889, 0.15", "29.0747, -128.984, -35.4656, 0.15", "30.6474, -138.609, -35.7424, 0.15", "33.4488, -147.917, -34.7399, 0.15", "34.3295, -157.426, -32.7125, 0.15" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "78.6911, 120.697, -61.392, 0.15", "83.2449, 127.031, -67.4794, 0.15", "87.2744, 132.723, -74.5284, 0.15", "90.742, 138.766, -81.5677, 0.15" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "78.6911, 120.697, -61.392, 0.15", "81.5305, 128.216, -67.0906, 0.15" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "77.8621, 123.098, -58.6131, 0.15", "76.0341, 132.081, -62.0428, 0.15" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "77.8621, 123.098, -58.6131, 0.15", "85.5152, 127.08, -63.5882, 0.15" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "52.0372, 73.6647, 35.7149, 0.29", "51.9894, 72.7012, 36.5646, 0.29", "52.0006, 71.9927, 37.1768, 0.52", "51.9953, 71.2174, 37.8103, 0.22", "51.9825, 70.5988, 38.2876, 0.22", "51.9645, 69.9984, 38.7339, 0.44", "51.9379, 69.036, 39.4442, 0.88", "51.9248, 68.5055, 39.8451, 0.88", "51.8382, 67.1905, 40.8335, 0.22", "51.705, 66.3426, 41.4591, 1.11", "51.4771, 65.441, 42.1182, 0.88", "51.0992, 64.3089, 42.9236, 0.22", "50.9514, 63.9197, 43.2156, 0.22", "50.6857, 63.2179, 43.8093, 0.29", "50.3464, 62.3359, 44.6888, 0.22", "50.1429, 61.8634, 45.2414, 0.74", "49.7899, 61.1798, 46.1735, 1.11", "48.98, 59.8846, 48.1284, 0.22", "48.5504, 59.2673, 49.1871, 0.44", "47.9662, 58.477, 50.7457, 0.96", "47.5356, 57.9717, 51.8917, 1.55", "47.0314, 57.423, 53.2487, 0.74", "46.72, 57.0782, 54.1703, 0.29", "46.2384, 56.5206, 55.8163, 0.29", "45.8477, 56.0152, 57.4917, 0.59", "45.5717, 55.6245, 59.1739, 0.59", "45.4134, 55.4206, 60.3719, 0.59", "45.2497, 55.2802, 61.7473, 0.81", "45.0807, 55.2615, 63.1359, 0.81", "44.8629, 55.3892, 64.7524, 0.96", "44.5724, 55.713, 66.9549, 0.74", "44.4095, 55.9997, 68.4198, 0.96", "44.3106, 56.2593, 69.6362, 0.96", "44.2314, 56.6314, 71.4217, 0.66", "44.2861, 56.8741, 72.6851, 0.66", "44.4647, 57.0631, 73.7091, 0.66", "44.6404, 57.1886, 74.2941, 0.66", "45.1393, 57.5615, 75.7431, 1.11", "45.3742, 57.8253, 76.5712, 1.11", "45.5785, 58.1828, 77.5391, 0.29", "45.736, 58.6068, 78.5203, 0.29", "45.8737, 59.0599, 79.5157, 0.59", "46.0732, 59.6459, 80.8096, 0.88", "46.4675, 60.5765, 82.9754, 0.22", "46.6972, 61.0099, 84.0871, 0.22", "46.9575, 61.4113, 85.1603, 1.18", "47.3482, 61.9338, 86.4953, 1.55", "47.7421, 62.4253, 87.7041, 0.81", "48.3576, 63.2012, 89.5903, 0.37", "49.0885, 64.1339, 92.0308, 0.74", "49.457, 64.6008, 93.3748, 0.44", "49.7424, 64.9366, 94.5051, 0.44", "49.9358, 65.1186, 95.2911, 0.44", "50.169, 65.2755, 96.3205, 0.74", "50.4735, 65.3792, 97.721, 0.74", "50.9145, 65.3961, 100.078, 0.44", "51.1935, 65.3713, 101.757, 0.74", "51.4566, 65.3642, 103.822, 0.52", "51.5166, 65.4234, 105.007, 0.52", "51.4747, 65.4769, 105.615, 0.52", "51.0862, 65.62, 107.063, 0.52", "50.7544, 65.6919, 107.784, 0.52", "49.7682, 65.8947, 109.451, 1.11", "48.3372, 66.2159, 111.461, 0.44", "47.2387, 66.4739, 112.867, 1.18", "45.8959, 66.8007, 114.531, 0.22", "45.2094, 66.9621, 115.337, 0.22", "44.5858, 67.087, 116.044, 0.81", "43.5143, 67.2916, 117.225, 1.47", "42.6821, 67.4698, 118.128, 0.66", "41.5147, 67.7899, 119.422, 0.22", "40.8195, 68.0054, 120.225, 0.59", "39.0534, 68.4748, 122.325, 0.07", "38.3115, 68.6199, 123.251, 0.74" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "52.0372, 73.6647, 35.7149, 0.29", "52.7567, 73.0173, 35.8891, 0.29", "53.6472, 72.3636, 36.0778, 0.81", "54.1769, 72.0689, 36.1927, 0.52", "54.8771, 71.7291, 36.3469, 0.81", "56.3041, 71.0973, 36.7, 0.37", "57.1679, 70.7329, 36.9702, 0.22", "57.8482, 70.4795, 37.2544, 0.22", "59.1296, 70.0488, 37.8836, 0.22", "59.6376, 69.9001, 38.1296, 0.88", "60.3492, 69.7354, 38.4788, 0.74", "61.5433, 69.5154, 39.0886, 0.52", "62.7128, 69.3199, 39.6284, 1.25", "63.4572, 69.2142, 39.913, 1.62", "65.1468, 69.0997, 40.3359, 0.22", "65.9283, 69.1247, 40.4308, 0.15", "66.5569, 69.2128, 40.4326, 0.37", "67.8444, 69.5287, 40.331, 0.22", "68.4774, 69.7402, 40.2611, 0.29", "69.4058, 70.1044, 40.1852, 0.59", "70.525, 70.562, 40.142, 0.96", "71.8552, 71.0621, 40.1601, 0.15", "72.5373, 71.3189, 40.2417, 0.15", "73.223, 71.5811, 40.4344, 0.15", "74.0394, 71.8712, 40.7857, 0.59", "74.5996, 72.0586, 41.1117, 0.59", "75.7935, 72.4351, 41.9207, 0.22", "76.9499, 72.7491, 42.7727, 0.44", "78.0401, 73.0239, 43.6015, 0.96", "78.894, 73.2409, 44.2552, 1.25", "80.5552, 73.643, 45.4676, 0.22", "81.4455, 73.8512, 46.0748, 0.22", "82.2638, 74.0377, 46.5562, 0.22", "82.9147, 74.163, 46.8637, 0.22", "83.8788, 74.3082, 47.2436, 0.74", "85.0202, 74.4248, 47.6607, 0.22", "85.6175, 74.4441, 47.9291, 0.22", "86.2874, 74.4382, 48.4283, 0.22", "86.9802, 74.4262, 49.135, 0.22", "87.2946, 74.4129, 49.5342, 0.88", "87.7972, 74.3912, 50.2813, 0.96", "89.1312, 74.384, 52.4772, 0.29", "90.4601, 74.3927, 54.7331, 0.52", "90.8708, 74.3986, 55.4463, 0.96", "91.3058, 74.4118, 56.2004, 0.66", "91.925, 74.435, 57.2324, 0.22", "92.2192, 74.4461, 57.6921, 0.22", "92.5752, 74.4469, 58.1828, 0.22", "92.7688, 74.4297, 58.4525, 0.66", "93.4221, 74.3511, 59.4177, 0.96", "94.8988, 74.1485, 61.6342, 0.22", "95.6874, 74.024, 62.7914, 0.81", "96.3032, 73.9127, 63.6368, 1.11", "97.6378, 73.6639, 65.3054, 0.15", "98.5567, 73.5164, 66.3075, 0.22", "99.1434, 73.4399, 66.8459, 0.81", "99.8235, 73.363, 67.3411, 0.88", "100.748, 73.3111, 67.921, 0.37", "102.266, 73.3457, 68.7615, 0.22", "103.8, 73.5017, 69.549, 0.22", "104.414, 73.6114, 69.8801, 0.88", "105.085, 73.8068, 70.3072, 1.33", "106.508, 74.4522, 71.4775, 0.15", "107.076, 74.8346, 72.1119, 0.44", "107.816, 75.4588, 73.1701, 0.22", "108.211, 75.8249, 73.8538, 0.37", "108.781, 76.3817, 75.1299, 0.37", "109.233, 76.8789, 76.5795, 0.74", "109.67, 77.4184, 78.6378, 0.44", "109.878, 77.6645, 79.8236, 0.44", "109.951, 77.7467, 80.3079, 0.44", "110.212, 77.9954, 82.1406, 0.66", "110.408, 78.1313, 83.4913, 0.66", "110.601, 78.2257, 85.0207, 0.52", "110.665, 78.3105, 86.5197, 1.03" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "50.9294, 124.997, 47.3683, 0.07", "49.7365, 125.45, 47.4688, 0.07", "48.8114, 125.847, 47.4582, 0.29", "47.8446, 126.346, 47.3863, 0.07", "47.3829, 126.585, 47.352, 0.37", "45.9221, 127.339, 47.2434, 0.07", "44.9897, 127.82, 47.1741, 0.07", "43.9575, 128.414, 47.0365, 0.59", "42.8624, 129.121, 46.7912, 0.07" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "50.9294, 124.997, 47.3683, 0.29", "51.1969, 126.221, 47.7318, 0.29", "51.5454, 127.414, 48.0824, 0.44", "51.8593, 128.478, 48.2845, 0.22", "52.0825, 129.289, 48.351, 0.29", "52.3365, 130.263, 48.368, 0.66", "52.6427, 131.502, 48.3324, 1.11", "52.9369, 132.646, 48.2199, 0.22", "53.3636, 134.237, 47.9623, 0.22", "53.6788, 135.431, 47.7785, 0.88", "53.9833, 136.661, 47.6424, 0.29", "54.1151, 137.19, 47.6241, 0.74", "54.3412, 138.06, 47.6969, 1.33", "54.5518, 138.683, 47.882, 0.88", "55.2559, 140.367, 48.8577, 0.22", "55.5482, 141.001, 49.3794, 0.29", "55.8029, 141.53, 49.9106, 0.29", "56.092, 142.126, 50.5933, 0.81", "56.3177, 142.634, 51.247, 1.33", "56.6063, 143.521, 52.4333, 0.15", "56.7479, 144.249, 53.3424, 0.15", "56.8042, 144.724, 53.8909, 0.74", "56.8545, 145.51, 54.6952, 1.18", "56.8656, 146.877, 55.8677, 0.22", "56.8143, 148.197, 56.7816, 0.59", "56.7946, 149.449, 57.4244, 0.29", "56.8026, 150.124, 57.6875, 1.25", "56.8302, 150.911, 57.9255, 1.84", "56.9415, 152.506, 58.3023, 0.37", "57.0641, 153.688, 58.5558, 0.96", "57.285, 155.245, 58.8554, 0.22", "57.4678, 156.352, 59.0901, 0.52", "57.5698, 156.92, 59.2302, 0.52", "57.8475, 158.325, 59.652, 0.15", "58.1153, 159.424, 60.0962, 0.44" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-132.565, -55.951, -43.6393, 0.15", "-140.964, -50.9302, -45.3514, 0.15", "-148.49, -44.783, -47.2505, 0.15" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-132.565, -55.951, -43.6393, 0.15", "-141.183, -51.036, -44.1924, 0.15", "-148.447, -44.3406, -43.8905, 0.15", "-154.937, -36.9283, -44.1637, 0.15", "-161.644, -29.717, -44.7222, 0.15", "-167.779, -22.1995, -46.4285, 0.15", "-173.109, -14.0383, -47.6662, 0.15" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_52", "dend_41", "dend_30", "dend_11", "dend_0", "dend_62", "dend_53", "dend_45", "dend_42", "dend_38", "dend_31", "dend_15", "dend_12", "dend_4", "dend_1", "dend_64", "dend_63", "dend_55", "dend_54", "dend_51", "dend_46", "dend_44", "dend_43", "dend_40", "dend_39", "dend_37", "dend_32", "dend_23", "dend_16", "dend_14", "dend_13", "dend_10", "dend_5", "dend_3", "dend_2", "dend_59", "dend_56", "dend_48", "dend_47", "dend_36", "dend_33", "dend_27", "dend_24", "dend_20", "dend_17", "dend_9", "dend_6", "dend_61", "dend_60", "dend_58", "dend_57", "dend_50", "dend_49", "dend_35", "dend_34", "dend_29", "dend_28", "dend_26", "dend_25", "dend_22", "dend_21", "dend_19", "dend_18", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_52", "dend_41", "dend_30", "dend_11", "dend_0", "dend_62", "dend_53", "dend_45", "dend_42", "dend_38", "dend_31", "dend_15", "dend_12", "dend_4", "dend_1", "dend_64", "dend_63", "dend_55", "dend_54", "dend_51", "dend_46", "dend_44", "dend_43", "dend_40", "dend_39", "dend_37", "dend_32", "dend_23", "dend_16", "dend_14", "dend_13", "dend_10", "dend_5", "dend_3", "dend_2", "dend_59", "dend_56", "dend_48", "dend_47", "dend_36", "dend_33", "dend_27", "dend_24", "dend_20", "dend_17", "dend_9", "dend_6", "dend_61", "dend_60", "dend_58", "dend_57", "dend_50", "dend_49", "dend_35", "dend_34", "dend_29", "dend_28", "dend_26", "dend_25", "dend_22", "dend_21", "dend_19", "dend_18", "dend_8", "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_28", "dend_26", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L5_MC_575d31ccfd_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_52, id: dend_52, parent: soma_0
create dend_52
public dend_52
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: dend_52
create dend_62
public dend_62
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_30
create dend_38
public dend_38
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_45
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_31
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_15
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_4
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_52, dend_41, dend_30, dend_11, dend_0, dend_62, dend_53, dend_45, dend_42, dend_38, dend_31, dend_15, dend_12, dend_4, dend_1, dend_64, dend_63, dend_55, dend_54, dend_51, dend_46, dend_44, dend_43, dend_40, dend_39, dend_37, dend_32, dend_23, dend_16, dend_14, dend_13, dend_10, dend_5, dend_3, dend_2, dend_59, dend_56, dend_48, dend_47, dend_36, dend_33, dend_27, dend_24, dend_20, dend_17, dend_9, dend_6, dend_61, dend_60, dend_58, dend_57, dend_50, dend_49, dend_35, dend_34, dend_29, dend_28, dend_26, dend_25, dend_22, dend_21, dend_19, dend_18, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_52, dend_41, dend_30, dend_11, dend_0, dend_62, dend_53, dend_45, dend_42, dend_38, dend_31, dend_15, dend_12, dend_4, dend_1, dend_64, dend_63, dend_55, dend_54, dend_51, dend_46, dend_44, dend_43, dend_40, dend_39, dend_37, dend_32, dend_23, dend_16, dend_14, dend_13, dend_10, dend_5, dend_3, dend_2, dend_59, dend_56, dend_48, dend_47, dend_36, dend_33, dend_27, dend_24, dend_20, dend_17, dend_9, dend_6, dend_61, dend_60, dend_58, dend_57, dend_50, dend_49, dend_35, dend_34, dend_29, dend_28, dend_26, dend_25, dend_22, dend_21, dend_19, dend_18, dend_8, dend_7]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_52
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_28, dend_26, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_52(0), soma_0(0.44999999322079115)
    connect dend_41(0), soma_0(0.44999999322079115)
    connect dend_30(0), soma_0(0.44999999322079115)
    connect dend_11(0), soma_0(0.44999999322079115)
    connect dend_0(0), soma_0(0.44999999322079115)
    connect axon_0(0), soma_0(1.0)
    connect dend_62(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_51(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_23(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_10(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -10.7304, -0.873466, 0.0, 2.87054 ) }
    soma_0 { pt3dadd( -9.6745, -0.74567, 0.0, 5.00777 ) }
    soma_0 { pt3dadd( -8.61857, -0.617875, 0.0, 6.72434 ) }
    soma_0 { pt3dadd( -7.56263, -0.490079, 0.0, 8.00365 ) }
    soma_0 { pt3dadd( -6.5067, -0.362283, 0.0, 9.09761 ) }
    soma_0 { pt3dadd( -5.45077, -0.234487, 0.0, 10.1793 ) }
    soma_0 { pt3dadd( -4.39483, -0.106692, 0.0, 11.1366 ) }
    soma_0 { pt3dadd( -3.3389, 0.021104, 0.0, 11.7855 ) }
    soma_0 { pt3dadd( -2.28296, 0.1489, 0.0, 12.3612 ) }
    soma_0 { pt3dadd( -1.22703, 0.276695, 0.0, 12.8218 ) }
    soma_0 { pt3dadd( -0.171095, 0.404491, 0.0, 12.9777 ) }
    soma_0 { pt3dadd( 0.884839, 0.532287, 0.0, 12.7621 ) }
    soma_0 { pt3dadd( 1.94077, 0.660083, 0.0, 12.4756 ) }
    soma_0 { pt3dadd( 2.99671, 0.787878, 0.0, 12.1076 ) }
    soma_0 { pt3dadd( 4.05264, 0.915674, 0.0, 11.5969 ) }
    soma_0 { pt3dadd( 5.10858, 1.04347, 0.0, 10.956 ) }
    soma_0 { pt3dadd( 6.16451, 1.17127, 0.0, 10.0344 ) }
    soma_0 { pt3dadd( 7.22044, 1.29906, 0.0, 8.74098 ) }
    soma_0 { pt3dadd( 8.27638, 1.42686, 0.0, 7.28149 ) }
    soma_0 { pt3dadd( 9.33231, 1.55465, 0.0, 5.39697 ) }
    soma_0 { pt3dadd( 10.3882, 1.68245, 0.0, 3.02868 ) }
    // Section: dend_52, id: dend_52, parent: soma_0 (entry count 21/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -9.48889, 0.159882, 10.77, 1.25 ) }
    dend_52 { pt3dadd( -9.48889, 0.159882, 10.77, 1.25 ) }
    dend_52 { pt3dadd( -10.6339, 0.0324668, 12.4145, 1.18 ) }
    dend_52 { pt3dadd( -11.5894, 0.0344744, 14.0201, 1.33 ) }
    dend_52 { pt3dadd( -12.7218, 0.198516, 16.3429, 1.55 ) }
    dend_52 { pt3dadd( -13.7315, 0.560557, 18.922, 1.77 ) }
    dend_52 { pt3dadd( -14.3934, 0.987307, 21.0075, 1.92 ) }
    dend_52 { pt3dadd( -14.757, 1.49263, 22.7114, 1.92 ) }
    dend_52 { pt3dadd( -14.984, 2.37551, 24.8584, 1.55 ) }
    dend_52 { pt3dadd( -15.0307, 3.3051, 26.762, 1.33 ) }
    dend_52 { pt3dadd( -14.911, 4.30972, 28.4451, 1.4 ) }
    dend_52 { pt3dadd( -14.701, 5.21038, 29.6975, 1.55 ) }
    dend_52 { pt3dadd( -14.39, 6.27311, 30.9883, 1.84 ) }
    dend_52 { pt3dadd( -14.0409, 7.42853, 32.2794, 2.29 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 35/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 6.08109, -2.74562, -7.15, 4.06 ) }
    dend_41 { pt3dadd( 6.08109, -2.74562, -7.15, 4.06 ) }
    dend_41 { pt3dadd( 6.04352, -3.71818, -7.39915, 2.43 ) }
    dend_41 { pt3dadd( 5.92708, -5.11601, -7.79818, 2.58 ) }
    dend_41 { pt3dadd( 5.74808, -7.0109, -8.38082, 2.58 ) }
    dend_41 { pt3dadd( 5.62909, -8.27058, -8.76815, 2.8 ) }
    dend_41 { pt3dadd( 5.54368, -9.17476, -9.04617, 3.02 ) }
    dend_41 { pt3dadd( 5.38827, -10.8394, -9.5812, 3.02 ) }
    dend_41 { pt3dadd( 5.22577, -12.6231, -10.2058, 3.32 ) }
    dend_41 { pt3dadd( 5.03245, -14.2057, -10.8115, 4.06 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 45/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 10.6111, 1.76864, -10.71, 2.21 ) }
    dend_30 { pt3dadd( 10.6111, 1.76864, -10.71, 2.21 ) }
    dend_30 { pt3dadd( 12.22, 2.1759, -11.2474, 1.55 ) }
    dend_30 { pt3dadd( 13.9571, 2.488, -11.8882, 1.03 ) }
    dend_30 { pt3dadd( 14.9754, 2.58965, -12.3138, 1.18 ) }
    dend_30 { pt3dadd( 16.412, 2.63815, -13.0072, 1.62 ) }
    dend_30 { pt3dadd( 17.438, 2.61517, -13.5973, 1.99 ) }
    dend_30 { pt3dadd( 18.5271, 2.47479, -14.4026, 1.84 ) }
    dend_30 { pt3dadd( 19.765, 2.12401, -15.5555, 1.11 ) }
    dend_30 { pt3dadd( 20.7199, 1.69185, -16.5824, 1.25 ) }
    dend_30 { pt3dadd( 21.4844, 1.23705, -17.4726, 1.25 ) }
    dend_30 { pt3dadd( 22.4004, 0.565193, -18.5385, 1.47 ) }
    dend_30 { pt3dadd( 23.4324, -0.290191, -19.6364, 1.4 ) }
    dend_30 { pt3dadd( 24.077, -0.867691, -20.2171, 1.25 ) }
    dend_30 { pt3dadd( 25.0132, -1.74556, -20.9015, 1.03 ) }
    dend_30 { pt3dadd( 26.1253, -2.82869, -21.5138, 1.03 ) }
    dend_30 { pt3dadd( 27.1008, -3.81301, -21.9034, 1.33 ) }
    dend_30 { pt3dadd( 28.2326, -5.11071, -22.2197, 1.25 ) }
    dend_30 { pt3dadd( 29.0319, -6.21226, -22.3797, 1.33 ) }
    dend_30 { pt3dadd( 29.7207, -7.36759, -22.5217, 1.62 ) }
    dend_30 { pt3dadd( 30.1899, -8.27947, -22.6451, 1.7 ) }
    dend_30 { pt3dadd( 30.2867, -8.4882, -22.6811, 1.7 ) }
    dend_30 { pt3dadd( 31.0178, -10.1064, -23.1386, 1.18 ) }
    dend_30 { pt3dadd( 31.5223, -11.1332, -23.6177, 1.03 ) }
    dend_30 { pt3dadd( 31.9638, -11.7892, -24.1333, 0.74 ) }
    dend_30 { pt3dadd( 32.5107, -12.352, -24.8632, 0.96 ) }
    dend_30 { pt3dadd( 33.1953, -12.8413, -25.8297, 1.03 ) }
    dend_30 { pt3dadd( 33.9437, -13.2754, -26.8863, 1.4 ) }
    dend_30 { pt3dadd( 34.6793, -13.5748, -27.9185, 1.55 ) }
    dend_30 { pt3dadd( 35.643, -13.8751, -29.3397, 1.33 ) }
    dend_30 { pt3dadd( 36.4321, -14.0945, -30.5974, 0.96 ) }
    dend_30 { pt3dadd( 37.0505, -14.2476, -31.6422, 0.96 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 77/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 8.9411, 5.14213, -0.18, 2.21 ) }
    dend_11 { pt3dadd( 8.9411, 5.14213, -0.18, 2.21 ) }
    dend_11 { pt3dadd( 10.2207, 5.93263, 0.32814, 1.55 ) }
    dend_11 { pt3dadd( 11.6704, 6.70688, 0.994865, 1.92 ) }
    dend_11 { pt3dadd( 12.9184, 7.29694, 1.62979, 1.84 ) }
    dend_11 { pt3dadd( 14.0451, 7.78549, 2.26783, 1.62 ) }
    dend_11 { pt3dadd( 15.3837, 8.35098, 3.16406, 1.7 ) }
    dend_11 { pt3dadd( 16.6815, 8.83664, 4.11255, 1.55 ) }
    dend_11 { pt3dadd( 17.7658, 9.17514, 4.97645, 1.7 ) }
    dend_11 { pt3dadd( 19.0633, 9.52523, 6.06625, 1.99 ) }
    dend_11 { pt3dadd( 20.2099, 9.83347, 7.0168, 1.47 ) }
    dend_11 { pt3dadd( 22.4234, 10.4813, 8.77964, 1.7 ) }
    dend_11 { pt3dadd( 23.3811, 10.7823, 9.54625, 1.84 ) }
    dend_11 { pt3dadd( 24.6745, 11.1969, 10.552, 1.7 ) }
    dend_11 { pt3dadd( 26.0139, 11.6352, 11.5514, 1.47 ) }
    dend_11 { pt3dadd( 27.1458, 12.0095, 12.3319, 1.77 ) }
    dend_11 { pt3dadd( 28.6756, 12.5044, 13.2128, 2.73 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 94/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -10.6189, -2.06312, 7.6, 1.99 ) }
    dend_0 { pt3dadd( -10.6189, -2.06312, 7.6, 1.99 ) }
    dend_0 { pt3dadd( -11.6844, -2.28094, 6.38071, 1.84 ) }
    dend_0 { pt3dadd( -12.7819, -2.45912, 5.20671, 1.92 ) }
    dend_0 { pt3dadd( -13.5523, -2.57344, 4.41059, 1.92 ) }
    dend_0 { pt3dadd( -14.6598, -2.74555, 3.32952, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( -16.2143, -3.03129, 1.91362, 1.7 ) }
    dend_0 { pt3dadd( -17.9011, -3.37048, 0.490449, 1.47 ) }
    dend_0 { pt3dadd( -19.4282, -3.70779, -0.688909, 1.18 ) }
    dend_0 { pt3dadd( -20.7421, -4.0293, -1.59854, 1.47 ) }
    dend_0 { pt3dadd( -22.228, -4.4634, -2.49562, 1.47 ) }
    dend_0 { pt3dadd( -23.701, -4.95873, -3.2797, 1.33 ) }
    dend_0 { pt3dadd( -24.6726, -5.31829, -3.75953, 1.55 ) }
    dend_0 { pt3dadd( -25.9767, -5.82885, -4.43344, 1.62 ) }
    dend_0 { pt3dadd( -27.2228, -6.30732, -5.07515, 2.58 ) }
    dend_0 { pt3dadd( -29.2257, -7.05241, -6.11166, 1.33 ) }
    dend_0 { pt3dadd( -30.412, -7.50066, -6.71688, 1.47 ) }
    dend_0 { pt3dadd( -31.9213, -8.09487, -7.43531, 1.33 ) }
    dend_0 { pt3dadd( -33.7282, -8.87641, -8.13998, 1.62 ) }
    dend_0 { pt3dadd( -34.8922, -9.44604, -8.46308, 1.7 ) }
    dend_0 { pt3dadd( -36.8656, -10.5481, -8.76696, 1.55 ) }
    dend_0 { pt3dadd( -38.7717, -11.7484, -8.76643, 1.11 ) }
    dend_0 { pt3dadd( -39.9487, -12.5619, -8.63143, 1.55 ) }
    dend_0 { pt3dadd( -41.6176, -13.7548, -8.23633, 1.4 ) }
    dend_0 { pt3dadd( -43.1102, -14.7786, -7.73168, 1.25 ) }
    dend_0 { pt3dadd( -44.1524, -15.4299, -7.34163, 1.55 ) }
    dend_0 { pt3dadd( -45.1608, -15.9582, -6.92455, 1.99 ) }
    dend_0 { pt3dadd( -46.5516, -16.5323, -6.39235, 1.33 ) }
    dend_0 { pt3dadd( -48.1729, -17.0668, -5.89437, 1.11 ) }
    dend_0 { pt3dadd( -49.6879, -17.4697, -5.54387, 1.4 ) }
    dend_0 { pt3dadd( -50.9551, -17.7712, -5.32964, 1.25 ) }
    dend_0 { pt3dadd( -52.503, -18.1565, -5.16471, 1.11 ) }
    dend_0 { pt3dadd( -54.04, -18.6112, -5.09884, 1.33 ) }
    dend_0 { pt3dadd( -54.9864, -18.9939, -5.14288, 1.7 ) }
    dend_0 { pt3dadd( -56.6151, -19.9261, -5.52186, 1.33 ) }
    dend_0 { pt3dadd( -57.4626, -20.5514, -5.885, 1.62 ) }
    dend_0 { pt3dadd( -58.272, -21.243, -6.31528, 1.99 ) }
    dend_0 { pt3dadd( -59.1298, -22.0808, -6.89874, 1.92 ) }
    dend_0 { pt3dadd( -60.3462, -23.4215, -7.90946, 1.33 ) }
    dend_0 { pt3dadd( -61.1961, -24.494, -8.7532, 1.47 ) }
    dend_0 { pt3dadd( -61.7951, -25.4074, -9.55363, 1.99 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 35/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 10.3882, 1.68245, 0.0, 0.710197 ) }
    axon_0 { pt3dadd( 25.2795, 3.4847, 0.0, 0.710197 ) }
    axon_0 { pt3dadd( 40.1709, 5.28695, 0.0, 0.710197 ) }
    // Section: dend_62, id: dend_62, parent: dend_52 (entry count 38/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -14.0409, 7.42853, 32.2794, 1.4 ) }
    dend_62 { pt3dadd( -13.5244, 8.42926, 33.567, 1.4 ) }
    dend_62 { pt3dadd( -12.648, 9.94328, 35.2511, 1.4 ) }
    dend_62 { pt3dadd( -11.9673, 11.0235, 36.2894, 1.33 ) }
    dend_62 { pt3dadd( -11.157, 12.2159, 37.3341, 1.11 ) }
    dend_62 { pt3dadd( -10.2447, 13.3704, 38.2855, 0.52 ) }
    dend_62 { pt3dadd( -9.64028, 14.0351, 38.8409, 0.37 ) }
    dend_62 { pt3dadd( -8.87624, 14.7159, 39.3196, 0.88 ) }
    dend_62 { pt3dadd( -8.05532, 15.2771, 39.6651, 1.62 ) }
    dend_62 { pt3dadd( -7.56168, 15.4541, 39.8842, 1.62 ) }
    dend_62 { pt3dadd( -6.66549, 15.017, 41.0133, 0.44 ) }
    dend_62 { pt3dadd( -6.35843, 14.5588, 41.851, 0.44 ) }
    dend_62 { pt3dadd( -6.08222, 13.9534, 42.8955, 0.44 ) }
    dend_62 { pt3dadd( -5.82529, 13.3226, 44.0204, 0.74 ) }
    dend_62 { pt3dadd( -5.45709, 12.4417, 45.6547, 1.11 ) }
    dend_62 { pt3dadd( -5.12199, 11.7909, 47.0416, 1.25 ) }
    dend_62 { pt3dadd( -4.82399, 11.5124, 47.9157, 1.25 ) }
    dend_62 { pt3dadd( -4.26599, 11.4891, 48.6801, 0.44 ) }
    dend_62 { pt3dadd( -3.51676, 11.6719, 49.2297, 0.44 ) }
    dend_62 { pt3dadd( -2.53017, 11.9604, 49.747, 0.59 ) }
    dend_62 { pt3dadd( -1.42912, 12.2721, 50.2057, 0.88 ) }
    dend_62 { pt3dadd( 0.65529, 12.8348, 51.0251, 0.52 ) }
    dend_62 { pt3dadd( 1.55773, 13.0533, 51.3961, 0.52 ) }
    dend_62 { pt3dadd( 2.77532, 13.2999, 51.9262, 0.74 ) }
    dend_62 { pt3dadd( 3.98165, 13.4657, 52.4754, 0.88 ) }
    dend_62 { pt3dadd( 5.45462, 13.5773, 53.2212, 0.52 ) }
    dend_62 { pt3dadd( 6.41644, 13.608, 53.7336, 0.96 ) }
    dend_62 { pt3dadd( 7.48646, 13.6616, 54.3116, 1.62 ) }
    dend_62 { pt3dadd( 8.39701, 13.7675, 54.7912, 1.03 ) }
    dend_62 { pt3dadd( 9.86633, 14.0931, 55.4861, 0.52 ) }
    dend_62 { pt3dadd( 11.0228, 14.4738, 56.0009, 1.4 ) }
    dend_62 { pt3dadd( 12.2084, 14.9917, 56.4906, 2.21 ) }
    dend_62 { pt3dadd( 13.6604, 15.7525, 57.0652, 0.29 ) }
    dend_62 { pt3dadd( 14.1921, 16.0701, 57.2818, 0.29 ) }
    dend_62 { pt3dadd( 15.4262, 16.8769, 57.8303, 0.29 ) }
    dend_62 { pt3dadd( 16.4106, 17.5788, 58.3286, 0.44 ) }
    dend_62 { pt3dadd( 17.3008, 18.2145, 58.8949, 0.96 ) }
    dend_62 { pt3dadd( 18.382, 18.9153, 59.7726, 1.33 ) }
    dend_62 { pt3dadd( 19.524, 19.532, 60.8026, 1.77 ) }
    dend_62 { pt3dadd( 20.5962, 20.0215, 61.8286, 1.33 ) }
    dend_62 { pt3dadd( 21.7241, 20.4594, 63.0276, 0.96 ) }
    dend_62 { pt3dadd( 23.2212, 20.953, 64.7343, 0.59 ) }
    dend_62 { pt3dadd( 24.3885, 21.2696, 66.2677, 0.37 ) }
    dend_62 { pt3dadd( 25.0156, 21.4195, 67.2683, 0.66 ) }
    dend_62 { pt3dadd( 25.3099, 21.4916, 67.8941, 0.66 ) }
    dend_62 { pt3dadd( 25.6257, 21.5994, 68.7108, 0.66 ) }
    dend_62 { pt3dadd( 25.7261, 21.6632, 68.9764, 0.66 ) }
    dend_62 { pt3dadd( 26.1569, 22.1112, 70.1078, 0.66 ) }
    dend_62 { pt3dadd( 26.6526, 22.7924, 71.4672, 0.52 ) }
    dend_62 { pt3dadd( 27.3375, 23.8786, 73.4316, 1.18 ) }
    dend_62 { pt3dadd( 27.6819, 24.4967, 74.3965, 1.47 ) }
    dend_62 { pt3dadd( 28.3009, 25.7362, 76.101, 0.44 ) }
    dend_62 { pt3dadd( 28.5999, 26.4235, 76.975, 0.44 ) }
    dend_62 { pt3dadd( 28.8397, 27.1708, 77.8942, 0.44 ) }
    dend_62 { pt3dadd( 28.9672, 27.8087, 78.6859, 0.96 ) }
    dend_62 { pt3dadd( 29.0718, 28.924, 80.0751, 1.62 ) }
    dend_62 { pt3dadd( 29.0878, 29.8949, 81.2881, 1.77 ) }
    dend_62 { pt3dadd( 29.0704, 30.7056, 82.2488, 1.18 ) }
    dend_62 { pt3dadd( 29.1072, 32.296, 84.0643, 0.74 ) }
    dend_62 { pt3dadd( 29.2019, 33.1118, 85.0049, 0.74 ) }
    dend_62 { pt3dadd( 29.3994, 33.9642, 86.0572, 0.59 ) }
    dend_62 { pt3dadd( 29.7818, 34.8547, 87.2875, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_62 { pt3dadd( 30.2641, 35.6146, 88.4166, 0.29 ) }
    dend_62 { pt3dadd( 31.0445, 36.5676, 89.8625, 0.81 ) }
    dend_62 { pt3dadd( 31.7236, 37.3005, 90.9494, 1.7 ) }
    dend_62 { pt3dadd( 32.1861, 37.7965, 91.6983, 1.7 ) }
    dend_62 { pt3dadd( 32.8262, 38.5474, 92.8312, 0.44 ) }
    dend_62 { pt3dadd( 33.3998, 39.2903, 93.9278, 0.44 ) }
    dend_62 { pt3dadd( 33.813, 39.9405, 94.7977, 0.44 ) }
    dend_62 { pt3dadd( 34.2122, 40.7182, 95.6397, 1.11 ) }
    dend_62 { pt3dadd( 34.3924, 41.1151, 96.0039, 1.11 ) }
    dend_62 { pt3dadd( 34.8775, 42.3953, 97.0416, 0.29 ) }
    dend_62 { pt3dadd( 35.0874, 43.0988, 97.5513, 0.29 ) }
    dend_62 { pt3dadd( 35.3012, 43.8512, 98.0577, 0.29 ) }
    dend_62 { pt3dadd( 35.4443, 44.3949, 98.4233, 1.18 ) }
    dend_62 { pt3dadd( 35.6942, 45.1564, 98.955, 1.47 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 14/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -14.0409, 7.42853, 32.2794, 0.81 ) }
    dend_53 { pt3dadd( -15.4964, 7.56751, 32.4722, 0.81 ) }
    dend_53 { pt3dadd( -16.7098, 7.73631, 32.6416, 0.81 ) }
    dend_53 { pt3dadd( -17.8813, 7.95824, 32.7929, 0.96 ) }
    dend_53 { pt3dadd( -19.2996, 8.25362, 32.9581, 1.25 ) }
    dend_53 { pt3dadd( -20.8611, 8.56811, 33.0947, 1.62 ) }
    dend_53 { pt3dadd( -22.1947, 8.82386, 33.2182, 1.62 ) }
    dend_53 { pt3dadd( -23.3382, 9.05985, 33.335, 1.62 ) }
    dend_53 { pt3dadd( -25.289, 9.51327, 33.5361, 1.18 ) }
    dend_53 { pt3dadd( -26.673, 9.87924, 33.668, 1.4 ) }
    dend_53 { pt3dadd( -28.4764, 10.393, 33.8688, 1.33 ) }
    dend_53 { pt3dadd( -30.2996, 10.9476, 34.1386, 0.96 ) }
    dend_53 { pt3dadd( -31.5031, 11.3271, 34.3434, 0.96 ) }
    dend_53 { pt3dadd( -32.9626, 11.792, 34.5977, 1.62 ) }
    dend_53 { pt3dadd( -34.4208, 12.2559, 34.8548, 2.14 ) }
    dend_53 { pt3dadd( -35.7069, 12.6648, 35.0692, 2.14 ) }
    dend_53 { pt3dadd( -37.4676, 13.2582, 35.3733, 0.96 ) }
    dend_53 { pt3dadd( -38.4622, 13.5888, 35.5154, 1.4 ) }
    dend_53 { pt3dadd( -40.0948, 14.0736, 35.7264, 1.92 ) }
    dend_53 { pt3dadd( -41.461, 14.4173, 35.8733, 2.06 ) }
    dend_53 { pt3dadd( -42.7059, 14.6577, 35.9309, 2.06 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 35/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 5.03245, -14.2057, -10.8115, 2.58 ) }
    dend_45 { pt3dadd( 5.94527, -15.33, -11.1553, 2.58 ) }
    dend_45 { pt3dadd( 6.95527, -16.5683, -11.5275, 1.4 ) }
    dend_45 { pt3dadd( 8.02477, -17.8198, -11.9125, 1.47 ) }
    dend_45 { pt3dadd( 9.151, -19.1133, -12.3204, 1.47 ) }
    dend_45 { pt3dadd( 10.1558, -20.256, -12.6734, 1.47 ) }
    dend_45 { pt3dadd( 10.9059, -21.1152, -12.9317, 1.47 ) }
    dend_45 { pt3dadd( 11.7282, -22.0598, -13.2147, 1.7 ) }
    dend_45 { pt3dadd( 13.018, -23.5621, -13.6255, 1.18 ) }
    dend_45 { pt3dadd( 13.6298, -24.3272, -13.7994, 1.47 ) }
    dend_45 { pt3dadd( 14.2899, -25.2585, -13.9554, 1.7 ) }
    dend_45 { pt3dadd( 15.1515, -26.6494, -14.0664, 1.7 ) }
    dend_45 { pt3dadd( 15.6275, -27.5042, -14.0715, 1.77 ) }
    dend_45 { pt3dadd( 16.3468, -28.985, -13.9775, 1.25 ) }
    dend_45 { pt3dadd( 16.8924, -30.3174, -13.7885, 1.55 ) }
    dend_45 { pt3dadd( 17.4347, -31.7859, -13.5169, 1.4 ) }
    dend_45 { pt3dadd( 17.9186, -33.1628, -13.2417, 1.7 ) }
    dend_45 { pt3dadd( 18.3741, -34.4737, -12.9592, 1.7 ) }
    dend_45 { pt3dadd( 18.9311, -36.0576, -12.5954, 1.47 ) }
    dend_45 { pt3dadd( 19.5003, -37.6044, -12.2069, 1.4 ) }
    dend_45 { pt3dadd( 19.94, -38.7382, -11.9188, 1.55 ) }
    dend_45 { pt3dadd( 20.7323, -40.6956, -11.4464, 1.25 ) }
    dend_45 { pt3dadd( 21.2953, -42.1138, -11.1585, 1.55 ) }
    dend_45 { pt3dadd( 21.7421, -43.3046, -10.9238, 1.99 ) }
    dend_45 { pt3dadd( 22.0236, -43.9997, -10.7873, 1.99 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 60/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 5.03245, -14.2057, -10.8115, 1.7 ) }
    dend_42 { pt3dadd( 3.68236, -15.8376, -11.5056, 1.7 ) }
    dend_42 { pt3dadd( 2.90051, -16.8319, -11.809, 1.62 ) }
    dend_42 { pt3dadd( 1.85041, -18.2065, -12.0523, 1.4 ) }
    dend_42 { pt3dadd( 1.13348, -19.1722, -12.1044, 1.7 ) }
    dend_42 { pt3dadd( 0.34576, -20.2838, -12.0351, 1.84 ) }
    dend_42 { pt3dadd( -0.386841, -21.3365, -11.8725, 1.7 ) }
    dend_42 { pt3dadd( -1.37411, -22.7879, -11.5177, 2.21 ) }
    dend_42 { pt3dadd( -2.52655, -24.3912, -10.9954, 1.62 ) }
    dend_42 { pt3dadd( -3.48775, -25.6229, -10.5561, 1.47 ) }
    dend_42 { pt3dadd( -4.49802, -26.7823, -10.1133, 1.62 ) }
    dend_42 { pt3dadd( -5.22542, -27.5308, -9.87207, 1.7 ) }
    dend_42 { pt3dadd( -6.55263, -28.7572, -9.64979, 1.47 ) }
    dend_42 { pt3dadd( -7.52416, -29.5755, -9.64565, 1.62 ) }
    dend_42 { pt3dadd( -8.66229, -30.4405, -9.73584, 1.62 ) }
    dend_42 { pt3dadd( -9.40636, -30.9553, -9.82842, 1.7 ) }
    dend_42 { pt3dadd( -11.1668, -32.1252, -10.0498, 1.47 ) }
    dend_42 { pt3dadd( -12.4509, -33.0055, -10.1595, 1.84 ) }
    dend_42 { pt3dadd( -13.4494, -33.7401, -10.1802, 2.21 ) }
    dend_42 { pt3dadd( -14.7381, -34.7506, -10.212, 1.7 ) }
    dend_42 { pt3dadd( -15.8476, -35.6477, -10.2764, 1.7 ) }
    dend_42 { pt3dadd( -16.892, -36.5053, -10.3988, 1.47 ) }
    dend_42 { pt3dadd( -17.6493, -37.115, -10.5319, 1.55 ) }
    dend_42 { pt3dadd( -18.8906, -38.1681, -10.8561, 1.33 ) }
    dend_42 { pt3dadd( -19.8692, -39.0971, -11.2241, 1.47 ) }
    dend_42 { pt3dadd( -20.9949, -40.3331, -11.8158, 1.25 ) }
    dend_42 { pt3dadd( -21.7832, -41.3729, -12.3777, 1.33 ) }
    dend_42 { pt3dadd( -22.7396, -42.8988, -13.3509, 0.96 ) }
    dend_42 { pt3dadd( -23.1347, -43.7335, -13.9602, 1.33 ) }
    dend_42 { pt3dadd( -23.4066, -44.6061, -14.6619, 1.62 ) }
    dend_42 { pt3dadd( -23.5122, -45.3273, -15.2929, 1.62 ) }
    dend_42 { pt3dadd( -23.5269, -46.4149, -16.3213, 1.25 ) }
    dend_42 { pt3dadd( -23.493, -47.4364, -17.3429, 1.25 ) }
    dend_42 { pt3dadd( -23.4717, -48.4736, -18.4309, 1.4 ) }
    dend_42 { pt3dadd( -23.5301, -49.2455, -19.207, 1.47 ) }
    dend_42 { pt3dadd( -23.7116, -50.3636, -20.2627, 1.47 ) }
    dend_42 { pt3dadd( -23.9321, -51.2891, -21.0867, 1.47 ) }
    dend_42 { pt3dadd( -24.221, -52.2779, -21.9356, 1.7 ) }
    dend_42 { pt3dadd( -24.417, -52.9259, -22.4745, 1.84 ) }
    dend_42 { pt3dadd( -24.9373, -54.4376, -23.7113, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_42 { pt3dadd( -25.3103, -55.4347, -24.5311, 1.4 ) }
    dend_42 { pt3dadd( -25.7057, -56.3419, -25.3079, 1.55 ) }
    dend_42 { pt3dadd( -26.1868, -57.2993, -26.1854, 1.99 ) }
    dend_42 { pt3dadd( -26.7181, -58.1681, -26.9984, 2.06 ) }
    dend_42 { pt3dadd( -27.6691, -59.4568, -28.1144, 1.47 ) }
    dend_42 { pt3dadd( -28.702, -60.653, -28.9897, 1.7 ) }
    dend_42 { pt3dadd( -29.8316, -61.9016, -29.6535, 1.33 ) }
    dend_42 { pt3dadd( -30.8141, -62.9996, -30.0183, 1.33 ) }
    dend_42 { pt3dadd( -32.2481, -64.6553, -30.3407, 1.11 ) }
    dend_42 { pt3dadd( -33.434, -66.1497, -30.5121, 1.4 ) }
    dend_42 { pt3dadd( -34.4336, -67.6497, -30.6306, 1.25 ) }
    dend_42 { pt3dadd( -35.1171, -68.9093, -30.7467, 1.33 ) }
    dend_42 { pt3dadd( -35.6138, -70.1714, -30.9823, 1.33 ) }
    dend_42 { pt3dadd( -35.9716, -71.624, -31.4619, 1.25 ) }
    dend_42 { pt3dadd( -36.1853, -73.0168, -32.1272, 1.25 ) }
    dend_42 { pt3dadd( -36.3324, -74.45, -32.9918, 1.25 ) }
    dend_42 { pt3dadd( -36.4277, -75.7484, -33.9411, 1.4 ) }
    dend_42 { pt3dadd( -36.4885, -77.1353, -35.0999, 1.84 ) }
    dend_42 { pt3dadd( -36.4887, -78.3463, -36.1899, 1.18 ) }
    dend_42 { pt3dadd( -36.4607, -79.3867, -37.1273, 1.18 ) }
    // Section: dend_38, id: dend_38, parent: dend_30 (entry count 20/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 37.0505, -14.2476, -31.6422, 0.52 ) }
    dend_38 { pt3dadd( 38.2778, -14.7572, -32.2249, 0.52 ) }
    dend_38 { pt3dadd( 39.0028, -15.0907, -32.545, 0.52 ) }
    dend_38 { pt3dadd( 39.8168, -15.4686, -32.9085, 0.52 ) }
    dend_38 { pt3dadd( 40.8204, -15.883, -33.3729, 0.96 ) }
    dend_38 { pt3dadd( 41.6902, -16.1817, -33.7592, 0.52 ) }
    dend_38 { pt3dadd( 42.6266, -16.4145, -34.1517, 0.81 ) }
    dend_38 { pt3dadd( 43.3845, -16.5274, -34.4962, 0.81 ) }
    dend_38 { pt3dadd( 44.359, -16.4947, -34.8759, 0.74 ) }
    dend_38 { pt3dadd( 45.4888, -15.9913, -35.1993, 0.88 ) }
    dend_38 { pt3dadd( 46.1276, -15.2352, -35.3043, 0.74 ) }
    dend_38 { pt3dadd( 46.7172, -14.1564, -35.3896, 0.74 ) }
    dend_38 { pt3dadd( 47.437, -12.4961, -35.4708, 0.59 ) }
    dend_38 { pt3dadd( 47.9096, -11.2532, -35.5398, 1.03 ) }
    dend_38 { pt3dadd( 48.4682, -9.60969, -35.6609, 0.81 ) }
    dend_38 { pt3dadd( 48.8523, -8.33312, -35.8282, 0.96 ) }
    dend_38 { pt3dadd( 49.1803, -7.27679, -36.0773, 0.96 ) }
    dend_38 { pt3dadd( 49.7769, -5.68249, -36.6436, 0.66 ) }
    dend_38 { pt3dadd( 50.3096, -4.61624, -37.1781, 0.66 ) }
    dend_38 { pt3dadd( 50.7874, -3.8682, -37.6741, 0.74 ) }
    dend_38 { pt3dadd( 51.6365, -2.84943, -38.4862, 0.81 ) }
    dend_38 { pt3dadd( 52.5683, -1.94582, -39.3028, 0.59 ) }
    dend_38 { pt3dadd( 53.3781, -1.31539, -39.904, 1.03 ) }
    dend_38 { pt3dadd( 54.293, -0.776365, -40.4168, 1.11 ) }
    dend_38 { pt3dadd( 55.2892, -0.358619, -40.7144, 0.81 ) }
    dend_38 { pt3dadd( 56.2991, -0.0730579, -40.8168, 0.88 ) }
    dend_38 { pt3dadd( 57.1757, 0.0694925, -40.7702, 0.74 ) }
    dend_38 { pt3dadd( 58.3047, 0.131768, -40.5832, 0.74 ) }
    dend_38 { pt3dadd( 59.8722, 0.0809453, -40.1911, 0.88 ) }
    dend_38 { pt3dadd( 61.4327, -0.119402, -39.6651, 0.74 ) }
    dend_38 { pt3dadd( 62.5936, -0.413468, -39.1983, 0.66 ) }
    dend_38 { pt3dadd( 63.6963, -0.829992, -38.7042, 0.59 ) }
    dend_38 { pt3dadd( 64.9447, -1.42159, -38.1226, 0.74 ) }
    dend_38 { pt3dadd( 65.7324, -1.85815, -37.7655, 0.81 ) }
    dend_38 { pt3dadd( 66.7982, -2.51128, -37.2776, 0.66 ) }
    dend_38 { pt3dadd( 68.1731, -3.36505, -36.6502, 0.59 ) }
    dend_38 { pt3dadd( 69.191, -3.93748, -36.2107, 1.11 ) }
    dend_38 { pt3dadd( 70.508, -4.53373, -35.727, 1.03 ) }
    dend_38 { pt3dadd( 71.3653, -4.8312, -35.5069, 1.03 ) }
    dend_38 { pt3dadd( 72.5744, -5.12906, -35.3427, 1.11 ) }
    dend_38 { pt3dadd( 74.1074, -5.34761, -35.3365, 0.81 ) }
    dend_38 { pt3dadd( 75.4286, -5.41558, -35.4781, 0.81 ) }
    dend_38 { pt3dadd( 77.047, -5.40037, -35.798, 0.66 ) }
    dend_38 { pt3dadd( 78.8703, -5.23393, -36.2916, 0.74 ) }
    dend_38 { pt3dadd( 79.7789, -5.07818, -36.5771, 1.18 ) }
    dend_38 { pt3dadd( 80.9076, -4.7701, -36.9729, 1.18 ) }
    dend_38 { pt3dadd( 81.8169, -4.37218, -37.2878, 1.18 ) }
    dend_38 { pt3dadd( 82.4811, -3.95207, -37.4768, 1.18 ) }
    dend_38 { pt3dadd( 83.6042, -3.02066, -37.7093, 0.52 ) }
    dend_38 { pt3dadd( 84.4308, -2.20301, -37.8432, 0.52 ) }
    dend_38 { pt3dadd( 85.2493, -1.28758, -38.0052, 0.66 ) }
    dend_38 { pt3dadd( 86.457, 0.139742, -38.333, 0.81 ) }
    dend_38 { pt3dadd( 87.5698, 1.44421, -38.7827, 0.59 ) }
    dend_38 { pt3dadd( 88.1588, 2.05083, -39.071, 0.59 ) }
    dend_38 { pt3dadd( 89.039, 2.79287, -39.5904, 0.81 ) }
    dend_38 { pt3dadd( 89.6117, 3.17666, -39.9811, 0.81 ) }
    dend_38 { pt3dadd( 90.6136, 3.71246, -40.7714, 0.66 ) }
    dend_38 { pt3dadd( 91.468, 4.07084, -41.5245, 0.59 ) }
    dend_38 { pt3dadd( 92.6379, 4.48079, -42.5789, 0.52 ) }
    dend_38 { pt3dadd( 93.1597, 4.63128, -43.0207, 0.66 ) }
    dend_38 { pt3dadd( 94.0346, 4.85696, -43.7094, 0.59 ) }
    dend_38 { pt3dadd( 95.0747, 5.14171, -44.5, 0.44 ) }
    dend_38 { pt3dadd( 96.082, 5.46294, -45.2559, 0.74 ) }
    dend_38 { pt3dadd( 96.759, 5.74372, -45.7058, 0.88 ) }
    dend_38 { pt3dadd( 97.98, 6.40866, -46.3494, 0.44 ) }
    dend_38 { pt3dadd( 98.9223, 6.97871, -46.661, 0.44 ) }
    dend_38 { pt3dadd( 99.6572, 7.45637, -46.8008, 0.44 ) }
    dend_38 { pt3dadd( 100.288, 7.92747, -46.854, 0.52 ) }
    dend_38 { pt3dadd( 101.894, 9.34245, -46.8687, 0.29 ) }
    dend_38 { pt3dadd( 103.207, 10.6596, -46.8266, 0.22 ) }
    dend_38 { pt3dadd( 104.282, 11.7899, -46.7446, 0.22 ) }
    dend_38 { pt3dadd( 104.763, 12.2644, -46.6995, 0.22 ) }
    dend_38 { pt3dadd( 105.501, 12.9686, -46.6385, 0.22 ) }
    dend_38 { pt3dadd( 105.99, 13.4166, -46.6092, 0.22 ) }
    dend_38 { pt3dadd( 106.958, 14.1977, -46.6092, 0.22 ) }
    dend_38 { pt3dadd( 108.034, 14.9636, -46.6092, 0.37 ) }
    dend_38 { pt3dadd( 108.899, 15.5281, -46.6092, 0.37 ) }
    dend_38 { pt3dadd( 118.127, 18.4906, -48.9783, 0.37 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 98/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 37.0505, -14.2476, -31.6422, 0.66 ) }
    dend_31 { pt3dadd( 37.3097, -15.1006, -31.7694, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_31 { pt3dadd( 37.6331, -16.2658, -32.1276, 0.59 ) }
    dend_31 { pt3dadd( 37.7912, -16.8547, -32.3938, 0.96 ) }
    dend_31 { pt3dadd( 37.9172, -17.3624, -32.6982, 1.4 ) }
    dend_31 { pt3dadd( 38.0976, -18.0464, -33.2053, 1.4 ) }
    dend_31 { pt3dadd( 38.4045, -19.1435, -34.1166, 0.81 ) }
    dend_31 { pt3dadd( 38.7262, -20.2808, -35.1991, 0.96 ) }
    dend_31 { pt3dadd( 38.8998, -20.8913, -35.852, 1.11 ) }
    dend_31 { pt3dadd( 39.1005, -21.5374, -36.6043, 1.11 ) }
    dend_31 { pt3dadd( 39.3812, -22.3539, -37.64, 0.74 ) }
    dend_31 { pt3dadd( 39.739, -23.2424, -38.8894, 1.03 ) }
    dend_31 { pt3dadd( 40.0486, -23.8747, -39.8856, 1.03 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 11/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 28.6756, 12.5044, 13.2128, 1.92 ) }
    dend_15 { pt3dadd( 28.7978, 13.702, 12.8595, 1.92 ) }
    dend_15 { pt3dadd( 28.9348, 15.5673, 12.2462, 0.96 ) }
    dend_15 { pt3dadd( 29.018, 16.7839, 11.842, 1.47 ) }
    dend_15 { pt3dadd( 29.1454, 18.4755, 11.2702, 1.11 ) }
    dend_15 { pt3dadd( 29.267, 20.0482, 10.7552, 1.25 ) }
    dend_15 { pt3dadd( 29.3807, 21.5885, 10.2753, 1.4 ) }
    dend_15 { pt3dadd( 29.435, 22.6627, 9.94584, 1.4 ) }
    dend_15 { pt3dadd( 29.4659, 23.768, 9.63459, 1.4 ) }
    dend_15 { pt3dadd( 29.5091, 24.9767, 9.36127, 1.33 ) }
    dend_15 { pt3dadd( 29.5672, 26.2612, 9.12178, 1.84 ) }
    dend_15 { pt3dadd( 29.623, 27.338, 8.98953, 1.47 ) }
    dend_15 { pt3dadd( 29.6842, 28.3185, 8.91702, 1.03 ) }
    dend_15 { pt3dadd( 29.7812, 29.5467, 8.85773, 1.33 ) }
    dend_15 { pt3dadd( 29.9475, 31.1862, 8.79217, 1.47 ) }
    dend_15 { pt3dadd( 30.119, 32.3867, 8.76031, 1.47 ) }
    dend_15 { pt3dadd( 30.4719, 34.1836, 8.71367, 1.47 ) }
    dend_15 { pt3dadd( 30.7628, 35.3013, 8.68685, 1.33 ) }
    dend_15 { pt3dadd( 31.0819, 36.3793, 8.6623, 1.11 ) }
    dend_15 { pt3dadd( 31.3369, 37.1191, 8.64835, 1.33 ) }
    dend_15 { pt3dadd( 31.8182, 38.325, 8.6385, 0.88 ) }
    dend_15 { pt3dadd( 32.1722, 39.0572, 8.65118, 1.11 ) }
    dend_15 { pt3dadd( 32.6512, 39.8425, 8.63519, 1.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 34/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 28.6756, 12.5044, 13.2128, 1.11 ) }
    dend_12 { pt3dadd( 30.7922, 12.5132, 13.2609, 1.11 ) }
    dend_12 { pt3dadd( 32.3363, 12.494, 13.437, 0.88 ) }
    dend_12 { pt3dadd( 33.1291, 12.4404, 13.6089, 1.33 ) }
    dend_12 { pt3dadd( 34.3594, 12.3572, 13.8758, 1.7 ) }
    dend_12 { pt3dadd( 35.8934, 12.2535, 14.2085, 1.11 ) }
    dend_12 { pt3dadd( 36.9761, 12.1803, 14.4433, 1.11 ) }
    dend_12 { pt3dadd( 38.327, 12.0798, 14.9204, 1.03 ) }
    dend_12 { pt3dadd( 39.8313, 11.8912, 15.5914, 1.03 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 43/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -61.7951, -25.4074, -9.55363, 0.74 ) }
    dend_4 { pt3dadd( -62.5669, -26.7498, -9.60345, 0.74 ) }
    dend_4 { pt3dadd( -63.2724, -27.8255, -9.6882, 0.88 ) }
    dend_4 { pt3dadd( -63.7594, -28.515, -9.69562, 0.81 ) }
    dend_4 { pt3dadd( -64.0078, -28.8682, -9.69196, 1.18 ) }
    dend_4 { pt3dadd( -64.84, -30.094, -9.68769, 1.25 ) }
    dend_4 { pt3dadd( -65.3002, -30.7863, -9.68801, 1.55 ) }
    dend_4 { pt3dadd( -66.1343, -31.9928, -9.69127, 1.18 ) }
    dend_4 { pt3dadd( -67.1365, -33.4328, -9.64055, 0.96 ) }
    dend_4 { pt3dadd( -68.0451, -34.702, -9.52836, 1.25 ) }
    dend_4 { pt3dadd( -68.6925, -35.597, -9.40482, 0.96 ) }
    dend_4 { pt3dadd( -69.5812, -36.8391, -9.1762, 0.59 ) }
    dend_4 { pt3dadd( -70.0724, -37.482, -9.05611, 0.88 ) }
    dend_4 { pt3dadd( -70.851, -38.4387, -8.90296, 1.33 ) }
    dend_4 { pt3dadd( -71.4916, -39.2131, -8.82965, 1.33 ) }
    dend_4 { pt3dadd( -72.4278, -40.3794, -8.78215, 1.18 ) }
    dend_4 { pt3dadd( -73.1389, -41.3983, -8.78742, 0.74 ) }
    dend_4 { pt3dadd( -73.7765, -42.5891, -8.86925, 0.96 ) }
    dend_4 { pt3dadd( -74.1204, -43.5305, -8.99622, 1.25 ) }
    dend_4 { pt3dadd( -74.4528, -45.1697, -9.31903, 0.88 ) }
    dend_4 { pt3dadd( -74.5312, -46.3727, -9.5699, 0.88 ) }
    dend_4 { pt3dadd( -74.5136, -47.6769, -9.81339, 1.03 ) }
    dend_4 { pt3dadd( -74.4755, -48.7061, -9.96359, 0.66 ) }
    dend_4 { pt3dadd( -74.3862, -49.5589, -10.0535, 0.81 ) }
    dend_4 { pt3dadd( -74.2976, -50.2163, -10.1037, 0.96 ) }
    dend_4 { pt3dadd( -74.2073, -51.0502, -10.1514, 0.88 ) }
    dend_4 { pt3dadd( -74.2538, -52.5881, -10.1529, 1.11 ) }
    dend_4 { pt3dadd( -74.4753, -53.3654, -10.1652, 0.88 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 71/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -61.7951, -25.4074, -9.55363, 1.18 ) }
    dend_1 { pt3dadd( -63.5598, -25.5731, -9.89768, 1.18 ) }
    dend_1 { pt3dadd( -65.3465, -25.8182, -10.089, 0.88 ) }
    dend_1 { pt3dadd( -67.0206, -26.0538, -10.1744, 1.11 ) }
    dend_1 { pt3dadd( -68.4197, -26.2271, -10.2337, 1.33 ) }
    dend_1 { pt3dadd( -70.1979, -26.405, -10.3703, 0.74 ) }
    dend_1 { pt3dadd( -71.9756, -26.5591, -10.5805, 0.96 ) }
    dend_1 { pt3dadd( -73.2857, -26.7341, -10.7816, 0.88 ) }
    dend_1 { pt3dadd( -74.7554, -26.943, -11.0605, 0.66 ) }
    dend_1 { pt3dadd( -75.8481, -27.0893, -11.3096, 1.11 ) }
    dend_1 { pt3dadd( -77.2512, -27.2941, -11.7273, 1.62 ) }
    dend_1 { pt3dadd( -78.2223, -27.4673, -12.159, 1.4 ) }
    dend_1 { pt3dadd( -79.0522, -27.6583, -12.67, 1.03 ) }
    dend_1 { pt3dadd( -79.7476, -27.8549, -13.1723, 0.96 ) }
    dend_1 { pt3dadd( -80.6625, -28.1736, -13.8678, 0.96 ) }
    dend_1 { pt3dadd( -81.62, -28.523, -14.5436, 1.18 ) }
    dend_1 { pt3dadd( -82.646, -28.919, -15.2205, 1.47 ) }
    dend_1 { pt3dadd( -83.815, -29.3942, -15.9659, 0.96 ) }
    dend_1 { pt3dadd( -84.9195, -29.8497, -16.6748, 1.03 ) }
    dend_1 { pt3dadd( -86.4443, -30.4889, -17.6639, 0.88 ) }
    dend_1 { pt3dadd( -87.4532, -30.8916, -18.3047, 0.88 ) }
    dend_1 { pt3dadd( -88.4349, -31.2784, -18.9072, 0.59 ) }
    dend_1 { pt3dadd( -89.8907, -31.9051, -19.7725, 0.88 ) }
    dend_1 { pt3dadd( -91.0487, -32.4922, -20.4416, 1.11 ) }
    dend_1 { pt3dadd( -91.9066, -32.9789, -20.9339, 1.11 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 96/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 40.1709, 5.28695, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 55.0622, 7.0892, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 69.9535, 8.89145, 0.0, 0.15 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 99/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 35.6942, 45.1564, 98.955, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_64 { pt3dadd( 34.9024, 45.9265, 101.576, 0.37 ) }
    dend_64 { pt3dadd( 34.4525, 46.271, 102.881, 0.37 ) }
    dend_64 { pt3dadd( 33.7978, 46.6878, 104.875, 0.88 ) }
    dend_64 { pt3dadd( 33.5379, 46.8377, 105.821, 0.88 ) }
    dend_64 { pt3dadd( 32.997, 47.1295, 108.219, 0.52 ) }
    dend_64 { pt3dadd( 32.7458, 47.2764, 109.722, 0.74 ) }
    dend_64 { pt3dadd( 32.6144, 47.3468, 111.078, 0.74 ) }
    dend_64 { pt3dadd( 32.5723, 47.4094, 112.719, 1.03 ) }
    dend_64 { pt3dadd( 32.6438, 47.4601, 114.783, 1.18 ) }
    dend_64 { pt3dadd( 32.7716, 47.4682, 116.771, 1.18 ) }
    dend_64 { pt3dadd( 33.0638, 47.4028, 120.26, 0.96 ) }
    dend_64 { pt3dadd( 33.2232, 47.3551, 122.651, 0.66 ) }
    dend_64 { pt3dadd( 33.2862, 47.3504, 124.419, 0.52 ) }
    dend_64 { pt3dadd( 33.2587, 47.4084, 126.909, 0.52 ) }
    dend_64 { pt3dadd( 33.1289, 47.5101, 129.271, 0.52 ) }
    dend_64 { pt3dadd( 32.9974, 47.6157, 130.737, 0.52 ) }
    dend_64 { pt3dadd( 32.7793, 47.7375, 132.297, 0.37 ) }
    dend_64 { pt3dadd( 32.6048, 47.823, 133.191, 0.81 ) }
    dend_64 { pt3dadd( 32.141, 48.0838, 135.162, 0.37 ) }
    dend_64 { pt3dadd( 31.7433, 48.4271, 136.68, 0.37 ) }
    dend_64 { pt3dadd( 31.4499, 48.9457, 138.1, 0.88 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 21/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 35.6942, 45.1564, 98.955, 0.37 ) }
    dend_63 { pt3dadd( 36.6096, 45.6003, 100.295, 0.37 ) }
    dend_63 { pt3dadd( 37.2627, 45.9756, 101.325, 0.37 ) }
    dend_63 { pt3dadd( 37.891, 46.4303, 102.467, 1.03 ) }
    dend_63 { pt3dadd( 38.8489, 47.2781, 104.469, 1.62 ) }
    dend_63 { pt3dadd( 39.376, 47.8082, 105.69, 0.52 ) }
    dend_63 { pt3dadd( 39.8779, 48.3, 106.852, 0.37 ) }
    dend_63 { pt3dadd( 40.1008, 48.5564, 107.48, 0.37 ) }
    dend_63 { pt3dadd( 40.5427, 48.9835, 108.952, 0.29 ) }
    dend_63 { pt3dadd( 40.6767, 49.0711, 109.446, 0.29 ) }
    dend_63 { pt3dadd( 40.9155, 49.1343, 110.241, 0.29 ) }
    dend_63 { pt3dadd( 41.3282, 49.1633, 111.461, 0.52 ) }
    dend_63 { pt3dadd( 41.9907, 49.177, 113.019, 0.88 ) }
    dend_63 { pt3dadd( 43.4444, 49.2539, 115.814, 1.62 ) }
    dend_63 { pt3dadd( 43.9768, 49.3193, 116.718, 1.99 ) }
    dend_63 { pt3dadd( 45.1731, 49.5581, 118.607, 0.66 ) }
    dend_63 { pt3dadd( 46.2961, 49.8844, 120.231, 0.59 ) }
    dend_63 { pt3dadd( 47.1312, 50.2201, 121.335, 1.55 ) }
    dend_63 { pt3dadd( 48.311, 50.7765, 122.697, 0.44 ) }
    dend_63 { pt3dadd( 49.8041, 51.5901, 124.192, 0.44 ) }
    dend_63 { pt3dadd( 50.3582, 51.9379, 124.732, 0.74 ) }
    dend_63 { pt3dadd( 51.1051, 52.4819, 125.463, 0.74 ) }
    dend_63 { pt3dadd( 51.9373, 53.1431, 126.347, 0.37 ) }
    dend_63 { pt3dadd( 52.9267, 53.9664, 127.711, 0.52 ) }
    dend_63 { pt3dadd( 53.3646, 54.2983, 128.434, 0.52 ) }
    dend_63 { pt3dadd( 53.5189, 54.3848, 128.709, 0.52 ) }
    dend_63 { pt3dadd( 53.7804, 54.4865, 129.174, 0.59 ) }
    dend_63 { pt3dadd( 54.2514, 54.6215, 129.99, 0.59 ) }
    dend_63 { pt3dadd( 54.9781, 54.8272, 131.121, 0.59 ) }
    dend_63 { pt3dadd( 55.6883, 55.0922, 132.12, 0.59 ) }
    dend_63 { pt3dadd( 56.5232, 55.5091, 133.134, 0.44 ) }
    dend_63 { pt3dadd( 57.2698, 55.9579, 133.924, 0.74 ) }
    dend_63 { pt3dadd( 58.3104, 56.6771, 134.907, 0.44 ) }
    dend_63 { pt3dadd( 59.0717, 57.3106, 135.631, 1.03 ) }
    dend_63 { pt3dadd( 59.6298, 57.8631, 136.199, 1.77 ) }
    dend_63 { pt3dadd( 60.7078, 59.0944, 137.393, 0.44 ) }
    dend_63 { pt3dadd( 61.5474, 60.1475, 138.348, 0.22 ) }
    dend_63 { pt3dadd( 62.2908, 61.11, 139.15, 1.03 ) }
    dend_63 { pt3dadd( 63.5711, 62.7484, 140.418, 0.37 ) }
    dend_63 { pt3dadd( 64.4864, 63.8843, 141.287, 0.96 ) }
    dend_63 { pt3dadd( 65.1088, 64.6108, 141.878, 0.96 ) }
    dend_63 { pt3dadd( 65.8079, 65.3283, 142.547, 1.03 ) }
    dend_63 { pt3dadd( 66.9804, 66.3505, 143.686, 0.37 ) }
    dend_63 { pt3dadd( 67.6336, 66.8088, 144.345, 0.37 ) }
    dend_63 { pt3dadd( 68.4189, 67.2718, 145.184, 0.81 ) }
    dend_63 { pt3dadd( 69.1457, 67.6831, 146.118, 1.47 ) }
    dend_63 { pt3dadd( 70.035, 68.2367, 147.611, 0.81 ) }
    dend_63 { pt3dadd( 70.8088, 68.8176, 149.389, 1.11 ) }
    dend_63 { pt3dadd( 71.3344, 69.3192, 151.045, 1.7 ) }
    dend_63 { pt3dadd( 71.7798, 69.8595, 152.927, 0.52 ) }
    dend_63 { pt3dadd( 72.0549, 70.2878, 154.5, 0.52 ) }
    dend_63 { pt3dadd( 72.2543, 70.7001, 156.073, 0.52 ) }
    dend_63 { pt3dadd( 72.444, 71.0996, 157.653, 0.52 ) }
    dend_63 { pt3dadd( 72.6697, 71.3579, 158.866, 0.52 ) }
    dend_63 { pt3dadd( 73.2306, 71.6514, 160.875, 0.81 ) }
    dend_63 { pt3dadd( 73.5445, 71.7191, 161.645, 0.81 ) }
    dend_63 { pt3dadd( 74.5895, 71.8579, 163.488, 0.81 ) }
    dend_63 { pt3dadd( 75.7468, 72.0387, 165.108, 0.59 ) }
    dend_63 { pt3dadd( 77.2093, 72.3795, 166.884, 0.44 ) }
    dend_63 { pt3dadd( 78.0465, 72.6901, 167.836, 1.03 ) }
    dend_63 { pt3dadd( 78.9953, 73.1876, 168.839, 0.44 ) }
    dend_63 { pt3dadd( 79.9713, 73.8327, 169.853, 0.96 ) }
    dend_63 { pt3dadd( 81.019, 74.64, 170.889, 0.59 ) }
    dend_63 { pt3dadd( 81.9278, 75.4119, 171.814, 1.11 ) }
    dend_63 { pt3dadd( 82.9618, 76.333, 172.951, 0.52 ) }
    dend_63 { pt3dadd( 83.6546, 76.9068, 173.71, 0.29 ) }
    dend_63 { pt3dadd( 84.2242, 77.3176, 174.301, 0.81 ) }
    dend_63 { pt3dadd( 84.8646, 77.7045, 174.912, 0.81 ) }
    dend_63 { pt3dadd( 86.0732, 78.2949, 175.903, 0.37 ) }
    dend_63 { pt3dadd( 87.5838, 78.9485, 176.935, 0.81 ) }
    dend_63 { pt3dadd( 88.2524, 79.2254, 177.312, 1.03 ) }
    dend_63 { pt3dadd( 90.1967, 80.1153, 178.298, 0.37 ) }
    dend_63 { pt3dadd( 90.8231, 80.4498, 178.614, 0.37 ) }
    dend_63 { pt3dadd( 91.8046, 81.0744, 179.09, 0.88 ) }
    dend_63 { pt3dadd( 92.5121, 81.5829, 179.397, 0.37 ) }
    dend_63 { pt3dadd( 93.6207, 82.423, 179.818, 0.96 ) }
    dend_63 { pt3dadd( 95.1581, 83.5871, 180.365, 0.59 ) }
    dend_63 { pt3dadd( 96.4746, 84.5215, 180.749, 0.59 ) }
    dend_63 { pt3dadd( 97.9046, 85.5117, 181.115, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_63 { pt3dadd( 98.7497, 86.0916, 181.281, 0.81 ) }
    dend_63 { pt3dadd( 99.8409, 86.7988, 181.403, 1.11 ) }
    dend_63 { pt3dadd( 100.952, 87.4746, 181.356, 0.52 ) }
    dend_63 { pt3dadd( 102.015, 88.0627, 181.149, 0.52 ) }
    dend_63 { pt3dadd( 102.724, 88.4273, 180.926, 0.74 ) }
    dend_63 { pt3dadd( 103.596, 88.8548, 180.601, 0.88 ) }
    dend_63 { pt3dadd( 104.751, 89.4702, 180.079, 0.52 ) }
    dend_63 { pt3dadd( 105.743, 90.0835, 179.536, 1.18 ) }
    dend_63 { pt3dadd( 106.4, 90.5977, 179.118, 1.18 ) }
    dend_63 { pt3dadd( 107.099, 91.2994, 178.556, 0.22 ) }
    dend_63 { pt3dadd( 107.516, 91.7552, 178.167, 0.22 ) }
    dend_63 { pt3dadd( 108.175, 92.4874, 177.558, 0.22 ) }
    dend_63 { pt3dadd( 108.661, 93.0113, 177.141, 0.96 ) }
    dend_63 { pt3dadd( 109.135, 93.4604, 176.786, 1.55 ) }
    dend_63 { pt3dadd( 110.584, 94.652, 175.738, 0.44 ) }
    dend_63 { pt3dadd( 111.861, 95.557, 174.88, 1.03 ) }
    dend_63 { pt3dadd( 113.002, 96.2619, 174.17, 0.74 ) }
    dend_63 { pt3dadd( 114.212, 96.9054, 173.518, 0.37 ) }
    dend_63 { pt3dadd( 115.472, 97.4999, 172.896, 0.29 ) }
    dend_63 { pt3dadd( 116.34, 97.8794, 172.502, 0.29 ) }
    dend_63 { pt3dadd( 117.221, 98.2483, 172.137, 0.88 ) }
    dend_63 { pt3dadd( 117.958, 98.5537, 171.789, 1.11 ) }
    dend_63 { pt3dadd( 118.9, 98.8909, 171.23, 0.22 ) }
    dend_63 { pt3dadd( 119.532, 99.0258, 170.763, 0.22 ) }
    dend_63 { pt3dadd( 120.055, 99.0503, 170.285, 0.22 ) }
    dend_63 { pt3dadd( 120.629, 99.0086, 169.698, 0.22 ) }
    dend_63 { pt3dadd( 121.195, 98.9081, 169.073, 0.74 ) }
    dend_63 { pt3dadd( 122.038, 98.7441, 168.063, 1.18 ) }
    dend_63 { pt3dadd( 123.095, 98.5869, 166.618, 0.37 ) }
    dend_63 { pt3dadd( 123.874, 98.5405, 165.451, 0.37 ) }
    dend_63 { pt3dadd( 124.341, 98.5569, 164.721, 0.88 ) }
    dend_63 { pt3dadd( 124.748, 98.6105, 164.022, 0.88 ) }
    dend_63 { pt3dadd( 125.496, 98.762, 162.622, 0.29 ) }
    dend_63 { pt3dadd( 126.418, 98.9631, 160.878, 0.59 ) }
    dend_63 { pt3dadd( 127.092, 99.079, 159.683, 0.59 ) }
    dend_63 { pt3dadd( 127.46, 99.099, 159.141, 0.59 ) }
    dend_63 { pt3dadd( 128.454, 99.0946, 157.847, 0.59 ) }
    dend_63 { pt3dadd( 129.1, 99.0764, 157.11, 1.33 ) }
    dend_63 { pt3dadd( 130.483, 98.9845, 155.839, 0.52 ) }
    dend_63 { pt3dadd( 131.775, 98.8762, 154.882, 1.4 ) }
    dend_63 { pt3dadd( 133.433, 98.7206, 153.776, 0.44 ) }
    dend_63 { pt3dadd( 134.585, 98.6178, 153.061, 0.88 ) }
    dend_63 { pt3dadd( 135.58, 98.5369, 152.51, 0.22 ) }
    dend_63 { pt3dadd( 136.575, 98.4367, 151.981, 0.22 ) }
    dend_63 { pt3dadd( 137.943, 98.2845, 151.265, 0.44 ) }
    dend_63 { pt3dadd( 139.137, 98.0796, 150.626, 0.15 ) }
    dend_63 { pt3dadd( 139.438, 97.9875, 150.451, 0.29 ) }
    dend_63 { pt3dadd( 140.082, 97.6915, 150.119, 0.15 ) }
    dend_63 { pt3dadd( 140.651, 97.3387, 149.842, 0.59 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 49/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -42.7059, 14.6577, 35.9309, 0.66 ) }
    dend_55 { pt3dadd( -43.3168, 15.0267, 34.5052, 0.66 ) }
    dend_55 { pt3dadd( -43.7461, 15.2349, 33.4703, 0.44 ) }
    dend_55 { pt3dadd( -44.2827, 15.4509, 32.1947, 0.88 ) }
    dend_55 { pt3dadd( -45.0911, 15.7191, 30.4802, 1.11 ) }
    dend_55 { pt3dadd( -46.0185, 16.0101, 28.5879, 1.33 ) }
    dend_55 { pt3dadd( -46.9534, 16.3164, 26.6821, 1.03 ) }
    dend_55 { pt3dadd( -47.6383, 16.5968, 25.1148, 1.33 ) }
    dend_55 { pt3dadd( -48.05, 16.7817, 24.0087, 1.33 ) }
    dend_55 { pt3dadd( -48.4982, 16.995, 22.6823, 0.44 ) }
    dend_55 { pt3dadd( -48.8522, 17.1567, 21.5673, 0.44 ) }
    dend_55 { pt3dadd( -49.0825, 17.2662, 20.8113, 0.81 ) }
    dend_55 { pt3dadd( -49.6833, 17.5997, 18.8493, 0.81 ) }
    dend_55 { pt3dadd( -50.1497, 17.9217, 17.5284, 0.81 ) }
    dend_55 { pt3dadd( -50.3512, 18.0649, 17.0463, 0.81 ) }
    dend_55 { pt3dadd( -51.0586, 18.5261, 15.7127, 0.88 ) }
    dend_55 { pt3dadd( -52.0638, 19.0772, 14.5042, 1.4 ) }
    dend_55 { pt3dadd( -53.1856, 19.6304, 13.6937, 1.7 ) }
    dend_55 { pt3dadd( -55.0541, 20.5017, 12.9333, 0.44 ) }
    dend_55 { pt3dadd( -55.672, 20.789, 12.7827, 0.96 ) }
    dend_55 { pt3dadd( -56.7827, 21.3022, 12.5915, 1.18 ) }
    dend_55 { pt3dadd( -58.0631, 21.8807, 12.4303, 1.11 ) }
    dend_55 { pt3dadd( -59.3038, 22.3927, 12.2519, 1.47 ) }
    dend_55 { pt3dadd( -60.2938, 22.7444, 12.0145, 1.47 ) }
    dend_55 { pt3dadd( -61.6135, 23.1164, 11.518, 0.81 ) }
    dend_55 { pt3dadd( -62.7628, 23.4092, 10.9843, 0.52 ) }
    dend_55 { pt3dadd( -63.8103, 23.6681, 10.4129, 0.52 ) }
    dend_55 { pt3dadd( -64.9561, 23.943, 9.74837, 0.96 ) }
    dend_55 { pt3dadd( -66.1216, 24.2247, 9.08187, 0.37 ) }
    dend_55 { pt3dadd( -66.8546, 24.3949, 8.71018, 0.81 ) }
    dend_55 { pt3dadd( -67.9922, 24.6457, 8.21657, 0.96 ) }
    dend_55 { pt3dadd( -68.9169, 24.8636, 7.89254, 1.47 ) }
    dend_55 { pt3dadd( -69.8464, 25.0943, 7.64215, 0.96 ) }
    dend_55 { pt3dadd( -70.8114, 25.3632, 7.44145, 0.44 ) }
    dend_55 { pt3dadd( -71.6886, 25.6343, 7.26178, 0.44 ) }
    dend_55 { pt3dadd( -72.4956, 25.9197, 7.05898, 0.74 ) }
    dend_55 { pt3dadd( -73.5523, 26.3372, 6.75015, 1.25 ) }
    dend_55 { pt3dadd( -74.2627, 26.6394, 6.53162, 1.25 ) }
    dend_55 { pt3dadd( -75.7155, 27.3269, 6.09818, 0.44 ) }
    dend_55 { pt3dadd( -76.6735, 27.8409, 5.86052, 0.81 ) }
    dend_55 { pt3dadd( -77.6544, 28.4251, 5.68187, 0.88 ) }
    dend_55 { pt3dadd( -78.9935, 29.2404, 5.57334, 0.96 ) }
    dend_55 { pt3dadd( -79.6482, 29.6099, 5.57864, 0.59 ) }
    dend_55 { pt3dadd( -80.7111, 30.1661, 5.6538, 0.29 ) }
    dend_55 { pt3dadd( -81.6113, 30.6036, 5.75794, 0.59 ) }
    dend_55 { pt3dadd( -82.7441, 31.1406, 5.94509, 0.96 ) }
    dend_55 { pt3dadd( -84.0495, 31.7329, 6.2212, 0.66 ) }
    dend_55 { pt3dadd( -86.027, 32.5957, 6.68903, 0.44 ) }
    dend_55 { pt3dadd( -87.021, 33.0063, 6.91676, 0.81 ) }
    dend_55 { pt3dadd( -88.3221, 33.4887, 7.17618, 2.14 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 99/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -42.7059, 14.6577, 35.9309, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_54 { pt3dadd( -43.6658, 16.0675, 36.4801, 0.44 ) }
    dend_54 { pt3dadd( -44.5898, 17.1236, 36.9835, 0.44 ) }
    dend_54 { pt3dadd( -45.3905, 17.9005, 37.3714, 1.18 ) }
    dend_54 { pt3dadd( -46.0732, 18.4694, 37.6951, 0.96 ) }
    dend_54 { pt3dadd( -47.2742, 19.3079, 38.2485, 0.74 ) }
    dend_54 { pt3dadd( -48.381, 19.9403, 38.7479, 0.88 ) }
    dend_54 { pt3dadd( -50.0446, 20.6022, 39.5248, 0.44 ) }
    dend_54 { pt3dadd( -50.7375, 20.8099, 39.8419, 0.81 ) }
    dend_54 { pt3dadd( -51.6858, 21.0821, 40.2772, 1.25 ) }
    dend_54 { pt3dadd( -52.8444, 21.4716, 40.78, 1.33 ) }
    dend_54 { pt3dadd( -54.2336, 22.057, 41.3512, 1.03 ) }
    dend_54 { pt3dadd( -55.5313, 22.7418, 41.8683, 0.52 ) }
    dend_54 { pt3dadd( -56.314, 23.2249, 42.1599, 1.11 ) }
    dend_54 { pt3dadd( -57.6699, 24.1365, 42.6876, 1.55 ) }
    dend_54 { pt3dadd( -59.0886, 25.1923, 43.2314, 1.84 ) }
    dend_54 { pt3dadd( -59.938, 25.8738, 43.5454, 1.11 ) }
    dend_54 { pt3dadd( -60.7199, 26.4889, 43.8058, 0.29 ) }
    dend_54 { pt3dadd( -61.796, 27.2637, 44.1422, 0.37 ) }
    dend_54 { pt3dadd( -62.9035, 27.9673, 44.448, 0.29 ) }
    dend_54 { pt3dadd( -63.8624, 28.5162, 44.6977, 1.33 ) }
    dend_54 { pt3dadd( -65.1651, 29.2834, 45.0411, 0.44 ) }
    dend_54 { pt3dadd( -66.2952, 30.0211, 45.3669, 0.44 ) }
    dend_54 { pt3dadd( -67.1092, 30.6336, 45.6103, 1.03 ) }
    dend_54 { pt3dadd( -68.2839, 31.5978, 45.9661, 1.84 ) }
    dend_54 { pt3dadd( -69.1549, 32.2986, 46.2202, 1.92 ) }
    dend_54 { pt3dadd( -71.0912, 33.8052, 46.8983, 0.44 ) }
    dend_54 { pt3dadd( -71.8145, 34.3803, 47.1972, 0.44 ) }
    dend_54 { pt3dadd( -72.4556, 34.9143, 47.5048, 0.44 ) }
    dend_54 { pt3dadd( -73.2179, 35.5747, 47.9106, 0.44 ) }
    dend_54 { pt3dadd( -74.0253, 36.3155, 48.4177, 0.59 ) }
    dend_54 { pt3dadd( -75.0354, 37.2577, 49.0902, 1.11 ) }
    dend_54 { pt3dadd( -76.3161, 38.4226, 49.9532, 0.44 ) }
    dend_54 { pt3dadd( -77.1687, 39.1617, 50.4852, 0.44 ) }
    dend_54 { pt3dadd( -77.869, 39.7612, 50.9058, 0.29 ) }
    dend_54 { pt3dadd( -78.9061, 40.6387, 51.4543, 0.66 ) }
    dend_54 { pt3dadd( -80.1282, 41.6306, 51.9859, 0.88 ) }
    dend_54 { pt3dadd( -80.7987, 42.1089, 52.2021, 1.62 ) }
    dend_54 { pt3dadd( -81.7981, 42.6813, 52.4361, 2.43 ) }
    dend_54 { pt3dadd( -82.2428, 42.8849, 52.5153, 2.43 ) }
    dend_54 { pt3dadd( -83.8911, 43.4864, 52.7885, 0.74 ) }
    dend_54 { pt3dadd( -85.3151, 43.9454, 53.049, 0.29 ) }
    dend_54 { pt3dadd( -86.3094, 44.2674, 53.261, 0.29 ) }
    dend_54 { pt3dadd( -87.5433, 44.6955, 53.546, 0.59 ) }
    dend_54 { pt3dadd( -88.8859, 45.1917, 53.8306, 0.29 ) }
    dend_54 { pt3dadd( -90.1022, 45.6686, 54.0365, 0.96 ) }
    dend_54 { pt3dadd( -91.4404, 46.2516, 54.1422, 0.22 ) }
    dend_54 { pt3dadd( -92.3487, 46.6755, 54.1144, 1.03 ) }
    dend_54 { pt3dadd( -93.8108, 47.3913, 53.9143, 0.22 ) }
    dend_54 { pt3dadd( -95.0188, 47.9967, 53.6094, 0.22 ) }
    dend_54 { pt3dadd( -95.7549, 48.3479, 53.3294, 0.88 ) }
    dend_54 { pt3dadd( -97.379, 49.0399, 52.5742, 0.37 ) }
    dend_54 { pt3dadd( -98.3482, 49.3858, 52.0993, 1.11 ) }
    dend_54 { pt3dadd( -99.1164, 49.6452, 51.7351, 1.03 ) }
    dend_54 { pt3dadd( -100.657, 50.2002, 51.058, 0.29 ) }
    dend_54 { pt3dadd( -101.878, 50.6937, 50.573, 0.22 ) }
    dend_54 { pt3dadd( -102.694, 51.0761, 50.2532, 0.81 ) }
    dend_54 { pt3dadd( -103.59, 51.6089, 49.9367, 1.25 ) }
    dend_54 { pt3dadd( -105.316, 53.0919, 49.4924, 0.37 ) }
    dend_54 { pt3dadd( -105.98, 53.9142, 49.4797, 0.37 ) }
    dend_54 { pt3dadd( -106.42, 54.6618, 49.6557, 0.37 ) }
    dend_54 { pt3dadd( -106.691, 55.2235, 49.8957, 0.74 ) }
    dend_54 { pt3dadd( -107.187, 56.4373, 50.592, 1.47 ) }
    dend_54 { pt3dadd( -107.802, 58.148, 51.7305, 0.59 ) }
    dend_54 { pt3dadd( -108.255, 59.4659, 52.7033, 0.37 ) }
    dend_54 { pt3dadd( -108.584, 60.3936, 53.3944, 0.29 ) }
    dend_54 { pt3dadd( -108.999, 61.5436, 54.2169, 0.66 ) }
    dend_54 { pt3dadd( -109.491, 62.8932, 55.0979, 0.22 ) }
    dend_54 { pt3dadd( -109.764, 63.7237, 55.5465, 0.22 ) }
    dend_54 { pt3dadd( -110.004, 64.7214, 55.9554, 0.22 ) }
    dend_54 { pt3dadd( -110.05, 65.2225, 56.083, 0.52 ) }
    dend_54 { pt3dadd( -109.945, 66.1468, 56.1949, 1.03 ) }
    dend_54 { pt3dadd( -109.757, 66.8445, 56.2154, 0.37 ) }
    dend_54 { pt3dadd( -109.38, 67.848, 56.1955, 0.29 ) }
    dend_54 { pt3dadd( -108.958, 68.8356, 56.2059, 0.44 ) }
    dend_54 { pt3dadd( -108.559, 69.8307, 56.2379, 0.52 ) }
    dend_54 { pt3dadd( -107.862, 71.8887, 56.3375, 0.22 ) }
    dend_54 { pt3dadd( -107.683, 72.5451, 56.3782, 0.44 ) }
    dend_54 { pt3dadd( -107.526, 73.4435, 56.4229, 1.03 ) }
    dend_54 { pt3dadd( -107.44, 74.8216, 56.4927, 0.52 ) }
    dend_54 { pt3dadd( -107.493, 76.2481, 56.564, 0.22 ) }
    dend_54 { pt3dadd( -107.602, 77.0985, 56.6181, 0.66 ) }
    dend_54 { pt3dadd( -107.764, 77.8034, 56.6654, 0.44 ) }
    dend_54 { pt3dadd( -108.129, 79.1724, 56.7488, 0.22 ) }
    dend_54 { pt3dadd( -108.459, 80.3401, 56.8112, 0.22 ) }
    dend_54 { pt3dadd( -108.673, 81.1819, 56.8442, 0.37 ) }
    dend_54 { pt3dadd( -108.848, 81.9736, 56.902, 0.96 ) }
    dend_54 { pt3dadd( -109.045, 82.8851, 57.0147, 0.59 ) }
    dend_54 { pt3dadd( -109.341, 84.3654, 57.254, 0.29 ) }
    dend_54 { pt3dadd( -109.459, 84.9846, 57.3881, 0.29 ) }
    dend_54 { pt3dadd( -109.675, 86.0831, 57.6391, 0.88 ) }
    dend_54 { pt3dadd( -109.998, 87.5426, 58.0282, 0.22 ) }
    dend_54 { pt3dadd( -110.21, 88.3861, 58.2655, 0.52 ) }
    dend_54 { pt3dadd( -110.554, 89.5925, 58.6282, 0.29 ) }
    dend_54 { pt3dadd( -110.855, 90.464, 58.8977, 0.88 ) }
    dend_54 { pt3dadd( -111.271, 91.4526, 59.1744, 1.47 ) }
    dend_54 { pt3dadd( -112.254, 93.3177, 59.7372, 0.15 ) }
    dend_54 { pt3dadd( -112.774, 94.1735, 60.0136, 0.15 ) }
    dend_54 { pt3dadd( -113.129, 94.683, 60.1865, 0.81 ) }
    dend_54 { pt3dadd( -113.68, 95.3623, 60.4591, 1.11 ) }
    dend_54 { pt3dadd( -114.975, 96.724, 61.0967, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_54 { pt3dadd( -116.195, 97.8124, 61.6926, 0.22 ) }
    dend_54 { pt3dadd( -116.613, 98.133, 61.8878, 0.22 ) }
    dend_54 { pt3dadd( -117.203, 98.5842, 62.1588, 0.88 ) }
    dend_54 { pt3dadd( -117.946, 99.1659, 62.4777, 0.88 ) }
    dend_54 { pt3dadd( -119.196, 100.168, 62.9499, 0.22 ) }
    dend_54 { pt3dadd( -119.889, 100.755, 63.1872, 0.52 ) }
    dend_54 { pt3dadd( -120.257, 101.098, 63.3025, 1.03 ) }
    dend_54 { pt3dadd( -121.567, 102.397, 63.7203, 0.44 ) }
    dend_54 { pt3dadd( -122.227, 103.099, 63.9321, 0.22 ) }
    dend_54 { pt3dadd( -122.859, 103.832, 64.1208, 0.44 ) }
    dend_54 { pt3dadd( -124.018, 105.32, 64.4271, 0.22 ) }
    dend_54 { pt3dadd( -124.538, 106.053, 64.5316, 0.74 ) }
    dend_54 { pt3dadd( -124.963, 106.747, 64.5609, 1.11 ) }
    dend_54 { pt3dadd( -125.51, 108.004, 64.4163, 0.22 ) }
    dend_54 { pt3dadd( -125.777, 109.26, 64.046, 0.29 ) }
    dend_54 { pt3dadd( -125.8, 110.36, 63.5406, 0.22 ) }
    dend_54 { pt3dadd( -125.657, 111.593, 62.7707, 0.37 ) }
    dend_54 { pt3dadd( -125.373, 112.833, 61.8803, 0.29 ) }
    dend_54 { pt3dadd( -124.949, 114.007, 60.9597, 0.22 ) }
    dend_54 { pt3dadd( -124.551, 114.829, 60.2821, 0.88 ) }
    dend_54 { pt3dadd( -124.046, 115.759, 59.5462, 0.22 ) }
    dend_54 { pt3dadd( -123.447, 116.871, 58.7633, 0.22 ) }
    dend_54 { pt3dadd( -122.966, 117.849, 58.1807, 0.22 ) }
    dend_54 { pt3dadd( -122.602, 118.664, 57.7825, 0.22 ) }
    dend_54 { pt3dadd( -122.331, 119.326, 57.5266, 1.18 ) }
    dend_54 { pt3dadd( -121.76, 120.765, 57.0649, 0.15 ) }
    dend_54 { pt3dadd( -121.446, 121.565, 56.8714, 0.29 ) }
    dend_54 { pt3dadd( -121.14, 122.444, 56.7442, 0.07 ) }
    dend_54 { pt3dadd( -120.913, 123.334, 56.6525, 0.74 ) }
    dend_54 { pt3dadd( -120.849, 123.69, 56.6236, 0.74 ) }
    // Section: dend_51, id: dend_51, parent: dend_45 (entry count 30/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 22.0236, -43.9997, -10.7873, 0.88 ) }
    dend_51 { pt3dadd( 21.1848, -46.0096, -11.3644, 0.88 ) }
    dend_51 { pt3dadd( 20.4514, -47.5468, -11.8954, 0.74 ) }
    dend_51 { pt3dadd( 19.7773, -48.7819, -12.2993, 0.88 ) }
    dend_51 { pt3dadd( 19.0452, -49.9553, -12.664, 1.18 ) }
    dend_51 { pt3dadd( 18.4304, -50.8552, -12.9417, 0.88 ) }
    dend_51 { pt3dadd( 17.8264, -51.7334, -13.1998, 0.74 ) }
    dend_51 { pt3dadd( 17.1292, -52.6858, -13.4866, 0.96 ) }
    dend_51 { pt3dadd( 16.4779, -53.6004, -13.7044, 0.81 ) }
    dend_51 { pt3dadd( 16.0087, -54.3777, -13.8239, 0.66 ) }
    dend_51 { pt3dadd( 15.5376, -55.3963, -13.9355, 0.88 ) }
    dend_51 { pt3dadd( 15.1522, -56.3989, -14.0468, 0.88 ) }
    dend_51 { pt3dadd( 14.6755, -57.8162, -14.2193, 0.88 ) }
    dend_51 { pt3dadd( 14.4989, -58.453, -14.3106, 0.74 ) }
    dend_51 { pt3dadd( 14.1712, -59.8869, -14.596, 0.59 ) }
    dend_51 { pt3dadd( 13.9541, -60.9725, -14.8476, 0.59 ) }
    dend_51 { pt3dadd( 13.717, -61.941, -15.1034, 1.03 ) }
    dend_51 { pt3dadd( 13.3584, -63.0469, -15.467, 1.03 ) }
    dend_51 { pt3dadd( 12.8752, -64.2658, -15.9468, 0.74 ) }
    dend_51 { pt3dadd( 12.5213, -65.1013, -16.2865, 0.74 ) }
    dend_51 { pt3dadd( 12.1436, -65.9463, -16.6401, 0.81 ) }
    dend_51 { pt3dadd( 11.559, -67.1847, -17.1678, 0.66 ) }
    dend_51 { pt3dadd( 11.0703, -68.1347, -17.5425, 0.74 ) }
    dend_51 { pt3dadd( 10.5168, -69.1404, -17.8651, 0.88 ) }
    dend_51 { pt3dadd( 10.0939, -69.8507, -18.0457, 1.25 ) }
    dend_51 { pt3dadd( 9.67887, -70.5252, -18.1304, 1.25 ) }
    dend_51 { pt3dadd( 9.03794, -71.6044, -18.1381, 0.88 ) }
    dend_51 { pt3dadd( 8.49759, -72.6913, -17.9967, 0.81 ) }
    dend_51 { pt3dadd( 8.04578, -73.7153, -17.6878, 0.88 ) }
    dend_51 { pt3dadd( 7.76756, -74.3984, -17.3673, 0.88 ) }
    dend_51 { pt3dadd( 7.36949, -75.4986, -16.6966, 0.59 ) }
    dend_51 { pt3dadd( 7.21757, -76.0279, -16.3115, 1.03 ) }
    dend_51 { pt3dadd( 6.98282, -77.1925, -15.3701, 0.59 ) }
    dend_51 { pt3dadd( 6.84187, -78.1974, -14.5061, 0.81 ) }
    dend_51 { pt3dadd( 6.71795, -79.1063, -13.7165, 1.11 ) }
    dend_51 { pt3dadd( 6.56999, -80.2501, -12.7359, 0.66 ) }
    dend_51 { pt3dadd( 6.45257, -81.3677, -11.7959, 0.66 ) }
    dend_51 { pt3dadd( 6.37574, -82.443, -10.8928, 0.59 ) }
    dend_51 { pt3dadd( 6.34911, -83.3887, -10.1261, 0.44 ) }
    dend_51 { pt3dadd( 6.37917, -84.1762, -9.54781, 0.59 ) }
    dend_51 { pt3dadd( 6.46186, -84.8915, -9.07983, 0.81 ) }
    dend_51 { pt3dadd( 6.71479, -86.3376, -8.29373, 0.59 ) }
    dend_51 { pt3dadd( 6.97139, -87.4134, -7.85888, 0.74 ) }
    dend_51 { pt3dadd( 7.17086, -88.0207, -7.67636, 0.81 ) }
    dend_51 { pt3dadd( 7.49681, -88.729, -7.51199, 0.74 ) }
    dend_51 { pt3dadd( 8.04597, -89.6215, -7.29299, 0.88 ) }
    dend_51 { pt3dadd( 8.90544, -90.7469, -6.96583, 0.52 ) }
    dend_51 { pt3dadd( 9.62379, -91.5919, -6.6815, 0.59 ) }
    dend_51 { pt3dadd( 10.1753, -92.2436, -6.38827, 0.59 ) }
    dend_51 { pt3dadd( 10.8303, -93.0135, -5.91958, 0.81 ) }
    dend_51 { pt3dadd( 11.596, -93.9175, -5.24957, 0.66 ) }
    dend_51 { pt3dadd( 12.2377, -94.7443, -4.56858, 0.88 ) }
    dend_51 { pt3dadd( 12.7084, -95.4468, -3.98431, 0.96 ) }
    dend_51 { pt3dadd( 13.2902, -96.5337, -3.15001, 0.66 ) }
    dend_51 { pt3dadd( 13.7202, -97.6133, -2.46889, 0.88 ) }
    dend_51 { pt3dadd( 14.0457, -98.7195, -1.91417, 0.66 ) }
    dend_51 { pt3dadd( 14.3676, -100.135, -1.39541, 0.88 ) }
    dend_51 { pt3dadd( 14.6325, -101.517, -1.03183, 1.18 ) }
    dend_51 { pt3dadd( 14.8301, -102.676, -0.851259, 1.33 ) }
    dend_51 { pt3dadd( 15.0681, -104.394, -0.765959, 0.59 ) }
    dend_51 { pt3dadd( 15.1575, -105.39, -0.794338, 0.59 ) }
    dend_51 { pt3dadd( 15.1829, -106.43, -0.876792, 0.88 ) }
    dend_51 { pt3dadd( 15.1312, -107.226, -0.940653, 0.88 ) }
    dend_51 { pt3dadd( 14.924, -108.58, -0.986341, 0.74 ) }
    dend_51 { pt3dadd( 14.6132, -110.069, -0.932353, 0.88 ) }
    dend_51 { pt3dadd( 14.4312, -110.883, -0.824504, 0.66 ) }
    dend_51 { pt3dadd( 14.1673, -112.085, -0.572579, 0.81 ) }
    dend_51 { pt3dadd( 13.7662, -113.707, -0.133743, 0.74 ) }
    dend_51 { pt3dadd( 13.4492, -114.837, 0.206618, 0.66 ) }
    dend_51 { pt3dadd( 13.141, -115.829, 0.535519, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_51 { pt3dadd( 12.8067, -116.877, 0.855584, 0.59 ) }
    dend_51 { pt3dadd( 12.5192, -117.831, 1.06786, 1.03 ) }
    dend_51 { pt3dadd( 12.1598, -119.213, 1.26624, 0.88 ) }
    dend_51 { pt3dadd( 11.9905, -120.012, 1.31906, 1.03 ) }
    dend_51 { pt3dadd( 11.8056, -121.048, 1.32742, 1.03 ) }
    dend_51 { pt3dadd( 11.6325, -122.474, 1.28532, 0.74 ) }
    dend_51 { pt3dadd( 11.5589, -124.022, 1.18207, 0.96 ) }
    dend_51 { pt3dadd( 11.631, -125.305, 1.06756, 0.81 ) }
    dend_51 { pt3dadd( 11.8678, -126.664, 0.918522, 0.66 ) }
    dend_51 { pt3dadd( 12.1577, -127.649, 0.82835, 0.66 ) }
    dend_51 { pt3dadd( 12.7184, -128.928, 0.762078, 0.74 ) }
    dend_51 { pt3dadd( 13.1406, -129.615, 0.779056, 1.11 ) }
    dend_51 { pt3dadd( 13.6183, -130.204, 0.853665, 0.88 ) }
    dend_51 { pt3dadd( 14.2729, -130.846, 1.00035, 1.03 ) }
    dend_51 { pt3dadd( 15.5742, -131.929, 1.39283, 0.74 ) }
    dend_51 { pt3dadd( 16.7473, -132.817, 1.81719, 0.74 ) }
    dend_51 { pt3dadd( 17.8334, -133.621, 2.26636, 0.88 ) }
    dend_51 { pt3dadd( 18.7224, -134.322, 2.69385, 1.03 ) }
    dend_51 { pt3dadd( 19.5608, -135.072, 3.17056, 0.66 ) }
    dend_51 { pt3dadd( 20.1864, -135.796, 3.62332, 0.81 ) }
    dend_51 { pt3dadd( 20.394, -136.175, 3.84379, 0.81 ) }
    dend_51 { pt3dadd( 20.7784, -137.514, 4.55353, 0.59 ) }
    dend_51 { pt3dadd( 20.9339, -138.745, 5.13393, 1.11 ) }
    dend_51 { pt3dadd( 20.9916, -139.798, 5.61112, 0.81 ) }
    dend_51 { pt3dadd( 21.0467, -141.173, 6.21724, 0.59 ) }
    dend_51 { pt3dadd( 21.1203, -142.356, 6.7186, 0.59 ) }
    dend_51 { pt3dadd( 21.1961, -143.212, 7.08494, 0.88 ) }
    dend_51 { pt3dadd( 21.314, -144.214, 7.49847, 1.33 ) }
    dend_51 { pt3dadd( 21.5534, -145.891, 8.17169, 0.74 ) }
    dend_51 { pt3dadd( 21.7462, -147.078, 8.68048, 0.74 ) }
    dend_51 { pt3dadd( 21.9171, -147.926, 9.06627, 0.52 ) }
    dend_51 { pt3dadd( 22.1488, -148.839, 9.51961, 1.11 ) }
    dend_51 { pt3dadd( 22.3995, -149.723, 10.0031, 0.88 ) }
    dend_51 { pt3dadd( 22.7257, -150.885, 10.7023, 0.59 ) }
    dend_51 { pt3dadd( 22.9292, -151.807, 11.2898, 0.59 ) }
    dend_51 { pt3dadd( 23.0985, -153.076, 12.1698, 0.88 ) }
    dend_51 { pt3dadd( 23.1074, -154.149, 12.9536, 0.88 ) }
    dend_51 { pt3dadd( 23.0306, -154.736, 13.372, 1.18 ) }
    dend_51 { pt3dadd( 22.8284, -155.477, 13.8829, 1.25 ) }
    dend_51 { pt3dadd( 22.4205, -156.523, 14.5262, 0.96 ) }
    dend_51 { pt3dadd( 21.9573, -157.477, 15.0624, 1.47 ) }
    dend_51 { pt3dadd( 21.2787, -158.692, 15.7366, 1.4 ) }
    dend_51 { pt3dadd( 20.7891, -159.574, 16.2499, 1.4 ) }
    dend_51 { pt3dadd( 20.2209, -160.717, 16.9321, 0.74 ) }
    dend_51 { pt3dadd( 19.759, -161.786, 17.5909, 0.59 ) }
    dend_51 { pt3dadd( 19.3818, -162.786, 18.216, 1.25 ) }
    dend_51 { pt3dadd( 18.9692, -163.964, 18.9865, 0.81 ) }
    dend_51 { pt3dadd( 18.4767, -165.445, 19.9987, 0.66 ) }
    dend_51 { pt3dadd( 18.1825, -166.303, 20.5882, 0.74 ) }
    dend_51 { pt3dadd( 17.9014, -167.108, 21.0879, 1.4 ) }
    dend_51 { pt3dadd( 17.5827, -168.174, 21.6438, 1.03 ) }
    dend_51 { pt3dadd( 17.3823, -169.354, 22.0905, 0.66 ) }
    dend_51 { pt3dadd( 17.3713, -170.468, 22.3849, 0.52 ) }
    dend_51 { pt3dadd( 17.5241, -171.552, 22.5829, 0.88 ) }
    dend_51 { pt3dadd( 17.8741, -172.966, 22.8025, 1.47 ) }
    dend_51 { pt3dadd( 18.3354, -174.341, 23.0282, 0.96 ) }
    dend_51 { pt3dadd( 19.003, -175.923, 23.3322, 0.81 ) }
    dend_51 { pt3dadd( 19.6985, -177.304, 23.685, 0.66 ) }
    dend_51 { pt3dadd( 20.2648, -178.27, 24.073, 0.66 ) }
    dend_51 { pt3dadd( 20.8328, -179.145, 24.621, 0.59 ) }
    dend_51 { pt3dadd( 21.3861, -180.003, 25.3925, 0.59 ) }
    dend_51 { pt3dadd( 21.8081, -180.693, 26.1897, 0.96 ) }
    dend_51 { pt3dadd( 22.2576, -181.473, 27.2803, 1.18 ) }
    dend_51 { pt3dadd( 22.7576, -182.283, 28.5382, 0.88 ) }
    dend_51 { pt3dadd( 23.18, -182.956, 29.5991, 0.74 ) }
    dend_51 { pt3dadd( 23.6162, -183.635, 30.6573, 0.88 ) }
    dend_51 { pt3dadd( 23.9916, -184.24, 31.5621, 1.03 ) }
    dend_51 { pt3dadd( 24.5096, -185.12, 32.832, 0.74 ) }
    dend_51 { pt3dadd( 24.9924, -186.016, 34.0349, 0.96 ) }
    dend_51 { pt3dadd( 25.3443, -186.738, 34.9563, 0.66 ) }
    dend_51 { pt3dadd( 25.5123, -187.093, 35.4262, 0.66 ) }
    dend_51 { pt3dadd( 25.9887, -188.067, 36.8463, 1.03 ) }
    dend_51 { pt3dadd( 26.2651, -188.634, 37.8062, 1.25 ) }
    dend_51 { pt3dadd( 26.5758, -189.273, 39.0513, 0.96 ) }
    dend_51 { pt3dadd( 26.862, -189.868, 40.3525, 0.81 ) }
    dend_51 { pt3dadd( 27.0221, -190.163, 41.0209, 0.81 ) }
    dend_51 { pt3dadd( 27.1801, -190.398, 41.4928, 0.81 ) }
    dend_51 { pt3dadd( 27.5738, -190.848, 42.2236, 0.81 ) }
    dend_51 { pt3dadd( 28.238, -191.462, 43.0305, 0.59 ) }
    dend_51 { pt3dadd( 28.8923, -191.983, 43.5934, 0.96 ) }
    dend_51 { pt3dadd( 29.6339, -192.526, 44.0973, 0.66 ) }
    dend_51 { pt3dadd( 30.7113, -193.286, 44.7295, 0.29 ) }
    dend_51 { pt3dadd( 31.4623, -193.835, 45.1384, 0.81 ) }
    dend_51 { pt3dadd( 32.2565, -194.457, 45.5837, 1.03 ) }
    dend_51 { pt3dadd( 33.1374, -195.246, 46.1833, 0.88 ) }
    dend_51 { pt3dadd( 33.7418, -195.895, 46.703, 0.88 ) }
    dend_51 { pt3dadd( 34.6304, -197.288, 47.7692, 0.44 ) }
    dend_51 { pt3dadd( 34.899, -198.049, 48.3021, 0.66 ) }
    dend_51 { pt3dadd( 35.0953, -199.322, 49.0882, 0.44 ) }
    dend_51 { pt3dadd( 35.0873, -200.815, 49.9238, 0.88 ) }
    dend_51 { pt3dadd( 34.9699, -201.868, 50.511, 1.25 ) }
    dend_51 { pt3dadd( 34.6384, -203.729, 51.6134, 0.74 ) }
    dend_51 { pt3dadd( 34.3647, -204.945, 52.3627, 0.81 ) }
    dend_51 { pt3dadd( 34.0953, -206.087, 53.0888, 1.03 ) }
    dend_51 { pt3dadd( 33.7593, -207.287, 53.8939, 0.81 ) }
    dend_51 { pt3dadd( 33.3727, -208.421, 54.7156, 0.66 ) }
    dend_51 { pt3dadd( 32.8115, -209.675, 55.7765, 1.11 ) }
    dend_51 { pt3dadd( 32.3536, -210.46, 56.6006, 1.4 ) }
    dend_51 { pt3dadd( 31.6608, -211.415, 57.7658, 0.44 ) }
    dend_51 { pt3dadd( 30.7634, -212.477, 59.2243, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_51 { pt3dadd( 30.2508, -213.044, 60.0826, 0.81 ) }
    dend_51 { pt3dadd( 29.5407, -213.757, 61.2505, 0.66 ) }
    dend_51 { pt3dadd( 28.8872, -214.391, 62.3413, 1.25 ) }
    dend_51 { pt3dadd( 28.3914, -214.908, 63.2448, 1.77 ) }
    dend_51 { pt3dadd( 27.7869, -215.674, 64.5723, 1.25 ) }
    dend_51 { pt3dadd( 27.2128, -216.654, 66.2243, 0.59 ) }
    dend_51 { pt3dadd( 26.7706, -217.677, 68.0149, 0.44 ) }
    dend_51 { pt3dadd( 26.6453, -218.158, 68.9141, 0.88 ) }
    dend_51 { pt3dadd( 26.6317, -218.815, 70.2029, 0.44 ) }
    dend_51 { pt3dadd( 26.8002, -219.255, 71.1634, 0.44 ) }
    dend_51 { pt3dadd( 27.1918, -219.609, 72.0547, 0.59 ) }
    dend_51 { pt3dadd( 28.0458, -220.066, 73.3185, 0.37 ) }
    dend_51 { pt3dadd( 28.8317, -220.421, 74.3478, 0.52 ) }
    dend_51 { pt3dadd( 29.5535, -220.777, 75.3418, 0.29 ) }
    dend_51 { pt3dadd( 30.1926, -221.163, 76.2978, 0.81 ) }
    dend_51 { pt3dadd( 30.893, -221.8, 77.4834, 1.77 ) }
    dend_51 { pt3dadd( 31.6359, -222.857, 79.0538, 0.37 ) }
    dend_51 { pt3dadd( 32.072, -223.883, 80.3447, 0.52 ) }
    dend_51 { pt3dadd( 32.3392, -224.994, 81.6144, 1.18 ) }
    dend_51 { pt3dadd( 32.407, -225.811, 82.4808, 1.18 ) }
    dend_51 { pt3dadd( 32.3137, -227.089, 83.7146, 0.37 ) }
    dend_51 { pt3dadd( 32.0595, -228.111, 84.6341, 0.37 ) }
    dend_51 { pt3dadd( 31.7383, -228.917, 85.3443, 1.03 ) }
    dend_51 { pt3dadd( 31.4707, -229.467, 85.8571, 1.03 ) }
    dend_51 { pt3dadd( 31.0434, -230.242, 86.6264, 0.44 ) }
    dend_51 { pt3dadd( 30.5029, -231.162, 87.5384, 0.44 ) }
    dend_51 { pt3dadd( 30.0123, -231.975, 88.3378, 0.37 ) }
    dend_51 { pt3dadd( 29.4275, -233.031, 89.2603, 0.88 ) }
    dend_51 { pt3dadd( 28.9276, -234.003, 89.9429, 1.7 ) }
    dend_51 { pt3dadd( 28.5946, -234.699, 90.2887, 1.03 ) }
    dend_51 { pt3dadd( 27.8142, -236.393, 90.7776, 0.29 ) }
    dend_51 { pt3dadd( 27.5712, -236.945, 90.8208, 1.18 ) }
    dend_51 { pt3dadd( 27.1876, -237.807, 90.7366, 1.77 ) }
    dend_51 { pt3dadd( 26.481, -239.354, 90.3911, 0.15 ) }
    dend_51 { pt3dadd( 25.9752, -240.436, 90.0504, 0.74 ) }
    dend_51 { pt3dadd( 25.5176, -241.414, 89.7012, 0.22 ) }
    dend_51 { pt3dadd( 25.2005, -242.113, 89.4116, 0.52 ) }
    dend_51 { pt3dadd( 24.7487, -243.115, 88.9925, 1.18 ) }
    dend_51 { pt3dadd( 24.3874, -243.94, 88.6497, 0.22 ) }
    dend_51 { pt3dadd( 24.1007, -244.652, 88.3984, 0.15 ) }
    dend_51 { pt3dadd( 23.8486, -245.355, 88.1744, 0.81 ) }
    dend_51 { pt3dadd( 23.5148, -246.365, 87.8396, 0.15 ) }
    dend_51 { pt3dadd( 23.2777, -247.065, 87.6262, 0.74 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 43/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 22.0236, -43.9997, -10.7873, 0.96 ) }
    dend_46 { pt3dadd( 22.6411, -45.6449, -11.223, 0.96 ) }
    dend_46 { pt3dadd( 22.9335, -46.6524, -11.4812, 0.96 ) }
    dend_46 { pt3dadd( 23.1873, -47.6749, -11.7263, 1.11 ) }
    dend_46 { pt3dadd( 23.4793, -48.8572, -12.0305, 1.11 ) }
    dend_46 { pt3dadd( 23.9121, -50.4237, -12.4347, 1.33 ) }
    dend_46 { pt3dadd( 24.4018, -51.9559, -12.8524, 1.11 ) }
    dend_46 { pt3dadd( 24.7861, -53.0648, -13.2201, 1.11 ) }
    dend_46 { pt3dadd( 25.1535, -53.9493, -13.55, 1.18 ) }
    dend_46 { pt3dadd( 25.8123, -55.1652, -14.0315, 1.18 ) }
    dend_46 { pt3dadd( 26.5158, -56.1564, -14.4638, 1.18 ) }
    dend_46 { pt3dadd( 27.2356, -57.0066, -14.864, 1.11 ) }
    dend_46 { pt3dadd( 28.1835, -58.0517, -15.3161, 1.4 ) }
    dend_46 { pt3dadd( 29.1373, -59.1528, -15.6996, 1.25 ) }
    dend_46 { pt3dadd( 29.8969, -60.1616, -15.8945, 1.18 ) }
    dend_46 { pt3dadd( 30.6073, -61.401, -15.8916, 1.18 ) }
    dend_46 { pt3dadd( 31.0278, -62.4011, -15.7517, 1.11 ) }
    dend_46 { pt3dadd( 31.5028, -63.9046, -15.3518, 1.33 ) }
    dend_46 { pt3dadd( 31.8692, -65.2789, -14.898, 1.18 ) }
    dend_46 { pt3dadd( 32.2411, -66.6921, -14.3606, 1.33 ) }
    dend_46 { pt3dadd( 32.5803, -67.9571, -13.8725, 1.03 ) }
    dend_46 { pt3dadd( 32.8322, -68.8255, -13.5524, 1.11 ) }
    dend_46 { pt3dadd( 33.1625, -69.769, -13.2801, 1.55 ) }
    dend_46 { pt3dadd( 33.6013, -70.8718, -13.087, 1.47 ) }
    dend_46 { pt3dadd( 34.2517, -72.4171, -12.9499, 1.18 ) }
    dend_46 { pt3dadd( 34.6953, -73.4895, -12.9159, 1.18 ) }
    dend_46 { pt3dadd( 35.0109, -74.3378, -12.8726, 1.18 ) }
    dend_46 { pt3dadd( 35.3759, -75.5107, -12.7088, 1.11 ) }
    dend_46 { pt3dadd( 35.6217, -76.4102, -12.5742, 1.11 ) }
    dend_46 { pt3dadd( 35.8838, -77.585, -12.3509, 1.62 ) }
    dend_46 { pt3dadd( 36.0425, -78.4272, -12.1814, 1.03 ) }
    dend_46 { pt3dadd( 36.2896, -79.7417, -11.8233, 1.18 ) }
    dend_46 { pt3dadd( 36.6136, -81.523, -11.1341, 1.92 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 76/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -36.4607, -79.3867, -37.1273, 0.66 ) }
    dend_44 { pt3dadd( -36.957, -81.0273, -37.6782, 0.66 ) }
    dend_44 { pt3dadd( -37.3182, -81.9235, -38.0165, 0.88 ) }
    dend_44 { pt3dadd( -37.7726, -82.8264, -38.3385, 0.66 ) }
    dend_44 { pt3dadd( -38.339, -83.8867, -38.6452, 0.44 ) }
    dend_44 { pt3dadd( -38.919, -85.0018, -38.8538, 0.44 ) }
    dend_44 { pt3dadd( -39.3924, -85.9286, -38.9429, 0.74 ) }
    dend_44 { pt3dadd( -39.9543, -86.9928, -38.8559, 0.81 ) }
    dend_44 { pt3dadd( -40.5492, -88.2838, -38.5493, 0.59 ) }
    dend_44 { pt3dadd( -40.8825, -89.2212, -38.2236, 0.59 ) }
    dend_44 { pt3dadd( -41.2778, -90.7091, -37.5776, 0.29 ) }
    dend_44 { pt3dadd( -41.4531, -91.6159, -37.0938, 0.29 ) }
    dend_44 { pt3dadd( -41.5617, -92.7341, -36.4164, 0.22 ) }
    dend_44 { pt3dadd( -41.5731, -93.7267, -35.7548, 0.22 ) }
    dend_44 { pt3dadd( -41.5237, -94.8343, -35.0031, 0.15 ) }
    dend_44 { pt3dadd( -41.4876, -95.4323, -34.6068, 0.15 ) }
    dend_44 { pt3dadd( -41.4033, -96.3898, -33.9701, 0.15 ) }
    dend_44 { pt3dadd( -41.2929, -97.3892, -33.3214, 0.22 ) }
    dend_44 { pt3dadd( -41.2304, -98.253, -32.7711, 0.22 ) }
    dend_44 { pt3dadd( -42.3939, -107.927, -32.3444, 0.22 ) }
    dend_44 { pt3dadd( -44.8984, -117.364, -32.1281, 0.22 ) }
    dend_44 { pt3dadd( -47.3422, -126.7, -33.6607, 0.22 ) }
    dend_44 { pt3dadd( -47.7558, -136.44, -33.5132, 0.22 ) }
    dend_44 { pt3dadd( -46.4468, -145.982, -31.9272, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_44 { pt3dadd( -46.7734, -155.301, -29.0046, 0.22 ) }
    dend_44 { pt3dadd( -48.1935, -164.723, -26.8566, 0.22 ) }
    dend_44 { pt3dadd( -48.3281, -174.22, -24.6003, 0.22 ) }
    dend_44 { pt3dadd( -48.6874, -183.928, -23.7468, 0.22 ) }
    dend_44 { pt3dadd( -48.0874, -193.306, -21.0789, 0.22 ) }
    dend_44 { pt3dadd( -45.8432, -202.23, -17.7344, 0.22 ) }
    dend_44 { pt3dadd( -42.523, -210.02, -12.7186, 0.22 ) }
    dend_44 { pt3dadd( -38.005, -216.047, -6.28679, 0.22 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 8/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -36.4607, -79.3867, -37.1273, 1.11 ) }
    dend_43 { pt3dadd( -36.8345, -80.1544, -36.9225, 1.11 ) }
    dend_43 { pt3dadd( -37.5755, -81.5203, -36.7902, 0.81 ) }
    dend_43 { pt3dadd( -38.4343, -82.9793, -36.8641, 1.11 ) }
    dend_43 { pt3dadd( -39.1172, -84.1043, -37.0264, 1.11 ) }
    dend_43 { pt3dadd( -39.8696, -85.4163, -37.2871, 0.88 ) }
    dend_43 { pt3dadd( -40.5034, -86.631, -37.5859, 1.11 ) }
    dend_43 { pt3dadd( -41.0541, -87.8591, -38.0287, 1.11 ) }
    dend_43 { pt3dadd( -41.4973, -89.022, -38.5823, 1.11 ) }
    dend_43 { pt3dadd( -41.8292, -90.0393, -39.1422, 1.18 ) }
    dend_43 { pt3dadd( -42.1961, -91.4932, -39.9667, 0.96 ) }
    dend_43 { pt3dadd( -42.4276, -92.6673, -40.6169, 1.11 ) }
    dend_43 { pt3dadd( -42.6489, -93.8474, -41.2466, 0.81 ) }
    dend_43 { pt3dadd( -42.8844, -94.9337, -41.7989, 1.11 ) }
    dend_43 { pt3dadd( -43.2398, -96.2932, -42.4721, 1.11 ) }
    dend_43 { pt3dadd( -43.5698, -97.3664, -42.9732, 1.4 ) }
    dend_43 { pt3dadd( -43.8025, -97.997, -43.2346, 1.7 ) }
    dend_43 { pt3dadd( -44.2302, -99.0435, -43.5526, 1.47 ) }
    dend_43 { pt3dadd( -44.9226, -100.686, -43.8444, 1.47 ) }
    dend_43 { pt3dadd( -45.1654, -101.253, -43.8769, 1.55 ) }
    dend_43 { pt3dadd( -45.7486, -102.648, -43.8618, 1.03 ) }
    dend_43 { pt3dadd( -46.1889, -103.759, -43.8453, 0.88 ) }
    dend_43 { pt3dadd( -46.7454, -105.262, -43.8813, 1.18 ) }
    dend_43 { pt3dadd( -47.1871, -106.523, -43.9695, 0.88 ) }
    dend_43 { pt3dadd( -47.6344, -107.807, -44.1567, 0.96 ) }
    dend_43 { pt3dadd( -48.2235, -109.319, -44.4689, 0.88 ) }
    dend_43 { pt3dadd( -48.8313, -110.663, -44.8233, 0.74 ) }
    dend_43 { pt3dadd( -49.42, -111.9, -45.2055, 0.96 ) }
    dend_43 { pt3dadd( -49.8708, -112.869, -45.5462, 1.03 ) }
    dend_43 { pt3dadd( -50.4272, -114.154, -46.0206, 0.74 ) }
    dend_43 { pt3dadd( -51.059, -115.843, -46.6195, 0.66 ) }
    dend_43 { pt3dadd( -51.3357, -116.637, -46.8522, 0.66 ) }
    dend_43 { pt3dadd( -51.6109, -117.461, -47.0481, 0.74 ) }
    dend_43 { pt3dadd( -51.9022, -118.426, -47.2327, 0.81 ) }
    dend_43 { pt3dadd( -52.1907, -119.421, -47.3957, 0.81 ) }
    dend_43 { pt3dadd( -52.5467, -120.678, -47.587, 0.74 ) }
    dend_43 { pt3dadd( -52.798, -121.719, -47.7553, 0.66 ) }
    dend_43 { pt3dadd( -52.9319, -122.297, -47.8516, 0.66 ) }
    dend_43 { pt3dadd( -53.2477, -123.477, -48.0522, 1.11 ) }
    dend_43 { pt3dadd( -53.7071, -124.874, -48.2779, 0.29 ) }
    dend_43 { pt3dadd( -54.1089, -125.927, -48.4142, 0.29 ) }
    dend_43 { pt3dadd( -56.412, -135.184, -50.5497, 0.29 ) }
    dend_43 { pt3dadd( -57.5318, -144.038, -54.5841, 0.29 ) }
    dend_43 { pt3dadd( -59.6224, -152.234, -59.5806, 0.29 ) }
    dend_43 { pt3dadd( -62.111, -160.059, -65.0041, 0.29 ) }
    dend_43 { pt3dadd( -63.9788, -168.544, -69.5594, 0.29 ) }
    dend_43 { pt3dadd( -63.9616, -177.417, -73.7058, 0.29 ) }
    dend_43 { pt3dadd( -65.4802, -186.336, -77.4467, 0.29 ) }
    dend_43 { pt3dadd( -67.1602, -195.702, -79.6626, 0.29 ) }
    dend_43 { pt3dadd( -70.4825, -204.763, -81.2734, 0.29 ) }
    dend_43 { pt3dadd( -74.974, -213.312, -82.9908, 0.29 ) }
    dend_43 { pt3dadd( -80.2814, -221.054, -85.9524, 0.29 ) }
    dend_43 { pt3dadd( -86.6816, -228.324, -87.8077, 0.29 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 61/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 118.127, 18.4906, -48.9783, 0.15 ) }
    dend_40 { pt3dadd( 126.666, 22.8145, -51.7015, 0.15 ) }
    dend_40 { pt3dadd( 134.169, 27.1373, -56.6059, 0.15 ) }
    dend_40 { pt3dadd( 141.933, 32.4496, -59.7733, 0.15 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 65/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 118.127, 18.4906, -48.9783, 0.15 ) }
    dend_39 { pt3dadd( 127.746, 21.0631, -49.6912, 0.15 ) }
    dend_39 { pt3dadd( 137.323, 23.5942, -48.4466, 0.15 ) }
    dend_39 { pt3dadd( 146.482, 27.074, -46.612, 0.15 ) }
    dend_39 { pt3dadd( 154.845, 31.1687, -43.0857, 0.15 ) }
    dend_39 { pt3dadd( 162.781, 34.8966, -38.3537, 0.15 ) }
    dend_39 { pt3dadd( 170.401, 39.2138, -33.6279, 0.15 ) }
    dend_39 { pt3dadd( 178.055, 44.1154, -29.6096, 0.15 ) }
    dend_39 { pt3dadd( 185.869, 48.0425, -24.8434, 0.15 ) }
    dend_39 { pt3dadd( 192.725, 51.9988, -18.7998, 0.15 ) }
    dend_39 { pt3dadd( 200.097, 54.5212, -12.5578, 0.15 ) }
    dend_39 { pt3dadd( 208.447, 56.1254, -7.30723, 0.15 ) }
    dend_39 { pt3dadd( 217.292, 58.2821, -3.19807, 0.15 ) }
    dend_39 { pt3dadd( 225.221, 60.8925, 2.27541, 0.15 ) }
    dend_39 { pt3dadd( 233.507, 64.943, 6.02705, 0.15 ) }
    dend_39 { pt3dadd( 241.02, 69.7868, 10.3717, 0.15 ) }
    dend_39 { pt3dadd( 249.198, 72.9688, 15.1113, 0.15 ) }
    // Section: dend_37, id: dend_37, parent: dend_31 (entry count 82/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 40.0486, -23.8747, -39.8856, 0.22 ) }
    dend_37 { pt3dadd( 38.9191, -24.0264, -40.7709, 0.22 ) }
    dend_37 { pt3dadd( 38.1532, -24.1771, -41.4002, 0.22 ) }
    dend_37 { pt3dadd( 37.342, -24.3914, -42.1082, 0.29 ) }
    dend_37 { pt3dadd( 36.4819, -24.706, -42.9174, 0.22 ) }
    dend_37 { pt3dadd( 35.991, -24.9382, -43.4051, 0.22 ) }
    dend_37 { pt3dadd( 35.6178, -25.1684, -43.7796, 0.22 ) }
    dend_37 { pt3dadd( 35.3486, -25.4279, -44.0264, 0.22 ) }
    dend_37 { pt3dadd( 35.1161, -25.7656, -44.2586, 0.22 ) }
    dend_37 { pt3dadd( 34.9085, -26.2881, -44.5462, 0.22 ) }
    dend_37 { pt3dadd( 34.8228, -26.6918, -44.7248, 0.22 ) }
    dend_37 { pt3dadd( 34.6811, -27.5166, -44.9991, 0.22 ) }
    dend_37 { pt3dadd( 34.5262, -28.3158, -45.2027, 0.22 ) }
    dend_37 { pt3dadd( 28.2579, -32.2425, -51.8726, 0.22 ) }
    dend_37 { pt3dadd( 21.5442, -36.9329, -57.5103, 0.22 ) }
    dend_37 { pt3dadd( 14.4821, -42.1234, -62.1779, 0.22 ) }
    dend_37 { pt3dadd( 7.07914, -46.8617, -66.8232, 0.22 ) }
    dend_37 { pt3dadd( 0.64651, -53.0715, -71.0725, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_37 { pt3dadd( -5.20079, -59.7617, -75.3998, 0.22 ) }
    dend_37 { pt3dadd( -11.275, -66.8049, -78.7045, 0.22 ) }
    dend_37 { pt3dadd( -15.9801, -74.1223, -83.3451, 0.22 ) }
    dend_37 { pt3dadd( -19.78, -82.2703, -87.3103, 0.22 ) }
    dend_37 { pt3dadd( -22.5835, -90.2742, -92.2853, 0.22 ) }
    dend_37 { pt3dadd( -26.6789, -98.3179, -96.1796, 0.22 ) }
    dend_37 { pt3dadd( -31.7971, -106.295, -98.7968, 0.22 ) }
    dend_37 { pt3dadd( -37.9144, -112.987, -102.73, 0.22 ) }
    dend_37 { pt3dadd( -45.0796, -119.376, -105.123, 0.22 ) }
    dend_37 { pt3dadd( -50.7065, -126.944, -107.967, 0.22 ) }
    dend_37 { pt3dadd( -55.3863, -135.283, -110.193, 0.22 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 11/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 40.0486, -23.8747, -39.8856, 0.74 ) }
    dend_32 { pt3dadd( 39.9858, -24.8456, -39.9371, 0.74 ) }
    dend_32 { pt3dadd( 39.7761, -25.8207, -40.0344, 0.59 ) }
    dend_32 { pt3dadd( 39.5679, -26.5117, -40.1171, 0.59 ) }
    dend_32 { pt3dadd( 39.3237, -27.1885, -40.2038, 0.59 ) }
    dend_32 { pt3dadd( 38.9978, -28.1407, -40.3198, 0.66 ) }
    dend_32 { pt3dadd( 38.7609, -28.9787, -40.4385, 0.81 ) }
    dend_32 { pt3dadd( 38.5326, -29.7786, -40.6086, 0.81 ) }
    dend_32 { pt3dadd( 38.3807, -30.4213, -40.784, 1.03 ) }
    dend_32 { pt3dadd( 38.1522, -31.5156, -41.1077, 0.74 ) }
    dend_32 { pt3dadd( 37.9967, -32.611, -41.4565, 0.74 ) }
    dend_32 { pt3dadd( 37.925, -33.9323, -41.9059, 0.66 ) }
    dend_32 { pt3dadd( 37.9572, -35.0026, -42.2829, 0.66 ) }
    dend_32 { pt3dadd( 38.0789, -35.9871, -42.661, 1.4 ) }
    // Section: dend_23, id: dend_23, parent: dend_15 (entry count 25/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 32.6512, 39.8425, 8.63519, 0.22 ) }
    dend_23 { pt3dadd( 34.3941, 40.9632, 8.11694, 0.22 ) }
    dend_23 { pt3dadd( 34.8904, 41.2687, 7.93838, 0.37 ) }
    dend_23 { pt3dadd( 35.473, 41.6163, 7.69908, 0.66 ) }
    dend_23 { pt3dadd( 36.3035, 42.0816, 7.28503, 0.52 ) }
    dend_23 { pt3dadd( 36.7778, 42.3178, 7.00422, 0.74 ) }
    dend_23 { pt3dadd( 37.7736, 42.7501, 6.3754, 0.59 ) }
    dend_23 { pt3dadd( 38.6694, 43.0765, 5.7629, 0.81 ) }
    dend_23 { pt3dadd( 39.8655, 43.4906, 4.92402, 1.11 ) }
    dend_23 { pt3dadd( 40.9449, 43.8895, 4.15665, 0.29 ) }
    dend_23 { pt3dadd( 41.9658, 44.3384, 3.42398, 0.29 ) }
    dend_23 { pt3dadd( 42.7626, 44.8319, 2.8613, 0.37 ) }
    dend_23 { pt3dadd( 43.5276, 45.4613, 2.3376, 0.74 ) }
    dend_23 { pt3dadd( 44.3655, 46.3377, 1.74923, 0.81 ) }
    dend_23 { pt3dadd( 45.1695, 47.3692, 1.13074, 0.74 ) }
    dend_23 { pt3dadd( 45.8199, 48.3595, 0.565806, 1.03 ) }
    dend_23 { pt3dadd( 46.8248, 50.0838, -0.47078, 0.44 ) }
    dend_23 { pt3dadd( 47.2448, 50.8594, -1.01876, 0.44 ) }
    dend_23 { pt3dadd( 47.7193, 51.7231, -1.82306, 0.29 ) }
    dend_23 { pt3dadd( 48.0606, 52.2359, -2.55577, 0.29 ) }
    dend_23 { pt3dadd( 48.4682, 52.6392, -3.55639, 0.44 ) }
    dend_23 { pt3dadd( 48.8186, 52.8034, -4.46598, 0.44 ) }
    dend_23 { pt3dadd( 49.1525, 52.8251, -5.3363, 0.44 ) }
    dend_23 { pt3dadd( 49.7221, 52.8282, -6.75073, 0.59 ) }
    dend_23 { pt3dadd( 50.1486, 52.8792, -7.77226, 0.59 ) }
    dend_23 { pt3dadd( 50.3194, 52.961, -8.21384, 0.59 ) }
    dend_23 { pt3dadd( 50.6584, 53.4105, -9.3603, 0.52 ) }
    dend_23 { pt3dadd( 50.7659, 53.7977, -9.94749, 0.52 ) }
    dend_23 { pt3dadd( 50.8702, 54.5737, -10.8367, 0.66 ) }
    dend_23 { pt3dadd( 50.9399, 55.4767, -11.722, 0.88 ) }
    dend_23 { pt3dadd( 51.0142, 56.629, -12.8137, 0.29 ) }
    dend_23 { pt3dadd( 51.0636, 57.3374, -13.5224, 0.29 ) }
    dend_23 { pt3dadd( 51.143, 58.1759, -14.4651, 0.29 ) }
    dend_23 { pt3dadd( 51.2343, 58.7323, -15.2191, 0.29 ) }
    dend_23 { pt3dadd( 51.3535, 59.1387, -16.0015, 0.29 ) }
    dend_23 { pt3dadd( 51.4823, 59.4302, -16.7721, 0.29 ) }
    dend_23 { pt3dadd( 51.6365, 59.6628, -17.5139, 0.29 ) }
    dend_23 { pt3dadd( 51.8275, 59.9476, -18.381, 0.29 ) }
    dend_23 { pt3dadd( 51.9372, 60.2096, -18.9683, 0.29 ) }
    dend_23 { pt3dadd( 52.1078, 61.0444, -20.1799, 0.29 ) }
    dend_23 { pt3dadd( 52.1414, 61.5396, -20.712, 0.66 ) }
    dend_23 { pt3dadd( 52.1049, 62.3678, -21.4911, 0.44 ) }
    dend_23 { pt3dadd( 52.0197, 63.5108, -22.4239, 0.37 ) }
    dend_23 { pt3dadd( 51.9871, 64.6567, -23.262, 0.29 ) }
    dend_23 { pt3dadd( 52.0508, 65.8804, -24.0789, 0.29 ) }
    dend_23 { pt3dadd( 52.2592, 67.089, -24.8091, 0.96 ) }
    dend_23 { pt3dadd( 52.5946, 68.3707, -25.6137, 0.22 ) }
    dend_23 { pt3dadd( 52.7957, 69.0411, -26.0699, 0.66 ) }
    dend_23 { pt3dadd( 53.1399, 70.0201, -26.734, 0.29 ) }
    dend_23 { pt3dadd( 53.5114, 70.7666, -27.2423, 0.22 ) }
    dend_23 { pt3dadd( 54.2306, 71.7773, -27.9268, 0.22 ) }
    dend_23 { pt3dadd( 55.0131, 72.583, -28.3955, 0.22 ) }
    dend_23 { pt3dadd( 55.8851, 73.3774, -28.8398, 0.22 ) }
    dend_23 { pt3dadd( 56.233, 73.6995, -29.0504, 0.22 ) }
    dend_23 { pt3dadd( 56.6047, 74.1274, -29.3592, 0.22 ) }
    dend_23 { pt3dadd( 57.1273, 74.7976, -29.9272, 0.37 ) }
    dend_23 { pt3dadd( 57.8666, 75.7673, -30.9347, 0.37 ) }
    dend_23 { pt3dadd( 60.8496, 82.9613, -36.9894, 0.37 ) }
    dend_23 { pt3dadd( 63.817, 91.248, -41.3434, 0.37 ) }
    dend_23 { pt3dadd( 67.1679, 100.17, -43.5893, 0.37 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 85/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 32.6512, 39.8425, 8.63519, 1.25 ) }
    dend_16 { pt3dadd( 32.9347, 40.9333, 9.37411, 1.25 ) }
    dend_16 { pt3dadd( 33.1672, 42.2462, 10.2318, 0.88 ) }
    dend_16 { pt3dadd( 33.3889, 43.6258, 11.0766, 0.81 ) }
    dend_16 { pt3dadd( 33.5524, 44.631, 11.6325, 0.88 ) }
    dend_16 { pt3dadd( 33.7143, 45.6005, 12.112, 0.74 ) }
    dend_16 { pt3dadd( 33.9163, 46.8998, 12.6712, 0.88 ) }
    dend_16 { pt3dadd( 34.0438, 47.8687, 13.0128, 1.03 ) }
    dend_16 { pt3dadd( 34.1454, 48.7436, 13.2936, 0.88 ) }
    dend_16 { pt3dadd( 34.2922, 49.9356, 13.6684, 1.03 ) }
    dend_16 { pt3dadd( 34.5523, 51.6859, 14.2563, 1.03 ) }
    dend_16 { pt3dadd( 34.8506, 53.2794, 14.8722, 0.81 ) }
    dend_16 { pt3dadd( 35.0261, 54.1095, 15.2533, 0.66 ) }
    dend_16 { pt3dadd( 35.2186, 55.0114, 15.7363, 0.88 ) }
    dend_16 { pt3dadd( 35.4018, 55.8656, 16.2787, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( 35.6883, 56.9649, 17.098, 1.4 ) }
    dend_16 { pt3dadd( 36.0611, 57.9937, 17.9996, 1.25 ) }
    dend_16 { pt3dadd( 36.5283, 58.866, 18.8855, 1.4 ) }
    dend_16 { pt3dadd( 37.2703, 59.8606, 19.9184, 0.59 ) }
    dend_16 { pt3dadd( 37.6944, 60.2881, 20.357, 0.59 ) }
    dend_16 { pt3dadd( 38.298, 60.796, 20.8192, 0.52 ) }
    dend_16 { pt3dadd( 39.0768, 61.3874, 21.2736, 1.11 ) }
    dend_16 { pt3dadd( 40.0627, 62.1128, 21.7508, 1.4 ) }
    dend_16 { pt3dadd( 41.2334, 63.0041, 22.2686, 1.11 ) }
    dend_16 { pt3dadd( 42.4564, 64.0358, 22.7697, 0.96 ) }
    dend_16 { pt3dadd( 43.482, 65.0456, 23.2007, 0.59 ) }
    dend_16 { pt3dadd( 44.0693, 65.7245, 23.4876, 0.59 ) }
    dend_16 { pt3dadd( 44.6318, 66.5202, 23.8646, 0.96 ) }
    dend_16 { pt3dadd( 45.166, 67.4459, 24.3776, 1.62 ) }
    dend_16 { pt3dadd( 45.6788, 68.4667, 25.07, 1.47 ) }
    dend_16 { pt3dadd( 46.1598, 69.4216, 25.8684, 1.33 ) }
    dend_16 { pt3dadd( 46.5089, 70.0533, 26.5348, 1.47 ) }
    dend_16 { pt3dadd( 47.3255, 71.3787, 28.2031, 0.59 ) }
    dend_16 { pt3dadd( 47.7796, 72.1051, 29.1894, 0.74 ) }
    dend_16 { pt3dadd( 48.2913, 72.9055, 30.3876, 1.18 ) }
    dend_16 { pt3dadd( 48.8947, 73.8212, 31.9242, 1.47 ) }
    dend_16 { pt3dadd( 49.4378, 74.5612, 33.2783, 1.55 ) }
    dend_16 { pt3dadd( 49.7954, 74.9536, 34.0559, 1.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 23/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 39.8313, 11.8912, 15.5914, 1.62 ) }
    dend_14 { pt3dadd( 40.6116, 12.054, 15.8276, 1.62 ) }
    dend_14 { pt3dadd( 41.7785, 12.3739, 15.9105, 1.84 ) }
    dend_14 { pt3dadd( 43.4933, 12.8725, 15.8338, 0.88 ) }
    dend_14 { pt3dadd( 44.2296, 13.0806, 15.7884, 0.66 ) }
    dend_14 { pt3dadd( 45.5885, 13.4672, 15.7546, 0.96 ) }
    dend_14 { pt3dadd( 46.8025, 13.8187, 15.7987, 0.74 ) }
    dend_14 { pt3dadd( 48.0501, 14.2614, 15.8756, 1.03 ) }
    dend_14 { pt3dadd( 49.6366, 14.8958, 15.9826, 0.66 ) }
    dend_14 { pt3dadd( 50.5553, 15.285, 16.0808, 1.33 ) }
    dend_14 { pt3dadd( 51.6598, 15.7191, 16.2589, 1.47 ) }
    dend_14 { pt3dadd( 52.9205, 16.154, 16.4703, 0.96 ) }
    dend_14 { pt3dadd( 54.3089, 16.5521, 16.6931, 1.03 ) }
    dend_14 { pt3dadd( 55.7631, 16.8405, 16.8661, 0.81 ) }
    dend_14 { pt3dadd( 56.9021, 16.9281, 16.9063, 0.96 ) }
    dend_14 { pt3dadd( 58.3926, 16.848, 16.8368, 1.11 ) }
    dend_14 { pt3dadd( 59.8331, 16.6171, 16.707, 1.11 ) }
    dend_14 { pt3dadd( 61.319, 16.2411, 16.5648, 1.33 ) }
    dend_14 { pt3dadd( 62.6145, 15.8209, 16.4712, 0.88 ) }
    dend_14 { pt3dadd( 64.0327, 15.3269, 16.4416, 0.88 ) }
    dend_14 { pt3dadd( 65.6487, 14.7875, 16.4928, 0.59 ) }
    dend_14 { pt3dadd( 66.7167, 14.5205, 16.6162, 0.88 ) }
    dend_14 { pt3dadd( 67.7765, 14.3765, 16.8442, 1.03 ) }
    dend_14 { pt3dadd( 68.985, 14.3516, 17.1728, 0.74 ) }
    dend_14 { pt3dadd( 70.0997, 14.4483, 17.5247, 0.96 ) }
    dend_14 { pt3dadd( 70.9941, 14.6174, 17.8405, 1.25 ) }
    dend_14 { pt3dadd( 72.7328, 15.0918, 18.4585, 0.66 ) }
    dend_14 { pt3dadd( 73.8004, 15.4524, 18.7828, 1.11 ) }
    dend_14 { pt3dadd( 74.4746, 15.7205, 18.9282, 1.11 ) }
    dend_14 { pt3dadd( 75.8242, 16.2881, 19.1094, 0.74 ) }
    dend_14 { pt3dadd( 77.409, 16.9491, 19.1816, 0.52 ) }
    dend_14 { pt3dadd( 78.6175, 17.4137, 19.1421, 0.88 ) }
    dend_14 { pt3dadd( 79.8575, 17.7919, 19.0141, 0.66 ) }
    dend_14 { pt3dadd( 81.7556, 18.2386, 18.8268, 0.44 ) }
    dend_14 { pt3dadd( 82.5296, 18.3862, 18.7901, 0.96 ) }
    dend_14 { pt3dadd( 83.338, 18.5073, 18.7937, 1.11 ) }
    dend_14 { pt3dadd( 84.6347, 18.6909, 18.9253, 0.96 ) }
    dend_14 { pt3dadd( 86.0776, 18.923, 19.2393, 1.33 ) }
    dend_14 { pt3dadd( 87.8866, 19.299, 19.9018, 0.44 ) }
    dend_14 { pt3dadd( 88.8308, 19.5625, 20.4568, 0.66 ) }
    dend_14 { pt3dadd( 89.5144, 19.8029, 20.9636, 1.18 ) }
    dend_14 { pt3dadd( 90.8269, 20.329, 22.0352, 0.96 ) }
    dend_14 { pt3dadd( 91.4681, 20.605, 22.5663, 0.74 ) }
    dend_14 { pt3dadd( 92.5409, 21.0556, 23.3543, 0.29 ) }
    dend_14 { pt3dadd( 94.5378, 21.7393, 24.4455, 0.52 ) }
    dend_14 { pt3dadd( 95.6418, 21.9712, 24.8271, 0.81 ) }
    dend_14 { pt3dadd( 97.3152, 22.1215, 25.1552, 0.88 ) }
    dend_14 { pt3dadd( 98.4324, 22.1236, 25.1847, 1.11 ) }
    dend_14 { pt3dadd( 100.048, 22.0657, 25.0151, 1.11 ) }
    dend_14 { pt3dadd( 101.685, 21.9522, 24.6249, 0.74 ) }
    dend_14 { pt3dadd( 103.041, 21.8202, 24.1635, 0.59 ) }
    dend_14 { pt3dadd( 103.745, 21.7212, 23.9107, 0.37 ) }
    dend_14 { pt3dadd( 105.035, 21.4849, 23.5338, 0.37 ) }
    dend_14 { pt3dadd( 105.761, 21.3407, 23.4104, 0.37 ) }
    dend_14 { pt3dadd( 106.686, 21.1659, 23.4221, 0.66 ) }
    dend_14 { pt3dadd( 107.439, 21.0361, 23.5734, 0.88 ) }
    dend_14 { pt3dadd( 108.984, 20.8231, 24.1036, 0.74 ) }
    dend_14 { pt3dadd( 110.432, 20.6413, 24.7145, 0.59 ) }
    dend_14 { pt3dadd( 111.137, 20.5556, 25.0583, 0.88 ) }
    dend_14 { pt3dadd( 112.461, 20.4021, 25.7387, 0.66 ) }
    dend_14 { pt3dadd( 113.513, 20.2922, 26.3006, 0.96 ) }
    dend_14 { pt3dadd( 114.758, 20.1544, 26.9973, 1.4 ) }
    dend_14 { pt3dadd( 116.796, 19.8821, 28.2467, 0.37 ) }
    dend_14 { pt3dadd( 117.766, 19.7394, 28.8682, 0.37 ) }
    dend_14 { pt3dadd( 118.834, 19.5489, 29.5955, 0.88 ) }
    dend_14 { pt3dadd( 119.496, 19.4041, 30.058, 1.25 ) }
    dend_14 { pt3dadd( 120.572, 19.155, 30.808, 1.33 ) }
    dend_14 { pt3dadd( 121.963, 18.8402, 31.8147, 0.74 ) }
    dend_14 { pt3dadd( 123.207, 18.6018, 32.7789, 0.88 ) }
    dend_14 { pt3dadd( 124.343, 18.4485, 33.6818, 0.37 ) }
    dend_14 { pt3dadd( 124.92, 18.4222, 34.1671, 0.52 ) }
    dend_14 { pt3dadd( 126.074, 18.4713, 35.1648, 0.22 ) }
    dend_14 { pt3dadd( 126.579, 18.5384, 35.583, 0.22 ) }
    dend_14 { pt3dadd( 127.231, 18.6828, 36.0973, 0.29 ) }
    dend_14 { pt3dadd( 128.054, 18.9178, 36.6634, 0.44 ) }
    dend_14 { pt3dadd( 129.115, 19.2721, 37.2749, 0.44 ) }
    dend_14 { pt3dadd( 130.171, 19.6396, 37.8197, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_14 { pt3dadd( 131.222, 20.0159, 38.3124, 1.47 ) }
    dend_14 { pt3dadd( 132.54, 20.4982, 38.8343, 1.7 ) }
    dend_14 { pt3dadd( 134.893, 21.4464, 39.5186, 0.37 ) }
    dend_14 { pt3dadd( 136.463, 22.1804, 39.8296, 0.37 ) }
    dend_14 { pt3dadd( 137.542, 22.7758, 39.9752, 0.66 ) }
    dend_14 { pt3dadd( 138.473, 23.4019, 40.0417, 1.03 ) }
    dend_14 { pt3dadd( 139.621, 24.3088, 40.0658, 1.03 ) }
    dend_14 { pt3dadd( 141.081, 25.6123, 39.9872, 0.74 ) }
    dend_14 { pt3dadd( 142.315, 26.8446, 39.8486, 0.44 ) }
    dend_14 { pt3dadd( 143.046, 27.6161, 39.7608, 0.96 ) }
    dend_14 { pt3dadd( 144.245, 28.8718, 39.5979, 1.55 ) }
    dend_14 { pt3dadd( 145.446, 30.0025, 39.4311, 0.37 ) }
    dend_14 { pt3dadd( 146.361, 30.7184, 39.3325, 0.88 ) }
    dend_14 { pt3dadd( 147.077, 31.1807, 39.2806, 1.03 ) }
    dend_14 { pt3dadd( 148.851, 32.1775, 39.1484, 0.37 ) }
    dend_14 { pt3dadd( 150.138, 32.8503, 39.0592, 0.59 ) }
    dend_14 { pt3dadd( 151.78, 33.6863, 38.9808, 0.59 ) }
    dend_14 { pt3dadd( 153.664, 34.6943, 38.8754, 0.44 ) }
    dend_14 { pt3dadd( 154.609, 35.2436, 38.8069, 1.18 ) }
    dend_14 { pt3dadd( 155.317, 35.6993, 38.7222, 1.4 ) }
    dend_14 { pt3dadd( 157.184, 37.0318, 38.3953, 0.29 ) }
    dend_14 { pt3dadd( 157.906, 37.6135, 38.2635, 0.59 ) }
    dend_14 { pt3dadd( 159.049, 38.6299, 38.0553, 1.25 ) }
    dend_14 { pt3dadd( 160.289, 39.7866, 37.815, 0.44 ) }
    dend_14 { pt3dadd( 161.167, 40.6007, 37.6516, 0.88 ) }
    dend_14 { pt3dadd( 162.095, 41.4442, 37.4817, 1.4 ) }
    dend_14 { pt3dadd( 163.005, 42.2543, 37.3222, 1.4 ) }
    dend_14 { pt3dadd( 164.559, 43.6065, 37.0915, 0.52 ) }
    dend_14 { pt3dadd( 165.337, 44.2544, 37.01, 0.37 ) }
    dend_14 { pt3dadd( 166.345, 45.0544, 36.9391, 0.66 ) }
    dend_14 { pt3dadd( 167.254, 45.7346, 36.8968, 1.03 ) }
    dend_14 { pt3dadd( 167.845, 46.1699, 36.875, 1.4 ) }
    dend_14 { pt3dadd( 168.705, 46.8254, 36.8463, 0.66 ) }
    dend_14 { pt3dadd( 169.807, 47.702, 36.8559, 0.44 ) }
    dend_14 { pt3dadd( 170.872, 48.5564, 36.9107, 0.59 ) }
    dend_14 { pt3dadd( 172.595, 49.9529, 37.0641, 0.44 ) }
    dend_14 { pt3dadd( 173.203, 50.4628, 37.1278, 0.59 ) }
    dend_14 { pt3dadd( 174.459, 51.5502, 37.2782, 0.52 ) }
    dend_14 { pt3dadd( 175.582, 52.541, 37.3975, 0.44 ) }
    dend_14 { pt3dadd( 176.164, 53.0833, 37.4736, 0.96 ) }
    dend_14 { pt3dadd( 176.66, 53.5562, 37.5643, 1.18 ) }
    dend_14 { pt3dadd( 177.385, 54.2313, 37.7462, 0.59 ) }
    dend_14 { pt3dadd( 178.044, 54.797, 37.9083, 0.37 ) }
    dend_14 { pt3dadd( 179.195, 55.6931, 38.1522, 0.96 ) }
    dend_14 { pt3dadd( 180.633, 56.711, 38.3564, 0.88 ) }
    dend_14 { pt3dadd( 181.934, 57.576, 38.5022, 0.52 ) }
    dend_14 { pt3dadd( 183.3, 58.4353, 38.6306, 0.29 ) }
    dend_14 { pt3dadd( 184.286, 59.0213, 38.7077, 0.29 ) }
    dend_14 { pt3dadd( 185.334, 59.6192, 38.7445, 0.74 ) }
    dend_14 { pt3dadd( 186.597, 60.3108, 38.7471, 0.52 ) }
    dend_14 { pt3dadd( 187.501, 60.7773, 38.6874, 0.74 ) }
    dend_14 { pt3dadd( 188.26, 61.1459, 38.6139, 1.25 ) }
    dend_14 { pt3dadd( 189.068, 61.4943, 38.5399, 1.25 ) }
    dend_14 { pt3dadd( 190.736, 62.122, 38.4526, 0.59 ) }
    dend_14 { pt3dadd( 191.552, 62.3735, 38.4316, 0.88 ) }
    dend_14 { pt3dadd( 192.584, 62.6048, 38.4297, 1.18 ) }
    dend_14 { pt3dadd( 193.773, 62.7373, 38.4517, 0.88 ) }
    dend_14 { pt3dadd( 195.144, 62.7304, 38.5165, 0.29 ) }
    dend_14 { pt3dadd( 195.834, 62.6379, 38.5908, 0.37 ) }
    dend_14 { pt3dadd( 196.545, 62.4886, 38.7442, 0.44 ) }
    dend_14 { pt3dadd( 197.373, 62.3129, 38.9942, 0.22 ) }
    dend_14 { pt3dadd( 198.31, 62.128, 39.2738, 0.29 ) }
    dend_14 { pt3dadd( 198.817, 62.0499, 39.4033, 1.03 ) }
    dend_14 { pt3dadd( 200.19, 61.9348, 39.6285, 1.62 ) }
    dend_14 { pt3dadd( 202.1, 61.8848, 39.8368, 0.74 ) }
    dend_14 { pt3dadd( 203.518, 61.8895, 39.9179, 0.52 ) }
    dend_14 { pt3dadd( 205.253, 61.91, 39.8579, 0.88 ) }
    dend_14 { pt3dadd( 206.303, 61.9147, 39.6717, 1.18 ) }
    dend_14 { pt3dadd( 207.702, 61.9016, 39.3482, 1.18 ) }
    dend_14 { pt3dadd( 209.001, 61.844, 39.0327, 0.29 ) }
    dend_14 { pt3dadd( 210.027, 61.7346, 38.8323, 0.29 ) }
    dend_14 { pt3dadd( 211.472, 61.5025, 38.787, 0.96 ) }
    dend_14 { pt3dadd( 212.983, 61.1972, 39.1252, 1.18 ) }
    dend_14 { pt3dadd( 214.91, 60.8167, 39.7828, 0.44 ) }
    dend_14 { pt3dadd( 216.439, 60.5963, 40.3009, 1.03 ) }
    dend_14 { pt3dadd( 217.748, 60.5031, 40.6999, 0.37 ) }
    dend_14 { pt3dadd( 218.892, 60.5278, 41.0667, 1.33 ) }
    dend_14 { pt3dadd( 220.694, 60.7693, 41.6237, 0.22 ) }
    dend_14 { pt3dadd( 221.957, 61.0597, 41.9473, 1.55 ) }
    dend_14 { pt3dadd( 224.198, 61.804, 42.2376, 0.29 ) }
    dend_14 { pt3dadd( 224.783, 62.0317, 42.2745, 0.88 ) }
    dend_14 { pt3dadd( 225.807, 62.4505, 42.307, 1.4 ) }
    dend_14 { pt3dadd( 227.522, 63.1696, 42.4021, 0.44 ) }
    dend_14 { pt3dadd( 228.285, 63.4631, 42.4926, 0.44 ) }
    dend_14 { pt3dadd( 229.397, 63.8201, 42.7219, 0.96 ) }
    dend_14 { pt3dadd( 230.582, 64.1259, 43.0564, 0.44 ) }
    dend_14 { pt3dadd( 231.611, 64.3575, 43.3412, 0.44 ) }
    dend_14 { pt3dadd( 232.755, 64.5672, 43.7075, 0.44 ) }
    dend_14 { pt3dadd( 233.849, 64.7372, 44.1648, 0.44 ) }
    dend_14 { pt3dadd( 235.082, 64.9245, 44.7973, 0.37 ) }
    dend_14 { pt3dadd( 236.0, 65.0515, 45.3387, 1.18 ) }
    dend_14 { pt3dadd( 236.613, 65.11, 45.7357, 1.18 ) }
    dend_14 { pt3dadd( 238.463, 65.1584, 46.9662, 0.37 ) }
    dend_14 { pt3dadd( 239.623, 65.1182, 47.6677, 0.74 ) }
    dend_14 { pt3dadd( 240.763, 65.0361, 48.2547, 0.96 ) }
    dend_14 { pt3dadd( 241.663, 64.9251, 48.6202, 0.29 ) }
    dend_14 { pt3dadd( 242.773, 64.7891, 48.8996, 0.22 ) }
    dend_14 { pt3dadd( 243.649, 64.7035, 48.9996, 0.88 ) }
    dend_14 { pt3dadd( 245.721, 64.5782, 49.0299, 0.22 ) }
    dend_14 { pt3dadd( 247.237, 64.5461, 49.0578, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_14 { pt3dadd( 247.748, 64.5631, 49.0928, 1.11 ) }
    dend_14 { pt3dadd( 249.307, 64.7805, 49.3463, 0.29 ) }
    dend_14 { pt3dadd( 249.994, 64.9627, 49.5353, 0.44 ) }
    dend_14 { pt3dadd( 251.408, 65.4494, 50.1728, 0.29 ) }
    dend_14 { pt3dadd( 252.446, 65.8452, 50.8649, 0.59 ) }
    dend_14 { pt3dadd( 253.084, 66.0849, 51.3772, 0.22 ) }
    dend_14 { pt3dadd( 253.642, 66.2527, 51.842, 0.22 ) }
    dend_14 { pt3dadd( 254.151, 66.3464, 52.2762, 0.74 ) }
    dend_14 { pt3dadd( 255.512, 66.5327, 53.3964, 0.37 ) }
    dend_14 { pt3dadd( 256.426, 66.6156, 54.0731, 1.33 ) }
    dend_14 { pt3dadd( 257.229, 66.6478, 54.653, 1.77 ) }
    dend_14 { pt3dadd( 258.647, 66.6203, 55.7226, 0.29 ) }
    dend_14 { pt3dadd( 259.461, 66.5463, 56.3493, 1.18 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 13/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 39.8313, 11.8912, 15.5914, 0.74 ) }
    dend_13 { pt3dadd( 40.3949, 12.2582, 16.9188, 0.74 ) }
    dend_13 { pt3dadd( 41.1775, 12.5926, 18.7967, 0.74 ) }
    dend_13 { pt3dadd( 41.7794, 12.7217, 20.4437, 0.74 ) }
    dend_13 { pt3dadd( 42.2899, 12.7607, 22.2129, 0.74 ) }
    dend_13 { pt3dadd( 42.5456, 12.7227, 23.5297, 0.74 ) }
    dend_13 { pt3dadd( 42.7287, 12.6466, 25.0702, 1.03 ) }
    dend_13 { pt3dadd( 42.799, 12.4948, 26.9541, 1.18 ) }
    dend_13 { pt3dadd( 42.7313, 12.2723, 29.1111, 0.74 ) }
    dend_13 { pt3dadd( 42.5884, 12.0867, 30.7606, 0.74 ) }
    dend_13 { pt3dadd( 42.3163, 11.8515, 32.7985, 0.52 ) }
    dend_13 { pt3dadd( 42.1223, 11.7013, 34.0431, 0.52 ) }
    dend_13 { pt3dadd( 41.8819, 11.5068, 35.6649, 0.52 ) }
    dend_13 { pt3dadd( 41.7358, 11.3292, 36.8788, 0.52 ) }
    dend_13 { pt3dadd( 41.66, 11.1319, 37.818, 0.52 ) }
    dend_13 { pt3dadd( 41.5609, 10.4335, 39.9314, 0.52 ) }
    dend_13 { pt3dadd( 41.5031, 9.63794, 41.5052, 1.03 ) }
    dend_13 { pt3dadd( 41.4085, 8.49935, 42.9693, 1.03 ) }
    dend_13 { pt3dadd( 41.2858, 7.39352, 43.9223, 0.66 ) }
    dend_13 { pt3dadd( 41.1322, 6.1577, 44.6526, 0.96 ) }
    dend_13 { pt3dadd( 40.9322, 4.54587, 45.3269, 1.25 ) }
    dend_13 { pt3dadd( 40.6959, 2.61507, 45.862, 0.66 ) }
    dend_13 { pt3dadd( 40.5508, 1.28211, 46.1483, 0.37 ) }
    dend_13 { pt3dadd( 40.4319, 0.298131, 46.3167, 0.52 ) }
    dend_13 { pt3dadd( 40.2499, -0.822959, 46.5136, 0.44 ) }
    dend_13 { pt3dadd( 39.9279, -2.23343, 46.8601, 0.88 ) }
    dend_13 { pt3dadd( 39.718, -2.87204, 47.1056, 0.88 ) }
    dend_13 { pt3dadd( 38.981, -4.50028, 47.9777, 0.44 ) }
    dend_13 { pt3dadd( 38.5597, -5.25923, 48.4266, 0.22 ) }
    dend_13 { pt3dadd( 38.0105, -6.22573, 48.9789, 0.22 ) }
    dend_13 { pt3dadd( 37.3905, -7.3669, 49.5981, 0.44 ) }
    dend_13 { pt3dadd( 37.0409, -8.05539, 49.9606, 1.33 ) }
    dend_13 { pt3dadd( 36.5801, -9.00272, 50.4978, 1.11 ) }
    dend_13 { pt3dadd( 36.1585, -9.82747, 51.0176, 0.81 ) }
    dend_13 { pt3dadd( 35.5177, -11.0865, 51.9134, 0.37 ) }
    dend_13 { pt3dadd( 34.9359, -12.2572, 52.8027, 0.29 ) }
    dend_13 { pt3dadd( 34.3492, -13.4112, 53.6771, 0.88 ) }
    dend_13 { pt3dadd( 33.781, -14.464, 54.489, 0.88 ) }
    dend_13 { pt3dadd( 33.0648, -15.694, 55.4176, 1.11 ) }
    dend_13 { pt3dadd( 32.2156, -17.0511, 56.3943, 0.37 ) }
    dend_13 { pt3dadd( 31.7897, -17.6944, 56.8083, 0.37 ) }
    dend_13 { pt3dadd( 31.0617, -18.8332, 57.3391, 0.29 ) }
    dend_13 { pt3dadd( 30.5662, -19.6849, 57.5623, 1.03 ) }
    dend_13 { pt3dadd( 30.0313, -20.7408, 57.6268, 0.22 ) }
    dend_13 { pt3dadd( 29.7813, -21.3768, 57.5643, 0.37 ) }
    dend_13 { pt3dadd( 29.5587, -22.0727, 57.4225, 1.18 ) }
    dend_13 { pt3dadd( 29.3191, -23.0179, 57.2068, 1.92 ) }
    dend_13 { pt3dadd( 29.1363, -24.1638, 56.9595, 0.37 ) }
    dend_13 { pt3dadd( 29.0817, -25.2621, 56.7577, 0.15 ) }
    dend_13 { pt3dadd( 29.1358, -26.5784, 56.5696, 0.22 ) }
    dend_13 { pt3dadd( 29.2793, -28.1183, 56.5179, 0.22 ) }
    dend_13 { pt3dadd( 29.3813, -29.1992, 56.5573, 0.22 ) }
    dend_13 { pt3dadd( 29.4696, -30.2056, 56.6399, 1.18 ) }
    dend_13 { pt3dadd( 29.5341, -31.465, 56.7876, 1.99 ) }
    dend_13 { pt3dadd( 29.5112, -32.5373, 56.9475, 1.25 ) }
    dend_13 { pt3dadd( 29.2268, -35.281, 57.3684, 0.37 ) }
    dend_13 { pt3dadd( 28.9433, -36.9917, 57.6599, 0.22 ) }
    dend_13 { pt3dadd( 28.8139, -37.5293, 57.7544, 0.66 ) }
    dend_13 { pt3dadd( 28.4621, -38.6431, 57.9396, 1.03 ) }
    dend_13 { pt3dadd( 27.9835, -39.8969, 58.1379, 0.29 ) }
    dend_13 { pt3dadd( 27.5583, -40.8861, 58.2856, 0.29 ) }
    dend_13 { pt3dadd( 27.1128, -41.8681, 58.4027, 1.18 ) }
    dend_13 { pt3dadd( 26.783, -42.6901, 58.4867, 1.18 ) }
    dend_13 { pt3dadd( 26.2159, -44.3209, 58.6199, 0.29 ) }
    dend_13 { pt3dadd( 25.9345, -45.2749, 58.6688, 0.29 ) }
    dend_13 { pt3dadd( 25.6389, -46.4122, 58.6878, 0.81 ) }
    dend_13 { pt3dadd( 25.3859, -47.4935, 58.6652, 0.29 ) }
    dend_13 { pt3dadd( 25.1012, -48.7544, 58.5578, 0.29 ) }
    dend_13 { pt3dadd( 24.9412, -49.4614, 58.4517, 0.29 ) }
    dend_13 { pt3dadd( 24.7041, -50.4111, 58.2332, 0.29 ) }
    dend_13 { pt3dadd( 24.4082, -51.3953, 57.938, 0.29 ) }
    dend_13 { pt3dadd( 24.0415, -52.4923, 57.5827, 0.59 ) }
    dend_13 { pt3dadd( 23.6278, -53.6792, 57.2117, 1.33 ) }
    dend_13 { pt3dadd( 23.1569, -55.0788, 56.8885, 1.4 ) }
    dend_13 { pt3dadd( 22.844, -56.1277, 56.684, 1.4 ) }
    dend_13 { pt3dadd( 22.2933, -58.3836, 56.402, 0.59 ) }
    dend_13 { pt3dadd( 21.9733, -60.1995, 56.3081, 0.52 ) }
    dend_13 { pt3dadd( 21.8045, -61.8495, 56.3701, 0.81 ) }
    dend_13 { pt3dadd( 21.75, -63.9889, 56.6311, 0.29 ) }
    dend_13 { pt3dadd( 21.7919, -64.8508, 56.7915, 0.81 ) }
    dend_13 { pt3dadd( 21.925, -66.2867, 57.1082, 1.11 ) }
    dend_13 { pt3dadd( 22.053, -67.4153, 57.3446, 1.25 ) }
    dend_13 { pt3dadd( 22.261, -69.5609, 57.6919, 0.37 ) }
    dend_13 { pt3dadd( 22.3467, -70.7746, 57.8059, 0.59 ) }
    dend_13 { pt3dadd( 22.4012, -71.9631, 57.8161, 1.33 ) }
    dend_13 { pt3dadd( 22.4244, -73.3536, 57.7648, 0.96 ) }
    dend_13 { pt3dadd( 22.3988, -74.9161, 57.5934, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_13 { pt3dadd( 22.3684, -75.6229, 57.4907, 0.37 ) }
    dend_13 { pt3dadd( 22.2731, -76.914, 57.2733, 0.59 ) }
    dend_13 { pt3dadd( 22.0667, -78.7417, 56.939, 0.37 ) }
    dend_13 { pt3dadd( 21.8842, -80.0151, 56.6894, 0.37 ) }
    dend_13 { pt3dadd( 21.687, -81.3566, 56.3961, 0.81 ) }
    dend_13 { pt3dadd( 21.4947, -82.628, 56.0815, 1.11 ) }
    dend_13 { pt3dadd( 21.2429, -84.136, 55.6156, 0.66 ) }
    dend_13 { pt3dadd( 20.9254, -85.7844, 54.98, 0.37 ) }
    dend_13 { pt3dadd( 20.738, -86.5784, 54.6203, 0.52 ) }
    dend_13 { pt3dadd( 20.3902, -87.8828, 53.9451, 0.81 ) }
    dend_13 { pt3dadd( 20.0389, -89.0981, 53.2483, 0.81 ) }
    dend_13 { pt3dadd( 19.7014, -90.1498, 52.5946, 1.11 ) }
    dend_13 { pt3dadd( 19.3581, -91.1354, 51.967, 1.47 ) }
    dend_13 { pt3dadd( 18.8724, -92.4405, 51.2114, 1.4 ) }
    dend_13 { pt3dadd( 18.2308, -94.1224, 50.3162, 0.29 ) }
    dend_13 { pt3dadd( 18.0375, -94.6131, 50.0692, 0.29 ) }
    dend_13 { pt3dadd( 17.7513, -95.3282, 49.7026, 0.66 ) }
    dend_13 { pt3dadd( 17.3426, -96.3135, 49.1661, 1.03 ) }
    dend_13 { pt3dadd( 16.6995, -97.7067, 48.3677, 0.37 ) }
    dend_13 { pt3dadd( 16.1389, -98.7826, 47.714, 0.37 ) }
    dend_13 { pt3dadd( 15.5924, -99.6338, 47.1658, 0.66 ) }
    dend_13 { pt3dadd( 14.9363, -100.505, 46.5669, 1.33 ) }
    dend_13 { pt3dadd( 14.3203, -101.205, 46.0636, 1.33 ) }
    dend_13 { pt3dadd( 13.2795, -102.23, 45.318, 0.37 ) }
    dend_13 { pt3dadd( 12.5681, -102.93, 44.9005, 0.37 ) }
    dend_13 { pt3dadd( 11.784, -103.764, 44.5685, 0.37 ) }
    dend_13 { pt3dadd( 11.4205, -104.186, 44.463, 0.81 ) }
    dend_13 { pt3dadd( 10.9636, -104.769, 44.3824, 1.47 ) }
    dend_13 { pt3dadd( 10.352, -105.629, 44.3042, 1.47 ) }
    dend_13 { pt3dadd( 9.17206, -107.35, 44.19, 0.29 ) }
    dend_13 { pt3dadd( 8.54044, -108.252, 44.1232, 0.37 ) }
    dend_13 { pt3dadd( 7.60033, -109.576, 44.0035, 0.29 ) }
    dend_13 { pt3dadd( 7.18733, -110.188, 43.9278, 0.81 ) }
    dend_13 { pt3dadd( 6.80272, -110.783, 43.8406, 1.18 ) }
    dend_13 { pt3dadd( 6.08341, -111.91, 43.65, 0.44 ) }
    dend_13 { pt3dadd( 5.41132, -112.971, 43.4152, 0.37 ) }
    dend_13 { pt3dadd( 4.84323, -113.967, 43.1709, 1.25 ) }
    dend_13 { pt3dadd( 3.99542, -115.711, 42.73, 0.29 ) }
    dend_13 { pt3dadd( 3.7235, -116.316, 42.5823, 0.74 ) }
    dend_13 { pt3dadd( 3.41699, -117.04, 42.4308, 1.11 ) }
    dend_13 { pt3dadd( 2.89, -118.345, 42.1857, 0.29 ) }
    dend_13 { pt3dadd( 2.48337, -119.25, 42.0573, 0.88 ) }
    dend_13 { pt3dadd( 2.05706, -120.083, 41.957, 0.37 ) }
    dend_13 { pt3dadd( 1.50369, -121.078, 41.8522, 0.22 ) }
    dend_13 { pt3dadd( 1.09053, -121.861, 41.8034, 0.66 ) }
    dend_13 { pt3dadd( 0.688605, -122.711, 41.784, 1.33 ) }
    dend_13 { pt3dadd( -0.0867287, -124.658, 41.8163, 0.96 ) }
    dend_13 { pt3dadd( -0.408148, -125.696, 41.8508, 0.96 ) }
    dend_13 { pt3dadd( -0.700851, -127.213, 41.9562, 0.52 ) }
    dend_13 { pt3dadd( -0.816324, -128.624, 42.094, 0.66 ) }
    dend_13 { pt3dadd( -0.819722, -129.8, 42.2543, 0.29 ) }
    dend_13 { pt3dadd( -0.745055, -130.833, 42.4272, 0.44 ) }
    dend_13 { pt3dadd( -0.606425, -131.811, 42.6165, 0.44 ) }
    dend_13 { pt3dadd( -0.339927, -133.718, 43.0133, 0.44 ) }
    dend_13 { pt3dadd( -0.270074, -134.521, 43.1842, 0.59 ) }
    dend_13 { pt3dadd( -0.315321, -135.774, 43.4343, 0.29 ) }
    dend_13 { pt3dadd( -0.484722, -136.751, 43.6396, 0.29 ) }
    dend_13 { pt3dadd( -0.778524, -137.753, 43.8549, 0.22 ) }
    dend_13 { pt3dadd( -1.06895, -138.499, 44.026, 0.22 ) }
    dend_13 { pt3dadd( -1.49005, -139.415, 44.2491, 0.88 ) }
    dend_13 { pt3dadd( -2.1474, -140.729, 44.6132, 0.29 ) }
    dend_13 { pt3dadd( -2.71125, -141.714, 44.904, 0.22 ) }
    dend_13 { pt3dadd( -3.2229, -142.52, 45.2026, 0.74 ) }
    dend_13 { pt3dadd( -3.87822, -143.509, 45.6457, 0.22 ) }
    dend_13 { pt3dadd( -4.27796, -144.126, 45.9698, 0.88 ) }
    dend_13 { pt3dadd( -4.71589, -144.833, 46.3637, 0.88 ) }
    dend_13 { pt3dadd( -5.29161, -145.77, 46.9421, 0.29 ) }
    dend_13 { pt3dadd( -5.89376, -146.701, 47.5402, 0.29 ) }
    dend_13 { pt3dadd( -6.33571, -147.393, 47.9835, 0.15 ) }
    dend_13 { pt3dadd( -6.9094, -148.294, 48.5486, 0.81 ) }
    dend_13 { pt3dadd( -7.57927, -149.329, 49.1572, 0.37 ) }
    dend_13 { pt3dadd( -8.33658, -150.438, 49.7721, 0.29 ) }
    dend_13 { pt3dadd( -8.96065, -151.298, 50.2153, 0.96 ) }
    dend_13 { pt3dadd( -9.72878, -152.29, 50.662, 0.29 ) }
    dend_13 { pt3dadd( -10.6301, -153.391, 51.1177, 0.59 ) }
    dend_13 { pt3dadd( -11.4546, -154.296, 51.4643, 0.22 ) }
    dend_13 { pt3dadd( -12.2341, -155.042, 51.6619, 0.52 ) }
    dend_13 { pt3dadd( -12.7221, -155.473, 51.7083, 0.22 ) }
    dend_13 { pt3dadd( -13.3, -155.943, 51.7066, 0.22 ) }
    dend_13 { pt3dadd( -13.691, -156.236, 51.6729, 0.22 ) }
    dend_13 { pt3dadd( -14.5496, -156.863, 51.547, 0.88 ) }
    dend_13 { pt3dadd( -15.8669, -157.773, 51.3612, 0.22 ) }
    dend_13 { pt3dadd( -16.6046, -158.215, 51.2761, 0.22 ) }
    dend_13 { pt3dadd( -17.5418, -158.667, 51.2198, 0.74 ) }
    dend_13 { pt3dadd( -18.3781, -158.975, 51.2017, 1.03 ) }
    dend_13 { pt3dadd( -19.3261, -159.253, 51.2208, 1.25 ) }
    dend_13 { pt3dadd( -20.9988, -159.673, 51.3363, 0.44 ) }
    dend_13 { pt3dadd( -22.9275, -160.119, 51.5558, 0.22 ) }
    dend_13 { pt3dadd( -24.1925, -160.415, 51.643, 0.22 ) }
    dend_13 { pt3dadd( -25.1194, -160.667, 51.6692, 0.74 ) }
    dend_13 { pt3dadd( -26.1671, -161.068, 51.6427, 0.15 ) }
    dend_13 { pt3dadd( -26.8949, -161.464, 51.5265, 0.15 ) }
    dend_13 { pt3dadd( -27.4945, -161.958, 51.2519, 0.44 ) }
    dend_13 { pt3dadd( -28.4408, -163.104, 50.4018, 0.22 ) }
    dend_13 { pt3dadd( -28.9328, -163.848, 49.7259, 0.96 ) }
    dend_13 { pt3dadd( -29.4524, -164.805, 48.6976, 0.22 ) }
    dend_13 { pt3dadd( -29.8244, -165.6, 47.7089, 0.15 ) }
    dend_13 { pt3dadd( -30.2077, -166.451, 46.5474, 0.15 ) }
    dend_13 { pt3dadd( -30.4872, -167.098, 45.5866, 0.22 ) }
    dend_13 { pt3dadd( -30.7754, -167.796, 44.4628, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_13 { pt3dadd( -31.0195, -168.434, 43.2538, 0.22 ) }
    dend_13 { pt3dadd( -31.1533, -168.845, 42.3138, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_4 (entry count 2/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -74.4753, -53.3654, -10.1652, 0.29 ) }
    dend_10 { pt3dadd( -76.1701, -54.1392, -9.95995, 0.29 ) }
    dend_10 { pt3dadd( -76.96, -54.571, -9.70224, 0.29 ) }
    dend_10 { pt3dadd( -77.3312, -54.8033, -9.55136, 0.88 ) }
    dend_10 { pt3dadd( -77.6363, -55.011, -9.42334, 0.88 ) }
    dend_10 { pt3dadd( -78.2116, -55.4658, -9.17834, 0.74 ) }
    dend_10 { pt3dadd( -79.1457, -56.2879, -8.77717, 0.37 ) }
    dend_10 { pt3dadd( -80.4386, -57.7798, -8.13155, 0.37 ) }
    dend_10 { pt3dadd( -80.7482, -58.2091, -7.93657, 0.74 ) }
    dend_10 { pt3dadd( -81.3419, -59.1406, -7.46842, 0.81 ) }
    dend_10 { pt3dadd( -82.0667, -60.3285, -6.79191, 0.59 ) }
    dend_10 { pt3dadd( -82.4525, -60.9743, -6.38233, 0.81 ) }
    dend_10 { pt3dadd( -82.9504, -61.8686, -5.71856, 0.29 ) }
    dend_10 { pt3dadd( -83.4384, -62.7845, -4.91869, 0.37 ) }
    dend_10 { pt3dadd( -83.824, -63.5139, -3.94234, 0.59 ) }
    dend_10 { pt3dadd( -83.9965, -63.9094, -3.03622, 0.59 ) }
    dend_10 { pt3dadd( -84.0484, -64.0702, -2.46517, 0.66 ) }
    dend_10 { pt3dadd( -84.0756, -64.371, -1.17921, 0.66 ) }
    dend_10 { pt3dadd( -84.0288, -64.5654, -0.385128, 0.66 ) }
    dend_10 { pt3dadd( -83.7803, -64.9228, 0.856903, 0.66 ) }
    dend_10 { pt3dadd( -83.087, -65.6198, 2.87976, 0.66 ) }
    dend_10 { pt3dadd( -82.5376, -66.0934, 4.05806, 0.96 ) }
    dend_10 { pt3dadd( -82.0266, -66.4982, 4.96958, 1.11 ) }
    dend_10 { pt3dadd( -81.2804, -67.0556, 6.10926, 0.59 ) }
    dend_10 { pt3dadd( -80.2411, -67.7897, 7.49492, 0.22 ) }
    dend_10 { pt3dadd( -79.6382, -68.1941, 8.16168, 0.52 ) }
    dend_10 { pt3dadd( -79.0059, -68.6371, 8.75077, 0.66 ) }
    dend_10 { pt3dadd( -78.1712, -69.3411, 9.45334, 0.29 ) }
    dend_10 { pt3dadd( -77.6096, -69.97, 9.90102, 0.88 ) }
    dend_10 { pt3dadd( -77.4179, -70.3376, 10.0596, 1.55 ) }
    dend_10 { pt3dadd( -77.1496, -71.385, 10.2666, 0.59 ) }
    dend_10 { pt3dadd( -76.9274, -72.8214, 10.3601, 0.22 ) }
    dend_10 { pt3dadd( -76.7817, -74.1049, 10.3299, 0.22 ) }
    dend_10 { pt3dadd( -76.7196, -74.7086, 10.2767, 0.74 ) }
    dend_10 { pt3dadd( -76.5947, -75.6191, 10.2026, 1.55 ) }
    dend_10 { pt3dadd( -76.5076, -76.0528, 10.1879, 1.55 ) }
    dend_10 { pt3dadd( -76.2829, -76.8216, 10.2061, 0.74 ) }
    dend_10 { pt3dadd( -75.8484, -77.8722, 10.332, 0.22 ) }
    dend_10 { pt3dadd( -75.6003, -78.3647, 10.4232, 0.88 ) }
    dend_10 { pt3dadd( -75.0742, -79.3039, 10.6148, 1.62 ) }
    dend_10 { pt3dadd( -74.5293, -80.1695, 10.7928, 0.96 ) }
    dend_10 { pt3dadd( -73.7776, -81.2557, 11.027, 0.44 ) }
    dend_10 { pt3dadd( -72.8975, -82.4108, 11.286, 0.52 ) }
    dend_10 { pt3dadd( -71.949, -83.5321, 11.5366, 0.22 ) }
    dend_10 { pt3dadd( -71.7373, -83.7687, 11.5931, 0.22 ) }
    dend_10 { pt3dadd( -71.4406, -84.1058, 11.6683, 0.22 ) }
    dend_10 { pt3dadd( -71.1603, -84.4316, 11.7386, 0.22 ) }
    dend_10 { pt3dadd( -70.9397, -84.7007, 11.7738, 0.44 ) }
    dend_10 { pt3dadd( -70.3069, -85.5153, 11.7511, 0.88 ) }
    dend_10 { pt3dadd( -69.4837, -86.6156, 11.5542, 0.22 ) }
    dend_10 { pt3dadd( -68.9073, -87.4124, 11.3075, 0.29 ) }
    dend_10 { pt3dadd( -68.3522, -88.2124, 10.9717, 0.29 ) }
    dend_10 { pt3dadd( -67.8381, -89.0025, 10.5778, 0.29 ) }
    dend_10 { pt3dadd( -67.2848, -89.8888, 10.0917, 0.29 ) }
    dend_10 { pt3dadd( -66.7516, -90.7723, 9.57372, 0.29 ) }
    dend_10 { pt3dadd( -66.2745, -91.533, 9.11193, 0.59 ) }
    dend_10 { pt3dadd( -65.8315, -92.223, 8.73615, 0.81 ) }
    dend_10 { pt3dadd( -65.23, -93.1697, 8.30291, 1.4 ) }
    dend_10 { pt3dadd( -64.6795, -94.0536, 8.00847, 0.59 ) }
    dend_10 { pt3dadd( -64.2142, -94.8271, 7.8337, 0.29 ) }
    dend_10 { pt3dadd( -63.8335, -95.488, 7.77019, 0.44 ) }
    dend_10 { pt3dadd( -63.4452, -96.1656, 7.76525, 0.44 ) }
    dend_10 { pt3dadd( -62.8524, -97.1506, 7.76966, 0.37 ) }
    dend_10 { pt3dadd( -62.4151, -97.8471, 7.7709, 1.33 ) }
    dend_10 { pt3dadd( -61.9983, -98.5084, 7.76242, 1.84 ) }
    dend_10 { pt3dadd( -61.2295, -99.8288, 7.73048, 0.29 ) }
    dend_10 { pt3dadd( -60.8503, -100.548, 7.70788, 0.59 ) }
    dend_10 { pt3dadd( -60.1427, -101.988, 7.63441, 0.22 ) }
    dend_10 { pt3dadd( -59.9175, -102.494, 7.57539, 0.74 ) }
    dend_10 { pt3dadd( -59.676, -103.074, 7.44289, 1.11 ) }
    dend_10 { pt3dadd( -59.1601, -104.439, 7.04065, 0.22 ) }
    dend_10 { pt3dadd( -58.9646, -104.969, 6.85707, 0.15 ) }
    dend_10 { pt3dadd( -58.6791, -105.769, 6.56344, 0.88 ) }
    dend_10 { pt3dadd( -58.2522, -106.971, 6.12438, 0.37 ) }
    dend_10 { pt3dadd( -57.8631, -108.055, 5.69613, 0.74 ) }
    dend_10 { pt3dadd( -57.3924, -109.32, 5.15071, 0.15 ) }
    dend_10 { pt3dadd( -57.1064, -110.008, 4.81925, 0.15 ) }
    dend_10 { pt3dadd( -56.83, -110.647, 4.51092, 0.74 ) }
    dend_10 { pt3dadd( -56.5713, -111.216, 4.26474, 0.88 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 81/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -74.4753, -53.3654, -10.1652, 0.29 ) }
    dend_5 { pt3dadd( -74.3252, -54.5312, -10.7129, 0.29 ) }
    dend_5 { pt3dadd( -74.298, -55.0648, -10.9889, 0.74 ) }
    dend_5 { pt3dadd( -74.3303, -55.6614, -11.2973, 0.88 ) }
    dend_5 { pt3dadd( -74.4909, -56.6798, -11.7843, 0.52 ) }
    dend_5 { pt3dadd( -74.7891, -57.6254, -12.1678, 0.52 ) }
    dend_5 { pt3dadd( -75.2569, -58.7559, -12.5103, 0.74 ) }
    dend_5 { pt3dadd( -75.6599, -59.4624, -12.6373, 0.88 ) }
    dend_5 { pt3dadd( -76.1525, -60.2221, -12.695, 0.96 ) }
    dend_5 { pt3dadd( -76.6888, -61.0608, -12.7223, 0.96 ) }
    dend_5 { pt3dadd( -77.5409, -62.4763, -12.7417, 0.74 ) }
    dend_5 { pt3dadd( -78.0548, -63.4202, -12.7472, 0.74 ) }
    dend_5 { pt3dadd( -78.5703, -64.523, -12.7645, 0.81 ) }
    dend_5 { pt3dadd( -78.8706, -65.301, -12.8204, 0.81 ) }
    dend_5 { pt3dadd( -79.3282, -66.7331, -12.9918, 0.52 ) }
    dend_5 { pt3dadd( -79.5695, -67.6658, -13.1402, 0.88 ) }
    dend_5 { pt3dadd( -79.7928, -68.7561, -13.3115, 0.66 ) }
    dend_5 { pt3dadd( -79.9541, -69.621, -13.4387, 0.96 ) }
    dend_5 { pt3dadd( -80.1366, -70.6239, -13.5623, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_5 { pt3dadd( -80.3607, -71.8619, -13.7015, 0.59 ) }
    dend_5 { pt3dadd( -80.5244, -72.9102, -13.8258, 0.52 ) }
    dend_5 { pt3dadd( -80.6086, -74.0067, -14.0034, 0.96 ) }
    dend_5 { pt3dadd( -80.5692, -75.0481, -14.2703, 0.74 ) }
    dend_5 { pt3dadd( -80.4139, -76.0761, -14.6112, 0.59 ) }
    dend_5 { pt3dadd( -80.0846, -77.2427, -15.1058, 0.59 ) }
    dend_5 { pt3dadd( -79.7011, -78.2164, -15.6174, 0.44 ) }
    dend_5 { pt3dadd( -79.2915, -79.1589, -16.2179, 0.37 ) }
    dend_5 { pt3dadd( -78.9296, -79.9991, -16.8442, 0.66 ) }
    dend_5 { pt3dadd( -78.638, -80.7605, -17.5147, 0.88 ) }
    dend_5 { pt3dadd( -78.4085, -81.5757, -18.3556, 0.44 ) }
    dend_5 { pt3dadd( -78.3513, -82.28, -19.3204, 0.66 ) }
    dend_5 { pt3dadd( -78.4252, -82.9017, -20.4384, 0.66 ) }
    dend_5 { pt3dadd( -78.5646, -83.3712, -21.4696, 0.81 ) }
    dend_5 { pt3dadd( -78.8467, -84.0634, -23.1703, 0.52 ) }
    dend_5 { pt3dadd( -79.0428, -84.5141, -24.3954, 0.52 ) }
    dend_5 { pt3dadd( -79.3621, -85.2922, -26.7318, 0.52 ) }
    dend_5 { pt3dadd( -79.4976, -85.7221, -28.2903, 0.52 ) }
    dend_5 { pt3dadd( -79.5415, -86.038, -29.6507, 0.52 ) }
    dend_5 { pt3dadd( -79.5209, -86.4054, -31.3222, 0.44 ) }
    dend_5 { pt3dadd( -79.4369, -86.6728, -32.5326, 0.44 ) }
    dend_5 { pt3dadd( -79.2941, -86.94, -33.7357, 0.66 ) }
    dend_5 { pt3dadd( -79.0022, -87.3159, -35.4055, 0.81 ) }
    dend_5 { pt3dadd( -78.8988, -87.3913, -35.9476, 0.52 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 24/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -91.9066, -32.9789, -20.9339, 0.29 ) }
    dend_3 { pt3dadd( -92.7832, -31.5339, -20.9339, 0.29 ) }
    dend_3 { pt3dadd( -93.2453, -30.772, -20.9339, 0.22 ) }
    dend_3 { pt3dadd( -93.7357, -29.9636, -20.9339, 0.22 ) }
    dend_3 { pt3dadd( -94.2473, -29.1202, -20.9339, 0.22 ) }
    dend_3 { pt3dadd( -99.4378, -20.9222, -22.4704, 0.22 ) }
    dend_3 { pt3dadd( -104.283, -12.4337, -23.3232, 0.22 ) }
    dend_3 { pt3dadd( -109.22, -4.0954, -24.9013, 0.22 ) }
    dend_3 { pt3dadd( -113.997, 3.91086, -28.0235, 0.22 ) }
    dend_3 { pt3dadd( -117.708, 11.8148, -32.5525, 0.22 ) }
    dend_3 { pt3dadd( -119.506, 20.8718, -35.7893, 0.22 ) }
    dend_3 { pt3dadd( -120.717, 30.0503, -38.9377, 0.22 ) }
    dend_3 { pt3dadd( -120.818, 39.7427, -40.0191, 0.22 ) }
    dend_3 { pt3dadd( -119.296, 49.379, -40.0579, 0.22 ) }
    dend_3 { pt3dadd( -117.461, 58.8423, -38.4995, 0.22 ) }
    dend_3 { pt3dadd( -114.54, 68.0801, -37.1963, 0.22 ) }
    dend_3 { pt3dadd( -110.852, 77.1252, -36.619, 0.22 ) }
    dend_3 { pt3dadd( -107.204, 86.0028, -34.6719, 0.22 ) }
    dend_3 { pt3dadd( -103.198, 94.8981, -33.8269, 0.22 ) }
    dend_3 { pt3dadd( -98.9447, 103.697, -34.5136, 0.22 ) }
    dend_3 { pt3dadd( -94.35, 112.332, -33.8373, 0.22 ) }
    dend_3 { pt3dadd( -90.4591, 121.281, -33.0476, 0.22 ) }
    dend_3 { pt3dadd( -87.5482, 130.6, -32.6404, 0.22 ) }
    dend_3 { pt3dadd( -83.7623, 139.589, -31.8211, 0.22 ) }
    dend_3 { pt3dadd( -79.4026, 148.338, -31.1409, 0.22 ) }
    dend_3 { pt3dadd( -75.63, 157.305, -30.0553, 0.22 ) }
    dend_3 { pt3dadd( -72.6315, 166.605, -30.269, 0.22 ) }
    dend_3 { pt3dadd( -68.9433, 175.607, -31.331, 0.22 ) }
    dend_3 { pt3dadd( -66.7133, 185.094, -30.7383, 0.22 ) }
    dend_3 { pt3dadd( -65.4913, 194.646, -29.1421, 0.22 ) }
    dend_3 { pt3dadd( -65.6204, 204.219, -27.2585, 0.22 ) }
    dend_3 { pt3dadd( -66.8855, 213.775, -25.7189, 0.22 ) }
    dend_3 { pt3dadd( -68.7653, 223.299, -24.7065, 0.22 ) }
    dend_3 { pt3dadd( -69.8913, 232.986, -24.4956, 0.22 ) }
    dend_3 { pt3dadd( -72.4567, 242.256, -26.2347, 0.22 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 59/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -91.9066, -32.9789, -20.9339, 0.96 ) }
    dend_2 { pt3dadd( -92.8978, -33.3722, -20.8968, 0.96 ) }
    dend_2 { pt3dadd( -93.5262, -33.6084, -20.8646, 0.88 ) }
    dend_2 { pt3dadd( -95.345, -34.1429, -20.6986, 0.52 ) }
    dend_2 { pt3dadd( -96.7716, -34.4295, -20.4751, 0.37 ) }
    dend_2 { pt3dadd( -97.549, -34.5178, -20.295, 0.59 ) }
    dend_2 { pt3dadd( -98.6091, -34.6031, -20.0116, 0.52 ) }
    dend_2 { pt3dadd( -99.2436, -34.6194, -19.8137, 0.74 ) }
    dend_2 { pt3dadd( -100.538, -34.6601, -19.3229, 0.44 ) }
    dend_2 { pt3dadd( -101.644, -34.725, -18.7951, 0.44 ) }
    dend_2 { pt3dadd( -102.97, -34.8485, -18.1086, 0.29 ) }
    dend_2 { pt3dadd( -103.848, -34.9254, -17.6538, 0.29 ) }
    dend_2 { pt3dadd( -104.772, -34.9621, -17.2136, 0.22 ) }
    dend_2 { pt3dadd( -105.935, -34.957, -16.7139, 0.29 ) }
    dend_2 { pt3dadd( -106.573, -34.947, -16.4762, 0.29 ) }
    dend_2 { pt3dadd( -107.87, -34.8694, -16.0486, 0.29 ) }
    dend_2 { pt3dadd( -109.168, -34.6903, -15.6321, 0.29 ) }
    dend_2 { pt3dadd( -110.425, -34.3921, -15.2247, 0.22 ) }
    dend_2 { pt3dadd( -111.574, -34.0044, -14.8674, 0.22 ) }
    dend_2 { pt3dadd( -112.279, -33.7034, -14.6748, 0.29 ) }
    dend_2 { pt3dadd( -112.63, -33.5407, -14.5871, 0.29 ) }
    dend_2 { pt3dadd( -122.41, -34.4354, -12.7112, 0.29 ) }
    dend_2 { pt3dadd( -131.828, -36.0345, -9.77724, 0.29 ) }
    dend_2 { pt3dadd( -140.898, -37.1971, -5.73802, 0.29 ) }
    dend_2 { pt3dadd( -149.963, -39.9874, -2.63399, 0.29 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 84/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -88.3221, 33.4887, 7.17618, 0.59 ) }
    dend_59 { pt3dadd( -88.52, 34.027, 6.28686, 0.59 ) }
    dend_59 { pt3dadd( -88.7231, 34.5373, 5.36178, 0.44 ) }
    dend_59 { pt3dadd( -88.9852, 35.2385, 4.12945, 0.29 ) }
    dend_59 { pt3dadd( -89.0747, 35.8376, 3.22204, 0.29 ) }
    dend_59 { pt3dadd( -89.0392, 36.1562, 2.80384, 0.29 ) }
    dend_59 { pt3dadd( -88.9851, 36.3362, 2.56935, 0.29 ) }
    dend_59 { pt3dadd( -88.85, 36.6238, 2.15686, 0.29 ) }
    dend_59 { pt3dadd( -88.6125, 37.0102, 1.56833, 0.29 ) }
    dend_59 { pt3dadd( -88.0595, 37.8233, 0.349854, 0.29 ) }
    dend_59 { pt3dadd( -87.613, 38.4349, -0.594457, 0.22 ) }
    dend_59 { pt3dadd( -87.135, 39.0723, -1.62733, 0.59 ) }
    dend_59 { pt3dadd( -86.5257, 39.9788, -3.12829, 1.03 ) }
    dend_59 { pt3dadd( -86.1898, 40.5417, -4.14946, 1.03 ) }
    dend_59 { pt3dadd( -85.8924, 41.1318, -5.35865, 0.29 ) }
    dend_59 { pt3dadd( -85.6914, 41.71, -6.66468, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_59 { pt3dadd( -85.6054, 42.1473, -7.6255, 0.88 ) }
    dend_59 { pt3dadd( -85.5691, 42.7808, -8.80109, 0.29 ) }
    dend_59 { pt3dadd( -85.6273, 43.3548, -9.68592, 0.29 ) }
    dend_59 { pt3dadd( -85.7998, 43.8243, -10.3591, 0.66 ) }
    dend_59 { pt3dadd( -86.0729, 44.2249, -10.8919, 0.88 ) }
    dend_59 { pt3dadd( -86.5463, 44.7184, -11.4704, 0.59 ) }
    dend_59 { pt3dadd( -87.4574, 45.5172, -12.2702, 0.44 ) }
    dend_59 { pt3dadd( -88.0896, 45.9903, -12.6619, 0.29 ) }
    dend_59 { pt3dadd( -89.2991, 46.7742, -13.213, 0.22 ) }
    dend_59 { pt3dadd( -89.8164, 47.0314, -13.3944, 0.22 ) }
    dend_59 { pt3dadd( -90.7516, 47.3607, -13.6524, 0.59 ) }
    dend_59 { pt3dadd( -91.7893, 47.5882, -13.8899, 0.29 ) }
    dend_59 { pt3dadd( -93.3123, 47.7505, -14.1657, 0.22 ) }
    dend_59 { pt3dadd( -94.2532, 47.7925, -14.3194, 0.22 ) }
    dend_59 { pt3dadd( -95.3227, 47.7962, -14.4837, 0.44 ) }
    dend_59 { pt3dadd( -96.3441, 47.7364, -14.6591, 0.44 ) }
    dend_59 { pt3dadd( -97.4281, 47.5985, -14.8686, 0.74 ) }
    dend_59 { pt3dadd( -98.4025, 47.3995, -15.0895, 0.44 ) }
    dend_59 { pt3dadd( -99.3503, 47.133, -15.343, 0.37 ) }
    dend_59 { pt3dadd( -100.389, 46.7871, -15.6554, 0.96 ) }
    dend_59 { pt3dadd( -101.77, 46.2509, -16.1113, 0.22 ) }
    dend_59 { pt3dadd( -102.723, 45.8213, -16.461, 0.74 ) }
    dend_59 { pt3dadd( -103.418, 45.4799, -16.7211, 0.22 ) }
    dend_59 { pt3dadd( -104.086, 45.1671, -16.9356, 0.22 ) }
    dend_59 { pt3dadd( -104.425, 45.0243, -17.007, 0.22 ) }
    dend_59 { pt3dadd( -104.804, 44.8849, -17.0759, 0.22 ) }
    dend_59 { pt3dadd( -105.558, 44.6906, -17.201, 0.22 ) }
    dend_59 { pt3dadd( -106.452, 44.5417, -17.3647, 0.44 ) }
    dend_59 { pt3dadd( -107.679, 44.3828, -17.6226, 0.74 ) }
    dend_59 { pt3dadd( -108.885, 44.222, -17.9242, 0.29 ) }
    dend_59 { pt3dadd( -109.903, 44.0235, -18.2339, 0.44 ) }
    dend_59 { pt3dadd( -111.057, 43.6942, -18.6586, 0.37 ) }
    dend_59 { pt3dadd( -111.974, 43.3423, -19.051, 0.81 ) }
    dend_59 { pt3dadd( -112.684, 43.0114, -19.406, 0.66 ) }
    dend_59 { pt3dadd( -113.419, 42.6331, -19.8055, 1.03 ) }
    dend_59 { pt3dadd( -114.599, 42.0119, -20.4675, 0.29 ) }
    dend_59 { pt3dadd( -115.585, 41.527, -20.9871, 0.52 ) }
    dend_59 { pt3dadd( -117.014, 40.8976, -21.704, 0.37 ) }
    dend_59 { pt3dadd( -117.813, 40.6225, -22.059, 0.37 ) }
    dend_59 { pt3dadd( -119.005, 40.3654, -22.5045, 0.29 ) }
    dend_59 { pt3dadd( -119.855, 40.2878, -22.766, 0.29 ) }
    dend_59 { pt3dadd( -120.923, 40.3234, -23.0416, 0.52 ) }
    dend_59 { pt3dadd( -121.442, 40.3896, -23.1478, 0.52 ) }
    dend_59 { pt3dadd( -122.008, 40.5086, -23.2481, 0.22 ) }
    dend_59 { pt3dadd( -122.656, 40.6906, -23.3733, 0.59 ) }
    dend_59 { pt3dadd( -123.713, 41.0824, -23.6094, 0.29 ) }
    dend_59 { pt3dadd( -124.063, 41.2452, -23.7026, 0.29 ) }
    dend_59 { pt3dadd( -125.002, 41.7601, -24.0643, 0.22 ) }
    dend_59 { pt3dadd( -125.665, 42.1453, -24.3976, 0.37 ) }
    dend_59 { pt3dadd( -126.342, 42.5637, -24.7927, 0.52 ) }
    dend_59 { pt3dadd( -126.724, 42.8281, -25.0457, 0.29 ) }
    dend_59 { pt3dadd( -127.217, 43.2411, -25.4225, 0.44 ) }
    dend_59 { pt3dadd( -127.994, 43.9526, -26.0931, 0.22 ) }
    dend_59 { pt3dadd( -128.54, 44.5249, -26.6497, 0.15 ) }
    dend_59 { pt3dadd( -128.977, 44.9623, -27.0782, 0.29 ) }
    dend_59 { pt3dadd( -137.108, 48.3563, -31.7447, 0.29 ) }
    dend_59 { pt3dadd( -144.901, 52.3494, -36.4876, 0.29 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 57/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -88.3221, 33.4887, 7.17618, 1.55 ) }
    dend_56 { pt3dadd( -89.5784, 33.7272, 6.99543, 1.55 ) }
    dend_56 { pt3dadd( -90.7209, 34.0002, 6.89001, 0.81 ) }
    dend_56 { pt3dadd( -91.9271, 34.3812, 6.78691, 0.37 ) }
    dend_56 { pt3dadd( -93.241, 34.858, 6.6707, 0.59 ) }
    dend_56 { pt3dadd( -94.0674, 35.1714, 6.57361, 0.59 ) }
    dend_56 { pt3dadd( -94.9347, 35.492, 6.43742, 0.59 ) }
    dend_56 { pt3dadd( -95.8886, 35.8759, 6.21286, 0.29 ) }
    dend_56 { pt3dadd( -96.7933, 36.2556, 5.91061, 0.22 ) }
    dend_56 { pt3dadd( -97.068, 36.3614, 5.7773, 0.22 ) }
    dend_56 { pt3dadd( -97.7709, 36.5773, 5.26832, 0.22 ) }
    dend_56 { pt3dadd( -98.5977, 36.7692, 4.56076, 0.44 ) }
    dend_56 { pt3dadd( -99.3204, 36.9316, 3.92671, 1.25 ) }
    dend_56 { pt3dadd( -99.9407, 37.0825, 3.40427, 1.4 ) }
    dend_56 { pt3dadd( -101.061, 37.3868, 2.55742, 0.66 ) }
    dend_56 { pt3dadd( -101.873, 37.6717, 2.01314, 0.88 ) }
    dend_56 { pt3dadd( -102.832, 38.107, 1.48372, 1.47 ) }
    dend_56 { pt3dadd( -104.09, 38.7972, 1.00611, 0.37 ) }
    dend_56 { pt3dadd( -104.919, 39.3134, 0.829047, 0.29 ) }
    dend_56 { pt3dadd( -105.427, 39.6616, 0.765367, 0.88 ) }
    dend_56 { pt3dadd( -106.047, 40.1292, 0.720401, 0.88 ) }
    dend_56 { pt3dadd( -106.911, 40.8175, 0.653687, 0.44 ) }
    dend_56 { pt3dadd( -108.253, 41.9625, 0.511366, 0.44 ) }
    dend_56 { pt3dadd( -109.359, 42.9489, 0.346723, 0.52 ) }
    dend_56 { pt3dadd( -110.226, 43.7641, 0.201842, 0.22 ) }
    dend_56 { pt3dadd( -110.749, 44.2918, 0.10569, 0.22 ) }
    dend_56 { pt3dadd( -111.368, 44.9944, -0.0220912, 0.22 ) }
    dend_56 { pt3dadd( -112.014, 45.8613, -0.169153, 0.44 ) }
    dend_56 { pt3dadd( -112.425, 46.5235, -0.233307, 0.22 ) }
    dend_56 { pt3dadd( -112.752, 47.0645, -0.243692, 0.74 ) }
    dend_56 { pt3dadd( -113.148, 47.7104, -0.209849, 1.33 ) }
    dend_56 { pt3dadd( -113.654, 48.4969, -0.165945, 1.03 ) }
    dend_56 { pt3dadd( -114.354, 49.5509, -0.117133, 0.37 ) }
    dend_56 { pt3dadd( -115.215, 50.7352, -0.160349, 0.74 ) }
    dend_56 { pt3dadd( -116.159, 51.8812, -0.281463, 0.22 ) }
    dend_56 { pt3dadd( -116.492, 52.2331, -0.33391, 0.52 ) }
    dend_56 { pt3dadd( -117.357, 53.0076, -0.473357, 1.03 ) }
    dend_56 { pt3dadd( -117.907, 53.4071, -0.563179, 1.03 ) }
    dend_56 { pt3dadd( -119.28, 54.1849, -0.840371, 0.22 ) }
    dend_56 { pt3dadd( -120.435, 54.6777, -1.11083, 0.22 ) }
    dend_56 { pt3dadd( -121.348, 54.9354, -1.29434, 0.37 ) }
    dend_56 { pt3dadd( -122.108, 55.0482, -1.41873, 0.44 ) }
    dend_56 { pt3dadd( -123.001, 55.0503, -1.48647, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_56 { pt3dadd( -124.127, 54.9101, -1.47726, 0.22 ) }
    dend_56 { pt3dadd( -124.574, 54.8094, -1.44082, 0.37 ) }
    dend_56 { pt3dadd( -125.51, 54.5498, -1.37719, 0.88 ) }
    dend_56 { pt3dadd( -126.397, 54.286, -1.34046, 0.96 ) }
    dend_56 { pt3dadd( -127.832, 53.8577, -1.2513, 1.33 ) }
    dend_56 { pt3dadd( -129.481, 53.4027, -1.09851, 0.44 ) }
    dend_56 { pt3dadd( -130.289, 53.1962, -0.988929, 0.22 ) }
    dend_56 { pt3dadd( -131.249, 52.9494, -0.863675, 0.81 ) }
    dend_56 { pt3dadd( -132.147, 52.7061, -0.764933, 1.25 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 9/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 36.6136, -81.523, -11.1341, 1.7 ) }
    dend_48 { pt3dadd( 36.4376, -82.38, -11.7624, 1.7 ) }
    dend_48 { pt3dadd( 36.2102, -83.5182, -12.4589, 0.81 ) }
    dend_48 { pt3dadd( 35.9916, -84.8966, -13.0855, 0.81 ) }
    dend_48 { pt3dadd( 35.8815, -85.9622, -13.4641, 0.88 ) }
    dend_48 { pt3dadd( 35.8051, -87.4916, -13.8714, 0.59 ) }
    dend_48 { pt3dadd( 35.7921, -88.2955, -13.9936, 0.88 ) }
    dend_48 { pt3dadd( 35.8252, -89.1747, -14.0093, 0.96 ) }
    dend_48 { pt3dadd( 35.963, -90.5825, -13.8186, 0.74 ) }
    dend_48 { pt3dadd( 36.0687, -91.4356, -13.593, 0.88 ) }
    dend_48 { pt3dadd( 36.244, -92.9198, -13.0522, 0.74 ) }
    dend_48 { pt3dadd( 36.4165, -94.4267, -12.4294, 0.81 ) }
    dend_48 { pt3dadd( 36.496, -95.2344, -12.0988, 0.81 ) }
    dend_48 { pt3dadd( 36.5705, -96.0266, -11.7603, 0.52 ) }
    dend_48 { pt3dadd( 36.6713, -97.1088, -11.3299, 0.52 ) }
    dend_48 { pt3dadd( 36.8014, -98.161, -10.9147, 1.03 ) }
    dend_48 { pt3dadd( 37.0046, -99.1511, -10.5121, 1.55 ) }
    dend_48 { pt3dadd( 37.3926, -100.359, -10.0142, 1.4 ) }
    dend_48 { pt3dadd( 37.8631, -101.374, -9.53195, 1.25 ) }
    dend_48 { pt3dadd( 38.5499, -102.568, -8.93566, 0.88 ) }
    dend_48 { pt3dadd( 39.3269, -103.775, -8.37622, 0.52 ) }
    dend_48 { pt3dadd( 40.0441, -104.843, -7.92019, 0.66 ) }
    dend_48 { pt3dadd( 40.7581, -105.932, -7.53498, 0.96 ) }
    dend_48 { pt3dadd( 41.5358, -107.174, -7.22703, 0.96 ) }
    dend_48 { pt3dadd( 42.2503, -108.359, -7.12163, 0.59 ) }
    dend_48 { pt3dadd( 42.8437, -109.367, -7.16557, 1.11 ) }
    dend_48 { pt3dadd( 43.4083, -110.461, -7.39379, 0.59 ) }
    dend_48 { pt3dadd( 44.0721, -111.946, -7.8785, 0.88 ) }
    dend_48 { pt3dadd( 44.4604, -112.871, -8.2614, 1.18 ) }
    dend_48 { pt3dadd( 44.8558, -113.79, -8.69035, 1.11 ) }
    dend_48 { pt3dadd( 45.1241, -114.365, -8.95693, 1.33 ) }
    dend_48 { pt3dadd( 45.6691, -115.481, -9.3836, 0.96 ) }
    dend_48 { pt3dadd( 46.0976, -116.359, -9.64402, 1.25 ) }
    dend_48 { pt3dadd( 46.6564, -117.474, -9.87164, 1.33 ) }
    dend_48 { pt3dadd( 47.0422, -118.255, -10.0401, 1.11 ) }
    dend_48 { pt3dadd( 47.5194, -119.216, -10.2951, 0.44 ) }
    dend_48 { pt3dadd( 48.0329, -120.146, -10.6107, 1.33 ) }
    dend_48 { pt3dadd( 48.5044, -120.797, -10.8965, 1.18 ) }
    dend_48 { pt3dadd( 49.5188, -121.858, -11.5238, 0.88 ) }
    dend_48 { pt3dadd( 50.6764, -122.781, -12.215, 1.11 ) }
    dend_48 { pt3dadd( 51.5855, -123.361, -12.7456, 1.55 ) }
    dend_48 { pt3dadd( 52.3632, -123.775, -13.185, 1.92 ) }
    dend_48 { pt3dadd( 53.907, -124.498, -14.0545, 0.88 ) }
    dend_48 { pt3dadd( 55.0527, -124.953, -14.6408, 0.66 ) }
    dend_48 { pt3dadd( 56.0675, -125.29, -15.0958, 0.52 ) }
    dend_48 { pt3dadd( 56.6961, -125.476, -15.3523, 0.52 ) }
    dend_48 { pt3dadd( 57.6516, -125.742, -15.7764, 0.81 ) }
    dend_48 { pt3dadd( 58.5158, -125.96, -16.2367, 0.66 ) }
    dend_48 { pt3dadd( 59.7376, -126.253, -16.9916, 0.96 ) }
    dend_48 { pt3dadd( 60.6212, -126.451, -17.5551, 0.96 ) }
    dend_48 { pt3dadd( 62.0136, -126.748, -18.3712, 0.81 ) }
    dend_48 { pt3dadd( 63.3142, -127.046, -19.04, 1.03 ) }
    dend_48 { pt3dadd( 64.8732, -127.464, -19.704, 0.81 ) }
    dend_48 { pt3dadd( 66.1273, -127.882, -20.0992, 0.59 ) }
    dend_48 { pt3dadd( 67.0957, -128.27, -20.3052, 0.74 ) }
    dend_48 { pt3dadd( 68.7528, -129.059, -20.456, 1.11 ) }
    dend_48 { pt3dadd( 69.754, -129.652, -20.4284, 0.96 ) }
    dend_48 { pt3dadd( 70.5867, -130.257, -20.3208, 1.33 ) }
    dend_48 { pt3dadd( 71.2898, -130.871, -20.1645, 1.11 ) }
    dend_48 { pt3dadd( 72.1409, -131.703, -19.8957, 0.66 ) }
    dend_48 { pt3dadd( 72.9679, -132.563, -19.5676, 0.66 ) }
    dend_48 { pt3dadd( 73.8521, -133.6, -19.0672, 0.74 ) }
    dend_48 { pt3dadd( 74.4947, -134.495, -18.533, 0.96 ) }
    dend_48 { pt3dadd( 74.8208, -135.117, -18.1321, 1.11 ) }
    dend_48 { pt3dadd( 75.2464, -136.251, -17.4428, 1.11 ) }
    dend_48 { pt3dadd( 75.4977, -137.234, -16.9256, 0.88 ) }
    dend_48 { pt3dadd( 75.7081, -138.322, -16.4779, 0.74 ) }
    dend_48 { pt3dadd( 75.8972, -139.199, -16.2655, 0.96 ) }
    dend_48 { pt3dadd( 76.3613, -140.704, -16.2542, 0.44 ) }
    dend_48 { pt3dadd( 76.9763, -142.11, -16.4876, 0.66 ) }
    dend_48 { pt3dadd( 77.548, -143.133, -16.7792, 1.11 ) }
    dend_48 { pt3dadd( 77.9818, -143.731, -16.9466, 1.25 ) }
    dend_48 { pt3dadd( 78.9504, -144.786, -17.1592, 0.66 ) }
    dend_48 { pt3dadd( 79.8872, -145.671, -17.2143, 0.96 ) }
    dend_48 { pt3dadd( 80.6568, -146.369, -17.171, 0.44 ) }
    dend_48 { pt3dadd( 81.5655, -147.229, -17.0059, 0.44 ) }
    dend_48 { pt3dadd( 82.9291, -148.592, -16.6832, 0.59 ) }
    dend_48 { pt3dadd( 83.9564, -149.701, -16.4292, 0.44 ) }
    dend_48 { pt3dadd( 84.832, -150.734, -16.2206, 0.96 ) }
    dend_48 { pt3dadd( 85.9065, -152.014, -16.0648, 0.37 ) }
    dend_48 { pt3dadd( 86.661, -152.857, -16.0389, 0.96 ) }
    dend_48 { pt3dadd( 87.2302, -153.438, -16.1049, 0.96 ) }
    dend_48 { pt3dadd( 87.8638, -154.044, -16.2892, 0.59 ) }
    dend_48 { pt3dadd( 88.712, -154.813, -16.6216, 1.03 ) }
    dend_48 { pt3dadd( 90.2066, -156.098, -17.2851, 0.52 ) }
    dend_48 { pt3dadd( 91.2962, -157.027, -17.7883, 0.66 ) }
    dend_48 { pt3dadd( 92.4669, -158.07, -18.354, 0.44 ) }
    dend_48 { pt3dadd( 93.32, -158.919, -18.7515, 0.66 ) }
    dend_48 { pt3dadd( 93.8435, -159.542, -18.9904, 1.11 ) }
    dend_48 { pt3dadd( 94.3372, -160.235, -19.2017, 1.11 ) }
    dend_48 { pt3dadd( 94.9251, -161.214, -19.4359, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_48 { pt3dadd( 95.4122, -162.02, -19.6007, 0.81 ) }
    dend_48 { pt3dadd( 96.2033, -163.122, -19.7896, 0.59 ) }
    dend_48 { pt3dadd( 96.9131, -164.036, -19.9311, 0.66 ) }
    dend_48 { pt3dadd( 97.8709, -165.151, -20.1268, 0.52 ) }
    dend_48 { pt3dadd( 98.3872, -165.667, -20.2275, 0.52 ) }
    dend_48 { pt3dadd( 99.4211, -166.455, -20.401, 0.74 ) }
    dend_48 { pt3dadd( 100.432, -167.007, -20.5212, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 7/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 36.6136, -81.523, -11.1341, 1.03 ) }
    dend_47 { pt3dadd( 36.7449, -82.2433, -10.4133, 1.03 ) }
    dend_47 { pt3dadd( 37.0651, -83.3193, -9.30661, 1.03 ) }
    dend_47 { pt3dadd( 37.6839, -84.7898, -7.86647, 1.25 ) }
    dend_47 { pt3dadd( 38.2205, -85.7988, -6.93929, 1.25 ) }
    dend_47 { pt3dadd( 38.8975, -86.8561, -6.028, 1.47 ) }
    dend_47 { pt3dadd( 39.7664, -88.0578, -5.03449, 1.4 ) }
    dend_47 { pt3dadd( 40.3835, -88.782, -4.47902, 1.25 ) }
    dend_47 { pt3dadd( 41.4356, -89.9303, -3.70617, 1.03 ) }
    dend_47 { pt3dadd( 42.2208, -90.7624, -3.19085, 1.03 ) }
    dend_47 { pt3dadd( 42.9862, -91.5851, -2.6763, 0.96 ) }
    dend_47 { pt3dadd( 43.8381, -92.5655, -2.04257, 1.11 ) }
    dend_47 { pt3dadd( 44.4547, -93.3862, -1.51873, 0.74 ) }
    dend_47 { pt3dadd( 45.0273, -94.2598, -0.928607, 1.03 ) }
    dend_47 { pt3dadd( 45.612, -95.2563, -0.198502, 1.47 ) }
    dend_47 { pt3dadd( 46.2178, -96.3942, 0.653012, 1.92 ) }
    dend_47 { pt3dadd( 46.772, -97.4486, 1.44144, 1.47 ) }
    dend_47 { pt3dadd( 47.4476, -98.6741, 2.35788, 1.84 ) }
    dend_47 { pt3dadd( 48.3273, -100.206, 3.48877, 1.03 ) }
    dend_47 { pt3dadd( 48.8124, -101.05, 4.07151, 1.11 ) }
    dend_47 { pt3dadd( 49.3719, -102.008, 4.68817, 1.4 ) }
    dend_47 { pt3dadd( 50.1822, -103.273, 5.45865, 1.18 ) }
    dend_47 { pt3dadd( 50.9648, -104.302, 6.04629, 1.03 ) }
    dend_47 { pt3dadd( 51.9153, -105.335, 6.57881, 0.81 ) }
    dend_47 { pt3dadd( 52.713, -106.096, 6.92726, 0.66 ) }
    dend_47 { pt3dadd( 53.6864, -106.958, 7.23556, 0.66 ) }
    dend_47 { pt3dadd( 54.699, -107.799, 7.42611, 1.18 ) }
    dend_47 { pt3dadd( 55.8412, -108.734, 7.45503, 1.33 ) }
    dend_47 { pt3dadd( 57.1018, -109.757, 7.28943, 0.52 ) }
    dend_47 { pt3dadd( 57.8202, -110.362, 7.09607, 0.96 ) }
    dend_47 { pt3dadd( 58.7927, -111.248, 6.70042, 1.62 ) }
    dend_47 { pt3dadd( 59.6238, -112.081, 6.23952, 1.47 ) }
    dend_47 { pt3dadd( 60.5422, -113.049, 5.61648, 1.03 ) }
    dend_47 { pt3dadd( 61.1432, -113.693, 5.1422, 1.55 ) }
    dend_47 { pt3dadd( 62.3162, -114.918, 4.12494, 0.74 ) }
    dend_47 { pt3dadd( 63.2359, -115.847, 3.32671, 1.25 ) }
    dend_47 { pt3dadd( 63.7588, -116.373, 2.88858, 1.33 ) }
    dend_47 { pt3dadd( 64.7569, -117.371, 2.10258, 0.66 ) }
    dend_47 { pt3dadd( 65.4688, -118.046, 1.58855, 0.96 ) }
    dend_47 { pt3dadd( 66.3486, -118.852, 0.972856, 1.62 ) }
    dend_47 { pt3dadd( 66.8624, -119.301, 0.61808, 1.99 ) }
    dend_47 { pt3dadd( 68.3114, -120.494, -0.310173, 0.66 ) }
    dend_47 { pt3dadd( 69.1483, -121.151, -0.82197, 1.11 ) }
    dend_47 { pt3dadd( 69.8167, -121.677, -1.27497, 1.33 ) }
    dend_47 { pt3dadd( 70.741, -122.436, -1.99929, 0.59 ) }
    dend_47 { pt3dadd( 71.2975, -122.944, -2.52699, 1.11 ) }
    dend_47 { pt3dadd( 72.1332, -123.815, -3.52658, 0.44 ) }
    dend_47 { pt3dadd( 72.5888, -124.364, -4.23964, 0.59 ) }
    dend_47 { pt3dadd( 73.399, -125.521, -5.83216, 0.81 ) }
    dend_47 { pt3dadd( 73.8199, -126.229, -6.82899, 0.59 ) }
    dend_47 { pt3dadd( 74.1818, -126.897, -7.75301, 0.59 ) }
    dend_47 { pt3dadd( 74.5224, -127.598, -8.6682, 0.59 ) }
    dend_47 { pt3dadd( 75.0218, -128.774, -10.0625, 1.03 ) }
    dend_47 { pt3dadd( 75.2953, -129.424, -10.7479, 0.88 ) }
    dend_47 { pt3dadd( 75.6952, -130.4, -11.5776, 1.03 ) }
    dend_47 { pt3dadd( 76.0769, -131.445, -12.2954, 0.52 ) }
    dend_47 { pt3dadd( 76.3802, -132.49, -12.8216, 0.52 ) }
    dend_47 { pt3dadd( 76.6092, -133.572, -13.1856, 0.74 ) }
    dend_47 { pt3dadd( 76.6942, -134.143, -13.3181, 0.88 ) }
    dend_47 { pt3dadd( 76.8748, -135.57, -13.6035, 0.66 ) }
    dend_47 { pt3dadd( 76.9908, -136.415, -13.7798, 1.18 ) }
    dend_47 { pt3dadd( 77.1954, -137.535, -14.08, 0.66 ) }
    dend_47 { pt3dadd( 77.4939, -138.634, -14.4593, 0.66 ) }
    dend_47 { pt3dadd( 77.8677, -139.607, -14.8721, 0.88 ) }
    dend_47 { pt3dadd( 78.3127, -140.52, -15.309, 0.74 ) }
    dend_47 { pt3dadd( 79.0417, -141.74, -15.922, 0.59 ) }
    dend_47 { pt3dadd( 79.7016, -142.719, -16.3614, 0.59 ) }
    dend_47 { pt3dadd( 80.2493, -143.509, -16.6398, 0.52 ) }
    dend_47 { pt3dadd( 80.7631, -144.272, -16.8289, 0.44 ) }
    dend_47 { pt3dadd( 81.1606, -144.934, -16.9516, 0.59 ) }
    dend_47 { pt3dadd( 81.6621, -145.952, -17.1339, 1.03 ) }
    dend_47 { pt3dadd( 82.189, -147.382, -17.4599, 0.74 ) }
    dend_47 { pt3dadd( 82.5826, -148.697, -17.9079, 0.52 ) }
    dend_47 { pt3dadd( 82.7918, -149.356, -18.2642, 0.37 ) }
    dend_47 { pt3dadd( 83.1926, -150.357, -19.1456, 0.52 ) }
    dend_47 { pt3dadd( 83.6334, -151.083, -20.1272, 0.52 ) }
    dend_47 { pt3dadd( 84.1406, -151.647, -21.2197, 0.66 ) }
    dend_47 { pt3dadd( 84.7382, -152.128, -22.4519, 0.74 ) }
    dend_47 { pt3dadd( 85.3787, -152.562, -23.7236, 0.52 ) }
    dend_47 { pt3dadd( 86.1277, -153.057, -25.178, 0.88 ) }
    dend_47 { pt3dadd( 86.778, -153.516, -26.405, 0.59 ) }
    dend_47 { pt3dadd( 87.1272, -153.811, -27.1086, 0.52 ) }
    dend_47 { pt3dadd( 87.2992, -154.008, -27.5383, 0.52 ) }
    dend_47 { pt3dadd( 87.6286, -154.615, -28.7199, 0.66 ) }
    dend_47 { pt3dadd( 87.8441, -155.135, -29.6676, 0.52 ) }
    dend_47 { pt3dadd( 88.098, -155.602, -30.5505, 0.81 ) }
    dend_47 { pt3dadd( 88.5053, -156.07, -31.5669, 0.66 ) }
    dend_47 { pt3dadd( 89.037, -156.389, -32.4822, 0.81 ) }
    dend_47 { pt3dadd( 89.7659, -156.664, -33.5, 0.59 ) }
    dend_47 { pt3dadd( 90.7909, -156.926, -34.7185, 0.88 ) }
    dend_47 { pt3dadd( 91.8811, -157.201, -35.8354, 0.52 ) }
    dend_47 { pt3dadd( 92.8916, -157.462, -36.7663, 0.88 ) }
    dend_47 { pt3dadd( 94.1639, -157.817, -37.8894, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_47 { pt3dadd( 95.1299, -158.085, -38.739, 0.74 ) }
    dend_47 { pt3dadd( 95.7688, -158.242, -39.3381, 0.52 ) }
    dend_47 { pt3dadd( 97.1087, -158.574, -40.7536, 0.44 ) }
    dend_47 { pt3dadd( 97.7008, -158.749, -41.5026, 0.37 ) }
    dend_47 { pt3dadd( 98.428, -159.005, -42.6259, 0.37 ) }
    dend_47 { pt3dadd( 98.8362, -159.212, -43.3806, 0.29 ) }
    dend_47 { pt3dadd( 99.4165, -159.572, -44.4941, 0.29 ) }
    dend_47 { pt3dadd( 99.7128, -159.809, -45.0484, 0.29 ) }
    dend_47 { pt3dadd( 100.048, -160.145, -45.6198, 0.29 ) }
    dend_47 { pt3dadd( 100.483, -160.746, -46.1459, 0.29 ) }
    dend_47 { pt3dadd( 101.286, -161.977, -46.8025, 0.29 ) }
    dend_47 { pt3dadd( 101.837, -162.771, -47.0971, 0.22 ) }
    dend_47 { pt3dadd( 102.408, -163.602, -47.3308, 0.22 ) }
    dend_47 { pt3dadd( 102.89, -164.279, -47.4851, 0.22 ) }
    dend_47 { pt3dadd( 103.652, -165.332, -47.6698, 0.22 ) }
    dend_47 { pt3dadd( 104.017, -165.822, -47.7352, 0.22 ) }
    dend_47 { pt3dadd( 104.735, -166.63, -47.8558, 0.22 ) }
    dend_47 { pt3dadd( 110.556, -173.473, -51.9606, 0.22 ) }
    dend_47 { pt3dadd( 115.247, -181.673, -54.6597, 0.22 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 19/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 38.0789, -35.9871, -42.661, 0.29 ) }
    dend_36 { pt3dadd( 36.6087, -35.8451, -41.9622, 0.29 ) }
    dend_36 { pt3dadd( 35.1292, -35.6999, -41.1752, 0.22 ) }
    dend_36 { pt3dadd( 34.0153, -35.6094, -40.4615, 0.29 ) }
    dend_36 { pt3dadd( 32.9898, -35.5523, -39.6135, 0.29 ) }
    dend_36 { pt3dadd( 32.5305, -35.5455, -39.1137, 0.29 ) }
    dend_36 { pt3dadd( 32.2745, -35.5537, -38.7238, 0.29 ) }
    dend_36 { pt3dadd( 31.9452, -35.5688, -37.988, 0.29 ) }
    dend_36 { pt3dadd( 31.7676, -35.6339, -37.1602, 0.29 ) }
    dend_36 { pt3dadd( 31.6524, -35.7319, -36.1181, 0.29 ) }
    dend_36 { pt3dadd( 31.6703, -35.859, -35.1991, 0.52 ) }
    dend_36 { pt3dadd( 31.7634, -36.0592, -34.0191, 0.52 ) }
    dend_36 { pt3dadd( 25.8574, -36.2069, -25.9509, 0.52 ) }
    dend_36 { pt3dadd( 18.6513, -36.8318, -19.0472, 0.52 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 33/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 38.0789, -35.9871, -42.661, 0.81 ) }
    dend_33 { pt3dadd( 37.8607, -37.6843, -43.7196, 0.81 ) }
    dend_33 { pt3dadd( 37.702, -38.6533, -44.325, 0.81 ) }
    dend_33 { pt3dadd( 37.5191, -39.7997, -44.9875, 0.81 ) }
    dend_33 { pt3dadd( 37.3437, -40.9316, -45.5979, 0.59 ) }
    dend_33 { pt3dadd( 37.1657, -42.0065, -46.1196, 0.59 ) }
    dend_33 { pt3dadd( 37.0283, -42.9254, -46.5274, 1.18 ) }
    dend_33 { pt3dadd( 36.9597, -43.4459, -46.7127, 1.4 ) }
    dend_33 { pt3dadd( 36.8826, -44.4865, -47.0189, 0.22 ) }
    dend_33 { pt3dadd( 36.8849, -44.9189, -47.1012, 0.22 ) }
    dend_33 { pt3dadd( 36.9638, -46.0406, -47.0931, 0.37 ) }
    dend_33 { pt3dadd( 37.0835, -47.2068, -46.7407, 0.22 ) }
    dend_33 { pt3dadd( 37.1757, -47.9791, -46.2763, 0.22 ) }
    dend_33 { pt3dadd( 37.2315, -49.1071, -45.3337, 0.29 ) }
    dend_33 { pt3dadd( 37.1616, -49.9159, -44.4433, 0.29 ) }
    dend_33 { pt3dadd( 37.076, -50.5481, -43.5976, 0.29 ) }
    dend_33 { pt3dadd( 36.9829, -50.9517, -42.9028, 0.29 ) }
    dend_33 { pt3dadd( 36.8715, -51.2038, -42.3777, 0.29 ) }
    dend_33 { pt3dadd( 36.5865, -51.6296, -41.4703, 0.22 ) }
    dend_33 { pt3dadd( 36.2653, -51.9953, -40.8794, 0.22 ) }
    dend_33 { pt3dadd( 35.731, -61.7284, -41.1262, 0.22 ) }
    dend_33 { pt3dadd( 34.9403, -71.4361, -40.6359, 0.22 ) }
    dend_33 { pt3dadd( 32.602, -80.8829, -39.8266, 0.22 ) }
    dend_33 { pt3dadd( 30.2848, -90.3633, -39.5355, 0.22 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 57/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 67.1679, 100.17, -43.5893, 0.15 ) }
    dend_27 { pt3dadd( 71.2924, 106.894, -49.5418, 0.15 ) }
    dend_27 { pt3dadd( 75.8063, 113.911, -54.8163, 0.15 ) }
    dend_27 { pt3dadd( 78.6911, 120.697, -61.392, 0.15 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 61/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 67.1679, 100.17, -43.5893, 0.15 ) }
    dend_24 { pt3dadd( 70.79, 107.206, -49.4887, 0.15 ) }
    dend_24 { pt3dadd( 74.8076, 114.974, -54.0028, 0.15 ) }
    dend_24 { pt3dadd( 77.8621, 123.098, -58.6131, 0.15 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 65/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 49.7954, 74.9536, 34.0559, 1.18 ) }
    dend_20 { pt3dadd( 50.6599, 74.4566, 34.6956, 1.18 ) }
    dend_20 { pt3dadd( 52.0372, 73.6647, 35.7149, 0.66 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 68/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 49.7954, 74.9536, 34.0559, 0.66 ) }
    dend_17 { pt3dadd( 49.5732, 76.0296, 34.2528, 0.66 ) }
    dend_17 { pt3dadd( 49.5289, 77.1556, 34.4147, 0.29 ) }
    dend_17 { pt3dadd( 49.6004, 77.7636, 34.4812, 0.29 ) }
    dend_17 { pt3dadd( 49.7073, 78.2506, 34.5229, 0.29 ) }
    dend_17 { pt3dadd( 49.8339, 78.7605, 34.5814, 0.66 ) }
    dend_17 { pt3dadd( 49.9811, 79.3596, 34.6573, 0.96 ) }
    dend_17 { pt3dadd( 50.2647, 80.4311, 34.7851, 0.29 ) }
    dend_17 { pt3dadd( 50.5261, 81.4134, 34.8842, 0.52 ) }
    dend_17 { pt3dadd( 50.7223, 82.226, 34.949, 0.22 ) }
    dend_17 { pt3dadd( 50.8995, 83.2683, 35.0085, 0.66 ) }
    dend_17 { pt3dadd( 50.9473, 83.7291, 35.0271, 0.74 ) }
    dend_17 { pt3dadd( 50.9964, 85.1042, 35.0602, 0.52 ) }
    dend_17 { pt3dadd( 50.9855, 85.8392, 35.0897, 0.81 ) }
    dend_17 { pt3dadd( 50.9616, 87.0179, 35.1824, 1.18 ) }
    dend_17 { pt3dadd( 50.9833, 88.5942, 35.3448, 0.37 ) }
    dend_17 { pt3dadd( 51.0194, 89.0894, 35.403, 0.96 ) }
    dend_17 { pt3dadd( 51.1243, 89.853, 35.5458, 1.55 ) }
    dend_17 { pt3dadd( 51.3665, 90.9877, 35.846, 0.66 ) }
    dend_17 { pt3dadd( 51.6465, 92.1094, 36.2489, 0.22 ) }
    dend_17 { pt3dadd( 51.7878, 92.6255, 36.5035, 0.22 ) }
    dend_17 { pt3dadd( 51.9074, 93.0577, 36.7652, 0.96 ) }
    dend_17 { pt3dadd( 52.1373, 93.9805, 37.3857, 1.4 ) }
    dend_17 { pt3dadd( 52.3009, 94.6678, 37.9149, 0.74 ) }
    dend_17 { pt3dadd( 52.5644, 95.8764, 38.8526, 0.52 ) }
    dend_17 { pt3dadd( 52.7526, 96.8272, 39.5402, 0.37 ) }
    dend_17 { pt3dadd( 52.9016, 97.5958, 40.0624, 0.37 ) }
    dend_17 { pt3dadd( 52.9982, 98.0388, 40.3637, 0.66 ) }
    dend_17 { pt3dadd( 53.2253, 98.975, 40.9377, 0.88 ) }
    dend_17 { pt3dadd( 53.6262, 100.622, 41.8321, 0.29 ) }
    dend_17 { pt3dadd( 53.8918, 101.692, 42.2913, 0.96 ) }
    dend_17 { pt3dadd( 54.0045, 102.171, 42.4482, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_17 { pt3dadd( 54.2471, 103.293, 42.7413, 1.7 ) }
    dend_17 { pt3dadd( 54.5378, 104.774, 43.0529, 0.44 ) }
    dend_17 { pt3dadd( 54.6545, 105.499, 43.1811, 0.44 ) }
    dend_17 { pt3dadd( 54.7743, 106.415, 43.3475, 0.29 ) }
    dend_17 { pt3dadd( 54.8326, 107.288, 43.5323, 0.96 ) }
    dend_17 { pt3dadd( 54.8396, 107.948, 43.665, 1.25 ) }
    dend_17 { pt3dadd( 54.7981, 108.856, 43.8274, 1.25 ) }
    dend_17 { pt3dadd( 54.652, 110.29, 44.1134, 0.22 ) }
    dend_17 { pt3dadd( 54.5509, 110.916, 44.2435, 0.96 ) }
    dend_17 { pt3dadd( 54.2005, 112.367, 44.5766, 0.15 ) }
    dend_17 { pt3dadd( 53.918, 113.389, 44.8308, 0.22 ) }
    dend_17 { pt3dadd( 53.6997, 114.179, 45.0258, 0.22 ) }
    dend_17 { pt3dadd( 53.5285, 114.785, 45.1694, 1.03 ) }
    dend_17 { pt3dadd( 53.2298, 115.835, 45.3967, 1.92 ) }
    dend_17 { pt3dadd( 52.8074, 117.376, 45.7281, 1.47 ) }
    dend_17 { pt3dadd( 52.337, 119.191, 46.1169, 0.44 ) }
    dend_17 { pt3dadd( 51.9811, 120.579, 46.4271, 0.22 ) }
    dend_17 { pt3dadd( 51.754, 121.511, 46.6382, 0.22 ) }
    dend_17 { pt3dadd( 51.4461, 122.838, 46.938, 0.29 ) }
    dend_17 { pt3dadd( 51.163, 124.087, 47.2041, 0.22 ) }
    dend_17 { pt3dadd( 50.9294, 124.997, 47.3683, 1.25 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 21/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -78.8988, -87.3913, -35.9476, 0.22 ) }
    dend_9 { pt3dadd( -79.596, -86.2374, -35.1531, 0.22 ) }
    dend_9 { pt3dadd( -80.2166, -85.2103, -34.446, 0.22 ) }
    dend_9 { pt3dadd( -80.8368, -84.1841, -33.7393, 0.22 ) }
    dend_9 { pt3dadd( -81.3563, -83.3243, -33.1474, 0.15 ) }
    dend_9 { pt3dadd( -81.7997, -82.5906, -32.6422, 0.15 ) }
    dend_9 { pt3dadd( -81.9474, -82.3461, -32.4739, 0.15 ) }
    dend_9 { pt3dadd( -86.1032, -74.9682, -27.4274, 0.15 ) }
    dend_9 { pt3dadd( -90.1946, -67.8362, -21.9727, 0.15 ) }
    dend_9 { pt3dadd( -94.7217, -60.6635, -16.9342, 0.15 ) }
    dend_9 { pt3dadd( -99.4855, -53.075, -12.8442, 0.15 ) }
    dend_9 { pt3dadd( -103.583, -45.2928, -8.42809, 0.15 ) }
    dend_9 { pt3dadd( -109.245, -38.2037, -4.54453, 0.15 ) }
    dend_9 { pt3dadd( -115.157, -30.8432, -1.70545, 0.15 ) }
    dend_9 { pt3dadd( -120.769, -23.0525, 0.450886, 0.15 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 36/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -78.8988, -87.3913, -35.9476, 0.29 ) }
    dend_6 { pt3dadd( -79.9031, -86.6527, -36.3121, 0.29 ) }
    dend_6 { pt3dadd( -80.8173, -85.9804, -36.6439, 0.29 ) }
    dend_6 { pt3dadd( -81.8513, -85.2199, -37.0192, 0.15 ) }
    dend_6 { pt3dadd( -89.3573, -79.1184, -39.14, 0.15 ) }
    dend_6 { pt3dadd( -97.1694, -73.0393, -39.4482, 0.15 ) }
    dend_6 { pt3dadd( -105.813, -68.6255, -41.639, 0.15 ) }
    dend_6 { pt3dadd( -115.339, -65.6595, -41.7274, 0.15 ) }
    dend_6 { pt3dadd( -124.111, -61.0868, -42.7537, 0.15 ) }
    dend_6 { pt3dadd( -132.565, -55.951, -43.6393, 0.15 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 46/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -144.901, 52.3494, -36.4876, 0.15 ) }
    dend_61 { pt3dadd( -151.933, 56.2476, -42.3668, 0.15 ) }
    dend_61 { pt3dadd( -158.786, 58.8552, -49.141, 0.15 ) }
    dend_61 { pt3dadd( -165.836, 62.6418, -55.0752, 0.15 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 50/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -144.901, 52.3494, -36.4876, 0.15 ) }
    dend_60 { pt3dadd( -152.782, 54.2001, -42.3435, 0.15 ) }
    dend_60 { pt3dadd( -160.31, 56.5212, -48.4797, 0.15 ) }
    dend_60 { pt3dadd( -167.42, 59.2271, -54.9416, 0.15 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 54/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -132.147, 52.7061, -0.764933, 0.22 ) }
    dend_58 { pt3dadd( -132.733, 51.9205, -1.61229, 0.22 ) }
    dend_58 { pt3dadd( -133.139, 51.6045, -2.14311, 0.22 ) }
    dend_58 { pt3dadd( -133.47, 51.4122, -2.52093, 0.22 ) }
    dend_58 { pt3dadd( -133.895, 51.1882, -2.9909, 0.22 ) }
    dend_58 { pt3dadd( -134.274, 50.9819, -3.4013, 0.74 ) }
    dend_58 { pt3dadd( -135.159, 50.4448, -4.38555, 0.29 ) }
    dend_58 { pt3dadd( -135.835, 50.0481, -5.12953, 0.29 ) }
    dend_58 { pt3dadd( -136.402, 49.7319, -5.73853, 0.22 ) }
    dend_58 { pt3dadd( -136.996, 49.3981, -6.33404, 0.59 ) }
    dend_58 { pt3dadd( -137.579, 49.0447, -6.91357, 0.66 ) }
    dend_58 { pt3dadd( -138.105, 48.6569, -7.4909, 0.22 ) }
    dend_58 { pt3dadd( -138.671, 48.0933, -8.22778, 0.22 ) }
    dend_58 { pt3dadd( -138.861, 47.8471, -8.52565, 0.22 ) }
    dend_58 { pt3dadd( -139.076, 47.4745, -8.97899, 0.22 ) }
    dend_58 { pt3dadd( -139.294, 46.9303, -9.62168, 0.22 ) }
    dend_58 { pt3dadd( -139.407, 46.2328, -10.4629, 0.44 ) }
    dend_58 { pt3dadd( -139.359, 45.6503, -11.1406, 0.88 ) }
    dend_58 { pt3dadd( -139.217, 45.1767, -11.6515, 0.96 ) }
    dend_58 { pt3dadd( -138.952, 44.5325, -12.2797, 0.52 ) }
    dend_58 { pt3dadd( -138.725, 44.0885, -12.6703, 0.15 ) }
    dend_58 { pt3dadd( -138.244, 43.2949, -13.2678, 0.44 ) }
    dend_58 { pt3dadd( -137.941, 42.8584, -13.5789, 0.44 ) }
    dend_58 { pt3dadd( -137.745, 42.6078, -13.7655, 0.22 ) }
    dend_58 { pt3dadd( -137.496, 42.317, -14.0231, 0.22 ) }
    dend_58 { pt3dadd( -137.3, 42.0994, -14.2472, 0.22 ) }
    dend_58 { pt3dadd( -136.873, 41.5719, -14.8593, 0.29 ) }
    dend_58 { pt3dadd( -136.532, 41.0658, -15.4769, 0.29 ) }
    dend_58 { pt3dadd( -136.247, 40.5618, -16.0824, 0.29 ) }
    dend_58 { pt3dadd( -135.974, 39.9571, -16.784, 0.66 ) }
    dend_58 { pt3dadd( -135.725, 39.2414, -17.6141, 0.81 ) }
    dend_58 { pt3dadd( -135.517, 38.464, -18.4839, 0.59 ) }
    dend_58 { pt3dadd( -135.384, 37.8384, -19.1148, 0.59 ) }
    dend_58 { pt3dadd( -135.249, 37.1629, -19.7302, 0.81 ) }
    dend_58 { pt3dadd( -135.072, 36.1562, -20.5724, 0.29 ) }
    dend_58 { pt3dadd( -134.945, 35.2861, -21.2221, 0.29 ) }
    dend_58 { pt3dadd( -134.881, 34.6359, -21.6441, 0.66 ) }
    dend_58 { pt3dadd( -134.819, 33.7061, -22.1417, 0.29 ) }
    dend_58 { pt3dadd( -134.761, 32.5172, -22.656, 0.22 ) }
    dend_58 { pt3dadd( -134.76, 32.0248, -22.8243, 0.22 ) }
    dend_58 { pt3dadd( -134.835, 31.2789, -22.9881, 0.22 ) }
    dend_58 { pt3dadd( -135.06, 30.249, -23.0892, 0.29 ) }
    dend_58 { pt3dadd( -135.423, 29.1959, -23.082, 0.22 ) }
    dend_58 { pt3dadd( -135.736, 28.4707, -22.9909, 0.22 ) }
    dend_58 { pt3dadd( -136.021, 27.823, -22.8527, 0.22 ) }
    dend_58 { pt3dadd( -136.312, 27.0474, -22.6616, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_58 { pt3dadd( -136.63, 26.1535, -22.4039, 0.29 ) }
    dend_58 { pt3dadd( -136.888, 25.4201, -22.1464, 0.22 ) }
    dend_58 { pt3dadd( -137.155, 24.6632, -21.8251, 0.22 ) }
    dend_58 { pt3dadd( -137.438, 23.786, -21.4048, 0.37 ) }
    dend_58 { pt3dadd( -137.52, 23.2828, -21.1537, 0.22 ) }
    dend_58 { pt3dadd( -139.839, 14.7341, -25.3668, 0.22 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 6/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -132.147, 52.7061, -0.764933, 0.15 ) }
    dend_57 { pt3dadd( -133.504, 52.4714, -0.630012, 0.15 ) }
    dend_57 { pt3dadd( -134.072, 52.3633, -0.567232, 0.15 ) }
    dend_57 { pt3dadd( -134.841, 52.1969, -0.481184, 0.15 ) }
    dend_57 { pt3dadd( -135.92, 51.9633, -0.36038, 0.22 ) }
    dend_57 { pt3dadd( -136.579, 51.8205, -0.286535, 0.15 ) }
    dend_57 { pt3dadd( -137.545, 51.6112, -0.178287, 0.15 ) }
    dend_57 { pt3dadd( -138.047, 51.4748, -0.118512, 0.37 ) }
    dend_57 { pt3dadd( -138.609, 51.3162, -0.0404338, 0.37 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 15/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 100.432, -167.007, -20.5212, 0.29 ) }
    dend_50 { pt3dadd( 101.085, -166.26, -20.8337, 0.29 ) }
    dend_50 { pt3dadd( 101.81, -165.434, -21.1807, 0.29 ) }
    dend_50 { pt3dadd( 102.703, -164.414, -21.6074, 0.15 ) }
    dend_50 { pt3dadd( 103.376, -163.646, -21.9294, 0.15 ) }
    dend_50 { pt3dadd( 103.86, -163.094, -22.1608, 0.22 ) }
    dend_50 { pt3dadd( 104.186, -162.721, -22.317, 0.22 ) }
    dend_50 { pt3dadd( 109.836, -154.731, -23.2798, 0.22 ) }
    dend_50 { pt3dadd( 116.803, -147.762, -23.8796, 0.22 ) }
    dend_50 { pt3dadd( 122.93, -140.348, -26.0309, 0.22 ) }
    dend_50 { pt3dadd( 130.353, -134.312, -28.5979, 0.22 ) }
    dend_50 { pt3dadd( 138.078, -128.242, -29.8463, 0.22 ) }
    dend_50 { pt3dadd( 145.326, -121.525, -29.8484, 0.22 ) }
    dend_50 { pt3dadd( 153.178, -115.511, -29.3011, 0.22 ) }
    dend_50 { pt3dadd( 160.866, -109.719, -26.9319, 0.22 ) }
    dend_50 { pt3dadd( 167.671, -102.988, -24.4744, 0.22 ) }
    dend_50 { pt3dadd( 174.842, -97.248, -20.7447, 0.22 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 32/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 100.432, -167.007, -20.5212, 0.81 ) }
    dend_49 { pt3dadd( 101.395, -167.449, -20.5236, 0.81 ) }
    dend_49 { pt3dadd( 102.371, -167.934, -20.592, 0.81 ) }
    dend_49 { pt3dadd( 103.665, -168.63, -20.7202, 0.74 ) }
    dend_49 { pt3dadd( 104.821, -169.317, -20.8491, 0.52 ) }
    dend_49 { pt3dadd( 105.919, -170.1, -21.0148, 1.03 ) }
    dend_49 { pt3dadd( 106.818, -170.865, -21.2134, 0.74 ) }
    dend_49 { pt3dadd( 107.537, -171.671, -21.503, 0.59 ) }
    dend_49 { pt3dadd( 108.216, -172.691, -21.9081, 0.44 ) }
    dend_49 { pt3dadd( 108.632, -173.516, -22.2477, 0.52 ) }
    dend_49 { pt3dadd( 109.237, -175.016, -22.8071, 0.44 ) }
    dend_49 { pt3dadd( 109.685, -176.255, -23.2092, 0.88 ) }
    dend_49 { pt3dadd( 110.203, -177.729, -23.639, 0.66 ) }
    dend_49 { pt3dadd( 110.504, -178.572, -23.8583, 0.66 ) }
    dend_49 { pt3dadd( 110.896, -179.591, -24.129, 0.81 ) }
    dend_49 { pt3dadd( 111.25, -180.38, -24.3479, 0.66 ) }
    dend_49 { pt3dadd( 111.734, -181.255, -24.614, 0.96 ) }
    dend_49 { pt3dadd( 112.297, -182.169, -24.9512, 0.44 ) }
    dend_49 { pt3dadd( 113.038, -183.273, -25.4874, 0.66 ) }
    dend_49 { pt3dadd( 113.534, -183.977, -25.9065, 0.74 ) }
    dend_49 { pt3dadd( 114.16, -184.826, -26.5049, 0.52 ) }
    dend_49 { pt3dadd( 114.868, -185.74, -27.2403, 0.74 ) }
    dend_49 { pt3dadd( 115.549, -186.598, -27.9736, 0.88 ) }
    dend_49 { pt3dadd( 116.378, -187.587, -28.8539, 0.44 ) }
    dend_49 { pt3dadd( 116.753, -187.993, -29.2238, 0.66 ) }
    dend_49 { pt3dadd( 117.45, -188.665, -29.8523, 0.52 ) }
    dend_49 { pt3dadd( 118.244, -189.309, -30.4972, 0.59 ) }
    dend_49 { pt3dadd( 118.852, -189.749, -30.9321, 0.66 ) }
    dend_49 { pt3dadd( 119.656, -190.286, -31.4399, 0.66 ) }
    dend_49 { pt3dadd( 120.311, -190.74, -31.8592, 0.74 ) }
    dend_49 { pt3dadd( 121.257, -191.471, -32.4928, 0.44 ) }
    dend_49 { pt3dadd( 122.11, -192.268, -33.1033, 0.37 ) }
    dend_49 { pt3dadd( 122.847, -193.202, -33.7227, 0.37 ) }
    dend_49 { pt3dadd( 123.004, -193.923, -34.0644, 0.74 ) }
    dend_49 { pt3dadd( 122.523, -194.876, -34.2837, 0.81 ) }
    dend_49 { pt3dadd( 121.955, -195.658, -34.3637, 0.59 ) }
    dend_49 { pt3dadd( 120.925, -196.921, -34.3619, 0.22 ) }
    dend_49 { pt3dadd( 119.916, -198.121, -34.2764, 0.22 ) }
    dend_49 { pt3dadd( 119.023, -199.225, -34.1326, 0.22 ) }
    dend_49 { pt3dadd( 118.085, -200.546, -33.8726, 0.22 ) }
    dend_49 { pt3dadd( 117.508, -201.617, -33.564, 0.22 ) }
    dend_49 { pt3dadd( 117.125, -202.553, -33.2576, 0.22 ) }
    dend_49 { pt3dadd( 116.908, -203.707, -32.8243, 0.22 ) }
    dend_49 { pt3dadd( 116.96, -204.876, -32.3382, 0.22 ) }
    dend_49 { pt3dadd( 117.155, -205.585, -32.0093, 0.44 ) }
    dend_49 { pt3dadd( 117.536, -206.312, -31.6478, 0.59 ) }
    dend_49 { pt3dadd( 122.319, -214.803, -32.7819, 0.59 ) }
    dend_49 { pt3dadd( 125.894, -223.908, -32.837, 0.59 ) }
    dend_49 { pt3dadd( 129.62, -232.945, -32.3762, 0.59 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 81/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 30.2848, -90.3633, -39.5355, 0.15 ) }
    dend_35 { pt3dadd( 28.1862, -99.8956, -39.6418, 0.15 ) }
    dend_35 { pt3dadd( 25.6675, -109.246, -40.9332, 0.15 ) }
    dend_35 { pt3dadd( 21.4848, -118.101, -41.1184, 0.15 ) }
    dend_35 { pt3dadd( 18.4182, -127.364, -41.685, 0.15 ) }
    dend_35 { pt3dadd( 15.4311, -136.622, -42.6486, 0.15 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 87/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 30.2848, -90.3633, -39.5355, 0.15 ) }
    dend_34 { pt3dadd( 29.8628, -100.007, -38.1233, 0.15 ) }
    dend_34 { pt3dadd( 29.8797, -109.581, -36.2345, 0.15 ) }
    dend_34 { pt3dadd( 28.6558, -119.248, -35.7889, 0.15 ) }
    dend_34 { pt3dadd( 29.0747, -128.984, -35.4656, 0.15 ) }
    dend_34 { pt3dadd( 30.6474, -138.609, -35.7424, 0.15 ) }
    dend_34 { pt3dadd( 33.4488, -147.917, -34.7399, 0.15 ) }
    dend_34 { pt3dadd( 34.3295, -157.426, -32.7125, 0.15 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 95/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 78.6911, 120.697, -61.392, 0.15 ) }
    dend_29 { pt3dadd( 83.2449, 127.031, -67.4794, 0.15 ) }
    dend_29 { pt3dadd( 87.2744, 132.723, -74.5284, 0.15 ) }
    dend_29 { pt3dadd( 90.742, 138.766, -81.5677, 0.15 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 99/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 78.6911, 120.697, -61.392, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_28 { pt3dadd( 81.5305, 128.216, -67.0906, 0.15 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 1/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 77.8621, 123.098, -58.6131, 0.15 ) }
    dend_26 { pt3dadd( 76.0341, 132.081, -62.0428, 0.15 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 3/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 77.8621, 123.098, -58.6131, 0.15 ) }
    dend_25 { pt3dadd( 85.5152, 127.08, -63.5882, 0.15 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 5/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 52.0372, 73.6647, 35.7149, 0.29 ) }
    dend_22 { pt3dadd( 51.9894, 72.7012, 36.5646, 0.29 ) }
    dend_22 { pt3dadd( 52.0006, 71.9927, 37.1768, 0.52 ) }
    dend_22 { pt3dadd( 51.9953, 71.2174, 37.8103, 0.22 ) }
    dend_22 { pt3dadd( 51.9825, 70.5988, 38.2876, 0.22 ) }
    dend_22 { pt3dadd( 51.9645, 69.9984, 38.7339, 0.44 ) }
    dend_22 { pt3dadd( 51.9379, 69.036, 39.4442, 0.88 ) }
    dend_22 { pt3dadd( 51.9248, 68.5055, 39.8451, 0.88 ) }
    dend_22 { pt3dadd( 51.8382, 67.1905, 40.8335, 0.22 ) }
    dend_22 { pt3dadd( 51.705, 66.3426, 41.4591, 1.11 ) }
    dend_22 { pt3dadd( 51.4771, 65.441, 42.1182, 0.88 ) }
    dend_22 { pt3dadd( 51.0992, 64.3089, 42.9236, 0.22 ) }
    dend_22 { pt3dadd( 50.9514, 63.9197, 43.2156, 0.22 ) }
    dend_22 { pt3dadd( 50.6857, 63.2179, 43.8093, 0.29 ) }
    dend_22 { pt3dadd( 50.3464, 62.3359, 44.6888, 0.22 ) }
    dend_22 { pt3dadd( 50.1429, 61.8634, 45.2414, 0.74 ) }
    dend_22 { pt3dadd( 49.7899, 61.1798, 46.1735, 1.11 ) }
    dend_22 { pt3dadd( 48.98, 59.8846, 48.1284, 0.22 ) }
    dend_22 { pt3dadd( 48.5504, 59.2673, 49.1871, 0.44 ) }
    dend_22 { pt3dadd( 47.9662, 58.477, 50.7457, 0.96 ) }
    dend_22 { pt3dadd( 47.5356, 57.9717, 51.8917, 1.55 ) }
    dend_22 { pt3dadd( 47.0314, 57.423, 53.2487, 0.74 ) }
    dend_22 { pt3dadd( 46.72, 57.0782, 54.1703, 0.29 ) }
    dend_22 { pt3dadd( 46.2384, 56.5206, 55.8163, 0.29 ) }
    dend_22 { pt3dadd( 45.8477, 56.0152, 57.4917, 0.59 ) }
    dend_22 { pt3dadd( 45.5717, 55.6245, 59.1739, 0.59 ) }
    dend_22 { pt3dadd( 45.4134, 55.4206, 60.3719, 0.59 ) }
    dend_22 { pt3dadd( 45.2497, 55.2802, 61.7473, 0.81 ) }
    dend_22 { pt3dadd( 45.0807, 55.2615, 63.1359, 0.81 ) }
    dend_22 { pt3dadd( 44.8629, 55.3892, 64.7524, 0.96 ) }
    dend_22 { pt3dadd( 44.5724, 55.713, 66.9549, 0.74 ) }
    dend_22 { pt3dadd( 44.4095, 55.9997, 68.4198, 0.96 ) }
    dend_22 { pt3dadd( 44.3106, 56.2593, 69.6362, 0.96 ) }
    dend_22 { pt3dadd( 44.2314, 56.6314, 71.4217, 0.66 ) }
    dend_22 { pt3dadd( 44.2861, 56.8741, 72.6851, 0.66 ) }
    dend_22 { pt3dadd( 44.4647, 57.0631, 73.7091, 0.66 ) }
    dend_22 { pt3dadd( 44.6404, 57.1886, 74.2941, 0.66 ) }
    dend_22 { pt3dadd( 45.1393, 57.5615, 75.7431, 1.11 ) }
    dend_22 { pt3dadd( 45.3742, 57.8253, 76.5712, 1.11 ) }
    dend_22 { pt3dadd( 45.5785, 58.1828, 77.5391, 0.29 ) }
    dend_22 { pt3dadd( 45.736, 58.6068, 78.5203, 0.29 ) }
    dend_22 { pt3dadd( 45.8737, 59.0599, 79.5157, 0.59 ) }
    dend_22 { pt3dadd( 46.0732, 59.6459, 80.8096, 0.88 ) }
    dend_22 { pt3dadd( 46.4675, 60.5765, 82.9754, 0.22 ) }
    dend_22 { pt3dadd( 46.6972, 61.0099, 84.0871, 0.22 ) }
    dend_22 { pt3dadd( 46.9575, 61.4113, 85.1603, 1.18 ) }
    dend_22 { pt3dadd( 47.3482, 61.9338, 86.4953, 1.55 ) }
    dend_22 { pt3dadd( 47.7421, 62.4253, 87.7041, 0.81 ) }
    dend_22 { pt3dadd( 48.3576, 63.2012, 89.5903, 0.37 ) }
    dend_22 { pt3dadd( 49.0885, 64.1339, 92.0308, 0.74 ) }
    dend_22 { pt3dadd( 49.457, 64.6008, 93.3748, 0.44 ) }
    dend_22 { pt3dadd( 49.7424, 64.9366, 94.5051, 0.44 ) }
    dend_22 { pt3dadd( 49.9358, 65.1186, 95.2911, 0.44 ) }
    dend_22 { pt3dadd( 50.169, 65.2755, 96.3205, 0.74 ) }
    dend_22 { pt3dadd( 50.4735, 65.3792, 97.721, 0.74 ) }
    dend_22 { pt3dadd( 50.9145, 65.3961, 100.078, 0.44 ) }
    dend_22 { pt3dadd( 51.1935, 65.3713, 101.757, 0.74 ) }
    dend_22 { pt3dadd( 51.4566, 65.3642, 103.822, 0.52 ) }
    dend_22 { pt3dadd( 51.5166, 65.4234, 105.007, 0.52 ) }
    dend_22 { pt3dadd( 51.4747, 65.4769, 105.615, 0.52 ) }
    dend_22 { pt3dadd( 51.0862, 65.62, 107.063, 0.52 ) }
    dend_22 { pt3dadd( 50.7544, 65.6919, 107.784, 0.52 ) }
    dend_22 { pt3dadd( 49.7682, 65.8947, 109.451, 1.11 ) }
    dend_22 { pt3dadd( 48.3372, 66.2159, 111.461, 0.44 ) }
    dend_22 { pt3dadd( 47.2387, 66.4739, 112.867, 1.18 ) }
    dend_22 { pt3dadd( 45.8959, 66.8007, 114.531, 0.22 ) }
    dend_22 { pt3dadd( 45.2094, 66.9621, 115.337, 0.22 ) }
    dend_22 { pt3dadd( 44.5858, 67.087, 116.044, 0.81 ) }
    dend_22 { pt3dadd( 43.5143, 67.2916, 117.225, 1.47 ) }
    dend_22 { pt3dadd( 42.6821, 67.4698, 118.128, 0.66 ) }
    dend_22 { pt3dadd( 41.5147, 67.7899, 119.422, 0.22 ) }
    dend_22 { pt3dadd( 40.8195, 68.0054, 120.225, 0.59 ) }
    dend_22 { pt3dadd( 39.0534, 68.4748, 122.325, 0.07 ) }
    dend_22 { pt3dadd( 38.3115, 68.6199, 123.251, 0.74 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 79/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 52.0372, 73.6647, 35.7149, 0.29 ) }
    dend_21 { pt3dadd( 52.7567, 73.0173, 35.8891, 0.29 ) }
    dend_21 { pt3dadd( 53.6472, 72.3636, 36.0778, 0.81 ) }
    dend_21 { pt3dadd( 54.1769, 72.0689, 36.1927, 0.52 ) }
    dend_21 { pt3dadd( 54.8771, 71.7291, 36.3469, 0.81 ) }
    dend_21 { pt3dadd( 56.3041, 71.0973, 36.7, 0.37 ) }
    dend_21 { pt3dadd( 57.1679, 70.7329, 36.9702, 0.22 ) }
    dend_21 { pt3dadd( 57.8482, 70.4795, 37.2544, 0.22 ) }
    dend_21 { pt3dadd( 59.1296, 70.0488, 37.8836, 0.22 ) }
    dend_21 { pt3dadd( 59.6376, 69.9001, 38.1296, 0.88 ) }
    dend_21 { pt3dadd( 60.3492, 69.7354, 38.4788, 0.74 ) }
    dend_21 { pt3dadd( 61.5433, 69.5154, 39.0886, 0.52 ) }
    dend_21 { pt3dadd( 62.7128, 69.3199, 39.6284, 1.25 ) }
    dend_21 { pt3dadd( 63.4572, 69.2142, 39.913, 1.62 ) }
    dend_21 { pt3dadd( 65.1468, 69.0997, 40.3359, 0.22 ) }
    dend_21 { pt3dadd( 65.9283, 69.1247, 40.4308, 0.15 ) }
    dend_21 { pt3dadd( 66.5569, 69.2128, 40.4326, 0.37 ) }
    dend_21 { pt3dadd( 67.8444, 69.5287, 40.331, 0.22 ) }
    dend_21 { pt3dadd( 68.4774, 69.7402, 40.2611, 0.29 ) }
    dend_21 { pt3dadd( 69.4058, 70.1044, 40.1852, 0.59 ) }
    dend_21 { pt3dadd( 70.525, 70.562, 40.142, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_21 { pt3dadd( 71.8552, 71.0621, 40.1601, 0.15 ) }
    dend_21 { pt3dadd( 72.5373, 71.3189, 40.2417, 0.15 ) }
    dend_21 { pt3dadd( 73.223, 71.5811, 40.4344, 0.15 ) }
    dend_21 { pt3dadd( 74.0394, 71.8712, 40.7857, 0.59 ) }
    dend_21 { pt3dadd( 74.5996, 72.0586, 41.1117, 0.59 ) }
    dend_21 { pt3dadd( 75.7935, 72.4351, 41.9207, 0.22 ) }
    dend_21 { pt3dadd( 76.9499, 72.7491, 42.7727, 0.44 ) }
    dend_21 { pt3dadd( 78.0401, 73.0239, 43.6015, 0.96 ) }
    dend_21 { pt3dadd( 78.894, 73.2409, 44.2552, 1.25 ) }
    dend_21 { pt3dadd( 80.5552, 73.643, 45.4676, 0.22 ) }
    dend_21 { pt3dadd( 81.4455, 73.8512, 46.0748, 0.22 ) }
    dend_21 { pt3dadd( 82.2638, 74.0377, 46.5562, 0.22 ) }
    dend_21 { pt3dadd( 82.9147, 74.163, 46.8637, 0.22 ) }
    dend_21 { pt3dadd( 83.8788, 74.3082, 47.2436, 0.74 ) }
    dend_21 { pt3dadd( 85.0202, 74.4248, 47.6607, 0.22 ) }
    dend_21 { pt3dadd( 85.6175, 74.4441, 47.9291, 0.22 ) }
    dend_21 { pt3dadd( 86.2874, 74.4382, 48.4283, 0.22 ) }
    dend_21 { pt3dadd( 86.9802, 74.4262, 49.135, 0.22 ) }
    dend_21 { pt3dadd( 87.2946, 74.4129, 49.5342, 0.88 ) }
    dend_21 { pt3dadd( 87.7972, 74.3912, 50.2813, 0.96 ) }
    dend_21 { pt3dadd( 89.1312, 74.384, 52.4772, 0.29 ) }
    dend_21 { pt3dadd( 90.4601, 74.3927, 54.7331, 0.52 ) }
    dend_21 { pt3dadd( 90.8708, 74.3986, 55.4463, 0.96 ) }
    dend_21 { pt3dadd( 91.3058, 74.4118, 56.2004, 0.66 ) }
    dend_21 { pt3dadd( 91.925, 74.435, 57.2324, 0.22 ) }
    dend_21 { pt3dadd( 92.2192, 74.4461, 57.6921, 0.22 ) }
    dend_21 { pt3dadd( 92.5752, 74.4469, 58.1828, 0.22 ) }
    dend_21 { pt3dadd( 92.7688, 74.4297, 58.4525, 0.66 ) }
    dend_21 { pt3dadd( 93.4221, 74.3511, 59.4177, 0.96 ) }
    dend_21 { pt3dadd( 94.8988, 74.1485, 61.6342, 0.22 ) }
    dend_21 { pt3dadd( 95.6874, 74.024, 62.7914, 0.81 ) }
    dend_21 { pt3dadd( 96.3032, 73.9127, 63.6368, 1.11 ) }
    dend_21 { pt3dadd( 97.6378, 73.6639, 65.3054, 0.15 ) }
    dend_21 { pt3dadd( 98.5567, 73.5164, 66.3075, 0.22 ) }
    dend_21 { pt3dadd( 99.1434, 73.4399, 66.8459, 0.81 ) }
    dend_21 { pt3dadd( 99.8235, 73.363, 67.3411, 0.88 ) }
    dend_21 { pt3dadd( 100.748, 73.3111, 67.921, 0.37 ) }
    dend_21 { pt3dadd( 102.266, 73.3457, 68.7615, 0.22 ) }
    dend_21 { pt3dadd( 103.8, 73.5017, 69.549, 0.22 ) }
    dend_21 { pt3dadd( 104.414, 73.6114, 69.8801, 0.88 ) }
    dend_21 { pt3dadd( 105.085, 73.8068, 70.3072, 1.33 ) }
    dend_21 { pt3dadd( 106.508, 74.4522, 71.4775, 0.15 ) }
    dend_21 { pt3dadd( 107.076, 74.8346, 72.1119, 0.44 ) }
    dend_21 { pt3dadd( 107.816, 75.4588, 73.1701, 0.22 ) }
    dend_21 { pt3dadd( 108.211, 75.8249, 73.8538, 0.37 ) }
    dend_21 { pt3dadd( 108.781, 76.3817, 75.1299, 0.37 ) }
    dend_21 { pt3dadd( 109.233, 76.8789, 76.5795, 0.74 ) }
    dend_21 { pt3dadd( 109.67, 77.4184, 78.6378, 0.44 ) }
    dend_21 { pt3dadd( 109.878, 77.6645, 79.8236, 0.44 ) }
    dend_21 { pt3dadd( 109.951, 77.7467, 80.3079, 0.44 ) }
    dend_21 { pt3dadd( 110.212, 77.9954, 82.1406, 0.66 ) }
    dend_21 { pt3dadd( 110.408, 78.1313, 83.4913, 0.66 ) }
    dend_21 { pt3dadd( 110.601, 78.2257, 85.0207, 0.52 ) }
    dend_21 { pt3dadd( 110.665, 78.3105, 86.5197, 1.03 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 54/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 50.9294, 124.997, 47.3683, 0.07 ) }
    dend_19 { pt3dadd( 49.7365, 125.45, 47.4688, 0.07 ) }
    dend_19 { pt3dadd( 48.8114, 125.847, 47.4582, 0.29 ) }
    dend_19 { pt3dadd( 47.8446, 126.346, 47.3863, 0.07 ) }
    dend_19 { pt3dadd( 47.3829, 126.585, 47.352, 0.37 ) }
    dend_19 { pt3dadd( 45.9221, 127.339, 47.2434, 0.07 ) }
    dend_19 { pt3dadd( 44.9897, 127.82, 47.1741, 0.07 ) }
    dend_19 { pt3dadd( 43.9575, 128.414, 47.0365, 0.59 ) }
    dend_19 { pt3dadd( 42.8624, 129.121, 46.7912, 0.07 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 63/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 50.9294, 124.997, 47.3683, 0.29 ) }
    dend_18 { pt3dadd( 51.1969, 126.221, 47.7318, 0.29 ) }
    dend_18 { pt3dadd( 51.5454, 127.414, 48.0824, 0.44 ) }
    dend_18 { pt3dadd( 51.8593, 128.478, 48.2845, 0.22 ) }
    dend_18 { pt3dadd( 52.0825, 129.289, 48.351, 0.29 ) }
    dend_18 { pt3dadd( 52.3365, 130.263, 48.368, 0.66 ) }
    dend_18 { pt3dadd( 52.6427, 131.502, 48.3324, 1.11 ) }
    dend_18 { pt3dadd( 52.9369, 132.646, 48.2199, 0.22 ) }
    dend_18 { pt3dadd( 53.3636, 134.237, 47.9623, 0.22 ) }
    dend_18 { pt3dadd( 53.6788, 135.431, 47.7785, 0.88 ) }
    dend_18 { pt3dadd( 53.9833, 136.661, 47.6424, 0.29 ) }
    dend_18 { pt3dadd( 54.1151, 137.19, 47.6241, 0.74 ) }
    dend_18 { pt3dadd( 54.3412, 138.06, 47.6969, 1.33 ) }
    dend_18 { pt3dadd( 54.5518, 138.683, 47.882, 0.88 ) }
    dend_18 { pt3dadd( 55.2559, 140.367, 48.8577, 0.22 ) }
    dend_18 { pt3dadd( 55.5482, 141.001, 49.3794, 0.29 ) }
    dend_18 { pt3dadd( 55.8029, 141.53, 49.9106, 0.29 ) }
    dend_18 { pt3dadd( 56.092, 142.126, 50.5933, 0.81 ) }
    dend_18 { pt3dadd( 56.3177, 142.634, 51.247, 1.33 ) }
    dend_18 { pt3dadd( 56.6063, 143.521, 52.4333, 0.15 ) }
    dend_18 { pt3dadd( 56.7479, 144.249, 53.3424, 0.15 ) }
    dend_18 { pt3dadd( 56.8042, 144.724, 53.8909, 0.74 ) }
    dend_18 { pt3dadd( 56.8545, 145.51, 54.6952, 1.18 ) }
    dend_18 { pt3dadd( 56.8656, 146.877, 55.8677, 0.22 ) }
    dend_18 { pt3dadd( 56.8143, 148.197, 56.7816, 0.59 ) }
    dend_18 { pt3dadd( 56.7946, 149.449, 57.4244, 0.29 ) }
    dend_18 { pt3dadd( 56.8026, 150.124, 57.6875, 1.25 ) }
    dend_18 { pt3dadd( 56.8302, 150.911, 57.9255, 1.84 ) }
    dend_18 { pt3dadd( 56.9415, 152.506, 58.3023, 0.37 ) }
    dend_18 { pt3dadd( 57.0641, 153.688, 58.5558, 0.96 ) }
    dend_18 { pt3dadd( 57.285, 155.245, 58.8554, 0.22 ) }
    dend_18 { pt3dadd( 57.4678, 156.352, 59.0901, 0.52 ) }
    dend_18 { pt3dadd( 57.5698, 156.92, 59.2302, 0.52 ) }
    dend_18 { pt3dadd( 57.8475, 158.325, 59.652, 0.15 ) }
    dend_18 { pt3dadd( 58.1153, 159.424, 60.0962, 0.44 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 98/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -132.565, -55.951, -43.6393, 0.15 ) }
    dend_8 { pt3dadd( -140.964, -50.9302, -45.3514, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_8 { pt3dadd( -148.49, -44.783, -47.2505, 0.15 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 1/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -132.565, -55.951, -43.6393, 0.15 ) }
    dend_7 { pt3dadd( -141.183, -51.036, -44.1924, 0.15 ) }
    dend_7 { pt3dadd( -148.447, -44.3406, -43.8905, 0.15 ) }
    dend_7 { pt3dadd( -154.937, -36.9283, -44.1637, 0.15 ) }
    dend_7 { pt3dadd( -161.644, -29.717, -44.7222, 0.15 ) }
    dend_7 { pt3dadd( -167.779, -22.1995, -46.4285, 0.15 ) }
    dend_7 { pt3dadd( -173.109, -14.0383, -47.6662, 0.15 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_52, dend_41, dend_30, dend_11, dend_0, dend_62, dend_53, dend_45, dend_42, dend_38, dend_31, dend_15, dend_12, dend_4, dend_1, dend_64, dend_63, dend_55, dend_54, dend_51, dend_46, dend_44, dend_43, dend_40, dend_39, dend_37, dend_32, dend_23, dend_16, dend_14, dend_13, dend_10, dend_5, dend_3, dend_2, dend_59, dend_56, dend_48, dend_47, dend_36, dend_33, dend_27, dend_24, dend_20, dend_17, dend_9, dend_6, dend_61, dend_60, dend_58, dend_57, dend_50, dend_49, dend_35, dend_34, dend_29, dend_28, dend_26, dend_25, dend_22, dend_21, dend_19, dend_18, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_52 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_52, dend_41, dend_30, dend_11, dend_0, dend_62, dend_53, dend_45, dend_42, dend_38, dend_31, dend_15, dend_12, dend_4, dend_1, dend_64, dend_63, dend_55, dend_54, dend_51, dend_46, dend_44, dend_43, dend_40, dend_39, dend_37, dend_32, dend_23, dend_16, dend_14, dend_13, dend_10, dend_5, dend_3, dend_2, dend_59, dend_56, dend_48, dend_47, dend_36, dend_33, dend_27, dend_24, dend_20, dend_17, dend_9, dend_6, dend_61, dend_60, dend_58, dend_57, dend_50, dend_49, dend_35, dend_34, dend_29, dend_28, dend_26, dend_25, dend_22, dend_21, dend_19, dend_18, dend_8, dend_7]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_30 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_62 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_42 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_38 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_64 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_63 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_55 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_54 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_51 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_46 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_44 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_43 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_39 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_37 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_23 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_16 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_14 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_13 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_10 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_5 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_3 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_2 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_59 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_56 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_48 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_47 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_33 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_17 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_9 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_6 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_58 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_50 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_49 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_35 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_34 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_22 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_21 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_7 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_41 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_52 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_11 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_12 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_45 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_15 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_53 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_31 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_32 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_4 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_36 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_20 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_19 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_40 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_24 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_27 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_57 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_26 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_28 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_25 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_18 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_29 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_8 OneSecGrp_SectionRef_67.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_61 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_60 OneSecGrp_SectionRef_52.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_28, dend_26, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    axon_0 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_18 all.append()
    dend_18 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_30 nseg = 3
    dend_0 nseg = 3
    dend_62 nseg = 5
    dend_42 nseg = 5
    dend_38 nseg = 5
    dend_64 nseg = 3
    dend_63 nseg = 9
    dend_55 nseg = 3
    dend_54 nseg = 9
    dend_51 nseg = 13
    dend_46 nseg = 3
    dend_44 nseg = 7
    dend_43 nseg = 9
    dend_39 nseg = 7
    dend_37 nseg = 9
    dend_23 nseg = 5
    dend_16 nseg = 3
    dend_14 nseg = 13
    dend_13 nseg = 13
    dend_10 nseg = 5
    dend_5 nseg = 3
    dend_3 nseg = 15
    dend_2 nseg = 3
    dend_59 nseg = 5
    dend_56 nseg = 3
    dend_48 nseg = 7
    dend_47 nseg = 9
    dend_33 nseg = 3
    dend_17 nseg = 3
    dend_9 nseg = 5
    dend_6 nseg = 3
    dend_58 nseg = 3
    dend_50 nseg = 5
    dend_49 nseg = 5
    dend_35 nseg = 3
    dend_34 nseg = 3
    dend_22 nseg = 5
    dend_21 nseg = 5
    dend_7 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L5_MC_575d31ccfd_0_0


