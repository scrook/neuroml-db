// Cell: dSTUT214_L23_BP_ed3c32ad7e_0_0
/*
{
  "id" : "dSTUT214_L23_BP_ed3c32ad7e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.559629, -8.92861, -0.706689, 1.8952", "-0.520561, -8.09769, -0.641537, 3.08207", "-0.481493, -7.26678, -0.576385, 4.07229", "-0.442425, -6.43586, -0.511233, 5.06251", "-0.403357, -5.60495, -0.446081, 6.03705", "-0.364289, -4.77403, -0.380929, 6.87153", "-0.325221, -3.94312, -0.315777, 7.33623", "-0.286154, -3.1122, -0.250625, 7.77277", "-0.247086, -2.28129, -0.185472, 8.20481", "-0.208018, -1.45038, -0.12032, 8.51332", "-0.16895, -0.619461, -0.0551684, 8.81943", "-0.129882, 0.211453, 0.00998366, 9.1018", "-0.0908139, 1.04237, 0.0751357, 8.76619", "-0.051746, 1.87328, 0.140288, 8.18075", "-0.0126781, 2.7042, 0.20544, 7.29107", "0.0263898, 3.53511, 0.270592, 6.47013", "0.0654577, 4.36603, 0.335744, 5.69271", "0.104526, 5.19694, 0.400896, 4.78435", "0.143594, 6.02786, 0.466048, 3.7615", "0.182661, 6.85877, 0.5312, 2.16282", "0.221729, 7.68968, 0.596352, 1.49642" ]
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.0529134, -8.92845, 10.7418, 1.66", "-0.501082, -10.681, 12.1939, 1.66", "-0.984809, -12.5726, 13.7613, 1.66", "-1.81554, -15.8211, 16.453, 1.39", "-5.11937, -28.7406, 27.158, 1.11", "-5.69894, -31.007, 29.0359, 1.11", "-6.43298, -33.8774, 31.4143, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.617087, 7.86155, -0.778182, 1.39", "0.631217, 15.5516, 2.57723, 0.83", "0.63587, 18.0837, 3.68207, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.221729, 7.68968, 0.596352, 0.55", "0.92622, 22.6731, 0.596352, 0.55", "1.63071, 37.6566, 0.596352, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-6.43298, -33.8774, 31.4143, 0.83", "-7.65594, -38.7415, 29.688, 0.83", "-7.94714, -39.8996, 29.277, 0.83", "-8.69045, -42.856, 28.2277, 0.83", "-9.02367, -44.1813, 27.7574, 0.83", "-9.74026, -47.0313, 26.7459, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-6.43298, -33.8774, 31.4143, 0.83", "-5.9098, -35.4957, 31.9839, 0.83", "-5.42488, -36.9613, 32.4777, 0.83", "-4.8322, -38.9097, 33.0706, 0.83", "-3.34957, -43.3262, 34.3484, 0.83", "-2.05546, -46.9485, 35.3722, 0.55", "0.206889, -53.0916, 36.9767, 0.55", "1.39426, -56.1074, 37.8412, 0.83", "2.82062, -59.5192, 38.8716, 0.55", "5.21312, -65.0162, 40.8, 0.55", "5.91565, -66.5708, 41.3859, 0.55", "7.82017, -70.7801, 43.0054, 0.55", "10.1661, -76.0801, 45.1936, 0.55", "11.5477, -79.2556, 46.539, 0.55", "13.3287, -83.5044, 48.3509, 0.55", "16.243, -91.2853, 51.567, 0.55", "17.6819, -95.4495, 53.1922, 0.55", "18.718, -98.5895, 54.3296, 0.55", "19.3667, -100.828, 54.9662, 0.55", "19.866, -102.835, 55.438, 0.55", "20.6764, -106.935, 56.3883, 0.55", "21.0343, -109.008, 56.8592, 0.55", "21.5033, -112.181, 57.6932, 0.55", "22.0851, -116.437, 58.8682, 0.55", "22.8185, -122.608, 60.6168, 0.55", "23.4681, -128.15, 62.2805, 0.55", "23.9489, -133.002, 63.8048, 0.83", "24.3193, -137.641, 65.4018, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.63587, 18.0837, 3.68207, 0.83", "1.16315, 25.0102, 0.357975, 0.83", "1.34944, 26.834, -0.441928, 0.83", "1.57925, 29.0692, -1.44507, 0.83", "1.78947, 30.9149, -2.21595, 0.83", "2.13215, 33.8666, -3.38464, 0.83", "2.6189, 37.7255, -4.82099, 0.83", "2.90864, 40.4716, -5.61853, 0.83", "3.25574, 43.4413, -6.53026, 0.83", "3.66953, 46.4879, -7.58252, 0.55", "3.8013, 47.4526, -7.92149, 0.55", "4.00213, 49.1041, -8.51533, 0.55", "4.46093, 52.5509, -9.68621, 0.55", "4.76488, 55.0527, -10.508, 0.55", "5.57622, 61.3204, -12.5524, 0.55", "5.9299, 64.1498, -13.5998, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.63587, 18.0837, 3.68207, 0.83", "1.17372, 20.0204, 4.57575, 0.83", "1.54234, 21.5511, 5.32254, 0.83", "2.03537, 23.9697, 6.56126, 0.83", "2.4788, 26.3025, 7.76927, 0.83", "2.99086, 29.2573, 9.14907, 0.83", "3.39146, 31.484, 10.129, 0.83", "3.63385, 33.1712, 10.8548, 0.83", "3.89881, 35.0221, 11.581, 0.83", "3.95866, 35.5265, 11.7438, 0.83", "4.73546, 41.3203, 13.3078, 0.83", "4.89891, 42.5518, 13.5515, 0.83", "5.13234, 44.2259, 13.7919, 0.83", "5.32945, 45.6752, 13.9625, 0.83", "5.54018, 47.3568, 14.1241, 0.83", "5.82147, 49.4801, 14.3347, 0.83", "6.05979, 51.6705, 14.5255, 0.83", "6.21699, 52.9208, 14.6432, 0.83", "6.51181, 54.8522, 14.8405, 0.83", "6.76986, 56.7529, 15.0281, 0.83", "7.08148, 58.7484, 15.2142, 0.83", "7.47942, 61.357, 15.4848, 0.83", "7.71578, 63.0623, 15.7382, 0.83", "7.82126, 64.0073, 15.898, 0.83", "7.90342, 65.078, 16.1252, 0.83", "7.99374, 66.6637, 16.5524, 0.83", "7.98086, 68.999, 17.2908, 0.55", "7.93851, 72.0635, 18.3856, 0.55", "7.87716, 72.9673, 18.7077, 0.55", "7.74406, 74.8685, 19.3718, 0.55", "7.67231, 75.6664, 19.6319, 0.55", "7.51563, 77.1636, 20.108, 0.55", "7.40218, 78.7231, 20.5433, 0.55", "7.37223, 80.9826, 21.0819, 0.55", "7.36426, 82.4711, 21.4164, 0.55", "7.34812, 83.826, 21.6704, 0.55", "7.37348, 85.5171, 21.9964, 0.55", "7.50877, 87.2733, 22.3373, 0.55", "7.75064, 89.6655, 22.8604, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.63071, 37.6566, 0.596352, 0.55", "2.3352, 52.64, 0.596352, 0.55", "3.03969, 67.6235, 0.596352, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-9.74026, -47.0313, 26.7459, 0.83", "-11.2594, -52.3304, 28.7377, 0.83", "-12.3912, -56.5307, 30.1307, 0.83", "-13.6777, -61.5984, 31.6072, 0.83", "-14.7085, -65.7907, 32.6929, 0.83", "-15.335, -68.3385, 33.3528, 0.83", "-16.0819, -71.3761, 34.1395, 0.83", "-16.5002, -73.5661, 34.5839, 0.83", "-16.9401, -76.067, 34.9888, 0.83", "-17.3037, -79.2639, 35.0754, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-9.74026, -47.0313, 26.7459, 0.55", "-9.73541, -46.8101, 35.2845, 0.55", "-9.47175, -46.4854, 44.4198, 0.55", "-9.33782, -46.3205, 49.0603, 0.55", "-9.16913, -46.1127, 54.9052, 0.28", "-9.14126, -46.0784, 55.8707, 0.83", "-8.99507, -45.8984, 60.9361, 0.28", "-8.9477, -45.8095, 61.7995, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "5.9299, 64.1498, -13.5998, 0.55", "6.97431, 68.0875, -13.8933, 0.55", "8.09297, 72.2462, -14.321, 0.55", "8.87871, 75.1697, -14.592, 0.55", "10.1026, 79.5521, -14.9699, 0.83", "10.9735, 82.6672, -15.2195, 0.55", "11.8149, 85.5681, -15.4363, 0.55", "12.5987, 88.2822, -15.5583, 1.11", "14.003, 92.9897, -15.9149, 0.55", "14.4303, 94.57, -16.0699, 0.55", "14.9622, 96.5646, -16.2899, 1.11", "15.6104, 99.0413, -16.5831, 0.55", "16.0022, 100.664, -16.7783, 1.11", "17.1446, 105.623, -17.3254, 0.55", "17.6639, 108.247, -17.8106, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "5.9299, 64.1498, -13.5998, 0.28", "6.58954, 67.5199, -17.1057, 0.28", "6.70649, 68.0228, -17.6116, 0.55", "7.78658, 72.4659, -21.8773, 0.28", "8.94572, 76.594, -26.0615, 1.11", "9.63409, 78.7322, -28.3472, 0.28", "9.63409, 78.7322, -28.3472, 0.55", "10.7095, 81.3105, -30.5009, 0.28", "11.1955, 82.2913, -31.1946, 1.11", "13.9814, 86.5766, -32.7574, 0.55", "16.493, 89.8762, -32.7192, 0.28", "20.6787, 95.0078, -31.8754, 1.11", "24.3576, 99.3442, -30.5878, 0.28", "24.4488, 99.4443, -30.5309, 0.55", "27.1649, 102.267, -28.2581, 0.28", "27.4071, 102.514, -27.9782, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-17.3037, -79.2639, 35.0754, 0.83", "-17.0854, -82.1634, 36.2428, 0.83", "-16.955, -84.4864, 37.3347, 0.83", "-16.8654, -85.5699, 37.8579, 0.83", "-16.8339, -86.1922, 38.2107, 0.83", "-16.8005, -87.8974, 39.2081, 0.83", "-16.7718, -88.909, 39.7239, 0.83", "-16.6584, -90.8353, 40.5203, 0.83", "-16.5259, -92.1647, 41.0879, 0.83", "-16.1713, -94.4234, 42.0016, 0.83", "-15.911, -95.5806, 42.406, 0.83", "-15.1408, -98.4288, 43.1389, 0.83", "-14.4363, -100.978, 43.6211, 0.83", "-13.8685, -103.1, 43.825, 0.83", "-13.5215, -104.647, 43.9128, 0.83", "-13.454, -104.96, 43.9195, 0.83", "-13.1591, -106.762, 44.0349, 0.28", "-13.1205, -107.242, 44.0924, 0.83", "-13.0955, -108.491, 44.1914, 0.28", "-13.0725, -110.713, 44.3274, 0.28", "-13.0765, -111.191, 44.3728, 0.28", "-13.0812, -112.71, 44.5313, 0.83", "-13.057, -114.05, 44.6958, 0.28", "-13.0341, -115.122, 44.8434, 0.83", "-12.9869, -115.976, 44.9913, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-17.3037, -79.2639, 35.0754, 0.55", "-20.4653, -83.8398, 33.7954, 0.55", "-21.8756, -85.7956, 33.3303, 0.55", "-24.9312, -89.9409, 32.4878, 0.55", "-26.2745, -91.7112, 32.1844, 0.55", "-27.637, -93.4272, 31.9544, 0.28", "-28.2459, -94.1941, 31.8516, 0.55", "-29.7894, -95.9526, 31.7992, 0.28", "-30.804, -97.0941, 31.8042, 0.55", "-32.0389, -98.4181, 31.971, 0.28", "-33.9913, -100.393, 32.2363, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "axon_0", "axon_0", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L23_BP_ed3c32ad7e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_14
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_5(0), soma_0(0.44999997245508955)
    connect dend_0(0), soma_0(0.44999997245508955)
    connect axon_0(0), soma_0(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.559629, -8.92861, -0.706689, 1.8952 ) }
    soma_0 { pt3dadd( -0.520561, -8.09769, -0.641537, 3.08207 ) }
    soma_0 { pt3dadd( -0.481493, -7.26678, -0.576385, 4.07229 ) }
    soma_0 { pt3dadd( -0.442425, -6.43586, -0.511233, 5.06251 ) }
    soma_0 { pt3dadd( -0.403357, -5.60495, -0.446081, 6.03705 ) }
    soma_0 { pt3dadd( -0.364289, -4.77403, -0.380929, 6.87153 ) }
    soma_0 { pt3dadd( -0.325221, -3.94312, -0.315777, 7.33623 ) }
    soma_0 { pt3dadd( -0.286154, -3.1122, -0.250625, 7.77277 ) }
    soma_0 { pt3dadd( -0.247086, -2.28129, -0.185472, 8.20481 ) }
    soma_0 { pt3dadd( -0.208018, -1.45038, -0.12032, 8.51332 ) }
    soma_0 { pt3dadd( -0.16895, -0.619461, -0.0551684, 8.81943 ) }
    soma_0 { pt3dadd( -0.129882, 0.211453, 0.00998366, 9.1018 ) }
    soma_0 { pt3dadd( -0.0908139, 1.04237, 0.0751357, 8.76619 ) }
    soma_0 { pt3dadd( -0.051746, 1.87328, 0.140288, 8.18075 ) }
    soma_0 { pt3dadd( -0.0126781, 2.7042, 0.20544, 7.29107 ) }
    soma_0 { pt3dadd( 0.0263898, 3.53511, 0.270592, 6.47013 ) }
    soma_0 { pt3dadd( 0.0654577, 4.36603, 0.335744, 5.69271 ) }
    soma_0 { pt3dadd( 0.104526, 5.19694, 0.400896, 4.78435 ) }
    soma_0 { pt3dadd( 0.143594, 6.02786, 0.466048, 3.7615 ) }
    soma_0 { pt3dadd( 0.182661, 6.85877, 0.5312, 2.16282 ) }
    soma_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 1.49642 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.0529134, -8.92845, 10.7418, 1.66 ) }
    dend_5 { pt3dadd( -0.501082, -10.681, 12.1939, 1.66 ) }
    dend_5 { pt3dadd( -0.984809, -12.5726, 13.7613, 1.66 ) }
    dend_5 { pt3dadd( -1.81554, -15.8211, 16.453, 1.39 ) }
    dend_5 { pt3dadd( -5.11937, -28.7406, 27.158, 1.11 ) }
    dend_5 { pt3dadd( -5.69894, -31.007, 29.0359, 1.11 ) }
    dend_5 { pt3dadd( -6.43298, -33.8774, 31.4143, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.617087, 7.86155, -0.778182, 1.39 ) }
    dend_0 { pt3dadd( 0.631217, 15.5516, 2.57723, 0.83 ) }
    dend_0 { pt3dadd( 0.63587, 18.0837, 3.68207, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 0.92622, 22.6731, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 34/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -6.43298, -33.8774, 31.4143, 0.83 ) }
    dend_7 { pt3dadd( -7.65594, -38.7415, 29.688, 0.83 ) }
    dend_7 { pt3dadd( -7.94714, -39.8996, 29.277, 0.83 ) }
    dend_7 { pt3dadd( -8.69045, -42.856, 28.2277, 0.83 ) }
    dend_7 { pt3dadd( -9.02367, -44.1813, 27.7574, 0.83 ) }
    dend_7 { pt3dadd( -9.74026, -47.0313, 26.7459, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -6.43298, -33.8774, 31.4143, 0.83 ) }
    dend_6 { pt3dadd( -5.9098, -35.4957, 31.9839, 0.83 ) }
    dend_6 { pt3dadd( -5.42488, -36.9613, 32.4777, 0.83 ) }
    dend_6 { pt3dadd( -4.8322, -38.9097, 33.0706, 0.83 ) }
    dend_6 { pt3dadd( -3.34957, -43.3262, 34.3484, 0.83 ) }
    dend_6 { pt3dadd( -2.05546, -46.9485, 35.3722, 0.55 ) }
    dend_6 { pt3dadd( 0.206889, -53.0916, 36.9767, 0.55 ) }
    dend_6 { pt3dadd( 1.39426, -56.1074, 37.8412, 0.83 ) }
    dend_6 { pt3dadd( 2.82062, -59.5192, 38.8716, 0.55 ) }
    dend_6 { pt3dadd( 5.21312, -65.0162, 40.8, 0.55 ) }
    dend_6 { pt3dadd( 5.91565, -66.5708, 41.3859, 0.55 ) }
    dend_6 { pt3dadd( 7.82017, -70.7801, 43.0054, 0.55 ) }
    dend_6 { pt3dadd( 10.1661, -76.0801, 45.1936, 0.55 ) }
    dend_6 { pt3dadd( 11.5477, -79.2556, 46.539, 0.55 ) }
    dend_6 { pt3dadd( 13.3287, -83.5044, 48.3509, 0.55 ) }
    dend_6 { pt3dadd( 16.243, -91.2853, 51.567, 0.55 ) }
    dend_6 { pt3dadd( 17.6819, -95.4495, 53.1922, 0.55 ) }
    dend_6 { pt3dadd( 18.718, -98.5895, 54.3296, 0.55 ) }
    dend_6 { pt3dadd( 19.3667, -100.828, 54.9662, 0.55 ) }
    dend_6 { pt3dadd( 19.866, -102.835, 55.438, 0.55 ) }
    dend_6 { pt3dadd( 20.6764, -106.935, 56.3883, 0.55 ) }
    dend_6 { pt3dadd( 21.0343, -109.008, 56.8592, 0.55 ) }
    dend_6 { pt3dadd( 21.5033, -112.181, 57.6932, 0.55 ) }
    dend_6 { pt3dadd( 22.0851, -116.437, 58.8682, 0.55 ) }
    dend_6 { pt3dadd( 22.8185, -122.608, 60.6168, 0.55 ) }
    dend_6 { pt3dadd( 23.4681, -128.15, 62.2805, 0.55 ) }
    dend_6 { pt3dadd( 23.9489, -133.002, 63.8048, 0.83 ) }
    dend_6 { pt3dadd( 24.3193, -137.641, 65.4018, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.63587, 18.0837, 3.68207, 0.83 ) }
    dend_2 { pt3dadd( 1.16315, 25.0102, 0.357975, 0.83 ) }
    dend_2 { pt3dadd( 1.34944, 26.834, -0.441928, 0.83 ) }
    dend_2 { pt3dadd( 1.57925, 29.0692, -1.44507, 0.83 ) }
    dend_2 { pt3dadd( 1.78947, 30.9149, -2.21595, 0.83 ) }
    dend_2 { pt3dadd( 2.13215, 33.8666, -3.38464, 0.83 ) }
    dend_2 { pt3dadd( 2.6189, 37.7255, -4.82099, 0.83 ) }
    dend_2 { pt3dadd( 2.90864, 40.4716, -5.61853, 0.83 ) }
    dend_2 { pt3dadd( 3.25574, 43.4413, -6.53026, 0.83 ) }
    dend_2 { pt3dadd( 3.66953, 46.4879, -7.58252, 0.55 ) }
    dend_2 { pt3dadd( 3.8013, 47.4526, -7.92149, 0.55 ) }
    dend_2 { pt3dadd( 4.00213, 49.1041, -8.51533, 0.55 ) }
    dend_2 { pt3dadd( 4.46093, 52.5509, -9.68621, 0.55 ) }
    dend_2 { pt3dadd( 4.76488, 55.0527, -10.508, 0.55 ) }
    dend_2 { pt3dadd( 5.57622, 61.3204, -12.5524, 0.55 ) }
    dend_2 { pt3dadd( 5.9299, 64.1498, -13.5998, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 84/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.63587, 18.0837, 3.68207, 0.83 ) }
    dend_1 { pt3dadd( 1.17372, 20.0204, 4.57575, 0.83 ) }
    dend_1 { pt3dadd( 1.54234, 21.5511, 5.32254, 0.83 ) }
    dend_1 { pt3dadd( 2.03537, 23.9697, 6.56126, 0.83 ) }
    dend_1 { pt3dadd( 2.4788, 26.3025, 7.76927, 0.83 ) }
    dend_1 { pt3dadd( 2.99086, 29.2573, 9.14907, 0.83 ) }
    dend_1 { pt3dadd( 3.39146, 31.484, 10.129, 0.83 ) }
    dend_1 { pt3dadd( 3.63385, 33.1712, 10.8548, 0.83 ) }
    dend_1 { pt3dadd( 3.89881, 35.0221, 11.581, 0.83 ) }
    dend_1 { pt3dadd( 3.95866, 35.5265, 11.7438, 0.83 ) }
    dend_1 { pt3dadd( 4.73546, 41.3203, 13.3078, 0.83 ) }
    dend_1 { pt3dadd( 4.89891, 42.5518, 13.5515, 0.83 ) }
    dend_1 { pt3dadd( 5.13234, 44.2259, 13.7919, 0.83 ) }
    dend_1 { pt3dadd( 5.32945, 45.6752, 13.9625, 0.83 ) }
    dend_1 { pt3dadd( 5.54018, 47.3568, 14.1241, 0.83 ) }
    dend_1 { pt3dadd( 5.82147, 49.4801, 14.3347, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 6.05979, 51.6705, 14.5255, 0.83 ) }
    dend_1 { pt3dadd( 6.21699, 52.9208, 14.6432, 0.83 ) }
    dend_1 { pt3dadd( 6.51181, 54.8522, 14.8405, 0.83 ) }
    dend_1 { pt3dadd( 6.76986, 56.7529, 15.0281, 0.83 ) }
    dend_1 { pt3dadd( 7.08148, 58.7484, 15.2142, 0.83 ) }
    dend_1 { pt3dadd( 7.47942, 61.357, 15.4848, 0.83 ) }
    dend_1 { pt3dadd( 7.71578, 63.0623, 15.7382, 0.83 ) }
    dend_1 { pt3dadd( 7.82126, 64.0073, 15.898, 0.83 ) }
    dend_1 { pt3dadd( 7.90342, 65.078, 16.1252, 0.83 ) }
    dend_1 { pt3dadd( 7.99374, 66.6637, 16.5524, 0.83 ) }
    dend_1 { pt3dadd( 7.98086, 68.999, 17.2908, 0.55 ) }
    dend_1 { pt3dadd( 7.93851, 72.0635, 18.3856, 0.55 ) }
    dend_1 { pt3dadd( 7.87716, 72.9673, 18.7077, 0.55 ) }
    dend_1 { pt3dadd( 7.74406, 74.8685, 19.3718, 0.55 ) }
    dend_1 { pt3dadd( 7.67231, 75.6664, 19.6319, 0.55 ) }
    dend_1 { pt3dadd( 7.51563, 77.1636, 20.108, 0.55 ) }
    dend_1 { pt3dadd( 7.40218, 78.7231, 20.5433, 0.55 ) }
    dend_1 { pt3dadd( 7.37223, 80.9826, 21.0819, 0.55 ) }
    dend_1 { pt3dadd( 7.36426, 82.4711, 21.4164, 0.55 ) }
    dend_1 { pt3dadd( 7.34812, 83.826, 21.6704, 0.55 ) }
    dend_1 { pt3dadd( 7.37348, 85.5171, 21.9964, 0.55 ) }
    dend_1 { pt3dadd( 7.50877, 87.2733, 22.3373, 0.55 ) }
    dend_1 { pt3dadd( 7.75064, 89.6655, 22.8604, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 23/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 2.3352, 52.64, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 3.03969, 67.6235, 0.596352, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -9.74026, -47.0313, 26.7459, 0.83 ) }
    dend_9 { pt3dadd( -11.2594, -52.3304, 28.7377, 0.83 ) }
    dend_9 { pt3dadd( -12.3912, -56.5307, 30.1307, 0.83 ) }
    dend_9 { pt3dadd( -13.6777, -61.5984, 31.6072, 0.83 ) }
    dend_9 { pt3dadd( -14.7085, -65.7907, 32.6929, 0.83 ) }
    dend_9 { pt3dadd( -15.335, -68.3385, 33.3528, 0.83 ) }
    dend_9 { pt3dadd( -16.0819, -71.3761, 34.1395, 0.83 ) }
    dend_9 { pt3dadd( -16.5002, -73.5661, 34.5839, 0.83 ) }
    dend_9 { pt3dadd( -16.9401, -76.067, 34.9888, 0.83 ) }
    dend_9 { pt3dadd( -17.3037, -79.2639, 35.0754, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -9.74026, -47.0313, 26.7459, 0.55 ) }
    dend_8 { pt3dadd( -9.73541, -46.8101, 35.2845, 0.55 ) }
    dend_8 { pt3dadd( -9.47175, -46.4854, 44.4198, 0.55 ) }
    dend_8 { pt3dadd( -9.33782, -46.3205, 49.0603, 0.55 ) }
    dend_8 { pt3dadd( -9.16913, -46.1127, 54.9052, 0.28 ) }
    dend_8 { pt3dadd( -9.14126, -46.0784, 55.8707, 0.83 ) }
    dend_8 { pt3dadd( -8.99507, -45.8984, 60.9361, 0.28 ) }
    dend_8 { pt3dadd( -8.9477, -45.8095, 61.7995, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 44/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 5.9299, 64.1498, -13.5998, 0.55 ) }
    dend_4 { pt3dadd( 6.97431, 68.0875, -13.8933, 0.55 ) }
    dend_4 { pt3dadd( 8.09297, 72.2462, -14.321, 0.55 ) }
    dend_4 { pt3dadd( 8.87871, 75.1697, -14.592, 0.55 ) }
    dend_4 { pt3dadd( 10.1026, 79.5521, -14.9699, 0.83 ) }
    dend_4 { pt3dadd( 10.9735, 82.6672, -15.2195, 0.55 ) }
    dend_4 { pt3dadd( 11.8149, 85.5681, -15.4363, 0.55 ) }
    dend_4 { pt3dadd( 12.5987, 88.2822, -15.5583, 1.11 ) }
    dend_4 { pt3dadd( 14.003, 92.9897, -15.9149, 0.55 ) }
    dend_4 { pt3dadd( 14.4303, 94.57, -16.0699, 0.55 ) }
    dend_4 { pt3dadd( 14.9622, 96.5646, -16.2899, 1.11 ) }
    dend_4 { pt3dadd( 15.6104, 99.0413, -16.5831, 0.55 ) }
    dend_4 { pt3dadd( 16.0022, 100.664, -16.7783, 1.11 ) }
    dend_4 { pt3dadd( 17.1446, 105.623, -17.3254, 0.55 ) }
    dend_4 { pt3dadd( 17.6639, 108.247, -17.8106, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 5.9299, 64.1498, -13.5998, 0.28 ) }
    dend_3 { pt3dadd( 6.58954, 67.5199, -17.1057, 0.28 ) }
    dend_3 { pt3dadd( 6.70649, 68.0228, -17.6116, 0.55 ) }
    dend_3 { pt3dadd( 7.78658, 72.4659, -21.8773, 0.28 ) }
    dend_3 { pt3dadd( 8.94572, 76.594, -26.0615, 1.11 ) }
    dend_3 { pt3dadd( 9.63409, 78.7322, -28.3472, 0.28 ) }
    dend_3 { pt3dadd( 9.63409, 78.7322, -28.3472, 0.55 ) }
    dend_3 { pt3dadd( 10.7095, 81.3105, -30.5009, 0.28 ) }
    dend_3 { pt3dadd( 11.1955, 82.2913, -31.1946, 1.11 ) }
    dend_3 { pt3dadd( 13.9814, 86.5766, -32.7574, 0.55 ) }
    dend_3 { pt3dadd( 16.493, 89.8762, -32.7192, 0.28 ) }
    dend_3 { pt3dadd( 20.6787, 95.0078, -31.8754, 1.11 ) }
    dend_3 { pt3dadd( 24.3576, 99.3442, -30.5878, 0.28 ) }
    dend_3 { pt3dadd( 24.4488, 99.4443, -30.5309, 0.55 ) }
    dend_3 { pt3dadd( 27.1649, 102.267, -28.2581, 0.28 ) }
    dend_3 { pt3dadd( 27.4071, 102.514, -27.9782, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -17.3037, -79.2639, 35.0754, 0.83 ) }
    dend_11 { pt3dadd( -17.0854, -82.1634, 36.2428, 0.83 ) }
    dend_11 { pt3dadd( -16.955, -84.4864, 37.3347, 0.83 ) }
    dend_11 { pt3dadd( -16.8654, -85.5699, 37.8579, 0.83 ) }
    dend_11 { pt3dadd( -16.8339, -86.1922, 38.2107, 0.83 ) }
    dend_11 { pt3dadd( -16.8005, -87.8974, 39.2081, 0.83 ) }
    dend_11 { pt3dadd( -16.7718, -88.909, 39.7239, 0.83 ) }
    dend_11 { pt3dadd( -16.6584, -90.8353, 40.5203, 0.83 ) }
    dend_11 { pt3dadd( -16.5259, -92.1647, 41.0879, 0.83 ) }
    dend_11 { pt3dadd( -16.1713, -94.4234, 42.0016, 0.83 ) }
    dend_11 { pt3dadd( -15.911, -95.5806, 42.406, 0.83 ) }
    dend_11 { pt3dadd( -15.1408, -98.4288, 43.1389, 0.83 ) }
    dend_11 { pt3dadd( -14.4363, -100.978, 43.6211, 0.83 ) }
    dend_11 { pt3dadd( -13.8685, -103.1, 43.825, 0.83 ) }
    dend_11 { pt3dadd( -13.5215, -104.647, 43.9128, 0.83 ) }
    dend_11 { pt3dadd( -13.454, -104.96, 43.9195, 0.83 ) }
    dend_11 { pt3dadd( -13.1591, -106.762, 44.0349, 0.28 ) }
    dend_11 { pt3dadd( -13.1205, -107.242, 44.0924, 0.83 ) }
    dend_11 { pt3dadd( -13.0955, -108.491, 44.1914, 0.28 ) }
    dend_11 { pt3dadd( -13.0725, -110.713, 44.3274, 0.28 ) }
    dend_11 { pt3dadd( -13.0765, -111.191, 44.3728, 0.28 ) }
    dend_11 { pt3dadd( -13.0812, -112.71, 44.5313, 0.83 ) }
    dend_11 { pt3dadd( -13.057, -114.05, 44.6958, 0.28 ) }
    dend_11 { pt3dadd( -13.0341, -115.122, 44.8434, 0.83 ) }
    dend_11 { pt3dadd( -12.9869, -115.976, 44.9913, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 0/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -17.3037, -79.2639, 35.0754, 0.55 ) }
    dend_10 { pt3dadd( -20.4653, -83.8398, 33.7954, 0.55 ) }
    dend_10 { pt3dadd( -21.8756, -85.7956, 33.3303, 0.55 ) }
    dend_10 { pt3dadd( -24.9312, -89.9409, 32.4878, 0.55 ) }
    dend_10 { pt3dadd( -26.2745, -91.7112, 32.1844, 0.55 ) }
    dend_10 { pt3dadd( -27.637, -93.4272, 31.9544, 0.28 ) }
    dend_10 { pt3dadd( -28.2459, -94.1941, 31.8516, 0.55 ) }
    dend_10 { pt3dadd( -29.7894, -95.9526, 31.7992, 0.28 ) }
    dend_10 { pt3dadd( -30.804, -97.0941, 31.8042, 0.55 ) }
    dend_10 { pt3dadd( -32.0389, -98.4181, 31.971, 0.28 ) }
    dend_10 { pt3dadd( -33.9913, -100.393, 32.2363, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_4 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_3 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_5 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_7 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_9 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_11 OneSecGrp_SectionRef_14.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_6 nseg = 5
    dend_2 nseg = 3
    dend_1 nseg = 3
    dend_4 nseg = 3
    dend_3 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L23_BP_ed3c32ad7e_0_0


