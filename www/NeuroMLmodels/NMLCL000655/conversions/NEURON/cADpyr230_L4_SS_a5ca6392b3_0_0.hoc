// Cell: cADpyr230_L4_SS_a5ca6392b3_0_0
/*
{
  "id" : "cADpyr230_L4_SS_a5ca6392b3_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.61187, 7.44498, 0.866331, 2.79576", "-3.3054, 6.66685, 0.749872, 4.62937", "-2.99893, 5.88871, 0.633413, 9.44099", "-2.69245, 5.11057, 0.516954, 10.6771", "-2.38598, 4.33244, 0.400495, 11.456", "-2.07951, 3.5543, 0.284037, 12.291", "-1.77304, 2.77617, 0.167578, 13.3244", "-1.46657, 1.99803, 0.0511187, 13.7188", "-1.1601, 1.2199, -0.0653402, 14.0825", "-0.853627, 0.441759, -0.181799, 14.4988", "-0.547156, -0.336377, -0.298258, 14.812", "-0.240684, -1.11451, -0.414717, 15.1151", "0.0657868, -1.89265, -0.531176, 15.4182", "0.372258, -2.67078, -0.647635, 15.7213", "0.678729, -3.44892, -0.764094, 15.9751", "0.985201, -4.22706, -0.880552, 16.1398", "1.29167, -5.00519, -0.997011, 15.9669", "1.59814, -5.78333, -1.11347, 14.7731", "1.90461, -6.56146, -1.22993, 13.2593", "2.21109, -7.3396, -1.34639, 11.7454", "2.51756, -8.11774, -1.46285, 6.36743" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "0.469659, 7.42939, 6.21995, 3.99", "0.76873, 9.95078, 8.54099, 3.99" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999980255005216
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-0.950739, 2.31765, -8.54969, 1.33", "-1.55851, 3.76855, -16.8553, 1.33", "-3.37285, 3.94171, -19.771, 1.33", "-5.81018, 4.17434, -23.6879, 1.33", "-8.66949, 4.44724, -28.2829, 1.33", "-9.91476, 4.56609, -30.2841, 1.33", "-16.0574, 5.15236, -40.1557, 1.33", "-17.394, 5.15697, -42.9583, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999980255005216
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-6.15726, 0.0419292, 6.67824, 1.33", "-8.82648, -0.31029, 9.67223, 1.33", "-18.0029, -2.39643, 18.217, 1.33", "-19.7856, -2.61339, 19.3634, 0.67", "-23.1642, -2.31633, 20.4726, 0.67", "-27.2051, -1.74133, 20.9783, 0.67", "-32.2443, -0.56624, 21.1194, 0.67", "-35.3875, 0.370539, 20.9892, 0.67", "-38.7227, 1.69986, 20.5356, 0.67", "-45.8524, 4.78649, 19.8736, 0.67", "-51.2782, 6.95591, 20.014, 0.67", "-59.5821, 10.102, 20.9962, 0.67", "-65.3495, 12.2442, 22.0657, 0.67", "-71.256, 14.4202, 23.4804, 0.67", "-75.5102, 15.7986, 24.6763, 0.67", "-85.6542, 19.0961, 27.9337, 0.67", "-93.4799, 21.6935, 30.4472, 0.67", "-95.7983, 22.376, 31.1253, 0.67", "-102.07, 24.2449, 32.6224, 0.67", "-106.403, 25.4328, 33.664, 0.67", "-110.877, 26.975, 34.4503, 0.67", "-116.895, 29.4963, 35.0148, 0.67", "-119.341, 30.5342, 35.3123, 1.33", "-121.306, 31.3916, 35.5658, 0.67", "-127.44, 34.1242, 36.3095, 0.67", "-129.923, 35.1238, 36.6921, 0.67", "-136.398, 37.5562, 37.6221, 0.67", "-138.428, 38.2831, 37.8193, 0.67", "-141.353, 39.1665, 37.7278, 0.67", "-146.006, 40.1619, 37.2914, 0.67", "-151.337, 41.041, 36.4927, 0.67", "-155.2, 41.4523, 35.7821, 0.67", "-161.112, 41.7711, 34.5363, 0.67", "-165.964, 41.9177, 33.4843, 0.67", "-175.076, 42.052, 31.4862, 0.67", "-178.032, 41.9434, 30.8026, 0.67", "-181.864, 41.7957, 29.9423, 0.67", "-185.549, 41.512, 29.1631, 0.67", "-187.563, 41.478, 28.6521, 0.67", "-190.31, 41.5118, 27.6036, 0.67", "-193.739, 41.5852, 25.7373, 0.67", "-197.307, 41.782, 23.6542, 0.67", "-200.288, 42.0765, 21.8251, 0.67", "-208.363, 43.0788, 16.458, 0.67", "-214.258, 43.7552, 12.365, 0.67", "-218.027, 44.2307, 9.65288, 0.67", "-219.838, 44.5006, 8.35602, 0.67", "-222.588, 44.9322, 6.36217, 0.33", "-223.33, 45.099, 5.87161, 0.67", "-226.575, 45.7998, 4.12971, 0.33", "-227.157, 46.0031, 3.97186, 0.67", "-229.348, 46.9589, 3.79063, 0.33", "-230.908, 47.6145, 3.83223, 0.67", "-232.885, 48.4343, 3.74771, 1.33", "-235.715, 49.5563, 2.97704, 0.33", "-236.433, 49.8679, 2.67261, 0.67", "-238.218, 50.6018, 1.74404, 0.33", "-241.538, 51.8008, -0.529341, 0.67", "-245.973, 53.3356, -3.9709, 1.33", "-249.167, 54.5705, -6.71298, 0.33", "-250.711, 55.2813, -8.19224, 1.33", "-252.758, 56.2871, -10.2022, 0.67", "-255.345, 57.65, -12.777, 0.67", "-256.506, 58.3796, -13.9315, 0.67", "-258.095, 59.4213, -15.1749, 1.33", "-261.04, 61.1934, -17.2533, 0.33", "-261.358, 61.366, -17.4906, 0.67", "-262.264, 61.8752, -18.1828, 0.33", "-263.163, 62.4006, -18.7763, 0.67", "-264.646, 63.2982, -19.7476, 0.33", "-267.745, 65.251, -21.679, 2.0", "-270.955, 67.6354, -23.5175, 0.33", "-271.537, 68.1496, -23.8609, 1.33", "-273.714, 70.2985, -25.1948, 0.33", "-274.551, 71.2302, -25.7105, 0.33", "-275.1, 71.9442, -26.0314, 0.67", "-276.195, 73.7979, -26.4556, 0.33", "-276.423, 74.336, -26.4842, 0.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999980255005216,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-2.81097, -3.98004, 7.23884, 1.33", "-4.77708, -7.74979, 12.8492, 1.33", "-4.71679, -9.87418, 15.2422, 1.33", "-4.5644, -15.2439, 21.2907, 1.33", "-4.47952, -18.2349, 24.6598, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999980255005216
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "2.59981, 1.25545, 8.42446, 1.33", "4.75972, 1.63922, 14.4142, 1.33", "6.14902, 0.532887, 11.8203, 0.67", "8.41632, -0.90886, 8.29658, 0.67", "14.558, -3.90989, 0.796666, 0.67", "16.2207, -4.44189, -0.754503, 0.67", "17.6719, -4.90864, -1.67778, 0.67", "19.6043, -5.62506, -2.52356, 0.33", "21.3168, -6.27517, -2.78968, 1.33", "24.1041, -7.81405, -2.55187, 0.67", "27.2381, -10.154, -1.51647, 0.67", "32.4524, -14.5041, 0.823308, 0.67", "34.3258, -16.296, 1.81951, 0.67", "37.6749, -19.4501, 3.84795, 1.33", "42.0471, -23.5465, 6.68478, 0.67", "44.8752, -26.5114, 8.63885, 0.67", "47.9274, -29.8329, 10.8841, 0.67", "50.76, -32.5864, 12.8987, 0.67", "56.1583, -37.4517, 16.3959, 0.67", "57.853, -38.8707, 17.3192, 0.67", "63.2942, -43.4144, 20.0652, 0.67", "66.3131, -46.3448, 21.5593, 0.67", "68.5341, -48.7119, 22.6189, 0.67", "72.1389, -52.5363, 24.4156, 0.67", "74.3161, -54.9946, 25.5021, 0.67", "76.2435, -57.2337, 26.4809, 0.67", "80.3706, -62.2328, 28.5814, 0.67", "82.1299, -64.8191, 29.5106, 0.67", "83.4512, -67.1679, 30.2892, 1.33", "85.0704, -70.3285, 31.4193, 0.67", "87.114, -74.7322, 32.9887, 0.67", "88.5124, -77.8724, 34.0285, 0.67", "89.3672, -80.2137, 34.5584, 0.67", "90.0583, -82.9289, 35.1207, 0.67", "100.644, -89.7982, 38.91, 0.67", "110.174, -97.513, 43.8427, 0.67", "118.996, -106.255, 48.5358, 0.67", "127.512, -115.404, 53.0848, 0.67", "134.262, -125.921, 57.884, 0.67", "141.053, -135.299, 64.4313, 0.67", "148.927, -144.585, 69.7963, 0.67", "158.006, -152.193, 75.6343, 0.67", "168.519, -159.669, 78.4875, 0.67", "180.113, -165.603, 80.1903, 0.67", "191.745, -171.686, 80.8908, 0.67", "203.123, -178.132, 79.3609, 0.67", "215.119, -183.358, 78.5989, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999980255005216,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.61311, -1.63339, -4.80409, 1.33", "8.28212, -2.22025, -5.99015, 1.33", "12.9324, -2.58759, -6.41419, 1.33", "17.6921, -2.46997, -6.76122, 1.33", "20.5093, -2.15895, -7.05736, 0.67", "23.5839, -1.74307, -7.60879, 0.67", "28.1599, -1.15005, -8.82028, 0.67", "30.2658, -0.95816, -9.80113, 1.33", "33.492, -0.67161, -11.7364, 0.67", "35.942, -0.125578, -13.4539, 0.67", "38.2317, 0.600929, -16.4671, 0.67", "39.3127, 0.937617, -18.4929, 0.67", "41.0549, 1.23821, -22.422, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999980255005216,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.51756, -8.11774, -1.46285, 0.67", "8.01439, -22.0743, -1.46285, 0.67", "13.5112, -36.0308, -1.46285, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "0.76873, 9.95078, 8.54099, 3.99", "6.41998, 12.2193, 6.51034, 1.33", "13.5489, 15.0811, 3.9487, 1.33", "18.6971, 17.1477, 2.09881, 1.33", "24.4809, 19.4695, 0.0205335, 1.33", "31.6873, 22.3624, -2.56893, 1.33" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "0.76873, 9.95078, 8.54099, 3.99", "0.305457, 14.5163, 8.68493, 2.66", "-0.331375, 20.7922, 8.8828, 2.0", "-0.999563, 27.3771, 9.0904, 2.0", "-1.534, 32.6439, 9.25645, 2.0" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-17.394, 5.15697, -42.9583, 1.33", "-20.7877, 7.30391, -48.5904, 0.67", "-21.9923, 8.25478, -50.6624, 0.67", "-24.1388, 9.66741, -54.6884, 0.67", "-29.9703, 14.0027, -65.2352, 0.67", "-33.5102, 17.0539, -73.0404, 1.33", "-37.4063, 20.4121, -81.6311, 0.67", "-40.1898, 22.7498, -88.3896, 0.67", "-46.5987, 27.6915, -103.934, 0.67", "-48.9934, 29.4622, -109.766, 1.33", "-56.1827, 36.5249, -129.305, 1.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-17.394, 5.15697, -42.9583, 1.33", "-14.3879, 7.12097, -46.5593, 1.33", "-13.3736, 7.78362, -47.7743, 2.0" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-4.47952, -18.2349, 24.6598, 1.33", "-0.674004, -23.041, 25.8535, 0.67", "1.17269, -25.2371, 26.1812, 0.67", "3.31916, -27.3752, 26.7712, 0.67", "5.2826, -29.6254, 27.4486, 0.33", "6.3177, -30.9577, 28.0287, 0.67", "7.86713, -32.9519, 28.897, 0.33", "9.04156, -34.5762, 29.5627, 1.33", "12.6638, -39.2393, 32.0282, 0.33", "15.3862, -42.5449, 34.2176, 0.33", "18.3235, -46.7514, 37.626, 1.33", "24.9636, -57.5712, 40.7469, 1.33", "32.3481, -67.5749, 44.5816, 1.33", "39.3225, -78.5573, 45.9524, 1.33", "46.3461, -89.5994, 45.9802, 1.33", "52.5656, -101.02, 44.2116, 1.33", "60.0275, -111.128, 40.7862, 1.33", "68.7229, -120.473, 38.5129, 1.33", "77.7182, -129.424, 35.9732, 1.33", "86.0128, -139.344, 34.6159, 1.33", "95.6484, -147.933, 35.073, 1.33", "105.837, -155.515, 33.0062, 1.33" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-4.47952, -18.2349, 24.6598, 1.33", "-6.11697, -23.3994, 24.1428, 0.67", "-7.2108, -29.7806, 23.6371, 0.67", "-7.44395, -33.1395, 23.4204, 0.67", "-7.70276, -36.1737, 23.2687, 1.33", "-8.29921, -41.8657, 22.5506, 0.67", "-8.4679, -43.5481, 22.2214, 0.67", "-8.73193, -46.8995, 21.3519, 0.67", "-8.85737, -48.976, 20.8318, 0.67", "-9.44656, -54.516, 19.282, 0.67", "-10.8419, -60.1326, 17.712, 0.67", "-11.6517, -62.549, 17.1068, 0.67", "-12.4869, -64.6489, 16.6068, 1.33", "-13.9364, -68.5573, 15.5161, 0.67", "-15.0655, -71.7868, 14.564, 1.33", "-16.6834, -77.0429, 12.8229, 0.67", "-17.8624, -81.411, 11.4916, 0.67", "-18.6015, -84.3416, 10.5735, 0.67", "-20.5413, -92.0769, 7.99818, 0.67", "-21.2759, -95.2731, 6.89334, 0.67", "-22.1749, -98.9197, 5.60161, 0.67", "-24.1289, -107.085, 3.35381, 0.67", "-24.5344, -108.882, 2.89737, 0.67", "-25.4051, -113.005, 2.09054, 1.33", "-26.3191, -117.198, 1.49705, 0.67", "-26.9707, -120.818, 1.05651, 0.67", "-29.2932, -134.971, -0.19353, 0.67", "-29.9419, -140.815, -0.691263, 0.33", "-30.0655, -143.656, -0.892583, 1.33", "-29.9999, -145.814, -1.01193, 0.67", "-29.8418, -147.539, -1.06106, 0.33", "-29.4781, -149.823, -1.10017, 0.67", "-28.7448, -153.45, -1.10267, 0.33", "-28.3058, -155.987, -1.07429, 1.33", "-27.6634, -159.827, -1.07557, 0.33", "-27.1139, -162.668, -1.02879, 0.67", "-26.8033, -164.178, -0.982323, 2.0", "-26.0946, -168.018, -0.806408, 0.33", "-25.933, -169.307, -0.724804, 0.67", "-25.4797, -172.363, -0.341567, 0.33", "-25.1198, -174.736, 0.0726421, 0.33", "-25.0387, -175.325, 0.184364, 0.67", "-24.4504, -178.672, 0.816115, 0.33", "-23.8389, -181.572, 1.33526, 1.33", "-22.3231, -187.392, 2.209, 0.33", "-22.1435, -187.979, 2.23196, 0.67", "-20.607, -192.421, 1.78024, 0.33", "-19.6543, -194.973, 1.43373, 0.33", "-18.455, -197.655, 0.860539, 0.33", "-17.7078, -199.178, 0.315273, 0.67", "-15.3809, -203.671, -2.51303, 0.33", "-13.4398, -206.986, -5.13843, 0.33", "-11.9862, -219.836, -5.76054, 0.33" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "41.0549, 1.23821, -22.422, 2.0", "45.0642, 0.0921002, -29.2338, 0.67", "46.7055, -0.30344, -31.844, 0.33", "49.199, -0.74656, -35.3616, 1.33", "52.7445, -1.14809, -39.8962, 0.33", "53.5711, -1.21392, -40.8825, 0.67", "55.8213, -1.39953, -43.4334, 0.33", "56.9238, -1.41483, -44.3603, 2.0", "58.9595, -1.47628, -45.9952, 0.67", "60.1652, -1.57239, -46.7689, 0.33", "60.5099, -1.60098, -46.9682, 0.67", "61.6861, -1.84752, -47.7502, 0.33", "63.2341, -2.3443, -48.817, 1.33", "67.0571, -3.95067, -51.5008, 0.67", "68.7277, -4.68182, -52.731, 0.67", "71.4652, -5.84369, -54.6508, 0.67", "75.1741, -7.30503, -57.0057, 0.67", "76.3776, -7.71515, -57.7275, 0.67", "77.4003, -8.02247, -58.3278, 0.33", "79.345, -8.61909, -59.4135, 0.67", "81.8419, -9.46198, -60.9183, 0.67", "83.523, -9.92518, -62.0553, 0.33", "85.0196, -10.3412, -63.1723, 0.67", "86.6945, -10.9135, -64.4588, 0.67", "90.1288, -12.1962, -67.2185, 0.67", "91.1939, -12.675, -68.1041, 2.0", "94.1269, -14.0969, -70.7681, 0.33", "95.7298, -14.9521, -72.2319, 0.33", "96.4793, -15.4119, -72.8226, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "41.0549, 1.23821, -22.422, 2.0", "48.6499, 0.263696, -25.7613, 0.67", "52.2019, -0.25201, -27.3069, 0.33", "53.0535, -0.39139, -27.666, 0.67", "59.541, -1.25488, -29.9525, 0.33", "63.0802, -1.77739, -30.9725, 1.33", "67.2696, -2.4355, -31.9867, 0.33", "69.0913, -2.71187, -32.2212, 0.33", "70.3807, -2.86912, -32.3256, 0.67", "75.215, -3.51199, -32.4011, 0.33", "78.6898, -4.02485, -32.1332, 0.33", "80.1376, -4.24079, -31.9602, 0.67", "84.2871, -4.68757, -31.2468, 0.33", "89.2813, -5.0025, -30.4472, 1.33", "90.9364, -5.11055, -30.2034, 1.33", "94.4152, -5.40949, -29.7729, 0.33", "94.8643, -5.43542, -29.6771, 0.67", "97.9227, -5.65864, -28.7546, 0.33", "98.9004, -5.80462, -28.4621, 0.67", "101.411, -6.4636, -28.0386, 0.33", "103.405, -6.99986, -27.8921, 1.33", "108.108, -8.39337, -27.8784, 0.33", "109.007, -8.65015, -27.9715, 0.67", "114.905, -10.1325, -29.0451, 0.33", "117.437, -10.6694, -29.6397, 1.33", "121.837, -11.4913, -30.8295, 0.33", "123.655, -11.7804, -31.4867, 1.33", "129.366, -12.5927, -33.9218, 0.33", "131.636, -12.9158, -34.872, 1.33", "135.37, -13.2874, -36.3284, 0.33", "137.515, -13.5045, -37.1996, 0.67", "143.177, -14.0956, -39.7411, 0.33", "144.37, -14.1817, -40.259, 0.67", "146.109, -14.2506, -40.8943, 0.67", "148.701, -14.1545, -41.5787, 0.33", "150.122, -13.9771, -41.7781, 0.67", "151.767, -13.672, -41.8309, 0.33", "155.049, -12.9561, -41.6631, 0.33", "157.003, -12.4855, -41.5672, 2.0", "161.03, -11.4566, -41.3732, 0.33", "162.668, -11.0825, -41.2805, 0.33", "168.971, -9.63408, -40.9297, 0.33", "169.97, -9.42178, -40.877, 0.67" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "13.5112, -36.0308, -1.46285, 0.67", "19.008, -49.9873, -1.46285, 0.67", "24.5049, -63.9439, -1.46285, 0.67" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "31.6873, 22.3624, -2.56893, 1.33", "36.3099, 21.9, -2.45829, 0.67", "39.1857, 21.4714, -2.55606, 0.67", "40.8285, 21.2266, -2.6119, 0.67", "41.6616, 21.1024, -2.64023, 0.67", "43.7729, 20.7877, -2.712, 0.67", "47.1565, 20.2834, -2.82702, 0.67", "51.3703, 20.1277, -3.31842, 0.67" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "31.6873, 22.3624, -2.56893, 1.33", "33.85, 25.8222, -1.72371, 1.33", "34.9279, 27.5465, -1.30247, 1.33" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-1.534, 32.6439, 9.25645, 2.0", "-4.74155, 32.8989, 6.60845, 0.67", "-8.4757, 33.2375, 3.42161, 0.67", "-13.0245, 33.7335, -0.21179, 0.67", "-15.2572, 33.9455, -1.89901, 0.67", "-21.3151, 34.5724, -5.81877, 0.67", "-28.6596, 35.5714, -9.9852, 0.67", "-29.8411, 35.798, -10.628, 0.67", "-32.8226, 36.569, -12.0724, 0.67", "-37.7685, 38.0856, -13.6485, 0.67", "-43.7808, 40.2068, -14.6546, 0.67", "-47.9564, 42.0153, -14.5101, 0.67", "-51.5208, 43.7532, -13.8583, 0.67", "-52.6779, 44.4906, -13.629, 0.67", "-56.4539, 47.5561, -12.7676, 0.67", "-57.9624, 49.0994, -12.303, 1.33", "-59.7409, 51.2279, -11.7483, 0.67", "-62.3221, 54.262, -10.9999, 0.67", "-67.4846, 60.1149, -9.83168, 0.67", "-68.9412, 61.7709, -9.64832, 0.33", "-70.269, 63.2482, -9.60962, 0.67", "-71.7389, 64.7403, -9.5659, 0.33", "-74.4421, 67.357, -9.4684, 1.33", "-76.6068, 69.418, -9.31373, 1.33", "-78.586, 71.1207, -9.08633, 2.0", "-82.765, 74.5791, -8.66394, 0.67", "-84.9151, 76.3424, -8.48764, 0.67", "-86.4139, 77.6138, -8.33351, 0.67", "-89.542, 80.5796, -7.841, 2.0", "-91.3659, 82.2647, -7.45875, 0.67" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "-1.534, 32.6439, 9.25645, 2.0", "-1.5002, 37.7799, 10.171, 1.33", "-1.47562, 41.5143, 10.836, 1.33" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-56.1827, 36.5249, -129.305, 1.33", "-60.731, 37.1632, -128.321, 0.67", "-65.1414, 37.8253, -128.448, 0.67", "-70.1567, 38.8385, -130.697, 1.33", "-73.4835, 39.5591, -132.784, 0.67", "-75.8156, 40.0255, -134.666, 0.33", "-77.6042, 40.2374, -136.759, 0.33", "-82.4743, 40.2908, -145.074, 1.33", "-84.8808, 40.0397, -150.862, 0.33", "-85.3566, 39.9492, -152.384, 0.33", "-86.3201, 39.5478, -156.175, 2.0", "-88.2221, 37.9975, -166.045, 0.33", "-88.557, 37.4834, -168.52, 1.33", "-88.8876, 36.6537, -171.803, 0.33", "-89.0221, 35.832, -174.599, 1.33", "-89.0795, 34.565, -178.913, 0.67", "-89.0253, 33.7704, -181.546, 0.67", "-88.7622, 32.9916, -183.931, 1.33" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-56.1827, 36.5249, -129.305, 1.33", "-59.9465, 35.9913, -130.379, 0.67", "-64.3232, 35.2234, -131.779, 0.67", "-66.0058, 34.8324, -132.336, 1.33", "-70.1607, 33.8464, -133.692, 0.67", "-75.5746, 32.5744, -135.418, 0.33", "-77.8675, 32.1096, -136.107, 0.33", "-78.8926, 31.9305, -136.541, 1.33", "-80.6422, 31.5847, -137.469, 0.67", "-82.561, 31.1043, -138.461, 0.33", "-83.3874, 30.8262, -138.912, 1.33", "-85.8638, 29.985, -140.124, 0.67", "-89.5321, 28.8813, -142.33, 0.67", "-90.9064, 28.3815, -143.338, 1.33", "-92.8356, 27.5469, -144.967, 0.67", "-95.4614, 26.1645, -147.406, 1.33", "-98.2709, 24.6191, -150.092, 0.67", "-100.24, 23.5569, -152.078, 2.0", "-102.27, 22.5943, -154.13, 0.33", "-102.654, 22.4097, -154.572, 0.67", "-103.166, 22.1297, -155.55, 0.33", "-103.717, 21.6977, -156.94, 0.67", "-104.808, 20.6743, -160.177, 0.33", "-105.39, 20.1682, -161.771, 0.67", "-105.78, 19.8407, -162.79, 1.33", "-109.229, 16.3741, -172.572, 0.33", "-109.761, 15.7501, -174.184, 1.33", "-111.739, 13.1883, -180.18, 0.33", "-112.043, 12.8001, -181.028, 1.33", "-112.501, 12.2679, -182.121, 0.33", "-114.068, 10.5175, -185.338, 0.33", "-114.284, 10.2794, -185.636, 0.67", "-116.864, 7.73166, -188.444, 0.33", "-117.479, 7.18041, -189.013, 1.33", "-118.681, 6.18288, -190.293, 0.33", "-119.069, 5.85724, -190.789, 0.67", "-120.186, 4.93602, -192.325, 0.33", "-121.361, 3.67683, -194.659, 0.67", "-123.286, 1.36464, -199.271, 0.33", "-124.29, 0.0144616, -202.132, 1.33", "-125.142, -1.28352, -205.165, 0.33", "-125.291, -1.56513, -205.855, 0.67", "-125.97, -3.59839, -211.393, 0.67" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-13.3736, 7.78362, -47.7743, 2.0", "-13.6025, 10.0935, -51.1668, 0.67", "-13.876, 14.3092, -57.2061, 1.33", "-13.8982, 17.8447, -62.1748, 0.67", "-13.8828, 23.0178, -69.3804, 2.0", "-14.0314, 28.0175, -76.5527, 0.67", "-14.0564, 28.8911, -77.8001, 1.33", "-14.0848, 30.2044, -79.7126, 0.67", "-14.1215, 32.2177, -82.657, 0.33", "-14.1096, 35.4358, -87.2972, 1.33", "-14.4191, 39.7734, -94.2514, 0.67", "-15.019, 43.7423, -101.287, 0.33", "-15.3693, 45.5669, -104.634, 1.33", "-16.3687, 49.6585, -112.297, 0.33", "-16.6943, 50.7791, -114.409, 1.33", "-19.002, 58.8178, -129.994, 0.67", "-19.8205, 61.4107, -134.792, 0.33", "-20.4879, 63.163, -137.954, 1.33", "-21.6034, 66.0289, -142.654, 0.33", "-22.3713, 67.8744, -145.024, 0.67", "-24.6139, 73.294, -150.231, 0.67", "-26.2927, 78.0917, -152.305, 0.33", "-26.6252, 79.1146, -152.684, 1.33", "-27.4214, 81.5662, -153.674, 0.33", "-27.9953, 83.4138, -154.222, 1.33", "-28.6112, 85.4992, -154.805, 0.33", "-28.7948, 86.0745, -154.813, 0.67", "-29.8233, 90.022, -155.185, 0.33", "-30.3539, 92.2585, -155.588, 0.67" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-13.3736, 7.78362, -47.7743, 2.0", "-12.3311, 8.00742, -50.6117, 0.67", "-9.28272, 8.4126, -58.6794, 1.33", "-6.67566, 8.40179, -65.7615, 0.67", "-5.41704, 8.2817, -69.0826, 0.33", "-4.59147, 8.15323, -71.1652, 2.0", "0.0812821, 7.53878, -82.5488, 0.33", "0.542034, 7.42881, -83.6919, 0.33", "2.4644, 6.68075, -87.9968, 0.33", "3.76726, 5.95721, -91.6644, 1.33", "4.59607, 5.31971, -95.0456, 0.67", "5.10436, 4.82582, -97.9435, 0.33", "5.74316, 3.83602, -103.617, 0.67", "5.90994, 3.28119, -106.813, 1.33", "5.59635, 1.03775, -120.748, 0.67", "5.32213, 0.328992, -124.996, 1.33", "4.61515, -0.97872, -132.453, 0.33", "4.496, -1.18506, -133.538, 0.67", "4.01376, -1.76296, -137.162, 0.33", "3.12142, -2.63472, -143.824, 0.67" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_24",
    "id" : "apic_24",
    "points3d" : [ "51.3703, 20.1277, -3.31842, 0.67", "55.623, 20.2814, -7.96566, 0.67", "57.1092, 20.2306, -9.43097, 0.67", "58.2862, 20.1902, -10.2586, 0.67", "59.6989, 20.1211, -10.9765, 0.33", "63.7243, 19.8509, -12.5018, 1.33", "65.853, 19.6732, -13.2491, 1.33", "67.4957, 19.5111, -13.5877, 0.33", "71.5265, 18.997, -14.4102, 0.67", "73.5186, 18.6364, -14.959, 0.33", "75.5918, 18.1812, -16.0474, 0.67", "76.8318, 17.8977, -17.1597, 2.0", "78.2031, 17.6214, -18.8509, 0.33", "79.1761, 17.3854, -20.3842, 0.33", "80.9198, 16.8592, -23.6712, 1.33", "84.0694, 15.8624, -29.9608, 1.33", "86.1752, 15.1899, -34.557, 0.33", "86.8302, 14.9587, -35.9998, 2.0", "88.4648, 14.2439, -39.8923, 0.33", "88.6927, 14.1298, -40.43, 1.33", "89.4875, 13.5697, -42.2369, 0.33", "90.7533, 12.2877, -45.1535, 1.33", "91.6752, 11.1512, -47.2938, 0.33", "92.7894, 9.35122, -50.4199, 0.67", "93.1945, 8.58962, -51.6033, 0.33", "93.4295, 8.03805, -52.3256, 0.67", "94.0172, 6.3675, -54.4711, 0.33", "94.1863, 5.83904, -55.126, 1.33", "94.5826, 4.66535, -56.8937, 0.33", "94.862, 3.8719, -58.1468, 0.67", "95.3149, 2.51164, -60.3699, 0.67", "96.154, -0.130111, -64.5384, 0.67", "96.5215, -1.6665, -66.9088, 1.33", "97.0343, -3.9763, -70.6102, 0.33", "97.1078, -4.48402, -71.3876, 0.67", "97.1517, -4.96447, -72.1237, 0.33", "97.2121, -5.94891, -73.6174, 1.33", "97.2115, -8.97023, -77.3976, 0.67", "97.1161, -11.8172, -80.8105, 0.67", "96.8571, -14.0593, -83.385, 0.33" ],
    "parent" : "apic_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_23",
    "id" : "apic_23",
    "points3d" : [ "51.3703, 20.1277, -3.31842, 0.67", "54.062, 18.3532, -0.935614, 0.67", "57.0279, 16.4916, 1.42246, 0.67", "58.8006, 15.6349, 2.79171, 0.67", "62.3689, 14.1163, 5.54092, 0.67", "64.2028, 13.313, 7.0769, 0.67", "66.3893, 12.3695, 8.98303, 0.67", "67.9214, 11.8175, 10.3575, 0.67", "71.3722, 10.6835, 13.4074, 0.67", "72.4705, 10.3348, 14.4582, 0.67", "75.3897, 9.7536, 17.223, 0.67", "76.6192, 9.60467, 18.3544, 0.67", "77.7391, 9.42094, 19.4165, 0.67", "79.0659, 9.13744, 20.6364, 0.67", "81.1231, 8.62125, 22.2804, 0.67", "83.0635, 8.22613, 23.6427, 0.67", "85.3849, 7.73542, 25.0592, 0.67", "87.6721, 7.03135, 26.325, 0.33", "89.2534, 6.45907, 27.1714, 0.33", "90.4293, 5.98764, 27.7827, 0.33", "90.8066, 5.76545, 27.956, 0.67", "92.3701, 4.47507, 28.6987, 0.67", "94.375, 2.70057, 29.3219, 0.33", "100.722, -2.52078, 31.5713, 0.33", "107.137, -6.9879, 34.8695, 0.33", "113.565, -11.059, 38.5841, 0.33", "120.69, -14.9364, 40.9802, 0.33" ],
    "parent" : "apic_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "34.9279, 27.5465, -1.30247, 1.33", "37.8881, 27.2376, -3.67381, 0.67", "39.7872, 27.0394, -5.19513, 0.67", "46.8609, 26.3013, -10.8616, 0.67", "51.1804, 25.8506, -14.3218, 0.67", "55.0763, 25.4441, -17.4426, 1.33" ],
    "parent" : "apic_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "34.9279, 27.5465, -1.30247, 1.33", "37.4897, 31.735, -0.874899, 0.67", "40.5254, 38.6156, -0.343987, 0.67", "42.7712, 43.3089, -0.596388, 0.67", "44.2019, 46.2894, -0.891494, 0.67", "45.6109, 48.9867, -1.19323, 0.67", "47.9472, 53.3708, -1.69366, 0.67", "51.9746, 60.8144, -2.66519, 0.67", "56.4828, 69.8085, -3.53776, 0.67", "58.7327, 74.3772, -3.78974, 0.67", "60.989, 79.1719, -3.88893, 0.67", "62.8949, 83.2377, -3.92382, 0.67", "64.9039, 87.1114, -3.86666, 1.33", "68.3509, 93.4611, -3.26297, 0.67", "69.6387, 96.3228, -2.58359, 1.33", "70.8889, 99.2881, -1.72302, 2.0" ],
    "parent" : "apic_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "-91.3659, 82.2647, -7.45875, 0.67", "-92.2702, 83.5899, -7.34591, 0.33", "-93.573, 85.2508, -6.98433, 0.33", "-94.1269, 85.9706, -6.78743, 0.67", "-95.9, 88.2138, -6.10847, 0.33", "-96.8122, 89.316, -5.76288, 1.33", "-98.5175, 91.2644, -5.21885, 1.33", "-100.617, 93.6575, -4.61689, 0.33", "-102.011, 95.1124, -4.22429, 0.67", "-102.775, 95.8038, -4.02186, 0.33", "-104.564, 97.1672, -3.70243, 0.67", "-106.547, 98.4735, -3.46298, 1.33", "-109.425, 100.037, -3.13613, 0.33", "-111.906, 101.163, -2.97795, 0.33", "-112.517, 101.394, -2.93177, 0.33", "-116.136, 102.549, -2.58522, 1.33", "-118.357, 103.132, -2.45611, 0.33", "-121.153, 103.732, -2.3641, 0.33", "-122.308, 103.967, -2.36013, 0.33", "-123.545, 104.265, -2.31954, 1.33", "-126.15, 104.97, -2.09953, 0.33", "-129.169, 105.984, -1.64638, 0.33", "-130.241, 106.467, -1.49699, 2.0", "-132.383, 107.669, -1.16736, 0.67", "-134.649, 109.025, -0.705366, 0.67", "-135.871, 109.811, -0.384975, 0.33", "-137.306, 110.824, 0.108114, 0.67", "-139.288, 112.273, 0.921506, 1.33", "-140.611, 113.271, 1.4229, 0.33", "-141.696, 114.171, 1.79866, 0.33", "-142.859, 115.161, 2.15035, 1.33", "-144.132, 116.262, 2.54231, 0.33", "-146.103, 117.975, 3.14924, 0.67", "-147.463, 119.188, 3.57067, 0.33", "-148.996, 120.601, 4.00358, 1.33", "-151.217, 122.77, 4.63469, 0.33", "-152.407, 124.05, 4.97863, 0.67", "-153.51, 125.317, 5.29967, 0.33", "-154.03, 125.943, 5.45492, 1.33", "-155.662, 127.957, 5.88196, 0.33", "-156.321, 128.766, 6.02955, 1.33", "-158.241, 131.499, 6.41835, 0.33", "-158.739, 132.282, 6.50841, 1.33", "-158.93, 132.653, 6.54017, 1.33", "-159.788, 134.475, 6.66432, 0.33", "-159.947, 134.861, 6.67996, 0.67", "-160.396, 136.109, 6.70699, 0.33", "-161.323, 138.998, 6.68924, 0.67", "-161.856, 140.724, 6.69874, 0.33" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "-91.3659, 82.2647, -7.45875, 0.67", "-92.9303, 82.7098, -6.77584, 1.33", "-95.4938, 83.2854, -5.66585, 0.33", "-97.0487, 83.6146, -5.00285, 0.33", "-98.7285, 84.0514, -4.40463, 0.33", "-103.86, 85.7352, -2.80119, 0.67", "-104.445, 85.9433, -2.63292, 0.33", "-106.005, 86.5939, -2.23867, 0.33", "-106.909, 86.9847, -2.09418, 0.33", "-110.004, 88.1346, -1.78839, 1.33", "-111.797, 88.6081, -1.71267, 0.33", "-112.826, 88.7735, -1.73435, 0.67", "-114.993, 88.9189, -1.83382, 0.33", "-117.922, 89.0638, -1.93545, 0.67", "-120.406, 89.0918, -1.99213, 0.67", "-123.34, 88.9193, -1.97869, 0.33", "-125.937, 88.6946, -1.89984, 0.67", "-130.309, 88.254, -1.57595, 0.67", "-132.803, 87.9858, -1.26749, 0.33", "-133.55, 87.9411, -1.12171, 0.67", "-135.515, 87.9799, -0.695949, 0.33", "-138.283, 88.176, -0.436813, 0.67", "-141.095, 88.5807, -0.492622, 0.33", "-141.558, 88.7009, -0.584872, 0.67", "-143.14, 89.0523, -1.20214, 0.33", "-144.364, 89.3842, -1.74591, 0.67", "-149.805, 91.0624, -4.23398, 0.33", "-150.406, 91.2697, -4.50501, 0.67", "-151.785, 91.7412, -5.02374, 0.33", "-155.894, 92.8685, -6.08806, 0.67", "-158.994, 93.437, -6.54941, 0.33", "-161.256, 93.5848, -6.5645, 0.33", "-163.255, 93.613, -6.43008, 0.33", "-165.346, 93.5351, -6.33761, 0.67", "-167.087, 93.3291, -6.39369, 1.33", "-168.46, 93.04, -6.62597, 1.33", "-173.555, 91.5993, -8.155, 0.33", "-176.507, 90.7082, -9.26201, 0.67", "-179.851, 89.6073, -10.6806, 0.33", "-183.371, 88.54, -12.3955, 0.67", "-187.336, 87.5284, -14.4697, 0.33", "-188.005, 87.4019, -14.8228, 0.67", "-189.527, 87.2063, -15.6765, 0.33", "-189.844, 87.1859, -15.8427, 0.67", "-192.064, 87.4978, -17.0482, 0.33", "-192.961, 87.7558, -17.4735, 0.67", "-194.348, 88.2248, -17.9984, 0.33", "-195.887, 88.5779, -18.5271, 0.67", "-199.107, 89.2421, -19.7314, 0.33", "-201.546, 89.6257, -20.6341, 0.33", "-203.901, 89.808, -21.469, 0.33", "-206.201, 89.8502, -22.3602, 1.33", "-209.379, 89.6426, -23.5706, 0.33" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "-1.47562, 41.5143, 10.836, 1.33", "-3.24179, 44.2467, 15.1051, 1.33", "-4.86632, 46.76, 19.0319, 1.33" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "-1.47562, 41.5143, 10.836, 1.33", "-1.53561, 42.5485, 9.4029, 0.67", "-1.63882, 44.3278, 6.93757, 0.67", "-1.81111, 47.2981, 2.82201, 0.67", "-1.85814, 48.1087, 1.69875, 0.67", "-1.97855, 50.1845, -1.17747, 0.67", "-2.0589, 51.5697, -3.09679, 0.67" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "55.0763, 25.4441, -17.4426, 1.33", "58.5196, 27.5229, -18.6986, 0.67", "61.1187, 29.1949, -20.0919, 0.67", "63.2022, 30.6921, -21.4365, 0.67", "65.61, 32.4471, -22.995, 0.67", "69.4599, 35.0342, -25.6687, 0.67", "72.1414, 36.7563, -27.6546, 1.33", "75.8023, 38.8214, -30.7242, 0.67", "79.8868, 40.6504, -34.4363, 1.33", "82.0171, 41.4426, -36.3223, 0.67", "85.3857, 42.6107, -39.2822, 0.67", "87.976, 43.4282, -41.3964, 1.33", "91.1257, 44.1226, -43.7399, 0.67", "95.6926, 44.5627, -47.0386, 2.0", "98.4119, 44.6963, -49.1198, 0.67", "99.9117, 44.8295, -50.289, 0.67", "101.288, 45.0904, -51.3893, 0.33", "102.099, 45.2685, -52.0523, 1.33", "108.304, 47.327, -57.5186, 0.67", "110.215, 48.0782, -59.3792, 0.33", "111.68, 48.6669, -60.9989, 0.33", "114.407, 49.8236, -64.1043, 1.33", "116.336, 50.7105, -66.2821, 0.67", "117.971, 51.6277, -67.983, 0.33", "120.197, 53.1651, -69.8937, 0.33", "121.566, 53.9052, -71.125, 1.33", "122.58, 54.408, -72.0783, 1.33", "124.763, 55.4677, -74.0723, 0.33", "127.247, 56.7484, -76.4881, 0.33", "128.951, 57.5817, -78.0171, 0.67", "134.367, 60.6461, -82.2671, 0.33", "135.916, 61.535, -83.3744, 1.33", "137.239, 62.3383, -84.2615, 0.33", "139.292, 63.4952, -85.4512, 1.33", "141.995, 65.0541, -86.535, 0.33", "144.974, 67.0608, -86.9603, 0.33", "146.502, 68.2942, -86.8188, 0.67", "148.599, 69.9358, -86.4551, 0.33", "151.452, 72.2724, -85.8062, 0.33", "156.871, 77.2174, -84.9201, 1.33", "159.277, 79.738, -84.8385, 0.33", "160.803, 81.4806, -85.1519, 1.33", "162.616, 84.0404, -86.0888, 0.33", "163.604, 85.5656, -86.8397, 1.33", "166.029, 89.8779, -89.265, 0.33", "166.691, 91.1456, -90.0787, 0.67", "168.313, 94.8467, -92.5012, 0.33", "169.696, 98.6162, -94.9627, 0.33", "170.849, 102.272, -97.2681, 0.33", "171.912, 105.789, -99.298, 0.33", "172.54, 108.06, -100.45, 1.33", "173.202, 110.809, -101.639, 0.33", "173.629, 113.311, -102.54, 0.33", "173.783, 115.073, -103.123, 1.33", "173.736, 117.017, -103.898, 2.0", "173.489, 122.029, -105.914, 0.67", "173.23, 125.775, -107.376, 0.67", "172.78, 130.528, -109.084, 0.33", "172.286, 134.226, -110.484, 0.33", "171.465, 137.712, -111.917, 0.67" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "55.0763, 25.4441, -17.4426, 1.33", "57.9057, 29.1851, -17.92, 0.67", "59.9632, 32.0674, -18.405, 0.67", "62.2853, 35.0018, -19.4213, 0.67", "66.0155, 39.3645, -21.4192, 0.67", "68.1046, 41.7848, -22.7157, 0.33", "69.9082, 43.9404, -23.9984, 0.67", "71.1593, 45.2997, -25.2761, 0.33", "74.4698, 48.8573, -29.471, 0.67", "74.9688, 49.3302, -30.1687, 0.67", "78.4221, 52.0314, -34.8719, 0.67", "79.5823, 52.7945, -36.3076, 0.67", "83.3444, 54.8305, -40.7499, 0.67", "85.3674, 55.7874, -42.8807, 1.33", "88.3347, 57.0694, -45.37, 0.67", "89.6848, 57.5754, -46.3276, 0.67", "93.5812, 58.9183, -48.7956, 1.33", "96.2497, 59.88, -50.243, 0.33", "98.8915, 60.9316, -51.4861, 2.0", "102.674, 62.4992, -52.9829, 0.33", "105.18, 63.5815, -53.7478, 0.67", "109.077, 65.3145, -54.6774, 0.33", "110.893, 66.2437, -54.9547, 0.33", "112.854, 67.2655, -55.1745, 2.0", "117.696, 69.9655, -55.7299, 0.67", "119.454, 71.0298, -55.9219, 0.33", "121.04, 72.0302, -56.1639, 0.67", "123.352, 73.6158, -56.6756, 0.33", "125.5, 75.3204, -57.2719, 1.33", "127.221, 76.8645, -57.9951, 0.67", "128.163, 77.9278, -58.716, 0.67", "130.207, 80.6841, -60.7577, 0.33", "131.37, 82.2371, -62.004, 0.33", "134.543, 85.9375, -64.9884, 0.67", "136.673, 88.2752, -66.3729, 0.33", "137.963, 89.7125, -66.9906, 2.0", "140.161, 91.8533, -68.0298, 0.33", "141.535, 93.1672, -68.5691, 0.33", "143.319, 95.0174, -69.3794, 1.33", "145.211, 97.1345, -70.4617, 0.33", "146.514, 98.5989, -71.0226, 1.33", "150.259, 102.726, -72.2988, 0.33", "151.545, 104.057, -72.787, 0.67", "153.023, 105.582, -73.5855, 0.33", "153.449, 105.976, -73.8307, 0.67", "154.555, 106.808, -74.5747, 0.33", "155.272, 107.275, -75.0546, 1.33", "158.473, 109.396, -77.1799, 0.33", "159.585, 110.079, -77.9957, 0.33", "161.903, 111.47, -79.7571, 0.67", "164.793, 113.147, -82.004, 0.67", "166.7, 114.283, -83.3489, 0.33", "167.642, 114.852, -83.8927, 2.0", "170.075, 116.449, -84.96, 0.67", "170.882, 116.933, -85.2411, 0.33", "173.266, 118.286, -85.7916, 0.33", "176.753, 120.29, -85.7659, 1.33", "178.806, 121.419, -85.6719, 0.33", "180.141, 122.157, -85.5112, 0.33", "181.496, 122.849, -85.2865, 0.67", "183.786, 123.964, -84.8984, 0.33", "189.13, 126.677, -84.1984, 0.67", "191.648, 127.811, -84.3563, 0.33", "195.364, 129.477, -85.0585, 0.67", "197.807, 130.551, -85.7607, 0.33", "199.482, 131.28, -86.4151, 0.33", "202.138, 132.357, -87.7788, 1.33", "208.571, 134.506, -92.0057, 0.33", "210.587, 135.086, -93.3996, 0.33", "212.747, 135.606, -95.0469, 1.33", "214.579, 136.083, -96.4391, 0.33", "214.931, 136.164, -96.6755, 0.67", "218.381, 136.844, -98.4304, 0.33", "219.548, 137.129, -98.8796, 0.67", "222.121, 137.711, -100.032, 0.33", "223.327, 138.027, -100.595, 0.67", "224.947, 138.528, -101.314, 0.33", "225.557, 138.737, -101.547, 0.67", "228.978, 140.083, -102.527, 0.33", "229.649, 140.389, -102.766, 0.67", "231.894, 141.539, -103.701, 0.33", "232.974, 142.083, -104.182, 0.67", "234.87, 143.127, -105.123, 0.33", "236.358, 143.99, -105.885, 0.67", "239.933, 146.096, -107.624, 0.33", "240.713, 146.62, -108.153, 0.67" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "70.8889, 99.2881, -1.72302, 2.0", "70.625, 100.526, -1.76451, 0.67", "70.5069, 101.29, -1.78873, 0.67", "70.1637, 102.576, -1.64716, 0.67", "69.6865, 104.167, -1.39299, 0.67", "69.4697, 105.072, -1.27307, 0.67", "69.2507, 105.989, -1.17223, 0.67", "69.0634, 106.734, -1.10142, 0.67", "68.5285, 109.864, -0.723332, 0.67", "68.3097, 111.353, -0.534506, 0.67", "67.9847, 113.594, -0.160407, 0.67", "67.8085, 114.769, 0.0512514, 0.67", "67.59, 116.105, 0.273227, 0.67", "66.9454, 120.146, 0.981134, 0.67", "66.8005, 121.392, 1.19096, 0.67", "66.6202, 122.891, 1.47906, 0.67", "66.4359, 124.53, 1.86817, 0.67", "66.2266, 127.01, 2.47223, 0.67", "66.0667, 130.033, 3.19878, 0.67", "66.0053, 131.616, 3.54319, 0.67", "66.0162, 133.1, 3.82816, 0.67", "66.1435, 134.848, 4.1059, 0.67", "66.3373, 136.542, 4.47349, 0.67", "66.5604, 137.821, 4.85436, 0.67", "66.858, 139.322, 5.30414, 0.67", "67.2565, 141.447, 5.99989, 0.67", "67.6313, 143.301, 6.65088, 0.67", "68.1851, 146.019, 7.5939, 0.67", "68.5044, 147.361, 8.19838, 0.67", "69.1286, 152.144, 11.0422, 0.67", "68.9181, 157.243, 13.404, 0.67", "68.078, 162.066, 16.1158, 0.67", "65.9974, 166.305, 19.0286, 0.67", "63.8982, 170.528, 21.9505, 0.67", "62.3682, 174.575, 25.4047, 0.67", "61.3817, 178.511, 29.1627, 0.67" ],
    "parent" : "apic_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "70.8889, 99.2881, -1.72302, 2.0", "74.4532, 100.304, 2.20746, 0.67", "76.4908, 100.971, 3.99882, 1.33", "81.4136, 103.411, 7.11642, 0.67", "83.5732, 104.748, 8.74771, 0.67", "86.7997, 106.705, 11.2914, 0.67", "88.7457, 107.964, 12.7722, 0.67", "91.041, 109.523, 14.3341, 0.67", "96.5375, 113.361, 18.3871, 0.67", "102.057, 116.987, 22.4368, 0.67", "104.861, 118.439, 24.7172, 0.67", "108.877, 119.814, 28.3262, 0.67", "111.412, 120.228, 30.7986, 0.67", "115.27, 119.927, 35.0931, 0.67", "117.319, 119.192, 37.512, 0.67", "120.543, 117.685, 41.0918, 0.67", "124.041, 115.64, 45.3711, 0.67", "125.123, 114.82, 46.8021, 0.67", "128.967, 111.776, 51.9339, 0.67", "130.54, 110.76, 53.7491, 0.67", "137.075, 108.539, 63.3439, 0.67", "142.883, 107.478, 73.5584, 0.67", "149.453, 106.943, 83.3295, 0.67", "157.524, 107.911, 91.8498, 0.67" ],
    "parent" : "apic_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "-4.86632, 46.76, 19.0319, 1.33", "-8.07698, 48.5758, 18.1176, 0.67", "-11.5169, 50.2965, 17.8159, 0.67", "-16.8341, 52.9703, 17.2319, 0.67", "-19.2935, 54.0399, 16.9016, 0.67", "-21.9811, 55.0623, 16.4555, 0.67", "-25.3655, 56.1854, 15.8305, 0.67", "-32.8652, 58.558, 13.3125, 0.67", "-39.4893, 60.7313, 10.0111, 0.67", "-42.0135, 61.6349, 8.50921, 0.67", "-44.383, 62.3433, 7.01631, 0.67", "-45.5998, 62.6497, 6.16365, 0.67", "-53.2927, 64.834, -0.709961, 0.67", "-54.351, 65.2532, -2.51815, 0.67", "-62.1994, 70.4024, -13.3962, 0.67", "-69.0787, 75.9377, -24.7437, 0.67", "-75.3353, 80.7593, -36.7433, 0.67", "-81.6883, 85.6919, -48.6487, 0.67", "-85.8577, 88.3056, -62.1239, 0.67", "-91.8453, 93.0072, -74.3052, 0.67", "-98.5491, 97.3926, -86.2211, 0.67", "-106.426, 100.189, -97.8781, 0.67", "-113.023, 104.062, -110.022, 0.67", "-118.259, 108.784, -122.54, 0.67", "-123.302, 113.105, -135.273, 0.67", "-127.613, 119.008, -147.674, 0.67", "-129.593, 125.575, -160.366, 0.67" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "-4.86632, 46.76, 19.0319, 1.33", "-3.75538, 49.9816, 19.4605, 1.33", "-2.2958, 55.0301, 19.8046, 1.33", "-1.56117, 58.4777, 19.8546, 1.33", "-0.717923, 63.7015, 19.763, 1.33", "0.360456, 69.9676, 19.6114, 1.33", "1.33224, 75.844, 19.5493, 1.33", "2.39782, 83.2446, 19.7145, 0.67", "3.05088, 87.6942, 20.0317, 0.67", "3.4156, 90.4373, 20.3128, 0.67", "4.66182, 99.0395, 21.5666, 0.67", "5.30618, 104.138, 22.4048, 0.67", "6.09168, 109.755, 23.615, 0.67", "7.37607, 115.957, 25.2557, 0.67", "8.42179, 119.921, 26.5562, 0.67", "9.46155, 123.674, 27.8849, 0.67", "11.1904, 130.086, 30.1972, 0.67", "11.8074, 132.398, 31.0888, 0.67", "12.7443, 135.934, 32.5212, 0.67", "14.2682, 142.925, 35.6357, 0.67", "15.0722, 147.568, 37.9214, 0.67", "15.3109, 149.903, 39.0779, 1.33", "15.7665, 156.418, 42.4768, 0.67", "15.8188, 160.632, 44.5794, 0.67", "15.5253, 165.434, 46.7551, 0.67", "14.9937, 169.506, 48.4333, 0.67", "14.6575, 171.574, 49.3942, 0.67" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "-2.0589, 51.5697, -3.09679, 0.67", "-5.98201, 51.2914, -12.1298, 0.67", "-7.29795, 51.1684, -14.5218, 0.67", "-10.9985, 50.6663, -20.4229, 0.67", "-16.8487, 49.9903, -28.8755, 1.33", "-20.813, 49.6287, -34.3101, 0.67", "-30.2464, 48.9751, -46.5324, 0.67", "-34.8735, 48.5923, -51.9528, 0.67", "-36.6912, 48.4855, -53.9948, 0.67", "-42.1478, 48.4779, -59.8511, 1.33", "-50.1394, 49.062, -67.7554, 0.67", "-52.2548, 49.3828, -69.7565, 1.33", "-59.3665, 50.9437, -76.0452, 0.67", "-61.5911, 51.5273, -78.1008, 1.33", "-64.2899, 52.3242, -80.5025, 0.67", "-67.8156, 53.4227, -83.5349, 1.33", "-75.4986, 55.8991, -90.0734, 0.33", "-75.8008, 56.0008, -90.3348, 0.67", "-77.3828, 56.5323, -91.7421, 0.33", "-81.4361, 57.8815, -95.6037, 1.33", "-88.0416, 60.1741, -102.197, 0.67", "-90.983, 61.2638, -105.126, 0.67", "-93.1168, 62.1281, -107.304, 1.33", "-98.6099, 64.5172, -112.626, 0.33", "-100.376, 65.2946, -114.273, 0.67", "-103.986, 66.926, -117.431, 0.33", "-106.781, 68.1651, -119.97, 1.33", "-110.788, 69.9385, -123.799, 0.33", "-112.636, 70.7161, -125.655, 1.33", "-116.192, 72.2887, -129.941, 0.33", "-117.906, 73.0699, -132.402, 1.33", "-121.525, 74.8033, -138.656, 1.33", "-122.529, 75.2649, -140.626, 0.33", "-122.876, 75.4476, -141.378, 0.67", "-127.517, 78.1494, -152.024, 0.33", "-127.983, 78.443, -153.096, 0.67", "-131.047, 80.333, -159.814, 0.33", "-133.307, 81.6615, -164.384, 0.67", "-135.517, 82.7932, -168.514, 0.67", "-136.322, 83.1429, -169.777, 0.33", "-137.589, 83.5823, -171.16, 0.67", "-138.457, 83.826, -172.011, 0.33", "-140.462, 84.1672, -172.929, 0.67", "-142.431, 84.2018, -172.977, 0.33", "-143.183, 84.0857, -172.873, 0.33" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "-2.0589, 51.5697, -3.09679, 0.67", "0.259456, 55.1291, -4.02747, 0.67", "1.03729, 56.5307, -4.36715, 0.67", "4.11929, 61.4546, -5.80373, 0.67", "4.97048, 62.7804, -6.23263, 0.67", "7.13333, 66.1532, -7.35196, 1.33", "8.28349, 67.9596, -7.94825, 0.67", "10.8825, 71.9778, -9.34541, 0.67", "14.3249, 76.9753, -11.0762, 0.67", "15.5952, 78.6791, -11.6647, 0.67", "17.0622, 80.5204, -12.2638, 1.33", "18.7546, 82.3859, -12.8255, 1.33", "23.6935, 87.1212, -14.362, 0.67", "24.8542, 88.0706, -14.6767, 1.33", "26.4852, 89.3139, -15.0607, 0.67", "27.698, 90.1205, -15.3349, 0.33", "29.9763, 91.4429, -15.9305, 2.0", "33.022, 93.0872, -16.8943, 1.33", "35.1587, 94.2108, -17.7052, 0.67", "38.3235, 96.0244, -19.0582, 0.33", "38.6522, 96.2269, -19.2155, 0.67", "41.1291, 97.7942, -20.5245, 0.33", "42.3898, 98.7724, -21.3297, 0.33", "42.7979, 99.1737, -21.6902, 0.67", "43.1415, 99.5164, -22.0412, 0.33", "43.627, 99.9955, -22.5385, 0.67", "44.5226, 100.881, -23.3763, 0.33", "46.2902, 102.47, -24.9826, 2.0", "48.5976, 104.302, -26.988, 0.67", "49.8954, 105.245, -28.1603, 0.33", "51.4241, 106.194, -29.508, 1.33", "52.5332, 106.803, -30.4618, 0.33", "55.4838, 108.214, -32.8232, 0.67", "56.4272, 108.614, -33.4689, 2.0", "59.1547, 109.855, -34.9553, 0.33", "61.1751, 110.872, -36.0805, 0.33", "61.6846, 111.13, -36.3914, 1.33", "63.5746, 112.106, -37.5753, 0.33", "65.1809, 112.967, -38.6514, 1.33", "68.9726, 115.049, -41.48, 0.33", "71.0314, 116.214, -43.0588, 0.67", "73.2513, 117.5, -44.9648, 0.33", "73.5322, 117.651, -45.2392, 0.67", "75.2041, 118.513, -47.1037, 0.33", "76.1734, 118.962, -48.2737, 1.33", "77.8484, 119.674, -50.1376, 0.33", "78.6732, 120.02, -50.915, 1.33", "81.0063, 121.019, -52.9808, 0.33", "82.8407, 121.765, -54.5595, 2.0", "86.3075, 123.099, -57.4158, 0.33", "88.0774, 123.8, -59.2732, 2.0", "90.1173, 124.694, -62.5203, 0.33", "90.6663, 124.938, -63.4371, 0.67", "91.31, 125.226, -64.7279, 0.33", "91.5717, 125.355, -65.5017, 1.33", "92.635, 126.273, -72.2791, 0.67", "93.0829, 127.023, -78.3021, 0.67" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "14.6575, 171.574, 49.3942, 0.67", "12.7947, 174.415, 50.3841, 0.67", "10.3093, 178.206, 51.7049, 0.67", "4.1433, 187.564, 55.297, 0.67", "-1.46222, 196.589, 60.3541, 0.67", "-7.46703, 205.8, 64.5414, 0.67", "-14.292, 214.099, 69.1826, 0.67", "-19.6428, 223.758, 73.3551, 0.67", "-26.3023, 233.345, 74.7932, 0.67", "-33.1134, 242.852, 73.7826, 0.67", "-39.8471, 252.474, 74.3104, 0.67", "-45.1798, 262.993, 75.3521, 0.67", "-51.3408, 272.728, 77.8351, 0.67", "-57.2129, 282.082, 81.9202, 0.67" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "14.6575, 171.574, 49.3942, 0.67", "20.6478, 174.552, 45.9181, 0.67", "24.5431, 175.73, 43.9785, 0.67", "27.5806, 175.998, 42.5458, 0.67", "28.9434, 176.077, 41.9161, 0.67", "30.7332, 176.276, 41.1026, 0.67", "32.2564, 176.5, 40.4955, 0.67", "35.6887, 177.151, 39.3193, 0.67", "38.526, 177.714, 38.3846, 0.67", "40.151, 178.017, 38.0018, 0.67", "44.8325, 179.037, 36.97, 0.67", "47.0331, 179.598, 36.5795, 1.33", "50.714, 180.738, 36.119, 0.67", "54.3974, 182.132, 35.8924, 1.33", "57.0306, 183.314, 35.9235, 1.33", "61.312, 185.319, 36.1754, 0.67", "63.1335, 186.202, 36.3922, 2.0", "65.7065, 187.474, 36.779, 0.67", "66.6631, 187.974, 36.9563, 0.67", "70.4135, 190.122, 37.6878, 1.33", "73.1216, 191.754, 38.1851, 0.67", "74.4172, 192.531, 38.3839, 0.67", "75.6059, 193.193, 38.4835, 0.33", "78.1521, 194.452, 38.4242, 1.33", "80.4049, 195.348, 38.1481, 0.33", "83.055, 196.299, 37.6285, 0.67", "86.3893, 197.666, 36.8482, 0.67", "88.5223, 198.623, 36.3281, 0.33", "92.3788, 200.341, 35.2822, 2.66", "96.9894, 202.221, 34.014, 0.33", "97.9678, 202.591, 33.7265, 0.33", "99.3619, 203.105, 33.4055, 0.67", "101.182, 203.955, 33.1215, 0.33", "103.996, 205.589, 32.8436, 0.67", "105.679, 206.732, 33.0085, 0.33", "107.469, 208.086, 33.4728, 0.33", "110.827, 210.606, 34.5426, 2.0", "113.317, 212.62, 35.5452, 0.33", "113.538, 212.819, 35.6218, 0.67", "115.07, 214.358, 36.1572, 0.33", "115.07, 214.358, 36.1572, 0.67", "115.972, 214.984, 36.0476, 0.33", "117.63, 215.948, 35.6983, 2.0", "121.251, 217.755, 34.8257, 0.33", "121.838, 218.04, 34.6624, 0.67", "125.129, 219.547, 33.5751, 0.33", "126.256, 220.034, 33.1864, 1.33", "128.541, 220.91, 32.3338, 0.33", "131.151, 221.764, 31.3212, 0.67" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "axon_0", "apic_14", "apic_1", "axon_1", "apic_22", "apic_15", "apic_11", "apic_2", "apic_24", "apic_23", "apic_19", "apic_16", "apic_13", "apic_12", "apic_6", "apic_3", "apic_21", "apic_20", "apic_18", "apic_17", "apic_10", "apic_7", "apic_5", "apic_4", "apic_9", "apic_8" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_8", "dend_7", "dend_4", "dend_3", "dend_0", "apic_14", "apic_1", "dend_12", "dend_9", "dend_6", "dend_5", "dend_2", "dend_1", "apic_22", "apic_15", "apic_11", "apic_2", "dend_14", "dend_13", "dend_11", "dend_10", "apic_24", "apic_23", "apic_19", "apic_16", "apic_13", "apic_12", "apic_6", "apic_3", "apic_21", "apic_20", "apic_18", "apic_17", "apic_10", "apic_7", "apic_5", "apic_4", "apic_9", "apic_8" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_14", "apic_1", "apic_22", "apic_15", "apic_11", "apic_2", "apic_24", "apic_23", "apic_19", "apic_16", "apic_13", "apic_12", "apic_6", "apic_3", "apic_21", "apic_20", "apic_18", "apic_17", "apic_10", "apic_7", "apic_5", "apic_4", "apic_9", "apic_8" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_6",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "apic_14", "apic_1", "apic_22", "apic_15", "apic_11", "apic_2", "apic_24", "apic_23", "apic_19", "apic_16", "apic_13", "apic_12", "apic_6", "apic_3", "apic_21", "apic_20", "apic_18", "apic_17", "apic_10", "apic_7", "apic_5", "apic_4", "apic_9", "apic_8" ]
  }, {
    "name" : "ModelViewParmSubset_7",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_8", "dend_7", "dend_4", "dend_3", "dend_0", "apic_14", "apic_1", "dend_12", "dend_9", "dend_6", "dend_5", "dend_2", "dend_1", "apic_22", "apic_15", "apic_11", "apic_2", "dend_14", "dend_13", "dend_11", "dend_10", "apic_24", "apic_23", "apic_19", "apic_16", "apic_13", "apic_12", "apic_6", "apic_3", "apic_21", "apic_20", "apic_18", "apic_17", "apic_10", "apic_7", "apic_5", "apic_4", "apic_9", "apic_8" ]
  }, {
    "name" : "ModelViewParmSubset_8",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_8", "dend_7", "dend_4", "dend_3", "dend_0", "dend_12", "dend_9", "dend_6", "dend_5", "dend_2", "dend_1", "dend_14", "dend_13", "dend_11", "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "apic_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "apic_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "apic_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "apic_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "apic_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "apic_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "apic_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "apic_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "apic_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "apic_19" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14", "apic_15", "apic_16", "apic_17", "apic_18", "apic_19", "apic_20", "apic_21", "apic_22", "apic_23", "apic_24" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_1", "apic_1", "apic_1", "apic_1", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_15", "apic_15", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_2", "apic_2", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_6", "apic_6", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "2.0"
  }, {
    "group" : "apical",
    "value" : "2.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "all_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "all",
    "condDens" : "3.0000001E-5",
    "erev" : "-75.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "basal",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.022874",
    "erev" : "50.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.039967",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "9.999999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999904",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.071165994",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "5.5999997E-5",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.097243994",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.42883396",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004779",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.283745",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0029709998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.999812",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "somatic",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "8.6000003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.001612",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.7899998E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0068679997",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_230_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_230_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cADpyr230_L4_SS_a5ca6392b3_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: soma_0
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_14, id: apic_14, parent: apic_0
create apic_14
public apic_14
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_22, id: apic_22, parent: apic_14
create apic_22
public apic_22
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: apic_11, id: apic_11, parent: apic_1
create apic_11
public apic_11
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: apic_24, id: apic_24, parent: apic_22
create apic_24
public apic_24
// Section: apic_23, id: apic_23, parent: apic_22
create apic_23
public apic_23
// Section: apic_19, id: apic_19, parent: apic_15
create apic_19
public apic_19
// Section: apic_16, id: apic_16, parent: apic_15
create apic_16
public apic_16
// Section: apic_13, id: apic_13, parent: apic_11
create apic_13
public apic_13
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12
// Section: apic_6, id: apic_6, parent: apic_2
create apic_6
public apic_6
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: apic_21, id: apic_21, parent: apic_19
create apic_21
public apic_21
// Section: apic_20, id: apic_20, parent: apic_19
create apic_20
public apic_20
// Section: apic_18, id: apic_18, parent: apic_16
create apic_18
public apic_18
// Section: apic_17, id: apic_17, parent: apic_16
create apic_17
public apic_17
// Section: apic_10, id: apic_10, parent: apic_6
create apic_10
public apic_10
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: apic_5, id: apic_5, parent: apic_3
create apic_5
public apic_5
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: apic_9, id: apic_9, parent: apic_7
create apic_9
public apic_9
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_14, apic_1, axon_1, apic_22, apic_15, apic_11, apic_2, apic_24, apic_23, apic_19, apic_16, apic_13, apic_12, apic_6, apic_3, apic_21, apic_20, apic_18, apic_17, apic_10, apic_7, apic_5, apic_4, apic_9, apic_8]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_8, dend_7, dend_4, dend_3, dend_0, apic_14, apic_1, dend_12, dend_9, dend_6, dend_5, dend_2, dend_1, apic_22, apic_15, apic_11, apic_2, dend_14, dend_13, dend_11, dend_10, apic_24, apic_23, apic_19, apic_16, apic_13, apic_12, apic_6, apic_3, apic_21, apic_20, apic_18, apic_17, apic_10, apic_7, apic_5, apic_4, apic_9, apic_8]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_14, apic_1, apic_22, apic_15, apic_11, apic_2, apic_24, apic_23, apic_19, apic_16, apic_13, apic_12, apic_6, apic_3, apic_21, apic_20, apic_18, apic_17, apic_10, apic_7, apic_5, apic_4, apic_9, apic_8]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_5
// Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_14, apic_1, apic_22, apic_15, apic_11, apic_2, apic_24, apic_23, apic_19, apic_16, apic_13, apic_12, apic_6, apic_3, apic_21, apic_20, apic_18, apic_17, apic_10, apic_7, apic_5, apic_4, apic_9, apic_8]}
objref ModelViewParmSubset_6
// Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_8, dend_7, dend_4, dend_3, dend_0, apic_14, apic_1, dend_12, dend_9, dend_6, dend_5, dend_2, dend_1, apic_22, apic_15, apic_11, apic_2, dend_14, dend_13, dend_11, dend_10, apic_24, apic_23, apic_19, apic_16, apic_13, apic_12, apic_6, apic_3, apic_21, apic_20, apic_18, apic_17, apic_10, apic_7, apic_5, apic_4, apic_9, apic_8]}
objref ModelViewParmSubset_7
// Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_8, dend_7, dend_4, dend_3, dend_0, dend_12, dend_9, dend_6, dend_5, dend_2, dend_1, dend_14, dend_13, dend_11, dend_10]}
objref ModelViewParmSubset_8
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_24]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[apic_23]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[apic_16]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[apic_21]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[apic_20]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[apic_18]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_17]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_15]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[apic_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[apic_19]}
objref OneSecGrp_SectionRef_28
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18, apic_19, apic_20, apic_21, apic_22, apic_23, apic_24], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_14, apic_14, apic_14, apic_14, apic_14, apic_1, apic_1, apic_1, apic_1, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_15, apic_15, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_2, apic_2, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_19, apic_19, apic_19, apic_19, apic_19, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_6, apic_6, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_230_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_230_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.49999980255005216)
    connect dend_8(0), soma_0(0.49999980255005216)
    connect dend_7(0), soma_0(0.49999980255005216)
    connect dend_4(0), soma_0(0.49999980255005216)
    connect dend_3(0), soma_0(0.49999980255005216)
    connect dend_0(0), soma_0(0.49999980255005216)
    connect axon_0(0), soma_0(1.0)
    connect apic_14(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_22(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect apic_11(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect apic_24(0), apic_22(1.0)
    connect apic_23(0), apic_22(1.0)
    connect apic_19(0), apic_15(1.0)
    connect apic_16(0), apic_15(1.0)
    connect apic_13(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)
    connect apic_6(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect apic_21(0), apic_19(1.0)
    connect apic_20(0), apic_19(1.0)
    connect apic_18(0), apic_16(1.0)
    connect apic_17(0), apic_16(1.0)
    connect apic_10(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect apic_5(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect apic_9(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.61187, 7.44498, 0.866331, 2.79576 ) }
    soma_0 { pt3dadd( -3.3054, 6.66685, 0.749872, 4.62937 ) }
    soma_0 { pt3dadd( -2.99893, 5.88871, 0.633413, 9.44099 ) }
    soma_0 { pt3dadd( -2.69245, 5.11057, 0.516954, 10.6771 ) }
    soma_0 { pt3dadd( -2.38598, 4.33244, 0.400495, 11.456 ) }
    soma_0 { pt3dadd( -2.07951, 3.5543, 0.284037, 12.291 ) }
    soma_0 { pt3dadd( -1.77304, 2.77617, 0.167578, 13.3244 ) }
    soma_0 { pt3dadd( -1.46657, 1.99803, 0.0511187, 13.7188 ) }
    soma_0 { pt3dadd( -1.1601, 1.2199, -0.0653402, 14.0825 ) }
    soma_0 { pt3dadd( -0.853627, 0.441759, -0.181799, 14.4988 ) }
    soma_0 { pt3dadd( -0.547156, -0.336377, -0.298258, 14.812 ) }
    soma_0 { pt3dadd( -0.240684, -1.11451, -0.414717, 15.1151 ) }
    soma_0 { pt3dadd( 0.0657868, -1.89265, -0.531176, 15.4182 ) }
    soma_0 { pt3dadd( 0.372258, -2.67078, -0.647635, 15.7213 ) }
    soma_0 { pt3dadd( 0.678729, -3.44892, -0.764094, 15.9751 ) }
    soma_0 { pt3dadd( 0.985201, -4.22706, -0.880552, 16.1398 ) }
    soma_0 { pt3dadd( 1.29167, -5.00519, -0.997011, 15.9669 ) }
    soma_0 { pt3dadd( 1.59814, -5.78333, -1.11347, 14.7731 ) }
    soma_0 { pt3dadd( 1.90461, -6.56146, -1.22993, 13.2593 ) }
    soma_0 { pt3dadd( 2.21109, -7.3396, -1.34639, 11.7454 ) }
    soma_0 { pt3dadd( 2.51756, -8.11774, -1.46285, 6.36743 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 0.469659, 7.42939, 6.21995, 3.99 ) }
    apic_0 { pt3dadd( 0.76873, 9.95078, 8.54099, 3.99 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 23/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -0.950739, 2.31765, -8.54969, 1.33 ) }
    dend_8 { pt3dadd( -1.55851, 3.76855, -16.8553, 1.33 ) }
    dend_8 { pt3dadd( -3.37285, 3.94171, -19.771, 1.33 ) }
    dend_8 { pt3dadd( -5.81018, 4.17434, -23.6879, 1.33 ) }
    dend_8 { pt3dadd( -8.66949, 4.44724, -28.2829, 1.33 ) }
    dend_8 { pt3dadd( -9.91476, 4.56609, -30.2841, 1.33 ) }
    dend_8 { pt3dadd( -16.0574, 5.15236, -40.1557, 1.33 ) }
    dend_8 { pt3dadd( -17.394, 5.15697, -42.9583, 1.33 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 31/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -6.15726, 0.0419292, 6.67824, 1.33 ) }
    dend_7 { pt3dadd( -8.82648, -0.31029, 9.67223, 1.33 ) }
    dend_7 { pt3dadd( -18.0029, -2.39643, 18.217, 1.33 ) }
    dend_7 { pt3dadd( -19.7856, -2.61339, 19.3634, 0.67 ) }
    dend_7 { pt3dadd( -23.1642, -2.31633, 20.4726, 0.67 ) }
    dend_7 { pt3dadd( -27.2051, -1.74133, 20.9783, 0.67 ) }
    dend_7 { pt3dadd( -32.2443, -0.56624, 21.1194, 0.67 ) }
    dend_7 { pt3dadd( -35.3875, 0.370539, 20.9892, 0.67 ) }
    dend_7 { pt3dadd( -38.7227, 1.69986, 20.5356, 0.67 ) }
    dend_7 { pt3dadd( -45.8524, 4.78649, 19.8736, 0.67 ) }
    dend_7 { pt3dadd( -51.2782, 6.95591, 20.014, 0.67 ) }
    dend_7 { pt3dadd( -59.5821, 10.102, 20.9962, 0.67 ) }
    dend_7 { pt3dadd( -65.3495, 12.2442, 22.0657, 0.67 ) }
    dend_7 { pt3dadd( -71.256, 14.4202, 23.4804, 0.67 ) }
    dend_7 { pt3dadd( -75.5102, 15.7986, 24.6763, 0.67 ) }
    dend_7 { pt3dadd( -85.6542, 19.0961, 27.9337, 0.67 ) }
    dend_7 { pt3dadd( -93.4799, 21.6935, 30.4472, 0.67 ) }
    dend_7 { pt3dadd( -95.7983, 22.376, 31.1253, 0.67 ) }
    dend_7 { pt3dadd( -102.07, 24.2449, 32.6224, 0.67 ) }
    dend_7 { pt3dadd( -106.403, 25.4328, 33.664, 0.67 ) }
    dend_7 { pt3dadd( -110.877, 26.975, 34.4503, 0.67 ) }
    dend_7 { pt3dadd( -116.895, 29.4963, 35.0148, 0.67 ) }
    dend_7 { pt3dadd( -119.341, 30.5342, 35.3123, 1.33 ) }
    dend_7 { pt3dadd( -121.306, 31.3916, 35.5658, 0.67 ) }
    dend_7 { pt3dadd( -127.44, 34.1242, 36.3095, 0.67 ) }
    dend_7 { pt3dadd( -129.923, 35.1238, 36.6921, 0.67 ) }
    dend_7 { pt3dadd( -136.398, 37.5562, 37.6221, 0.67 ) }
    dend_7 { pt3dadd( -138.428, 38.2831, 37.8193, 0.67 ) }
    dend_7 { pt3dadd( -141.353, 39.1665, 37.7278, 0.67 ) }
    dend_7 { pt3dadd( -146.006, 40.1619, 37.2914, 0.67 ) }
    dend_7 { pt3dadd( -151.337, 41.041, 36.4927, 0.67 ) }
    dend_7 { pt3dadd( -155.2, 41.4523, 35.7821, 0.67 ) }
    dend_7 { pt3dadd( -161.112, 41.7711, 34.5363, 0.67 ) }
    dend_7 { pt3dadd( -165.964, 41.9177, 33.4843, 0.67 ) }
    dend_7 { pt3dadd( -175.076, 42.052, 31.4862, 0.67 ) }
    dend_7 { pt3dadd( -178.032, 41.9434, 30.8026, 0.67 ) }
    dend_7 { pt3dadd( -181.864, 41.7957, 29.9423, 0.67 ) }
    dend_7 { pt3dadd( -185.549, 41.512, 29.1631, 0.67 ) }
    dend_7 { pt3dadd( -187.563, 41.478, 28.6521, 0.67 ) }
    dend_7 { pt3dadd( -190.31, 41.5118, 27.6036, 0.67 ) }
    dend_7 { pt3dadd( -193.739, 41.5852, 25.7373, 0.67 ) }
    dend_7 { pt3dadd( -197.307, 41.782, 23.6542, 0.67 ) }
    dend_7 { pt3dadd( -200.288, 42.0765, 21.8251, 0.67 ) }
    dend_7 { pt3dadd( -208.363, 43.0788, 16.458, 0.67 ) }
    dend_7 { pt3dadd( -214.258, 43.7552, 12.365, 0.67 ) }
    dend_7 { pt3dadd( -218.027, 44.2307, 9.65288, 0.67 ) }
    dend_7 { pt3dadd( -219.838, 44.5006, 8.35602, 0.67 ) }
    dend_7 { pt3dadd( -222.588, 44.9322, 6.36217, 0.33 ) }
    dend_7 { pt3dadd( -223.33, 45.099, 5.87161, 0.67 ) }
    dend_7 { pt3dadd( -226.575, 45.7998, 4.12971, 0.33 ) }
    dend_7 { pt3dadd( -227.157, 46.0031, 3.97186, 0.67 ) }
    dend_7 { pt3dadd( -229.348, 46.9589, 3.79063, 0.33 ) }
    dend_7 { pt3dadd( -230.908, 47.6145, 3.83223, 0.67 ) }
    dend_7 { pt3dadd( -232.885, 48.4343, 3.74771, 1.33 ) }
    dend_7 { pt3dadd( -235.715, 49.5563, 2.97704, 0.33 ) }
    dend_7 { pt3dadd( -236.433, 49.8679, 2.67261, 0.67 ) }
    dend_7 { pt3dadd( -238.218, 50.6018, 1.74404, 0.33 ) }
    dend_7 { pt3dadd( -241.538, 51.8008, -0.529341, 0.67 ) }
    dend_7 { pt3dadd( -245.973, 53.3356, -3.9709, 1.33 ) }
    dend_7 { pt3dadd( -249.167, 54.5705, -6.71298, 0.33 ) }
    dend_7 { pt3dadd( -250.711, 55.2813, -8.19224, 1.33 ) }
    dend_7 { pt3dadd( -252.758, 56.2871, -10.2022, 0.67 ) }
    dend_7 { pt3dadd( -255.345, 57.65, -12.777, 0.67 ) }
    dend_7 { pt3dadd( -256.506, 58.3796, -13.9315, 0.67 ) }
    dend_7 { pt3dadd( -258.095, 59.4213, -15.1749, 1.33 ) }
    dend_7 { pt3dadd( -261.04, 61.1934, -17.2533, 0.33 ) }
    dend_7 { pt3dadd( -261.358, 61.366, -17.4906, 0.67 ) }
    dend_7 { pt3dadd( -262.264, 61.8752, -18.1828, 0.33 ) }
    dend_7 { pt3dadd( -263.163, 62.4006, -18.7763, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_7 { pt3dadd( -264.646, 63.2982, -19.7476, 0.33 ) }
    dend_7 { pt3dadd( -267.745, 65.251, -21.679, 2.0 ) }
    dend_7 { pt3dadd( -270.955, 67.6354, -23.5175, 0.33 ) }
    dend_7 { pt3dadd( -271.537, 68.1496, -23.8609, 1.33 ) }
    dend_7 { pt3dadd( -273.714, 70.2985, -25.1948, 0.33 ) }
    dend_7 { pt3dadd( -274.551, 71.2302, -25.7105, 0.33 ) }
    dend_7 { pt3dadd( -275.1, 71.9442, -26.0314, 0.67 ) }
    dend_7 { pt3dadd( -276.195, 73.7979, -26.4556, 0.33 ) }
    dend_7 { pt3dadd( -276.423, 74.336, -26.4842, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: soma_0 (entry count 9/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -2.81097, -3.98004, 7.23884, 1.33 ) }
    dend_4 { pt3dadd( -4.77708, -7.74979, 12.8492, 1.33 ) }
    dend_4 { pt3dadd( -4.71679, -9.87418, 15.2422, 1.33 ) }
    dend_4 { pt3dadd( -4.5644, -15.2439, 21.2907, 1.33 ) }
    dend_4 { pt3dadd( -4.47952, -18.2349, 24.6598, 1.33 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 14/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 2.59981, 1.25545, 8.42446, 1.33 ) }
    dend_3 { pt3dadd( 4.75972, 1.63922, 14.4142, 1.33 ) }
    dend_3 { pt3dadd( 6.14902, 0.532887, 11.8203, 0.67 ) }
    dend_3 { pt3dadd( 8.41632, -0.90886, 8.29658, 0.67 ) }
    dend_3 { pt3dadd( 14.558, -3.90989, 0.796666, 0.67 ) }
    dend_3 { pt3dadd( 16.2207, -4.44189, -0.754503, 0.67 ) }
    dend_3 { pt3dadd( 17.6719, -4.90864, -1.67778, 0.67 ) }
    dend_3 { pt3dadd( 19.6043, -5.62506, -2.52356, 0.33 ) }
    dend_3 { pt3dadd( 21.3168, -6.27517, -2.78968, 1.33 ) }
    dend_3 { pt3dadd( 24.1041, -7.81405, -2.55187, 0.67 ) }
    dend_3 { pt3dadd( 27.2381, -10.154, -1.51647, 0.67 ) }
    dend_3 { pt3dadd( 32.4524, -14.5041, 0.823308, 0.67 ) }
    dend_3 { pt3dadd( 34.3258, -16.296, 1.81951, 0.67 ) }
    dend_3 { pt3dadd( 37.6749, -19.4501, 3.84795, 1.33 ) }
    dend_3 { pt3dadd( 42.0471, -23.5465, 6.68478, 0.67 ) }
    dend_3 { pt3dadd( 44.8752, -26.5114, 8.63885, 0.67 ) }
    dend_3 { pt3dadd( 47.9274, -29.8329, 10.8841, 0.67 ) }
    dend_3 { pt3dadd( 50.76, -32.5864, 12.8987, 0.67 ) }
    dend_3 { pt3dadd( 56.1583, -37.4517, 16.3959, 0.67 ) }
    dend_3 { pt3dadd( 57.853, -38.8707, 17.3192, 0.67 ) }
    dend_3 { pt3dadd( 63.2942, -43.4144, 20.0652, 0.67 ) }
    dend_3 { pt3dadd( 66.3131, -46.3448, 21.5593, 0.67 ) }
    dend_3 { pt3dadd( 68.5341, -48.7119, 22.6189, 0.67 ) }
    dend_3 { pt3dadd( 72.1389, -52.5363, 24.4156, 0.67 ) }
    dend_3 { pt3dadd( 74.3161, -54.9946, 25.5021, 0.67 ) }
    dend_3 { pt3dadd( 76.2435, -57.2337, 26.4809, 0.67 ) }
    dend_3 { pt3dadd( 80.3706, -62.2328, 28.5814, 0.67 ) }
    dend_3 { pt3dadd( 82.1299, -64.8191, 29.5106, 0.67 ) }
    dend_3 { pt3dadd( 83.4512, -67.1679, 30.2892, 1.33 ) }
    dend_3 { pt3dadd( 85.0704, -70.3285, 31.4193, 0.67 ) }
    dend_3 { pt3dadd( 87.114, -74.7322, 32.9887, 0.67 ) }
    dend_3 { pt3dadd( 88.5124, -77.8724, 34.0285, 0.67 ) }
    dend_3 { pt3dadd( 89.3672, -80.2137, 34.5584, 0.67 ) }
    dend_3 { pt3dadd( 90.0583, -82.9289, 35.1207, 0.67 ) }
    dend_3 { pt3dadd( 100.644, -89.7982, 38.91, 0.67 ) }
    dend_3 { pt3dadd( 110.174, -97.513, 43.8427, 0.67 ) }
    dend_3 { pt3dadd( 118.996, -106.255, 48.5358, 0.67 ) }
    dend_3 { pt3dadd( 127.512, -115.404, 53.0848, 0.67 ) }
    dend_3 { pt3dadd( 134.262, -125.921, 57.884, 0.67 ) }
    dend_3 { pt3dadd( 141.053, -135.299, 64.4313, 0.67 ) }
    dend_3 { pt3dadd( 148.927, -144.585, 69.7963, 0.67 ) }
    dend_3 { pt3dadd( 158.006, -152.193, 75.6343, 0.67 ) }
    dend_3 { pt3dadd( 168.519, -159.669, 78.4875, 0.67 ) }
    dend_3 { pt3dadd( 180.113, -165.603, 80.1903, 0.67 ) }
    dend_3 { pt3dadd( 191.745, -171.686, 80.8908, 0.67 ) }
    dend_3 { pt3dadd( 203.123, -178.132, 79.3609, 0.67 ) }
    dend_3 { pt3dadd( 215.119, -183.358, 78.5989, 0.67 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 61/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.61311, -1.63339, -4.80409, 1.33 ) }
    dend_0 { pt3dadd( 8.28212, -2.22025, -5.99015, 1.33 ) }
    dend_0 { pt3dadd( 12.9324, -2.58759, -6.41419, 1.33 ) }
    dend_0 { pt3dadd( 17.6921, -2.46997, -6.76122, 1.33 ) }
    dend_0 { pt3dadd( 20.5093, -2.15895, -7.05736, 0.67 ) }
    dend_0 { pt3dadd( 23.5839, -1.74307, -7.60879, 0.67 ) }
    dend_0 { pt3dadd( 28.1599, -1.15005, -8.82028, 0.67 ) }
    dend_0 { pt3dadd( 30.2658, -0.95816, -9.80113, 1.33 ) }
    dend_0 { pt3dadd( 33.492, -0.67161, -11.7364, 0.67 ) }
    dend_0 { pt3dadd( 35.942, -0.125578, -13.4539, 0.67 ) }
    dend_0 { pt3dadd( 38.2317, 0.600929, -16.4671, 0.67 ) }
    dend_0 { pt3dadd( 39.3127, 0.937617, -18.4929, 0.67 ) }
    dend_0 { pt3dadd( 41.0549, 1.23821, -22.422, 2.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 74/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.51756, -8.11774, -1.46285, 0.67 ) }
    axon_0 { pt3dadd( 8.01439, -22.0743, -1.46285, 0.67 ) }
    axon_0 { pt3dadd( 13.5112, -36.0308, -1.46285, 0.67 ) }
    // Section: apic_14, id: apic_14, parent: apic_0 (entry count 77/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 0.76873, 9.95078, 8.54099, 3.99 ) }
    apic_14 { pt3dadd( 6.41998, 12.2193, 6.51034, 1.33 ) }
    apic_14 { pt3dadd( 13.5489, 15.0811, 3.9487, 1.33 ) }
    apic_14 { pt3dadd( 18.6971, 17.1477, 2.09881, 1.33 ) }
    apic_14 { pt3dadd( 24.4809, 19.4695, 0.0205335, 1.33 ) }
    apic_14 { pt3dadd( 31.6873, 22.3624, -2.56893, 1.33 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 83/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 0.76873, 9.95078, 8.54099, 3.99 ) }
    apic_1 { pt3dadd( 0.305457, 14.5163, 8.68493, 2.66 ) }
    apic_1 { pt3dadd( -0.331375, 20.7922, 8.8828, 2.0 ) }
    apic_1 { pt3dadd( -0.999563, 27.3771, 9.0904, 2.0 ) }
    apic_1 { pt3dadd( -1.534, 32.6439, 9.25645, 2.0 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 88/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -17.394, 5.15697, -42.9583, 1.33 ) }
    dend_12 { pt3dadd( -20.7877, 7.30391, -48.5904, 0.67 ) }
    dend_12 { pt3dadd( -21.9923, 8.25478, -50.6624, 0.67 ) }
    dend_12 { pt3dadd( -24.1388, 9.66741, -54.6884, 0.67 ) }
    dend_12 { pt3dadd( -29.9703, 14.0027, -65.2352, 0.67 ) }
    dend_12 { pt3dadd( -33.5102, 17.0539, -73.0404, 1.33 ) }
    dend_12 { pt3dadd( -37.4063, 20.4121, -81.6311, 0.67 ) }
    dend_12 { pt3dadd( -40.1898, 22.7498, -88.3896, 0.67 ) }
    dend_12 { pt3dadd( -46.5987, 27.6915, -103.934, 0.67 ) }
    dend_12 { pt3dadd( -48.9934, 29.4622, -109.766, 1.33 ) }
    dend_12 { pt3dadd( -56.1827, 36.5249, -129.305, 1.33 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 99/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -17.394, 5.15697, -42.9583, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_9 { pt3dadd( -14.3879, 7.12097, -46.5593, 1.33 ) }
    dend_9 { pt3dadd( -13.3736, 7.78362, -47.7743, 2.0 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 2/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -4.47952, -18.2349, 24.6598, 1.33 ) }
    dend_6 { pt3dadd( -0.674004, -23.041, 25.8535, 0.67 ) }
    dend_6 { pt3dadd( 1.17269, -25.2371, 26.1812, 0.67 ) }
    dend_6 { pt3dadd( 3.31916, -27.3752, 26.7712, 0.67 ) }
    dend_6 { pt3dadd( 5.2826, -29.6254, 27.4486, 0.33 ) }
    dend_6 { pt3dadd( 6.3177, -30.9577, 28.0287, 0.67 ) }
    dend_6 { pt3dadd( 7.86713, -32.9519, 28.897, 0.33 ) }
    dend_6 { pt3dadd( 9.04156, -34.5762, 29.5627, 1.33 ) }
    dend_6 { pt3dadd( 12.6638, -39.2393, 32.0282, 0.33 ) }
    dend_6 { pt3dadd( 15.3862, -42.5449, 34.2176, 0.33 ) }
    dend_6 { pt3dadd( 18.3235, -46.7514, 37.626, 1.33 ) }
    dend_6 { pt3dadd( 24.9636, -57.5712, 40.7469, 1.33 ) }
    dend_6 { pt3dadd( 32.3481, -67.5749, 44.5816, 1.33 ) }
    dend_6 { pt3dadd( 39.3225, -78.5573, 45.9524, 1.33 ) }
    dend_6 { pt3dadd( 46.3461, -89.5994, 45.9802, 1.33 ) }
    dend_6 { pt3dadd( 52.5656, -101.02, 44.2116, 1.33 ) }
    dend_6 { pt3dadd( 60.0275, -111.128, 40.7862, 1.33 ) }
    dend_6 { pt3dadd( 68.7229, -120.473, 38.5129, 1.33 ) }
    dend_6 { pt3dadd( 77.7182, -129.424, 35.9732, 1.33 ) }
    dend_6 { pt3dadd( 86.0128, -139.344, 34.6159, 1.33 ) }
    dend_6 { pt3dadd( 95.6484, -147.933, 35.073, 1.33 ) }
    dend_6 { pt3dadd( 105.837, -155.515, 33.0062, 1.33 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 24/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -4.47952, -18.2349, 24.6598, 1.33 ) }
    dend_5 { pt3dadd( -6.11697, -23.3994, 24.1428, 0.67 ) }
    dend_5 { pt3dadd( -7.2108, -29.7806, 23.6371, 0.67 ) }
    dend_5 { pt3dadd( -7.44395, -33.1395, 23.4204, 0.67 ) }
    dend_5 { pt3dadd( -7.70276, -36.1737, 23.2687, 1.33 ) }
    dend_5 { pt3dadd( -8.29921, -41.8657, 22.5506, 0.67 ) }
    dend_5 { pt3dadd( -8.4679, -43.5481, 22.2214, 0.67 ) }
    dend_5 { pt3dadd( -8.73193, -46.8995, 21.3519, 0.67 ) }
    dend_5 { pt3dadd( -8.85737, -48.976, 20.8318, 0.67 ) }
    dend_5 { pt3dadd( -9.44656, -54.516, 19.282, 0.67 ) }
    dend_5 { pt3dadd( -10.8419, -60.1326, 17.712, 0.67 ) }
    dend_5 { pt3dadd( -11.6517, -62.549, 17.1068, 0.67 ) }
    dend_5 { pt3dadd( -12.4869, -64.6489, 16.6068, 1.33 ) }
    dend_5 { pt3dadd( -13.9364, -68.5573, 15.5161, 0.67 ) }
    dend_5 { pt3dadd( -15.0655, -71.7868, 14.564, 1.33 ) }
    dend_5 { pt3dadd( -16.6834, -77.0429, 12.8229, 0.67 ) }
    dend_5 { pt3dadd( -17.8624, -81.411, 11.4916, 0.67 ) }
    dend_5 { pt3dadd( -18.6015, -84.3416, 10.5735, 0.67 ) }
    dend_5 { pt3dadd( -20.5413, -92.0769, 7.99818, 0.67 ) }
    dend_5 { pt3dadd( -21.2759, -95.2731, 6.89334, 0.67 ) }
    dend_5 { pt3dadd( -22.1749, -98.9197, 5.60161, 0.67 ) }
    dend_5 { pt3dadd( -24.1289, -107.085, 3.35381, 0.67 ) }
    dend_5 { pt3dadd( -24.5344, -108.882, 2.89737, 0.67 ) }
    dend_5 { pt3dadd( -25.4051, -113.005, 2.09054, 1.33 ) }
    dend_5 { pt3dadd( -26.3191, -117.198, 1.49705, 0.67 ) }
    dend_5 { pt3dadd( -26.9707, -120.818, 1.05651, 0.67 ) }
    dend_5 { pt3dadd( -29.2932, -134.971, -0.19353, 0.67 ) }
    dend_5 { pt3dadd( -29.9419, -140.815, -0.691263, 0.33 ) }
    dend_5 { pt3dadd( -30.0655, -143.656, -0.892583, 1.33 ) }
    dend_5 { pt3dadd( -29.9999, -145.814, -1.01193, 0.67 ) }
    dend_5 { pt3dadd( -29.8418, -147.539, -1.06106, 0.33 ) }
    dend_5 { pt3dadd( -29.4781, -149.823, -1.10017, 0.67 ) }
    dend_5 { pt3dadd( -28.7448, -153.45, -1.10267, 0.33 ) }
    dend_5 { pt3dadd( -28.3058, -155.987, -1.07429, 1.33 ) }
    dend_5 { pt3dadd( -27.6634, -159.827, -1.07557, 0.33 ) }
    dend_5 { pt3dadd( -27.1139, -162.668, -1.02879, 0.67 ) }
    dend_5 { pt3dadd( -26.8033, -164.178, -0.982323, 2.0 ) }
    dend_5 { pt3dadd( -26.0946, -168.018, -0.806408, 0.33 ) }
    dend_5 { pt3dadd( -25.933, -169.307, -0.724804, 0.67 ) }
    dend_5 { pt3dadd( -25.4797, -172.363, -0.341567, 0.33 ) }
    dend_5 { pt3dadd( -25.1198, -174.736, 0.0726421, 0.33 ) }
    dend_5 { pt3dadd( -25.0387, -175.325, 0.184364, 0.67 ) }
    dend_5 { pt3dadd( -24.4504, -178.672, 0.816115, 0.33 ) }
    dend_5 { pt3dadd( -23.8389, -181.572, 1.33526, 1.33 ) }
    dend_5 { pt3dadd( -22.3231, -187.392, 2.209, 0.33 ) }
    dend_5 { pt3dadd( -22.1435, -187.979, 2.23196, 0.67 ) }
    dend_5 { pt3dadd( -20.607, -192.421, 1.78024, 0.33 ) }
    dend_5 { pt3dadd( -19.6543, -194.973, 1.43373, 0.33 ) }
    dend_5 { pt3dadd( -18.455, -197.655, 0.860539, 0.33 ) }
    dend_5 { pt3dadd( -17.7078, -199.178, 0.315273, 0.67 ) }
    dend_5 { pt3dadd( -15.3809, -203.671, -2.51303, 0.33 ) }
    dend_5 { pt3dadd( -13.4398, -206.986, -5.13843, 0.33 ) }
    dend_5 { pt3dadd( -11.9862, -219.836, -5.76054, 0.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 77/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 41.0549, 1.23821, -22.422, 2.0 ) }
    dend_2 { pt3dadd( 45.0642, 0.0921002, -29.2338, 0.67 ) }
    dend_2 { pt3dadd( 46.7055, -0.30344, -31.844, 0.33 ) }
    dend_2 { pt3dadd( 49.199, -0.74656, -35.3616, 1.33 ) }
    dend_2 { pt3dadd( 52.7445, -1.14809, -39.8962, 0.33 ) }
    dend_2 { pt3dadd( 53.5711, -1.21392, -40.8825, 0.67 ) }
    dend_2 { pt3dadd( 55.8213, -1.39953, -43.4334, 0.33 ) }
    dend_2 { pt3dadd( 56.9238, -1.41483, -44.3603, 2.0 ) }
    dend_2 { pt3dadd( 58.9595, -1.47628, -45.9952, 0.67 ) }
    dend_2 { pt3dadd( 60.1652, -1.57239, -46.7689, 0.33 ) }
    dend_2 { pt3dadd( 60.5099, -1.60098, -46.9682, 0.67 ) }
    dend_2 { pt3dadd( 61.6861, -1.84752, -47.7502, 0.33 ) }
    dend_2 { pt3dadd( 63.2341, -2.3443, -48.817, 1.33 ) }
    dend_2 { pt3dadd( 67.0571, -3.95067, -51.5008, 0.67 ) }
    dend_2 { pt3dadd( 68.7277, -4.68182, -52.731, 0.67 ) }
    dend_2 { pt3dadd( 71.4652, -5.84369, -54.6508, 0.67 ) }
    dend_2 { pt3dadd( 75.1741, -7.30503, -57.0057, 0.67 ) }
    dend_2 { pt3dadd( 76.3776, -7.71515, -57.7275, 0.67 ) }
    dend_2 { pt3dadd( 77.4003, -8.02247, -58.3278, 0.33 ) }
    dend_2 { pt3dadd( 79.345, -8.61909, -59.4135, 0.67 ) }
    dend_2 { pt3dadd( 81.8419, -9.46198, -60.9183, 0.67 ) }
    dend_2 { pt3dadd( 83.523, -9.92518, -62.0553, 0.33 ) }
    dend_2 { pt3dadd( 85.0196, -10.3412, -63.1723, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_2 { pt3dadd( 86.6945, -10.9135, -64.4588, 0.67 ) }
    dend_2 { pt3dadd( 90.1288, -12.1962, -67.2185, 0.67 ) }
    dend_2 { pt3dadd( 91.1939, -12.675, -68.1041, 2.0 ) }
    dend_2 { pt3dadd( 94.1269, -14.0969, -70.7681, 0.33 ) }
    dend_2 { pt3dadd( 95.7298, -14.9521, -72.2319, 0.33 ) }
    dend_2 { pt3dadd( 96.4793, -15.4119, -72.8226, 1.33 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 6/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 41.0549, 1.23821, -22.422, 2.0 ) }
    dend_1 { pt3dadd( 48.6499, 0.263696, -25.7613, 0.67 ) }
    dend_1 { pt3dadd( 52.2019, -0.25201, -27.3069, 0.33 ) }
    dend_1 { pt3dadd( 53.0535, -0.39139, -27.666, 0.67 ) }
    dend_1 { pt3dadd( 59.541, -1.25488, -29.9525, 0.33 ) }
    dend_1 { pt3dadd( 63.0802, -1.77739, -30.9725, 1.33 ) }
    dend_1 { pt3dadd( 67.2696, -2.4355, -31.9867, 0.33 ) }
    dend_1 { pt3dadd( 69.0913, -2.71187, -32.2212, 0.33 ) }
    dend_1 { pt3dadd( 70.3807, -2.86912, -32.3256, 0.67 ) }
    dend_1 { pt3dadd( 75.215, -3.51199, -32.4011, 0.33 ) }
    dend_1 { pt3dadd( 78.6898, -4.02485, -32.1332, 0.33 ) }
    dend_1 { pt3dadd( 80.1376, -4.24079, -31.9602, 0.67 ) }
    dend_1 { pt3dadd( 84.2871, -4.68757, -31.2468, 0.33 ) }
    dend_1 { pt3dadd( 89.2813, -5.0025, -30.4472, 1.33 ) }
    dend_1 { pt3dadd( 90.9364, -5.11055, -30.2034, 1.33 ) }
    dend_1 { pt3dadd( 94.4152, -5.40949, -29.7729, 0.33 ) }
    dend_1 { pt3dadd( 94.8643, -5.43542, -29.6771, 0.67 ) }
    dend_1 { pt3dadd( 97.9227, -5.65864, -28.7546, 0.33 ) }
    dend_1 { pt3dadd( 98.9004, -5.80462, -28.4621, 0.67 ) }
    dend_1 { pt3dadd( 101.411, -6.4636, -28.0386, 0.33 ) }
    dend_1 { pt3dadd( 103.405, -6.99986, -27.8921, 1.33 ) }
    dend_1 { pt3dadd( 108.108, -8.39337, -27.8784, 0.33 ) }
    dend_1 { pt3dadd( 109.007, -8.65015, -27.9715, 0.67 ) }
    dend_1 { pt3dadd( 114.905, -10.1325, -29.0451, 0.33 ) }
    dend_1 { pt3dadd( 117.437, -10.6694, -29.6397, 1.33 ) }
    dend_1 { pt3dadd( 121.837, -11.4913, -30.8295, 0.33 ) }
    dend_1 { pt3dadd( 123.655, -11.7804, -31.4867, 1.33 ) }
    dend_1 { pt3dadd( 129.366, -12.5927, -33.9218, 0.33 ) }
    dend_1 { pt3dadd( 131.636, -12.9158, -34.872, 1.33 ) }
    dend_1 { pt3dadd( 135.37, -13.2874, -36.3284, 0.33 ) }
    dend_1 { pt3dadd( 137.515, -13.5045, -37.1996, 0.67 ) }
    dend_1 { pt3dadd( 143.177, -14.0956, -39.7411, 0.33 ) }
    dend_1 { pt3dadd( 144.37, -14.1817, -40.259, 0.67 ) }
    dend_1 { pt3dadd( 146.109, -14.2506, -40.8943, 0.67 ) }
    dend_1 { pt3dadd( 148.701, -14.1545, -41.5787, 0.33 ) }
    dend_1 { pt3dadd( 150.122, -13.9771, -41.7781, 0.67 ) }
    dend_1 { pt3dadd( 151.767, -13.672, -41.8309, 0.33 ) }
    dend_1 { pt3dadd( 155.049, -12.9561, -41.6631, 0.33 ) }
    dend_1 { pt3dadd( 157.003, -12.4855, -41.5672, 2.0 ) }
    dend_1 { pt3dadd( 161.03, -11.4566, -41.3732, 0.33 ) }
    dend_1 { pt3dadd( 162.668, -11.0825, -41.2805, 0.33 ) }
    dend_1 { pt3dadd( 168.971, -9.63408, -40.9297, 0.33 ) }
    dend_1 { pt3dadd( 169.97, -9.42178, -40.877, 0.67 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 49/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 13.5112, -36.0308, -1.46285, 0.67 ) }
    axon_1 { pt3dadd( 19.008, -49.9873, -1.46285, 0.67 ) }
    axon_1 { pt3dadd( 24.5049, -63.9439, -1.46285, 0.67 ) }
    // Section: apic_22, id: apic_22, parent: apic_14 (entry count 52/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 31.6873, 22.3624, -2.56893, 1.33 ) }
    apic_22 { pt3dadd( 36.3099, 21.9, -2.45829, 0.67 ) }
    apic_22 { pt3dadd( 39.1857, 21.4714, -2.55606, 0.67 ) }
    apic_22 { pt3dadd( 40.8285, 21.2266, -2.6119, 0.67 ) }
    apic_22 { pt3dadd( 41.6616, 21.1024, -2.64023, 0.67 ) }
    apic_22 { pt3dadd( 43.7729, 20.7877, -2.712, 0.67 ) }
    apic_22 { pt3dadd( 47.1565, 20.2834, -2.82702, 0.67 ) }
    apic_22 { pt3dadd( 51.3703, 20.1277, -3.31842, 0.67 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 60/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 31.6873, 22.3624, -2.56893, 1.33 ) }
    apic_15 { pt3dadd( 33.85, 25.8222, -1.72371, 1.33 ) }
    apic_15 { pt3dadd( 34.9279, 27.5465, -1.30247, 1.33 ) }
    // Section: apic_11, id: apic_11, parent: apic_1 (entry count 63/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -1.534, 32.6439, 9.25645, 2.0 ) }
    apic_11 { pt3dadd( -4.74155, 32.8989, 6.60845, 0.67 ) }
    apic_11 { pt3dadd( -8.4757, 33.2375, 3.42161, 0.67 ) }
    apic_11 { pt3dadd( -13.0245, 33.7335, -0.21179, 0.67 ) }
    apic_11 { pt3dadd( -15.2572, 33.9455, -1.89901, 0.67 ) }
    apic_11 { pt3dadd( -21.3151, 34.5724, -5.81877, 0.67 ) }
    apic_11 { pt3dadd( -28.6596, 35.5714, -9.9852, 0.67 ) }
    apic_11 { pt3dadd( -29.8411, 35.798, -10.628, 0.67 ) }
    apic_11 { pt3dadd( -32.8226, 36.569, -12.0724, 0.67 ) }
    apic_11 { pt3dadd( -37.7685, 38.0856, -13.6485, 0.67 ) }
    apic_11 { pt3dadd( -43.7808, 40.2068, -14.6546, 0.67 ) }
    apic_11 { pt3dadd( -47.9564, 42.0153, -14.5101, 0.67 ) }
    apic_11 { pt3dadd( -51.5208, 43.7532, -13.8583, 0.67 ) }
    apic_11 { pt3dadd( -52.6779, 44.4906, -13.629, 0.67 ) }
    apic_11 { pt3dadd( -56.4539, 47.5561, -12.7676, 0.67 ) }
    apic_11 { pt3dadd( -57.9624, 49.0994, -12.303, 1.33 ) }
    apic_11 { pt3dadd( -59.7409, 51.2279, -11.7483, 0.67 ) }
    apic_11 { pt3dadd( -62.3221, 54.262, -10.9999, 0.67 ) }
    apic_11 { pt3dadd( -67.4846, 60.1149, -9.83168, 0.67 ) }
    apic_11 { pt3dadd( -68.9412, 61.7709, -9.64832, 0.33 ) }
    apic_11 { pt3dadd( -70.269, 63.2482, -9.60962, 0.67 ) }
    apic_11 { pt3dadd( -71.7389, 64.7403, -9.5659, 0.33 ) }
    apic_11 { pt3dadd( -74.4421, 67.357, -9.4684, 1.33 ) }
    apic_11 { pt3dadd( -76.6068, 69.418, -9.31373, 1.33 ) }
    apic_11 { pt3dadd( -78.586, 71.1207, -9.08633, 2.0 ) }
    apic_11 { pt3dadd( -82.765, 74.5791, -8.66394, 0.67 ) }
    apic_11 { pt3dadd( -84.9151, 76.3424, -8.48764, 0.67 ) }
    apic_11 { pt3dadd( -86.4139, 77.6138, -8.33351, 0.67 ) }
    apic_11 { pt3dadd( -89.542, 80.5796, -7.841, 2.0 ) }
    apic_11 { pt3dadd( -91.3659, 82.2647, -7.45875, 0.67 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 93/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( -1.534, 32.6439, 9.25645, 2.0 ) }
    apic_2 { pt3dadd( -1.5002, 37.7799, 10.171, 1.33 ) }
    apic_2 { pt3dadd( -1.47562, 41.5143, 10.836, 1.33 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 96/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -56.1827, 36.5249, -129.305, 1.33 ) }
    dend_14 { pt3dadd( -60.731, 37.1632, -128.321, 0.67 ) }
    dend_14 { pt3dadd( -65.1414, 37.8253, -128.448, 0.67 ) }
    dend_14 { pt3dadd( -70.1567, 38.8385, -130.697, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_14 { pt3dadd( -73.4835, 39.5591, -132.784, 0.67 ) }
    dend_14 { pt3dadd( -75.8156, 40.0255, -134.666, 0.33 ) }
    dend_14 { pt3dadd( -77.6042, 40.2374, -136.759, 0.33 ) }
    dend_14 { pt3dadd( -82.4743, 40.2908, -145.074, 1.33 ) }
    dend_14 { pt3dadd( -84.8808, 40.0397, -150.862, 0.33 ) }
    dend_14 { pt3dadd( -85.3566, 39.9492, -152.384, 0.33 ) }
    dend_14 { pt3dadd( -86.3201, 39.5478, -156.175, 2.0 ) }
    dend_14 { pt3dadd( -88.2221, 37.9975, -166.045, 0.33 ) }
    dend_14 { pt3dadd( -88.557, 37.4834, -168.52, 1.33 ) }
    dend_14 { pt3dadd( -88.8876, 36.6537, -171.803, 0.33 ) }
    dend_14 { pt3dadd( -89.0221, 35.832, -174.599, 1.33 ) }
    dend_14 { pt3dadd( -89.0795, 34.565, -178.913, 0.67 ) }
    dend_14 { pt3dadd( -89.0253, 33.7704, -181.546, 0.67 ) }
    dend_14 { pt3dadd( -88.7622, 32.9916, -183.931, 1.33 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 14/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -56.1827, 36.5249, -129.305, 1.33 ) }
    dend_13 { pt3dadd( -59.9465, 35.9913, -130.379, 0.67 ) }
    dend_13 { pt3dadd( -64.3232, 35.2234, -131.779, 0.67 ) }
    dend_13 { pt3dadd( -66.0058, 34.8324, -132.336, 1.33 ) }
    dend_13 { pt3dadd( -70.1607, 33.8464, -133.692, 0.67 ) }
    dend_13 { pt3dadd( -75.5746, 32.5744, -135.418, 0.33 ) }
    dend_13 { pt3dadd( -77.8675, 32.1096, -136.107, 0.33 ) }
    dend_13 { pt3dadd( -78.8926, 31.9305, -136.541, 1.33 ) }
    dend_13 { pt3dadd( -80.6422, 31.5847, -137.469, 0.67 ) }
    dend_13 { pt3dadd( -82.561, 31.1043, -138.461, 0.33 ) }
    dend_13 { pt3dadd( -83.3874, 30.8262, -138.912, 1.33 ) }
    dend_13 { pt3dadd( -85.8638, 29.985, -140.124, 0.67 ) }
    dend_13 { pt3dadd( -89.5321, 28.8813, -142.33, 0.67 ) }
    dend_13 { pt3dadd( -90.9064, 28.3815, -143.338, 1.33 ) }
    dend_13 { pt3dadd( -92.8356, 27.5469, -144.967, 0.67 ) }
    dend_13 { pt3dadd( -95.4614, 26.1645, -147.406, 1.33 ) }
    dend_13 { pt3dadd( -98.2709, 24.6191, -150.092, 0.67 ) }
    dend_13 { pt3dadd( -100.24, 23.5569, -152.078, 2.0 ) }
    dend_13 { pt3dadd( -102.27, 22.5943, -154.13, 0.33 ) }
    dend_13 { pt3dadd( -102.654, 22.4097, -154.572, 0.67 ) }
    dend_13 { pt3dadd( -103.166, 22.1297, -155.55, 0.33 ) }
    dend_13 { pt3dadd( -103.717, 21.6977, -156.94, 0.67 ) }
    dend_13 { pt3dadd( -104.808, 20.6743, -160.177, 0.33 ) }
    dend_13 { pt3dadd( -105.39, 20.1682, -161.771, 0.67 ) }
    dend_13 { pt3dadd( -105.78, 19.8407, -162.79, 1.33 ) }
    dend_13 { pt3dadd( -109.229, 16.3741, -172.572, 0.33 ) }
    dend_13 { pt3dadd( -109.761, 15.7501, -174.184, 1.33 ) }
    dend_13 { pt3dadd( -111.739, 13.1883, -180.18, 0.33 ) }
    dend_13 { pt3dadd( -112.043, 12.8001, -181.028, 1.33 ) }
    dend_13 { pt3dadd( -112.501, 12.2679, -182.121, 0.33 ) }
    dend_13 { pt3dadd( -114.068, 10.5175, -185.338, 0.33 ) }
    dend_13 { pt3dadd( -114.284, 10.2794, -185.636, 0.67 ) }
    dend_13 { pt3dadd( -116.864, 7.73166, -188.444, 0.33 ) }
    dend_13 { pt3dadd( -117.479, 7.18041, -189.013, 1.33 ) }
    dend_13 { pt3dadd( -118.681, 6.18288, -190.293, 0.33 ) }
    dend_13 { pt3dadd( -119.069, 5.85724, -190.789, 0.67 ) }
    dend_13 { pt3dadd( -120.186, 4.93602, -192.325, 0.33 ) }
    dend_13 { pt3dadd( -121.361, 3.67683, -194.659, 0.67 ) }
    dend_13 { pt3dadd( -123.286, 1.36464, -199.271, 0.33 ) }
    dend_13 { pt3dadd( -124.29, 0.0144616, -202.132, 1.33 ) }
    dend_13 { pt3dadd( -125.142, -1.28352, -205.165, 0.33 ) }
    dend_13 { pt3dadd( -125.291, -1.56513, -205.855, 0.67 ) }
    dend_13 { pt3dadd( -125.97, -3.59839, -211.393, 0.67 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 57/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -13.3736, 7.78362, -47.7743, 2.0 ) }
    dend_11 { pt3dadd( -13.6025, 10.0935, -51.1668, 0.67 ) }
    dend_11 { pt3dadd( -13.876, 14.3092, -57.2061, 1.33 ) }
    dend_11 { pt3dadd( -13.8982, 17.8447, -62.1748, 0.67 ) }
    dend_11 { pt3dadd( -13.8828, 23.0178, -69.3804, 2.0 ) }
    dend_11 { pt3dadd( -14.0314, 28.0175, -76.5527, 0.67 ) }
    dend_11 { pt3dadd( -14.0564, 28.8911, -77.8001, 1.33 ) }
    dend_11 { pt3dadd( -14.0848, 30.2044, -79.7126, 0.67 ) }
    dend_11 { pt3dadd( -14.1215, 32.2177, -82.657, 0.33 ) }
    dend_11 { pt3dadd( -14.1096, 35.4358, -87.2972, 1.33 ) }
    dend_11 { pt3dadd( -14.4191, 39.7734, -94.2514, 0.67 ) }
    dend_11 { pt3dadd( -15.019, 43.7423, -101.287, 0.33 ) }
    dend_11 { pt3dadd( -15.3693, 45.5669, -104.634, 1.33 ) }
    dend_11 { pt3dadd( -16.3687, 49.6585, -112.297, 0.33 ) }
    dend_11 { pt3dadd( -16.6943, 50.7791, -114.409, 1.33 ) }
    dend_11 { pt3dadd( -19.002, 58.8178, -129.994, 0.67 ) }
    dend_11 { pt3dadd( -19.8205, 61.4107, -134.792, 0.33 ) }
    dend_11 { pt3dadd( -20.4879, 63.163, -137.954, 1.33 ) }
    dend_11 { pt3dadd( -21.6034, 66.0289, -142.654, 0.33 ) }
    dend_11 { pt3dadd( -22.3713, 67.8744, -145.024, 0.67 ) }
    dend_11 { pt3dadd( -24.6139, 73.294, -150.231, 0.67 ) }
    dend_11 { pt3dadd( -26.2927, 78.0917, -152.305, 0.33 ) }
    dend_11 { pt3dadd( -26.6252, 79.1146, -152.684, 1.33 ) }
    dend_11 { pt3dadd( -27.4214, 81.5662, -153.674, 0.33 ) }
    dend_11 { pt3dadd( -27.9953, 83.4138, -154.222, 1.33 ) }
    dend_11 { pt3dadd( -28.6112, 85.4992, -154.805, 0.33 ) }
    dend_11 { pt3dadd( -28.7948, 86.0745, -154.813, 0.67 ) }
    dend_11 { pt3dadd( -29.8233, 90.022, -155.185, 0.33 ) }
    dend_11 { pt3dadd( -30.3539, 92.2585, -155.588, 0.67 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 86/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -13.3736, 7.78362, -47.7743, 2.0 ) }
    dend_10 { pt3dadd( -12.3311, 8.00742, -50.6117, 0.67 ) }
    dend_10 { pt3dadd( -9.28272, 8.4126, -58.6794, 1.33 ) }
    dend_10 { pt3dadd( -6.67566, 8.40179, -65.7615, 0.67 ) }
    dend_10 { pt3dadd( -5.41704, 8.2817, -69.0826, 0.33 ) }
    dend_10 { pt3dadd( -4.59147, 8.15323, -71.1652, 2.0 ) }
    dend_10 { pt3dadd( 0.0812821, 7.53878, -82.5488, 0.33 ) }
    dend_10 { pt3dadd( 0.542034, 7.42881, -83.6919, 0.33 ) }
    dend_10 { pt3dadd( 2.4644, 6.68075, -87.9968, 0.33 ) }
    dend_10 { pt3dadd( 3.76726, 5.95721, -91.6644, 1.33 ) }
    dend_10 { pt3dadd( 4.59607, 5.31971, -95.0456, 0.67 ) }
    dend_10 { pt3dadd( 5.10436, 4.82582, -97.9435, 0.33 ) }
    dend_10 { pt3dadd( 5.74316, 3.83602, -103.617, 0.67 ) }
    dend_10 { pt3dadd( 5.90994, 3.28119, -106.813, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_10 { pt3dadd( 5.59635, 1.03775, -120.748, 0.67 ) }
    dend_10 { pt3dadd( 5.32213, 0.328992, -124.996, 1.33 ) }
    dend_10 { pt3dadd( 4.61515, -0.97872, -132.453, 0.33 ) }
    dend_10 { pt3dadd( 4.496, -1.18506, -133.538, 0.67 ) }
    dend_10 { pt3dadd( 4.01376, -1.76296, -137.162, 0.33 ) }
    dend_10 { pt3dadd( 3.12142, -2.63472, -143.824, 0.67 ) }
    // Section: apic_24, id: apic_24, parent: apic_22 (entry count 6/100)
    apic_24 { pt3dclear() }
    apic_24 { pt3dadd( 51.3703, 20.1277, -3.31842, 0.67 ) }
    apic_24 { pt3dadd( 55.623, 20.2814, -7.96566, 0.67 ) }
    apic_24 { pt3dadd( 57.1092, 20.2306, -9.43097, 0.67 ) }
    apic_24 { pt3dadd( 58.2862, 20.1902, -10.2586, 0.67 ) }
    apic_24 { pt3dadd( 59.6989, 20.1211, -10.9765, 0.33 ) }
    apic_24 { pt3dadd( 63.7243, 19.8509, -12.5018, 1.33 ) }
    apic_24 { pt3dadd( 65.853, 19.6732, -13.2491, 1.33 ) }
    apic_24 { pt3dadd( 67.4957, 19.5111, -13.5877, 0.33 ) }
    apic_24 { pt3dadd( 71.5265, 18.997, -14.4102, 0.67 ) }
    apic_24 { pt3dadd( 73.5186, 18.6364, -14.959, 0.33 ) }
    apic_24 { pt3dadd( 75.5918, 18.1812, -16.0474, 0.67 ) }
    apic_24 { pt3dadd( 76.8318, 17.8977, -17.1597, 2.0 ) }
    apic_24 { pt3dadd( 78.2031, 17.6214, -18.8509, 0.33 ) }
    apic_24 { pt3dadd( 79.1761, 17.3854, -20.3842, 0.33 ) }
    apic_24 { pt3dadd( 80.9198, 16.8592, -23.6712, 1.33 ) }
    apic_24 { pt3dadd( 84.0694, 15.8624, -29.9608, 1.33 ) }
    apic_24 { pt3dadd( 86.1752, 15.1899, -34.557, 0.33 ) }
    apic_24 { pt3dadd( 86.8302, 14.9587, -35.9998, 2.0 ) }
    apic_24 { pt3dadd( 88.4648, 14.2439, -39.8923, 0.33 ) }
    apic_24 { pt3dadd( 88.6927, 14.1298, -40.43, 1.33 ) }
    apic_24 { pt3dadd( 89.4875, 13.5697, -42.2369, 0.33 ) }
    apic_24 { pt3dadd( 90.7533, 12.2877, -45.1535, 1.33 ) }
    apic_24 { pt3dadd( 91.6752, 11.1512, -47.2938, 0.33 ) }
    apic_24 { pt3dadd( 92.7894, 9.35122, -50.4199, 0.67 ) }
    apic_24 { pt3dadd( 93.1945, 8.58962, -51.6033, 0.33 ) }
    apic_24 { pt3dadd( 93.4295, 8.03805, -52.3256, 0.67 ) }
    apic_24 { pt3dadd( 94.0172, 6.3675, -54.4711, 0.33 ) }
    apic_24 { pt3dadd( 94.1863, 5.83904, -55.126, 1.33 ) }
    apic_24 { pt3dadd( 94.5826, 4.66535, -56.8937, 0.33 ) }
    apic_24 { pt3dadd( 94.862, 3.8719, -58.1468, 0.67 ) }
    apic_24 { pt3dadd( 95.3149, 2.51164, -60.3699, 0.67 ) }
    apic_24 { pt3dadd( 96.154, -0.130111, -64.5384, 0.67 ) }
    apic_24 { pt3dadd( 96.5215, -1.6665, -66.9088, 1.33 ) }
    apic_24 { pt3dadd( 97.0343, -3.9763, -70.6102, 0.33 ) }
    apic_24 { pt3dadd( 97.1078, -4.48402, -71.3876, 0.67 ) }
    apic_24 { pt3dadd( 97.1517, -4.96447, -72.1237, 0.33 ) }
    apic_24 { pt3dadd( 97.2121, -5.94891, -73.6174, 1.33 ) }
    apic_24 { pt3dadd( 97.2115, -8.97023, -77.3976, 0.67 ) }
    apic_24 { pt3dadd( 97.1161, -11.8172, -80.8105, 0.67 ) }
    apic_24 { pt3dadd( 96.8571, -14.0593, -83.385, 0.33 ) }
    // Section: apic_23, id: apic_23, parent: apic_22 (entry count 46/100)
    apic_23 { pt3dclear() }
    apic_23 { pt3dadd( 51.3703, 20.1277, -3.31842, 0.67 ) }
    apic_23 { pt3dadd( 54.062, 18.3532, -0.935614, 0.67 ) }
    apic_23 { pt3dadd( 57.0279, 16.4916, 1.42246, 0.67 ) }
    apic_23 { pt3dadd( 58.8006, 15.6349, 2.79171, 0.67 ) }
    apic_23 { pt3dadd( 62.3689, 14.1163, 5.54092, 0.67 ) }
    apic_23 { pt3dadd( 64.2028, 13.313, 7.0769, 0.67 ) }
    apic_23 { pt3dadd( 66.3893, 12.3695, 8.98303, 0.67 ) }
    apic_23 { pt3dadd( 67.9214, 11.8175, 10.3575, 0.67 ) }
    apic_23 { pt3dadd( 71.3722, 10.6835, 13.4074, 0.67 ) }
    apic_23 { pt3dadd( 72.4705, 10.3348, 14.4582, 0.67 ) }
    apic_23 { pt3dadd( 75.3897, 9.7536, 17.223, 0.67 ) }
    apic_23 { pt3dadd( 76.6192, 9.60467, 18.3544, 0.67 ) }
    apic_23 { pt3dadd( 77.7391, 9.42094, 19.4165, 0.67 ) }
    apic_23 { pt3dadd( 79.0659, 9.13744, 20.6364, 0.67 ) }
    apic_23 { pt3dadd( 81.1231, 8.62125, 22.2804, 0.67 ) }
    apic_23 { pt3dadd( 83.0635, 8.22613, 23.6427, 0.67 ) }
    apic_23 { pt3dadd( 85.3849, 7.73542, 25.0592, 0.67 ) }
    apic_23 { pt3dadd( 87.6721, 7.03135, 26.325, 0.33 ) }
    apic_23 { pt3dadd( 89.2534, 6.45907, 27.1714, 0.33 ) }
    apic_23 { pt3dadd( 90.4293, 5.98764, 27.7827, 0.33 ) }
    apic_23 { pt3dadd( 90.8066, 5.76545, 27.956, 0.67 ) }
    apic_23 { pt3dadd( 92.3701, 4.47507, 28.6987, 0.67 ) }
    apic_23 { pt3dadd( 94.375, 2.70057, 29.3219, 0.33 ) }
    apic_23 { pt3dadd( 100.722, -2.52078, 31.5713, 0.33 ) }
    apic_23 { pt3dadd( 107.137, -6.9879, 34.8695, 0.33 ) }
    apic_23 { pt3dadd( 113.565, -11.059, 38.5841, 0.33 ) }
    apic_23 { pt3dadd( 120.69, -14.9364, 40.9802, 0.33 ) }
    // Section: apic_19, id: apic_19, parent: apic_15 (entry count 73/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 34.9279, 27.5465, -1.30247, 1.33 ) }
    apic_19 { pt3dadd( 37.8881, 27.2376, -3.67381, 0.67 ) }
    apic_19 { pt3dadd( 39.7872, 27.0394, -5.19513, 0.67 ) }
    apic_19 { pt3dadd( 46.8609, 26.3013, -10.8616, 0.67 ) }
    apic_19 { pt3dadd( 51.1804, 25.8506, -14.3218, 0.67 ) }
    apic_19 { pt3dadd( 55.0763, 25.4441, -17.4426, 1.33 ) }
    // Section: apic_16, id: apic_16, parent: apic_15 (entry count 79/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 34.9279, 27.5465, -1.30247, 1.33 ) }
    apic_16 { pt3dadd( 37.4897, 31.735, -0.874899, 0.67 ) }
    apic_16 { pt3dadd( 40.5254, 38.6156, -0.343987, 0.67 ) }
    apic_16 { pt3dadd( 42.7712, 43.3089, -0.596388, 0.67 ) }
    apic_16 { pt3dadd( 44.2019, 46.2894, -0.891494, 0.67 ) }
    apic_16 { pt3dadd( 45.6109, 48.9867, -1.19323, 0.67 ) }
    apic_16 { pt3dadd( 47.9472, 53.3708, -1.69366, 0.67 ) }
    apic_16 { pt3dadd( 51.9746, 60.8144, -2.66519, 0.67 ) }
    apic_16 { pt3dadd( 56.4828, 69.8085, -3.53776, 0.67 ) }
    apic_16 { pt3dadd( 58.7327, 74.3772, -3.78974, 0.67 ) }
    apic_16 { pt3dadd( 60.989, 79.1719, -3.88893, 0.67 ) }
    apic_16 { pt3dadd( 62.8949, 83.2377, -3.92382, 0.67 ) }
    apic_16 { pt3dadd( 64.9039, 87.1114, -3.86666, 1.33 ) }
    apic_16 { pt3dadd( 68.3509, 93.4611, -3.26297, 0.67 ) }
    apic_16 { pt3dadd( 69.6387, 96.3228, -2.58359, 1.33 ) }
    apic_16 { pt3dadd( 70.8889, 99.2881, -1.72302, 2.0 ) }
    // Section: apic_13, id: apic_13, parent: apic_11 (entry count 95/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( -91.3659, 82.2647, -7.45875, 0.67 ) }
    apic_13 { pt3dadd( -92.2702, 83.5899, -7.34591, 0.33 ) }
    apic_13 { pt3dadd( -93.573, 85.2508, -6.98433, 0.33 ) }
    apic_13 { pt3dadd( -94.1269, 85.9706, -6.78743, 0.67 ) }
    apic_13 { pt3dadd( -95.9, 88.2138, -6.10847, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    apic_13 { pt3dadd( -96.8122, 89.316, -5.76288, 1.33 ) }
    apic_13 { pt3dadd( -98.5175, 91.2644, -5.21885, 1.33 ) }
    apic_13 { pt3dadd( -100.617, 93.6575, -4.61689, 0.33 ) }
    apic_13 { pt3dadd( -102.011, 95.1124, -4.22429, 0.67 ) }
    apic_13 { pt3dadd( -102.775, 95.8038, -4.02186, 0.33 ) }
    apic_13 { pt3dadd( -104.564, 97.1672, -3.70243, 0.67 ) }
    apic_13 { pt3dadd( -106.547, 98.4735, -3.46298, 1.33 ) }
    apic_13 { pt3dadd( -109.425, 100.037, -3.13613, 0.33 ) }
    apic_13 { pt3dadd( -111.906, 101.163, -2.97795, 0.33 ) }
    apic_13 { pt3dadd( -112.517, 101.394, -2.93177, 0.33 ) }
    apic_13 { pt3dadd( -116.136, 102.549, -2.58522, 1.33 ) }
    apic_13 { pt3dadd( -118.357, 103.132, -2.45611, 0.33 ) }
    apic_13 { pt3dadd( -121.153, 103.732, -2.3641, 0.33 ) }
    apic_13 { pt3dadd( -122.308, 103.967, -2.36013, 0.33 ) }
    apic_13 { pt3dadd( -123.545, 104.265, -2.31954, 1.33 ) }
    apic_13 { pt3dadd( -126.15, 104.97, -2.09953, 0.33 ) }
    apic_13 { pt3dadd( -129.169, 105.984, -1.64638, 0.33 ) }
    apic_13 { pt3dadd( -130.241, 106.467, -1.49699, 2.0 ) }
    apic_13 { pt3dadd( -132.383, 107.669, -1.16736, 0.67 ) }
    apic_13 { pt3dadd( -134.649, 109.025, -0.705366, 0.67 ) }
    apic_13 { pt3dadd( -135.871, 109.811, -0.384975, 0.33 ) }
    apic_13 { pt3dadd( -137.306, 110.824, 0.108114, 0.67 ) }
    apic_13 { pt3dadd( -139.288, 112.273, 0.921506, 1.33 ) }
    apic_13 { pt3dadd( -140.611, 113.271, 1.4229, 0.33 ) }
    apic_13 { pt3dadd( -141.696, 114.171, 1.79866, 0.33 ) }
    apic_13 { pt3dadd( -142.859, 115.161, 2.15035, 1.33 ) }
    apic_13 { pt3dadd( -144.132, 116.262, 2.54231, 0.33 ) }
    apic_13 { pt3dadd( -146.103, 117.975, 3.14924, 0.67 ) }
    apic_13 { pt3dadd( -147.463, 119.188, 3.57067, 0.33 ) }
    apic_13 { pt3dadd( -148.996, 120.601, 4.00358, 1.33 ) }
    apic_13 { pt3dadd( -151.217, 122.77, 4.63469, 0.33 ) }
    apic_13 { pt3dadd( -152.407, 124.05, 4.97863, 0.67 ) }
    apic_13 { pt3dadd( -153.51, 125.317, 5.29967, 0.33 ) }
    apic_13 { pt3dadd( -154.03, 125.943, 5.45492, 1.33 ) }
    apic_13 { pt3dadd( -155.662, 127.957, 5.88196, 0.33 ) }
    apic_13 { pt3dadd( -156.321, 128.766, 6.02955, 1.33 ) }
    apic_13 { pt3dadd( -158.241, 131.499, 6.41835, 0.33 ) }
    apic_13 { pt3dadd( -158.739, 132.282, 6.50841, 1.33 ) }
    apic_13 { pt3dadd( -158.93, 132.653, 6.54017, 1.33 ) }
    apic_13 { pt3dadd( -159.788, 134.475, 6.66432, 0.33 ) }
    apic_13 { pt3dadd( -159.947, 134.861, 6.67996, 0.67 ) }
    apic_13 { pt3dadd( -160.396, 136.109, 6.70699, 0.33 ) }
    apic_13 { pt3dadd( -161.323, 138.998, 6.68924, 0.67 ) }
    apic_13 { pt3dadd( -161.856, 140.724, 6.69874, 0.33 ) }
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 44/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( -91.3659, 82.2647, -7.45875, 0.67 ) }
    apic_12 { pt3dadd( -92.9303, 82.7098, -6.77584, 1.33 ) }
    apic_12 { pt3dadd( -95.4938, 83.2854, -5.66585, 0.33 ) }
    apic_12 { pt3dadd( -97.0487, 83.6146, -5.00285, 0.33 ) }
    apic_12 { pt3dadd( -98.7285, 84.0514, -4.40463, 0.33 ) }
    apic_12 { pt3dadd( -103.86, 85.7352, -2.80119, 0.67 ) }
    apic_12 { pt3dadd( -104.445, 85.9433, -2.63292, 0.33 ) }
    apic_12 { pt3dadd( -106.005, 86.5939, -2.23867, 0.33 ) }
    apic_12 { pt3dadd( -106.909, 86.9847, -2.09418, 0.33 ) }
    apic_12 { pt3dadd( -110.004, 88.1346, -1.78839, 1.33 ) }
    apic_12 { pt3dadd( -111.797, 88.6081, -1.71267, 0.33 ) }
    apic_12 { pt3dadd( -112.826, 88.7735, -1.73435, 0.67 ) }
    apic_12 { pt3dadd( -114.993, 88.9189, -1.83382, 0.33 ) }
    apic_12 { pt3dadd( -117.922, 89.0638, -1.93545, 0.67 ) }
    apic_12 { pt3dadd( -120.406, 89.0918, -1.99213, 0.67 ) }
    apic_12 { pt3dadd( -123.34, 88.9193, -1.97869, 0.33 ) }
    apic_12 { pt3dadd( -125.937, 88.6946, -1.89984, 0.67 ) }
    apic_12 { pt3dadd( -130.309, 88.254, -1.57595, 0.67 ) }
    apic_12 { pt3dadd( -132.803, 87.9858, -1.26749, 0.33 ) }
    apic_12 { pt3dadd( -133.55, 87.9411, -1.12171, 0.67 ) }
    apic_12 { pt3dadd( -135.515, 87.9799, -0.695949, 0.33 ) }
    apic_12 { pt3dadd( -138.283, 88.176, -0.436813, 0.67 ) }
    apic_12 { pt3dadd( -141.095, 88.5807, -0.492622, 0.33 ) }
    apic_12 { pt3dadd( -141.558, 88.7009, -0.584872, 0.67 ) }
    apic_12 { pt3dadd( -143.14, 89.0523, -1.20214, 0.33 ) }
    apic_12 { pt3dadd( -144.364, 89.3842, -1.74591, 0.67 ) }
    apic_12 { pt3dadd( -149.805, 91.0624, -4.23398, 0.33 ) }
    apic_12 { pt3dadd( -150.406, 91.2697, -4.50501, 0.67 ) }
    apic_12 { pt3dadd( -151.785, 91.7412, -5.02374, 0.33 ) }
    apic_12 { pt3dadd( -155.894, 92.8685, -6.08806, 0.67 ) }
    apic_12 { pt3dadd( -158.994, 93.437, -6.54941, 0.33 ) }
    apic_12 { pt3dadd( -161.256, 93.5848, -6.5645, 0.33 ) }
    apic_12 { pt3dadd( -163.255, 93.613, -6.43008, 0.33 ) }
    apic_12 { pt3dadd( -165.346, 93.5351, -6.33761, 0.67 ) }
    apic_12 { pt3dadd( -167.087, 93.3291, -6.39369, 1.33 ) }
    apic_12 { pt3dadd( -168.46, 93.04, -6.62597, 1.33 ) }
    apic_12 { pt3dadd( -173.555, 91.5993, -8.155, 0.33 ) }
    apic_12 { pt3dadd( -176.507, 90.7082, -9.26201, 0.67 ) }
    apic_12 { pt3dadd( -179.851, 89.6073, -10.6806, 0.33 ) }
    apic_12 { pt3dadd( -183.371, 88.54, -12.3955, 0.67 ) }
    apic_12 { pt3dadd( -187.336, 87.5284, -14.4697, 0.33 ) }
    apic_12 { pt3dadd( -188.005, 87.4019, -14.8228, 0.67 ) }
    apic_12 { pt3dadd( -189.527, 87.2063, -15.6765, 0.33 ) }
    apic_12 { pt3dadd( -189.844, 87.1859, -15.8427, 0.67 ) }
    apic_12 { pt3dadd( -192.064, 87.4978, -17.0482, 0.33 ) }
    apic_12 { pt3dadd( -192.961, 87.7558, -17.4735, 0.67 ) }
    apic_12 { pt3dadd( -194.348, 88.2248, -17.9984, 0.33 ) }
    apic_12 { pt3dadd( -195.887, 88.5779, -18.5271, 0.67 ) }
    apic_12 { pt3dadd( -199.107, 89.2421, -19.7314, 0.33 ) }
    apic_12 { pt3dadd( -201.546, 89.6257, -20.6341, 0.33 ) }
    apic_12 { pt3dadd( -203.901, 89.808, -21.469, 0.33 ) }
    apic_12 { pt3dadd( -206.201, 89.8502, -22.3602, 1.33 ) }
    apic_12 { pt3dadd( -209.379, 89.6426, -23.5706, 0.33 ) }
    // Section: apic_6, id: apic_6, parent: apic_2 (entry count 97/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( -1.47562, 41.5143, 10.836, 1.33 ) }
    apic_6 { pt3dadd( -3.24179, 44.2467, 15.1051, 1.33 ) }
    apic_6 { pt3dadd( -4.86632, 46.76, 19.0319, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 0/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( -1.47562, 41.5143, 10.836, 1.33 ) }
    apic_3 { pt3dadd( -1.53561, 42.5485, 9.4029, 0.67 ) }
    apic_3 { pt3dadd( -1.63882, 44.3278, 6.93757, 0.67 ) }
    apic_3 { pt3dadd( -1.81111, 47.2981, 2.82201, 0.67 ) }
    apic_3 { pt3dadd( -1.85814, 48.1087, 1.69875, 0.67 ) }
    apic_3 { pt3dadd( -1.97855, 50.1845, -1.17747, 0.67 ) }
    apic_3 { pt3dadd( -2.0589, 51.5697, -3.09679, 0.67 ) }
    // Section: apic_21, id: apic_21, parent: apic_19 (entry count 7/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 55.0763, 25.4441, -17.4426, 1.33 ) }
    apic_21 { pt3dadd( 58.5196, 27.5229, -18.6986, 0.67 ) }
    apic_21 { pt3dadd( 61.1187, 29.1949, -20.0919, 0.67 ) }
    apic_21 { pt3dadd( 63.2022, 30.6921, -21.4365, 0.67 ) }
    apic_21 { pt3dadd( 65.61, 32.4471, -22.995, 0.67 ) }
    apic_21 { pt3dadd( 69.4599, 35.0342, -25.6687, 0.67 ) }
    apic_21 { pt3dadd( 72.1414, 36.7563, -27.6546, 1.33 ) }
    apic_21 { pt3dadd( 75.8023, 38.8214, -30.7242, 0.67 ) }
    apic_21 { pt3dadd( 79.8868, 40.6504, -34.4363, 1.33 ) }
    apic_21 { pt3dadd( 82.0171, 41.4426, -36.3223, 0.67 ) }
    apic_21 { pt3dadd( 85.3857, 42.6107, -39.2822, 0.67 ) }
    apic_21 { pt3dadd( 87.976, 43.4282, -41.3964, 1.33 ) }
    apic_21 { pt3dadd( 91.1257, 44.1226, -43.7399, 0.67 ) }
    apic_21 { pt3dadd( 95.6926, 44.5627, -47.0386, 2.0 ) }
    apic_21 { pt3dadd( 98.4119, 44.6963, -49.1198, 0.67 ) }
    apic_21 { pt3dadd( 99.9117, 44.8295, -50.289, 0.67 ) }
    apic_21 { pt3dadd( 101.288, 45.0904, -51.3893, 0.33 ) }
    apic_21 { pt3dadd( 102.099, 45.2685, -52.0523, 1.33 ) }
    apic_21 { pt3dadd( 108.304, 47.327, -57.5186, 0.67 ) }
    apic_21 { pt3dadd( 110.215, 48.0782, -59.3792, 0.33 ) }
    apic_21 { pt3dadd( 111.68, 48.6669, -60.9989, 0.33 ) }
    apic_21 { pt3dadd( 114.407, 49.8236, -64.1043, 1.33 ) }
    apic_21 { pt3dadd( 116.336, 50.7105, -66.2821, 0.67 ) }
    apic_21 { pt3dadd( 117.971, 51.6277, -67.983, 0.33 ) }
    apic_21 { pt3dadd( 120.197, 53.1651, -69.8937, 0.33 ) }
    apic_21 { pt3dadd( 121.566, 53.9052, -71.125, 1.33 ) }
    apic_21 { pt3dadd( 122.58, 54.408, -72.0783, 1.33 ) }
    apic_21 { pt3dadd( 124.763, 55.4677, -74.0723, 0.33 ) }
    apic_21 { pt3dadd( 127.247, 56.7484, -76.4881, 0.33 ) }
    apic_21 { pt3dadd( 128.951, 57.5817, -78.0171, 0.67 ) }
    apic_21 { pt3dadd( 134.367, 60.6461, -82.2671, 0.33 ) }
    apic_21 { pt3dadd( 135.916, 61.535, -83.3744, 1.33 ) }
    apic_21 { pt3dadd( 137.239, 62.3383, -84.2615, 0.33 ) }
    apic_21 { pt3dadd( 139.292, 63.4952, -85.4512, 1.33 ) }
    apic_21 { pt3dadd( 141.995, 65.0541, -86.535, 0.33 ) }
    apic_21 { pt3dadd( 144.974, 67.0608, -86.9603, 0.33 ) }
    apic_21 { pt3dadd( 146.502, 68.2942, -86.8188, 0.67 ) }
    apic_21 { pt3dadd( 148.599, 69.9358, -86.4551, 0.33 ) }
    apic_21 { pt3dadd( 151.452, 72.2724, -85.8062, 0.33 ) }
    apic_21 { pt3dadd( 156.871, 77.2174, -84.9201, 1.33 ) }
    apic_21 { pt3dadd( 159.277, 79.738, -84.8385, 0.33 ) }
    apic_21 { pt3dadd( 160.803, 81.4806, -85.1519, 1.33 ) }
    apic_21 { pt3dadd( 162.616, 84.0404, -86.0888, 0.33 ) }
    apic_21 { pt3dadd( 163.604, 85.5656, -86.8397, 1.33 ) }
    apic_21 { pt3dadd( 166.029, 89.8779, -89.265, 0.33 ) }
    apic_21 { pt3dadd( 166.691, 91.1456, -90.0787, 0.67 ) }
    apic_21 { pt3dadd( 168.313, 94.8467, -92.5012, 0.33 ) }
    apic_21 { pt3dadd( 169.696, 98.6162, -94.9627, 0.33 ) }
    apic_21 { pt3dadd( 170.849, 102.272, -97.2681, 0.33 ) }
    apic_21 { pt3dadd( 171.912, 105.789, -99.298, 0.33 ) }
    apic_21 { pt3dadd( 172.54, 108.06, -100.45, 1.33 ) }
    apic_21 { pt3dadd( 173.202, 110.809, -101.639, 0.33 ) }
    apic_21 { pt3dadd( 173.629, 113.311, -102.54, 0.33 ) }
    apic_21 { pt3dadd( 173.783, 115.073, -103.123, 1.33 ) }
    apic_21 { pt3dadd( 173.736, 117.017, -103.898, 2.0 ) }
    apic_21 { pt3dadd( 173.489, 122.029, -105.914, 0.67 ) }
    apic_21 { pt3dadd( 173.23, 125.775, -107.376, 0.67 ) }
    apic_21 { pt3dadd( 172.78, 130.528, -109.084, 0.33 ) }
    apic_21 { pt3dadd( 172.286, 134.226, -110.484, 0.33 ) }
    apic_21 { pt3dadd( 171.465, 137.712, -111.917, 0.67 ) }
    // Section: apic_20, id: apic_20, parent: apic_19 (entry count 67/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 55.0763, 25.4441, -17.4426, 1.33 ) }
    apic_20 { pt3dadd( 57.9057, 29.1851, -17.92, 0.67 ) }
    apic_20 { pt3dadd( 59.9632, 32.0674, -18.405, 0.67 ) }
    apic_20 { pt3dadd( 62.2853, 35.0018, -19.4213, 0.67 ) }
    apic_20 { pt3dadd( 66.0155, 39.3645, -21.4192, 0.67 ) }
    apic_20 { pt3dadd( 68.1046, 41.7848, -22.7157, 0.33 ) }
    apic_20 { pt3dadd( 69.9082, 43.9404, -23.9984, 0.67 ) }
    apic_20 { pt3dadd( 71.1593, 45.2997, -25.2761, 0.33 ) }
    apic_20 { pt3dadd( 74.4698, 48.8573, -29.471, 0.67 ) }
    apic_20 { pt3dadd( 74.9688, 49.3302, -30.1687, 0.67 ) }
    apic_20 { pt3dadd( 78.4221, 52.0314, -34.8719, 0.67 ) }
    apic_20 { pt3dadd( 79.5823, 52.7945, -36.3076, 0.67 ) }
    apic_20 { pt3dadd( 83.3444, 54.8305, -40.7499, 0.67 ) }
    apic_20 { pt3dadd( 85.3674, 55.7874, -42.8807, 1.33 ) }
    apic_20 { pt3dadd( 88.3347, 57.0694, -45.37, 0.67 ) }
    apic_20 { pt3dadd( 89.6848, 57.5754, -46.3276, 0.67 ) }
    apic_20 { pt3dadd( 93.5812, 58.9183, -48.7956, 1.33 ) }
    apic_20 { pt3dadd( 96.2497, 59.88, -50.243, 0.33 ) }
    apic_20 { pt3dadd( 98.8915, 60.9316, -51.4861, 2.0 ) }
    apic_20 { pt3dadd( 102.674, 62.4992, -52.9829, 0.33 ) }
    apic_20 { pt3dadd( 105.18, 63.5815, -53.7478, 0.67 ) }
    apic_20 { pt3dadd( 109.077, 65.3145, -54.6774, 0.33 ) }
    apic_20 { pt3dadd( 110.893, 66.2437, -54.9547, 0.33 ) }
    apic_20 { pt3dadd( 112.854, 67.2655, -55.1745, 2.0 ) }
    apic_20 { pt3dadd( 117.696, 69.9655, -55.7299, 0.67 ) }
    apic_20 { pt3dadd( 119.454, 71.0298, -55.9219, 0.33 ) }
    apic_20 { pt3dadd( 121.04, 72.0302, -56.1639, 0.67 ) }
    apic_20 { pt3dadd( 123.352, 73.6158, -56.6756, 0.33 ) }
    apic_20 { pt3dadd( 125.5, 75.3204, -57.2719, 1.33 ) }
    apic_20 { pt3dadd( 127.221, 76.8645, -57.9951, 0.67 ) }
    apic_20 { pt3dadd( 128.163, 77.9278, -58.716, 0.67 ) }
    apic_20 { pt3dadd( 130.207, 80.6841, -60.7577, 0.33 ) }
    apic_20 { pt3dadd( 131.37, 82.2371, -62.004, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_20 { pt3dadd( 134.543, 85.9375, -64.9884, 0.67 ) }
    apic_20 { pt3dadd( 136.673, 88.2752, -66.3729, 0.33 ) }
    apic_20 { pt3dadd( 137.963, 89.7125, -66.9906, 2.0 ) }
    apic_20 { pt3dadd( 140.161, 91.8533, -68.0298, 0.33 ) }
    apic_20 { pt3dadd( 141.535, 93.1672, -68.5691, 0.33 ) }
    apic_20 { pt3dadd( 143.319, 95.0174, -69.3794, 1.33 ) }
    apic_20 { pt3dadd( 145.211, 97.1345, -70.4617, 0.33 ) }
    apic_20 { pt3dadd( 146.514, 98.5989, -71.0226, 1.33 ) }
    apic_20 { pt3dadd( 150.259, 102.726, -72.2988, 0.33 ) }
    apic_20 { pt3dadd( 151.545, 104.057, -72.787, 0.67 ) }
    apic_20 { pt3dadd( 153.023, 105.582, -73.5855, 0.33 ) }
    apic_20 { pt3dadd( 153.449, 105.976, -73.8307, 0.67 ) }
    apic_20 { pt3dadd( 154.555, 106.808, -74.5747, 0.33 ) }
    apic_20 { pt3dadd( 155.272, 107.275, -75.0546, 1.33 ) }
    apic_20 { pt3dadd( 158.473, 109.396, -77.1799, 0.33 ) }
    apic_20 { pt3dadd( 159.585, 110.079, -77.9957, 0.33 ) }
    apic_20 { pt3dadd( 161.903, 111.47, -79.7571, 0.67 ) }
    apic_20 { pt3dadd( 164.793, 113.147, -82.004, 0.67 ) }
    apic_20 { pt3dadd( 166.7, 114.283, -83.3489, 0.33 ) }
    apic_20 { pt3dadd( 167.642, 114.852, -83.8927, 2.0 ) }
    apic_20 { pt3dadd( 170.075, 116.449, -84.96, 0.67 ) }
    apic_20 { pt3dadd( 170.882, 116.933, -85.2411, 0.33 ) }
    apic_20 { pt3dadd( 173.266, 118.286, -85.7916, 0.33 ) }
    apic_20 { pt3dadd( 176.753, 120.29, -85.7659, 1.33 ) }
    apic_20 { pt3dadd( 178.806, 121.419, -85.6719, 0.33 ) }
    apic_20 { pt3dadd( 180.141, 122.157, -85.5112, 0.33 ) }
    apic_20 { pt3dadd( 181.496, 122.849, -85.2865, 0.67 ) }
    apic_20 { pt3dadd( 183.786, 123.964, -84.8984, 0.33 ) }
    apic_20 { pt3dadd( 189.13, 126.677, -84.1984, 0.67 ) }
    apic_20 { pt3dadd( 191.648, 127.811, -84.3563, 0.33 ) }
    apic_20 { pt3dadd( 195.364, 129.477, -85.0585, 0.67 ) }
    apic_20 { pt3dadd( 197.807, 130.551, -85.7607, 0.33 ) }
    apic_20 { pt3dadd( 199.482, 131.28, -86.4151, 0.33 ) }
    apic_20 { pt3dadd( 202.138, 132.357, -87.7788, 1.33 ) }
    apic_20 { pt3dadd( 208.571, 134.506, -92.0057, 0.33 ) }
    apic_20 { pt3dadd( 210.587, 135.086, -93.3996, 0.33 ) }
    apic_20 { pt3dadd( 212.747, 135.606, -95.0469, 1.33 ) }
    apic_20 { pt3dadd( 214.579, 136.083, -96.4391, 0.33 ) }
    apic_20 { pt3dadd( 214.931, 136.164, -96.6755, 0.67 ) }
    apic_20 { pt3dadd( 218.381, 136.844, -98.4304, 0.33 ) }
    apic_20 { pt3dadd( 219.548, 137.129, -98.8796, 0.67 ) }
    apic_20 { pt3dadd( 222.121, 137.711, -100.032, 0.33 ) }
    apic_20 { pt3dadd( 223.327, 138.027, -100.595, 0.67 ) }
    apic_20 { pt3dadd( 224.947, 138.528, -101.314, 0.33 ) }
    apic_20 { pt3dadd( 225.557, 138.737, -101.547, 0.67 ) }
    apic_20 { pt3dadd( 228.978, 140.083, -102.527, 0.33 ) }
    apic_20 { pt3dadd( 229.649, 140.389, -102.766, 0.67 ) }
    apic_20 { pt3dadd( 231.894, 141.539, -103.701, 0.33 ) }
    apic_20 { pt3dadd( 232.974, 142.083, -104.182, 0.67 ) }
    apic_20 { pt3dadd( 234.87, 143.127, -105.123, 0.33 ) }
    apic_20 { pt3dadd( 236.358, 143.99, -105.885, 0.67 ) }
    apic_20 { pt3dadd( 239.933, 146.096, -107.624, 0.33 ) }
    apic_20 { pt3dadd( 240.713, 146.62, -108.153, 0.67 ) }
    // Section: apic_18, id: apic_18, parent: apic_16 (entry count 53/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 70.8889, 99.2881, -1.72302, 2.0 ) }
    apic_18 { pt3dadd( 70.625, 100.526, -1.76451, 0.67 ) }
    apic_18 { pt3dadd( 70.5069, 101.29, -1.78873, 0.67 ) }
    apic_18 { pt3dadd( 70.1637, 102.576, -1.64716, 0.67 ) }
    apic_18 { pt3dadd( 69.6865, 104.167, -1.39299, 0.67 ) }
    apic_18 { pt3dadd( 69.4697, 105.072, -1.27307, 0.67 ) }
    apic_18 { pt3dadd( 69.2507, 105.989, -1.17223, 0.67 ) }
    apic_18 { pt3dadd( 69.0634, 106.734, -1.10142, 0.67 ) }
    apic_18 { pt3dadd( 68.5285, 109.864, -0.723332, 0.67 ) }
    apic_18 { pt3dadd( 68.3097, 111.353, -0.534506, 0.67 ) }
    apic_18 { pt3dadd( 67.9847, 113.594, -0.160407, 0.67 ) }
    apic_18 { pt3dadd( 67.8085, 114.769, 0.0512514, 0.67 ) }
    apic_18 { pt3dadd( 67.59, 116.105, 0.273227, 0.67 ) }
    apic_18 { pt3dadd( 66.9454, 120.146, 0.981134, 0.67 ) }
    apic_18 { pt3dadd( 66.8005, 121.392, 1.19096, 0.67 ) }
    apic_18 { pt3dadd( 66.6202, 122.891, 1.47906, 0.67 ) }
    apic_18 { pt3dadd( 66.4359, 124.53, 1.86817, 0.67 ) }
    apic_18 { pt3dadd( 66.2266, 127.01, 2.47223, 0.67 ) }
    apic_18 { pt3dadd( 66.0667, 130.033, 3.19878, 0.67 ) }
    apic_18 { pt3dadd( 66.0053, 131.616, 3.54319, 0.67 ) }
    apic_18 { pt3dadd( 66.0162, 133.1, 3.82816, 0.67 ) }
    apic_18 { pt3dadd( 66.1435, 134.848, 4.1059, 0.67 ) }
    apic_18 { pt3dadd( 66.3373, 136.542, 4.47349, 0.67 ) }
    apic_18 { pt3dadd( 66.5604, 137.821, 4.85436, 0.67 ) }
    apic_18 { pt3dadd( 66.858, 139.322, 5.30414, 0.67 ) }
    apic_18 { pt3dadd( 67.2565, 141.447, 5.99989, 0.67 ) }
    apic_18 { pt3dadd( 67.6313, 143.301, 6.65088, 0.67 ) }
    apic_18 { pt3dadd( 68.1851, 146.019, 7.5939, 0.67 ) }
    apic_18 { pt3dadd( 68.5044, 147.361, 8.19838, 0.67 ) }
    apic_18 { pt3dadd( 69.1286, 152.144, 11.0422, 0.67 ) }
    apic_18 { pt3dadd( 68.9181, 157.243, 13.404, 0.67 ) }
    apic_18 { pt3dadd( 68.078, 162.066, 16.1158, 0.67 ) }
    apic_18 { pt3dadd( 65.9974, 166.305, 19.0286, 0.67 ) }
    apic_18 { pt3dadd( 63.8982, 170.528, 21.9505, 0.67 ) }
    apic_18 { pt3dadd( 62.3682, 174.575, 25.4047, 0.67 ) }
    apic_18 { pt3dadd( 61.3817, 178.511, 29.1627, 0.67 ) }
    // Section: apic_17, id: apic_17, parent: apic_16 (entry count 89/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 70.8889, 99.2881, -1.72302, 2.0 ) }
    apic_17 { pt3dadd( 74.4532, 100.304, 2.20746, 0.67 ) }
    apic_17 { pt3dadd( 76.4908, 100.971, 3.99882, 1.33 ) }
    apic_17 { pt3dadd( 81.4136, 103.411, 7.11642, 0.67 ) }
    apic_17 { pt3dadd( 83.5732, 104.748, 8.74771, 0.67 ) }
    apic_17 { pt3dadd( 86.7997, 106.705, 11.2914, 0.67 ) }
    apic_17 { pt3dadd( 88.7457, 107.964, 12.7722, 0.67 ) }
    apic_17 { pt3dadd( 91.041, 109.523, 14.3341, 0.67 ) }
    apic_17 { pt3dadd( 96.5375, 113.361, 18.3871, 0.67 ) }
    apic_17 { pt3dadd( 102.057, 116.987, 22.4368, 0.67 ) }
    apic_17 { pt3dadd( 104.861, 118.439, 24.7172, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    apic_17 { pt3dadd( 108.877, 119.814, 28.3262, 0.67 ) }
    apic_17 { pt3dadd( 111.412, 120.228, 30.7986, 0.67 ) }
    apic_17 { pt3dadd( 115.27, 119.927, 35.0931, 0.67 ) }
    apic_17 { pt3dadd( 117.319, 119.192, 37.512, 0.67 ) }
    apic_17 { pt3dadd( 120.543, 117.685, 41.0918, 0.67 ) }
    apic_17 { pt3dadd( 124.041, 115.64, 45.3711, 0.67 ) }
    apic_17 { pt3dadd( 125.123, 114.82, 46.8021, 0.67 ) }
    apic_17 { pt3dadd( 128.967, 111.776, 51.9339, 0.67 ) }
    apic_17 { pt3dadd( 130.54, 110.76, 53.7491, 0.67 ) }
    apic_17 { pt3dadd( 137.075, 108.539, 63.3439, 0.67 ) }
    apic_17 { pt3dadd( 142.883, 107.478, 73.5584, 0.67 ) }
    apic_17 { pt3dadd( 149.453, 106.943, 83.3295, 0.67 ) }
    apic_17 { pt3dadd( 157.524, 107.911, 91.8498, 0.67 ) }
    // Section: apic_10, id: apic_10, parent: apic_6 (entry count 13/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( -4.86632, 46.76, 19.0319, 1.33 ) }
    apic_10 { pt3dadd( -8.07698, 48.5758, 18.1176, 0.67 ) }
    apic_10 { pt3dadd( -11.5169, 50.2965, 17.8159, 0.67 ) }
    apic_10 { pt3dadd( -16.8341, 52.9703, 17.2319, 0.67 ) }
    apic_10 { pt3dadd( -19.2935, 54.0399, 16.9016, 0.67 ) }
    apic_10 { pt3dadd( -21.9811, 55.0623, 16.4555, 0.67 ) }
    apic_10 { pt3dadd( -25.3655, 56.1854, 15.8305, 0.67 ) }
    apic_10 { pt3dadd( -32.8652, 58.558, 13.3125, 0.67 ) }
    apic_10 { pt3dadd( -39.4893, 60.7313, 10.0111, 0.67 ) }
    apic_10 { pt3dadd( -42.0135, 61.6349, 8.50921, 0.67 ) }
    apic_10 { pt3dadd( -44.383, 62.3433, 7.01631, 0.67 ) }
    apic_10 { pt3dadd( -45.5998, 62.6497, 6.16365, 0.67 ) }
    apic_10 { pt3dadd( -53.2927, 64.834, -0.709961, 0.67 ) }
    apic_10 { pt3dadd( -54.351, 65.2532, -2.51815, 0.67 ) }
    apic_10 { pt3dadd( -62.1994, 70.4024, -13.3962, 0.67 ) }
    apic_10 { pt3dadd( -69.0787, 75.9377, -24.7437, 0.67 ) }
    apic_10 { pt3dadd( -75.3353, 80.7593, -36.7433, 0.67 ) }
    apic_10 { pt3dadd( -81.6883, 85.6919, -48.6487, 0.67 ) }
    apic_10 { pt3dadd( -85.8577, 88.3056, -62.1239, 0.67 ) }
    apic_10 { pt3dadd( -91.8453, 93.0072, -74.3052, 0.67 ) }
    apic_10 { pt3dadd( -98.5491, 97.3926, -86.2211, 0.67 ) }
    apic_10 { pt3dadd( -106.426, 100.189, -97.8781, 0.67 ) }
    apic_10 { pt3dadd( -113.023, 104.062, -110.022, 0.67 ) }
    apic_10 { pt3dadd( -118.259, 108.784, -122.54, 0.67 ) }
    apic_10 { pt3dadd( -123.302, 113.105, -135.273, 0.67 ) }
    apic_10 { pt3dadd( -127.613, 119.008, -147.674, 0.67 ) }
    apic_10 { pt3dadd( -129.593, 125.575, -160.366, 0.67 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 40/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( -4.86632, 46.76, 19.0319, 1.33 ) }
    apic_7 { pt3dadd( -3.75538, 49.9816, 19.4605, 1.33 ) }
    apic_7 { pt3dadd( -2.2958, 55.0301, 19.8046, 1.33 ) }
    apic_7 { pt3dadd( -1.56117, 58.4777, 19.8546, 1.33 ) }
    apic_7 { pt3dadd( -0.717923, 63.7015, 19.763, 1.33 ) }
    apic_7 { pt3dadd( 0.360456, 69.9676, 19.6114, 1.33 ) }
    apic_7 { pt3dadd( 1.33224, 75.844, 19.5493, 1.33 ) }
    apic_7 { pt3dadd( 2.39782, 83.2446, 19.7145, 0.67 ) }
    apic_7 { pt3dadd( 3.05088, 87.6942, 20.0317, 0.67 ) }
    apic_7 { pt3dadd( 3.4156, 90.4373, 20.3128, 0.67 ) }
    apic_7 { pt3dadd( 4.66182, 99.0395, 21.5666, 0.67 ) }
    apic_7 { pt3dadd( 5.30618, 104.138, 22.4048, 0.67 ) }
    apic_7 { pt3dadd( 6.09168, 109.755, 23.615, 0.67 ) }
    apic_7 { pt3dadd( 7.37607, 115.957, 25.2557, 0.67 ) }
    apic_7 { pt3dadd( 8.42179, 119.921, 26.5562, 0.67 ) }
    apic_7 { pt3dadd( 9.46155, 123.674, 27.8849, 0.67 ) }
    apic_7 { pt3dadd( 11.1904, 130.086, 30.1972, 0.67 ) }
    apic_7 { pt3dadd( 11.8074, 132.398, 31.0888, 0.67 ) }
    apic_7 { pt3dadd( 12.7443, 135.934, 32.5212, 0.67 ) }
    apic_7 { pt3dadd( 14.2682, 142.925, 35.6357, 0.67 ) }
    apic_7 { pt3dadd( 15.0722, 147.568, 37.9214, 0.67 ) }
    apic_7 { pt3dadd( 15.3109, 149.903, 39.0779, 1.33 ) }
    apic_7 { pt3dadd( 15.7665, 156.418, 42.4768, 0.67 ) }
    apic_7 { pt3dadd( 15.8188, 160.632, 44.5794, 0.67 ) }
    apic_7 { pt3dadd( 15.5253, 165.434, 46.7551, 0.67 ) }
    apic_7 { pt3dadd( 14.9937, 169.506, 48.4333, 0.67 ) }
    apic_7 { pt3dadd( 14.6575, 171.574, 49.3942, 0.67 ) }
    // Section: apic_5, id: apic_5, parent: apic_3 (entry count 67/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( -2.0589, 51.5697, -3.09679, 0.67 ) }
    apic_5 { pt3dadd( -5.98201, 51.2914, -12.1298, 0.67 ) }
    apic_5 { pt3dadd( -7.29795, 51.1684, -14.5218, 0.67 ) }
    apic_5 { pt3dadd( -10.9985, 50.6663, -20.4229, 0.67 ) }
    apic_5 { pt3dadd( -16.8487, 49.9903, -28.8755, 1.33 ) }
    apic_5 { pt3dadd( -20.813, 49.6287, -34.3101, 0.67 ) }
    apic_5 { pt3dadd( -30.2464, 48.9751, -46.5324, 0.67 ) }
    apic_5 { pt3dadd( -34.8735, 48.5923, -51.9528, 0.67 ) }
    apic_5 { pt3dadd( -36.6912, 48.4855, -53.9948, 0.67 ) }
    apic_5 { pt3dadd( -42.1478, 48.4779, -59.8511, 1.33 ) }
    apic_5 { pt3dadd( -50.1394, 49.062, -67.7554, 0.67 ) }
    apic_5 { pt3dadd( -52.2548, 49.3828, -69.7565, 1.33 ) }
    apic_5 { pt3dadd( -59.3665, 50.9437, -76.0452, 0.67 ) }
    apic_5 { pt3dadd( -61.5911, 51.5273, -78.1008, 1.33 ) }
    apic_5 { pt3dadd( -64.2899, 52.3242, -80.5025, 0.67 ) }
    apic_5 { pt3dadd( -67.8156, 53.4227, -83.5349, 1.33 ) }
    apic_5 { pt3dadd( -75.4986, 55.8991, -90.0734, 0.33 ) }
    apic_5 { pt3dadd( -75.8008, 56.0008, -90.3348, 0.67 ) }
    apic_5 { pt3dadd( -77.3828, 56.5323, -91.7421, 0.33 ) }
    apic_5 { pt3dadd( -81.4361, 57.8815, -95.6037, 1.33 ) }
    apic_5 { pt3dadd( -88.0416, 60.1741, -102.197, 0.67 ) }
    apic_5 { pt3dadd( -90.983, 61.2638, -105.126, 0.67 ) }
    apic_5 { pt3dadd( -93.1168, 62.1281, -107.304, 1.33 ) }
    apic_5 { pt3dadd( -98.6099, 64.5172, -112.626, 0.33 ) }
    apic_5 { pt3dadd( -100.376, 65.2946, -114.273, 0.67 ) }
    apic_5 { pt3dadd( -103.986, 66.926, -117.431, 0.33 ) }
    apic_5 { pt3dadd( -106.781, 68.1651, -119.97, 1.33 ) }
    apic_5 { pt3dadd( -110.788, 69.9385, -123.799, 0.33 ) }
    apic_5 { pt3dadd( -112.636, 70.7161, -125.655, 1.33 ) }
    apic_5 { pt3dadd( -116.192, 72.2887, -129.941, 0.33 ) }
    apic_5 { pt3dadd( -117.906, 73.0699, -132.402, 1.33 ) }
    apic_5 { pt3dadd( -121.525, 74.8033, -138.656, 1.33 ) }
    apic_5 { pt3dadd( -122.529, 75.2649, -140.626, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    apic_5 { pt3dadd( -122.876, 75.4476, -141.378, 0.67 ) }
    apic_5 { pt3dadd( -127.517, 78.1494, -152.024, 0.33 ) }
    apic_5 { pt3dadd( -127.983, 78.443, -153.096, 0.67 ) }
    apic_5 { pt3dadd( -131.047, 80.333, -159.814, 0.33 ) }
    apic_5 { pt3dadd( -133.307, 81.6615, -164.384, 0.67 ) }
    apic_5 { pt3dadd( -135.517, 82.7932, -168.514, 0.67 ) }
    apic_5 { pt3dadd( -136.322, 83.1429, -169.777, 0.33 ) }
    apic_5 { pt3dadd( -137.589, 83.5823, -171.16, 0.67 ) }
    apic_5 { pt3dadd( -138.457, 83.826, -172.011, 0.33 ) }
    apic_5 { pt3dadd( -140.462, 84.1672, -172.929, 0.67 ) }
    apic_5 { pt3dadd( -142.431, 84.2018, -172.977, 0.33 ) }
    apic_5 { pt3dadd( -143.183, 84.0857, -172.873, 0.33 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 12/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( -2.0589, 51.5697, -3.09679, 0.67 ) }
    apic_4 { pt3dadd( 0.259456, 55.1291, -4.02747, 0.67 ) }
    apic_4 { pt3dadd( 1.03729, 56.5307, -4.36715, 0.67 ) }
    apic_4 { pt3dadd( 4.11929, 61.4546, -5.80373, 0.67 ) }
    apic_4 { pt3dadd( 4.97048, 62.7804, -6.23263, 0.67 ) }
    apic_4 { pt3dadd( 7.13333, 66.1532, -7.35196, 1.33 ) }
    apic_4 { pt3dadd( 8.28349, 67.9596, -7.94825, 0.67 ) }
    apic_4 { pt3dadd( 10.8825, 71.9778, -9.34541, 0.67 ) }
    apic_4 { pt3dadd( 14.3249, 76.9753, -11.0762, 0.67 ) }
    apic_4 { pt3dadd( 15.5952, 78.6791, -11.6647, 0.67 ) }
    apic_4 { pt3dadd( 17.0622, 80.5204, -12.2638, 1.33 ) }
    apic_4 { pt3dadd( 18.7546, 82.3859, -12.8255, 1.33 ) }
    apic_4 { pt3dadd( 23.6935, 87.1212, -14.362, 0.67 ) }
    apic_4 { pt3dadd( 24.8542, 88.0706, -14.6767, 1.33 ) }
    apic_4 { pt3dadd( 26.4852, 89.3139, -15.0607, 0.67 ) }
    apic_4 { pt3dadd( 27.698, 90.1205, -15.3349, 0.33 ) }
    apic_4 { pt3dadd( 29.9763, 91.4429, -15.9305, 2.0 ) }
    apic_4 { pt3dadd( 33.022, 93.0872, -16.8943, 1.33 ) }
    apic_4 { pt3dadd( 35.1587, 94.2108, -17.7052, 0.67 ) }
    apic_4 { pt3dadd( 38.3235, 96.0244, -19.0582, 0.33 ) }
    apic_4 { pt3dadd( 38.6522, 96.2269, -19.2155, 0.67 ) }
    apic_4 { pt3dadd( 41.1291, 97.7942, -20.5245, 0.33 ) }
    apic_4 { pt3dadd( 42.3898, 98.7724, -21.3297, 0.33 ) }
    apic_4 { pt3dadd( 42.7979, 99.1737, -21.6902, 0.67 ) }
    apic_4 { pt3dadd( 43.1415, 99.5164, -22.0412, 0.33 ) }
    apic_4 { pt3dadd( 43.627, 99.9955, -22.5385, 0.67 ) }
    apic_4 { pt3dadd( 44.5226, 100.881, -23.3763, 0.33 ) }
    apic_4 { pt3dadd( 46.2902, 102.47, -24.9826, 2.0 ) }
    apic_4 { pt3dadd( 48.5976, 104.302, -26.988, 0.67 ) }
    apic_4 { pt3dadd( 49.8954, 105.245, -28.1603, 0.33 ) }
    apic_4 { pt3dadd( 51.4241, 106.194, -29.508, 1.33 ) }
    apic_4 { pt3dadd( 52.5332, 106.803, -30.4618, 0.33 ) }
    apic_4 { pt3dadd( 55.4838, 108.214, -32.8232, 0.67 ) }
    apic_4 { pt3dadd( 56.4272, 108.614, -33.4689, 2.0 ) }
    apic_4 { pt3dadd( 59.1547, 109.855, -34.9553, 0.33 ) }
    apic_4 { pt3dadd( 61.1751, 110.872, -36.0805, 0.33 ) }
    apic_4 { pt3dadd( 61.6846, 111.13, -36.3914, 1.33 ) }
    apic_4 { pt3dadd( 63.5746, 112.106, -37.5753, 0.33 ) }
    apic_4 { pt3dadd( 65.1809, 112.967, -38.6514, 1.33 ) }
    apic_4 { pt3dadd( 68.9726, 115.049, -41.48, 0.33 ) }
    apic_4 { pt3dadd( 71.0314, 116.214, -43.0588, 0.67 ) }
    apic_4 { pt3dadd( 73.2513, 117.5, -44.9648, 0.33 ) }
    apic_4 { pt3dadd( 73.5322, 117.651, -45.2392, 0.67 ) }
    apic_4 { pt3dadd( 75.2041, 118.513, -47.1037, 0.33 ) }
    apic_4 { pt3dadd( 76.1734, 118.962, -48.2737, 1.33 ) }
    apic_4 { pt3dadd( 77.8484, 119.674, -50.1376, 0.33 ) }
    apic_4 { pt3dadd( 78.6732, 120.02, -50.915, 1.33 ) }
    apic_4 { pt3dadd( 81.0063, 121.019, -52.9808, 0.33 ) }
    apic_4 { pt3dadd( 82.8407, 121.765, -54.5595, 2.0 ) }
    apic_4 { pt3dadd( 86.3075, 123.099, -57.4158, 0.33 ) }
    apic_4 { pt3dadd( 88.0774, 123.8, -59.2732, 2.0 ) }
    apic_4 { pt3dadd( 90.1173, 124.694, -62.5203, 0.33 ) }
    apic_4 { pt3dadd( 90.6663, 124.938, -63.4371, 0.67 ) }
    apic_4 { pt3dadd( 91.31, 125.226, -64.7279, 0.33 ) }
    apic_4 { pt3dadd( 91.5717, 125.355, -65.5017, 1.33 ) }
    apic_4 { pt3dadd( 92.635, 126.273, -72.2791, 0.67 ) }
    apic_4 { pt3dadd( 93.0829, 127.023, -78.3021, 0.67 ) }
    // Section: apic_9, id: apic_9, parent: apic_7 (entry count 69/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 14.6575, 171.574, 49.3942, 0.67 ) }
    apic_9 { pt3dadd( 12.7947, 174.415, 50.3841, 0.67 ) }
    apic_9 { pt3dadd( 10.3093, 178.206, 51.7049, 0.67 ) }
    apic_9 { pt3dadd( 4.1433, 187.564, 55.297, 0.67 ) }
    apic_9 { pt3dadd( -1.46222, 196.589, 60.3541, 0.67 ) }
    apic_9 { pt3dadd( -7.46703, 205.8, 64.5414, 0.67 ) }
    apic_9 { pt3dadd( -14.292, 214.099, 69.1826, 0.67 ) }
    apic_9 { pt3dadd( -19.6428, 223.758, 73.3551, 0.67 ) }
    apic_9 { pt3dadd( -26.3023, 233.345, 74.7932, 0.67 ) }
    apic_9 { pt3dadd( -33.1134, 242.852, 73.7826, 0.67 ) }
    apic_9 { pt3dadd( -39.8471, 252.474, 74.3104, 0.67 ) }
    apic_9 { pt3dadd( -45.1798, 262.993, 75.3521, 0.67 ) }
    apic_9 { pt3dadd( -51.3408, 272.728, 77.8351, 0.67 ) }
    apic_9 { pt3dadd( -57.2129, 282.082, 81.9202, 0.67 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 83/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 14.6575, 171.574, 49.3942, 0.67 ) }
    apic_8 { pt3dadd( 20.6478, 174.552, 45.9181, 0.67 ) }
    apic_8 { pt3dadd( 24.5431, 175.73, 43.9785, 0.67 ) }
    apic_8 { pt3dadd( 27.5806, 175.998, 42.5458, 0.67 ) }
    apic_8 { pt3dadd( 28.9434, 176.077, 41.9161, 0.67 ) }
    apic_8 { pt3dadd( 30.7332, 176.276, 41.1026, 0.67 ) }
    apic_8 { pt3dadd( 32.2564, 176.5, 40.4955, 0.67 ) }
    apic_8 { pt3dadd( 35.6887, 177.151, 39.3193, 0.67 ) }
    apic_8 { pt3dadd( 38.526, 177.714, 38.3846, 0.67 ) }
    apic_8 { pt3dadd( 40.151, 178.017, 38.0018, 0.67 ) }
    apic_8 { pt3dadd( 44.8325, 179.037, 36.97, 0.67 ) }
    apic_8 { pt3dadd( 47.0331, 179.598, 36.5795, 1.33 ) }
    apic_8 { pt3dadd( 50.714, 180.738, 36.119, 0.67 ) }
    apic_8 { pt3dadd( 54.3974, 182.132, 35.8924, 1.33 ) }
    apic_8 { pt3dadd( 57.0306, 183.314, 35.9235, 1.33 ) }
    apic_8 { pt3dadd( 61.312, 185.319, 36.1754, 0.67 ) }
    apic_8 { pt3dadd( 63.1335, 186.202, 36.3922, 2.0 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    apic_8 { pt3dadd( 65.7065, 187.474, 36.779, 0.67 ) }
    apic_8 { pt3dadd( 66.6631, 187.974, 36.9563, 0.67 ) }
    apic_8 { pt3dadd( 70.4135, 190.122, 37.6878, 1.33 ) }
    apic_8 { pt3dadd( 73.1216, 191.754, 38.1851, 0.67 ) }
    apic_8 { pt3dadd( 74.4172, 192.531, 38.3839, 0.67 ) }
    apic_8 { pt3dadd( 75.6059, 193.193, 38.4835, 0.33 ) }
    apic_8 { pt3dadd( 78.1521, 194.452, 38.4242, 1.33 ) }
    apic_8 { pt3dadd( 80.4049, 195.348, 38.1481, 0.33 ) }
    apic_8 { pt3dadd( 83.055, 196.299, 37.6285, 0.67 ) }
    apic_8 { pt3dadd( 86.3893, 197.666, 36.8482, 0.67 ) }
    apic_8 { pt3dadd( 88.5223, 198.623, 36.3281, 0.33 ) }
    apic_8 { pt3dadd( 92.3788, 200.341, 35.2822, 2.66 ) }
    apic_8 { pt3dadd( 96.9894, 202.221, 34.014, 0.33 ) }
    apic_8 { pt3dadd( 97.9678, 202.591, 33.7265, 0.33 ) }
    apic_8 { pt3dadd( 99.3619, 203.105, 33.4055, 0.67 ) }
    apic_8 { pt3dadd( 101.182, 203.955, 33.1215, 0.33 ) }
    apic_8 { pt3dadd( 103.996, 205.589, 32.8436, 0.67 ) }
    apic_8 { pt3dadd( 105.679, 206.732, 33.0085, 0.33 ) }
    apic_8 { pt3dadd( 107.469, 208.086, 33.4728, 0.33 ) }
    apic_8 { pt3dadd( 110.827, 210.606, 34.5426, 2.0 ) }
    apic_8 { pt3dadd( 113.317, 212.62, 35.5452, 0.33 ) }
    apic_8 { pt3dadd( 113.538, 212.819, 35.6218, 0.67 ) }
    apic_8 { pt3dadd( 115.07, 214.358, 36.1572, 0.33 ) }
    apic_8 { pt3dadd( 115.07, 214.358, 36.1572, 0.67 ) }
    apic_8 { pt3dadd( 115.972, 214.984, 36.0476, 0.33 ) }
    apic_8 { pt3dadd( 117.63, 215.948, 35.6983, 2.0 ) }
    apic_8 { pt3dadd( 121.251, 217.755, 34.8257, 0.33 ) }
    apic_8 { pt3dadd( 121.838, 218.04, 34.6624, 0.67 ) }
    apic_8 { pt3dadd( 125.129, 219.547, 33.5751, 0.33 ) }
    apic_8 { pt3dadd( 126.256, 220.034, 33.1864, 1.33 ) }
    apic_8 { pt3dadd( 128.541, 220.91, 32.3338, 0.33 ) }
    apic_8 { pt3dadd( 131.151, 221.764, 31.3212, 0.67 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_14, apic_1, axon_1, apic_22, apic_15, apic_11, apic_2, apic_24, apic_23, apic_19, apic_16, apic_13, apic_12, apic_6, apic_3, apic_21, apic_20, apic_18, apic_17, apic_10, apic_7, apic_5, apic_4, apic_9, apic_8]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    apic_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    apic_14 ModelViewParmSubset_1.append()
    apic_1 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()
    apic_22 ModelViewParmSubset_1.append()
    apic_15 ModelViewParmSubset_1.append()
    apic_11 ModelViewParmSubset_1.append()
    apic_2 ModelViewParmSubset_1.append()
    apic_24 ModelViewParmSubset_1.append()
    apic_23 ModelViewParmSubset_1.append()
    apic_19 ModelViewParmSubset_1.append()
    apic_16 ModelViewParmSubset_1.append()
    apic_13 ModelViewParmSubset_1.append()
    apic_12 ModelViewParmSubset_1.append()
    apic_6 ModelViewParmSubset_1.append()
    apic_3 ModelViewParmSubset_1.append()
    apic_21 ModelViewParmSubset_1.append()
    apic_20 ModelViewParmSubset_1.append()
    apic_18 ModelViewParmSubset_1.append()
    apic_17 ModelViewParmSubset_1.append()
    apic_10 ModelViewParmSubset_1.append()
    apic_7 ModelViewParmSubset_1.append()
    apic_5 ModelViewParmSubset_1.append()
    apic_4 ModelViewParmSubset_1.append()
    apic_9 ModelViewParmSubset_1.append()
    apic_8 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_2 = new SectionList()
    soma_0 ModelViewParmSubset_2.append()
    axon_0 ModelViewParmSubset_2.append()
    axon_1 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_8, dend_7, dend_4, dend_3, dend_0, apic_14, apic_1, dend_12, dend_9, dend_6, dend_5, dend_2, dend_1, apic_22, apic_15, apic_11, apic_2, dend_14, dend_13, dend_11, dend_10, apic_24, apic_23, apic_19, apic_16, apic_13, apic_12, apic_6, apic_3, apic_21, apic_20, apic_18, apic_17, apic_10, apic_7, apic_5, apic_4, apic_9, apic_8]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    apic_0 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    apic_14 ModelViewParmSubset_3.append()
    apic_1 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    apic_22 ModelViewParmSubset_3.append()
    apic_15 ModelViewParmSubset_3.append()
    apic_11 ModelViewParmSubset_3.append()
    apic_2 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    apic_24 ModelViewParmSubset_3.append()
    apic_23 ModelViewParmSubset_3.append()
    apic_19 ModelViewParmSubset_3.append()
    apic_16 ModelViewParmSubset_3.append()
    apic_13 ModelViewParmSubset_3.append()
    apic_12 ModelViewParmSubset_3.append()
    apic_6 ModelViewParmSubset_3.append()
    apic_3 ModelViewParmSubset_3.append()
    apic_21 ModelViewParmSubset_3.append()
    apic_20 ModelViewParmSubset_3.append()
    apic_18 ModelViewParmSubset_3.append()
    apic_17 ModelViewParmSubset_3.append()
    apic_10 ModelViewParmSubset_3.append()
    apic_7 ModelViewParmSubset_3.append()
    apic_5 ModelViewParmSubset_3.append()
    apic_4 ModelViewParmSubset_3.append()
    apic_9 ModelViewParmSubset_3.append()
    apic_8 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_14, apic_1, apic_22, apic_15, apic_11, apic_2, apic_24, apic_23, apic_19, apic_16, apic_13, apic_12, apic_6, apic_3, apic_21, apic_20, apic_18, apic_17, apic_10, apic_7, apic_5, apic_4, apic_9, apic_8]}
    ModelViewParmSubset_4 = new SectionList()
    apic_0 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    apic_22 ModelViewParmSubset_4.append()
    apic_15 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    apic_24 ModelViewParmSubset_4.append()
    apic_23 ModelViewParmSubset_4.append()
    apic_19 ModelViewParmSubset_4.append()
    apic_16 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    apic_21 ModelViewParmSubset_4.append()
    apic_20 ModelViewParmSubset_4.append()
    apic_18 ModelViewParmSubset_4.append()
    apic_17 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_5 = new SectionList()
    axon_0 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()

    // Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_14, apic_1, apic_22, apic_15, apic_11, apic_2, apic_24, apic_23, apic_19, apic_16, apic_13, apic_12, apic_6, apic_3, apic_21, apic_20, apic_18, apic_17, apic_10, apic_7, apic_5, apic_4, apic_9, apic_8]}
    ModelViewParmSubset_6 = new SectionList()
    soma_0 ModelViewParmSubset_6.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_0 ModelViewParmSubset_6.append()
    apic_14 ModelViewParmSubset_6.append()
    apic_1 ModelViewParmSubset_6.append()
    apic_22 ModelViewParmSubset_6.append()
    apic_15 ModelViewParmSubset_6.append()
    apic_11 ModelViewParmSubset_6.append()
    apic_2 ModelViewParmSubset_6.append()
    apic_24 ModelViewParmSubset_6.append()
    apic_23 ModelViewParmSubset_6.append()
    apic_19 ModelViewParmSubset_6.append()
    apic_16 ModelViewParmSubset_6.append()
    apic_13 ModelViewParmSubset_6.append()
    apic_12 ModelViewParmSubset_6.append()
    apic_6 ModelViewParmSubset_6.append()
    apic_3 ModelViewParmSubset_6.append()
    apic_21 ModelViewParmSubset_6.append()
    apic_20 ModelViewParmSubset_6.append()
    apic_18 ModelViewParmSubset_6.append()
    apic_17 ModelViewParmSubset_6.append()
    apic_10 ModelViewParmSubset_6.append()
    apic_7 ModelViewParmSubset_6.append()
    apic_5 ModelViewParmSubset_6.append()
    apic_4 ModelViewParmSubset_6.append()
    apic_9 ModelViewParmSubset_6.append()
    apic_8 ModelViewParmSubset_6.append()

    // Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_8, dend_7, dend_4, dend_3, dend_0, apic_14, apic_1, dend_12, dend_9, dend_6, dend_5, dend_2, dend_1, apic_22, apic_15, apic_11, apic_2, dend_14, dend_13, dend_11, dend_10, apic_24, apic_23, apic_19, apic_16, apic_13, apic_12, apic_6, apic_3, apic_21, apic_20, apic_18, apic_17, apic_10, apic_7, apic_5, apic_4, apic_9, apic_8]}
    ModelViewParmSubset_7 = new SectionList()
    apic_0 ModelViewParmSubset_7.append()
    dend_8 ModelViewParmSubset_7.append()
    dend_7 ModelViewParmSubset_7.append()
    dend_4 ModelViewParmSubset_7.append()
    dend_3 ModelViewParmSubset_7.append()
    dend_0 ModelViewParmSubset_7.append()
    apic_14 ModelViewParmSubset_7.append()
    apic_1 ModelViewParmSubset_7.append()
    dend_12 ModelViewParmSubset_7.append()
    dend_9 ModelViewParmSubset_7.append()
    dend_6 ModelViewParmSubset_7.append()
    dend_5 ModelViewParmSubset_7.append()
    dend_2 ModelViewParmSubset_7.append()
    dend_1 ModelViewParmSubset_7.append()
    apic_22 ModelViewParmSubset_7.append()
    apic_15 ModelViewParmSubset_7.append()
    apic_11 ModelViewParmSubset_7.append()
    apic_2 ModelViewParmSubset_7.append()
    dend_14 ModelViewParmSubset_7.append()
    dend_13 ModelViewParmSubset_7.append()
    dend_11 ModelViewParmSubset_7.append()
    dend_10 ModelViewParmSubset_7.append()
    apic_24 ModelViewParmSubset_7.append()
    apic_23 ModelViewParmSubset_7.append()
    apic_19 ModelViewParmSubset_7.append()
    apic_16 ModelViewParmSubset_7.append()
    apic_13 ModelViewParmSubset_7.append()
    apic_12 ModelViewParmSubset_7.append()
    apic_6 ModelViewParmSubset_7.append()
    apic_3 ModelViewParmSubset_7.append()
    apic_21 ModelViewParmSubset_7.append()
    apic_20 ModelViewParmSubset_7.append()
    apic_18 ModelViewParmSubset_7.append()
    apic_17 ModelViewParmSubset_7.append()
    apic_10 ModelViewParmSubset_7.append()
    apic_7 ModelViewParmSubset_7.append()
    apic_5 ModelViewParmSubset_7.append()
    apic_4 ModelViewParmSubset_7.append()
    apic_9 ModelViewParmSubset_7.append()
    apic_8 ModelViewParmSubset_7.append()

    // Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_8, dend_7, dend_4, dend_3, dend_0, dend_12, dend_9, dend_6, dend_5, dend_2, dend_1, dend_14, dend_13, dend_11, dend_10]}
    ModelViewParmSubset_8 = new SectionList()
    soma_0 ModelViewParmSubset_8.append()
    dend_8 ModelViewParmSubset_8.append()
    dend_7 ModelViewParmSubset_8.append()
    dend_4 ModelViewParmSubset_8.append()
    dend_3 ModelViewParmSubset_8.append()
    dend_0 ModelViewParmSubset_8.append()
    dend_12 ModelViewParmSubset_8.append()
    dend_9 ModelViewParmSubset_8.append()
    dend_6 ModelViewParmSubset_8.append()
    dend_5 ModelViewParmSubset_8.append()
    dend_2 ModelViewParmSubset_8.append()
    dend_1 ModelViewParmSubset_8.append()
    dend_14 ModelViewParmSubset_8.append()
    dend_13 ModelViewParmSubset_8.append()
    dend_11 ModelViewParmSubset_8.append()
    dend_10 ModelViewParmSubset_8.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_20 = new SectionList()
    apic_11 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_24]}
    OneSecGrp_SectionRef_26 = new SectionList()
    apic_24 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[apic_23]}
    OneSecGrp_SectionRef_27 = new SectionList()
    apic_23 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[apic_16]}
    OneSecGrp_SectionRef_29 = new SectionList()
    apic_16 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_30 = new SectionList()
    apic_13 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_31 = new SectionList()
    apic_12 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[apic_21]}
    OneSecGrp_SectionRef_34 = new SectionList()
    apic_21 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[apic_20]}
    OneSecGrp_SectionRef_35 = new SectionList()
    apic_20 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[apic_18]}
    OneSecGrp_SectionRef_36 = new SectionList()
    apic_18 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_17]}
    OneSecGrp_SectionRef_37 = new SectionList()
    apic_17 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_38 = new SectionList()
    apic_10 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_39 = new SectionList()
    apic_7 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_40 = new SectionList()
    apic_5 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_41 = new SectionList()
    apic_4 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_42 = new SectionList()
    apic_9 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_43 = new SectionList()
    apic_8 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_10 = new SectionList()
    apic_1 OneSecGrp_SectionRef_10.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_21 = new SectionList()
    apic_2 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_9 = new SectionList()
    apic_14 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_15]}
    OneSecGrp_SectionRef_19 = new SectionList()
    apic_15 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_32 = new SectionList()
    apic_6 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    apic_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[apic_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    apic_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[apic_19]}
    OneSecGrp_SectionRef_28 = new SectionList()
    apic_19 OneSecGrp_SectionRef_28.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18, apic_19, apic_20, apic_21, apic_22, apic_23, apic_24], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()
    apic_15 apical.append()
    apic_16 apical.append()
    apic_17 apical.append()
    apic_18 apical.append()
    apic_19 apical.append()
    apic_20 apical.append()
    apic_21 apical.append()
    apic_22 apical.append()
    apic_23 apical.append()
    apic_24 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_14, apic_14, apic_14, apic_14, apic_14, apic_1, apic_1, apic_1, apic_1, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_15, apic_15, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_2, apic_2, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_19, apic_19, apic_19, apic_19, apic_19, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_6, apic_6, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    apic_19 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 2.0  // units: uF/cm2
    forsec apical cm = 2.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec all {
        insert pas_nml2
        gmax_pas_nml2 = 3.0000001E-5  // units: S cm-2
        e_pas_nml2 = -75.0  // units: mV
    }
    forsec basal {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.022874  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.039967  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 9.999999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999904  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.071165994  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 5.5999997E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.097243994  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.42883396  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004779  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.283745  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.0029709998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.999812  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_HVA
        gmax_Ca_HVA = 8.6000003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001612  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_HVA
        gmax_Ca_HVA = 3.7899998E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0068679997  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_230_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cADpyr_230_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_230_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cADpyr_230_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_7 nseg = 15
    dend_3 nseg = 15
    dend_0 nseg = 3
    dend_12 nseg = 5
    dend_6 nseg = 9
    dend_5 nseg = 11
    dend_2 nseg = 3
    dend_1 nseg = 7
    apic_11 nseg = 5
    dend_14 nseg = 3
    dend_13 nseg = 7
    dend_11 nseg = 7
    dend_10 nseg = 5
    apic_24 nseg = 5
    apic_23 nseg = 5
    apic_16 nseg = 5
    apic_13 nseg = 5
    apic_12 nseg = 7
    apic_21 nseg = 11
    apic_20 nseg = 13
    apic_18 nseg = 5
    apic_17 nseg = 7
    apic_10 nseg = 13
    apic_7 nseg = 7
    apic_5 nseg = 11
    apic_4 nseg = 7
    apic_9 nseg = 7
    apic_8 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cADpyr230_L4_SS_a5ca6392b3_0_0


