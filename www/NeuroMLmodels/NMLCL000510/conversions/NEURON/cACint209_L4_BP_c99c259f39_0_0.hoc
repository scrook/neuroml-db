// Cell: cACint209_L4_BP_c99c259f39_0_0
/*
{
  "id" : "cACint209_L4_BP_c99c259f39_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.08452, 6.27464, 0.312461, 1.46623", "-2.79927, 5.64032, 0.287115, 2.64844", "-2.51401, 5.00599, 0.26177, 4.10361", "-2.22875, 4.37167, 0.236425, 4.91598", "-1.94349, 3.73735, 0.21108, 5.72835", "-1.65823, 3.10303, 0.185734, 6.53421", "-1.37297, 2.46871, 0.160389, 7.31212", "-1.08771, 1.83438, 0.135044, 8.08989", "-0.802456, 1.20006, 0.109699, 8.85679", "-0.517198, 0.56574, 0.0843534, 8.93483", "-0.23194, -0.0685822, 0.0590082, 8.92633", "0.0533189, -0.702904, 0.033663, 8.91784", "0.338577, -1.33723, 0.00831775, 8.90934", "0.623836, -1.97155, -0.0170275, 8.90084", "0.909094, -2.60587, -0.0423727, 8.82493", "1.19435, -3.24019, -0.067718, 7.82232", "1.47961, -3.87451, -0.0930632, 6.5965", "1.76487, -4.50884, -0.118408, 5.37067", "2.05013, -5.14316, -0.143754, 4.14485", "2.33539, -5.77748, -0.169099, 2.91903", "2.62064, -6.4118, -0.194444, 1.76337" ]
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.61629, -5.87753, -1.26548, 1.33", "2.56273, -9.99062, -2.02434, 1.33", "4.13191, -16.8101, -3.28251, 0.66", "5.34681, -22.09, -4.25663, 0.66", "6.6414, -27.7162, -5.29464, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001318721313
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.62064, -6.4118, -0.194444, 0.33", "8.77276, -20.0921, -0.194444, 0.33", "14.9249, -33.7725, -0.194444, 0.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "6.6414, -27.7162, -5.29464, 0.66", "7.29756, -40.4243, -2.16822, 0.66", "8.25436, -59.3003, 2.50012, 0.66", "9.41929, -82.3411, 8.37761, 0.66", "10.3942, -100.122, 12.9341, 0.66", "10.9729, -110.44, 15.5694, 0.66", "11.1524, -113.864, 16.4375, 0.66", "11.4125, -118.508, 17.6482, 0.66", "11.5829, -122.853, 18.8132, 0.66", "11.775, -127.867, 20.0665, 0.66", "11.8817, -130.577, 20.4095, 0.66", "11.9683, -133.962, 20.5341, 0.66", "12.1258, -139.07, 20.1421, 0.66", "12.2837, -145.787, 19.3107, 0.66", "12.4082, -148.713, 18.9224, 0.66", "13.0959, -162.448, 16.9724, 0.66", "13.3339, -165.69, 16.4581, 0.66", "14.2445, -175.701, 14.6205, 0.66", "14.6741, -179.926, 13.8086, 0.66", "15.5995, -187.687, 12.4138, 0.66", "16.1448, -192.133, 11.9031, 0.66", "16.6942, -196.456, 11.8372, 0.66", "17.2306, -200.627, 11.9203, 0.66", "17.5952, -204.65, 12.0136, 0.66", "17.9124, -208.912, 11.9493, 0.66", "18.1705, -215.501, 11.7603, 0.66", "18.3719, -219.505, 11.8294, 0.66", "18.5507, -224.361, 11.9832, 0.66", "18.7705, -230.936, 12.1605, 0.66", "18.8672, -235.134, 12.0822, 0.66", "19.0271, -240.783, 11.731, 0.66", "19.3428, -246.103, 11.3497, 0.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.6414, -27.7162, -5.29464, 0.66", "8.89781, -30.3123, -4.31193, 0.66", "14.0852, -36.2808, -2.05277, 0.33", "25.9592, -49.9428, 3.11853, 0.33", "26.4072, -50.4583, 3.31365, 0.66", "31.1989, -55.9715, 5.40052, 0.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "14.9249, -33.7725, -0.194444, 0.33", "21.077, -47.4528, -0.194444, 0.33", "27.2291, -61.1331, -0.194444, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "19.3428, -246.103, 11.3497, 0.66", "22.0519, -248.915, 11.9885, 0.66", "23.573, -250.511, 12.6013, 0.66", "26.0009, -252.962, 14.288, 0.66", "27.537, -254.421, 15.5252, 0.66", "30.4655, -257.096, 18.112, 0.66", "32.7149, -259.039, 20.0882, 0.66", "34.8887, -260.805, 22.189, 0.66", "39.5948, -264.204, 26.6606, 0.66", "42.2892, -265.971, 29.1772, 0.66", "45.4359, -268.014, 32.1733, 0.33", "46.7081, -268.816, 33.3104, 0.33", "47.162, -269.068, 33.6759, 0.66", "49.9209, -270.394, 35.652, 0.33", "50.5249, -270.645, 35.8944, 0.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "19.3428, -246.103, 11.3497, 0.66", "19.8424, -249.239, 12.3423, 0.66", "20.4824, -253.292, 13.6458, 0.66", "21.8774, -261.398, 16.1304, 0.66", "22.4493, -264.931, 17.1751, 0.66", "23.2147, -269.231, 18.4766, 0.66", "23.946, -273.601, 19.6756, 0.66", "24.3475, -276.059, 20.2719, 0.66", "24.7787, -279.465, 20.9648, 0.66", "25.5353, -286.018, 22.0572, 0.66", "25.9516, -289.745, 22.5091, 0.66", "26.3973, -294.119, 22.9721, 0.66", "26.6628, -297.826, 23.1412, 0.66", "26.7528, -299.836, 23.2149, 0.66", "26.9322, -306.596, 23.3714, 0.66", "27.0019, -310.096, 23.3484, 0.66", "27.0125, -314.948, 23.2819, 0.66", "27.1277, -318.832, 23.3738, 0.66", "27.1778, -320.556, 23.3957, 0.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "27.1778, -320.556, 23.3957, 0.66", "27.4824, -322.5, 23.5629, 0.66", "27.8369, -325.658, 24.1588, 0.66", "28.1704, -329.026, 24.901, 0.66", "28.333, -331.238, 25.4052, 0.66", "28.5361, -334.296, 26.0358, 0.66", "28.8061, -339.709, 26.9878, 0.66", "28.8918, -343.415, 27.577, 0.66", "28.9078, -345.958, 28.0098, 0.66", "28.945, -348.619, 28.3946, 0.66", "29.0114, -351.603, 28.7936, 0.66", "29.0791, -353.645, 29.0442, 0.66", "29.2419, -356.447, 29.3105, 0.66", "29.447, -359.023, 29.5384, 0.66", "29.9448, -365.078, 30.2122, 0.66", "30.187, -367.484, 30.5188, 0.66", "30.7323, -373.525, 31.2458, 0.66", "30.9255, -375.962, 31.4556, 0.66", "31.0735, -378.312, 31.5744, 0.66", "31.1847, -380.428, 31.5967, 0.66", "31.3185, -383.894, 31.592, 0.66", "31.39, -386.86, 31.5581, 0.66", "31.4859, -392.566, 31.2983, 0.66", "31.5982, -395.446, 31.1714, 0.66", "31.7002, -397.688, 31.0844, 0.66", "31.8681, -400.702, 30.9865, 0.66", "32.517, -412.046, 30.593, 0.66", "32.81, -416.213, 30.3767, 0.66", "33.6221, -427.152, 29.6605, 0.66", "33.9422, -431.286, 29.338, 0.66", "34.2774, -435.353, 29.05, 0.66", "34.5357, -438.181, 28.8675, 0.66", "34.9337, -442.05, 28.596, 0.66", "35.2941, -446.356, 28.3112, 0.66", "35.6416, -451.053, 27.8324, 0.66", "35.8187, -453.678, 27.5703, 0.66", "35.9464, -455.508, 27.4409, 0.66", "36.4315, -462.6, 27.3284, 0.66", "36.5807, -464.81, 27.2996, 0.66", "36.7797, -468.441, 27.0963, 0.66", "36.9851, -472.071, 26.8364, 0.66", "37.193, -474.882, 26.6596, 0.66", "37.774, -481.762, 26.4994, 0.66", "38.5447, -489.657, 26.5138, 0.66", "39.1048, -495.031, 26.4971, 0.66", "39.3783, -497.733, 26.4384, 0.66", "40.3966, -507.619, 26.036, 0.66", "40.9577, -513.966, 25.5417, 0.66", "41.1216, -515.82, 25.3599, 0.66", "41.3992, -518.827, 24.9963, 0.66", "41.8026, -523.234, 24.3318, 0.66", "41.9347, -525.139, 23.9762, 0.66", "42.2006, -530.244, 22.8135, 0.66", "42.8016, -540.889, 20.2192, 0.66", "43.1525, -546.38, 19.0532, 0.66", "43.3112, -548.43, 18.689, 0.33", "43.4394, -549.798, 18.4957, 1.33", "43.8474, -553.04, 18.2285, 0.66", "44.511, -556.947, 18.1426, 0.66", "45.0517, -559.718, 18.1677, 0.66", "45.6433, -562.523, 18.28, 0.66", "46.1837, -564.816, 18.3594, 0.66", "48.4514, -574.236, 18.9318, 0.66", "48.7637, -575.565, 19.0468, 0.33", "49.1727, -577.464, 19.2077, 1.33", "49.5685, -579.35, 19.3256, 0.66", "49.8596, -580.832, 19.4129, 0.33", "50.6173, -584.925, 19.6765, 0.66", "50.8493, -587.044, 20.0242, 0.66", "51.0928, -589.843, 20.6192, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "27.1778, -320.556, 23.3957, 0.66", "24.7485, -328.791, 22.3683, 0.66", "22.7857, -335.778, 21.4341, 0.66", "21.3738, -341.027, 21.1021, 0.33", "19.3756, -348.415, 20.9175, 0.33", "19.0322, -349.623, 20.9447, 0.66", "17.9609, -353.544, 21.1443, 0.33", "17.1968, -356.405, 21.4644, 0.66", "15.6423, -363.172, 22.1011, 0.33", "15.4076, -364.243, 22.237, 0.66", "13.8142, -371.489, 23.134, 0.33", "13.1163, -375.241, 23.7703, 0.33", "12.5017, -379.315, 24.6073, 0.66", "11.845, -384.191, 25.7655, 0.33", "11.5837, -386.821, 26.3692, 0.33", "11.5072, -388.294, 26.8054, 0.66", "11.4375, -394.485, 29.6334, 0.33", "11.4039, -395.389, 30.1647, 0.66", "11.3505, -397.668, 31.745, 0.33", "11.296, -398.841, 32.5748, 0.33", "11.2322, -400.083, 33.3192, 0.66", "10.9125, -404.737, 35.5772, 0.33", "10.6266, -407.585, 36.4533, 0.33", "10.5511, -408.66, 36.7187, 0.66", "10.5025, -410.741, 37.0759, 0.33", "10.4846, -411.843, 37.1903, 0.66", "10.4735, -413.243, 37.2537, 0.33", "10.4784, -414.69, 37.2166, 0.66", "10.4425, -416.815, 37.1904, 0.33", "10.4106, -417.59, 37.1924, 0.66", "10.0083, -424.021, 37.3252, 0.33", "9.97337, -424.432, 37.3332, 0.66", "9.79807, -425.914, 37.3583, 0.33", "9.68535, -426.687, 37.3694, 0.66", "9.39022, -428.793, 37.6149, 0.33", "9.26789, -429.758, 37.7964, 0.66", "9.09219, -431.483, 38.2156, 0.33", "8.98292, -432.703, 38.5332, 0.66", "8.88935, -434.1, 38.9428, 0.33", "8.50874, -440.6, 41.0802, 0.33", "8.41314, -442.497, 41.8047, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "51.0928, -589.843, 20.6192, 0.66", "51.6448, -593.798, 19.7362, 0.66", "52.0676, -595.841, 19.7355, 1.33", "52.4449, -597.595, 19.8864, 0.66", "52.8592, -599.804, 20.0296, 0.66", "53.7971, -604.559, 20.5592, 0.33", "55.0142, -610.309, 21.3288, 0.66", "56.691, -617.728, 22.776, 0.66", "57.616, -621.42, 23.6169, 0.66", "58.7087, -625.532, 24.4382, 0.33", "60.0939, -630.795, 25.275, 0.33", "60.4407, -632.284, 25.4126, 0.66", "60.7273, -633.52, 25.2913, 0.33", "60.9291, -634.591, 25.0257, 0.66", "62.0801, -640.839, 23.189, 0.33", "62.5902, -643.447, 22.4123, 0.66", "63.025, -645.921, 21.5957, 0.33", "64.1865, -652.95, 19.6092, 0.33", "64.9206, -657.067, 18.6062, 0.66", "66.3241, -664.519, 17.071, 0.33", "66.9982, -668.033, 16.5317, 0.66", "67.6893, -671.501, 16.0797, 1.33", "69.3328, -679.416, 15.359, 0.33", "70.1472, -683.334, 15.2565, 0.33", "70.4688, -684.875, 15.2554, 0.66", "71.2352, -688.76, 15.4098, 0.33", "72.2147, -693.973, 15.7195, 0.33", "72.5977, -695.876, 15.8885, 1.33", "73.6683, -701.342, 16.3778, 0.33", "73.964, -703.238, 16.5859, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "51.0928, -589.843, 20.6192, 0.66", "49.6285, -591.35, 19.7377, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "73.964, -703.238, 16.5859, 0.66", "72.1992, -702.857, 18.0524, 0.66" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "73.964, -703.238, 16.5859, 0.66", "74.2035, -705.182, 16.3212, 0.66", "75.2699, -713.836, 15.1423, 0.33", "75.6091, -716.589, 14.7673, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "75.6091, -716.589, 14.7673, 0.33", "80.1366, -725.36, 20.5891, 0.33", "80.5764, -726.213, 21.0907, 1.33", "81.8477, -728.597, 22.3576, 0.33", "82.1235, -729.092, 22.5574, 0.66", "83.5024, -731.447, 23.2746, 0.33", "83.9208, -732.162, 23.4922, 0.66", "84.2969, -732.811, 23.3802, 0.33", "84.8234, -733.62, 23.2038, 0.66", "86.7882, -736.135, 22.4265, 0.33", "87.5736, -737.043, 22.0812, 1.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "75.6091, -716.589, 14.7673, 0.33", "76.5321, -732.695, 19.7684, 0.33", "77.0354, -741.48, 22.4959, 0.33", "77.1145, -742.86, 22.9246, 0.66", "77.6341, -751.927, 25.7397, 0.33", "77.7033, -753.135, 26.115, 0.66" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_2", "dend_1", "dend_12", "dend_3", "dend_5", "dend_4", "dend_7", "dend_6", "dend_11", "dend_8", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_0", "dend_2", "dend_1", "dend_12", "dend_3", "dend_5", "dend_4", "dend_7", "dend_6", "dend_11", "dend_8", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_0", "axon_0", "dend_2", "dend_1", "axon_1", "dend_12", "dend_3", "dend_5", "dend_4", "dend_7", "dend_6", "dend_11", "dend_8", "dend_10", "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_11", "dend_8", "dend_8", "dend_8", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_BP_c99c259f39_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_12, id: dend_12, parent: dend_2
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_0, axon_0, dend_2, dend_1, axon_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_16
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_11, dend_8, dend_8, dend_8, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_0(0), soma_0(0.4500001318721313)
    connect axon_0(0), soma_0(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_12(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.08452, 6.27464, 0.312461, 1.46623 ) }
    soma_0 { pt3dadd( -2.79927, 5.64032, 0.287115, 2.64844 ) }
    soma_0 { pt3dadd( -2.51401, 5.00599, 0.26177, 4.10361 ) }
    soma_0 { pt3dadd( -2.22875, 4.37167, 0.236425, 4.91598 ) }
    soma_0 { pt3dadd( -1.94349, 3.73735, 0.21108, 5.72835 ) }
    soma_0 { pt3dadd( -1.65823, 3.10303, 0.185734, 6.53421 ) }
    soma_0 { pt3dadd( -1.37297, 2.46871, 0.160389, 7.31212 ) }
    soma_0 { pt3dadd( -1.08771, 1.83438, 0.135044, 8.08989 ) }
    soma_0 { pt3dadd( -0.802456, 1.20006, 0.109699, 8.85679 ) }
    soma_0 { pt3dadd( -0.517198, 0.56574, 0.0843534, 8.93483 ) }
    soma_0 { pt3dadd( -0.23194, -0.0685822, 0.0590082, 8.92633 ) }
    soma_0 { pt3dadd( 0.0533189, -0.702904, 0.033663, 8.91784 ) }
    soma_0 { pt3dadd( 0.338577, -1.33723, 0.00831775, 8.90934 ) }
    soma_0 { pt3dadd( 0.623836, -1.97155, -0.0170275, 8.90084 ) }
    soma_0 { pt3dadd( 0.909094, -2.60587, -0.0423727, 8.82493 ) }
    soma_0 { pt3dadd( 1.19435, -3.24019, -0.067718, 7.82232 ) }
    soma_0 { pt3dadd( 1.47961, -3.87451, -0.0930632, 6.5965 ) }
    soma_0 { pt3dadd( 1.76487, -4.50884, -0.118408, 5.37067 ) }
    soma_0 { pt3dadd( 2.05013, -5.14316, -0.143754, 4.14485 ) }
    soma_0 { pt3dadd( 2.33539, -5.77748, -0.169099, 2.91903 ) }
    soma_0 { pt3dadd( 2.62064, -6.4118, -0.194444, 1.76337 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 21/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.61629, -5.87753, -1.26548, 1.33 ) }
    dend_0 { pt3dadd( 2.56273, -9.99062, -2.02434, 1.33 ) }
    dend_0 { pt3dadd( 4.13191, -16.8101, -3.28251, 0.66 ) }
    dend_0 { pt3dadd( 5.34681, -22.09, -4.25663, 0.66 ) }
    dend_0 { pt3dadd( 6.6414, -27.7162, -5.29464, 1.33 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 26/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.62064, -6.4118, -0.194444, 0.33 ) }
    axon_0 { pt3dadd( 8.77276, -20.0921, -0.194444, 0.33 ) }
    axon_0 { pt3dadd( 14.9249, -33.7725, -0.194444, 0.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 29/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 6.6414, -27.7162, -5.29464, 0.66 ) }
    dend_2 { pt3dadd( 7.29756, -40.4243, -2.16822, 0.66 ) }
    dend_2 { pt3dadd( 8.25436, -59.3003, 2.50012, 0.66 ) }
    dend_2 { pt3dadd( 9.41929, -82.3411, 8.37761, 0.66 ) }
    dend_2 { pt3dadd( 10.3942, -100.122, 12.9341, 0.66 ) }
    dend_2 { pt3dadd( 10.9729, -110.44, 15.5694, 0.66 ) }
    dend_2 { pt3dadd( 11.1524, -113.864, 16.4375, 0.66 ) }
    dend_2 { pt3dadd( 11.4125, -118.508, 17.6482, 0.66 ) }
    dend_2 { pt3dadd( 11.5829, -122.853, 18.8132, 0.66 ) }
    dend_2 { pt3dadd( 11.775, -127.867, 20.0665, 0.66 ) }
    dend_2 { pt3dadd( 11.8817, -130.577, 20.4095, 0.66 ) }
    dend_2 { pt3dadd( 11.9683, -133.962, 20.5341, 0.66 ) }
    dend_2 { pt3dadd( 12.1258, -139.07, 20.1421, 0.66 ) }
    dend_2 { pt3dadd( 12.2837, -145.787, 19.3107, 0.66 ) }
    dend_2 { pt3dadd( 12.4082, -148.713, 18.9224, 0.66 ) }
    dend_2 { pt3dadd( 13.0959, -162.448, 16.9724, 0.66 ) }
    dend_2 { pt3dadd( 13.3339, -165.69, 16.4581, 0.66 ) }
    dend_2 { pt3dadd( 14.2445, -175.701, 14.6205, 0.66 ) }
    dend_2 { pt3dadd( 14.6741, -179.926, 13.8086, 0.66 ) }
    dend_2 { pt3dadd( 15.5995, -187.687, 12.4138, 0.66 ) }
    dend_2 { pt3dadd( 16.1448, -192.133, 11.9031, 0.66 ) }
    dend_2 { pt3dadd( 16.6942, -196.456, 11.8372, 0.66 ) }
    dend_2 { pt3dadd( 17.2306, -200.627, 11.9203, 0.66 ) }
    dend_2 { pt3dadd( 17.5952, -204.65, 12.0136, 0.66 ) }
    dend_2 { pt3dadd( 17.9124, -208.912, 11.9493, 0.66 ) }
    dend_2 { pt3dadd( 18.1705, -215.501, 11.7603, 0.66 ) }
    dend_2 { pt3dadd( 18.3719, -219.505, 11.8294, 0.66 ) }
    dend_2 { pt3dadd( 18.5507, -224.361, 11.9832, 0.66 ) }
    dend_2 { pt3dadd( 18.7705, -230.936, 12.1605, 0.66 ) }
    dend_2 { pt3dadd( 18.8672, -235.134, 12.0822, 0.66 ) }
    dend_2 { pt3dadd( 19.0271, -240.783, 11.731, 0.66 ) }
    dend_2 { pt3dadd( 19.3428, -246.103, 11.3497, 0.66 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 61/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.6414, -27.7162, -5.29464, 0.66 ) }
    dend_1 { pt3dadd( 8.89781, -30.3123, -4.31193, 0.66 ) }
    dend_1 { pt3dadd( 14.0852, -36.2808, -2.05277, 0.33 ) }
    dend_1 { pt3dadd( 25.9592, -49.9428, 3.11853, 0.33 ) }
    dend_1 { pt3dadd( 26.4072, -50.4583, 3.31365, 0.66 ) }
    dend_1 { pt3dadd( 31.1989, -55.9715, 5.40052, 0.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 67/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 14.9249, -33.7725, -0.194444, 0.33 ) }
    axon_1 { pt3dadd( 21.077, -47.4528, -0.194444, 0.33 ) }
    axon_1 { pt3dadd( 27.2291, -61.1331, -0.194444, 0.33 ) }
    // Section: dend_12, id: dend_12, parent: dend_2 (entry count 70/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 19.3428, -246.103, 11.3497, 0.66 ) }
    dend_12 { pt3dadd( 22.0519, -248.915, 11.9885, 0.66 ) }
    dend_12 { pt3dadd( 23.573, -250.511, 12.6013, 0.66 ) }
    dend_12 { pt3dadd( 26.0009, -252.962, 14.288, 0.66 ) }
    dend_12 { pt3dadd( 27.537, -254.421, 15.5252, 0.66 ) }
    dend_12 { pt3dadd( 30.4655, -257.096, 18.112, 0.66 ) }
    dend_12 { pt3dadd( 32.7149, -259.039, 20.0882, 0.66 ) }
    dend_12 { pt3dadd( 34.8887, -260.805, 22.189, 0.66 ) }
    dend_12 { pt3dadd( 39.5948, -264.204, 26.6606, 0.66 ) }
    dend_12 { pt3dadd( 42.2892, -265.971, 29.1772, 0.66 ) }
    dend_12 { pt3dadd( 45.4359, -268.014, 32.1733, 0.33 ) }
    dend_12 { pt3dadd( 46.7081, -268.816, 33.3104, 0.33 ) }
    dend_12 { pt3dadd( 47.162, -269.068, 33.6759, 0.66 ) }
    dend_12 { pt3dadd( 49.9209, -270.394, 35.652, 0.33 ) }
    dend_12 { pt3dadd( 50.5249, -270.645, 35.8944, 0.66 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 85/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 19.3428, -246.103, 11.3497, 0.66 ) }
    dend_3 { pt3dadd( 19.8424, -249.239, 12.3423, 0.66 ) }
    dend_3 { pt3dadd( 20.4824, -253.292, 13.6458, 0.66 ) }
    dend_3 { pt3dadd( 21.8774, -261.398, 16.1304, 0.66 ) }
    dend_3 { pt3dadd( 22.4493, -264.931, 17.1751, 0.66 ) }
    dend_3 { pt3dadd( 23.2147, -269.231, 18.4766, 0.66 ) }
    dend_3 { pt3dadd( 23.946, -273.601, 19.6756, 0.66 ) }
    dend_3 { pt3dadd( 24.3475, -276.059, 20.2719, 0.66 ) }
    dend_3 { pt3dadd( 24.7787, -279.465, 20.9648, 0.66 ) }
    dend_3 { pt3dadd( 25.5353, -286.018, 22.0572, 0.66 ) }
    dend_3 { pt3dadd( 25.9516, -289.745, 22.5091, 0.66 ) }
    dend_3 { pt3dadd( 26.3973, -294.119, 22.9721, 0.66 ) }
    dend_3 { pt3dadd( 26.6628, -297.826, 23.1412, 0.66 ) }
    dend_3 { pt3dadd( 26.7528, -299.836, 23.2149, 0.66 ) }
    dend_3 { pt3dadd( 26.9322, -306.596, 23.3714, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_3 { pt3dadd( 27.0019, -310.096, 23.3484, 0.66 ) }
    dend_3 { pt3dadd( 27.0125, -314.948, 23.2819, 0.66 ) }
    dend_3 { pt3dadd( 27.1277, -318.832, 23.3738, 0.66 ) }
    dend_3 { pt3dadd( 27.1778, -320.556, 23.3957, 0.66 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 4/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 27.1778, -320.556, 23.3957, 0.66 ) }
    dend_5 { pt3dadd( 27.4824, -322.5, 23.5629, 0.66 ) }
    dend_5 { pt3dadd( 27.8369, -325.658, 24.1588, 0.66 ) }
    dend_5 { pt3dadd( 28.1704, -329.026, 24.901, 0.66 ) }
    dend_5 { pt3dadd( 28.333, -331.238, 25.4052, 0.66 ) }
    dend_5 { pt3dadd( 28.5361, -334.296, 26.0358, 0.66 ) }
    dend_5 { pt3dadd( 28.8061, -339.709, 26.9878, 0.66 ) }
    dend_5 { pt3dadd( 28.8918, -343.415, 27.577, 0.66 ) }
    dend_5 { pt3dadd( 28.9078, -345.958, 28.0098, 0.66 ) }
    dend_5 { pt3dadd( 28.945, -348.619, 28.3946, 0.66 ) }
    dend_5 { pt3dadd( 29.0114, -351.603, 28.7936, 0.66 ) }
    dend_5 { pt3dadd( 29.0791, -353.645, 29.0442, 0.66 ) }
    dend_5 { pt3dadd( 29.2419, -356.447, 29.3105, 0.66 ) }
    dend_5 { pt3dadd( 29.447, -359.023, 29.5384, 0.66 ) }
    dend_5 { pt3dadd( 29.9448, -365.078, 30.2122, 0.66 ) }
    dend_5 { pt3dadd( 30.187, -367.484, 30.5188, 0.66 ) }
    dend_5 { pt3dadd( 30.7323, -373.525, 31.2458, 0.66 ) }
    dend_5 { pt3dadd( 30.9255, -375.962, 31.4556, 0.66 ) }
    dend_5 { pt3dadd( 31.0735, -378.312, 31.5744, 0.66 ) }
    dend_5 { pt3dadd( 31.1847, -380.428, 31.5967, 0.66 ) }
    dend_5 { pt3dadd( 31.3185, -383.894, 31.592, 0.66 ) }
    dend_5 { pt3dadd( 31.39, -386.86, 31.5581, 0.66 ) }
    dend_5 { pt3dadd( 31.4859, -392.566, 31.2983, 0.66 ) }
    dend_5 { pt3dadd( 31.5982, -395.446, 31.1714, 0.66 ) }
    dend_5 { pt3dadd( 31.7002, -397.688, 31.0844, 0.66 ) }
    dend_5 { pt3dadd( 31.8681, -400.702, 30.9865, 0.66 ) }
    dend_5 { pt3dadd( 32.517, -412.046, 30.593, 0.66 ) }
    dend_5 { pt3dadd( 32.81, -416.213, 30.3767, 0.66 ) }
    dend_5 { pt3dadd( 33.6221, -427.152, 29.6605, 0.66 ) }
    dend_5 { pt3dadd( 33.9422, -431.286, 29.338, 0.66 ) }
    dend_5 { pt3dadd( 34.2774, -435.353, 29.05, 0.66 ) }
    dend_5 { pt3dadd( 34.5357, -438.181, 28.8675, 0.66 ) }
    dend_5 { pt3dadd( 34.9337, -442.05, 28.596, 0.66 ) }
    dend_5 { pt3dadd( 35.2941, -446.356, 28.3112, 0.66 ) }
    dend_5 { pt3dadd( 35.6416, -451.053, 27.8324, 0.66 ) }
    dend_5 { pt3dadd( 35.8187, -453.678, 27.5703, 0.66 ) }
    dend_5 { pt3dadd( 35.9464, -455.508, 27.4409, 0.66 ) }
    dend_5 { pt3dadd( 36.4315, -462.6, 27.3284, 0.66 ) }
    dend_5 { pt3dadd( 36.5807, -464.81, 27.2996, 0.66 ) }
    dend_5 { pt3dadd( 36.7797, -468.441, 27.0963, 0.66 ) }
    dend_5 { pt3dadd( 36.9851, -472.071, 26.8364, 0.66 ) }
    dend_5 { pt3dadd( 37.193, -474.882, 26.6596, 0.66 ) }
    dend_5 { pt3dadd( 37.774, -481.762, 26.4994, 0.66 ) }
    dend_5 { pt3dadd( 38.5447, -489.657, 26.5138, 0.66 ) }
    dend_5 { pt3dadd( 39.1048, -495.031, 26.4971, 0.66 ) }
    dend_5 { pt3dadd( 39.3783, -497.733, 26.4384, 0.66 ) }
    dend_5 { pt3dadd( 40.3966, -507.619, 26.036, 0.66 ) }
    dend_5 { pt3dadd( 40.9577, -513.966, 25.5417, 0.66 ) }
    dend_5 { pt3dadd( 41.1216, -515.82, 25.3599, 0.66 ) }
    dend_5 { pt3dadd( 41.3992, -518.827, 24.9963, 0.66 ) }
    dend_5 { pt3dadd( 41.8026, -523.234, 24.3318, 0.66 ) }
    dend_5 { pt3dadd( 41.9347, -525.139, 23.9762, 0.66 ) }
    dend_5 { pt3dadd( 42.2006, -530.244, 22.8135, 0.66 ) }
    dend_5 { pt3dadd( 42.8016, -540.889, 20.2192, 0.66 ) }
    dend_5 { pt3dadd( 43.1525, -546.38, 19.0532, 0.66 ) }
    dend_5 { pt3dadd( 43.3112, -548.43, 18.689, 0.33 ) }
    dend_5 { pt3dadd( 43.4394, -549.798, 18.4957, 1.33 ) }
    dend_5 { pt3dadd( 43.8474, -553.04, 18.2285, 0.66 ) }
    dend_5 { pt3dadd( 44.511, -556.947, 18.1426, 0.66 ) }
    dend_5 { pt3dadd( 45.0517, -559.718, 18.1677, 0.66 ) }
    dend_5 { pt3dadd( 45.6433, -562.523, 18.28, 0.66 ) }
    dend_5 { pt3dadd( 46.1837, -564.816, 18.3594, 0.66 ) }
    dend_5 { pt3dadd( 48.4514, -574.236, 18.9318, 0.66 ) }
    dend_5 { pt3dadd( 48.7637, -575.565, 19.0468, 0.33 ) }
    dend_5 { pt3dadd( 49.1727, -577.464, 19.2077, 1.33 ) }
    dend_5 { pt3dadd( 49.5685, -579.35, 19.3256, 0.66 ) }
    dend_5 { pt3dadd( 49.8596, -580.832, 19.4129, 0.33 ) }
    dend_5 { pt3dadd( 50.6173, -584.925, 19.6765, 0.66 ) }
    dend_5 { pt3dadd( 50.8493, -587.044, 20.0242, 0.66 ) }
    dend_5 { pt3dadd( 51.0928, -589.843, 20.6192, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 74/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 27.1778, -320.556, 23.3957, 0.66 ) }
    dend_4 { pt3dadd( 24.7485, -328.791, 22.3683, 0.66 ) }
    dend_4 { pt3dadd( 22.7857, -335.778, 21.4341, 0.66 ) }
    dend_4 { pt3dadd( 21.3738, -341.027, 21.1021, 0.33 ) }
    dend_4 { pt3dadd( 19.3756, -348.415, 20.9175, 0.33 ) }
    dend_4 { pt3dadd( 19.0322, -349.623, 20.9447, 0.66 ) }
    dend_4 { pt3dadd( 17.9609, -353.544, 21.1443, 0.33 ) }
    dend_4 { pt3dadd( 17.1968, -356.405, 21.4644, 0.66 ) }
    dend_4 { pt3dadd( 15.6423, -363.172, 22.1011, 0.33 ) }
    dend_4 { pt3dadd( 15.4076, -364.243, 22.237, 0.66 ) }
    dend_4 { pt3dadd( 13.8142, -371.489, 23.134, 0.33 ) }
    dend_4 { pt3dadd( 13.1163, -375.241, 23.7703, 0.33 ) }
    dend_4 { pt3dadd( 12.5017, -379.315, 24.6073, 0.66 ) }
    dend_4 { pt3dadd( 11.845, -384.191, 25.7655, 0.33 ) }
    dend_4 { pt3dadd( 11.5837, -386.821, 26.3692, 0.33 ) }
    dend_4 { pt3dadd( 11.5072, -388.294, 26.8054, 0.66 ) }
    dend_4 { pt3dadd( 11.4375, -394.485, 29.6334, 0.33 ) }
    dend_4 { pt3dadd( 11.4039, -395.389, 30.1647, 0.66 ) }
    dend_4 { pt3dadd( 11.3505, -397.668, 31.745, 0.33 ) }
    dend_4 { pt3dadd( 11.296, -398.841, 32.5748, 0.33 ) }
    dend_4 { pt3dadd( 11.2322, -400.083, 33.3192, 0.66 ) }
    dend_4 { pt3dadd( 10.9125, -404.737, 35.5772, 0.33 ) }
    dend_4 { pt3dadd( 10.6266, -407.585, 36.4533, 0.33 ) }
    dend_4 { pt3dadd( 10.5511, -408.66, 36.7187, 0.66 ) }
    dend_4 { pt3dadd( 10.5025, -410.741, 37.0759, 0.33 ) }
    dend_4 { pt3dadd( 10.4846, -411.843, 37.1903, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_4 { pt3dadd( 10.4735, -413.243, 37.2537, 0.33 ) }
    dend_4 { pt3dadd( 10.4784, -414.69, 37.2166, 0.66 ) }
    dend_4 { pt3dadd( 10.4425, -416.815, 37.1904, 0.33 ) }
    dend_4 { pt3dadd( 10.4106, -417.59, 37.1924, 0.66 ) }
    dend_4 { pt3dadd( 10.0083, -424.021, 37.3252, 0.33 ) }
    dend_4 { pt3dadd( 9.97337, -424.432, 37.3332, 0.66 ) }
    dend_4 { pt3dadd( 9.79807, -425.914, 37.3583, 0.33 ) }
    dend_4 { pt3dadd( 9.68535, -426.687, 37.3694, 0.66 ) }
    dend_4 { pt3dadd( 9.39022, -428.793, 37.6149, 0.33 ) }
    dend_4 { pt3dadd( 9.26789, -429.758, 37.7964, 0.66 ) }
    dend_4 { pt3dadd( 9.09219, -431.483, 38.2156, 0.33 ) }
    dend_4 { pt3dadd( 8.98292, -432.703, 38.5332, 0.66 ) }
    dend_4 { pt3dadd( 8.88935, -434.1, 38.9428, 0.33 ) }
    dend_4 { pt3dadd( 8.50874, -440.6, 41.0802, 0.33 ) }
    dend_4 { pt3dadd( 8.41314, -442.497, 41.8047, 0.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 15/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 51.0928, -589.843, 20.6192, 0.66 ) }
    dend_7 { pt3dadd( 51.6448, -593.798, 19.7362, 0.66 ) }
    dend_7 { pt3dadd( 52.0676, -595.841, 19.7355, 1.33 ) }
    dend_7 { pt3dadd( 52.4449, -597.595, 19.8864, 0.66 ) }
    dend_7 { pt3dadd( 52.8592, -599.804, 20.0296, 0.66 ) }
    dend_7 { pt3dadd( 53.7971, -604.559, 20.5592, 0.33 ) }
    dend_7 { pt3dadd( 55.0142, -610.309, 21.3288, 0.66 ) }
    dend_7 { pt3dadd( 56.691, -617.728, 22.776, 0.66 ) }
    dend_7 { pt3dadd( 57.616, -621.42, 23.6169, 0.66 ) }
    dend_7 { pt3dadd( 58.7087, -625.532, 24.4382, 0.33 ) }
    dend_7 { pt3dadd( 60.0939, -630.795, 25.275, 0.33 ) }
    dend_7 { pt3dadd( 60.4407, -632.284, 25.4126, 0.66 ) }
    dend_7 { pt3dadd( 60.7273, -633.52, 25.2913, 0.33 ) }
    dend_7 { pt3dadd( 60.9291, -634.591, 25.0257, 0.66 ) }
    dend_7 { pt3dadd( 62.0801, -640.839, 23.189, 0.33 ) }
    dend_7 { pt3dadd( 62.5902, -643.447, 22.4123, 0.66 ) }
    dend_7 { pt3dadd( 63.025, -645.921, 21.5957, 0.33 ) }
    dend_7 { pt3dadd( 64.1865, -652.95, 19.6092, 0.33 ) }
    dend_7 { pt3dadd( 64.9206, -657.067, 18.6062, 0.66 ) }
    dend_7 { pt3dadd( 66.3241, -664.519, 17.071, 0.33 ) }
    dend_7 { pt3dadd( 66.9982, -668.033, 16.5317, 0.66 ) }
    dend_7 { pt3dadd( 67.6893, -671.501, 16.0797, 1.33 ) }
    dend_7 { pt3dadd( 69.3328, -679.416, 15.359, 0.33 ) }
    dend_7 { pt3dadd( 70.1472, -683.334, 15.2565, 0.33 ) }
    dend_7 { pt3dadd( 70.4688, -684.875, 15.2554, 0.66 ) }
    dend_7 { pt3dadd( 71.2352, -688.76, 15.4098, 0.33 ) }
    dend_7 { pt3dadd( 72.2147, -693.973, 15.7195, 0.33 ) }
    dend_7 { pt3dadd( 72.5977, -695.876, 15.8885, 1.33 ) }
    dend_7 { pt3dadd( 73.6683, -701.342, 16.3778, 0.33 ) }
    dend_7 { pt3dadd( 73.964, -703.238, 16.5859, 0.66 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 45/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 51.0928, -589.843, 20.6192, 0.66 ) }
    dend_6 { pt3dadd( 49.6285, -591.35, 19.7377, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 47/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 73.964, -703.238, 16.5859, 0.66 ) }
    dend_11 { pt3dadd( 72.1992, -702.857, 18.0524, 0.66 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 49/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 73.964, -703.238, 16.5859, 0.66 ) }
    dend_8 { pt3dadd( 74.2035, -705.182, 16.3212, 0.66 ) }
    dend_8 { pt3dadd( 75.2699, -713.836, 15.1423, 0.33 ) }
    dend_8 { pt3dadd( 75.6091, -716.589, 14.7673, 1.33 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 53/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 75.6091, -716.589, 14.7673, 0.33 ) }
    dend_10 { pt3dadd( 80.1366, -725.36, 20.5891, 0.33 ) }
    dend_10 { pt3dadd( 80.5764, -726.213, 21.0907, 1.33 ) }
    dend_10 { pt3dadd( 81.8477, -728.597, 22.3576, 0.33 ) }
    dend_10 { pt3dadd( 82.1235, -729.092, 22.5574, 0.66 ) }
    dend_10 { pt3dadd( 83.5024, -731.447, 23.2746, 0.33 ) }
    dend_10 { pt3dadd( 83.9208, -732.162, 23.4922, 0.66 ) }
    dend_10 { pt3dadd( 84.2969, -732.811, 23.3802, 0.33 ) }
    dend_10 { pt3dadd( 84.8234, -733.62, 23.2038, 0.66 ) }
    dend_10 { pt3dadd( 86.7882, -736.135, 22.4265, 0.33 ) }
    dend_10 { pt3dadd( 87.5736, -737.043, 22.0812, 1.33 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 64/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 75.6091, -716.589, 14.7673, 0.33 ) }
    dend_9 { pt3dadd( 76.5321, -732.695, 19.7684, 0.33 ) }
    dend_9 { pt3dadd( 77.0354, -741.48, 22.4959, 0.33 ) }
    dend_9 { pt3dadd( 77.1145, -742.86, 22.9246, 0.66 ) }
    dend_9 { pt3dadd( 77.6341, -751.927, 25.7397, 0.33 ) }
    dend_9 { pt3dadd( 77.7033, -753.135, 26.115, 0.66 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
    ModelViewParmSubset_2 = new SectionList()
    dend_0 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_0, axon_0, dend_2, dend_1, axon_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
    ModelViewParmSubset_5 = new SectionList()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_2 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_12 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_3 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_5 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_7 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_1 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_6 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_11 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_8 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_9 OneSecGrp_SectionRef_16.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_11, dend_8, dend_8, dend_8, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_2 nseg = 11
    dend_12 nseg = 3
    dend_3 nseg = 3
    dend_5 nseg = 13
    dend_4 nseg = 7
    dend_7 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_BP_c99c259f39_0_0


