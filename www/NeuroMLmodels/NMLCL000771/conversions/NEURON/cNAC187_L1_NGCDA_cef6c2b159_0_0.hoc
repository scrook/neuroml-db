// Cell: cNAC187_L1_NGCDA_cef6c2b159_0_0
/*
{
  "id" : "cNAC187_L1_NGCDA_cef6c2b159_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.205194, -7.89507, 0.00372411, 3.42211", "-0.281494, -7.06579, 0.00341118, 5.97591", "-0.357793, -6.23651, 0.00309826, 8.37531", "-0.434093, -5.40723, 0.00278533, 10.3432", "-0.510393, -4.57795, 0.00247241, 11.4369", "-0.586693, -3.74867, 0.00215949, 12.475", "-0.662992, -2.91939, 0.00184656, 13.2762", "-0.739292, -2.09011, 0.00153364, 13.7985", "-0.815592, -1.26083, 0.00122072, 14.2879", "-0.891892, -0.431544, 9.07792E-4, 14.5959", "-0.968191, 0.397736, 5.94868E-4, 14.8765", "-1.04449, 1.22702, 2.81944E-4, 14.5629", "-1.12079, 2.0563, -3.09798E-5, 14.1775", "-1.19709, 2.88558, -3.43904E-4, 13.7921", "-1.27339, 3.71486, -6.56827E-4, 13.3649", "-1.34969, 4.54414, -9.69751E-4, 12.6101", "-1.42599, 5.37342, -0.00128267, 11.631", "-1.50229, 6.2027, -0.0015956, 10.4071", "-1.57859, 7.03198, -0.00190852, 8.83417", "-1.65489, 7.86126, -0.00222145, 6.03993", "-1.73119, 8.69054, -0.00253437, 3.30147" ]
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.549955, -2.56163, -6.95669, 0.92", "-0.00285039, -3.6499, -7.16662, 0.92", "0.482954, -5.13287, -7.44874, 0.92", "0.749115, -6.13599, -7.62964, 0.92", "1.06418, -7.43615, -7.96214, 0.69", "1.33421, -8.53272, -8.36296, 0.69", "1.5818, -9.56394, -8.79025, 0.69", "1.76017, -10.5817, -9.28115, 0.92", "1.84451, -11.2073, -9.63562, 0.92", "2.05084, -12.9788, -10.7978, 0.69", "2.19581, -14.2635, -11.7453, 0.69", "2.25103, -14.7063, -12.0889, 1.15", "2.30101, -15.4456, -12.7128, 1.61", "2.23317, -17.3265, -14.5118, 0.92", "2.04877, -18.7906, -15.9851, 1.15", "1.72072, -20.3433, -17.611, 0.92", "1.49666, -21.1656, -18.4812, 1.15", "1.02943, -22.7509, -20.1885, 1.15", "0.493032, -24.2762, -21.81, 0.69", "0.152485, -25.1297, -22.665, 0.69", "-0.175638, -25.8862, -23.4189, 0.92", "-0.548015, -26.7155, -24.2, 0.92", "-0.873619, -27.5135, -24.8598, 0.92", "-1.1995, -28.7304, -25.5712, 0.46", "-1.39055, -29.795, -25.938, 0.69" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000008858052515
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-6.09994, 1.43586, -15.2267, 1.15", "-6.14964, 2.74307, -15.7646, 1.15", "-6.2231, 4.40743, -16.3306, 1.15", "-6.23615, 5.23093, -16.5107, 1.15", "-6.22345, 6.32903, -16.6462, 1.15", "-6.19969, 8.38324, -16.8995, 0.92", "-6.19318, 8.94674, -16.969, 1.15", "-6.1983, 10.0624, -16.9881, 1.15", "-6.23579, 11.6591, -16.8366, 1.15", "-6.22563, 13.315, -16.5873, 1.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000008858052515
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.78994, -7.86563, 1.77331, 2.29", "-3.86283, -9.43451, 2.3382, 2.06", "-5.22513, -11.4266, 3.05546, 2.29", "-6.4714, -13.249, 3.71164, 2.52", "-7.4507, -14.681, 4.22725, 2.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000008858052515
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "6.41007, -0.221639, 2.29331, 1.15", "8.1751, -0.913399, 3.28998, 1.15", "10.0325, -1.64139, 4.33884, 1.15", "11.4536, -2.19833, 5.14126, 1.15", "12.9564, -2.78731, 5.98984, 1.38", "13.7593, -3.10199, 6.44322, 1.61", "14.6643, -3.45669, 6.95426, 1.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000008858052515
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-4.6199, 7.75386, 3.15331, 1.38", "-5.33473, 9.41835, 4.05588, 1.38", "-5.81057, 10.4965, 4.50979, 1.38", "-6.32564, 11.9393, 4.95477, 1.15", "-6.69104, 13.3487, 5.2713, 1.38", "-6.91443, 14.4619, 5.45135, 1.38", "-7.0489, 15.3883, 5.54048, 1.15", "-7.11086, 16.8405, 5.52821, 1.15", "-7.06941, 18.5064, 5.36525, 0.92", "-6.95996, 19.6805, 5.13968, 0.92", "-6.78427, 20.8411, 4.83844, 1.15", "-6.52752, 22.0453, 4.52745, 1.15", "-6.22525, 23.1259, 4.28308, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000008858052515
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.22007, 4.35112, -7.50669, 0.92", "3.46735, 5.21412, -8.44622, 0.92", "4.67988, 6.05309, -9.35958, 0.92", "5.53273, 6.64319, -10.002, 0.92", "6.47216, 7.2932, -10.7096, 1.15", "7.68205, 8.13034, -11.621, 1.15", "8.92158, 8.98798, -12.5547, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000008858052515
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.73119, 8.69054, -0.00253437, 0.654348", "-3.10549, 23.6275, -0.00253437, 0.654348", "-4.4798, 38.5644, -0.00253437, 0.654348" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-6.22563, 13.315, -16.5873, 1.38", "-7.24786, 13.5802, -19.3114, 1.38", "-8.34861, 13.8486, -21.5253, 1.38", "-10.0553, 14.1321, -24.3673, 1.38", "-11.9443, 14.2605, -27.2545, 1.38", "-12.7924, 14.2522, -28.4274, 1.15", "-14.1748, 14.1563, -30.1827, 1.15", "-15.9722, 13.8613, -31.9477, 1.15", "-17.5912, 13.5113, -33.2762, 1.61", "-19.3475, 13.054, -34.4235, 1.61", "-20.724, 12.6231, -35.1726, 1.15", "-22.205, 11.9998, -36.0415, 1.15", "-23.3362, 11.3164, -36.7717, 1.61" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-6.22563, 13.315, -16.5873, 1.15", "-6.43532, 14.9102, -18.7709, 1.15", "-6.66903, 16.6815, -21.0236, 1.15", "-6.87726, 17.8752, -22.3938, 1.15", "-7.06125, 19.1107, -23.674, 1.15", "-7.26214, 20.4596, -25.0719, 0.92", "-7.42208, 21.5335, -26.1848, 0.92", "-7.56592, 22.1663, -26.7653, 0.92", "-7.94859, 23.6218, -27.9005, 0.69", "-8.32367, 25.2876, -28.9848, 0.69" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-7.4507, -14.681, 4.22725, 1.38", "-7.20117, -15.4011, 5.41835, 1.38", "-6.85169, -16.4095, 7.0866, 1.38", "-6.48342, -17.4722, 8.84451, 1.38" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-7.4507, -14.681, 4.22725, 1.38", "-9.37582, -15.8938, 4.74764, 1.38", "-11.1415, -16.8644, 4.90525, 1.38", "-12.9943, -17.6987, 4.79239, 1.38", "-14.6173, -18.2684, 4.48071, 1.15", "-16.4999, -18.66, 3.88008, 1.38", "-18.2278, -19.0194, 3.32883, 1.15", "-20.2622, -19.1283, 2.30045, 1.15", "-21.6403, -18.9991, 1.29452, 0.92", "-22.8331, -18.7006, 0.161617, 0.92", "-24.1414, -18.1061, -1.38538, 1.15" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "14.6643, -3.45669, 6.95426, 1.38", "14.8237, -5.25797, 6.7944, 1.38", "14.9217, -6.36549, 6.69612, 1.38", "15.0749, -8.09527, 6.54261, 1.38", "15.251, -10.0851, 6.36602, 0.92", "15.3663, -11.3879, 6.2504, 1.15", "15.5354, -13.2989, 6.08081, 1.38" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "14.6643, -3.45669, 6.95426, 0.92", "14.9597, -2.72815, 8.65182, 0.92", "15.2798, -1.93873, 10.4912, 0.92", "15.5739, -1.21348, 12.1811, 0.92", "15.9402, -0.310216, 14.2858, 0.92", "16.1882, 0.301516, 15.7112, 0.92", "16.3569, 0.717354, 16.6801, 1.83" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-6.22525, 23.1259, 4.28308, 0.92", "-4.54363, 23.6829, 3.4604, 0.92", "-2.90197, 24.2266, 2.65728, 0.92", "-1.19087, 24.7933, 1.82018, 0.92", "0.274056, 25.2785, 1.10351, 0.92", "1.8824, 25.8112, 0.316686, 0.92", "3.01338, 26.1858, -0.23661, 0.46" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-6.22525, 23.1259, 4.28308, 1.61", "-5.92196, 24.5344, 3.01707, 1.61", "-5.65891, 25.7561, 1.91901, 1.15", "-5.37586, 27.0706, 0.73747, 0.92", "-5.12719, 28.2255, -0.300573, 0.92", "-4.8414, 29.5527, -1.49354, 0.69", "-4.64087, 30.484, -2.3306, 0.69" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "8.92158, 8.98798, -12.5547, 1.15", "10.4449, 7.85725, -12.3663, 1.15", "12.1588, 6.58512, -12.1544, 1.15", "13.823, 5.34986, -11.9487, 0.92", "15.1214, 4.38616, -11.7881, 1.15" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "8.92158, 8.98798, -12.5547, 0.69", "9.42086, 9.4489, -11.7273, 0.69", "10.3515, 10.2639, -10.0104, 0.69", "10.7882, 10.6929, -9.11782, 0.69", "11.1708, 11.1675, -8.11858, 0.92", "11.6444, 11.7551, -6.88143, 0.69", "12.301, 12.5698, -5.16629, 0.69", "12.8241, 13.0933, -3.86962, 0.69", "13.2773, 13.468, -2.80603, 0.92", "13.8097, 14.068, -1.16545, 0.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-4.4798, 38.5644, -0.00253437, 0.23", "-5.8541, 53.5013, -0.00253437, 0.23", "-7.2284, 68.4382, -0.00253437, 0.23" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-23.3362, 11.3164, -36.7717, 1.38", "-24.7015, 10.2771, -34.6787, 1.38", "-26.9575, 9.0271, -32.5385, 1.38", "-28.9716, 8.24638, -31.3272, 1.38", "-29.7958, 8.03893, -31.0951, 0.92", "-31.2196, 7.85293, -31.0472, 1.61", "-33.4335, 7.83808, -31.5032, 0.92", "-35.4812, 8.14319, -32.4767, 0.92", "-37.0057, 8.55116, -33.4433, 1.61", "-39.5968, 9.51349, -35.3051, 0.69", "-41.5575, 10.4865, -36.7683, 0.92", "-43.0713, 11.4138, -37.9002, 0.92", "-43.981, 12.0241, -38.5422, 0.92", "-44.981, 12.7442, -39.2684, 1.38", "-46.7199, 14.0244, -40.4497, 0.69", "-48.7783, 15.4837, -41.5114, 0.69", "-50.7318, 16.7295, -42.2756, 0.69", "-52.2318, 17.6544, -42.7829, 0.69" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-23.3362, 11.3164, -36.7717, 0.69", "-24.9157, 11.2355, -38.5337, 0.69", "-27.023, 11.2607, -40.69, 1.15", "-28.5167, 11.442, -42.2325, 1.15", "-29.7918, 11.721, -43.5242, 1.15", "-31.617, 12.2654, -45.2504, 1.15", "-32.4474, 12.5792, -45.9438, 0.92", "-33.5986, 13.307, -46.8571, 0.92", "-35.1025, 14.5027, -47.7279, 1.15", "-35.7375, 15.0526, -47.997, 0.92", "-37.1023, 16.328, -48.4375, 1.15", "-38.4366, 17.6621, -48.8011, 0.92", "-40.2752, 19.686, -49.4968, 0.92", "-41.515, 21.1719, -50.0242, 0.92", "-42.1894, 22.112, -50.4356, 0.92", "-43.1039, 23.7275, -51.2905, 1.15", "-43.5763, 24.7049, -51.8326, 1.15", "-44.8817, 27.8341, -53.7316, 0.92", "-45.284, 29.0607, -54.4763, 0.92", "-46.0802, 32.4297, -56.801, 0.92", "-46.2667, 33.5057, -57.6532, 0.92" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-6.48342, -17.4722, 8.84451, 0.92", "-7.58655, -16.6005, 9.06794, 0.92", "-9.08079, -15.4198, 9.3706, 0.92", "-10.1638, -14.5641, 9.58996, 0.92", "-11.4059, -13.5826, 9.84153, 0.92", "-12.4329, -12.7712, 10.0496, 0.92", "-13.6545, -11.8059, 10.297, 1.15" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-6.48342, -17.4722, 8.84451, 0.92", "-5.17974, -17.0722, 9.67858, 0.92", "-3.56236, -16.6624, 10.4792, 0.92", "-2.88861, -16.5658, 10.7778, 0.92", "-1.82678, -16.5128, 11.2832, 0.92", "0.0476936, -16.5342, 12.3901, 0.92", "1.55137, -16.669, 13.4283, 0.92", "3.06492, -16.9207, 14.7464, 0.92", "3.92338, -17.3249, 15.7168, 0.92", "5.11878, -18.1542, 17.2137, 0.92", "6.09027, -19.1689, 18.5594, 0.92", "6.59652, -20.0794, 19.4248, 0.92", "6.72394, -20.712, 19.9848, 0.92", "6.67871, -21.5893, 20.8416, 0.92" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-24.1414, -18.1061, -1.38538, 0.92", "-24.6266, -16.9432, -2.05786, 0.92", "-25.2967, -15.4953, -2.76064, 0.92", "-26.0118, -13.941, -3.41562, 0.92", "-26.3442, -13.2318, -3.69377, 0.92", "-27.0811, -11.6592, -4.31056, 0.92", "-27.5111, -10.7415, -4.67046, 0.92", "-28.1864, -9.38141, -5.18556, 0.92", "-28.6637, -8.36612, -5.46254, 1.15", "-29.181, -7.32636, -5.63139, 1.15" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-24.1414, -18.1061, -1.38538, 0.69", "-25.4187, -18.7672, -2.72546, 0.69", "-26.5044, -19.4386, -3.98403, 0.69", "-27.019, -19.782, -4.64673, 0.92", "-28.126, -20.4837, -6.06553, 0.92", "-29.1362, -21.0629, -7.38624, 0.92", "-30.1015, -21.6012, -8.71836, 0.92", "-30.9343, -22.1267, -10.0306, 0.92", "-31.6071, -22.6129, -11.3303, 0.92", "-32.2328, -23.1794, -12.9917, 0.92", "-32.4368, -23.5523, -14.2416, 0.92", "-32.3844, -23.7699, -15.0768, 0.92", "-31.9473, -24.0972, -16.7444, 0.92", "-31.4247, -24.3281, -18.0529, 0.92", "-30.8249, -24.5747, -19.3879, 0.69", "-29.8669, -25.0248, -21.5745, 0.69", "-29.1144, -25.4302, -23.3631, 0.69", "-28.6322, -25.7436, -24.702, 2.29", "-27.9551, -26.286, -27.0382, 0.69", "-27.5273, -26.7789, -28.9058, 0.69", "-27.1442, -27.3532, -31.0413, 0.69", "-26.8918, -27.9016, -32.8506, 0.69", "-26.672, -28.5576, -34.814, 0.69", "-26.4514, -29.5319, -37.5578, 0.69", "-26.357, -29.8705, -38.5067, 1.38" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "15.5354, -13.2989, 6.08081, 0.69", "16.1584, -14.5496, 6.68642, 0.69", "16.6999, -15.6391, 7.28087, 0.69", "17.4352, -16.9935, 8.1314, 0.69", "17.7557, -17.5837, 8.50205, 0.92", "18.3552, -18.6881, 9.19555, 0.92", "19.1147, -20.087, 10.0741, 0.92", "20.0231, -21.7157, 11.1255, 0.92", "20.673, -22.7482, 11.8682, 0.69" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "15.5354, -13.2989, 6.08081, 0.46", "16.7588, -13.4826, 5.18126, 0.46", "18.5889, -13.7572, 3.83567, 0.46", "20.4474, -14.0362, 2.46908, 0.69", "22.0516, -14.277, 1.28959, 0.46", "23.2161, -14.4518, 0.433336, 0.46", "24.6831, -14.672, -0.64532, 0.46" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "15.1214, 4.38616, -11.7881, 1.15", "15.5592, 4.41903, -10.4814, 1.15", "16.1887, 4.55593, -8.28407, 1.15", "16.8155, 4.83876, -5.8821, 1.15", "17.3022, 5.2249, -3.80129, 1.15", "17.7191, 5.69063, -1.9633, 1.15", "18.0228, 6.06395, -0.719428, 1.15", "18.234, 6.43601, 0.144676, 0.69", "18.5165, 7.032, 1.08226, 0.69", "18.9676, 7.75755, 1.95673, 0.69", "19.5425, 8.33193, 2.65688, 0.92", "20.0897, 8.75179, 3.27525, 0.92", "20.4976, 9.03645, 3.82259, 0.92", "21.3109, 9.49448, 5.3127, 0.92", "22.0039, 9.79695, 6.92554, 0.92", "22.4799, 9.98582, 8.34889, 0.92", "22.8574, 10.1858, 9.81714, 0.92", "23.0806, 10.3675, 11.089, 0.92", "23.2147, 10.5825, 12.5143, 0.92", "23.1963, 10.682, 13.2541, 0.92", "23.057, 10.8164, 14.6306, 1.38", "22.9807, 10.8427, 16.0393, 1.61" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "15.1214, 4.38616, -11.7881, 0.92", "15.6608, 3.92348, -12.6257, 0.92", "16.5001, 3.20352, -13.9289, 0.69", "17.4214, 2.41332, -15.3594, 0.69", "17.9943, 1.92188, -16.249, 0.92", "18.4464, 1.53409, -16.951, 1.15", "19.4353, 0.68582, -18.4865, 1.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-13.6545, -11.8059, 10.297, 0.92", "-14.3523, -11.7574, 11.1926, 0.92", "-15.9848, -11.6439, 13.2879, 0.92", "-17.3774, -11.5471, 15.0751, 0.92", "-18.4627, -11.4716, 16.4681, 0.92", "-19.8684, -11.3739, 18.2722, 0.92" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-13.6545, -11.8059, 10.297, 0.69", "-15.5409, -10.9462, 9.33526, 0.69", "-16.8195, -10.3481, 8.76528, 0.69", "-18.5136, -9.62917, 8.13329, 0.69", "-19.7596, -9.23306, 7.71061, 0.69", "-21.3932, -8.89937, 7.2629, 0.69", "-22.5685, -8.65929, 6.94079, 0.69", "-23.715, -8.5093, 6.69416, 0.92", "-25.307, -8.36353, 6.39922, 1.61", "-28.1551, -8.15332, 5.9719, 0.69", "-31.4524, -8.0749, 5.48372, 0.69" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "6.67871, -21.5893, 20.8416, 0.69", "8.39162, -21.251, 21.8353, 0.69", "9.95288, -20.9426, 22.741, 0.46", "11.1042, -20.7152, 23.409, 1.15", "12.0264, -20.533, 23.9439, 2.06", "13.0297, -20.3349, 24.526, 2.06" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "6.67871, -21.5893, 20.8416, 0.92", "6.60946, -22.2487, 20.4931, 0.92", "6.45953, -23.6765, 19.7387, 0.69", "6.2901, -25.29, 18.8861, 0.69", "6.18063, -26.3325, 18.3352, 0.92", "5.99547, -28.0957, 17.4035, 0.69" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_24", "dend_13", "dend_8", "dend_5", "dend_0", "dend_26", "dend_25", "dend_17", "dend_14", "dend_10", "dend_9", "dend_7", "dend_6", "dend_2", "dend_1", "dend_28", "dend_27", "dend_21", "dend_18", "dend_16", "dend_15", "dend_12", "dend_11", "dend_4", "dend_3", "dend_23", "dend_22", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_29", "dend_24", "dend_13", "dend_8", "dend_5", "dend_0", "dend_26", "dend_25", "dend_17", "dend_14", "dend_10", "dend_9", "dend_7", "dend_6", "dend_2", "dend_1", "dend_28", "dend_27", "dend_21", "dend_18", "dend_16", "dend_15", "dend_12", "dend_11", "dend_4", "dend_3", "dend_23", "dend_22", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L1_NGCDA_cef6c2b159_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_24, dend_13, dend_8, dend_5, dend_0, dend_26, dend_25, dend_17, dend_14, dend_10, dend_9, dend_7, dend_6, dend_2, dend_1, dend_28, dend_27, dend_21, dend_18, dend_16, dend_15, dend_12, dend_11, dend_4, dend_3, dend_23, dend_22, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_24, dend_13, dend_8, dend_5, dend_0, dend_26, dend_25, dend_17, dend_14, dend_10, dend_9, dend_7, dend_6, dend_2, dend_1, dend_28, dend_27, dend_21, dend_18, dend_16, dend_15, dend_12, dend_11, dend_4, dend_3, dend_23, dend_22, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_20
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_29(0), soma_0(0.45000008858052515)
    connect dend_24(0), soma_0(0.45000008858052515)
    connect dend_13(0), soma_0(0.45000008858052515)
    connect dend_8(0), soma_0(0.45000008858052515)
    connect dend_5(0), soma_0(0.45000008858052515)
    connect dend_0(0), soma_0(0.45000008858052515)
    connect axon_0(0), soma_0(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.205194, -7.89507, 0.00372411, 3.42211 ) }
    soma_0 { pt3dadd( -0.281494, -7.06579, 0.00341118, 5.97591 ) }
    soma_0 { pt3dadd( -0.357793, -6.23651, 0.00309826, 8.37531 ) }
    soma_0 { pt3dadd( -0.434093, -5.40723, 0.00278533, 10.3432 ) }
    soma_0 { pt3dadd( -0.510393, -4.57795, 0.00247241, 11.4369 ) }
    soma_0 { pt3dadd( -0.586693, -3.74867, 0.00215949, 12.475 ) }
    soma_0 { pt3dadd( -0.662992, -2.91939, 0.00184656, 13.2762 ) }
    soma_0 { pt3dadd( -0.739292, -2.09011, 0.00153364, 13.7985 ) }
    soma_0 { pt3dadd( -0.815592, -1.26083, 0.00122072, 14.2879 ) }
    soma_0 { pt3dadd( -0.891892, -0.431544, 9.07792E-4, 14.5959 ) }
    soma_0 { pt3dadd( -0.968191, 0.397736, 5.94868E-4, 14.8765 ) }
    soma_0 { pt3dadd( -1.04449, 1.22702, 2.81944E-4, 14.5629 ) }
    soma_0 { pt3dadd( -1.12079, 2.0563, -3.09798E-5, 14.1775 ) }
    soma_0 { pt3dadd( -1.19709, 2.88558, -3.43904E-4, 13.7921 ) }
    soma_0 { pt3dadd( -1.27339, 3.71486, -6.56827E-4, 13.3649 ) }
    soma_0 { pt3dadd( -1.34969, 4.54414, -9.69751E-4, 12.6101 ) }
    soma_0 { pt3dadd( -1.42599, 5.37342, -0.00128267, 11.631 ) }
    soma_0 { pt3dadd( -1.50229, 6.2027, -0.0015956, 10.4071 ) }
    soma_0 { pt3dadd( -1.57859, 7.03198, -0.00190852, 8.83417 ) }
    soma_0 { pt3dadd( -1.65489, 7.86126, -0.00222145, 6.03993 ) }
    soma_0 { pt3dadd( -1.73119, 8.69054, -0.00253437, 3.30147 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 21/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.549955, -2.56163, -6.95669, 0.92 ) }
    dend_29 { pt3dadd( -0.00285039, -3.6499, -7.16662, 0.92 ) }
    dend_29 { pt3dadd( 0.482954, -5.13287, -7.44874, 0.92 ) }
    dend_29 { pt3dadd( 0.749115, -6.13599, -7.62964, 0.92 ) }
    dend_29 { pt3dadd( 1.06418, -7.43615, -7.96214, 0.69 ) }
    dend_29 { pt3dadd( 1.33421, -8.53272, -8.36296, 0.69 ) }
    dend_29 { pt3dadd( 1.5818, -9.56394, -8.79025, 0.69 ) }
    dend_29 { pt3dadd( 1.76017, -10.5817, -9.28115, 0.92 ) }
    dend_29 { pt3dadd( 1.84451, -11.2073, -9.63562, 0.92 ) }
    dend_29 { pt3dadd( 2.05084, -12.9788, -10.7978, 0.69 ) }
    dend_29 { pt3dadd( 2.19581, -14.2635, -11.7453, 0.69 ) }
    dend_29 { pt3dadd( 2.25103, -14.7063, -12.0889, 1.15 ) }
    dend_29 { pt3dadd( 2.30101, -15.4456, -12.7128, 1.61 ) }
    dend_29 { pt3dadd( 2.23317, -17.3265, -14.5118, 0.92 ) }
    dend_29 { pt3dadd( 2.04877, -18.7906, -15.9851, 1.15 ) }
    dend_29 { pt3dadd( 1.72072, -20.3433, -17.611, 0.92 ) }
    dend_29 { pt3dadd( 1.49666, -21.1656, -18.4812, 1.15 ) }
    dend_29 { pt3dadd( 1.02943, -22.7509, -20.1885, 1.15 ) }
    dend_29 { pt3dadd( 0.493032, -24.2762, -21.81, 0.69 ) }
    dend_29 { pt3dadd( 0.152485, -25.1297, -22.665, 0.69 ) }
    dend_29 { pt3dadd( -0.175638, -25.8862, -23.4189, 0.92 ) }
    dend_29 { pt3dadd( -0.548015, -26.7155, -24.2, 0.92 ) }
    dend_29 { pt3dadd( -0.873619, -27.5135, -24.8598, 0.92 ) }
    dend_29 { pt3dadd( -1.1995, -28.7304, -25.5712, 0.46 ) }
    dend_29 { pt3dadd( -1.39055, -29.795, -25.938, 0.69 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 46/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -6.09994, 1.43586, -15.2267, 1.15 ) }
    dend_24 { pt3dadd( -6.14964, 2.74307, -15.7646, 1.15 ) }
    dend_24 { pt3dadd( -6.2231, 4.40743, -16.3306, 1.15 ) }
    dend_24 { pt3dadd( -6.23615, 5.23093, -16.5107, 1.15 ) }
    dend_24 { pt3dadd( -6.22345, 6.32903, -16.6462, 1.15 ) }
    dend_24 { pt3dadd( -6.19969, 8.38324, -16.8995, 0.92 ) }
    dend_24 { pt3dadd( -6.19318, 8.94674, -16.969, 1.15 ) }
    dend_24 { pt3dadd( -6.1983, 10.0624, -16.9881, 1.15 ) }
    dend_24 { pt3dadd( -6.23579, 11.6591, -16.8366, 1.15 ) }
    dend_24 { pt3dadd( -6.22563, 13.315, -16.5873, 1.61 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 56/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.78994, -7.86563, 1.77331, 2.29 ) }
    dend_13 { pt3dadd( -3.86283, -9.43451, 2.3382, 2.06 ) }
    dend_13 { pt3dadd( -5.22513, -11.4266, 3.05546, 2.29 ) }
    dend_13 { pt3dadd( -6.4714, -13.249, 3.71164, 2.52 ) }
    dend_13 { pt3dadd( -7.4507, -14.681, 4.22725, 2.52 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 61/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 6.41007, -0.221639, 2.29331, 1.15 ) }
    dend_8 { pt3dadd( 8.1751, -0.913399, 3.28998, 1.15 ) }
    dend_8 { pt3dadd( 10.0325, -1.64139, 4.33884, 1.15 ) }
    dend_8 { pt3dadd( 11.4536, -2.19833, 5.14126, 1.15 ) }
    dend_8 { pt3dadd( 12.9564, -2.78731, 5.98984, 1.38 ) }
    dend_8 { pt3dadd( 13.7593, -3.10199, 6.44322, 1.61 ) }
    dend_8 { pt3dadd( 14.6643, -3.45669, 6.95426, 1.61 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 68/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -4.6199, 7.75386, 3.15331, 1.38 ) }
    dend_5 { pt3dadd( -5.33473, 9.41835, 4.05588, 1.38 ) }
    dend_5 { pt3dadd( -5.81057, 10.4965, 4.50979, 1.38 ) }
    dend_5 { pt3dadd( -6.32564, 11.9393, 4.95477, 1.15 ) }
    dend_5 { pt3dadd( -6.69104, 13.3487, 5.2713, 1.38 ) }
    dend_5 { pt3dadd( -6.91443, 14.4619, 5.45135, 1.38 ) }
    dend_5 { pt3dadd( -7.0489, 15.3883, 5.54048, 1.15 ) }
    dend_5 { pt3dadd( -7.11086, 16.8405, 5.52821, 1.15 ) }
    dend_5 { pt3dadd( -7.06941, 18.5064, 5.36525, 0.92 ) }
    dend_5 { pt3dadd( -6.95996, 19.6805, 5.13968, 0.92 ) }
    dend_5 { pt3dadd( -6.78427, 20.8411, 4.83844, 1.15 ) }
    dend_5 { pt3dadd( -6.52752, 22.0453, 4.52745, 1.15 ) }
    dend_5 { pt3dadd( -6.22525, 23.1259, 4.28308, 1.38 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 81/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.22007, 4.35112, -7.50669, 0.92 ) }
    dend_0 { pt3dadd( 3.46735, 5.21412, -8.44622, 0.92 ) }
    dend_0 { pt3dadd( 4.67988, 6.05309, -9.35958, 0.92 ) }
    dend_0 { pt3dadd( 5.53273, 6.64319, -10.002, 0.92 ) }
    dend_0 { pt3dadd( 6.47216, 7.2932, -10.7096, 1.15 ) }
    dend_0 { pt3dadd( 7.68205, 8.13034, -11.621, 1.15 ) }
    dend_0 { pt3dadd( 8.92158, 8.98798, -12.5547, 1.38 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 88/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.73119, 8.69054, -0.00253437, 0.654348 ) }
    axon_0 { pt3dadd( -3.10549, 23.6275, -0.00253437, 0.654348 ) }
    axon_0 { pt3dadd( -4.4798, 38.5644, -0.00253437, 0.654348 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 91/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -6.22563, 13.315, -16.5873, 1.38 ) }
    dend_26 { pt3dadd( -7.24786, 13.5802, -19.3114, 1.38 ) }
    dend_26 { pt3dadd( -8.34861, 13.8486, -21.5253, 1.38 ) }
    dend_26 { pt3dadd( -10.0553, 14.1321, -24.3673, 1.38 ) }
    dend_26 { pt3dadd( -11.9443, 14.2605, -27.2545, 1.38 ) }
    dend_26 { pt3dadd( -12.7924, 14.2522, -28.4274, 1.15 ) }
    dend_26 { pt3dadd( -14.1748, 14.1563, -30.1827, 1.15 ) }
    dend_26 { pt3dadd( -15.9722, 13.8613, -31.9477, 1.15 ) }
    dend_26 { pt3dadd( -17.5912, 13.5113, -33.2762, 1.61 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_26 { pt3dadd( -19.3475, 13.054, -34.4235, 1.61 ) }
    dend_26 { pt3dadd( -20.724, 12.6231, -35.1726, 1.15 ) }
    dend_26 { pt3dadd( -22.205, 11.9998, -36.0415, 1.15 ) }
    dend_26 { pt3dadd( -23.3362, 11.3164, -36.7717, 1.61 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 4/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -6.22563, 13.315, -16.5873, 1.15 ) }
    dend_25 { pt3dadd( -6.43532, 14.9102, -18.7709, 1.15 ) }
    dend_25 { pt3dadd( -6.66903, 16.6815, -21.0236, 1.15 ) }
    dend_25 { pt3dadd( -6.87726, 17.8752, -22.3938, 1.15 ) }
    dend_25 { pt3dadd( -7.06125, 19.1107, -23.674, 1.15 ) }
    dend_25 { pt3dadd( -7.26214, 20.4596, -25.0719, 0.92 ) }
    dend_25 { pt3dadd( -7.42208, 21.5335, -26.1848, 0.92 ) }
    dend_25 { pt3dadd( -7.56592, 22.1663, -26.7653, 0.92 ) }
    dend_25 { pt3dadd( -7.94859, 23.6218, -27.9005, 0.69 ) }
    dend_25 { pt3dadd( -8.32367, 25.2876, -28.9848, 0.69 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 14/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -7.4507, -14.681, 4.22725, 1.38 ) }
    dend_17 { pt3dadd( -7.20117, -15.4011, 5.41835, 1.38 ) }
    dend_17 { pt3dadd( -6.85169, -16.4095, 7.0866, 1.38 ) }
    dend_17 { pt3dadd( -6.48342, -17.4722, 8.84451, 1.38 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 18/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -7.4507, -14.681, 4.22725, 1.38 ) }
    dend_14 { pt3dadd( -9.37582, -15.8938, 4.74764, 1.38 ) }
    dend_14 { pt3dadd( -11.1415, -16.8644, 4.90525, 1.38 ) }
    dend_14 { pt3dadd( -12.9943, -17.6987, 4.79239, 1.38 ) }
    dend_14 { pt3dadd( -14.6173, -18.2684, 4.48071, 1.15 ) }
    dend_14 { pt3dadd( -16.4999, -18.66, 3.88008, 1.38 ) }
    dend_14 { pt3dadd( -18.2278, -19.0194, 3.32883, 1.15 ) }
    dend_14 { pt3dadd( -20.2622, -19.1283, 2.30045, 1.15 ) }
    dend_14 { pt3dadd( -21.6403, -18.9991, 1.29452, 0.92 ) }
    dend_14 { pt3dadd( -22.8331, -18.7006, 0.161617, 0.92 ) }
    dend_14 { pt3dadd( -24.1414, -18.1061, -1.38538, 1.15 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 29/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 14.6643, -3.45669, 6.95426, 1.38 ) }
    dend_10 { pt3dadd( 14.8237, -5.25797, 6.7944, 1.38 ) }
    dend_10 { pt3dadd( 14.9217, -6.36549, 6.69612, 1.38 ) }
    dend_10 { pt3dadd( 15.0749, -8.09527, 6.54261, 1.38 ) }
    dend_10 { pt3dadd( 15.251, -10.0851, 6.36602, 0.92 ) }
    dend_10 { pt3dadd( 15.3663, -11.3879, 6.2504, 1.15 ) }
    dend_10 { pt3dadd( 15.5354, -13.2989, 6.08081, 1.38 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 36/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 14.6643, -3.45669, 6.95426, 0.92 ) }
    dend_9 { pt3dadd( 14.9597, -2.72815, 8.65182, 0.92 ) }
    dend_9 { pt3dadd( 15.2798, -1.93873, 10.4912, 0.92 ) }
    dend_9 { pt3dadd( 15.5739, -1.21348, 12.1811, 0.92 ) }
    dend_9 { pt3dadd( 15.9402, -0.310216, 14.2858, 0.92 ) }
    dend_9 { pt3dadd( 16.1882, 0.301516, 15.7112, 0.92 ) }
    dend_9 { pt3dadd( 16.3569, 0.717354, 16.6801, 1.83 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 43/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -6.22525, 23.1259, 4.28308, 0.92 ) }
    dend_7 { pt3dadd( -4.54363, 23.6829, 3.4604, 0.92 ) }
    dend_7 { pt3dadd( -2.90197, 24.2266, 2.65728, 0.92 ) }
    dend_7 { pt3dadd( -1.19087, 24.7933, 1.82018, 0.92 ) }
    dend_7 { pt3dadd( 0.274056, 25.2785, 1.10351, 0.92 ) }
    dend_7 { pt3dadd( 1.8824, 25.8112, 0.316686, 0.92 ) }
    dend_7 { pt3dadd( 3.01338, 26.1858, -0.23661, 0.46 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 50/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -6.22525, 23.1259, 4.28308, 1.61 ) }
    dend_6 { pt3dadd( -5.92196, 24.5344, 3.01707, 1.61 ) }
    dend_6 { pt3dadd( -5.65891, 25.7561, 1.91901, 1.15 ) }
    dend_6 { pt3dadd( -5.37586, 27.0706, 0.73747, 0.92 ) }
    dend_6 { pt3dadd( -5.12719, 28.2255, -0.300573, 0.92 ) }
    dend_6 { pt3dadd( -4.8414, 29.5527, -1.49354, 0.69 ) }
    dend_6 { pt3dadd( -4.64087, 30.484, -2.3306, 0.69 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 57/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 8.92158, 8.98798, -12.5547, 1.15 ) }
    dend_2 { pt3dadd( 10.4449, 7.85725, -12.3663, 1.15 ) }
    dend_2 { pt3dadd( 12.1588, 6.58512, -12.1544, 1.15 ) }
    dend_2 { pt3dadd( 13.823, 5.34986, -11.9487, 0.92 ) }
    dend_2 { pt3dadd( 15.1214, 4.38616, -11.7881, 1.15 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 62/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 8.92158, 8.98798, -12.5547, 0.69 ) }
    dend_1 { pt3dadd( 9.42086, 9.4489, -11.7273, 0.69 ) }
    dend_1 { pt3dadd( 10.3515, 10.2639, -10.0104, 0.69 ) }
    dend_1 { pt3dadd( 10.7882, 10.6929, -9.11782, 0.69 ) }
    dend_1 { pt3dadd( 11.1708, 11.1675, -8.11858, 0.92 ) }
    dend_1 { pt3dadd( 11.6444, 11.7551, -6.88143, 0.69 ) }
    dend_1 { pt3dadd( 12.301, 12.5698, -5.16629, 0.69 ) }
    dend_1 { pt3dadd( 12.8241, 13.0933, -3.86962, 0.69 ) }
    dend_1 { pt3dadd( 13.2773, 13.468, -2.80603, 0.92 ) }
    dend_1 { pt3dadd( 13.8097, 14.068, -1.16545, 0.92 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 72/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -4.4798, 38.5644, -0.00253437, 0.23 ) }
    axon_1 { pt3dadd( -5.8541, 53.5013, -0.00253437, 0.23 ) }
    axon_1 { pt3dadd( -7.2284, 68.4382, -0.00253437, 0.23 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 75/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -23.3362, 11.3164, -36.7717, 1.38 ) }
    dend_28 { pt3dadd( -24.7015, 10.2771, -34.6787, 1.38 ) }
    dend_28 { pt3dadd( -26.9575, 9.0271, -32.5385, 1.38 ) }
    dend_28 { pt3dadd( -28.9716, 8.24638, -31.3272, 1.38 ) }
    dend_28 { pt3dadd( -29.7958, 8.03893, -31.0951, 0.92 ) }
    dend_28 { pt3dadd( -31.2196, 7.85293, -31.0472, 1.61 ) }
    dend_28 { pt3dadd( -33.4335, 7.83808, -31.5032, 0.92 ) }
    dend_28 { pt3dadd( -35.4812, 8.14319, -32.4767, 0.92 ) }
    dend_28 { pt3dadd( -37.0057, 8.55116, -33.4433, 1.61 ) }
    dend_28 { pt3dadd( -39.5968, 9.51349, -35.3051, 0.69 ) }
    dend_28 { pt3dadd( -41.5575, 10.4865, -36.7683, 0.92 ) }
    dend_28 { pt3dadd( -43.0713, 11.4138, -37.9002, 0.92 ) }
    dend_28 { pt3dadd( -43.981, 12.0241, -38.5422, 0.92 ) }
    dend_28 { pt3dadd( -44.981, 12.7442, -39.2684, 1.38 ) }
    dend_28 { pt3dadd( -46.7199, 14.0244, -40.4497, 0.69 ) }
    dend_28 { pt3dadd( -48.7783, 15.4837, -41.5114, 0.69 ) }
    dend_28 { pt3dadd( -50.7318, 16.7295, -42.2756, 0.69 ) }
    dend_28 { pt3dadd( -52.2318, 17.6544, -42.7829, 0.69 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 93/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -23.3362, 11.3164, -36.7717, 0.69 ) }
    dend_27 { pt3dadd( -24.9157, 11.2355, -38.5337, 0.69 ) }
    dend_27 { pt3dadd( -27.023, 11.2607, -40.69, 1.15 ) }
    dend_27 { pt3dadd( -28.5167, 11.442, -42.2325, 1.15 ) }
    dend_27 { pt3dadd( -29.7918, 11.721, -43.5242, 1.15 ) }
    dend_27 { pt3dadd( -31.617, 12.2654, -45.2504, 1.15 ) }
    dend_27 { pt3dadd( -32.4474, 12.5792, -45.9438, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_27 { pt3dadd( -33.5986, 13.307, -46.8571, 0.92 ) }
    dend_27 { pt3dadd( -35.1025, 14.5027, -47.7279, 1.15 ) }
    dend_27 { pt3dadd( -35.7375, 15.0526, -47.997, 0.92 ) }
    dend_27 { pt3dadd( -37.1023, 16.328, -48.4375, 1.15 ) }
    dend_27 { pt3dadd( -38.4366, 17.6621, -48.8011, 0.92 ) }
    dend_27 { pt3dadd( -40.2752, 19.686, -49.4968, 0.92 ) }
    dend_27 { pt3dadd( -41.515, 21.1719, -50.0242, 0.92 ) }
    dend_27 { pt3dadd( -42.1894, 22.112, -50.4356, 0.92 ) }
    dend_27 { pt3dadd( -43.1039, 23.7275, -51.2905, 1.15 ) }
    dend_27 { pt3dadd( -43.5763, 24.7049, -51.8326, 1.15 ) }
    dend_27 { pt3dadd( -44.8817, 27.8341, -53.7316, 0.92 ) }
    dend_27 { pt3dadd( -45.284, 29.0607, -54.4763, 0.92 ) }
    dend_27 { pt3dadd( -46.0802, 32.4297, -56.801, 0.92 ) }
    dend_27 { pt3dadd( -46.2667, 33.5057, -57.6532, 0.92 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 14/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -6.48342, -17.4722, 8.84451, 0.92 ) }
    dend_21 { pt3dadd( -7.58655, -16.6005, 9.06794, 0.92 ) }
    dend_21 { pt3dadd( -9.08079, -15.4198, 9.3706, 0.92 ) }
    dend_21 { pt3dadd( -10.1638, -14.5641, 9.58996, 0.92 ) }
    dend_21 { pt3dadd( -11.4059, -13.5826, 9.84153, 0.92 ) }
    dend_21 { pt3dadd( -12.4329, -12.7712, 10.0496, 0.92 ) }
    dend_21 { pt3dadd( -13.6545, -11.8059, 10.297, 1.15 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 21/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -6.48342, -17.4722, 8.84451, 0.92 ) }
    dend_18 { pt3dadd( -5.17974, -17.0722, 9.67858, 0.92 ) }
    dend_18 { pt3dadd( -3.56236, -16.6624, 10.4792, 0.92 ) }
    dend_18 { pt3dadd( -2.88861, -16.5658, 10.7778, 0.92 ) }
    dend_18 { pt3dadd( -1.82678, -16.5128, 11.2832, 0.92 ) }
    dend_18 { pt3dadd( 0.0476936, -16.5342, 12.3901, 0.92 ) }
    dend_18 { pt3dadd( 1.55137, -16.669, 13.4283, 0.92 ) }
    dend_18 { pt3dadd( 3.06492, -16.9207, 14.7464, 0.92 ) }
    dend_18 { pt3dadd( 3.92338, -17.3249, 15.7168, 0.92 ) }
    dend_18 { pt3dadd( 5.11878, -18.1542, 17.2137, 0.92 ) }
    dend_18 { pt3dadd( 6.09027, -19.1689, 18.5594, 0.92 ) }
    dend_18 { pt3dadd( 6.59652, -20.0794, 19.4248, 0.92 ) }
    dend_18 { pt3dadd( 6.72394, -20.712, 19.9848, 0.92 ) }
    dend_18 { pt3dadd( 6.67871, -21.5893, 20.8416, 0.92 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 35/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -24.1414, -18.1061, -1.38538, 0.92 ) }
    dend_16 { pt3dadd( -24.6266, -16.9432, -2.05786, 0.92 ) }
    dend_16 { pt3dadd( -25.2967, -15.4953, -2.76064, 0.92 ) }
    dend_16 { pt3dadd( -26.0118, -13.941, -3.41562, 0.92 ) }
    dend_16 { pt3dadd( -26.3442, -13.2318, -3.69377, 0.92 ) }
    dend_16 { pt3dadd( -27.0811, -11.6592, -4.31056, 0.92 ) }
    dend_16 { pt3dadd( -27.5111, -10.7415, -4.67046, 0.92 ) }
    dend_16 { pt3dadd( -28.1864, -9.38141, -5.18556, 0.92 ) }
    dend_16 { pt3dadd( -28.6637, -8.36612, -5.46254, 1.15 ) }
    dend_16 { pt3dadd( -29.181, -7.32636, -5.63139, 1.15 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 45/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -24.1414, -18.1061, -1.38538, 0.69 ) }
    dend_15 { pt3dadd( -25.4187, -18.7672, -2.72546, 0.69 ) }
    dend_15 { pt3dadd( -26.5044, -19.4386, -3.98403, 0.69 ) }
    dend_15 { pt3dadd( -27.019, -19.782, -4.64673, 0.92 ) }
    dend_15 { pt3dadd( -28.126, -20.4837, -6.06553, 0.92 ) }
    dend_15 { pt3dadd( -29.1362, -21.0629, -7.38624, 0.92 ) }
    dend_15 { pt3dadd( -30.1015, -21.6012, -8.71836, 0.92 ) }
    dend_15 { pt3dadd( -30.9343, -22.1267, -10.0306, 0.92 ) }
    dend_15 { pt3dadd( -31.6071, -22.6129, -11.3303, 0.92 ) }
    dend_15 { pt3dadd( -32.2328, -23.1794, -12.9917, 0.92 ) }
    dend_15 { pt3dadd( -32.4368, -23.5523, -14.2416, 0.92 ) }
    dend_15 { pt3dadd( -32.3844, -23.7699, -15.0768, 0.92 ) }
    dend_15 { pt3dadd( -31.9473, -24.0972, -16.7444, 0.92 ) }
    dend_15 { pt3dadd( -31.4247, -24.3281, -18.0529, 0.92 ) }
    dend_15 { pt3dadd( -30.8249, -24.5747, -19.3879, 0.69 ) }
    dend_15 { pt3dadd( -29.8669, -25.0248, -21.5745, 0.69 ) }
    dend_15 { pt3dadd( -29.1144, -25.4302, -23.3631, 0.69 ) }
    dend_15 { pt3dadd( -28.6322, -25.7436, -24.702, 2.29 ) }
    dend_15 { pt3dadd( -27.9551, -26.286, -27.0382, 0.69 ) }
    dend_15 { pt3dadd( -27.5273, -26.7789, -28.9058, 0.69 ) }
    dend_15 { pt3dadd( -27.1442, -27.3532, -31.0413, 0.69 ) }
    dend_15 { pt3dadd( -26.8918, -27.9016, -32.8506, 0.69 ) }
    dend_15 { pt3dadd( -26.672, -28.5576, -34.814, 0.69 ) }
    dend_15 { pt3dadd( -26.4514, -29.5319, -37.5578, 0.69 ) }
    dend_15 { pt3dadd( -26.357, -29.8705, -38.5067, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 70/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 15.5354, -13.2989, 6.08081, 0.69 ) }
    dend_12 { pt3dadd( 16.1584, -14.5496, 6.68642, 0.69 ) }
    dend_12 { pt3dadd( 16.6999, -15.6391, 7.28087, 0.69 ) }
    dend_12 { pt3dadd( 17.4352, -16.9935, 8.1314, 0.69 ) }
    dend_12 { pt3dadd( 17.7557, -17.5837, 8.50205, 0.92 ) }
    dend_12 { pt3dadd( 18.3552, -18.6881, 9.19555, 0.92 ) }
    dend_12 { pt3dadd( 19.1147, -20.087, 10.0741, 0.92 ) }
    dend_12 { pt3dadd( 20.0231, -21.7157, 11.1255, 0.92 ) }
    dend_12 { pt3dadd( 20.673, -22.7482, 11.8682, 0.69 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 79/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 15.5354, -13.2989, 6.08081, 0.46 ) }
    dend_11 { pt3dadd( 16.7588, -13.4826, 5.18126, 0.46 ) }
    dend_11 { pt3dadd( 18.5889, -13.7572, 3.83567, 0.46 ) }
    dend_11 { pt3dadd( 20.4474, -14.0362, 2.46908, 0.69 ) }
    dend_11 { pt3dadd( 22.0516, -14.277, 1.28959, 0.46 ) }
    dend_11 { pt3dadd( 23.2161, -14.4518, 0.433336, 0.46 ) }
    dend_11 { pt3dadd( 24.6831, -14.672, -0.64532, 0.46 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 86/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 15.1214, 4.38616, -11.7881, 1.15 ) }
    dend_4 { pt3dadd( 15.5592, 4.41903, -10.4814, 1.15 ) }
    dend_4 { pt3dadd( 16.1887, 4.55593, -8.28407, 1.15 ) }
    dend_4 { pt3dadd( 16.8155, 4.83876, -5.8821, 1.15 ) }
    dend_4 { pt3dadd( 17.3022, 5.2249, -3.80129, 1.15 ) }
    dend_4 { pt3dadd( 17.7191, 5.69063, -1.9633, 1.15 ) }
    dend_4 { pt3dadd( 18.0228, 6.06395, -0.719428, 1.15 ) }
    dend_4 { pt3dadd( 18.234, 6.43601, 0.144676, 0.69 ) }
    dend_4 { pt3dadd( 18.5165, 7.032, 1.08226, 0.69 ) }
    dend_4 { pt3dadd( 18.9676, 7.75755, 1.95673, 0.69 ) }
    dend_4 { pt3dadd( 19.5425, 8.33193, 2.65688, 0.92 ) }
    dend_4 { pt3dadd( 20.0897, 8.75179, 3.27525, 0.92 ) }
    dend_4 { pt3dadd( 20.4976, 9.03645, 3.82259, 0.92 ) }
    dend_4 { pt3dadd( 21.3109, 9.49448, 5.3127, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_4 { pt3dadd( 22.0039, 9.79695, 6.92554, 0.92 ) }
    dend_4 { pt3dadd( 22.4799, 9.98582, 8.34889, 0.92 ) }
    dend_4 { pt3dadd( 22.8574, 10.1858, 9.81714, 0.92 ) }
    dend_4 { pt3dadd( 23.0806, 10.3675, 11.089, 0.92 ) }
    dend_4 { pt3dadd( 23.2147, 10.5825, 12.5143, 0.92 ) }
    dend_4 { pt3dadd( 23.1963, 10.682, 13.2541, 0.92 ) }
    dend_4 { pt3dadd( 23.057, 10.8164, 14.6306, 1.38 ) }
    dend_4 { pt3dadd( 22.9807, 10.8427, 16.0393, 1.61 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 8/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 15.1214, 4.38616, -11.7881, 0.92 ) }
    dend_3 { pt3dadd( 15.6608, 3.92348, -12.6257, 0.92 ) }
    dend_3 { pt3dadd( 16.5001, 3.20352, -13.9289, 0.69 ) }
    dend_3 { pt3dadd( 17.4214, 2.41332, -15.3594, 0.69 ) }
    dend_3 { pt3dadd( 17.9943, 1.92188, -16.249, 0.92 ) }
    dend_3 { pt3dadd( 18.4464, 1.53409, -16.951, 1.15 ) }
    dend_3 { pt3dadd( 19.4353, 0.68582, -18.4865, 1.15 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 15/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -13.6545, -11.8059, 10.297, 0.92 ) }
    dend_23 { pt3dadd( -14.3523, -11.7574, 11.1926, 0.92 ) }
    dend_23 { pt3dadd( -15.9848, -11.6439, 13.2879, 0.92 ) }
    dend_23 { pt3dadd( -17.3774, -11.5471, 15.0751, 0.92 ) }
    dend_23 { pt3dadd( -18.4627, -11.4716, 16.4681, 0.92 ) }
    dend_23 { pt3dadd( -19.8684, -11.3739, 18.2722, 0.92 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 21/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -13.6545, -11.8059, 10.297, 0.69 ) }
    dend_22 { pt3dadd( -15.5409, -10.9462, 9.33526, 0.69 ) }
    dend_22 { pt3dadd( -16.8195, -10.3481, 8.76528, 0.69 ) }
    dend_22 { pt3dadd( -18.5136, -9.62917, 8.13329, 0.69 ) }
    dend_22 { pt3dadd( -19.7596, -9.23306, 7.71061, 0.69 ) }
    dend_22 { pt3dadd( -21.3932, -8.89937, 7.2629, 0.69 ) }
    dend_22 { pt3dadd( -22.5685, -8.65929, 6.94079, 0.69 ) }
    dend_22 { pt3dadd( -23.715, -8.5093, 6.69416, 0.92 ) }
    dend_22 { pt3dadd( -25.307, -8.36353, 6.39922, 1.61 ) }
    dend_22 { pt3dadd( -28.1551, -8.15332, 5.9719, 0.69 ) }
    dend_22 { pt3dadd( -31.4524, -8.0749, 5.48372, 0.69 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 32/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 6.67871, -21.5893, 20.8416, 0.69 ) }
    dend_20 { pt3dadd( 8.39162, -21.251, 21.8353, 0.69 ) }
    dend_20 { pt3dadd( 9.95288, -20.9426, 22.741, 0.46 ) }
    dend_20 { pt3dadd( 11.1042, -20.7152, 23.409, 1.15 ) }
    dend_20 { pt3dadd( 12.0264, -20.533, 23.9439, 2.06 ) }
    dend_20 { pt3dadd( 13.0297, -20.3349, 24.526, 2.06 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 38/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 6.67871, -21.5893, 20.8416, 0.92 ) }
    dend_19 { pt3dadd( 6.60946, -22.2487, 20.4931, 0.92 ) }
    dend_19 { pt3dadd( 6.45953, -23.6765, 19.7387, 0.69 ) }
    dend_19 { pt3dadd( 6.2901, -25.29, 18.8861, 0.69 ) }
    dend_19 { pt3dadd( 6.18063, -26.3325, 18.3352, 0.92 ) }
    dend_19 { pt3dadd( 5.99547, -28.0957, 17.4035, 0.69 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_24, dend_13, dend_8, dend_5, dend_0, dend_26, dend_25, dend_17, dend_14, dend_10, dend_9, dend_7, dend_6, dend_2, dend_1, dend_28, dend_27, dend_21, dend_18, dend_16, dend_15, dend_12, dend_11, dend_4, dend_3, dend_23, dend_22, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_24, dend_13, dend_8, dend_5, dend_0, dend_26, dend_25, dend_17, dend_14, dend_10, dend_9, dend_7, dend_6, dend_2, dend_1, dend_28, dend_27, dend_21, dend_18, dend_16, dend_15, dend_12, dend_11, dend_4, dend_3, dend_23, dend_22, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_27 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_15 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_13 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_8 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_24 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_17 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_5 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_10 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_9 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_21 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_3 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_6 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_7 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_14 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_25 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_11 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_23 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_18 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_29 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_16 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_19 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_20 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_22 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_28 OneSecGrp_SectionRef_20.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_27 nseg = 3
    dend_15 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L1_NGCDA_cef6c2b159_0_0


