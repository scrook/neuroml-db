// Cell: cSTUT189_L6_LBC_0f06cad592_0_0
/*
{
  "id" : "cSTUT189_L6_LBC_0f06cad592_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.47547, -21.1079, 2.51381, 3.10391", "-2.25244, -19.1651, 2.29568, 4.54795", "-2.02941, -17.2222, 2.07754, 6.86414", "-1.80638, -15.2794, 1.85941, 9.59749", "-1.58335, -13.3366, 1.64128, 11.8194", "-1.36032, -11.3938, 1.42315, 13.5674", "-1.13729, -9.45099, 1.20502, 14.4744", "-0.914264, -7.50817, 0.986887, 14.6773", "-0.691235, -5.56535, 0.768756, 14.5415", "-0.468206, -3.62254, 0.550625, 13.3405", "-0.245177, -1.67972, 0.332493, 12.1443", "-0.0221479, 0.263091, 0.114362, 10.4715", "0.200881, 2.20591, -0.103769, 8.18984", "0.42391, 4.14872, -0.321901, 6.18554", "0.64694, 6.09154, -0.540032, 4.57765", "0.869969, 8.03435, -0.758163, 3.2886", "1.093, 9.97717, -0.976295, 3.75178", "1.31603, 11.92, -1.19443, 4.68351", "1.53906, 13.8628, -1.41256, 5.54689", "1.76209, 15.8056, -1.63069, 4.92105", "1.98511, 17.7484, -1.84882, 3.22657" ]
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-3.49001, -19.5048, 2.0349, 1.25", "-3.05706, -21.1745, 3.35025, 1.25", "-2.76864, -22.2867, 4.22648, 1.33", "-2.501, -23.3188, 5.03958, 1.33", "-2.17765, -24.5658, 6.02196, 1.33", "-1.85952, -25.7927, 6.98846, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064008978086
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-4.04001, -20.5248, -0.915102, 2.06", "-4.50113, -21.7366, 0.0491133, 2.06", "-4.93362, -22.8732, 0.953451, 2.06", "-5.80158, -25.1542, 2.76838, 2.06", "-5.99663, -25.6668, 3.17623, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064008978086
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-0.350012, 11.1452, -7.6651, 0.59", "-1.24419, 10.2498, -7.58475, 0.44", "-2.21495, 9.30806, -7.45855, 0.44", "-4.54997, 7.13745, -6.95553, 0.37", "-6.03351, 5.79459, -6.57527, 0.22", "-9.64206, 2.53056, -5.48729, 0.22", "-11.0991, 1.20244, -4.99636, 0.22", "-13.1251, -0.633253, -4.1587, 0.29", "-15.9421, -3.17319, -2.743, 0.29", "-18.8049, -5.6908, -1.04164, 0.15", "-20.5545, -7.18902, 0.155816, 0.15", "-21.8413, -8.27756, 1.17514, 0.15", "-23.8297, -9.98962, 2.94108, 0.15", "-25.5555, -11.5133, 4.67047, 0.15", "-26.8523, -12.718, 6.12202, 0.15", "-28.4513, -14.2717, 8.12292, 0.15", "-29.569, -15.3602, 9.53324, 0.15", "-30.8896, -16.7147, 11.1826, 0.15", "-32.7262, -18.7539, 13.3409, 0.15", "-34.2387, -20.5459, 15.0455, 0.15", "-36.3289, -23.0774, 17.2752, 0.15", "-38.1519, -25.3259, 19.0786, 0.15", "-40.4638, -28.1375, 21.2294, 0.15", "-43.6323, -32.022, 24.0994, 0.15", "-45.2659, -34.1036, 25.5868, 0.15", "-46.5473, -35.7217, 26.7121, 0.15", "-47.9859, -37.4032, 27.8907, 0.15", "-49.8043, -39.316, 29.2885, 0.22", "-52.5451, -41.9736, 31.4163, 0.22", "-54.3299, -43.6279, 32.8568, 0.22", "-56.54, -45.6441, 34.7119, 0.22", "-59.7479, -48.6218, 37.6243, 0.22", "-61.9391, -50.6401, 39.673, 0.22", "-64.516, -52.9482, 42.0139, 0.22", "-66.1823, -54.3491, 43.5158, 0.22", "-67.12, -55.1479, 44.4314, 0.37", "-68.4511, -56.5466, 46.0966, 0.37", "-69.5374, -58.183, 48.0429, 0.37", "-78.9241, -67.5545, 53.6324, 0.37" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064008978086,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "0.099989, 19.0152, -1.8651, 1.18", "0.0261982, 20.9137, -0.219163, 1.18", "-0.0257819, 22.2512, 0.940276, 1.4", "-0.17384, 26.0606, 4.24278, 1.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064008978086
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "3.21999, 14.5252, -5.5151, 1.33", "3.70484, 16.0683, -6.74699, 1.33", "4.27607, 17.8862, -8.19831, 1.33", "4.74403, 19.3755, -9.38726, 1.55", "5.2281, 20.9161, -10.6172, 1.55", "5.64657, 22.2479, -11.6804, 1.55", "6.15433, 23.8639, -12.9705, 1.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064008978086
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.43001, 17.6752, -6.9151, 1.11", "-3.06428, 18.2579, -6.9151, 1.11", "-3.92459, 19.1757, -6.9151, 1.18", "-4.40965, 19.7378, -6.9151, 1.4", "-5.10267, 20.5602, -6.9151, 1.4", "-5.35354, 20.8431, -6.92864, 1.4", "-6.33438, 21.8564, -7.02651, 1.25", "-6.89378, 22.3765, -7.10155, 1.25", "-8.0307, 23.2859, -7.27698, 1.25", "-9.00229, 23.932, -7.43362, 1.25", "-10.7015, 24.8145, -7.70495, 0.81", "-11.6951, 25.2093, -7.85183, 0.81", "-12.6793, 25.4962, -7.98373, 0.59", "-13.7615, 25.7424, -8.1131, 0.81", "-14.665, 25.8875, -8.21364, 0.81", "-15.556, 25.986, -8.29186, 0.81", "-16.6164, 26.072, -8.32202, 1.03", "-17.5706, 26.1918, -8.31552, 1.03", "-17.8489, 26.2447, -8.31312, 1.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064008978086
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.98511, 17.7484, -1.84882, 1.04623", "3.69583, 32.6505, -1.84882, 1.04623", "5.40654, 47.5527, -1.84882, 1.04623" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-1.85952, -25.7927, 6.98846, 1.11", "-1.68019, -29.3484, 7.90388, 1.11", "-1.49287, -32.2009, 9.13831, 1.11", "-0.999447, -35.7752, 10.9027, 1.11", "-0.763922, -36.7581, 11.4296, 1.11", "-0.313686, -38.1249, 12.1982, 1.11", "0.539976, -40.3731, 13.4698, 1.11", "2.02668, -43.2699, 15.3114, 1.11", "3.15599, -45.0814, 16.5032, 0.96", "4.65252, -47.1656, 17.9522, 0.81", "6.13747, -49.232, 19.2415, 0.81", "7.2378, -50.7945, 20.0451, 0.81", "8.01924, -51.9637, 20.4552, 0.81", "8.93748, -53.442, 20.7685, 0.59", "10.1017, -55.5777, 21.0538, 0.59", "11.0358, -57.474, 21.0742, 0.88", "12.1623, -59.8194, 20.8445, 0.88", "13.1342, -61.7507, 20.5419, 0.88", "14.0756, -63.5224, 20.2363, 0.88", "15.0409, -65.1484, 19.9554, 0.88", "16.1012, -66.5678, 19.7777, 0.88", "16.9296, -67.4357, 19.7896, 0.88", "18.6855, -68.9268, 20.2087, 0.88", "20.0581, -69.988, 20.9013, 0.88", "20.7076, -70.5242, 21.4018, 0.88", "21.7444, -71.5605, 22.4238, 0.88", "22.4275, -72.2755, 23.1984, 0.88", "23.1378, -73.1363, 24.1173, 0.88", "23.9311, -74.4114, 25.2904, 0.88", "24.6613, -76.018, 26.4362, 0.88", "25.1992, -77.5813, 27.3539, 0.88", "28.6264, -89.5924, 31.3867, 0.88", "31.8305, -101.308, 36.3623, 0.88", "35.3621, -112.448, 42.3371, 0.88", "40.3295, -123.151, 48.0862, 0.88", "44.2977, -133.874, 54.531, 0.88", "50.3468, -142.594, 62.2543, 0.88", "57.5409, -150.678, 69.6826, 0.88", "64.8175, -158.122, 77.677, 0.88", "73.522, -165.718, 83.9064, 0.88", "81.4851, -171.936, 92.2853, 0.88", "88.6278, -177.924, 101.526, 0.88", "94.8517, -182.832, 111.988, 0.88", "99.6582, -189.456, 122.25, 0.88", "105.901, -197.054, 130.944, 0.88" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-1.85952, -25.7927, 6.98846, 0.96", "-0.979057, -26.3716, 7.61346, 0.96", "-0.0541292, -26.9653, 8.29459, 0.81", "1.3975, -27.9657, 9.44971, 0.81", "3.24324, -29.3162, 10.971, 0.59", "4.93631, -30.5951, 12.4878, 0.59", "5.61355, -31.0984, 13.0852, 0.59", "6.55841, -31.7659, 13.8895, 0.59", "7.57007, -32.417, 14.7068, 0.59", "8.72772, -33.0616, 15.5904, 0.59", "10.4927, -33.9207, 17.0062, 0.59", "11.9476, -34.5666, 18.262, 0.37", "13.4857, -35.1099, 19.7479, 0.37", "13.813, -35.1864, 20.1071, 0.37", "14.26, -35.2371, 20.6259, 0.37", "15.4453, -35.2838, 22.0218, 0.37", "16.202, -35.2725, 22.858, 0.37", "17.8898, -35.194, 24.7854, 0.37", "18.4491, -35.1661, 25.3992, 0.37", "19.7405, -35.1279, 26.7051, 0.37", "21.0145, -35.0953, 27.8348, 0.37", "22.3271, -35.065, 28.7515, 0.37", "23.1477, -35.0464, 29.1967, 0.37", "24.4143, -35.0069, 29.6364, 0.37", "34.5716, -38.6665, 35.9273, 0.37" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-5.99663, -25.6668, 3.17623, 0.29", "-6.12632, -25.755, 2.14466, 0.29", "-6.52805, -25.9841, -1.01654, 0.44", "-6.69567, -26.078, -2.36036, 0.44", "-6.8541, -26.2011, -3.43862, 0.66", "-6.98788, -26.3563, -4.26615, 0.66", "-7.14167, -26.5485, -4.9576, 0.66", "-7.44442, -26.9284, -5.74585, 0.88", "-7.59509, -27.1333, -5.99181, 0.88", "-8.38641, -28.1686, -6.76456, 1.03", "-9.12644, -29.0756, -7.17715, 1.03", "-10.3173, -30.3688, -7.60838, 1.18", "-11.7073, -31.7428, -7.99949, 1.18", "-12.6065, -32.6218, -8.21359, 1.18", "-14.4137, -34.4528, -8.62906, 0.88", "-16.1704, -36.3025, -9.03201, 0.88", "-18.0976, -38.3555, -9.59709, 0.88", "-19.8398, -40.3121, -10.2594, 0.88", "-20.7624, -41.376, -10.705, 0.88", "-21.9513, -42.7915, -11.4792, 0.59", "-22.4792, -43.4348, -11.9728, 0.59", "-23.6725, -45.0129, -13.4637, 0.59", "-24.4111, -46.1266, -14.5358, 0.59", "-24.7062, -46.5944, -15.0114, 0.81", "-25.3751, -47.6629, -16.0774, 0.81", "-25.8875, -48.5177, -16.8627, 0.81", "-26.6187, -49.8987, -17.9379, 0.81", "-27.6285, -52.0121, -19.3676, 0.59", "-28.53, -53.9157, -20.6316, 0.59", "-28.9714, -54.8059, -21.2156, 0.59", "-29.3056, -55.4149, -21.6401, 0.59", "-30.1977, -56.8525, -22.6186, 0.74", "-31.0877, -58.0732, -23.5335, 0.74", "-31.9905, -59.194, -24.4934, 0.74", "-32.5713, -59.8971, -25.0903, 0.74", "-33.6525, -61.1532, -26.1823, 0.96", "-34.9558, -62.6094, -27.438, 1.11", "-36.5461, -64.4375, -28.9828, 1.11", "-37.3513, -65.4281, -29.7683, 1.11", "-38.0399, -66.2798, -30.4493, 1.11", "-39.0914, -67.5838, -31.5206, 0.88", "-39.7396, -68.3174, -32.1779, 0.88", "-40.5765, -69.1481, -33.0861, 0.88", "-41.4438, -69.9363, -33.9961, 0.88", "-42.2891, -70.6495, -34.8766, 0.88", "-43.4162, -71.4647, -36.0492, 0.88", "-44.7985, -72.3496, -37.4222, 0.88", "-45.9403, -73.0502, -38.5052, 0.88", "-46.6978, -73.4844, -39.173, 1.11", "-47.838, -74.1196, -40.1405, 1.11", "-50.4475, -75.6355, -42.3061, 0.96", "-51.3171, -76.1939, -43.0761, 0.66", "-52.5718, -77.1762, -44.2442, 0.66", "-53.2294, -77.7956, -44.9289, 0.66", "-54.0513, -78.7638, -45.923, 0.66", "-54.6719, -79.7265, -46.7922, 0.88", "-55.8116, -82.0537, -48.5905, 0.88", "-56.484, -83.534, -49.6422, 0.88", "-57.1876, -85.0428, -50.6633, 0.88", "-57.7516, -86.2459, -51.4536, 0.88", "-58.2337, -87.2373, -52.0765, 0.88", "-59.3133, -89.3069, -53.2845, 0.88", "-59.8375, -90.1921, -53.7498, 0.88", "-60.745, -91.4549, -54.4558, 1.03", "-61.5012, -92.3464, -54.9909, 1.03", "-62.4359, -93.2817, -55.7339, 1.03", "-63.1937, -93.9788, -56.3683, 0.74", "-63.845, -94.5351, -56.887, 0.74", "-64.7205, -95.249, -57.5965, 0.74", "-66.0269, -96.2894, -58.6509, 0.81", "-67.5309, -97.5391, -59.841, 0.88", "-68.4444, -98.3942, -60.6209, 0.88", "-69.2478, -99.2385, -61.3358, 0.88", "-70.285, -100.476, -62.352, 0.88", "-71.0878, -101.506, -63.1971, 0.88", "-71.9041, -102.543, -64.0504, 0.59", "-72.9905, -103.87, -65.1902, 0.88", "-74.0116, -105.049, -66.3196, 0.88", "-74.842, -105.983, -67.2144, 0.88", "-75.557, -106.77, -67.8803, 0.88", "-76.1327, -107.391, -68.3804, 0.88", "-76.9446, -108.278, -69.063, 0.88", "-77.6052, -109.068, -69.5748, 0.88", "-78.5773, -110.317, -70.3276, 0.88", "-79.9286, -112.065, -71.3416, 0.88", "-80.9324, -113.321, -72.072, 0.74", "-81.682, -114.215, -72.6413, 0.74", "-82.9606, -115.679, -73.6229, 0.74", "-83.849, -116.624, -74.2882, 0.74", "-84.9035, -117.693, -75.0969, 0.74", "-86.1819, -118.946, -76.0799, 0.74", "-87.8148, -120.446, -77.2596, 0.74", "-89.3487, -121.738, -78.29, 0.74", "-90.6656, -122.767, -79.1409, 0.74", "-92.7557, -124.412, -80.4721, 0.52", "-93.7956, -125.271, -81.1643, 0.52", "-94.9993, -126.345, -81.9741, 0.52", "-96.0342, -127.32, -82.6931, 0.52", "-97.2836, -128.572, -83.6202, 0.52", "-97.8878, -129.267, -84.0404, 0.52", "-99.3098, -131.096, -84.9311, 0.52", "-100.445, -132.678, -85.6089, 0.52", "-101.973, -134.948, -86.4735, 0.52", "-103.106, -136.645, -87.048, 0.52", "-104.999, -139.345, -87.9131, 0.52", "-105.701, -140.249, -88.2216, 0.52", "-106.914, -141.617, -88.7352, 0.52", "-108.316, -143.023, -89.3444, 0.74", "-109.556, -144.202, -89.7663, 0.74", "-110.936, -145.364, -90.3228, 0.88", "-111.925, -146.038, -90.7904, 0.88", "-113.295, -146.936, -91.4833, 0.88", "-114.07, -147.477, -91.9033, 0.88", "-115.978, -149.019, -93.0009, 1.11", "-118.571, -151.572, -94.6423, 1.11", "-119.747, -152.97, -95.5211, 0.74", "-120.96, -154.665, -96.6469, 0.74", "-121.87, -156.057, -97.5837, 0.96", "-123.182, -158.127, -99.0054, 0.96", "-124.136, -159.578, -100.046, 0.81", "-125.599, -161.699, -101.494, 0.81", "-127.094, -163.551, -102.877, 0.66", "-128.932, -165.322, -104.443, 0.66", "-129.985, -166.101, -105.253, 0.66", "-131.134, -166.73, -106.027, 0.66", "-132.824, -167.459, -107.004, 0.66", "-135.245, -168.301, -108.344, 0.66", "-136.658, -168.726, -109.211, 0.66", "-137.906, -169.114, -110.085, 0.66", "-139.45, -169.697, -111.302, 0.66", "-140.86, -170.35, -112.536, 0.66", "-143.283, -171.689, -114.862, 0.66", "-145.192, -172.934, -116.891, 0.44", "-146.414, -173.809, -118.224, 0.44", "-147.916, -174.949, -119.956, 0.44", "-148.599, -175.472, -120.781, 0.52", "-149.749, -176.285, -122.131, 0.52", "-150.777, -176.931, -123.282, 0.52", "-151.889, -177.462, -124.556, 0.52", "-152.335, -177.603, -125.088, 0.59", "-153.698, -177.892, -126.774, 0.59", "-154.875, -178.074, -128.31, 0.59", "-156.041, -178.193, -129.823, 0.59", "-157.214, -178.31, -131.224, 0.59", "-157.925, -178.409, -132.004, 0.59", "-158.895, -178.597, -132.949, 0.59", "-159.386, -178.701, -133.367, 0.59", "-160.45, -178.91, -134.179, 0.59", "-162.092, -179.174, -135.304, 0.37", "-163.48, -179.295, -136.182, 0.37", "-164.691, -179.3, -136.921, 0.37", "-165.947, -179.218, -137.641, 0.37", "-167.434, -179.039, -138.404, 0.37", "-168.94, -178.779, -139.194, 0.37", "-170.438, -178.475, -139.959, 0.37", "-171.534, -178.263, -140.445, 0.37", "-172.155, -178.191, -140.657, 0.52", "-174.082, -178.131, -141.302, 0.66", "-177.007, -178.227, -142.154, 0.66", "-177.782, -178.274, -142.342, 0.66", "-179.01, -178.371, -142.622, 0.66", "-182.208, -178.626, -143.431, 0.15", "-185.222, -178.849, -144.289, 0.37", "-187.448, -178.975, -144.945, 0.52", "-189.415, -179.034, -145.472, 0.52", "-191.679, -179.047, -146.134, 0.52", "-194.123, -179.009, -146.918, 0.52", "-195.886, -178.948, -147.602, 0.52", "-198.033, -178.899, -148.484, 0.52", "-199.213, -178.889, -149.051, 0.52", "-200.711, -178.903, -149.789, 0.52", "-201.565, -178.921, -150.228, 0.52", "-204.192, -179.013, -151.641, 0.52", "-205.922, -179.111, -152.712, 0.52", "-206.377, -179.149, -153.026, 0.52", "-207.0, -179.204, -153.47, 0.52", "-209.373, -179.489, -155.196, 0.52", "-210.601, -179.717, -156.133, 0.52", "-212.003, -180.071, -157.3, 0.52", "-213.42, -180.501, -158.592, 0.52", "-214.522, -180.878, -159.685, 0.52", "-216.16, -181.471, -161.343, 0.29", "-217.506, -181.989, -162.679, 0.29", "-219.051, -182.621, -164.313, 0.29", "-219.531, -182.848, -164.874, 0.29", "-220.782, -183.547, -166.611, 0.29" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-5.99663, -25.6668, 3.17623, 2.06", "-6.67151, -27.4364, 3.74674, 2.06", "-7.05733, -28.4889, 3.99513, 2.06", "-7.73925, -30.3818, 4.3199, 2.06", "-8.33194, -32.0067, 4.56573, 1.99", "-9.16971, -34.235, 4.95758, 1.99", "-10.2342, -37.0097, 5.49933, 1.99", "-11.3945, -39.9647, 6.04231, 1.99", "-12.7472, -43.3628, 6.66825, 1.99", "-13.6985, -45.7596, 7.08797, 1.99", "-14.7084, -48.2959, 7.56262, 1.99", "-15.7339, -50.8219, 8.10822, 1.99", "-16.0924, -51.6556, 8.32735, 1.99", "-16.8087, -53.2374, 8.84327, 1.99" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-78.9241, -67.5545, 53.6324, 0.07", "-85.5978, -74.2506, 59.1057, 0.07", "-91.8807, -80.6114, 65.3823, 0.07", "-97.8754, -88.1572, 70.5259, 0.07", "-104.136, -94.3566, 76.9837, 0.07", "-108.482, -101.735, 83.7656, 0.07", "-113.107, -109.015, 90.4698, 0.07", "-116.637, -116.412, 97.6922, 0.07", "-121.142, -121.523, 106.23, 0.07", "-126.409, -127.838, 113.421, 0.07", "-131.093, -135.475, 119.671, 0.07", "-135.411, -142.422, 126.912, 0.07", "-140.524, -147.772, 134.948, 0.07", "-144.122, -154.035, 143.143, 0.07" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-78.9241, -67.5545, 53.6324, 0.29", "-85.4014, -74.1483, 58.2281, 0.07", "-90.0683, -81.7831, 63.3741, 0.07", "-94.6512, -90.5654, 66.276, 0.07", "-97.6324, -99.8513, 69.6576, 0.07", "-98.5015, -109.457, 73.3362, 0.07", "-97.5958, -118.52, 78.1931, 0.07", "-97.9758, -127.473, 83.3158, 0.07", "-99.0785, -136.452, 88.2878, 0.07", "-100.102, -144.897, 94.1339, 0.07", "-101.364, -154.32, 98.1548, 0.07", "-102.093, -164.207, 101.031, 0.07", "-103.927, -173.957, 103.882, 0.07", "-106.701, -183.88, 104.516, 0.07", "-107.842, -194.089, 105.527, 0.07" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-0.17384, 26.0606, 4.24278, 0.88", "-0.196383, 27.4447, 4.72367, 0.88", "-0.14276, 28.4565, 5.13718, 1.11", "-0.0634916, 29.9521, 5.74846, 1.11", "-0.006285, 31.0315, 6.18961, 1.11", "0.0507235, 32.1071, 6.62923, 1.25", "0.156695, 34.1066, 7.44643, 1.25", "0.206927, 34.791, 7.80796, 1.25" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-0.17384, 26.0606, 4.24278, 0.81", "-1.09842, 27.3854, 4.28385, 0.81", "-2.23905, 28.9567, 4.34677, 0.81", "-3.57887, 30.7779, 4.45176, 0.81", "-4.86978, 32.5362, 4.58416, 0.66", "-6.16252, 34.2595, 4.80571, 0.66", "-6.74498, 35.0049, 4.96281, 0.37", "-7.49153, 35.9704, 5.26067, 0.22", "-8.39865, 37.0806, 5.73402, 0.22", "-8.81017, 37.5219, 5.97423, 0.37", "-9.87329, 38.4172, 6.7145, 0.37", "-11.2055, 39.4459, 7.7224, 0.37", "-12.0675, 40.1033, 8.37914, 0.22", "-12.6456, 40.5315, 8.80153, 0.22", "-13.2627, 40.9771, 9.22357, 0.22", "-14.8822, 42.1675, 10.2726, 0.29", "-17.3798, 44.0438, 11.7687, 0.52", "-18.6654, 45.0642, 12.5227, 0.52", "-20.0783, 46.2386, 13.4094, 0.52", "-20.3868, 46.509, 13.6138, 0.66", "-21.3619, 47.4036, 14.3466, 0.81", "-22.4032, 48.4589, 15.2083, 0.81", "-23.4599, 49.6067, 16.2125, 0.59", "-24.3071, 50.6438, 17.1185, 0.59", "-25.5691, 52.3651, 18.593, 0.59", "-27.2641, 54.8971, 20.6263, 0.59", "-27.7904, 55.7468, 21.2511, 0.07", "-28.2769, 56.4551, 21.7376, 0.07", "-28.6517, 56.8942, 22.0497, 0.07", "-29.3227, 57.5229, 22.5175, 0.15", "-30.1559, 58.1229, 22.9726, 0.15", "-30.888, 58.544, 23.2893, 0.15", "-34.0657, 60.1911, 24.5916, 0.37", "-36.7093, 61.522, 25.5464, 0.52", "-38.5187, 62.4594, 26.1742, 0.66", "-39.88, 63.1967, 26.6373, 0.44", "-41.116, 63.9108, 27.0522, 0.44", "-42.2728, 64.6368, 27.4452, 0.44", "-44.1335, 65.954, 28.0694, 0.44", "-45.5945, 67.0241, 28.5786, 0.44", "-47.0475, 68.1297, 29.1334, 0.44", "-47.5641, 68.5349, 29.3795, 0.44", "-49.1666, 69.7514, 30.2741, 0.44", "-50.02, 70.3576, 30.8044, 0.44", "-51.0116, 70.9929, 31.6086, 0.44", "-58.046, 77.5011, 36.7403, 0.44", "-64.2906, 83.2338, 43.5458, 0.44", "-69.0139, 89.456, 51.1055, 0.44", "-73.3196, 95.517, 59.0364, 0.44", "-78.8177, 99.5241, 67.5151, 0.44", "-85.5873, 102.984, 75.2854, 0.44", "-92.3475, 104.93, 83.5732, 0.44", "-97.9475, 107.732, 92.459, 0.44", "-102.695, 110.232, 101.913, 0.44", "-108.455, 113.698, 110.456, 0.44", "-114.009, 118.265, 118.609, 0.44", "-120.034, 122.447, 126.633, 0.44", "-126.226, 126.399, 134.647, 0.44" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "6.15433, 23.8639, -12.9705, 1.03", "7.58783, 25.1201, -13.609, 1.03", "8.69048, 25.9727, -14.1359, 1.25", "11.0285, 27.5685, -15.2681, 1.25", "12.9531, 28.7489, -16.166, 1.25", "14.7879, 29.763, -16.8839, 1.25", "16.8611, 30.7996, -17.5209, 1.25", "19.6863, 31.8433, -18.0731, 1.25", "21.3736, 32.2779, -18.1571, 0.96", "23.0875, 32.5987, -18.1203, 0.96", "25.86, 32.9569, -17.8429, 0.96", "28.0014, 33.1273, -17.4421, 0.96", "31.4882, 33.2832, -16.4242, 0.96", "35.5279, 33.3984, -14.8029, 0.96" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "6.15433, 23.8639, -12.9705, 0.59", "6.52363, 23.1482, -14.1995, 0.59", "7.13186, 21.6663, -16.8674, 0.59", "7.44085, 20.8114, -18.3361, 0.59", "7.69194, 20.0116, -19.6744, 0.59", "8.09716, 18.6238, -22.0977, 0.59", "8.57174, 17.0121, -24.9967, 0.59", "9.21921, 14.6334, -29.4082, 0.37", "9.70573, 12.7018, -32.9852, 0.37", "10.1886, 10.8654, -36.4239, 0.37", "10.8736, 8.42549, -41.2185, 0.37", "11.4791, 6.41087, -45.3823, 0.07", "12.0937, 4.50644, -49.8408, 0.07", "12.4118, 3.52681, -52.4405, 0.07", "12.6642, 2.71929, -55.0027, 0.07", "12.9634, 1.70519, -58.7501, 0.07", "13.085, 1.11844, -61.1996, 0.22", "13.2113, -0.380604, -68.2735, 0.22", "13.23, -0.834585, -70.5878, 0.37", "13.2653, -1.51474, -74.2145, 0.37", "13.2897, -1.81456, -75.826, 0.37", "13.3386, -2.07477, -77.1811, 0.37", "13.4504, -2.38575, -78.7971, 0.37", "13.7476, -2.82731, -81.0387, 0.37", "14.4565, -3.62787, -85.6775, 0.37", "14.8327, -3.96895, -88.0678, 0.37", "15.4159, -4.42386, -92.9772, 0.37", "15.5722, -4.51039, -95.4332, 0.37", "15.5584, -4.46119, -96.9587, 0.37", "15.3445, -4.25173, -98.9879, 0.37", "15.004, -3.96588, -100.457, 0.37", "13.6224, -2.85126, -104.392, 0.37", "12.8459, -2.25412, -106.129, 0.37", "12.1786, -1.76974, -107.563, 0.37", "11.4131, -1.23861, -109.283, 0.37", "10.5954, -0.59853, -111.52, 0.37", "10.0247, -0.0778432, -113.299, 0.37", "9.32567, 0.760071, -115.984, 0.37", "8.8211, 1.54636, -118.431, 0.37", "8.34081, 2.49611, -120.908, 0.37", "7.77609, 3.98128, -124.329, 0.37", "7.46949, 5.12476, -126.699, 0.37", "7.19535, 6.4602, -129.102, 0.37", "6.99027, 7.90711, -131.289, 0.37", "6.63481, 11.6082, -135.805, 0.07", "6.44913, 14.4629, -138.723, 0.07", "6.39011, 16.382, -140.515, 0.07", "6.42202, 17.9766, -141.983, 0.07", "6.59773, 20.436, -144.27, 0.07", "7.09206, 24.1759, -147.881, 0.07", "7.31555, 25.119, -148.912, 0.07", "8.31527, 28.4219, -153.022, 0.07", "9.07165, 30.6234, -155.865, 0.07", "9.55643, 31.8969, -157.548, 0.07", "10.2015, 33.582, -159.752, 0.07", "11.2149, 36.2708, -163.16, 0.07", "11.9612, 38.5634, -165.751, 0.07", "13.0665, 42.9195, -169.851, 0.07", "13.5516, 45.3405, -171.81, 0.07", "13.8342, 47.3056, -173.294, 0.07", "13.9719, 48.7964, -174.38, 0.07", "14.0728, 50.1351, -175.324, 0.07", "14.3706, 52.3146, -177.041, 0.07", "14.6928, 53.5569, -178.273, 0.07", "16.3119, 56.6438, -181.869, 0.07", "17.5783, 58.0785, -183.772, 0.07", "18.9935, 59.1827, -185.287, 0.07", "21.6156, 60.7101, -187.332, 0.07", "23.0641, 61.3876, -188.135, 0.07", "27.042, 63.0435, -189.643, 0.07", "29.0808, 63.8374, -190.043, 0.07", "31.5582, 64.798, -190.266, 0.07", "33.4399, 65.5284, -190.3, 0.07", "35.5739, 66.2926, -190.146, 0.07", "37.8816, 67.0081, -189.924, 0.07", "40.2736, 67.6166, -189.835, 0.07", "43.5746, 68.2849, -190.001, 0.07", "47.8317, 68.9596, -190.617, 0.07", "50.2263, 69.247, -191.149, 0.07", "52.9316, 69.4966, -191.97, 0.07", "59.0521, 70.0748, -194.349, 0.07", "60.4499, 70.2428, -194.98, 0.07", "62.9442, 70.5879, -196.312, 0.07", "64.1648, 70.806, -197.085, 0.07", "65.4348, 71.1291, -197.977, 0.07", "67.1426, 71.7242, -199.187, 0.07", "68.8861, 72.6926, -200.468, 0.07" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-17.8489, 26.2447, -8.31312, 0.29", "-19.7145, 27.5244, -9.78689, 0.29", "-22.4071, 29.1741, -11.9293, 0.29", "-23.8512, 30.0017, -13.0603, 0.07", "-24.9309, 30.6033, -13.8806, 0.07", "-25.2974, 30.8125, -14.1577, 0.07", "-27.1928, 31.9444, -15.649, 0.37", "-27.9274, 32.364, -16.246, 0.37", "-28.9385, 32.9506, -17.0809, 0.37", "-29.7876, 33.4844, -17.8761, 0.37", "-30.7982, 34.114, -18.8884, 0.59", "-31.691, 34.6311, -19.8197, 0.59", "-32.4526, 35.004, -20.6275, 0.59", "-33.9874, 35.6119, -22.1861, 0.59", "-35.3097, 36.0612, -23.5512, 0.59", "-37.056, 36.5361, -25.3451, 0.81", "-38.1945, 36.7549, -26.4604, 0.81", "-39.4304, 36.9156, -27.5923, 0.81", "-40.952, 37.0253, -28.9541, 1.03" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-17.8489, 26.2447, -8.31312, 0.29", "-18.933, 26.2016, -8.55377, 0.29", "-19.714, 26.1734, -8.71857, 0.29", "-20.7971, 26.1468, -8.93806, 0.29", "-21.9689, 26.1379, -9.16736, 0.52", "-23.7044, 26.1432, -9.49759, 0.88", "-25.112, 26.1707, -9.75785, 0.37", "-25.8297, 26.2378, -9.87946, 0.37", "-26.6191, 26.3572, -9.98786, 0.37", "-27.2606, 26.4849, -10.0569, 0.37", "-28.1694, 26.7001, -10.1314, 0.37", "-28.918, 26.8942, -10.1794, 0.37", "-30.5365, 27.3644, -10.2757, 0.37", "-31.9899, 27.7755, -10.3228, 0.37", "-32.8458, 28.0078, -10.3353, 0.37", "-34.7499, 28.521, -10.3399, 0.15", "-35.8634, 28.8212, -10.3127, 0.15", "-37.2031, 29.1828, -10.2518, 0.15", "-39.1613, 29.7045, -10.1138, 0.15", "-41.2126, 30.2764, -9.96554, 0.15", "-42.5967, 30.6665, -9.83231, 0.15", "-43.5646, 30.9481, -9.71349, 0.29", "-44.3569, 31.19, -9.60254, 0.29", "-45.9669, 31.7053, -9.35965, 0.15", "-47.0002, 32.0698, -9.21782, 0.37", "-47.6703, 32.2786, -9.12621, 0.37", "-48.5544, 32.5158, -9.03374, 0.37", "-49.2868, 32.6789, -8.97209, 0.37", "-50.6129, 32.9184, -8.8684, 0.37", "-51.8869, 33.1138, -8.78019, 0.37", "-54.0381, 33.4307, -8.64181, 0.59", "-55.7606, 33.7004, -8.54685, 0.59", "-56.8644, 33.91, -8.45489, 0.44", "-57.5875, 34.0789, -8.37162, 0.44", "-58.3693, 34.2953, -8.27105, 0.44", "-60.1037, 34.8636, -8.03536, 0.29", "-61.288, 35.3498, -7.87228, 0.29", "-62.9397, 36.1104, -7.65043, 0.37", "-64.0707, 36.6516, -7.53861, 0.07", "-64.8872, 37.0363, -7.47794, 0.07", "-65.8256, 37.4511, -7.4454, 0.07", "-66.5556, 37.7432, -7.45962, 0.29", "-67.4972, 38.0959, -7.53214, 0.29", "-68.7814, 38.5517, -7.70655, 0.29", "-69.2147, 38.7117, -7.76615, 0.29", "-70.4734, 39.2453, -7.90835, 0.29", "-71.3094, 39.633, -7.99643, 0.59", "-72.621, 40.2718, -8.12945, 0.59", "-73.5109, 40.7163, -8.21702, 0.15", "-74.1645, 41.0492, -8.27937, 0.15", "-75.0806, 41.4807, -8.35972, 0.15", "-75.7488, 41.7963, -8.41843, 0.15", "-76.6562, 42.2274, -8.50268, 0.22", "-77.9911, 42.8588, -8.63242, 0.22", "-78.7057, 43.1975, -8.70385, 0.22", "-80.3389, 43.9456, -8.94935, 0.22", "-81.793, 44.6196, -9.2087, 0.22", "-83.2681, 45.3263, -9.49636, 0.22", "-84.3976, 45.8879, -9.73596, 0.22", "-85.3303, 46.3441, -9.94257, 0.22", "-88.0355, 47.6267, -10.5502, 0.22", "-89.7379, 48.4235, -10.9401, 0.22", "-90.9205, 48.969, -11.2008, 0.22", "-93.4315, 50.1681, -11.7525, 0.22", "-95.6776, 51.2931, -12.2286, 0.22", "-96.9981, 51.9856, -12.4685, 0.22", "-98.18, 52.6348, -12.6421, 0.22", "-100.006, 53.7068, -12.8999, 0.22", "-101.857, 54.9143, -13.1486, 0.22", "-103.767, 56.2772, -13.3665, 0.22", "-105.963, 57.9483, -13.5836, 0.22", "-107.299, 58.9778, -13.6998, 0.22", "-109.345, 60.541, -13.8529, 0.22", "-110.938, 61.749, -13.9575, 0.22", "-112.183, 62.713, -14.0241, 0.22", "-113.778, 64.0194, -14.1192, 0.22", "-114.952, 65.044, -14.1991, 0.22", "-115.783, 65.8305, -14.2461, 0.22", "-118.494, 68.5848, -14.2995, 0.22", "-119.517, 69.7052, -14.2924, 0.22", "-120.701, 71.0926, -14.1855, 0.22", "-121.978, 72.734, -13.934, 0.22", "-122.88, 73.9555, -13.6706, 0.22", "-123.548, 74.8699, -13.434, 0.22", "-123.943, 75.4186, -13.2695, 0.22", "-125.888, 77.8622, -12.693, 0.22", "-126.357, 78.4087, -12.6046, 0.22", "-128.104, 80.4743, -12.4173, 0.22", "-129.605, 82.3041, -12.3509, 0.22", "-131.023, 84.193, -12.3651, 0.22", "-132.748, 86.7603, -12.3703, 0.37", "-134.161, 89.1397, -12.3832, 0.37", "-135.35, 91.3688, -12.3172, 0.37", "-135.856, 92.5692, -12.2193, 0.37", "-136.552, 94.6518, -11.949, 0.07", "-137.216, 97.2564, -11.4952, 0.07", "-137.453, 98.7652, -11.153, 0.07", "-137.629, 101.28, -10.5986, 0.07", "-137.759, 104.377, -9.89605, 0.07", "-137.776, 105.783, -9.58237, 0.07", "-137.722, 107.186, -9.29021, 0.07", "-137.548, 108.72, -9.04667, 0.07", "-137.197, 110.655, -8.75708, 0.07" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "5.40654, 47.5527, -1.84882, 0.401528", "7.11726, 62.4548, -1.84882, 0.401528", "8.82798, 77.3569, -1.84882, 0.401528" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "34.5716, -38.6665, 35.9273, 0.07", "43.8968, -41.9371, 43.7749, 0.07", "51.9934, -47.2765, 51.8481, 0.07", "60.4268, -53.4769, 58.8959, 0.07" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "34.5716, -38.6665, 35.9273, 0.29", "46.094, -42.7159, 45.3567, 0.07", "57.8996, -44.7666, 55.0778, 0.07" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-16.8087, -53.2374, 8.84327, 0.96", "-15.9462, -56.1271, 9.60807, 0.96", "-15.3081, -58.2641, 10.107, 0.96", "-14.6547, -60.8825, 10.6798, 0.96", "-13.8204, -65.0674, 11.5587, 1.18", "-13.5057, -67.1542, 11.979, 1.18", "-13.2421, -69.3254, 12.408, 1.18", "-13.1386, -70.5637, 12.6633, 1.18", "-12.9969, -72.6235, 13.0458, 1.03", "-12.9067, -73.8671, 13.2767, 1.03", "-12.6737, -75.8274, 13.7371, 1.03", "-12.4448, -76.7956, 14.0316, 1.03", "-11.83, -78.9173, 14.7544, 1.03", "-10.8243, -81.6872, 15.7622, 1.03", "-10.0787, -83.2908, 16.3718, 1.03", "-8.88699, -85.4803, 17.2532, 1.03", "-7.37663, -87.8995, 18.3134, 1.03" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-16.8087, -53.2374, 8.84327, 1.33", "-17.0744, -54.361, 7.81883, 1.33", "-17.5227, -56.256, 6.09098, 1.33", "-18.014, -58.3327, 4.19747, 1.33", "-18.2137, -59.177, 3.42757, 1.4" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "0.206927, 34.791, 7.80796, 0.66", "1.42336, 36.9336, 7.78022, 0.66", "2.61322, 38.5863, 7.87918, 0.66", "4.02792, 40.255, 8.08384, 0.88", "5.84125, 42.394, 8.34618, 0.88", "6.87889, 43.618, 8.49629, 0.88", "8.53116, 45.5669, 8.73532, 1.03", "9.71868, 46.707, 8.99253, 0.74", "10.7771, 47.534, 9.22611, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "0.206927, 34.791, 7.80796, 0.59", "-0.779567, 36.1047, 8.43847, 0.59", "-1.6193, 37.2649, 9.15137, 0.59", "-2.28189, 38.2351, 9.84181, 0.74", "-3.00674, 39.3697, 10.7182, 1.11", "-3.5554, 40.3166, 11.518, 1.11", "-4.15996, 41.4762, 12.5619, 1.11", "-4.53156, 42.4172, 13.5696, 1.25", "-4.7267, 43.2262, 14.55, 1.47", "-4.77686, 43.9102, 15.4266, 1.47", "-4.67566, 44.7206, 16.4608, 1.47", "-4.51584, 45.2455, 17.0763, 1.47", "-4.23323, 45.9082, 17.7382, 1.47", "-3.88653, 46.6677, 18.395, 1.47", "-3.54398, 47.4217, 18.9376, 1.47", "-3.1256, 48.3347, 19.5384, 1.62", "-2.66508, 49.4117, 20.1602, 1.62", "-2.23359, 50.4861, 20.7239, 1.69", "-1.33581, 52.9149, 21.8742, 1.69", "-0.952803, 54.0941, 22.3977, 1.69" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "35.5279, 33.3984, -14.8029, 0.81", "38.0493, 33.7558, -13.7035, 0.81", "39.3676, 34.0539, -13.0483, 0.81", "40.7786, 34.472, -12.231, 0.52", "41.8347, 34.867, -11.5755, 0.52", "42.9076, 35.3201, -10.9086, 0.52", "43.8544, 35.7262, -10.3034, 0.74", "44.9797, 36.2123, -9.56757, 0.74", "46.2333, 36.7614, -8.7248, 0.74", "47.4476, 37.2462, -7.9572, 0.74", "49.7644, 37.9526, -6.56814, 0.37", "50.5486, 38.1179, -6.14293, 0.37", "52.603, 38.4551, -5.09339, 0.66", "53.1261, 38.52, -4.85402, 0.66", "55.244, 38.6835, -3.96135, 1.03", "56.6823, 38.7092, -3.37468, 1.03", "58.8816, 38.664, -2.53903, 1.03" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "35.5279, 33.3984, -14.8029, 0.59", "36.3634, 34.2407, -15.0846, 0.59", "37.2975, 35.1823, -15.3994, 0.59", "38.8383, 36.7355, -15.9187, 0.59", "39.4307, 37.3327, -16.1185, 0.59", "40.8101, 38.7232, -16.5834, 0.59", "41.9086, 39.8305, -16.9536, 0.59" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-40.952, 37.0253, -28.9541, 0.74", "-42.6678, 38.4408, -31.5381, 0.74", "-44.1802, 39.737, -33.9151, 0.74", "-44.8984, 40.4273, -35.104, 0.74", "-46.7356, 42.2225, -38.0606, 0.74", "-47.4794, 42.9186, -39.2029, 0.52", "-48.146, 43.5093, -40.1475, 0.52", "-49.0151, 44.2974, -41.2382, 0.52", "-50.5231, 45.6015, -42.7779, 0.52", "-51.5141, 46.348, -43.6041, 0.52", "-52.4579, 46.9571, -44.214, 0.52", "-53.9132, 47.8531, -44.9925, 0.15", "-55.2201, 48.6247, -45.5846, 0.15", "-56.957, 49.5943, -46.2686, 0.15", "-58.9644, 50.6446, -47.0025, 0.15", "-60.4155, 51.3969, -47.556, 0.15", "-61.6206, 52.0106, -48.0353, 0.15", "-62.472, 52.3856, -48.4021, 0.15", "-64.9053, 53.2559, -49.5301, 0.29", "-65.644, 53.4584, -49.9251, 0.29", "-66.9816, 53.7246, -50.7759, 0.29", "-67.8098, 53.8254, -51.35, 0.29", "-69.6751, 53.9507, -52.7089, 0.29", "-70.6072, 54.0159, -53.3994, 0.29", "-72.5646, 54.2283, -54.8577, 0.44", "-73.805, 54.4533, -55.7929, 0.44", "-75.1879, 54.8682, -56.7701, 0.44", "-75.8423, 55.1658, -57.2505, 0.22", "-77.3071, 56.1034, -58.3577, 0.22", "-78.5769, 57.0996, -59.3657, 0.22", "-79.1317, 57.615, -59.8615, 0.22", "-80.6633, 59.1665, -61.5191, 0.22", "-82.0821, 60.6359, -63.2771, 0.22", "-82.7665, 61.3396, -64.2095, 0.22", "-84.1179, 62.6565, -66.066, 0.22", "-85.1475, 63.6616, -67.4779, 0.22", "-86.7912, 65.2958, -69.7147, 0.22", "-88.1842, 66.689, -71.7403, 0.22", "-89.6583, 68.0693, -73.702, 0.22", "-92.1471, 70.1892, -76.6268, 0.22", "-94.0315, 71.5105, -78.4563, 0.22", "-95.3272, 72.2366, -79.4865, 0.22", "-98.6369, 73.7224, -81.7175, 0.22", "-101.713, 74.8141, -83.5536, 0.22", "-104.998, 75.7672, -85.2783, 0.22", "-109.651, 76.8337, -87.5423, 0.07", "-112.535, 77.3657, -88.8874, 0.07", "-114.386, 77.6556, -89.7162, 0.07", "-118.338, 78.2286, -91.4934, 0.07", "-120.1, 78.4882, -92.3782, 0.07", "-122.882, 78.945, -93.8623, 0.07", "-125.498, 79.4467, -95.2233, 0.07", "-129.562, 80.271, -97.2186, 0.07", "-132.844, 80.9639, -98.7741, 0.07", "-135.25, 81.5333, -99.8854, 0.07", "-136.997, 82.0192, -100.697, 0.07", "-140.494, 83.173, -102.3, 0.07", "-143.572, 84.3471, -103.764, 0.07", "-146.523, 85.6206, -105.304, 0.07", "-149.579, 87.0291, -107.051, 0.07", "-152.265, 88.3564, -108.747, 0.07", "-154.558, 89.6121, -110.203, 0.07", "-156.422, 90.7683, -111.35, 0.07", "-158.082, 91.9272, -112.324, 0.07", "-159.621, 93.0941, -113.174, 0.07", "-161.862, 94.9959, -114.416, 0.07", "-166.415, 99.3961, -116.989, 0.07", "-168.961, 102.161, -118.544, 0.07", "-170.534, 104.005, -119.554, 0.07", "-172.066, 105.939, -120.59, 0.07", "-173.769, 108.266, -121.849, 0.07", "-175.128, 110.294, -123.041, 0.07", "-176.708, 112.899, -124.749, 0.07", "-177.676, 114.438, -125.831, 0.07", "-178.592, 115.814, -126.804, 0.07", "-179.724, 117.438, -127.947, 0.07", "-180.727, 118.756, -128.898, 0.07", "-181.81, 120.145, -129.891, 0.07", "-183.286, 122.039, -131.098, 0.07" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-40.952, 37.0253, -28.9541, 0.44", "-41.9019, 37.1889, -29.3764, 0.44", "-42.7199, 37.3745, -29.7035, 0.44", "-44.0112, 37.6675, -30.2199, 0.44", "-45.1203, 37.9192, -30.6635, 0.44", "-46.6977, 38.2771, -31.2943, 0.44", "-48.8943, 38.7756, -32.1727, 0.44", "-51.1196, 39.4119, -33.117, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "60.4268, -53.4769, 58.8959, 0.07", "61.8907, -48.9392, 70.8708, 0.07", "62.0146, -46.4616, 83.5189, 0.07", "64.1403, -43.5582, 95.8956, 0.07", "68.6302, -39.4913, 107.272, 0.07", "71.0474, -37.1273, 119.71, 0.07", "73.2977, -35.899, 132.341, 0.07", "75.7792, -34.659, 144.928, 0.07", "78.4396, -30.6612, 156.89, 0.07", "79.8105, -25.8301, 168.76, 0.07", "83.6138, -18.9163, 178.952, 0.07", "88.8606, -10.0765, 186.727, 0.07", "93.9647, -1.27968, 194.645, 0.07", "96.8142, 7.54892, 203.593, 0.07", "98.5655, 14.9901, 213.97, 0.07", "98.1774, 23.8278, 223.345, 0.07", "99.9534, 34.3344, 230.596, 0.07", "103.516, 43.832, 238.549, 0.07", "106.853, 52.8429, 247.139, 0.07", "111.318, 61.6542, 255.419, 0.07", "113.965, 72.1577, 262.404, 0.07", "117.199, 81.6074, 270.551, 0.07", "119.305, 91.4009, 278.662, 0.07", "119.381, 99.982, 288.279, 0.07", "117.63, 109.211, 297.105, 0.07", "115.307, 116.47, 307.499, 0.07", "112.86, 121.526, 319.1, 0.07", "111.842, 127.528, 330.461, 0.07" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "60.4268, -53.4769, 58.8959, 0.07", "68.582, -59.4173, 59.517, 0.07", "75.6622, -66.3351, 61.5661, 0.07", "81.3582, -74.5678, 62.9659, 0.07", "87.1034, -82.2962, 66.0394, 0.07", "92.3787, -90.2883, 69.2765, 0.07", "97.4027, -97.8544, 73.7145, 0.07", "100.721, -105.314, 79.675, 0.07", "105.194, -111.803, 86.0051, 0.07", "109.561, -118.204, 92.4962, 0.07", "112.489, -126.485, 97.4996, 0.07", "114.234, -135.674, 101.333, 0.07", "117.077, -144.289, 105.792, 0.07", "119.184, -153.508, 109.361, 0.07", "121.42, -162.274, 113.872, 0.07", "123.63, -170.587, 119.181, 0.07", "124.881, -178.836, 124.888, 0.07", "127.983, -187.364, 129.343, 0.07", "130.502, -195.973, 134.002, 0.07", "132.609, -204.599, 138.834, 0.07", "133.638, -213.494, 143.524, 0.07", "132.504, -221.466, 149.635, 0.07", "130.526, -229.026, 156.048, 0.07" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "57.8996, -44.7666, 55.0778, 0.07", "63.8608, -46.8237, 62.8118, 0.07", "70.1973, -50.4735, 69.6023, 0.07" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "57.8996, -44.7666, 55.0778, 0.07", "61.4909, -46.342, 61.0657, 0.07", "64.053, -48.3474, 67.4414, 0.07", "65.4116, -50.7063, 74.0615, 0.07", "66.4198, -53.385, 80.6222, 0.07", "67.5188, -54.7598, 87.5603, 0.07", "69.1256, -56.7294, 94.2517, 0.07", "69.7152, -58.2297, 101.225, 0.07", "69.4451, -60.3776, 108.048, 0.07", "70.2175, -62.7269, 114.765, 0.07", "70.6811, -65.5413, 121.33, 0.07", "71.8705, -68.8572, 127.561, 0.07", "73.1403, -70.8342, 134.322, 0.07", "75.8541, -73.1321, 140.534, 0.07", "78.4451, -75.1339, 146.9, 0.07", "79.9682, -77.7117, 153.401, 0.07", "81.095, -81.3186, 159.48, 0.07", "81.7418, -84.2919, 165.959, 0.07", "81.678, -87.8139, 172.19, 0.07", "81.48, -89.8993, 179.035, 0.07", "82.0235, -92.0562, 185.838, 0.07", "82.4692, -94.8904, 192.396, 0.07", "83.3476, -97.0752, 199.156, 0.07", "84.0812, -100.11, 205.597, 0.07" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-7.37663, -87.8995, 18.3134, 0.81", "-7.02266, -88.2866, 18.5778, 0.81", "-6.68585, -88.6014, 18.9458, 0.81", "-6.29698, -88.9557, 19.4369, 0.81", "-6.10254, -89.1264, 19.6671, 0.81", "-5.65295, -89.531, 20.1765, 0.81", "-4.82644, -90.3192, 21.0777, 0.81", "-4.17522, -90.9619, 21.7784, 0.81", "-3.8478, -91.2877, 22.1085, 0.81", "-3.2878, -91.8043, 22.6432, 0.52", "-2.96126, -92.0965, 22.9425, 0.52", "-2.5738, -92.4554, 23.272, 0.52", "-2.37594, -92.6589, 23.3934, 0.52", "-2.09862, -92.9825, 23.5394, 0.52", "-1.64852, -93.5787, 23.8188, 0.66", "-1.39571, -94.0044, 24.0528, 0.66", "-1.26104, -94.3099, 24.2425, 0.66", "-1.15716, -94.7281, 24.5217, 0.66", "-1.11984, -95.2595, 24.9085, 0.66", "-1.18102, -95.719, 25.267, 0.81", "-1.30763, -96.1306, 25.6107, 0.81", "-1.49849, -96.5347, 25.993, 0.66", "-1.69075, -96.8869, 26.3572, 0.66", "-1.89696, -97.2191, 26.7369, 0.66", "-2.13234, -97.511, 27.0923, 0.37", "-2.35713, -97.7288, 27.3785, 0.37", "-2.70759, -98.0087, 27.7816, 0.37", "-1.9567, -101.949, 30.9463, 0.37", "-0.0585603, -105.154, 34.4427, 0.37", "2.24797, -108.629, 37.3939, 0.37", "4.57741, -112.63, 39.5538, 0.37", "6.42607, -116.86, 41.744, 0.37", "7.60662, -121.297, 43.9851, 0.37", "8.17011, -125.651, 46.5986, 0.37", "9.24349, -129.496, 49.7874, 0.37", "9.46448, -133.608, 52.8118, 0.37", "8.8548, -137.851, 55.5913, 0.37", "8.11427, -142.318, 57.9592, 0.37", "8.46857, -146.722, 60.5247, 0.37", "9.65571, -150.999, 63.0548, 0.37", "9.94135, -154.868, 66.3796, 0.37", "9.75102, -158.394, 70.0714, 0.37", "9.32224, -161.746, 73.9039, 0.37", "9.26417, -165.527, 77.3398, 0.37", "8.83129, -168.574, 81.418, 0.37", "8.70063, -171.964, 85.2383, 0.37" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-7.37663, -87.8995, 18.3134, 1.03", "-8.43192, -88.9861, 20.6796, 1.03", "-9.10774, -89.8339, 22.4351, 1.03", "-9.66936, -90.7817, 24.2914, 1.03", "-10.0514, -91.6074, 25.7838, 0.96", "-10.2828, -92.232, 26.802, 0.96", "-10.5188, -93.0906, 28.035, 0.96", "-10.7051, -94.0815, 29.2039, 0.66", "-10.8819, -95.9991, 31.0898, 0.66", "-10.8887, -97.0558, 32.0336, 0.66", "-10.8594, -98.1931, 33.0556, 0.66", "-10.8981, -99.6336, 34.3496, 0.66", "-10.978, -100.499, 35.0913, 0.66", "-11.0882, -101.278, 35.7404, 0.66", "-11.27, -102.279, 36.5863, 0.37", "-11.5222, -103.3, 37.5729, 0.37", "-11.8281, -104.201, 38.6423, 0.52", "-12.206, -105.059, 39.8583, 0.52", "-12.6018, -105.962, 41.2218, 0.37", "-12.7777, -106.453, 41.9653, 0.37", "-12.9234, -106.934, 42.6417, 0.37", "-13.06, -107.503, 43.4244, 0.37", "-13.1091, -107.725, 43.7731, 0.37", "-13.2962, -108.082, 44.4519, 0.37", "-13.5231, -108.384, 45.1229, 0.37", "-13.6085, -114.517, 52.8528, 0.37", "-13.3024, -120.508, 60.6886, 0.37", "-13.9357, -127.855, 67.2455, 0.37", "-14.505, -136.52, 71.9324, 0.37", "-15.9958, -145.673, 75.3046, 0.37", "-16.6074, -155.261, 77.5581, 0.37", "-17.5151, -164.65, 80.4551, 0.37", "-18.5822, -174.22, 82.6122, 0.37", "-18.645, -184.068, 83.2298, 0.37", "-17.9411, -193.876, 84.051, 0.37", "-16.3736, -203.38, 86.1977, 0.37", "-14.7518, -212.536, 89.5009, 0.37", "-11.6955, -221.173, 93.1649, 0.37", "-7.20173, -229.173, 96.7965, 0.37", "-1.24986, -236.062, 100.602, 0.37", "4.89521, -241.29, 106.284, 0.37", "12.1935, -246.077, 110.888, 0.37", "19.3473, -251.143, 115.419, 0.37", "25.8368, -257.507, 119.261, 0.37", "32.1158, -264.572, 122.096, 0.37" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-18.2137, -59.177, 3.42757, 1.18", "-18.6728, -59.965, 2.4253, 1.18", "-19.279, -61.2757, 0.711449, 1.18", "-19.5695, -62.3785, -0.515431, 1.4", "-19.7395, -63.2126, -1.3485, 1.69", "-19.8925, -63.904, -2.02622, 1.69", "-20.2072, -65.2066, -3.24846, 1.69", "-20.3584, -65.8643, -3.84552, 1.69", "-20.7239, -67.7822, -5.34734, 1.4", "-20.8719, -68.5874, -5.94894, 1.4", "-21.172, -70.0537, -7.03706, 1.4", "-21.5399, -71.5018, -8.09358, 1.4", "-22.0107, -73.0067, -9.22248, 1.4", "-22.4599, -74.2965, -10.2196, 1.4", "-23.0086, -75.7374, -11.413, 1.55", "-23.3898, -76.842, -12.3261, 1.55", "-23.9111, -78.5451, -13.6896, 1.55", "-24.3942, -80.0524, -14.9707, 1.4" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-18.2137, -59.177, 3.42757, 0.88", "-19.3672, -59.7788, 3.95081, 0.88", "-19.9665, -60.0829, 4.22513, 0.88", "-20.6853, -60.4379, 4.55689, 0.66", "-22.0041, -61.0583, 5.17357, 0.66", "-23.1247, -61.5613, 5.70334, 0.66", "-23.9441, -61.9226, 6.09316, 0.81", "-25.1013, -62.4576, 6.63168, 0.81", "-25.697, -62.7834, 6.90458, 0.81", "-26.7525, -63.4606, 7.38239, 0.59", "-27.2598, -63.8346, 7.6317, 0.59", "-28.2426, -64.6127, 8.16092, 0.59", "-29.0937, -65.3471, 8.65627, 0.59", "-29.914, -66.1414, 9.16394, 0.59", "-30.6288, -66.9043, 9.62461, 0.59", "-31.5081, -67.9545, 10.2073, 0.96", "-32.0051, -68.5822, 10.5575, 0.96", "-32.181, -68.7967, 10.6939, 0.96", "-32.7379, -69.3918, 11.1599, 0.29", "-33.2026, -69.8599, 11.5668, 0.29", "-33.8581, -70.5599, 12.1243, 0.29", "-34.1625, -70.8924, 12.3399, 0.29", "-35.0151, -71.7936, 12.8383, 0.29", "-35.3934, -72.1407, 13.0273, 0.29", "-35.6778, -72.3498, 13.1534, 0.29", "-36.7038, -73.0516, 13.5266, 0.29", "-37.5297, -73.5955, 13.7587, 0.29", "-38.4618, -74.1512, 13.9561, 0.29", "-39.4457, -74.673, 14.15, 0.29", "-40.372, -75.111, 14.3719, 0.29", "-41.4956, -75.5734, 14.7236, 0.29", "-41.918, -75.729, 14.8858, 0.29", "-43.4608, -76.2941, 15.5427, 0.29", "-45.2959, -76.94, 16.3685, 0.52", "-47.2085, -77.5771, 17.2567, 0.52", "-50.1345, -78.5235, 18.7113, 0.52", "-53.7926, -79.684, 20.7821, 0.52", "-55.6413, -80.3054, 21.9712, 0.52", "-57.0017, -80.8099, 22.9614, 0.37", "-57.7544, -81.1021, 23.5863, 0.37", "-58.557, -81.4188, 24.384, 0.37", "-59.9856, -82.0081, 26.1311, 0.37", "-61.6174, -82.7414, 28.518, 0.37", "-62.2401, -83.0381, 29.4896, 0.37", "-62.8672, -83.3503, 30.4856, 0.37", "-63.7197, -83.741, 31.7531, 0.29", "-64.0816, -83.8792, 32.2414, 0.29", "-64.9743, -84.1518, 33.3366, 0.29", "-65.7663, -84.351, 34.2829, 0.44", "-66.574, -84.5548, 35.1737, 0.66", "-67.3694, -84.7527, 35.968, 0.66", "-67.9823, -84.8972, 36.5006, 0.66", "-68.3936, -84.9844, 36.8232, 0.66", "-69.9157, -85.3433, 37.8823, 0.66", "-71.8031, -85.8794, 39.0171, 0.81", "-72.878, -86.2517, 39.5727, 0.81", "-74.1747, -86.7712, 40.1716, 0.66", "-74.9947, -87.1399, 40.5194, 0.66", "-76.2511, -87.6785, 40.9769, 0.66", "-77.1071, -87.9937, 41.2271, 0.66", "-78.3368, -88.3749, 41.5648, 0.66", "-80.2766, -88.9166, 42.0801, 0.66", "-81.8119, -89.2975, 42.4921, 0.66", "-85.6724, -90.1016, 43.5415, 0.66", "-87.9701, -90.4562, 44.1052, 0.66", "-89.4678, -90.6476, 44.4373, 0.74", "-90.6536, -90.7718, 44.6417, 0.74", "-91.1138, -90.8125, 44.6793, 0.74", "-92.1586, -90.9239, 44.6914, 0.74", "-93.5501, -91.1617, 44.5424, 0.74", "-94.6775, -91.3812, 44.2728, 0.74", "-96.4043, -91.6671, 43.6062, 0.74", "-97.877, -91.8505, 42.904, 0.81", "-98.7097, -91.9246, 42.4192, 0.81", "-99.8246, -91.9539, 41.6506, 0.88", "-101.007, -91.8716, 40.7379, 0.88", "-102.207, -91.6226, 39.6803, 0.88", "-102.619, -91.4613, 39.2685, 0.88", "-103.463, -90.9981, 38.3491, 0.74", "-104.28, -90.449, 37.3834, 0.74", "-104.949, -89.9404, 36.5417, 0.74", "-105.403, -89.5649, 35.974, 0.74", "-106.209, -88.9091, 35.0118, 0.52", "-106.497, -88.6956, 34.6774, 0.52", "-107.33, -88.1578, 33.6853, 0.52", "-108.531, -87.5277, 32.1891, 0.52", "-109.109, -87.2813, 31.4525, 0.52", "-109.726, -87.0561, 30.6619, 0.52", "-110.147, -86.921, 30.1229, 0.52", "-111.286, -86.5139, 28.5625, 0.52", "-111.619, -86.3685, 28.0596, 0.52", "-111.798, -86.2703, 27.7447, 0.52", "-112.06, -86.1005, 27.2241, 0.29", "-112.267, -85.9543, 26.8131, 0.29", "-112.66, -85.664, 26.0228, 0.29", "-112.907, -85.4906, 25.5145, 0.29", "-113.831, -84.8679, 23.5316, 0.29", "-114.164, -84.6427, 22.756, 0.29", "-114.722, -84.2419, 21.2902, 0.29", "-115.019, -83.9712, 20.3414, 0.29", "-115.297, -83.6036, 19.1174, 0.29", "-115.41, -83.3497, 18.275, 0.29", "-115.419, -83.0453, 17.2015, 0.29", "-115.368, -82.8611, 16.5405, 0.15", "-115.219, -82.5256, 15.4134, 0.15", "-115.108, -82.2958, 14.6941, 0.15", "-114.982, -82.0228, 13.865, 0.15", "-114.869, -81.6644, 12.7576, 0.15", "-114.829, -81.3829, 11.8196, 0.15", "-114.858, -81.1445, 10.9266, 0.15", "-114.904, -80.988, 10.3017, 0.15", "-115.051, -80.5777, 8.72317, 0.15", "-115.233, -80.0767, 6.94266, 0.15", "-115.329, -79.8668, 6.21349, 0.15", "-115.491, -79.6161, 5.16302, 0.15" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "10.7771, 47.534, 9.22611, 0.59", "12.5225, 48.5997, 8.84924, 0.59", "13.5219, 49.2768, 8.66572, 0.52", "15.1839, 50.4602, 8.41549, 0.52", "17.4823, 52.1626, 8.17195, 0.44", "18.6031, 53.0112, 8.07543, 0.44", "20.2105, 54.2107, 7.88052, 0.44", "22.5873, 55.9084, 7.57377, 0.44", "24.482, 57.2875, 7.36001, 0.44", "27.1673, 59.2994, 7.11812, 0.44", "28.4053, 60.2462, 7.03119, 0.44", "30.6961, 61.9651, 6.86508, 0.44", "32.6201, 63.3911, 6.77341, 0.59", "34.298, 64.5843, 6.73067, 0.59", "39.1994, 68.0053, 6.73724, 0.74", "41.7033, 69.731, 6.82043, 0.74", "44.7188, 71.8188, 7.02886, 0.74", "47.5994, 73.813, 7.32166, 0.74", "49.6343, 75.2398, 7.47938, 0.44", "51.278, 76.3882, 7.57811, 0.44", "53.6726, 78.0495, 7.69758, 0.29", "54.861, 78.8549, 7.72839, 0.29", "58.5543, 81.3019, 7.67771, 0.29", "63.0694, 84.2392, 7.52153, 0.15", "66.5801, 86.4912, 7.37234, 0.15", "69.5454, 88.3224, 7.23218, 0.15", "72.3797, 89.9789, 7.17168, 0.15", "76.1257, 92.0834, 7.21663, 0.15", "78.2219, 93.2492, 7.3463, 0.07", "80.4332, 94.4426, 7.64339, 0.07", "82.5192, 95.637, 8.05689, 0.07", "84.7464, 96.9869, 8.69017, 0.07", "85.4451, 97.4542, 8.9383, 0.07", "86.7824, 98.4498, 9.49675, 0.07", "87.6688, 99.1779, 9.7698, 0.07", "88.3512, 99.7946, 9.96044, 0.07", "89.5255, 100.839, 10.1988, 0.07", "91.6909, 102.511, 10.5621, 0.07", "93.0896, 103.417, 10.8704, 0.22", "94.5365, 104.218, 11.2815, 0.22", "96.9154, 105.423, 12.2068, 0.22", "98.0638, 105.929, 12.7964, 0.22", "100.013, 106.663, 14.0631, 0.44", "101.255, 107.012, 14.9891, 0.44", "102.008, 107.197, 15.5435, 0.44", "103.086, 107.479, 16.3512, 0.44", "104.982, 108.113, 17.6604, 0.44", "106.48, 108.765, 18.565, 0.22", "108.057, 109.609, 19.403, 0.22", "110.26, 110.933, 20.4883, 0.37", "111.729, 111.915, 21.1735, 0.37", "113.782, 113.545, 22.0054, 0.37", "115.832, 115.529, 22.7279, 0.37", "117.105, 117.035, 23.129, 0.37", "118.256, 118.66, 23.5024, 0.37", "119.106, 120.02, 23.7844, 0.37", "121.193, 123.481, 24.5231, 0.37", "122.198, 125.218, 24.9335, 0.59", "123.227, 126.962, 25.3687, 0.74", "124.593, 129.149, 25.9521, 0.74", "125.955, 131.182, 26.5898, 0.74", "127.281, 133.019, 27.3286, 0.74", "128.403, 134.44, 28.0704, 0.74", "129.781, 136.007, 28.9744, 0.74", "131.028, 137.34, 29.7863, 0.96", "131.763, 138.12, 30.2663, 0.96", "132.649, 139.039, 30.8265, 0.96", "133.24, 139.648, 31.1835, 0.96", "135.093, 141.573, 32.3351, 1.18", "136.448, 143.11, 33.2245, 1.18", "137.227, 144.074, 33.7234, 1.18", "138.779, 146.263, 34.7238, 1.03", "139.898, 148.075, 35.53, 1.03", "140.502, 149.224, 36.0339, 1.03", "141.108, 150.711, 36.6847, 1.03", "141.592, 152.197, 37.2949, 0.74", "141.949, 153.713, 37.9274, 0.59", "142.121, 155.129, 38.5528, 0.59", "142.206, 156.095, 38.9571, 0.59", "142.421, 157.493, 39.5931, 0.59", "154.551, 165.378, 42.9405, 0.59", "167.342, 172.615, 45.068, 0.59", "180.815, 178.182, 47.8976, 0.59", "194.336, 184.229, 48.9619, 0.59", "207.849, 188.922, 52.9482, 0.59", "221.253, 191.866, 58.6218, 0.59", "234.135, 197.162, 63.7723, 0.59", "247.567, 203.251, 65.5061, 0.59", "260.809, 209.15, 68.7263, 0.59", "274.112, 213.965, 73.2399, 0.59", "286.818, 219.697, 78.3598, 0.59", "299.803, 224.726, 83.5193, 0.59", "312.99, 230.514, 87.1391, 0.59", "325.69, 236.922, 91.4003, 0.59", "339.049, 241.481, 96.014, 0.59" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "10.7771, 47.534, 9.22611, 0.44", "10.9613, 48.523, 9.93317, 0.44", "11.184, 49.3623, 10.6776, 0.44", "11.3375, 49.78, 11.1606, 0.37", "11.6023, 50.3695, 11.9964, 0.37", "11.7828, 50.6892, 12.5705, 0.44", "11.9246, 50.9037, 13.0392, 0.74", "12.1339, 51.088, 13.7021, 0.74", "12.3913, 51.2271, 14.5777, 0.74", "12.5184, 51.291, 15.0092, 0.74", "12.7754, 51.436, 15.9238, 0.74", "12.9734, 51.6133, 16.6949, 0.74", "13.0515, 51.731, 17.1201, 0.74", "13.1184, 51.9916, 17.8761, 0.74", "13.1094, 52.399, 18.795, 0.96", "13.0583, 52.7113, 19.3804, 0.96", "12.8869, 53.3532, 20.4234, 0.66", "12.7578, 53.8563, 21.1521, 0.52", "12.7058, 54.1469, 21.5871, 0.52", "12.6714, 54.4731, 22.1104, 0.66", "12.6672, 54.8902, 22.8634, 0.66", "12.7036, 55.0396, 23.1475, 0.66", "12.9124, 55.3979, 23.8286, 0.66", "13.3995, 55.9967, 24.9835, 0.66", "13.6753, 56.3067, 25.5699, 0.66", "13.9539, 56.6171, 26.1581, 0.81", "14.3585, 57.0797, 27.025, 0.81", "14.7384, 57.5743, 27.9334, 0.66", "15.1061, 58.1519, 28.9668, 0.66", "15.3131, 58.5604, 29.6549, 0.66", "15.4108, 58.7782, 30.012, 0.66", "15.4722, 58.9353, 30.2695, 0.66", "15.629, 59.4433, 31.1034, 0.66", "15.6903, 59.6462, 31.4607, 0.66", "15.8804, 60.046, 32.1233, 0.66", "16.2911, 60.6291, 32.9606, 0.66", "16.459, 60.8419, 33.2062, 0.66", "16.7493, 61.1777, 33.5196, 0.66", "17.3272, 61.7759, 33.9826, 0.66", "17.9519, 62.4067, 34.4273, 0.52", "18.5992, 63.0748, 34.8243, 0.52", "19.0784, 63.585, 35.0932, 0.44", "19.6363, 64.1961, 35.3668, 0.44", "19.9233, 64.5226, 35.4764, 0.44", "22.8639, 68.3028, 41.3409, 0.44", "26.4497, 70.6919, 47.567, 0.44", "30.5987, 73.1355, 53.4103, 0.44", "34.3756, 75.0809, 59.6778, 0.44", "39.294, 76.1445, 65.3353, 0.44", "44.4444, 76.2051, 70.8851, 0.44", "50.3193, 74.5762, 75.3753, 0.44", "55.5887, 72.2824, 80.3051, 0.44", "59.9678, 69.5223, 85.8309, 0.44", "64.155, 66.6783, 91.462, 0.44", "67.3783, 62.8705, 97.1577, 0.44", "71.6242, 59.9361, 102.697, 0.44", "75.3947, 57.7486, 108.888, 0.44", "80.1863, 56.8751, 114.685, 0.44", "85.0961, 57.3246, 120.432, 0.44", "90.2505, 58.4777, 125.857, 0.44", "94.9397, 60.6388, 131.395, 0.44", "100.074, 62.772, 136.536, 0.44", "105.704, 65.7457, 140.633, 0.44", "111.219, 67.658, 145.456, 0.44", "117.232, 69.901, 149.474, 0.44", "123.206, 72.4456, 153.367, 0.44", "129.334, 73.5028, 157.687, 0.44", "136.241, 74.6276, 160.578, 0.44", "142.904, 74.37, 164.167, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-0.952803, 54.0941, 22.3977, 0.74", "-0.35985, 54.8372, 22.6642, 0.74", "0.656888, 56.1873, 23.152, 0.74", "1.5008, 57.3427, 23.5231, 0.96", "2.03177, 58.0493, 23.7163, 0.96", "2.43091, 58.5597, 23.8383, 0.96", "3.12407, 59.3874, 24.0054, 0.59", "3.48581, 59.7808, 24.0637, 0.59", "3.93264, 60.1824, 24.0623, 0.37", "4.56167, 60.7408, 23.9907, 0.37", "4.81214, 60.9835, 23.9534, 0.37", "5.33927, 61.5507, 23.875, 0.37", "5.9096, 62.2554, 23.8305, 0.37", "6.36176, 62.9203, 23.8258, 0.37", "6.88361, 63.6653, 23.8873, 0.37", "7.47575, 64.516, 23.9853, 0.37", "7.77788, 64.9635, 24.054, 0.37", "8.30578, 65.86, 24.2174, 0.52", "9.09901, 67.4222, 24.5162, 0.66", "9.77174, 68.9815, 24.7844, 0.66", "10.1386, 69.9626, 24.9317, 0.66", "10.5365, 71.1895, 25.0791, 0.52", "10.9752, 72.8446, 25.2978, 0.74", "11.2177, 73.993, 25.4627, 0.74", "11.6544, 76.3178, 25.8253, 0.74", "11.9555, 77.9094, 26.0715, 0.88", "12.6815, 81.0726, 26.7083, 0.88", "13.0747, 82.4216, 27.0638, 0.88", "13.3022, 83.0288, 27.2717, 0.81", "13.7679, 84.0704, 27.7139, 0.81", "14.4096, 85.3872, 28.3396, 0.81", "15.1689, 86.9762, 29.0911, 0.81", "15.6892, 88.1138, 29.605, 0.81", "16.1869, 89.2465, 30.0613, 0.44", "16.5267, 90.1272, 30.3921, 0.44", "16.9988, 91.5769, 30.9032, 0.44", "17.3089, 92.6012, 31.2336, 0.44", "17.8531, 94.4528, 31.7322, 0.44", "18.407, 96.4585, 32.265, 0.44", "18.6034, 97.2177, 32.4896, 0.44", "18.894, 98.3489, 32.8549, 0.44", "19.0807, 99.0178, 33.1107, 0.44", "19.2217, 99.4205, 33.2589, 0.44", "19.4752, 100.078, 33.4694, 0.44", "19.685, 100.596, 33.6115, 0.44", "20.0739, 101.459, 33.8559, 0.44", "20.5777, 102.478, 34.1512, 0.44", "21.8152, 104.787, 34.8895, 0.44", "21.9604, 105.026, 34.9726, 0.44", "26.0791, 112.943, 38.0804, 0.44", "29.2322, 121.6, 40.1818, 0.44", "32.1713, 129.764, 43.9252, 0.44", "35.1582, 137.689, 48.1181, 0.44", "37.6713, 145.343, 53.0584, 0.44", "39.4814, 153.357, 57.7282, 0.44", "41.9251, 161.491, 61.8724, 0.44", "43.0387, 168.973, 67.5366, 0.44", "43.3808, 176.182, 73.6377, 0.44", "42.6179, 183.574, 79.4757, 0.44", "40.7606, 190.972, 85.0551, 0.44", "38.1721, 198.116, 90.6729, 0.44", "36.1542, 206.236, 95.0672, 0.44", "32.2967, 214.369, 97.9432, 0.44", "29.4488, 223.192, 99.7724, 0.44", "27.7352, 232.485, 99.6256, 0.44", "27.6442, 241.82, 98.1573, 0.44", "28.8937, 250.578, 94.836, 0.44", "29.5677, 259.795, 92.86, 0.44" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-0.952803, 54.0941, 22.3977, 1.47", "-1.93847, 56.2326, 24.676, 1.47", "-2.34147, 57.2065, 25.8044, 1.03", "-2.52769, 57.9015, 26.645, 0.59", "-2.57318, 58.1727, 26.959, 0.59", "-2.67219, 58.9211, 27.7977, 0.81", "-2.79071, 59.7295, 28.6636, 0.81", "-2.92725, 60.4253, 29.3473, 0.96", "-3.14946, 61.5755, 30.2968, 0.96", "-3.30557, 62.296, 30.8317, 0.59", "-3.66859, 63.6656, 31.7293, 0.59", "-3.96043, 64.5494, 32.2367, 0.74", "-4.44915, 65.7312, 32.8599, 0.96", "-5.327, 67.5363, 33.7383, 1.11", "-6.04254, 68.8805, 34.3955, 1.11", "-6.38678, 69.4862, 34.7218, 1.11", "-6.95836, 70.4534, 35.2677, 0.66", "-7.3508, 71.1108, 35.6572, 0.66", "-7.81607, 71.8656, 36.1392, 0.66", "-8.55466, 72.8966, 36.8517, 0.66", "-9.31924, 73.95, 37.5583, 0.66", "-9.86984, 74.7006, 38.0769, 0.44", "-10.6455, 75.7288, 38.7972, 0.29", "-11.7092, 77.096, 39.7688, 0.37", "-12.7388, 78.347, 40.6573, 0.22", "-18.66, 84.3777, 47.0805, 0.22" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "58.8816, 38.664, -2.53903, 0.66", "60.4174, 39.0627, -2.01148, 0.66", "63.2422, 39.62, -0.965909, 0.66", "65.6082, 39.9372, -0.204316, 0.66", "68.4327, 40.2236, 0.541245, 0.88", "69.6458, 40.32, 0.803717, 0.88", "72.415, 40.514, 1.30557, 1.11", "74.3875, 40.6231, 1.58298, 1.11", "78.2366, 40.7227, 2.07556, 1.11", "80.8559, 40.7248, 2.275, 0.74", "82.7295, 40.6975, 2.31029, 0.74", "84.9151, 40.693, 2.24863, 0.74", "87.4398, 40.7833, 1.99073, 0.74" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "58.8816, 38.664, -2.53903, 0.29", "58.9875, 40.4119, -1.71262, 0.29", "58.9033, 42.2643, -1.02698, 0.29", "58.2561, 46.5583, 0.274643, 0.29", "58.0458, 47.9529, 0.697396, 0.29", "57.7499, 49.9159, 1.29243, 0.29", "57.6811, 50.3727, 1.43089, 0.29", "57.0141, 52.9994, 2.15179, 0.29", "56.5733, 54.0754, 2.15359, 0.29" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "41.9086, 39.8305, -16.9536, 0.66", "42.7935, 40.8057, -17.3091, 0.66", "44.6435, 42.8915, -17.9908, 0.66", "46.3399, 44.8097, -18.5103, 0.81", "47.7678, 46.5318, -18.8698, 0.59", "48.5948, 47.5628, -19.0396, 0.59", "49.3292, 48.5067, -19.1623, 0.37", "50.1628, 49.6986, -19.2467, 0.37", "51.3655, 51.5365, -19.2373, 0.37", "52.6672, 53.3998, -19.1366, 0.37", "53.5841, 54.629, -19.0363, 0.37", "54.5289, 55.7978, -18.9251, 0.37", "55.4814, 56.9211, -18.8658, 0.37", "56.2961, 57.8724, -18.8667, 0.37", "58.2357, 60.0974, -18.9965, 0.37", "59.1433, 61.1075, -19.1105, 0.37", "61.31, 63.5297, -19.4895, 0.37", "62.9161, 65.3105, -19.8591, 0.37", "63.7079, 66.1823, -20.0879, 0.22", "64.7368, 67.3617, -20.4414, 0.22", "65.2261, 67.9588, -20.6469, 0.22", "66.0252, 68.9494, -21.0125, 0.22", "66.8036, 69.937, -21.3507, 0.22", "67.8729, 71.2367, -21.7226, 0.22", "69.0837, 72.6519, -22.1055, 0.22", "69.4965, 73.124, -22.1973, 0.22", "70.074, 73.7832, -22.2692, 0.22", "71.5598, 75.4881, -22.3257, 0.29", "72.5933, 76.6553, -22.2743, 0.29", "73.6502, 77.807, -22.1893, 0.29", "75.0863, 79.2524, -22.0766, 0.29", "76.3728, 80.472, -21.9707, 0.07", "77.1469, 81.1744, -21.8574, 0.07", "78.149, 82.0784, -21.6332, 0.07", "79.3492, 83.115, -21.3275, 0.07", "81.6093, 84.9875, -20.8031, 0.07", "83.7876, 86.759, -20.3872, 0.07", "86.6396, 89.0953, -19.9019, 0.07", "88.9469, 91.0639, -19.5458, 0.07", "90.1337, 92.1541, -19.3799, 0.07", "91.1652, 93.2241, -19.2589, 0.07", "92.4758, 94.823, -19.1999, 0.07", "94.1693, 97.2696, -19.1388, 0.07", "94.9856, 98.6421, -19.1081, 0.07", "95.8373, 100.159, -18.9726, 0.07", "97.068, 102.433, -18.4713, 0.07", "98.0505, 104.173, -17.8412, 0.07", "99.8156, 107.07, -16.4204, 0.07", "100.617, 108.321, -15.6654, 0.07", "102.317, 110.777, -13.9527, 0.07", "103.896, 112.822, -12.2211, 0.07", "105.207, 114.352, -10.7529, 0.07", "106.362, 115.668, -9.44144, 0.07", "107.387, 116.872, -8.28251, 0.07", "108.086, 117.776, -7.46667, 0.07", "110.582, 121.285, -4.47065, 0.22", "111.788, 123.081, -3.07232, 0.22", "113.001, 124.989, -1.68552, 0.22", "113.838, 126.383, -0.729729, 0.22", "115.177, 128.752, 0.818979, 0.22", "116.192, 130.717, 2.0153, 0.22", "117.058, 132.553, 3.04906, 0.22", "118.45, 135.671, 4.80679, 0.22", "119.243, 137.422, 5.7878, 0.22", "120.125, 139.291, 6.8318, 0.22", "120.825, 140.818, 7.66887, 0.22", "121.36, 142.14, 8.31862, 0.22", "121.928, 143.527, 8.97834, 0.22", "122.538, 145.092, 9.56722, 0.22", "123.284, 147.004, 10.1026, 0.22", "123.825, 148.448, 10.3528, 0.22", "124.549, 150.51, 10.5381, 0.22", "125.414, 152.893, 10.5915, 0.22", "126.644, 156.002, 10.4744, 0.22", "127.19, 157.305, 10.3671, 0.22", "127.724, 158.514, 10.2313, 0.22", "129.195, 161.662, 9.8405, 0.22", "129.742, 162.788, 9.69722, 0.22", "130.789, 164.926, 9.44496, 0.22", "132.31, 167.721, 9.30147, 0.22", "132.932, 168.847, 9.29121, 0.22", "133.758, 170.287, 9.34284, 0.22", "134.261, 171.096, 9.41014, 0.22", "135.32, 172.687, 9.63507, 0.22", "136.759, 174.674, 10.0285, 0.22", "137.96, 176.188, 10.362, 0.22", "139.302, 177.744, 10.717, 0.22", "140.802, 179.292, 11.0822, 0.22", "141.773, 180.251, 11.2781, 0.22", "143.435, 181.864, 11.547, 0.22", "144.229, 182.577, 11.6254, 0.22", "145.768, 183.86, 11.6856, 0.22", "146.794, 184.664, 11.6796, 0.22", "148.826, 186.014, 11.6537, 0.22", "151.022, 187.194, 11.7012, 0.22", "152.869, 188.008, 11.8075, 0.22", "154.301, 188.563, 11.9641, 0.22", "155.744, 189.048, 12.1889, 0.22", "158.638, 189.884, 12.8043, 0.22", "161.466, 190.528, 13.4906, 0.22", "162.984, 190.818, 13.8938, 0.22", "164.372, 191.109, 14.328, 0.22", "165.603, 191.373, 14.7807, 0.22", "167.703, 191.896, 15.6686, 0.22" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "41.9086, 39.8305, -16.9536, 0.44", "41.371, 40.7985, -15.2553, 0.44", "40.7745, 41.9809, -13.2137, 0.44", "40.0096, 43.7177, -10.0663, 0.44", "39.7006, 44.391, -8.80331, 0.44", "39.14, 45.5048, -6.70894, 0.44", "38.8369, 46.058, -5.6555, 0.44", "38.5428, 46.5113, -4.72144, 0.44", "37.6092, 47.8442, -1.93324, 0.44", "36.3205, 49.4492, 1.62594, 0.07", "35.9025, 49.859, 2.68716, 0.07", "35.4321, 50.1968, 3.7599, 0.07", "34.7314, 50.5661, 5.132, 0.07", "34.0443, 50.8425, 6.33165, 0.07", "32.8162, 51.2466, 8.27599, 0.07", "31.8461, 51.5439, 9.79757, 0.07", "31.031, 51.8714, 11.0903, 0.07", "29.3154, 52.8638, 13.6049, 0.07", "28.3075, 53.5968, 14.9842, 0.07", "26.9077, 54.827, 16.7778, 0.07", "25.8979, 55.8588, 17.9228, 0.07", "24.5518, 57.3931, 19.4257, 0.07", "22.3544, 60.0304, 21.8414, 0.07", "21.7596, 60.762, 22.4884, 0.07", "20.9408, 61.764, 23.3771, 0.07", "19.2002, 63.7391, 25.0581, 0.07", "17.5663, 65.5216, 26.6175, 0.07", "16.3231, 66.7514, 27.8182, 0.07", "14.7103, 68.2012, 29.4689, 0.07", "13.4194, 69.3059, 30.7848, 0.07", "11.4786, 70.8573, 32.7627, 0.07", "8.33149, 76.6386, 41.3293, 0.07" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-51.1196, 39.4119, -33.117, 0.07", "-52.0665, 39.7258, -35.0419, 0.07", "-52.7561, 39.9041, -36.4097, 0.29", "-53.4581, 40.0442, -37.7315, 0.29", "-54.3942, 40.1821, -39.4312, 0.29", "-55.113, 40.2319, -40.7198, 0.29", "-55.7923, 40.2285, -41.9062, 0.29", "-56.9722, 40.0946, -43.7866, 0.29", "-57.5397, 39.9783, -44.6101, 0.29", "-58.0809, 39.8393, -45.2739, 0.29", "-58.7355, 39.664, -46.0332, 0.29", "-59.7063, 39.4241, -47.0705, 0.29", "-60.755, 39.1839, -48.0838, 0.29", "-62.2509, 38.9269, -49.3936, 0.29", "-64.1723, 38.7303, -51.0011, 0.29", "-66.1279, 38.7239, -52.5263, 0.29", "-67.3634, 38.8168, -53.442, 0.29", "-68.1406, 38.9003, -54.0007, 0.29", "-69.3229, 39.0635, -54.8188, 0.29", "-71.4004, 39.3715, -56.2423, 0.29", "-74.4554, 39.8494, -58.2487, 0.07", "-75.731, 40.0065, -59.0354, 0.07", "-76.9262, 40.1303, -59.7873, 0.07", "-78.3496, 40.2581, -60.7573, 0.07", "-80.1593, 40.3583, -62.0391, 0.07", "-81.4424, 40.4032, -62.984, 0.07", "-83.3756, 40.4344, -64.5531, 0.15", "-84.0426, 40.4565, -65.1688, 0.37", "-85.897, 40.5423, -67.0288, 0.37", "-87.1337, 40.5914, -68.4548, 0.37", "-88.2312, 40.6551, -69.8702, 0.37", "-89.6151, 40.737, -71.8125, 0.37", "-91.3738, 40.8495, -74.4575, 0.37", "-92.3645, 40.8892, -75.9745, 0.37", "-93.6372, 40.9044, -78.0102, 0.37", "-94.4527, 40.904, -79.4815, 0.22", "-95.0322, 40.9175, -80.6235, 0.22", "-95.4658, 40.9452, -81.5274, 0.22", "-95.7902, 40.9765, -82.2154, 0.22", "-96.3079, 41.0427, -83.3188, 0.22", "-97.063, 41.1259, -84.8193, 0.22", "-97.8089, 41.1896, -86.3166, 0.22", "-98.2453, 41.2319, -87.2236, 0.22", "-98.6221, 41.2705, -87.9823, 0.22", "-99.0416, 41.3129, -88.7904, 0.22", "-100.147, 41.4645, -90.9438, 0.22", "-100.774, 41.5852, -92.268, 0.22", "-101.571, 41.8172, -94.0612, 0.22", "-102.126, 42.0658, -95.4115, 0.22", "-102.587, 42.3293, -96.4692, 0.22", "-103.584, 42.8893, -98.4397, 0.22", "-104.277, 43.2205, -99.6555, 0.22", "-105.067, 43.5182, -100.94, 0.22", "-106.521, 43.909, -103.277, 0.22", "-108.254, 44.2208, -106.159, 0.22", "-109.243, 44.3115, -107.816, 0.22", "-111.035, 44.3462, -110.826, 0.22", "-111.813, 44.3319, -112.201, 0.22", "-113.159, 44.2557, -114.85, 0.22", "-113.756, 44.2104, -116.236, 0.22", "-114.258, 44.1974, -117.771, 0.22", "-114.641, 44.2957, -119.408, 0.22", "-114.862, 44.4751, -120.786, 0.22", "-114.966, 44.6555, -121.885, 0.22", "-115.022, 44.9266, -123.453, 0.22", "-115.012, 45.0429, -124.244, 0.22", "-114.854, 45.2275, -126.396, 0.22", "-114.662, 45.2106, -127.983, 0.22", "-114.507, 45.1266, -128.973, 0.22", "-114.329, 45.0108, -129.835, 0.22", "-114.224, 44.9375, -130.243, 0.22", "-113.683, 44.528, -132.153, 0.22", "-113.19, 44.1249, -133.806, 0.22", "-112.946, 43.9384, -134.577, 0.22", "-112.708, 43.7637, -135.386, 0.22", "-112.34, 43.4842, -136.808, 0.22", "-112.263, 43.4202, -137.168, 0.22", "-112.198, 43.3552, -137.627, 0.22", "-112.156, 43.2521, -138.517, 0.22", "-112.232, 43.107, -139.813, 0.22", "-112.468, 42.936, -141.286, 0.22", "-112.895, 42.7767, -142.832, 0.22", "-113.686, 42.5413, -145.0, 0.22", "-114.366, 42.3938, -146.411, 0.22", "-115.321, 42.2808, -147.979, 0.22", "-116.45, 42.2343, -149.5, 0.22", "-117.798, 42.249, -151.037, 0.22", "-118.589, 42.286, -151.857, 0.22", "-119.822, 42.3886, -153.137, 0.22", "-120.735, 42.5056, -154.241, 0.22", "-121.451, 42.6277, -155.394, 0.22", "-121.715, 42.6782, -155.971, 0.22", "-122.239, 42.7153, -157.628, 0.22", "-122.598, 42.6657, -159.059, 0.22", "-122.833, 42.5639, -160.337, 0.22", "-123.058, 42.3643, -161.845, 0.22", "-123.206, 42.1775, -162.964, 0.22", "-123.54, 41.7459, -165.158, 0.22", "-123.754, 41.4971, -166.189, 0.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-51.1196, 39.4119, -33.117, 0.29", "-50.9819, 40.1956, -33.2733, 0.29", "-50.7797, 41.1088, -33.4787, 0.29", "-50.6444, 41.5793, -33.5893, 0.22", "-50.4771, 42.1272, -33.7458, 0.22", "-50.0144, 43.4858, -34.1968, 0.22", "-49.4689, 44.9628, -34.7429, 0.22", "-49.1604, 45.6911, -35.0529, 0.22", "-48.7733, 46.4805, -35.4416, 0.22", "-48.2844, 47.3521, -35.9444, 0.22", "-47.5446, 48.4192, -36.8028, 0.22", "-47.225, 48.8078, -37.2111, 0.22", "-46.8244, 49.233, -37.7262, 0.22", "-46.3964, 49.6486, -38.3011, 0.22", "-45.8356, 50.1566, -39.0525, 0.22", "-44.3393, 51.4283, -40.9541, 0.22", "-43.9091, 51.792, -41.5048, 0.22", "-43.4472, 52.1831, -42.0982, 0.22", "-42.7301, 52.7964, -43.0229, 0.22", "-42.219, 53.2402, -43.6892, 0.22", "-41.6294, 53.7811, -44.4021, 0.22", "-41.2719, 54.1335, -44.7404, 0.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-24.3942, -80.0524, -14.9707, 1.03", "-24.7787, -82.5203, -15.1223, 1.03", "-24.9485, -84.3277, -15.2563, 1.03", "-25.0742, -86.7753, -15.446, 1.03", "-25.2137, -90.1295, -15.7205, 1.03", "-25.3097, -92.8763, -15.9496, 1.03", "-25.4162, -96.3211, -16.2434, 1.03", "-25.4262, -97.9354, -16.4029, 1.03", "-25.4438, -99.5349, -16.5436, 1.03", "-25.5045, -101.224, -16.6693, 1.03", "-25.6279, -102.565, -16.7554, 1.03", "-25.7779, -103.632, -16.8105, 1.03", "-26.3026, -106.827, -16.9411, 1.25", "-26.5901, -108.696, -17.0084, 1.25", "-26.8959, -110.76, -17.0771, 1.25", "-27.155, -112.665, -17.1314, 1.25", "-27.45, -114.814, -17.1873, 1.25", "-27.7573, -117.083, -17.1713, 0.81", "-27.9019, -118.268, -17.152, 0.81", "-28.1654, -120.492, -17.0961, 0.74", "-28.2939, -121.421, -17.077, 0.74", "-28.5239, -122.658, -17.0904, 1.18", "-29.1599, -125.679, -17.2958, 1.18", "-29.3979, -126.734, -17.409, 1.18", "-29.6616, -127.935, -17.5849, 1.25", "-30.1808, -130.671, -18.0785, 1.25", "-30.853, -134.195, -18.9419, 1.25", "-31.2919, -136.344, -19.6448, 1.25", "-31.5741, -137.554, -20.1531, 0.74", "-31.9811, -139.115, -20.8418, 0.74", "-32.1628, -139.738, -21.1509, 0.74", "-32.9124, -141.984, -22.4049, 0.74", "-33.2749, -142.933, -22.9872, 0.74", "-33.8951, -144.644, -23.9281, 0.52", "-34.744, -147.724, -25.4752, 0.52", "-34.8333, -148.13, -25.6372, 0.52", "-34.9739, -148.826, -25.8454, 0.81", "-35.1151, -149.748, -26.027, 1.18", "-35.3769, -151.83, -26.3579, 1.18", "-35.5594, -153.517, -26.6328, 1.18", "-35.8222, -155.472, -26.9775, 0.96", "-36.0726, -156.893, -27.2034, 0.96", "-36.4746, -158.74, -27.4714, 0.96", "-36.8104, -160.092, -27.6483, 0.96", "-37.1907, -161.508, -27.7867, 1.4", "-37.7923, -163.681, -27.9291, 1.4", "-38.7088, -166.676, -28.111, 1.4", "-39.2712, -168.298, -28.2033, 1.4", "-39.9526, -170.099, -28.2944, 1.4", "-40.852, -172.347, -28.3776, 1.4", "-41.5509, -174.04, -28.3929, 1.62", "-42.4479, -176.228, -28.3796, 1.62", "-42.7036, -176.821, -28.3737, 1.62" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-24.3942, -80.0524, -14.9707, 0.66", "-25.8081, -81.7158, -14.3513, 0.66", "-26.6971, -82.7616, -13.9619, 0.37", "-27.7565, -84.0079, -13.4978, 0.37", "-28.5944, -84.9936, -13.1307, 0.37", "-29.1572, -85.6557, -12.8841, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "87.4398, 40.7833, 1.99073, 0.37", "88.8979, 41.7758, 2.98606, 0.37", "90.0651, 42.4185, 3.65869, 0.37", "91.1441, 42.9537, 4.22722, 0.37", "92.6912, 43.6864, 4.96592, 0.37", "95.2413, 44.8589, 6.13822, 0.37", "96.5764, 45.4765, 6.72548, 0.37", "98.792, 46.3869, 7.56964, 0.37", "99.5315, 46.6716, 7.81248, 0.37", "100.718, 47.1104, 8.15991, 0.52", "102.483, 47.7544, 8.64387, 0.52", "103.515, 48.1295, 8.97221, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "87.4398, 40.7833, 1.99073, 0.74", "89.1343, 40.2157, 1.15985, 0.74", "90.9686, 39.58, 0.238869, 0.52", "91.8523, 39.2355, -0.215351, 0.52", "93.4952, 38.5306, -1.11885, 0.52", "94.9883, 37.8456, -1.99797, 0.52", "96.3568, 37.2262, -2.83369, 0.52", "97.0956, 36.8892, -3.36164, 0.52", "97.8377, 36.5411, -3.86719, 0.52", "98.9125, 36.0685, -4.64843, 0.52", "100.044, 35.6127, -5.51977, 0.52", "101.182, 35.1817, -6.45392, 0.52", "102.556, 34.6949, -7.54989, 0.52", "104.095, 34.2061, -8.75462, 0.22", "105.997, 33.5877, -10.1899, 0.22", "107.37, 33.0999, -11.173, 0.22", "109.116, 32.4058, -12.3845, 0.22", "110.447, 31.8042, -13.2726, 0.22", "111.294, 31.3777, -13.7529, 0.22", "112.611, 30.7002, -14.4569, 0.22", "113.509, 30.2227, -14.8638, 0.37", "114.021, 29.9414, -15.0712, 0.37", "115.407, 29.1745, -15.553, 0.37", "117.386, 28.0983, -16.1613, 0.37", "120.048, 26.7441, -16.816, 0.37", "121.662, 26.001, -17.1456, 0.07", "122.473, 25.6504, -17.2719, 0.07", "124.167, 24.9456, -17.4739, 0.07", "126.367, 24.0601, -17.665, 0.07", "128.723, 23.1111, -17.8048, 0.07", "129.815, 22.6417, -17.7973, 0.29", "131.696, 21.782, -17.8242, 0.29", "132.724, 21.2921, -17.8658, 0.29", "133.764, 20.7518, -17.9862, 0.29", "134.934, 20.0504, -18.3145, 0.29", "136.153, 19.1999, -18.7927, 0.29", "137.601, 18.0353, -19.4601, 0.29", "138.473, 17.2625, -19.9071, 0.29", "139.98, 15.9093, -20.6783, 0.29", "141.917, 14.1792, -21.6784, 0.29", "142.972, 13.2841, -22.225, 0.37", "143.982, 12.466, -22.6921, 0.37", "144.597, 11.9822, -22.9033, 0.37", "145.278, 11.455, -23.1305, 0.37", "145.857, 11.0333, -23.2695, 0.37", "146.846, 10.3592, -23.4949, 0.37", "147.828, 9.75034, -23.7791, 0.37", "148.513, 9.37701, -23.9929, 0.37", "149.924, 8.63986, -24.4184, 0.37", "150.728, 8.21456, -24.6679, 0.37", "151.722, 7.67605, -24.9667, 0.37", "154.011, 6.35357, -25.6444, 0.37", "155.567, 5.37545, -26.1212, 0.37", "156.315, 4.88617, -26.3306, 0.37", "157.159, 4.34681, -26.5303, 0.37", "158.388, 3.5822, -26.8122, 0.37", "159.937, 2.65338, -27.1253, 0.37", "160.625, 2.24515, -27.2504, 0.37", "161.497, 1.75436, -27.3449, 0.37", "163.109, 0.893617, -27.4488, 0.37", "163.923, 0.478171, -27.4689, 0.37", "164.503, 0.188956, -27.4766, 0.37", "165.752, -0.41863, -27.479, 0.37", "166.614, -0.851582, -27.4795, 0.37", "167.83, -1.5102, -27.4004, 0.37", "170.465, -2.93803, -26.9978, 0.37", "171.443, -3.43065, -26.776, 0.37", "172.268, -3.8369, -26.5404, 0.37", "173.142, -4.25127, -26.2498, 0.37", "175.6, -5.3877, -25.3413, 0.37", "177.762, -6.36462, -24.4883, 0.37", "179.508, -7.16562, -23.7375, 0.37", "181.149, -7.9508, -23.0344, 0.37", "183.189, -8.98759, -22.1842, 0.37", "184.537, -9.72031, -21.6289, 0.37", "186.919, -11.0868, -20.6978, 0.37", "188.054, -11.7958, -20.2495, 0.37", "189.12, -12.487, -19.8436, 0.29", "189.767, -12.9401, -19.5948, 0.29", "190.992, -13.85, -19.1094, 0.29", "192.382, -14.9304, -18.5523, 0.29", "194.223, -16.4713, -17.7914, 0.29", "195.594, -17.6594, -17.253, 0.29", "197.093, -18.9724, -16.676, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "8.33149, 76.6386, 41.3293, 0.07", "2.56936, 82.5082, 46.7905, 0.07", "-3.64749, 86.9313, 53.0567, 0.07", "-9.16732, 89.705, 60.7585, 0.07", "-14.4444, 91.317, 68.9458, 0.07", "-20.7457, 91.9788, 76.5177, 0.07", "-26.6637, 91.5558, 84.4093, 0.07", "-31.0516, 90.0779, 93.1294, 0.07", "-34.6996, 87.0687, 101.796, 0.07", "-36.5619, 83.5254, 110.821, 0.07", "-36.3083, 78.9237, 119.553, 0.07", "-34.9282, 75.1285, 128.562, 0.07", "-32.9844, 71.319, 137.461, 0.07", "-30.989, 66.7588, 145.987, 0.07", "-30.9553, 62.0054, 154.641, 0.07", "-29.9128, 56.2991, 162.63, 0.07", "-27.877, 51.0943, 170.769, 0.07", "-26.3488, 45.8741, 179.009, 0.07", "-24.6434, 40.1489, 186.87, 0.07", "-25.1034, 34.2455, 194.77, 0.07", "-26.926, 27.1393, 201.378, 0.07", "-28.0867, 19.9482, 208.043, 0.07", "-28.0757, 12.1855, 214.143, 0.07", "-27.5347, 4.60933, 220.451, 0.07", "-27.6283, -3.62001, 225.905, 0.07", "-26.4613, -10.7492, 232.635, 0.07", "-25.3599, -17.4867, 239.768, 0.07", "-23.2687, -22.1631, 248.208, 0.07", "-19.8088, -26.7434, 256.241, 0.07", "-15.0412, -29.665, 264.378, 0.07", "-12.1283, -33.1547, 273.142, 0.07", "-9.01363, -35.3721, 282.245, 0.07", "-7.22493, -36.776, 291.853, 0.07" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "8.33149, 76.6386, 41.3293, 0.07", "-0.246949, 86.6448, 45.7382, 0.07" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-42.7036, -176.821, -28.3737, 0.96", "-44.6265, -178.949, -29.0015, 0.96", "-45.9775, -180.812, -29.4327, 0.96", "-46.8655, -182.178, -29.6279, 0.59", "-47.8479, -183.784, -29.7875, 0.59", "-48.485, -184.854, -29.8761, 0.59", "-49.472, -186.494, -30.0498, 0.96", "-50.9075, -189.015, -30.3026, 0.96", "-52.1155, -191.208, -30.5204, 0.96", "-52.7233, -192.333, -30.635, 0.96", "-53.4509, -193.734, -30.8573, 0.59", "-54.2382, -195.111, -31.2186, 0.52", "-54.4047, -195.373, -31.3258, 0.29", "-54.8366, -196.101, -31.6997, 0.29", "-55.0183, -196.507, -31.9059, 0.44", "-55.6297, -198.296, -32.6368, 0.44", "-56.0111, -199.698, -33.0909, 0.66", "-56.6257, -202.337, -33.7574, 0.66", "-57.1276, -204.7, -34.2536, 0.88", "-57.4483, -206.452, -34.5476, 0.88", "-57.8, -208.389, -34.7252, 0.88", "-57.9466, -209.205, -34.7406, 0.88", "-58.1335, -210.28, -34.7423, 0.88", "-58.5656, -212.486, -34.7105, 0.66", "-58.7948, -213.458, -34.6915, 0.66", "-59.5036, -216.024, -34.7121, 0.88", "-60.0448, -217.882, -34.768, 0.88", "-60.7993, -220.301, -34.8919, 0.88", "-61.1995, -221.435, -35.0237, 0.88", "-61.7074, -222.671, -35.254, 0.88", "-62.5543, -224.388, -35.7094, 0.88", "-63.0746, -225.327, -36.0498, 0.88", "-63.7456, -226.454, -36.5203, 1.11", "-64.942, -228.55, -37.5243, 1.11", "-65.4848, -229.627, -38.1042, 0.44", "-66.1322, -231.182, -39.0185, 0.44", "-66.4886, -232.115, -39.5984, 0.66", "-66.889, -233.344, -40.4023, 0.66", "-67.1543, -234.732, -41.3085, 0.66", "-67.105, -235.961, -42.027, 0.66", "-66.8821, -236.807, -42.5461, 0.66" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-42.7036, -176.821, -28.3737, 0.29", "-43.0053, -178.08, -29.1008, 0.29", "-43.5538, -179.74, -30.056, 0.29", "-44.2981, -181.757, -31.2486, 0.07", "-44.9784, -183.502, -32.3816, 0.29", "-45.5878, -185.12, -33.5352, 0.29", "-46.0247, -186.33, -34.4875, 0.29", "-46.3509, -187.166, -35.2557, 0.29", "-46.6471, -187.874, -35.9829, 0.29", "-47.0763, -188.876, -37.2245, 0.29", "-47.37, -189.555, -38.2495, 0.52", "-47.6366, -190.168, -39.3134, 0.52", "-47.8751, -190.575, -40.1764, 0.52", "-48.1899, -190.89, -41.0782, 0.52", "-48.6659, -191.169, -42.1233, 0.52", "-49.4553, -191.441, -43.6663, 0.52", "-49.9301, -191.526, -44.5368, 0.52", "-51.0112, -191.554, -46.4968, 0.52", "-52.0624, -191.417, -48.5223, 0.52", "-52.3851, -191.332, -49.1405, 0.52", "-53.6008, -190.879, -51.4864, 0.52", "-54.0182, -190.696, -52.2769, 0.52", "-54.2966, -190.561, -52.7897, 0.52", "-55.3123, -190.036, -54.5321, 0.52", "-56.1076, -189.611, -55.8417, 0.52", "-57.1627, -189.002, -57.5499, 0.52", "-57.5216, -188.77, -58.1577, 0.52", "-57.8442, -188.543, -58.8015, 0.52", "-58.2903, -188.228, -59.8201, 0.52", "-58.6678, -187.958, -60.8594, 0.52", "-58.8673, -187.794, -61.6264, 0.52", "-59.4005, -187.36, -64.2293, 0.52", "-59.7078, -187.144, -66.1809, 0.52", "-59.8531, -187.094, -67.4106, 0.52", "-60.0227, -187.184, -69.4849, 0.52", "-60.0579, -187.315, -70.6026, 0.52", "-60.0324, -187.545, -71.8817, 0.52", "-59.9817, -187.699, -72.5237, 0.52", "-59.8069, -188.051, -74.057, 0.52", "-59.7039, -188.215, -75.0492, 0.52", "-59.6057, -188.35, -76.2987, 0.52", "-59.5587, -188.39, -77.0741, 0.52", "-59.5155, -188.408, -77.5372, 0.52", "-59.3635, -188.374, -79.352, 0.52", "-59.2567, -188.255, -80.7144, 0.44", "-59.2438, -188.225, -80.9779, 0.15", "-59.2499, -188.165, -81.8811, 0.07", "-59.2373, -188.183, -83.5131, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-29.1572, -85.6557, -12.8841, 0.07", "-29.7576, -85.6758, -12.2719, 0.07", "-31.3028, -85.7645, -10.9307, 0.07", "-32.3931, -85.8638, -10.056, 0.07", "-33.5859, -86.0745, -9.17423, 0.07", "-34.8292, -86.4098, -8.25339, 0.07", "-36.7629, -87.0687, -6.77886, 0.07", "-38.8448, -87.9767, -5.11245, 0.07", "-41.606, -89.2755, -2.99498, 0.07", "-43.9955, -90.4896, -1.20544, 0.07", "-46.1586, -91.6955, 0.451927, 0.07", "-47.0793, -92.2949, 1.21285, 0.07", "-48.213, -93.2494, 2.27112, 0.07" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-29.1572, -85.6557, -12.8841, 0.07", "-29.5564, -86.8848, -12.0123, 0.07", "-29.9868, -88.2666, -11.1787, 0.07", "-30.4006, -89.6587, -10.329, 0.07", "-30.9198, -91.3209, -9.3246, 0.07", "-32.2138, -95.0956, -7.16412, 0.07", "-32.7689, -96.7149, -6.2373, 0.07", "-34.348, -101.258, -3.65044, 0.15", "-35.3515, -104.035, -2.12426, 0.15", "-36.1502, -106.238, -0.96052, 0.15", "-37.2999, -109.503, 0.707676, 0.07" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "103.515, 48.1295, 8.97221, 0.44", "104.914, 48.6302, 8.89362, 0.44", "106.679, 49.3017, 8.99194, 0.44", "107.526, 49.5917, 9.03358, 0.44", "108.379, 49.8694, 9.07117, 0.44", "109.585, 50.226, 9.14759, 0.44", "110.728, 50.5688, 9.26302, 0.44", "112.763, 51.1873, 9.57029, 0.44", "114.633, 51.7794, 9.97402, 0.44", "115.978, 52.199, 10.3035, 0.44", "117.943, 52.8004, 10.8587, 0.44", "119.456, 53.226, 11.3293, 0.44", "121.118, 53.6809, 11.887, 0.44", "122.309, 53.9926, 12.3344, 0.44", "123.269, 54.2371, 12.763, 0.44", "124.318, 54.4609, 13.1956, 0.44", "125.08, 54.5707, 13.4471, 0.44", "125.851, 54.6501, 13.6023, 0.44", "126.513, 54.7342, 13.696, 0.44", "127.506, 54.9125, 13.8193, 0.44", "129.486, 55.3645, 14.0384, 0.44", "131.267, 55.8798, 14.1884, 0.44", "133.336, 56.5781, 14.3149, 0.44", "134.95, 57.1794, 14.3704, 0.44", "136.468, 57.7771, 14.3773, 0.44", "137.176, 58.0702, 14.3711, 0.22", "138.126, 58.4686, 14.3696, 0.07", "138.751, 58.7351, 14.3522, 0.07", "139.949, 59.2155, 14.3593, 0.07", "140.572, 59.4714, 14.3771, 0.07", "141.603, 59.9765, 14.4814, 0.22", "142.661, 60.6305, 14.7011, 0.22", "143.128, 60.9785, 14.8775, 0.22", "144.217, 61.8137, 15.3262, 0.22", "145.368, 62.6265, 15.7747, 0.22", "146.257, 63.2864, 16.1881, 0.22", "146.9, 63.7325, 16.496, 0.22", "148.263, 64.5562, 17.0917, 0.22", "149.724, 65.3278, 17.6917, 0.22", "152.5, 66.68, 18.8396, 0.37", "154.928, 67.759, 19.8287, 0.37", "156.807, 68.5194, 20.6275, 0.37", "157.928, 68.9487, 21.1136, 0.37", "158.939, 69.3292, 21.5452, 0.37", "160.717, 70.0189, 22.3765, 0.37", "161.987, 70.3955, 22.9363, 0.37", "163.225, 70.6291, 23.3901, 0.22", "164.039, 70.7918, 23.6821, 0.22", "164.713, 70.9361, 23.9024, 0.22", "165.162, 71.03, 24.0225, 0.22", "166.982, 71.4368, 24.4128, 0.22", "169.272, 71.996, 24.9203, 0.22", "170.6, 72.3319, 25.165, 0.22", "172.585, 72.842, 25.5168, 0.22", "173.244, 73.0204, 25.6254, 0.22", "174.238, 73.3257, 25.7645, 0.22", "182.301, 76.1055, 28.8358, 0.22" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "103.515, 48.1295, 8.97221, 0.52", "104.524, 48.8952, 9.47283, 0.52", "105.861, 50.0067, 10.0968, 0.52", "106.657, 50.7534, 10.4316, 0.52", "108.642, 52.977, 11.2537, 0.52", "110.162, 54.931, 12.0271, 0.52", "110.884, 55.9068, 12.4188, 0.52", "112.063, 57.5343, 13.0686, 0.52", "112.917, 58.728, 13.507, 0.52", "114.09, 60.4072, 14.1913, 0.52", "115.463, 62.5735, 15.1561, 0.52", "116.745, 64.5064, 16.1016, 0.52", "117.151, 65.0963, 16.4031, 0.52", "117.767, 65.8634, 16.8735, 0.52", "119.711, 68.0863, 18.4638, 0.52", "120.404, 68.82, 19.0398, 0.29", "121.122, 69.6166, 19.7011, 0.29", "121.543, 70.1798, 20.2541, 0.29", "121.95, 70.8393, 20.9704, 0.29", "122.571, 72.0755, 22.4709, 0.29", "122.945, 73.0524, 23.8, 0.44", "123.196, 73.8559, 25.0246, 0.44", "123.416, 74.8913, 26.6974, 0.44", "123.542, 75.6274, 27.957, 0.44", "123.605, 76.1567, 28.8753, 0.44", "123.684, 76.8031, 30.0791, 0.44", "123.852, 77.8747, 32.2176, 0.44", "123.935, 78.1982, 32.8614, 0.44", "124.097, 78.7169, 33.8201, 0.44", "124.266, 79.297, 34.7839, 0.44", "124.378, 79.8025, 35.4832, 0.44", "124.578, 80.5973, 36.4404, 0.44", "124.654, 80.918, 36.7858, 0.44", "124.878, 81.9213, 37.8128, 0.44", "124.969, 82.3508, 38.209, 0.44", "125.209, 83.4914, 39.1507, 0.37", "125.583, 84.9937, 40.2423, 0.22", "126.075, 86.3643, 41.0603, 0.22", "126.35, 86.9791, 41.3949, 0.22", "126.773, 87.7458, 41.7609, 0.22", "127.113, 88.2897, 41.9607, 0.22", "127.717, 89.2207, 42.1768, 0.22", "128.89, 91.0861, 42.2175, 0.22", "129.3, 91.6785, 42.1155, 0.22", "130.13, 92.7864, 41.7404, 0.22", "131.16, 94.0145, 41.0926, 0.22", "131.8, 94.6648, 40.5772, 0.22", "132.846, 95.5076, 39.5596, 0.22", "133.479, 95.8632, 38.8762, 0.22", "134.082, 96.0999, 38.2312, 0.22", "134.271, 96.1438, 38.0349, 0.22", "134.825, 96.2016, 37.5282, 0.22", "135.534, 96.192, 36.9026, 0.22", "136.276, 96.1623, 36.2826, 0.22", "136.926, 96.1504, 35.736, 0.22", "137.301, 96.157, 35.4158, 0.22", "137.626, 96.1732, 35.1175, 0.22", "138.853, 96.255, 33.8524, 0.22", "139.388, 96.2901, 33.2038, 0.22", "139.868, 96.3156, 32.5457, 0.22", "140.28, 96.3179, 31.9468, 0.22", "140.711, 96.3195, 31.3286, 0.22", "142.446, 96.4183, 28.833, 0.22", "143.029, 96.4827, 28.0009, 0.22", "143.757, 96.5747, 26.9004, 0.22", "144.596, 96.7153, 25.5669, 0.22", "145.065, 96.8161, 24.7727, 0.22", "145.975, 97.0557, 23.0968, 0.22", "146.193, 97.1301, 22.6362, 0.22", "146.753, 97.3461, 21.4643, 0.22", "146.926, 97.4355, 21.0696, 0.22", "147.148, 97.5943, 20.4051, 0.22", "147.353, 97.7045, 19.4746, 0.22", "147.423, 97.6805, 18.9499, 0.22", "153.93, 102.415, 20.2527, 0.22", "160.358, 107.124, 21.9759, 0.22", "165.639, 112.887, 24.2892, 0.22", "171.491, 117.599, 27.4508, 0.22", "176.832, 121.815, 31.9412, 0.22", "183.046, 124.946, 36.1877, 0.22", "188.326, 128.436, 41.3252, 0.22", "193.171, 132.465, 46.4972, 0.22", "198.228, 135.598, 52.0713, 0.22" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "197.093, -18.9724, -16.676, 0.29", "198.377, -19.6322, -16.7996, 0.29", "200.869, -20.9125, -17.0395, 0.29", "204.697, -22.8795, -17.4081, 0.29", "208.419, -24.792, -17.7665, 0.29", "211.494, -26.3716, -18.0625, 0.29", "212.992, -27.1415, -18.2068, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "197.093, -18.9724, -16.676, 0.29", "197.315, -19.5648, -15.2335, 0.29", "197.73, -20.7091, -12.5014, 0.29", "198.085, -21.883, -9.8008, 0.29", "198.304, -22.5843, -8.48034, 0.29", "198.523, -23.3571, -6.82479, 0.29", "198.689, -23.9482, -5.45051, 0.29", "199.116, -25.4477, -1.62853, 0.29", "199.318, -26.229, 0.416533, 0.29", "199.615, -27.3707, 3.60714, 0.29", "200.438, -29.7607, 11.0413, 0.29", "200.77, -30.5203, 13.6554, 0.29", "201.086, -31.0775, 15.7448, 0.29", "201.443, -31.5463, 17.5635, 0.29", "201.844, -31.9823, 19.266, 0.29", "202.474, -32.5535, 21.7901, 0.29", "202.936, -32.9421, 22.9099, 0.29", "203.627, -33.4909, 24.336, 0.29", "204.367, -34.0588, 25.6347, 0.29", "205.31, -34.7393, 27.0856, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-66.8821, -236.807, -42.5461, 0.81", "-66.0113, -237.859, -42.6955, 0.81", "-64.7989, -239.368, -42.8228, 0.81", "-63.0445, -241.733, -42.8457, 0.81", "-61.7812, -243.655, -42.7351, 0.59", "-61.2292, -244.595, -42.6419, 0.59", "-60.6224, -245.74, -42.5132, 0.59", "-59.7554, -247.684, -42.2979, 0.66", "-59.2172, -249.223, -42.1085, 0.66", "-58.6666, -251.031, -41.9414, 0.66", "-58.3261, -252.032, -41.9021, 0.66", "-57.927, -253.06, -41.9093, 0.66", "-56.8568, -255.422, -42.1063, 0.96", "-56.1839, -256.658, -42.27, 0.96", "-54.9524, -258.462, -42.6102, 0.96", "-53.9619, -259.669, -42.8494, 0.96", "-53.1314, -260.533, -43.0418, 0.96", "-52.2658, -261.362, -43.237, 0.96", "-51.3325, -262.258, -43.4176, 0.96", "-50.092, -263.55, -43.6523, 0.96", "-49.3783, -264.377, -43.7506, 0.96", "-47.0821, -267.191, -44.0107, 0.81", "-46.1588, -268.312, -44.1133, 0.66", "-45.2532, -269.439, -44.1815, 0.66", "-44.4253, -270.476, -44.1526, 0.37", "-43.3261, -271.939, -43.8836, 0.37", "-42.9491, -272.447, -43.71, 0.37", "-42.3202, -273.245, -43.2616, 0.37", "-41.7836, -273.884, -42.8304, 0.44", "-40.1769, -275.858, -41.4293, 0.44", "-39.0722, -277.294, -40.3267, 0.44", "-38.2875, -278.426, -39.4506, 0.44", "-37.6091, -279.503, -38.5589, 0.44", "-36.7004, -281.023, -37.2999, 0.44", "-35.6001, -282.908, -35.7603, 0.22", "-35.2484, -283.555, -35.2551, 0.22", "-34.1355, -285.697, -33.6532, 0.22", "-33.4364, -287.296, -32.5915, 0.22", "-32.6435, -289.661, -31.2591, 0.22", "-32.2587, -291.094, -30.5727, 0.22", "-32.1138, -292.146, -30.1926, 0.22", "-32.1239, -293.528, -29.8564, 0.37", "-32.3439, -295.644, -29.6333, 0.37", "-32.5788, -297.828, -29.5963, 0.37", "-32.6398, -298.473, -29.6217, 0.59", "-32.7843, -301.49, -29.8503, 0.59", "-32.7761, -303.832, -30.0406, 0.59", "-32.6487, -307.044, -30.2146, 0.59", "-32.3834, -311.059, -30.2842, 0.59", "-32.2571, -312.958, -30.2102, 0.59", "-32.1971, -314.373, -30.0761, 0.59", "-32.0827, -316.559, -29.7698, 0.59", "-32.0409, -318.856, -29.2836, 0.59", "-32.1237, -320.278, -28.7845, 0.59", "-32.561, -322.408, -27.8022, 0.44", "-32.965, -323.769, -27.1641, 0.44", "-33.4527, -325.026, -26.6148, 0.44", "-34.3467, -327.021, -25.8039, 0.44", "-36.3213, -331.089, -24.2081, 0.44", "-38.6983, -335.653, -22.2219, 0.44", "-39.5126, -337.125, -21.5819, 0.44", "-40.5776, -338.848, -20.826, 0.44", "-41.3568, -339.981, -20.3234, 0.44", "-42.0235, -340.935, -19.9785, 0.44", "-42.7119, -342.039, -19.5806, 0.44", "-43.6088, -343.429, -18.8396, 0.44", "-44.2084, -344.354, -18.3472, 0.66", "-44.8706, -345.444, -17.815, 0.66", "-46.3274, -348.095, -16.7, 0.66", "-47.3706, -350.15, -15.9824, 0.66", "-48.5877, -352.818, -15.1417, 0.37", "-49.7189, -355.688, -14.2485, 0.37", "-50.2721, -357.423, -13.7177, 0.37", "-50.7228, -359.275, -13.1604, 0.37", "-51.021, -361.368, -12.4794, 0.37", "-51.1217, -363.003, -11.9677, 0.37", "-51.032, -364.914, -11.2513, 0.37", "-50.8647, -366.227, -10.6051, 0.37", "-50.5975, -367.976, -9.56843, 0.37", "-50.3057, -370.058, -8.10405, 0.37", "-50.1361, -371.313, -7.13164, 0.37", "-50.0028, -373.045, -5.78703, 0.37", "-49.9655, -374.675, -4.52125, 0.15", "-50.0311, -376.615, -3.03032, 0.15", "-50.1654, -377.995, -1.95137, 0.15", "-50.3128, -378.791, -1.34211, 0.15", "-50.7321, -381.065, 0.351085, 0.15", "-50.9367, -382.355, 1.25776, 0.15", "-51.1318, -383.922, 2.27098, 0.15", "-51.3046, -385.611, 3.33625, 0.15", "-51.5012, -387.346, 4.41326, 0.15", "-51.8324, -389.55, 5.75091, 0.15", "-52.0849, -391.208, 6.74644, 0.15", "-52.3055, -392.688, 7.57827, 0.15", "-52.5138, -394.145, 8.312, 0.15", "-52.7839, -396.339, 9.28584, 0.15", "-52.9408, -397.488, 9.79614, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-66.8821, -236.807, -42.5461, 0.66", "-65.1818, -237.423, -41.4607, 0.66", "-64.3022, -237.741, -40.8991, 0.66", "-63.521, -238.024, -40.4004, 0.66" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "212.992, -27.1415, -18.2068, 0.22", "214.387, -27.7213, -18.6888, 0.22", "216.668, -28.6688, -19.4766, 0.22", "218.523, -29.4396, -20.1173, 0.22", "220.057, -30.0771, -20.6473, 0.22", "221.215, -30.5579, -21.047, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "212.992, -27.1415, -18.2068, 0.15", "214.744, -29.0017, -17.283, 0.15", "216.294, -30.6485, -16.4651, 0.15", "217.734, -32.1778, -15.7057, 0.15" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_38", "dend_35", "dend_26", "dend_7", "dend_0", "dend_63", "dend_56", "dend_54", "dend_39", "dend_37", "dend_36", "dend_28", "dend_27", "dend_9", "dend_8", "dend_2", "dend_1", "dend_60", "dend_57", "dend_51", "dend_40", "dend_32", "dend_29", "dend_15", "dend_10", "dend_6", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_53", "dend_52", "dend_42", "dend_41", "dend_34", "dend_33", "dend_31", "dend_30", "dend_17", "dend_16", "dend_14", "dend_11", "dend_5", "dend_4", "dend_46", "dend_43", "dend_23", "dend_18", "dend_13", "dend_12", "dend_48", "dend_47", "dend_45", "dend_44", "dend_25", "dend_24", "dend_20", "dend_19", "dend_50", "dend_49", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_55", "dend_38", "dend_35", "dend_26", "dend_7", "dend_0", "dend_63", "dend_56", "dend_54", "dend_39", "dend_37", "dend_36", "dend_28", "dend_27", "dend_9", "dend_8", "dend_2", "dend_1", "dend_60", "dend_57", "dend_51", "dend_40", "dend_32", "dend_29", "dend_15", "dend_10", "dend_6", "dend_3", "dend_62", "dend_61", "dend_59", "dend_58", "dend_53", "dend_52", "dend_42", "dend_41", "dend_34", "dend_33", "dend_31", "dend_30", "dend_17", "dend_16", "dend_14", "dend_11", "dend_5", "dend_4", "dend_46", "dend_43", "dend_23", "dend_18", "dend_13", "dend_12", "dend_48", "dend_47", "dend_45", "dend_44", "dend_25", "dend_24", "dend_20", "dend_19", "dend_50", "dend_49", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_26", "dend_26", "dend_26", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_40", "dend_40", "dend_40", "dend_40", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L6_LBC_0f06cad592_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_63, id: dend_63, parent: dend_55
create dend_63
public dend_63
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_38
create dend_54
public dend_54
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_39
create dend_51
public dend_51
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_15, id: dend_15, parent: dend_9
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_38, dend_35, dend_26, dend_7, dend_0, dend_63, dend_56, dend_54, dend_39, dend_37, dend_36, dend_28, dend_27, dend_9, dend_8, dend_2, dend_1, dend_60, dend_57, dend_51, dend_40, dend_32, dend_29, dend_15, dend_10, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_42, dend_41, dend_34, dend_33, dend_31, dend_30, dend_17, dend_16, dend_14, dend_11, dend_5, dend_4, dend_46, dend_43, dend_23, dend_18, dend_13, dend_12, dend_48, dend_47, dend_45, dend_44, dend_25, dend_24, dend_20, dend_19, dend_50, dend_49, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_38, dend_35, dend_26, dend_7, dend_0, dend_63, dend_56, dend_54, dend_39, dend_37, dend_36, dend_28, dend_27, dend_9, dend_8, dend_2, dend_1, dend_60, dend_57, dend_51, dend_40, dend_32, dend_29, dend_15, dend_10, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_42, dend_41, dend_34, dend_33, dend_31, dend_30, dend_17, dend_16, dend_14, dend_11, dend_5, dend_4, dend_46, dend_43, dend_23, dend_18, dend_13, dend_12, dend_48, dend_47, dend_45, dend_44, dend_25, dend_24, dend_20, dend_19, dend_50, dend_49, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_66
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_26, dend_26, dend_26, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_60, dend_60, dend_60, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_55(0), soma_0(0.45000064008978086)
    connect dend_38(0), soma_0(0.45000064008978086)
    connect dend_35(0), soma_0(0.45000064008978086)
    connect dend_26(0), soma_0(0.45000064008978086)
    connect dend_7(0), soma_0(0.45000064008978086)
    connect dend_0(0), soma_0(0.45000064008978086)
    connect axon_0(0), soma_0(1.0)
    connect dend_63(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_15(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.47547, -21.1079, 2.51381, 3.10391 ) }
    soma_0 { pt3dadd( -2.25244, -19.1651, 2.29568, 4.54795 ) }
    soma_0 { pt3dadd( -2.02941, -17.2222, 2.07754, 6.86414 ) }
    soma_0 { pt3dadd( -1.80638, -15.2794, 1.85941, 9.59749 ) }
    soma_0 { pt3dadd( -1.58335, -13.3366, 1.64128, 11.8194 ) }
    soma_0 { pt3dadd( -1.36032, -11.3938, 1.42315, 13.5674 ) }
    soma_0 { pt3dadd( -1.13729, -9.45099, 1.20502, 14.4744 ) }
    soma_0 { pt3dadd( -0.914264, -7.50817, 0.986887, 14.6773 ) }
    soma_0 { pt3dadd( -0.691235, -5.56535, 0.768756, 14.5415 ) }
    soma_0 { pt3dadd( -0.468206, -3.62254, 0.550625, 13.3405 ) }
    soma_0 { pt3dadd( -0.245177, -1.67972, 0.332493, 12.1443 ) }
    soma_0 { pt3dadd( -0.0221479, 0.263091, 0.114362, 10.4715 ) }
    soma_0 { pt3dadd( 0.200881, 2.20591, -0.103769, 8.18984 ) }
    soma_0 { pt3dadd( 0.42391, 4.14872, -0.321901, 6.18554 ) }
    soma_0 { pt3dadd( 0.64694, 6.09154, -0.540032, 4.57765 ) }
    soma_0 { pt3dadd( 0.869969, 8.03435, -0.758163, 3.2886 ) }
    soma_0 { pt3dadd( 1.093, 9.97717, -0.976295, 3.75178 ) }
    soma_0 { pt3dadd( 1.31603, 11.92, -1.19443, 4.68351 ) }
    soma_0 { pt3dadd( 1.53906, 13.8628, -1.41256, 5.54689 ) }
    soma_0 { pt3dadd( 1.76209, 15.8056, -1.63069, 4.92105 ) }
    soma_0 { pt3dadd( 1.98511, 17.7484, -1.84882, 3.22657 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 21/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -3.49001, -19.5048, 2.0349, 1.25 ) }
    dend_55 { pt3dadd( -3.05706, -21.1745, 3.35025, 1.25 ) }
    dend_55 { pt3dadd( -2.76864, -22.2867, 4.22648, 1.33 ) }
    dend_55 { pt3dadd( -2.501, -23.3188, 5.03958, 1.33 ) }
    dend_55 { pt3dadd( -2.17765, -24.5658, 6.02196, 1.33 ) }
    dend_55 { pt3dadd( -1.85952, -25.7927, 6.98846, 1.33 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 27/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -4.04001, -20.5248, -0.915102, 2.06 ) }
    dend_38 { pt3dadd( -4.50113, -21.7366, 0.0491133, 2.06 ) }
    dend_38 { pt3dadd( -4.93362, -22.8732, 0.953451, 2.06 ) }
    dend_38 { pt3dadd( -5.80158, -25.1542, 2.76838, 2.06 ) }
    dend_38 { pt3dadd( -5.99663, -25.6668, 3.17623, 2.06 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 32/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -0.350012, 11.1452, -7.6651, 0.59 ) }
    dend_35 { pt3dadd( -1.24419, 10.2498, -7.58475, 0.44 ) }
    dend_35 { pt3dadd( -2.21495, 9.30806, -7.45855, 0.44 ) }
    dend_35 { pt3dadd( -4.54997, 7.13745, -6.95553, 0.37 ) }
    dend_35 { pt3dadd( -6.03351, 5.79459, -6.57527, 0.22 ) }
    dend_35 { pt3dadd( -9.64206, 2.53056, -5.48729, 0.22 ) }
    dend_35 { pt3dadd( -11.0991, 1.20244, -4.99636, 0.22 ) }
    dend_35 { pt3dadd( -13.1251, -0.633253, -4.1587, 0.29 ) }
    dend_35 { pt3dadd( -15.9421, -3.17319, -2.743, 0.29 ) }
    dend_35 { pt3dadd( -18.8049, -5.6908, -1.04164, 0.15 ) }
    dend_35 { pt3dadd( -20.5545, -7.18902, 0.155816, 0.15 ) }
    dend_35 { pt3dadd( -21.8413, -8.27756, 1.17514, 0.15 ) }
    dend_35 { pt3dadd( -23.8297, -9.98962, 2.94108, 0.15 ) }
    dend_35 { pt3dadd( -25.5555, -11.5133, 4.67047, 0.15 ) }
    dend_35 { pt3dadd( -26.8523, -12.718, 6.12202, 0.15 ) }
    dend_35 { pt3dadd( -28.4513, -14.2717, 8.12292, 0.15 ) }
    dend_35 { pt3dadd( -29.569, -15.3602, 9.53324, 0.15 ) }
    dend_35 { pt3dadd( -30.8896, -16.7147, 11.1826, 0.15 ) }
    dend_35 { pt3dadd( -32.7262, -18.7539, 13.3409, 0.15 ) }
    dend_35 { pt3dadd( -34.2387, -20.5459, 15.0455, 0.15 ) }
    dend_35 { pt3dadd( -36.3289, -23.0774, 17.2752, 0.15 ) }
    dend_35 { pt3dadd( -38.1519, -25.3259, 19.0786, 0.15 ) }
    dend_35 { pt3dadd( -40.4638, -28.1375, 21.2294, 0.15 ) }
    dend_35 { pt3dadd( -43.6323, -32.022, 24.0994, 0.15 ) }
    dend_35 { pt3dadd( -45.2659, -34.1036, 25.5868, 0.15 ) }
    dend_35 { pt3dadd( -46.5473, -35.7217, 26.7121, 0.15 ) }
    dend_35 { pt3dadd( -47.9859, -37.4032, 27.8907, 0.15 ) }
    dend_35 { pt3dadd( -49.8043, -39.316, 29.2885, 0.22 ) }
    dend_35 { pt3dadd( -52.5451, -41.9736, 31.4163, 0.22 ) }
    dend_35 { pt3dadd( -54.3299, -43.6279, 32.8568, 0.22 ) }
    dend_35 { pt3dadd( -56.54, -45.6441, 34.7119, 0.22 ) }
    dend_35 { pt3dadd( -59.7479, -48.6218, 37.6243, 0.22 ) }
    dend_35 { pt3dadd( -61.9391, -50.6401, 39.673, 0.22 ) }
    dend_35 { pt3dadd( -64.516, -52.9482, 42.0139, 0.22 ) }
    dend_35 { pt3dadd( -66.1823, -54.3491, 43.5158, 0.22 ) }
    dend_35 { pt3dadd( -67.12, -55.1479, 44.4314, 0.37 ) }
    dend_35 { pt3dadd( -68.4511, -56.5466, 46.0966, 0.37 ) }
    dend_35 { pt3dadd( -69.5374, -58.183, 48.0429, 0.37 ) }
    dend_35 { pt3dadd( -78.9241, -67.5545, 53.6324, 0.37 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 71/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 0.099989, 19.0152, -1.8651, 1.18 ) }
    dend_26 { pt3dadd( 0.0261982, 20.9137, -0.219163, 1.18 ) }
    dend_26 { pt3dadd( -0.0257819, 22.2512, 0.940276, 1.4 ) }
    dend_26 { pt3dadd( -0.17384, 26.0606, 4.24278, 1.55 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 75/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 3.21999, 14.5252, -5.5151, 1.33 ) }
    dend_7 { pt3dadd( 3.70484, 16.0683, -6.74699, 1.33 ) }
    dend_7 { pt3dadd( 4.27607, 17.8862, -8.19831, 1.33 ) }
    dend_7 { pt3dadd( 4.74403, 19.3755, -9.38726, 1.55 ) }
    dend_7 { pt3dadd( 5.2281, 20.9161, -10.6172, 1.55 ) }
    dend_7 { pt3dadd( 5.64657, 22.2479, -11.6804, 1.55 ) }
    dend_7 { pt3dadd( 6.15433, 23.8639, -12.9705, 1.55 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 82/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.43001, 17.6752, -6.9151, 1.11 ) }
    dend_0 { pt3dadd( -3.06428, 18.2579, -6.9151, 1.11 ) }
    dend_0 { pt3dadd( -3.92459, 19.1757, -6.9151, 1.18 ) }
    dend_0 { pt3dadd( -4.40965, 19.7378, -6.9151, 1.4 ) }
    dend_0 { pt3dadd( -5.10267, 20.5602, -6.9151, 1.4 ) }
    dend_0 { pt3dadd( -5.35354, 20.8431, -6.92864, 1.4 ) }
    dend_0 { pt3dadd( -6.33438, 21.8564, -7.02651, 1.25 ) }
    dend_0 { pt3dadd( -6.89378, 22.3765, -7.10155, 1.25 ) }
    dend_0 { pt3dadd( -8.0307, 23.2859, -7.27698, 1.25 ) }
    dend_0 { pt3dadd( -9.00229, 23.932, -7.43362, 1.25 ) }
    dend_0 { pt3dadd( -10.7015, 24.8145, -7.70495, 0.81 ) }
    dend_0 { pt3dadd( -11.6951, 25.2093, -7.85183, 0.81 ) }
    dend_0 { pt3dadd( -12.6793, 25.4962, -7.98373, 0.59 ) }
    dend_0 { pt3dadd( -13.7615, 25.7424, -8.1131, 0.81 ) }
    dend_0 { pt3dadd( -14.665, 25.8875, -8.21364, 0.81 ) }
    dend_0 { pt3dadd( -15.556, 25.986, -8.29186, 0.81 ) }
    dend_0 { pt3dadd( -16.6164, 26.072, -8.32202, 1.03 ) }
    dend_0 { pt3dadd( -17.5706, 26.1918, -8.31552, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( -17.8489, 26.2447, -8.31312, 1.18 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 1/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.98511, 17.7484, -1.84882, 1.04623 ) }
    axon_0 { pt3dadd( 3.69583, 32.6505, -1.84882, 1.04623 ) }
    axon_0 { pt3dadd( 5.40654, 47.5527, -1.84882, 1.04623 ) }
    // Section: dend_63, id: dend_63, parent: dend_55 (entry count 4/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -1.85952, -25.7927, 6.98846, 1.11 ) }
    dend_63 { pt3dadd( -1.68019, -29.3484, 7.90388, 1.11 ) }
    dend_63 { pt3dadd( -1.49287, -32.2009, 9.13831, 1.11 ) }
    dend_63 { pt3dadd( -0.999447, -35.7752, 10.9027, 1.11 ) }
    dend_63 { pt3dadd( -0.763922, -36.7581, 11.4296, 1.11 ) }
    dend_63 { pt3dadd( -0.313686, -38.1249, 12.1982, 1.11 ) }
    dend_63 { pt3dadd( 0.539976, -40.3731, 13.4698, 1.11 ) }
    dend_63 { pt3dadd( 2.02668, -43.2699, 15.3114, 1.11 ) }
    dend_63 { pt3dadd( 3.15599, -45.0814, 16.5032, 0.96 ) }
    dend_63 { pt3dadd( 4.65252, -47.1656, 17.9522, 0.81 ) }
    dend_63 { pt3dadd( 6.13747, -49.232, 19.2415, 0.81 ) }
    dend_63 { pt3dadd( 7.2378, -50.7945, 20.0451, 0.81 ) }
    dend_63 { pt3dadd( 8.01924, -51.9637, 20.4552, 0.81 ) }
    dend_63 { pt3dadd( 8.93748, -53.442, 20.7685, 0.59 ) }
    dend_63 { pt3dadd( 10.1017, -55.5777, 21.0538, 0.59 ) }
    dend_63 { pt3dadd( 11.0358, -57.474, 21.0742, 0.88 ) }
    dend_63 { pt3dadd( 12.1623, -59.8194, 20.8445, 0.88 ) }
    dend_63 { pt3dadd( 13.1342, -61.7507, 20.5419, 0.88 ) }
    dend_63 { pt3dadd( 14.0756, -63.5224, 20.2363, 0.88 ) }
    dend_63 { pt3dadd( 15.0409, -65.1484, 19.9554, 0.88 ) }
    dend_63 { pt3dadd( 16.1012, -66.5678, 19.7777, 0.88 ) }
    dend_63 { pt3dadd( 16.9296, -67.4357, 19.7896, 0.88 ) }
    dend_63 { pt3dadd( 18.6855, -68.9268, 20.2087, 0.88 ) }
    dend_63 { pt3dadd( 20.0581, -69.988, 20.9013, 0.88 ) }
    dend_63 { pt3dadd( 20.7076, -70.5242, 21.4018, 0.88 ) }
    dend_63 { pt3dadd( 21.7444, -71.5605, 22.4238, 0.88 ) }
    dend_63 { pt3dadd( 22.4275, -72.2755, 23.1984, 0.88 ) }
    dend_63 { pt3dadd( 23.1378, -73.1363, 24.1173, 0.88 ) }
    dend_63 { pt3dadd( 23.9311, -74.4114, 25.2904, 0.88 ) }
    dend_63 { pt3dadd( 24.6613, -76.018, 26.4362, 0.88 ) }
    dend_63 { pt3dadd( 25.1992, -77.5813, 27.3539, 0.88 ) }
    dend_63 { pt3dadd( 28.6264, -89.5924, 31.3867, 0.88 ) }
    dend_63 { pt3dadd( 31.8305, -101.308, 36.3623, 0.88 ) }
    dend_63 { pt3dadd( 35.3621, -112.448, 42.3371, 0.88 ) }
    dend_63 { pt3dadd( 40.3295, -123.151, 48.0862, 0.88 ) }
    dend_63 { pt3dadd( 44.2977, -133.874, 54.531, 0.88 ) }
    dend_63 { pt3dadd( 50.3468, -142.594, 62.2543, 0.88 ) }
    dend_63 { pt3dadd( 57.5409, -150.678, 69.6826, 0.88 ) }
    dend_63 { pt3dadd( 64.8175, -158.122, 77.677, 0.88 ) }
    dend_63 { pt3dadd( 73.522, -165.718, 83.9064, 0.88 ) }
    dend_63 { pt3dadd( 81.4851, -171.936, 92.2853, 0.88 ) }
    dend_63 { pt3dadd( 88.6278, -177.924, 101.526, 0.88 ) }
    dend_63 { pt3dadd( 94.8517, -182.832, 111.988, 0.88 ) }
    dend_63 { pt3dadd( 99.6582, -189.456, 122.25, 0.88 ) }
    dend_63 { pt3dadd( 105.901, -197.054, 130.944, 0.88 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 49/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -1.85952, -25.7927, 6.98846, 0.96 ) }
    dend_56 { pt3dadd( -0.979057, -26.3716, 7.61346, 0.96 ) }
    dend_56 { pt3dadd( -0.0541292, -26.9653, 8.29459, 0.81 ) }
    dend_56 { pt3dadd( 1.3975, -27.9657, 9.44971, 0.81 ) }
    dend_56 { pt3dadd( 3.24324, -29.3162, 10.971, 0.59 ) }
    dend_56 { pt3dadd( 4.93631, -30.5951, 12.4878, 0.59 ) }
    dend_56 { pt3dadd( 5.61355, -31.0984, 13.0852, 0.59 ) }
    dend_56 { pt3dadd( 6.55841, -31.7659, 13.8895, 0.59 ) }
    dend_56 { pt3dadd( 7.57007, -32.417, 14.7068, 0.59 ) }
    dend_56 { pt3dadd( 8.72772, -33.0616, 15.5904, 0.59 ) }
    dend_56 { pt3dadd( 10.4927, -33.9207, 17.0062, 0.59 ) }
    dend_56 { pt3dadd( 11.9476, -34.5666, 18.262, 0.37 ) }
    dend_56 { pt3dadd( 13.4857, -35.1099, 19.7479, 0.37 ) }
    dend_56 { pt3dadd( 13.813, -35.1864, 20.1071, 0.37 ) }
    dend_56 { pt3dadd( 14.26, -35.2371, 20.6259, 0.37 ) }
    dend_56 { pt3dadd( 15.4453, -35.2838, 22.0218, 0.37 ) }
    dend_56 { pt3dadd( 16.202, -35.2725, 22.858, 0.37 ) }
    dend_56 { pt3dadd( 17.8898, -35.194, 24.7854, 0.37 ) }
    dend_56 { pt3dadd( 18.4491, -35.1661, 25.3992, 0.37 ) }
    dend_56 { pt3dadd( 19.7405, -35.1279, 26.7051, 0.37 ) }
    dend_56 { pt3dadd( 21.0145, -35.0953, 27.8348, 0.37 ) }
    dend_56 { pt3dadd( 22.3271, -35.065, 28.7515, 0.37 ) }
    dend_56 { pt3dadd( 23.1477, -35.0464, 29.1967, 0.37 ) }
    dend_56 { pt3dadd( 24.4143, -35.0069, 29.6364, 0.37 ) }
    dend_56 { pt3dadd( 34.5716, -38.6665, 35.9273, 0.37 ) }
    // Section: dend_54, id: dend_54, parent: dend_38 (entry count 74/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -5.99663, -25.6668, 3.17623, 0.29 ) }
    dend_54 { pt3dadd( -6.12632, -25.755, 2.14466, 0.29 ) }
    dend_54 { pt3dadd( -6.52805, -25.9841, -1.01654, 0.44 ) }
    dend_54 { pt3dadd( -6.69567, -26.078, -2.36036, 0.44 ) }
    dend_54 { pt3dadd( -6.8541, -26.2011, -3.43862, 0.66 ) }
    dend_54 { pt3dadd( -6.98788, -26.3563, -4.26615, 0.66 ) }
    dend_54 { pt3dadd( -7.14167, -26.5485, -4.9576, 0.66 ) }
    dend_54 { pt3dadd( -7.44442, -26.9284, -5.74585, 0.88 ) }
    dend_54 { pt3dadd( -7.59509, -27.1333, -5.99181, 0.88 ) }
    dend_54 { pt3dadd( -8.38641, -28.1686, -6.76456, 1.03 ) }
    dend_54 { pt3dadd( -9.12644, -29.0756, -7.17715, 1.03 ) }
    dend_54 { pt3dadd( -10.3173, -30.3688, -7.60838, 1.18 ) }
    dend_54 { pt3dadd( -11.7073, -31.7428, -7.99949, 1.18 ) }
    dend_54 { pt3dadd( -12.6065, -32.6218, -8.21359, 1.18 ) }
    dend_54 { pt3dadd( -14.4137, -34.4528, -8.62906, 0.88 ) }
    dend_54 { pt3dadd( -16.1704, -36.3025, -9.03201, 0.88 ) }
    dend_54 { pt3dadd( -18.0976, -38.3555, -9.59709, 0.88 ) }
    dend_54 { pt3dadd( -19.8398, -40.3121, -10.2594, 0.88 ) }
    dend_54 { pt3dadd( -20.7624, -41.376, -10.705, 0.88 ) }
    dend_54 { pt3dadd( -21.9513, -42.7915, -11.4792, 0.59 ) }
    dend_54 { pt3dadd( -22.4792, -43.4348, -11.9728, 0.59 ) }
    dend_54 { pt3dadd( -23.6725, -45.0129, -13.4637, 0.59 ) }
    dend_54 { pt3dadd( -24.4111, -46.1266, -14.5358, 0.59 ) }
    dend_54 { pt3dadd( -24.7062, -46.5944, -15.0114, 0.81 ) }
    dend_54 { pt3dadd( -25.3751, -47.6629, -16.0774, 0.81 ) }
    dend_54 { pt3dadd( -25.8875, -48.5177, -16.8627, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_54 { pt3dadd( -26.6187, -49.8987, -17.9379, 0.81 ) }
    dend_54 { pt3dadd( -27.6285, -52.0121, -19.3676, 0.59 ) }
    dend_54 { pt3dadd( -28.53, -53.9157, -20.6316, 0.59 ) }
    dend_54 { pt3dadd( -28.9714, -54.8059, -21.2156, 0.59 ) }
    dend_54 { pt3dadd( -29.3056, -55.4149, -21.6401, 0.59 ) }
    dend_54 { pt3dadd( -30.1977, -56.8525, -22.6186, 0.74 ) }
    dend_54 { pt3dadd( -31.0877, -58.0732, -23.5335, 0.74 ) }
    dend_54 { pt3dadd( -31.9905, -59.194, -24.4934, 0.74 ) }
    dend_54 { pt3dadd( -32.5713, -59.8971, -25.0903, 0.74 ) }
    dend_54 { pt3dadd( -33.6525, -61.1532, -26.1823, 0.96 ) }
    dend_54 { pt3dadd( -34.9558, -62.6094, -27.438, 1.11 ) }
    dend_54 { pt3dadd( -36.5461, -64.4375, -28.9828, 1.11 ) }
    dend_54 { pt3dadd( -37.3513, -65.4281, -29.7683, 1.11 ) }
    dend_54 { pt3dadd( -38.0399, -66.2798, -30.4493, 1.11 ) }
    dend_54 { pt3dadd( -39.0914, -67.5838, -31.5206, 0.88 ) }
    dend_54 { pt3dadd( -39.7396, -68.3174, -32.1779, 0.88 ) }
    dend_54 { pt3dadd( -40.5765, -69.1481, -33.0861, 0.88 ) }
    dend_54 { pt3dadd( -41.4438, -69.9363, -33.9961, 0.88 ) }
    dend_54 { pt3dadd( -42.2891, -70.6495, -34.8766, 0.88 ) }
    dend_54 { pt3dadd( -43.4162, -71.4647, -36.0492, 0.88 ) }
    dend_54 { pt3dadd( -44.7985, -72.3496, -37.4222, 0.88 ) }
    dend_54 { pt3dadd( -45.9403, -73.0502, -38.5052, 0.88 ) }
    dend_54 { pt3dadd( -46.6978, -73.4844, -39.173, 1.11 ) }
    dend_54 { pt3dadd( -47.838, -74.1196, -40.1405, 1.11 ) }
    dend_54 { pt3dadd( -50.4475, -75.6355, -42.3061, 0.96 ) }
    dend_54 { pt3dadd( -51.3171, -76.1939, -43.0761, 0.66 ) }
    dend_54 { pt3dadd( -52.5718, -77.1762, -44.2442, 0.66 ) }
    dend_54 { pt3dadd( -53.2294, -77.7956, -44.9289, 0.66 ) }
    dend_54 { pt3dadd( -54.0513, -78.7638, -45.923, 0.66 ) }
    dend_54 { pt3dadd( -54.6719, -79.7265, -46.7922, 0.88 ) }
    dend_54 { pt3dadd( -55.8116, -82.0537, -48.5905, 0.88 ) }
    dend_54 { pt3dadd( -56.484, -83.534, -49.6422, 0.88 ) }
    dend_54 { pt3dadd( -57.1876, -85.0428, -50.6633, 0.88 ) }
    dend_54 { pt3dadd( -57.7516, -86.2459, -51.4536, 0.88 ) }
    dend_54 { pt3dadd( -58.2337, -87.2373, -52.0765, 0.88 ) }
    dend_54 { pt3dadd( -59.3133, -89.3069, -53.2845, 0.88 ) }
    dend_54 { pt3dadd( -59.8375, -90.1921, -53.7498, 0.88 ) }
    dend_54 { pt3dadd( -60.745, -91.4549, -54.4558, 1.03 ) }
    dend_54 { pt3dadd( -61.5012, -92.3464, -54.9909, 1.03 ) }
    dend_54 { pt3dadd( -62.4359, -93.2817, -55.7339, 1.03 ) }
    dend_54 { pt3dadd( -63.1937, -93.9788, -56.3683, 0.74 ) }
    dend_54 { pt3dadd( -63.845, -94.5351, -56.887, 0.74 ) }
    dend_54 { pt3dadd( -64.7205, -95.249, -57.5965, 0.74 ) }
    dend_54 { pt3dadd( -66.0269, -96.2894, -58.6509, 0.81 ) }
    dend_54 { pt3dadd( -67.5309, -97.5391, -59.841, 0.88 ) }
    dend_54 { pt3dadd( -68.4444, -98.3942, -60.6209, 0.88 ) }
    dend_54 { pt3dadd( -69.2478, -99.2385, -61.3358, 0.88 ) }
    dend_54 { pt3dadd( -70.285, -100.476, -62.352, 0.88 ) }
    dend_54 { pt3dadd( -71.0878, -101.506, -63.1971, 0.88 ) }
    dend_54 { pt3dadd( -71.9041, -102.543, -64.0504, 0.59 ) }
    dend_54 { pt3dadd( -72.9905, -103.87, -65.1902, 0.88 ) }
    dend_54 { pt3dadd( -74.0116, -105.049, -66.3196, 0.88 ) }
    dend_54 { pt3dadd( -74.842, -105.983, -67.2144, 0.88 ) }
    dend_54 { pt3dadd( -75.557, -106.77, -67.8803, 0.88 ) }
    dend_54 { pt3dadd( -76.1327, -107.391, -68.3804, 0.88 ) }
    dend_54 { pt3dadd( -76.9446, -108.278, -69.063, 0.88 ) }
    dend_54 { pt3dadd( -77.6052, -109.068, -69.5748, 0.88 ) }
    dend_54 { pt3dadd( -78.5773, -110.317, -70.3276, 0.88 ) }
    dend_54 { pt3dadd( -79.9286, -112.065, -71.3416, 0.88 ) }
    dend_54 { pt3dadd( -80.9324, -113.321, -72.072, 0.74 ) }
    dend_54 { pt3dadd( -81.682, -114.215, -72.6413, 0.74 ) }
    dend_54 { pt3dadd( -82.9606, -115.679, -73.6229, 0.74 ) }
    dend_54 { pt3dadd( -83.849, -116.624, -74.2882, 0.74 ) }
    dend_54 { pt3dadd( -84.9035, -117.693, -75.0969, 0.74 ) }
    dend_54 { pt3dadd( -86.1819, -118.946, -76.0799, 0.74 ) }
    dend_54 { pt3dadd( -87.8148, -120.446, -77.2596, 0.74 ) }
    dend_54 { pt3dadd( -89.3487, -121.738, -78.29, 0.74 ) }
    dend_54 { pt3dadd( -90.6656, -122.767, -79.1409, 0.74 ) }
    dend_54 { pt3dadd( -92.7557, -124.412, -80.4721, 0.52 ) }
    dend_54 { pt3dadd( -93.7956, -125.271, -81.1643, 0.52 ) }
    dend_54 { pt3dadd( -94.9993, -126.345, -81.9741, 0.52 ) }
    dend_54 { pt3dadd( -96.0342, -127.32, -82.6931, 0.52 ) }
    dend_54 { pt3dadd( -97.2836, -128.572, -83.6202, 0.52 ) }
    dend_54 { pt3dadd( -97.8878, -129.267, -84.0404, 0.52 ) }
    dend_54 { pt3dadd( -99.3098, -131.096, -84.9311, 0.52 ) }
    dend_54 { pt3dadd( -100.445, -132.678, -85.6089, 0.52 ) }
    dend_54 { pt3dadd( -101.973, -134.948, -86.4735, 0.52 ) }
    dend_54 { pt3dadd( -103.106, -136.645, -87.048, 0.52 ) }
    dend_54 { pt3dadd( -104.999, -139.345, -87.9131, 0.52 ) }
    dend_54 { pt3dadd( -105.701, -140.249, -88.2216, 0.52 ) }
    dend_54 { pt3dadd( -106.914, -141.617, -88.7352, 0.52 ) }
    dend_54 { pt3dadd( -108.316, -143.023, -89.3444, 0.74 ) }
    dend_54 { pt3dadd( -109.556, -144.202, -89.7663, 0.74 ) }
    dend_54 { pt3dadd( -110.936, -145.364, -90.3228, 0.88 ) }
    dend_54 { pt3dadd( -111.925, -146.038, -90.7904, 0.88 ) }
    dend_54 { pt3dadd( -113.295, -146.936, -91.4833, 0.88 ) }
    dend_54 { pt3dadd( -114.07, -147.477, -91.9033, 0.88 ) }
    dend_54 { pt3dadd( -115.978, -149.019, -93.0009, 1.11 ) }
    dend_54 { pt3dadd( -118.571, -151.572, -94.6423, 1.11 ) }
    dend_54 { pt3dadd( -119.747, -152.97, -95.5211, 0.74 ) }
    dend_54 { pt3dadd( -120.96, -154.665, -96.6469, 0.74 ) }
    dend_54 { pt3dadd( -121.87, -156.057, -97.5837, 0.96 ) }
    dend_54 { pt3dadd( -123.182, -158.127, -99.0054, 0.96 ) }
    dend_54 { pt3dadd( -124.136, -159.578, -100.046, 0.81 ) }
    dend_54 { pt3dadd( -125.599, -161.699, -101.494, 0.81 ) }
    dend_54 { pt3dadd( -127.094, -163.551, -102.877, 0.66 ) }
    dend_54 { pt3dadd( -128.932, -165.322, -104.443, 0.66 ) }
    dend_54 { pt3dadd( -129.985, -166.101, -105.253, 0.66 ) }
    dend_54 { pt3dadd( -131.134, -166.73, -106.027, 0.66 ) }
    dend_54 { pt3dadd( -132.824, -167.459, -107.004, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_54 { pt3dadd( -135.245, -168.301, -108.344, 0.66 ) }
    dend_54 { pt3dadd( -136.658, -168.726, -109.211, 0.66 ) }
    dend_54 { pt3dadd( -137.906, -169.114, -110.085, 0.66 ) }
    dend_54 { pt3dadd( -139.45, -169.697, -111.302, 0.66 ) }
    dend_54 { pt3dadd( -140.86, -170.35, -112.536, 0.66 ) }
    dend_54 { pt3dadd( -143.283, -171.689, -114.862, 0.66 ) }
    dend_54 { pt3dadd( -145.192, -172.934, -116.891, 0.44 ) }
    dend_54 { pt3dadd( -146.414, -173.809, -118.224, 0.44 ) }
    dend_54 { pt3dadd( -147.916, -174.949, -119.956, 0.44 ) }
    dend_54 { pt3dadd( -148.599, -175.472, -120.781, 0.52 ) }
    dend_54 { pt3dadd( -149.749, -176.285, -122.131, 0.52 ) }
    dend_54 { pt3dadd( -150.777, -176.931, -123.282, 0.52 ) }
    dend_54 { pt3dadd( -151.889, -177.462, -124.556, 0.52 ) }
    dend_54 { pt3dadd( -152.335, -177.603, -125.088, 0.59 ) }
    dend_54 { pt3dadd( -153.698, -177.892, -126.774, 0.59 ) }
    dend_54 { pt3dadd( -154.875, -178.074, -128.31, 0.59 ) }
    dend_54 { pt3dadd( -156.041, -178.193, -129.823, 0.59 ) }
    dend_54 { pt3dadd( -157.214, -178.31, -131.224, 0.59 ) }
    dend_54 { pt3dadd( -157.925, -178.409, -132.004, 0.59 ) }
    dend_54 { pt3dadd( -158.895, -178.597, -132.949, 0.59 ) }
    dend_54 { pt3dadd( -159.386, -178.701, -133.367, 0.59 ) }
    dend_54 { pt3dadd( -160.45, -178.91, -134.179, 0.59 ) }
    dend_54 { pt3dadd( -162.092, -179.174, -135.304, 0.37 ) }
    dend_54 { pt3dadd( -163.48, -179.295, -136.182, 0.37 ) }
    dend_54 { pt3dadd( -164.691, -179.3, -136.921, 0.37 ) }
    dend_54 { pt3dadd( -165.947, -179.218, -137.641, 0.37 ) }
    dend_54 { pt3dadd( -167.434, -179.039, -138.404, 0.37 ) }
    dend_54 { pt3dadd( -168.94, -178.779, -139.194, 0.37 ) }
    dend_54 { pt3dadd( -170.438, -178.475, -139.959, 0.37 ) }
    dend_54 { pt3dadd( -171.534, -178.263, -140.445, 0.37 ) }
    dend_54 { pt3dadd( -172.155, -178.191, -140.657, 0.52 ) }
    dend_54 { pt3dadd( -174.082, -178.131, -141.302, 0.66 ) }
    dend_54 { pt3dadd( -177.007, -178.227, -142.154, 0.66 ) }
    dend_54 { pt3dadd( -177.782, -178.274, -142.342, 0.66 ) }
    dend_54 { pt3dadd( -179.01, -178.371, -142.622, 0.66 ) }
    dend_54 { pt3dadd( -182.208, -178.626, -143.431, 0.15 ) }
    dend_54 { pt3dadd( -185.222, -178.849, -144.289, 0.37 ) }
    dend_54 { pt3dadd( -187.448, -178.975, -144.945, 0.52 ) }
    dend_54 { pt3dadd( -189.415, -179.034, -145.472, 0.52 ) }
    dend_54 { pt3dadd( -191.679, -179.047, -146.134, 0.52 ) }
    dend_54 { pt3dadd( -194.123, -179.009, -146.918, 0.52 ) }
    dend_54 { pt3dadd( -195.886, -178.948, -147.602, 0.52 ) }
    dend_54 { pt3dadd( -198.033, -178.899, -148.484, 0.52 ) }
    dend_54 { pt3dadd( -199.213, -178.889, -149.051, 0.52 ) }
    dend_54 { pt3dadd( -200.711, -178.903, -149.789, 0.52 ) }
    dend_54 { pt3dadd( -201.565, -178.921, -150.228, 0.52 ) }
    dend_54 { pt3dadd( -204.192, -179.013, -151.641, 0.52 ) }
    dend_54 { pt3dadd( -205.922, -179.111, -152.712, 0.52 ) }
    dend_54 { pt3dadd( -206.377, -179.149, -153.026, 0.52 ) }
    dend_54 { pt3dadd( -207.0, -179.204, -153.47, 0.52 ) }
    dend_54 { pt3dadd( -209.373, -179.489, -155.196, 0.52 ) }
    dend_54 { pt3dadd( -210.601, -179.717, -156.133, 0.52 ) }
    dend_54 { pt3dadd( -212.003, -180.071, -157.3, 0.52 ) }
    dend_54 { pt3dadd( -213.42, -180.501, -158.592, 0.52 ) }
    dend_54 { pt3dadd( -214.522, -180.878, -159.685, 0.52 ) }
    dend_54 { pt3dadd( -216.16, -181.471, -161.343, 0.29 ) }
    dend_54 { pt3dadd( -217.506, -181.989, -162.679, 0.29 ) }
    dend_54 { pt3dadd( -219.051, -182.621, -164.313, 0.29 ) }
    dend_54 { pt3dadd( -219.531, -182.848, -164.874, 0.29 ) }
    dend_54 { pt3dadd( -220.782, -183.547, -166.611, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 60/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -5.99663, -25.6668, 3.17623, 2.06 ) }
    dend_39 { pt3dadd( -6.67151, -27.4364, 3.74674, 2.06 ) }
    dend_39 { pt3dadd( -7.05733, -28.4889, 3.99513, 2.06 ) }
    dend_39 { pt3dadd( -7.73925, -30.3818, 4.3199, 2.06 ) }
    dend_39 { pt3dadd( -8.33194, -32.0067, 4.56573, 1.99 ) }
    dend_39 { pt3dadd( -9.16971, -34.235, 4.95758, 1.99 ) }
    dend_39 { pt3dadd( -10.2342, -37.0097, 5.49933, 1.99 ) }
    dend_39 { pt3dadd( -11.3945, -39.9647, 6.04231, 1.99 ) }
    dend_39 { pt3dadd( -12.7472, -43.3628, 6.66825, 1.99 ) }
    dend_39 { pt3dadd( -13.6985, -45.7596, 7.08797, 1.99 ) }
    dend_39 { pt3dadd( -14.7084, -48.2959, 7.56262, 1.99 ) }
    dend_39 { pt3dadd( -15.7339, -50.8219, 8.10822, 1.99 ) }
    dend_39 { pt3dadd( -16.0924, -51.6556, 8.32735, 1.99 ) }
    dend_39 { pt3dadd( -16.8087, -53.2374, 8.84327, 1.99 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 74/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -78.9241, -67.5545, 53.6324, 0.07 ) }
    dend_37 { pt3dadd( -85.5978, -74.2506, 59.1057, 0.07 ) }
    dend_37 { pt3dadd( -91.8807, -80.6114, 65.3823, 0.07 ) }
    dend_37 { pt3dadd( -97.8754, -88.1572, 70.5259, 0.07 ) }
    dend_37 { pt3dadd( -104.136, -94.3566, 76.9837, 0.07 ) }
    dend_37 { pt3dadd( -108.482, -101.735, 83.7656, 0.07 ) }
    dend_37 { pt3dadd( -113.107, -109.015, 90.4698, 0.07 ) }
    dend_37 { pt3dadd( -116.637, -116.412, 97.6922, 0.07 ) }
    dend_37 { pt3dadd( -121.142, -121.523, 106.23, 0.07 ) }
    dend_37 { pt3dadd( -126.409, -127.838, 113.421, 0.07 ) }
    dend_37 { pt3dadd( -131.093, -135.475, 119.671, 0.07 ) }
    dend_37 { pt3dadd( -135.411, -142.422, 126.912, 0.07 ) }
    dend_37 { pt3dadd( -140.524, -147.772, 134.948, 0.07 ) }
    dend_37 { pt3dadd( -144.122, -154.035, 143.143, 0.07 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 88/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -78.9241, -67.5545, 53.6324, 0.29 ) }
    dend_36 { pt3dadd( -85.4014, -74.1483, 58.2281, 0.07 ) }
    dend_36 { pt3dadd( -90.0683, -81.7831, 63.3741, 0.07 ) }
    dend_36 { pt3dadd( -94.6512, -90.5654, 66.276, 0.07 ) }
    dend_36 { pt3dadd( -97.6324, -99.8513, 69.6576, 0.07 ) }
    dend_36 { pt3dadd( -98.5015, -109.457, 73.3362, 0.07 ) }
    dend_36 { pt3dadd( -97.5958, -118.52, 78.1931, 0.07 ) }
    dend_36 { pt3dadd( -97.9758, -127.473, 83.3158, 0.07 ) }
    dend_36 { pt3dadd( -99.0785, -136.452, 88.2878, 0.07 ) }
    dend_36 { pt3dadd( -100.102, -144.897, 94.1339, 0.07 ) }
    dend_36 { pt3dadd( -101.364, -154.32, 98.1548, 0.07 ) }
    dend_36 { pt3dadd( -102.093, -164.207, 101.031, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( -103.927, -173.957, 103.882, 0.07 ) }
    dend_36 { pt3dadd( -106.701, -183.88, 104.516, 0.07 ) }
    dend_36 { pt3dadd( -107.842, -194.089, 105.527, 0.07 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 3/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -0.17384, 26.0606, 4.24278, 0.88 ) }
    dend_28 { pt3dadd( -0.196383, 27.4447, 4.72367, 0.88 ) }
    dend_28 { pt3dadd( -0.14276, 28.4565, 5.13718, 1.11 ) }
    dend_28 { pt3dadd( -0.0634916, 29.9521, 5.74846, 1.11 ) }
    dend_28 { pt3dadd( -0.006285, 31.0315, 6.18961, 1.11 ) }
    dend_28 { pt3dadd( 0.0507235, 32.1071, 6.62923, 1.25 ) }
    dend_28 { pt3dadd( 0.156695, 34.1066, 7.44643, 1.25 ) }
    dend_28 { pt3dadd( 0.206927, 34.791, 7.80796, 1.25 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 11/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -0.17384, 26.0606, 4.24278, 0.81 ) }
    dend_27 { pt3dadd( -1.09842, 27.3854, 4.28385, 0.81 ) }
    dend_27 { pt3dadd( -2.23905, 28.9567, 4.34677, 0.81 ) }
    dend_27 { pt3dadd( -3.57887, 30.7779, 4.45176, 0.81 ) }
    dend_27 { pt3dadd( -4.86978, 32.5362, 4.58416, 0.66 ) }
    dend_27 { pt3dadd( -6.16252, 34.2595, 4.80571, 0.66 ) }
    dend_27 { pt3dadd( -6.74498, 35.0049, 4.96281, 0.37 ) }
    dend_27 { pt3dadd( -7.49153, 35.9704, 5.26067, 0.22 ) }
    dend_27 { pt3dadd( -8.39865, 37.0806, 5.73402, 0.22 ) }
    dend_27 { pt3dadd( -8.81017, 37.5219, 5.97423, 0.37 ) }
    dend_27 { pt3dadd( -9.87329, 38.4172, 6.7145, 0.37 ) }
    dend_27 { pt3dadd( -11.2055, 39.4459, 7.7224, 0.37 ) }
    dend_27 { pt3dadd( -12.0675, 40.1033, 8.37914, 0.22 ) }
    dend_27 { pt3dadd( -12.6456, 40.5315, 8.80153, 0.22 ) }
    dend_27 { pt3dadd( -13.2627, 40.9771, 9.22357, 0.22 ) }
    dend_27 { pt3dadd( -14.8822, 42.1675, 10.2726, 0.29 ) }
    dend_27 { pt3dadd( -17.3798, 44.0438, 11.7687, 0.52 ) }
    dend_27 { pt3dadd( -18.6654, 45.0642, 12.5227, 0.52 ) }
    dend_27 { pt3dadd( -20.0783, 46.2386, 13.4094, 0.52 ) }
    dend_27 { pt3dadd( -20.3868, 46.509, 13.6138, 0.66 ) }
    dend_27 { pt3dadd( -21.3619, 47.4036, 14.3466, 0.81 ) }
    dend_27 { pt3dadd( -22.4032, 48.4589, 15.2083, 0.81 ) }
    dend_27 { pt3dadd( -23.4599, 49.6067, 16.2125, 0.59 ) }
    dend_27 { pt3dadd( -24.3071, 50.6438, 17.1185, 0.59 ) }
    dend_27 { pt3dadd( -25.5691, 52.3651, 18.593, 0.59 ) }
    dend_27 { pt3dadd( -27.2641, 54.8971, 20.6263, 0.59 ) }
    dend_27 { pt3dadd( -27.7904, 55.7468, 21.2511, 0.07 ) }
    dend_27 { pt3dadd( -28.2769, 56.4551, 21.7376, 0.07 ) }
    dend_27 { pt3dadd( -28.6517, 56.8942, 22.0497, 0.07 ) }
    dend_27 { pt3dadd( -29.3227, 57.5229, 22.5175, 0.15 ) }
    dend_27 { pt3dadd( -30.1559, 58.1229, 22.9726, 0.15 ) }
    dend_27 { pt3dadd( -30.888, 58.544, 23.2893, 0.15 ) }
    dend_27 { pt3dadd( -34.0657, 60.1911, 24.5916, 0.37 ) }
    dend_27 { pt3dadd( -36.7093, 61.522, 25.5464, 0.52 ) }
    dend_27 { pt3dadd( -38.5187, 62.4594, 26.1742, 0.66 ) }
    dend_27 { pt3dadd( -39.88, 63.1967, 26.6373, 0.44 ) }
    dend_27 { pt3dadd( -41.116, 63.9108, 27.0522, 0.44 ) }
    dend_27 { pt3dadd( -42.2728, 64.6368, 27.4452, 0.44 ) }
    dend_27 { pt3dadd( -44.1335, 65.954, 28.0694, 0.44 ) }
    dend_27 { pt3dadd( -45.5945, 67.0241, 28.5786, 0.44 ) }
    dend_27 { pt3dadd( -47.0475, 68.1297, 29.1334, 0.44 ) }
    dend_27 { pt3dadd( -47.5641, 68.5349, 29.3795, 0.44 ) }
    dend_27 { pt3dadd( -49.1666, 69.7514, 30.2741, 0.44 ) }
    dend_27 { pt3dadd( -50.02, 70.3576, 30.8044, 0.44 ) }
    dend_27 { pt3dadd( -51.0116, 70.9929, 31.6086, 0.44 ) }
    dend_27 { pt3dadd( -58.046, 77.5011, 36.7403, 0.44 ) }
    dend_27 { pt3dadd( -64.2906, 83.2338, 43.5458, 0.44 ) }
    dend_27 { pt3dadd( -69.0139, 89.456, 51.1055, 0.44 ) }
    dend_27 { pt3dadd( -73.3196, 95.517, 59.0364, 0.44 ) }
    dend_27 { pt3dadd( -78.8177, 99.5241, 67.5151, 0.44 ) }
    dend_27 { pt3dadd( -85.5873, 102.984, 75.2854, 0.44 ) }
    dend_27 { pt3dadd( -92.3475, 104.93, 83.5732, 0.44 ) }
    dend_27 { pt3dadd( -97.9475, 107.732, 92.459, 0.44 ) }
    dend_27 { pt3dadd( -102.695, 110.232, 101.913, 0.44 ) }
    dend_27 { pt3dadd( -108.455, 113.698, 110.456, 0.44 ) }
    dend_27 { pt3dadd( -114.009, 118.265, 118.609, 0.44 ) }
    dend_27 { pt3dadd( -120.034, 122.447, 126.633, 0.44 ) }
    dend_27 { pt3dadd( -126.226, 126.399, 134.647, 0.44 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 69/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 6.15433, 23.8639, -12.9705, 1.03 ) }
    dend_9 { pt3dadd( 7.58783, 25.1201, -13.609, 1.03 ) }
    dend_9 { pt3dadd( 8.69048, 25.9727, -14.1359, 1.25 ) }
    dend_9 { pt3dadd( 11.0285, 27.5685, -15.2681, 1.25 ) }
    dend_9 { pt3dadd( 12.9531, 28.7489, -16.166, 1.25 ) }
    dend_9 { pt3dadd( 14.7879, 29.763, -16.8839, 1.25 ) }
    dend_9 { pt3dadd( 16.8611, 30.7996, -17.5209, 1.25 ) }
    dend_9 { pt3dadd( 19.6863, 31.8433, -18.0731, 1.25 ) }
    dend_9 { pt3dadd( 21.3736, 32.2779, -18.1571, 0.96 ) }
    dend_9 { pt3dadd( 23.0875, 32.5987, -18.1203, 0.96 ) }
    dend_9 { pt3dadd( 25.86, 32.9569, -17.8429, 0.96 ) }
    dend_9 { pt3dadd( 28.0014, 33.1273, -17.4421, 0.96 ) }
    dend_9 { pt3dadd( 31.4882, 33.2832, -16.4242, 0.96 ) }
    dend_9 { pt3dadd( 35.5279, 33.3984, -14.8029, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 83/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 6.15433, 23.8639, -12.9705, 0.59 ) }
    dend_8 { pt3dadd( 6.52363, 23.1482, -14.1995, 0.59 ) }
    dend_8 { pt3dadd( 7.13186, 21.6663, -16.8674, 0.59 ) }
    dend_8 { pt3dadd( 7.44085, 20.8114, -18.3361, 0.59 ) }
    dend_8 { pt3dadd( 7.69194, 20.0116, -19.6744, 0.59 ) }
    dend_8 { pt3dadd( 8.09716, 18.6238, -22.0977, 0.59 ) }
    dend_8 { pt3dadd( 8.57174, 17.0121, -24.9967, 0.59 ) }
    dend_8 { pt3dadd( 9.21921, 14.6334, -29.4082, 0.37 ) }
    dend_8 { pt3dadd( 9.70573, 12.7018, -32.9852, 0.37 ) }
    dend_8 { pt3dadd( 10.1886, 10.8654, -36.4239, 0.37 ) }
    dend_8 { pt3dadd( 10.8736, 8.42549, -41.2185, 0.37 ) }
    dend_8 { pt3dadd( 11.4791, 6.41087, -45.3823, 0.07 ) }
    dend_8 { pt3dadd( 12.0937, 4.50644, -49.8408, 0.07 ) }
    dend_8 { pt3dadd( 12.4118, 3.52681, -52.4405, 0.07 ) }
    dend_8 { pt3dadd( 12.6642, 2.71929, -55.0027, 0.07 ) }
    dend_8 { pt3dadd( 12.9634, 1.70519, -58.7501, 0.07 ) }
    dend_8 { pt3dadd( 13.085, 1.11844, -61.1996, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_8 { pt3dadd( 13.2113, -0.380604, -68.2735, 0.22 ) }
    dend_8 { pt3dadd( 13.23, -0.834585, -70.5878, 0.37 ) }
    dend_8 { pt3dadd( 13.2653, -1.51474, -74.2145, 0.37 ) }
    dend_8 { pt3dadd( 13.2897, -1.81456, -75.826, 0.37 ) }
    dend_8 { pt3dadd( 13.3386, -2.07477, -77.1811, 0.37 ) }
    dend_8 { pt3dadd( 13.4504, -2.38575, -78.7971, 0.37 ) }
    dend_8 { pt3dadd( 13.7476, -2.82731, -81.0387, 0.37 ) }
    dend_8 { pt3dadd( 14.4565, -3.62787, -85.6775, 0.37 ) }
    dend_8 { pt3dadd( 14.8327, -3.96895, -88.0678, 0.37 ) }
    dend_8 { pt3dadd( 15.4159, -4.42386, -92.9772, 0.37 ) }
    dend_8 { pt3dadd( 15.5722, -4.51039, -95.4332, 0.37 ) }
    dend_8 { pt3dadd( 15.5584, -4.46119, -96.9587, 0.37 ) }
    dend_8 { pt3dadd( 15.3445, -4.25173, -98.9879, 0.37 ) }
    dend_8 { pt3dadd( 15.004, -3.96588, -100.457, 0.37 ) }
    dend_8 { pt3dadd( 13.6224, -2.85126, -104.392, 0.37 ) }
    dend_8 { pt3dadd( 12.8459, -2.25412, -106.129, 0.37 ) }
    dend_8 { pt3dadd( 12.1786, -1.76974, -107.563, 0.37 ) }
    dend_8 { pt3dadd( 11.4131, -1.23861, -109.283, 0.37 ) }
    dend_8 { pt3dadd( 10.5954, -0.59853, -111.52, 0.37 ) }
    dend_8 { pt3dadd( 10.0247, -0.0778432, -113.299, 0.37 ) }
    dend_8 { pt3dadd( 9.32567, 0.760071, -115.984, 0.37 ) }
    dend_8 { pt3dadd( 8.8211, 1.54636, -118.431, 0.37 ) }
    dend_8 { pt3dadd( 8.34081, 2.49611, -120.908, 0.37 ) }
    dend_8 { pt3dadd( 7.77609, 3.98128, -124.329, 0.37 ) }
    dend_8 { pt3dadd( 7.46949, 5.12476, -126.699, 0.37 ) }
    dend_8 { pt3dadd( 7.19535, 6.4602, -129.102, 0.37 ) }
    dend_8 { pt3dadd( 6.99027, 7.90711, -131.289, 0.37 ) }
    dend_8 { pt3dadd( 6.63481, 11.6082, -135.805, 0.07 ) }
    dend_8 { pt3dadd( 6.44913, 14.4629, -138.723, 0.07 ) }
    dend_8 { pt3dadd( 6.39011, 16.382, -140.515, 0.07 ) }
    dend_8 { pt3dadd( 6.42202, 17.9766, -141.983, 0.07 ) }
    dend_8 { pt3dadd( 6.59773, 20.436, -144.27, 0.07 ) }
    dend_8 { pt3dadd( 7.09206, 24.1759, -147.881, 0.07 ) }
    dend_8 { pt3dadd( 7.31555, 25.119, -148.912, 0.07 ) }
    dend_8 { pt3dadd( 8.31527, 28.4219, -153.022, 0.07 ) }
    dend_8 { pt3dadd( 9.07165, 30.6234, -155.865, 0.07 ) }
    dend_8 { pt3dadd( 9.55643, 31.8969, -157.548, 0.07 ) }
    dend_8 { pt3dadd( 10.2015, 33.582, -159.752, 0.07 ) }
    dend_8 { pt3dadd( 11.2149, 36.2708, -163.16, 0.07 ) }
    dend_8 { pt3dadd( 11.9612, 38.5634, -165.751, 0.07 ) }
    dend_8 { pt3dadd( 13.0665, 42.9195, -169.851, 0.07 ) }
    dend_8 { pt3dadd( 13.5516, 45.3405, -171.81, 0.07 ) }
    dend_8 { pt3dadd( 13.8342, 47.3056, -173.294, 0.07 ) }
    dend_8 { pt3dadd( 13.9719, 48.7964, -174.38, 0.07 ) }
    dend_8 { pt3dadd( 14.0728, 50.1351, -175.324, 0.07 ) }
    dend_8 { pt3dadd( 14.3706, 52.3146, -177.041, 0.07 ) }
    dend_8 { pt3dadd( 14.6928, 53.5569, -178.273, 0.07 ) }
    dend_8 { pt3dadd( 16.3119, 56.6438, -181.869, 0.07 ) }
    dend_8 { pt3dadd( 17.5783, 58.0785, -183.772, 0.07 ) }
    dend_8 { pt3dadd( 18.9935, 59.1827, -185.287, 0.07 ) }
    dend_8 { pt3dadd( 21.6156, 60.7101, -187.332, 0.07 ) }
    dend_8 { pt3dadd( 23.0641, 61.3876, -188.135, 0.07 ) }
    dend_8 { pt3dadd( 27.042, 63.0435, -189.643, 0.07 ) }
    dend_8 { pt3dadd( 29.0808, 63.8374, -190.043, 0.07 ) }
    dend_8 { pt3dadd( 31.5582, 64.798, -190.266, 0.07 ) }
    dend_8 { pt3dadd( 33.4399, 65.5284, -190.3, 0.07 ) }
    dend_8 { pt3dadd( 35.5739, 66.2926, -190.146, 0.07 ) }
    dend_8 { pt3dadd( 37.8816, 67.0081, -189.924, 0.07 ) }
    dend_8 { pt3dadd( 40.2736, 67.6166, -189.835, 0.07 ) }
    dend_8 { pt3dadd( 43.5746, 68.2849, -190.001, 0.07 ) }
    dend_8 { pt3dadd( 47.8317, 68.9596, -190.617, 0.07 ) }
    dend_8 { pt3dadd( 50.2263, 69.247, -191.149, 0.07 ) }
    dend_8 { pt3dadd( 52.9316, 69.4966, -191.97, 0.07 ) }
    dend_8 { pt3dadd( 59.0521, 70.0748, -194.349, 0.07 ) }
    dend_8 { pt3dadd( 60.4499, 70.2428, -194.98, 0.07 ) }
    dend_8 { pt3dadd( 62.9442, 70.5879, -196.312, 0.07 ) }
    dend_8 { pt3dadd( 64.1648, 70.806, -197.085, 0.07 ) }
    dend_8 { pt3dadd( 65.4348, 71.1291, -197.977, 0.07 ) }
    dend_8 { pt3dadd( 67.1426, 71.7242, -199.187, 0.07 ) }
    dend_8 { pt3dadd( 68.8861, 72.6926, -200.468, 0.07 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 70/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -17.8489, 26.2447, -8.31312, 0.29 ) }
    dend_2 { pt3dadd( -19.7145, 27.5244, -9.78689, 0.29 ) }
    dend_2 { pt3dadd( -22.4071, 29.1741, -11.9293, 0.29 ) }
    dend_2 { pt3dadd( -23.8512, 30.0017, -13.0603, 0.07 ) }
    dend_2 { pt3dadd( -24.9309, 30.6033, -13.8806, 0.07 ) }
    dend_2 { pt3dadd( -25.2974, 30.8125, -14.1577, 0.07 ) }
    dend_2 { pt3dadd( -27.1928, 31.9444, -15.649, 0.37 ) }
    dend_2 { pt3dadd( -27.9274, 32.364, -16.246, 0.37 ) }
    dend_2 { pt3dadd( -28.9385, 32.9506, -17.0809, 0.37 ) }
    dend_2 { pt3dadd( -29.7876, 33.4844, -17.8761, 0.37 ) }
    dend_2 { pt3dadd( -30.7982, 34.114, -18.8884, 0.59 ) }
    dend_2 { pt3dadd( -31.691, 34.6311, -19.8197, 0.59 ) }
    dend_2 { pt3dadd( -32.4526, 35.004, -20.6275, 0.59 ) }
    dend_2 { pt3dadd( -33.9874, 35.6119, -22.1861, 0.59 ) }
    dend_2 { pt3dadd( -35.3097, 36.0612, -23.5512, 0.59 ) }
    dend_2 { pt3dadd( -37.056, 36.5361, -25.3451, 0.81 ) }
    dend_2 { pt3dadd( -38.1945, 36.7549, -26.4604, 0.81 ) }
    dend_2 { pt3dadd( -39.4304, 36.9156, -27.5923, 0.81 ) }
    dend_2 { pt3dadd( -40.952, 37.0253, -28.9541, 1.03 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 89/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -17.8489, 26.2447, -8.31312, 0.29 ) }
    dend_1 { pt3dadd( -18.933, 26.2016, -8.55377, 0.29 ) }
    dend_1 { pt3dadd( -19.714, 26.1734, -8.71857, 0.29 ) }
    dend_1 { pt3dadd( -20.7971, 26.1468, -8.93806, 0.29 ) }
    dend_1 { pt3dadd( -21.9689, 26.1379, -9.16736, 0.52 ) }
    dend_1 { pt3dadd( -23.7044, 26.1432, -9.49759, 0.88 ) }
    dend_1 { pt3dadd( -25.112, 26.1707, -9.75785, 0.37 ) }
    dend_1 { pt3dadd( -25.8297, 26.2378, -9.87946, 0.37 ) }
    dend_1 { pt3dadd( -26.6191, 26.3572, -9.98786, 0.37 ) }
    dend_1 { pt3dadd( -27.2606, 26.4849, -10.0569, 0.37 ) }
    dend_1 { pt3dadd( -28.1694, 26.7001, -10.1314, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_1 { pt3dadd( -28.918, 26.8942, -10.1794, 0.37 ) }
    dend_1 { pt3dadd( -30.5365, 27.3644, -10.2757, 0.37 ) }
    dend_1 { pt3dadd( -31.9899, 27.7755, -10.3228, 0.37 ) }
    dend_1 { pt3dadd( -32.8458, 28.0078, -10.3353, 0.37 ) }
    dend_1 { pt3dadd( -34.7499, 28.521, -10.3399, 0.15 ) }
    dend_1 { pt3dadd( -35.8634, 28.8212, -10.3127, 0.15 ) }
    dend_1 { pt3dadd( -37.2031, 29.1828, -10.2518, 0.15 ) }
    dend_1 { pt3dadd( -39.1613, 29.7045, -10.1138, 0.15 ) }
    dend_1 { pt3dadd( -41.2126, 30.2764, -9.96554, 0.15 ) }
    dend_1 { pt3dadd( -42.5967, 30.6665, -9.83231, 0.15 ) }
    dend_1 { pt3dadd( -43.5646, 30.9481, -9.71349, 0.29 ) }
    dend_1 { pt3dadd( -44.3569, 31.19, -9.60254, 0.29 ) }
    dend_1 { pt3dadd( -45.9669, 31.7053, -9.35965, 0.15 ) }
    dend_1 { pt3dadd( -47.0002, 32.0698, -9.21782, 0.37 ) }
    dend_1 { pt3dadd( -47.6703, 32.2786, -9.12621, 0.37 ) }
    dend_1 { pt3dadd( -48.5544, 32.5158, -9.03374, 0.37 ) }
    dend_1 { pt3dadd( -49.2868, 32.6789, -8.97209, 0.37 ) }
    dend_1 { pt3dadd( -50.6129, 32.9184, -8.8684, 0.37 ) }
    dend_1 { pt3dadd( -51.8869, 33.1138, -8.78019, 0.37 ) }
    dend_1 { pt3dadd( -54.0381, 33.4307, -8.64181, 0.59 ) }
    dend_1 { pt3dadd( -55.7606, 33.7004, -8.54685, 0.59 ) }
    dend_1 { pt3dadd( -56.8644, 33.91, -8.45489, 0.44 ) }
    dend_1 { pt3dadd( -57.5875, 34.0789, -8.37162, 0.44 ) }
    dend_1 { pt3dadd( -58.3693, 34.2953, -8.27105, 0.44 ) }
    dend_1 { pt3dadd( -60.1037, 34.8636, -8.03536, 0.29 ) }
    dend_1 { pt3dadd( -61.288, 35.3498, -7.87228, 0.29 ) }
    dend_1 { pt3dadd( -62.9397, 36.1104, -7.65043, 0.37 ) }
    dend_1 { pt3dadd( -64.0707, 36.6516, -7.53861, 0.07 ) }
    dend_1 { pt3dadd( -64.8872, 37.0363, -7.47794, 0.07 ) }
    dend_1 { pt3dadd( -65.8256, 37.4511, -7.4454, 0.07 ) }
    dend_1 { pt3dadd( -66.5556, 37.7432, -7.45962, 0.29 ) }
    dend_1 { pt3dadd( -67.4972, 38.0959, -7.53214, 0.29 ) }
    dend_1 { pt3dadd( -68.7814, 38.5517, -7.70655, 0.29 ) }
    dend_1 { pt3dadd( -69.2147, 38.7117, -7.76615, 0.29 ) }
    dend_1 { pt3dadd( -70.4734, 39.2453, -7.90835, 0.29 ) }
    dend_1 { pt3dadd( -71.3094, 39.633, -7.99643, 0.59 ) }
    dend_1 { pt3dadd( -72.621, 40.2718, -8.12945, 0.59 ) }
    dend_1 { pt3dadd( -73.5109, 40.7163, -8.21702, 0.15 ) }
    dend_1 { pt3dadd( -74.1645, 41.0492, -8.27937, 0.15 ) }
    dend_1 { pt3dadd( -75.0806, 41.4807, -8.35972, 0.15 ) }
    dend_1 { pt3dadd( -75.7488, 41.7963, -8.41843, 0.15 ) }
    dend_1 { pt3dadd( -76.6562, 42.2274, -8.50268, 0.22 ) }
    dend_1 { pt3dadd( -77.9911, 42.8588, -8.63242, 0.22 ) }
    dend_1 { pt3dadd( -78.7057, 43.1975, -8.70385, 0.22 ) }
    dend_1 { pt3dadd( -80.3389, 43.9456, -8.94935, 0.22 ) }
    dend_1 { pt3dadd( -81.793, 44.6196, -9.2087, 0.22 ) }
    dend_1 { pt3dadd( -83.2681, 45.3263, -9.49636, 0.22 ) }
    dend_1 { pt3dadd( -84.3976, 45.8879, -9.73596, 0.22 ) }
    dend_1 { pt3dadd( -85.3303, 46.3441, -9.94257, 0.22 ) }
    dend_1 { pt3dadd( -88.0355, 47.6267, -10.5502, 0.22 ) }
    dend_1 { pt3dadd( -89.7379, 48.4235, -10.9401, 0.22 ) }
    dend_1 { pt3dadd( -90.9205, 48.969, -11.2008, 0.22 ) }
    dend_1 { pt3dadd( -93.4315, 50.1681, -11.7525, 0.22 ) }
    dend_1 { pt3dadd( -95.6776, 51.2931, -12.2286, 0.22 ) }
    dend_1 { pt3dadd( -96.9981, 51.9856, -12.4685, 0.22 ) }
    dend_1 { pt3dadd( -98.18, 52.6348, -12.6421, 0.22 ) }
    dend_1 { pt3dadd( -100.006, 53.7068, -12.8999, 0.22 ) }
    dend_1 { pt3dadd( -101.857, 54.9143, -13.1486, 0.22 ) }
    dend_1 { pt3dadd( -103.767, 56.2772, -13.3665, 0.22 ) }
    dend_1 { pt3dadd( -105.963, 57.9483, -13.5836, 0.22 ) }
    dend_1 { pt3dadd( -107.299, 58.9778, -13.6998, 0.22 ) }
    dend_1 { pt3dadd( -109.345, 60.541, -13.8529, 0.22 ) }
    dend_1 { pt3dadd( -110.938, 61.749, -13.9575, 0.22 ) }
    dend_1 { pt3dadd( -112.183, 62.713, -14.0241, 0.22 ) }
    dend_1 { pt3dadd( -113.778, 64.0194, -14.1192, 0.22 ) }
    dend_1 { pt3dadd( -114.952, 65.044, -14.1991, 0.22 ) }
    dend_1 { pt3dadd( -115.783, 65.8305, -14.2461, 0.22 ) }
    dend_1 { pt3dadd( -118.494, 68.5848, -14.2995, 0.22 ) }
    dend_1 { pt3dadd( -119.517, 69.7052, -14.2924, 0.22 ) }
    dend_1 { pt3dadd( -120.701, 71.0926, -14.1855, 0.22 ) }
    dend_1 { pt3dadd( -121.978, 72.734, -13.934, 0.22 ) }
    dend_1 { pt3dadd( -122.88, 73.9555, -13.6706, 0.22 ) }
    dend_1 { pt3dadd( -123.548, 74.8699, -13.434, 0.22 ) }
    dend_1 { pt3dadd( -123.943, 75.4186, -13.2695, 0.22 ) }
    dend_1 { pt3dadd( -125.888, 77.8622, -12.693, 0.22 ) }
    dend_1 { pt3dadd( -126.357, 78.4087, -12.6046, 0.22 ) }
    dend_1 { pt3dadd( -128.104, 80.4743, -12.4173, 0.22 ) }
    dend_1 { pt3dadd( -129.605, 82.3041, -12.3509, 0.22 ) }
    dend_1 { pt3dadd( -131.023, 84.193, -12.3651, 0.22 ) }
    dend_1 { pt3dadd( -132.748, 86.7603, -12.3703, 0.37 ) }
    dend_1 { pt3dadd( -134.161, 89.1397, -12.3832, 0.37 ) }
    dend_1 { pt3dadd( -135.35, 91.3688, -12.3172, 0.37 ) }
    dend_1 { pt3dadd( -135.856, 92.5692, -12.2193, 0.37 ) }
    dend_1 { pt3dadd( -136.552, 94.6518, -11.949, 0.07 ) }
    dend_1 { pt3dadd( -137.216, 97.2564, -11.4952, 0.07 ) }
    dend_1 { pt3dadd( -137.453, 98.7652, -11.153, 0.07 ) }
    dend_1 { pt3dadd( -137.629, 101.28, -10.5986, 0.07 ) }
    dend_1 { pt3dadd( -137.759, 104.377, -9.89605, 0.07 ) }
    dend_1 { pt3dadd( -137.776, 105.783, -9.58237, 0.07 ) }
    dend_1 { pt3dadd( -137.722, 107.186, -9.29021, 0.07 ) }
    dend_1 { pt3dadd( -137.548, 108.72, -9.04667, 0.07 ) }
    dend_1 { pt3dadd( -137.197, 110.655, -8.75708, 0.07 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 92/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 5.40654, 47.5527, -1.84882, 0.401528 ) }
    axon_1 { pt3dadd( 7.11726, 62.4548, -1.84882, 0.401528 ) }
    axon_1 { pt3dadd( 8.82798, 77.3569, -1.84882, 0.401528 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 95/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 34.5716, -38.6665, 35.9273, 0.07 ) }
    dend_60 { pt3dadd( 43.8968, -41.9371, 43.7749, 0.07 ) }
    dend_60 { pt3dadd( 51.9934, -47.2765, 51.8481, 0.07 ) }
    dend_60 { pt3dadd( 60.4268, -53.4769, 58.8959, 0.07 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 99/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 34.5716, -38.6665, 35.9273, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_57 { pt3dadd( 46.094, -42.7159, 45.3567, 0.07 ) }
    dend_57 { pt3dadd( 57.8996, -44.7666, 55.0778, 0.07 ) }
    // Section: dend_51, id: dend_51, parent: dend_39 (entry count 2/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -16.8087, -53.2374, 8.84327, 0.96 ) }
    dend_51 { pt3dadd( -15.9462, -56.1271, 9.60807, 0.96 ) }
    dend_51 { pt3dadd( -15.3081, -58.2641, 10.107, 0.96 ) }
    dend_51 { pt3dadd( -14.6547, -60.8825, 10.6798, 0.96 ) }
    dend_51 { pt3dadd( -13.8204, -65.0674, 11.5587, 1.18 ) }
    dend_51 { pt3dadd( -13.5057, -67.1542, 11.979, 1.18 ) }
    dend_51 { pt3dadd( -13.2421, -69.3254, 12.408, 1.18 ) }
    dend_51 { pt3dadd( -13.1386, -70.5637, 12.6633, 1.18 ) }
    dend_51 { pt3dadd( -12.9969, -72.6235, 13.0458, 1.03 ) }
    dend_51 { pt3dadd( -12.9067, -73.8671, 13.2767, 1.03 ) }
    dend_51 { pt3dadd( -12.6737, -75.8274, 13.7371, 1.03 ) }
    dend_51 { pt3dadd( -12.4448, -76.7956, 14.0316, 1.03 ) }
    dend_51 { pt3dadd( -11.83, -78.9173, 14.7544, 1.03 ) }
    dend_51 { pt3dadd( -10.8243, -81.6872, 15.7622, 1.03 ) }
    dend_51 { pt3dadd( -10.0787, -83.2908, 16.3718, 1.03 ) }
    dend_51 { pt3dadd( -8.88699, -85.4803, 17.2532, 1.03 ) }
    dend_51 { pt3dadd( -7.37663, -87.8995, 18.3134, 1.03 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 19/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -16.8087, -53.2374, 8.84327, 1.33 ) }
    dend_40 { pt3dadd( -17.0744, -54.361, 7.81883, 1.33 ) }
    dend_40 { pt3dadd( -17.5227, -56.256, 6.09098, 1.33 ) }
    dend_40 { pt3dadd( -18.014, -58.3327, 4.19747, 1.33 ) }
    dend_40 { pt3dadd( -18.2137, -59.177, 3.42757, 1.4 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 24/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 0.206927, 34.791, 7.80796, 0.66 ) }
    dend_32 { pt3dadd( 1.42336, 36.9336, 7.78022, 0.66 ) }
    dend_32 { pt3dadd( 2.61322, 38.5863, 7.87918, 0.66 ) }
    dend_32 { pt3dadd( 4.02792, 40.255, 8.08384, 0.88 ) }
    dend_32 { pt3dadd( 5.84125, 42.394, 8.34618, 0.88 ) }
    dend_32 { pt3dadd( 6.87889, 43.618, 8.49629, 0.88 ) }
    dend_32 { pt3dadd( 8.53116, 45.5669, 8.73532, 1.03 ) }
    dend_32 { pt3dadd( 9.71868, 46.707, 8.99253, 0.74 ) }
    dend_32 { pt3dadd( 10.7771, 47.534, 9.22611, 0.52 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 33/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 0.206927, 34.791, 7.80796, 0.59 ) }
    dend_29 { pt3dadd( -0.779567, 36.1047, 8.43847, 0.59 ) }
    dend_29 { pt3dadd( -1.6193, 37.2649, 9.15137, 0.59 ) }
    dend_29 { pt3dadd( -2.28189, 38.2351, 9.84181, 0.74 ) }
    dend_29 { pt3dadd( -3.00674, 39.3697, 10.7182, 1.11 ) }
    dend_29 { pt3dadd( -3.5554, 40.3166, 11.518, 1.11 ) }
    dend_29 { pt3dadd( -4.15996, 41.4762, 12.5619, 1.11 ) }
    dend_29 { pt3dadd( -4.53156, 42.4172, 13.5696, 1.25 ) }
    dend_29 { pt3dadd( -4.7267, 43.2262, 14.55, 1.47 ) }
    dend_29 { pt3dadd( -4.77686, 43.9102, 15.4266, 1.47 ) }
    dend_29 { pt3dadd( -4.67566, 44.7206, 16.4608, 1.47 ) }
    dend_29 { pt3dadd( -4.51584, 45.2455, 17.0763, 1.47 ) }
    dend_29 { pt3dadd( -4.23323, 45.9082, 17.7382, 1.47 ) }
    dend_29 { pt3dadd( -3.88653, 46.6677, 18.395, 1.47 ) }
    dend_29 { pt3dadd( -3.54398, 47.4217, 18.9376, 1.47 ) }
    dend_29 { pt3dadd( -3.1256, 48.3347, 19.5384, 1.62 ) }
    dend_29 { pt3dadd( -2.66508, 49.4117, 20.1602, 1.62 ) }
    dend_29 { pt3dadd( -2.23359, 50.4861, 20.7239, 1.69 ) }
    dend_29 { pt3dadd( -1.33581, 52.9149, 21.8742, 1.69 ) }
    dend_29 { pt3dadd( -0.952803, 54.0941, 22.3977, 1.69 ) }
    // Section: dend_15, id: dend_15, parent: dend_9 (entry count 53/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 35.5279, 33.3984, -14.8029, 0.81 ) }
    dend_15 { pt3dadd( 38.0493, 33.7558, -13.7035, 0.81 ) }
    dend_15 { pt3dadd( 39.3676, 34.0539, -13.0483, 0.81 ) }
    dend_15 { pt3dadd( 40.7786, 34.472, -12.231, 0.52 ) }
    dend_15 { pt3dadd( 41.8347, 34.867, -11.5755, 0.52 ) }
    dend_15 { pt3dadd( 42.9076, 35.3201, -10.9086, 0.52 ) }
    dend_15 { pt3dadd( 43.8544, 35.7262, -10.3034, 0.74 ) }
    dend_15 { pt3dadd( 44.9797, 36.2123, -9.56757, 0.74 ) }
    dend_15 { pt3dadd( 46.2333, 36.7614, -8.7248, 0.74 ) }
    dend_15 { pt3dadd( 47.4476, 37.2462, -7.9572, 0.74 ) }
    dend_15 { pt3dadd( 49.7644, 37.9526, -6.56814, 0.37 ) }
    dend_15 { pt3dadd( 50.5486, 38.1179, -6.14293, 0.37 ) }
    dend_15 { pt3dadd( 52.603, 38.4551, -5.09339, 0.66 ) }
    dend_15 { pt3dadd( 53.1261, 38.52, -4.85402, 0.66 ) }
    dend_15 { pt3dadd( 55.244, 38.6835, -3.96135, 1.03 ) }
    dend_15 { pt3dadd( 56.6823, 38.7092, -3.37468, 1.03 ) }
    dend_15 { pt3dadd( 58.8816, 38.664, -2.53903, 1.03 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 70/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 35.5279, 33.3984, -14.8029, 0.59 ) }
    dend_10 { pt3dadd( 36.3634, 34.2407, -15.0846, 0.59 ) }
    dend_10 { pt3dadd( 37.2975, 35.1823, -15.3994, 0.59 ) }
    dend_10 { pt3dadd( 38.8383, 36.7355, -15.9187, 0.59 ) }
    dend_10 { pt3dadd( 39.4307, 37.3327, -16.1185, 0.59 ) }
    dend_10 { pt3dadd( 40.8101, 38.7232, -16.5834, 0.59 ) }
    dend_10 { pt3dadd( 41.9086, 39.8305, -16.9536, 0.59 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 77/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -40.952, 37.0253, -28.9541, 0.74 ) }
    dend_6 { pt3dadd( -42.6678, 38.4408, -31.5381, 0.74 ) }
    dend_6 { pt3dadd( -44.1802, 39.737, -33.9151, 0.74 ) }
    dend_6 { pt3dadd( -44.8984, 40.4273, -35.104, 0.74 ) }
    dend_6 { pt3dadd( -46.7356, 42.2225, -38.0606, 0.74 ) }
    dend_6 { pt3dadd( -47.4794, 42.9186, -39.2029, 0.52 ) }
    dend_6 { pt3dadd( -48.146, 43.5093, -40.1475, 0.52 ) }
    dend_6 { pt3dadd( -49.0151, 44.2974, -41.2382, 0.52 ) }
    dend_6 { pt3dadd( -50.5231, 45.6015, -42.7779, 0.52 ) }
    dend_6 { pt3dadd( -51.5141, 46.348, -43.6041, 0.52 ) }
    dend_6 { pt3dadd( -52.4579, 46.9571, -44.214, 0.52 ) }
    dend_6 { pt3dadd( -53.9132, 47.8531, -44.9925, 0.15 ) }
    dend_6 { pt3dadd( -55.2201, 48.6247, -45.5846, 0.15 ) }
    dend_6 { pt3dadd( -56.957, 49.5943, -46.2686, 0.15 ) }
    dend_6 { pt3dadd( -58.9644, 50.6446, -47.0025, 0.15 ) }
    dend_6 { pt3dadd( -60.4155, 51.3969, -47.556, 0.15 ) }
    dend_6 { pt3dadd( -61.6206, 52.0106, -48.0353, 0.15 ) }
    dend_6 { pt3dadd( -62.472, 52.3856, -48.4021, 0.15 ) }
    dend_6 { pt3dadd( -64.9053, 53.2559, -49.5301, 0.29 ) }
    dend_6 { pt3dadd( -65.644, 53.4584, -49.9251, 0.29 ) }
    dend_6 { pt3dadd( -66.9816, 53.7246, -50.7759, 0.29 ) }
    dend_6 { pt3dadd( -67.8098, 53.8254, -51.35, 0.29 ) }
    dend_6 { pt3dadd( -69.6751, 53.9507, -52.7089, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_6 { pt3dadd( -70.6072, 54.0159, -53.3994, 0.29 ) }
    dend_6 { pt3dadd( -72.5646, 54.2283, -54.8577, 0.44 ) }
    dend_6 { pt3dadd( -73.805, 54.4533, -55.7929, 0.44 ) }
    dend_6 { pt3dadd( -75.1879, 54.8682, -56.7701, 0.44 ) }
    dend_6 { pt3dadd( -75.8423, 55.1658, -57.2505, 0.22 ) }
    dend_6 { pt3dadd( -77.3071, 56.1034, -58.3577, 0.22 ) }
    dend_6 { pt3dadd( -78.5769, 57.0996, -59.3657, 0.22 ) }
    dend_6 { pt3dadd( -79.1317, 57.615, -59.8615, 0.22 ) }
    dend_6 { pt3dadd( -80.6633, 59.1665, -61.5191, 0.22 ) }
    dend_6 { pt3dadd( -82.0821, 60.6359, -63.2771, 0.22 ) }
    dend_6 { pt3dadd( -82.7665, 61.3396, -64.2095, 0.22 ) }
    dend_6 { pt3dadd( -84.1179, 62.6565, -66.066, 0.22 ) }
    dend_6 { pt3dadd( -85.1475, 63.6616, -67.4779, 0.22 ) }
    dend_6 { pt3dadd( -86.7912, 65.2958, -69.7147, 0.22 ) }
    dend_6 { pt3dadd( -88.1842, 66.689, -71.7403, 0.22 ) }
    dend_6 { pt3dadd( -89.6583, 68.0693, -73.702, 0.22 ) }
    dend_6 { pt3dadd( -92.1471, 70.1892, -76.6268, 0.22 ) }
    dend_6 { pt3dadd( -94.0315, 71.5105, -78.4563, 0.22 ) }
    dend_6 { pt3dadd( -95.3272, 72.2366, -79.4865, 0.22 ) }
    dend_6 { pt3dadd( -98.6369, 73.7224, -81.7175, 0.22 ) }
    dend_6 { pt3dadd( -101.713, 74.8141, -83.5536, 0.22 ) }
    dend_6 { pt3dadd( -104.998, 75.7672, -85.2783, 0.22 ) }
    dend_6 { pt3dadd( -109.651, 76.8337, -87.5423, 0.07 ) }
    dend_6 { pt3dadd( -112.535, 77.3657, -88.8874, 0.07 ) }
    dend_6 { pt3dadd( -114.386, 77.6556, -89.7162, 0.07 ) }
    dend_6 { pt3dadd( -118.338, 78.2286, -91.4934, 0.07 ) }
    dend_6 { pt3dadd( -120.1, 78.4882, -92.3782, 0.07 ) }
    dend_6 { pt3dadd( -122.882, 78.945, -93.8623, 0.07 ) }
    dend_6 { pt3dadd( -125.498, 79.4467, -95.2233, 0.07 ) }
    dend_6 { pt3dadd( -129.562, 80.271, -97.2186, 0.07 ) }
    dend_6 { pt3dadd( -132.844, 80.9639, -98.7741, 0.07 ) }
    dend_6 { pt3dadd( -135.25, 81.5333, -99.8854, 0.07 ) }
    dend_6 { pt3dadd( -136.997, 82.0192, -100.697, 0.07 ) }
    dend_6 { pt3dadd( -140.494, 83.173, -102.3, 0.07 ) }
    dend_6 { pt3dadd( -143.572, 84.3471, -103.764, 0.07 ) }
    dend_6 { pt3dadd( -146.523, 85.6206, -105.304, 0.07 ) }
    dend_6 { pt3dadd( -149.579, 87.0291, -107.051, 0.07 ) }
    dend_6 { pt3dadd( -152.265, 88.3564, -108.747, 0.07 ) }
    dend_6 { pt3dadd( -154.558, 89.6121, -110.203, 0.07 ) }
    dend_6 { pt3dadd( -156.422, 90.7683, -111.35, 0.07 ) }
    dend_6 { pt3dadd( -158.082, 91.9272, -112.324, 0.07 ) }
    dend_6 { pt3dadd( -159.621, 93.0941, -113.174, 0.07 ) }
    dend_6 { pt3dadd( -161.862, 94.9959, -114.416, 0.07 ) }
    dend_6 { pt3dadd( -166.415, 99.3961, -116.989, 0.07 ) }
    dend_6 { pt3dadd( -168.961, 102.161, -118.544, 0.07 ) }
    dend_6 { pt3dadd( -170.534, 104.005, -119.554, 0.07 ) }
    dend_6 { pt3dadd( -172.066, 105.939, -120.59, 0.07 ) }
    dend_6 { pt3dadd( -173.769, 108.266, -121.849, 0.07 ) }
    dend_6 { pt3dadd( -175.128, 110.294, -123.041, 0.07 ) }
    dend_6 { pt3dadd( -176.708, 112.899, -124.749, 0.07 ) }
    dend_6 { pt3dadd( -177.676, 114.438, -125.831, 0.07 ) }
    dend_6 { pt3dadd( -178.592, 115.814, -126.804, 0.07 ) }
    dend_6 { pt3dadd( -179.724, 117.438, -127.947, 0.07 ) }
    dend_6 { pt3dadd( -180.727, 118.756, -128.898, 0.07 ) }
    dend_6 { pt3dadd( -181.81, 120.145, -129.891, 0.07 ) }
    dend_6 { pt3dadd( -183.286, 122.039, -131.098, 0.07 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 56/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -40.952, 37.0253, -28.9541, 0.44 ) }
    dend_3 { pt3dadd( -41.9019, 37.1889, -29.3764, 0.44 ) }
    dend_3 { pt3dadd( -42.7199, 37.3745, -29.7035, 0.44 ) }
    dend_3 { pt3dadd( -44.0112, 37.6675, -30.2199, 0.44 ) }
    dend_3 { pt3dadd( -45.1203, 37.9192, -30.6635, 0.44 ) }
    dend_3 { pt3dadd( -46.6977, 38.2771, -31.2943, 0.44 ) }
    dend_3 { pt3dadd( -48.8943, 38.7756, -32.1727, 0.44 ) }
    dend_3 { pt3dadd( -51.1196, 39.4119, -33.117, 0.44 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 64/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 60.4268, -53.4769, 58.8959, 0.07 ) }
    dend_62 { pt3dadd( 61.8907, -48.9392, 70.8708, 0.07 ) }
    dend_62 { pt3dadd( 62.0146, -46.4616, 83.5189, 0.07 ) }
    dend_62 { pt3dadd( 64.1403, -43.5582, 95.8956, 0.07 ) }
    dend_62 { pt3dadd( 68.6302, -39.4913, 107.272, 0.07 ) }
    dend_62 { pt3dadd( 71.0474, -37.1273, 119.71, 0.07 ) }
    dend_62 { pt3dadd( 73.2977, -35.899, 132.341, 0.07 ) }
    dend_62 { pt3dadd( 75.7792, -34.659, 144.928, 0.07 ) }
    dend_62 { pt3dadd( 78.4396, -30.6612, 156.89, 0.07 ) }
    dend_62 { pt3dadd( 79.8105, -25.8301, 168.76, 0.07 ) }
    dend_62 { pt3dadd( 83.6138, -18.9163, 178.952, 0.07 ) }
    dend_62 { pt3dadd( 88.8606, -10.0765, 186.727, 0.07 ) }
    dend_62 { pt3dadd( 93.9647, -1.27968, 194.645, 0.07 ) }
    dend_62 { pt3dadd( 96.8142, 7.54892, 203.593, 0.07 ) }
    dend_62 { pt3dadd( 98.5655, 14.9901, 213.97, 0.07 ) }
    dend_62 { pt3dadd( 98.1774, 23.8278, 223.345, 0.07 ) }
    dend_62 { pt3dadd( 99.9534, 34.3344, 230.596, 0.07 ) }
    dend_62 { pt3dadd( 103.516, 43.832, 238.549, 0.07 ) }
    dend_62 { pt3dadd( 106.853, 52.8429, 247.139, 0.07 ) }
    dend_62 { pt3dadd( 111.318, 61.6542, 255.419, 0.07 ) }
    dend_62 { pt3dadd( 113.965, 72.1577, 262.404, 0.07 ) }
    dend_62 { pt3dadd( 117.199, 81.6074, 270.551, 0.07 ) }
    dend_62 { pt3dadd( 119.305, 91.4009, 278.662, 0.07 ) }
    dend_62 { pt3dadd( 119.381, 99.982, 288.279, 0.07 ) }
    dend_62 { pt3dadd( 117.63, 109.211, 297.105, 0.07 ) }
    dend_62 { pt3dadd( 115.307, 116.47, 307.499, 0.07 ) }
    dend_62 { pt3dadd( 112.86, 121.526, 319.1, 0.07 ) }
    dend_62 { pt3dadd( 111.842, 127.528, 330.461, 0.07 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 92/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 60.4268, -53.4769, 58.8959, 0.07 ) }
    dend_61 { pt3dadd( 68.582, -59.4173, 59.517, 0.07 ) }
    dend_61 { pt3dadd( 75.6622, -66.3351, 61.5661, 0.07 ) }
    dend_61 { pt3dadd( 81.3582, -74.5678, 62.9659, 0.07 ) }
    dend_61 { pt3dadd( 87.1034, -82.2962, 66.0394, 0.07 ) }
    dend_61 { pt3dadd( 92.3787, -90.2883, 69.2765, 0.07 ) }
    dend_61 { pt3dadd( 97.4027, -97.8544, 73.7145, 0.07 ) }
    dend_61 { pt3dadd( 100.721, -105.314, 79.675, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_61 { pt3dadd( 105.194, -111.803, 86.0051, 0.07 ) }
    dend_61 { pt3dadd( 109.561, -118.204, 92.4962, 0.07 ) }
    dend_61 { pt3dadd( 112.489, -126.485, 97.4996, 0.07 ) }
    dend_61 { pt3dadd( 114.234, -135.674, 101.333, 0.07 ) }
    dend_61 { pt3dadd( 117.077, -144.289, 105.792, 0.07 ) }
    dend_61 { pt3dadd( 119.184, -153.508, 109.361, 0.07 ) }
    dend_61 { pt3dadd( 121.42, -162.274, 113.872, 0.07 ) }
    dend_61 { pt3dadd( 123.63, -170.587, 119.181, 0.07 ) }
    dend_61 { pt3dadd( 124.881, -178.836, 124.888, 0.07 ) }
    dend_61 { pt3dadd( 127.983, -187.364, 129.343, 0.07 ) }
    dend_61 { pt3dadd( 130.502, -195.973, 134.002, 0.07 ) }
    dend_61 { pt3dadd( 132.609, -204.599, 138.834, 0.07 ) }
    dend_61 { pt3dadd( 133.638, -213.494, 143.524, 0.07 ) }
    dend_61 { pt3dadd( 132.504, -221.466, 149.635, 0.07 ) }
    dend_61 { pt3dadd( 130.526, -229.026, 156.048, 0.07 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 15/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 57.8996, -44.7666, 55.0778, 0.07 ) }
    dend_59 { pt3dadd( 63.8608, -46.8237, 62.8118, 0.07 ) }
    dend_59 { pt3dadd( 70.1973, -50.4735, 69.6023, 0.07 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 18/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 57.8996, -44.7666, 55.0778, 0.07 ) }
    dend_58 { pt3dadd( 61.4909, -46.342, 61.0657, 0.07 ) }
    dend_58 { pt3dadd( 64.053, -48.3474, 67.4414, 0.07 ) }
    dend_58 { pt3dadd( 65.4116, -50.7063, 74.0615, 0.07 ) }
    dend_58 { pt3dadd( 66.4198, -53.385, 80.6222, 0.07 ) }
    dend_58 { pt3dadd( 67.5188, -54.7598, 87.5603, 0.07 ) }
    dend_58 { pt3dadd( 69.1256, -56.7294, 94.2517, 0.07 ) }
    dend_58 { pt3dadd( 69.7152, -58.2297, 101.225, 0.07 ) }
    dend_58 { pt3dadd( 69.4451, -60.3776, 108.048, 0.07 ) }
    dend_58 { pt3dadd( 70.2175, -62.7269, 114.765, 0.07 ) }
    dend_58 { pt3dadd( 70.6811, -65.5413, 121.33, 0.07 ) }
    dend_58 { pt3dadd( 71.8705, -68.8572, 127.561, 0.07 ) }
    dend_58 { pt3dadd( 73.1403, -70.8342, 134.322, 0.07 ) }
    dend_58 { pt3dadd( 75.8541, -73.1321, 140.534, 0.07 ) }
    dend_58 { pt3dadd( 78.4451, -75.1339, 146.9, 0.07 ) }
    dend_58 { pt3dadd( 79.9682, -77.7117, 153.401, 0.07 ) }
    dend_58 { pt3dadd( 81.095, -81.3186, 159.48, 0.07 ) }
    dend_58 { pt3dadd( 81.7418, -84.2919, 165.959, 0.07 ) }
    dend_58 { pt3dadd( 81.678, -87.8139, 172.19, 0.07 ) }
    dend_58 { pt3dadd( 81.48, -89.8993, 179.035, 0.07 ) }
    dend_58 { pt3dadd( 82.0235, -92.0562, 185.838, 0.07 ) }
    dend_58 { pt3dadd( 82.4692, -94.8904, 192.396, 0.07 ) }
    dend_58 { pt3dadd( 83.3476, -97.0752, 199.156, 0.07 ) }
    dend_58 { pt3dadd( 84.0812, -100.11, 205.597, 0.07 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 42/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -7.37663, -87.8995, 18.3134, 0.81 ) }
    dend_53 { pt3dadd( -7.02266, -88.2866, 18.5778, 0.81 ) }
    dend_53 { pt3dadd( -6.68585, -88.6014, 18.9458, 0.81 ) }
    dend_53 { pt3dadd( -6.29698, -88.9557, 19.4369, 0.81 ) }
    dend_53 { pt3dadd( -6.10254, -89.1264, 19.6671, 0.81 ) }
    dend_53 { pt3dadd( -5.65295, -89.531, 20.1765, 0.81 ) }
    dend_53 { pt3dadd( -4.82644, -90.3192, 21.0777, 0.81 ) }
    dend_53 { pt3dadd( -4.17522, -90.9619, 21.7784, 0.81 ) }
    dend_53 { pt3dadd( -3.8478, -91.2877, 22.1085, 0.81 ) }
    dend_53 { pt3dadd( -3.2878, -91.8043, 22.6432, 0.52 ) }
    dend_53 { pt3dadd( -2.96126, -92.0965, 22.9425, 0.52 ) }
    dend_53 { pt3dadd( -2.5738, -92.4554, 23.272, 0.52 ) }
    dend_53 { pt3dadd( -2.37594, -92.6589, 23.3934, 0.52 ) }
    dend_53 { pt3dadd( -2.09862, -92.9825, 23.5394, 0.52 ) }
    dend_53 { pt3dadd( -1.64852, -93.5787, 23.8188, 0.66 ) }
    dend_53 { pt3dadd( -1.39571, -94.0044, 24.0528, 0.66 ) }
    dend_53 { pt3dadd( -1.26104, -94.3099, 24.2425, 0.66 ) }
    dend_53 { pt3dadd( -1.15716, -94.7281, 24.5217, 0.66 ) }
    dend_53 { pt3dadd( -1.11984, -95.2595, 24.9085, 0.66 ) }
    dend_53 { pt3dadd( -1.18102, -95.719, 25.267, 0.81 ) }
    dend_53 { pt3dadd( -1.30763, -96.1306, 25.6107, 0.81 ) }
    dend_53 { pt3dadd( -1.49849, -96.5347, 25.993, 0.66 ) }
    dend_53 { pt3dadd( -1.69075, -96.8869, 26.3572, 0.66 ) }
    dend_53 { pt3dadd( -1.89696, -97.2191, 26.7369, 0.66 ) }
    dend_53 { pt3dadd( -2.13234, -97.511, 27.0923, 0.37 ) }
    dend_53 { pt3dadd( -2.35713, -97.7288, 27.3785, 0.37 ) }
    dend_53 { pt3dadd( -2.70759, -98.0087, 27.7816, 0.37 ) }
    dend_53 { pt3dadd( -1.9567, -101.949, 30.9463, 0.37 ) }
    dend_53 { pt3dadd( -0.0585603, -105.154, 34.4427, 0.37 ) }
    dend_53 { pt3dadd( 2.24797, -108.629, 37.3939, 0.37 ) }
    dend_53 { pt3dadd( 4.57741, -112.63, 39.5538, 0.37 ) }
    dend_53 { pt3dadd( 6.42607, -116.86, 41.744, 0.37 ) }
    dend_53 { pt3dadd( 7.60662, -121.297, 43.9851, 0.37 ) }
    dend_53 { pt3dadd( 8.17011, -125.651, 46.5986, 0.37 ) }
    dend_53 { pt3dadd( 9.24349, -129.496, 49.7874, 0.37 ) }
    dend_53 { pt3dadd( 9.46448, -133.608, 52.8118, 0.37 ) }
    dend_53 { pt3dadd( 8.8548, -137.851, 55.5913, 0.37 ) }
    dend_53 { pt3dadd( 8.11427, -142.318, 57.9592, 0.37 ) }
    dend_53 { pt3dadd( 8.46857, -146.722, 60.5247, 0.37 ) }
    dend_53 { pt3dadd( 9.65571, -150.999, 63.0548, 0.37 ) }
    dend_53 { pt3dadd( 9.94135, -154.868, 66.3796, 0.37 ) }
    dend_53 { pt3dadd( 9.75102, -158.394, 70.0714, 0.37 ) }
    dend_53 { pt3dadd( 9.32224, -161.746, 73.9039, 0.37 ) }
    dend_53 { pt3dadd( 9.26417, -165.527, 77.3398, 0.37 ) }
    dend_53 { pt3dadd( 8.83129, -168.574, 81.418, 0.37 ) }
    dend_53 { pt3dadd( 8.70063, -171.964, 85.2383, 0.37 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 88/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -7.37663, -87.8995, 18.3134, 1.03 ) }
    dend_52 { pt3dadd( -8.43192, -88.9861, 20.6796, 1.03 ) }
    dend_52 { pt3dadd( -9.10774, -89.8339, 22.4351, 1.03 ) }
    dend_52 { pt3dadd( -9.66936, -90.7817, 24.2914, 1.03 ) }
    dend_52 { pt3dadd( -10.0514, -91.6074, 25.7838, 0.96 ) }
    dend_52 { pt3dadd( -10.2828, -92.232, 26.802, 0.96 ) }
    dend_52 { pt3dadd( -10.5188, -93.0906, 28.035, 0.96 ) }
    dend_52 { pt3dadd( -10.7051, -94.0815, 29.2039, 0.66 ) }
    dend_52 { pt3dadd( -10.8819, -95.9991, 31.0898, 0.66 ) }
    dend_52 { pt3dadd( -10.8887, -97.0558, 32.0336, 0.66 ) }
    dend_52 { pt3dadd( -10.8594, -98.1931, 33.0556, 0.66 ) }
    dend_52 { pt3dadd( -10.8981, -99.6336, 34.3496, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_52 { pt3dadd( -10.978, -100.499, 35.0913, 0.66 ) }
    dend_52 { pt3dadd( -11.0882, -101.278, 35.7404, 0.66 ) }
    dend_52 { pt3dadd( -11.27, -102.279, 36.5863, 0.37 ) }
    dend_52 { pt3dadd( -11.5222, -103.3, 37.5729, 0.37 ) }
    dend_52 { pt3dadd( -11.8281, -104.201, 38.6423, 0.52 ) }
    dend_52 { pt3dadd( -12.206, -105.059, 39.8583, 0.52 ) }
    dend_52 { pt3dadd( -12.6018, -105.962, 41.2218, 0.37 ) }
    dend_52 { pt3dadd( -12.7777, -106.453, 41.9653, 0.37 ) }
    dend_52 { pt3dadd( -12.9234, -106.934, 42.6417, 0.37 ) }
    dend_52 { pt3dadd( -13.06, -107.503, 43.4244, 0.37 ) }
    dend_52 { pt3dadd( -13.1091, -107.725, 43.7731, 0.37 ) }
    dend_52 { pt3dadd( -13.2962, -108.082, 44.4519, 0.37 ) }
    dend_52 { pt3dadd( -13.5231, -108.384, 45.1229, 0.37 ) }
    dend_52 { pt3dadd( -13.6085, -114.517, 52.8528, 0.37 ) }
    dend_52 { pt3dadd( -13.3024, -120.508, 60.6886, 0.37 ) }
    dend_52 { pt3dadd( -13.9357, -127.855, 67.2455, 0.37 ) }
    dend_52 { pt3dadd( -14.505, -136.52, 71.9324, 0.37 ) }
    dend_52 { pt3dadd( -15.9958, -145.673, 75.3046, 0.37 ) }
    dend_52 { pt3dadd( -16.6074, -155.261, 77.5581, 0.37 ) }
    dend_52 { pt3dadd( -17.5151, -164.65, 80.4551, 0.37 ) }
    dend_52 { pt3dadd( -18.5822, -174.22, 82.6122, 0.37 ) }
    dend_52 { pt3dadd( -18.645, -184.068, 83.2298, 0.37 ) }
    dend_52 { pt3dadd( -17.9411, -193.876, 84.051, 0.37 ) }
    dend_52 { pt3dadd( -16.3736, -203.38, 86.1977, 0.37 ) }
    dend_52 { pt3dadd( -14.7518, -212.536, 89.5009, 0.37 ) }
    dend_52 { pt3dadd( -11.6955, -221.173, 93.1649, 0.37 ) }
    dend_52 { pt3dadd( -7.20173, -229.173, 96.7965, 0.37 ) }
    dend_52 { pt3dadd( -1.24986, -236.062, 100.602, 0.37 ) }
    dend_52 { pt3dadd( 4.89521, -241.29, 106.284, 0.37 ) }
    dend_52 { pt3dadd( 12.1935, -246.077, 110.888, 0.37 ) }
    dend_52 { pt3dadd( 19.3473, -251.143, 115.419, 0.37 ) }
    dend_52 { pt3dadd( 25.8368, -257.507, 119.261, 0.37 ) }
    dend_52 { pt3dadd( 32.1158, -264.572, 122.096, 0.37 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 33/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -18.2137, -59.177, 3.42757, 1.18 ) }
    dend_42 { pt3dadd( -18.6728, -59.965, 2.4253, 1.18 ) }
    dend_42 { pt3dadd( -19.279, -61.2757, 0.711449, 1.18 ) }
    dend_42 { pt3dadd( -19.5695, -62.3785, -0.515431, 1.4 ) }
    dend_42 { pt3dadd( -19.7395, -63.2126, -1.3485, 1.69 ) }
    dend_42 { pt3dadd( -19.8925, -63.904, -2.02622, 1.69 ) }
    dend_42 { pt3dadd( -20.2072, -65.2066, -3.24846, 1.69 ) }
    dend_42 { pt3dadd( -20.3584, -65.8643, -3.84552, 1.69 ) }
    dend_42 { pt3dadd( -20.7239, -67.7822, -5.34734, 1.4 ) }
    dend_42 { pt3dadd( -20.8719, -68.5874, -5.94894, 1.4 ) }
    dend_42 { pt3dadd( -21.172, -70.0537, -7.03706, 1.4 ) }
    dend_42 { pt3dadd( -21.5399, -71.5018, -8.09358, 1.4 ) }
    dend_42 { pt3dadd( -22.0107, -73.0067, -9.22248, 1.4 ) }
    dend_42 { pt3dadd( -22.4599, -74.2965, -10.2196, 1.4 ) }
    dend_42 { pt3dadd( -23.0086, -75.7374, -11.413, 1.55 ) }
    dend_42 { pt3dadd( -23.3898, -76.842, -12.3261, 1.55 ) }
    dend_42 { pt3dadd( -23.9111, -78.5451, -13.6896, 1.55 ) }
    dend_42 { pt3dadd( -24.3942, -80.0524, -14.9707, 1.4 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 51/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -18.2137, -59.177, 3.42757, 0.88 ) }
    dend_41 { pt3dadd( -19.3672, -59.7788, 3.95081, 0.88 ) }
    dend_41 { pt3dadd( -19.9665, -60.0829, 4.22513, 0.88 ) }
    dend_41 { pt3dadd( -20.6853, -60.4379, 4.55689, 0.66 ) }
    dend_41 { pt3dadd( -22.0041, -61.0583, 5.17357, 0.66 ) }
    dend_41 { pt3dadd( -23.1247, -61.5613, 5.70334, 0.66 ) }
    dend_41 { pt3dadd( -23.9441, -61.9226, 6.09316, 0.81 ) }
    dend_41 { pt3dadd( -25.1013, -62.4576, 6.63168, 0.81 ) }
    dend_41 { pt3dadd( -25.697, -62.7834, 6.90458, 0.81 ) }
    dend_41 { pt3dadd( -26.7525, -63.4606, 7.38239, 0.59 ) }
    dend_41 { pt3dadd( -27.2598, -63.8346, 7.6317, 0.59 ) }
    dend_41 { pt3dadd( -28.2426, -64.6127, 8.16092, 0.59 ) }
    dend_41 { pt3dadd( -29.0937, -65.3471, 8.65627, 0.59 ) }
    dend_41 { pt3dadd( -29.914, -66.1414, 9.16394, 0.59 ) }
    dend_41 { pt3dadd( -30.6288, -66.9043, 9.62461, 0.59 ) }
    dend_41 { pt3dadd( -31.5081, -67.9545, 10.2073, 0.96 ) }
    dend_41 { pt3dadd( -32.0051, -68.5822, 10.5575, 0.96 ) }
    dend_41 { pt3dadd( -32.181, -68.7967, 10.6939, 0.96 ) }
    dend_41 { pt3dadd( -32.7379, -69.3918, 11.1599, 0.29 ) }
    dend_41 { pt3dadd( -33.2026, -69.8599, 11.5668, 0.29 ) }
    dend_41 { pt3dadd( -33.8581, -70.5599, 12.1243, 0.29 ) }
    dend_41 { pt3dadd( -34.1625, -70.8924, 12.3399, 0.29 ) }
    dend_41 { pt3dadd( -35.0151, -71.7936, 12.8383, 0.29 ) }
    dend_41 { pt3dadd( -35.3934, -72.1407, 13.0273, 0.29 ) }
    dend_41 { pt3dadd( -35.6778, -72.3498, 13.1534, 0.29 ) }
    dend_41 { pt3dadd( -36.7038, -73.0516, 13.5266, 0.29 ) }
    dend_41 { pt3dadd( -37.5297, -73.5955, 13.7587, 0.29 ) }
    dend_41 { pt3dadd( -38.4618, -74.1512, 13.9561, 0.29 ) }
    dend_41 { pt3dadd( -39.4457, -74.673, 14.15, 0.29 ) }
    dend_41 { pt3dadd( -40.372, -75.111, 14.3719, 0.29 ) }
    dend_41 { pt3dadd( -41.4956, -75.5734, 14.7236, 0.29 ) }
    dend_41 { pt3dadd( -41.918, -75.729, 14.8858, 0.29 ) }
    dend_41 { pt3dadd( -43.4608, -76.2941, 15.5427, 0.29 ) }
    dend_41 { pt3dadd( -45.2959, -76.94, 16.3685, 0.52 ) }
    dend_41 { pt3dadd( -47.2085, -77.5771, 17.2567, 0.52 ) }
    dend_41 { pt3dadd( -50.1345, -78.5235, 18.7113, 0.52 ) }
    dend_41 { pt3dadd( -53.7926, -79.684, 20.7821, 0.52 ) }
    dend_41 { pt3dadd( -55.6413, -80.3054, 21.9712, 0.52 ) }
    dend_41 { pt3dadd( -57.0017, -80.8099, 22.9614, 0.37 ) }
    dend_41 { pt3dadd( -57.7544, -81.1021, 23.5863, 0.37 ) }
    dend_41 { pt3dadd( -58.557, -81.4188, 24.384, 0.37 ) }
    dend_41 { pt3dadd( -59.9856, -82.0081, 26.1311, 0.37 ) }
    dend_41 { pt3dadd( -61.6174, -82.7414, 28.518, 0.37 ) }
    dend_41 { pt3dadd( -62.2401, -83.0381, 29.4896, 0.37 ) }
    dend_41 { pt3dadd( -62.8672, -83.3503, 30.4856, 0.37 ) }
    dend_41 { pt3dadd( -63.7197, -83.741, 31.7531, 0.29 ) }
    dend_41 { pt3dadd( -64.0816, -83.8792, 32.2414, 0.29 ) }
    dend_41 { pt3dadd( -64.9743, -84.1518, 33.3366, 0.29 ) }
    dend_41 { pt3dadd( -65.7663, -84.351, 34.2829, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( -66.574, -84.5548, 35.1737, 0.66 ) }
    dend_41 { pt3dadd( -67.3694, -84.7527, 35.968, 0.66 ) }
    dend_41 { pt3dadd( -67.9823, -84.8972, 36.5006, 0.66 ) }
    dend_41 { pt3dadd( -68.3936, -84.9844, 36.8232, 0.66 ) }
    dend_41 { pt3dadd( -69.9157, -85.3433, 37.8823, 0.66 ) }
    dend_41 { pt3dadd( -71.8031, -85.8794, 39.0171, 0.81 ) }
    dend_41 { pt3dadd( -72.878, -86.2517, 39.5727, 0.81 ) }
    dend_41 { pt3dadd( -74.1747, -86.7712, 40.1716, 0.66 ) }
    dend_41 { pt3dadd( -74.9947, -87.1399, 40.5194, 0.66 ) }
    dend_41 { pt3dadd( -76.2511, -87.6785, 40.9769, 0.66 ) }
    dend_41 { pt3dadd( -77.1071, -87.9937, 41.2271, 0.66 ) }
    dend_41 { pt3dadd( -78.3368, -88.3749, 41.5648, 0.66 ) }
    dend_41 { pt3dadd( -80.2766, -88.9166, 42.0801, 0.66 ) }
    dend_41 { pt3dadd( -81.8119, -89.2975, 42.4921, 0.66 ) }
    dend_41 { pt3dadd( -85.6724, -90.1016, 43.5415, 0.66 ) }
    dend_41 { pt3dadd( -87.9701, -90.4562, 44.1052, 0.66 ) }
    dend_41 { pt3dadd( -89.4678, -90.6476, 44.4373, 0.74 ) }
    dend_41 { pt3dadd( -90.6536, -90.7718, 44.6417, 0.74 ) }
    dend_41 { pt3dadd( -91.1138, -90.8125, 44.6793, 0.74 ) }
    dend_41 { pt3dadd( -92.1586, -90.9239, 44.6914, 0.74 ) }
    dend_41 { pt3dadd( -93.5501, -91.1617, 44.5424, 0.74 ) }
    dend_41 { pt3dadd( -94.6775, -91.3812, 44.2728, 0.74 ) }
    dend_41 { pt3dadd( -96.4043, -91.6671, 43.6062, 0.74 ) }
    dend_41 { pt3dadd( -97.877, -91.8505, 42.904, 0.81 ) }
    dend_41 { pt3dadd( -98.7097, -91.9246, 42.4192, 0.81 ) }
    dend_41 { pt3dadd( -99.8246, -91.9539, 41.6506, 0.88 ) }
    dend_41 { pt3dadd( -101.007, -91.8716, 40.7379, 0.88 ) }
    dend_41 { pt3dadd( -102.207, -91.6226, 39.6803, 0.88 ) }
    dend_41 { pt3dadd( -102.619, -91.4613, 39.2685, 0.88 ) }
    dend_41 { pt3dadd( -103.463, -90.9981, 38.3491, 0.74 ) }
    dend_41 { pt3dadd( -104.28, -90.449, 37.3834, 0.74 ) }
    dend_41 { pt3dadd( -104.949, -89.9404, 36.5417, 0.74 ) }
    dend_41 { pt3dadd( -105.403, -89.5649, 35.974, 0.74 ) }
    dend_41 { pt3dadd( -106.209, -88.9091, 35.0118, 0.52 ) }
    dend_41 { pt3dadd( -106.497, -88.6956, 34.6774, 0.52 ) }
    dend_41 { pt3dadd( -107.33, -88.1578, 33.6853, 0.52 ) }
    dend_41 { pt3dadd( -108.531, -87.5277, 32.1891, 0.52 ) }
    dend_41 { pt3dadd( -109.109, -87.2813, 31.4525, 0.52 ) }
    dend_41 { pt3dadd( -109.726, -87.0561, 30.6619, 0.52 ) }
    dend_41 { pt3dadd( -110.147, -86.921, 30.1229, 0.52 ) }
    dend_41 { pt3dadd( -111.286, -86.5139, 28.5625, 0.52 ) }
    dend_41 { pt3dadd( -111.619, -86.3685, 28.0596, 0.52 ) }
    dend_41 { pt3dadd( -111.798, -86.2703, 27.7447, 0.52 ) }
    dend_41 { pt3dadd( -112.06, -86.1005, 27.2241, 0.29 ) }
    dend_41 { pt3dadd( -112.267, -85.9543, 26.8131, 0.29 ) }
    dend_41 { pt3dadd( -112.66, -85.664, 26.0228, 0.29 ) }
    dend_41 { pt3dadd( -112.907, -85.4906, 25.5145, 0.29 ) }
    dend_41 { pt3dadd( -113.831, -84.8679, 23.5316, 0.29 ) }
    dend_41 { pt3dadd( -114.164, -84.6427, 22.756, 0.29 ) }
    dend_41 { pt3dadd( -114.722, -84.2419, 21.2902, 0.29 ) }
    dend_41 { pt3dadd( -115.019, -83.9712, 20.3414, 0.29 ) }
    dend_41 { pt3dadd( -115.297, -83.6036, 19.1174, 0.29 ) }
    dend_41 { pt3dadd( -115.41, -83.3497, 18.275, 0.29 ) }
    dend_41 { pt3dadd( -115.419, -83.0453, 17.2015, 0.29 ) }
    dend_41 { pt3dadd( -115.368, -82.8611, 16.5405, 0.15 ) }
    dend_41 { pt3dadd( -115.219, -82.5256, 15.4134, 0.15 ) }
    dend_41 { pt3dadd( -115.108, -82.2958, 14.6941, 0.15 ) }
    dend_41 { pt3dadd( -114.982, -82.0228, 13.865, 0.15 ) }
    dend_41 { pt3dadd( -114.869, -81.6644, 12.7576, 0.15 ) }
    dend_41 { pt3dadd( -114.829, -81.3829, 11.8196, 0.15 ) }
    dend_41 { pt3dadd( -114.858, -81.1445, 10.9266, 0.15 ) }
    dend_41 { pt3dadd( -114.904, -80.988, 10.3017, 0.15 ) }
    dend_41 { pt3dadd( -115.051, -80.5777, 8.72317, 0.15 ) }
    dend_41 { pt3dadd( -115.233, -80.0767, 6.94266, 0.15 ) }
    dend_41 { pt3dadd( -115.329, -79.8668, 6.21349, 0.15 ) }
    dend_41 { pt3dadd( -115.491, -79.6161, 5.16302, 0.15 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 66/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 10.7771, 47.534, 9.22611, 0.59 ) }
    dend_34 { pt3dadd( 12.5225, 48.5997, 8.84924, 0.59 ) }
    dend_34 { pt3dadd( 13.5219, 49.2768, 8.66572, 0.52 ) }
    dend_34 { pt3dadd( 15.1839, 50.4602, 8.41549, 0.52 ) }
    dend_34 { pt3dadd( 17.4823, 52.1626, 8.17195, 0.44 ) }
    dend_34 { pt3dadd( 18.6031, 53.0112, 8.07543, 0.44 ) }
    dend_34 { pt3dadd( 20.2105, 54.2107, 7.88052, 0.44 ) }
    dend_34 { pt3dadd( 22.5873, 55.9084, 7.57377, 0.44 ) }
    dend_34 { pt3dadd( 24.482, 57.2875, 7.36001, 0.44 ) }
    dend_34 { pt3dadd( 27.1673, 59.2994, 7.11812, 0.44 ) }
    dend_34 { pt3dadd( 28.4053, 60.2462, 7.03119, 0.44 ) }
    dend_34 { pt3dadd( 30.6961, 61.9651, 6.86508, 0.44 ) }
    dend_34 { pt3dadd( 32.6201, 63.3911, 6.77341, 0.59 ) }
    dend_34 { pt3dadd( 34.298, 64.5843, 6.73067, 0.59 ) }
    dend_34 { pt3dadd( 39.1994, 68.0053, 6.73724, 0.74 ) }
    dend_34 { pt3dadd( 41.7033, 69.731, 6.82043, 0.74 ) }
    dend_34 { pt3dadd( 44.7188, 71.8188, 7.02886, 0.74 ) }
    dend_34 { pt3dadd( 47.5994, 73.813, 7.32166, 0.74 ) }
    dend_34 { pt3dadd( 49.6343, 75.2398, 7.47938, 0.44 ) }
    dend_34 { pt3dadd( 51.278, 76.3882, 7.57811, 0.44 ) }
    dend_34 { pt3dadd( 53.6726, 78.0495, 7.69758, 0.29 ) }
    dend_34 { pt3dadd( 54.861, 78.8549, 7.72839, 0.29 ) }
    dend_34 { pt3dadd( 58.5543, 81.3019, 7.67771, 0.29 ) }
    dend_34 { pt3dadd( 63.0694, 84.2392, 7.52153, 0.15 ) }
    dend_34 { pt3dadd( 66.5801, 86.4912, 7.37234, 0.15 ) }
    dend_34 { pt3dadd( 69.5454, 88.3224, 7.23218, 0.15 ) }
    dend_34 { pt3dadd( 72.3797, 89.9789, 7.17168, 0.15 ) }
    dend_34 { pt3dadd( 76.1257, 92.0834, 7.21663, 0.15 ) }
    dend_34 { pt3dadd( 78.2219, 93.2492, 7.3463, 0.07 ) }
    dend_34 { pt3dadd( 80.4332, 94.4426, 7.64339, 0.07 ) }
    dend_34 { pt3dadd( 82.5192, 95.637, 8.05689, 0.07 ) }
    dend_34 { pt3dadd( 84.7464, 96.9869, 8.69017, 0.07 ) }
    dend_34 { pt3dadd( 85.4451, 97.4542, 8.9383, 0.07 ) }
    dend_34 { pt3dadd( 86.7824, 98.4498, 9.49675, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_34 { pt3dadd( 87.6688, 99.1779, 9.7698, 0.07 ) }
    dend_34 { pt3dadd( 88.3512, 99.7946, 9.96044, 0.07 ) }
    dend_34 { pt3dadd( 89.5255, 100.839, 10.1988, 0.07 ) }
    dend_34 { pt3dadd( 91.6909, 102.511, 10.5621, 0.07 ) }
    dend_34 { pt3dadd( 93.0896, 103.417, 10.8704, 0.22 ) }
    dend_34 { pt3dadd( 94.5365, 104.218, 11.2815, 0.22 ) }
    dend_34 { pt3dadd( 96.9154, 105.423, 12.2068, 0.22 ) }
    dend_34 { pt3dadd( 98.0638, 105.929, 12.7964, 0.22 ) }
    dend_34 { pt3dadd( 100.013, 106.663, 14.0631, 0.44 ) }
    dend_34 { pt3dadd( 101.255, 107.012, 14.9891, 0.44 ) }
    dend_34 { pt3dadd( 102.008, 107.197, 15.5435, 0.44 ) }
    dend_34 { pt3dadd( 103.086, 107.479, 16.3512, 0.44 ) }
    dend_34 { pt3dadd( 104.982, 108.113, 17.6604, 0.44 ) }
    dend_34 { pt3dadd( 106.48, 108.765, 18.565, 0.22 ) }
    dend_34 { pt3dadd( 108.057, 109.609, 19.403, 0.22 ) }
    dend_34 { pt3dadd( 110.26, 110.933, 20.4883, 0.37 ) }
    dend_34 { pt3dadd( 111.729, 111.915, 21.1735, 0.37 ) }
    dend_34 { pt3dadd( 113.782, 113.545, 22.0054, 0.37 ) }
    dend_34 { pt3dadd( 115.832, 115.529, 22.7279, 0.37 ) }
    dend_34 { pt3dadd( 117.105, 117.035, 23.129, 0.37 ) }
    dend_34 { pt3dadd( 118.256, 118.66, 23.5024, 0.37 ) }
    dend_34 { pt3dadd( 119.106, 120.02, 23.7844, 0.37 ) }
    dend_34 { pt3dadd( 121.193, 123.481, 24.5231, 0.37 ) }
    dend_34 { pt3dadd( 122.198, 125.218, 24.9335, 0.59 ) }
    dend_34 { pt3dadd( 123.227, 126.962, 25.3687, 0.74 ) }
    dend_34 { pt3dadd( 124.593, 129.149, 25.9521, 0.74 ) }
    dend_34 { pt3dadd( 125.955, 131.182, 26.5898, 0.74 ) }
    dend_34 { pt3dadd( 127.281, 133.019, 27.3286, 0.74 ) }
    dend_34 { pt3dadd( 128.403, 134.44, 28.0704, 0.74 ) }
    dend_34 { pt3dadd( 129.781, 136.007, 28.9744, 0.74 ) }
    dend_34 { pt3dadd( 131.028, 137.34, 29.7863, 0.96 ) }
    dend_34 { pt3dadd( 131.763, 138.12, 30.2663, 0.96 ) }
    dend_34 { pt3dadd( 132.649, 139.039, 30.8265, 0.96 ) }
    dend_34 { pt3dadd( 133.24, 139.648, 31.1835, 0.96 ) }
    dend_34 { pt3dadd( 135.093, 141.573, 32.3351, 1.18 ) }
    dend_34 { pt3dadd( 136.448, 143.11, 33.2245, 1.18 ) }
    dend_34 { pt3dadd( 137.227, 144.074, 33.7234, 1.18 ) }
    dend_34 { pt3dadd( 138.779, 146.263, 34.7238, 1.03 ) }
    dend_34 { pt3dadd( 139.898, 148.075, 35.53, 1.03 ) }
    dend_34 { pt3dadd( 140.502, 149.224, 36.0339, 1.03 ) }
    dend_34 { pt3dadd( 141.108, 150.711, 36.6847, 1.03 ) }
    dend_34 { pt3dadd( 141.592, 152.197, 37.2949, 0.74 ) }
    dend_34 { pt3dadd( 141.949, 153.713, 37.9274, 0.59 ) }
    dend_34 { pt3dadd( 142.121, 155.129, 38.5528, 0.59 ) }
    dend_34 { pt3dadd( 142.206, 156.095, 38.9571, 0.59 ) }
    dend_34 { pt3dadd( 142.421, 157.493, 39.5931, 0.59 ) }
    dend_34 { pt3dadd( 154.551, 165.378, 42.9405, 0.59 ) }
    dend_34 { pt3dadd( 167.342, 172.615, 45.068, 0.59 ) }
    dend_34 { pt3dadd( 180.815, 178.182, 47.8976, 0.59 ) }
    dend_34 { pt3dadd( 194.336, 184.229, 48.9619, 0.59 ) }
    dend_34 { pt3dadd( 207.849, 188.922, 52.9482, 0.59 ) }
    dend_34 { pt3dadd( 221.253, 191.866, 58.6218, 0.59 ) }
    dend_34 { pt3dadd( 234.135, 197.162, 63.7723, 0.59 ) }
    dend_34 { pt3dadd( 247.567, 203.251, 65.5061, 0.59 ) }
    dend_34 { pt3dadd( 260.809, 209.15, 68.7263, 0.59 ) }
    dend_34 { pt3dadd( 274.112, 213.965, 73.2399, 0.59 ) }
    dend_34 { pt3dadd( 286.818, 219.697, 78.3598, 0.59 ) }
    dend_34 { pt3dadd( 299.803, 224.726, 83.5193, 0.59 ) }
    dend_34 { pt3dadd( 312.99, 230.514, 87.1391, 0.59 ) }
    dend_34 { pt3dadd( 325.69, 236.922, 91.4003, 0.59 ) }
    dend_34 { pt3dadd( 339.049, 241.481, 96.014, 0.59 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 61/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 10.7771, 47.534, 9.22611, 0.44 ) }
    dend_33 { pt3dadd( 10.9613, 48.523, 9.93317, 0.44 ) }
    dend_33 { pt3dadd( 11.184, 49.3623, 10.6776, 0.44 ) }
    dend_33 { pt3dadd( 11.3375, 49.78, 11.1606, 0.37 ) }
    dend_33 { pt3dadd( 11.6023, 50.3695, 11.9964, 0.37 ) }
    dend_33 { pt3dadd( 11.7828, 50.6892, 12.5705, 0.44 ) }
    dend_33 { pt3dadd( 11.9246, 50.9037, 13.0392, 0.74 ) }
    dend_33 { pt3dadd( 12.1339, 51.088, 13.7021, 0.74 ) }
    dend_33 { pt3dadd( 12.3913, 51.2271, 14.5777, 0.74 ) }
    dend_33 { pt3dadd( 12.5184, 51.291, 15.0092, 0.74 ) }
    dend_33 { pt3dadd( 12.7754, 51.436, 15.9238, 0.74 ) }
    dend_33 { pt3dadd( 12.9734, 51.6133, 16.6949, 0.74 ) }
    dend_33 { pt3dadd( 13.0515, 51.731, 17.1201, 0.74 ) }
    dend_33 { pt3dadd( 13.1184, 51.9916, 17.8761, 0.74 ) }
    dend_33 { pt3dadd( 13.1094, 52.399, 18.795, 0.96 ) }
    dend_33 { pt3dadd( 13.0583, 52.7113, 19.3804, 0.96 ) }
    dend_33 { pt3dadd( 12.8869, 53.3532, 20.4234, 0.66 ) }
    dend_33 { pt3dadd( 12.7578, 53.8563, 21.1521, 0.52 ) }
    dend_33 { pt3dadd( 12.7058, 54.1469, 21.5871, 0.52 ) }
    dend_33 { pt3dadd( 12.6714, 54.4731, 22.1104, 0.66 ) }
    dend_33 { pt3dadd( 12.6672, 54.8902, 22.8634, 0.66 ) }
    dend_33 { pt3dadd( 12.7036, 55.0396, 23.1475, 0.66 ) }
    dend_33 { pt3dadd( 12.9124, 55.3979, 23.8286, 0.66 ) }
    dend_33 { pt3dadd( 13.3995, 55.9967, 24.9835, 0.66 ) }
    dend_33 { pt3dadd( 13.6753, 56.3067, 25.5699, 0.66 ) }
    dend_33 { pt3dadd( 13.9539, 56.6171, 26.1581, 0.81 ) }
    dend_33 { pt3dadd( 14.3585, 57.0797, 27.025, 0.81 ) }
    dend_33 { pt3dadd( 14.7384, 57.5743, 27.9334, 0.66 ) }
    dend_33 { pt3dadd( 15.1061, 58.1519, 28.9668, 0.66 ) }
    dend_33 { pt3dadd( 15.3131, 58.5604, 29.6549, 0.66 ) }
    dend_33 { pt3dadd( 15.4108, 58.7782, 30.012, 0.66 ) }
    dend_33 { pt3dadd( 15.4722, 58.9353, 30.2695, 0.66 ) }
    dend_33 { pt3dadd( 15.629, 59.4433, 31.1034, 0.66 ) }
    dend_33 { pt3dadd( 15.6903, 59.6462, 31.4607, 0.66 ) }
    dend_33 { pt3dadd( 15.8804, 60.046, 32.1233, 0.66 ) }
    dend_33 { pt3dadd( 16.2911, 60.6291, 32.9606, 0.66 ) }
    dend_33 { pt3dadd( 16.459, 60.8419, 33.2062, 0.66 ) }
    dend_33 { pt3dadd( 16.7493, 61.1777, 33.5196, 0.66 ) }
    dend_33 { pt3dadd( 17.3272, 61.7759, 33.9826, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_33 { pt3dadd( 17.9519, 62.4067, 34.4273, 0.52 ) }
    dend_33 { pt3dadd( 18.5992, 63.0748, 34.8243, 0.52 ) }
    dend_33 { pt3dadd( 19.0784, 63.585, 35.0932, 0.44 ) }
    dend_33 { pt3dadd( 19.6363, 64.1961, 35.3668, 0.44 ) }
    dend_33 { pt3dadd( 19.9233, 64.5226, 35.4764, 0.44 ) }
    dend_33 { pt3dadd( 22.8639, 68.3028, 41.3409, 0.44 ) }
    dend_33 { pt3dadd( 26.4497, 70.6919, 47.567, 0.44 ) }
    dend_33 { pt3dadd( 30.5987, 73.1355, 53.4103, 0.44 ) }
    dend_33 { pt3dadd( 34.3756, 75.0809, 59.6778, 0.44 ) }
    dend_33 { pt3dadd( 39.294, 76.1445, 65.3353, 0.44 ) }
    dend_33 { pt3dadd( 44.4444, 76.2051, 70.8851, 0.44 ) }
    dend_33 { pt3dadd( 50.3193, 74.5762, 75.3753, 0.44 ) }
    dend_33 { pt3dadd( 55.5887, 72.2824, 80.3051, 0.44 ) }
    dend_33 { pt3dadd( 59.9678, 69.5223, 85.8309, 0.44 ) }
    dend_33 { pt3dadd( 64.155, 66.6783, 91.462, 0.44 ) }
    dend_33 { pt3dadd( 67.3783, 62.8705, 97.1577, 0.44 ) }
    dend_33 { pt3dadd( 71.6242, 59.9361, 102.697, 0.44 ) }
    dend_33 { pt3dadd( 75.3947, 57.7486, 108.888, 0.44 ) }
    dend_33 { pt3dadd( 80.1863, 56.8751, 114.685, 0.44 ) }
    dend_33 { pt3dadd( 85.0961, 57.3246, 120.432, 0.44 ) }
    dend_33 { pt3dadd( 90.2505, 58.4777, 125.857, 0.44 ) }
    dend_33 { pt3dadd( 94.9397, 60.6388, 131.395, 0.44 ) }
    dend_33 { pt3dadd( 100.074, 62.772, 136.536, 0.44 ) }
    dend_33 { pt3dadd( 105.704, 65.7457, 140.633, 0.44 ) }
    dend_33 { pt3dadd( 111.219, 67.658, 145.456, 0.44 ) }
    dend_33 { pt3dadd( 117.232, 69.901, 149.474, 0.44 ) }
    dend_33 { pt3dadd( 123.206, 72.4456, 153.367, 0.44 ) }
    dend_33 { pt3dadd( 129.334, 73.5028, 157.687, 0.44 ) }
    dend_33 { pt3dadd( 136.241, 74.6276, 160.578, 0.44 ) }
    dend_33 { pt3dadd( 142.904, 74.37, 164.167, 0.44 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 30/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -0.952803, 54.0941, 22.3977, 0.74 ) }
    dend_31 { pt3dadd( -0.35985, 54.8372, 22.6642, 0.74 ) }
    dend_31 { pt3dadd( 0.656888, 56.1873, 23.152, 0.74 ) }
    dend_31 { pt3dadd( 1.5008, 57.3427, 23.5231, 0.96 ) }
    dend_31 { pt3dadd( 2.03177, 58.0493, 23.7163, 0.96 ) }
    dend_31 { pt3dadd( 2.43091, 58.5597, 23.8383, 0.96 ) }
    dend_31 { pt3dadd( 3.12407, 59.3874, 24.0054, 0.59 ) }
    dend_31 { pt3dadd( 3.48581, 59.7808, 24.0637, 0.59 ) }
    dend_31 { pt3dadd( 3.93264, 60.1824, 24.0623, 0.37 ) }
    dend_31 { pt3dadd( 4.56167, 60.7408, 23.9907, 0.37 ) }
    dend_31 { pt3dadd( 4.81214, 60.9835, 23.9534, 0.37 ) }
    dend_31 { pt3dadd( 5.33927, 61.5507, 23.875, 0.37 ) }
    dend_31 { pt3dadd( 5.9096, 62.2554, 23.8305, 0.37 ) }
    dend_31 { pt3dadd( 6.36176, 62.9203, 23.8258, 0.37 ) }
    dend_31 { pt3dadd( 6.88361, 63.6653, 23.8873, 0.37 ) }
    dend_31 { pt3dadd( 7.47575, 64.516, 23.9853, 0.37 ) }
    dend_31 { pt3dadd( 7.77788, 64.9635, 24.054, 0.37 ) }
    dend_31 { pt3dadd( 8.30578, 65.86, 24.2174, 0.52 ) }
    dend_31 { pt3dadd( 9.09901, 67.4222, 24.5162, 0.66 ) }
    dend_31 { pt3dadd( 9.77174, 68.9815, 24.7844, 0.66 ) }
    dend_31 { pt3dadd( 10.1386, 69.9626, 24.9317, 0.66 ) }
    dend_31 { pt3dadd( 10.5365, 71.1895, 25.0791, 0.52 ) }
    dend_31 { pt3dadd( 10.9752, 72.8446, 25.2978, 0.74 ) }
    dend_31 { pt3dadd( 11.2177, 73.993, 25.4627, 0.74 ) }
    dend_31 { pt3dadd( 11.6544, 76.3178, 25.8253, 0.74 ) }
    dend_31 { pt3dadd( 11.9555, 77.9094, 26.0715, 0.88 ) }
    dend_31 { pt3dadd( 12.6815, 81.0726, 26.7083, 0.88 ) }
    dend_31 { pt3dadd( 13.0747, 82.4216, 27.0638, 0.88 ) }
    dend_31 { pt3dadd( 13.3022, 83.0288, 27.2717, 0.81 ) }
    dend_31 { pt3dadd( 13.7679, 84.0704, 27.7139, 0.81 ) }
    dend_31 { pt3dadd( 14.4096, 85.3872, 28.3396, 0.81 ) }
    dend_31 { pt3dadd( 15.1689, 86.9762, 29.0911, 0.81 ) }
    dend_31 { pt3dadd( 15.6892, 88.1138, 29.605, 0.81 ) }
    dend_31 { pt3dadd( 16.1869, 89.2465, 30.0613, 0.44 ) }
    dend_31 { pt3dadd( 16.5267, 90.1272, 30.3921, 0.44 ) }
    dend_31 { pt3dadd( 16.9988, 91.5769, 30.9032, 0.44 ) }
    dend_31 { pt3dadd( 17.3089, 92.6012, 31.2336, 0.44 ) }
    dend_31 { pt3dadd( 17.8531, 94.4528, 31.7322, 0.44 ) }
    dend_31 { pt3dadd( 18.407, 96.4585, 32.265, 0.44 ) }
    dend_31 { pt3dadd( 18.6034, 97.2177, 32.4896, 0.44 ) }
    dend_31 { pt3dadd( 18.894, 98.3489, 32.8549, 0.44 ) }
    dend_31 { pt3dadd( 19.0807, 99.0178, 33.1107, 0.44 ) }
    dend_31 { pt3dadd( 19.2217, 99.4205, 33.2589, 0.44 ) }
    dend_31 { pt3dadd( 19.4752, 100.078, 33.4694, 0.44 ) }
    dend_31 { pt3dadd( 19.685, 100.596, 33.6115, 0.44 ) }
    dend_31 { pt3dadd( 20.0739, 101.459, 33.8559, 0.44 ) }
    dend_31 { pt3dadd( 20.5777, 102.478, 34.1512, 0.44 ) }
    dend_31 { pt3dadd( 21.8152, 104.787, 34.8895, 0.44 ) }
    dend_31 { pt3dadd( 21.9604, 105.026, 34.9726, 0.44 ) }
    dend_31 { pt3dadd( 26.0791, 112.943, 38.0804, 0.44 ) }
    dend_31 { pt3dadd( 29.2322, 121.6, 40.1818, 0.44 ) }
    dend_31 { pt3dadd( 32.1713, 129.764, 43.9252, 0.44 ) }
    dend_31 { pt3dadd( 35.1582, 137.689, 48.1181, 0.44 ) }
    dend_31 { pt3dadd( 37.6713, 145.343, 53.0584, 0.44 ) }
    dend_31 { pt3dadd( 39.4814, 153.357, 57.7282, 0.44 ) }
    dend_31 { pt3dadd( 41.9251, 161.491, 61.8724, 0.44 ) }
    dend_31 { pt3dadd( 43.0387, 168.973, 67.5366, 0.44 ) }
    dend_31 { pt3dadd( 43.3808, 176.182, 73.6377, 0.44 ) }
    dend_31 { pt3dadd( 42.6179, 183.574, 79.4757, 0.44 ) }
    dend_31 { pt3dadd( 40.7606, 190.972, 85.0551, 0.44 ) }
    dend_31 { pt3dadd( 38.1721, 198.116, 90.6729, 0.44 ) }
    dend_31 { pt3dadd( 36.1542, 206.236, 95.0672, 0.44 ) }
    dend_31 { pt3dadd( 32.2967, 214.369, 97.9432, 0.44 ) }
    dend_31 { pt3dadd( 29.4488, 223.192, 99.7724, 0.44 ) }
    dend_31 { pt3dadd( 27.7352, 232.485, 99.6256, 0.44 ) }
    dend_31 { pt3dadd( 27.6442, 241.82, 98.1573, 0.44 ) }
    dend_31 { pt3dadd( 28.8937, 250.578, 94.836, 0.44 ) }
    dend_31 { pt3dadd( 29.5677, 259.795, 92.86, 0.44 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 98/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -0.952803, 54.0941, 22.3977, 1.47 ) }
    dend_30 { pt3dadd( -1.93847, 56.2326, 24.676, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_30 { pt3dadd( -2.34147, 57.2065, 25.8044, 1.03 ) }
    dend_30 { pt3dadd( -2.52769, 57.9015, 26.645, 0.59 ) }
    dend_30 { pt3dadd( -2.57318, 58.1727, 26.959, 0.59 ) }
    dend_30 { pt3dadd( -2.67219, 58.9211, 27.7977, 0.81 ) }
    dend_30 { pt3dadd( -2.79071, 59.7295, 28.6636, 0.81 ) }
    dend_30 { pt3dadd( -2.92725, 60.4253, 29.3473, 0.96 ) }
    dend_30 { pt3dadd( -3.14946, 61.5755, 30.2968, 0.96 ) }
    dend_30 { pt3dadd( -3.30557, 62.296, 30.8317, 0.59 ) }
    dend_30 { pt3dadd( -3.66859, 63.6656, 31.7293, 0.59 ) }
    dend_30 { pt3dadd( -3.96043, 64.5494, 32.2367, 0.74 ) }
    dend_30 { pt3dadd( -4.44915, 65.7312, 32.8599, 0.96 ) }
    dend_30 { pt3dadd( -5.327, 67.5363, 33.7383, 1.11 ) }
    dend_30 { pt3dadd( -6.04254, 68.8805, 34.3955, 1.11 ) }
    dend_30 { pt3dadd( -6.38678, 69.4862, 34.7218, 1.11 ) }
    dend_30 { pt3dadd( -6.95836, 70.4534, 35.2677, 0.66 ) }
    dend_30 { pt3dadd( -7.3508, 71.1108, 35.6572, 0.66 ) }
    dend_30 { pt3dadd( -7.81607, 71.8656, 36.1392, 0.66 ) }
    dend_30 { pt3dadd( -8.55466, 72.8966, 36.8517, 0.66 ) }
    dend_30 { pt3dadd( -9.31924, 73.95, 37.5583, 0.66 ) }
    dend_30 { pt3dadd( -9.86984, 74.7006, 38.0769, 0.44 ) }
    dend_30 { pt3dadd( -10.6455, 75.7288, 38.7972, 0.29 ) }
    dend_30 { pt3dadd( -11.7092, 77.096, 39.7688, 0.37 ) }
    dend_30 { pt3dadd( -12.7388, 78.347, 40.6573, 0.22 ) }
    dend_30 { pt3dadd( -18.66, 84.3777, 47.0805, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 24/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 58.8816, 38.664, -2.53903, 0.66 ) }
    dend_17 { pt3dadd( 60.4174, 39.0627, -2.01148, 0.66 ) }
    dend_17 { pt3dadd( 63.2422, 39.62, -0.965909, 0.66 ) }
    dend_17 { pt3dadd( 65.6082, 39.9372, -0.204316, 0.66 ) }
    dend_17 { pt3dadd( 68.4327, 40.2236, 0.541245, 0.88 ) }
    dend_17 { pt3dadd( 69.6458, 40.32, 0.803717, 0.88 ) }
    dend_17 { pt3dadd( 72.415, 40.514, 1.30557, 1.11 ) }
    dend_17 { pt3dadd( 74.3875, 40.6231, 1.58298, 1.11 ) }
    dend_17 { pt3dadd( 78.2366, 40.7227, 2.07556, 1.11 ) }
    dend_17 { pt3dadd( 80.8559, 40.7248, 2.275, 0.74 ) }
    dend_17 { pt3dadd( 82.7295, 40.6975, 2.31029, 0.74 ) }
    dend_17 { pt3dadd( 84.9151, 40.693, 2.24863, 0.74 ) }
    dend_17 { pt3dadd( 87.4398, 40.7833, 1.99073, 0.74 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 37/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 58.8816, 38.664, -2.53903, 0.29 ) }
    dend_16 { pt3dadd( 58.9875, 40.4119, -1.71262, 0.29 ) }
    dend_16 { pt3dadd( 58.9033, 42.2643, -1.02698, 0.29 ) }
    dend_16 { pt3dadd( 58.2561, 46.5583, 0.274643, 0.29 ) }
    dend_16 { pt3dadd( 58.0458, 47.9529, 0.697396, 0.29 ) }
    dend_16 { pt3dadd( 57.7499, 49.9159, 1.29243, 0.29 ) }
    dend_16 { pt3dadd( 57.6811, 50.3727, 1.43089, 0.29 ) }
    dend_16 { pt3dadd( 57.0141, 52.9994, 2.15179, 0.29 ) }
    dend_16 { pt3dadd( 56.5733, 54.0754, 2.15359, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 46/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 41.9086, 39.8305, -16.9536, 0.66 ) }
    dend_14 { pt3dadd( 42.7935, 40.8057, -17.3091, 0.66 ) }
    dend_14 { pt3dadd( 44.6435, 42.8915, -17.9908, 0.66 ) }
    dend_14 { pt3dadd( 46.3399, 44.8097, -18.5103, 0.81 ) }
    dend_14 { pt3dadd( 47.7678, 46.5318, -18.8698, 0.59 ) }
    dend_14 { pt3dadd( 48.5948, 47.5628, -19.0396, 0.59 ) }
    dend_14 { pt3dadd( 49.3292, 48.5067, -19.1623, 0.37 ) }
    dend_14 { pt3dadd( 50.1628, 49.6986, -19.2467, 0.37 ) }
    dend_14 { pt3dadd( 51.3655, 51.5365, -19.2373, 0.37 ) }
    dend_14 { pt3dadd( 52.6672, 53.3998, -19.1366, 0.37 ) }
    dend_14 { pt3dadd( 53.5841, 54.629, -19.0363, 0.37 ) }
    dend_14 { pt3dadd( 54.5289, 55.7978, -18.9251, 0.37 ) }
    dend_14 { pt3dadd( 55.4814, 56.9211, -18.8658, 0.37 ) }
    dend_14 { pt3dadd( 56.2961, 57.8724, -18.8667, 0.37 ) }
    dend_14 { pt3dadd( 58.2357, 60.0974, -18.9965, 0.37 ) }
    dend_14 { pt3dadd( 59.1433, 61.1075, -19.1105, 0.37 ) }
    dend_14 { pt3dadd( 61.31, 63.5297, -19.4895, 0.37 ) }
    dend_14 { pt3dadd( 62.9161, 65.3105, -19.8591, 0.37 ) }
    dend_14 { pt3dadd( 63.7079, 66.1823, -20.0879, 0.22 ) }
    dend_14 { pt3dadd( 64.7368, 67.3617, -20.4414, 0.22 ) }
    dend_14 { pt3dadd( 65.2261, 67.9588, -20.6469, 0.22 ) }
    dend_14 { pt3dadd( 66.0252, 68.9494, -21.0125, 0.22 ) }
    dend_14 { pt3dadd( 66.8036, 69.937, -21.3507, 0.22 ) }
    dend_14 { pt3dadd( 67.8729, 71.2367, -21.7226, 0.22 ) }
    dend_14 { pt3dadd( 69.0837, 72.6519, -22.1055, 0.22 ) }
    dend_14 { pt3dadd( 69.4965, 73.124, -22.1973, 0.22 ) }
    dend_14 { pt3dadd( 70.074, 73.7832, -22.2692, 0.22 ) }
    dend_14 { pt3dadd( 71.5598, 75.4881, -22.3257, 0.29 ) }
    dend_14 { pt3dadd( 72.5933, 76.6553, -22.2743, 0.29 ) }
    dend_14 { pt3dadd( 73.6502, 77.807, -22.1893, 0.29 ) }
    dend_14 { pt3dadd( 75.0863, 79.2524, -22.0766, 0.29 ) }
    dend_14 { pt3dadd( 76.3728, 80.472, -21.9707, 0.07 ) }
    dend_14 { pt3dadd( 77.1469, 81.1744, -21.8574, 0.07 ) }
    dend_14 { pt3dadd( 78.149, 82.0784, -21.6332, 0.07 ) }
    dend_14 { pt3dadd( 79.3492, 83.115, -21.3275, 0.07 ) }
    dend_14 { pt3dadd( 81.6093, 84.9875, -20.8031, 0.07 ) }
    dend_14 { pt3dadd( 83.7876, 86.759, -20.3872, 0.07 ) }
    dend_14 { pt3dadd( 86.6396, 89.0953, -19.9019, 0.07 ) }
    dend_14 { pt3dadd( 88.9469, 91.0639, -19.5458, 0.07 ) }
    dend_14 { pt3dadd( 90.1337, 92.1541, -19.3799, 0.07 ) }
    dend_14 { pt3dadd( 91.1652, 93.2241, -19.2589, 0.07 ) }
    dend_14 { pt3dadd( 92.4758, 94.823, -19.1999, 0.07 ) }
    dend_14 { pt3dadd( 94.1693, 97.2696, -19.1388, 0.07 ) }
    dend_14 { pt3dadd( 94.9856, 98.6421, -19.1081, 0.07 ) }
    dend_14 { pt3dadd( 95.8373, 100.159, -18.9726, 0.07 ) }
    dend_14 { pt3dadd( 97.068, 102.433, -18.4713, 0.07 ) }
    dend_14 { pt3dadd( 98.0505, 104.173, -17.8412, 0.07 ) }
    dend_14 { pt3dadd( 99.8156, 107.07, -16.4204, 0.07 ) }
    dend_14 { pt3dadd( 100.617, 108.321, -15.6654, 0.07 ) }
    dend_14 { pt3dadd( 102.317, 110.777, -13.9527, 0.07 ) }
    dend_14 { pt3dadd( 103.896, 112.822, -12.2211, 0.07 ) }
    dend_14 { pt3dadd( 105.207, 114.352, -10.7529, 0.07 ) }
    dend_14 { pt3dadd( 106.362, 115.668, -9.44144, 0.07 ) }
    dend_14 { pt3dadd( 107.387, 116.872, -8.28251, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_14 { pt3dadd( 108.086, 117.776, -7.46667, 0.07 ) }
    dend_14 { pt3dadd( 110.582, 121.285, -4.47065, 0.22 ) }
    dend_14 { pt3dadd( 111.788, 123.081, -3.07232, 0.22 ) }
    dend_14 { pt3dadd( 113.001, 124.989, -1.68552, 0.22 ) }
    dend_14 { pt3dadd( 113.838, 126.383, -0.729729, 0.22 ) }
    dend_14 { pt3dadd( 115.177, 128.752, 0.818979, 0.22 ) }
    dend_14 { pt3dadd( 116.192, 130.717, 2.0153, 0.22 ) }
    dend_14 { pt3dadd( 117.058, 132.553, 3.04906, 0.22 ) }
    dend_14 { pt3dadd( 118.45, 135.671, 4.80679, 0.22 ) }
    dend_14 { pt3dadd( 119.243, 137.422, 5.7878, 0.22 ) }
    dend_14 { pt3dadd( 120.125, 139.291, 6.8318, 0.22 ) }
    dend_14 { pt3dadd( 120.825, 140.818, 7.66887, 0.22 ) }
    dend_14 { pt3dadd( 121.36, 142.14, 8.31862, 0.22 ) }
    dend_14 { pt3dadd( 121.928, 143.527, 8.97834, 0.22 ) }
    dend_14 { pt3dadd( 122.538, 145.092, 9.56722, 0.22 ) }
    dend_14 { pt3dadd( 123.284, 147.004, 10.1026, 0.22 ) }
    dend_14 { pt3dadd( 123.825, 148.448, 10.3528, 0.22 ) }
    dend_14 { pt3dadd( 124.549, 150.51, 10.5381, 0.22 ) }
    dend_14 { pt3dadd( 125.414, 152.893, 10.5915, 0.22 ) }
    dend_14 { pt3dadd( 126.644, 156.002, 10.4744, 0.22 ) }
    dend_14 { pt3dadd( 127.19, 157.305, 10.3671, 0.22 ) }
    dend_14 { pt3dadd( 127.724, 158.514, 10.2313, 0.22 ) }
    dend_14 { pt3dadd( 129.195, 161.662, 9.8405, 0.22 ) }
    dend_14 { pt3dadd( 129.742, 162.788, 9.69722, 0.22 ) }
    dend_14 { pt3dadd( 130.789, 164.926, 9.44496, 0.22 ) }
    dend_14 { pt3dadd( 132.31, 167.721, 9.30147, 0.22 ) }
    dend_14 { pt3dadd( 132.932, 168.847, 9.29121, 0.22 ) }
    dend_14 { pt3dadd( 133.758, 170.287, 9.34284, 0.22 ) }
    dend_14 { pt3dadd( 134.261, 171.096, 9.41014, 0.22 ) }
    dend_14 { pt3dadd( 135.32, 172.687, 9.63507, 0.22 ) }
    dend_14 { pt3dadd( 136.759, 174.674, 10.0285, 0.22 ) }
    dend_14 { pt3dadd( 137.96, 176.188, 10.362, 0.22 ) }
    dend_14 { pt3dadd( 139.302, 177.744, 10.717, 0.22 ) }
    dend_14 { pt3dadd( 140.802, 179.292, 11.0822, 0.22 ) }
    dend_14 { pt3dadd( 141.773, 180.251, 11.2781, 0.22 ) }
    dend_14 { pt3dadd( 143.435, 181.864, 11.547, 0.22 ) }
    dend_14 { pt3dadd( 144.229, 182.577, 11.6254, 0.22 ) }
    dend_14 { pt3dadd( 145.768, 183.86, 11.6856, 0.22 ) }
    dend_14 { pt3dadd( 146.794, 184.664, 11.6796, 0.22 ) }
    dend_14 { pt3dadd( 148.826, 186.014, 11.6537, 0.22 ) }
    dend_14 { pt3dadd( 151.022, 187.194, 11.7012, 0.22 ) }
    dend_14 { pt3dadd( 152.869, 188.008, 11.8075, 0.22 ) }
    dend_14 { pt3dadd( 154.301, 188.563, 11.9641, 0.22 ) }
    dend_14 { pt3dadd( 155.744, 189.048, 12.1889, 0.22 ) }
    dend_14 { pt3dadd( 158.638, 189.884, 12.8043, 0.22 ) }
    dend_14 { pt3dadd( 161.466, 190.528, 13.4906, 0.22 ) }
    dend_14 { pt3dadd( 162.984, 190.818, 13.8938, 0.22 ) }
    dend_14 { pt3dadd( 164.372, 191.109, 14.328, 0.22 ) }
    dend_14 { pt3dadd( 165.603, 191.373, 14.7807, 0.22 ) }
    dend_14 { pt3dadd( 167.703, 191.896, 15.6686, 0.22 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 50/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 41.9086, 39.8305, -16.9536, 0.44 ) }
    dend_11 { pt3dadd( 41.371, 40.7985, -15.2553, 0.44 ) }
    dend_11 { pt3dadd( 40.7745, 41.9809, -13.2137, 0.44 ) }
    dend_11 { pt3dadd( 40.0096, 43.7177, -10.0663, 0.44 ) }
    dend_11 { pt3dadd( 39.7006, 44.391, -8.80331, 0.44 ) }
    dend_11 { pt3dadd( 39.14, 45.5048, -6.70894, 0.44 ) }
    dend_11 { pt3dadd( 38.8369, 46.058, -5.6555, 0.44 ) }
    dend_11 { pt3dadd( 38.5428, 46.5113, -4.72144, 0.44 ) }
    dend_11 { pt3dadd( 37.6092, 47.8442, -1.93324, 0.44 ) }
    dend_11 { pt3dadd( 36.3205, 49.4492, 1.62594, 0.07 ) }
    dend_11 { pt3dadd( 35.9025, 49.859, 2.68716, 0.07 ) }
    dend_11 { pt3dadd( 35.4321, 50.1968, 3.7599, 0.07 ) }
    dend_11 { pt3dadd( 34.7314, 50.5661, 5.132, 0.07 ) }
    dend_11 { pt3dadd( 34.0443, 50.8425, 6.33165, 0.07 ) }
    dend_11 { pt3dadd( 32.8162, 51.2466, 8.27599, 0.07 ) }
    dend_11 { pt3dadd( 31.8461, 51.5439, 9.79757, 0.07 ) }
    dend_11 { pt3dadd( 31.031, 51.8714, 11.0903, 0.07 ) }
    dend_11 { pt3dadd( 29.3154, 52.8638, 13.6049, 0.07 ) }
    dend_11 { pt3dadd( 28.3075, 53.5968, 14.9842, 0.07 ) }
    dend_11 { pt3dadd( 26.9077, 54.827, 16.7778, 0.07 ) }
    dend_11 { pt3dadd( 25.8979, 55.8588, 17.9228, 0.07 ) }
    dend_11 { pt3dadd( 24.5518, 57.3931, 19.4257, 0.07 ) }
    dend_11 { pt3dadd( 22.3544, 60.0304, 21.8414, 0.07 ) }
    dend_11 { pt3dadd( 21.7596, 60.762, 22.4884, 0.07 ) }
    dend_11 { pt3dadd( 20.9408, 61.764, 23.3771, 0.07 ) }
    dend_11 { pt3dadd( 19.2002, 63.7391, 25.0581, 0.07 ) }
    dend_11 { pt3dadd( 17.5663, 65.5216, 26.6175, 0.07 ) }
    dend_11 { pt3dadd( 16.3231, 66.7514, 27.8182, 0.07 ) }
    dend_11 { pt3dadd( 14.7103, 68.2012, 29.4689, 0.07 ) }
    dend_11 { pt3dadd( 13.4194, 69.3059, 30.7848, 0.07 ) }
    dend_11 { pt3dadd( 11.4786, 70.8573, 32.7627, 0.07 ) }
    dend_11 { pt3dadd( 8.33149, 76.6386, 41.3293, 0.07 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 82/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -51.1196, 39.4119, -33.117, 0.07 ) }
    dend_5 { pt3dadd( -52.0665, 39.7258, -35.0419, 0.07 ) }
    dend_5 { pt3dadd( -52.7561, 39.9041, -36.4097, 0.29 ) }
    dend_5 { pt3dadd( -53.4581, 40.0442, -37.7315, 0.29 ) }
    dend_5 { pt3dadd( -54.3942, 40.1821, -39.4312, 0.29 ) }
    dend_5 { pt3dadd( -55.113, 40.2319, -40.7198, 0.29 ) }
    dend_5 { pt3dadd( -55.7923, 40.2285, -41.9062, 0.29 ) }
    dend_5 { pt3dadd( -56.9722, 40.0946, -43.7866, 0.29 ) }
    dend_5 { pt3dadd( -57.5397, 39.9783, -44.6101, 0.29 ) }
    dend_5 { pt3dadd( -58.0809, 39.8393, -45.2739, 0.29 ) }
    dend_5 { pt3dadd( -58.7355, 39.664, -46.0332, 0.29 ) }
    dend_5 { pt3dadd( -59.7063, 39.4241, -47.0705, 0.29 ) }
    dend_5 { pt3dadd( -60.755, 39.1839, -48.0838, 0.29 ) }
    dend_5 { pt3dadd( -62.2509, 38.9269, -49.3936, 0.29 ) }
    dend_5 { pt3dadd( -64.1723, 38.7303, -51.0011, 0.29 ) }
    dend_5 { pt3dadd( -66.1279, 38.7239, -52.5263, 0.29 ) }
    dend_5 { pt3dadd( -67.3634, 38.8168, -53.442, 0.29 ) }
    dend_5 { pt3dadd( -68.1406, 38.9003, -54.0007, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_5 { pt3dadd( -69.3229, 39.0635, -54.8188, 0.29 ) }
    dend_5 { pt3dadd( -71.4004, 39.3715, -56.2423, 0.29 ) }
    dend_5 { pt3dadd( -74.4554, 39.8494, -58.2487, 0.07 ) }
    dend_5 { pt3dadd( -75.731, 40.0065, -59.0354, 0.07 ) }
    dend_5 { pt3dadd( -76.9262, 40.1303, -59.7873, 0.07 ) }
    dend_5 { pt3dadd( -78.3496, 40.2581, -60.7573, 0.07 ) }
    dend_5 { pt3dadd( -80.1593, 40.3583, -62.0391, 0.07 ) }
    dend_5 { pt3dadd( -81.4424, 40.4032, -62.984, 0.07 ) }
    dend_5 { pt3dadd( -83.3756, 40.4344, -64.5531, 0.15 ) }
    dend_5 { pt3dadd( -84.0426, 40.4565, -65.1688, 0.37 ) }
    dend_5 { pt3dadd( -85.897, 40.5423, -67.0288, 0.37 ) }
    dend_5 { pt3dadd( -87.1337, 40.5914, -68.4548, 0.37 ) }
    dend_5 { pt3dadd( -88.2312, 40.6551, -69.8702, 0.37 ) }
    dend_5 { pt3dadd( -89.6151, 40.737, -71.8125, 0.37 ) }
    dend_5 { pt3dadd( -91.3738, 40.8495, -74.4575, 0.37 ) }
    dend_5 { pt3dadd( -92.3645, 40.8892, -75.9745, 0.37 ) }
    dend_5 { pt3dadd( -93.6372, 40.9044, -78.0102, 0.37 ) }
    dend_5 { pt3dadd( -94.4527, 40.904, -79.4815, 0.22 ) }
    dend_5 { pt3dadd( -95.0322, 40.9175, -80.6235, 0.22 ) }
    dend_5 { pt3dadd( -95.4658, 40.9452, -81.5274, 0.22 ) }
    dend_5 { pt3dadd( -95.7902, 40.9765, -82.2154, 0.22 ) }
    dend_5 { pt3dadd( -96.3079, 41.0427, -83.3188, 0.22 ) }
    dend_5 { pt3dadd( -97.063, 41.1259, -84.8193, 0.22 ) }
    dend_5 { pt3dadd( -97.8089, 41.1896, -86.3166, 0.22 ) }
    dend_5 { pt3dadd( -98.2453, 41.2319, -87.2236, 0.22 ) }
    dend_5 { pt3dadd( -98.6221, 41.2705, -87.9823, 0.22 ) }
    dend_5 { pt3dadd( -99.0416, 41.3129, -88.7904, 0.22 ) }
    dend_5 { pt3dadd( -100.147, 41.4645, -90.9438, 0.22 ) }
    dend_5 { pt3dadd( -100.774, 41.5852, -92.268, 0.22 ) }
    dend_5 { pt3dadd( -101.571, 41.8172, -94.0612, 0.22 ) }
    dend_5 { pt3dadd( -102.126, 42.0658, -95.4115, 0.22 ) }
    dend_5 { pt3dadd( -102.587, 42.3293, -96.4692, 0.22 ) }
    dend_5 { pt3dadd( -103.584, 42.8893, -98.4397, 0.22 ) }
    dend_5 { pt3dadd( -104.277, 43.2205, -99.6555, 0.22 ) }
    dend_5 { pt3dadd( -105.067, 43.5182, -100.94, 0.22 ) }
    dend_5 { pt3dadd( -106.521, 43.909, -103.277, 0.22 ) }
    dend_5 { pt3dadd( -108.254, 44.2208, -106.159, 0.22 ) }
    dend_5 { pt3dadd( -109.243, 44.3115, -107.816, 0.22 ) }
    dend_5 { pt3dadd( -111.035, 44.3462, -110.826, 0.22 ) }
    dend_5 { pt3dadd( -111.813, 44.3319, -112.201, 0.22 ) }
    dend_5 { pt3dadd( -113.159, 44.2557, -114.85, 0.22 ) }
    dend_5 { pt3dadd( -113.756, 44.2104, -116.236, 0.22 ) }
    dend_5 { pt3dadd( -114.258, 44.1974, -117.771, 0.22 ) }
    dend_5 { pt3dadd( -114.641, 44.2957, -119.408, 0.22 ) }
    dend_5 { pt3dadd( -114.862, 44.4751, -120.786, 0.22 ) }
    dend_5 { pt3dadd( -114.966, 44.6555, -121.885, 0.22 ) }
    dend_5 { pt3dadd( -115.022, 44.9266, -123.453, 0.22 ) }
    dend_5 { pt3dadd( -115.012, 45.0429, -124.244, 0.22 ) }
    dend_5 { pt3dadd( -114.854, 45.2275, -126.396, 0.22 ) }
    dend_5 { pt3dadd( -114.662, 45.2106, -127.983, 0.22 ) }
    dend_5 { pt3dadd( -114.507, 45.1266, -128.973, 0.22 ) }
    dend_5 { pt3dadd( -114.329, 45.0108, -129.835, 0.22 ) }
    dend_5 { pt3dadd( -114.224, 44.9375, -130.243, 0.22 ) }
    dend_5 { pt3dadd( -113.683, 44.528, -132.153, 0.22 ) }
    dend_5 { pt3dadd( -113.19, 44.1249, -133.806, 0.22 ) }
    dend_5 { pt3dadd( -112.946, 43.9384, -134.577, 0.22 ) }
    dend_5 { pt3dadd( -112.708, 43.7637, -135.386, 0.22 ) }
    dend_5 { pt3dadd( -112.34, 43.4842, -136.808, 0.22 ) }
    dend_5 { pt3dadd( -112.263, 43.4202, -137.168, 0.22 ) }
    dend_5 { pt3dadd( -112.198, 43.3552, -137.627, 0.22 ) }
    dend_5 { pt3dadd( -112.156, 43.2521, -138.517, 0.22 ) }
    dend_5 { pt3dadd( -112.232, 43.107, -139.813, 0.22 ) }
    dend_5 { pt3dadd( -112.468, 42.936, -141.286, 0.22 ) }
    dend_5 { pt3dadd( -112.895, 42.7767, -142.832, 0.22 ) }
    dend_5 { pt3dadd( -113.686, 42.5413, -145.0, 0.22 ) }
    dend_5 { pt3dadd( -114.366, 42.3938, -146.411, 0.22 ) }
    dend_5 { pt3dadd( -115.321, 42.2808, -147.979, 0.22 ) }
    dend_5 { pt3dadd( -116.45, 42.2343, -149.5, 0.22 ) }
    dend_5 { pt3dadd( -117.798, 42.249, -151.037, 0.22 ) }
    dend_5 { pt3dadd( -118.589, 42.286, -151.857, 0.22 ) }
    dend_5 { pt3dadd( -119.822, 42.3886, -153.137, 0.22 ) }
    dend_5 { pt3dadd( -120.735, 42.5056, -154.241, 0.22 ) }
    dend_5 { pt3dadd( -121.451, 42.6277, -155.394, 0.22 ) }
    dend_5 { pt3dadd( -121.715, 42.6782, -155.971, 0.22 ) }
    dend_5 { pt3dadd( -122.239, 42.7153, -157.628, 0.22 ) }
    dend_5 { pt3dadd( -122.598, 42.6657, -159.059, 0.22 ) }
    dend_5 { pt3dadd( -122.833, 42.5639, -160.337, 0.22 ) }
    dend_5 { pt3dadd( -123.058, 42.3643, -161.845, 0.22 ) }
    dend_5 { pt3dadd( -123.206, 42.1775, -162.964, 0.22 ) }
    dend_5 { pt3dadd( -123.54, 41.7459, -165.158, 0.22 ) }
    dend_5 { pt3dadd( -123.754, 41.4971, -166.189, 0.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 81/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -51.1196, 39.4119, -33.117, 0.29 ) }
    dend_4 { pt3dadd( -50.9819, 40.1956, -33.2733, 0.29 ) }
    dend_4 { pt3dadd( -50.7797, 41.1088, -33.4787, 0.29 ) }
    dend_4 { pt3dadd( -50.6444, 41.5793, -33.5893, 0.22 ) }
    dend_4 { pt3dadd( -50.4771, 42.1272, -33.7458, 0.22 ) }
    dend_4 { pt3dadd( -50.0144, 43.4858, -34.1968, 0.22 ) }
    dend_4 { pt3dadd( -49.4689, 44.9628, -34.7429, 0.22 ) }
    dend_4 { pt3dadd( -49.1604, 45.6911, -35.0529, 0.22 ) }
    dend_4 { pt3dadd( -48.7733, 46.4805, -35.4416, 0.22 ) }
    dend_4 { pt3dadd( -48.2844, 47.3521, -35.9444, 0.22 ) }
    dend_4 { pt3dadd( -47.5446, 48.4192, -36.8028, 0.22 ) }
    dend_4 { pt3dadd( -47.225, 48.8078, -37.2111, 0.22 ) }
    dend_4 { pt3dadd( -46.8244, 49.233, -37.7262, 0.22 ) }
    dend_4 { pt3dadd( -46.3964, 49.6486, -38.3011, 0.22 ) }
    dend_4 { pt3dadd( -45.8356, 50.1566, -39.0525, 0.22 ) }
    dend_4 { pt3dadd( -44.3393, 51.4283, -40.9541, 0.22 ) }
    dend_4 { pt3dadd( -43.9091, 51.792, -41.5048, 0.22 ) }
    dend_4 { pt3dadd( -43.4472, 52.1831, -42.0982, 0.22 ) }
    dend_4 { pt3dadd( -42.7301, 52.7964, -43.0229, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_4 { pt3dadd( -42.219, 53.2402, -43.6892, 0.22 ) }
    dend_4 { pt3dadd( -41.6294, 53.7811, -44.4021, 0.22 ) }
    dend_4 { pt3dadd( -41.2719, 54.1335, -44.7404, 0.22 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 3/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -24.3942, -80.0524, -14.9707, 1.03 ) }
    dend_46 { pt3dadd( -24.7787, -82.5203, -15.1223, 1.03 ) }
    dend_46 { pt3dadd( -24.9485, -84.3277, -15.2563, 1.03 ) }
    dend_46 { pt3dadd( -25.0742, -86.7753, -15.446, 1.03 ) }
    dend_46 { pt3dadd( -25.2137, -90.1295, -15.7205, 1.03 ) }
    dend_46 { pt3dadd( -25.3097, -92.8763, -15.9496, 1.03 ) }
    dend_46 { pt3dadd( -25.4162, -96.3211, -16.2434, 1.03 ) }
    dend_46 { pt3dadd( -25.4262, -97.9354, -16.4029, 1.03 ) }
    dend_46 { pt3dadd( -25.4438, -99.5349, -16.5436, 1.03 ) }
    dend_46 { pt3dadd( -25.5045, -101.224, -16.6693, 1.03 ) }
    dend_46 { pt3dadd( -25.6279, -102.565, -16.7554, 1.03 ) }
    dend_46 { pt3dadd( -25.7779, -103.632, -16.8105, 1.03 ) }
    dend_46 { pt3dadd( -26.3026, -106.827, -16.9411, 1.25 ) }
    dend_46 { pt3dadd( -26.5901, -108.696, -17.0084, 1.25 ) }
    dend_46 { pt3dadd( -26.8959, -110.76, -17.0771, 1.25 ) }
    dend_46 { pt3dadd( -27.155, -112.665, -17.1314, 1.25 ) }
    dend_46 { pt3dadd( -27.45, -114.814, -17.1873, 1.25 ) }
    dend_46 { pt3dadd( -27.7573, -117.083, -17.1713, 0.81 ) }
    dend_46 { pt3dadd( -27.9019, -118.268, -17.152, 0.81 ) }
    dend_46 { pt3dadd( -28.1654, -120.492, -17.0961, 0.74 ) }
    dend_46 { pt3dadd( -28.2939, -121.421, -17.077, 0.74 ) }
    dend_46 { pt3dadd( -28.5239, -122.658, -17.0904, 1.18 ) }
    dend_46 { pt3dadd( -29.1599, -125.679, -17.2958, 1.18 ) }
    dend_46 { pt3dadd( -29.3979, -126.734, -17.409, 1.18 ) }
    dend_46 { pt3dadd( -29.6616, -127.935, -17.5849, 1.25 ) }
    dend_46 { pt3dadd( -30.1808, -130.671, -18.0785, 1.25 ) }
    dend_46 { pt3dadd( -30.853, -134.195, -18.9419, 1.25 ) }
    dend_46 { pt3dadd( -31.2919, -136.344, -19.6448, 1.25 ) }
    dend_46 { pt3dadd( -31.5741, -137.554, -20.1531, 0.74 ) }
    dend_46 { pt3dadd( -31.9811, -139.115, -20.8418, 0.74 ) }
    dend_46 { pt3dadd( -32.1628, -139.738, -21.1509, 0.74 ) }
    dend_46 { pt3dadd( -32.9124, -141.984, -22.4049, 0.74 ) }
    dend_46 { pt3dadd( -33.2749, -142.933, -22.9872, 0.74 ) }
    dend_46 { pt3dadd( -33.8951, -144.644, -23.9281, 0.52 ) }
    dend_46 { pt3dadd( -34.744, -147.724, -25.4752, 0.52 ) }
    dend_46 { pt3dadd( -34.8333, -148.13, -25.6372, 0.52 ) }
    dend_46 { pt3dadd( -34.9739, -148.826, -25.8454, 0.81 ) }
    dend_46 { pt3dadd( -35.1151, -149.748, -26.027, 1.18 ) }
    dend_46 { pt3dadd( -35.3769, -151.83, -26.3579, 1.18 ) }
    dend_46 { pt3dadd( -35.5594, -153.517, -26.6328, 1.18 ) }
    dend_46 { pt3dadd( -35.8222, -155.472, -26.9775, 0.96 ) }
    dend_46 { pt3dadd( -36.0726, -156.893, -27.2034, 0.96 ) }
    dend_46 { pt3dadd( -36.4746, -158.74, -27.4714, 0.96 ) }
    dend_46 { pt3dadd( -36.8104, -160.092, -27.6483, 0.96 ) }
    dend_46 { pt3dadd( -37.1907, -161.508, -27.7867, 1.4 ) }
    dend_46 { pt3dadd( -37.7923, -163.681, -27.9291, 1.4 ) }
    dend_46 { pt3dadd( -38.7088, -166.676, -28.111, 1.4 ) }
    dend_46 { pt3dadd( -39.2712, -168.298, -28.2033, 1.4 ) }
    dend_46 { pt3dadd( -39.9526, -170.099, -28.2944, 1.4 ) }
    dend_46 { pt3dadd( -40.852, -172.347, -28.3776, 1.4 ) }
    dend_46 { pt3dadd( -41.5509, -174.04, -28.3929, 1.62 ) }
    dend_46 { pt3dadd( -42.4479, -176.228, -28.3796, 1.62 ) }
    dend_46 { pt3dadd( -42.7036, -176.821, -28.3737, 1.62 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 56/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -24.3942, -80.0524, -14.9707, 0.66 ) }
    dend_43 { pt3dadd( -25.8081, -81.7158, -14.3513, 0.66 ) }
    dend_43 { pt3dadd( -26.6971, -82.7616, -13.9619, 0.37 ) }
    dend_43 { pt3dadd( -27.7565, -84.0079, -13.4978, 0.37 ) }
    dend_43 { pt3dadd( -28.5944, -84.9936, -13.1307, 0.37 ) }
    dend_43 { pt3dadd( -29.1572, -85.6557, -12.8841, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 62/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 87.4398, 40.7833, 1.99073, 0.37 ) }
    dend_23 { pt3dadd( 88.8979, 41.7758, 2.98606, 0.37 ) }
    dend_23 { pt3dadd( 90.0651, 42.4185, 3.65869, 0.37 ) }
    dend_23 { pt3dadd( 91.1441, 42.9537, 4.22722, 0.37 ) }
    dend_23 { pt3dadd( 92.6912, 43.6864, 4.96592, 0.37 ) }
    dend_23 { pt3dadd( 95.2413, 44.8589, 6.13822, 0.37 ) }
    dend_23 { pt3dadd( 96.5764, 45.4765, 6.72548, 0.37 ) }
    dend_23 { pt3dadd( 98.792, 46.3869, 7.56964, 0.37 ) }
    dend_23 { pt3dadd( 99.5315, 46.6716, 7.81248, 0.37 ) }
    dend_23 { pt3dadd( 100.718, 47.1104, 8.15991, 0.52 ) }
    dend_23 { pt3dadd( 102.483, 47.7544, 8.64387, 0.52 ) }
    dend_23 { pt3dadd( 103.515, 48.1295, 8.97221, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 74/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 87.4398, 40.7833, 1.99073, 0.74 ) }
    dend_18 { pt3dadd( 89.1343, 40.2157, 1.15985, 0.74 ) }
    dend_18 { pt3dadd( 90.9686, 39.58, 0.238869, 0.52 ) }
    dend_18 { pt3dadd( 91.8523, 39.2355, -0.215351, 0.52 ) }
    dend_18 { pt3dadd( 93.4952, 38.5306, -1.11885, 0.52 ) }
    dend_18 { pt3dadd( 94.9883, 37.8456, -1.99797, 0.52 ) }
    dend_18 { pt3dadd( 96.3568, 37.2262, -2.83369, 0.52 ) }
    dend_18 { pt3dadd( 97.0956, 36.8892, -3.36164, 0.52 ) }
    dend_18 { pt3dadd( 97.8377, 36.5411, -3.86719, 0.52 ) }
    dend_18 { pt3dadd( 98.9125, 36.0685, -4.64843, 0.52 ) }
    dend_18 { pt3dadd( 100.044, 35.6127, -5.51977, 0.52 ) }
    dend_18 { pt3dadd( 101.182, 35.1817, -6.45392, 0.52 ) }
    dend_18 { pt3dadd( 102.556, 34.6949, -7.54989, 0.52 ) }
    dend_18 { pt3dadd( 104.095, 34.2061, -8.75462, 0.22 ) }
    dend_18 { pt3dadd( 105.997, 33.5877, -10.1899, 0.22 ) }
    dend_18 { pt3dadd( 107.37, 33.0999, -11.173, 0.22 ) }
    dend_18 { pt3dadd( 109.116, 32.4058, -12.3845, 0.22 ) }
    dend_18 { pt3dadd( 110.447, 31.8042, -13.2726, 0.22 ) }
    dend_18 { pt3dadd( 111.294, 31.3777, -13.7529, 0.22 ) }
    dend_18 { pt3dadd( 112.611, 30.7002, -14.4569, 0.22 ) }
    dend_18 { pt3dadd( 113.509, 30.2227, -14.8638, 0.37 ) }
    dend_18 { pt3dadd( 114.021, 29.9414, -15.0712, 0.37 ) }
    dend_18 { pt3dadd( 115.407, 29.1745, -15.553, 0.37 ) }
    dend_18 { pt3dadd( 117.386, 28.0983, -16.1613, 0.37 ) }
    dend_18 { pt3dadd( 120.048, 26.7441, -16.816, 0.37 ) }
    dend_18 { pt3dadd( 121.662, 26.001, -17.1456, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_18 { pt3dadd( 122.473, 25.6504, -17.2719, 0.07 ) }
    dend_18 { pt3dadd( 124.167, 24.9456, -17.4739, 0.07 ) }
    dend_18 { pt3dadd( 126.367, 24.0601, -17.665, 0.07 ) }
    dend_18 { pt3dadd( 128.723, 23.1111, -17.8048, 0.07 ) }
    dend_18 { pt3dadd( 129.815, 22.6417, -17.7973, 0.29 ) }
    dend_18 { pt3dadd( 131.696, 21.782, -17.8242, 0.29 ) }
    dend_18 { pt3dadd( 132.724, 21.2921, -17.8658, 0.29 ) }
    dend_18 { pt3dadd( 133.764, 20.7518, -17.9862, 0.29 ) }
    dend_18 { pt3dadd( 134.934, 20.0504, -18.3145, 0.29 ) }
    dend_18 { pt3dadd( 136.153, 19.1999, -18.7927, 0.29 ) }
    dend_18 { pt3dadd( 137.601, 18.0353, -19.4601, 0.29 ) }
    dend_18 { pt3dadd( 138.473, 17.2625, -19.9071, 0.29 ) }
    dend_18 { pt3dadd( 139.98, 15.9093, -20.6783, 0.29 ) }
    dend_18 { pt3dadd( 141.917, 14.1792, -21.6784, 0.29 ) }
    dend_18 { pt3dadd( 142.972, 13.2841, -22.225, 0.37 ) }
    dend_18 { pt3dadd( 143.982, 12.466, -22.6921, 0.37 ) }
    dend_18 { pt3dadd( 144.597, 11.9822, -22.9033, 0.37 ) }
    dend_18 { pt3dadd( 145.278, 11.455, -23.1305, 0.37 ) }
    dend_18 { pt3dadd( 145.857, 11.0333, -23.2695, 0.37 ) }
    dend_18 { pt3dadd( 146.846, 10.3592, -23.4949, 0.37 ) }
    dend_18 { pt3dadd( 147.828, 9.75034, -23.7791, 0.37 ) }
    dend_18 { pt3dadd( 148.513, 9.37701, -23.9929, 0.37 ) }
    dend_18 { pt3dadd( 149.924, 8.63986, -24.4184, 0.37 ) }
    dend_18 { pt3dadd( 150.728, 8.21456, -24.6679, 0.37 ) }
    dend_18 { pt3dadd( 151.722, 7.67605, -24.9667, 0.37 ) }
    dend_18 { pt3dadd( 154.011, 6.35357, -25.6444, 0.37 ) }
    dend_18 { pt3dadd( 155.567, 5.37545, -26.1212, 0.37 ) }
    dend_18 { pt3dadd( 156.315, 4.88617, -26.3306, 0.37 ) }
    dend_18 { pt3dadd( 157.159, 4.34681, -26.5303, 0.37 ) }
    dend_18 { pt3dadd( 158.388, 3.5822, -26.8122, 0.37 ) }
    dend_18 { pt3dadd( 159.937, 2.65338, -27.1253, 0.37 ) }
    dend_18 { pt3dadd( 160.625, 2.24515, -27.2504, 0.37 ) }
    dend_18 { pt3dadd( 161.497, 1.75436, -27.3449, 0.37 ) }
    dend_18 { pt3dadd( 163.109, 0.893617, -27.4488, 0.37 ) }
    dend_18 { pt3dadd( 163.923, 0.478171, -27.4689, 0.37 ) }
    dend_18 { pt3dadd( 164.503, 0.188956, -27.4766, 0.37 ) }
    dend_18 { pt3dadd( 165.752, -0.41863, -27.479, 0.37 ) }
    dend_18 { pt3dadd( 166.614, -0.851582, -27.4795, 0.37 ) }
    dend_18 { pt3dadd( 167.83, -1.5102, -27.4004, 0.37 ) }
    dend_18 { pt3dadd( 170.465, -2.93803, -26.9978, 0.37 ) }
    dend_18 { pt3dadd( 171.443, -3.43065, -26.776, 0.37 ) }
    dend_18 { pt3dadd( 172.268, -3.8369, -26.5404, 0.37 ) }
    dend_18 { pt3dadd( 173.142, -4.25127, -26.2498, 0.37 ) }
    dend_18 { pt3dadd( 175.6, -5.3877, -25.3413, 0.37 ) }
    dend_18 { pt3dadd( 177.762, -6.36462, -24.4883, 0.37 ) }
    dend_18 { pt3dadd( 179.508, -7.16562, -23.7375, 0.37 ) }
    dend_18 { pt3dadd( 181.149, -7.9508, -23.0344, 0.37 ) }
    dend_18 { pt3dadd( 183.189, -8.98759, -22.1842, 0.37 ) }
    dend_18 { pt3dadd( 184.537, -9.72031, -21.6289, 0.37 ) }
    dend_18 { pt3dadd( 186.919, -11.0868, -20.6978, 0.37 ) }
    dend_18 { pt3dadd( 188.054, -11.7958, -20.2495, 0.37 ) }
    dend_18 { pt3dadd( 189.12, -12.487, -19.8436, 0.29 ) }
    dend_18 { pt3dadd( 189.767, -12.9401, -19.5948, 0.29 ) }
    dend_18 { pt3dadd( 190.992, -13.85, -19.1094, 0.29 ) }
    dend_18 { pt3dadd( 192.382, -14.9304, -18.5523, 0.29 ) }
    dend_18 { pt3dadd( 194.223, -16.4713, -17.7914, 0.29 ) }
    dend_18 { pt3dadd( 195.594, -17.6594, -17.253, 0.29 ) }
    dend_18 { pt3dadd( 197.093, -18.9724, -16.676, 0.29 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 58/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 8.33149, 76.6386, 41.3293, 0.07 ) }
    dend_13 { pt3dadd( 2.56936, 82.5082, 46.7905, 0.07 ) }
    dend_13 { pt3dadd( -3.64749, 86.9313, 53.0567, 0.07 ) }
    dend_13 { pt3dadd( -9.16732, 89.705, 60.7585, 0.07 ) }
    dend_13 { pt3dadd( -14.4444, 91.317, 68.9458, 0.07 ) }
    dend_13 { pt3dadd( -20.7457, 91.9788, 76.5177, 0.07 ) }
    dend_13 { pt3dadd( -26.6637, 91.5558, 84.4093, 0.07 ) }
    dend_13 { pt3dadd( -31.0516, 90.0779, 93.1294, 0.07 ) }
    dend_13 { pt3dadd( -34.6996, 87.0687, 101.796, 0.07 ) }
    dend_13 { pt3dadd( -36.5619, 83.5254, 110.821, 0.07 ) }
    dend_13 { pt3dadd( -36.3083, 78.9237, 119.553, 0.07 ) }
    dend_13 { pt3dadd( -34.9282, 75.1285, 128.562, 0.07 ) }
    dend_13 { pt3dadd( -32.9844, 71.319, 137.461, 0.07 ) }
    dend_13 { pt3dadd( -30.989, 66.7588, 145.987, 0.07 ) }
    dend_13 { pt3dadd( -30.9553, 62.0054, 154.641, 0.07 ) }
    dend_13 { pt3dadd( -29.9128, 56.2991, 162.63, 0.07 ) }
    dend_13 { pt3dadd( -27.877, 51.0943, 170.769, 0.07 ) }
    dend_13 { pt3dadd( -26.3488, 45.8741, 179.009, 0.07 ) }
    dend_13 { pt3dadd( -24.6434, 40.1489, 186.87, 0.07 ) }
    dend_13 { pt3dadd( -25.1034, 34.2455, 194.77, 0.07 ) }
    dend_13 { pt3dadd( -26.926, 27.1393, 201.378, 0.07 ) }
    dend_13 { pt3dadd( -28.0867, 19.9482, 208.043, 0.07 ) }
    dend_13 { pt3dadd( -28.0757, 12.1855, 214.143, 0.07 ) }
    dend_13 { pt3dadd( -27.5347, 4.60933, 220.451, 0.07 ) }
    dend_13 { pt3dadd( -27.6283, -3.62001, 225.905, 0.07 ) }
    dend_13 { pt3dadd( -26.4613, -10.7492, 232.635, 0.07 ) }
    dend_13 { pt3dadd( -25.3599, -17.4867, 239.768, 0.07 ) }
    dend_13 { pt3dadd( -23.2687, -22.1631, 248.208, 0.07 ) }
    dend_13 { pt3dadd( -19.8088, -26.7434, 256.241, 0.07 ) }
    dend_13 { pt3dadd( -15.0412, -29.665, 264.378, 0.07 ) }
    dend_13 { pt3dadd( -12.1283, -33.1547, 273.142, 0.07 ) }
    dend_13 { pt3dadd( -9.01363, -35.3721, 282.245, 0.07 ) }
    dend_13 { pt3dadd( -7.22493, -36.776, 291.853, 0.07 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 91/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 8.33149, 76.6386, 41.3293, 0.07 ) }
    dend_12 { pt3dadd( -0.246949, 86.6448, 45.7382, 0.07 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 93/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -42.7036, -176.821, -28.3737, 0.96 ) }
    dend_48 { pt3dadd( -44.6265, -178.949, -29.0015, 0.96 ) }
    dend_48 { pt3dadd( -45.9775, -180.812, -29.4327, 0.96 ) }
    dend_48 { pt3dadd( -46.8655, -182.178, -29.6279, 0.59 ) }
    dend_48 { pt3dadd( -47.8479, -183.784, -29.7875, 0.59 ) }
    dend_48 { pt3dadd( -48.485, -184.854, -29.8761, 0.59 ) }
    dend_48 { pt3dadd( -49.472, -186.494, -30.0498, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_48 { pt3dadd( -50.9075, -189.015, -30.3026, 0.96 ) }
    dend_48 { pt3dadd( -52.1155, -191.208, -30.5204, 0.96 ) }
    dend_48 { pt3dadd( -52.7233, -192.333, -30.635, 0.96 ) }
    dend_48 { pt3dadd( -53.4509, -193.734, -30.8573, 0.59 ) }
    dend_48 { pt3dadd( -54.2382, -195.111, -31.2186, 0.52 ) }
    dend_48 { pt3dadd( -54.4047, -195.373, -31.3258, 0.29 ) }
    dend_48 { pt3dadd( -54.8366, -196.101, -31.6997, 0.29 ) }
    dend_48 { pt3dadd( -55.0183, -196.507, -31.9059, 0.44 ) }
    dend_48 { pt3dadd( -55.6297, -198.296, -32.6368, 0.44 ) }
    dend_48 { pt3dadd( -56.0111, -199.698, -33.0909, 0.66 ) }
    dend_48 { pt3dadd( -56.6257, -202.337, -33.7574, 0.66 ) }
    dend_48 { pt3dadd( -57.1276, -204.7, -34.2536, 0.88 ) }
    dend_48 { pt3dadd( -57.4483, -206.452, -34.5476, 0.88 ) }
    dend_48 { pt3dadd( -57.8, -208.389, -34.7252, 0.88 ) }
    dend_48 { pt3dadd( -57.9466, -209.205, -34.7406, 0.88 ) }
    dend_48 { pt3dadd( -58.1335, -210.28, -34.7423, 0.88 ) }
    dend_48 { pt3dadd( -58.5656, -212.486, -34.7105, 0.66 ) }
    dend_48 { pt3dadd( -58.7948, -213.458, -34.6915, 0.66 ) }
    dend_48 { pt3dadd( -59.5036, -216.024, -34.7121, 0.88 ) }
    dend_48 { pt3dadd( -60.0448, -217.882, -34.768, 0.88 ) }
    dend_48 { pt3dadd( -60.7993, -220.301, -34.8919, 0.88 ) }
    dend_48 { pt3dadd( -61.1995, -221.435, -35.0237, 0.88 ) }
    dend_48 { pt3dadd( -61.7074, -222.671, -35.254, 0.88 ) }
    dend_48 { pt3dadd( -62.5543, -224.388, -35.7094, 0.88 ) }
    dend_48 { pt3dadd( -63.0746, -225.327, -36.0498, 0.88 ) }
    dend_48 { pt3dadd( -63.7456, -226.454, -36.5203, 1.11 ) }
    dend_48 { pt3dadd( -64.942, -228.55, -37.5243, 1.11 ) }
    dend_48 { pt3dadd( -65.4848, -229.627, -38.1042, 0.44 ) }
    dend_48 { pt3dadd( -66.1322, -231.182, -39.0185, 0.44 ) }
    dend_48 { pt3dadd( -66.4886, -232.115, -39.5984, 0.66 ) }
    dend_48 { pt3dadd( -66.889, -233.344, -40.4023, 0.66 ) }
    dend_48 { pt3dadd( -67.1543, -234.732, -41.3085, 0.66 ) }
    dend_48 { pt3dadd( -67.105, -235.961, -42.027, 0.66 ) }
    dend_48 { pt3dadd( -66.8821, -236.807, -42.5461, 0.66 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 34/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -42.7036, -176.821, -28.3737, 0.29 ) }
    dend_47 { pt3dadd( -43.0053, -178.08, -29.1008, 0.29 ) }
    dend_47 { pt3dadd( -43.5538, -179.74, -30.056, 0.29 ) }
    dend_47 { pt3dadd( -44.2981, -181.757, -31.2486, 0.07 ) }
    dend_47 { pt3dadd( -44.9784, -183.502, -32.3816, 0.29 ) }
    dend_47 { pt3dadd( -45.5878, -185.12, -33.5352, 0.29 ) }
    dend_47 { pt3dadd( -46.0247, -186.33, -34.4875, 0.29 ) }
    dend_47 { pt3dadd( -46.3509, -187.166, -35.2557, 0.29 ) }
    dend_47 { pt3dadd( -46.6471, -187.874, -35.9829, 0.29 ) }
    dend_47 { pt3dadd( -47.0763, -188.876, -37.2245, 0.29 ) }
    dend_47 { pt3dadd( -47.37, -189.555, -38.2495, 0.52 ) }
    dend_47 { pt3dadd( -47.6366, -190.168, -39.3134, 0.52 ) }
    dend_47 { pt3dadd( -47.8751, -190.575, -40.1764, 0.52 ) }
    dend_47 { pt3dadd( -48.1899, -190.89, -41.0782, 0.52 ) }
    dend_47 { pt3dadd( -48.6659, -191.169, -42.1233, 0.52 ) }
    dend_47 { pt3dadd( -49.4553, -191.441, -43.6663, 0.52 ) }
    dend_47 { pt3dadd( -49.9301, -191.526, -44.5368, 0.52 ) }
    dend_47 { pt3dadd( -51.0112, -191.554, -46.4968, 0.52 ) }
    dend_47 { pt3dadd( -52.0624, -191.417, -48.5223, 0.52 ) }
    dend_47 { pt3dadd( -52.3851, -191.332, -49.1405, 0.52 ) }
    dend_47 { pt3dadd( -53.6008, -190.879, -51.4864, 0.52 ) }
    dend_47 { pt3dadd( -54.0182, -190.696, -52.2769, 0.52 ) }
    dend_47 { pt3dadd( -54.2966, -190.561, -52.7897, 0.52 ) }
    dend_47 { pt3dadd( -55.3123, -190.036, -54.5321, 0.52 ) }
    dend_47 { pt3dadd( -56.1076, -189.611, -55.8417, 0.52 ) }
    dend_47 { pt3dadd( -57.1627, -189.002, -57.5499, 0.52 ) }
    dend_47 { pt3dadd( -57.5216, -188.77, -58.1577, 0.52 ) }
    dend_47 { pt3dadd( -57.8442, -188.543, -58.8015, 0.52 ) }
    dend_47 { pt3dadd( -58.2903, -188.228, -59.8201, 0.52 ) }
    dend_47 { pt3dadd( -58.6678, -187.958, -60.8594, 0.52 ) }
    dend_47 { pt3dadd( -58.8673, -187.794, -61.6264, 0.52 ) }
    dend_47 { pt3dadd( -59.4005, -187.36, -64.2293, 0.52 ) }
    dend_47 { pt3dadd( -59.7078, -187.144, -66.1809, 0.52 ) }
    dend_47 { pt3dadd( -59.8531, -187.094, -67.4106, 0.52 ) }
    dend_47 { pt3dadd( -60.0227, -187.184, -69.4849, 0.52 ) }
    dend_47 { pt3dadd( -60.0579, -187.315, -70.6026, 0.52 ) }
    dend_47 { pt3dadd( -60.0324, -187.545, -71.8817, 0.52 ) }
    dend_47 { pt3dadd( -59.9817, -187.699, -72.5237, 0.52 ) }
    dend_47 { pt3dadd( -59.8069, -188.051, -74.057, 0.52 ) }
    dend_47 { pt3dadd( -59.7039, -188.215, -75.0492, 0.52 ) }
    dend_47 { pt3dadd( -59.6057, -188.35, -76.2987, 0.52 ) }
    dend_47 { pt3dadd( -59.5587, -188.39, -77.0741, 0.52 ) }
    dend_47 { pt3dadd( -59.5155, -188.408, -77.5372, 0.52 ) }
    dend_47 { pt3dadd( -59.3635, -188.374, -79.352, 0.52 ) }
    dend_47 { pt3dadd( -59.2567, -188.255, -80.7144, 0.44 ) }
    dend_47 { pt3dadd( -59.2438, -188.225, -80.9779, 0.15 ) }
    dend_47 { pt3dadd( -59.2499, -188.165, -81.8811, 0.07 ) }
    dend_47 { pt3dadd( -59.2373, -188.183, -83.5131, 0.22 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 82/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -29.1572, -85.6557, -12.8841, 0.07 ) }
    dend_45 { pt3dadd( -29.7576, -85.6758, -12.2719, 0.07 ) }
    dend_45 { pt3dadd( -31.3028, -85.7645, -10.9307, 0.07 ) }
    dend_45 { pt3dadd( -32.3931, -85.8638, -10.056, 0.07 ) }
    dend_45 { pt3dadd( -33.5859, -86.0745, -9.17423, 0.07 ) }
    dend_45 { pt3dadd( -34.8292, -86.4098, -8.25339, 0.07 ) }
    dend_45 { pt3dadd( -36.7629, -87.0687, -6.77886, 0.07 ) }
    dend_45 { pt3dadd( -38.8448, -87.9767, -5.11245, 0.07 ) }
    dend_45 { pt3dadd( -41.606, -89.2755, -2.99498, 0.07 ) }
    dend_45 { pt3dadd( -43.9955, -90.4896, -1.20544, 0.07 ) }
    dend_45 { pt3dadd( -46.1586, -91.6955, 0.451927, 0.07 ) }
    dend_45 { pt3dadd( -47.0793, -92.2949, 1.21285, 0.07 ) }
    dend_45 { pt3dadd( -48.213, -93.2494, 2.27112, 0.07 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 95/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -29.1572, -85.6557, -12.8841, 0.07 ) }
    dend_44 { pt3dadd( -29.5564, -86.8848, -12.0123, 0.07 ) }
    dend_44 { pt3dadd( -29.9868, -88.2666, -11.1787, 0.07 ) }
    dend_44 { pt3dadd( -30.4006, -89.6587, -10.329, 0.07 ) }
    dend_44 { pt3dadd( -30.9198, -91.3209, -9.3246, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_44 { pt3dadd( -32.2138, -95.0956, -7.16412, 0.07 ) }
    dend_44 { pt3dadd( -32.7689, -96.7149, -6.2373, 0.07 ) }
    dend_44 { pt3dadd( -34.348, -101.258, -3.65044, 0.15 ) }
    dend_44 { pt3dadd( -35.3515, -104.035, -2.12426, 0.15 ) }
    dend_44 { pt3dadd( -36.1502, -106.238, -0.96052, 0.15 ) }
    dend_44 { pt3dadd( -37.2999, -109.503, 0.707676, 0.07 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 6/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 103.515, 48.1295, 8.97221, 0.44 ) }
    dend_25 { pt3dadd( 104.914, 48.6302, 8.89362, 0.44 ) }
    dend_25 { pt3dadd( 106.679, 49.3017, 8.99194, 0.44 ) }
    dend_25 { pt3dadd( 107.526, 49.5917, 9.03358, 0.44 ) }
    dend_25 { pt3dadd( 108.379, 49.8694, 9.07117, 0.44 ) }
    dend_25 { pt3dadd( 109.585, 50.226, 9.14759, 0.44 ) }
    dend_25 { pt3dadd( 110.728, 50.5688, 9.26302, 0.44 ) }
    dend_25 { pt3dadd( 112.763, 51.1873, 9.57029, 0.44 ) }
    dend_25 { pt3dadd( 114.633, 51.7794, 9.97402, 0.44 ) }
    dend_25 { pt3dadd( 115.978, 52.199, 10.3035, 0.44 ) }
    dend_25 { pt3dadd( 117.943, 52.8004, 10.8587, 0.44 ) }
    dend_25 { pt3dadd( 119.456, 53.226, 11.3293, 0.44 ) }
    dend_25 { pt3dadd( 121.118, 53.6809, 11.887, 0.44 ) }
    dend_25 { pt3dadd( 122.309, 53.9926, 12.3344, 0.44 ) }
    dend_25 { pt3dadd( 123.269, 54.2371, 12.763, 0.44 ) }
    dend_25 { pt3dadd( 124.318, 54.4609, 13.1956, 0.44 ) }
    dend_25 { pt3dadd( 125.08, 54.5707, 13.4471, 0.44 ) }
    dend_25 { pt3dadd( 125.851, 54.6501, 13.6023, 0.44 ) }
    dend_25 { pt3dadd( 126.513, 54.7342, 13.696, 0.44 ) }
    dend_25 { pt3dadd( 127.506, 54.9125, 13.8193, 0.44 ) }
    dend_25 { pt3dadd( 129.486, 55.3645, 14.0384, 0.44 ) }
    dend_25 { pt3dadd( 131.267, 55.8798, 14.1884, 0.44 ) }
    dend_25 { pt3dadd( 133.336, 56.5781, 14.3149, 0.44 ) }
    dend_25 { pt3dadd( 134.95, 57.1794, 14.3704, 0.44 ) }
    dend_25 { pt3dadd( 136.468, 57.7771, 14.3773, 0.44 ) }
    dend_25 { pt3dadd( 137.176, 58.0702, 14.3711, 0.22 ) }
    dend_25 { pt3dadd( 138.126, 58.4686, 14.3696, 0.07 ) }
    dend_25 { pt3dadd( 138.751, 58.7351, 14.3522, 0.07 ) }
    dend_25 { pt3dadd( 139.949, 59.2155, 14.3593, 0.07 ) }
    dend_25 { pt3dadd( 140.572, 59.4714, 14.3771, 0.07 ) }
    dend_25 { pt3dadd( 141.603, 59.9765, 14.4814, 0.22 ) }
    dend_25 { pt3dadd( 142.661, 60.6305, 14.7011, 0.22 ) }
    dend_25 { pt3dadd( 143.128, 60.9785, 14.8775, 0.22 ) }
    dend_25 { pt3dadd( 144.217, 61.8137, 15.3262, 0.22 ) }
    dend_25 { pt3dadd( 145.368, 62.6265, 15.7747, 0.22 ) }
    dend_25 { pt3dadd( 146.257, 63.2864, 16.1881, 0.22 ) }
    dend_25 { pt3dadd( 146.9, 63.7325, 16.496, 0.22 ) }
    dend_25 { pt3dadd( 148.263, 64.5562, 17.0917, 0.22 ) }
    dend_25 { pt3dadd( 149.724, 65.3278, 17.6917, 0.22 ) }
    dend_25 { pt3dadd( 152.5, 66.68, 18.8396, 0.37 ) }
    dend_25 { pt3dadd( 154.928, 67.759, 19.8287, 0.37 ) }
    dend_25 { pt3dadd( 156.807, 68.5194, 20.6275, 0.37 ) }
    dend_25 { pt3dadd( 157.928, 68.9487, 21.1136, 0.37 ) }
    dend_25 { pt3dadd( 158.939, 69.3292, 21.5452, 0.37 ) }
    dend_25 { pt3dadd( 160.717, 70.0189, 22.3765, 0.37 ) }
    dend_25 { pt3dadd( 161.987, 70.3955, 22.9363, 0.37 ) }
    dend_25 { pt3dadd( 163.225, 70.6291, 23.3901, 0.22 ) }
    dend_25 { pt3dadd( 164.039, 70.7918, 23.6821, 0.22 ) }
    dend_25 { pt3dadd( 164.713, 70.9361, 23.9024, 0.22 ) }
    dend_25 { pt3dadd( 165.162, 71.03, 24.0225, 0.22 ) }
    dend_25 { pt3dadd( 166.982, 71.4368, 24.4128, 0.22 ) }
    dend_25 { pt3dadd( 169.272, 71.996, 24.9203, 0.22 ) }
    dend_25 { pt3dadd( 170.6, 72.3319, 25.165, 0.22 ) }
    dend_25 { pt3dadd( 172.585, 72.842, 25.5168, 0.22 ) }
    dend_25 { pt3dadd( 173.244, 73.0204, 25.6254, 0.22 ) }
    dend_25 { pt3dadd( 174.238, 73.3257, 25.7645, 0.22 ) }
    dend_25 { pt3dadd( 182.301, 76.1055, 28.8358, 0.22 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 63/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 103.515, 48.1295, 8.97221, 0.52 ) }
    dend_24 { pt3dadd( 104.524, 48.8952, 9.47283, 0.52 ) }
    dend_24 { pt3dadd( 105.861, 50.0067, 10.0968, 0.52 ) }
    dend_24 { pt3dadd( 106.657, 50.7534, 10.4316, 0.52 ) }
    dend_24 { pt3dadd( 108.642, 52.977, 11.2537, 0.52 ) }
    dend_24 { pt3dadd( 110.162, 54.931, 12.0271, 0.52 ) }
    dend_24 { pt3dadd( 110.884, 55.9068, 12.4188, 0.52 ) }
    dend_24 { pt3dadd( 112.063, 57.5343, 13.0686, 0.52 ) }
    dend_24 { pt3dadd( 112.917, 58.728, 13.507, 0.52 ) }
    dend_24 { pt3dadd( 114.09, 60.4072, 14.1913, 0.52 ) }
    dend_24 { pt3dadd( 115.463, 62.5735, 15.1561, 0.52 ) }
    dend_24 { pt3dadd( 116.745, 64.5064, 16.1016, 0.52 ) }
    dend_24 { pt3dadd( 117.151, 65.0963, 16.4031, 0.52 ) }
    dend_24 { pt3dadd( 117.767, 65.8634, 16.8735, 0.52 ) }
    dend_24 { pt3dadd( 119.711, 68.0863, 18.4638, 0.52 ) }
    dend_24 { pt3dadd( 120.404, 68.82, 19.0398, 0.29 ) }
    dend_24 { pt3dadd( 121.122, 69.6166, 19.7011, 0.29 ) }
    dend_24 { pt3dadd( 121.543, 70.1798, 20.2541, 0.29 ) }
    dend_24 { pt3dadd( 121.95, 70.8393, 20.9704, 0.29 ) }
    dend_24 { pt3dadd( 122.571, 72.0755, 22.4709, 0.29 ) }
    dend_24 { pt3dadd( 122.945, 73.0524, 23.8, 0.44 ) }
    dend_24 { pt3dadd( 123.196, 73.8559, 25.0246, 0.44 ) }
    dend_24 { pt3dadd( 123.416, 74.8913, 26.6974, 0.44 ) }
    dend_24 { pt3dadd( 123.542, 75.6274, 27.957, 0.44 ) }
    dend_24 { pt3dadd( 123.605, 76.1567, 28.8753, 0.44 ) }
    dend_24 { pt3dadd( 123.684, 76.8031, 30.0791, 0.44 ) }
    dend_24 { pt3dadd( 123.852, 77.8747, 32.2176, 0.44 ) }
    dend_24 { pt3dadd( 123.935, 78.1982, 32.8614, 0.44 ) }
    dend_24 { pt3dadd( 124.097, 78.7169, 33.8201, 0.44 ) }
    dend_24 { pt3dadd( 124.266, 79.297, 34.7839, 0.44 ) }
    dend_24 { pt3dadd( 124.378, 79.8025, 35.4832, 0.44 ) }
    dend_24 { pt3dadd( 124.578, 80.5973, 36.4404, 0.44 ) }
    dend_24 { pt3dadd( 124.654, 80.918, 36.7858, 0.44 ) }
    dend_24 { pt3dadd( 124.878, 81.9213, 37.8128, 0.44 ) }
    dend_24 { pt3dadd( 124.969, 82.3508, 38.209, 0.44 ) }
    dend_24 { pt3dadd( 125.209, 83.4914, 39.1507, 0.37 ) }
    dend_24 { pt3dadd( 125.583, 84.9937, 40.2423, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_24 { pt3dadd( 126.075, 86.3643, 41.0603, 0.22 ) }
    dend_24 { pt3dadd( 126.35, 86.9791, 41.3949, 0.22 ) }
    dend_24 { pt3dadd( 126.773, 87.7458, 41.7609, 0.22 ) }
    dend_24 { pt3dadd( 127.113, 88.2897, 41.9607, 0.22 ) }
    dend_24 { pt3dadd( 127.717, 89.2207, 42.1768, 0.22 ) }
    dend_24 { pt3dadd( 128.89, 91.0861, 42.2175, 0.22 ) }
    dend_24 { pt3dadd( 129.3, 91.6785, 42.1155, 0.22 ) }
    dend_24 { pt3dadd( 130.13, 92.7864, 41.7404, 0.22 ) }
    dend_24 { pt3dadd( 131.16, 94.0145, 41.0926, 0.22 ) }
    dend_24 { pt3dadd( 131.8, 94.6648, 40.5772, 0.22 ) }
    dend_24 { pt3dadd( 132.846, 95.5076, 39.5596, 0.22 ) }
    dend_24 { pt3dadd( 133.479, 95.8632, 38.8762, 0.22 ) }
    dend_24 { pt3dadd( 134.082, 96.0999, 38.2312, 0.22 ) }
    dend_24 { pt3dadd( 134.271, 96.1438, 38.0349, 0.22 ) }
    dend_24 { pt3dadd( 134.825, 96.2016, 37.5282, 0.22 ) }
    dend_24 { pt3dadd( 135.534, 96.192, 36.9026, 0.22 ) }
    dend_24 { pt3dadd( 136.276, 96.1623, 36.2826, 0.22 ) }
    dend_24 { pt3dadd( 136.926, 96.1504, 35.736, 0.22 ) }
    dend_24 { pt3dadd( 137.301, 96.157, 35.4158, 0.22 ) }
    dend_24 { pt3dadd( 137.626, 96.1732, 35.1175, 0.22 ) }
    dend_24 { pt3dadd( 138.853, 96.255, 33.8524, 0.22 ) }
    dend_24 { pt3dadd( 139.388, 96.2901, 33.2038, 0.22 ) }
    dend_24 { pt3dadd( 139.868, 96.3156, 32.5457, 0.22 ) }
    dend_24 { pt3dadd( 140.28, 96.3179, 31.9468, 0.22 ) }
    dend_24 { pt3dadd( 140.711, 96.3195, 31.3286, 0.22 ) }
    dend_24 { pt3dadd( 142.446, 96.4183, 28.833, 0.22 ) }
    dend_24 { pt3dadd( 143.029, 96.4827, 28.0009, 0.22 ) }
    dend_24 { pt3dadd( 143.757, 96.5747, 26.9004, 0.22 ) }
    dend_24 { pt3dadd( 144.596, 96.7153, 25.5669, 0.22 ) }
    dend_24 { pt3dadd( 145.065, 96.8161, 24.7727, 0.22 ) }
    dend_24 { pt3dadd( 145.975, 97.0557, 23.0968, 0.22 ) }
    dend_24 { pt3dadd( 146.193, 97.1301, 22.6362, 0.22 ) }
    dend_24 { pt3dadd( 146.753, 97.3461, 21.4643, 0.22 ) }
    dend_24 { pt3dadd( 146.926, 97.4355, 21.0696, 0.22 ) }
    dend_24 { pt3dadd( 147.148, 97.5943, 20.4051, 0.22 ) }
    dend_24 { pt3dadd( 147.353, 97.7045, 19.4746, 0.22 ) }
    dend_24 { pt3dadd( 147.423, 97.6805, 18.9499, 0.22 ) }
    dend_24 { pt3dadd( 153.93, 102.415, 20.2527, 0.22 ) }
    dend_24 { pt3dadd( 160.358, 107.124, 21.9759, 0.22 ) }
    dend_24 { pt3dadd( 165.639, 112.887, 24.2892, 0.22 ) }
    dend_24 { pt3dadd( 171.491, 117.599, 27.4508, 0.22 ) }
    dend_24 { pt3dadd( 176.832, 121.815, 31.9412, 0.22 ) }
    dend_24 { pt3dadd( 183.046, 124.946, 36.1877, 0.22 ) }
    dend_24 { pt3dadd( 188.326, 128.436, 41.3252, 0.22 ) }
    dend_24 { pt3dadd( 193.171, 132.465, 46.4972, 0.22 ) }
    dend_24 { pt3dadd( 198.228, 135.598, 52.0713, 0.22 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 46/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 197.093, -18.9724, -16.676, 0.29 ) }
    dend_20 { pt3dadd( 198.377, -19.6322, -16.7996, 0.29 ) }
    dend_20 { pt3dadd( 200.869, -20.9125, -17.0395, 0.29 ) }
    dend_20 { pt3dadd( 204.697, -22.8795, -17.4081, 0.29 ) }
    dend_20 { pt3dadd( 208.419, -24.792, -17.7665, 0.29 ) }
    dend_20 { pt3dadd( 211.494, -26.3716, -18.0625, 0.29 ) }
    dend_20 { pt3dadd( 212.992, -27.1415, -18.2068, 0.29 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 53/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 197.093, -18.9724, -16.676, 0.29 ) }
    dend_19 { pt3dadd( 197.315, -19.5648, -15.2335, 0.29 ) }
    dend_19 { pt3dadd( 197.73, -20.7091, -12.5014, 0.29 ) }
    dend_19 { pt3dadd( 198.085, -21.883, -9.8008, 0.29 ) }
    dend_19 { pt3dadd( 198.304, -22.5843, -8.48034, 0.29 ) }
    dend_19 { pt3dadd( 198.523, -23.3571, -6.82479, 0.29 ) }
    dend_19 { pt3dadd( 198.689, -23.9482, -5.45051, 0.29 ) }
    dend_19 { pt3dadd( 199.116, -25.4477, -1.62853, 0.29 ) }
    dend_19 { pt3dadd( 199.318, -26.229, 0.416533, 0.29 ) }
    dend_19 { pt3dadd( 199.615, -27.3707, 3.60714, 0.29 ) }
    dend_19 { pt3dadd( 200.438, -29.7607, 11.0413, 0.29 ) }
    dend_19 { pt3dadd( 200.77, -30.5203, 13.6554, 0.29 ) }
    dend_19 { pt3dadd( 201.086, -31.0775, 15.7448, 0.29 ) }
    dend_19 { pt3dadd( 201.443, -31.5463, 17.5635, 0.29 ) }
    dend_19 { pt3dadd( 201.844, -31.9823, 19.266, 0.29 ) }
    dend_19 { pt3dadd( 202.474, -32.5535, 21.7901, 0.29 ) }
    dend_19 { pt3dadd( 202.936, -32.9421, 22.9099, 0.29 ) }
    dend_19 { pt3dadd( 203.627, -33.4909, 24.336, 0.29 ) }
    dend_19 { pt3dadd( 204.367, -34.0588, 25.6347, 0.29 ) }
    dend_19 { pt3dadd( 205.31, -34.7393, 27.0856, 0.29 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 73/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -66.8821, -236.807, -42.5461, 0.81 ) }
    dend_50 { pt3dadd( -66.0113, -237.859, -42.6955, 0.81 ) }
    dend_50 { pt3dadd( -64.7989, -239.368, -42.8228, 0.81 ) }
    dend_50 { pt3dadd( -63.0445, -241.733, -42.8457, 0.81 ) }
    dend_50 { pt3dadd( -61.7812, -243.655, -42.7351, 0.59 ) }
    dend_50 { pt3dadd( -61.2292, -244.595, -42.6419, 0.59 ) }
    dend_50 { pt3dadd( -60.6224, -245.74, -42.5132, 0.59 ) }
    dend_50 { pt3dadd( -59.7554, -247.684, -42.2979, 0.66 ) }
    dend_50 { pt3dadd( -59.2172, -249.223, -42.1085, 0.66 ) }
    dend_50 { pt3dadd( -58.6666, -251.031, -41.9414, 0.66 ) }
    dend_50 { pt3dadd( -58.3261, -252.032, -41.9021, 0.66 ) }
    dend_50 { pt3dadd( -57.927, -253.06, -41.9093, 0.66 ) }
    dend_50 { pt3dadd( -56.8568, -255.422, -42.1063, 0.96 ) }
    dend_50 { pt3dadd( -56.1839, -256.658, -42.27, 0.96 ) }
    dend_50 { pt3dadd( -54.9524, -258.462, -42.6102, 0.96 ) }
    dend_50 { pt3dadd( -53.9619, -259.669, -42.8494, 0.96 ) }
    dend_50 { pt3dadd( -53.1314, -260.533, -43.0418, 0.96 ) }
    dend_50 { pt3dadd( -52.2658, -261.362, -43.237, 0.96 ) }
    dend_50 { pt3dadd( -51.3325, -262.258, -43.4176, 0.96 ) }
    dend_50 { pt3dadd( -50.092, -263.55, -43.6523, 0.96 ) }
    dend_50 { pt3dadd( -49.3783, -264.377, -43.7506, 0.96 ) }
    dend_50 { pt3dadd( -47.0821, -267.191, -44.0107, 0.81 ) }
    dend_50 { pt3dadd( -46.1588, -268.312, -44.1133, 0.66 ) }
    dend_50 { pt3dadd( -45.2532, -269.439, -44.1815, 0.66 ) }
    dend_50 { pt3dadd( -44.4253, -270.476, -44.1526, 0.37 ) }
    dend_50 { pt3dadd( -43.3261, -271.939, -43.8836, 0.37 ) }
    dend_50 { pt3dadd( -42.9491, -272.447, -43.71, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_50 { pt3dadd( -42.3202, -273.245, -43.2616, 0.37 ) }
    dend_50 { pt3dadd( -41.7836, -273.884, -42.8304, 0.44 ) }
    dend_50 { pt3dadd( -40.1769, -275.858, -41.4293, 0.44 ) }
    dend_50 { pt3dadd( -39.0722, -277.294, -40.3267, 0.44 ) }
    dend_50 { pt3dadd( -38.2875, -278.426, -39.4506, 0.44 ) }
    dend_50 { pt3dadd( -37.6091, -279.503, -38.5589, 0.44 ) }
    dend_50 { pt3dadd( -36.7004, -281.023, -37.2999, 0.44 ) }
    dend_50 { pt3dadd( -35.6001, -282.908, -35.7603, 0.22 ) }
    dend_50 { pt3dadd( -35.2484, -283.555, -35.2551, 0.22 ) }
    dend_50 { pt3dadd( -34.1355, -285.697, -33.6532, 0.22 ) }
    dend_50 { pt3dadd( -33.4364, -287.296, -32.5915, 0.22 ) }
    dend_50 { pt3dadd( -32.6435, -289.661, -31.2591, 0.22 ) }
    dend_50 { pt3dadd( -32.2587, -291.094, -30.5727, 0.22 ) }
    dend_50 { pt3dadd( -32.1138, -292.146, -30.1926, 0.22 ) }
    dend_50 { pt3dadd( -32.1239, -293.528, -29.8564, 0.37 ) }
    dend_50 { pt3dadd( -32.3439, -295.644, -29.6333, 0.37 ) }
    dend_50 { pt3dadd( -32.5788, -297.828, -29.5963, 0.37 ) }
    dend_50 { pt3dadd( -32.6398, -298.473, -29.6217, 0.59 ) }
    dend_50 { pt3dadd( -32.7843, -301.49, -29.8503, 0.59 ) }
    dend_50 { pt3dadd( -32.7761, -303.832, -30.0406, 0.59 ) }
    dend_50 { pt3dadd( -32.6487, -307.044, -30.2146, 0.59 ) }
    dend_50 { pt3dadd( -32.3834, -311.059, -30.2842, 0.59 ) }
    dend_50 { pt3dadd( -32.2571, -312.958, -30.2102, 0.59 ) }
    dend_50 { pt3dadd( -32.1971, -314.373, -30.0761, 0.59 ) }
    dend_50 { pt3dadd( -32.0827, -316.559, -29.7698, 0.59 ) }
    dend_50 { pt3dadd( -32.0409, -318.856, -29.2836, 0.59 ) }
    dend_50 { pt3dadd( -32.1237, -320.278, -28.7845, 0.59 ) }
    dend_50 { pt3dadd( -32.561, -322.408, -27.8022, 0.44 ) }
    dend_50 { pt3dadd( -32.965, -323.769, -27.1641, 0.44 ) }
    dend_50 { pt3dadd( -33.4527, -325.026, -26.6148, 0.44 ) }
    dend_50 { pt3dadd( -34.3467, -327.021, -25.8039, 0.44 ) }
    dend_50 { pt3dadd( -36.3213, -331.089, -24.2081, 0.44 ) }
    dend_50 { pt3dadd( -38.6983, -335.653, -22.2219, 0.44 ) }
    dend_50 { pt3dadd( -39.5126, -337.125, -21.5819, 0.44 ) }
    dend_50 { pt3dadd( -40.5776, -338.848, -20.826, 0.44 ) }
    dend_50 { pt3dadd( -41.3568, -339.981, -20.3234, 0.44 ) }
    dend_50 { pt3dadd( -42.0235, -340.935, -19.9785, 0.44 ) }
    dend_50 { pt3dadd( -42.7119, -342.039, -19.5806, 0.44 ) }
    dend_50 { pt3dadd( -43.6088, -343.429, -18.8396, 0.44 ) }
    dend_50 { pt3dadd( -44.2084, -344.354, -18.3472, 0.66 ) }
    dend_50 { pt3dadd( -44.8706, -345.444, -17.815, 0.66 ) }
    dend_50 { pt3dadd( -46.3274, -348.095, -16.7, 0.66 ) }
    dend_50 { pt3dadd( -47.3706, -350.15, -15.9824, 0.66 ) }
    dend_50 { pt3dadd( -48.5877, -352.818, -15.1417, 0.37 ) }
    dend_50 { pt3dadd( -49.7189, -355.688, -14.2485, 0.37 ) }
    dend_50 { pt3dadd( -50.2721, -357.423, -13.7177, 0.37 ) }
    dend_50 { pt3dadd( -50.7228, -359.275, -13.1604, 0.37 ) }
    dend_50 { pt3dadd( -51.021, -361.368, -12.4794, 0.37 ) }
    dend_50 { pt3dadd( -51.1217, -363.003, -11.9677, 0.37 ) }
    dend_50 { pt3dadd( -51.032, -364.914, -11.2513, 0.37 ) }
    dend_50 { pt3dadd( -50.8647, -366.227, -10.6051, 0.37 ) }
    dend_50 { pt3dadd( -50.5975, -367.976, -9.56843, 0.37 ) }
    dend_50 { pt3dadd( -50.3057, -370.058, -8.10405, 0.37 ) }
    dend_50 { pt3dadd( -50.1361, -371.313, -7.13164, 0.37 ) }
    dend_50 { pt3dadd( -50.0028, -373.045, -5.78703, 0.37 ) }
    dend_50 { pt3dadd( -49.9655, -374.675, -4.52125, 0.15 ) }
    dend_50 { pt3dadd( -50.0311, -376.615, -3.03032, 0.15 ) }
    dend_50 { pt3dadd( -50.1654, -377.995, -1.95137, 0.15 ) }
    dend_50 { pt3dadd( -50.3128, -378.791, -1.34211, 0.15 ) }
    dend_50 { pt3dadd( -50.7321, -381.065, 0.351085, 0.15 ) }
    dend_50 { pt3dadd( -50.9367, -382.355, 1.25776, 0.15 ) }
    dend_50 { pt3dadd( -51.1318, -383.922, 2.27098, 0.15 ) }
    dend_50 { pt3dadd( -51.3046, -385.611, 3.33625, 0.15 ) }
    dend_50 { pt3dadd( -51.5012, -387.346, 4.41326, 0.15 ) }
    dend_50 { pt3dadd( -51.8324, -389.55, 5.75091, 0.15 ) }
    dend_50 { pt3dadd( -52.0849, -391.208, 6.74644, 0.15 ) }
    dend_50 { pt3dadd( -52.3055, -392.688, 7.57827, 0.15 ) }
    dend_50 { pt3dadd( -52.5138, -394.145, 8.312, 0.15 ) }
    dend_50 { pt3dadd( -52.7839, -396.339, 9.28584, 0.15 ) }
    dend_50 { pt3dadd( -52.9408, -397.488, 9.79614, 0.15 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 70/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -66.8821, -236.807, -42.5461, 0.66 ) }
    dend_49 { pt3dadd( -65.1818, -237.423, -41.4607, 0.66 ) }
    dend_49 { pt3dadd( -64.3022, -237.741, -40.8991, 0.66 ) }
    dend_49 { pt3dadd( -63.521, -238.024, -40.4004, 0.66 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 74/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 212.992, -27.1415, -18.2068, 0.22 ) }
    dend_22 { pt3dadd( 214.387, -27.7213, -18.6888, 0.22 ) }
    dend_22 { pt3dadd( 216.668, -28.6688, -19.4766, 0.22 ) }
    dend_22 { pt3dadd( 218.523, -29.4396, -20.1173, 0.22 ) }
    dend_22 { pt3dadd( 220.057, -30.0771, -20.6473, 0.22 ) }
    dend_22 { pt3dadd( 221.215, -30.5579, -21.047, 0.22 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 80/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 212.992, -27.1415, -18.2068, 0.15 ) }
    dend_21 { pt3dadd( 214.744, -29.0017, -17.283, 0.15 ) }
    dend_21 { pt3dadd( 216.294, -30.6485, -16.4651, 0.15 ) }
    dend_21 { pt3dadd( 217.734, -32.1778, -15.7057, 0.15 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_38, dend_35, dend_26, dend_7, dend_0, dend_63, dend_56, dend_54, dend_39, dend_37, dend_36, dend_28, dend_27, dend_9, dend_8, dend_2, dend_1, dend_60, dend_57, dend_51, dend_40, dend_32, dend_29, dend_15, dend_10, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_42, dend_41, dend_34, dend_33, dend_31, dend_30, dend_17, dend_16, dend_14, dend_11, dend_5, dend_4, dend_46, dend_43, dend_23, dend_18, dend_13, dend_12, dend_48, dend_47, dend_45, dend_44, dend_25, dend_24, dend_20, dend_19, dend_50, dend_49, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_55 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_38, dend_35, dend_26, dend_7, dend_0, dend_63, dend_56, dend_54, dend_39, dend_37, dend_36, dend_28, dend_27, dend_9, dend_8, dend_2, dend_1, dend_60, dend_57, dend_51, dend_40, dend_32, dend_29, dend_15, dend_10, dend_6, dend_3, dend_62, dend_61, dend_59, dend_58, dend_53, dend_52, dend_42, dend_41, dend_34, dend_33, dend_31, dend_30, dend_17, dend_16, dend_14, dend_11, dend_5, dend_4, dend_46, dend_43, dend_23, dend_18, dend_13, dend_12, dend_48, dend_47, dend_45, dend_44, dend_25, dend_24, dend_20, dend_19, dend_50, dend_49, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_35 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_63 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_56 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_54 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_37 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_36 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_27 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_8 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_6 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_62 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_61 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_58 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_53 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_52 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_41 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_34 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_33 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_31 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_30 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_14 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_11 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_5 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_46 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_18 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_13 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_48 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_47 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_25 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_24 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_19 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_50 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_38 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_55 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_26 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_7 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_28 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_32 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_39 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_40 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_9 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_10 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_15 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_42 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_51 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_43 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_4 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_57 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_16 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_60 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_17 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_45 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_59 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_44 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_23 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_12 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_49 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_20 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_21 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_22 OneSecGrp_SectionRef_66.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_26, dend_26, dend_26, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_60, dend_60, dend_60, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_35 nseg = 7
    dend_63 nseg = 13
    dend_56 nseg = 3
    dend_54 nseg = 17
    dend_37 nseg = 7
    dend_36 nseg = 7
    dend_27 nseg = 11
    dend_8 nseg = 13
    dend_1 nseg = 9
    dend_6 nseg = 11
    dend_62 nseg = 17
    dend_61 nseg = 11
    dend_58 nseg = 9
    dend_53 nseg = 5
    dend_52 nseg = 11
    dend_41 nseg = 7
    dend_34 nseg = 21
    dend_33 nseg = 11
    dend_31 nseg = 11
    dend_30 nseg = 3
    dend_14 nseg = 11
    dend_11 nseg = 3
    dend_5 nseg = 9
    dend_46 nseg = 5
    dend_18 nseg = 7
    dend_13 nseg = 15
    dend_48 nseg = 3
    dend_47 nseg = 3
    dend_25 nseg = 5
    dend_24 nseg = 9
    dend_19 nseg = 3
    dend_50 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L6_LBC_0f06cad592_0_0


