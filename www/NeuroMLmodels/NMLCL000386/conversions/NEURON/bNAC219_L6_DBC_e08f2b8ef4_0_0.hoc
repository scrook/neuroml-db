// Cell: bNAC219_L6_DBC_e08f2b8ef4_0_0
/*
{
  "id" : "bNAC219_L6_DBC_e08f2b8ef4_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.28115, -11.0873, 1.6054, 2.71903", "-3.90555, -10.0189, 1.46271, 4.54351", "-3.52995, -8.95054, 1.32001, 6.06676", "-3.15435, -7.88215, 1.17732, 7.70089", "-2.77875, -6.81375, 1.03462, 9.50221", "-2.40315, -5.74536, 0.891931, 11.4189", "-2.02755, -4.67696, 0.749237, 12.8756", "-1.65195, -3.60857, 0.606544, 14.0093", "-1.27635, -2.54017, 0.46385, 14.551", "-0.900746, -1.47178, 0.321156, 14.6039", "-0.525145, -0.403386, 0.178462, 14.3615", "-0.149545, 0.665008, 0.0357687, 13.9828", "0.226055, 1.7334, -0.106925, 13.3923", "0.601655, 2.8018, -0.249619, 12.9274", "0.977256, 3.87019, -0.392313, 12.1033", "1.35286, 4.93859, -0.535006, 10.4725", "1.72846, 6.00698, -0.6777, 8.96565", "2.10406, 7.07537, -0.820394, 7.72714", "2.47966, 8.14377, -0.963088, 6.28127", "2.85526, 9.21216, -1.10578, 4.62664", "3.23086, 10.2806, -1.24848, 2.72659" ]
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-6.8285, -4.03579, -7.44048, 0.74", "-6.8285, -4.03579, -7.44048, 0.74", "-7.39373, -4.98973, -7.52135, 0.74", "-7.44068, -5.04099, -7.52703, 0.74", "-8.38138, -5.71439, -7.62169, 0.66", "-9.30902, -6.16059, -7.69946, 0.44", "-10.3948, -6.52651, -7.77574, 0.44", "-11.4161, -6.70462, -7.95362, 0.44", "-12.0755, -6.75696, -8.11098, 1.03", "-12.8979, -6.81113, -8.38887, 1.33", "-13.6303, -6.82931, -8.70067, 1.47", "-14.3571, -6.87017, -9.10229, 0.66", "-15.7518, -7.28241, -10.3005, 0.37", "-16.0585, -7.54196, -10.7775, 0.37", "-16.4781, -8.17416, -11.7464, 1.11", "-16.4972, -8.21982, -11.8092, 1.11", "-16.6108, -8.63291, -12.3192, 0.88", "-16.7763, -9.56116, -13.3446, 0.59", "-16.9562, -10.7939, -14.5367, 1.03", "-16.987, -11.0072, -14.7544, 1.25", "-17.0011, -11.0808, -14.8279, 1.25", "-17.0761, -11.4033, -15.1526, 1.25", "-17.1056, -11.4901, -15.2449, 1.25", "-17.5273, -12.3363, -16.1271, 0.52", "-18.0005, -12.9637, -16.792, 0.22", "-18.3065, -13.1858, -17.1125, 0.22", "-18.523, -13.275, -17.2896, 0.22", "-19.0533, -13.4049, -17.6484, 0.88", "-19.4173, -13.4837, -17.8499, 1.25", "-19.9829, -13.616, -18.1188, 1.25", "-21.164, -14.0085, -18.7565, 0.29", "-21.4991, -14.1809, -18.9805, 0.29", "-21.9948, -14.5604, -19.3709, 0.29", "-22.5392, -15.1191, -19.8484, 0.29", "-23.0742, -15.7713, -20.3642, 0.29", "-23.5804, -16.4787, -20.8766, 0.52", "-23.7781, -16.7941, -21.0806, 0.52", "-23.952, -17.0413, -21.2459, 0.29", "-24.2184, -17.3793, -21.5668, 0.29", "-24.5487, -17.7443, -22.0172, 1.25", "-24.7858, -17.9741, -22.3339, 1.47", "-24.8227, -18.0092, -22.3853, 1.47", "-25.0, -18.1879, -22.66, 1.47", "-26.02, -19.3204, -24.4868, 0.22", "-26.1791, -19.5278, -24.8149, 0.81", "-26.3735, -19.7931, -25.2204, 0.81", "-26.3999, -19.8267, -25.2753, 0.81", "-26.6719, -20.1182, -25.7801, 0.96", "-27.2868, -20.7035, -26.8905, 0.29", "-27.327, -20.7347, -26.955, 0.29", "-27.5635, -20.9589, -27.3756, 0.29", "-28.23, -21.8204, -28.6752, 1.92", "-28.5761, -22.3806, -29.3952, 2.58", "-28.9107, -23.0244, -30.132, 2.58", "-28.9348, -23.0707, -30.1785, 2.58", "-29.6156, -24.3472, -31.3309, 0.66", "-30.1481, -25.2063, -32.0493, 0.22", "-30.2603, -25.3544, -32.154, 0.81", "-30.9254, -26.0904, -32.6781, 0.22", "-31.7258, -26.8788, -33.2299, 2.58", "-32.106, -27.2163, -33.4827, 3.32", "-33.5506, -28.3732, -34.4052, 0.44", "-34.3043, -28.9787, -34.8985, 1.33", "-34.8871, -29.4978, -35.2888, 1.47", "-35.5199, -30.2048, -35.7778, 0.22", "-35.5854, -30.2956, -35.8406, 0.22", "-35.9792, -30.8864, -36.2411, 0.22", "-36.3666, -31.547, -36.6459, 1.69", "-36.5146, -31.7828, -36.792, 2.06", "-37.5793, -33.2051, -37.8509, 0.22", "-37.6174, -33.2482, -37.8896, 0.22", "-38.0862, -33.7784, -38.416, 0.22", "-38.3223, -34.0457, -38.7022, 0.88", "-38.5495, -34.354, -39.0641, 1.11", "-39.4889, -35.7712, -40.7295, 0.22", "-39.5159, -35.8193, -40.7873, 0.22", "-39.8342, -36.4629, -41.5736, 1.84", "-39.9716, -36.7943, -41.9721, 1.99", "-40.5619, -38.3612, -43.7684, 0.29", "-40.7392, -38.8191, -44.2469, 0.29", "-41.3448, -40.0814, -45.4419, 0.29", "-41.4151, -40.2073, -45.5622, 0.29", "-41.879, -40.8874, -46.2188, 1.11", "-42.1313, -41.2064, -46.5557, 1.47", "-42.7896, -41.9307, -47.3571, 0.29", "-43.6727, -42.8073, -48.3977, 2.43", "-44.3877, -43.4213, -49.166, 2.43", "-45.4898, -44.2638, -50.3272, 0.52", "-46.3118, -44.8189, -51.1877, 0.66", "-46.9738, -45.2251, -51.8795, 0.22", "-47.3153, -45.4103, -52.2193, 0.59", "-47.6389, -45.5745, -52.5081, 0.59", "-48.4118, -45.9871, -53.1172, 0.22", "-48.9613, -46.3499, -53.5293, 1.18", "-49.2087, -46.5546, -53.7001, 1.33", "-50.2047, -47.5532, -54.4601, 0.37", "-50.7935, -48.2316, -54.9419, 0.22", "-51.2731, -48.8381, -55.3399, 0.22", "-51.8273, -49.6062, -55.7925, 1.55", "-52.1873, -50.1445, -56.0847, 2.06", "-53.1186, -51.6577, -56.8532, 0.22", "-53.3082, -51.9821, -57.0009, 0.52", "-53.5033, -52.2745, -57.1371, 0.52", "-54.1113, -53.0887, -57.5196, 0.22", "-54.4551, -53.5277, -57.7198, 0.22", "-54.8322, -54.0063, -57.9602, 1.11", "-55.1548, -54.4045, -58.1602, 1.33", "-56.1158, -55.5382, -58.7992, 0.22", "-56.455, -55.9137, -59.0289, 1.03", "-56.6447, -56.1032, -59.1571, 1.03", "-57.6652, -57.0787, -59.8319, 0.22", "-58.0379, -57.4367, -60.0693, 0.22", "-58.3594, -57.7484, -60.2668, 1.18", "-58.659, -58.0275, -60.4407, 1.4", "-59.8403, -59.0967, -61.1938, 0.22", "-60.2277, -59.4362, -61.4371, 1.11", "-60.5177, -59.6839, -61.6129, 1.33", "-60.7679, -59.911, -61.7807, 1.18", "-61.7382, -60.8477, -62.4589, 0.15", "-62.5666, -61.6835, -63.0472, 0.15", "-62.8862, -62.0136, -63.2685, 0.81", "-63.0807, -62.2238, -63.4304, 0.81", "-63.8824, -63.1181, -64.1436, 0.22", "-64.5405, -63.8791, -64.7436, 0.22", "-65.1412, -64.5973, -65.2994, 1.47", "-65.4006, -64.8985, -65.5504, 1.84", "-66.7909, -66.4939, -67.0989, 0.15", "-67.1278, -66.8594, -67.4991, 0.15", "-67.3318, -67.0707, -67.7657, 0.74", "-67.4284, -67.1655, -67.8973, 0.74", "-68.1931, -67.8569, -68.9381, 0.29", "-68.8754, -68.4295, -69.8339, 1.25", "-69.1411, -68.6364, -70.1516, 1.33", "-69.9914, -69.342, -71.3582, 0.15", "-70.2511, -69.5681, -71.7597, 0.74", "-70.7979, -70.0585, -72.6302, 0.22", "-70.8268, -70.0849, -72.6752, 0.22", "-71.0575, -70.2912, -73.0191, 0.88", "-72.3649, -71.4574, -74.9472, 0.22", "-72.4079, -71.4951, -75.006, 0.22", "-72.5352, -71.5973, -75.1509, 0.22", "-73.106, -72.0126, -75.6606, 1.47", "-73.3729, -72.1894, -75.8483, 1.84", "-73.6101, -72.3386, -75.9733, 1.84", "-73.8899, -72.5068, -76.0675, 1.84", "-75.1053, -73.3465, -76.7601, 0.15", "-75.182, -73.3993, -76.8138, 0.15", "-75.7986, -73.7871, -77.2972, 0.15", "-76.3263, -74.121, -77.7295, 0.96", "-76.6495, -74.3391, -78.0029, 0.96", "-78.3417, -75.5646, -79.4873, 0.22", "-78.7798, -75.9241, -79.8944, 0.22", "-79.3268, -76.3981, -80.3956, 0.22", "-79.9468, -76.9549, -80.9354, 1.11", "-80.3613, -77.3449, -81.2782, 1.69", "-80.4976, -77.4869, -81.3818, 1.69", "-81.6914, -78.9118, -82.2141, 0.22", "-82.1148, -79.478, -82.5298, 0.37", "-82.5133, -80.0315, -82.8386, 0.22", "-83.0601, -80.7594, -83.2484, 1.47", "-83.4462, -81.2447, -83.5589, 1.69", "-84.4321, -82.4422, -84.3524, 0.22", "-85.2667, -83.4821, -85.0267, 0.22", "-85.6836, -84.006, -85.3839, 1.4", "-86.0798, -84.5048, -85.7358, 1.84", "-87.3652, -86.0676, -86.8846, 0.15", "-87.8159, -86.5909, -87.295, 0.15", "-88.2424, -87.0615, -87.6874, 1.18", "-88.4747, -87.3176, -87.9093, 1.18", "-88.508, -87.3553, -87.941, 1.18", "-89.5558, -88.6251, -88.9368, 0.22", "-90.0494, -89.2821, -89.3653, 1.25", "-90.7526, -90.2304, -90.0001, 0.15", "-91.0361, -90.5759, -90.254, 0.88", "-91.1832, -90.7452, -90.3796, 1.03", "-91.642, -91.2522, -90.7466, 0.15", "-92.1665, -91.8042, -91.1249, 0.15", "-92.587, -92.2069, -91.4401, 0.74", "-93.3818, -92.9045, -92.0341, 0.22", "-94.0663, -93.5073, -92.5446, 0.22", "-94.6803, -94.0508, -93.0006, 1.99", "-94.9581, -94.304, -93.2052, 2.28", "-96.5067, -95.812, -94.3179, 0.22", "-96.7211, -96.0505, -94.472, 0.52", "-97.4318, -96.8944, -94.9498, 0.15", "-97.4736, -96.943, -94.9774, 0.15", "-97.803, -97.3059, -95.1682, 0.81", "-97.8414, -97.3474, -95.186, 0.81", "-98.9184, -98.4922, -95.5304, 0.22", "-99.7077, -99.3435, -95.837, 0.22", "-99.7608, -99.3987, -95.8589, 0.22", "-100.515, -100.214, -96.1764, 0.22", "-101.042, -100.795, -96.4324, 0.81", "-101.09, -100.852, -96.4576, 0.81", "-101.898, -101.894, -96.9448, 0.22", "-102.367, -102.51, -97.2482, 1.47", "-102.537, -102.728, -97.3545, 1.77", "-103.831, -104.348, -98.1484, 0.22", "-104.211, -104.794, -98.3725, 0.52", "-105.079, -105.747, -98.8414, 0.22", "-106.141, -106.832, -99.3586, 0.22", "-106.686, -107.371, -99.625, 1.18", "-106.852, -107.532, -99.7034, 1.4", "-108.137, -108.825, -100.396, 0.15", "-108.428, -109.128, -100.574, 0.66", "-109.86, -110.688, -101.529, 0.15", "-110.546, -111.47, -102.056, 1.69", "-110.757, -111.715, -102.227, 1.84", "-112.291, -113.573, -103.539, 0.22", "-112.576, -113.942, -103.809, 0.66", "-112.615, -113.998, -103.853, 0.66", "-113.001, -114.59, -104.365, 0.15", "-113.168, -114.831, -104.58, 0.59", "-113.221, -114.904, -104.647, 0.59", "-113.868, -115.749, -105.404, 0.22", "-114.455, -116.499, -106.118, 1.33", "-115.068, -117.303, -106.894, 0.15", "-115.346, -117.695, -107.275, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "4.2915, 5.40221, -8.94048, 1.18", "4.32448, 6.27982, -8.65322, 1.18", "4.36731, 7.50874, -8.27696, 1.47", "4.39283, 8.46508, -8.08886, 1.92", "4.40692, 9.75908, -7.97713, 0.81", "4.40262, 10.8338, -7.97885, 0.81", "4.39234, 11.5204, -8.03157, 0.74", "4.38691, 11.6327, -8.06504, 0.74", "4.26849, 12.915, -8.73067, 0.74", "4.19156, 13.6207, -9.25577, 1.11", "4.14931, 14.0435, -9.66885, 1.11", "4.10615, 14.6585, -10.3424, 1.11", "4.09009, 15.792, -11.5436, 1.25", "4.09128, 15.8335, -11.5858, 1.25", "4.19169, 16.851, -12.5666, 1.03", "4.36997, 17.9787, -13.5937, 0.52", "4.6225, 19.1364, -14.5637, 0.52", "4.8426, 19.9141, -15.1423, 0.81", "4.85985, 19.9631, -15.1701, 0.81", "5.09441, 20.5522, -15.4445, 1.18", "5.2205, 20.7938, -15.5045, 1.18", "5.41655, 21.0984, -15.506, 1.18", "5.45672, 21.1549, -15.5007, 1.18", "5.60104, 21.3699, -15.4859, 1.4", "5.67824, 21.5116, -15.4752, 1.4", "5.90415, 22.0403, -15.4324, 1.4", "6.08418, 22.5915, -15.3814, 0.88", "6.25889, 23.459, -15.2935, 0.52", "6.29539, 24.2604, -15.2866, 0.37", "6.22334, 25.1087, -15.3855, 0.37", "6.15339, 25.4866, -15.4674, 0.29", "5.96392, 26.158, -15.6817, 0.29", "5.83241, 26.551, -15.8701, 0.29", "5.42764, 27.8057, -16.8144, 1.33", "5.20771, 28.5053, -17.4302, 1.92", "5.16551, 28.6793, -17.6004, 2.21", "5.1463, 28.8128, -17.7357, 2.21", "5.12224, 29.5435, -18.4925, 2.5", "5.16207, 30.4989, -19.549, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "1.6115, 9.73122, -2.50048, 3.68", "1.6115, 9.73122, -2.50048, 3.68", "0.970905, 11.7045, -2.81767, 2.8", "0.927556, 11.8348, -2.84506, 2.8", "0.661266, 12.6284, -3.02318, 2.8", "0.541339, 12.9697, -3.10312, 2.8", "0.26527, 13.7377, -3.28896, 2.8", "-0.150932, 14.835, -3.57997, 3.02", "-0.733681, 16.2479, -4.01783, 3.02", "-0.756165, 16.2991, -4.03619, 3.02", "-1.2484, 17.3478, -4.44371, 3.02", "-1.27232, 17.3979, -4.46349, 3.02", "-1.82805, 18.5403, -4.92932, 2.87", "-2.34444, 19.6501, -5.32872, 2.87", "-2.36782, 19.7023, -5.3425, 2.87", "-2.85227, 20.8357, -5.57344, 2.73", "-3.35762, 22.0515, -5.75631, 2.58", "-3.38387, 22.1143, -5.76405, 2.58", "-4.10656, 23.8316, -5.91904, 2.36", "-4.83128, 25.5083, -6.03932, 2.06", "-5.49413, 26.9676, -6.13778, 2.06", "-5.92568, 27.9002, -6.19913, 2.65", "-6.69572, 29.5182, -6.29554, 2.73", "-7.3264, 30.8119, -6.37614, 2.95", "-7.91339, 31.9491, -6.46209, 3.17", "-8.45043, 32.9414, -6.55137, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.5085, -10.4416, 0.999524, 4.05", "-3.5085, -10.4416, 0.999524, 4.05", "-4.17673, -12.0703, 0.999524, 3.68", "-4.81564, -13.6276, 0.999524, 3.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.23086, 10.2806, -1.24848, 0.532211", "8.20573, 24.4316, -1.24848, 0.532211", "13.1806, 38.5826, -1.24848, 0.532211" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "5.16207, 30.4989, -19.549, 1.25", "4.79964, 31.3992, -20.3375, 1.25", "4.50244, 32.2832, -21.098, 1.77", "4.43842, 32.4976, -21.2827, 1.84", "4.22636, 33.6455, -22.4612, 0.22", "4.18745, 34.4366, -23.4304, 1.33", "4.19058, 34.4765, -23.4905, 1.33", "4.24296, 34.6624, -23.8339, 1.77", "4.26698, 34.7138, -23.939, 1.77", "4.75423, 35.4971, -25.7155, 1.18", "5.15705, 35.9945, -26.9819, 1.4", "5.72186, 36.6185, -28.8944, 0.29", "5.73717, 36.6355, -28.9498, 0.29", "6.17924, 37.1381, -30.6053, 1.55", "6.23022, 37.2062, -30.8137, 1.84", "6.24478, 37.2314, -30.8771, 1.84", "6.86668, 38.6281, -33.7588, 0.52", "6.88123, 38.6672, -33.8178, 0.52", "6.96269, 38.9214, -34.1281, 0.74", "7.48904, 40.7957, -36.0596, 1.47", "7.73243, 41.7145, -36.8378, 0.29", "7.96187, 42.6213, -37.4455, 1.69", "8.42006, 44.725, -38.5874, 0.15", "8.53552, 45.3663, -38.9289, 0.66", "8.5442, 45.4266, -38.9605, 0.66", "8.67301, 46.5917, -39.5909, 0.15", "8.73713, 47.4224, -40.0977, 1.69", "8.83875, 49.8666, -41.6662, 0.22", "8.8413, 50.4727, -42.0909, 0.59", "8.83414, 51.7777, -43.0676, 1.92", "8.80598, 53.8106, -44.6561, 0.15", "8.8033, 53.9182, -44.7444, 0.15", "8.80214, 54.4059, -45.1625, 0.37", "8.81549, 55.1555, -45.8431, 0.22", "8.84409, 55.9483, -46.6681, 1.11", "8.84493, 55.996, -46.722, 1.11", "8.8443, 56.3237, -47.1061, 1.25", "8.82949, 57.6599, -48.7307, 0.22", "8.80865, 58.5671, -49.8451, 0.96", "8.76099, 59.5749, -51.0168, 0.15", "8.71898, 60.4219, -51.9382, 1.18", "8.7082, 60.5872, -52.1035, 1.47", "8.61593, 61.8016, -53.1569, 0.22", "8.5791, 62.1581, -53.3941, 0.44", "8.50136, 62.8603, -53.7486, 0.15", "8.36361, 63.8214, -54.1307, 1.11", "8.2963, 64.2343, -54.2713, 1.47", "8.03982, 65.9816, -54.7661, 0.22", "7.94529, 66.6745, -54.9236, 0.74", "7.81027, 67.7343, -55.1552, 0.15", "7.71867, 68.5562, -55.3282, 1.11", "7.68113, 68.9077, -55.396, 1.55", "7.37439, 72.0329, -55.9654, 0.15", "7.3104, 72.7528, -56.0805, 0.66", "7.28623, 73.1033, -56.1383, 0.66", "7.18545, 75.1505, -56.4802, 0.15", "7.16133, 75.7984, -56.5821, 0.37", "7.15781, 75.8845, -56.5958, 0.37", "7.12947, 76.2467, -56.6506, 0.37" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "5.16207, 30.4989, -19.549, 0.37", "5.68842, 31.9216, -19.6838, 0.37", "6.06985, 33.1994, -19.8057, 0.37", "6.33393, 34.3322, -19.9121, 0.37", "6.34576, 34.4096, -19.9192, 0.37", "6.37825, 34.9605, -19.9669, 0.37", "6.37806, 35.0282, -19.9755, 0.37", "6.20902, 35.8326, -20.137, 0.66", "6.09782, 36.1172, -20.2075, 0.81", "5.91784, 36.5906, -20.3318, 0.81", "5.76595, 37.1024, -20.4578, 0.37", "5.59956, 37.9124, -20.6272, 0.29", "5.59119, 37.9797, -20.6395, 0.29", "5.5426, 38.8081, -20.7735, 0.29", "5.52195, 40.1455, -20.9549, 1.84", "5.53368, 40.6557, -21.0087, 2.36", "5.5953, 41.8113, -21.096, 1.55", "5.68204, 43.1398, -21.1534, 1.92", "5.72923, 43.6565, -21.172, 2.5", "5.83766, 44.4778, -21.2054, 1.99", "6.03614, 45.6585, -21.2524, 0.22", "6.16281, 46.4208, -21.2939, 0.22", "6.24529, 46.9554, -21.3257, 0.88", "6.30153, 47.4079, -21.3581, 0.59", "6.37916, 48.2394, -21.4263, 0.29", "6.43927, 49.1672, -21.5087, 0.29", "6.49035, 50.2501, -21.607, 0.29", "6.52888, 51.2012, -21.6974, 0.29", "6.57151, 52.221, -21.7902, 1.18", "6.60495, 52.831, -21.8338, 1.84", "6.65601, 53.442, -21.867, 1.4", "6.74358, 54.1057, -21.901, 0.88", "6.93542, 55.266, -21.959, 0.29", "7.11613, 56.274, -22.0039, 0.29", "7.4304, 57.9176, -22.0565, 2.14", "7.55688, 58.5841, -22.0773, 3.09", "7.67333, 59.2125, -22.0947, 3.46" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-8.45043, 32.9414, -6.55137, 1.62", "-8.84512, 34.8114, -6.94, 1.62", "-8.85182, 34.8794, -6.94947, 1.62", "-8.94613, 35.8375, -7.08284, 1.62", "-8.96637, 36.0431, -7.11146, 1.62", "-9.05786, 36.9725, -7.24084, 1.62", "-9.06385, 37.0333, -7.24931, 1.62", "-8.98412, 38.5305, -7.24931, 1.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-8.45043, 32.9414, -6.55137, 0.66", "-7.18808, 35.155, -5.59061, 0.66", "-6.71579, 35.8857, -5.45916, 0.59", "-6.25844, 36.5548, -5.40849, 1.03", "-6.1719, 36.6838, -5.40736, 1.03", "-5.98019, 36.994, -5.41741, 1.18", "-5.31502, 38.2357, -5.50999, 0.81", "-4.89234, 39.0837, -5.72822, 0.66", "-4.86288, 39.1542, -5.74802, 0.66", "-4.6032, 39.963, -5.91592, 0.66", "-4.37702, 40.8931, -6.03844, 0.88", "-4.1786, 42.161, -6.11265, 1.4", "-4.15369, 42.4842, -6.10694, 1.77", "-4.13295, 43.1923, -6.06028, 2.14", "-4.11875, 44.5598, -5.82782, 1.77", "-4.08489, 45.4458, -5.51766, 1.25", "-4.03235, 46.155, -5.15388, 1.03", "-3.94119, 46.7362, -4.73817, 0.81", "-3.77309, 47.4653, -4.10681, 0.81", "-3.39436, 48.5438, -2.95475, 0.59", "-2.85981, 49.5443, -1.65429, 0.59", "-2.83203, 49.5839, -1.59041, 0.59", "-2.4032, 50.0416, -0.668079, 1.77", "-2.37762, 50.0609, -0.617542, 1.77", "-2.0874, 50.1843, -0.131092, 1.92", "-2.04411, 50.1881, -0.0762192, 1.92" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-4.81564, -13.6276, 0.999524, 0.37", "-6.18051, -14.3183, 0.614511, 0.37", "-7.0009, -14.9134, 0.556358, 0.37", "-8.00728, -15.9809, 0.834917, 0.37", "-8.3518, -16.6011, 1.2122, 0.66", "-8.51243, -16.9939, 1.52086, 0.96", "-8.53263, -17.0413, 1.5711, 0.96", "-8.90144, -18.3828, 3.42048, 0.59", "-8.90854, -18.4125, 3.47172, 0.59", "-9.03778, -18.7497, 4.24492, 1.25", "-9.10407, -18.8312, 4.47102, 1.25", "-9.67797, -19.2718, 5.72665, 0.59", "-9.96921, -19.4628, 6.17947, 0.96", "-10.0204, -19.4916, 6.23428, 0.96", "-10.4653, -19.8641, 6.80366, 0.96", "-10.7968, -20.2946, 7.3205, 0.59", "-11.0024, -20.8158, 7.83064, 0.29", "-11.0824, -21.4576, 8.37437, 0.29", "-11.1247, -22.0357, 8.89035, 1.11", "-11.2092, -23.1558, 9.93631, 0.22", "-11.2348, -23.4312, 10.2025, 1.25", "-11.3359, -23.8661, 10.6557, 1.55", "-11.3776, -23.9469, 10.7468, 1.55", "-12.1527, -24.6504, 11.6226, 0.59", "-12.4492, -24.8498, 11.853, 0.74", "-12.9558, -25.137, 12.1588, 0.74", "-13.6678, -25.5399, 12.5716, 0.59", "-13.7714, -25.6133, 12.6355, 0.59", "-14.3823, -26.3436, 13.115, 0.59", "-14.522, -26.8296, 13.3851, 1.11", "-14.5659, -27.2122, 13.6238, 1.18", "-14.5707, -27.2963, 13.6798, 1.18", "-14.6592, -28.2103, 14.3553, 0.59", "-14.8141, -28.9396, 14.9558, 0.59", "-15.1616, -29.661, 15.654, 0.44", "-15.5599, -30.027, 16.1542, 0.74", "-15.9669, -30.1987, 16.5134, 0.88", "-16.8769, -30.3857, 17.1569, 0.44", "-17.3837, -30.4145, 17.4295, 0.44", "-18.011, -30.422, 17.7018, 0.44", "-18.0683, -30.4243, 17.7193, 0.44", "-18.8011, -30.5242, 17.8891, 0.88", "-18.8794, -30.5432, 17.9061, 0.88", "-19.751, -30.8187, 18.0475, 1.18", "-20.1697, -30.9771, 18.1046, 1.11", "-20.8192, -31.2417, 18.1719, 0.59", "-21.4302, -31.506, 18.2138, 0.44", "-21.4846, -31.5307, 18.2149, 0.44", "-22.3059, -31.9756, 18.2311, 0.66", "-22.851, -32.3656, 18.244, 0.37", "-23.174, -32.6982, 18.2598, 1.03", "-23.3396, -32.9848, 18.276, 1.03", "-23.377, -33.106, 18.2829, 1.03", "-23.6141, -34.2117, 18.3499, 0.37", "-23.6641, -34.8556, 18.3969, 0.44", "-23.6586, -35.3606, 18.44, 0.74", "-23.6285, -35.7746, 18.48, 0.88", "-23.554, -36.5314, 18.5651, 0.88" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-4.81564, -13.6276, 0.999524, 3.09", "-4.82808, -13.6748, 0.997704, 3.09", "-5.17403, -15.0337, 0.975215, 2.8", "-5.63239, -16.852, 0.951142, 2.43", "-6.0017, -18.317, 0.931746, 2.43", "-6.01841, -18.3832, 0.930868, 2.43", "-6.5471, -20.4805, 0.903101, 2.43", "-6.82956, -21.6197, 0.897138, 2.87", "-7.05654, -22.553, 0.911928, 3.02" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "13.1806, 38.5826, -1.24848, 0.15", "18.1555, 52.7336, -1.24848, 0.15", "23.1303, 66.8846, -1.24848, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "7.67333, 59.2125, -22.0947, 0.29", "8.61202, 60.9165, -22.4734, 0.29", "9.03889, 61.5513, -22.6704, 0.29", "9.49088, 62.208, -22.9024, 0.37", "9.53396, 62.2704, -22.9259, 0.37", "9.85036, 62.7609, -23.1118, 0.37", "9.8798, 62.8086, -23.1302, 0.37", "10.2652, 63.5475, -23.4764, 0.22", "10.4596, 63.9727, -23.7115, 0.44", "10.4749, 64.0318, -23.7488, 0.44", "10.566, 64.5283, -24.0626, 0.66", "10.5759, 64.5786, -24.0916, 0.66", "10.7339, 65.1813, -24.4465, 0.96", "10.7547, 65.2476, -24.5052, 0.96", "11.0359, 66.0977, -25.3405, 0.22", "11.054, 66.1536, -25.3969, 0.22", "11.3207, 66.9466, -26.1896, 1.92", "11.6063, 67.6793, -26.9238, 2.36", "12.6291, 69.9935, -29.2438, 0.44", "12.791, 70.3387, -29.5866, 0.44", "12.9118, 70.5821, -29.8238, 0.44", "13.1717, 71.113, -30.3106, 0.22", "13.4991, 71.7949, -30.8811, 0.22", "13.8882, 72.5611, -31.4298, 0.74", "13.924, 72.6226, -31.4689, 0.74", "14.0291, 72.8, -31.5989, 0.74", "14.5662, 73.7114, -32.3525, 0.22", "14.9903, 74.5034, -33.0433, 1.33", "15.3167, 75.1876, -33.6349, 1.77", "15.9034, 76.5023, -34.7575, 0.22", "16.1525, 77.06, -35.2198, 0.22", "16.4895, 77.8062, -35.8142, 0.22", "16.8804, 78.6491, -36.4599, 1.92", "17.0334, 78.9847, -36.696, 2.28", "17.9974, 81.0214, -37.9608, 0.22", "18.3801, 81.7818, -38.3807, 0.22", "18.6592, 82.2831, -38.6395, 0.88", "18.7352, 82.4013, -38.6937, 0.88", "18.8238, 82.5161, -38.7425, 0.88", "19.7593, 83.5717, -39.1952, 0.22", "20.4264, 84.2405, -39.4894, 0.22", "20.5097, 84.3288, -39.5313, 0.22", "21.2119, 85.0937, -39.9123, 1.33", "21.4976, 85.4187, -40.0731, 2.06", "21.9391, 85.9465, -40.3513, 2.06", "22.976, 87.27, -41.0637, 0.15", "23.2507, 87.6285, -41.2621, 0.74", "23.2899, 87.6792, -41.2896, 0.74", "23.4845, 87.9426, -41.43, 0.74", "24.1078, 88.8005, -41.8502, 0.22", "24.4386, 89.2549, -42.0429, 0.59", "24.478, 89.3084, -42.0635, 0.59", "25.1647, 90.2131, -42.4904, 0.15", "25.7105, 90.9667, -42.8626, 1.55", "25.8475, 91.1641, -42.9625, 1.92", "25.8852, 91.2191, -42.9888, 1.92", "26.0679, 91.5074, -43.1304, 1.92", "27.0303, 93.0723, -43.8857, 0.22", "27.2916, 93.4452, -44.0763, 0.52", "27.3315, 93.4959, -44.1028, 0.52", "27.9417, 94.1414, -44.4418, 0.22", "28.4764, 94.6544, -44.7349, 1.55", "28.8745, 94.9337, -44.9368, 1.55", "30.3237, 95.7701, -45.6206, 0.15", "30.3746, 95.7974, -45.6457, 0.15", "31.3801, 96.3045, -46.1466, 0.15", "32.8716, 96.9977, -46.895, 2.21", "35.0933, 97.959, -47.969, 0.22", "35.3416, 98.0671, -48.088, 0.37", "36.3628, 98.5381, -48.5448, 0.22", "36.7276, 98.7205, -48.6971, 0.59", "36.9729, 98.8547, -48.7899, 0.59", "37.8005, 99.3596, -49.0718, 0.22", "38.117, 99.596, -49.1964, 0.66", "38.9879, 100.236, -49.5789, 0.15", "39.6186, 100.709, -49.8756, 1.77", "39.7738, 100.827, -49.958, 1.77", "41.2325, 101.912, -50.7878, 0.22", "41.7921, 102.279, -51.195, 0.74", "42.3986, 102.627, -51.7121, 0.15", "42.7528, 102.811, -52.0695, 0.74", "43.3321, 103.121, -52.7058, 0.15", "43.8557, 103.417, -53.3073, 2.14", "45.5151, 104.483, -55.3664, 0.37", "46.1854, 105.013, -56.253, 1.55", "47.416, 106.148, -57.9784, 0.15", "47.9373, 106.717, -58.7555, 0.15", "48.1827, 107.033, -59.1452, 1.4", "48.9597, 108.189, -60.5296, 0.22", "49.3441, 108.784, -61.2478, 1.33", "49.4127, 108.871, -61.3684, 1.62", "50.447, 109.805, -62.9281, 0.15", "51.1491, 110.272, -63.8903, 1.18", "52.3618, 110.895, -65.4146, 0.88", "53.5153, 111.331, -66.6974, 0.44", "54.5959, 111.677, -67.7798, 1.77", "55.7502, 112.007, -68.7649, 0.22", "55.8179, 112.022, -68.8092, 0.22", "56.2529, 112.135, -69.0083, 0.66", "57.2287, 112.438, -69.253, 0.15", "57.9159, 112.745, -69.3319, 1.11", "58.3372, 113.005, -69.3648, 1.11", "58.4019, 113.052, -69.3688, 1.11", "59.1287, 113.59, -69.4201, 0.22", "59.4641, 113.831, -69.4494, 0.59", "60.3193, 114.437, -69.534, 0.22", "61.0652, 114.955, -69.6306, 1.4", "61.1307, 115.0, -69.6389, 1.4", "61.24, 115.073, -69.6524, 1.55", "62.635, 115.958, -69.8107, 0.22", "62.695, 115.994, -69.8187, 0.22", "62.9248, 116.126, -69.8514, 0.22", "63.4096, 116.39, -69.9434, 0.81", "63.4698, 116.424, -69.9571, 0.81", "63.7657, 116.602, -70.0432, 0.81", "65.1792, 117.487, -70.5081, 0.22", "65.663, 117.785, -70.6721, 0.22", "66.7265, 118.427, -71.0389, 1.55", "66.7828, 118.463, -71.0608, 1.55", "68.1702, 119.373, -71.6331, 0.22", "68.6983, 119.725, -71.8637, 0.22", "69.6204, 120.346, -72.2754, 1.62", "69.7955, 120.464, -72.3507, 1.99", "71.6087, 121.702, -73.0911, 0.22", "71.6717, 121.744, -73.1165, 0.22", "72.3543, 122.202, -73.3841, 0.74", "72.7689, 122.485, -73.5497, 0.74", "74.8276, 123.889, -74.3534, 0.15", "75.5916, 124.399, -74.6349, 1.55", "75.6511, 124.436, -74.6531, 1.55", "75.9888, 124.651, -74.7568, 1.55" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "7.67333, 59.2125, -22.0947, 0.29", "7.24058, 61.258, -22.3402, 0.29", "7.14351, 61.7511, -22.4025, 0.44", "6.94115, 62.753, -22.5198, 0.22", "6.67573, 64.0776, -22.6682, 1.55", "6.59189, 64.5067, -22.712, 2.21", "6.47132, 65.1326, -22.7704, 1.84", "6.34703, 65.9254, -22.8361, 0.96", "6.26526, 66.4376, -22.8634, 0.44", "6.25178, 66.5151, -22.8642, 0.44", "6.09625, 67.5159, -22.866, 0.29", "6.08153, 67.6578, -22.8658, 0.29", "6.0396, 68.3814, -22.8657, 0.29", "6.01592, 69.0962, -22.8674, 0.81", "6.01112, 69.4516, -22.8833, 1.11", "5.99318, 70.1703, -22.947, 0.88", "5.97255, 71.6381, -23.1183, 0.22", "5.96845, 72.3554, -23.2251, 0.81", "5.96964, 72.924, -23.3287, 0.81", "5.97069, 74.6287, -23.6722, 0.22", "5.96125, 75.8805, -23.9417, 1.84", "5.94617, 76.5343, -24.0906, 2.21", "5.92173, 77.1047, -24.225, 2.21", "5.84566, 79.2896, -24.703, 0.22", "5.83011, 80.0504, -24.8529, 0.81", "5.82759, 80.4102, -24.9113, 0.88", "5.82494, 80.7746, -24.9603, 0.66", "5.79635, 81.8578, -25.0867, 0.22", "5.74493, 83.3705, -25.2262, 1.84", "5.73882, 83.8328, -25.26, 2.21", "5.7428, 84.2952, -25.2897, 2.21", "5.79739, 86.2988, -25.4015, 0.22", "5.82765, 87.0124, -25.4399, 0.88", "5.83822, 87.2299, -25.4507, 0.88", "5.91267, 88.7032, -25.5261, 0.22", "5.98826, 90.0043, -25.6291, 0.22", "6.04095, 90.6877, -25.6963, 1.33", "6.09926, 91.226, -25.7585, 1.62", "6.12178, 91.4336, -25.7859, 1.62", "6.12942, 91.5507, -25.8067, 1.62", "6.1651, 93.4577, -26.2043, 0.22", "6.16072, 94.8576, -26.5188, 0.22", "6.13848, 95.8203, -26.738, 1.4", "6.12508, 96.3254, -26.8496, 1.69", "6.0606, 98.4646, -27.3146, 0.22", "6.02857, 99.1867, -27.4508, 0.96", "6.02375, 99.2549, -27.4601, 0.96", "5.99401, 99.5501, -27.4923, 0.81", "5.83062, 100.918, -27.5785, 0.22", "5.81258, 101.081, -27.5808, 0.22", "5.72484, 102.034, -27.5611, 0.22", "5.6212, 103.163, -27.5503, 1.69", "5.58784, 103.533, -27.5504, 2.43", "5.51622, 104.313, -27.5564, 2.36", "5.30973, 106.826, -27.592, 0.22", "5.26181, 107.788, -27.6333, 0.22", "5.25905, 107.937, -27.6444, 0.22", "5.26846, 109.163, -27.7522, 0.22", "5.29386, 110.089, -27.8454, 1.11", "5.32702, 110.647, -27.9087, 1.4", "5.47648, 112.233, -28.1118, 0.22", "5.48312, 112.294, -28.1196, 0.22", "5.53841, 112.714, -28.1641, 0.22", "5.65642, 113.592, -28.2302, 1.55", "5.70985, 114.044, -28.2485, 1.77", "5.7176, 114.113, -28.2491, 1.77", "5.7553, 114.423, -28.242, 1.77", "5.92569, 115.755, -28.2137, 0.22", "6.02891, 116.675, -28.1944, 0.66", "6.07248, 117.171, -28.1836, 0.66", "6.1687, 118.804, -28.1596, 0.22", "6.17343, 118.953, -28.1574, 0.22", "6.18828, 120.528, -28.1271, 0.22", "6.15734, 121.602, -28.0867, 1.11", "6.11669, 122.246, -28.0438, 1.99", "6.05431, 122.797, -27.992, 1.55", "5.81514, 124.148, -27.8186, 0.22", "5.77825, 124.328, -27.7923, 0.22", "5.50422, 125.429, -27.5994, 0.22", "5.35797, 126.061, -27.4724, 0.88", "5.31553, 126.258, -27.4323, 1.18", "5.30494, 126.324, -27.414, 1.18", "5.24918, 126.942, -27.2287, 0.66", "5.2278, 127.289, -27.1274, 0.37", "5.16007, 128.196, -26.8761, 0.22", "5.08677, 128.866, -26.695, 0.59", "4.93529, 130.064, -26.4635, 0.52", "4.84122, 130.733, -26.3617, 0.66", "4.76952, 131.242, -26.2996, 0.22", "4.65421, 132.016, -26.2316, 1.47", "4.5967, 132.388, -26.2164, 2.14", "4.26659, 134.642, -26.1965, 0.22", "4.25852, 134.703, -26.1985, 0.22", "4.20066, 135.409, -26.2074, 1.11", "4.198, 135.558, -26.2096, 1.47", "4.20063, 135.663, -26.211, 1.47", "4.21697, 136.312, -26.2271, 0.81", "4.22502, 136.848, -26.2554, 0.29", "4.24736, 138.439, -26.3737, 0.22", "4.25161, 139.175, -26.4437, 0.96", "4.25319, 139.314, -26.4576, 0.96", "4.25563, 139.462, -26.4708, 0.96", "4.29419, 140.612, -26.556, 0.22", "4.29785, 140.68, -26.5598, 0.22", "4.3534, 141.384, -26.5825, 0.81", "4.38249, 141.74, -26.5904, 0.81", "4.50944, 143.404, -26.6062, 0.15", "4.57576, 144.533, -26.623, 1.18", "4.59023, 144.849, -26.6277, 1.47", "4.59353, 144.908, -26.6328, 1.47", "4.61349, 145.193, -26.6804, 1.47", "4.72337, 146.741, -27.0357, 0.22", "4.79511, 147.608, -27.2901, 1.11", "4.82719, 147.975, -27.4118, 1.47", "5.04478, 149.989, -28.1888, 0.15", "5.14575, 150.774, -28.521, 0.81", "5.15541, 150.836, -28.5498, 0.81", "5.22163, 151.194, -28.7307, 0.81", "5.23213, 151.246, -28.7556, 0.81", "5.42729, 152.491, -29.2844, 0.22", "5.47222, 152.906, -29.4248, 0.37", "5.52293, 153.548, -29.6169, 0.22", "5.56698, 154.342, -29.834, 1.18", "5.58072, 154.815, -29.9532, 1.47", "5.60198, 156.613, -30.3695, 0.22", "5.59715, 157.407, -30.5279, 1.03", "5.59443, 157.682, -30.5823, 1.03", "5.5903, 159.44, -30.9486, 0.22", "5.59344, 160.075, -31.0793, 0.22", "5.59442, 160.141, -31.0929, 0.22", "5.62549, 160.944, -31.2145, 0.81", "5.65151, 161.439, -31.2757, 0.81", "5.72627, 162.908, -31.4106, 0.22", "5.76953, 163.914, -31.4331, 1.11", "5.77652, 164.13, -31.4291, 1.11", "5.80417, 165.939, -31.3115, 0.22", "5.8033, 166.738, -31.2291, 0.59", "5.77873, 168.026, -31.0513, 0.22", "5.73013, 169.118, -30.8572, 1.18", "5.70828, 169.539, -30.7787, 1.62", "5.60358, 171.135, -30.4565, 0.22", "5.55833, 171.629, -30.3501, 0.22", "5.50011, 172.179, -30.2232, 0.59", "5.46928, 172.457, -30.1573, 0.59", "5.45997, 172.535, -30.1409, 0.59", "5.34883, 173.408, -29.9431, 0.22", "5.28885, 173.885, -29.817, 0.52", "5.27492, 174.028, -29.7752, 0.52", "5.27095, 174.094, -29.7546, 0.52", "5.27369, 175.267, -29.4466, 0.22", "5.30974, 176.17, -29.25, 1.11", "5.36003, 176.596, -29.1841, 1.47", "5.38358, 176.732, -29.1645, 1.47", "5.48033, 177.209, -29.1035, 1.47", "5.827, 178.693, -28.9389, 0.22", "5.84231, 178.749, -28.9344, 0.22", "6.1379, 179.853, -28.8637, 0.22", "6.36925, 180.797, -28.8164, 1.11", "6.46686, 181.23, -28.7865, 1.55", "6.55742, 181.651, -28.7521, 1.55", "6.88346, 183.109, -28.6062, 0.22", "7.00757, 183.659, -28.5461, 0.74", "7.05406, 183.872, -28.5181, 0.74", "7.46509, 185.714, -28.257, 0.22", "7.58499, 186.242, -28.174, 0.74", "7.93403, 187.817, -27.8448, 0.22", "7.97161, 187.983, -27.8017, 0.22", "8.1856, 188.898, -27.5516, 0.74", "8.20997, 189.005, -27.5203, 0.74", "8.33197, 189.572, -27.3441, 1.03", "8.73009, 191.505, -26.7511, 0.15", "8.74246, 191.573, -26.7319, 0.15", "8.95778, 192.761, -26.443, 0.15", "9.06243, 193.341, -26.3218, 1.03", "9.11741, 193.657, -26.2723, 1.03", "9.25663, 194.607, -26.1832, 0.15", "9.34827, 195.381, -26.1766, 1.11", "9.38208, 195.76, -26.1802, 1.4", "9.38502, 195.819, -26.1822, 1.4", "9.41279, 197.226, -26.273, 0.22", "9.39591, 197.954, -26.3237, 0.59", "9.39176, 198.015, -26.3282, 0.59", "9.36865, 198.23, -26.3415, 0.59", "9.25816, 199.1, -26.3949, 0.22", "9.1686, 199.73, -26.434, 1.18", "9.05615, 200.364, -26.4752, 1.84", "8.98523, 200.723, -26.5033, 1.47", "8.55818, 202.527, -26.6564, 0.22", "8.36969, 203.207, -26.7204, 0.22", "8.35093, 203.262, -26.7262, 0.22", "8.09087, 203.906, -26.8163, 0.81", "7.88672, 204.38, -26.8951, 1.62", "7.62644, 204.95, -27.0004, 2.28", "7.52829, 205.164, -27.0425, 2.5", "7.25613, 205.806, -27.1584, 2.14", "6.58342, 207.575, -27.4613, 0.22", "6.38789, 208.172, -27.5602, 0.59", "6.36846, 208.249, -27.5716, 0.59", "6.22557, 209.005, -27.6664, 0.22", "6.14776, 209.575, -27.7151, 0.81", "6.13942, 209.666, -27.7195, 0.81", "6.11346, 210.028, -27.7183, 0.81", "6.00761, 211.139, -27.703, 0.22", "5.94202, 211.78, -27.6918, 0.44", "5.76307, 213.329, -27.6552, 0.15", "5.69795, 213.901, -27.6372, 0.15", "5.64003, 214.37, -27.6205, 0.59", "5.6003, 214.663, -27.6073, 0.59" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-8.98412, 38.5305, -7.24931, 1.55", "-8.59343, 40.3573, -8.95773, 1.55", "-8.57322, 40.447, -9.03198, 1.55", "-8.28156, 41.6589, -9.87001, 1.47", "-8.26693, 41.7172, -9.9034, 1.47", "-8.05659, 42.5323, -10.3247, 1.25", "-7.70905, 43.8824, -10.9208, 1.25", "-7.66818, 44.0431, -10.9613, 1.25", "-7.3988, 45.0453, -11.1632, 0.81", "-7.094, 46.179, -11.3266, 1.18", "-7.06594, 46.2886, -11.3399, 1.18", "-6.75252, 47.6153, -11.4711, 1.84", "-6.54555, 48.616, -11.552, 2.14", "-6.3644, 49.6232, -11.6337, 2.14", "-6.21241, 50.7792, -11.7401, 2.14", "-6.20851, 50.8373, -11.7455, 2.14", "-6.20276, 51.5128, -11.8192, 1.77", "-6.26613, 52.7652, -11.9753, 1.77", "-6.37683, 53.6201, -12.0852, 1.47", "-6.6094, 54.6978, -12.2143, 1.25", "-6.93884, 55.7983, -12.3594, 1.62", "-7.22909, 56.5916, -12.473, 1.84", "-7.25739, 56.6562, -12.4832, 1.84", "-7.74588, 57.5859, -12.6672, 1.99", "-8.309, 58.6249, -12.8915, 1.69", "-8.79592, 59.6094, -13.1037, 1.47", "-9.06367, 60.3165, -13.2942, 1.33", "-9.07825, 60.371, -13.3107, 1.33", "-9.19195, 61.3344, -13.6411, 1.11", "-9.11669, 62.3231, -14.0429, 0.88", "-8.89174, 63.1285, -14.4038, 0.96", "-8.40832, 64.3398, -14.9248, 0.81", "-8.37005, 64.432, -14.9607, 0.81", "-8.15091, 65.0091, -15.1633, 0.66", "-8.09653, 65.1693, -15.2129, 0.66", "-7.96625, 66.11, -15.4544, 0.66", "-8.0154, 66.8811, -15.5909, 0.96", "-8.21733, 67.7188, -15.6733, 1.69", "-8.34093, 68.0991, -15.7059, 1.99", "-8.50452, 68.4871, -15.7422, 1.99", "-8.91354, 69.3552, -15.8337, 1.84", "-8.94596, 69.4161, -15.8408, 1.84", "-9.52091, 70.4676, -15.9921, 2.06", "-9.71549, 70.8441, -16.0524, 2.21", "-10.0258, 71.511, -16.1585, 2.14", "-10.4486, 72.5053, -16.3103, 1.18", "-10.8974, 73.676, -16.4762, 1.03", "-11.2091, 74.5596, -16.5846, 1.03", "-11.4741, 75.382, -16.6699, 1.33", "-11.7547, 76.3445, -16.7516, 2.14", "-11.9267, 77.0485, -16.7918, 2.65", "-12.0813, 77.8158, -16.8328, 2.65", "-12.2252, 78.7386, -16.8884, 2.65", "-12.2408, 78.8676, -16.8957, 2.65", "-12.3011, 79.5086, -16.9329, 2.36", "-12.3281, 80.2505, -16.986, 2.06", "-12.3307, 81.2011, -17.0612, 1.4", "-12.3026, 82.2265, -17.1451, 0.81", "-12.1945, 83.8857, -17.2775, 0.66", "-12.0513, 85.2724, -17.3754, 0.66", "-11.8395, 86.7691, -17.4676, 1.11", "-11.8271, 86.839, -17.4718, 1.11", "-11.6275, 87.7543, -17.5199, 1.55", "-11.3563, 88.8126, -17.5732, 1.84", "-11.0165, 90.0137, -17.6382, 2.28", "-10.8572, 90.5716, -17.6677, 2.58", "-10.6656, 91.2885, -17.7218, 2.58", "-10.5415, 91.8095, -17.7743, 2.58", "-10.3896, 92.6541, -17.8945, 2.36", "-10.3065, 93.3827, -18.0311, 1.92", "-10.302, 93.4614, -18.0477, 1.92", "-10.2635, 94.6228, -18.2908, 0.88", "-10.2503, 95.7554, -18.5124, 0.66", "-10.2496, 96.9302, -18.7493, 0.66", "-10.2499, 97.6895, -18.9148, 0.81", "-10.2339, 98.5215, -19.1058, 0.74", "-10.2033, 99.3623, -19.3035, 0.59", "-10.168, 100.205, -19.4918, 1.25", "-10.1098, 101.008, -19.6844, 1.84", "-9.98211, 102.134, -19.9548, 2.5", "-9.88555, 102.81, -20.127, 2.65", "-9.86611, 102.92, -20.1616, 2.65" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-8.98412, 38.5305, -7.24931, 0.52", "-8.62803, 39.9037, -7.18887, 0.52", "-8.61499, 39.9713, -7.18413, 0.52", "-8.5729, 40.6367, -7.1252, 0.52", "-8.66323, 41.8779, -7.00631, 0.52", "-8.67334, 41.9451, -6.99981, 0.52", "-8.74716, 42.2495, -6.97124, 0.66", "-8.79778, 42.3398, -6.9497, 0.66", "-9.1541, 42.833, -6.83453, 0.52", "-9.47187, 43.1894, -6.74815, 0.66", "-9.52712, 43.2469, -6.73175, 0.66", "-9.86531, 43.6073, -6.60723, 0.59", "-10.3833, 44.1712, -6.38848, 0.29", "-10.8122, 44.665, -6.17117, 0.29", "-10.8886, 44.757, -6.12479, 0.29", "-11.3816, 45.3851, -5.78354, 0.59", "-11.7141, 45.8109, -5.56184, 0.81", "-11.7568, 45.863, -5.53676, 0.81", "-12.0643, 46.1971, -5.40047, 0.81", "-12.1076, 46.2352, -5.38611, 0.81", "-12.5476, 46.5637, -5.27505, 0.81", "-13.3188, 47.1276, -5.10983, 0.37", "-13.8445, 47.5519, -4.95372, 0.37", "-14.2631, 47.9225, -4.79145, 0.59", "-14.6076, 48.2636, -4.61909, 0.81", "-15.1543, 48.8552, -4.27743, 0.29", "-15.6767, 49.4648, -3.89325, 0.52", "-16.2331, 50.1811, -3.40729, 1.33", "-16.4755, 50.518, -3.17053, 1.55", "-17.1734, 51.5413, -2.43384, 0.29", "-17.7237, 52.3534, -1.8487, 1.55", "-17.8592, 52.5373, -1.72813, 1.84", "-17.935, 52.6223, -1.68406, 1.84", "-18.1631, 52.8464, -1.62509, 1.84", "-18.2057, 52.8875, -1.62396, 1.84", "-18.5359, 53.2014, -1.69323, 1.62", "-19.206, 53.825, -1.91998, 0.37", "-19.7605, 54.36, -2.15402, 0.29", "-20.1757, 54.8025, -2.37892, 0.59", "-20.4404, 55.1015, -2.55692, 0.59", "-20.6255, 55.3175, -2.69394, 0.59", "-20.8684, 55.6171, -2.89539, 0.52", "-21.315, 56.2602, -3.2949, 0.29", "-21.6095, 56.7463, -3.59348, 0.74", "-21.9555, 57.3259, -3.91999, 0.66", "-22.148, 57.6425, -4.08114, 0.88", "-22.4917, 58.196, -4.33174, 0.66", "-23.4388, 59.6496, -4.899, 2.14", "-23.8099, 60.1787, -5.07335, 2.14", "-24.5921, 61.2365, -5.37397, 0.22", "-25.0154, 61.7925, -5.50412, 0.22", "-25.4684, 62.3778, -5.61819, 0.22", "-25.9199, 62.9295, -5.67197, 0.88", "-26.1601, 63.2013, -5.66727, 1.03", "-26.4612, 63.5266, -5.63006, 0.74", "-27.1903, 64.3145, -5.49156, 0.22", "-27.6311, 64.7849, -5.38173, 0.22", "-28.2201, 65.4205, -5.23506, 0.22", "-28.2988, 65.5068, -5.21592, 0.22", "-28.8557, 66.146, -5.08477, 0.22", "-29.6806, 67.0838, -4.91211, 1.69", "-29.9567, 67.4292, -4.86824, 2.21", "-30.4043, 68.0227, -4.82294, 2.21", "-30.4365, 68.072, -4.81987, 2.21", "-31.0675, 69.1841, -4.73325, 0.22", "-31.4271, 69.9221, -4.66451, 0.22", "-31.988, 71.1647, -4.48192, 0.22", "-32.0294, 71.2587, -4.46515, 0.22", "-32.426, 72.1418, -4.26785, 1.11", "-32.7173, 72.7914, -4.12852, 1.11", "-32.975, 73.3723, -3.98857, 0.59", "-33.4661, 74.4682, -3.70511, 1.69", "-33.6007, 74.7505, -3.6297, 1.77", "-34.4834, 76.5624, -3.1821, 0.22", "-35.2119, 78.0174, -2.8119, 0.22", "-35.4871, 78.5694, -2.65673, 1.03", "-35.6933, 78.9867, -2.53255, 1.03", "-35.8778, 79.3591, -2.41816, 0.81", "-36.4232, 80.3437, -2.04255, 0.22", "-37.0993, 81.4194, -1.55355, 1.11", "-37.2377, 81.6136, -1.45874, 1.62", "-37.4352, 81.8775, -1.31102, 1.62", "-37.4676, 81.919, -1.28393, 1.62", "-38.6617, 83.4051, -0.18621, 0.22", "-39.1056, 83.9442, 0.240017, 0.81", "-39.305, 84.183, 0.428918, 0.81", "-40.2612, 85.3347, 1.35907, 0.22", "-40.2976, 85.38, 1.3967, 0.22", "-40.893, 86.1564, 2.05921, 1.18", "-41.1378, 86.5425, 2.43059, 1.55", "-45.7834, 95.1539, 3.06955, 1.55", "-50.4832, 103.669, 4.34492, 1.55", "-56.5061, 111.308, 5.87853, 1.55", "-62.3383, 118.761, 8.62476, 1.55", "-68.7306, 124.84, 13.1269, 1.55", "-74.8528, 131.432, 17.2264, 1.55", "-78.8764, 138.997, 22.0852, 1.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-2.04411, 50.1881, -0.0762192, 0.88", "-2.58321, 50.6776, 1.94948, 0.88", "-2.61693, 50.6962, 2.07358, 0.88", "-3.04519, 50.7864, 3.49208, 0.88", "-3.06329, 50.7875, 3.54927, 0.88", "-3.60094, 50.8459, 6.71451, 0.59", "-3.61038, 50.8484, 6.78382, 0.59", "-3.71298, 50.8796, 7.80414, 1.18", "-3.82919, 50.9457, 9.19554, 1.18", "-3.83208, 50.9498, 9.25532, 1.18", "-3.86199, 51.7079, 14.2577, 0.22", "-3.82936, 51.8667, 14.8308, 0.29", "-3.73829, 52.2496, 15.9219, 1.11", "-3.73071, 52.2792, 15.9876, 1.11", "-3.61815, 52.6458, 16.694, 1.11", "-3.4079, 53.4142, 17.978, 0.22", "-3.29733, 54.0471, 18.5746, 0.59", "-3.2857, 54.0887, 18.6151, 0.59", "-3.18994, 54.3445, 18.85, 1.11", "-4.72737, 56.6958, 28.4323, 1.11", "-8.66331, 59.176, 37.2662, 1.11", "-10.4976, 62.7115, 46.4033, 1.11", "-13.3165, 66.4738, 55.1876, 1.11", "-15.9853, 70.7297, 63.7797, 1.11", "-18.3252, 75.5021, 72.1801, 1.11", "-21.1811, 80.6068, 80.207, 1.11", "-23.5226, 84.8643, 88.8932, 1.11", "-24.7188, 89.0791, 97.8309, 1.11", "-26.2013, 93.1673, 106.788, 1.11", "-27.0224, 98.4381, 115.161, 1.11", "-28.0988, 104.141, 123.2, 1.11" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-2.04411, 50.1881, -0.0762192, 0.52", "-1.73786, 51.439, 0.64964, 0.52", "-1.5768, 52.525, 1.22036, 0.52", "-1.57628, 52.5787, 1.24427, 0.44", "-1.65031, 53.4883, 1.57698, 0.44", "-1.65937, 53.5636, 1.59849, 0.44", "-1.74824, 54.2744, 1.75832, 0.66", "-1.76359, 54.3408, 1.76951, 0.66", "-1.93516, 55.0217, 1.89598, 0.66", "-2.06243, 55.5769, 2.03863, 0.44", "-2.21803, 56.3882, 2.34835, 0.44", "-2.33093, 57.1106, 2.68649, 0.96", "-2.40716, 58.1401, 3.22955, 0.81", "-2.40819, 58.2942, 3.31564, 0.81", "-2.29898, 59.3516, 3.93737, 0.66", "-2.08585, 60.3246, 4.57657, 0.44", "-2.04352, 60.4434, 4.65869, 0.44", "-1.68413, 61.1807, 5.16421, 0.29", "-1.44208, 61.5531, 5.41819, 0.29", "-1.02529, 62.1299, 5.80814, 1.11", "-0.40974, 62.878, 6.31883, 1.47", "-0.0631508, 63.3044, 6.62254, 1.47", "-0.0325762, 63.3443, 6.65405, 1.47", "0.633144, 64.2506, 7.45666, 0.88", "1.10756, 64.9299, 8.09202, 0.52", "1.13323, 64.9689, 8.12868, 0.52", "1.50659, 65.5433, 8.63861, 0.74", "1.53315, 65.5829, 8.67399, 0.74", "1.81244, 65.9641, 8.98088, 0.74", "1.84623, 66.0044, 9.0083, 0.74", "2.15452, 66.3389, 9.19815, 0.74", "2.86987, 67.1546, 9.56015, 0.37", "3.24273, 67.622, 9.71556, 0.37", "3.6958, 68.2841, 9.88633, 0.52", "4.01719, 68.8646, 10.02, 0.37", "4.43893, 69.8264, 10.217, 0.74", "4.6502, 70.5557, 10.3421, 1.11", "4.76081, 71.2565, 10.4365, 0.96", "4.78099, 72.1376, 10.5525, 0.44", "4.68394, 73.1714, 10.691, 0.44", "4.60338, 73.6704, 10.7644, 0.29", "4.46126, 74.4216, 10.8806, 0.29", "4.45041, 74.489, 10.8907, 0.29", "4.37496, 75.2049, 10.9935, 0.37", "4.34608, 76.0931, 11.1022, 0.52", "4.39434, 76.913, 11.1733, 1.11", "4.47087, 77.4794, 11.2245, 1.69", "4.53826, 77.8894, 11.259, 1.77", "4.59665, 78.3677, 11.2945, 1.69", "4.63834, 78.8499, 11.3256, 1.47", "4.63773, 79.1737, 11.3405, 1.47", "4.62771, 79.244, 11.3415, 1.47", "4.32085, 80.4779, 11.3548, 0.29", "4.14495, 81.0326, 11.3582, 0.66", "4.12294, 81.0981, 11.3611, 0.66", "4.02586, 81.407, 11.3878, 0.37", "3.85803, 82.0641, 11.4777, 0.29", "3.71038, 82.8523, 11.6135, 0.29", "3.70387, 82.9196, 11.6272, 0.29", "3.69285, 83.7645, 11.7968, 1.03", "3.72112, 84.4757, 11.9318, 1.69", "3.79708, 85.2331, 12.0579, 2.14", "3.83805, 85.5785, 12.1084, 2.28", "3.87751, 86.1316, 12.157, 1.77", "3.89388, 86.7727, 12.1761, 1.18", "3.87321, 87.442, 12.1492, 0.52", "3.82181, 88.0879, 12.1018, 0.37", "3.76385, 88.5355, 12.0351, 0.37", "3.63248, 89.469, 11.8702, 0.74", "3.59102, 89.8102, 11.8015, 1.25", "3.52892, 90.3701, 11.6745, 1.4", "3.4648, 91.1407, 11.4908, 0.81", "3.38987, 92.6939, 11.1265, 0.37", "3.39121, 93.5434, 10.9322, 0.37", "3.44232, 94.9168, 10.638, 0.29", "3.50864, 95.9638, 10.4213, 1.84", "3.54909, 96.3551, 10.3453, 2.28", "3.63937, 96.9446, 10.243, 2.14", "3.89137, 98.2084, 10.0899, 0.52", "4.04866, 98.9202, 10.0205, 0.74", "4.15953, 99.4149, 9.99342, 0.74", "4.30677, 100.109, 9.97925, 0.22", "4.37219, 100.542, 9.97554, 0.22", "4.42325, 101.417, 9.95518, 0.74", "4.40847, 101.643, 9.94148, 0.74", "4.31184, 102.383, 9.86891, 0.22", "4.21807, 102.936, 9.80168, 0.74", "4.13144, 103.397, 9.7369, 0.96", "3.95535, 104.47, 9.57595, 0.37", "3.8037, 105.776, 9.36826, 1.25", "3.78321, 106.233, 9.30088, 1.55", "3.79066, 106.593, 9.26274, 1.77", "3.82157, 107.197, 9.23289, 1.77", "3.87469, 107.998, 9.23327, 0.88", "3.91392, 108.524, 9.26143, 0.52", "3.96571, 109.348, 9.34121, 0.44", "4.01294, 110.402, 9.41995, 0.29", "4.03239, 111.694, 9.49383, 1.25", "4.0256, 112.26, 9.51904, 2.21", "4.01175, 112.646, 9.53001, 2.5", "3.97403, 113.449, 9.53788, 2.28", "3.86963, 114.806, 9.47053, 0.66", "3.80956, 115.537, 9.39606, 0.52", "3.74713, 116.326, 9.29478, 0.66", "3.70525, 116.896, 9.21634, 0.96", "3.65578, 117.618, 9.10613, 0.96", "3.54872, 119.357, 8.81399, 0.22", "3.52403, 120.08, 8.70319, 1.18", "3.53049, 120.48, 8.63593, 0.88", "3.56798, 121.02, 8.53871, 0.74", "3.66173, 121.715, 8.41472, 0.29", "3.67712, 121.782, 8.40417, 0.29", "3.90424, 122.358, 8.34709, 0.81", "3.92723, 122.422, 8.33737, 0.81", "4.02634, 122.827, 8.26983, 1.03", "4.06054, 123.032, 8.23406, 1.03", "4.07539, 123.311, 8.1863, 1.03", "3.97292, 124.57, 7.91157, 0.29", "3.7947, 125.491, 7.67609, 0.29", "3.65868, 126.068, 7.52235, 0.59", "3.62166, 126.206, 7.48501, 0.59", "3.49148, 126.733, 7.34805, 0.37", "3.31828, 127.659, 7.13471, 0.29", "3.21043, 128.668, 6.95208, 1.11", "3.20784, 129.081, 6.89442, 1.69", "3.23469, 129.53, 6.84351, 1.84", "3.30213, 130.244, 6.78073, 1.62", "3.44192, 131.255, 6.72424, 0.74", "3.60797, 132.212, 6.71281, 0.52", "3.621, 132.282, 6.71281, 0.52", "3.79279, 133.329, 6.71281, 0.37", "3.80276, 133.407, 6.71182, 0.37", "3.83858, 134.065, 6.69473, 1.25", "3.82508, 134.527, 6.64115, 0.96", "3.82067, 134.594, 6.62937, 0.96", "3.77204, 135.221, 6.50854, 0.74", "3.7186, 135.865, 6.35575, 0.59", "3.67005, 136.397, 6.22533, 0.74", "3.51099, 137.801, 5.87662, 0.37", "3.40132, 138.665, 5.66348, 0.74", "3.30375, 139.409, 5.48409, 0.52", "3.1511, 140.365, 5.24257, 0.29", "2.99983, 141.11, 5.03867, 0.81", "2.87078, 141.605, 4.88727, 1.18", "2.85092, 141.661, 4.86894, 1.18", "2.74446, 141.932, 4.76854, 1.18", "2.45664, 142.767, 4.47935, 1.18", "2.25449, 143.483, 4.26413, 0.44", "2.08689, 144.273, 4.04827, 0.29", "2.0635, 144.43, 4.01148, 0.29", "1.97138, 145.522, 3.80522, 0.29", "1.95386, 147.027, 3.60452, 1.62", "1.97488, 147.544, 3.56545, 2.65", "2.00224, 148.061, 3.54637, 2.87", "2.03738, 148.637, 3.53781, 2.36", "2.08071, 149.438, 3.53319, 1.69", "2.13382, 150.7, 3.52292, 0.52", "2.17789, 151.691, 3.515, 0.52", "2.19286, 152.188, 3.50585, 0.81", "2.20601, 152.899, 3.48262, 0.44", "2.22073, 153.912, 3.43524, 0.44", "2.22415, 154.665, 3.3894, 0.37", "2.22565, 154.733, 3.38428, 0.37", "2.28713, 155.6, 3.30674, 0.37", "2.30212, 155.725, 3.29505, 0.37", "2.43498, 156.628, 3.20862, 1.62", "2.53421, 157.214, 3.15879, 2.36", "2.6165, 157.664, 3.12713, 2.36", "2.89565, 159.121, 3.03637, 0.29", "3.03899, 159.821, 2.9972, 0.29", "3.18963, 160.54, 2.96732, 0.37", "3.39308, 161.465, 2.93971, 0.37", "3.47136, 161.833, 2.91759, 0.59", "3.54217, 162.215, 2.87566, 0.59", "3.55085, 162.272, 2.86577, 0.59", "3.70189, 163.701, 2.54508, 0.29", "3.84667, 165.46, 2.07528, 0.29", "3.89787, 166.307, 1.8079, 0.96", "3.927, 167.061, 1.54078, 1.18", "3.92636, 167.645, 1.31979, 0.66", "3.90113, 168.22, 1.09328, 0.44", "3.89305, 168.283, 1.06565, 0.44", "3.76717, 168.979, 0.789174, 0.22", "3.73963, 169.131, 0.746082, 0.22", "3.571, 170.25, 0.533036, 1.47", "3.50873, 170.74, 0.468489, 2.28", "3.46435, 171.178, 0.427194, 2.58", "3.35628, 172.423, 0.350173, 0.29", "3.3029, 173.106, 0.333569, 0.22", "3.26066, 173.805, 0.333336, 0.22", "3.23195, 174.39, 0.341622, 0.22", "3.17477, 175.36, 0.361499, 1.33", "3.15547, 175.621, 0.369464, 1.62", "3.11912, 175.969, 0.369803, 1.62", "3.00084, 176.752, 0.325873, 0.37", "2.85447, 177.473, 0.255387, 0.22", "2.77139, 177.841, 0.216702, 0.22", "2.68061, 178.21, 0.176309, 0.52", "2.49347, 179.02, 0.0899631, 0.29", "2.21368, 180.415, -0.0502361, 0.29", "2.08689, 181.186, -0.119954, 1.03", "2.03934, 181.68, -0.154995, 1.33", "2.0338, 181.898, -0.166517, 1.33", "2.05136, 182.351, -0.180018, 1.18", "2.11416, 183.004, -0.177506, 0.96", "2.18856, 183.496, -0.173864, 0.37", "2.34041, 184.361, -0.165287, 0.22", "2.47971, 185.139, -0.156189, 0.22", "2.61569, 185.95, -0.145791, 1.11", "2.68452, 186.401, -0.152426, 1.92", "2.73665, 186.774, -0.176525, 2.5", "2.74472, 186.842, -0.184167, 2.5", "2.78039, 187.263, -0.256892, 2.5", "2.80728, 187.844, -0.384463, 2.36", "2.83845, 189.218, -0.735775, 0.29", "2.84009, 189.945, -0.934339, 0.29", "2.83738, 190.058, -0.964707, 0.29", "2.80534, 190.813, -1.17834, 1.33", "2.78234, 191.252, -1.30171, 1.55", "2.77854, 191.311, -1.31748, 1.55", "2.7508, 191.74, -1.41189, 1.25", "2.75669, 192.436, -1.52939, 0.66", "2.81615, 193.737, -1.6968, 0.29", "2.87726, 194.485, -1.76872, 0.88", "2.91806, 194.87, -1.79848, 1.11", "2.98142, 195.535, -1.83831, 0.96", "3.05887, 196.863, -1.8483, 0.29", "3.08498, 198.291, -1.79924, 0.29", "3.06203, 199.216, -1.73576, 1.33", "3.02613, 199.945, -1.68664, 1.92", "2.96597, 200.747, -1.62652, 2.21", "2.73962, 202.961, -1.44633, 0.37", "2.5711, 204.227, -1.33604, 0.37", "2.39982, 205.431, -1.22982, 0.37", "2.26919, 206.314, -1.15695, 0.22", "2.13164, 207.285, -1.08504, 1.33", "2.08581, 207.639, -1.06401, 2.06", "2.03209, 207.991, -1.05338, 2.21", "1.87533, 208.831, -1.0264, 1.69", "1.58248, 210.163, -0.983177, 0.22", "1.4127, 210.859, -0.962207, 0.81", "1.31505, 211.274, -0.956967, 0.81", "1.11311, 212.343, -0.959365, 0.22", "1.01701, 213.052, -0.974239, 0.81", "1.00526, 213.212, -0.980076, 0.81", "1.00162, 213.721, -1.00675, 0.81", "1.02173, 214.154, -1.03028, 0.74", "1.12098, 215.232, -1.08547, 0.22", "1.21913, 216.037, -1.13505, 0.81", "1.25999, 216.417, -1.15991, 1.03", "1.3091, 216.99, -1.19779, 0.44", "1.37205, 218.061, -1.26711, 0.29", "1.4047, 218.963, -1.32837, 0.29", "1.41124, 220.08, -1.39956, 1.55", "1.41606, 220.427, -1.42326, 1.92", "1.41795, 220.507, -1.42905, 1.92", "1.42491, 220.862, -1.45431, 1.92", "1.44105, 223.029, -1.61222, 0.22", "1.42421, 224.038, -1.68213, 0.66", "1.40536, 224.437, -1.70583, 1.03", "1.35399, 225.035, -1.74344, 1.03", "1.26514, 225.705, -1.78502, 0.81", "1.13284, 226.409, -1.82772, 0.37", "1.05781, 226.712, -1.84309, 0.37", "0.922209, 227.258, -1.87156, 0.37", "0.736234, 228.028, -1.91209, 0.29", "0.542207, 228.931, -1.95912, 0.29", "0.531237, 228.999, -1.96306, 0.29", "0.380486, 230.213, -2.02871, 0.22", "0.373708, 230.291, -2.03342, 0.22", "0.336637, 230.998, -2.07872, 0.22", "0.336731, 231.078, -2.08658, 0.22", "0.382566, 231.942, -2.19406, 1.47", "0.415229, 232.368, -2.25879, 1.84", "0.420125, 232.426, -2.26865, 1.84", "0.457628, 232.845, -2.34021, 1.84", "0.580748, 234.119, -2.55811, 0.22", "0.686128, 235.337, -2.75648, 0.22", "0.732758, 235.905, -2.83265, 0.88", "0.75466, 236.328, -2.87828, 1.18", "0.760011, 236.765, -2.91022, 0.96", "0.756597, 236.836, -2.91229, 0.96", "0.6529, 237.464, -2.88639, 0.37", "0.534995, 237.986, -2.85099, 0.37", "0.425361, 238.546, -2.80537, 0.37", "0.381547, 238.839, -2.78498, 0.29", "0.319362, 239.47, -2.74996, 0.22", "0.295447, 239.861, -2.73369, 0.52", "0.283414, 240.672, -2.71474, 0.22", "0.302035, 241.304, -2.71474, 0.22", "0.352385, 241.878, -2.73977, 1.11", "0.405261, 242.412, -2.80209, 1.47", "0.410558, 242.489, -2.81561, 1.47", "0.422854, 242.856, -2.89657, 1.33", "0.419008, 242.958, -2.92338, 1.33", "0.329624, 243.855, -3.16557, 0.74", "0.221099, 244.892, -3.45297, 0.29", "0.163756, 245.477, -3.60752, 0.37", "0.159966, 245.537, -3.62191, 0.37", "0.143471, 246.032, -3.72384, 0.37", "0.140952, 246.752, -3.85064, 0.22", "0.172738, 247.607, -3.97478, 1.11", "0.214966, 248.12, -4.04674, 1.4", "0.267425, 248.602, -4.1202, 1.18", "0.342995, 249.253, -4.22861, 0.44", "0.479291, 250.275, -4.43098, 0.22", "0.599479, 250.956, -4.5712, 0.74", "0.678764, 251.372, -4.64899, 1.33", "0.690252, 251.429, -4.65938, 1.33", "0.833771, 252.144, -4.77585, 1.62", "0.912038, 252.534, -4.82915, 1.62", "1.24132, 254.131, -5.00023, 0.29", "1.44472, 255.191, -5.0904, 0.29", "1.45557, 255.259, -5.09577, 0.29", "1.58468, 256.43, -5.17288, 0.29", "1.60972, 257.005, -5.19758, 1.03", "1.60799, 257.085, -5.1998, 1.03", "1.54561, 257.736, -5.21907, 1.18", "1.3941, 258.896, -5.25242, 0.29", "1.26983, 259.819, -5.27488, 0.29", "1.14617, 260.67, -5.29258, 1.18", "1.09832, 261.038, -5.29796, 1.47", "1.03283, 261.591, -5.30252, 1.25", "0.992274, 262.043, -5.30203, 1.33", "0.933705, 263.258, -5.28429, 0.22", "0.936304, 263.407, -5.28304, 0.22", "1.05457, 264.505, -5.2574, 0.22", "1.06733, 264.583, -5.25428, 0.22", "1.21915, 265.34, -5.21287, 0.74", "1.29806, 265.702, -5.1888, 1.18", "1.37208, 266.137, -5.15721, 1.18", "1.51965, 267.429, -5.0682, 0.22", "1.52522, 267.497, -5.06347, 0.22", "1.56783, 268.2, -5.01969, 0.66", "1.58857, 268.567, -5.0197, 0.66", "1.6794, 269.849, -5.08155, 0.22", "1.73418, 270.559, -5.14003, 1.25", "1.78669, 271.184, -5.21037, 1.55", "1.86119, 271.878, -5.29466, 1.69", "2.04672, 273.28, -5.48185, 0.29", "2.24284, 274.655, -5.67048, 0.22", "2.33321, 275.246, -5.75432, 0.66", "2.40297, 275.673, -5.80993, 0.81", "2.41309, 275.741, -5.81751, 0.81", "2.60824, 277.201, -5.93587, 0.22", "2.71468, 278.058, -5.96567, 1.03", "2.73816, 278.276, -5.97667, 1.33", "2.8689, 279.593, -6.04755, 0.22", "2.92286, 280.167, -6.07782, 0.81", "2.96281, 280.662, -6.10187, 1.03", "2.98989, 281.068, -6.11939, 0.74", "3.06406, 282.608, -6.18653, 0.22", "3.07622, 283.341, -6.21666, 0.44", "3.04714, 284.229, -6.25045, 0.22", "3.01299, 285.017, -6.27679, 1.11", "2.98857, 285.443, -6.28813, 1.33", "2.94908, 286.097, -6.30244, 0.37", "2.90123, 286.949, -6.3114, 0.15", "2.88041, 287.59, -6.32475, 0.74", "2.88477, 287.661, -6.32742, 0.74", "2.91868, 287.947, -6.34082, 0.74", "3.09493, 289.066, -6.39943, 0.22", "3.20877, 289.692, -6.43368, 1.18", "3.29635, 290.139, -6.46076, 1.62", "3.67775, 292.149, -6.59089, 0.22", "3.79073, 292.785, -6.63298, 0.29", "3.80182, 292.855, -6.63758, 0.29", "3.9174, 293.704, -6.69019, 0.29", "4.01681, 294.528, -6.74442, 0.59", "4.05955, 295.094, -6.79309, 1.11", "4.06342, 295.191, -6.80228, 1.11", "4.09581, 295.754, -6.85541, 1.55", "4.13094, 296.371, -6.91208, 1.55", "4.13401, 296.429, -6.91719, 1.55", "4.21277, 298.351, -7.06673, 0.22", "4.2729, 299.741, -7.16197, 0.22", "4.35619, 300.706, -7.21935, 1.4", "4.3823, 300.927, -7.23049, 1.77", "4.46807, 301.567, -7.25637, 1.4", "4.60129, 302.339, -7.27692, 0.74", "4.82474, 303.349, -7.28657, 0.29", "5.2924, 305.157, -7.3057, 0.22", "5.49539, 305.875, -7.31364, 0.66", "5.60086, 306.22, -7.31828, 0.66", "5.9009, 307.092, -7.32979, 0.22", "5.92474, 307.159, -7.32877, 0.22", "6.11205, 307.735, -7.29857, 0.52", "6.13175, 307.811, -7.29106, 0.52", "6.21973, 308.16, -7.25011, 0.52", "6.35595, 308.648, -7.15617, 0.22", "6.63931, 309.549, -6.92774, 1.03", "6.81894, 310.018, -6.78357, 1.62", "6.9847, 310.43, -6.64697, 1.47", "7.22267, 311.021, -6.43343, 1.33", "7.78117, 312.443, -5.85945, 0.22", "8.14397, 313.362, -5.46376, 1.18", "8.61908, 314.513, -4.953, 0.22", "8.82172, 314.996, -4.72843, 0.22", "9.09819, 315.65, -4.41677, 0.81", "9.69451, 317.044, -3.75362, 0.22", "9.71759, 317.104, -3.72645, 0.22", "9.8727, 317.549, -3.52198, 0.81", "9.89209, 317.61, -3.49483, 0.81", "9.99784, 317.875, -3.37348, 1.11", "10.204, 318.288, -3.23126, 0.88" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-23.554, -36.5314, 18.5651, 0.29", "-24.6461, -36.5706, 19.2742, 0.29", "-25.8711, -36.6266, 20.2932, 0.29", "-26.4737, -36.7116, 20.762, 0.59", "-27.4542, -36.9742, 21.4325, 0.59", "-27.5543, -37.01, 21.4876, 0.59", "-29.2199, -37.6867, 22.2802, 0.59", "-29.2759, -37.7136, 22.312, 0.59", "-30.0327, -38.1618, 22.8648, 0.37", "-30.644, -38.592, 23.3297, 0.29", "-31.1889, -39.0045, 23.7234, 0.29", "-31.2294, -39.0367, 23.7529, 0.29", "-32.2314, -39.927, 24.5093, 0.74", "-32.4733, -40.1659, 24.7516, 1.03", "-33.0187, -40.8148, 25.4872, 0.29", "-33.0765, -40.8924, 25.5721, 0.29", "-33.42, -41.3968, 26.0656, 0.37", "-33.6789, -41.7744, 26.3747, 0.52", "-33.8983, -42.0951, 26.5581, 0.52", "-34.4223, -42.6265, 26.8087, 0.29", "-35.1111, -43.0405, 26.9766, 0.29", "-35.5289, -43.198, 27.0502, 0.59", "-35.8281, -43.2696, 27.0907, 0.88", "-36.1305, -43.3298, 27.1255, 1.03", "-37.5426, -43.607, 27.3491, 0.29", "-38.4001, -43.7716, 27.5302, 0.44", "-38.8957, -43.9047, 27.674, 0.74", "-38.986, -43.9423, 27.7049, 0.74", "-39.5112, -44.2004, 27.9062, 0.66", "-40.3771, -44.7216, 28.2981, 0.66", "-40.4251, -44.7624, 28.3272, 0.66", "-40.7959, -45.1245, 28.5586, 0.29", "-41.5452, -45.9261, 29.0686, 0.22", "-48.4004, -50.44, 34.6876, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-23.554, -36.5314, 18.5651, 0.74", "-24.1395, -35.8494, 20.0313, 0.74", "-24.9365, -34.9653, 21.7144, 0.66", "-24.9871, -34.9091, 21.8213, 0.66", "-25.223, -34.6474, 22.3196, 0.66", "-25.2511, -34.6163, 22.3787, 0.66", "-25.4314, -34.4163, 22.7595, 0.52", "-25.6, -34.1566, 22.9996, 0.52", "-30.2053, -30.3006, 30.9464, 0.52", "-33.9893, -25.6264, 38.8646, 0.52", "-37.3037, -22.6899, 47.8057, 0.52", "-38.7293, -18.8628, 56.892, 0.52" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-7.05654, -22.553, 0.911928, 0.96", "-7.64862, -23.9311, 0.941366, 0.96", "-8.1724, -25.305, 0.965416, 0.96", "-8.22002, -25.4617, 0.967467, 0.96", "-8.41841, -26.2683, 0.949369, 0.96", "-8.71988, -27.6536, 0.895459, 1.11", "-9.03448, -29.3109, 0.763651, 1.11", "-9.04332, -29.3905, 0.75572, 1.11", "-9.16043, -31.0434, 0.562934, 1.03", "-9.22704, -32.2364, 0.406186, 1.99", "-9.22913, -32.3158, 0.393248, 1.99", "-9.22658, -33.4093, 0.146408, 2.87" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-7.05654, -22.553, 0.911928, 1.92", "-6.67402, -24.5087, 1.01778, 1.92", "-6.31778, -26.2688, 1.10283, 1.92", "-5.98775, -27.8695, 1.17186, 1.92", "-5.69088, -29.3526, 1.22862, 2.14", "-5.40109, -30.7438, 1.27518, 1.62", "-5.08769, -32.1385, 1.31218, 1.99", "-4.84774, -33.0751, 1.31225, 2.73", "-4.53774, -34.1163, 1.31129, 2.36", "-4.1431, -35.2724, 1.34495, 1.99", "-3.56684, -36.7795, 1.432, 1.92", "-3.18225, -37.677, 1.50849, 2.28", "-2.77634, -38.5772, 1.62674, 2.5", "-2.38636, -39.438, 1.78452, 2.58", "-1.77358, -40.8372, 2.14644, 1.69", "-1.75204, -40.8895, 2.16281, 1.69", "-1.33507, -42.1345, 2.58482, 1.47", "-0.901075, -43.8834, 3.18809, 1.25", "-0.742817, -44.8646, 3.51652, 1.62", "-0.663468, -45.9029, 3.83507, 1.62", "-0.669462, -47.0169, 4.12814, 1.25", "-0.776952, -48.2908, 4.43, 1.25", "-1.03204, -49.5259, 4.67632, 1.77", "-1.26065, -50.2118, 4.76711, 1.92", "-1.57332, -50.9849, 4.82541, 1.92", "-1.91814, -51.7321, 4.85168, 2.06", "-2.37863, -52.6291, 4.87419, 1.92", "-2.98302, -53.7589, 4.88926, 1.77", "-3.6302, -54.9707, 4.88926, 1.55", "-4.39991, -56.4464, 4.88926, 1.4", "-4.99192, -57.6271, 4.91903, 1.4", "-5.4626, -58.6491, 4.96659, 1.84", "-5.77277, -59.4522, 5.04086, 1.77", "-6.08763, -60.5476, 5.19166, 1.25", "-6.10075, -60.624, 5.2052, 1.25", "-6.20471, -62.057, 5.51132, 0.88", "-6.17716, -62.7525, 5.66772, 1.62", "-6.01797, -64.0075, 5.93648, 1.92", "-5.8238, -65.1051, 6.14342, 1.92", "-5.63134, -66.1399, 6.30345, 1.77", "-5.62005, -66.2076, 6.31098, 1.77", "-5.40549, -67.6228, 6.40181, 1.62", "-5.27231, -68.7623, 6.41478, 1.33", "-5.17499, -69.8314, 6.37382, 1.18", "-5.1029, -70.8515, 6.31726, 1.18", "-5.04116, -72.0075, 6.23606, 1.55", "-5.01764, -73.4289, 6.10432, 1.62", "-5.05966, -74.6651, 5.96552, 2.14", "-5.12806, -75.6011, 5.85403, 2.36", "-5.21349, -76.4873, 5.74674, 2.58", "-5.28095, -77.1459, 5.67264, 3.02", "-5.43897, -78.7236, 5.54171, 2.21", "-5.55196, -80.1176, 5.46732, 1.77", "-5.62546, -81.3793, 5.4382, 1.77", "-5.65947, -82.7814, 5.455, 1.84", "-5.61823, -84.4279, 5.57578, 1.84", "-5.4925, -86.095, 5.79741, 1.18", "-5.25067, -87.8255, 6.13584, 0.96", "-5.2378, -87.8926, 6.15579, 0.96", "-4.95436, -89.0434, 6.66666, 1.33", "-4.61536, -90.193, 7.31978, 1.84", "-4.34996, -91.0835, 7.89522, 1.84", "-4.11057, -91.9553, 8.4571, 1.77", "-3.73999, -93.5608, 9.39825, 1.69", "-3.46, -95.0994, 10.1153, 0.74", "-3.3526, -95.9926, 10.409, 0.74", "-3.26486, -97.1116, 10.6528, 1.18", "-3.21838, -98.1708, 10.7712, 1.47", "-3.22264, -99.2084, 10.7271, 1.62", "-3.26676, -99.9807, 10.5559, 1.92", "-3.33257, -100.595, 10.376, 1.92", "-3.33994, -100.651, 10.3604, 1.92", "-3.44571, -101.392, 10.1838, 1.92", "-3.61664, -102.465, 9.99542, 1.33", "-3.82164, -103.525, 9.84065, 1.47", "-4.03846, -104.601, 9.70058, 1.92", "-4.18474, -105.393, 9.60581, 1.92", "-4.35871, -106.46, 9.49588, 1.99", "-4.51641, -107.789, 9.38502, 1.99", "-4.61871, -109.323, 9.2778, 1.99", "-4.62255, -109.688, 9.26028, 2.36", "-4.60194, -110.559, 9.21761, 1.62", "-4.5532, -111.481, 9.17508, 1.25", "-4.46381, -112.626, 9.12388, 1.11", "-4.39647, -113.594, 9.08293, 0.81", "-4.33612, -114.855, 9.04688, 0.66", "-4.34585, -115.946, 9.02321, 1.55", "-4.3497, -116.017, 9.02219, 1.55", "-4.39989, -116.6, 9.06069, 2.21", "-4.49231, -117.417, 9.16667, 1.92", "-4.61178, -118.493, 9.35323, 1.62", "-4.71668, -119.491, 9.56295, 1.4", "-4.80088, -120.597, 9.88628, 1.4", "-4.90906, -122.338, 10.482, 1.33", "-4.93273, -123.196, 10.8058, 0.96", "-4.90421, -124.489, 11.323, 0.74", "-4.89824, -124.567, 11.3573, 0.74", "-4.63574, -126.338, 12.1874, 0.66", "-4.61793, -126.397, 12.2186, 0.66", "-4.10484, -127.571, 12.8481, 1.69", "-3.78899, -128.224, 13.2075, 2.21", "-3.3055, -129.245, 13.7493, 3.02", "-3.02449, -129.914, 14.0676, 3.02", "-2.26929, -132.056, 14.9294, 0.52", "-2.08072, -132.861, 15.1857, 0.52", "-1.96916, -133.865, 15.4199, 2.36", "-1.96172, -134.815, 15.5516, 3.09", "-2.00051, -135.271, 15.571, 3.24", "-2.14098, -136.198, 15.56, 3.02", "-2.5703, -138.244, 15.419, 1.11", "-2.77566, -139.315, 15.3471, 0.96", "-2.8993, -140.104, 15.2944, 1.25", "-3.01673, -141.188, 15.2508, 1.18", "-3.06427, -142.006, 15.2447, 0.52", "-3.06357, -142.077, 15.2475, 0.52", "-2.95607, -142.841, 15.3401, 1.4", "-2.94045, -142.897, 15.3476, 1.4", "-2.54972, -143.835, 15.4645, 2.14", "-2.24129, -144.487, 15.5302, 2.14", "-2.02529, -144.96, 15.5613, 2.36", "-1.6571, -145.849, 15.6007, 1.33", "-1.26387, -146.927, 15.6072, 0.81", "-0.849228, -148.29, 15.5547, 0.81", "-0.53875, -149.612, 15.4506, 0.81", "-0.277865, -151.019, 15.3407, 1.62", "-0.16242, -151.773, 15.2844, 1.92", "-0.0102291, -152.937, 15.2475, 1.25", "0.120993, -154.053, 15.2539, 0.96", "0.292397, -155.564, 15.3139, 0.96", "0.483278, -156.872, 15.4142, 0.88", "0.72332, -158.208, 15.579, 1.62", "1.06035, -159.741, 15.819, 1.84", "1.25988, -160.568, 16.023, 1.92", "1.27784, -160.641, 16.0466, 1.92", "1.54191, -161.732, 16.4466, 1.62", "1.83939, -163.084, 16.958, 0.59", "2.04976, -164.138, 17.3518, 0.59", "2.35473, -165.723, 17.8727, 0.52", "2.55453, -166.773, 18.2381, 1.69", "2.6787, -167.452, 18.4825, 2.5", "2.77264, -168.05, 18.7139, 2.5", "2.88708, -168.769, 18.9924, 2.5", "3.06297, -169.853, 19.3573, 1.77" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-9.86611, 102.92, -20.1616, 0.59", "-10.7343, 103.764, -20.6365, 0.59", "-11.3972, 104.534, -21.0996, 0.44", "-11.4198, 104.656, -21.7381, 0.74", "-11.4437, 104.863, -22.7382, 0.74", "-11.4526, 104.895, -22.8897, 0.74", "-11.5293, 105.074, -23.6535, 0.88", "-11.5355, 105.089, -23.7215, 0.88", "-12.1012, 106.311, -29.1514, 1.62", "-12.3209, 106.655, -30.6819, 1.4", "-12.627, 106.993, -32.2593, 0.37", "-12.8349, 107.175, -33.1087, 0.74", "-13.3766, 107.57, -34.865, 0.29", "-13.6309, 107.751, -35.4907, 1.4", "-13.9402, 107.961, -35.991, 1.84", "-15.0178, 108.654, -37.8648, 0.44", "-15.189, 108.778, -38.187, 0.29", "-15.4673, 108.974, -38.7269, 0.29", "-15.7379, 109.166, -39.2301, 0.59", "-16.6677, 109.868, -41.0327, 0.44", "-16.9853, 110.144, -41.6148, 0.22", "-17.2355, 110.393, -42.0197, 0.74", "-17.6487, 110.84, -42.7558, 0.15", "-17.7138, 110.911, -42.8732, 0.15", "-17.8689, 111.09, -43.1369, 0.15", "-18.4524, 111.807, -43.9947, 1.47", "-18.7551, 112.179, -44.4187, 1.62", "-19.8906, 113.533, -46.0608, 0.22", "-19.9239, 113.574, -46.1106, 0.22", "-20.3405, 114.042, -46.722, 0.22", "-20.8928, 114.625, -47.5183, 1.25", "-21.1506, 114.903, -47.9366, 1.4", "-21.9308, 115.783, -49.2647, 0.22", "-21.9788, 115.844, -49.3556, 0.22", "-22.5786, 116.69, -50.6547, 1.47", "-22.7486, 116.957, -51.0523, 1.99", "-23.5828, 118.469, -53.1394, 0.37", "-23.7799, 118.877, -53.6512, 0.29", "-24.0891, 119.587, -54.453, 1.18", "-24.4235, 120.41, -55.3133, 0.52", "-24.6984, 121.203, -56.0466, 1.55", "-24.7891, 121.49, -56.2823, 1.84", "-25.2916, 123.225, -57.4202, 0.22", "-25.3047, 123.282, -57.4563, 0.22", "-25.3884, 123.798, -57.7446, 0.22", "-25.4028, 124.418, -58.0555, 1.4", "-25.3983, 124.489, -58.0897, 1.4", "-25.3583, 124.892, -58.2639, 1.4", "-25.12, 126.413, -58.8971, 0.15", "-25.0166, 127.053, -59.1873, 0.74", "-24.7613, 128.535, -59.9063, 0.15", "-24.6649, 129.053, -60.1687, 0.74", "-24.6081, 129.311, -60.3, 0.88", "-24.258, 130.602, -60.9413, 0.15", "-24.2404, 130.652, -60.9685, 0.15", "-24.0817, 131.025, -61.2084, 0.37", "-24.0251, 131.108, -61.3089, 0.37", "-23.6524, 131.466, -62.002, 0.22", "-23.3343, 131.728, -62.599, 0.59", "-22.474, 132.284, -64.2315, 1.69", "-22.3807, 132.337, -64.4161, 1.69", "-20.9387, 132.957, -67.4622, 0.22", "-20.6694, 133.031, -68.0653, 0.96" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-9.86611, 102.92, -20.1616, 2.65", "-9.74065, 103.79, -19.6738, 2.65", "-9.67061, 104.779, -19.2302, 2.06", "-9.63021, 106.536, -18.5645, 1.92", "-9.63065, 106.592, -18.5456, 1.92", "-9.67781, 107.602, -18.2379, 0.74", "-9.77519, 109.07, -17.8232, 0.52", "-9.92968, 110.23, -17.5361, 0.52", "-10.0257, 110.782, -17.4441, 0.52", "-10.067, 111.015, -17.436, 0.52", "-10.1753, 111.744, -17.426, 0.52", "-10.1872, 111.857, -17.4272, 0.52", "-10.2197, 112.692, -17.4593, 0.44", "-10.2169, 113.356, -17.4577, 0.44", "-10.1643, 114.62, -17.4446, 1.84", "-10.1055, 115.655, -17.3991, 2.73", "-10.0696, 116.207, -17.3596, 3.54", "-10.0279, 116.934, -17.2921, 3.9", "-10.0023, 117.515, -17.2244, 4.05", "-9.99401, 118.063, -17.1626, 3.9", "-10.0201, 119.073, -17.0586, 3.61", "-10.0769, 119.782, -16.9847, 2.8", "-10.1693, 120.576, -16.9085, 1.69", "-10.2913, 121.509, -16.8206, 1.11", "-10.444, 122.558, -16.7294, 0.81", "-10.5369, 123.13, -16.6892, 0.66", "-10.7423, 124.337, -16.6488, 0.52", "-10.9434, 125.393, -16.6091, 0.44" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-48.4004, -50.44, 34.6876, 0.37", "-55.9473, -54.6687, 39.6105, 0.37", "-61.9103, -60.6362, 44.8048, 0.37", "-68.5852, -65.1449, 50.641, 0.37", "-73.7833, -69.5009, 57.9224, 0.37", "-80.6755, -73.9214, 63.5742, 0.37", "-87.5742, -77.8381, 69.5967, 0.37", "-93.8262, -83.7386, 74.525, 0.37", "-101.833, -88.3279, 78.2302, 0.37", "-111.242, -91.1441, 80.0002, 0.37", "-120.693, -94.2156, 80.8647, 0.37", "-130.369, -95.5807, 82.9658, 0.37", "-140.109, -96.6729, 84.9372, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-48.4004, -50.44, 34.6876, 0.29", "-55.9772, -54.6743, 39.5592, 0.37", "-62.6385, -59.4204, 45.2099, 0.37", "-69.4583, -65.2047, 49.4872, 0.37", "-76.3561, -71.5909, 52.5724, 0.37", "-83.3092, -78.1571, 55.0823, 0.37", "-89.6908, -84.6218, 58.9954, 0.37", "-95.3836, -91.968, 62.2851, 0.37", "-100.613, -100.097, 64.0582, 0.37", "-107.503, -107.15, 64.51, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-38.7293, -18.8628, 56.892, 0.37", "-42.3386, -14.8261, 65.2485, 0.37", "-46.7107, -10.8007, 73.2385, 0.37", "-51.8516, -5.72656, 80.0566, 0.37" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-38.7293, -18.8628, 56.892, 0.29", "-40.6556, -15.6645, 66.1401, 0.37", "-42.1093, -11.9831, 75.2851, 0.37", "-42.0065, -9.91998, 85.0581, 0.37", "-41.4226, -8.97497, 94.9939, 0.37", "-41.5451, -9.09707, 104.993, 0.37", "-42.7575, -8.63134, 114.908, 0.37", "-44.6551, -8.0435, 124.707, 0.37", "-46.3598, -7.23879, 134.526, 0.37", "-48.6991, -5.07875, 143.993, 0.37", "-51.2655, -2.8671, 153.388, 0.37", "-53.1759, -0.668167, 162.941, 0.37", "-54.2242, 0.29592, 172.837, 0.37", "-55.5088, 1.89346, 182.618, 0.37" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-9.22658, -33.4093, 0.146408, 0.59", "-9.59948, -33.8364, -0.172241, 0.59", "-10.2649, -34.3798, -0.647218, 0.44", "-11.0174, -34.7865, -1.18298, 0.29", "-11.4344, -34.952, -1.44969, 0.22", "-11.9547, -35.1419, -1.76139, 0.29", "-12.5837, -35.3685, -2.11918, 0.29", "-13.3881, -35.6149, -2.51984, 0.29", "-14.3067, -35.8848, -2.96687, 0.29", "-15.0139, -36.1214, -3.31553, 0.29", "-15.9267, -36.5038, -3.7914, 1.25", "-16.1986, -36.6565, -3.94255, 1.77", "-16.6073, -36.9628, -4.18683, 1.77", "-17.7328, -37.9868, -4.88119, 1.11", "-18.3437, -38.6482, -5.28377, 0.52", "-18.7541, -39.163, -5.61345, 0.37", "-19.2595, -39.8836, -6.11398, 0.37", "-19.6024, -40.4269, -6.5072, 0.37", "-19.6582, -40.5195, -6.57617, 0.37", "-20.1168, -41.2869, -7.14213, 1.25", "-20.4247, -41.7467, -7.53389, 1.18", "-21.0179, -42.4537, -8.21051, 0.29", "-21.3206, -42.7101, -8.47911, 0.22", "-21.7582, -43.0185, -8.77999, 0.22", "-22.1115, -43.2566, -8.96987, 0.44", "-22.4844, -43.4887, -9.11402, 0.44", "-22.8759, -43.729, -9.21646, 0.29", "-23.2825, -43.9678, -9.31165, 0.29", "-23.8782, -44.3248, -9.53301, 0.37", "-24.3409, -44.616, -9.74586, 0.37", "-24.8676, -44.9255, -10.0213, 0.29", "-25.82, -45.427, -10.577, 1.18", "-26.5228, -45.7766, -10.9976, 1.99", "-27.2131, -46.092, -11.4123, 2.28", "-27.6416, -46.2786, -11.6619, 1.99", "-28.7218, -46.7842, -12.2742, 0.59", "-29.4343, -47.1912, -12.6642, 0.37", "-29.9566, -47.597, -12.9574, 0.37", "-30.5189, -48.0936, -13.2689, 1.11", "-30.9086, -48.4523, -13.4718, 1.69", "-31.3255, -48.8558, -13.6938, 1.84", "-31.8798, -49.4088, -13.9722, 1.4", "-32.8246, -50.2811, -14.3998, 0.44", "-33.3304, -50.7013, -14.6231, 0.44", "-33.9675, -51.1886, -14.8841, 0.37", "-34.5329, -51.5776, -15.1066, 1.18", "-35.0253, -51.9047, -15.2931, 1.62", "-35.5373, -52.2735, -15.4779, 1.03", "-35.5874, -52.3179, -15.4984, 1.03", "-35.8384, -52.6062, -15.6327, 0.88", "-36.2438, -53.1425, -15.9094, 0.44", "-36.6617, -53.7162, -16.2235, 0.29", "-37.0312, -54.2447, -16.5247, 0.29", "-37.6972, -55.2104, -17.0873, 1.92", "-38.1506, -55.8748, -17.4702, 2.73", "-38.6081, -56.5544, -17.8684, 2.65", "-39.5024, -57.831, -18.6285, 0.66", "-39.5453, -57.888, -18.6639, 0.66", "-40.2102, -58.7237, -19.1921, 0.29", "-40.5072, -59.0853, -19.407, 0.29", "-40.875, -59.5248, -19.6748, 0.29", "-41.2989, -60.0509, -20.0349, 0.29", "-41.6881, -60.5361, -20.4086, 1.11", "-41.7301, -60.5898, -20.4498, 1.11", "-42.0764, -61.0385, -20.7868, 1.25", "-42.5215, -61.6152, -21.2052, 0.96", "-43.2833, -62.7098, -21.8637, 0.37", "-43.3159, -62.7636, -21.8936, 0.37", "-43.6706, -63.3702, -22.205, 0.22", "-43.9102, -63.7827, -22.3984, 0.22", "-43.9813, -63.8987, -22.4556, 0.66", "-44.4842, -64.6912, -22.822, 0.52", "-45.313, -65.9698, -23.3948, 1.77", "-45.9089, -66.8778, -23.8033, 2.58", "-46.4185, -67.6352, -24.149, 2.58", "-47.4076, -69.0812, -24.8008, 0.44", "-47.9346, -69.827, -25.1215, 0.29", "-47.9813, -69.8889, -25.1458, 0.29", "-48.3401, -70.3544, -25.2853, 0.29", "-48.8869, -71.0782, -25.4677, 1.47", "-49.1809, -71.4846, -25.5474, 1.84", "-49.5356, -72.0498, -25.61, 1.47", "-50.3878, -73.5426, -25.7626, 0.29", "-50.6835, -74.1121, -25.8134, 1.11", "-50.8817, -74.52, -25.8438, 1.25", "-51.1576, -75.1327, -25.8763, 1.03", "-51.5344, -76.0013, -25.9132, 0.22", "-51.7815, -76.5628, -25.927, 0.22", "-51.9373, -76.9096, -25.9254, 0.59", "-52.1799, -77.3871, -25.9254, 0.74", "-52.3472, -77.6709, -25.9365, 0.37", "-52.689, -78.1934, -25.9713, 0.22", "-53.1944, -78.8983, -26.0299, 1.55", "-53.6642, -79.551, -26.0898, 2.21", "-53.9314, -79.921, -26.1237, 1.84", "-54.7739, -81.0814, -26.2263, 0.22", "-55.2081, -81.6677, -26.2756, 0.22", "-55.7115, -82.3077, -26.3265, 1.11", "-56.0101, -82.6672, -26.3518, 1.62", "-56.3841, -83.0902, -26.3734, 1.84", "-56.9535, -83.7157, -26.3925, 1.11", "-57.2762, -84.0656, -26.3962, 0.66", "-58.1248, -84.9861, -26.4133, 0.29", "-58.5834, -85.4881, -26.4259, 0.59", "-59.6592, -86.7356, -26.443, 0.29", "-59.7046, -86.7911, -26.4432, 0.29", "-60.4302, -87.7205, -26.4375, 1.18", "-60.707, -88.0892, -26.4314, 1.55", "-60.9638, -88.4622, -26.4197, 1.55", "-61.6448, -89.5193, -26.4336, 0.52", "-62.2206, -90.4872, -26.5038, 0.37", "-62.255, -90.5493, -26.5119, 0.37", "-62.6551, -91.347, -26.6479, 0.37", "-62.9777, -92.0231, -26.782, 0.29", "-63.5736, -93.3263, -27.0768, 1.99", "-63.8349, -93.9241, -27.2289, 2.28", "-64.4282, -95.3637, -27.5826, 0.22", "-64.7848, -96.2018, -27.7691, 0.22", "-64.9486, -96.5854, -27.8277, 0.74", "-64.9766, -96.6507, -27.8329, 0.74", "-65.2225, -97.24, -27.8306, 0.74", "-65.5454, -98.0431, -27.7998, 0.22", "-65.9227, -98.9516, -27.7557, 0.22", "-66.5491, -100.406, -27.6871, 2.14", "-66.691, -100.736, -27.6727, 2.36", "-67.2267, -101.929, -27.6233, 0.29", "-67.4754, -102.451, -27.5958, 0.22", "-67.8216, -103.112, -27.5568, 0.22", "-68.2522, -103.885, -27.5055, 1.4", "-68.4924, -104.301, -27.4797, 1.77", "-68.8293, -104.901, -27.4298, 1.33", "-69.3861, -106.01, -27.3118, 0.37", "-69.7469, -106.809, -27.2293, 0.22", "-69.9592, -107.357, -27.1768, 0.22", "-70.2066, -108.07, -27.1245, 0.81", "-70.3416, -108.488, -27.1004, 0.81", "-70.6343, -109.38, -27.0854, 0.22", "-70.8331, -109.89, -27.111, 0.22", "-71.0933, -110.445, -27.1569, 1.25", "-71.3232, -110.847, -27.1996, 1.77", "-71.5975, -111.28, -27.251, 1.77", "-72.2026, -112.221, -27.372, 0.44", "-72.7615, -113.074, -27.4838, 0.29", "-73.2332, -113.809, -27.5883, 1.4", "-73.5116, -114.242, -27.6506, 1.77", "-73.7422, -114.614, -27.7045, 1.77", "-74.3688, -115.67, -27.8517, 0.37", "-74.8135, -116.476, -27.951, 0.29", "-75.2801, -117.322, -28.0694, 0.22", "-75.6948, -118.012, -28.1867, 0.22", "-76.2164, -118.807, -28.3355, 1.11", "-76.4169, -119.091, -28.3919, 1.4", "-76.8281, -119.663, -28.5078, 0.59", "-77.2865, -120.326, -28.6424, 0.22", "-77.7349, -121.005, -28.7753, 0.22", "-78.1922, -121.681, -28.9154, 1.11", "-78.4007, -121.97, -28.9753, 1.55", "-78.7092, -122.383, -29.0613, 1.33", "-79.2349, -123.068, -29.1988, 0.59", "-79.6412, -123.628, -29.2885, 0.22", "-79.8935, -123.981, -29.3284, 0.66", "-80.0259, -124.157, -29.3408, 0.66", "-80.1625, -124.329, -29.345, 0.66", "-80.58, -124.852, -29.3495, 0.22", "-81.0475, -125.417, -29.2999, 0.22", "-81.6352, -126.117, -29.1934, 1.33", "-81.8951, -126.422, -29.1362, 1.62", "-82.1743, -126.743, -29.0696, 1.33", "-83.0624, -127.743, -28.8471, 0.29", "-83.6297, -128.343, -28.7134, 0.29", "-84.1116, -128.784, -28.6272, 0.29", "-84.5789, -129.16, -28.573, 0.88", "-84.9055, -129.405, -28.542, 0.88", "-85.2875, -129.671, -28.5146, 0.66", "-85.9627, -130.128, -28.4886, 0.15", "-86.5487, -130.575, -28.526, 0.15", "-87.0962, -131.021, -28.5825, 0.15", "-87.3708, -131.24, -28.6214, 0.59", "-87.4295, -131.282, -28.6237, 0.59", "-87.737, -131.5, -28.613, 0.59", "-88.2462, -131.886, -28.5641, 0.22", "-88.3102, -131.943, -28.5562, 0.22", "-89.0207, -132.589, -28.4658, 0.22", "-90.0913, -133.597, -28.3283, 1.77", "-90.4691, -133.96, -28.2793, 2.14", "-90.953, -134.429, -28.2258, 1.47", "-91.8491, -135.368, -28.1672, 0.37", "-92.5772, -136.205, -28.1585, 0.22", "-92.9526, -136.716, -28.1849, 0.81", "-93.1515, -137.02, -28.2256, 0.96", "-93.4648, -137.512, -28.3137, 0.96", "-93.9937, -138.401, -28.5093, 0.22", "-94.0271, -138.46, -28.5244, 0.22", "-94.3493, -139.087, -28.6973, 0.22", "-94.6967, -139.797, -28.8859, 0.22", "-94.9095, -140.289, -29.0288, 0.96", "-95.0931, -140.723, -29.1534, 1.33", "-95.3407, -141.266, -29.3105, 1.11", "-95.7445, -142.059, -29.5944, 0.22", "-95.9516, -142.418, -29.7401, 0.59", "-96.5387, -143.396, -30.1241, 0.22", "-96.9832, -144.111, -30.3912, 1.18", "-97.2866, -144.571, -30.573, 1.4", "-98.0373, -145.633, -30.9911, 0.22", "-98.4822, -146.205, -31.2043, 0.22", "-98.9922, -146.838, -31.4155, 1.99", "-99.3903, -147.307, -31.5494, 2.5", "-99.8074, -147.804, -31.6829, 2.43", "-100.891, -149.102, -31.9729, 0.22", "-101.297, -149.599, -32.05, 0.29", "-101.861, -150.294, -32.1498, 0.22", "-102.182, -150.701, -32.2003, 0.74", "-102.333, -150.908, -32.2071, 0.74", "-102.843, -151.696, -32.1621, 0.15", "-103.175, -152.349, -32.1052, 0.15", "-103.262, -152.553, -32.0944, 0.81", "-103.526, -153.222, -32.0937, 1.33", "-103.779, -153.894, -32.1173, 1.33", "-103.803, -153.958, -32.1214, 1.33", "-104.17, -154.948, -32.2777, 0.22", "-104.56, -156.037, -32.5142, 0.22", "-104.851, -156.895, -32.7405, 1.62", "-105.045, -157.453, -32.9081, 1.92", "-105.209, -157.923, -33.0611, 1.92", "-105.632, -159.186, -33.4578, 0.22", "-105.867, -159.908, -33.6768, 0.22", "-106.117, -160.781, -33.9565, 0.22", "-106.322, -161.538, -34.2079, 1.25", "-106.438, -161.902, -34.332, 1.62", "-106.616, -162.357, -34.4745, 1.62", "-106.678, -162.488, -34.5122, 1.62", "-107.462, -163.916, -34.9788, 0.22", "-107.531, -164.041, -35.0274, 0.22", "-107.906, -164.788, -35.3424, 0.22", "-108.304, -165.621, -35.7038, 0.22", "-108.612, -166.246, -35.9742, 1.03", "-108.767, -166.555, -36.1055, 1.03", "-109.257, -167.512, -36.4993, 0.22", "-109.474, -167.95, -36.6801, 0.59", "-109.77, -168.619, -36.9484, 0.22", "-109.983, -169.112, -37.1255, 0.22", "-110.248, -169.768, -37.3133, 1.25", "-110.398, -170.147, -37.408, 1.62", "-110.443, -170.263, -37.4329, 1.62", "-110.91, -171.457, -37.7041, 0.15", "-111.196, -172.255, -37.8855, 1.25", "-111.301, -172.582, -37.9594, 1.25", "-111.651, -173.621, -38.2101, 0.22", "-111.677, -173.683, -38.2275, 0.22", "-111.949, -174.208, -38.3925, 0.74", "-111.981, -174.257, -38.4114, 0.74", "-112.149, -174.492, -38.4918, 0.74", "-112.801, -175.39, -38.7418, 0.15", "-113.314, -176.123, -38.8937, 1.11", "-113.403, -176.255, -38.9204, 1.11", "-113.447, -176.322, -38.9333, 1.11", "-114.581, -177.998, -39.2603, 0.22", "-114.934, -178.503, -39.3631, 1.03", "-115.22, -178.904, -39.4439, 1.11", "-116.104, -180.089, -39.7078, 0.22", "-116.248, -180.273, -39.7535, 0.59", "-116.94, -181.104, -39.96, 0.22", "-117.29, -181.489, -40.0591, 1.33", "-117.59, -181.804, -40.1253, 1.55", "-118.066, -182.265, -40.1925, 0.88", "-119.041, -183.205, -40.2688, 0.22", "-119.477, -183.63, -40.2945, 0.66", "-119.683, -183.826, -40.33, 0.66", "-120.464, -184.548, -40.5232, 0.22", "-121.21, -185.229, -40.7612, 1.62", "-121.767, -185.733, -40.9876, 2.06", "-122.251, -186.152, -41.2165, 2.06", "-123.935, -187.625, -42.072, 0.22", "-123.935, -187.625, -42.072, 0.59", "-124.045, -187.714, -42.1252, 0.59", "-124.75, -188.242, -42.4202, 0.22", "-125.455, -188.711, -42.652, 0.22", "-126.227, -189.181, -42.818, 1.77", "-126.664, -189.431, -42.8481, 2.06", "-128.352, -190.377, -42.8608, 0.15", "-128.692, -190.557, -42.8459, 0.74", "-129.076, -190.736, -42.7873, 0.74", "-129.906, -191.096, -42.5756, 0.22", "-130.618, -191.381, -42.3351, 0.22", "-131.401, -191.677, -42.0133, 1.18", "-131.778, -191.819, -41.8164, 1.55", "-132.979, -192.267, -41.1458, 0.29", "-133.865, -192.59, -40.6299, 0.22", "-134.256, -192.709, -40.4139, 0.74", "-134.578, -192.786, -40.2561, 1.03", "-135.629, -192.962, -39.8215, 0.15", "-135.961, -192.999, -39.7247, 0.37", "-136.033, -193.003, -39.7139, 0.37", "-137.181, -192.999, -39.6336, 0.22", "-137.987, -192.978, -39.6156, 1.18", "-138.56, -192.965, -39.6291, 1.55", "-139.953, -192.943, -39.7237, 0.22", "-140.615, -192.941, -39.7494, 0.22", "-141.431, -192.955, -39.7557, 0.96", "-141.717, -192.963, -39.7399, 1.33", "-143.123, -192.997, -39.5962, 0.22", "-143.703, -193.017, -39.5023, 0.22", "-144.758, -193.056, -39.2779, 0.96", "-145.035, -193.067, -39.2044, 1.25", "-146.831, -193.153, -38.6688, 0.22", "-147.548, -193.196, -38.4513, 0.22", "-148.914, -193.288, -38.0216, 1.84", "-149.196, -193.317, -37.9359, 2.36", "-151.048, -193.579, -37.4185, 0.22", "-151.541, -193.664, -37.28, 0.66", "-152.291, -193.832, -37.0921, 0.22", "-152.347, -193.846, -37.0796, 0.22", "-153.118, -194.037, -36.9753, 0.96", "-153.482, -194.124, -36.9481, 0.96", "-153.55, -194.142, -36.9499, 0.96", "-154.584, -194.396, -36.9795, 0.22", "-154.653, -194.412, -36.9814, 0.22", "-155.724, -194.663, -37.0185, 0.22", "-155.801, -194.681, -37.0216, 0.22", "-156.898, -194.986, -37.0393, 0.22", "-156.975, -195.009, -37.0392, 0.22", "-157.461, -195.161, -37.0288, 1.11", "-157.957, -195.318, -37.0169, 1.4", "-158.158, -195.383, -37.0112, 1.69", "-160.09, -195.999, -36.9509, 0.22", "-160.581, -196.15, -36.9328, 0.66", "-160.81, -196.222, -36.9239, 0.88" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-9.22658, -33.4093, 0.146408, 2.58", "-8.75473, -34.6706, -0.288673, 2.58", "-8.41746, -36.0997, -0.815484, 1.11", "-8.18776, -37.3189, -1.24344, 0.66", "-8.02583, -38.2673, -1.57515, 0.59", "-7.76799, -39.7865, -2.12612, 1.25", "-7.65124, -40.4242, -2.36423, 1.62", "-7.32292, -42.4211, -3.09802, 1.11", "-7.10631, -43.6078, -3.5578, 1.33", "-6.87034, -44.6772, -4.01517, 1.92", "-6.55724, -45.8089, -4.53481, 1.99", "-6.17088, -46.9727, -5.12357, 1.33", "-5.74373, -48.2144, -5.78649, 0.96", "-5.25509, -49.5737, -6.53579, 0.96", "-5.23977, -49.6225, -6.56517, 0.96", "-5.0492, -50.4613, -7.11087, 0.74", "-4.94805, -51.705, -8.08035, 0.52", "-5.02054, -52.5482, -8.85482, 0.52", "-5.03117, -52.5957, -8.90394, 0.52", "-5.22454, -53.2556, -9.62359, 0.88", "-5.47342, -54.0981, -10.5227, 1.18", "-5.88776, -55.4713, -11.9456, 0.59", "-6.13137, -56.2962, -12.7215, 0.59", "-6.14281, -56.3399, -12.7597, 0.59", "-6.30444, -57.087, -13.3286, 0.59", "-6.51662, -58.3598, -14.1054, 1.55", "-6.63861, -59.3076, -14.514, 2.14", "-6.71396, -59.8578, -14.6858, 2.36", "-6.7246, -59.914, -14.702, 2.36", "-6.89463, -60.5115, -14.8886, 2.36", "-7.18301, -61.1823, -15.1462, 2.06", "-7.72767, -62.1389, -15.5675, 1.77", "-8.34433, -63.1151, -16.0335, 0.74", "-8.66102, -63.5825, -16.2777, 0.52", "-9.23339, -64.3638, -16.7191, 0.44", "-9.98461, -65.253, -17.2995, 0.44", "-10.776, -66.0637, -17.9223, 2.06" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "3.06297, -169.853, 19.3573, 0.88", "2.9216, -171.152, 19.204, 0.88", "2.82434, -172.392, 18.9685, 0.88", "2.79097, -173.255, 18.7826, 1.18", "2.77556, -173.815, 18.645, 1.18", "2.74273, -175.33, 18.2641, 0.52", "2.72785, -176.017, 18.0914, 0.52", "2.72882, -177.365, 17.7104, 1.99", "2.75296, -178.657, 17.2914, 3.09", "2.78166, -179.47, 17.001, 3.61", "2.81883, -180.426, 16.6542, 3.61" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "3.06297, -169.853, 19.3573, 0.74", "3.74887, -170.815, 18.8933, 0.74", "4.49429, -172.022, 18.3888, 0.66", "4.86581, -172.623, 18.1373, 1.11", "5.10465, -173.01, 17.9756, 1.25", "6.1971, -174.779, 17.2362, 0.29", "6.66141, -175.531, 16.9219, 0.29", "7.20178, -176.535, 16.4829, 0.29", "12.1581, -184.618, 13.8914, 0.29", "18.0868, -192.39, 12.7531, 0.29", "24.591, -199.625, 11.1296, 0.29", "30.3568, -207.581, 10.716, 0.29", "35.6226, -215.859, 10.2815, 0.29" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-20.6694, 133.031, -68.0653, 0.22", "-21.3977, 132.329, -69.3978, 0.22", "-21.6864, 132.091, -69.9703, 1.18", "-21.787, 132.015, -70.1567, 1.18", "-23.1584, 131.054, -72.5956, 0.22", "-23.4565, 130.854, -73.1184, 0.22", "-24.4313, 130.198, -74.8284, 0.74", "-25.7005, 129.492, -77.0303, 0.22", "-26.1085, 129.288, -77.7404, 1.03", "-26.2704, 129.21, -78.0199, 1.25", "-26.4015, 129.156, -78.2253, 1.25" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-20.6694, 133.031, -68.0653, 0.52", "-20.3793, 134.205, -69.6656, 0.52", "-20.2266, 134.932, -70.6133, 0.22", "-20.0517, 136.075, -71.9232, 0.88", "-20.0298, 136.272, -72.1247, 1.03", "-19.8961, 138.016, -73.7816, 0.15", "-19.8711, 138.45, -74.1747, 0.52", "-19.8783, 138.619, -74.3025, 0.52", "-19.9681, 139.86, -75.107, 0.15", "-20.0139, 140.427, -75.4188, 0.81", "-20.0838, 141.177, -75.8045, 1.11", "-20.0917, 141.24, -75.8306, 1.11", "-20.269, 142.692, -76.4503, 0.22", "-20.3451, 143.331, -76.7452, 0.96", "-20.3925, 143.735, -76.9623, 1.11" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-10.9434, 125.393, -16.6091, 0.96", "-11.4484, 126.285, -17.7904, 0.96", "-11.9563, 127.189, -18.9706, 1.03", "-12.0608, 127.401, -19.247, 1.03", "-12.4012, 128.141, -20.2001, 0.29", "-12.6218, 128.72, -20.8731, 1.25", "-12.7514, 129.123, -21.2992, 1.47", "-12.7825, 129.262, -21.4201, 1.47", "-13.0239, 130.552, -22.3316, 0.29", "-13.0423, 130.669, -22.4116, 0.29", "-13.1579, 131.659, -23.0254, 0.29", "-13.1886, 132.031, -23.2696, 0.59", "-13.2398, 132.861, -23.821, 0.44", "-13.2948, 133.911, -24.5183, 2.28", "-13.326, 134.541, -24.9301, 2.65", "-13.3406, 134.842, -25.1342, 2.65", "-13.4522, 136.805, -26.5251, 0.37", "-13.4806, 137.429, -26.9425, 0.29", "-13.482, 137.508, -26.9907, 0.29", "-13.4811, 137.958, -27.225, 0.44", "-13.4824, 138.226, -27.3345, 0.44", "-13.4959, 139.028, -27.5912, 0.15", "-13.524, 139.731, -27.7167, 0.74", "-13.5266, 139.799, -27.7309, 0.74", "-13.5526, 140.21, -27.8548, 0.74", "-13.5802, 140.553, -27.9722, 0.52", "-13.6744, 141.352, -28.2594, 0.29", "-13.8179, 142.341, -28.6197, 1.18", "-13.8963, 142.806, -28.7912, 1.69", "-14.1966, 144.456, -29.4763, 0.29", "-14.3227, 145.095, -29.7543, 0.29", "-14.5877, 146.305, -30.2888, 1.77", "-14.6709, 146.624, -30.4363, 2.73", "-14.7479, 146.875, -30.5566, 2.73", "-15.449, 148.949, -31.5721, 0.29", "-15.6737, 149.554, -31.8679, 0.29", "-15.7659, 149.774, -31.9828, 0.59", "-16.111, 150.5, -32.3887, 0.22", "-16.3764, 150.999, -32.6756, 0.74", "-16.4918, 151.172, -32.7742, 1.03", "-16.538, 151.217, -32.7996, 1.03", "-16.8397, 151.493, -32.9727, 0.81", "-16.9241, 151.577, -33.022, 0.81", "-17.7039, 152.435, -33.4486, 0.22", "-18.0639, 152.864, -33.6427, 0.59", "-18.6545, 153.583, -33.9483, 0.22", "-18.7466, 153.697, -33.9922, 0.22", "-19.1344, 154.197, -34.155, 0.22", "-19.5843, 154.807, -34.3187, 0.22", "-20.2025, 155.7, -34.5241, 1.62", "-20.6309, 156.348, -34.6622, 2.14", "-20.9982, 156.912, -34.7734, 2.14", "-21.9489, 158.326, -35.053, 0.29", "-22.2544, 158.769, -35.1405, 0.44", "-22.5958, 159.273, -35.2408, 0.22", "-23.1197, 160.08, -35.3988, 0.22", "-23.5935, 160.857, -35.5545, 1.25", "-23.7871, 161.191, -35.6254, 1.62", "-23.8862, 161.382, -35.6726, 1.84", "-24.5466, 162.828, -36.0837, 0.29", "-25.0105, 163.989, -36.4369, 0.29", "-25.2708, 164.79, -36.7154, 0.74", "-25.3629, 165.111, -36.8478, 0.74", "-25.6537, 166.226, -37.3561, 0.22", "-25.8831, 167.212, -37.8362, 1.62", "-25.8928, 167.263, -37.8621, 1.62", "-26.0103, 167.977, -38.2164, 1.99", "-26.2666, 169.695, -39.0406, 0.22", "-26.2745, 169.748, -39.0649, 0.22", "-26.408, 170.551, -39.3945, 0.22", "-26.554, 171.431, -39.7214, 0.96", "-26.6137, 171.768, -39.84, 1.25", "-26.877, 173.31, -40.2987, 0.22", "-26.8855, 173.366, -40.3128, 0.22", "-27.0128, 174.144, -40.5052, 0.74", "-27.0502, 174.353, -40.5555, 0.88", "-27.1595, 174.906, -40.6873, 0.29", "-27.38, 175.978, -40.9162, 0.22", "-27.5211, 176.673, -41.0344, 0.22", "-27.6689, 177.655, -41.1551, 1.33", "-27.7045, 178.02, -41.1831, 1.92", "-27.709, 178.078, -41.1854, 1.92", "-27.7365, 178.517, -41.1911, 1.77", "-27.7668, 178.972, -41.1926, 1.69", "-27.8676, 180.53, -41.1862, 0.22", "-27.9828, 181.816, -41.1533, 0.22", "-28.1196, 183.021, -41.1132, 1.47", "-28.1924, 183.539, -41.0932, 1.99", "-28.2545, 183.884, -41.0793, 1.92", "-28.366, 184.369, -41.0603, 1.47", "-28.8534, 186.054, -41.0061, 0.22", "-29.0781, 186.732, -40.979, 0.44", "-29.1831, 187.049, -40.9715, 0.44", "-29.4754, 187.943, -40.9628, 0.22", "-29.7954, 188.98, -40.9729, 1.18", "-29.937, 189.475, -40.9868, 2.14", "-30.0905, 190.048, -41.0204, 1.62", "-30.5568, 191.872, -41.1426, 0.22", "-30.5728, 191.939, -41.1475, 0.22", "-30.8855, 193.404, -41.2446, 0.22", "-31.132, 194.66, -41.3175, 0.22", "-31.2811, 195.484, -41.3422, 1.03", "-31.3301, 195.767, -41.343, 1.62", "-31.3803, 196.051, -41.3332, 1.11", "-31.5623, 197.414, -41.2209, 0.22", "-31.5675, 197.471, -41.2132, 0.22", "-31.6192, 198.57, -41.0259, 1.47", "-31.6284, 198.928, -40.9568, 2.06", "-31.6304, 199.005, -40.9419, 2.06", "-31.6973, 200.671, -40.6681, 0.22", "-31.7488, 201.597, -40.5415, 0.52", "-31.8511, 202.828, -40.4053, 0.22", "-31.9387, 203.645, -40.3349, 1.33", "-31.994, 204.066, -40.3139, 1.33", "-32.221, 205.5, -40.2971, 0.22", "-32.3256, 206.049, -40.3207, 0.22", "-32.4643, 206.797, -40.3766, 0.66", "-32.5171, 207.09, -40.4076, 0.66", "-32.7308, 208.472, -40.5724, 0.22", "-32.7369, 208.542, -40.5819, 0.22", "-32.7643, 209.479, -40.7166, 0.22", "-32.7551, 210.364, -40.8675, 0.96", "-32.7343, 210.853, -40.959, 1.62", "-32.7087, 211.361, -41.0574, 1.4", "-32.6725, 212.978, -41.3858, 0.22", "-32.6774, 213.398, -41.4782, 0.22", "-32.7235, 214.402, -41.711, 1.11", "-32.7347, 214.547, -41.7445, 1.33", "-32.7785, 214.961, -41.8503, 1.18", "-33.007, 216.789, -42.3244, 0.22", "-33.134, 217.639, -42.5543, 1.03", "-33.2079, 218.114, -42.6845, 1.18", "-33.262, 218.454, -42.792, 1.03", "-33.4441, 219.617, -43.2024, 0.15", "-33.587, 220.591, -43.5736, 0.15", "-33.7128, 221.503, -43.9296, 1.33", "-33.7855, 222.01, -44.1234, 1.55", "-34.0499, 223.799, -44.8228, 0.15", "-34.0602, 223.865, -44.8476, 0.15", "-34.2, 224.687, -45.1264, 0.15", "-34.3678, 225.63, -45.4325, 1.11", "-34.421, 225.954, -45.5238, 1.55", "-34.6296, 227.363, -45.8599, 0.15", "-34.7405, 228.121, -45.9898, 0.74", "-34.9129, 229.245, -46.1651, 0.15", "-34.9245, 229.311, -46.1743, 0.15", "-35.043, 229.95, -46.2513, 0.15", "-35.1858, 230.719, -46.3182, 0.96", "-35.2494, 231.071, -46.337, 0.96", "-35.5215, 232.631, -46.4344, 0.15", "-35.6273, 233.294, -46.4783, 0.44", "-35.6396, 233.372, -46.4857, 0.44", "-35.7914, 234.367, -46.6151, 0.15", "-35.9269, 235.325, -46.7624, 1.03", "-35.9793, 235.742, -46.8324, 1.33", "-36.0401, 236.397, -46.9585, 0.59", "-36.1179, 237.494, -47.1895, 0.15", "-36.1746, 238.319, -47.3697, 0.88", "-36.2047, 238.795, -47.4761, 1.03", "-36.2344, 239.292, -47.5833, 0.66", "-36.2762, 240.427, -47.8917, 0.15", "-36.3034, 241.617, -48.2566, 0.15", "-36.3099, 242.384, -48.467, 0.96", "-36.3177, 242.824, -48.5787, 1.25", "-36.325, 243.118, -48.6472, 1.25", "-36.4039, 244.951, -49.031, 0.15", "-36.44, 245.441, -49.111, 0.44", "-36.5449, 246.509, -49.2438, 0.15", "-36.5993, 247.011, -49.2808, 0.74", "-36.6563, 247.515, -49.2969, 0.74", "-36.7483, 248.465, -49.2859, 0.15", "-36.8274, 249.256, -49.2394, 0.88", "-36.8687, 249.751, -49.2262, 0.96", "-36.9501, 250.982, -49.2369, 0.15", "-36.9924, 251.635, -49.2362, 0.29", "-37.0734, 252.829, -49.2242, 0.15", "-37.1166, 253.482, -49.2107, 0.96", "-37.1468, 254.048, -49.1999, 1.18", "-37.2461, 255.977, -49.1438, 0.22", "-37.288, 256.846, -49.1122, 0.22", "-37.298, 257.064, -49.1018, 0.22", "-37.3039, 257.215, -49.0928, 0.22", "-37.3161, 258.229, -49.0762, 0.15", "-37.32, 259.08, -49.0999, 1.11", "-37.3173, 259.547, -49.1317, 1.77", "-37.3119, 259.913, -49.1664, 1.77", "-37.3114, 259.993, -49.1755, 1.77", "-37.3066, 262.136, -49.4149, 0.22", "-37.3217, 262.84, -49.49, 0.15", "-37.3231, 262.898, -49.4958, 0.15", "-37.3468, 263.576, -49.5469, 0.52", "-37.3658, 263.87, -49.5632, 0.59", "-37.5276, 265.494, -49.6165, 0.15", "-37.6226, 266.346, -49.6154, 1.03", "-37.6715, 266.796, -49.6176, 1.77", "-37.7202, 267.23, -49.623, 1.55", "-37.9729, 269.091, -49.6629, 0.15", "-38.0424, 269.535, -49.6813, 0.29", "-38.1756, 270.292, -49.7309, 0.15", "-38.3313, 271.134, -49.7935, 0.15", "-38.3593, 271.28, -49.8044, 0.15", "-38.6491, 272.771, -49.9319, 0.15", "-38.861, 273.841, -50.0283, 1.11", "-38.8749, 273.908, -50.0347, 1.11", "-39.0074, 274.506, -50.092, 1.4", "-39.1373, 275.179, -50.1661, 0.59", "-39.3191, 276.26, -50.2905, 0.22", "-39.4327, 277.112, -50.3892, 0.22", "-39.5419, 278.023, -50.4901, 1.03", "-39.5973, 278.584, -50.556, 1.55", "-39.7876, 281.063, -50.8403, 0.15", "-39.7927, 281.133, -50.848, 0.15", "-39.8355, 281.734, -50.8962, 0.44", "-39.8586, 282.101, -50.9167, 0.44", "-39.9552, 283.607, -50.977, 0.15", "-40.0158, 284.476, -51.004, 1.03", "-40.0582, 285.057, -51.0141, 1.62", "-40.2139, 286.913, -51.1406, 0.15", "-40.4433, 289.302, -51.3838, 0.15", "-40.5447, 290.271, -51.5078, 0.15", "-40.6204, 290.932, -51.6092, 1.11", "-40.7004, 291.647, -51.7424, 1.4", "-40.9358, 294.018, -52.2499, 0.15", "-41.0018, 294.711, -52.4188, 0.15", "-41.0799, 295.549, -52.6239, 0.74", "-41.1008, 295.922, -52.7005, 0.74", "-41.1023, 295.99, -52.7116, 0.74", "-41.0916, 297.888, -52.948, 0.15", "-41.0522, 299.026, -53.0254, 1.55", "-41.0116, 299.733, -53.0756, 1.92", "-40.8732, 301.814, -53.2214, 0.15", "-40.8252, 302.499, -53.2676, 0.88", "-40.8137, 302.646, -53.2775, 0.88", "-40.7665, 303.142, -53.312, 0.88", "-40.6088, 304.643, -53.4244, 0.15", "-40.5555, 305.218, -53.4584, 0.15", "-40.5037, 305.829, -53.4802, 0.74", "-40.3892, 307.244, -53.515, 0.15", "-40.3849, 307.312, -53.5151, 0.15", "-40.3689, 307.66, -53.5069, 0.37", "-40.3564, 308.463, -53.4645, 0.22", "-40.3571, 308.98, -53.4223, 0.88", "-40.3588, 309.039, -53.4161, 0.88", "-40.4346, 310.613, -53.3101, 0.15", "-40.4688, 311.28, -53.2868, 0.15", "-40.4725, 311.359, -53.2866, 0.15", "-40.5265, 312.462, -53.3209, 1.25", "-40.5401, 312.739, -53.3422, 1.25", "-40.658, 314.572, -53.5448, 0.15", "-40.6635, 314.642, -53.555, 0.15", "-40.7218, 315.309, -53.6781, 1.18", "-40.7434, 315.514, -53.7184, 1.18", "-40.9169, 317.007, -54.0821, 0.15", "-41.0886, 318.101, -54.4026, 0.15", "-41.1429, 318.371, -54.4899, 0.44", "-41.5489, 320.23, -55.124, 0.15", "-41.8651, 321.56, -55.607, 1.77", "-42.0634, 322.347, -55.9135, 1.55", "-42.4004, 323.596, -56.4327, 0.22", "-42.5518, 324.116, -56.6731, 0.37", "-42.816, 324.942, -57.0705, 0.15", "-42.8352, 324.992, -57.0953, 0.15", "-43.0651, 325.556, -57.3869, 0.74", "-43.1923, 325.865, -57.5298, 0.74", "-43.4708, 326.589, -57.8386, 0.15", "-43.6528, 327.03, -58.024, 0.66", "-43.7959, 327.359, -58.1541, 1.25", "-44.451, 328.785, -58.7185, 0.15", "-44.4837, 328.854, -58.7453, 0.15", "-44.8876, 329.722, -59.068, 0.15", "-45.2488, 330.54, -59.3457, 0.96", "-45.4117, 330.915, -59.4742, 1.55", "-46.2237, 332.873, -60.1208, 0.15", "-46.2438, 332.926, -60.1364, 0.15", "-46.59, 333.909, -60.4159, 1.18", "-46.7823, 334.506, -60.5798, 0.52", "-47.0823, 335.563, -60.8446, 0.15", "-47.2406, 336.177, -60.9803, 0.52", "-47.677, 337.974, -61.2935, 0.15", "-47.8434, 338.584, -61.3829, 0.15", "-48.1244, 339.479, -61.4901, 0.66", "-48.3176, 340.021, -61.5361, 0.96", "-48.478, 340.419, -61.5504, 0.96", "-49.1769, 341.846, -61.5103, 0.15", "-49.7149, 342.767, -61.4312, 0.52", "-49.9607, 343.16, -61.3868, 0.52", "-50.3699, 343.779, -61.3022, 0.15", "-50.8681, 344.506, -61.1918, 1.11", "-52.1205, 346.285, -60.8873, 0.15", "-52.5689, 346.909, -60.7596, 1.18", "-52.9027, 347.378, -60.6689, 0.59" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-10.9434, 125.393, -16.6091, 0.59", "-10.8168, 126.273, -16.6312, 0.59", "-10.7364, 127.061, -16.6652, 1.18", "-10.6861, 127.822, -16.7182, 1.84", "-10.6679, 128.273, -16.753, 2.06", "-10.6626, 128.708, -16.7861, 2.06", "-10.6701, 129.263, -16.826, 1.84", "-10.7075, 129.873, -16.8676, 1.55", "-10.8161, 130.963, -16.9415, 0.37", "-10.9056, 131.661, -16.9859, 0.37", "-11.0329, 132.514, -17.0507, 0.96", "-11.1732, 133.363, -17.1195, 1.47", "-11.2487, 133.783, -17.1525, 1.69", "-11.3603, 134.407, -17.1952, 1.55", "-11.4627, 134.974, -17.2326, 1.33", "-11.5645, 135.709, -17.2806, 0.66", "-11.6434, 136.636, -17.3563, 0.37", "-11.6808, 137.693, -17.4518, 0.29", "-11.6756, 138.596, -17.5368, 0.29", "-11.6718, 138.666, -17.5434, 0.29", "-11.5147, 140.202, -17.6739, 0.29", "-11.4125, 140.938, -17.7238, 0.81", "-11.3269, 141.479, -17.761, 0.96", "-11.3173, 141.547, -17.765, 0.96", "-11.2733, 141.979, -17.787, 0.96", "-11.2115, 143.07, -17.8284, 0.29", "-11.21, 143.716, -17.8461, 0.29", "-11.2319, 144.593, -17.8572, 1.47", "-11.2688, 145.437, -17.8882, 2.06", "-11.279, 145.747, -17.9049, 2.5", "-11.2941, 146.243, -17.9377, 2.43", "-11.3056, 146.777, -17.977, 2.14", "-11.314, 147.387, -18.0259, 1.77", "-11.3232, 148.216, -18.0927, 0.66", "-11.3417, 149.473, -18.1884, 0.44", "-11.3659, 150.473, -18.255, 0.37", "-11.4025, 151.408, -18.3092, 0.37", "-11.4663, 152.344, -18.3523, 1.33", "-11.5491, 153.183, -18.3823, 1.77", "-11.6514, 153.972, -18.3978, 2.28", "-11.7351, 154.46, -18.4118, 2.65", "-11.8116, 154.88, -18.4266, 2.8", "-11.9219, 155.463, -18.4484, 2.5", "-12.0061, 155.953, -18.4656, 1.99", "-12.0706, 156.367, -18.4812, 1.77", "-12.1565, 157.042, -18.5069, 0.81", "-12.2317, 157.96, -18.5345, 0.44", "-12.2773, 158.893, -18.5603, 0.37", "-12.2817, 159.714, -18.5767, 0.74", "-12.2755, 160.131, -18.5814, 0.74", "-12.2663, 160.742, -18.5822, 0.74", "-12.2653, 161.971, -18.5851, 0.52", "-12.2661, 162.03, -18.5856, 0.44", "-12.2933, 162.956, -18.5999, 0.44", "-12.3297, 163.732, -18.6147, 0.44", "-12.4126, 165.087, -18.6444, 0.44", "-12.5509, 166.729, -18.684, 1.55", "-12.6309, 167.518, -18.7048, 2.43", "-12.6879, 168.092, -18.7184, 2.65", "-12.7377, 168.587, -18.7369, 2.87", "-12.8097, 169.308, -18.7693, 2.36", "-12.888, 170.077, -18.8219, 1.47", "-12.9405, 170.591, -18.8561, 0.96", "-13.0543, 171.607, -18.9263, 0.37", "-13.1613, 172.513, -18.987, 0.37", "-13.2949, 173.632, -19.0575, 0.29", "-13.3889, 174.497, -19.1164, 1.69", "-13.4769, 175.355, -19.2022, 2.28", "-13.5216, 175.736, -19.2513, 2.73", "-13.5718, 176.095, -19.3054, 2.8", "-13.6697, 176.743, -19.4097, 1.99", "-13.8137, 177.654, -19.579, 0.88", "-14.0184, 178.72, -19.7898, 0.29", "-14.187, 179.438, -19.9497, 0.37", "-14.3189, 179.946, -20.0613, 0.44", "-14.399, 180.219, -20.1132, 0.59", "-14.4403, 180.354, -20.1311, 0.59", "-14.5688, 180.794, -20.1566, 0.44", "-14.7331, 181.503, -20.1566, 0.37", "-14.745, 181.571, -20.1558, 0.37", "-14.8775, 182.636, -20.147, 0.52", "-14.957, 183.569, -20.1386, 0.81", "-14.9763, 184.011, -20.1386, 0.81", "-14.9789, 184.467, -20.1434, 0.66", "-14.9777, 184.526, -20.146, 0.66", "-14.9756, 185.066, -20.193, 0.44", "-14.974, 186.076, -20.3192, 0.37", "-14.9719, 187.021, -20.4515, 0.37", "-14.9714, 187.078, -20.4623, 0.37", "-14.9579, 188.005, -20.6885, 1.62", "-14.9471, 188.793, -20.9135, 2.65", "-14.9413, 189.247, -21.0577, 2.65", "-14.9259, 190.194, -21.3883, 1.92", "-14.9077, 191.341, -21.8002, 0.74", "-14.9051, 192.377, -22.1569, 0.37", "-14.9253, 193.295, -22.425, 0.37", "-14.9284, 193.352, -22.4383, 0.37", "-14.9942, 193.943, -22.5396, 0.37", "-15.0191, 194.09, -22.5527, 0.37", "-15.2056, 194.934, -22.5338, 0.37", "-15.4605, 195.952, -22.4457, 1.03", "-15.6696, 196.776, -22.3597, 1.77", "-15.7857, 197.258, -22.3116, 2.06", "-15.8972, 197.741, -22.263, 1.92", "-16.0475, 198.452, -22.2012, 1.33", "-16.1404, 198.953, -22.1689, 0.59", "-16.2778, 199.796, -22.146, 0.37", "-16.3375, 200.311, -22.1335, 0.59", "-16.3559, 200.668, -22.127, 0.66", "-16.3569, 200.886, -22.1245, 0.66", "-16.3518, 201.393, -22.1228, 0.37", "-16.3498, 201.901, -22.1228, 0.37", "-16.3726, 202.852, -22.1228, 0.37", "-16.4147, 203.778, -22.1228, 0.37", "-16.4664, 204.64, -22.1228, 0.59", "-16.5537, 205.924, -22.1228, 0.52", "-16.6116, 206.706, -22.1228, 1.33", "-16.6707, 207.446, -22.1331, 2.14", "-16.7383, 208.173, -22.1663, 2.36", "-16.787, 208.815, -22.2173, 2.58", "-16.8006, 209.351, -22.2741, 2.36", "-16.7874, 210.155, -22.3709, 1.62", "-16.7574, 210.944, -22.4742, 0.81", "-16.7058, 211.938, -22.6055, 0.52", "-16.6501, 213.0, -22.733, 0.52", "-16.6121, 213.76, -22.815, 0.44", "-16.5566, 215.182, -22.9462, 0.44", "-16.5222, 216.594, -23.0465, 1.11", "-16.5223, 217.383, -23.0768, 1.84", "-16.5495, 218.159, -23.0872, 2.36", "-16.5747, 218.435, -23.088, 2.5", "-16.67, 219.075, -23.086, 2.21", "-16.7888, 219.699, -23.0787, 1.55", "-16.9139, 220.265, -23.0669, 0.96", "-17.0377, 220.804, -23.0572, 0.66", "-17.2107, 221.65, -23.047, 0.37", "-17.3351, 222.407, -23.0356, 0.66", "-17.412, 222.988, -23.0239, 0.88", "-17.4991, 223.921, -23.0019, 0.37", "-17.5316, 224.498, -22.9872, 0.37", "-17.5544, 225.434, -22.9589, 0.37", "-17.5362, 226.587, -22.9243, 1.11", "-17.533, 226.645, -22.9227, 1.11", "-17.4531, 227.443, -22.9163, 1.99", "-17.3727, 228.034, -22.9225, 2.21", "-17.3068, 228.458, -22.9345, 2.36", "-17.1533, 229.442, -22.9726, 1.33", "-17.0475, 230.125, -23.0042, 0.52", "-16.9101, 231.146, -23.0542, 0.29", "-16.8632, 231.572, -23.0744, 0.59", "-16.8315, 231.93, -23.0899, 0.59", "-16.7797, 232.643, -23.1159, 0.44", "-16.743, 233.296, -23.1339, 0.37", "-16.7065, 234.017, -23.145, 0.37", "-16.6665, 234.825, -23.1576, 1.18", "-16.6257, 235.418, -23.1759, 1.77", "-16.5682, 236.061, -23.203, 2.06", "-16.508, 236.637, -23.2331, 1.92", "-16.4452, 237.199, -23.2675, 1.55", "-16.3695, 238.077, -23.3235, 0.37", "-16.3133, 239.036, -23.3866, 0.37", "-16.3126, 239.107, -23.3925, 0.37", "-16.3377, 239.825, -23.4594, 0.37", "-16.3423, 239.896, -23.4661, 0.37", "-16.4476, 241.246, -23.5867, 0.37", "-16.4545, 241.317, -23.5921, 0.37", "-16.5897, 242.575, -23.7025, 1.18", "-16.6738, 243.353, -23.7729, 1.62", "-16.7132, 243.779, -23.8113, 1.84", "-16.759, 244.506, -23.8713, 1.55", "-16.7734, 245.218, -23.936, 1.11", "-16.7741, 245.922, -23.9988, 0.52", "-16.7525, 246.99, -24.0887, 0.44", "-16.7253, 247.818, -24.1636, 0.37", "-16.6818, 248.867, -24.2584, 0.37", "-16.6036, 250.266, -24.3933, 1.33", "-16.5767, 250.69, -24.4333, 1.84", "-16.5669, 250.841, -24.4461, 1.84", "-16.5378, 251.267, -24.482, 1.84", "-16.4952, 252.22, -24.5517, 1.25", "-16.4781, 252.791, -24.5959, 0.74", "-16.4669, 253.721, -24.662, 0.37", "-16.4595, 254.396, -24.7132, 0.44", "-16.4531, 255.138, -24.7794, 0.44", "-16.4498, 256.204, -24.8835, 0.44", "-16.454, 257.088, -24.976, 1.03", "-16.4674, 257.879, -25.058, 1.18", "-16.4784, 258.554, -25.1414, 0.74", "-16.4914, 259.054, -25.2077, 0.74", "-16.5192, 259.831, -25.3116, 0.59", "-16.5223, 259.901, -25.3204, 0.59", "-16.5517, 260.473, -25.3767, 0.59", "-16.605, 261.611, -25.5035, 1.47", "-16.6312, 262.322, -25.5811, 2.21", "-16.6462, 262.894, -25.6398, 2.5", "-16.6469, 263.389, -25.69, 2.65", "-16.6206, 264.332, -25.7754, 1.55", "-16.5603, 265.289, -25.8496, 0.74", "-16.4551, 266.404, -25.9333, 0.52", "-16.4458, 266.482, -25.9405, 0.52", "-16.3148, 267.386, -26.0346, 0.52", "-16.1113, 268.587, -26.1759, 1.33", "-15.9534, 269.43, -26.2812, 1.4", "-15.7764, 270.321, -26.3945, 1.18", "-15.6497, 271.009, -26.4961, 0.52", "-15.629, 271.145, -26.5189, 0.52", "-15.5313, 271.95, -26.6666, 0.52", "-15.4685, 272.615, -26.7922, 0.52", "-15.3826, 273.825, -27.0073, 0.74", "-15.3292, 274.888, -27.1681, 0.96", "-15.2894, 276.001, -27.3245, 1.99", "-15.2796, 276.369, -27.3723, 2.58", "-15.2622, 276.884, -27.4304, 2.36", "-15.2341, 277.467, -27.4879, 2.14", "-15.1713, 278.321, -27.554, 1.03", "-15.071, 279.235, -27.6139, 0.52", "-14.9363, 280.281, -27.682, 0.52", "-14.7954, 281.383, -27.744, 0.52", "-14.7222, 281.973, -27.7723, 0.88", "-14.6533, 282.54, -27.7943, 0.52", "-14.5481, 283.465, -27.8197, 0.52", "-14.4775, 284.206, -27.8278, 0.52", "-14.3988, 285.403, -27.8353, 1.4", "-14.3714, 286.065, -27.8377, 1.77", "-14.3605, 286.507, -27.8365, 1.92", "-14.3534, 286.933, -27.8328, 1.62", "-14.3452, 287.664, -27.822, 1.11", "-14.3331, 288.532, -27.8111, 0.74", "-14.3133, 289.796, -27.8113, 0.59", "-14.2971, 291.309, -27.8108, 0.59", "-14.2881, 292.496, -27.8099, 0.44", "-14.2828, 293.0, -27.8093, 0.66", "-14.2819, 293.071, -27.8092, 0.66", "-14.2637, 294.222, -27.8062, 1.33", "-14.2497, 295.155, -27.8027, 2.21", "-14.2356, 295.877, -27.7878, 2.73", "-14.2336, 296.555, -27.7688, 2.87", "-14.2352, 296.869, -27.7625, 3.09", "-14.25, 297.533, -27.7577, 2.36", "-14.2835, 298.322, -27.7606, 1.25", "-14.3205, 298.887, -27.7707, 0.66", "-14.4276, 300.04, -27.8215, 0.37", "-14.5349, 300.92, -27.8779, 0.66", "-14.6197, 301.567, -27.9289, 0.52", "-14.6651, 301.926, -27.9623, 0.66", "-14.7449, 302.634, -28.0363, 0.74", "-14.818, 303.446, -28.1419, 0.81", "-14.8689, 304.301, -28.2736, 1.25", "-14.8821, 304.842, -28.3643, 1.69", "-14.8777, 305.244, -28.4368, 1.69", "-14.8466, 306.03, -28.5834, 1.4", "-14.7932, 306.89, -28.7481, 1.11", "-14.7339, 307.589, -28.8713, 0.74", "-14.644, 308.628, -29.0444, 0.59", "-14.6382, 308.705, -29.0566, 0.59", "-14.5934, 309.497, -29.1655, 0.59", "-14.59, 309.565, -29.1727, 0.59", "-14.5493, 310.922, -29.252, 0.59", "-14.5496, 311.779, -29.2755, 1.11", "-14.5524, 311.847, -29.2774, 1.11", "-14.5937, 312.48, -29.2942, 1.77", "-14.6456, 313.074, -29.313, 2.06", "-14.6966, 313.568, -29.3333, 2.06", "-14.7778, 314.207, -29.3631, 1.77", "-14.8321, 314.645, -29.3832, 1.4", "-14.8898, 315.149, -29.4063, 0.81", "-15.0206, 316.29, -29.4627, 0.59", "-15.1453, 317.442, -29.521, 0.59", "-15.2108, 318.153, -29.5651, 0.96", "-15.2577, 318.648, -29.5984, 0.96", "-15.2724, 318.801, -29.6086, 0.96", "-15.3094, 319.188, -29.6364, 0.81", "-15.37, 319.864, -29.6847, 0.81", "-15.4562, 320.96, -29.7625, 0.37", "-15.5309, 322.034, -29.8392, 0.37", "-15.5899, 323.037, -29.8899, 0.37", "-15.6256, 323.737, -29.9119, 1.25", "-15.6474, 324.458, -29.9119, 1.77", "-15.6576, 325.054, -29.8918, 2.28", "-15.6506, 325.62, -29.8516, 2.58", "-15.6225, 326.337, -29.7886, 2.36", "-15.5965, 326.969, -29.7256, 1.92", "-15.5641, 327.749, -29.6465, 0.96", "-15.5343, 328.477, -29.5797, 0.37", "-15.5026, 329.511, -29.5016, 0.37", "-15.4899, 330.241, -29.4713, 0.74", "-15.4896, 330.671, -29.4699, 0.74", "-15.4987, 331.295, -29.4815, 0.74", "-15.5184, 331.941, -29.5258, 0.37", "-15.5452, 332.651, -29.6134, 0.29", "-15.5691, 333.196, -29.7101, 0.29", "-15.572, 333.263, -29.7249, 0.29", "-15.621, 334.596, -30.0713, 0.29", "-15.6327, 335.286, -30.2759, 0.74", "-15.6284, 336.337, -30.5996, 1.84", "-15.6213, 336.727, -30.7154, 2.28", "-15.6204, 336.784, -30.7302, 2.28", "-15.6121, 337.411, -30.8776, 2.06", "-15.6049, 338.275, -31.0509, 1.25", "-15.6123, 339.285, -31.1914, 0.15", "-15.6204, 339.861, -31.2435, 0.15", "-15.6416, 340.732, -31.2959, 0.74", "-15.6538, 341.083, -31.3081, 1.03", "-15.6743, 341.522, -31.3128, 1.03", "-15.7039, 342.011, -31.3128, 0.74", "-15.7424, 342.698, -31.3445, 0.22", "-15.7815, 343.55, -31.4104, 0.22", "-15.8314, 344.987, -31.547, 0.88", "-15.8478, 345.561, -31.604, 1.47", "-15.8593, 346.055, -31.6577, 1.69", "-15.8767, 347.124, -31.7793, 1.03", "-15.8927, 348.214, -31.9054, 0.37", "-15.8923, 349.667, -32.0702, 0.37", "-15.8711, 350.956, -32.2214, 0.29", "-15.8428, 352.278, -32.3647, 1.4", "-15.8324, 352.795, -32.4131, 1.84", "-15.8231, 353.37, -32.4533, 1.69", "-15.8103, 354.158, -32.5148, 0.81", "-15.7894, 355.48, -32.6211, 0.29", "-15.7679, 356.686, -32.7146, 0.29", "-15.7551, 357.321, -32.7547, 0.96", "-15.7443, 357.906, -32.7864, 1.33", "-15.7314, 358.454, -32.8083, 1.33", "-15.7174, 358.94, -32.826, 1.03", "-15.7145, 359.001, -32.8276, 1.03", "-15.6372, 360.113, -32.8665, 0.29", "-15.5561, 361.123, -32.9067, 0.29", "-15.4584, 362.39, -32.9829, 0.88", "-15.3994, 363.314, -33.0492, 1.69", "-15.3723, 363.841, -33.0896, 2.36", "-15.3642, 364.132, -33.1123, 2.58", "-15.3587, 364.875, -33.1728, 2.06", "-15.3623, 366.368, -33.2848, 0.37", "-15.3766, 367.359, -33.3507, 0.37", "-15.4037, 368.441, -33.4063, 0.37", "-15.4257, 369.295, -33.4438, 0.37", "-15.427, 369.365, -33.4462, 0.37", "-15.4281, 371.015, -33.4793, 0.37", "-15.426, 371.086, -33.4814, 0.37", "-15.3689, 372.014, -33.5303, 0.37", "-15.3091, 372.745, -33.5825, 0.96", "-15.2328, 373.578, -33.6517, 1.25", "-15.152, 374.424, -33.7282, 0.88", "-15.0108, 375.796, -33.8651, 0.29", "-14.999, 375.901, -33.8754, 0.29", "-14.891, 376.756, -33.9804, 0.88", "-14.7917, 377.544, -34.0819, 1.62", "-14.7333, 378.015, -34.1404, 1.99", "-14.6715, 378.493, -34.1923, 1.99", "-14.6059, 378.93, -34.2276, 1.69", "-14.4461, 379.874, -34.3237, 0.59", "-14.2225, 381.056, -34.4559, 0.29", "-14.0894, 381.774, -34.5506, 0.81", "-13.9775, 382.4, -34.6376, 0.81", "-13.8293, 383.278, -34.7606, 0.29", "-13.684, 384.217, -34.8868, 0.29", "-13.4829, 385.639, -35.1089, 0.29", "-13.3093, 387.046, -35.3736, 1.25", "-13.2503, 387.58, -35.48, 1.69", "-13.2069, 388.006, -35.5662, 1.92", "-13.1356, 388.763, -35.716, 1.47", "-12.9971, 390.09, -35.9564, 0.29", "-12.8957, 390.881, -36.1004, 0.29", "-12.7282, 391.936, -36.2763, 0.88", "-12.6364, 392.442, -36.3553, 1.18", "-12.5323, 392.946, -36.4261, 0.96", "-12.3711, 393.651, -36.5044, 0.44", "-12.1629, 394.563, -36.555, 0.29", "-12.1417, 394.661, -36.564, 0.29", "-12.0044, 395.486, -36.6637, 0.29", "-11.9962, 395.556, -36.6728, 0.29", "-11.9505, 396.059, -36.7449, 0.81", "-11.9209, 396.482, -36.8057, 0.81", "-11.8594, 397.243, -36.9108, 0.66", "-11.7545, 398.311, -37.0545, 0.29", "-11.6444, 399.187, -37.1624, 0.29", "-11.5221, 400.047, -37.2702, 1.11", "-11.4112, 400.808, -37.3606, 1.69", "-11.3422, 401.343, -37.4218, 1.92", "-11.2908, 401.813, -37.4696, 1.92", "-11.193, 403.0, -37.5962, 0.74", "-11.1441, 403.937, -37.6948, 0.37", "-11.1203, 404.997, -37.798, 0.37", "-11.1212, 406.237, -37.9233, 0.29", "-11.1341, 406.964, -38.0014, 0.29", "-11.1461, 407.606, -38.0762, 0.88", "-11.1512, 408.023, -38.1254, 0.88", "-11.1412, 408.55, -38.1795, 0.52", "-11.1083, 409.162, -38.2431, 0.29", "-11.0603, 409.806, -38.3061, 0.29", "-11.0084, 410.652, -38.3863, 0.29", "-10.9748, 411.45, -38.4547, 1.55", "-10.9367, 412.394, -38.522, 2.58", "-10.918, 412.844, -38.5447, 2.65", "-10.8772, 413.558, -38.5647, 2.21", "-10.8053, 414.488, -38.5878, 1.11", "-10.7251, 415.338, -38.6118, 0.52", "-10.614, 416.368, -38.648, 0.52", "-10.4759, 417.416, -38.6907, 0.74", "-10.3235, 418.406, -38.7348, 0.88", "-10.1414, 419.363, -38.7811, 1.33", "-10.1277, 419.419, -38.785, 1.33", "-9.97201, 419.966, -38.832, 1.62", "-9.85088, 420.347, -38.8691, 1.62", "-9.82406, 420.42, -38.8762, 1.62", "-9.75528, 420.603, -38.8906, 1.62", "-9.33635, 421.683, -38.9535, 0.52", "-9.02211, 422.513, -38.9982, 0.29", "-8.73895, 423.261, -39.0392, 0.29", "-8.47484, 424.021, -39.0421, 0.96", "-8.32162, 424.526, -39.0125, 1.4", "-8.30617, 424.593, -39.0049, 1.4", "-8.24118, 425.022, -38.9348, 1.4", "-8.23337, 425.104, -38.9181, 1.4", "-8.17496, 426.156, -38.686, 1.03", "-8.14236, 427.116, -38.4727, 0.44", "-8.10285, 428.32, -38.2187, 0.29", "-8.07841, 429.166, -38.0253, 0.29", "-8.04924, 430.214, -37.7891, 1.33", "-8.03583, 430.768, -37.6694, 1.84", "-8.02505, 431.334, -37.5597, 1.84", "-8.01622, 431.972, -37.4385, 1.25", "-8.01259, 433.171, -37.2223, 0.37", "-8.03204, 434.497, -37.0264, 0.29", "-8.0346, 434.565, -37.0181, 0.29", "-8.07761, 435.349, -36.9291, 0.44", "-8.14739, 436.353, -36.8288, 0.52", "-8.23469, 437.338, -36.7494, 0.44", "-8.35671, 438.621, -36.6995, 0.44", "-8.49578, 440.01, -36.6587, 1.11", "-8.57261, 440.801, -36.6422, 1.69", "-8.62076, 441.317, -36.6365, 1.84", "-8.66562, 441.871, -36.6368, 1.84", "-8.74178, 442.946, -36.6509, 0.66", "-8.81238, 444.087, -36.6838, 0.37", "-8.81983, 444.226, -36.6901, 0.37", "-8.88593, 445.593, -36.7466, 0.37", "-8.91847, 446.685, -36.783, 0.96", "-8.91814, 446.826, -36.7873, 0.96", "-8.89051, 447.55, -36.8043, 1.55", "-8.83005, 448.201, -36.8272, 1.84", "-8.82119, 448.27, -36.8302, 1.84", "-8.72797, 448.865, -36.8607, 1.69", "-8.58908, 449.721, -36.9074, 0.74", "-8.44976, 450.635, -36.926, 0.29", "-8.31267, 451.655, -36.9174, 0.29", "-8.30567, 451.725, -36.9151, 0.29", "-8.23816, 452.724, -36.8611, 0.29", "-8.23642, 452.793, -36.8556, 0.29", "-8.24015, 453.8, -36.7409, 0.81", "-8.25862, 454.43, -36.6602, 1.47", "-8.28178, 454.933, -36.5993, 1.77", "-8.28784, 455.044, -36.5899, 1.77", "-8.31428, 455.609, -36.5613, 1.55", "-8.3209, 455.749, -36.5583, 1.55", "-8.35351, 456.411, -36.5663, 0.96", "-8.37101, 457.142, -36.5752, 0.59", "-8.38051, 458.495, -36.5659, 0.29", "-8.37697, 459.39, -36.5483, 0.29", "-8.376, 459.461, -36.5462, 0.29", "-8.35044, 460.543, -36.5043, 0.59", "-8.32433, 461.257, -36.4692, 0.81", "-8.26911, 462.174, -36.4184, 1.25", "-8.23121, 462.622, -36.3918, 1.62", "-8.2045, 462.977, -36.3745, 1.69", "-8.19228, 463.131, -36.3694, 1.69", "-8.15326, 463.648, -36.36, 1.25", "-8.10155, 464.487, -36.3439, 0.66", "-8.05063, 465.353, -36.3304, 0.66", "-7.99254, 466.366, -36.3077, 0.66", "-7.9263, 467.59, -36.2743, 0.37", "-7.89041, 468.457, -36.2476, 0.37", "-7.8478, 469.498, -36.2122, 1.62", "-7.81949, 470.075, -36.1915, 2.06", "-7.79502, 470.464, -36.1779, 2.06", "-7.73627, 471.33, -36.1503, 1.47", "-7.67414, 472.182, -36.1278, 0.81", "-7.58631, 473.141, -36.1154, 0.37", "-7.46054, 474.288, -36.122, 0.88", "-7.45151, 474.356, -36.1226, 0.88", "-7.37917, 474.846, -36.1281, 0.88", "-7.36908, 474.907, -36.129, 0.88", "-7.27686, 475.507, -36.1441, 1.11", "-7.25343, 475.679, -36.1509, 1.11", "-7.21352, 476.025, -36.1451, 1.11", "-7.20556, 476.096, -36.1418, 1.11", "-7.14093, 476.666, -36.1011, 0.81", "-7.0476, 477.529, -36.0252, 0.66", "-6.96062, 478.334, -35.9444, 0.44", "-6.83638, 479.439, -35.8283, 0.29", "-6.8233, 479.547, -35.8168, 0.29", "-6.73999, 480.117, -35.755, 0.29", "-6.72245, 480.221, -35.7444, 0.29", "-6.59755, 481.048, -35.6852, 0.81", "-6.58676, 481.138, -35.682, 0.81", "-6.52879, 481.683, -35.6599, 0.81", "-6.50939, 481.893, -35.6468, 0.81", "-6.40808, 482.989, -35.5644, 0.59", "-6.29428, 484.337, -35.453, 0.88", "-6.2846, 484.476, -35.4414, 0.88", "-6.21632, 485.687, -35.2945, 1.62", "-6.19466, 486.209, -35.2181, 1.77", "-6.1649, 487.01, -35.0893, 1.4", "-6.13839, 487.798, -34.9517, 0.88", "-6.10204, 489.153, -34.7118, 0.52", "-6.09143, 490.312, -34.5264, 0.74", "-6.109, 491.031, -34.4317, 1.33", "-6.15615, 491.786, -34.3324, 1.84", "-6.18948, 492.199, -34.2823, 1.99", "-6.236, 492.779, -34.2224, 1.99", "-6.29114, 493.542, -34.1627, 1.18", "-6.35723, 494.556, -34.1142, 0.52", "-6.43699, 496.071, -34.0391, 0.44", "-6.48785, 497.209, -33.9836, 1.03", "-6.50943, 498.087, -33.9442, 1.25", "-6.4971, 498.693, -33.9219, 1.55", "-6.49302, 498.764, -33.9198, 1.55", "-6.43595, 499.44, -33.9092, 1.55", "-6.36105, 500.3, -33.9092, 1.25", "-6.29698, 501.245, -33.9092, 0.74", "-6.19435, 503.002, -33.9092, 0.29", "-6.191, 503.07, -33.9092, 0.29", "-6.12453, 504.658, -33.9092, 0.29", "-6.09166, 505.955, -33.9092, 0.29", "-6.08701, 507.178, -33.9092, 1.47", "-6.10165, 507.933, -33.9092, 2.06", "-6.12656, 508.43, -33.9092, 2.36", "-6.17538, 509.307, -33.9092, 2.06", "-6.26482, 510.794, -33.9092, 0.81", "-6.36167, 512.159, -33.8794, 0.81", "-6.43007, 513.034, -33.8436, 0.52", "-6.51535, 514.093, -33.7822, 0.81", "-6.59164, 515.111, -33.7063, 1.03", "-6.59591, 515.18, -33.6997, 1.03", "-6.6223, 516.104, -33.5929, 1.03", "-6.62024, 516.275, -33.5666, 1.03", "-6.58182, 517.223, -33.4101, 0.88", "-6.57349, 517.332, -33.3923, 0.88", "-6.4789, 518.334, -33.243, 0.74", "-6.34814, 519.449, -33.1045, 0.37", "-6.15413, 520.878, -32.9697, 1.18", "-6.02901, 521.837, -32.8886, 1.92", "-5.9605, 522.412, -32.8467, 1.92", "-5.88799, 523.076, -32.806, 1.62", "-5.78832, 524.122, -32.759, 0.96", "-5.70392, 525.142, -32.7318, 0.74", "-5.61904, 526.368, -32.7388, 0.74", "-5.56911, 527.45, -32.7503, 0.74", "-5.56456, 527.59, -32.7523, 0.74", "-5.54459, 528.654, -32.7706, 0.74", "-5.54303, 528.82, -32.7753, 0.74", "-5.52689, 529.998, -32.8189, 0.74", "-5.50187, 531.298, -32.8752, 0.96", "-5.49422, 531.592, -32.889, 0.96", "-5.45934, 532.812, -32.9431, 0.96", "-5.44111, 533.568, -32.9726, 1.47", "-5.43772, 533.786, -32.9794, 1.47", "-5.42936, 534.819, -33.0006, 1.69", "-5.42944, 534.916, -33.002, 1.69", "-5.43034, 535.572, -33.0224, 1.69", "-5.40543, 536.724, -33.0671, 1.11", "-5.38497, 537.24, -33.0974, 1.03", "-5.36087, 537.734, -33.1333, 1.03", "-5.29994, 538.871, -33.227, 0.59", "-5.20628, 540.489, -33.3667, 0.44", "-5.09486, 542.223, -33.5271, 0.44", "-5.01011, 543.278, -33.6252, 1.11", "-4.90993, 544.264, -33.7252, 1.69", "-4.81436, 544.976, -33.7968, 1.99", "-4.69607, 545.719, -33.8694, 1.62", "-4.68364, 545.789, -33.8753, 1.62", "-4.47793, 546.885, -33.9575, 0.88", "-4.20184, 548.348, -34.0657, 0.74", "-3.85089, 550.179, -34.2161, 0.74", "-3.83796, 550.247, -34.2218, 0.74", "-3.62267, 551.384, -34.323, 0.74", "-3.35292, 552.823, -34.4059, 0.88", "-3.08879, 554.333, -34.4448, 0.66", "-3.07587, 554.412, -34.444, 0.66", "-2.87439, 555.736, -34.4051, 0.66", "-2.71888, 556.779, -34.357, 0.66", "-2.53551, 558.216, -34.2579, 1.25", "-2.47644, 558.859, -34.1975, 1.99", "-2.45766, 559.285, -34.1494, 1.99", "-2.4575, 560.013, -34.077, 1.55", "-2.4661, 560.16, -34.0644, 1.55", "-2.56026, 561.079, -34.0104, 1.33", "-2.67145, 562.077, -34.0181, 1.18", "-2.74135, 562.942, -34.0343, 0.96", "-2.7663, 563.673, -34.0257, 0.96", "-2.76282, 563.822, -34.0206, 0.96", "-2.70654, 564.671, -33.9791, 0.66", "-2.58589, 565.676, -33.9165, 0.52", "-2.44655, 566.58, -33.8511, 0.52", "-2.21528, 567.889, -33.7452, 0.81", "-1.99627, 568.981, -33.6517, 1.33", "-1.96439, 569.127, -33.6377, 1.33", "-1.76743, 569.954, -33.5728, 1.77", "-1.64185, 570.466, -33.5428, 2.28", "-1.62609, 570.534, -33.545, 2.28", "-1.50407, 571.19, -33.642, 2.28", "-1.43698, 571.617, -33.7201, 2.28", "-1.31472, 572.508, -33.8928, 1.92", "-1.30652, 572.576, -33.9066, 1.92", "-1.14756, 574.011, -34.2017, 0.81", "-1.00577, 575.456, -34.4019, 0.81", "-0.99306, 575.606, -34.4153, 0.81", "-0.928942, 576.485, -34.446, 0.66", "-0.923921, 576.565, -34.4431, 0.66", "-0.87553, 577.606, -34.3603, 0.66", "-0.836058, 578.975, -34.1541, 0.66", "-0.835419, 579.111, -34.1287, 0.66", "-0.860501, 579.895, -33.9493, 1.18", "-0.869705, 580.022, -33.9184, 1.18", "-0.93154, 580.728, -33.764, 1.4", "-0.95285, 580.934, -33.7265, 1.4", "-1.00802, 581.446, -33.6556, 1.4", "-1.10708, 582.455, -33.5202, 1.11", "-1.23819, 584.072, -33.3224, 0.88", "-1.32715, 585.302, -33.197, 1.03", "-1.40097, 586.516, -33.1013, 1.33", "-1.40857, 586.654, -33.0939, 1.33", "-1.43431, 587.105, -33.0736, 1.33", "-1.51683, 588.429, -33.0414, 0.88", "-1.56343, 589.142, -33.0144, 0.88", "-1.63343, 590.299, -32.9541, 0.74", "-1.66877, 591.149, -32.9004, 0.74", "-1.69166, 592.08, -32.8366, 1.33", "-1.6924, 592.159, -32.8309, 1.33", "-1.68557, 592.97, -32.8026, 1.92", "-1.67659, 593.604, -32.8092, 2.21", "-1.68248, 594.08, -32.8507, 2.21", "-1.72075, 594.817, -32.9594, 1.77", "-1.78976, 595.736, -33.1311, 1.18", "-1.88305, 596.703, -33.32, 0.81", "-2.05145, 598.162, -33.621, 0.74", "-2.24021, 599.759, -33.9417, 0.66", "-2.3846, 601.123, -34.1917, 0.66", "-2.39094, 601.193, -34.2033, 0.66", "-2.44317, 602.199, -34.3384, 0.66", "-2.4412, 602.313, -34.3474, 0.66", "-2.31528, 603.786, -34.4266, 0.66", "-2.12357, 605.103, -34.4519, 0.66", "-2.10543, 605.202, -34.4523, 0.66", "-1.87127, 606.432, -34.4557, 0.66", "-1.49389, 608.273, -34.4557, 0.66", "-1.47172, 608.376, -34.4557, 0.66", "-1.35167, 608.91, -34.4557, 1.25", "-1.33423, 608.987, -34.4557, 1.25", "-1.08254, 610.148, -34.4557, 1.25", "-1.06221, 610.252, -34.4557, 1.25", "-0.864105, 611.26, -34.4379, 1.25", "-0.69771, 612.122, -34.4077, 0.96", "-0.538353, 612.982, -34.3539, 0.96", "-0.528013, 613.042, -34.3491, 0.96", "-0.392568, 613.918, -34.2682, 1.11", "-0.181013, 615.419, -34.1173, 0.52", "-0.0494398, 616.408, -34.0141, 1.18", "0.101927, 617.464, -33.9093, 1.92", "0.208805, 618.17, -33.8576, 2.43", "0.311076, 618.806, -33.8262, 2.43", "0.439163, 619.574, -33.8059, 2.43", "0.657313, 620.86, -33.809, 1.25", "0.886368, 622.091, -33.8495, 0.59", "1.1333, 623.406, -33.9676, 0.74", "1.29084, 624.234, -34.0759, 1.03", "1.32483, 624.436, -34.1113, 1.03", "1.39799, 624.977, -34.2318, 1.03", "1.47002, 625.734, -34.4283, 0.59", "1.52486, 626.869, -34.7431, 0.59", "1.52734, 626.983, -34.7724, 0.59", "1.57886, 628.039, -35.0285, 0.59", "1.61208, 628.335, -35.0825, 1.03", "1.73339, 629.088, -35.1804, 0.66", "1.83231, 629.577, -35.2165, 0.66", "2.03689, 630.442, -35.2089, 0.66", "2.31815, 631.63, -35.1562, 0.59", "2.6456, 633.033, -35.0589, 1.03", "2.76402, 633.558, -35.0155, 1.84", "2.87005, 634.065, -34.9694, 1.84", "3.1176, 635.399, -34.8448, 1.18", "3.28491, 636.466, -34.7437, 0.66", "3.38847, 637.48, -34.6522, 0.66", "3.39808, 637.658, -34.6407, 0.66", "3.43749, 639.068, -34.5754, 0.66", "3.44202, 640.171, -34.5479, 1.18", "3.42695, 640.926, -34.5495, 1.18", "3.38802, 642.136, -34.5532, 0.66", "3.34271, 643.13, -34.5575, 0.66", "3.28322, 644.07, -34.5635, 1.25", "3.21514, 644.841, -34.5669, 1.99", "3.156, 645.415, -34.5669, 2.21", "3.01202, 646.666, -34.5669, 2.06" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 27
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-10.776, -66.0637, -17.9223, 0.44", "-11.3059, -66.4648, -17.8765, 0.44", "-11.3532, -66.5017, -17.8717, 0.44", "-12.0513, -67.0725, -17.7911, 1.03", "-12.7229, -67.6084, -17.7151, 1.18", "-13.1957, -67.9784, -17.664, 0.59", "-13.2424, -68.0147, -17.6592, 0.59", "-13.6926, -68.3874, -17.6162, 0.22", "-14.1421, -68.7505, -17.5686, 0.22", "-14.6012, -69.1054, -17.5164, 0.59", "-14.9086, -69.3469, -17.4781, 0.59", "-14.9778, -69.4082, -17.4654, 0.59", "-15.4531, -69.8684, -17.3616, 0.22", "-15.8217, -70.263, -17.2717, 1.18", "-16.1743, -70.7215, -17.1764, 1.25", "-16.2078, -70.7729, -17.1664, 1.25", "-16.7716, -71.7561, -16.9385, 0.22", "-16.9297, -72.0608, -16.8651, 0.37", "-17.0192, -72.2711, -16.8064, 0.37", "-17.445, -73.4457, -16.4367, 0.22", "-17.5751, -73.8505, -16.3009, 0.22", "-17.8519, -74.7599, -15.9834, 1.47", "-18.0473, -75.4888, -15.7533, 2.21", "-18.2304, -76.2291, -15.5316, 2.21", "-18.2441, -76.2835, -15.5143, 2.21", "-18.4541, -77.324, -15.1861, 0.74", "-18.4629, -77.3797, -15.17, 0.74", "-18.6057, -78.5138, -14.8975, 0.22", "-18.6333, -78.7564, -14.8425, 0.59", "-18.7818, -79.9343, -14.6041, 0.22", "-18.8697, -80.6889, -14.4544, 0.22", "-18.9354, -81.3629, -14.3136, 0.22", "-18.9948, -81.9344, -14.1934, 0.52", "-19.0238, -82.1946, -14.143, 0.52", "-19.1423, -83.2794, -13.97, 0.22", "-19.2061, -83.9742, -13.8863, 0.22", "-19.296, -84.9674, -13.7755, 1.55", "-19.3228, -85.5367, -13.7094, 1.69", "-19.3086, -87.0972, -13.4856, 0.22", "-19.2521, -87.8901, -13.3515, 0.22", "-19.1705, -88.4293, -13.2475, 0.52", "-19.0388, -88.983, -13.1482, 0.52", "-18.7705, -89.8302, -13.0205, 0.22", "-18.5236, -90.4957, -12.933, 1.4", "-18.2897, -91.0505, -12.8727, 1.69", "-18.1043, -91.4967, -12.8298, 1.77", "-17.5217, -92.9708, -12.7005, 0.15", "-17.1395, -93.9812, -12.6302, 0.22", "-16.8987, -94.6562, -12.6045, 0.74", "-16.7117, -95.2456, -12.5912, 0.74", "-16.5048, -95.986, -12.5678, 0.22", "-16.456, -96.1952, -12.5548, 0.59", "-16.3875, -96.5561, -12.5142, 0.59", "-16.3742, -96.6235, -12.508, 0.59", "-16.1648, -97.6771, -12.4198, 0.22", "-16.0485, -98.313, -12.3924, 0.74", "-15.9023, -99.0233, -12.3834, 0.96", "-15.7944, -99.5113, -12.3807, 0.66", "-15.4229, -101.077, -12.3964, 0.29", "-15.2015, -101.942, -12.413, 0.22", "-14.9442, -102.872, -12.4362, 0.22", "-14.6306, -104.024, -12.474, 1.55", "-14.5365, -104.369, -12.4895, 1.92", "-14.3022, -105.233, -12.539, 0.96", "-14.1728, -105.729, -12.5822, 0.44" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-10.776, -66.0637, -17.9223, 2.43", "-11.082, -67.5738, -18.7247, 2.43", "-11.3652, -68.9834, -19.3676, 0.96", "-11.5938, -70.0548, -19.7848, 0.52", "-11.8069, -71.0414, -20.133, 0.52", "-12.0697, -72.2769, -20.542, 0.52", "-12.3186, -73.4842, -20.9235, 0.52", "-12.5337, -74.5876, -21.1824, 0.52", "-12.7532, -75.7411, -21.3955, 0.52", "-12.9595, -76.8912, -21.5841, 2.58", "-13.1891, -78.2713, -21.8397, 3.68", "-13.2494, -78.6168, -21.9127, 3.68", "-13.4161, -79.4489, -22.103, 3.24" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "2.81883, -180.426, 16.6542, 0.59", "2.43872, -182.314, 16.352, 0.59", "2.22425, -183.218, 16.223, 0.37", "1.94566, -184.114, 16.1273, 0.37", "1.69208, -184.714, 16.0831, 0.74", "1.36162, -185.375, 16.0489, 0.74", "1.05767, -185.907, 16.0331, 0.96", "1.01708, -185.963, 16.0382, 0.96", "0.52012, -186.555, 16.1025, 1.25", "-0.012179, -187.188, 16.233, 0.81", "-0.0497908, -187.244, 16.2473, 0.81", "-0.479356, -188.031, 16.4633, 0.59", "-0.901355, -188.993, 16.7018, 0.59", "-0.921483, -189.047, 16.7135, 0.59", "-1.27428, -190.153, 16.923, 0.44", "-1.64543, -191.371, 17.1368, 0.44", "-1.66531, -191.435, 17.1482, 0.44", "-2.02492, -192.553, 17.3457, 2.14", "-2.25436, -193.177, 17.4455, 3.09", "-2.46785, -193.747, 17.5135, 3.61", "-2.72553, -194.408, 17.5135, 3.61", "-6.11354, -203.547, 16.7003, 3.61", "-10.5394, -212.047, 14.6019, 3.61", "-15.6039, -219.831, 11.3433, 3.61" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "2.81883, -180.426, 16.6542, 0.59", "3.7137, -181.527, 16.4344, 0.59", "4.57938, -182.538, 16.2902, 0.37", "5.30166, -183.218, 16.4543, 0.37", "6.26819, -183.959, 16.9775, 0.37", "6.33369, -184.002, 17.0262, 0.37", "7.24021, -184.582, 17.7749, 0.74", "7.28705, -184.61, 17.8363, 0.74", "8.59021, -185.434, 19.9191, 0.74", "8.6184, -185.454, 19.9678, 0.74", "9.01624, -185.785, 20.6362, 0.74", "9.34943, -186.136, 21.1457, 0.29", "9.84764, -186.79, 21.7611, 0.29", "10.2542, -187.366, 22.1452, 0.29", "10.6295, -187.946, 22.3389, 0.29", "10.9705, -188.464, 22.4959, 0.81", "11.0089, -188.52, 22.5096, 0.81", "11.3756, -188.966, 22.5827, 1.25", "11.7128, -189.272, 22.5864, 1.25", "12.2136, -189.633, 22.5786, 0.59", "19.1394, -195.843, 25.9649, 0.59" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "3.01202, 646.666, -34.5669, 0.44", "1.15087, 648.687, -36.9789, 0.44", "0.440917, 649.561, -37.9223, 0.44", "-1.64732E-5, 650.148, -38.5174, 0.74", "-0.025243, 650.188, -38.5547, 0.74", "-0.35477, 650.846, -39.108, 0.74", "-0.373221, 650.891, -39.1419, 0.74", "-0.489198, 651.69, -39.4822, 0.44", "-0.487818, 651.751, -39.5152, 0.44", "-0.435013, 652.488, -39.962, 0.88", "-0.407627, 653.245, -40.4106, 0.96", "-0.409606, 653.679, -40.6593, 1.25", "-0.411315, 653.729, -40.6904, 1.25", "-0.517227, 654.762, -41.3388, 0.66", "-0.671258, 655.572, -41.8482, 0.37", "-0.831151, 656.129, -42.1912, 0.74", "-1.01093, 656.664, -42.5274, 0.74", "-1.24009, 657.275, -42.9036, 0.74", "-1.61414, 658.197, -43.4432, 0.29", "-2.09243, 659.249, -44.0017, 0.29", "-2.43205, 659.963, -44.3732, 0.29", "-2.91751, 661.002, -44.9183, 1.47", "-3.0957, 661.397, -45.1108, 1.69", "-3.12356, 661.455, -45.1361, 1.69", "-3.41959, 662.038, -45.4192, 1.47", "-3.44989, 662.094, -45.4467, 1.47", "-4.27334, 663.645, -46.333, 0.22", "-4.55852, 664.202, -46.6731, 0.22", "-4.99538, 665.135, -47.2663, 0.22", "-5.4537, 666.321, -48.0127, 1.03", "-5.61495, 666.797, -48.3352, 1.4", "-6.07909, 668.284, -49.3826, 0.22", "-6.20358, 668.699, -49.686, 0.59", "-6.33581, 669.169, -50.0368, 0.74", "-6.72457, 670.694, -51.1368, 0.29", "-7.04681, 671.79, -51.863, 0.29", "-7.06868, 671.847, -51.9012, 0.29", "-7.37356, 672.446, -52.2955, 0.44", "-7.4037, 672.504, -52.3414, 0.44", "-7.64565, 672.965, -52.737, 0.44", "-8.00312, 673.664, -53.3454, 0.22", "-8.49106, 674.741, -54.2357, 1.92", "-8.58204, 674.957, -54.4295, 2.5", "-9.35757, 677.138, -56.4776, 0.15", "-9.45606, 677.449, -56.7745, 0.15", "-9.68033, 678.267, -57.5757, 1.4", "-9.72836, 678.454, -57.7573, 1.69", "-10.191, 680.238, -59.4598, 0.15", "-10.3598, 680.841, -60.0063, 0.15", "-10.4116, 681.002, -60.1287, 0.15", "-10.4594, 681.144, -60.2223, 0.15", "-10.6932, 681.843, -60.5806, 0.96", "-10.8537, 682.326, -60.7878, 1.47", "-10.9736, 682.674, -60.8954, 1.62", "-11.256, 683.451, -61.1392, 0.88", "-11.7848, 685.001, -61.6329, 0.22", "-11.958, 685.589, -61.8461, 0.22", "-12.1086, 686.197, -62.0981, 0.74", "-12.1216, 686.261, -62.1252, 0.74", "-12.2123, 686.795, -62.3254, 0.74", "-12.2543, 687.073, -62.4111, 0.74", "-12.4537, 688.529, -62.7691, 0.29", "-12.4639, 688.597, -62.784, 0.29", "-12.6736, 689.908, -63.0239, 0.29", "-12.8971, 691.235, -63.2451, 0.29", "-13.0807, 692.273, -63.3905, 0.29", "-13.2252, 693.046, -63.4696, 1.47", "-13.3111, 693.478, -63.5031, 2.06", "-13.3248, 693.545, -63.509, 2.06", "-13.4831, 694.311, -63.6021, 1.18", "-13.9233, 696.318, -63.9356, 0.22", "-14.2359, 697.763, -64.2095, 0.22", "-14.4687, 698.908, -64.4881, 1.47", "-14.5481, 699.322, -64.6059, 1.18", "-14.8339, 700.991, -65.1485, 0.22", "-15.0044, 702.104, -65.5583, 1.11", "-15.0776, 702.692, -65.8012, 1.33", "-15.2869, 704.853, -66.7474, 0.22", "-15.2914, 704.917, -66.7747, 0.22", "-15.3741, 706.432, -67.4126, 0.22", "-15.3761, 706.496, -67.4377, 0.22", "-15.4044, 708.132, -68.0367, 0.22", "-15.4068, 708.197, -68.0592, 0.22", "-15.4604, 709.104, -68.2997, 1.55", "-15.477, 709.248, -68.3321, 2.14", "-15.568, 709.747, -68.4188, 2.36", "-15.581, 709.803, -68.427, 2.36", "-15.9178, 710.801, -68.5592, 1.11", "-16.4503, 712.12, -68.7301, 0.22", "-16.9555, 713.241, -68.8699, 0.22", "-17.3281, 714.019, -68.9649, 1.4", "-17.5333, 714.419, -69.0114, 1.4", "-18.5581, 716.302, -69.2473, 0.22", "-18.9603, 716.984, -69.3373, 0.88", "-19.1901, 717.357, -69.392, 0.59", "-19.2309, 717.426, -69.4024, 0.59", "-19.3276, 717.598, -69.4259, 0.59", "-19.9657, 718.898, -69.5578, 0.22", "-20.3125, 719.711, -69.6076, 0.22", "-20.6333, 720.546, -69.6509, 1.03", "-20.7808, 720.95, -69.6684, 1.4", "-20.9489, 721.466, -69.6597, 1.4", "-21.3302, 722.837, -69.5713, 0.22", "-21.3466, 722.906, -69.5638, 0.22", "-21.6686, 724.442, -69.3746, 0.22", "-21.693, 724.579, -69.358, 0.22", "-21.9622, 726.33, -69.1545, 0.22", "-22.0985, 727.329, -69.031, 1.33", "-22.14, 727.665, -68.9863, 1.62", "-22.2146, 728.301, -68.9012, 0.81", "-22.3903, 729.998, -68.6743, 0.22", "-22.4969, 731.089, -68.5641, 1.25" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "3.01202, 646.666, -34.5669, 0.59", "2.93191, 647.743, -34.4907, 0.59", "2.83952, 648.883, -34.3325, 0.59", "2.76154, 649.955, -34.1524, 0.81", "2.70562, 650.799, -34.0083, 1.25", "2.70043, 650.878, -33.9948, 1.25", "2.66565, 651.369, -33.9152, 1.11", "2.58083, 652.389, -33.7407, 0.88", "2.52225, 653.124, -33.6299, 0.44", "2.44398, 654.198, -33.5007, 0.37", "2.42405, 654.485, -33.4717, 0.37", "2.36673, 655.267, -33.4118, 0.37", "2.27203, 656.444, -33.3616, 1.47", "2.19563, 657.152, -33.3557, 1.84", "2.16099, 657.433, -33.3533, 1.84", "2.09759, 657.999, -33.3482, 1.84", "2.00389, 658.941, -33.3401, 1.25", "1.8683, 660.512, -33.3275, 0.66", "1.75418, 661.936, -33.3172, 0.66", "1.74753, 662.036, -33.3166, 0.66", "1.69134, 663.064, -33.3131, 0.66", "1.68579, 663.215, -33.3135, 0.66", "1.65958, 664.151, -33.3194, 0.66", "1.65865, 664.231, -33.3202, 0.66", "1.65722, 665.085, -33.3311, 0.66", "1.65055, 665.342, -33.3347, 0.66", "1.62128, 666.153, -33.3464, 0.66", "1.6036, 666.795, -33.3554, 0.66", "1.60336, 666.866, -33.3563, 0.66", "1.62186, 667.89, -33.3677, 0.66", "1.62479, 667.951, -33.3682, 0.66", "1.69081, 668.951, -33.3812, 1.18", "1.69911, 669.021, -33.3758, 1.18", "1.84179, 669.917, -33.2416, 1.33", "1.8568, 669.998, -33.2247, 1.33", "1.91044, 670.25, -33.154, 1.33", "1.93364, 670.36, -33.1208, 1.33", "2.23199, 671.758, -32.6481, 0.81", "2.24349, 671.816, -32.6314, 0.81", "2.37377, 672.372, -32.5045, 0.81", "2.38893, 672.438, -32.4918, 0.81", "2.57238, 673.211, -32.3729, 0.96", "2.60121, 673.325, -32.3596, 0.96", "2.92113, 674.547, -32.2869, 0.37", "3.18822, 675.579, -32.2368, 0.37", "3.38392, 676.395, -32.1757, 1.33", "3.56256, 677.139, -32.0889, 2.06", "3.63854, 677.474, -32.022, 2.36", "3.75575, 678.005, -31.8893, 2.36", "3.92799, 678.849, -31.6237, 1.62", "4.1687, 680.151, -31.1796, 0.52", "4.44404, 681.616, -30.6484, 0.37", "4.67262, 682.911, -30.1328, 1.55", "4.78428, 683.559, -29.8537, 2.21", "4.90365, 684.233, -29.5283, 2.5" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-13.4161, -79.4489, -22.103, 0.44", "-12.9457, -80.689, -21.6542, 0.44", "-12.4645, -81.8924, -21.1704, 0.22", "-12.4369, -81.9519, -21.142, 0.22", "-11.9953, -82.8192, -20.601, 0.22", "-11.3333, -84.0362, -19.8313, 1.47", "-11.131, -84.3981, -19.6147, 1.99", "-11.06, -84.5198, -19.5354, 1.99", "-10.5006, -85.3999, -18.9729, 1.77", "-9.59412, -86.7844, -18.1328, 0.52", "-8.89605, -87.8259, -17.5283, 0.29", "-8.36352, -88.6206, -17.1209, 0.29", "-8.32854, -88.6746, -17.0944, 0.29", "-7.80562, -89.5044, -16.7138, 1.03", "-7.30711, -90.3765, -16.3755, 1.03", "-6.63185, -91.6778, -15.9665, 0.22", "-6.60878, -91.7295, -15.9504, 0.22", "-6.39614, -92.2518, -15.8032, 0.44", "-6.37534, -92.3045, -15.7876, 0.44", "-6.09229, -93.0027, -15.5619, 0.44", "-5.89514, -93.5259, -15.4149, 0.29", "-5.56747, -94.4111, -15.1743, 1.55", "-5.47694, -94.6453, -15.1054, 2.21", "-5.00917, -95.7238, -14.7553, 2.21", "-4.55755, -96.6768, -14.4311, 0.44", "-3.99162, -97.6995, -14.0538, 0.29", "-3.73716, -98.1133, -13.8928, 0.52", "-3.69581, -98.1762, -13.8679, 0.52", "-3.39166, -98.5882, -13.7344, 0.22", "-3.33962, -98.6372, -13.7262, 0.22", "-2.96481, -98.8784, -13.6909, 0.22", "-2.5891, -99.095, -13.632, 0.74", "-2.52128, -99.139, -13.6191, 0.74", "-2.03187, -99.5066, -13.5151, 0.74", "-1.17216, -100.256, -13.3201, 0.29", "-0.642227, -100.792, -13.1601, 0.29", "-0.0927408, -101.455, -12.959, 1.33", "0.220184, -101.869, -12.839, 1.92", "0.381383, -102.092, -12.7788, 1.99", "0.720433, -102.588, -12.6519, 1.55", "1.34599, -103.517, -12.4626, 0.66", "1.7559, -104.117, -12.3836, 0.29", "2.40959, -105.078, -12.3606, 0.22", "2.81086, -105.706, -12.3862, 1.03", "3.10978, -106.207, -12.4329, 1.55", "3.57841, -107.048, -12.5583, 0.88", "3.95712, -107.801, -12.7159, 0.29", "4.33196, -108.634, -12.9054, 0.29", "4.71244, -109.626, -13.1427, 0.22", "4.87611, -110.084, -13.2505, 0.52", "4.89915, -110.149, -13.2624, 0.52", "5.1222, -110.755, -13.3145, 0.52", "5.38727, -111.403, -13.3107, 0.44", "5.4677, -111.592, -13.2885, 0.66", "5.67324, -112.087, -13.2045, 0.37", "5.94402, -112.817, -13.0572, 0.29", "6.21094, -113.699, -12.8705, 0.29", "6.22249, -113.754, -12.8565, 0.29", "6.34478, -114.622, -12.636, 1.25", "6.38329, -115.033, -12.5393, 1.84", "6.39711, -115.411, -12.4626, 1.84", "6.39652, -116.281, -12.3411, 0.81", "6.38114, -117.296, -12.2355, 0.29", "6.3698, -118.021, -12.1843, 0.22", "6.36771, -118.119, -12.1809, 0.22", "6.33007, -118.957, -12.1965, 0.22", "6.23274, -120.098, -12.2911, 1.33", "6.16449, -120.636, -12.3672, 1.99", "6.10213, -120.985, -12.4352, 2.28", "5.98364, -121.513, -12.5326, 2.28", "5.64936, -122.869, -12.769, 0.66", "5.42643, -123.676, -12.9091, 0.22", "5.40627, -123.743, -12.9197, 0.22", "5.26274, -124.276, -12.984, 0.22", "5.12623, -124.825, -13.0289, 0.74", "5.04238, -125.205, -13.0375, 1.03", "4.98386, -125.487, -13.0202, 1.11", "4.87716, -126.053, -12.9753, 0.44", "4.69942, -126.982, -12.9233, 0.22", "4.68615, -127.049, -12.9213, 0.22", "4.57443, -127.558, -12.9213, 0.44", "4.44224, -128.311, -12.9213, 0.29", "4.42962, -128.379, -12.9213, 0.29", "4.18565, -129.184, -12.8925, 0.29", "3.99281, -129.688, -12.8575, 0.22", "3.96714, -129.754, -12.8515, 0.22", "3.64522, -130.65, -12.718, 0.22", "3.49124, -131.19, -12.5787, 0.22", "3.18577, -132.716, -12.1022, 2.14", "3.17828, -132.771, -12.0835, 2.14", "3.13715, -133.372, -11.8778, 1.99", "3.1343, -134.256, -11.576, 1.69", "3.20329, -135.574, -11.1196, 0.59", "3.3869, -136.8, -10.7121, 0.22", "3.53161, -137.408, -10.5401, 0.37", "3.69629, -138.049, -10.4187, 0.37", "3.8968, -138.787, -10.3571, 0.74", "3.91592, -138.853, -10.36, 0.74", "4.05689, -139.351, -10.4433, 1.11", "4.32105, -140.337, -10.6695, 0.59", "4.61058, -141.44, -10.9462, 0.29", "4.81192, -142.187, -11.1399, 0.29", "4.84261, -142.29, -11.1677, 0.29", "5.07118, -143.001, -11.3447, 0.29", "5.13955, -143.187, -11.3823, 0.29", "5.46343, -143.926, -11.4694, 0.29", "5.75735, -144.537, -11.4981, 1.18", "5.93805, -144.893, -11.5148, 1.47", "5.96955, -144.955, -11.5171, 1.47", "6.4597, -145.959, -11.5478, 0.44", "6.78736, -146.784, -11.5645, 0.37", "6.94882, -147.409, -11.5699, 0.81", "7.02277, -147.832, -11.576, 0.81", "7.1016, -148.49, -11.586, 0.59", "7.13726, -148.946, -11.597, 0.29", "7.1776, -149.96, -11.6269, 0.22", "7.21466, -151.046, -11.6875, 0.22", "7.24824, -151.681, -11.7353, 0.44", "7.26623, -151.898, -11.7546, 0.44", "7.32512, -152.32, -11.7965, 0.44", "7.48731, -153.119, -11.8801, 0.29", "7.69532, -153.959, -11.9659, 1.4", "7.8585, -154.581, -12.0272, 1.69", "7.99177, -155.13, -12.0748, 1.92", "8.16877, -155.899, -12.1488, 0.74", "8.32421, -156.836, -12.2477, 0.22", "8.42372, -157.758, -12.35, 0.22", "8.4618, -158.42, -12.4173, 0.88", "8.46222, -158.923, -12.4725, 0.88", "8.42101, -159.739, -12.5638, 0.22", "8.31962, -160.755, -12.6767, 0.22", "8.31003, -160.833, -12.6848, 0.22", "8.19784, -161.553, -12.7516, 0.22", "8.03338, -162.512, -12.7958, 1.03", "7.95248, -162.934, -12.7997, 1.33", "7.89585, -163.217, -12.7915, 1.33", "7.65536, -164.482, -12.7666, 0.22", "7.46672, -165.399, -12.8012, 0.22", "7.33412, -165.96, -12.8595, 0.88", "7.23509, -166.35, -12.9213, 1.11", "7.15241, -166.658, -12.9834, 0.88", "6.83815, -167.86, -13.2732, 0.22", "6.56319, -168.836, -13.5409, 0.22", "6.40677, -169.383, -13.7018, 1.55", "6.26911, -169.866, -13.84, 1.77", "6.12053, -170.398, -13.9763, 1.25", "5.84648, -171.461, -14.2041, 0.22", "5.60802, -172.542, -14.3612, 0.22", "5.59853, -172.6, -14.3673, 0.22", "5.51481, -173.563, -14.467, 0.22", "5.5125, -173.642, -14.4786, 0.22", "5.5469, -174.516, -14.6307, 0.96", "5.5762, -175.071, -14.7351, 1.47", "5.61752, -175.67, -14.873, 0.88", "5.64034, -176.218, -15.0155, 0.66", "5.67642, -177.47, -15.3821, 0.29", "5.67952, -177.961, -15.5306, 0.59", "5.66918, -178.789, -15.7972, 0.59", "5.65849, -179.646, -16.0755, 0.29", "5.66045, -179.732, -16.1021, 0.29", "5.73356, -180.805, -16.4101, 0.29", "5.7426, -180.87, -16.4273, 0.29", "5.8425, -181.409, -16.5697, 0.74", "5.95725, -182.024, -16.7271, 0.88", "6.09619, -183.008, -16.9645, 0.22", "6.17026, -183.806, -17.15, 0.22", "6.18139, -184.695, -17.3615, 1.99", "6.15259, -185.338, -17.5242, 2.43", "5.99844, -186.757, -17.8934, 0.22", "5.8669, -187.521, -18.0983, 0.44", "5.66278, -188.459, -18.3602, 0.37", "5.42177, -189.434, -18.6317, 0.22", "5.24636, -190.081, -18.7991, 1.03", "5.14979, -190.461, -18.9085, 1.25", "5.03667, -191.001, -19.0825, 0.96", "4.84567, -192.227, -19.4986, 0.15", "4.78073, -192.868, -19.7184, 0.74", "4.75784, -193.342, -19.8744, 0.96", "4.72986, -194.812, -20.3429, 0.22", "4.73151, -194.951, -20.3865, 0.22", "4.78381, -195.564, -20.584, 0.22", "4.89677, -196.383, -20.8341, 0.22", "4.90678, -196.441, -20.851, 0.22", "5.11194, -197.483, -21.1464, 2.5", "5.20013, -197.889, -21.2534, 2.73", "5.68126, -199.848, -21.7992, 0.22", "5.85768, -200.436, -21.9772, 0.52", "6.05367, -200.984, -22.15, 0.52", "6.49261, -202.112, -22.4923, 0.22", "6.52026, -202.172, -22.5117, 0.22", "6.75928, -202.659, -22.6724, 0.22", "7.1925, -203.474, -22.9202, 1.18", "7.37065, -203.8, -23.0171, 1.69", "7.73684, -204.475, -23.1985, 1.33", "8.23636, -205.409, -23.3913, 0.22", "8.43472, -205.819, -23.4632, 0.22", "8.6837, -206.446, -23.5591, 1.47", "8.84063, -206.916, -23.6186, 1.69", "8.97945, -207.401, -23.6824, 1.69", "9.33476, -208.81, -23.8592, 0.29", "9.48328, -209.489, -23.9338, 0.29", "9.64294, -210.23, -24.0256, 1.03", "9.66774, -210.379, -24.0438, 1.33", "9.82359, -211.661, -24.1823, 0.22", "9.85733, -212.154, -24.2283, 0.22", "9.85649, -212.508, -24.249, 1.03", "9.85055, -212.944, -24.2517, 1.03", "9.7946, -214.332, -24.1989, 0.22", "9.72196, -215.138, -24.1445, 1.33", "9.67478, -215.451, -24.1132, 1.47", "9.56092, -216.069, -24.0775, 1.55", "9.27654, -217.438, -24.0396, 0.22", "9.16793, -217.888, -24.0438, 0.22", "8.96918, -218.635, -24.0793, 0.96", "8.81404, -219.187, -24.1187, 1.25", "8.42356, -220.577, -24.2714, 0.22", "8.40275, -220.652, -24.282, 0.22", "8.04826, -222.045, -24.4822, 0.22", "7.97475, -222.358, -24.5234, 0.74", "7.91353, -222.633, -24.5579, 0.74", "7.61626, -224.022, -24.7106, 0.22", "7.37052, -225.222, -24.8035, 0.22", "7.07807, -226.792, -24.9306, 0.22", "6.99865, -227.301, -24.9759, 0.81" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-13.4161, -79.4489, -22.103, 0.66", "-14.2137, -81.1162, -22.015, 0.66", "-14.5276, -81.724, -21.956, 0.52", "-14.8896, -82.3523, -21.8829, 0.88", "-15.1243, -82.7493, -21.8207, 1.03", "-15.4444, -83.2898, -21.7168, 0.96", "-15.9378, -84.1268, -21.5363, 0.37", "-16.4237, -84.9466, -21.2795, 0.29", "-16.6513, -85.3704, -21.1407, 0.29", "-17.0556, -86.2826, -20.8072, 0.29", "-17.1599, -86.5802, -20.6965, 0.74", "-17.1823, -86.6636, -20.6685, 0.74", "-17.2479, -86.9953, -20.5826, 0.74", "-17.3424, -87.635, -20.4442, 0.59", "-17.4897, -88.6993, -20.2501, 0.29", "-17.6559, -89.7941, -20.0966, 0.29", "-17.8237, -90.8264, -19.9779, 0.29", "-18.0211, -91.9922, -19.8604, 0.29", "-18.1653, -92.9283, -19.8079, 1.33", "-18.1765, -93.008, -19.8074, 1.33", "-18.2717, -93.8226, -19.8444, 1.99", "-18.3018, -94.3294, -19.8744, 2.21", "-18.3148, -94.7681, -19.9065, 2.21", "-18.3265, -96.2346, -20.0291, 0.29", "-18.32, -97.4473, -20.1281, 0.29", "-18.3088, -98.153, -20.1793, 0.29", "-18.2904, -98.6471, -20.2097, 0.96", "-18.275, -99.2356, -20.236, 1.47", "-18.2694, -99.5951, -20.2435, 1.84", "-18.2547, -100.318, -20.2215, 0.88", "-18.2486, -100.386, -20.2212, 0.88", "-18.1542, -101.1, -20.2495, 0.29", "-18.0507, -101.799, -20.3031, 0.29", "-18.0373, -101.877, -20.3108, 0.29", "-17.8543, -102.856, -20.4249, 0.52", "-17.6388, -103.96, -20.5667, 0.52", "-17.4608, -104.895, -20.6814, 0.22", "-17.3227, -105.671, -20.7729, 1.47", "-17.2211, -106.319, -20.841, 2.06", "-17.1862, -106.664, -20.8719, 2.36", "-17.1707, -107.397, -20.9212, 1.69", "-17.2405, -108.535, -20.9671, 0.74", "-17.3696, -109.558, -20.9929, 0.44", "-17.5585, -110.63, -21.0312, 0.44", "-17.7008, -111.274, -21.0616, 0.44", "-17.9981, -112.516, -21.1312, 0.29", "-18.1429, -113.15, -21.1727, 0.59", "-18.2834, -113.814, -21.2213, 0.59", "-18.4032, -114.514, -21.2745, 0.29", "-18.4118, -114.592, -21.2813, 0.29", "-18.4863, -115.596, -21.3877, 0.29", "-18.5246, -116.729, -21.532, 0.29", "-18.5317, -116.866, -21.5515, 0.29", "-18.6026, -117.362, -21.6326, 0.29", "-18.6224, -117.426, -21.6473, 0.29", "-18.8774, -118.026, -21.8896, 0.29", "-18.9033, -118.083, -21.9182, 0.29", "-19.1861, -118.723, -22.2805, 0.29", "-19.5782, -119.693, -22.8444, 2.28", "-20.0718, -120.914, -23.5642, 2.65", "-20.7517, -122.643, -24.5777, 0.29", "-21.0956, -123.528, -25.0825, 0.29", "-21.3493, -124.138, -25.4265, 0.59", "-21.4786, -124.434, -25.5948, 0.22", "-21.8068, -125.079, -25.9728, 0.22", "-22.0944, -125.521, -26.2685, 0.22", "-22.6466, -126.232, -26.789, 1.03", "-23.1647, -126.845, -27.2792, 1.92", "-23.6002, -127.374, -27.7104, 2.06", "-24.0088, -127.93, -28.1757, 1.92", "-25.0799, -129.703, -29.6314, 0.29", "-25.3858, -130.318, -30.1098, 0.52", "-25.4046, -130.364, -30.1431, 0.52", "-25.5679, -130.854, -30.4435, 0.52", "-25.8148, -131.707, -30.8555, 0.37", "-25.9824, -132.448, -31.098, 0.29", "-26.1239, -133.292, -31.261, 0.29", "-26.2442, -133.963, -31.3742, 0.88", "-26.3195, -134.405, -31.4442, 0.88", "-26.4734, -135.545, -31.6059, 0.22", "-26.5575, -136.491, -31.7158, 1.55", "-26.5722, -137.076, -31.7797, 1.84", "-26.5509, -137.602, -31.8302, 1.62", "-26.4368, -138.875, -31.9735, 0.22", "-26.3319, -139.757, -32.079, 0.22", "-26.2591, -140.315, -32.1432, 0.22", "-26.2136, -140.887, -32.2042, 0.74", "-26.2024, -141.391, -32.2506, 0.74", "-26.2408, -142.501, -32.3403, 0.29", "-26.3154, -143.143, -32.3767, 0.29", "-26.5033, -144.174, -32.4004, 0.29", "-26.7135, -145.166, -32.3923, 1.77", "-26.8474, -145.754, -32.3718, 2.21", "-26.9832, -146.311, -32.3375, 2.21", "-27.2384, -147.279, -32.2465, 0.74", "-27.4961, -148.184, -32.1816, 0.22", "-27.8297, -149.287, -32.1315, 0.22", "-28.0053, -149.865, -32.1224, 0.88", "-28.1634, -150.411, -32.1263, 1.03", "-28.2021, -150.555, -32.1311, 1.03", "-28.4574, -151.595, -32.2055, 0.22", "-28.6244, -152.284, -32.2747, 0.22", "-28.6582, -152.417, -32.2877, 0.22", "-28.8501, -153.185, -32.3619, 0.22", "-28.9866, -153.694, -32.4027, 0.22", "-29.2313, -154.537, -32.4647, 1.33", "-29.3837, -155.019, -32.4934, 1.77", "-29.6267, -155.751, -32.52, 1.77", "-29.8172, -156.333, -32.5309, 0.88", "-30.2015, -157.499, -32.5392, 0.29", "-30.3188, -157.94, -32.5362, 0.74", "-30.4385, -158.418, -32.544, 0.74", "-30.6975, -159.547, -32.588, 0.22", "-30.8034, -160.046, -32.6146, 0.22", "-30.822, -160.135, -32.621, 0.22", "-31.0123, -161.039, -32.7154, 0.96", "-31.317, -162.349, -32.8678, 1.18", "-31.4154, -162.722, -32.9195, 1.47", "-31.4415, -162.807, -32.9334, 1.47", "-31.5888, -163.253, -32.9967, 1.47", "-31.9834, -164.495, -33.1361, 0.22", "-32.1053, -164.906, -33.1774, 0.22", "-32.2294, -165.468, -33.2172, 0.74", "-32.2975, -165.738, -33.2403, 0.96", "-32.3379, -165.882, -33.2537, 0.96", "-32.4429, -166.22, -33.292, 0.96", "-32.7404, -167.166, -33.4192, 0.22", "-32.9114, -167.74, -33.4981, 0.29", "-33.0899, -168.429, -33.6453, 0.29", "-33.2092, -168.903, -33.8018, 0.29", "-33.4175, -169.749, -34.1387, 1.25", "-33.54, -170.262, -34.37, 1.69", "-33.6282, -170.657, -34.5725, 1.69", "-33.8704, -171.817, -35.2464, 1.03", "-34.1395, -173.011, -35.97, 0.22", "-34.2585, -173.491, -36.2565, 0.22", "-34.5808, -174.684, -36.9465, 1.99", "-34.8036, -175.437, -37.3568, 2.5", "-35.2844, -177.018, -38.1158, 0.29", "-35.518, -177.742, -38.4045, 0.22", "-35.7666, -178.509, -38.6525, 0.52", "-35.8797, -178.841, -38.7435, 0.59", "-36.2628, -179.948, -38.9635, 0.22", "-36.5653, -180.867, -39.0707, 0.22", "-36.7418, -181.427, -39.0971, 0.22", "-37.091, -182.567, -39.1366, 1.33", "-37.2705, -183.101, -39.1572, 1.69", "-37.4672, -183.633, -39.1767, 1.47", "-37.7756, -184.358, -39.2159, 0.52", "-38.039, -184.92, -39.2623, 0.29", "-38.7648, -186.33, -39.4076, 0.29", "-39.2951, -187.248, -39.5326, 1.11", "-39.6051, -187.767, -39.6191, 1.47", "-40.4422, -189.105, -39.8713, 0.22", "-40.7609, -189.621, -39.9771, 1.77", "-41.1913, -190.332, -40.1341, 2.14", "-41.4464, -190.769, -40.2373, 1.69", "-42.0155, -191.865, -40.4801, 0.22", "-42.0437, -191.93, -40.4934, 0.22", "-42.2533, -192.502, -40.6048, 0.22", "-42.4541, -193.108, -40.7421, 0.52", "-42.5087, -193.292, -40.7883, 0.52", "-42.7595, -194.213, -41.0256, 0.22", "-42.9053, -194.779, -41.181, 0.22", "-43.0858, -195.592, -41.4141, 1.99", "-43.2286, -196.342, -41.6426, 2.5", "-43.347, -197.384, -42.0119, 0.81", "-43.4083, -198.068, -42.2707, 0.22", "-43.4133, -198.123, -42.2914, 0.22", "-43.4557, -198.492, -42.4279, 0.52", "-43.4635, -198.547, -42.4472, 0.52", "-43.73, -199.623, -42.8226, 0.22", "-44.0564, -200.616, -43.1555, 0.22", "-44.3756, -201.446, -43.4251, 0.22", "-44.706, -202.174, -43.654, 1.33", "-44.8684, -202.484, -43.7475, 1.33", "-45.5551, -203.666, -44.0922, 0.22", "-46.1046, -204.398, -44.2893, 0.22", "-46.1457, -204.443, -44.3025, 0.22", "-47.2318, -205.454, -44.6011, 2.28", "-47.5691, -205.718, -44.6784, 2.73", "-47.9046, -205.95, -44.7486, 2.73", "-49.5572, -206.909, -45.0624, 0.22", "-49.8861, -207.063, -45.1334, 0.74", "-50.2238, -207.202, -45.2114, 0.96", "-51.3277, -207.564, -45.5135, 0.22", "-51.8346, -207.704, -45.678, 1.03", "-52.1466, -207.794, -45.8469, 1.03", "-53.3287, -208.178, -46.8035, 0.22", "-53.376, -208.196, -46.8529, 0.22", "-54.0115, -208.448, -47.5964, 1.4", "-54.18, -208.519, -47.813, 1.4", "-55.8204, -209.261, -49.9724, 0.59", "-56.1969, -209.446, -50.4716, 1.03", "-57.3614, -210.081, -51.9363, 0.22", "-57.9462, -210.402, -52.5843, 0.22", "-57.9856, -210.425, -52.623, 0.22", "-58.4832, -210.707, -53.0471, 1.11", "-58.8632, -210.908, -53.3023, 1.25", "-60.2251, -211.646, -54.1452, 0.22", "-60.6749, -211.898, -54.4017, 0.66", "-61.9097, -212.606, -55.1323, 0.22", "-61.966, -212.638, -55.1647, 0.22", "-62.3471, -212.851, -55.3776, 0.96", "-62.7065, -213.036, -55.5616, 1.4", "-63.2676, -213.304, -55.813, 0.96", "-64.2829, -213.785, -56.2099, 0.22", "-64.8527, -214.064, -56.3969, 1.62", "-65.3177, -214.3, -56.5441, 1.99", "-66.794, -215.098, -56.9717, 0.22", "-67.2195, -215.353, -57.0891, 0.37", "-67.4395, -215.496, -57.1401, 0.37", "-68.0087, -215.882, -57.259, 0.22", "-68.4727, -216.223, -57.3646, 0.22", "-69.1409, -216.734, -57.5256, 0.52", "-69.9105, -217.341, -57.7269, 0.22", "-70.3384, -217.666, -57.8525, 0.96", "-70.758, -217.971, -58.012, 0.96", "-71.7888, -218.74, -58.4739, 0.22", "-72.5498, -219.323, -58.931, 1.18", "-72.8791, -219.588, -59.2126, 1.55", "-72.9152, -219.618, -59.2494, 1.55", "-73.9211, -220.495, -60.3988, 0.29", "-74.3973, -220.912, -60.9787, 0.29", "-75.3464, -221.709, -62.1693, 1.55", "-76.7962, -222.876, -63.9972, 0.29", "-76.8419, -222.911, -64.053, 0.29", "-77.2513, -223.223, -64.5343, 1.18", "-77.9783, -223.762, -65.3611, 0.22", "-78.5744, -224.194, -66.0116, 1.25", "-79.5111, -224.922, -66.9771, 0.22", "-79.6599, -225.039, -67.1177, 0.74", "-80.3027, -225.57, -67.7226, 0.22", "-80.3386, -225.603, -67.7566, 0.22", "-80.8696, -226.164, -68.2666, 1.11", "-81.2426, -226.597, -68.6171, 1.47", "-82.0574, -227.605, -69.3254, 0.22", "-82.2744, -227.876, -69.5067, 0.59", "-82.7777, -228.508, -69.8971, 1.18", "-82.8179, -228.559, -69.928, 1.18", "-83.3073, -229.196, -70.2883, 1.18", "-84.2011, -230.354, -70.9128, 0.22", "-84.6592, -230.991, -71.2296, 1.25", "-84.8432, -231.242, -71.3526, 1.25", "-85.5248, -232.095, -71.7934, 0.29", "-85.9196, -232.561, -72.049, 0.96", "-86.9115, -233.75, -72.6166, 0.29", "-87.6047, -234.563, -72.947, 0.44", "-88.3711, -235.426, -73.2456, 0.22", "-89.1162, -236.213, -73.4755, 1.18", "-89.6432, -236.704, -73.5618, 1.77", "-90.9626, -237.78, -73.6129, 0.29", "-91.5068, -238.16, -73.552, 0.29", "-91.92, -238.393, -73.4521, 0.29", "-92.3046, -238.562, -73.3322, 0.88", "-93.5061, -239.02, -72.9333, 0.22", "-94.2849, -239.252, -72.7175, 1.03", "-94.7022, -239.347, -72.6303, 1.03", "-95.5435, -239.504, -72.4512, 0.22", "-97.7602, -239.807, -72.0031, 0.22", "-97.8295, -239.813, -71.9902, 0.22", "-99.2188, -239.796, -71.7746, 0.81", "-99.4845, -239.772, -71.7432, 1.03", "-100.262, -239.631, -71.6347, 0.22", "-101.204, -239.375, -71.4966, 0.22", "-101.269, -239.352, -71.4822, 0.22", "-102.39, -238.961, -71.235, 1.33", "-102.888, -238.804, -71.1398, 1.55", "-104.586, -238.372, -70.9128, 0.22", "-105.074, -238.275, -70.8713, 0.59", "-105.837, -238.16, -70.8648, 0.59", "-106.652, -238.071, -70.9156, 0.44", "-107.941, -237.995, -71.0958, 0.22", "-108.75, -237.954, -71.2486, 1.03", "-109.043, -237.95, -71.3165, 1.03", "-110.28, -237.919, -71.5776, 0.22", "-110.813, -237.881, -71.6753, 0.22", "-110.873, -237.874, -71.6809, 0.22", "-111.985, -237.63, -71.7531, 0.22", "-112.99, -237.357, -71.8018, 0.22", "-113.047, -237.339, -71.8043, 0.22", "-114.094, -236.988, -71.9099, 1.11", "-114.487, -236.859, -72.0035, 1.55", "-115.563, -236.526, -72.3645, 0.22", "-116.357, -236.321, -72.727, 0.22", "-116.756, -236.223, -72.9369, 0.66", "-117.91, -235.986, -73.5886, 0.22", "-118.932, -235.805, -74.1921, 1.25", "-119.317, -235.749, -74.4466, 1.47", "-120.56, -235.662, -75.2677, 0.22", "-120.619, -235.663, -75.3052, 0.22", "-121.087, -235.708, -75.584, 1.03", "-121.811, -235.836, -75.9656, 1.33", "-123.67, -236.233, -76.9047, 0.22", "-125.069, -236.571, -77.6152, 0.22", "-126.137, -236.864, -78.1376, 0.22", "-126.529, -236.983, -78.3269, 1.03", "-127.024, -237.166, -78.5562, 1.25" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-22.4969, 731.089, -68.5641, 0.88", "-22.8974, 732.28, -68.4432, 0.88", "-23.5114, 734.109, -68.2864, 0.15", "-23.8605, 735.292, -68.2849, 0.15", "-23.8971, 735.413, -68.2889, 0.15", "-24.0881, 736.048, -68.3098, 1.03", "-24.1741, 736.334, -68.3192, 1.4", "-24.252, 736.601, -68.3496, 1.4", "-24.9405, 738.959, -68.6498, 0.22", "-25.4183, 740.717, -68.8835, 0.22" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-22.4969, 731.089, -68.5641, 0.22", "-21.5643, 733.061, -68.0556, 0.22", "-21.1434, 733.965, -67.7824, 0.81", "-21.0121, 734.249, -67.6896, 1.03", "-20.8005, 734.734, -67.5287, 0.81", "-19.8917, 736.889, -66.8117, 0.22", "-19.7575, 737.228, -66.7105, 0.44", "-19.5164, 737.985, -66.4931, 0.15", "-19.5007, 738.04, -66.4798, 0.15", "-19.303, 738.871, -66.3023, 1.03", "-19.2837, 738.973, -66.2839, 1.03", "-19.0367, 740.429, -66.1125, 0.15", "-18.9786, 740.78, -66.0746, 0.29", "-18.7095, 742.405, -65.9141, 0.15", "-18.6097, 742.974, -65.8532, 0.66", "-18.5957, 743.05, -65.8416, 0.66", "-18.3544, 744.419, -65.5782, 0.15", "-18.1842, 745.377, -65.3426, 0.66", "-18.0305, 746.205, -65.1291, 0.22", "-18.0138, 746.281, -65.1084, 0.22", "-17.8214, 747.112, -64.8621, 0.74", "-17.7789, 747.316, -64.7951, 0.74", "-17.7617, 747.494, -64.7144, 0.74" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "4.90365, 684.233, -29.5283, 0.37", "3.36602, 685.149, -29.5569, 0.37", "2.69999, 685.552, -29.5747, 0.37", "2.63304, 685.596, -29.5699, 0.37", "2.07386, 685.973, -29.4979, 0.37", "1.36299, 686.479, -29.3638, 0.88", "0.967727, 686.772, -29.2719, 0.88", "0.908163, 686.822, -29.248, 0.88", "0.0755657, 687.622, -28.7974, 0.88", "0.0392481, 687.662, -28.7734, 0.88", "-0.239397, 688.037, -28.5418, 1.03", "-0.292983, 688.11, -28.4998, 1.03", "-0.569514, 688.44, -28.3191, 1.03", "-0.653681, 688.533, -28.2714, 1.03", "-1.16279, 689.05, -28.0295, 0.74", "-1.83988, 689.7, -27.7229, 0.29", "-2.52218, 690.33, -27.4059, 0.29", "-3.21685, 690.992, -27.06, 0.29", "-3.29972, 691.078, -27.0123, 0.29", "-3.7004, 691.54, -26.74, 0.22", "-3.7476, 691.605, -26.6972, 0.22", "-4.03445, 692.139, -26.3086, 0.52", "-4.15559, 692.787, -25.8061, 1.18", "-4.16627, 693.318, -25.4026, 1.18", "-4.16299, 693.374, -25.3615, 1.18", "-4.10184, 693.662, -25.1441, 1.18", "-4.08782, 693.708, -25.1093, 1.18", "-3.69068, 694.415, -24.5582, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "4.90365, 684.233, -29.5283, 0.52", "5.74218, 685.462, -29.3911, 0.52", "6.47906, 686.56, -29.2379, 0.37", "6.51714, 686.618, -29.2293, 0.37", "7.01431, 687.39, -29.1028, 0.37", "7.36737, 687.944, -29.0075, 0.74", "7.89466, 688.805, -28.8541, 0.44", "8.50132, 689.969, -28.6241, 0.37", "8.52774, 690.021, -28.6129, 0.37", "8.72203, 690.406, -28.5273, 0.37", "8.75302, 690.469, -28.5126, 0.37", "9.22567, 691.507, -28.285, 0.88", "9.51021, 692.263, -28.1835, 1.11" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-25.4183, 740.717, -68.8835, 0.22", "-26.4804, 739.689, -70.0672, 0.22", "-26.7623, 739.411, -70.4045, 1.25", "-27.7892, 738.386, -71.6788, 0.22", "-28.1556, 738.028, -72.1345, 0.96", "-29.2128, 737.027, -73.4252, 0.22", "-29.2563, 736.985, -73.4807, 0.22", "-29.9718, 736.263, -74.475, 0.22", "-29.9994, 736.233, -74.5179, 0.22", "-30.2546, 735.913, -74.9747, 0.74", "-30.3665, 735.767, -75.189, 0.88", "-31.1447, 734.821, -76.4954, 0.22", "-31.1733, 734.789, -76.5368, 0.22", "-31.7629, 734.086, -77.4035, 0.22", "-32.1235, 733.633, -77.9496, 0.22", "-32.1483, 733.598, -77.9906, 0.22", "-32.612, 732.9, -78.7759, 1.11", "-33.1076, 732.397, -79.1825, 1.4" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-25.4183, 740.717, -68.8835, 0.96", "-25.617, 741.322, -69.0079, 0.96", "-25.6384, 741.387, -69.0192, 0.96", "-25.7476, 741.723, -69.0723, 1.18", "-25.9613, 742.39, -69.1729, 0.88", "-26.8764, 745.297, -69.6004, 0.15", "-26.8973, 745.365, -69.61, 0.15", "-27.3907, 747.003, -69.8517, 0.15", "-27.7025, 748.093, -70.043, 0.96", "-27.8287, 748.569, -70.1378, 1.33", "-27.8461, 748.644, -70.1543, 1.33", "-27.8807, 748.854, -70.2048, 1.33", "-27.898, 748.975, -70.2373, 1.33", "-28.1005, 750.78, -70.7502, 0.15", "-28.1443, 751.204, -70.8617, 0.44", "-28.1879, 751.618, -70.9658, 0.44", "-28.3674, 753.105, -71.305, 0.22", "-28.3885, 753.25, -71.3344, 0.22", "-28.6101, 754.356, -71.514, 0.81", "-28.8576, 755.34, -71.633, 0.22", "-28.8932, 755.462, -71.6474, 0.22", "-29.1504, 756.217, -71.7331, 1.18", "-29.2959, 756.598, -71.7712, 1.33", "-30.1689, 758.514, -72.0101, 0.22", "-30.235, 758.635, -72.0271, 0.22", "-30.5198, 759.107, -72.0958, 0.22", "-30.9334, 759.72, -72.1867, 1.03", "-31.2774, 760.182, -72.2611, 1.33", "-32.2986, 761.45, -72.4963, 0.15", "-32.8729, 762.055, -72.628, 0.15", "-32.9211, 762.104, -72.6392, 0.15", "-33.7024, 762.857, -72.8259, 0.15", "-33.7539, 762.903, -72.8381, 0.15", "-34.5108, 763.515, -73.0084, 1.03", "-34.9713, 763.873, -73.089, 1.4" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-3.69068, 694.415, -24.5582, 0.52", "-3.83018, 696.171, -25.5867, 0.52", "-3.86065, 696.555, -25.7754, 0.52", "-3.864, 696.619, -25.806, 0.52", "-3.89389, 697.522, -26.2274, 0.37", "-3.89382, 697.587, -26.2574, 0.37", "-3.83803, 698.517, -26.6997, 0.37", "-3.72927, 699.31, -27.0103, 1.03", "-3.61235, 699.969, -27.2726, 0.88", "-3.59767, 700.042, -27.3026, 0.88", "-3.44036, 700.787, -27.6041, 0.59", "-3.14195, 702.481, -28.3618, 0.22", "-2.98499, 703.582, -28.8658, 0.22", "-2.97741, 703.643, -28.897, 0.22", "-2.89439, 704.534, -29.3652, 0.88", "-2.84726, 705.108, -29.6626, 1.11", "-2.71177, 706.932, -30.5613, 0.29", "-2.66113, 707.526, -30.8411, 0.22", "-2.51342, 708.519, -31.3495, 0.22", "-2.5006, 708.581, -31.3818, 0.22", "-2.15586, 709.945, -32.0389, 0.22", "-1.89778, 710.855, -32.4396, 1.33", "-1.75836, 711.284, -32.6095, 1.33", "-1.15227, 713.149, -33.3698, 0.22", "-1.13231, 713.212, -33.3955, 0.22", "-0.78612, 714.36, -33.8834, 0.22", "-0.562542, 715.15, -34.2564, 0.81", "-0.11854, 716.807, -35.0297, 0.22", "0.0939008, 717.598, -35.3713, 0.81", "0.11361, 717.663, -35.3948, 0.81", "0.210648, 717.954, -35.5058, 0.81", "0.67916, 719.156, -36.0022, 0.22", "1.0508, 720.013, -36.348, 1.4", "1.29728, 720.552, -36.5317, 1.77", "1.696, 721.326, -36.7827, 1.18" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-3.69068, 694.415, -24.5582, 0.52", "-4.28953, 695.458, -24.1779, 0.52", "-4.34801, 695.567, -24.1467, 0.52", "-4.60766, 696.077, -24.0328, 0.81", "-4.64281, 696.148, -24.02, 0.81", "-4.79673, 696.483, -23.9703, 0.59", "-5.43631, 697.948, -23.7505, 0.29", "-5.49137, 698.085, -23.7361, 0.29", "-5.75606, 698.76, -23.6306, 1.03", "-6.00751, 699.432, -23.4812, 0.96", "-6.26744, 700.137, -23.2803, 0.59", "-6.5113, 700.838, -23.0178, 0.59", "-6.54738, 700.947, -22.962, 0.59", "-6.74611, 701.671, -22.5428, 0.59", "-6.82968, 702.322, -22.1217, 0.29", "-6.8302, 702.371, -22.0882, 0.29", "-6.80527, 702.821, -21.7868, 0.29", "-6.79688, 702.922, -21.7259, 0.29", "-6.76839, 703.599, -21.3658, 0.59", "-6.77945, 704.753, -20.8673, 0.22", "-6.78474, 704.816, -20.8425, 0.22", "-6.95987, 705.524, -20.5991, 0.22", "-7.04377, 705.736, -20.536, 0.22", "-7.39653, 706.229, -20.4163, 0.22", "-7.91036, 706.486, -20.4001, 0.66", "-8.05441, 706.516, -20.4149, 0.66", "-8.87324, 706.614, -20.5445, 0.88" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "9.51021, 692.263, -28.1835, 0.29", "10.0259, 693.346, -27.9088, 0.29", "10.0839, 693.481, -27.8821, 0.29", "10.4061, 694.273, -27.7531, 0.88", "10.6737, 694.963, -27.6556, 1.25", "10.8848, 695.525, -27.5826, 1.25", "11.2054, 696.372, -27.4816, 0.44", "11.5478, 697.326, -27.3984, 0.29", "11.778, 697.966, -27.3537, 0.88", "11.9293, 698.393, -27.3384, 1.25", "11.9526, 698.458, -27.3388, 1.25", "12.1418, 698.981, -27.3496, 0.96", "12.1958, 699.125, -27.3516, 0.96", "12.4227, 699.714, -27.3615, 0.74", "12.8715, 700.872, -27.3837, 0.29", "13.1991, 701.711, -27.4012, 0.52", "13.2749, 701.911, -27.4057, 0.52" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "9.51021, 692.263, -28.1835, 0.22", "8.60717, 693.111, -28.0607, 0.22", "8.55467, 693.157, -28.0558, 0.22", "7.95487, 693.666, -28.0133, 0.22", "7.90722, 693.706, -28.01, 0.22", "7.00991, 694.467, -27.9464, 0.22", "6.95663, 694.513, -27.9426, 0.22", "6.1722, 695.265, -27.9426, 0.22", "5.82884, 695.576, -27.9426, 0.22" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-8.87324, 706.614, -20.5445, 0.22", "-8.63866, 707.786, -20.6958, 0.22", "-8.63314, 707.931, -20.6224, 0.22", "-8.72391, 708.567, -20.1563, 0.22", "-8.84724, 708.903, -19.8156, 0.37", "-9.12427, 709.486, -19.1303, 0.37", "-9.15123, 709.533, -19.0537, 0.37", "-9.69235, 710.422, -17.2552, 1.18", "-9.90055, 710.665, -16.6381, 1.18", "-10.2755, 710.987, -15.6028, 0.96", "-10.3742, 711.045, -15.3692, 0.96", "-11.4217, 711.499, -13.1871, 0.52", "-11.4762, 711.519, -13.0822, 0.52", "-11.83, 711.652, -12.441, 0.52", "-11.9115, 711.683, -12.2838, 0.52", "-12.4002, 711.858, -11.394, 0.74", "-12.8022, 711.994, -10.7595, 0.88", "-12.8519, 712.007, -10.7081, 0.88", "-13.6196, 712.267, -9.88789, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-8.87324, 706.614, -20.5445, 0.22", "-9.72574, 706.023, -20.7222, 0.22", "-9.80691, 705.967, -20.7391, 0.22", "-10.83, 705.258, -20.9522, 0.22", "-10.8948, 705.213, -20.9657, 0.22", "-11.5426, 704.765, -21.1007, 0.66", "-11.857, 704.547, -21.1662, 0.66" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "13.2749, 701.911, -27.4057, 0.15", "14.5223, 701.772, -27.4374, 0.15", "15.2665, 701.518, -27.5007, 0.44", "15.3303, 701.49, -27.5094, 0.44", "15.9841, 701.151, -27.6483, 0.15", "16.4853, 700.888, -27.7671, 0.96", "17.0335, 700.609, -27.8954, 0.96", "18.0805, 700.011, -28.1761, 0.22", "18.2399, 699.921, -28.2217, 0.22", "19.0922, 699.469, -28.4705, 0.52", "19.6897, 699.17, -28.6468, 0.52", "20.4258, 698.859, -28.8582, 0.59", "20.6225, 698.797, -28.9208, 0.59", "21.53, 698.622, -29.2076, 0.15", "21.5966, 698.612, -29.2287, 0.15", "21.9564, 698.552, -29.4166, 0.15", "22.095, 698.526, -29.5131, 0.15", "22.9195, 698.392, -30.1768, 0.88", "23.2896, 698.336, -30.4935, 1.18", "23.7427, 698.292, -30.9237, 1.18", "25.2214, 698.195, -32.3861, 0.22", "25.2789, 698.191, -32.4424, 0.22", "25.5792, 698.16, -32.7206, 0.37", "25.641, 698.154, -32.7747, 0.37", "26.5444, 698.089, -33.5705, 0.22", "26.5918, 698.084, -33.6082, 0.22", "27.2577, 698.052, -34.0204, 0.22", "27.6102, 698.027, -34.2394, 0.74", "27.9866, 697.984, -34.4721, 1.03", "28.0658, 697.974, -34.5192, 1.03", "29.5907, 697.74, -35.3356, 0.37", "30.4349, 697.629, -35.8209, 1.62" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "13.2749, 701.911, -27.4057, 0.29", "13.6432, 703.139, -27.4483, 0.29", "13.9058, 703.896, -27.475, 0.29", "13.9304, 703.96, -27.4772, 0.29", "14.2589, 704.812, -27.5063, 0.15", "14.6025, 705.705, -27.5367, 1.18", "14.7969, 706.209, -27.5539, 1.77", "15.1161, 706.907, -27.5838, 1.18", "15.3544, 707.377, -27.6062, 1.18" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-13.6196, 712.267, -9.88789, 0.59", "-13.6717, 713.056, -9.66712, 0.59", "-13.677, 713.123, -9.65278, 0.59", "-13.7139, 713.613, -9.57666, 0.59", "-13.7157, 713.692, -9.56804, 0.59", "-13.6944, 714.01, -9.55414, 0.59", "-13.656, 714.199, -9.46559, 0.59", "-13.59, 714.376, -9.19561, 0.29", "-13.5207, 714.598, -8.82521, 0.22", "-13.465, 714.892, -8.32326, 0.22", "-13.4487, 715.174, -7.84525, 0.74", "-13.4841, 716.494, -5.57392, 0.74", "-13.6371, 717.917, -3.13107, 0.88", "-13.7363, 718.44, -2.22123, 0.22", "-13.8601, 718.942, -1.3676, 0.22", "-13.9823, 719.329, -0.778159, 0.22", "-14.0016, 719.379, -0.716541, 0.22", "-14.1572, 719.721, -0.521683, 0.22", "-14.1871, 719.792, -0.503857, 0.22", "-14.3953, 720.485, -0.287763, 0.22", "-14.6195, 721.445, 0.0395053, 0.81", "-14.6358, 721.499, 0.057693, 0.81", "-14.8983, 722.108, 0.240303, 0.96", "-14.9443, 722.201, 0.264456, 0.96", "-15.1792, 722.651, 0.360588, 0.96", "-15.54, 723.328, 0.47114, 0.44", "-15.8031, 723.885, 0.53433, 0.44", "-16.1757, 724.769, 0.621338, 0.22", "-16.502, 725.658, 0.705996, 0.37", "-16.7928, 726.534, 0.801489, 0.37", "-17.0143, 727.29, 0.911057, 0.37", "-17.2485, 728.187, 1.10133, 0.22", "-17.2635, 728.252, 1.11969, 0.22", "-17.389, 728.685, 1.34219, 0.22", "-17.4249, 728.772, 1.42958, 0.22", "-17.7272, 729.334, 2.3594, 0.15", "-17.8709, 729.637, 2.92228, 0.44", "-17.8829, 729.666, 2.9731, 0.44", "-18.1953, 730.566, 4.26707, 0.88", "-18.4013, 731.282, 5.09952, 0.88", "-18.4417, 731.506, 5.31267, 0.88", "-18.5384, 732.59, 6.15829, 0.37", "-18.5431, 733.246, 6.54738, 0.22", "-18.5135, 733.978, 6.89868, 0.22", "-18.451, 734.386, 7.04352, 0.59", "-18.2183, 735.484, 7.41138, 0.44", "-18.1907, 735.564, 7.44468, 0.44", "-17.7629, 736.277, 7.89511, 0.29", "-17.6971, 736.336, 7.94387, 0.29", "-16.832, 736.711, 8.32907, 0.29", "-16.7781, 736.726, 8.35051, 0.29", "-15.9492, 737.007, 8.71412, 0.81", "-15.8614, 737.05, 8.75909, 0.81", "-15.3624, 737.426, 9.07934, 0.81", "-14.6604, 738.201, 9.62034, 0.29", "-13.9864, 739.206, 10.2371, 0.29", "-13.2125, 740.625, 10.9729, 0.52", "-12.8285, 741.514, 11.3649, 1.33", "-12.4069, 742.657, 11.8433, 0.22", "-12.2384, 743.265, 12.0775, 0.74", "-12.2108, 743.415, 12.1267, 0.74", "-12.0722, 744.282, 12.2921, 0.37", "-11.9637, 744.782, 12.3303, 1.03" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-13.6196, 712.267, -9.88789, 0.22", "-14.5399, 712.801, -9.66817, 0.22", "-15.1336, 713.137, -9.53121, 0.15", "-15.9151, 713.563, -9.37404, 0.15", "-16.8552, 714.076, -9.18498, 0.52", "-17.2661, 714.3, -9.10236, 0.52", "-17.84, 714.612, -8.98693, 0.52", "-18.0077, 714.701, -8.95099, 0.52", "-18.968, 715.19, -8.73455, 0.22" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "15.3544, 707.377, -27.6062, 0.22", "16.6617, 705.918, -27.9709, 0.22", "17.0396, 705.436, -28.0737, 0.29", "17.719, 704.438, -28.2613, 0.22", "18.2739, 703.622, -28.4146, 0.44", "18.8096, 702.834, -28.5626, 0.22", "18.8482, 702.778, -28.5733, 0.22", "19.0044, 702.399, -28.5733, 0.44", "19.1135, 701.998, -28.5733, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "15.3544, 707.377, -27.6062, 0.29", "15.4533, 707.848, -27.5514, 0.29", "15.7283, 708.934, -27.3282, 0.29", "16.0389, 710.043, -27.049, 0.29", "16.0708, 710.144, -27.0213, 0.29", "16.4503, 711.146, -26.7218, 0.29", "16.5305, 711.333, -26.6624, 0.81", "16.9763, 712.243, -26.3551, 0.66", "17.0001, 712.285, -26.341, 0.66", "17.31, 712.788, -26.1644, 0.52", "18.1175, 714.093, -25.7441, 0.29", "18.6265, 714.937, -25.4481, 0.29", "18.8818, 715.399, -25.2969, 1.33", "19.1758, 715.975, -25.128, 1.55", "19.2051, 716.037, -25.1099, 1.55", "19.516, 716.76, -24.8644, 1.25", "20.1179, 718.267, -24.332, 0.37", "20.4575, 719.165, -23.9995, 0.29", "20.4798, 719.226, -23.9753, 0.29", "20.8253, 720.197, -23.5675, 0.29", "21.4389, 721.926, -22.8265, 1.84" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-11.9637, 744.782, 12.3303, 0.44", "-11.7032, 743.517, 12.2113, 0.44", "-11.4714, 742.391, 12.1054, 0.37", "-11.3106, 741.61, 12.0318, 0.22", "-11.2967, 741.543, 12.0255, 0.22", "-11.0363, 740.278, 11.9064, 0.22", "-11.0224, 740.21, 11.9001, 0.22", "-9.58208, 730.602, 12.7999, 0.22" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-11.9637, 744.782, 12.3303, 0.74", "-12.1544, 745.395, 12.3008, 0.74", "-12.3113, 746.242, 12.2638, 0.22", "-12.3238, 746.309, 12.2596, 0.22", "-12.4459, 747.026, 12.2371, 0.22", "-12.4826, 747.248, 12.2341, 0.22", "-12.5927, 747.962, 12.2408, 0.22", "-12.7296, 748.907, 12.2782, 1.4", "-12.8641, 750.17, 12.395, 0.29", "-12.9329, 750.994, 12.5252, 0.29", "-12.9387, 751.09, 12.546, 0.29", "-13.0036, 752.009, 12.7945, 0.29", "-13.0089, 752.074, 12.8167, 0.29", "-13.1053, 753.129, 13.2836, 0.81", "-13.1442, 753.753, 13.6179, 1.11", "-13.1475, 753.813, 13.6505, 1.11", "-13.203, 754.588, 14.043, 1.11", "-13.2133, 754.693, 14.0943, 1.11", "-13.2956, 755.206, 14.303, 1.11", "-13.3079, 755.26, 14.3242, 1.11", "-13.4704, 755.939, 14.576, 0.22", "-13.6489, 756.651, 14.8441, 0.29", "-13.6658, 756.714, 14.8681, 0.29", "-13.8582, 757.384, 15.1074, 0.22", "-14.2255, 758.523, 15.4903, 0.81", "-16.5758, 767.798, 17.4851, 0.81" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "21.4389, 721.926, -22.8265, 1.84", "22.3689, 722.53, -23.0065, 1.84" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "21.4389, 721.926, -22.8265, 0.22", "21.4051, 723.783, -23.1898, 0.22", "21.4056, 724.783, -23.3544, 0.22", "21.406, 724.842, -23.363, 0.22", "21.4177, 726.03, -23.5118, 0.59", "21.4359, 727.247, -23.65, 0.22", "21.4576, 728.164, -23.7433, 0.66", "21.4665, 728.234, -23.7392, 0.66", "21.5071, 728.447, -23.7152, 0.66", "21.6949, 729.286, -23.5816, 0.15", "21.7119, 729.351, -23.5669, 0.15", "21.8752, 729.922, -23.403, 1.18", "22.3413, 731.255, -22.9537, 0.29", "22.4979, 731.667, -22.804, 0.52", "22.5236, 731.727, -22.7795, 0.52", "22.6494, 731.971, -22.6577, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "22.3689, 722.53, -23.0065, 0.15", "22.8747, 724.236, -22.5471, 0.15", "23.1122, 725.079, -22.3454, 0.15", "23.2745, 725.655, -22.2075, 0.29", "23.3319, 725.859, -22.1588, 0.29", "23.4768, 726.374, -22.0357, 0.15", "23.5905, 726.777, -21.9391, 0.29", "23.6063, 726.882, -21.9391, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "22.3689, 722.53, -23.0065, 0.29", "22.9575, 721.153, -22.19, 0.29", "23.1335, 720.692, -21.9072, 0.29", "23.4065, 719.912, -21.4353, 0.22", "23.5089, 719.647, -21.2732, 0.52", "23.9262, 718.592, -20.6255, 0.22", "23.9436, 718.544, -20.5958, 0.22", "24.0487, 718.178, -20.377, 0.88", "24.1171, 717.95, -20.2128, 1.03", "24.4089, 716.75, -19.2417, 0.22", "24.4181, 716.686, -19.192, 0.22", "24.5294, 715.533, -18.2792, 0.22", "24.5323, 715.487, -18.2417, 0.22", "24.6316, 714.461, -17.3798, 0.22", "24.7019, 713.797, -16.8077, 0.22", "24.7923, 713.028, -16.0676, 0.22", "24.9989, 712.092, -15.097, 0.29", "25.0263, 712.027, -15.026, 0.29", "25.672, 711.038, -13.9808, 0.15", "25.7034, 711.002, -13.9446, 0.15", "26.7055, 710.145, -13.0895, 0.96", "27.0229, 709.916, -12.865, 0.96", "28.1515, 709.122, -12.1573, 0.22", "29.0783, 708.484, -11.6044, 0.22", "29.1242, 708.454, -11.5792, 0.22", "30.0339, 707.865, -11.1371, 0.22", "31.4756, 706.959, -10.598, 0.22", "32.099, 706.552, -10.3507, 0.74" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "23.6063, 726.882, -21.9391, 0.37", "23.8133, 728.066, -21.6797, 0.37", "23.825, 728.133, -21.6688, 0.37", "23.8859, 728.539, -21.6201, 0.22", "24.0024, 729.437, -21.5657, 0.22", "24.0501, 729.912, -21.5518, 0.66", "24.058, 729.99, -21.5495, 0.66", "24.1368, 730.815, -21.5881, 0.52", "24.1968, 731.526, -21.6249, 0.52", "24.2475, 732.378, -21.6775, 1.33", "24.2698, 733.089, -21.7326, 1.47" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "23.6063, 726.882, -21.9391, 0.29", "24.6218, 726.912, -21.4833, 0.29", "24.6768, 726.918, -21.4605, 0.29", "26.2822, 727.179, -20.8144, 0.66", "27.3182, 727.372, -20.3972, 0.15", "27.8563, 727.475, -20.1852, 0.88", "28.4398, 727.578, -19.9818, 0.88", "29.3296, 727.739, -19.6846, 0.22", "29.3869, 727.749, -19.6699, 0.22", "30.1282, 727.87, -19.5738, 0.81", "30.4449, 727.955, -19.5456, 0.81", "31.4778, 728.285, -19.4682, 0.22", "31.7602, 728.37, -19.4536, 0.96", "31.8274, 728.392, -19.4524, 0.96", "32.3828, 728.587, -19.4686, 0.52", "33.3189, 728.901, -19.4608, 0.22", "33.4146, 728.931, -19.4531, 0.22", "33.7114, 729.016, -19.404, 0.22", "33.802, 729.036, -19.3872, 0.22", "34.663, 729.182, -19.2176, 0.66", "35.9024, 729.348, -18.9647, 0.15", "35.9609, 729.353, -18.9528, 0.15", "36.761, 729.411, -18.8241, 0.15", "37.3414, 729.446, -18.7226, 0.74", "37.5088, 729.458, -18.6932, 0.74", "37.9995, 729.5, -18.6077, 0.74", "38.0687, 729.505, -18.5985, 0.74", "39.1355, 729.57, -18.4542, 0.22", "40.649, 729.612, -18.233, 0.66", "41.0226, 729.613, -18.1721, 0.66", "41.102, 729.612, -18.1581, 0.66", "41.7417, 729.583, -18.0316, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "24.2698, 733.089, -21.7326, 0.44", "24.1223, 734.286, -21.1859, 0.44", "24.0939, 735.122, -20.7588, 0.29", "24.1038, 735.943, -20.3223, 0.29", "24.1736, 737.235, -19.639, 0.81", "24.2163, 737.692, -19.4024, 1.18", "24.2419, 737.91, -19.292, 1.18", "24.5305, 739.122, -18.6937, 0.15", "24.577, 739.251, -18.6272, 0.15", "24.7628, 739.634, -18.4376, 0.66", "24.9471, 739.978, -18.3167, 0.96", "24.9733, 740.039, -18.2958, 0.96", "25.0317, 740.244, -18.2131, 0.96", "25.1909, 740.95, -17.8371, 0.29", "25.2188, 741.074, -17.7603, 0.29", "25.3425, 741.603, -17.4007, 0.29", "25.5655, 742.544, -16.7374, 0.37", "25.7399, 743.29, -16.2045, 0.52", "25.9991, 744.426, -15.3775, 0.96", "26.0147, 744.49, -15.3326, 0.96", "26.1979, 745.119, -14.9124, 1.18", "26.2658, 745.317, -14.7981, 1.18", "26.3931, 745.655, -14.6809, 1.18", "26.428, 745.751, -14.6626, 1.18", "26.6981, 746.633, -14.5676, 1.33", "26.7206, 746.708, -14.5609, 1.33", "26.8851, 747.271, -14.5231, 1.25", "27.3364, 748.817, -14.4328, 0.22", "27.59, 749.756, -14.3885, 0.22", "27.7034, 750.253, -14.3686, 0.59", "27.7264, 750.361, -14.3647, 0.59", "27.7849, 750.647, -14.355, 0.59", "27.9375, 751.497, -14.3324, 0.22", "27.9918, 752.149, -14.3324, 0.96", "28.0074, 752.939, -14.3324, 1.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "24.2698, 733.089, -21.7326, 0.15", "25.0609, 735.491, -22.1509, 0.15", "25.0838, 735.588, -22.165, 0.15", "25.2008, 736.083, -22.227, 0.15", "25.2168, 736.161, -22.2358, 0.15", "25.3038, 736.692, -22.3013, 0.59", "25.3524, 737.038, -22.3429, 0.59", "25.5487, 739.191, -22.5686, 0.22", "25.6068, 740.046, -22.6588, 1.25", "25.6459, 740.651, -22.7114, 0.88", "25.7365, 742.226, -22.822, 0.15", "25.7638, 742.891, -22.8574, 0.15", "25.7746, 743.625, -22.8861, 0.74", "25.7673, 744.122, -22.8946, 1.11", "25.7247, 745.247, -22.9138, 0.15", "25.7037, 745.836, -22.9197, 0.96", "25.6642, 746.55, -22.9177, 1.18", "25.5201, 748.566, -22.9354, 0.15", "25.512, 748.656, -22.9368, 0.15", "25.4101, 749.592, -22.9696, 0.15", "25.4011, 749.659, -22.9736, 0.15", "25.3384, 750.233, -23.0017, 0.52", "25.3247, 750.37, -23.0056, 0.52", "25.2982, 750.663, -23.0143, 0.52", "25.2945, 750.722, -23.0165, 0.52", "25.2543, 751.692, -23.0532, 0.22", "25.2282, 752.397, -23.0822, 1.11", "25.2071, 753.056, -23.0893, 0.81", "25.1538, 754.792, -23.0743, 0.15", "25.0979, 756.635, -23.0264, 0.15", "25.0853, 757.254, -22.9894, 1.03", "25.0743, 757.947, -22.915, 0.81", "25.0627, 759.439, -22.6709, 0.22", "25.0625, 759.496, -22.658, 0.22", "25.0622, 760.447, -22.3468, 0.52", "25.0573, 761.343, -21.9883, 0.22", "25.0507, 762.146, -21.6562, 0.74", "25.0476, 762.601, -21.466, 0.74", "25.0467, 762.665, -21.4398, 0.74", "25.0436, 763.987, -20.9267, 0.22", "25.0442, 764.042, -20.9064, 0.22", "25.0832, 765.081, -20.6037, 0.66", "25.1094, 765.44, -20.5166, 0.66", "25.1157, 765.497, -20.5048, 0.66", "25.2267, 766.145, -20.4001, 0.22", "25.5116, 767.19, -20.205, 1.4", "25.911, 768.411, -19.9606, 0.15", "25.9626, 768.548, -19.9321, 0.15", "26.2431, 769.249, -19.7745, 0.15", "26.6818, 770.318, -19.5269, 0.15", "27.4787, 772.193, -19.0753, 0.15", "27.9281, 773.176, -18.8084, 1.33", "28.1138, 773.574, -18.6698, 1.47", "28.8031, 775.084, -18.1831, 0.22", "28.8793, 775.258, -18.131, 0.44", "28.9007, 775.311, -18.1197, 0.44", "29.2137, 776.207, -18.1717, 0.22", "29.5809, 777.358, -18.0969, 0.88", "30.0414, 779.15, -17.7804, 0.59", "30.1294, 779.483, -17.6795, 0.37", "30.3837, 780.371, -17.3316, 0.15", "30.7645, 781.641, -16.7563, 1.62", "31.7076, 784.507, -15.3111, 0.88", "31.9209, 785.095, -14.9691, 1.25", "32.3279, 786.146, -14.2475, 0.15", "32.4753, 786.501, -13.9915, 0.66", "32.504, 786.563, -13.9475, 0.66", "33.0443, 787.64, -13.3053, 0.22", "33.3227, 788.209, -13.1295, 0.88", "33.4294, 788.442, -13.0662, 0.88", "33.4619, 788.524, -13.0459, 0.88", "34.0437, 790.114, -12.6577, 0.22", "34.2433, 790.686, -12.524, 0.66", "34.7087, 792.157, -12.203, 0.15", "34.9283, 792.89, -12.0508, 0.15", "34.9442, 792.949, -12.0394, 0.15", "35.0537, 793.435, -11.953, 0.44", "35.1451, 794.075, -11.8636, 0.22", "35.179, 794.638, -11.8107, 0.52", "35.1666, 794.717, -11.8107, 0.52", "35.086, 795.008, -11.8107, 0.52", "34.9674, 795.35, -11.8107, 0.37", "34.9289, 795.421, -11.8107, 0.37", "34.6641, 795.727, -11.8107, 0.22", "34.1733, 796.186, -11.8107, 0.44" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "28.0074, 752.939, -14.3324, 0.22", "28.2336, 754.309, -13.8671, 0.22", "28.3456, 755.005, -13.6178, 0.52", "28.6229, 756.754, -12.9726, 0.29", "28.7508, 757.569, -12.6644, 0.88", "28.859, 758.182, -12.4468, 1.18", "28.9383, 758.619, -12.3052, 1.18", "28.9836, 758.843, -12.2444, 1.18", "28.9836, 758.843, -12.2444, 1.18", "28.9959, 758.9, -12.2359, 1.18", "29.2369, 760.015, -12.0942, 0.22", "29.4331, 760.692, -11.9679, 0.44", "29.7543, 761.671, -11.7352, 0.59", "29.9406, 762.134, -11.6045, 1.11", "30.1562, 762.602, -11.4569, 1.11", "30.1821, 762.652, -11.4391, 1.11", "31.1587, 764.186, -10.7717, 0.22", "31.1998, 764.236, -10.7478, 0.22", "31.7967, 764.891, -10.4471, 0.22", "32.122, 765.249, -10.2741, 0.74", "32.167, 765.3, -10.2498, 0.74", "32.5236, 765.733, -10.0487, 0.52", "33.0561, 766.495, -9.73025, 0.22", "33.4216, 767.148, -9.42016, 0.74", "33.931, 768.315, -8.79874, 1.25", "33.9575, 768.393, -8.75662, 1.25", "34.0277, 768.674, -8.60501, 1.11", "34.1456, 769.282, -8.22549, 0.52", "34.3299, 770.185, -7.59693, 0.15", "34.3452, 770.24, -7.55337, 0.15", "34.5903, 770.663, -7.11886, 0.15", "34.6488, 770.725, -7.03526, 0.15", "35.3956, 771.34, -5.93892, 0.44", "35.703, 771.551, -5.49281, 0.66", "35.7429, 771.573, -5.43997, 0.66", "36.7274, 772.064, -4.14424, 0.22", "36.7689, 772.082, -4.0899, 0.22", "37.789, 772.538, -2.71982, 1.33", "37.908, 772.6, -2.53914, 1.62" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "28.0074, 752.939, -14.3324, 0.15", "29.5052, 754.133, -14.462, 0.15", "30.0353, 754.535, -14.4881, 0.15", "30.1587, 754.623, -14.4913, 0.15", "30.75, 755.031, -14.5004, 0.44", "30.881, 755.117, -14.5005, 0.44", "31.7398, 755.668, -14.4989, 0.22", "32.1806, 755.941, -14.483, 0.44", "32.7777, 756.258, -14.4668, 0.15", "32.841, 756.289, -14.4655, 0.15", "33.4706, 756.571, -14.4574, 0.66", "33.535, 756.598, -14.4571, 0.66", "34.3907, 756.924, -14.464, 0.22", "35.0872, 757.194, -14.4834, 0.88", "35.1624, 757.223, -14.486, 0.88", "35.3642, 757.297, -14.4939, 1.11", "35.4977, 757.342, -14.5009, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "37.908, 772.6, -2.53914, 0.29", "38.2514, 773.958, -1.42122, 0.29", "38.2719, 774.014, -1.38106, 0.29", "38.6215, 774.796, -0.854232, 0.29", "38.6712, 774.884, -0.799718, 0.29", "39.0222, 775.484, -0.463701, 0.74", "39.0513, 775.533, -0.438143, 0.74", "39.3963, 776.135, -0.110414, 0.74", "39.4542, 776.242, -0.0368845, 0.74", "39.8291, 776.933, 0.484544, 0.15", "40.0093, 777.255, 0.730965, 0.15", "40.0318, 777.298, 0.764485, 0.15", "40.762, 778.764, 1.8893, 0.15", "40.9736, 779.254, 2.24998, 1.11", "41.1553, 779.74, 2.57645, 1.25", "41.5516, 780.88, 3.29921, 0.22", "41.7919, 781.556, 3.69929, 0.22", "41.8086, 781.607, 3.72501, 0.22", "42.0449, 782.343, 3.96827, 0.29", "42.2573, 783.085, 4.17255, 0.74", "42.4049, 783.607, 4.31821, 1.11", "42.4264, 783.672, 4.33592, 1.11", "42.7367, 784.38, 4.52577, 0.66", "43.1687, 785.25, 4.75421, 0.22", "43.4851, 785.763, 4.88755, 0.15", "43.9244, 786.374, 5.04268, 1.11", "44.3465, 786.936, 5.16948, 1.69", "44.3839, 786.981, 5.18107, 1.69" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "37.908, 772.6, -2.53914, 0.29", "37.086, 773.46, -2.67628, 0.29", "36.867, 773.687, -2.71934, 0.29", "36.2469, 774.304, -2.83539, 0.15", "36.1136, 774.434, -2.85951, 0.15", "35.6849, 774.863, -2.93297, 0.29", "35.0244, 775.536, -3.04505, 0.15", "34.9453, 775.622, -3.06317, 0.15", "34.3134, 776.398, -3.2259, 0.15", "34.2601, 776.482, -3.24479, 0.15", "33.9481, 777.054, -3.37253, 0.15", "33.8801, 777.221, -3.41054, 0.15", "33.5157, 778.331, -3.68446, 0.15", "33.4919, 778.418, -3.70621, 0.15", "33.3122, 779.458, -3.99954, 0.15", "33.3032, 779.523, -4.01877, 0.15", "33.2605, 780.062, -4.19369, 0.37" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "44.3839, 786.981, 5.18107, 0.52", "44.6861, 788.334, 6.45125, 0.52", "44.8467, 789.633, 7.61397, 0.29", "44.8585, 790.097, 7.96567, 0.96", "44.8502, 790.67, 8.3695, 1.11", "44.8459, 790.766, 8.43804, 1.11", "44.7973, 791.577, 9.02448, 0.81", "44.6875, 792.457, 9.60297, 1.11", "44.5584, 793.699, 10.33, 0.37", "44.5556, 793.75, 10.3597, 0.37", "44.5857, 794.903, 10.9865, 0.29", "44.594, 794.963, 11.019, 0.29", "44.8841, 795.715, 11.4939, 0.81", "45.1222, 796.1, 11.7778, 1.03", "45.1575, 796.147, 11.8163, 1.03", "45.4816, 796.558, 12.152, 0.96", "46.3277, 797.594, 12.9773, 0.66", "47.15, 798.622, 13.7675, 0.52", "47.7818, 799.467, 14.3896, 0.44", "48.0842, 799.917, 14.7007, 0.44", "48.3604, 800.308, 15.0056, 0.37", "48.4437, 800.415, 15.0964, 0.37", "49.075, 801.117, 15.7202, 0.37", "49.684, 801.812, 16.3207, 0.22", "50.5368, 802.717, 17.1469, 1.4", "51.7914, 803.953, 18.4024, 0.29", "52.1879, 804.31, 18.8168, 0.96", "52.5091, 804.565, 19.168, 0.96", "57.8048, 810.919, 24.5976, 0.96" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "44.3839, 786.981, 5.18107, 0.22", "43.6602, 788.47, 5.31214, 0.22", "43.0185, 789.79, 5.42837, 0.22", "42.9532, 789.925, 5.4402, 0.22", "42.3909, 791.082, 5.54206, 0.22", "39.2514, 800.142, 7.49143, 0.22" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_75", "dend_70", "dend_21", "dend_0", "dend_74", "dend_71", "dend_25", "dend_22", "dend_14", "dend_1", "dend_73", "dend_72", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_15", "dend_7", "dend_2", "dend_67", "dend_28", "dend_20", "dend_19", "dend_17", "dend_16", "dend_13", "dend_8", "dend_4", "dend_3", "dend_69", "dend_68", "dend_66", "dend_29", "dend_12", "dend_9", "dend_6", "dend_5", "dend_61", "dend_30", "dend_11", "dend_10", "dend_63", "dend_62", "dend_52", "dend_31", "dend_65", "dend_64", "dend_60", "dend_53", "dend_33", "dend_32", "dend_55", "dend_54", "dend_51", "dend_34", "dend_57", "dend_56", "dend_50", "dend_35", "dend_59", "dend_58", "dend_37", "dend_36", "dend_39", "dend_38", "dend_41", "dend_40", "dend_43", "dend_42", "dend_45", "dend_44", "dend_47", "dend_46", "dend_49", "dend_48" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_75", "dend_70", "dend_21", "dend_0", "dend_74", "dend_71", "dend_25", "dend_22", "dend_14", "dend_1", "dend_73", "dend_72", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_15", "dend_7", "dend_2", "dend_67", "dend_28", "dend_20", "dend_19", "dend_17", "dend_16", "dend_13", "dend_8", "dend_4", "dend_3", "dend_69", "dend_68", "dend_66", "dend_29", "dend_12", "dend_9", "dend_6", "dend_5", "dend_61", "dend_30", "dend_11", "dend_10", "dend_63", "dend_62", "dend_52", "dend_31", "dend_65", "dend_64", "dend_60", "dend_53", "dend_33", "dend_32", "dend_55", "dend_54", "dend_51", "dend_34", "dend_57", "dend_56", "dend_50", "dend_35", "dend_59", "dend_58", "dend_37", "dend_36", "dend_39", "dend_38", "dend_41", "dend_40", "dend_43", "dend_42", "dend_45", "dend_44", "dend_47", "dend_46", "dend_49", "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L6_DBC_e08f2b8ef4_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_75, id: dend_75, parent: soma_0
create dend_75
public dend_75
// Section: dend_70, id: dend_70, parent: soma_0
create dend_70
public dend_70
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_74, id: dend_74, parent: dend_70
create dend_74
public dend_74
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_67, id: dend_67, parent: dend_27
create dend_67
public dend_67
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_7
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_66, id: dend_66, parent: dend_28
create dend_66
public dend_66
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_61, id: dend_61, parent: dend_29
create dend_61
public dend_61
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_52, id: dend_52, parent: dend_30
create dend_52
public dend_52
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_60, id: dend_60, parent: dend_52
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_33
create dend_51
public dend_51
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_50, id: dend_50, parent: dend_34
create dend_50
public dend_50
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_78
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, axon_0, axon_0, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_75(0), soma_0(0.4999985130312626)
    connect dend_70(0), soma_0(0.4999985130312626)
    connect dend_21(0), soma_0(0.4999985130312626)
    connect dend_0(0), soma_0(0.4999985130312626)
    connect axon_0(0), soma_0(1.0)
    connect dend_74(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_67(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_13(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_66(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_61(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_52(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_60(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_51(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_50(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.28115, -11.0873, 1.6054, 2.71903 ) }
    soma_0 { pt3dadd( -3.90555, -10.0189, 1.46271, 4.54351 ) }
    soma_0 { pt3dadd( -3.52995, -8.95054, 1.32001, 6.06676 ) }
    soma_0 { pt3dadd( -3.15435, -7.88215, 1.17732, 7.70089 ) }
    soma_0 { pt3dadd( -2.77875, -6.81375, 1.03462, 9.50221 ) }
    soma_0 { pt3dadd( -2.40315, -5.74536, 0.891931, 11.4189 ) }
    soma_0 { pt3dadd( -2.02755, -4.67696, 0.749237, 12.8756 ) }
    soma_0 { pt3dadd( -1.65195, -3.60857, 0.606544, 14.0093 ) }
    soma_0 { pt3dadd( -1.27635, -2.54017, 0.46385, 14.551 ) }
    soma_0 { pt3dadd( -0.900746, -1.47178, 0.321156, 14.6039 ) }
    soma_0 { pt3dadd( -0.525145, -0.403386, 0.178462, 14.3615 ) }
    soma_0 { pt3dadd( -0.149545, 0.665008, 0.0357687, 13.9828 ) }
    soma_0 { pt3dadd( 0.226055, 1.7334, -0.106925, 13.3923 ) }
    soma_0 { pt3dadd( 0.601655, 2.8018, -0.249619, 12.9274 ) }
    soma_0 { pt3dadd( 0.977256, 3.87019, -0.392313, 12.1033 ) }
    soma_0 { pt3dadd( 1.35286, 4.93859, -0.535006, 10.4725 ) }
    soma_0 { pt3dadd( 1.72846, 6.00698, -0.6777, 8.96565 ) }
    soma_0 { pt3dadd( 2.10406, 7.07537, -0.820394, 7.72714 ) }
    soma_0 { pt3dadd( 2.47966, 8.14377, -0.963088, 6.28127 ) }
    soma_0 { pt3dadd( 2.85526, 9.21216, -1.10578, 4.62664 ) }
    soma_0 { pt3dadd( 3.23086, 10.2806, -1.24848, 2.72659 ) }
    // Section: dend_75, id: dend_75, parent: soma_0 (entry count 21/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -6.8285, -4.03579, -7.44048, 0.74 ) }
    dend_75 { pt3dadd( -6.8285, -4.03579, -7.44048, 0.74 ) }
    dend_75 { pt3dadd( -7.39373, -4.98973, -7.52135, 0.74 ) }
    dend_75 { pt3dadd( -7.44068, -5.04099, -7.52703, 0.74 ) }
    dend_75 { pt3dadd( -8.38138, -5.71439, -7.62169, 0.66 ) }
    dend_75 { pt3dadd( -9.30902, -6.16059, -7.69946, 0.44 ) }
    dend_75 { pt3dadd( -10.3948, -6.52651, -7.77574, 0.44 ) }
    dend_75 { pt3dadd( -11.4161, -6.70462, -7.95362, 0.44 ) }
    dend_75 { pt3dadd( -12.0755, -6.75696, -8.11098, 1.03 ) }
    dend_75 { pt3dadd( -12.8979, -6.81113, -8.38887, 1.33 ) }
    dend_75 { pt3dadd( -13.6303, -6.82931, -8.70067, 1.47 ) }
    dend_75 { pt3dadd( -14.3571, -6.87017, -9.10229, 0.66 ) }
    dend_75 { pt3dadd( -15.7518, -7.28241, -10.3005, 0.37 ) }
    dend_75 { pt3dadd( -16.0585, -7.54196, -10.7775, 0.37 ) }
    dend_75 { pt3dadd( -16.4781, -8.17416, -11.7464, 1.11 ) }
    dend_75 { pt3dadd( -16.4972, -8.21982, -11.8092, 1.11 ) }
    dend_75 { pt3dadd( -16.6108, -8.63291, -12.3192, 0.88 ) }
    dend_75 { pt3dadd( -16.7763, -9.56116, -13.3446, 0.59 ) }
    dend_75 { pt3dadd( -16.9562, -10.7939, -14.5367, 1.03 ) }
    dend_75 { pt3dadd( -16.987, -11.0072, -14.7544, 1.25 ) }
    dend_75 { pt3dadd( -17.0011, -11.0808, -14.8279, 1.25 ) }
    dend_75 { pt3dadd( -17.0761, -11.4033, -15.1526, 1.25 ) }
    dend_75 { pt3dadd( -17.1056, -11.4901, -15.2449, 1.25 ) }
    dend_75 { pt3dadd( -17.5273, -12.3363, -16.1271, 0.52 ) }
    dend_75 { pt3dadd( -18.0005, -12.9637, -16.792, 0.22 ) }
    dend_75 { pt3dadd( -18.3065, -13.1858, -17.1125, 0.22 ) }
    dend_75 { pt3dadd( -18.523, -13.275, -17.2896, 0.22 ) }
    dend_75 { pt3dadd( -19.0533, -13.4049, -17.6484, 0.88 ) }
    dend_75 { pt3dadd( -19.4173, -13.4837, -17.8499, 1.25 ) }
    dend_75 { pt3dadd( -19.9829, -13.616, -18.1188, 1.25 ) }
    dend_75 { pt3dadd( -21.164, -14.0085, -18.7565, 0.29 ) }
    dend_75 { pt3dadd( -21.4991, -14.1809, -18.9805, 0.29 ) }
    dend_75 { pt3dadd( -21.9948, -14.5604, -19.3709, 0.29 ) }
    dend_75 { pt3dadd( -22.5392, -15.1191, -19.8484, 0.29 ) }
    dend_75 { pt3dadd( -23.0742, -15.7713, -20.3642, 0.29 ) }
    dend_75 { pt3dadd( -23.5804, -16.4787, -20.8766, 0.52 ) }
    dend_75 { pt3dadd( -23.7781, -16.7941, -21.0806, 0.52 ) }
    dend_75 { pt3dadd( -23.952, -17.0413, -21.2459, 0.29 ) }
    dend_75 { pt3dadd( -24.2184, -17.3793, -21.5668, 0.29 ) }
    dend_75 { pt3dadd( -24.5487, -17.7443, -22.0172, 1.25 ) }
    dend_75 { pt3dadd( -24.7858, -17.9741, -22.3339, 1.47 ) }
    dend_75 { pt3dadd( -24.8227, -18.0092, -22.3853, 1.47 ) }
    dend_75 { pt3dadd( -25.0, -18.1879, -22.66, 1.47 ) }
    dend_75 { pt3dadd( -26.02, -19.3204, -24.4868, 0.22 ) }
    dend_75 { pt3dadd( -26.1791, -19.5278, -24.8149, 0.81 ) }
    dend_75 { pt3dadd( -26.3735, -19.7931, -25.2204, 0.81 ) }
    dend_75 { pt3dadd( -26.3999, -19.8267, -25.2753, 0.81 ) }
    dend_75 { pt3dadd( -26.6719, -20.1182, -25.7801, 0.96 ) }
    dend_75 { pt3dadd( -27.2868, -20.7035, -26.8905, 0.29 ) }
    dend_75 { pt3dadd( -27.327, -20.7347, -26.955, 0.29 ) }
    dend_75 { pt3dadd( -27.5635, -20.9589, -27.3756, 0.29 ) }
    dend_75 { pt3dadd( -28.23, -21.8204, -28.6752, 1.92 ) }
    dend_75 { pt3dadd( -28.5761, -22.3806, -29.3952, 2.58 ) }
    dend_75 { pt3dadd( -28.9107, -23.0244, -30.132, 2.58 ) }
    dend_75 { pt3dadd( -28.9348, -23.0707, -30.1785, 2.58 ) }
    dend_75 { pt3dadd( -29.6156, -24.3472, -31.3309, 0.66 ) }
    dend_75 { pt3dadd( -30.1481, -25.2063, -32.0493, 0.22 ) }
    dend_75 { pt3dadd( -30.2603, -25.3544, -32.154, 0.81 ) }
    dend_75 { pt3dadd( -30.9254, -26.0904, -32.6781, 0.22 ) }
    dend_75 { pt3dadd( -31.7258, -26.8788, -33.2299, 2.58 ) }
    dend_75 { pt3dadd( -32.106, -27.2163, -33.4827, 3.32 ) }
    dend_75 { pt3dadd( -33.5506, -28.3732, -34.4052, 0.44 ) }
    dend_75 { pt3dadd( -34.3043, -28.9787, -34.8985, 1.33 ) }
    dend_75 { pt3dadd( -34.8871, -29.4978, -35.2888, 1.47 ) }
    dend_75 { pt3dadd( -35.5199, -30.2048, -35.7778, 0.22 ) }
    dend_75 { pt3dadd( -35.5854, -30.2956, -35.8406, 0.22 ) }
    dend_75 { pt3dadd( -35.9792, -30.8864, -36.2411, 0.22 ) }
    dend_75 { pt3dadd( -36.3666, -31.547, -36.6459, 1.69 ) }
    dend_75 { pt3dadd( -36.5146, -31.7828, -36.792, 2.06 ) }
    dend_75 { pt3dadd( -37.5793, -33.2051, -37.8509, 0.22 ) }
    dend_75 { pt3dadd( -37.6174, -33.2482, -37.8896, 0.22 ) }
    dend_75 { pt3dadd( -38.0862, -33.7784, -38.416, 0.22 ) }
    dend_75 { pt3dadd( -38.3223, -34.0457, -38.7022, 0.88 ) }
    dend_75 { pt3dadd( -38.5495, -34.354, -39.0641, 1.11 ) }
    dend_75 { pt3dadd( -39.4889, -35.7712, -40.7295, 0.22 ) }
    dend_75 { pt3dadd( -39.5159, -35.8193, -40.7873, 0.22 ) }
    dend_75 { pt3dadd( -39.8342, -36.4629, -41.5736, 1.84 ) }
    dend_75 { pt3dadd( -39.9716, -36.7943, -41.9721, 1.99 ) }
    dend_75 { pt3dadd( -40.5619, -38.3612, -43.7684, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_75 { pt3dadd( -40.7392, -38.8191, -44.2469, 0.29 ) }
    dend_75 { pt3dadd( -41.3448, -40.0814, -45.4419, 0.29 ) }
    dend_75 { pt3dadd( -41.4151, -40.2073, -45.5622, 0.29 ) }
    dend_75 { pt3dadd( -41.879, -40.8874, -46.2188, 1.11 ) }
    dend_75 { pt3dadd( -42.1313, -41.2064, -46.5557, 1.47 ) }
    dend_75 { pt3dadd( -42.7896, -41.9307, -47.3571, 0.29 ) }
    dend_75 { pt3dadd( -43.6727, -42.8073, -48.3977, 2.43 ) }
    dend_75 { pt3dadd( -44.3877, -43.4213, -49.166, 2.43 ) }
    dend_75 { pt3dadd( -45.4898, -44.2638, -50.3272, 0.52 ) }
    dend_75 { pt3dadd( -46.3118, -44.8189, -51.1877, 0.66 ) }
    dend_75 { pt3dadd( -46.9738, -45.2251, -51.8795, 0.22 ) }
    dend_75 { pt3dadd( -47.3153, -45.4103, -52.2193, 0.59 ) }
    dend_75 { pt3dadd( -47.6389, -45.5745, -52.5081, 0.59 ) }
    dend_75 { pt3dadd( -48.4118, -45.9871, -53.1172, 0.22 ) }
    dend_75 { pt3dadd( -48.9613, -46.3499, -53.5293, 1.18 ) }
    dend_75 { pt3dadd( -49.2087, -46.5546, -53.7001, 1.33 ) }
    dend_75 { pt3dadd( -50.2047, -47.5532, -54.4601, 0.37 ) }
    dend_75 { pt3dadd( -50.7935, -48.2316, -54.9419, 0.22 ) }
    dend_75 { pt3dadd( -51.2731, -48.8381, -55.3399, 0.22 ) }
    dend_75 { pt3dadd( -51.8273, -49.6062, -55.7925, 1.55 ) }
    dend_75 { pt3dadd( -52.1873, -50.1445, -56.0847, 2.06 ) }
    dend_75 { pt3dadd( -53.1186, -51.6577, -56.8532, 0.22 ) }
    dend_75 { pt3dadd( -53.3082, -51.9821, -57.0009, 0.52 ) }
    dend_75 { pt3dadd( -53.5033, -52.2745, -57.1371, 0.52 ) }
    dend_75 { pt3dadd( -54.1113, -53.0887, -57.5196, 0.22 ) }
    dend_75 { pt3dadd( -54.4551, -53.5277, -57.7198, 0.22 ) }
    dend_75 { pt3dadd( -54.8322, -54.0063, -57.9602, 1.11 ) }
    dend_75 { pt3dadd( -55.1548, -54.4045, -58.1602, 1.33 ) }
    dend_75 { pt3dadd( -56.1158, -55.5382, -58.7992, 0.22 ) }
    dend_75 { pt3dadd( -56.455, -55.9137, -59.0289, 1.03 ) }
    dend_75 { pt3dadd( -56.6447, -56.1032, -59.1571, 1.03 ) }
    dend_75 { pt3dadd( -57.6652, -57.0787, -59.8319, 0.22 ) }
    dend_75 { pt3dadd( -58.0379, -57.4367, -60.0693, 0.22 ) }
    dend_75 { pt3dadd( -58.3594, -57.7484, -60.2668, 1.18 ) }
    dend_75 { pt3dadd( -58.659, -58.0275, -60.4407, 1.4 ) }
    dend_75 { pt3dadd( -59.8403, -59.0967, -61.1938, 0.22 ) }
    dend_75 { pt3dadd( -60.2277, -59.4362, -61.4371, 1.11 ) }
    dend_75 { pt3dadd( -60.5177, -59.6839, -61.6129, 1.33 ) }
    dend_75 { pt3dadd( -60.7679, -59.911, -61.7807, 1.18 ) }
    dend_75 { pt3dadd( -61.7382, -60.8477, -62.4589, 0.15 ) }
    dend_75 { pt3dadd( -62.5666, -61.6835, -63.0472, 0.15 ) }
    dend_75 { pt3dadd( -62.8862, -62.0136, -63.2685, 0.81 ) }
    dend_75 { pt3dadd( -63.0807, -62.2238, -63.4304, 0.81 ) }
    dend_75 { pt3dadd( -63.8824, -63.1181, -64.1436, 0.22 ) }
    dend_75 { pt3dadd( -64.5405, -63.8791, -64.7436, 0.22 ) }
    dend_75 { pt3dadd( -65.1412, -64.5973, -65.2994, 1.47 ) }
    dend_75 { pt3dadd( -65.4006, -64.8985, -65.5504, 1.84 ) }
    dend_75 { pt3dadd( -66.7909, -66.4939, -67.0989, 0.15 ) }
    dend_75 { pt3dadd( -67.1278, -66.8594, -67.4991, 0.15 ) }
    dend_75 { pt3dadd( -67.3318, -67.0707, -67.7657, 0.74 ) }
    dend_75 { pt3dadd( -67.4284, -67.1655, -67.8973, 0.74 ) }
    dend_75 { pt3dadd( -68.1931, -67.8569, -68.9381, 0.29 ) }
    dend_75 { pt3dadd( -68.8754, -68.4295, -69.8339, 1.25 ) }
    dend_75 { pt3dadd( -69.1411, -68.6364, -70.1516, 1.33 ) }
    dend_75 { pt3dadd( -69.9914, -69.342, -71.3582, 0.15 ) }
    dend_75 { pt3dadd( -70.2511, -69.5681, -71.7597, 0.74 ) }
    dend_75 { pt3dadd( -70.7979, -70.0585, -72.6302, 0.22 ) }
    dend_75 { pt3dadd( -70.8268, -70.0849, -72.6752, 0.22 ) }
    dend_75 { pt3dadd( -71.0575, -70.2912, -73.0191, 0.88 ) }
    dend_75 { pt3dadd( -72.3649, -71.4574, -74.9472, 0.22 ) }
    dend_75 { pt3dadd( -72.4079, -71.4951, -75.006, 0.22 ) }
    dend_75 { pt3dadd( -72.5352, -71.5973, -75.1509, 0.22 ) }
    dend_75 { pt3dadd( -73.106, -72.0126, -75.6606, 1.47 ) }
    dend_75 { pt3dadd( -73.3729, -72.1894, -75.8483, 1.84 ) }
    dend_75 { pt3dadd( -73.6101, -72.3386, -75.9733, 1.84 ) }
    dend_75 { pt3dadd( -73.8899, -72.5068, -76.0675, 1.84 ) }
    dend_75 { pt3dadd( -75.1053, -73.3465, -76.7601, 0.15 ) }
    dend_75 { pt3dadd( -75.182, -73.3993, -76.8138, 0.15 ) }
    dend_75 { pt3dadd( -75.7986, -73.7871, -77.2972, 0.15 ) }
    dend_75 { pt3dadd( -76.3263, -74.121, -77.7295, 0.96 ) }
    dend_75 { pt3dadd( -76.6495, -74.3391, -78.0029, 0.96 ) }
    dend_75 { pt3dadd( -78.3417, -75.5646, -79.4873, 0.22 ) }
    dend_75 { pt3dadd( -78.7798, -75.9241, -79.8944, 0.22 ) }
    dend_75 { pt3dadd( -79.3268, -76.3981, -80.3956, 0.22 ) }
    dend_75 { pt3dadd( -79.9468, -76.9549, -80.9354, 1.11 ) }
    dend_75 { pt3dadd( -80.3613, -77.3449, -81.2782, 1.69 ) }
    dend_75 { pt3dadd( -80.4976, -77.4869, -81.3818, 1.69 ) }
    dend_75 { pt3dadd( -81.6914, -78.9118, -82.2141, 0.22 ) }
    dend_75 { pt3dadd( -82.1148, -79.478, -82.5298, 0.37 ) }
    dend_75 { pt3dadd( -82.5133, -80.0315, -82.8386, 0.22 ) }
    dend_75 { pt3dadd( -83.0601, -80.7594, -83.2484, 1.47 ) }
    dend_75 { pt3dadd( -83.4462, -81.2447, -83.5589, 1.69 ) }
    dend_75 { pt3dadd( -84.4321, -82.4422, -84.3524, 0.22 ) }
    dend_75 { pt3dadd( -85.2667, -83.4821, -85.0267, 0.22 ) }
    dend_75 { pt3dadd( -85.6836, -84.006, -85.3839, 1.4 ) }
    dend_75 { pt3dadd( -86.0798, -84.5048, -85.7358, 1.84 ) }
    dend_75 { pt3dadd( -87.3652, -86.0676, -86.8846, 0.15 ) }
    dend_75 { pt3dadd( -87.8159, -86.5909, -87.295, 0.15 ) }
    dend_75 { pt3dadd( -88.2424, -87.0615, -87.6874, 1.18 ) }
    dend_75 { pt3dadd( -88.4747, -87.3176, -87.9093, 1.18 ) }
    dend_75 { pt3dadd( -88.508, -87.3553, -87.941, 1.18 ) }
    dend_75 { pt3dadd( -89.5558, -88.6251, -88.9368, 0.22 ) }
    dend_75 { pt3dadd( -90.0494, -89.2821, -89.3653, 1.25 ) }
    dend_75 { pt3dadd( -90.7526, -90.2304, -90.0001, 0.15 ) }
    dend_75 { pt3dadd( -91.0361, -90.5759, -90.254, 0.88 ) }
    dend_75 { pt3dadd( -91.1832, -90.7452, -90.3796, 1.03 ) }
    dend_75 { pt3dadd( -91.642, -91.2522, -90.7466, 0.15 ) }
    dend_75 { pt3dadd( -92.1665, -91.8042, -91.1249, 0.15 ) }
    dend_75 { pt3dadd( -92.587, -92.2069, -91.4401, 0.74 ) }
    dend_75 { pt3dadd( -93.3818, -92.9045, -92.0341, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_75 { pt3dadd( -94.0663, -93.5073, -92.5446, 0.22 ) }
    dend_75 { pt3dadd( -94.6803, -94.0508, -93.0006, 1.99 ) }
    dend_75 { pt3dadd( -94.9581, -94.304, -93.2052, 2.28 ) }
    dend_75 { pt3dadd( -96.5067, -95.812, -94.3179, 0.22 ) }
    dend_75 { pt3dadd( -96.7211, -96.0505, -94.472, 0.52 ) }
    dend_75 { pt3dadd( -97.4318, -96.8944, -94.9498, 0.15 ) }
    dend_75 { pt3dadd( -97.4736, -96.943, -94.9774, 0.15 ) }
    dend_75 { pt3dadd( -97.803, -97.3059, -95.1682, 0.81 ) }
    dend_75 { pt3dadd( -97.8414, -97.3474, -95.186, 0.81 ) }
    dend_75 { pt3dadd( -98.9184, -98.4922, -95.5304, 0.22 ) }
    dend_75 { pt3dadd( -99.7077, -99.3435, -95.837, 0.22 ) }
    dend_75 { pt3dadd( -99.7608, -99.3987, -95.8589, 0.22 ) }
    dend_75 { pt3dadd( -100.515, -100.214, -96.1764, 0.22 ) }
    dend_75 { pt3dadd( -101.042, -100.795, -96.4324, 0.81 ) }
    dend_75 { pt3dadd( -101.09, -100.852, -96.4576, 0.81 ) }
    dend_75 { pt3dadd( -101.898, -101.894, -96.9448, 0.22 ) }
    dend_75 { pt3dadd( -102.367, -102.51, -97.2482, 1.47 ) }
    dend_75 { pt3dadd( -102.537, -102.728, -97.3545, 1.77 ) }
    dend_75 { pt3dadd( -103.831, -104.348, -98.1484, 0.22 ) }
    dend_75 { pt3dadd( -104.211, -104.794, -98.3725, 0.52 ) }
    dend_75 { pt3dadd( -105.079, -105.747, -98.8414, 0.22 ) }
    dend_75 { pt3dadd( -106.141, -106.832, -99.3586, 0.22 ) }
    dend_75 { pt3dadd( -106.686, -107.371, -99.625, 1.18 ) }
    dend_75 { pt3dadd( -106.852, -107.532, -99.7034, 1.4 ) }
    dend_75 { pt3dadd( -108.137, -108.825, -100.396, 0.15 ) }
    dend_75 { pt3dadd( -108.428, -109.128, -100.574, 0.66 ) }
    dend_75 { pt3dadd( -109.86, -110.688, -101.529, 0.15 ) }
    dend_75 { pt3dadd( -110.546, -111.47, -102.056, 1.69 ) }
    dend_75 { pt3dadd( -110.757, -111.715, -102.227, 1.84 ) }
    dend_75 { pt3dadd( -112.291, -113.573, -103.539, 0.22 ) }
    dend_75 { pt3dadd( -112.576, -113.942, -103.809, 0.66 ) }
    dend_75 { pt3dadd( -112.615, -113.998, -103.853, 0.66 ) }
    dend_75 { pt3dadd( -113.001, -114.59, -104.365, 0.15 ) }
    dend_75 { pt3dadd( -113.168, -114.831, -104.58, 0.59 ) }
    dend_75 { pt3dadd( -113.221, -114.904, -104.647, 0.59 ) }
    dend_75 { pt3dadd( -113.868, -115.749, -105.404, 0.22 ) }
    dend_75 { pt3dadd( -114.455, -116.499, -106.118, 1.33 ) }
    dend_75 { pt3dadd( -115.068, -117.303, -106.894, 0.15 ) }
    dend_75 { pt3dadd( -115.346, -117.695, -107.275, 0.88 ) }
    // Section: dend_70, id: dend_70, parent: soma_0 (entry count 39/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 4.2915, 5.40221, -8.94048, 1.18 ) }
    dend_70 { pt3dadd( 4.32448, 6.27982, -8.65322, 1.18 ) }
    dend_70 { pt3dadd( 4.36731, 7.50874, -8.27696, 1.47 ) }
    dend_70 { pt3dadd( 4.39283, 8.46508, -8.08886, 1.92 ) }
    dend_70 { pt3dadd( 4.40692, 9.75908, -7.97713, 0.81 ) }
    dend_70 { pt3dadd( 4.40262, 10.8338, -7.97885, 0.81 ) }
    dend_70 { pt3dadd( 4.39234, 11.5204, -8.03157, 0.74 ) }
    dend_70 { pt3dadd( 4.38691, 11.6327, -8.06504, 0.74 ) }
    dend_70 { pt3dadd( 4.26849, 12.915, -8.73067, 0.74 ) }
    dend_70 { pt3dadd( 4.19156, 13.6207, -9.25577, 1.11 ) }
    dend_70 { pt3dadd( 4.14931, 14.0435, -9.66885, 1.11 ) }
    dend_70 { pt3dadd( 4.10615, 14.6585, -10.3424, 1.11 ) }
    dend_70 { pt3dadd( 4.09009, 15.792, -11.5436, 1.25 ) }
    dend_70 { pt3dadd( 4.09128, 15.8335, -11.5858, 1.25 ) }
    dend_70 { pt3dadd( 4.19169, 16.851, -12.5666, 1.03 ) }
    dend_70 { pt3dadd( 4.36997, 17.9787, -13.5937, 0.52 ) }
    dend_70 { pt3dadd( 4.6225, 19.1364, -14.5637, 0.52 ) }
    dend_70 { pt3dadd( 4.8426, 19.9141, -15.1423, 0.81 ) }
    dend_70 { pt3dadd( 4.85985, 19.9631, -15.1701, 0.81 ) }
    dend_70 { pt3dadd( 5.09441, 20.5522, -15.4445, 1.18 ) }
    dend_70 { pt3dadd( 5.2205, 20.7938, -15.5045, 1.18 ) }
    dend_70 { pt3dadd( 5.41655, 21.0984, -15.506, 1.18 ) }
    dend_70 { pt3dadd( 5.45672, 21.1549, -15.5007, 1.18 ) }
    dend_70 { pt3dadd( 5.60104, 21.3699, -15.4859, 1.4 ) }
    dend_70 { pt3dadd( 5.67824, 21.5116, -15.4752, 1.4 ) }
    dend_70 { pt3dadd( 5.90415, 22.0403, -15.4324, 1.4 ) }
    dend_70 { pt3dadd( 6.08418, 22.5915, -15.3814, 0.88 ) }
    dend_70 { pt3dadd( 6.25889, 23.459, -15.2935, 0.52 ) }
    dend_70 { pt3dadd( 6.29539, 24.2604, -15.2866, 0.37 ) }
    dend_70 { pt3dadd( 6.22334, 25.1087, -15.3855, 0.37 ) }
    dend_70 { pt3dadd( 6.15339, 25.4866, -15.4674, 0.29 ) }
    dend_70 { pt3dadd( 5.96392, 26.158, -15.6817, 0.29 ) }
    dend_70 { pt3dadd( 5.83241, 26.551, -15.8701, 0.29 ) }
    dend_70 { pt3dadd( 5.42764, 27.8057, -16.8144, 1.33 ) }
    dend_70 { pt3dadd( 5.20771, 28.5053, -17.4302, 1.92 ) }
    dend_70 { pt3dadd( 5.16551, 28.6793, -17.6004, 2.21 ) }
    dend_70 { pt3dadd( 5.1463, 28.8128, -17.7357, 2.21 ) }
    dend_70 { pt3dadd( 5.12224, 29.5435, -18.4925, 2.5 ) }
    dend_70 { pt3dadd( 5.16207, 30.4989, -19.549, 2.14 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 78/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 1.6115, 9.73122, -2.50048, 3.68 ) }
    dend_21 { pt3dadd( 1.6115, 9.73122, -2.50048, 3.68 ) }
    dend_21 { pt3dadd( 0.970905, 11.7045, -2.81767, 2.8 ) }
    dend_21 { pt3dadd( 0.927556, 11.8348, -2.84506, 2.8 ) }
    dend_21 { pt3dadd( 0.661266, 12.6284, -3.02318, 2.8 ) }
    dend_21 { pt3dadd( 0.541339, 12.9697, -3.10312, 2.8 ) }
    dend_21 { pt3dadd( 0.26527, 13.7377, -3.28896, 2.8 ) }
    dend_21 { pt3dadd( -0.150932, 14.835, -3.57997, 3.02 ) }
    dend_21 { pt3dadd( -0.733681, 16.2479, -4.01783, 3.02 ) }
    dend_21 { pt3dadd( -0.756165, 16.2991, -4.03619, 3.02 ) }
    dend_21 { pt3dadd( -1.2484, 17.3478, -4.44371, 3.02 ) }
    dend_21 { pt3dadd( -1.27232, 17.3979, -4.46349, 3.02 ) }
    dend_21 { pt3dadd( -1.82805, 18.5403, -4.92932, 2.87 ) }
    dend_21 { pt3dadd( -2.34444, 19.6501, -5.32872, 2.87 ) }
    dend_21 { pt3dadd( -2.36782, 19.7023, -5.3425, 2.87 ) }
    dend_21 { pt3dadd( -2.85227, 20.8357, -5.57344, 2.73 ) }
    dend_21 { pt3dadd( -3.35762, 22.0515, -5.75631, 2.58 ) }
    dend_21 { pt3dadd( -3.38387, 22.1143, -5.76405, 2.58 ) }
    dend_21 { pt3dadd( -4.10656, 23.8316, -5.91904, 2.36 ) }
    dend_21 { pt3dadd( -4.83128, 25.5083, -6.03932, 2.06 ) }
    dend_21 { pt3dadd( -5.49413, 26.9676, -6.13778, 2.06 ) }
    dend_21 { pt3dadd( -5.92568, 27.9002, -6.19913, 2.65 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_21 { pt3dadd( -6.69572, 29.5182, -6.29554, 2.73 ) }
    dend_21 { pt3dadd( -7.3264, 30.8119, -6.37614, 2.95 ) }
    dend_21 { pt3dadd( -7.91339, 31.9491, -6.46209, 3.17 ) }
    dend_21 { pt3dadd( -8.45043, 32.9414, -6.55137, 2.95 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 4/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.5085, -10.4416, 0.999524, 4.05 ) }
    dend_0 { pt3dadd( -3.5085, -10.4416, 0.999524, 4.05 ) }
    dend_0 { pt3dadd( -4.17673, -12.0703, 0.999524, 3.68 ) }
    dend_0 { pt3dadd( -4.81564, -13.6276, 0.999524, 3.5 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 8/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.23086, 10.2806, -1.24848, 0.532211 ) }
    axon_0 { pt3dadd( 8.20573, 24.4316, -1.24848, 0.532211 ) }
    axon_0 { pt3dadd( 13.1806, 38.5826, -1.24848, 0.532211 ) }
    // Section: dend_74, id: dend_74, parent: dend_70 (entry count 11/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 5.16207, 30.4989, -19.549, 1.25 ) }
    dend_74 { pt3dadd( 4.79964, 31.3992, -20.3375, 1.25 ) }
    dend_74 { pt3dadd( 4.50244, 32.2832, -21.098, 1.77 ) }
    dend_74 { pt3dadd( 4.43842, 32.4976, -21.2827, 1.84 ) }
    dend_74 { pt3dadd( 4.22636, 33.6455, -22.4612, 0.22 ) }
    dend_74 { pt3dadd( 4.18745, 34.4366, -23.4304, 1.33 ) }
    dend_74 { pt3dadd( 4.19058, 34.4765, -23.4905, 1.33 ) }
    dend_74 { pt3dadd( 4.24296, 34.6624, -23.8339, 1.77 ) }
    dend_74 { pt3dadd( 4.26698, 34.7138, -23.939, 1.77 ) }
    dend_74 { pt3dadd( 4.75423, 35.4971, -25.7155, 1.18 ) }
    dend_74 { pt3dadd( 5.15705, 35.9945, -26.9819, 1.4 ) }
    dend_74 { pt3dadd( 5.72186, 36.6185, -28.8944, 0.29 ) }
    dend_74 { pt3dadd( 5.73717, 36.6355, -28.9498, 0.29 ) }
    dend_74 { pt3dadd( 6.17924, 37.1381, -30.6053, 1.55 ) }
    dend_74 { pt3dadd( 6.23022, 37.2062, -30.8137, 1.84 ) }
    dend_74 { pt3dadd( 6.24478, 37.2314, -30.8771, 1.84 ) }
    dend_74 { pt3dadd( 6.86668, 38.6281, -33.7588, 0.52 ) }
    dend_74 { pt3dadd( 6.88123, 38.6672, -33.8178, 0.52 ) }
    dend_74 { pt3dadd( 6.96269, 38.9214, -34.1281, 0.74 ) }
    dend_74 { pt3dadd( 7.48904, 40.7957, -36.0596, 1.47 ) }
    dend_74 { pt3dadd( 7.73243, 41.7145, -36.8378, 0.29 ) }
    dend_74 { pt3dadd( 7.96187, 42.6213, -37.4455, 1.69 ) }
    dend_74 { pt3dadd( 8.42006, 44.725, -38.5874, 0.15 ) }
    dend_74 { pt3dadd( 8.53552, 45.3663, -38.9289, 0.66 ) }
    dend_74 { pt3dadd( 8.5442, 45.4266, -38.9605, 0.66 ) }
    dend_74 { pt3dadd( 8.67301, 46.5917, -39.5909, 0.15 ) }
    dend_74 { pt3dadd( 8.73713, 47.4224, -40.0977, 1.69 ) }
    dend_74 { pt3dadd( 8.83875, 49.8666, -41.6662, 0.22 ) }
    dend_74 { pt3dadd( 8.8413, 50.4727, -42.0909, 0.59 ) }
    dend_74 { pt3dadd( 8.83414, 51.7777, -43.0676, 1.92 ) }
    dend_74 { pt3dadd( 8.80598, 53.8106, -44.6561, 0.15 ) }
    dend_74 { pt3dadd( 8.8033, 53.9182, -44.7444, 0.15 ) }
    dend_74 { pt3dadd( 8.80214, 54.4059, -45.1625, 0.37 ) }
    dend_74 { pt3dadd( 8.81549, 55.1555, -45.8431, 0.22 ) }
    dend_74 { pt3dadd( 8.84409, 55.9483, -46.6681, 1.11 ) }
    dend_74 { pt3dadd( 8.84493, 55.996, -46.722, 1.11 ) }
    dend_74 { pt3dadd( 8.8443, 56.3237, -47.1061, 1.25 ) }
    dend_74 { pt3dadd( 8.82949, 57.6599, -48.7307, 0.22 ) }
    dend_74 { pt3dadd( 8.80865, 58.5671, -49.8451, 0.96 ) }
    dend_74 { pt3dadd( 8.76099, 59.5749, -51.0168, 0.15 ) }
    dend_74 { pt3dadd( 8.71898, 60.4219, -51.9382, 1.18 ) }
    dend_74 { pt3dadd( 8.7082, 60.5872, -52.1035, 1.47 ) }
    dend_74 { pt3dadd( 8.61593, 61.8016, -53.1569, 0.22 ) }
    dend_74 { pt3dadd( 8.5791, 62.1581, -53.3941, 0.44 ) }
    dend_74 { pt3dadd( 8.50136, 62.8603, -53.7486, 0.15 ) }
    dend_74 { pt3dadd( 8.36361, 63.8214, -54.1307, 1.11 ) }
    dend_74 { pt3dadd( 8.2963, 64.2343, -54.2713, 1.47 ) }
    dend_74 { pt3dadd( 8.03982, 65.9816, -54.7661, 0.22 ) }
    dend_74 { pt3dadd( 7.94529, 66.6745, -54.9236, 0.74 ) }
    dend_74 { pt3dadd( 7.81027, 67.7343, -55.1552, 0.15 ) }
    dend_74 { pt3dadd( 7.71867, 68.5562, -55.3282, 1.11 ) }
    dend_74 { pt3dadd( 7.68113, 68.9077, -55.396, 1.55 ) }
    dend_74 { pt3dadd( 7.37439, 72.0329, -55.9654, 0.15 ) }
    dend_74 { pt3dadd( 7.3104, 72.7528, -56.0805, 0.66 ) }
    dend_74 { pt3dadd( 7.28623, 73.1033, -56.1383, 0.66 ) }
    dend_74 { pt3dadd( 7.18545, 75.1505, -56.4802, 0.15 ) }
    dend_74 { pt3dadd( 7.16133, 75.7984, -56.5821, 0.37 ) }
    dend_74 { pt3dadd( 7.15781, 75.8845, -56.5958, 0.37 ) }
    dend_74 { pt3dadd( 7.12947, 76.2467, -56.6506, 0.37 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 70/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 5.16207, 30.4989, -19.549, 0.37 ) }
    dend_71 { pt3dadd( 5.68842, 31.9216, -19.6838, 0.37 ) }
    dend_71 { pt3dadd( 6.06985, 33.1994, -19.8057, 0.37 ) }
    dend_71 { pt3dadd( 6.33393, 34.3322, -19.9121, 0.37 ) }
    dend_71 { pt3dadd( 6.34576, 34.4096, -19.9192, 0.37 ) }
    dend_71 { pt3dadd( 6.37825, 34.9605, -19.9669, 0.37 ) }
    dend_71 { pt3dadd( 6.37806, 35.0282, -19.9755, 0.37 ) }
    dend_71 { pt3dadd( 6.20902, 35.8326, -20.137, 0.66 ) }
    dend_71 { pt3dadd( 6.09782, 36.1172, -20.2075, 0.81 ) }
    dend_71 { pt3dadd( 5.91784, 36.5906, -20.3318, 0.81 ) }
    dend_71 { pt3dadd( 5.76595, 37.1024, -20.4578, 0.37 ) }
    dend_71 { pt3dadd( 5.59956, 37.9124, -20.6272, 0.29 ) }
    dend_71 { pt3dadd( 5.59119, 37.9797, -20.6395, 0.29 ) }
    dend_71 { pt3dadd( 5.5426, 38.8081, -20.7735, 0.29 ) }
    dend_71 { pt3dadd( 5.52195, 40.1455, -20.9549, 1.84 ) }
    dend_71 { pt3dadd( 5.53368, 40.6557, -21.0087, 2.36 ) }
    dend_71 { pt3dadd( 5.5953, 41.8113, -21.096, 1.55 ) }
    dend_71 { pt3dadd( 5.68204, 43.1398, -21.1534, 1.92 ) }
    dend_71 { pt3dadd( 5.72923, 43.6565, -21.172, 2.5 ) }
    dend_71 { pt3dadd( 5.83766, 44.4778, -21.2054, 1.99 ) }
    dend_71 { pt3dadd( 6.03614, 45.6585, -21.2524, 0.22 ) }
    dend_71 { pt3dadd( 6.16281, 46.4208, -21.2939, 0.22 ) }
    dend_71 { pt3dadd( 6.24529, 46.9554, -21.3257, 0.88 ) }
    dend_71 { pt3dadd( 6.30153, 47.4079, -21.3581, 0.59 ) }
    dend_71 { pt3dadd( 6.37916, 48.2394, -21.4263, 0.29 ) }
    dend_71 { pt3dadd( 6.43927, 49.1672, -21.5087, 0.29 ) }
    dend_71 { pt3dadd( 6.49035, 50.2501, -21.607, 0.29 ) }
    dend_71 { pt3dadd( 6.52888, 51.2012, -21.6974, 0.29 ) }
    dend_71 { pt3dadd( 6.57151, 52.221, -21.7902, 1.18 ) }
    dend_71 { pt3dadd( 6.60495, 52.831, -21.8338, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_71 { pt3dadd( 6.65601, 53.442, -21.867, 1.4 ) }
    dend_71 { pt3dadd( 6.74358, 54.1057, -21.901, 0.88 ) }
    dend_71 { pt3dadd( 6.93542, 55.266, -21.959, 0.29 ) }
    dend_71 { pt3dadd( 7.11613, 56.274, -22.0039, 0.29 ) }
    dend_71 { pt3dadd( 7.4304, 57.9176, -22.0565, 2.14 ) }
    dend_71 { pt3dadd( 7.55688, 58.5841, -22.0773, 3.09 ) }
    dend_71 { pt3dadd( 7.67333, 59.2125, -22.0947, 3.46 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 7/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -8.45043, 32.9414, -6.55137, 1.62 ) }
    dend_25 { pt3dadd( -8.84512, 34.8114, -6.94, 1.62 ) }
    dend_25 { pt3dadd( -8.85182, 34.8794, -6.94947, 1.62 ) }
    dend_25 { pt3dadd( -8.94613, 35.8375, -7.08284, 1.62 ) }
    dend_25 { pt3dadd( -8.96637, 36.0431, -7.11146, 1.62 ) }
    dend_25 { pt3dadd( -9.05786, 36.9725, -7.24084, 1.62 ) }
    dend_25 { pt3dadd( -9.06385, 37.0333, -7.24931, 1.62 ) }
    dend_25 { pt3dadd( -8.98412, 38.5305, -7.24931, 1.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 15/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -8.45043, 32.9414, -6.55137, 0.66 ) }
    dend_22 { pt3dadd( -7.18808, 35.155, -5.59061, 0.66 ) }
    dend_22 { pt3dadd( -6.71579, 35.8857, -5.45916, 0.59 ) }
    dend_22 { pt3dadd( -6.25844, 36.5548, -5.40849, 1.03 ) }
    dend_22 { pt3dadd( -6.1719, 36.6838, -5.40736, 1.03 ) }
    dend_22 { pt3dadd( -5.98019, 36.994, -5.41741, 1.18 ) }
    dend_22 { pt3dadd( -5.31502, 38.2357, -5.50999, 0.81 ) }
    dend_22 { pt3dadd( -4.89234, 39.0837, -5.72822, 0.66 ) }
    dend_22 { pt3dadd( -4.86288, 39.1542, -5.74802, 0.66 ) }
    dend_22 { pt3dadd( -4.6032, 39.963, -5.91592, 0.66 ) }
    dend_22 { pt3dadd( -4.37702, 40.8931, -6.03844, 0.88 ) }
    dend_22 { pt3dadd( -4.1786, 42.161, -6.11265, 1.4 ) }
    dend_22 { pt3dadd( -4.15369, 42.4842, -6.10694, 1.77 ) }
    dend_22 { pt3dadd( -4.13295, 43.1923, -6.06028, 2.14 ) }
    dend_22 { pt3dadd( -4.11875, 44.5598, -5.82782, 1.77 ) }
    dend_22 { pt3dadd( -4.08489, 45.4458, -5.51766, 1.25 ) }
    dend_22 { pt3dadd( -4.03235, 46.155, -5.15388, 1.03 ) }
    dend_22 { pt3dadd( -3.94119, 46.7362, -4.73817, 0.81 ) }
    dend_22 { pt3dadd( -3.77309, 47.4653, -4.10681, 0.81 ) }
    dend_22 { pt3dadd( -3.39436, 48.5438, -2.95475, 0.59 ) }
    dend_22 { pt3dadd( -2.85981, 49.5443, -1.65429, 0.59 ) }
    dend_22 { pt3dadd( -2.83203, 49.5839, -1.59041, 0.59 ) }
    dend_22 { pt3dadd( -2.4032, 50.0416, -0.668079, 1.77 ) }
    dend_22 { pt3dadd( -2.37762, 50.0609, -0.617542, 1.77 ) }
    dend_22 { pt3dadd( -2.0874, 50.1843, -0.131092, 1.92 ) }
    dend_22 { pt3dadd( -2.04411, 50.1881, -0.0762192, 1.92 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 41/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -4.81564, -13.6276, 0.999524, 0.37 ) }
    dend_14 { pt3dadd( -6.18051, -14.3183, 0.614511, 0.37 ) }
    dend_14 { pt3dadd( -7.0009, -14.9134, 0.556358, 0.37 ) }
    dend_14 { pt3dadd( -8.00728, -15.9809, 0.834917, 0.37 ) }
    dend_14 { pt3dadd( -8.3518, -16.6011, 1.2122, 0.66 ) }
    dend_14 { pt3dadd( -8.51243, -16.9939, 1.52086, 0.96 ) }
    dend_14 { pt3dadd( -8.53263, -17.0413, 1.5711, 0.96 ) }
    dend_14 { pt3dadd( -8.90144, -18.3828, 3.42048, 0.59 ) }
    dend_14 { pt3dadd( -8.90854, -18.4125, 3.47172, 0.59 ) }
    dend_14 { pt3dadd( -9.03778, -18.7497, 4.24492, 1.25 ) }
    dend_14 { pt3dadd( -9.10407, -18.8312, 4.47102, 1.25 ) }
    dend_14 { pt3dadd( -9.67797, -19.2718, 5.72665, 0.59 ) }
    dend_14 { pt3dadd( -9.96921, -19.4628, 6.17947, 0.96 ) }
    dend_14 { pt3dadd( -10.0204, -19.4916, 6.23428, 0.96 ) }
    dend_14 { pt3dadd( -10.4653, -19.8641, 6.80366, 0.96 ) }
    dend_14 { pt3dadd( -10.7968, -20.2946, 7.3205, 0.59 ) }
    dend_14 { pt3dadd( -11.0024, -20.8158, 7.83064, 0.29 ) }
    dend_14 { pt3dadd( -11.0824, -21.4576, 8.37437, 0.29 ) }
    dend_14 { pt3dadd( -11.1247, -22.0357, 8.89035, 1.11 ) }
    dend_14 { pt3dadd( -11.2092, -23.1558, 9.93631, 0.22 ) }
    dend_14 { pt3dadd( -11.2348, -23.4312, 10.2025, 1.25 ) }
    dend_14 { pt3dadd( -11.3359, -23.8661, 10.6557, 1.55 ) }
    dend_14 { pt3dadd( -11.3776, -23.9469, 10.7468, 1.55 ) }
    dend_14 { pt3dadd( -12.1527, -24.6504, 11.6226, 0.59 ) }
    dend_14 { pt3dadd( -12.4492, -24.8498, 11.853, 0.74 ) }
    dend_14 { pt3dadd( -12.9558, -25.137, 12.1588, 0.74 ) }
    dend_14 { pt3dadd( -13.6678, -25.5399, 12.5716, 0.59 ) }
    dend_14 { pt3dadd( -13.7714, -25.6133, 12.6355, 0.59 ) }
    dend_14 { pt3dadd( -14.3823, -26.3436, 13.115, 0.59 ) }
    dend_14 { pt3dadd( -14.522, -26.8296, 13.3851, 1.11 ) }
    dend_14 { pt3dadd( -14.5659, -27.2122, 13.6238, 1.18 ) }
    dend_14 { pt3dadd( -14.5707, -27.2963, 13.6798, 1.18 ) }
    dend_14 { pt3dadd( -14.6592, -28.2103, 14.3553, 0.59 ) }
    dend_14 { pt3dadd( -14.8141, -28.9396, 14.9558, 0.59 ) }
    dend_14 { pt3dadd( -15.1616, -29.661, 15.654, 0.44 ) }
    dend_14 { pt3dadd( -15.5599, -30.027, 16.1542, 0.74 ) }
    dend_14 { pt3dadd( -15.9669, -30.1987, 16.5134, 0.88 ) }
    dend_14 { pt3dadd( -16.8769, -30.3857, 17.1569, 0.44 ) }
    dend_14 { pt3dadd( -17.3837, -30.4145, 17.4295, 0.44 ) }
    dend_14 { pt3dadd( -18.011, -30.422, 17.7018, 0.44 ) }
    dend_14 { pt3dadd( -18.0683, -30.4243, 17.7193, 0.44 ) }
    dend_14 { pt3dadd( -18.8011, -30.5242, 17.8891, 0.88 ) }
    dend_14 { pt3dadd( -18.8794, -30.5432, 17.9061, 0.88 ) }
    dend_14 { pt3dadd( -19.751, -30.8187, 18.0475, 1.18 ) }
    dend_14 { pt3dadd( -20.1697, -30.9771, 18.1046, 1.11 ) }
    dend_14 { pt3dadd( -20.8192, -31.2417, 18.1719, 0.59 ) }
    dend_14 { pt3dadd( -21.4302, -31.506, 18.2138, 0.44 ) }
    dend_14 { pt3dadd( -21.4846, -31.5307, 18.2149, 0.44 ) }
    dend_14 { pt3dadd( -22.3059, -31.9756, 18.2311, 0.66 ) }
    dend_14 { pt3dadd( -22.851, -32.3656, 18.244, 0.37 ) }
    dend_14 { pt3dadd( -23.174, -32.6982, 18.2598, 1.03 ) }
    dend_14 { pt3dadd( -23.3396, -32.9848, 18.276, 1.03 ) }
    dend_14 { pt3dadd( -23.377, -33.106, 18.2829, 1.03 ) }
    dend_14 { pt3dadd( -23.6141, -34.2117, 18.3499, 0.37 ) }
    dend_14 { pt3dadd( -23.6641, -34.8556, 18.3969, 0.44 ) }
    dend_14 { pt3dadd( -23.6586, -35.3606, 18.44, 0.74 ) }
    dend_14 { pt3dadd( -23.6285, -35.7746, 18.48, 0.88 ) }
    dend_14 { pt3dadd( -23.554, -36.5314, 18.5651, 0.88 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 99/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -4.81564, -13.6276, 0.999524, 3.09 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_1 { pt3dadd( -4.82808, -13.6748, 0.997704, 3.09 ) }
    dend_1 { pt3dadd( -5.17403, -15.0337, 0.975215, 2.8 ) }
    dend_1 { pt3dadd( -5.63239, -16.852, 0.951142, 2.43 ) }
    dend_1 { pt3dadd( -6.0017, -18.317, 0.931746, 2.43 ) }
    dend_1 { pt3dadd( -6.01841, -18.3832, 0.930868, 2.43 ) }
    dend_1 { pt3dadd( -6.5471, -20.4805, 0.903101, 2.43 ) }
    dend_1 { pt3dadd( -6.82956, -21.6197, 0.897138, 2.87 ) }
    dend_1 { pt3dadd( -7.05654, -22.553, 0.911928, 3.02 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 8/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 13.1806, 38.5826, -1.24848, 0.15 ) }
    axon_1 { pt3dadd( 18.1555, 52.7336, -1.24848, 0.15 ) }
    axon_1 { pt3dadd( 23.1303, 66.8846, -1.24848, 0.15 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 11/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 7.67333, 59.2125, -22.0947, 0.29 ) }
    dend_73 { pt3dadd( 8.61202, 60.9165, -22.4734, 0.29 ) }
    dend_73 { pt3dadd( 9.03889, 61.5513, -22.6704, 0.29 ) }
    dend_73 { pt3dadd( 9.49088, 62.208, -22.9024, 0.37 ) }
    dend_73 { pt3dadd( 9.53396, 62.2704, -22.9259, 0.37 ) }
    dend_73 { pt3dadd( 9.85036, 62.7609, -23.1118, 0.37 ) }
    dend_73 { pt3dadd( 9.8798, 62.8086, -23.1302, 0.37 ) }
    dend_73 { pt3dadd( 10.2652, 63.5475, -23.4764, 0.22 ) }
    dend_73 { pt3dadd( 10.4596, 63.9727, -23.7115, 0.44 ) }
    dend_73 { pt3dadd( 10.4749, 64.0318, -23.7488, 0.44 ) }
    dend_73 { pt3dadd( 10.566, 64.5283, -24.0626, 0.66 ) }
    dend_73 { pt3dadd( 10.5759, 64.5786, -24.0916, 0.66 ) }
    dend_73 { pt3dadd( 10.7339, 65.1813, -24.4465, 0.96 ) }
    dend_73 { pt3dadd( 10.7547, 65.2476, -24.5052, 0.96 ) }
    dend_73 { pt3dadd( 11.0359, 66.0977, -25.3405, 0.22 ) }
    dend_73 { pt3dadd( 11.054, 66.1536, -25.3969, 0.22 ) }
    dend_73 { pt3dadd( 11.3207, 66.9466, -26.1896, 1.92 ) }
    dend_73 { pt3dadd( 11.6063, 67.6793, -26.9238, 2.36 ) }
    dend_73 { pt3dadd( 12.6291, 69.9935, -29.2438, 0.44 ) }
    dend_73 { pt3dadd( 12.791, 70.3387, -29.5866, 0.44 ) }
    dend_73 { pt3dadd( 12.9118, 70.5821, -29.8238, 0.44 ) }
    dend_73 { pt3dadd( 13.1717, 71.113, -30.3106, 0.22 ) }
    dend_73 { pt3dadd( 13.4991, 71.7949, -30.8811, 0.22 ) }
    dend_73 { pt3dadd( 13.8882, 72.5611, -31.4298, 0.74 ) }
    dend_73 { pt3dadd( 13.924, 72.6226, -31.4689, 0.74 ) }
    dend_73 { pt3dadd( 14.0291, 72.8, -31.5989, 0.74 ) }
    dend_73 { pt3dadd( 14.5662, 73.7114, -32.3525, 0.22 ) }
    dend_73 { pt3dadd( 14.9903, 74.5034, -33.0433, 1.33 ) }
    dend_73 { pt3dadd( 15.3167, 75.1876, -33.6349, 1.77 ) }
    dend_73 { pt3dadd( 15.9034, 76.5023, -34.7575, 0.22 ) }
    dend_73 { pt3dadd( 16.1525, 77.06, -35.2198, 0.22 ) }
    dend_73 { pt3dadd( 16.4895, 77.8062, -35.8142, 0.22 ) }
    dend_73 { pt3dadd( 16.8804, 78.6491, -36.4599, 1.92 ) }
    dend_73 { pt3dadd( 17.0334, 78.9847, -36.696, 2.28 ) }
    dend_73 { pt3dadd( 17.9974, 81.0214, -37.9608, 0.22 ) }
    dend_73 { pt3dadd( 18.3801, 81.7818, -38.3807, 0.22 ) }
    dend_73 { pt3dadd( 18.6592, 82.2831, -38.6395, 0.88 ) }
    dend_73 { pt3dadd( 18.7352, 82.4013, -38.6937, 0.88 ) }
    dend_73 { pt3dadd( 18.8238, 82.5161, -38.7425, 0.88 ) }
    dend_73 { pt3dadd( 19.7593, 83.5717, -39.1952, 0.22 ) }
    dend_73 { pt3dadd( 20.4264, 84.2405, -39.4894, 0.22 ) }
    dend_73 { pt3dadd( 20.5097, 84.3288, -39.5313, 0.22 ) }
    dend_73 { pt3dadd( 21.2119, 85.0937, -39.9123, 1.33 ) }
    dend_73 { pt3dadd( 21.4976, 85.4187, -40.0731, 2.06 ) }
    dend_73 { pt3dadd( 21.9391, 85.9465, -40.3513, 2.06 ) }
    dend_73 { pt3dadd( 22.976, 87.27, -41.0637, 0.15 ) }
    dend_73 { pt3dadd( 23.2507, 87.6285, -41.2621, 0.74 ) }
    dend_73 { pt3dadd( 23.2899, 87.6792, -41.2896, 0.74 ) }
    dend_73 { pt3dadd( 23.4845, 87.9426, -41.43, 0.74 ) }
    dend_73 { pt3dadd( 24.1078, 88.8005, -41.8502, 0.22 ) }
    dend_73 { pt3dadd( 24.4386, 89.2549, -42.0429, 0.59 ) }
    dend_73 { pt3dadd( 24.478, 89.3084, -42.0635, 0.59 ) }
    dend_73 { pt3dadd( 25.1647, 90.2131, -42.4904, 0.15 ) }
    dend_73 { pt3dadd( 25.7105, 90.9667, -42.8626, 1.55 ) }
    dend_73 { pt3dadd( 25.8475, 91.1641, -42.9625, 1.92 ) }
    dend_73 { pt3dadd( 25.8852, 91.2191, -42.9888, 1.92 ) }
    dend_73 { pt3dadd( 26.0679, 91.5074, -43.1304, 1.92 ) }
    dend_73 { pt3dadd( 27.0303, 93.0723, -43.8857, 0.22 ) }
    dend_73 { pt3dadd( 27.2916, 93.4452, -44.0763, 0.52 ) }
    dend_73 { pt3dadd( 27.3315, 93.4959, -44.1028, 0.52 ) }
    dend_73 { pt3dadd( 27.9417, 94.1414, -44.4418, 0.22 ) }
    dend_73 { pt3dadd( 28.4764, 94.6544, -44.7349, 1.55 ) }
    dend_73 { pt3dadd( 28.8745, 94.9337, -44.9368, 1.55 ) }
    dend_73 { pt3dadd( 30.3237, 95.7701, -45.6206, 0.15 ) }
    dend_73 { pt3dadd( 30.3746, 95.7974, -45.6457, 0.15 ) }
    dend_73 { pt3dadd( 31.3801, 96.3045, -46.1466, 0.15 ) }
    dend_73 { pt3dadd( 32.8716, 96.9977, -46.895, 2.21 ) }
    dend_73 { pt3dadd( 35.0933, 97.959, -47.969, 0.22 ) }
    dend_73 { pt3dadd( 35.3416, 98.0671, -48.088, 0.37 ) }
    dend_73 { pt3dadd( 36.3628, 98.5381, -48.5448, 0.22 ) }
    dend_73 { pt3dadd( 36.7276, 98.7205, -48.6971, 0.59 ) }
    dend_73 { pt3dadd( 36.9729, 98.8547, -48.7899, 0.59 ) }
    dend_73 { pt3dadd( 37.8005, 99.3596, -49.0718, 0.22 ) }
    dend_73 { pt3dadd( 38.117, 99.596, -49.1964, 0.66 ) }
    dend_73 { pt3dadd( 38.9879, 100.236, -49.5789, 0.15 ) }
    dend_73 { pt3dadd( 39.6186, 100.709, -49.8756, 1.77 ) }
    dend_73 { pt3dadd( 39.7738, 100.827, -49.958, 1.77 ) }
    dend_73 { pt3dadd( 41.2325, 101.912, -50.7878, 0.22 ) }
    dend_73 { pt3dadd( 41.7921, 102.279, -51.195, 0.74 ) }
    dend_73 { pt3dadd( 42.3986, 102.627, -51.7121, 0.15 ) }
    dend_73 { pt3dadd( 42.7528, 102.811, -52.0695, 0.74 ) }
    dend_73 { pt3dadd( 43.3321, 103.121, -52.7058, 0.15 ) }
    dend_73 { pt3dadd( 43.8557, 103.417, -53.3073, 2.14 ) }
    dend_73 { pt3dadd( 45.5151, 104.483, -55.3664, 0.37 ) }
    dend_73 { pt3dadd( 46.1854, 105.013, -56.253, 1.55 ) }
    dend_73 { pt3dadd( 47.416, 106.148, -57.9784, 0.15 ) }
    dend_73 { pt3dadd( 47.9373, 106.717, -58.7555, 0.15 ) }
    dend_73 { pt3dadd( 48.1827, 107.033, -59.1452, 1.4 ) }
    dend_73 { pt3dadd( 48.9597, 108.189, -60.5296, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_73 { pt3dadd( 49.3441, 108.784, -61.2478, 1.33 ) }
    dend_73 { pt3dadd( 49.4127, 108.871, -61.3684, 1.62 ) }
    dend_73 { pt3dadd( 50.447, 109.805, -62.9281, 0.15 ) }
    dend_73 { pt3dadd( 51.1491, 110.272, -63.8903, 1.18 ) }
    dend_73 { pt3dadd( 52.3618, 110.895, -65.4146, 0.88 ) }
    dend_73 { pt3dadd( 53.5153, 111.331, -66.6974, 0.44 ) }
    dend_73 { pt3dadd( 54.5959, 111.677, -67.7798, 1.77 ) }
    dend_73 { pt3dadd( 55.7502, 112.007, -68.7649, 0.22 ) }
    dend_73 { pt3dadd( 55.8179, 112.022, -68.8092, 0.22 ) }
    dend_73 { pt3dadd( 56.2529, 112.135, -69.0083, 0.66 ) }
    dend_73 { pt3dadd( 57.2287, 112.438, -69.253, 0.15 ) }
    dend_73 { pt3dadd( 57.9159, 112.745, -69.3319, 1.11 ) }
    dend_73 { pt3dadd( 58.3372, 113.005, -69.3648, 1.11 ) }
    dend_73 { pt3dadd( 58.4019, 113.052, -69.3688, 1.11 ) }
    dend_73 { pt3dadd( 59.1287, 113.59, -69.4201, 0.22 ) }
    dend_73 { pt3dadd( 59.4641, 113.831, -69.4494, 0.59 ) }
    dend_73 { pt3dadd( 60.3193, 114.437, -69.534, 0.22 ) }
    dend_73 { pt3dadd( 61.0652, 114.955, -69.6306, 1.4 ) }
    dend_73 { pt3dadd( 61.1307, 115.0, -69.6389, 1.4 ) }
    dend_73 { pt3dadd( 61.24, 115.073, -69.6524, 1.55 ) }
    dend_73 { pt3dadd( 62.635, 115.958, -69.8107, 0.22 ) }
    dend_73 { pt3dadd( 62.695, 115.994, -69.8187, 0.22 ) }
    dend_73 { pt3dadd( 62.9248, 116.126, -69.8514, 0.22 ) }
    dend_73 { pt3dadd( 63.4096, 116.39, -69.9434, 0.81 ) }
    dend_73 { pt3dadd( 63.4698, 116.424, -69.9571, 0.81 ) }
    dend_73 { pt3dadd( 63.7657, 116.602, -70.0432, 0.81 ) }
    dend_73 { pt3dadd( 65.1792, 117.487, -70.5081, 0.22 ) }
    dend_73 { pt3dadd( 65.663, 117.785, -70.6721, 0.22 ) }
    dend_73 { pt3dadd( 66.7265, 118.427, -71.0389, 1.55 ) }
    dend_73 { pt3dadd( 66.7828, 118.463, -71.0608, 1.55 ) }
    dend_73 { pt3dadd( 68.1702, 119.373, -71.6331, 0.22 ) }
    dend_73 { pt3dadd( 68.6983, 119.725, -71.8637, 0.22 ) }
    dend_73 { pt3dadd( 69.6204, 120.346, -72.2754, 1.62 ) }
    dend_73 { pt3dadd( 69.7955, 120.464, -72.3507, 1.99 ) }
    dend_73 { pt3dadd( 71.6087, 121.702, -73.0911, 0.22 ) }
    dend_73 { pt3dadd( 71.6717, 121.744, -73.1165, 0.22 ) }
    dend_73 { pt3dadd( 72.3543, 122.202, -73.3841, 0.74 ) }
    dend_73 { pt3dadd( 72.7689, 122.485, -73.5497, 0.74 ) }
    dend_73 { pt3dadd( 74.8276, 123.889, -74.3534, 0.15 ) }
    dend_73 { pt3dadd( 75.5916, 124.399, -74.6349, 1.55 ) }
    dend_73 { pt3dadd( 75.6511, 124.436, -74.6531, 1.55 ) }
    dend_73 { pt3dadd( 75.9888, 124.651, -74.7568, 1.55 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 42/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 7.67333, 59.2125, -22.0947, 0.29 ) }
    dend_72 { pt3dadd( 7.24058, 61.258, -22.3402, 0.29 ) }
    dend_72 { pt3dadd( 7.14351, 61.7511, -22.4025, 0.44 ) }
    dend_72 { pt3dadd( 6.94115, 62.753, -22.5198, 0.22 ) }
    dend_72 { pt3dadd( 6.67573, 64.0776, -22.6682, 1.55 ) }
    dend_72 { pt3dadd( 6.59189, 64.5067, -22.712, 2.21 ) }
    dend_72 { pt3dadd( 6.47132, 65.1326, -22.7704, 1.84 ) }
    dend_72 { pt3dadd( 6.34703, 65.9254, -22.8361, 0.96 ) }
    dend_72 { pt3dadd( 6.26526, 66.4376, -22.8634, 0.44 ) }
    dend_72 { pt3dadd( 6.25178, 66.5151, -22.8642, 0.44 ) }
    dend_72 { pt3dadd( 6.09625, 67.5159, -22.866, 0.29 ) }
    dend_72 { pt3dadd( 6.08153, 67.6578, -22.8658, 0.29 ) }
    dend_72 { pt3dadd( 6.0396, 68.3814, -22.8657, 0.29 ) }
    dend_72 { pt3dadd( 6.01592, 69.0962, -22.8674, 0.81 ) }
    dend_72 { pt3dadd( 6.01112, 69.4516, -22.8833, 1.11 ) }
    dend_72 { pt3dadd( 5.99318, 70.1703, -22.947, 0.88 ) }
    dend_72 { pt3dadd( 5.97255, 71.6381, -23.1183, 0.22 ) }
    dend_72 { pt3dadd( 5.96845, 72.3554, -23.2251, 0.81 ) }
    dend_72 { pt3dadd( 5.96964, 72.924, -23.3287, 0.81 ) }
    dend_72 { pt3dadd( 5.97069, 74.6287, -23.6722, 0.22 ) }
    dend_72 { pt3dadd( 5.96125, 75.8805, -23.9417, 1.84 ) }
    dend_72 { pt3dadd( 5.94617, 76.5343, -24.0906, 2.21 ) }
    dend_72 { pt3dadd( 5.92173, 77.1047, -24.225, 2.21 ) }
    dend_72 { pt3dadd( 5.84566, 79.2896, -24.703, 0.22 ) }
    dend_72 { pt3dadd( 5.83011, 80.0504, -24.8529, 0.81 ) }
    dend_72 { pt3dadd( 5.82759, 80.4102, -24.9113, 0.88 ) }
    dend_72 { pt3dadd( 5.82494, 80.7746, -24.9603, 0.66 ) }
    dend_72 { pt3dadd( 5.79635, 81.8578, -25.0867, 0.22 ) }
    dend_72 { pt3dadd( 5.74493, 83.3705, -25.2262, 1.84 ) }
    dend_72 { pt3dadd( 5.73882, 83.8328, -25.26, 2.21 ) }
    dend_72 { pt3dadd( 5.7428, 84.2952, -25.2897, 2.21 ) }
    dend_72 { pt3dadd( 5.79739, 86.2988, -25.4015, 0.22 ) }
    dend_72 { pt3dadd( 5.82765, 87.0124, -25.4399, 0.88 ) }
    dend_72 { pt3dadd( 5.83822, 87.2299, -25.4507, 0.88 ) }
    dend_72 { pt3dadd( 5.91267, 88.7032, -25.5261, 0.22 ) }
    dend_72 { pt3dadd( 5.98826, 90.0043, -25.6291, 0.22 ) }
    dend_72 { pt3dadd( 6.04095, 90.6877, -25.6963, 1.33 ) }
    dend_72 { pt3dadd( 6.09926, 91.226, -25.7585, 1.62 ) }
    dend_72 { pt3dadd( 6.12178, 91.4336, -25.7859, 1.62 ) }
    dend_72 { pt3dadd( 6.12942, 91.5507, -25.8067, 1.62 ) }
    dend_72 { pt3dadd( 6.1651, 93.4577, -26.2043, 0.22 ) }
    dend_72 { pt3dadd( 6.16072, 94.8576, -26.5188, 0.22 ) }
    dend_72 { pt3dadd( 6.13848, 95.8203, -26.738, 1.4 ) }
    dend_72 { pt3dadd( 6.12508, 96.3254, -26.8496, 1.69 ) }
    dend_72 { pt3dadd( 6.0606, 98.4646, -27.3146, 0.22 ) }
    dend_72 { pt3dadd( 6.02857, 99.1867, -27.4508, 0.96 ) }
    dend_72 { pt3dadd( 6.02375, 99.2549, -27.4601, 0.96 ) }
    dend_72 { pt3dadd( 5.99401, 99.5501, -27.4923, 0.81 ) }
    dend_72 { pt3dadd( 5.83062, 100.918, -27.5785, 0.22 ) }
    dend_72 { pt3dadd( 5.81258, 101.081, -27.5808, 0.22 ) }
    dend_72 { pt3dadd( 5.72484, 102.034, -27.5611, 0.22 ) }
    dend_72 { pt3dadd( 5.6212, 103.163, -27.5503, 1.69 ) }
    dend_72 { pt3dadd( 5.58784, 103.533, -27.5504, 2.43 ) }
    dend_72 { pt3dadd( 5.51622, 104.313, -27.5564, 2.36 ) }
    dend_72 { pt3dadd( 5.30973, 106.826, -27.592, 0.22 ) }
    dend_72 { pt3dadd( 5.26181, 107.788, -27.6333, 0.22 ) }
    dend_72 { pt3dadd( 5.25905, 107.937, -27.6444, 0.22 ) }
    dend_72 { pt3dadd( 5.26846, 109.163, -27.7522, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_72 { pt3dadd( 5.29386, 110.089, -27.8454, 1.11 ) }
    dend_72 { pt3dadd( 5.32702, 110.647, -27.9087, 1.4 ) }
    dend_72 { pt3dadd( 5.47648, 112.233, -28.1118, 0.22 ) }
    dend_72 { pt3dadd( 5.48312, 112.294, -28.1196, 0.22 ) }
    dend_72 { pt3dadd( 5.53841, 112.714, -28.1641, 0.22 ) }
    dend_72 { pt3dadd( 5.65642, 113.592, -28.2302, 1.55 ) }
    dend_72 { pt3dadd( 5.70985, 114.044, -28.2485, 1.77 ) }
    dend_72 { pt3dadd( 5.7176, 114.113, -28.2491, 1.77 ) }
    dend_72 { pt3dadd( 5.7553, 114.423, -28.242, 1.77 ) }
    dend_72 { pt3dadd( 5.92569, 115.755, -28.2137, 0.22 ) }
    dend_72 { pt3dadd( 6.02891, 116.675, -28.1944, 0.66 ) }
    dend_72 { pt3dadd( 6.07248, 117.171, -28.1836, 0.66 ) }
    dend_72 { pt3dadd( 6.1687, 118.804, -28.1596, 0.22 ) }
    dend_72 { pt3dadd( 6.17343, 118.953, -28.1574, 0.22 ) }
    dend_72 { pt3dadd( 6.18828, 120.528, -28.1271, 0.22 ) }
    dend_72 { pt3dadd( 6.15734, 121.602, -28.0867, 1.11 ) }
    dend_72 { pt3dadd( 6.11669, 122.246, -28.0438, 1.99 ) }
    dend_72 { pt3dadd( 6.05431, 122.797, -27.992, 1.55 ) }
    dend_72 { pt3dadd( 5.81514, 124.148, -27.8186, 0.22 ) }
    dend_72 { pt3dadd( 5.77825, 124.328, -27.7923, 0.22 ) }
    dend_72 { pt3dadd( 5.50422, 125.429, -27.5994, 0.22 ) }
    dend_72 { pt3dadd( 5.35797, 126.061, -27.4724, 0.88 ) }
    dend_72 { pt3dadd( 5.31553, 126.258, -27.4323, 1.18 ) }
    dend_72 { pt3dadd( 5.30494, 126.324, -27.414, 1.18 ) }
    dend_72 { pt3dadd( 5.24918, 126.942, -27.2287, 0.66 ) }
    dend_72 { pt3dadd( 5.2278, 127.289, -27.1274, 0.37 ) }
    dend_72 { pt3dadd( 5.16007, 128.196, -26.8761, 0.22 ) }
    dend_72 { pt3dadd( 5.08677, 128.866, -26.695, 0.59 ) }
    dend_72 { pt3dadd( 4.93529, 130.064, -26.4635, 0.52 ) }
    dend_72 { pt3dadd( 4.84122, 130.733, -26.3617, 0.66 ) }
    dend_72 { pt3dadd( 4.76952, 131.242, -26.2996, 0.22 ) }
    dend_72 { pt3dadd( 4.65421, 132.016, -26.2316, 1.47 ) }
    dend_72 { pt3dadd( 4.5967, 132.388, -26.2164, 2.14 ) }
    dend_72 { pt3dadd( 4.26659, 134.642, -26.1965, 0.22 ) }
    dend_72 { pt3dadd( 4.25852, 134.703, -26.1985, 0.22 ) }
    dend_72 { pt3dadd( 4.20066, 135.409, -26.2074, 1.11 ) }
    dend_72 { pt3dadd( 4.198, 135.558, -26.2096, 1.47 ) }
    dend_72 { pt3dadd( 4.20063, 135.663, -26.211, 1.47 ) }
    dend_72 { pt3dadd( 4.21697, 136.312, -26.2271, 0.81 ) }
    dend_72 { pt3dadd( 4.22502, 136.848, -26.2554, 0.29 ) }
    dend_72 { pt3dadd( 4.24736, 138.439, -26.3737, 0.22 ) }
    dend_72 { pt3dadd( 4.25161, 139.175, -26.4437, 0.96 ) }
    dend_72 { pt3dadd( 4.25319, 139.314, -26.4576, 0.96 ) }
    dend_72 { pt3dadd( 4.25563, 139.462, -26.4708, 0.96 ) }
    dend_72 { pt3dadd( 4.29419, 140.612, -26.556, 0.22 ) }
    dend_72 { pt3dadd( 4.29785, 140.68, -26.5598, 0.22 ) }
    dend_72 { pt3dadd( 4.3534, 141.384, -26.5825, 0.81 ) }
    dend_72 { pt3dadd( 4.38249, 141.74, -26.5904, 0.81 ) }
    dend_72 { pt3dadd( 4.50944, 143.404, -26.6062, 0.15 ) }
    dend_72 { pt3dadd( 4.57576, 144.533, -26.623, 1.18 ) }
    dend_72 { pt3dadd( 4.59023, 144.849, -26.6277, 1.47 ) }
    dend_72 { pt3dadd( 4.59353, 144.908, -26.6328, 1.47 ) }
    dend_72 { pt3dadd( 4.61349, 145.193, -26.6804, 1.47 ) }
    dend_72 { pt3dadd( 4.72337, 146.741, -27.0357, 0.22 ) }
    dend_72 { pt3dadd( 4.79511, 147.608, -27.2901, 1.11 ) }
    dend_72 { pt3dadd( 4.82719, 147.975, -27.4118, 1.47 ) }
    dend_72 { pt3dadd( 5.04478, 149.989, -28.1888, 0.15 ) }
    dend_72 { pt3dadd( 5.14575, 150.774, -28.521, 0.81 ) }
    dend_72 { pt3dadd( 5.15541, 150.836, -28.5498, 0.81 ) }
    dend_72 { pt3dadd( 5.22163, 151.194, -28.7307, 0.81 ) }
    dend_72 { pt3dadd( 5.23213, 151.246, -28.7556, 0.81 ) }
    dend_72 { pt3dadd( 5.42729, 152.491, -29.2844, 0.22 ) }
    dend_72 { pt3dadd( 5.47222, 152.906, -29.4248, 0.37 ) }
    dend_72 { pt3dadd( 5.52293, 153.548, -29.6169, 0.22 ) }
    dend_72 { pt3dadd( 5.56698, 154.342, -29.834, 1.18 ) }
    dend_72 { pt3dadd( 5.58072, 154.815, -29.9532, 1.47 ) }
    dend_72 { pt3dadd( 5.60198, 156.613, -30.3695, 0.22 ) }
    dend_72 { pt3dadd( 5.59715, 157.407, -30.5279, 1.03 ) }
    dend_72 { pt3dadd( 5.59443, 157.682, -30.5823, 1.03 ) }
    dend_72 { pt3dadd( 5.5903, 159.44, -30.9486, 0.22 ) }
    dend_72 { pt3dadd( 5.59344, 160.075, -31.0793, 0.22 ) }
    dend_72 { pt3dadd( 5.59442, 160.141, -31.0929, 0.22 ) }
    dend_72 { pt3dadd( 5.62549, 160.944, -31.2145, 0.81 ) }
    dend_72 { pt3dadd( 5.65151, 161.439, -31.2757, 0.81 ) }
    dend_72 { pt3dadd( 5.72627, 162.908, -31.4106, 0.22 ) }
    dend_72 { pt3dadd( 5.76953, 163.914, -31.4331, 1.11 ) }
    dend_72 { pt3dadd( 5.77652, 164.13, -31.4291, 1.11 ) }
    dend_72 { pt3dadd( 5.80417, 165.939, -31.3115, 0.22 ) }
    dend_72 { pt3dadd( 5.8033, 166.738, -31.2291, 0.59 ) }
    dend_72 { pt3dadd( 5.77873, 168.026, -31.0513, 0.22 ) }
    dend_72 { pt3dadd( 5.73013, 169.118, -30.8572, 1.18 ) }
    dend_72 { pt3dadd( 5.70828, 169.539, -30.7787, 1.62 ) }
    dend_72 { pt3dadd( 5.60358, 171.135, -30.4565, 0.22 ) }
    dend_72 { pt3dadd( 5.55833, 171.629, -30.3501, 0.22 ) }
    dend_72 { pt3dadd( 5.50011, 172.179, -30.2232, 0.59 ) }
    dend_72 { pt3dadd( 5.46928, 172.457, -30.1573, 0.59 ) }
    dend_72 { pt3dadd( 5.45997, 172.535, -30.1409, 0.59 ) }
    dend_72 { pt3dadd( 5.34883, 173.408, -29.9431, 0.22 ) }
    dend_72 { pt3dadd( 5.28885, 173.885, -29.817, 0.52 ) }
    dend_72 { pt3dadd( 5.27492, 174.028, -29.7752, 0.52 ) }
    dend_72 { pt3dadd( 5.27095, 174.094, -29.7546, 0.52 ) }
    dend_72 { pt3dadd( 5.27369, 175.267, -29.4466, 0.22 ) }
    dend_72 { pt3dadd( 5.30974, 176.17, -29.25, 1.11 ) }
    dend_72 { pt3dadd( 5.36003, 176.596, -29.1841, 1.47 ) }
    dend_72 { pt3dadd( 5.38358, 176.732, -29.1645, 1.47 ) }
    dend_72 { pt3dadd( 5.48033, 177.209, -29.1035, 1.47 ) }
    dend_72 { pt3dadd( 5.827, 178.693, -28.9389, 0.22 ) }
    dend_72 { pt3dadd( 5.84231, 178.749, -28.9344, 0.22 ) }
    dend_72 { pt3dadd( 6.1379, 179.853, -28.8637, 0.22 ) }
    dend_72 { pt3dadd( 6.36925, 180.797, -28.8164, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_72 { pt3dadd( 6.46686, 181.23, -28.7865, 1.55 ) }
    dend_72 { pt3dadd( 6.55742, 181.651, -28.7521, 1.55 ) }
    dend_72 { pt3dadd( 6.88346, 183.109, -28.6062, 0.22 ) }
    dend_72 { pt3dadd( 7.00757, 183.659, -28.5461, 0.74 ) }
    dend_72 { pt3dadd( 7.05406, 183.872, -28.5181, 0.74 ) }
    dend_72 { pt3dadd( 7.46509, 185.714, -28.257, 0.22 ) }
    dend_72 { pt3dadd( 7.58499, 186.242, -28.174, 0.74 ) }
    dend_72 { pt3dadd( 7.93403, 187.817, -27.8448, 0.22 ) }
    dend_72 { pt3dadd( 7.97161, 187.983, -27.8017, 0.22 ) }
    dend_72 { pt3dadd( 8.1856, 188.898, -27.5516, 0.74 ) }
    dend_72 { pt3dadd( 8.20997, 189.005, -27.5203, 0.74 ) }
    dend_72 { pt3dadd( 8.33197, 189.572, -27.3441, 1.03 ) }
    dend_72 { pt3dadd( 8.73009, 191.505, -26.7511, 0.15 ) }
    dend_72 { pt3dadd( 8.74246, 191.573, -26.7319, 0.15 ) }
    dend_72 { pt3dadd( 8.95778, 192.761, -26.443, 0.15 ) }
    dend_72 { pt3dadd( 9.06243, 193.341, -26.3218, 1.03 ) }
    dend_72 { pt3dadd( 9.11741, 193.657, -26.2723, 1.03 ) }
    dend_72 { pt3dadd( 9.25663, 194.607, -26.1832, 0.15 ) }
    dend_72 { pt3dadd( 9.34827, 195.381, -26.1766, 1.11 ) }
    dend_72 { pt3dadd( 9.38208, 195.76, -26.1802, 1.4 ) }
    dend_72 { pt3dadd( 9.38502, 195.819, -26.1822, 1.4 ) }
    dend_72 { pt3dadd( 9.41279, 197.226, -26.273, 0.22 ) }
    dend_72 { pt3dadd( 9.39591, 197.954, -26.3237, 0.59 ) }
    dend_72 { pt3dadd( 9.39176, 198.015, -26.3282, 0.59 ) }
    dend_72 { pt3dadd( 9.36865, 198.23, -26.3415, 0.59 ) }
    dend_72 { pt3dadd( 9.25816, 199.1, -26.3949, 0.22 ) }
    dend_72 { pt3dadd( 9.1686, 199.73, -26.434, 1.18 ) }
    dend_72 { pt3dadd( 9.05615, 200.364, -26.4752, 1.84 ) }
    dend_72 { pt3dadd( 8.98523, 200.723, -26.5033, 1.47 ) }
    dend_72 { pt3dadd( 8.55818, 202.527, -26.6564, 0.22 ) }
    dend_72 { pt3dadd( 8.36969, 203.207, -26.7204, 0.22 ) }
    dend_72 { pt3dadd( 8.35093, 203.262, -26.7262, 0.22 ) }
    dend_72 { pt3dadd( 8.09087, 203.906, -26.8163, 0.81 ) }
    dend_72 { pt3dadd( 7.88672, 204.38, -26.8951, 1.62 ) }
    dend_72 { pt3dadd( 7.62644, 204.95, -27.0004, 2.28 ) }
    dend_72 { pt3dadd( 7.52829, 205.164, -27.0425, 2.5 ) }
    dend_72 { pt3dadd( 7.25613, 205.806, -27.1584, 2.14 ) }
    dend_72 { pt3dadd( 6.58342, 207.575, -27.4613, 0.22 ) }
    dend_72 { pt3dadd( 6.38789, 208.172, -27.5602, 0.59 ) }
    dend_72 { pt3dadd( 6.36846, 208.249, -27.5716, 0.59 ) }
    dend_72 { pt3dadd( 6.22557, 209.005, -27.6664, 0.22 ) }
    dend_72 { pt3dadd( 6.14776, 209.575, -27.7151, 0.81 ) }
    dend_72 { pt3dadd( 6.13942, 209.666, -27.7195, 0.81 ) }
    dend_72 { pt3dadd( 6.11346, 210.028, -27.7183, 0.81 ) }
    dend_72 { pt3dadd( 6.00761, 211.139, -27.703, 0.22 ) }
    dend_72 { pt3dadd( 5.94202, 211.78, -27.6918, 0.44 ) }
    dend_72 { pt3dadd( 5.76307, 213.329, -27.6552, 0.15 ) }
    dend_72 { pt3dadd( 5.69795, 213.901, -27.6372, 0.15 ) }
    dend_72 { pt3dadd( 5.64003, 214.37, -27.6205, 0.59 ) }
    dend_72 { pt3dadd( 5.6003, 214.663, -27.6073, 0.59 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 50/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -8.98412, 38.5305, -7.24931, 1.55 ) }
    dend_27 { pt3dadd( -8.59343, 40.3573, -8.95773, 1.55 ) }
    dend_27 { pt3dadd( -8.57322, 40.447, -9.03198, 1.55 ) }
    dend_27 { pt3dadd( -8.28156, 41.6589, -9.87001, 1.47 ) }
    dend_27 { pt3dadd( -8.26693, 41.7172, -9.9034, 1.47 ) }
    dend_27 { pt3dadd( -8.05659, 42.5323, -10.3247, 1.25 ) }
    dend_27 { pt3dadd( -7.70905, 43.8824, -10.9208, 1.25 ) }
    dend_27 { pt3dadd( -7.66818, 44.0431, -10.9613, 1.25 ) }
    dend_27 { pt3dadd( -7.3988, 45.0453, -11.1632, 0.81 ) }
    dend_27 { pt3dadd( -7.094, 46.179, -11.3266, 1.18 ) }
    dend_27 { pt3dadd( -7.06594, 46.2886, -11.3399, 1.18 ) }
    dend_27 { pt3dadd( -6.75252, 47.6153, -11.4711, 1.84 ) }
    dend_27 { pt3dadd( -6.54555, 48.616, -11.552, 2.14 ) }
    dend_27 { pt3dadd( -6.3644, 49.6232, -11.6337, 2.14 ) }
    dend_27 { pt3dadd( -6.21241, 50.7792, -11.7401, 2.14 ) }
    dend_27 { pt3dadd( -6.20851, 50.8373, -11.7455, 2.14 ) }
    dend_27 { pt3dadd( -6.20276, 51.5128, -11.8192, 1.77 ) }
    dend_27 { pt3dadd( -6.26613, 52.7652, -11.9753, 1.77 ) }
    dend_27 { pt3dadd( -6.37683, 53.6201, -12.0852, 1.47 ) }
    dend_27 { pt3dadd( -6.6094, 54.6978, -12.2143, 1.25 ) }
    dend_27 { pt3dadd( -6.93884, 55.7983, -12.3594, 1.62 ) }
    dend_27 { pt3dadd( -7.22909, 56.5916, -12.473, 1.84 ) }
    dend_27 { pt3dadd( -7.25739, 56.6562, -12.4832, 1.84 ) }
    dend_27 { pt3dadd( -7.74588, 57.5859, -12.6672, 1.99 ) }
    dend_27 { pt3dadd( -8.309, 58.6249, -12.8915, 1.69 ) }
    dend_27 { pt3dadd( -8.79592, 59.6094, -13.1037, 1.47 ) }
    dend_27 { pt3dadd( -9.06367, 60.3165, -13.2942, 1.33 ) }
    dend_27 { pt3dadd( -9.07825, 60.371, -13.3107, 1.33 ) }
    dend_27 { pt3dadd( -9.19195, 61.3344, -13.6411, 1.11 ) }
    dend_27 { pt3dadd( -9.11669, 62.3231, -14.0429, 0.88 ) }
    dend_27 { pt3dadd( -8.89174, 63.1285, -14.4038, 0.96 ) }
    dend_27 { pt3dadd( -8.40832, 64.3398, -14.9248, 0.81 ) }
    dend_27 { pt3dadd( -8.37005, 64.432, -14.9607, 0.81 ) }
    dend_27 { pt3dadd( -8.15091, 65.0091, -15.1633, 0.66 ) }
    dend_27 { pt3dadd( -8.09653, 65.1693, -15.2129, 0.66 ) }
    dend_27 { pt3dadd( -7.96625, 66.11, -15.4544, 0.66 ) }
    dend_27 { pt3dadd( -8.0154, 66.8811, -15.5909, 0.96 ) }
    dend_27 { pt3dadd( -8.21733, 67.7188, -15.6733, 1.69 ) }
    dend_27 { pt3dadd( -8.34093, 68.0991, -15.7059, 1.99 ) }
    dend_27 { pt3dadd( -8.50452, 68.4871, -15.7422, 1.99 ) }
    dend_27 { pt3dadd( -8.91354, 69.3552, -15.8337, 1.84 ) }
    dend_27 { pt3dadd( -8.94596, 69.4161, -15.8408, 1.84 ) }
    dend_27 { pt3dadd( -9.52091, 70.4676, -15.9921, 2.06 ) }
    dend_27 { pt3dadd( -9.71549, 70.8441, -16.0524, 2.21 ) }
    dend_27 { pt3dadd( -10.0258, 71.511, -16.1585, 2.14 ) }
    dend_27 { pt3dadd( -10.4486, 72.5053, -16.3103, 1.18 ) }
    dend_27 { pt3dadd( -10.8974, 73.676, -16.4762, 1.03 ) }
    dend_27 { pt3dadd( -11.2091, 74.5596, -16.5846, 1.03 ) }
    dend_27 { pt3dadd( -11.4741, 75.382, -16.6699, 1.33 ) }
    dend_27 { pt3dadd( -11.7547, 76.3445, -16.7516, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_27 { pt3dadd( -11.9267, 77.0485, -16.7918, 2.65 ) }
    dend_27 { pt3dadd( -12.0813, 77.8158, -16.8328, 2.65 ) }
    dend_27 { pt3dadd( -12.2252, 78.7386, -16.8884, 2.65 ) }
    dend_27 { pt3dadd( -12.2408, 78.8676, -16.8957, 2.65 ) }
    dend_27 { pt3dadd( -12.3011, 79.5086, -16.9329, 2.36 ) }
    dend_27 { pt3dadd( -12.3281, 80.2505, -16.986, 2.06 ) }
    dend_27 { pt3dadd( -12.3307, 81.2011, -17.0612, 1.4 ) }
    dend_27 { pt3dadd( -12.3026, 82.2265, -17.1451, 0.81 ) }
    dend_27 { pt3dadd( -12.1945, 83.8857, -17.2775, 0.66 ) }
    dend_27 { pt3dadd( -12.0513, 85.2724, -17.3754, 0.66 ) }
    dend_27 { pt3dadd( -11.8395, 86.7691, -17.4676, 1.11 ) }
    dend_27 { pt3dadd( -11.8271, 86.839, -17.4718, 1.11 ) }
    dend_27 { pt3dadd( -11.6275, 87.7543, -17.5199, 1.55 ) }
    dend_27 { pt3dadd( -11.3563, 88.8126, -17.5732, 1.84 ) }
    dend_27 { pt3dadd( -11.0165, 90.0137, -17.6382, 2.28 ) }
    dend_27 { pt3dadd( -10.8572, 90.5716, -17.6677, 2.58 ) }
    dend_27 { pt3dadd( -10.6656, 91.2885, -17.7218, 2.58 ) }
    dend_27 { pt3dadd( -10.5415, 91.8095, -17.7743, 2.58 ) }
    dend_27 { pt3dadd( -10.3896, 92.6541, -17.8945, 2.36 ) }
    dend_27 { pt3dadd( -10.3065, 93.3827, -18.0311, 1.92 ) }
    dend_27 { pt3dadd( -10.302, 93.4614, -18.0477, 1.92 ) }
    dend_27 { pt3dadd( -10.2635, 94.6228, -18.2908, 0.88 ) }
    dend_27 { pt3dadd( -10.2503, 95.7554, -18.5124, 0.66 ) }
    dend_27 { pt3dadd( -10.2496, 96.9302, -18.7493, 0.66 ) }
    dend_27 { pt3dadd( -10.2499, 97.6895, -18.9148, 0.81 ) }
    dend_27 { pt3dadd( -10.2339, 98.5215, -19.1058, 0.74 ) }
    dend_27 { pt3dadd( -10.2033, 99.3623, -19.3035, 0.59 ) }
    dend_27 { pt3dadd( -10.168, 100.205, -19.4918, 1.25 ) }
    dend_27 { pt3dadd( -10.1098, 101.008, -19.6844, 1.84 ) }
    dend_27 { pt3dadd( -9.98211, 102.134, -19.9548, 2.5 ) }
    dend_27 { pt3dadd( -9.88555, 102.81, -20.127, 2.65 ) }
    dend_27 { pt3dadd( -9.86611, 102.92, -20.1616, 2.65 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 32/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -8.98412, 38.5305, -7.24931, 0.52 ) }
    dend_26 { pt3dadd( -8.62803, 39.9037, -7.18887, 0.52 ) }
    dend_26 { pt3dadd( -8.61499, 39.9713, -7.18413, 0.52 ) }
    dend_26 { pt3dadd( -8.5729, 40.6367, -7.1252, 0.52 ) }
    dend_26 { pt3dadd( -8.66323, 41.8779, -7.00631, 0.52 ) }
    dend_26 { pt3dadd( -8.67334, 41.9451, -6.99981, 0.52 ) }
    dend_26 { pt3dadd( -8.74716, 42.2495, -6.97124, 0.66 ) }
    dend_26 { pt3dadd( -8.79778, 42.3398, -6.9497, 0.66 ) }
    dend_26 { pt3dadd( -9.1541, 42.833, -6.83453, 0.52 ) }
    dend_26 { pt3dadd( -9.47187, 43.1894, -6.74815, 0.66 ) }
    dend_26 { pt3dadd( -9.52712, 43.2469, -6.73175, 0.66 ) }
    dend_26 { pt3dadd( -9.86531, 43.6073, -6.60723, 0.59 ) }
    dend_26 { pt3dadd( -10.3833, 44.1712, -6.38848, 0.29 ) }
    dend_26 { pt3dadd( -10.8122, 44.665, -6.17117, 0.29 ) }
    dend_26 { pt3dadd( -10.8886, 44.757, -6.12479, 0.29 ) }
    dend_26 { pt3dadd( -11.3816, 45.3851, -5.78354, 0.59 ) }
    dend_26 { pt3dadd( -11.7141, 45.8109, -5.56184, 0.81 ) }
    dend_26 { pt3dadd( -11.7568, 45.863, -5.53676, 0.81 ) }
    dend_26 { pt3dadd( -12.0643, 46.1971, -5.40047, 0.81 ) }
    dend_26 { pt3dadd( -12.1076, 46.2352, -5.38611, 0.81 ) }
    dend_26 { pt3dadd( -12.5476, 46.5637, -5.27505, 0.81 ) }
    dend_26 { pt3dadd( -13.3188, 47.1276, -5.10983, 0.37 ) }
    dend_26 { pt3dadd( -13.8445, 47.5519, -4.95372, 0.37 ) }
    dend_26 { pt3dadd( -14.2631, 47.9225, -4.79145, 0.59 ) }
    dend_26 { pt3dadd( -14.6076, 48.2636, -4.61909, 0.81 ) }
    dend_26 { pt3dadd( -15.1543, 48.8552, -4.27743, 0.29 ) }
    dend_26 { pt3dadd( -15.6767, 49.4648, -3.89325, 0.52 ) }
    dend_26 { pt3dadd( -16.2331, 50.1811, -3.40729, 1.33 ) }
    dend_26 { pt3dadd( -16.4755, 50.518, -3.17053, 1.55 ) }
    dend_26 { pt3dadd( -17.1734, 51.5413, -2.43384, 0.29 ) }
    dend_26 { pt3dadd( -17.7237, 52.3534, -1.8487, 1.55 ) }
    dend_26 { pt3dadd( -17.8592, 52.5373, -1.72813, 1.84 ) }
    dend_26 { pt3dadd( -17.935, 52.6223, -1.68406, 1.84 ) }
    dend_26 { pt3dadd( -18.1631, 52.8464, -1.62509, 1.84 ) }
    dend_26 { pt3dadd( -18.2057, 52.8875, -1.62396, 1.84 ) }
    dend_26 { pt3dadd( -18.5359, 53.2014, -1.69323, 1.62 ) }
    dend_26 { pt3dadd( -19.206, 53.825, -1.91998, 0.37 ) }
    dend_26 { pt3dadd( -19.7605, 54.36, -2.15402, 0.29 ) }
    dend_26 { pt3dadd( -20.1757, 54.8025, -2.37892, 0.59 ) }
    dend_26 { pt3dadd( -20.4404, 55.1015, -2.55692, 0.59 ) }
    dend_26 { pt3dadd( -20.6255, 55.3175, -2.69394, 0.59 ) }
    dend_26 { pt3dadd( -20.8684, 55.6171, -2.89539, 0.52 ) }
    dend_26 { pt3dadd( -21.315, 56.2602, -3.2949, 0.29 ) }
    dend_26 { pt3dadd( -21.6095, 56.7463, -3.59348, 0.74 ) }
    dend_26 { pt3dadd( -21.9555, 57.3259, -3.91999, 0.66 ) }
    dend_26 { pt3dadd( -22.148, 57.6425, -4.08114, 0.88 ) }
    dend_26 { pt3dadd( -22.4917, 58.196, -4.33174, 0.66 ) }
    dend_26 { pt3dadd( -23.4388, 59.6496, -4.899, 2.14 ) }
    dend_26 { pt3dadd( -23.8099, 60.1787, -5.07335, 2.14 ) }
    dend_26 { pt3dadd( -24.5921, 61.2365, -5.37397, 0.22 ) }
    dend_26 { pt3dadd( -25.0154, 61.7925, -5.50412, 0.22 ) }
    dend_26 { pt3dadd( -25.4684, 62.3778, -5.61819, 0.22 ) }
    dend_26 { pt3dadd( -25.9199, 62.9295, -5.67197, 0.88 ) }
    dend_26 { pt3dadd( -26.1601, 63.2013, -5.66727, 1.03 ) }
    dend_26 { pt3dadd( -26.4612, 63.5266, -5.63006, 0.74 ) }
    dend_26 { pt3dadd( -27.1903, 64.3145, -5.49156, 0.22 ) }
    dend_26 { pt3dadd( -27.6311, 64.7849, -5.38173, 0.22 ) }
    dend_26 { pt3dadd( -28.2201, 65.4205, -5.23506, 0.22 ) }
    dend_26 { pt3dadd( -28.2988, 65.5068, -5.21592, 0.22 ) }
    dend_26 { pt3dadd( -28.8557, 66.146, -5.08477, 0.22 ) }
    dend_26 { pt3dadd( -29.6806, 67.0838, -4.91211, 1.69 ) }
    dend_26 { pt3dadd( -29.9567, 67.4292, -4.86824, 2.21 ) }
    dend_26 { pt3dadd( -30.4043, 68.0227, -4.82294, 2.21 ) }
    dend_26 { pt3dadd( -30.4365, 68.072, -4.81987, 2.21 ) }
    dend_26 { pt3dadd( -31.0675, 69.1841, -4.73325, 0.22 ) }
    dend_26 { pt3dadd( -31.4271, 69.9221, -4.66451, 0.22 ) }
    dend_26 { pt3dadd( -31.988, 71.1647, -4.48192, 0.22 ) }
    dend_26 { pt3dadd( -32.0294, 71.2587, -4.46515, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_26 { pt3dadd( -32.426, 72.1418, -4.26785, 1.11 ) }
    dend_26 { pt3dadd( -32.7173, 72.7914, -4.12852, 1.11 ) }
    dend_26 { pt3dadd( -32.975, 73.3723, -3.98857, 0.59 ) }
    dend_26 { pt3dadd( -33.4661, 74.4682, -3.70511, 1.69 ) }
    dend_26 { pt3dadd( -33.6007, 74.7505, -3.6297, 1.77 ) }
    dend_26 { pt3dadd( -34.4834, 76.5624, -3.1821, 0.22 ) }
    dend_26 { pt3dadd( -35.2119, 78.0174, -2.8119, 0.22 ) }
    dend_26 { pt3dadd( -35.4871, 78.5694, -2.65673, 1.03 ) }
    dend_26 { pt3dadd( -35.6933, 78.9867, -2.53255, 1.03 ) }
    dend_26 { pt3dadd( -35.8778, 79.3591, -2.41816, 0.81 ) }
    dend_26 { pt3dadd( -36.4232, 80.3437, -2.04255, 0.22 ) }
    dend_26 { pt3dadd( -37.0993, 81.4194, -1.55355, 1.11 ) }
    dend_26 { pt3dadd( -37.2377, 81.6136, -1.45874, 1.62 ) }
    dend_26 { pt3dadd( -37.4352, 81.8775, -1.31102, 1.62 ) }
    dend_26 { pt3dadd( -37.4676, 81.919, -1.28393, 1.62 ) }
    dend_26 { pt3dadd( -38.6617, 83.4051, -0.18621, 0.22 ) }
    dend_26 { pt3dadd( -39.1056, 83.9442, 0.240017, 0.81 ) }
    dend_26 { pt3dadd( -39.305, 84.183, 0.428918, 0.81 ) }
    dend_26 { pt3dadd( -40.2612, 85.3347, 1.35907, 0.22 ) }
    dend_26 { pt3dadd( -40.2976, 85.38, 1.3967, 0.22 ) }
    dend_26 { pt3dadd( -40.893, 86.1564, 2.05921, 1.18 ) }
    dend_26 { pt3dadd( -41.1378, 86.5425, 2.43059, 1.55 ) }
    dend_26 { pt3dadd( -45.7834, 95.1539, 3.06955, 1.55 ) }
    dend_26 { pt3dadd( -50.4832, 103.669, 4.34492, 1.55 ) }
    dend_26 { pt3dadd( -56.5061, 111.308, 5.87853, 1.55 ) }
    dend_26 { pt3dadd( -62.3383, 118.761, 8.62476, 1.55 ) }
    dend_26 { pt3dadd( -68.7306, 124.84, 13.1269, 1.55 ) }
    dend_26 { pt3dadd( -74.8528, 131.432, 17.2264, 1.55 ) }
    dend_26 { pt3dadd( -78.8764, 138.997, 22.0852, 1.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 29/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -2.04411, 50.1881, -0.0762192, 0.88 ) }
    dend_24 { pt3dadd( -2.58321, 50.6776, 1.94948, 0.88 ) }
    dend_24 { pt3dadd( -2.61693, 50.6962, 2.07358, 0.88 ) }
    dend_24 { pt3dadd( -3.04519, 50.7864, 3.49208, 0.88 ) }
    dend_24 { pt3dadd( -3.06329, 50.7875, 3.54927, 0.88 ) }
    dend_24 { pt3dadd( -3.60094, 50.8459, 6.71451, 0.59 ) }
    dend_24 { pt3dadd( -3.61038, 50.8484, 6.78382, 0.59 ) }
    dend_24 { pt3dadd( -3.71298, 50.8796, 7.80414, 1.18 ) }
    dend_24 { pt3dadd( -3.82919, 50.9457, 9.19554, 1.18 ) }
    dend_24 { pt3dadd( -3.83208, 50.9498, 9.25532, 1.18 ) }
    dend_24 { pt3dadd( -3.86199, 51.7079, 14.2577, 0.22 ) }
    dend_24 { pt3dadd( -3.82936, 51.8667, 14.8308, 0.29 ) }
    dend_24 { pt3dadd( -3.73829, 52.2496, 15.9219, 1.11 ) }
    dend_24 { pt3dadd( -3.73071, 52.2792, 15.9876, 1.11 ) }
    dend_24 { pt3dadd( -3.61815, 52.6458, 16.694, 1.11 ) }
    dend_24 { pt3dadd( -3.4079, 53.4142, 17.978, 0.22 ) }
    dend_24 { pt3dadd( -3.29733, 54.0471, 18.5746, 0.59 ) }
    dend_24 { pt3dadd( -3.2857, 54.0887, 18.6151, 0.59 ) }
    dend_24 { pt3dadd( -3.18994, 54.3445, 18.85, 1.11 ) }
    dend_24 { pt3dadd( -4.72737, 56.6958, 28.4323, 1.11 ) }
    dend_24 { pt3dadd( -8.66331, 59.176, 37.2662, 1.11 ) }
    dend_24 { pt3dadd( -10.4976, 62.7115, 46.4033, 1.11 ) }
    dend_24 { pt3dadd( -13.3165, 66.4738, 55.1876, 1.11 ) }
    dend_24 { pt3dadd( -15.9853, 70.7297, 63.7797, 1.11 ) }
    dend_24 { pt3dadd( -18.3252, 75.5021, 72.1801, 1.11 ) }
    dend_24 { pt3dadd( -21.1811, 80.6068, 80.207, 1.11 ) }
    dend_24 { pt3dadd( -23.5226, 84.8643, 88.8932, 1.11 ) }
    dend_24 { pt3dadd( -24.7188, 89.0791, 97.8309, 1.11 ) }
    dend_24 { pt3dadd( -26.2013, 93.1673, 106.788, 1.11 ) }
    dend_24 { pt3dadd( -27.0224, 98.4381, 115.161, 1.11 ) }
    dend_24 { pt3dadd( -28.0988, 104.141, 123.2, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 60/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -2.04411, 50.1881, -0.0762192, 0.52 ) }
    dend_23 { pt3dadd( -1.73786, 51.439, 0.64964, 0.52 ) }
    dend_23 { pt3dadd( -1.5768, 52.525, 1.22036, 0.52 ) }
    dend_23 { pt3dadd( -1.57628, 52.5787, 1.24427, 0.44 ) }
    dend_23 { pt3dadd( -1.65031, 53.4883, 1.57698, 0.44 ) }
    dend_23 { pt3dadd( -1.65937, 53.5636, 1.59849, 0.44 ) }
    dend_23 { pt3dadd( -1.74824, 54.2744, 1.75832, 0.66 ) }
    dend_23 { pt3dadd( -1.76359, 54.3408, 1.76951, 0.66 ) }
    dend_23 { pt3dadd( -1.93516, 55.0217, 1.89598, 0.66 ) }
    dend_23 { pt3dadd( -2.06243, 55.5769, 2.03863, 0.44 ) }
    dend_23 { pt3dadd( -2.21803, 56.3882, 2.34835, 0.44 ) }
    dend_23 { pt3dadd( -2.33093, 57.1106, 2.68649, 0.96 ) }
    dend_23 { pt3dadd( -2.40716, 58.1401, 3.22955, 0.81 ) }
    dend_23 { pt3dadd( -2.40819, 58.2942, 3.31564, 0.81 ) }
    dend_23 { pt3dadd( -2.29898, 59.3516, 3.93737, 0.66 ) }
    dend_23 { pt3dadd( -2.08585, 60.3246, 4.57657, 0.44 ) }
    dend_23 { pt3dadd( -2.04352, 60.4434, 4.65869, 0.44 ) }
    dend_23 { pt3dadd( -1.68413, 61.1807, 5.16421, 0.29 ) }
    dend_23 { pt3dadd( -1.44208, 61.5531, 5.41819, 0.29 ) }
    dend_23 { pt3dadd( -1.02529, 62.1299, 5.80814, 1.11 ) }
    dend_23 { pt3dadd( -0.40974, 62.878, 6.31883, 1.47 ) }
    dend_23 { pt3dadd( -0.0631508, 63.3044, 6.62254, 1.47 ) }
    dend_23 { pt3dadd( -0.0325762, 63.3443, 6.65405, 1.47 ) }
    dend_23 { pt3dadd( 0.633144, 64.2506, 7.45666, 0.88 ) }
    dend_23 { pt3dadd( 1.10756, 64.9299, 8.09202, 0.52 ) }
    dend_23 { pt3dadd( 1.13323, 64.9689, 8.12868, 0.52 ) }
    dend_23 { pt3dadd( 1.50659, 65.5433, 8.63861, 0.74 ) }
    dend_23 { pt3dadd( 1.53315, 65.5829, 8.67399, 0.74 ) }
    dend_23 { pt3dadd( 1.81244, 65.9641, 8.98088, 0.74 ) }
    dend_23 { pt3dadd( 1.84623, 66.0044, 9.0083, 0.74 ) }
    dend_23 { pt3dadd( 2.15452, 66.3389, 9.19815, 0.74 ) }
    dend_23 { pt3dadd( 2.86987, 67.1546, 9.56015, 0.37 ) }
    dend_23 { pt3dadd( 3.24273, 67.622, 9.71556, 0.37 ) }
    dend_23 { pt3dadd( 3.6958, 68.2841, 9.88633, 0.52 ) }
    dend_23 { pt3dadd( 4.01719, 68.8646, 10.02, 0.37 ) }
    dend_23 { pt3dadd( 4.43893, 69.8264, 10.217, 0.74 ) }
    dend_23 { pt3dadd( 4.6502, 70.5557, 10.3421, 1.11 ) }
    dend_23 { pt3dadd( 4.76081, 71.2565, 10.4365, 0.96 ) }
    dend_23 { pt3dadd( 4.78099, 72.1376, 10.5525, 0.44 ) }
    dend_23 { pt3dadd( 4.68394, 73.1714, 10.691, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_23 { pt3dadd( 4.60338, 73.6704, 10.7644, 0.29 ) }
    dend_23 { pt3dadd( 4.46126, 74.4216, 10.8806, 0.29 ) }
    dend_23 { pt3dadd( 4.45041, 74.489, 10.8907, 0.29 ) }
    dend_23 { pt3dadd( 4.37496, 75.2049, 10.9935, 0.37 ) }
    dend_23 { pt3dadd( 4.34608, 76.0931, 11.1022, 0.52 ) }
    dend_23 { pt3dadd( 4.39434, 76.913, 11.1733, 1.11 ) }
    dend_23 { pt3dadd( 4.47087, 77.4794, 11.2245, 1.69 ) }
    dend_23 { pt3dadd( 4.53826, 77.8894, 11.259, 1.77 ) }
    dend_23 { pt3dadd( 4.59665, 78.3677, 11.2945, 1.69 ) }
    dend_23 { pt3dadd( 4.63834, 78.8499, 11.3256, 1.47 ) }
    dend_23 { pt3dadd( 4.63773, 79.1737, 11.3405, 1.47 ) }
    dend_23 { pt3dadd( 4.62771, 79.244, 11.3415, 1.47 ) }
    dend_23 { pt3dadd( 4.32085, 80.4779, 11.3548, 0.29 ) }
    dend_23 { pt3dadd( 4.14495, 81.0326, 11.3582, 0.66 ) }
    dend_23 { pt3dadd( 4.12294, 81.0981, 11.3611, 0.66 ) }
    dend_23 { pt3dadd( 4.02586, 81.407, 11.3878, 0.37 ) }
    dend_23 { pt3dadd( 3.85803, 82.0641, 11.4777, 0.29 ) }
    dend_23 { pt3dadd( 3.71038, 82.8523, 11.6135, 0.29 ) }
    dend_23 { pt3dadd( 3.70387, 82.9196, 11.6272, 0.29 ) }
    dend_23 { pt3dadd( 3.69285, 83.7645, 11.7968, 1.03 ) }
    dend_23 { pt3dadd( 3.72112, 84.4757, 11.9318, 1.69 ) }
    dend_23 { pt3dadd( 3.79708, 85.2331, 12.0579, 2.14 ) }
    dend_23 { pt3dadd( 3.83805, 85.5785, 12.1084, 2.28 ) }
    dend_23 { pt3dadd( 3.87751, 86.1316, 12.157, 1.77 ) }
    dend_23 { pt3dadd( 3.89388, 86.7727, 12.1761, 1.18 ) }
    dend_23 { pt3dadd( 3.87321, 87.442, 12.1492, 0.52 ) }
    dend_23 { pt3dadd( 3.82181, 88.0879, 12.1018, 0.37 ) }
    dend_23 { pt3dadd( 3.76385, 88.5355, 12.0351, 0.37 ) }
    dend_23 { pt3dadd( 3.63248, 89.469, 11.8702, 0.74 ) }
    dend_23 { pt3dadd( 3.59102, 89.8102, 11.8015, 1.25 ) }
    dend_23 { pt3dadd( 3.52892, 90.3701, 11.6745, 1.4 ) }
    dend_23 { pt3dadd( 3.4648, 91.1407, 11.4908, 0.81 ) }
    dend_23 { pt3dadd( 3.38987, 92.6939, 11.1265, 0.37 ) }
    dend_23 { pt3dadd( 3.39121, 93.5434, 10.9322, 0.37 ) }
    dend_23 { pt3dadd( 3.44232, 94.9168, 10.638, 0.29 ) }
    dend_23 { pt3dadd( 3.50864, 95.9638, 10.4213, 1.84 ) }
    dend_23 { pt3dadd( 3.54909, 96.3551, 10.3453, 2.28 ) }
    dend_23 { pt3dadd( 3.63937, 96.9446, 10.243, 2.14 ) }
    dend_23 { pt3dadd( 3.89137, 98.2084, 10.0899, 0.52 ) }
    dend_23 { pt3dadd( 4.04866, 98.9202, 10.0205, 0.74 ) }
    dend_23 { pt3dadd( 4.15953, 99.4149, 9.99342, 0.74 ) }
    dend_23 { pt3dadd( 4.30677, 100.109, 9.97925, 0.22 ) }
    dend_23 { pt3dadd( 4.37219, 100.542, 9.97554, 0.22 ) }
    dend_23 { pt3dadd( 4.42325, 101.417, 9.95518, 0.74 ) }
    dend_23 { pt3dadd( 4.40847, 101.643, 9.94148, 0.74 ) }
    dend_23 { pt3dadd( 4.31184, 102.383, 9.86891, 0.22 ) }
    dend_23 { pt3dadd( 4.21807, 102.936, 9.80168, 0.74 ) }
    dend_23 { pt3dadd( 4.13144, 103.397, 9.7369, 0.96 ) }
    dend_23 { pt3dadd( 3.95535, 104.47, 9.57595, 0.37 ) }
    dend_23 { pt3dadd( 3.8037, 105.776, 9.36826, 1.25 ) }
    dend_23 { pt3dadd( 3.78321, 106.233, 9.30088, 1.55 ) }
    dend_23 { pt3dadd( 3.79066, 106.593, 9.26274, 1.77 ) }
    dend_23 { pt3dadd( 3.82157, 107.197, 9.23289, 1.77 ) }
    dend_23 { pt3dadd( 3.87469, 107.998, 9.23327, 0.88 ) }
    dend_23 { pt3dadd( 3.91392, 108.524, 9.26143, 0.52 ) }
    dend_23 { pt3dadd( 3.96571, 109.348, 9.34121, 0.44 ) }
    dend_23 { pt3dadd( 4.01294, 110.402, 9.41995, 0.29 ) }
    dend_23 { pt3dadd( 4.03239, 111.694, 9.49383, 1.25 ) }
    dend_23 { pt3dadd( 4.0256, 112.26, 9.51904, 2.21 ) }
    dend_23 { pt3dadd( 4.01175, 112.646, 9.53001, 2.5 ) }
    dend_23 { pt3dadd( 3.97403, 113.449, 9.53788, 2.28 ) }
    dend_23 { pt3dadd( 3.86963, 114.806, 9.47053, 0.66 ) }
    dend_23 { pt3dadd( 3.80956, 115.537, 9.39606, 0.52 ) }
    dend_23 { pt3dadd( 3.74713, 116.326, 9.29478, 0.66 ) }
    dend_23 { pt3dadd( 3.70525, 116.896, 9.21634, 0.96 ) }
    dend_23 { pt3dadd( 3.65578, 117.618, 9.10613, 0.96 ) }
    dend_23 { pt3dadd( 3.54872, 119.357, 8.81399, 0.22 ) }
    dend_23 { pt3dadd( 3.52403, 120.08, 8.70319, 1.18 ) }
    dend_23 { pt3dadd( 3.53049, 120.48, 8.63593, 0.88 ) }
    dend_23 { pt3dadd( 3.56798, 121.02, 8.53871, 0.74 ) }
    dend_23 { pt3dadd( 3.66173, 121.715, 8.41472, 0.29 ) }
    dend_23 { pt3dadd( 3.67712, 121.782, 8.40417, 0.29 ) }
    dend_23 { pt3dadd( 3.90424, 122.358, 8.34709, 0.81 ) }
    dend_23 { pt3dadd( 3.92723, 122.422, 8.33737, 0.81 ) }
    dend_23 { pt3dadd( 4.02634, 122.827, 8.26983, 1.03 ) }
    dend_23 { pt3dadd( 4.06054, 123.032, 8.23406, 1.03 ) }
    dend_23 { pt3dadd( 4.07539, 123.311, 8.1863, 1.03 ) }
    dend_23 { pt3dadd( 3.97292, 124.57, 7.91157, 0.29 ) }
    dend_23 { pt3dadd( 3.7947, 125.491, 7.67609, 0.29 ) }
    dend_23 { pt3dadd( 3.65868, 126.068, 7.52235, 0.59 ) }
    dend_23 { pt3dadd( 3.62166, 126.206, 7.48501, 0.59 ) }
    dend_23 { pt3dadd( 3.49148, 126.733, 7.34805, 0.37 ) }
    dend_23 { pt3dadd( 3.31828, 127.659, 7.13471, 0.29 ) }
    dend_23 { pt3dadd( 3.21043, 128.668, 6.95208, 1.11 ) }
    dend_23 { pt3dadd( 3.20784, 129.081, 6.89442, 1.69 ) }
    dend_23 { pt3dadd( 3.23469, 129.53, 6.84351, 1.84 ) }
    dend_23 { pt3dadd( 3.30213, 130.244, 6.78073, 1.62 ) }
    dend_23 { pt3dadd( 3.44192, 131.255, 6.72424, 0.74 ) }
    dend_23 { pt3dadd( 3.60797, 132.212, 6.71281, 0.52 ) }
    dend_23 { pt3dadd( 3.621, 132.282, 6.71281, 0.52 ) }
    dend_23 { pt3dadd( 3.79279, 133.329, 6.71281, 0.37 ) }
    dend_23 { pt3dadd( 3.80276, 133.407, 6.71182, 0.37 ) }
    dend_23 { pt3dadd( 3.83858, 134.065, 6.69473, 1.25 ) }
    dend_23 { pt3dadd( 3.82508, 134.527, 6.64115, 0.96 ) }
    dend_23 { pt3dadd( 3.82067, 134.594, 6.62937, 0.96 ) }
    dend_23 { pt3dadd( 3.77204, 135.221, 6.50854, 0.74 ) }
    dend_23 { pt3dadd( 3.7186, 135.865, 6.35575, 0.59 ) }
    dend_23 { pt3dadd( 3.67005, 136.397, 6.22533, 0.74 ) }
    dend_23 { pt3dadd( 3.51099, 137.801, 5.87662, 0.37 ) }
    dend_23 { pt3dadd( 3.40132, 138.665, 5.66348, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_23 { pt3dadd( 3.30375, 139.409, 5.48409, 0.52 ) }
    dend_23 { pt3dadd( 3.1511, 140.365, 5.24257, 0.29 ) }
    dend_23 { pt3dadd( 2.99983, 141.11, 5.03867, 0.81 ) }
    dend_23 { pt3dadd( 2.87078, 141.605, 4.88727, 1.18 ) }
    dend_23 { pt3dadd( 2.85092, 141.661, 4.86894, 1.18 ) }
    dend_23 { pt3dadd( 2.74446, 141.932, 4.76854, 1.18 ) }
    dend_23 { pt3dadd( 2.45664, 142.767, 4.47935, 1.18 ) }
    dend_23 { pt3dadd( 2.25449, 143.483, 4.26413, 0.44 ) }
    dend_23 { pt3dadd( 2.08689, 144.273, 4.04827, 0.29 ) }
    dend_23 { pt3dadd( 2.0635, 144.43, 4.01148, 0.29 ) }
    dend_23 { pt3dadd( 1.97138, 145.522, 3.80522, 0.29 ) }
    dend_23 { pt3dadd( 1.95386, 147.027, 3.60452, 1.62 ) }
    dend_23 { pt3dadd( 1.97488, 147.544, 3.56545, 2.65 ) }
    dend_23 { pt3dadd( 2.00224, 148.061, 3.54637, 2.87 ) }
    dend_23 { pt3dadd( 2.03738, 148.637, 3.53781, 2.36 ) }
    dend_23 { pt3dadd( 2.08071, 149.438, 3.53319, 1.69 ) }
    dend_23 { pt3dadd( 2.13382, 150.7, 3.52292, 0.52 ) }
    dend_23 { pt3dadd( 2.17789, 151.691, 3.515, 0.52 ) }
    dend_23 { pt3dadd( 2.19286, 152.188, 3.50585, 0.81 ) }
    dend_23 { pt3dadd( 2.20601, 152.899, 3.48262, 0.44 ) }
    dend_23 { pt3dadd( 2.22073, 153.912, 3.43524, 0.44 ) }
    dend_23 { pt3dadd( 2.22415, 154.665, 3.3894, 0.37 ) }
    dend_23 { pt3dadd( 2.22565, 154.733, 3.38428, 0.37 ) }
    dend_23 { pt3dadd( 2.28713, 155.6, 3.30674, 0.37 ) }
    dend_23 { pt3dadd( 2.30212, 155.725, 3.29505, 0.37 ) }
    dend_23 { pt3dadd( 2.43498, 156.628, 3.20862, 1.62 ) }
    dend_23 { pt3dadd( 2.53421, 157.214, 3.15879, 2.36 ) }
    dend_23 { pt3dadd( 2.6165, 157.664, 3.12713, 2.36 ) }
    dend_23 { pt3dadd( 2.89565, 159.121, 3.03637, 0.29 ) }
    dend_23 { pt3dadd( 3.03899, 159.821, 2.9972, 0.29 ) }
    dend_23 { pt3dadd( 3.18963, 160.54, 2.96732, 0.37 ) }
    dend_23 { pt3dadd( 3.39308, 161.465, 2.93971, 0.37 ) }
    dend_23 { pt3dadd( 3.47136, 161.833, 2.91759, 0.59 ) }
    dend_23 { pt3dadd( 3.54217, 162.215, 2.87566, 0.59 ) }
    dend_23 { pt3dadd( 3.55085, 162.272, 2.86577, 0.59 ) }
    dend_23 { pt3dadd( 3.70189, 163.701, 2.54508, 0.29 ) }
    dend_23 { pt3dadd( 3.84667, 165.46, 2.07528, 0.29 ) }
    dend_23 { pt3dadd( 3.89787, 166.307, 1.8079, 0.96 ) }
    dend_23 { pt3dadd( 3.927, 167.061, 1.54078, 1.18 ) }
    dend_23 { pt3dadd( 3.92636, 167.645, 1.31979, 0.66 ) }
    dend_23 { pt3dadd( 3.90113, 168.22, 1.09328, 0.44 ) }
    dend_23 { pt3dadd( 3.89305, 168.283, 1.06565, 0.44 ) }
    dend_23 { pt3dadd( 3.76717, 168.979, 0.789174, 0.22 ) }
    dend_23 { pt3dadd( 3.73963, 169.131, 0.746082, 0.22 ) }
    dend_23 { pt3dadd( 3.571, 170.25, 0.533036, 1.47 ) }
    dend_23 { pt3dadd( 3.50873, 170.74, 0.468489, 2.28 ) }
    dend_23 { pt3dadd( 3.46435, 171.178, 0.427194, 2.58 ) }
    dend_23 { pt3dadd( 3.35628, 172.423, 0.350173, 0.29 ) }
    dend_23 { pt3dadd( 3.3029, 173.106, 0.333569, 0.22 ) }
    dend_23 { pt3dadd( 3.26066, 173.805, 0.333336, 0.22 ) }
    dend_23 { pt3dadd( 3.23195, 174.39, 0.341622, 0.22 ) }
    dend_23 { pt3dadd( 3.17477, 175.36, 0.361499, 1.33 ) }
    dend_23 { pt3dadd( 3.15547, 175.621, 0.369464, 1.62 ) }
    dend_23 { pt3dadd( 3.11912, 175.969, 0.369803, 1.62 ) }
    dend_23 { pt3dadd( 3.00084, 176.752, 0.325873, 0.37 ) }
    dend_23 { pt3dadd( 2.85447, 177.473, 0.255387, 0.22 ) }
    dend_23 { pt3dadd( 2.77139, 177.841, 0.216702, 0.22 ) }
    dend_23 { pt3dadd( 2.68061, 178.21, 0.176309, 0.52 ) }
    dend_23 { pt3dadd( 2.49347, 179.02, 0.0899631, 0.29 ) }
    dend_23 { pt3dadd( 2.21368, 180.415, -0.0502361, 0.29 ) }
    dend_23 { pt3dadd( 2.08689, 181.186, -0.119954, 1.03 ) }
    dend_23 { pt3dadd( 2.03934, 181.68, -0.154995, 1.33 ) }
    dend_23 { pt3dadd( 2.0338, 181.898, -0.166517, 1.33 ) }
    dend_23 { pt3dadd( 2.05136, 182.351, -0.180018, 1.18 ) }
    dend_23 { pt3dadd( 2.11416, 183.004, -0.177506, 0.96 ) }
    dend_23 { pt3dadd( 2.18856, 183.496, -0.173864, 0.37 ) }
    dend_23 { pt3dadd( 2.34041, 184.361, -0.165287, 0.22 ) }
    dend_23 { pt3dadd( 2.47971, 185.139, -0.156189, 0.22 ) }
    dend_23 { pt3dadd( 2.61569, 185.95, -0.145791, 1.11 ) }
    dend_23 { pt3dadd( 2.68452, 186.401, -0.152426, 1.92 ) }
    dend_23 { pt3dadd( 2.73665, 186.774, -0.176525, 2.5 ) }
    dend_23 { pt3dadd( 2.74472, 186.842, -0.184167, 2.5 ) }
    dend_23 { pt3dadd( 2.78039, 187.263, -0.256892, 2.5 ) }
    dend_23 { pt3dadd( 2.80728, 187.844, -0.384463, 2.36 ) }
    dend_23 { pt3dadd( 2.83845, 189.218, -0.735775, 0.29 ) }
    dend_23 { pt3dadd( 2.84009, 189.945, -0.934339, 0.29 ) }
    dend_23 { pt3dadd( 2.83738, 190.058, -0.964707, 0.29 ) }
    dend_23 { pt3dadd( 2.80534, 190.813, -1.17834, 1.33 ) }
    dend_23 { pt3dadd( 2.78234, 191.252, -1.30171, 1.55 ) }
    dend_23 { pt3dadd( 2.77854, 191.311, -1.31748, 1.55 ) }
    dend_23 { pt3dadd( 2.7508, 191.74, -1.41189, 1.25 ) }
    dend_23 { pt3dadd( 2.75669, 192.436, -1.52939, 0.66 ) }
    dend_23 { pt3dadd( 2.81615, 193.737, -1.6968, 0.29 ) }
    dend_23 { pt3dadd( 2.87726, 194.485, -1.76872, 0.88 ) }
    dend_23 { pt3dadd( 2.91806, 194.87, -1.79848, 1.11 ) }
    dend_23 { pt3dadd( 2.98142, 195.535, -1.83831, 0.96 ) }
    dend_23 { pt3dadd( 3.05887, 196.863, -1.8483, 0.29 ) }
    dend_23 { pt3dadd( 3.08498, 198.291, -1.79924, 0.29 ) }
    dend_23 { pt3dadd( 3.06203, 199.216, -1.73576, 1.33 ) }
    dend_23 { pt3dadd( 3.02613, 199.945, -1.68664, 1.92 ) }
    dend_23 { pt3dadd( 2.96597, 200.747, -1.62652, 2.21 ) }
    dend_23 { pt3dadd( 2.73962, 202.961, -1.44633, 0.37 ) }
    dend_23 { pt3dadd( 2.5711, 204.227, -1.33604, 0.37 ) }
    dend_23 { pt3dadd( 2.39982, 205.431, -1.22982, 0.37 ) }
    dend_23 { pt3dadd( 2.26919, 206.314, -1.15695, 0.22 ) }
    dend_23 { pt3dadd( 2.13164, 207.285, -1.08504, 1.33 ) }
    dend_23 { pt3dadd( 2.08581, 207.639, -1.06401, 2.06 ) }
    dend_23 { pt3dadd( 2.03209, 207.991, -1.05338, 2.21 ) }
    dend_23 { pt3dadd( 1.87533, 208.831, -1.0264, 1.69 ) }
    dend_23 { pt3dadd( 1.58248, 210.163, -0.983177, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_23 { pt3dadd( 1.4127, 210.859, -0.962207, 0.81 ) }
    dend_23 { pt3dadd( 1.31505, 211.274, -0.956967, 0.81 ) }
    dend_23 { pt3dadd( 1.11311, 212.343, -0.959365, 0.22 ) }
    dend_23 { pt3dadd( 1.01701, 213.052, -0.974239, 0.81 ) }
    dend_23 { pt3dadd( 1.00526, 213.212, -0.980076, 0.81 ) }
    dend_23 { pt3dadd( 1.00162, 213.721, -1.00675, 0.81 ) }
    dend_23 { pt3dadd( 1.02173, 214.154, -1.03028, 0.74 ) }
    dend_23 { pt3dadd( 1.12098, 215.232, -1.08547, 0.22 ) }
    dend_23 { pt3dadd( 1.21913, 216.037, -1.13505, 0.81 ) }
    dend_23 { pt3dadd( 1.25999, 216.417, -1.15991, 1.03 ) }
    dend_23 { pt3dadd( 1.3091, 216.99, -1.19779, 0.44 ) }
    dend_23 { pt3dadd( 1.37205, 218.061, -1.26711, 0.29 ) }
    dend_23 { pt3dadd( 1.4047, 218.963, -1.32837, 0.29 ) }
    dend_23 { pt3dadd( 1.41124, 220.08, -1.39956, 1.55 ) }
    dend_23 { pt3dadd( 1.41606, 220.427, -1.42326, 1.92 ) }
    dend_23 { pt3dadd( 1.41795, 220.507, -1.42905, 1.92 ) }
    dend_23 { pt3dadd( 1.42491, 220.862, -1.45431, 1.92 ) }
    dend_23 { pt3dadd( 1.44105, 223.029, -1.61222, 0.22 ) }
    dend_23 { pt3dadd( 1.42421, 224.038, -1.68213, 0.66 ) }
    dend_23 { pt3dadd( 1.40536, 224.437, -1.70583, 1.03 ) }
    dend_23 { pt3dadd( 1.35399, 225.035, -1.74344, 1.03 ) }
    dend_23 { pt3dadd( 1.26514, 225.705, -1.78502, 0.81 ) }
    dend_23 { pt3dadd( 1.13284, 226.409, -1.82772, 0.37 ) }
    dend_23 { pt3dadd( 1.05781, 226.712, -1.84309, 0.37 ) }
    dend_23 { pt3dadd( 0.922209, 227.258, -1.87156, 0.37 ) }
    dend_23 { pt3dadd( 0.736234, 228.028, -1.91209, 0.29 ) }
    dend_23 { pt3dadd( 0.542207, 228.931, -1.95912, 0.29 ) }
    dend_23 { pt3dadd( 0.531237, 228.999, -1.96306, 0.29 ) }
    dend_23 { pt3dadd( 0.380486, 230.213, -2.02871, 0.22 ) }
    dend_23 { pt3dadd( 0.373708, 230.291, -2.03342, 0.22 ) }
    dend_23 { pt3dadd( 0.336637, 230.998, -2.07872, 0.22 ) }
    dend_23 { pt3dadd( 0.336731, 231.078, -2.08658, 0.22 ) }
    dend_23 { pt3dadd( 0.382566, 231.942, -2.19406, 1.47 ) }
    dend_23 { pt3dadd( 0.415229, 232.368, -2.25879, 1.84 ) }
    dend_23 { pt3dadd( 0.420125, 232.426, -2.26865, 1.84 ) }
    dend_23 { pt3dadd( 0.457628, 232.845, -2.34021, 1.84 ) }
    dend_23 { pt3dadd( 0.580748, 234.119, -2.55811, 0.22 ) }
    dend_23 { pt3dadd( 0.686128, 235.337, -2.75648, 0.22 ) }
    dend_23 { pt3dadd( 0.732758, 235.905, -2.83265, 0.88 ) }
    dend_23 { pt3dadd( 0.75466, 236.328, -2.87828, 1.18 ) }
    dend_23 { pt3dadd( 0.760011, 236.765, -2.91022, 0.96 ) }
    dend_23 { pt3dadd( 0.756597, 236.836, -2.91229, 0.96 ) }
    dend_23 { pt3dadd( 0.6529, 237.464, -2.88639, 0.37 ) }
    dend_23 { pt3dadd( 0.534995, 237.986, -2.85099, 0.37 ) }
    dend_23 { pt3dadd( 0.425361, 238.546, -2.80537, 0.37 ) }
    dend_23 { pt3dadd( 0.381547, 238.839, -2.78498, 0.29 ) }
    dend_23 { pt3dadd( 0.319362, 239.47, -2.74996, 0.22 ) }
    dend_23 { pt3dadd( 0.295447, 239.861, -2.73369, 0.52 ) }
    dend_23 { pt3dadd( 0.283414, 240.672, -2.71474, 0.22 ) }
    dend_23 { pt3dadd( 0.302035, 241.304, -2.71474, 0.22 ) }
    dend_23 { pt3dadd( 0.352385, 241.878, -2.73977, 1.11 ) }
    dend_23 { pt3dadd( 0.405261, 242.412, -2.80209, 1.47 ) }
    dend_23 { pt3dadd( 0.410558, 242.489, -2.81561, 1.47 ) }
    dend_23 { pt3dadd( 0.422854, 242.856, -2.89657, 1.33 ) }
    dend_23 { pt3dadd( 0.419008, 242.958, -2.92338, 1.33 ) }
    dend_23 { pt3dadd( 0.329624, 243.855, -3.16557, 0.74 ) }
    dend_23 { pt3dadd( 0.221099, 244.892, -3.45297, 0.29 ) }
    dend_23 { pt3dadd( 0.163756, 245.477, -3.60752, 0.37 ) }
    dend_23 { pt3dadd( 0.159966, 245.537, -3.62191, 0.37 ) }
    dend_23 { pt3dadd( 0.143471, 246.032, -3.72384, 0.37 ) }
    dend_23 { pt3dadd( 0.140952, 246.752, -3.85064, 0.22 ) }
    dend_23 { pt3dadd( 0.172738, 247.607, -3.97478, 1.11 ) }
    dend_23 { pt3dadd( 0.214966, 248.12, -4.04674, 1.4 ) }
    dend_23 { pt3dadd( 0.267425, 248.602, -4.1202, 1.18 ) }
    dend_23 { pt3dadd( 0.342995, 249.253, -4.22861, 0.44 ) }
    dend_23 { pt3dadd( 0.479291, 250.275, -4.43098, 0.22 ) }
    dend_23 { pt3dadd( 0.599479, 250.956, -4.5712, 0.74 ) }
    dend_23 { pt3dadd( 0.678764, 251.372, -4.64899, 1.33 ) }
    dend_23 { pt3dadd( 0.690252, 251.429, -4.65938, 1.33 ) }
    dend_23 { pt3dadd( 0.833771, 252.144, -4.77585, 1.62 ) }
    dend_23 { pt3dadd( 0.912038, 252.534, -4.82915, 1.62 ) }
    dend_23 { pt3dadd( 1.24132, 254.131, -5.00023, 0.29 ) }
    dend_23 { pt3dadd( 1.44472, 255.191, -5.0904, 0.29 ) }
    dend_23 { pt3dadd( 1.45557, 255.259, -5.09577, 0.29 ) }
    dend_23 { pt3dadd( 1.58468, 256.43, -5.17288, 0.29 ) }
    dend_23 { pt3dadd( 1.60972, 257.005, -5.19758, 1.03 ) }
    dend_23 { pt3dadd( 1.60799, 257.085, -5.1998, 1.03 ) }
    dend_23 { pt3dadd( 1.54561, 257.736, -5.21907, 1.18 ) }
    dend_23 { pt3dadd( 1.3941, 258.896, -5.25242, 0.29 ) }
    dend_23 { pt3dadd( 1.26983, 259.819, -5.27488, 0.29 ) }
    dend_23 { pt3dadd( 1.14617, 260.67, -5.29258, 1.18 ) }
    dend_23 { pt3dadd( 1.09832, 261.038, -5.29796, 1.47 ) }
    dend_23 { pt3dadd( 1.03283, 261.591, -5.30252, 1.25 ) }
    dend_23 { pt3dadd( 0.992274, 262.043, -5.30203, 1.33 ) }
    dend_23 { pt3dadd( 0.933705, 263.258, -5.28429, 0.22 ) }
    dend_23 { pt3dadd( 0.936304, 263.407, -5.28304, 0.22 ) }
    dend_23 { pt3dadd( 1.05457, 264.505, -5.2574, 0.22 ) }
    dend_23 { pt3dadd( 1.06733, 264.583, -5.25428, 0.22 ) }
    dend_23 { pt3dadd( 1.21915, 265.34, -5.21287, 0.74 ) }
    dend_23 { pt3dadd( 1.29806, 265.702, -5.1888, 1.18 ) }
    dend_23 { pt3dadd( 1.37208, 266.137, -5.15721, 1.18 ) }
    dend_23 { pt3dadd( 1.51965, 267.429, -5.0682, 0.22 ) }
    dend_23 { pt3dadd( 1.52522, 267.497, -5.06347, 0.22 ) }
    dend_23 { pt3dadd( 1.56783, 268.2, -5.01969, 0.66 ) }
    dend_23 { pt3dadd( 1.58857, 268.567, -5.0197, 0.66 ) }
    dend_23 { pt3dadd( 1.6794, 269.849, -5.08155, 0.22 ) }
    dend_23 { pt3dadd( 1.73418, 270.559, -5.14003, 1.25 ) }
    dend_23 { pt3dadd( 1.78669, 271.184, -5.21037, 1.55 ) }
    dend_23 { pt3dadd( 1.86119, 271.878, -5.29466, 1.69 ) }
    dend_23 { pt3dadd( 2.04672, 273.28, -5.48185, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_23 { pt3dadd( 2.24284, 274.655, -5.67048, 0.22 ) }
    dend_23 { pt3dadd( 2.33321, 275.246, -5.75432, 0.66 ) }
    dend_23 { pt3dadd( 2.40297, 275.673, -5.80993, 0.81 ) }
    dend_23 { pt3dadd( 2.41309, 275.741, -5.81751, 0.81 ) }
    dend_23 { pt3dadd( 2.60824, 277.201, -5.93587, 0.22 ) }
    dend_23 { pt3dadd( 2.71468, 278.058, -5.96567, 1.03 ) }
    dend_23 { pt3dadd( 2.73816, 278.276, -5.97667, 1.33 ) }
    dend_23 { pt3dadd( 2.8689, 279.593, -6.04755, 0.22 ) }
    dend_23 { pt3dadd( 2.92286, 280.167, -6.07782, 0.81 ) }
    dend_23 { pt3dadd( 2.96281, 280.662, -6.10187, 1.03 ) }
    dend_23 { pt3dadd( 2.98989, 281.068, -6.11939, 0.74 ) }
    dend_23 { pt3dadd( 3.06406, 282.608, -6.18653, 0.22 ) }
    dend_23 { pt3dadd( 3.07622, 283.341, -6.21666, 0.44 ) }
    dend_23 { pt3dadd( 3.04714, 284.229, -6.25045, 0.22 ) }
    dend_23 { pt3dadd( 3.01299, 285.017, -6.27679, 1.11 ) }
    dend_23 { pt3dadd( 2.98857, 285.443, -6.28813, 1.33 ) }
    dend_23 { pt3dadd( 2.94908, 286.097, -6.30244, 0.37 ) }
    dend_23 { pt3dadd( 2.90123, 286.949, -6.3114, 0.15 ) }
    dend_23 { pt3dadd( 2.88041, 287.59, -6.32475, 0.74 ) }
    dend_23 { pt3dadd( 2.88477, 287.661, -6.32742, 0.74 ) }
    dend_23 { pt3dadd( 2.91868, 287.947, -6.34082, 0.74 ) }
    dend_23 { pt3dadd( 3.09493, 289.066, -6.39943, 0.22 ) }
    dend_23 { pt3dadd( 3.20877, 289.692, -6.43368, 1.18 ) }
    dend_23 { pt3dadd( 3.29635, 290.139, -6.46076, 1.62 ) }
    dend_23 { pt3dadd( 3.67775, 292.149, -6.59089, 0.22 ) }
    dend_23 { pt3dadd( 3.79073, 292.785, -6.63298, 0.29 ) }
    dend_23 { pt3dadd( 3.80182, 292.855, -6.63758, 0.29 ) }
    dend_23 { pt3dadd( 3.9174, 293.704, -6.69019, 0.29 ) }
    dend_23 { pt3dadd( 4.01681, 294.528, -6.74442, 0.59 ) }
    dend_23 { pt3dadd( 4.05955, 295.094, -6.79309, 1.11 ) }
    dend_23 { pt3dadd( 4.06342, 295.191, -6.80228, 1.11 ) }
    dend_23 { pt3dadd( 4.09581, 295.754, -6.85541, 1.55 ) }
    dend_23 { pt3dadd( 4.13094, 296.371, -6.91208, 1.55 ) }
    dend_23 { pt3dadd( 4.13401, 296.429, -6.91719, 1.55 ) }
    dend_23 { pt3dadd( 4.21277, 298.351, -7.06673, 0.22 ) }
    dend_23 { pt3dadd( 4.2729, 299.741, -7.16197, 0.22 ) }
    dend_23 { pt3dadd( 4.35619, 300.706, -7.21935, 1.4 ) }
    dend_23 { pt3dadd( 4.3823, 300.927, -7.23049, 1.77 ) }
    dend_23 { pt3dadd( 4.46807, 301.567, -7.25637, 1.4 ) }
    dend_23 { pt3dadd( 4.60129, 302.339, -7.27692, 0.74 ) }
    dend_23 { pt3dadd( 4.82474, 303.349, -7.28657, 0.29 ) }
    dend_23 { pt3dadd( 5.2924, 305.157, -7.3057, 0.22 ) }
    dend_23 { pt3dadd( 5.49539, 305.875, -7.31364, 0.66 ) }
    dend_23 { pt3dadd( 5.60086, 306.22, -7.31828, 0.66 ) }
    dend_23 { pt3dadd( 5.9009, 307.092, -7.32979, 0.22 ) }
    dend_23 { pt3dadd( 5.92474, 307.159, -7.32877, 0.22 ) }
    dend_23 { pt3dadd( 6.11205, 307.735, -7.29857, 0.52 ) }
    dend_23 { pt3dadd( 6.13175, 307.811, -7.29106, 0.52 ) }
    dend_23 { pt3dadd( 6.21973, 308.16, -7.25011, 0.52 ) }
    dend_23 { pt3dadd( 6.35595, 308.648, -7.15617, 0.22 ) }
    dend_23 { pt3dadd( 6.63931, 309.549, -6.92774, 1.03 ) }
    dend_23 { pt3dadd( 6.81894, 310.018, -6.78357, 1.62 ) }
    dend_23 { pt3dadd( 6.9847, 310.43, -6.64697, 1.47 ) }
    dend_23 { pt3dadd( 7.22267, 311.021, -6.43343, 1.33 ) }
    dend_23 { pt3dadd( 7.78117, 312.443, -5.85945, 0.22 ) }
    dend_23 { pt3dadd( 8.14397, 313.362, -5.46376, 1.18 ) }
    dend_23 { pt3dadd( 8.61908, 314.513, -4.953, 0.22 ) }
    dend_23 { pt3dadd( 8.82172, 314.996, -4.72843, 0.22 ) }
    dend_23 { pt3dadd( 9.09819, 315.65, -4.41677, 0.81 ) }
    dend_23 { pt3dadd( 9.69451, 317.044, -3.75362, 0.22 ) }
    dend_23 { pt3dadd( 9.71759, 317.104, -3.72645, 0.22 ) }
    dend_23 { pt3dadd( 9.8727, 317.549, -3.52198, 0.81 ) }
    dend_23 { pt3dadd( 9.89209, 317.61, -3.49483, 0.81 ) }
    dend_23 { pt3dadd( 9.99784, 317.875, -3.37348, 1.11 ) }
    dend_23 { pt3dadd( 10.204, 318.288, -3.23126, 0.88 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 65/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -23.554, -36.5314, 18.5651, 0.29 ) }
    dend_18 { pt3dadd( -24.6461, -36.5706, 19.2742, 0.29 ) }
    dend_18 { pt3dadd( -25.8711, -36.6266, 20.2932, 0.29 ) }
    dend_18 { pt3dadd( -26.4737, -36.7116, 20.762, 0.59 ) }
    dend_18 { pt3dadd( -27.4542, -36.9742, 21.4325, 0.59 ) }
    dend_18 { pt3dadd( -27.5543, -37.01, 21.4876, 0.59 ) }
    dend_18 { pt3dadd( -29.2199, -37.6867, 22.2802, 0.59 ) }
    dend_18 { pt3dadd( -29.2759, -37.7136, 22.312, 0.59 ) }
    dend_18 { pt3dadd( -30.0327, -38.1618, 22.8648, 0.37 ) }
    dend_18 { pt3dadd( -30.644, -38.592, 23.3297, 0.29 ) }
    dend_18 { pt3dadd( -31.1889, -39.0045, 23.7234, 0.29 ) }
    dend_18 { pt3dadd( -31.2294, -39.0367, 23.7529, 0.29 ) }
    dend_18 { pt3dadd( -32.2314, -39.927, 24.5093, 0.74 ) }
    dend_18 { pt3dadd( -32.4733, -40.1659, 24.7516, 1.03 ) }
    dend_18 { pt3dadd( -33.0187, -40.8148, 25.4872, 0.29 ) }
    dend_18 { pt3dadd( -33.0765, -40.8924, 25.5721, 0.29 ) }
    dend_18 { pt3dadd( -33.42, -41.3968, 26.0656, 0.37 ) }
    dend_18 { pt3dadd( -33.6789, -41.7744, 26.3747, 0.52 ) }
    dend_18 { pt3dadd( -33.8983, -42.0951, 26.5581, 0.52 ) }
    dend_18 { pt3dadd( -34.4223, -42.6265, 26.8087, 0.29 ) }
    dend_18 { pt3dadd( -35.1111, -43.0405, 26.9766, 0.29 ) }
    dend_18 { pt3dadd( -35.5289, -43.198, 27.0502, 0.59 ) }
    dend_18 { pt3dadd( -35.8281, -43.2696, 27.0907, 0.88 ) }
    dend_18 { pt3dadd( -36.1305, -43.3298, 27.1255, 1.03 ) }
    dend_18 { pt3dadd( -37.5426, -43.607, 27.3491, 0.29 ) }
    dend_18 { pt3dadd( -38.4001, -43.7716, 27.5302, 0.44 ) }
    dend_18 { pt3dadd( -38.8957, -43.9047, 27.674, 0.74 ) }
    dend_18 { pt3dadd( -38.986, -43.9423, 27.7049, 0.74 ) }
    dend_18 { pt3dadd( -39.5112, -44.2004, 27.9062, 0.66 ) }
    dend_18 { pt3dadd( -40.3771, -44.7216, 28.2981, 0.66 ) }
    dend_18 { pt3dadd( -40.4251, -44.7624, 28.3272, 0.66 ) }
    dend_18 { pt3dadd( -40.7959, -45.1245, 28.5586, 0.29 ) }
    dend_18 { pt3dadd( -41.5452, -45.9261, 29.0686, 0.22 ) }
    dend_18 { pt3dadd( -48.4004, -50.44, 34.6876, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 99/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -23.554, -36.5314, 18.5651, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_15 { pt3dadd( -24.1395, -35.8494, 20.0313, 0.74 ) }
    dend_15 { pt3dadd( -24.9365, -34.9653, 21.7144, 0.66 ) }
    dend_15 { pt3dadd( -24.9871, -34.9091, 21.8213, 0.66 ) }
    dend_15 { pt3dadd( -25.223, -34.6474, 22.3196, 0.66 ) }
    dend_15 { pt3dadd( -25.2511, -34.6163, 22.3787, 0.66 ) }
    dend_15 { pt3dadd( -25.4314, -34.4163, 22.7595, 0.52 ) }
    dend_15 { pt3dadd( -25.6, -34.1566, 22.9996, 0.52 ) }
    dend_15 { pt3dadd( -30.2053, -30.3006, 30.9464, 0.52 ) }
    dend_15 { pt3dadd( -33.9893, -25.6264, 38.8646, 0.52 ) }
    dend_15 { pt3dadd( -37.3037, -22.6899, 47.8057, 0.52 ) }
    dend_15 { pt3dadd( -38.7293, -18.8628, 56.892, 0.52 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 11/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -7.05654, -22.553, 0.911928, 0.96 ) }
    dend_7 { pt3dadd( -7.64862, -23.9311, 0.941366, 0.96 ) }
    dend_7 { pt3dadd( -8.1724, -25.305, 0.965416, 0.96 ) }
    dend_7 { pt3dadd( -8.22002, -25.4617, 0.967467, 0.96 ) }
    dend_7 { pt3dadd( -8.41841, -26.2683, 0.949369, 0.96 ) }
    dend_7 { pt3dadd( -8.71988, -27.6536, 0.895459, 1.11 ) }
    dend_7 { pt3dadd( -9.03448, -29.3109, 0.763651, 1.11 ) }
    dend_7 { pt3dadd( -9.04332, -29.3905, 0.75572, 1.11 ) }
    dend_7 { pt3dadd( -9.16043, -31.0434, 0.562934, 1.03 ) }
    dend_7 { pt3dadd( -9.22704, -32.2364, 0.406186, 1.99 ) }
    dend_7 { pt3dadd( -9.22913, -32.3158, 0.393248, 1.99 ) }
    dend_7 { pt3dadd( -9.22658, -33.4093, 0.146408, 2.87 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 23/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -7.05654, -22.553, 0.911928, 1.92 ) }
    dend_2 { pt3dadd( -6.67402, -24.5087, 1.01778, 1.92 ) }
    dend_2 { pt3dadd( -6.31778, -26.2688, 1.10283, 1.92 ) }
    dend_2 { pt3dadd( -5.98775, -27.8695, 1.17186, 1.92 ) }
    dend_2 { pt3dadd( -5.69088, -29.3526, 1.22862, 2.14 ) }
    dend_2 { pt3dadd( -5.40109, -30.7438, 1.27518, 1.62 ) }
    dend_2 { pt3dadd( -5.08769, -32.1385, 1.31218, 1.99 ) }
    dend_2 { pt3dadd( -4.84774, -33.0751, 1.31225, 2.73 ) }
    dend_2 { pt3dadd( -4.53774, -34.1163, 1.31129, 2.36 ) }
    dend_2 { pt3dadd( -4.1431, -35.2724, 1.34495, 1.99 ) }
    dend_2 { pt3dadd( -3.56684, -36.7795, 1.432, 1.92 ) }
    dend_2 { pt3dadd( -3.18225, -37.677, 1.50849, 2.28 ) }
    dend_2 { pt3dadd( -2.77634, -38.5772, 1.62674, 2.5 ) }
    dend_2 { pt3dadd( -2.38636, -39.438, 1.78452, 2.58 ) }
    dend_2 { pt3dadd( -1.77358, -40.8372, 2.14644, 1.69 ) }
    dend_2 { pt3dadd( -1.75204, -40.8895, 2.16281, 1.69 ) }
    dend_2 { pt3dadd( -1.33507, -42.1345, 2.58482, 1.47 ) }
    dend_2 { pt3dadd( -0.901075, -43.8834, 3.18809, 1.25 ) }
    dend_2 { pt3dadd( -0.742817, -44.8646, 3.51652, 1.62 ) }
    dend_2 { pt3dadd( -0.663468, -45.9029, 3.83507, 1.62 ) }
    dend_2 { pt3dadd( -0.669462, -47.0169, 4.12814, 1.25 ) }
    dend_2 { pt3dadd( -0.776952, -48.2908, 4.43, 1.25 ) }
    dend_2 { pt3dadd( -1.03204, -49.5259, 4.67632, 1.77 ) }
    dend_2 { pt3dadd( -1.26065, -50.2118, 4.76711, 1.92 ) }
    dend_2 { pt3dadd( -1.57332, -50.9849, 4.82541, 1.92 ) }
    dend_2 { pt3dadd( -1.91814, -51.7321, 4.85168, 2.06 ) }
    dend_2 { pt3dadd( -2.37863, -52.6291, 4.87419, 1.92 ) }
    dend_2 { pt3dadd( -2.98302, -53.7589, 4.88926, 1.77 ) }
    dend_2 { pt3dadd( -3.6302, -54.9707, 4.88926, 1.55 ) }
    dend_2 { pt3dadd( -4.39991, -56.4464, 4.88926, 1.4 ) }
    dend_2 { pt3dadd( -4.99192, -57.6271, 4.91903, 1.4 ) }
    dend_2 { pt3dadd( -5.4626, -58.6491, 4.96659, 1.84 ) }
    dend_2 { pt3dadd( -5.77277, -59.4522, 5.04086, 1.77 ) }
    dend_2 { pt3dadd( -6.08763, -60.5476, 5.19166, 1.25 ) }
    dend_2 { pt3dadd( -6.10075, -60.624, 5.2052, 1.25 ) }
    dend_2 { pt3dadd( -6.20471, -62.057, 5.51132, 0.88 ) }
    dend_2 { pt3dadd( -6.17716, -62.7525, 5.66772, 1.62 ) }
    dend_2 { pt3dadd( -6.01797, -64.0075, 5.93648, 1.92 ) }
    dend_2 { pt3dadd( -5.8238, -65.1051, 6.14342, 1.92 ) }
    dend_2 { pt3dadd( -5.63134, -66.1399, 6.30345, 1.77 ) }
    dend_2 { pt3dadd( -5.62005, -66.2076, 6.31098, 1.77 ) }
    dend_2 { pt3dadd( -5.40549, -67.6228, 6.40181, 1.62 ) }
    dend_2 { pt3dadd( -5.27231, -68.7623, 6.41478, 1.33 ) }
    dend_2 { pt3dadd( -5.17499, -69.8314, 6.37382, 1.18 ) }
    dend_2 { pt3dadd( -5.1029, -70.8515, 6.31726, 1.18 ) }
    dend_2 { pt3dadd( -5.04116, -72.0075, 6.23606, 1.55 ) }
    dend_2 { pt3dadd( -5.01764, -73.4289, 6.10432, 1.62 ) }
    dend_2 { pt3dadd( -5.05966, -74.6651, 5.96552, 2.14 ) }
    dend_2 { pt3dadd( -5.12806, -75.6011, 5.85403, 2.36 ) }
    dend_2 { pt3dadd( -5.21349, -76.4873, 5.74674, 2.58 ) }
    dend_2 { pt3dadd( -5.28095, -77.1459, 5.67264, 3.02 ) }
    dend_2 { pt3dadd( -5.43897, -78.7236, 5.54171, 2.21 ) }
    dend_2 { pt3dadd( -5.55196, -80.1176, 5.46732, 1.77 ) }
    dend_2 { pt3dadd( -5.62546, -81.3793, 5.4382, 1.77 ) }
    dend_2 { pt3dadd( -5.65947, -82.7814, 5.455, 1.84 ) }
    dend_2 { pt3dadd( -5.61823, -84.4279, 5.57578, 1.84 ) }
    dend_2 { pt3dadd( -5.4925, -86.095, 5.79741, 1.18 ) }
    dend_2 { pt3dadd( -5.25067, -87.8255, 6.13584, 0.96 ) }
    dend_2 { pt3dadd( -5.2378, -87.8926, 6.15579, 0.96 ) }
    dend_2 { pt3dadd( -4.95436, -89.0434, 6.66666, 1.33 ) }
    dend_2 { pt3dadd( -4.61536, -90.193, 7.31978, 1.84 ) }
    dend_2 { pt3dadd( -4.34996, -91.0835, 7.89522, 1.84 ) }
    dend_2 { pt3dadd( -4.11057, -91.9553, 8.4571, 1.77 ) }
    dend_2 { pt3dadd( -3.73999, -93.5608, 9.39825, 1.69 ) }
    dend_2 { pt3dadd( -3.46, -95.0994, 10.1153, 0.74 ) }
    dend_2 { pt3dadd( -3.3526, -95.9926, 10.409, 0.74 ) }
    dend_2 { pt3dadd( -3.26486, -97.1116, 10.6528, 1.18 ) }
    dend_2 { pt3dadd( -3.21838, -98.1708, 10.7712, 1.47 ) }
    dend_2 { pt3dadd( -3.22264, -99.2084, 10.7271, 1.62 ) }
    dend_2 { pt3dadd( -3.26676, -99.9807, 10.5559, 1.92 ) }
    dend_2 { pt3dadd( -3.33257, -100.595, 10.376, 1.92 ) }
    dend_2 { pt3dadd( -3.33994, -100.651, 10.3604, 1.92 ) }
    dend_2 { pt3dadd( -3.44571, -101.392, 10.1838, 1.92 ) }
    dend_2 { pt3dadd( -3.61664, -102.465, 9.99542, 1.33 ) }
    dend_2 { pt3dadd( -3.82164, -103.525, 9.84065, 1.47 ) }
    dend_2 { pt3dadd( -4.03846, -104.601, 9.70058, 1.92 ) }
    dend_2 { pt3dadd( -4.18474, -105.393, 9.60581, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( -4.35871, -106.46, 9.49588, 1.99 ) }
    dend_2 { pt3dadd( -4.51641, -107.789, 9.38502, 1.99 ) }
    dend_2 { pt3dadd( -4.61871, -109.323, 9.2778, 1.99 ) }
    dend_2 { pt3dadd( -4.62255, -109.688, 9.26028, 2.36 ) }
    dend_2 { pt3dadd( -4.60194, -110.559, 9.21761, 1.62 ) }
    dend_2 { pt3dadd( -4.5532, -111.481, 9.17508, 1.25 ) }
    dend_2 { pt3dadd( -4.46381, -112.626, 9.12388, 1.11 ) }
    dend_2 { pt3dadd( -4.39647, -113.594, 9.08293, 0.81 ) }
    dend_2 { pt3dadd( -4.33612, -114.855, 9.04688, 0.66 ) }
    dend_2 { pt3dadd( -4.34585, -115.946, 9.02321, 1.55 ) }
    dend_2 { pt3dadd( -4.3497, -116.017, 9.02219, 1.55 ) }
    dend_2 { pt3dadd( -4.39989, -116.6, 9.06069, 2.21 ) }
    dend_2 { pt3dadd( -4.49231, -117.417, 9.16667, 1.92 ) }
    dend_2 { pt3dadd( -4.61178, -118.493, 9.35323, 1.62 ) }
    dend_2 { pt3dadd( -4.71668, -119.491, 9.56295, 1.4 ) }
    dend_2 { pt3dadd( -4.80088, -120.597, 9.88628, 1.4 ) }
    dend_2 { pt3dadd( -4.90906, -122.338, 10.482, 1.33 ) }
    dend_2 { pt3dadd( -4.93273, -123.196, 10.8058, 0.96 ) }
    dend_2 { pt3dadd( -4.90421, -124.489, 11.323, 0.74 ) }
    dend_2 { pt3dadd( -4.89824, -124.567, 11.3573, 0.74 ) }
    dend_2 { pt3dadd( -4.63574, -126.338, 12.1874, 0.66 ) }
    dend_2 { pt3dadd( -4.61793, -126.397, 12.2186, 0.66 ) }
    dend_2 { pt3dadd( -4.10484, -127.571, 12.8481, 1.69 ) }
    dend_2 { pt3dadd( -3.78899, -128.224, 13.2075, 2.21 ) }
    dend_2 { pt3dadd( -3.3055, -129.245, 13.7493, 3.02 ) }
    dend_2 { pt3dadd( -3.02449, -129.914, 14.0676, 3.02 ) }
    dend_2 { pt3dadd( -2.26929, -132.056, 14.9294, 0.52 ) }
    dend_2 { pt3dadd( -2.08072, -132.861, 15.1857, 0.52 ) }
    dend_2 { pt3dadd( -1.96916, -133.865, 15.4199, 2.36 ) }
    dend_2 { pt3dadd( -1.96172, -134.815, 15.5516, 3.09 ) }
    dend_2 { pt3dadd( -2.00051, -135.271, 15.571, 3.24 ) }
    dend_2 { pt3dadd( -2.14098, -136.198, 15.56, 3.02 ) }
    dend_2 { pt3dadd( -2.5703, -138.244, 15.419, 1.11 ) }
    dend_2 { pt3dadd( -2.77566, -139.315, 15.3471, 0.96 ) }
    dend_2 { pt3dadd( -2.8993, -140.104, 15.2944, 1.25 ) }
    dend_2 { pt3dadd( -3.01673, -141.188, 15.2508, 1.18 ) }
    dend_2 { pt3dadd( -3.06427, -142.006, 15.2447, 0.52 ) }
    dend_2 { pt3dadd( -3.06357, -142.077, 15.2475, 0.52 ) }
    dend_2 { pt3dadd( -2.95607, -142.841, 15.3401, 1.4 ) }
    dend_2 { pt3dadd( -2.94045, -142.897, 15.3476, 1.4 ) }
    dend_2 { pt3dadd( -2.54972, -143.835, 15.4645, 2.14 ) }
    dend_2 { pt3dadd( -2.24129, -144.487, 15.5302, 2.14 ) }
    dend_2 { pt3dadd( -2.02529, -144.96, 15.5613, 2.36 ) }
    dend_2 { pt3dadd( -1.6571, -145.849, 15.6007, 1.33 ) }
    dend_2 { pt3dadd( -1.26387, -146.927, 15.6072, 0.81 ) }
    dend_2 { pt3dadd( -0.849228, -148.29, 15.5547, 0.81 ) }
    dend_2 { pt3dadd( -0.53875, -149.612, 15.4506, 0.81 ) }
    dend_2 { pt3dadd( -0.277865, -151.019, 15.3407, 1.62 ) }
    dend_2 { pt3dadd( -0.16242, -151.773, 15.2844, 1.92 ) }
    dend_2 { pt3dadd( -0.0102291, -152.937, 15.2475, 1.25 ) }
    dend_2 { pt3dadd( 0.120993, -154.053, 15.2539, 0.96 ) }
    dend_2 { pt3dadd( 0.292397, -155.564, 15.3139, 0.96 ) }
    dend_2 { pt3dadd( 0.483278, -156.872, 15.4142, 0.88 ) }
    dend_2 { pt3dadd( 0.72332, -158.208, 15.579, 1.62 ) }
    dend_2 { pt3dadd( 1.06035, -159.741, 15.819, 1.84 ) }
    dend_2 { pt3dadd( 1.25988, -160.568, 16.023, 1.92 ) }
    dend_2 { pt3dadd( 1.27784, -160.641, 16.0466, 1.92 ) }
    dend_2 { pt3dadd( 1.54191, -161.732, 16.4466, 1.62 ) }
    dend_2 { pt3dadd( 1.83939, -163.084, 16.958, 0.59 ) }
    dend_2 { pt3dadd( 2.04976, -164.138, 17.3518, 0.59 ) }
    dend_2 { pt3dadd( 2.35473, -165.723, 17.8727, 0.52 ) }
    dend_2 { pt3dadd( 2.55453, -166.773, 18.2381, 1.69 ) }
    dend_2 { pt3dadd( 2.6787, -167.452, 18.4825, 2.5 ) }
    dend_2 { pt3dadd( 2.77264, -168.05, 18.7139, 2.5 ) }
    dend_2 { pt3dadd( 2.88708, -168.769, 18.9924, 2.5 ) }
    dend_2 { pt3dadd( 3.06297, -169.853, 19.3573, 1.77 ) }
    // Section: dend_67, id: dend_67, parent: dend_27 (entry count 66/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -9.86611, 102.92, -20.1616, 0.59 ) }
    dend_67 { pt3dadd( -10.7343, 103.764, -20.6365, 0.59 ) }
    dend_67 { pt3dadd( -11.3972, 104.534, -21.0996, 0.44 ) }
    dend_67 { pt3dadd( -11.4198, 104.656, -21.7381, 0.74 ) }
    dend_67 { pt3dadd( -11.4437, 104.863, -22.7382, 0.74 ) }
    dend_67 { pt3dadd( -11.4526, 104.895, -22.8897, 0.74 ) }
    dend_67 { pt3dadd( -11.5293, 105.074, -23.6535, 0.88 ) }
    dend_67 { pt3dadd( -11.5355, 105.089, -23.7215, 0.88 ) }
    dend_67 { pt3dadd( -12.1012, 106.311, -29.1514, 1.62 ) }
    dend_67 { pt3dadd( -12.3209, 106.655, -30.6819, 1.4 ) }
    dend_67 { pt3dadd( -12.627, 106.993, -32.2593, 0.37 ) }
    dend_67 { pt3dadd( -12.8349, 107.175, -33.1087, 0.74 ) }
    dend_67 { pt3dadd( -13.3766, 107.57, -34.865, 0.29 ) }
    dend_67 { pt3dadd( -13.6309, 107.751, -35.4907, 1.4 ) }
    dend_67 { pt3dadd( -13.9402, 107.961, -35.991, 1.84 ) }
    dend_67 { pt3dadd( -15.0178, 108.654, -37.8648, 0.44 ) }
    dend_67 { pt3dadd( -15.189, 108.778, -38.187, 0.29 ) }
    dend_67 { pt3dadd( -15.4673, 108.974, -38.7269, 0.29 ) }
    dend_67 { pt3dadd( -15.7379, 109.166, -39.2301, 0.59 ) }
    dend_67 { pt3dadd( -16.6677, 109.868, -41.0327, 0.44 ) }
    dend_67 { pt3dadd( -16.9853, 110.144, -41.6148, 0.22 ) }
    dend_67 { pt3dadd( -17.2355, 110.393, -42.0197, 0.74 ) }
    dend_67 { pt3dadd( -17.6487, 110.84, -42.7558, 0.15 ) }
    dend_67 { pt3dadd( -17.7138, 110.911, -42.8732, 0.15 ) }
    dend_67 { pt3dadd( -17.8689, 111.09, -43.1369, 0.15 ) }
    dend_67 { pt3dadd( -18.4524, 111.807, -43.9947, 1.47 ) }
    dend_67 { pt3dadd( -18.7551, 112.179, -44.4187, 1.62 ) }
    dend_67 { pt3dadd( -19.8906, 113.533, -46.0608, 0.22 ) }
    dend_67 { pt3dadd( -19.9239, 113.574, -46.1106, 0.22 ) }
    dend_67 { pt3dadd( -20.3405, 114.042, -46.722, 0.22 ) }
    dend_67 { pt3dadd( -20.8928, 114.625, -47.5183, 1.25 ) }
    dend_67 { pt3dadd( -21.1506, 114.903, -47.9366, 1.4 ) }
    dend_67 { pt3dadd( -21.9308, 115.783, -49.2647, 0.22 ) }
    dend_67 { pt3dadd( -21.9788, 115.844, -49.3556, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_67 { pt3dadd( -22.5786, 116.69, -50.6547, 1.47 ) }
    dend_67 { pt3dadd( -22.7486, 116.957, -51.0523, 1.99 ) }
    dend_67 { pt3dadd( -23.5828, 118.469, -53.1394, 0.37 ) }
    dend_67 { pt3dadd( -23.7799, 118.877, -53.6512, 0.29 ) }
    dend_67 { pt3dadd( -24.0891, 119.587, -54.453, 1.18 ) }
    dend_67 { pt3dadd( -24.4235, 120.41, -55.3133, 0.52 ) }
    dend_67 { pt3dadd( -24.6984, 121.203, -56.0466, 1.55 ) }
    dend_67 { pt3dadd( -24.7891, 121.49, -56.2823, 1.84 ) }
    dend_67 { pt3dadd( -25.2916, 123.225, -57.4202, 0.22 ) }
    dend_67 { pt3dadd( -25.3047, 123.282, -57.4563, 0.22 ) }
    dend_67 { pt3dadd( -25.3884, 123.798, -57.7446, 0.22 ) }
    dend_67 { pt3dadd( -25.4028, 124.418, -58.0555, 1.4 ) }
    dend_67 { pt3dadd( -25.3983, 124.489, -58.0897, 1.4 ) }
    dend_67 { pt3dadd( -25.3583, 124.892, -58.2639, 1.4 ) }
    dend_67 { pt3dadd( -25.12, 126.413, -58.8971, 0.15 ) }
    dend_67 { pt3dadd( -25.0166, 127.053, -59.1873, 0.74 ) }
    dend_67 { pt3dadd( -24.7613, 128.535, -59.9063, 0.15 ) }
    dend_67 { pt3dadd( -24.6649, 129.053, -60.1687, 0.74 ) }
    dend_67 { pt3dadd( -24.6081, 129.311, -60.3, 0.88 ) }
    dend_67 { pt3dadd( -24.258, 130.602, -60.9413, 0.15 ) }
    dend_67 { pt3dadd( -24.2404, 130.652, -60.9685, 0.15 ) }
    dend_67 { pt3dadd( -24.0817, 131.025, -61.2084, 0.37 ) }
    dend_67 { pt3dadd( -24.0251, 131.108, -61.3089, 0.37 ) }
    dend_67 { pt3dadd( -23.6524, 131.466, -62.002, 0.22 ) }
    dend_67 { pt3dadd( -23.3343, 131.728, -62.599, 0.59 ) }
    dend_67 { pt3dadd( -22.474, 132.284, -64.2315, 1.69 ) }
    dend_67 { pt3dadd( -22.3807, 132.337, -64.4161, 1.69 ) }
    dend_67 { pt3dadd( -20.9387, 132.957, -67.4622, 0.22 ) }
    dend_67 { pt3dadd( -20.6694, 133.031, -68.0653, 0.96 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 29/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -9.86611, 102.92, -20.1616, 2.65 ) }
    dend_28 { pt3dadd( -9.74065, 103.79, -19.6738, 2.65 ) }
    dend_28 { pt3dadd( -9.67061, 104.779, -19.2302, 2.06 ) }
    dend_28 { pt3dadd( -9.63021, 106.536, -18.5645, 1.92 ) }
    dend_28 { pt3dadd( -9.63065, 106.592, -18.5456, 1.92 ) }
    dend_28 { pt3dadd( -9.67781, 107.602, -18.2379, 0.74 ) }
    dend_28 { pt3dadd( -9.77519, 109.07, -17.8232, 0.52 ) }
    dend_28 { pt3dadd( -9.92968, 110.23, -17.5361, 0.52 ) }
    dend_28 { pt3dadd( -10.0257, 110.782, -17.4441, 0.52 ) }
    dend_28 { pt3dadd( -10.067, 111.015, -17.436, 0.52 ) }
    dend_28 { pt3dadd( -10.1753, 111.744, -17.426, 0.52 ) }
    dend_28 { pt3dadd( -10.1872, 111.857, -17.4272, 0.52 ) }
    dend_28 { pt3dadd( -10.2197, 112.692, -17.4593, 0.44 ) }
    dend_28 { pt3dadd( -10.2169, 113.356, -17.4577, 0.44 ) }
    dend_28 { pt3dadd( -10.1643, 114.62, -17.4446, 1.84 ) }
    dend_28 { pt3dadd( -10.1055, 115.655, -17.3991, 2.73 ) }
    dend_28 { pt3dadd( -10.0696, 116.207, -17.3596, 3.54 ) }
    dend_28 { pt3dadd( -10.0279, 116.934, -17.2921, 3.9 ) }
    dend_28 { pt3dadd( -10.0023, 117.515, -17.2244, 4.05 ) }
    dend_28 { pt3dadd( -9.99401, 118.063, -17.1626, 3.9 ) }
    dend_28 { pt3dadd( -10.0201, 119.073, -17.0586, 3.61 ) }
    dend_28 { pt3dadd( -10.0769, 119.782, -16.9847, 2.8 ) }
    dend_28 { pt3dadd( -10.1693, 120.576, -16.9085, 1.69 ) }
    dend_28 { pt3dadd( -10.2913, 121.509, -16.8206, 1.11 ) }
    dend_28 { pt3dadd( -10.444, 122.558, -16.7294, 0.81 ) }
    dend_28 { pt3dadd( -10.5369, 123.13, -16.6892, 0.66 ) }
    dend_28 { pt3dadd( -10.7423, 124.337, -16.6488, 0.52 ) }
    dend_28 { pt3dadd( -10.9434, 125.393, -16.6091, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 57/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -48.4004, -50.44, 34.6876, 0.37 ) }
    dend_20 { pt3dadd( -55.9473, -54.6687, 39.6105, 0.37 ) }
    dend_20 { pt3dadd( -61.9103, -60.6362, 44.8048, 0.37 ) }
    dend_20 { pt3dadd( -68.5852, -65.1449, 50.641, 0.37 ) }
    dend_20 { pt3dadd( -73.7833, -69.5009, 57.9224, 0.37 ) }
    dend_20 { pt3dadd( -80.6755, -73.9214, 63.5742, 0.37 ) }
    dend_20 { pt3dadd( -87.5742, -77.8381, 69.5967, 0.37 ) }
    dend_20 { pt3dadd( -93.8262, -83.7386, 74.525, 0.37 ) }
    dend_20 { pt3dadd( -101.833, -88.3279, 78.2302, 0.37 ) }
    dend_20 { pt3dadd( -111.242, -91.1441, 80.0002, 0.37 ) }
    dend_20 { pt3dadd( -120.693, -94.2156, 80.8647, 0.37 ) }
    dend_20 { pt3dadd( -130.369, -95.5807, 82.9658, 0.37 ) }
    dend_20 { pt3dadd( -140.109, -96.6729, 84.9372, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 70/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -48.4004, -50.44, 34.6876, 0.29 ) }
    dend_19 { pt3dadd( -55.9772, -54.6743, 39.5592, 0.37 ) }
    dend_19 { pt3dadd( -62.6385, -59.4204, 45.2099, 0.37 ) }
    dend_19 { pt3dadd( -69.4583, -65.2047, 49.4872, 0.37 ) }
    dend_19 { pt3dadd( -76.3561, -71.5909, 52.5724, 0.37 ) }
    dend_19 { pt3dadd( -83.3092, -78.1571, 55.0823, 0.37 ) }
    dend_19 { pt3dadd( -89.6908, -84.6218, 58.9954, 0.37 ) }
    dend_19 { pt3dadd( -95.3836, -91.968, 62.2851, 0.37 ) }
    dend_19 { pt3dadd( -100.613, -100.097, 64.0582, 0.37 ) }
    dend_19 { pt3dadd( -107.503, -107.15, 64.51, 0.37 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 80/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -38.7293, -18.8628, 56.892, 0.37 ) }
    dend_17 { pt3dadd( -42.3386, -14.8261, 65.2485, 0.37 ) }
    dend_17 { pt3dadd( -46.7107, -10.8007, 73.2385, 0.37 ) }
    dend_17 { pt3dadd( -51.8516, -5.72656, 80.0566, 0.37 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 84/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -38.7293, -18.8628, 56.892, 0.29 ) }
    dend_16 { pt3dadd( -40.6556, -15.6645, 66.1401, 0.37 ) }
    dend_16 { pt3dadd( -42.1093, -11.9831, 75.2851, 0.37 ) }
    dend_16 { pt3dadd( -42.0065, -9.91998, 85.0581, 0.37 ) }
    dend_16 { pt3dadd( -41.4226, -8.97497, 94.9939, 0.37 ) }
    dend_16 { pt3dadd( -41.5451, -9.09707, 104.993, 0.37 ) }
    dend_16 { pt3dadd( -42.7575, -8.63134, 114.908, 0.37 ) }
    dend_16 { pt3dadd( -44.6551, -8.0435, 124.707, 0.37 ) }
    dend_16 { pt3dadd( -46.3598, -7.23879, 134.526, 0.37 ) }
    dend_16 { pt3dadd( -48.6991, -5.07875, 143.993, 0.37 ) }
    dend_16 { pt3dadd( -51.2655, -2.8671, 153.388, 0.37 ) }
    dend_16 { pt3dadd( -53.1759, -0.668167, 162.941, 0.37 ) }
    dend_16 { pt3dadd( -54.2242, 0.29592, 172.837, 0.37 ) }
    dend_16 { pt3dadd( -55.5088, 1.89346, 182.618, 0.37 ) }
    // Section: dend_13, id: dend_13, parent: dend_7 (entry count 98/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -9.22658, -33.4093, 0.146408, 0.59 ) }
    dend_13 { pt3dadd( -9.59948, -33.8364, -0.172241, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_13 { pt3dadd( -10.2649, -34.3798, -0.647218, 0.44 ) }
    dend_13 { pt3dadd( -11.0174, -34.7865, -1.18298, 0.29 ) }
    dend_13 { pt3dadd( -11.4344, -34.952, -1.44969, 0.22 ) }
    dend_13 { pt3dadd( -11.9547, -35.1419, -1.76139, 0.29 ) }
    dend_13 { pt3dadd( -12.5837, -35.3685, -2.11918, 0.29 ) }
    dend_13 { pt3dadd( -13.3881, -35.6149, -2.51984, 0.29 ) }
    dend_13 { pt3dadd( -14.3067, -35.8848, -2.96687, 0.29 ) }
    dend_13 { pt3dadd( -15.0139, -36.1214, -3.31553, 0.29 ) }
    dend_13 { pt3dadd( -15.9267, -36.5038, -3.7914, 1.25 ) }
    dend_13 { pt3dadd( -16.1986, -36.6565, -3.94255, 1.77 ) }
    dend_13 { pt3dadd( -16.6073, -36.9628, -4.18683, 1.77 ) }
    dend_13 { pt3dadd( -17.7328, -37.9868, -4.88119, 1.11 ) }
    dend_13 { pt3dadd( -18.3437, -38.6482, -5.28377, 0.52 ) }
    dend_13 { pt3dadd( -18.7541, -39.163, -5.61345, 0.37 ) }
    dend_13 { pt3dadd( -19.2595, -39.8836, -6.11398, 0.37 ) }
    dend_13 { pt3dadd( -19.6024, -40.4269, -6.5072, 0.37 ) }
    dend_13 { pt3dadd( -19.6582, -40.5195, -6.57617, 0.37 ) }
    dend_13 { pt3dadd( -20.1168, -41.2869, -7.14213, 1.25 ) }
    dend_13 { pt3dadd( -20.4247, -41.7467, -7.53389, 1.18 ) }
    dend_13 { pt3dadd( -21.0179, -42.4537, -8.21051, 0.29 ) }
    dend_13 { pt3dadd( -21.3206, -42.7101, -8.47911, 0.22 ) }
    dend_13 { pt3dadd( -21.7582, -43.0185, -8.77999, 0.22 ) }
    dend_13 { pt3dadd( -22.1115, -43.2566, -8.96987, 0.44 ) }
    dend_13 { pt3dadd( -22.4844, -43.4887, -9.11402, 0.44 ) }
    dend_13 { pt3dadd( -22.8759, -43.729, -9.21646, 0.29 ) }
    dend_13 { pt3dadd( -23.2825, -43.9678, -9.31165, 0.29 ) }
    dend_13 { pt3dadd( -23.8782, -44.3248, -9.53301, 0.37 ) }
    dend_13 { pt3dadd( -24.3409, -44.616, -9.74586, 0.37 ) }
    dend_13 { pt3dadd( -24.8676, -44.9255, -10.0213, 0.29 ) }
    dend_13 { pt3dadd( -25.82, -45.427, -10.577, 1.18 ) }
    dend_13 { pt3dadd( -26.5228, -45.7766, -10.9976, 1.99 ) }
    dend_13 { pt3dadd( -27.2131, -46.092, -11.4123, 2.28 ) }
    dend_13 { pt3dadd( -27.6416, -46.2786, -11.6619, 1.99 ) }
    dend_13 { pt3dadd( -28.7218, -46.7842, -12.2742, 0.59 ) }
    dend_13 { pt3dadd( -29.4343, -47.1912, -12.6642, 0.37 ) }
    dend_13 { pt3dadd( -29.9566, -47.597, -12.9574, 0.37 ) }
    dend_13 { pt3dadd( -30.5189, -48.0936, -13.2689, 1.11 ) }
    dend_13 { pt3dadd( -30.9086, -48.4523, -13.4718, 1.69 ) }
    dend_13 { pt3dadd( -31.3255, -48.8558, -13.6938, 1.84 ) }
    dend_13 { pt3dadd( -31.8798, -49.4088, -13.9722, 1.4 ) }
    dend_13 { pt3dadd( -32.8246, -50.2811, -14.3998, 0.44 ) }
    dend_13 { pt3dadd( -33.3304, -50.7013, -14.6231, 0.44 ) }
    dend_13 { pt3dadd( -33.9675, -51.1886, -14.8841, 0.37 ) }
    dend_13 { pt3dadd( -34.5329, -51.5776, -15.1066, 1.18 ) }
    dend_13 { pt3dadd( -35.0253, -51.9047, -15.2931, 1.62 ) }
    dend_13 { pt3dadd( -35.5373, -52.2735, -15.4779, 1.03 ) }
    dend_13 { pt3dadd( -35.5874, -52.3179, -15.4984, 1.03 ) }
    dend_13 { pt3dadd( -35.8384, -52.6062, -15.6327, 0.88 ) }
    dend_13 { pt3dadd( -36.2438, -53.1425, -15.9094, 0.44 ) }
    dend_13 { pt3dadd( -36.6617, -53.7162, -16.2235, 0.29 ) }
    dend_13 { pt3dadd( -37.0312, -54.2447, -16.5247, 0.29 ) }
    dend_13 { pt3dadd( -37.6972, -55.2104, -17.0873, 1.92 ) }
    dend_13 { pt3dadd( -38.1506, -55.8748, -17.4702, 2.73 ) }
    dend_13 { pt3dadd( -38.6081, -56.5544, -17.8684, 2.65 ) }
    dend_13 { pt3dadd( -39.5024, -57.831, -18.6285, 0.66 ) }
    dend_13 { pt3dadd( -39.5453, -57.888, -18.6639, 0.66 ) }
    dend_13 { pt3dadd( -40.2102, -58.7237, -19.1921, 0.29 ) }
    dend_13 { pt3dadd( -40.5072, -59.0853, -19.407, 0.29 ) }
    dend_13 { pt3dadd( -40.875, -59.5248, -19.6748, 0.29 ) }
    dend_13 { pt3dadd( -41.2989, -60.0509, -20.0349, 0.29 ) }
    dend_13 { pt3dadd( -41.6881, -60.5361, -20.4086, 1.11 ) }
    dend_13 { pt3dadd( -41.7301, -60.5898, -20.4498, 1.11 ) }
    dend_13 { pt3dadd( -42.0764, -61.0385, -20.7868, 1.25 ) }
    dend_13 { pt3dadd( -42.5215, -61.6152, -21.2052, 0.96 ) }
    dend_13 { pt3dadd( -43.2833, -62.7098, -21.8637, 0.37 ) }
    dend_13 { pt3dadd( -43.3159, -62.7636, -21.8936, 0.37 ) }
    dend_13 { pt3dadd( -43.6706, -63.3702, -22.205, 0.22 ) }
    dend_13 { pt3dadd( -43.9102, -63.7827, -22.3984, 0.22 ) }
    dend_13 { pt3dadd( -43.9813, -63.8987, -22.4556, 0.66 ) }
    dend_13 { pt3dadd( -44.4842, -64.6912, -22.822, 0.52 ) }
    dend_13 { pt3dadd( -45.313, -65.9698, -23.3948, 1.77 ) }
    dend_13 { pt3dadd( -45.9089, -66.8778, -23.8033, 2.58 ) }
    dend_13 { pt3dadd( -46.4185, -67.6352, -24.149, 2.58 ) }
    dend_13 { pt3dadd( -47.4076, -69.0812, -24.8008, 0.44 ) }
    dend_13 { pt3dadd( -47.9346, -69.827, -25.1215, 0.29 ) }
    dend_13 { pt3dadd( -47.9813, -69.8889, -25.1458, 0.29 ) }
    dend_13 { pt3dadd( -48.3401, -70.3544, -25.2853, 0.29 ) }
    dend_13 { pt3dadd( -48.8869, -71.0782, -25.4677, 1.47 ) }
    dend_13 { pt3dadd( -49.1809, -71.4846, -25.5474, 1.84 ) }
    dend_13 { pt3dadd( -49.5356, -72.0498, -25.61, 1.47 ) }
    dend_13 { pt3dadd( -50.3878, -73.5426, -25.7626, 0.29 ) }
    dend_13 { pt3dadd( -50.6835, -74.1121, -25.8134, 1.11 ) }
    dend_13 { pt3dadd( -50.8817, -74.52, -25.8438, 1.25 ) }
    dend_13 { pt3dadd( -51.1576, -75.1327, -25.8763, 1.03 ) }
    dend_13 { pt3dadd( -51.5344, -76.0013, -25.9132, 0.22 ) }
    dend_13 { pt3dadd( -51.7815, -76.5628, -25.927, 0.22 ) }
    dend_13 { pt3dadd( -51.9373, -76.9096, -25.9254, 0.59 ) }
    dend_13 { pt3dadd( -52.1799, -77.3871, -25.9254, 0.74 ) }
    dend_13 { pt3dadd( -52.3472, -77.6709, -25.9365, 0.37 ) }
    dend_13 { pt3dadd( -52.689, -78.1934, -25.9713, 0.22 ) }
    dend_13 { pt3dadd( -53.1944, -78.8983, -26.0299, 1.55 ) }
    dend_13 { pt3dadd( -53.6642, -79.551, -26.0898, 2.21 ) }
    dend_13 { pt3dadd( -53.9314, -79.921, -26.1237, 1.84 ) }
    dend_13 { pt3dadd( -54.7739, -81.0814, -26.2263, 0.22 ) }
    dend_13 { pt3dadd( -55.2081, -81.6677, -26.2756, 0.22 ) }
    dend_13 { pt3dadd( -55.7115, -82.3077, -26.3265, 1.11 ) }
    dend_13 { pt3dadd( -56.0101, -82.6672, -26.3518, 1.62 ) }
    dend_13 { pt3dadd( -56.3841, -83.0902, -26.3734, 1.84 ) }
    dend_13 { pt3dadd( -56.9535, -83.7157, -26.3925, 1.11 ) }
    dend_13 { pt3dadd( -57.2762, -84.0656, -26.3962, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_13 { pt3dadd( -58.1248, -84.9861, -26.4133, 0.29 ) }
    dend_13 { pt3dadd( -58.5834, -85.4881, -26.4259, 0.59 ) }
    dend_13 { pt3dadd( -59.6592, -86.7356, -26.443, 0.29 ) }
    dend_13 { pt3dadd( -59.7046, -86.7911, -26.4432, 0.29 ) }
    dend_13 { pt3dadd( -60.4302, -87.7205, -26.4375, 1.18 ) }
    dend_13 { pt3dadd( -60.707, -88.0892, -26.4314, 1.55 ) }
    dend_13 { pt3dadd( -60.9638, -88.4622, -26.4197, 1.55 ) }
    dend_13 { pt3dadd( -61.6448, -89.5193, -26.4336, 0.52 ) }
    dend_13 { pt3dadd( -62.2206, -90.4872, -26.5038, 0.37 ) }
    dend_13 { pt3dadd( -62.255, -90.5493, -26.5119, 0.37 ) }
    dend_13 { pt3dadd( -62.6551, -91.347, -26.6479, 0.37 ) }
    dend_13 { pt3dadd( -62.9777, -92.0231, -26.782, 0.29 ) }
    dend_13 { pt3dadd( -63.5736, -93.3263, -27.0768, 1.99 ) }
    dend_13 { pt3dadd( -63.8349, -93.9241, -27.2289, 2.28 ) }
    dend_13 { pt3dadd( -64.4282, -95.3637, -27.5826, 0.22 ) }
    dend_13 { pt3dadd( -64.7848, -96.2018, -27.7691, 0.22 ) }
    dend_13 { pt3dadd( -64.9486, -96.5854, -27.8277, 0.74 ) }
    dend_13 { pt3dadd( -64.9766, -96.6507, -27.8329, 0.74 ) }
    dend_13 { pt3dadd( -65.2225, -97.24, -27.8306, 0.74 ) }
    dend_13 { pt3dadd( -65.5454, -98.0431, -27.7998, 0.22 ) }
    dend_13 { pt3dadd( -65.9227, -98.9516, -27.7557, 0.22 ) }
    dend_13 { pt3dadd( -66.5491, -100.406, -27.6871, 2.14 ) }
    dend_13 { pt3dadd( -66.691, -100.736, -27.6727, 2.36 ) }
    dend_13 { pt3dadd( -67.2267, -101.929, -27.6233, 0.29 ) }
    dend_13 { pt3dadd( -67.4754, -102.451, -27.5958, 0.22 ) }
    dend_13 { pt3dadd( -67.8216, -103.112, -27.5568, 0.22 ) }
    dend_13 { pt3dadd( -68.2522, -103.885, -27.5055, 1.4 ) }
    dend_13 { pt3dadd( -68.4924, -104.301, -27.4797, 1.77 ) }
    dend_13 { pt3dadd( -68.8293, -104.901, -27.4298, 1.33 ) }
    dend_13 { pt3dadd( -69.3861, -106.01, -27.3118, 0.37 ) }
    dend_13 { pt3dadd( -69.7469, -106.809, -27.2293, 0.22 ) }
    dend_13 { pt3dadd( -69.9592, -107.357, -27.1768, 0.22 ) }
    dend_13 { pt3dadd( -70.2066, -108.07, -27.1245, 0.81 ) }
    dend_13 { pt3dadd( -70.3416, -108.488, -27.1004, 0.81 ) }
    dend_13 { pt3dadd( -70.6343, -109.38, -27.0854, 0.22 ) }
    dend_13 { pt3dadd( -70.8331, -109.89, -27.111, 0.22 ) }
    dend_13 { pt3dadd( -71.0933, -110.445, -27.1569, 1.25 ) }
    dend_13 { pt3dadd( -71.3232, -110.847, -27.1996, 1.77 ) }
    dend_13 { pt3dadd( -71.5975, -111.28, -27.251, 1.77 ) }
    dend_13 { pt3dadd( -72.2026, -112.221, -27.372, 0.44 ) }
    dend_13 { pt3dadd( -72.7615, -113.074, -27.4838, 0.29 ) }
    dend_13 { pt3dadd( -73.2332, -113.809, -27.5883, 1.4 ) }
    dend_13 { pt3dadd( -73.5116, -114.242, -27.6506, 1.77 ) }
    dend_13 { pt3dadd( -73.7422, -114.614, -27.7045, 1.77 ) }
    dend_13 { pt3dadd( -74.3688, -115.67, -27.8517, 0.37 ) }
    dend_13 { pt3dadd( -74.8135, -116.476, -27.951, 0.29 ) }
    dend_13 { pt3dadd( -75.2801, -117.322, -28.0694, 0.22 ) }
    dend_13 { pt3dadd( -75.6948, -118.012, -28.1867, 0.22 ) }
    dend_13 { pt3dadd( -76.2164, -118.807, -28.3355, 1.11 ) }
    dend_13 { pt3dadd( -76.4169, -119.091, -28.3919, 1.4 ) }
    dend_13 { pt3dadd( -76.8281, -119.663, -28.5078, 0.59 ) }
    dend_13 { pt3dadd( -77.2865, -120.326, -28.6424, 0.22 ) }
    dend_13 { pt3dadd( -77.7349, -121.005, -28.7753, 0.22 ) }
    dend_13 { pt3dadd( -78.1922, -121.681, -28.9154, 1.11 ) }
    dend_13 { pt3dadd( -78.4007, -121.97, -28.9753, 1.55 ) }
    dend_13 { pt3dadd( -78.7092, -122.383, -29.0613, 1.33 ) }
    dend_13 { pt3dadd( -79.2349, -123.068, -29.1988, 0.59 ) }
    dend_13 { pt3dadd( -79.6412, -123.628, -29.2885, 0.22 ) }
    dend_13 { pt3dadd( -79.8935, -123.981, -29.3284, 0.66 ) }
    dend_13 { pt3dadd( -80.0259, -124.157, -29.3408, 0.66 ) }
    dend_13 { pt3dadd( -80.1625, -124.329, -29.345, 0.66 ) }
    dend_13 { pt3dadd( -80.58, -124.852, -29.3495, 0.22 ) }
    dend_13 { pt3dadd( -81.0475, -125.417, -29.2999, 0.22 ) }
    dend_13 { pt3dadd( -81.6352, -126.117, -29.1934, 1.33 ) }
    dend_13 { pt3dadd( -81.8951, -126.422, -29.1362, 1.62 ) }
    dend_13 { pt3dadd( -82.1743, -126.743, -29.0696, 1.33 ) }
    dend_13 { pt3dadd( -83.0624, -127.743, -28.8471, 0.29 ) }
    dend_13 { pt3dadd( -83.6297, -128.343, -28.7134, 0.29 ) }
    dend_13 { pt3dadd( -84.1116, -128.784, -28.6272, 0.29 ) }
    dend_13 { pt3dadd( -84.5789, -129.16, -28.573, 0.88 ) }
    dend_13 { pt3dadd( -84.9055, -129.405, -28.542, 0.88 ) }
    dend_13 { pt3dadd( -85.2875, -129.671, -28.5146, 0.66 ) }
    dend_13 { pt3dadd( -85.9627, -130.128, -28.4886, 0.15 ) }
    dend_13 { pt3dadd( -86.5487, -130.575, -28.526, 0.15 ) }
    dend_13 { pt3dadd( -87.0962, -131.021, -28.5825, 0.15 ) }
    dend_13 { pt3dadd( -87.3708, -131.24, -28.6214, 0.59 ) }
    dend_13 { pt3dadd( -87.4295, -131.282, -28.6237, 0.59 ) }
    dend_13 { pt3dadd( -87.737, -131.5, -28.613, 0.59 ) }
    dend_13 { pt3dadd( -88.2462, -131.886, -28.5641, 0.22 ) }
    dend_13 { pt3dadd( -88.3102, -131.943, -28.5562, 0.22 ) }
    dend_13 { pt3dadd( -89.0207, -132.589, -28.4658, 0.22 ) }
    dend_13 { pt3dadd( -90.0913, -133.597, -28.3283, 1.77 ) }
    dend_13 { pt3dadd( -90.4691, -133.96, -28.2793, 2.14 ) }
    dend_13 { pt3dadd( -90.953, -134.429, -28.2258, 1.47 ) }
    dend_13 { pt3dadd( -91.8491, -135.368, -28.1672, 0.37 ) }
    dend_13 { pt3dadd( -92.5772, -136.205, -28.1585, 0.22 ) }
    dend_13 { pt3dadd( -92.9526, -136.716, -28.1849, 0.81 ) }
    dend_13 { pt3dadd( -93.1515, -137.02, -28.2256, 0.96 ) }
    dend_13 { pt3dadd( -93.4648, -137.512, -28.3137, 0.96 ) }
    dend_13 { pt3dadd( -93.9937, -138.401, -28.5093, 0.22 ) }
    dend_13 { pt3dadd( -94.0271, -138.46, -28.5244, 0.22 ) }
    dend_13 { pt3dadd( -94.3493, -139.087, -28.6973, 0.22 ) }
    dend_13 { pt3dadd( -94.6967, -139.797, -28.8859, 0.22 ) }
    dend_13 { pt3dadd( -94.9095, -140.289, -29.0288, 0.96 ) }
    dend_13 { pt3dadd( -95.0931, -140.723, -29.1534, 1.33 ) }
    dend_13 { pt3dadd( -95.3407, -141.266, -29.3105, 1.11 ) }
    dend_13 { pt3dadd( -95.7445, -142.059, -29.5944, 0.22 ) }
    dend_13 { pt3dadd( -95.9516, -142.418, -29.7401, 0.59 ) }
    dend_13 { pt3dadd( -96.5387, -143.396, -30.1241, 0.22 ) }
    dend_13 { pt3dadd( -96.9832, -144.111, -30.3912, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_13 { pt3dadd( -97.2866, -144.571, -30.573, 1.4 ) }
    dend_13 { pt3dadd( -98.0373, -145.633, -30.9911, 0.22 ) }
    dend_13 { pt3dadd( -98.4822, -146.205, -31.2043, 0.22 ) }
    dend_13 { pt3dadd( -98.9922, -146.838, -31.4155, 1.99 ) }
    dend_13 { pt3dadd( -99.3903, -147.307, -31.5494, 2.5 ) }
    dend_13 { pt3dadd( -99.8074, -147.804, -31.6829, 2.43 ) }
    dend_13 { pt3dadd( -100.891, -149.102, -31.9729, 0.22 ) }
    dend_13 { pt3dadd( -101.297, -149.599, -32.05, 0.29 ) }
    dend_13 { pt3dadd( -101.861, -150.294, -32.1498, 0.22 ) }
    dend_13 { pt3dadd( -102.182, -150.701, -32.2003, 0.74 ) }
    dend_13 { pt3dadd( -102.333, -150.908, -32.2071, 0.74 ) }
    dend_13 { pt3dadd( -102.843, -151.696, -32.1621, 0.15 ) }
    dend_13 { pt3dadd( -103.175, -152.349, -32.1052, 0.15 ) }
    dend_13 { pt3dadd( -103.262, -152.553, -32.0944, 0.81 ) }
    dend_13 { pt3dadd( -103.526, -153.222, -32.0937, 1.33 ) }
    dend_13 { pt3dadd( -103.779, -153.894, -32.1173, 1.33 ) }
    dend_13 { pt3dadd( -103.803, -153.958, -32.1214, 1.33 ) }
    dend_13 { pt3dadd( -104.17, -154.948, -32.2777, 0.22 ) }
    dend_13 { pt3dadd( -104.56, -156.037, -32.5142, 0.22 ) }
    dend_13 { pt3dadd( -104.851, -156.895, -32.7405, 1.62 ) }
    dend_13 { pt3dadd( -105.045, -157.453, -32.9081, 1.92 ) }
    dend_13 { pt3dadd( -105.209, -157.923, -33.0611, 1.92 ) }
    dend_13 { pt3dadd( -105.632, -159.186, -33.4578, 0.22 ) }
    dend_13 { pt3dadd( -105.867, -159.908, -33.6768, 0.22 ) }
    dend_13 { pt3dadd( -106.117, -160.781, -33.9565, 0.22 ) }
    dend_13 { pt3dadd( -106.322, -161.538, -34.2079, 1.25 ) }
    dend_13 { pt3dadd( -106.438, -161.902, -34.332, 1.62 ) }
    dend_13 { pt3dadd( -106.616, -162.357, -34.4745, 1.62 ) }
    dend_13 { pt3dadd( -106.678, -162.488, -34.5122, 1.62 ) }
    dend_13 { pt3dadd( -107.462, -163.916, -34.9788, 0.22 ) }
    dend_13 { pt3dadd( -107.531, -164.041, -35.0274, 0.22 ) }
    dend_13 { pt3dadd( -107.906, -164.788, -35.3424, 0.22 ) }
    dend_13 { pt3dadd( -108.304, -165.621, -35.7038, 0.22 ) }
    dend_13 { pt3dadd( -108.612, -166.246, -35.9742, 1.03 ) }
    dend_13 { pt3dadd( -108.767, -166.555, -36.1055, 1.03 ) }
    dend_13 { pt3dadd( -109.257, -167.512, -36.4993, 0.22 ) }
    dend_13 { pt3dadd( -109.474, -167.95, -36.6801, 0.59 ) }
    dend_13 { pt3dadd( -109.77, -168.619, -36.9484, 0.22 ) }
    dend_13 { pt3dadd( -109.983, -169.112, -37.1255, 0.22 ) }
    dend_13 { pt3dadd( -110.248, -169.768, -37.3133, 1.25 ) }
    dend_13 { pt3dadd( -110.398, -170.147, -37.408, 1.62 ) }
    dend_13 { pt3dadd( -110.443, -170.263, -37.4329, 1.62 ) }
    dend_13 { pt3dadd( -110.91, -171.457, -37.7041, 0.15 ) }
    dend_13 { pt3dadd( -111.196, -172.255, -37.8855, 1.25 ) }
    dend_13 { pt3dadd( -111.301, -172.582, -37.9594, 1.25 ) }
    dend_13 { pt3dadd( -111.651, -173.621, -38.2101, 0.22 ) }
    dend_13 { pt3dadd( -111.677, -173.683, -38.2275, 0.22 ) }
    dend_13 { pt3dadd( -111.949, -174.208, -38.3925, 0.74 ) }
    dend_13 { pt3dadd( -111.981, -174.257, -38.4114, 0.74 ) }
    dend_13 { pt3dadd( -112.149, -174.492, -38.4918, 0.74 ) }
    dend_13 { pt3dadd( -112.801, -175.39, -38.7418, 0.15 ) }
    dend_13 { pt3dadd( -113.314, -176.123, -38.8937, 1.11 ) }
    dend_13 { pt3dadd( -113.403, -176.255, -38.9204, 1.11 ) }
    dend_13 { pt3dadd( -113.447, -176.322, -38.9333, 1.11 ) }
    dend_13 { pt3dadd( -114.581, -177.998, -39.2603, 0.22 ) }
    dend_13 { pt3dadd( -114.934, -178.503, -39.3631, 1.03 ) }
    dend_13 { pt3dadd( -115.22, -178.904, -39.4439, 1.11 ) }
    dend_13 { pt3dadd( -116.104, -180.089, -39.7078, 0.22 ) }
    dend_13 { pt3dadd( -116.248, -180.273, -39.7535, 0.59 ) }
    dend_13 { pt3dadd( -116.94, -181.104, -39.96, 0.22 ) }
    dend_13 { pt3dadd( -117.29, -181.489, -40.0591, 1.33 ) }
    dend_13 { pt3dadd( -117.59, -181.804, -40.1253, 1.55 ) }
    dend_13 { pt3dadd( -118.066, -182.265, -40.1925, 0.88 ) }
    dend_13 { pt3dadd( -119.041, -183.205, -40.2688, 0.22 ) }
    dend_13 { pt3dadd( -119.477, -183.63, -40.2945, 0.66 ) }
    dend_13 { pt3dadd( -119.683, -183.826, -40.33, 0.66 ) }
    dend_13 { pt3dadd( -120.464, -184.548, -40.5232, 0.22 ) }
    dend_13 { pt3dadd( -121.21, -185.229, -40.7612, 1.62 ) }
    dend_13 { pt3dadd( -121.767, -185.733, -40.9876, 2.06 ) }
    dend_13 { pt3dadd( -122.251, -186.152, -41.2165, 2.06 ) }
    dend_13 { pt3dadd( -123.935, -187.625, -42.072, 0.22 ) }
    dend_13 { pt3dadd( -123.935, -187.625, -42.072, 0.59 ) }
    dend_13 { pt3dadd( -124.045, -187.714, -42.1252, 0.59 ) }
    dend_13 { pt3dadd( -124.75, -188.242, -42.4202, 0.22 ) }
    dend_13 { pt3dadd( -125.455, -188.711, -42.652, 0.22 ) }
    dend_13 { pt3dadd( -126.227, -189.181, -42.818, 1.77 ) }
    dend_13 { pt3dadd( -126.664, -189.431, -42.8481, 2.06 ) }
    dend_13 { pt3dadd( -128.352, -190.377, -42.8608, 0.15 ) }
    dend_13 { pt3dadd( -128.692, -190.557, -42.8459, 0.74 ) }
    dend_13 { pt3dadd( -129.076, -190.736, -42.7873, 0.74 ) }
    dend_13 { pt3dadd( -129.906, -191.096, -42.5756, 0.22 ) }
    dend_13 { pt3dadd( -130.618, -191.381, -42.3351, 0.22 ) }
    dend_13 { pt3dadd( -131.401, -191.677, -42.0133, 1.18 ) }
    dend_13 { pt3dadd( -131.778, -191.819, -41.8164, 1.55 ) }
    dend_13 { pt3dadd( -132.979, -192.267, -41.1458, 0.29 ) }
    dend_13 { pt3dadd( -133.865, -192.59, -40.6299, 0.22 ) }
    dend_13 { pt3dadd( -134.256, -192.709, -40.4139, 0.74 ) }
    dend_13 { pt3dadd( -134.578, -192.786, -40.2561, 1.03 ) }
    dend_13 { pt3dadd( -135.629, -192.962, -39.8215, 0.15 ) }
    dend_13 { pt3dadd( -135.961, -192.999, -39.7247, 0.37 ) }
    dend_13 { pt3dadd( -136.033, -193.003, -39.7139, 0.37 ) }
    dend_13 { pt3dadd( -137.181, -192.999, -39.6336, 0.22 ) }
    dend_13 { pt3dadd( -137.987, -192.978, -39.6156, 1.18 ) }
    dend_13 { pt3dadd( -138.56, -192.965, -39.6291, 1.55 ) }
    dend_13 { pt3dadd( -139.953, -192.943, -39.7237, 0.22 ) }
    dend_13 { pt3dadd( -140.615, -192.941, -39.7494, 0.22 ) }
    dend_13 { pt3dadd( -141.431, -192.955, -39.7557, 0.96 ) }
    dend_13 { pt3dadd( -141.717, -192.963, -39.7399, 1.33 ) }
    dend_13 { pt3dadd( -143.123, -192.997, -39.5962, 0.22 ) }
    dend_13 { pt3dadd( -143.703, -193.017, -39.5023, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_13 { pt3dadd( -144.758, -193.056, -39.2779, 0.96 ) }
    dend_13 { pt3dadd( -145.035, -193.067, -39.2044, 1.25 ) }
    dend_13 { pt3dadd( -146.831, -193.153, -38.6688, 0.22 ) }
    dend_13 { pt3dadd( -147.548, -193.196, -38.4513, 0.22 ) }
    dend_13 { pt3dadd( -148.914, -193.288, -38.0216, 1.84 ) }
    dend_13 { pt3dadd( -149.196, -193.317, -37.9359, 2.36 ) }
    dend_13 { pt3dadd( -151.048, -193.579, -37.4185, 0.22 ) }
    dend_13 { pt3dadd( -151.541, -193.664, -37.28, 0.66 ) }
    dend_13 { pt3dadd( -152.291, -193.832, -37.0921, 0.22 ) }
    dend_13 { pt3dadd( -152.347, -193.846, -37.0796, 0.22 ) }
    dend_13 { pt3dadd( -153.118, -194.037, -36.9753, 0.96 ) }
    dend_13 { pt3dadd( -153.482, -194.124, -36.9481, 0.96 ) }
    dend_13 { pt3dadd( -153.55, -194.142, -36.9499, 0.96 ) }
    dend_13 { pt3dadd( -154.584, -194.396, -36.9795, 0.22 ) }
    dend_13 { pt3dadd( -154.653, -194.412, -36.9814, 0.22 ) }
    dend_13 { pt3dadd( -155.724, -194.663, -37.0185, 0.22 ) }
    dend_13 { pt3dadd( -155.801, -194.681, -37.0216, 0.22 ) }
    dend_13 { pt3dadd( -156.898, -194.986, -37.0393, 0.22 ) }
    dend_13 { pt3dadd( -156.975, -195.009, -37.0392, 0.22 ) }
    dend_13 { pt3dadd( -157.461, -195.161, -37.0288, 1.11 ) }
    dend_13 { pt3dadd( -157.957, -195.318, -37.0169, 1.4 ) }
    dend_13 { pt3dadd( -158.158, -195.383, -37.0112, 1.69 ) }
    dend_13 { pt3dadd( -160.09, -195.999, -36.9509, 0.22 ) }
    dend_13 { pt3dadd( -160.581, -196.15, -36.9328, 0.66 ) }
    dend_13 { pt3dadd( -160.81, -196.222, -36.9239, 0.88 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 25/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -9.22658, -33.4093, 0.146408, 2.58 ) }
    dend_8 { pt3dadd( -8.75473, -34.6706, -0.288673, 2.58 ) }
    dend_8 { pt3dadd( -8.41746, -36.0997, -0.815484, 1.11 ) }
    dend_8 { pt3dadd( -8.18776, -37.3189, -1.24344, 0.66 ) }
    dend_8 { pt3dadd( -8.02583, -38.2673, -1.57515, 0.59 ) }
    dend_8 { pt3dadd( -7.76799, -39.7865, -2.12612, 1.25 ) }
    dend_8 { pt3dadd( -7.65124, -40.4242, -2.36423, 1.62 ) }
    dend_8 { pt3dadd( -7.32292, -42.4211, -3.09802, 1.11 ) }
    dend_8 { pt3dadd( -7.10631, -43.6078, -3.5578, 1.33 ) }
    dend_8 { pt3dadd( -6.87034, -44.6772, -4.01517, 1.92 ) }
    dend_8 { pt3dadd( -6.55724, -45.8089, -4.53481, 1.99 ) }
    dend_8 { pt3dadd( -6.17088, -46.9727, -5.12357, 1.33 ) }
    dend_8 { pt3dadd( -5.74373, -48.2144, -5.78649, 0.96 ) }
    dend_8 { pt3dadd( -5.25509, -49.5737, -6.53579, 0.96 ) }
    dend_8 { pt3dadd( -5.23977, -49.6225, -6.56517, 0.96 ) }
    dend_8 { pt3dadd( -5.0492, -50.4613, -7.11087, 0.74 ) }
    dend_8 { pt3dadd( -4.94805, -51.705, -8.08035, 0.52 ) }
    dend_8 { pt3dadd( -5.02054, -52.5482, -8.85482, 0.52 ) }
    dend_8 { pt3dadd( -5.03117, -52.5957, -8.90394, 0.52 ) }
    dend_8 { pt3dadd( -5.22454, -53.2556, -9.62359, 0.88 ) }
    dend_8 { pt3dadd( -5.47342, -54.0981, -10.5227, 1.18 ) }
    dend_8 { pt3dadd( -5.88776, -55.4713, -11.9456, 0.59 ) }
    dend_8 { pt3dadd( -6.13137, -56.2962, -12.7215, 0.59 ) }
    dend_8 { pt3dadd( -6.14281, -56.3399, -12.7597, 0.59 ) }
    dend_8 { pt3dadd( -6.30444, -57.087, -13.3286, 0.59 ) }
    dend_8 { pt3dadd( -6.51662, -58.3598, -14.1054, 1.55 ) }
    dend_8 { pt3dadd( -6.63861, -59.3076, -14.514, 2.14 ) }
    dend_8 { pt3dadd( -6.71396, -59.8578, -14.6858, 2.36 ) }
    dend_8 { pt3dadd( -6.7246, -59.914, -14.702, 2.36 ) }
    dend_8 { pt3dadd( -6.89463, -60.5115, -14.8886, 2.36 ) }
    dend_8 { pt3dadd( -7.18301, -61.1823, -15.1462, 2.06 ) }
    dend_8 { pt3dadd( -7.72767, -62.1389, -15.5675, 1.77 ) }
    dend_8 { pt3dadd( -8.34433, -63.1151, -16.0335, 0.74 ) }
    dend_8 { pt3dadd( -8.66102, -63.5825, -16.2777, 0.52 ) }
    dend_8 { pt3dadd( -9.23339, -64.3638, -16.7191, 0.44 ) }
    dend_8 { pt3dadd( -9.98461, -65.253, -17.2995, 0.44 ) }
    dend_8 { pt3dadd( -10.776, -66.0637, -17.9223, 2.06 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 62/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 3.06297, -169.853, 19.3573, 0.88 ) }
    dend_4 { pt3dadd( 2.9216, -171.152, 19.204, 0.88 ) }
    dend_4 { pt3dadd( 2.82434, -172.392, 18.9685, 0.88 ) }
    dend_4 { pt3dadd( 2.79097, -173.255, 18.7826, 1.18 ) }
    dend_4 { pt3dadd( 2.77556, -173.815, 18.645, 1.18 ) }
    dend_4 { pt3dadd( 2.74273, -175.33, 18.2641, 0.52 ) }
    dend_4 { pt3dadd( 2.72785, -176.017, 18.0914, 0.52 ) }
    dend_4 { pt3dadd( 2.72882, -177.365, 17.7104, 1.99 ) }
    dend_4 { pt3dadd( 2.75296, -178.657, 17.2914, 3.09 ) }
    dend_4 { pt3dadd( 2.78166, -179.47, 17.001, 3.61 ) }
    dend_4 { pt3dadd( 2.81883, -180.426, 16.6542, 3.61 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 73/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 3.06297, -169.853, 19.3573, 0.74 ) }
    dend_3 { pt3dadd( 3.74887, -170.815, 18.8933, 0.74 ) }
    dend_3 { pt3dadd( 4.49429, -172.022, 18.3888, 0.66 ) }
    dend_3 { pt3dadd( 4.86581, -172.623, 18.1373, 1.11 ) }
    dend_3 { pt3dadd( 5.10465, -173.01, 17.9756, 1.25 ) }
    dend_3 { pt3dadd( 6.1971, -174.779, 17.2362, 0.29 ) }
    dend_3 { pt3dadd( 6.66141, -175.531, 16.9219, 0.29 ) }
    dend_3 { pt3dadd( 7.20178, -176.535, 16.4829, 0.29 ) }
    dend_3 { pt3dadd( 12.1581, -184.618, 13.8914, 0.29 ) }
    dend_3 { pt3dadd( 18.0868, -192.39, 12.7531, 0.29 ) }
    dend_3 { pt3dadd( 24.591, -199.625, 11.1296, 0.29 ) }
    dend_3 { pt3dadd( 30.3568, -207.581, 10.716, 0.29 ) }
    dend_3 { pt3dadd( 35.6226, -215.859, 10.2815, 0.29 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 86/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -20.6694, 133.031, -68.0653, 0.22 ) }
    dend_69 { pt3dadd( -21.3977, 132.329, -69.3978, 0.22 ) }
    dend_69 { pt3dadd( -21.6864, 132.091, -69.9703, 1.18 ) }
    dend_69 { pt3dadd( -21.787, 132.015, -70.1567, 1.18 ) }
    dend_69 { pt3dadd( -23.1584, 131.054, -72.5956, 0.22 ) }
    dend_69 { pt3dadd( -23.4565, 130.854, -73.1184, 0.22 ) }
    dend_69 { pt3dadd( -24.4313, 130.198, -74.8284, 0.74 ) }
    dend_69 { pt3dadd( -25.7005, 129.492, -77.0303, 0.22 ) }
    dend_69 { pt3dadd( -26.1085, 129.288, -77.7404, 1.03 ) }
    dend_69 { pt3dadd( -26.2704, 129.21, -78.0199, 1.25 ) }
    dend_69 { pt3dadd( -26.4015, 129.156, -78.2253, 1.25 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 97/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -20.6694, 133.031, -68.0653, 0.52 ) }
    dend_68 { pt3dadd( -20.3793, 134.205, -69.6656, 0.52 ) }
    dend_68 { pt3dadd( -20.2266, 134.932, -70.6133, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_68 { pt3dadd( -20.0517, 136.075, -71.9232, 0.88 ) }
    dend_68 { pt3dadd( -20.0298, 136.272, -72.1247, 1.03 ) }
    dend_68 { pt3dadd( -19.8961, 138.016, -73.7816, 0.15 ) }
    dend_68 { pt3dadd( -19.8711, 138.45, -74.1747, 0.52 ) }
    dend_68 { pt3dadd( -19.8783, 138.619, -74.3025, 0.52 ) }
    dend_68 { pt3dadd( -19.9681, 139.86, -75.107, 0.15 ) }
    dend_68 { pt3dadd( -20.0139, 140.427, -75.4188, 0.81 ) }
    dend_68 { pt3dadd( -20.0838, 141.177, -75.8045, 1.11 ) }
    dend_68 { pt3dadd( -20.0917, 141.24, -75.8306, 1.11 ) }
    dend_68 { pt3dadd( -20.269, 142.692, -76.4503, 0.22 ) }
    dend_68 { pt3dadd( -20.3451, 143.331, -76.7452, 0.96 ) }
    dend_68 { pt3dadd( -20.3925, 143.735, -76.9623, 1.11 ) }
    // Section: dend_66, id: dend_66, parent: dend_28 (entry count 12/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -10.9434, 125.393, -16.6091, 0.96 ) }
    dend_66 { pt3dadd( -11.4484, 126.285, -17.7904, 0.96 ) }
    dend_66 { pt3dadd( -11.9563, 127.189, -18.9706, 1.03 ) }
    dend_66 { pt3dadd( -12.0608, 127.401, -19.247, 1.03 ) }
    dend_66 { pt3dadd( -12.4012, 128.141, -20.2001, 0.29 ) }
    dend_66 { pt3dadd( -12.6218, 128.72, -20.8731, 1.25 ) }
    dend_66 { pt3dadd( -12.7514, 129.123, -21.2992, 1.47 ) }
    dend_66 { pt3dadd( -12.7825, 129.262, -21.4201, 1.47 ) }
    dend_66 { pt3dadd( -13.0239, 130.552, -22.3316, 0.29 ) }
    dend_66 { pt3dadd( -13.0423, 130.669, -22.4116, 0.29 ) }
    dend_66 { pt3dadd( -13.1579, 131.659, -23.0254, 0.29 ) }
    dend_66 { pt3dadd( -13.1886, 132.031, -23.2696, 0.59 ) }
    dend_66 { pt3dadd( -13.2398, 132.861, -23.821, 0.44 ) }
    dend_66 { pt3dadd( -13.2948, 133.911, -24.5183, 2.28 ) }
    dend_66 { pt3dadd( -13.326, 134.541, -24.9301, 2.65 ) }
    dend_66 { pt3dadd( -13.3406, 134.842, -25.1342, 2.65 ) }
    dend_66 { pt3dadd( -13.4522, 136.805, -26.5251, 0.37 ) }
    dend_66 { pt3dadd( -13.4806, 137.429, -26.9425, 0.29 ) }
    dend_66 { pt3dadd( -13.482, 137.508, -26.9907, 0.29 ) }
    dend_66 { pt3dadd( -13.4811, 137.958, -27.225, 0.44 ) }
    dend_66 { pt3dadd( -13.4824, 138.226, -27.3345, 0.44 ) }
    dend_66 { pt3dadd( -13.4959, 139.028, -27.5912, 0.15 ) }
    dend_66 { pt3dadd( -13.524, 139.731, -27.7167, 0.74 ) }
    dend_66 { pt3dadd( -13.5266, 139.799, -27.7309, 0.74 ) }
    dend_66 { pt3dadd( -13.5526, 140.21, -27.8548, 0.74 ) }
    dend_66 { pt3dadd( -13.5802, 140.553, -27.9722, 0.52 ) }
    dend_66 { pt3dadd( -13.6744, 141.352, -28.2594, 0.29 ) }
    dend_66 { pt3dadd( -13.8179, 142.341, -28.6197, 1.18 ) }
    dend_66 { pt3dadd( -13.8963, 142.806, -28.7912, 1.69 ) }
    dend_66 { pt3dadd( -14.1966, 144.456, -29.4763, 0.29 ) }
    dend_66 { pt3dadd( -14.3227, 145.095, -29.7543, 0.29 ) }
    dend_66 { pt3dadd( -14.5877, 146.305, -30.2888, 1.77 ) }
    dend_66 { pt3dadd( -14.6709, 146.624, -30.4363, 2.73 ) }
    dend_66 { pt3dadd( -14.7479, 146.875, -30.5566, 2.73 ) }
    dend_66 { pt3dadd( -15.449, 148.949, -31.5721, 0.29 ) }
    dend_66 { pt3dadd( -15.6737, 149.554, -31.8679, 0.29 ) }
    dend_66 { pt3dadd( -15.7659, 149.774, -31.9828, 0.59 ) }
    dend_66 { pt3dadd( -16.111, 150.5, -32.3887, 0.22 ) }
    dend_66 { pt3dadd( -16.3764, 150.999, -32.6756, 0.74 ) }
    dend_66 { pt3dadd( -16.4918, 151.172, -32.7742, 1.03 ) }
    dend_66 { pt3dadd( -16.538, 151.217, -32.7996, 1.03 ) }
    dend_66 { pt3dadd( -16.8397, 151.493, -32.9727, 0.81 ) }
    dend_66 { pt3dadd( -16.9241, 151.577, -33.022, 0.81 ) }
    dend_66 { pt3dadd( -17.7039, 152.435, -33.4486, 0.22 ) }
    dend_66 { pt3dadd( -18.0639, 152.864, -33.6427, 0.59 ) }
    dend_66 { pt3dadd( -18.6545, 153.583, -33.9483, 0.22 ) }
    dend_66 { pt3dadd( -18.7466, 153.697, -33.9922, 0.22 ) }
    dend_66 { pt3dadd( -19.1344, 154.197, -34.155, 0.22 ) }
    dend_66 { pt3dadd( -19.5843, 154.807, -34.3187, 0.22 ) }
    dend_66 { pt3dadd( -20.2025, 155.7, -34.5241, 1.62 ) }
    dend_66 { pt3dadd( -20.6309, 156.348, -34.6622, 2.14 ) }
    dend_66 { pt3dadd( -20.9982, 156.912, -34.7734, 2.14 ) }
    dend_66 { pt3dadd( -21.9489, 158.326, -35.053, 0.29 ) }
    dend_66 { pt3dadd( -22.2544, 158.769, -35.1405, 0.44 ) }
    dend_66 { pt3dadd( -22.5958, 159.273, -35.2408, 0.22 ) }
    dend_66 { pt3dadd( -23.1197, 160.08, -35.3988, 0.22 ) }
    dend_66 { pt3dadd( -23.5935, 160.857, -35.5545, 1.25 ) }
    dend_66 { pt3dadd( -23.7871, 161.191, -35.6254, 1.62 ) }
    dend_66 { pt3dadd( -23.8862, 161.382, -35.6726, 1.84 ) }
    dend_66 { pt3dadd( -24.5466, 162.828, -36.0837, 0.29 ) }
    dend_66 { pt3dadd( -25.0105, 163.989, -36.4369, 0.29 ) }
    dend_66 { pt3dadd( -25.2708, 164.79, -36.7154, 0.74 ) }
    dend_66 { pt3dadd( -25.3629, 165.111, -36.8478, 0.74 ) }
    dend_66 { pt3dadd( -25.6537, 166.226, -37.3561, 0.22 ) }
    dend_66 { pt3dadd( -25.8831, 167.212, -37.8362, 1.62 ) }
    dend_66 { pt3dadd( -25.8928, 167.263, -37.8621, 1.62 ) }
    dend_66 { pt3dadd( -26.0103, 167.977, -38.2164, 1.99 ) }
    dend_66 { pt3dadd( -26.2666, 169.695, -39.0406, 0.22 ) }
    dend_66 { pt3dadd( -26.2745, 169.748, -39.0649, 0.22 ) }
    dend_66 { pt3dadd( -26.408, 170.551, -39.3945, 0.22 ) }
    dend_66 { pt3dadd( -26.554, 171.431, -39.7214, 0.96 ) }
    dend_66 { pt3dadd( -26.6137, 171.768, -39.84, 1.25 ) }
    dend_66 { pt3dadd( -26.877, 173.31, -40.2987, 0.22 ) }
    dend_66 { pt3dadd( -26.8855, 173.366, -40.3128, 0.22 ) }
    dend_66 { pt3dadd( -27.0128, 174.144, -40.5052, 0.74 ) }
    dend_66 { pt3dadd( -27.0502, 174.353, -40.5555, 0.88 ) }
    dend_66 { pt3dadd( -27.1595, 174.906, -40.6873, 0.29 ) }
    dend_66 { pt3dadd( -27.38, 175.978, -40.9162, 0.22 ) }
    dend_66 { pt3dadd( -27.5211, 176.673, -41.0344, 0.22 ) }
    dend_66 { pt3dadd( -27.6689, 177.655, -41.1551, 1.33 ) }
    dend_66 { pt3dadd( -27.7045, 178.02, -41.1831, 1.92 ) }
    dend_66 { pt3dadd( -27.709, 178.078, -41.1854, 1.92 ) }
    dend_66 { pt3dadd( -27.7365, 178.517, -41.1911, 1.77 ) }
    dend_66 { pt3dadd( -27.7668, 178.972, -41.1926, 1.69 ) }
    dend_66 { pt3dadd( -27.8676, 180.53, -41.1862, 0.22 ) }
    dend_66 { pt3dadd( -27.9828, 181.816, -41.1533, 0.22 ) }
    dend_66 { pt3dadd( -28.1196, 183.021, -41.1132, 1.47 ) }
    dend_66 { pt3dadd( -28.1924, 183.539, -41.0932, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_66 { pt3dadd( -28.2545, 183.884, -41.0793, 1.92 ) }
    dend_66 { pt3dadd( -28.366, 184.369, -41.0603, 1.47 ) }
    dend_66 { pt3dadd( -28.8534, 186.054, -41.0061, 0.22 ) }
    dend_66 { pt3dadd( -29.0781, 186.732, -40.979, 0.44 ) }
    dend_66 { pt3dadd( -29.1831, 187.049, -40.9715, 0.44 ) }
    dend_66 { pt3dadd( -29.4754, 187.943, -40.9628, 0.22 ) }
    dend_66 { pt3dadd( -29.7954, 188.98, -40.9729, 1.18 ) }
    dend_66 { pt3dadd( -29.937, 189.475, -40.9868, 2.14 ) }
    dend_66 { pt3dadd( -30.0905, 190.048, -41.0204, 1.62 ) }
    dend_66 { pt3dadd( -30.5568, 191.872, -41.1426, 0.22 ) }
    dend_66 { pt3dadd( -30.5728, 191.939, -41.1475, 0.22 ) }
    dend_66 { pt3dadd( -30.8855, 193.404, -41.2446, 0.22 ) }
    dend_66 { pt3dadd( -31.132, 194.66, -41.3175, 0.22 ) }
    dend_66 { pt3dadd( -31.2811, 195.484, -41.3422, 1.03 ) }
    dend_66 { pt3dadd( -31.3301, 195.767, -41.343, 1.62 ) }
    dend_66 { pt3dadd( -31.3803, 196.051, -41.3332, 1.11 ) }
    dend_66 { pt3dadd( -31.5623, 197.414, -41.2209, 0.22 ) }
    dend_66 { pt3dadd( -31.5675, 197.471, -41.2132, 0.22 ) }
    dend_66 { pt3dadd( -31.6192, 198.57, -41.0259, 1.47 ) }
    dend_66 { pt3dadd( -31.6284, 198.928, -40.9568, 2.06 ) }
    dend_66 { pt3dadd( -31.6304, 199.005, -40.9419, 2.06 ) }
    dend_66 { pt3dadd( -31.6973, 200.671, -40.6681, 0.22 ) }
    dend_66 { pt3dadd( -31.7488, 201.597, -40.5415, 0.52 ) }
    dend_66 { pt3dadd( -31.8511, 202.828, -40.4053, 0.22 ) }
    dend_66 { pt3dadd( -31.9387, 203.645, -40.3349, 1.33 ) }
    dend_66 { pt3dadd( -31.994, 204.066, -40.3139, 1.33 ) }
    dend_66 { pt3dadd( -32.221, 205.5, -40.2971, 0.22 ) }
    dend_66 { pt3dadd( -32.3256, 206.049, -40.3207, 0.22 ) }
    dend_66 { pt3dadd( -32.4643, 206.797, -40.3766, 0.66 ) }
    dend_66 { pt3dadd( -32.5171, 207.09, -40.4076, 0.66 ) }
    dend_66 { pt3dadd( -32.7308, 208.472, -40.5724, 0.22 ) }
    dend_66 { pt3dadd( -32.7369, 208.542, -40.5819, 0.22 ) }
    dend_66 { pt3dadd( -32.7643, 209.479, -40.7166, 0.22 ) }
    dend_66 { pt3dadd( -32.7551, 210.364, -40.8675, 0.96 ) }
    dend_66 { pt3dadd( -32.7343, 210.853, -40.959, 1.62 ) }
    dend_66 { pt3dadd( -32.7087, 211.361, -41.0574, 1.4 ) }
    dend_66 { pt3dadd( -32.6725, 212.978, -41.3858, 0.22 ) }
    dend_66 { pt3dadd( -32.6774, 213.398, -41.4782, 0.22 ) }
    dend_66 { pt3dadd( -32.7235, 214.402, -41.711, 1.11 ) }
    dend_66 { pt3dadd( -32.7347, 214.547, -41.7445, 1.33 ) }
    dend_66 { pt3dadd( -32.7785, 214.961, -41.8503, 1.18 ) }
    dend_66 { pt3dadd( -33.007, 216.789, -42.3244, 0.22 ) }
    dend_66 { pt3dadd( -33.134, 217.639, -42.5543, 1.03 ) }
    dend_66 { pt3dadd( -33.2079, 218.114, -42.6845, 1.18 ) }
    dend_66 { pt3dadd( -33.262, 218.454, -42.792, 1.03 ) }
    dend_66 { pt3dadd( -33.4441, 219.617, -43.2024, 0.15 ) }
    dend_66 { pt3dadd( -33.587, 220.591, -43.5736, 0.15 ) }
    dend_66 { pt3dadd( -33.7128, 221.503, -43.9296, 1.33 ) }
    dend_66 { pt3dadd( -33.7855, 222.01, -44.1234, 1.55 ) }
    dend_66 { pt3dadd( -34.0499, 223.799, -44.8228, 0.15 ) }
    dend_66 { pt3dadd( -34.0602, 223.865, -44.8476, 0.15 ) }
    dend_66 { pt3dadd( -34.2, 224.687, -45.1264, 0.15 ) }
    dend_66 { pt3dadd( -34.3678, 225.63, -45.4325, 1.11 ) }
    dend_66 { pt3dadd( -34.421, 225.954, -45.5238, 1.55 ) }
    dend_66 { pt3dadd( -34.6296, 227.363, -45.8599, 0.15 ) }
    dend_66 { pt3dadd( -34.7405, 228.121, -45.9898, 0.74 ) }
    dend_66 { pt3dadd( -34.9129, 229.245, -46.1651, 0.15 ) }
    dend_66 { pt3dadd( -34.9245, 229.311, -46.1743, 0.15 ) }
    dend_66 { pt3dadd( -35.043, 229.95, -46.2513, 0.15 ) }
    dend_66 { pt3dadd( -35.1858, 230.719, -46.3182, 0.96 ) }
    dend_66 { pt3dadd( -35.2494, 231.071, -46.337, 0.96 ) }
    dend_66 { pt3dadd( -35.5215, 232.631, -46.4344, 0.15 ) }
    dend_66 { pt3dadd( -35.6273, 233.294, -46.4783, 0.44 ) }
    dend_66 { pt3dadd( -35.6396, 233.372, -46.4857, 0.44 ) }
    dend_66 { pt3dadd( -35.7914, 234.367, -46.6151, 0.15 ) }
    dend_66 { pt3dadd( -35.9269, 235.325, -46.7624, 1.03 ) }
    dend_66 { pt3dadd( -35.9793, 235.742, -46.8324, 1.33 ) }
    dend_66 { pt3dadd( -36.0401, 236.397, -46.9585, 0.59 ) }
    dend_66 { pt3dadd( -36.1179, 237.494, -47.1895, 0.15 ) }
    dend_66 { pt3dadd( -36.1746, 238.319, -47.3697, 0.88 ) }
    dend_66 { pt3dadd( -36.2047, 238.795, -47.4761, 1.03 ) }
    dend_66 { pt3dadd( -36.2344, 239.292, -47.5833, 0.66 ) }
    dend_66 { pt3dadd( -36.2762, 240.427, -47.8917, 0.15 ) }
    dend_66 { pt3dadd( -36.3034, 241.617, -48.2566, 0.15 ) }
    dend_66 { pt3dadd( -36.3099, 242.384, -48.467, 0.96 ) }
    dend_66 { pt3dadd( -36.3177, 242.824, -48.5787, 1.25 ) }
    dend_66 { pt3dadd( -36.325, 243.118, -48.6472, 1.25 ) }
    dend_66 { pt3dadd( -36.4039, 244.951, -49.031, 0.15 ) }
    dend_66 { pt3dadd( -36.44, 245.441, -49.111, 0.44 ) }
    dend_66 { pt3dadd( -36.5449, 246.509, -49.2438, 0.15 ) }
    dend_66 { pt3dadd( -36.5993, 247.011, -49.2808, 0.74 ) }
    dend_66 { pt3dadd( -36.6563, 247.515, -49.2969, 0.74 ) }
    dend_66 { pt3dadd( -36.7483, 248.465, -49.2859, 0.15 ) }
    dend_66 { pt3dadd( -36.8274, 249.256, -49.2394, 0.88 ) }
    dend_66 { pt3dadd( -36.8687, 249.751, -49.2262, 0.96 ) }
    dend_66 { pt3dadd( -36.9501, 250.982, -49.2369, 0.15 ) }
    dend_66 { pt3dadd( -36.9924, 251.635, -49.2362, 0.29 ) }
    dend_66 { pt3dadd( -37.0734, 252.829, -49.2242, 0.15 ) }
    dend_66 { pt3dadd( -37.1166, 253.482, -49.2107, 0.96 ) }
    dend_66 { pt3dadd( -37.1468, 254.048, -49.1999, 1.18 ) }
    dend_66 { pt3dadd( -37.2461, 255.977, -49.1438, 0.22 ) }
    dend_66 { pt3dadd( -37.288, 256.846, -49.1122, 0.22 ) }
    dend_66 { pt3dadd( -37.298, 257.064, -49.1018, 0.22 ) }
    dend_66 { pt3dadd( -37.3039, 257.215, -49.0928, 0.22 ) }
    dend_66 { pt3dadd( -37.3161, 258.229, -49.0762, 0.15 ) }
    dend_66 { pt3dadd( -37.32, 259.08, -49.0999, 1.11 ) }
    dend_66 { pt3dadd( -37.3173, 259.547, -49.1317, 1.77 ) }
    dend_66 { pt3dadd( -37.3119, 259.913, -49.1664, 1.77 ) }
    dend_66 { pt3dadd( -37.3114, 259.993, -49.1755, 1.77 ) }
    dend_66 { pt3dadd( -37.3066, 262.136, -49.4149, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_66 { pt3dadd( -37.3217, 262.84, -49.49, 0.15 ) }
    dend_66 { pt3dadd( -37.3231, 262.898, -49.4958, 0.15 ) }
    dend_66 { pt3dadd( -37.3468, 263.576, -49.5469, 0.52 ) }
    dend_66 { pt3dadd( -37.3658, 263.87, -49.5632, 0.59 ) }
    dend_66 { pt3dadd( -37.5276, 265.494, -49.6165, 0.15 ) }
    dend_66 { pt3dadd( -37.6226, 266.346, -49.6154, 1.03 ) }
    dend_66 { pt3dadd( -37.6715, 266.796, -49.6176, 1.77 ) }
    dend_66 { pt3dadd( -37.7202, 267.23, -49.623, 1.55 ) }
    dend_66 { pt3dadd( -37.9729, 269.091, -49.6629, 0.15 ) }
    dend_66 { pt3dadd( -38.0424, 269.535, -49.6813, 0.29 ) }
    dend_66 { pt3dadd( -38.1756, 270.292, -49.7309, 0.15 ) }
    dend_66 { pt3dadd( -38.3313, 271.134, -49.7935, 0.15 ) }
    dend_66 { pt3dadd( -38.3593, 271.28, -49.8044, 0.15 ) }
    dend_66 { pt3dadd( -38.6491, 272.771, -49.9319, 0.15 ) }
    dend_66 { pt3dadd( -38.861, 273.841, -50.0283, 1.11 ) }
    dend_66 { pt3dadd( -38.8749, 273.908, -50.0347, 1.11 ) }
    dend_66 { pt3dadd( -39.0074, 274.506, -50.092, 1.4 ) }
    dend_66 { pt3dadd( -39.1373, 275.179, -50.1661, 0.59 ) }
    dend_66 { pt3dadd( -39.3191, 276.26, -50.2905, 0.22 ) }
    dend_66 { pt3dadd( -39.4327, 277.112, -50.3892, 0.22 ) }
    dend_66 { pt3dadd( -39.5419, 278.023, -50.4901, 1.03 ) }
    dend_66 { pt3dadd( -39.5973, 278.584, -50.556, 1.55 ) }
    dend_66 { pt3dadd( -39.7876, 281.063, -50.8403, 0.15 ) }
    dend_66 { pt3dadd( -39.7927, 281.133, -50.848, 0.15 ) }
    dend_66 { pt3dadd( -39.8355, 281.734, -50.8962, 0.44 ) }
    dend_66 { pt3dadd( -39.8586, 282.101, -50.9167, 0.44 ) }
    dend_66 { pt3dadd( -39.9552, 283.607, -50.977, 0.15 ) }
    dend_66 { pt3dadd( -40.0158, 284.476, -51.004, 1.03 ) }
    dend_66 { pt3dadd( -40.0582, 285.057, -51.0141, 1.62 ) }
    dend_66 { pt3dadd( -40.2139, 286.913, -51.1406, 0.15 ) }
    dend_66 { pt3dadd( -40.4433, 289.302, -51.3838, 0.15 ) }
    dend_66 { pt3dadd( -40.5447, 290.271, -51.5078, 0.15 ) }
    dend_66 { pt3dadd( -40.6204, 290.932, -51.6092, 1.11 ) }
    dend_66 { pt3dadd( -40.7004, 291.647, -51.7424, 1.4 ) }
    dend_66 { pt3dadd( -40.9358, 294.018, -52.2499, 0.15 ) }
    dend_66 { pt3dadd( -41.0018, 294.711, -52.4188, 0.15 ) }
    dend_66 { pt3dadd( -41.0799, 295.549, -52.6239, 0.74 ) }
    dend_66 { pt3dadd( -41.1008, 295.922, -52.7005, 0.74 ) }
    dend_66 { pt3dadd( -41.1023, 295.99, -52.7116, 0.74 ) }
    dend_66 { pt3dadd( -41.0916, 297.888, -52.948, 0.15 ) }
    dend_66 { pt3dadd( -41.0522, 299.026, -53.0254, 1.55 ) }
    dend_66 { pt3dadd( -41.0116, 299.733, -53.0756, 1.92 ) }
    dend_66 { pt3dadd( -40.8732, 301.814, -53.2214, 0.15 ) }
    dend_66 { pt3dadd( -40.8252, 302.499, -53.2676, 0.88 ) }
    dend_66 { pt3dadd( -40.8137, 302.646, -53.2775, 0.88 ) }
    dend_66 { pt3dadd( -40.7665, 303.142, -53.312, 0.88 ) }
    dend_66 { pt3dadd( -40.6088, 304.643, -53.4244, 0.15 ) }
    dend_66 { pt3dadd( -40.5555, 305.218, -53.4584, 0.15 ) }
    dend_66 { pt3dadd( -40.5037, 305.829, -53.4802, 0.74 ) }
    dend_66 { pt3dadd( -40.3892, 307.244, -53.515, 0.15 ) }
    dend_66 { pt3dadd( -40.3849, 307.312, -53.5151, 0.15 ) }
    dend_66 { pt3dadd( -40.3689, 307.66, -53.5069, 0.37 ) }
    dend_66 { pt3dadd( -40.3564, 308.463, -53.4645, 0.22 ) }
    dend_66 { pt3dadd( -40.3571, 308.98, -53.4223, 0.88 ) }
    dend_66 { pt3dadd( -40.3588, 309.039, -53.4161, 0.88 ) }
    dend_66 { pt3dadd( -40.4346, 310.613, -53.3101, 0.15 ) }
    dend_66 { pt3dadd( -40.4688, 311.28, -53.2868, 0.15 ) }
    dend_66 { pt3dadd( -40.4725, 311.359, -53.2866, 0.15 ) }
    dend_66 { pt3dadd( -40.5265, 312.462, -53.3209, 1.25 ) }
    dend_66 { pt3dadd( -40.5401, 312.739, -53.3422, 1.25 ) }
    dend_66 { pt3dadd( -40.658, 314.572, -53.5448, 0.15 ) }
    dend_66 { pt3dadd( -40.6635, 314.642, -53.555, 0.15 ) }
    dend_66 { pt3dadd( -40.7218, 315.309, -53.6781, 1.18 ) }
    dend_66 { pt3dadd( -40.7434, 315.514, -53.7184, 1.18 ) }
    dend_66 { pt3dadd( -40.9169, 317.007, -54.0821, 0.15 ) }
    dend_66 { pt3dadd( -41.0886, 318.101, -54.4026, 0.15 ) }
    dend_66 { pt3dadd( -41.1429, 318.371, -54.4899, 0.44 ) }
    dend_66 { pt3dadd( -41.5489, 320.23, -55.124, 0.15 ) }
    dend_66 { pt3dadd( -41.8651, 321.56, -55.607, 1.77 ) }
    dend_66 { pt3dadd( -42.0634, 322.347, -55.9135, 1.55 ) }
    dend_66 { pt3dadd( -42.4004, 323.596, -56.4327, 0.22 ) }
    dend_66 { pt3dadd( -42.5518, 324.116, -56.6731, 0.37 ) }
    dend_66 { pt3dadd( -42.816, 324.942, -57.0705, 0.15 ) }
    dend_66 { pt3dadd( -42.8352, 324.992, -57.0953, 0.15 ) }
    dend_66 { pt3dadd( -43.0651, 325.556, -57.3869, 0.74 ) }
    dend_66 { pt3dadd( -43.1923, 325.865, -57.5298, 0.74 ) }
    dend_66 { pt3dadd( -43.4708, 326.589, -57.8386, 0.15 ) }
    dend_66 { pt3dadd( -43.6528, 327.03, -58.024, 0.66 ) }
    dend_66 { pt3dadd( -43.7959, 327.359, -58.1541, 1.25 ) }
    dend_66 { pt3dadd( -44.451, 328.785, -58.7185, 0.15 ) }
    dend_66 { pt3dadd( -44.4837, 328.854, -58.7453, 0.15 ) }
    dend_66 { pt3dadd( -44.8876, 329.722, -59.068, 0.15 ) }
    dend_66 { pt3dadd( -45.2488, 330.54, -59.3457, 0.96 ) }
    dend_66 { pt3dadd( -45.4117, 330.915, -59.4742, 1.55 ) }
    dend_66 { pt3dadd( -46.2237, 332.873, -60.1208, 0.15 ) }
    dend_66 { pt3dadd( -46.2438, 332.926, -60.1364, 0.15 ) }
    dend_66 { pt3dadd( -46.59, 333.909, -60.4159, 1.18 ) }
    dend_66 { pt3dadd( -46.7823, 334.506, -60.5798, 0.52 ) }
    dend_66 { pt3dadd( -47.0823, 335.563, -60.8446, 0.15 ) }
    dend_66 { pt3dadd( -47.2406, 336.177, -60.9803, 0.52 ) }
    dend_66 { pt3dadd( -47.677, 337.974, -61.2935, 0.15 ) }
    dend_66 { pt3dadd( -47.8434, 338.584, -61.3829, 0.15 ) }
    dend_66 { pt3dadd( -48.1244, 339.479, -61.4901, 0.66 ) }
    dend_66 { pt3dadd( -48.3176, 340.021, -61.5361, 0.96 ) }
    dend_66 { pt3dadd( -48.478, 340.419, -61.5504, 0.96 ) }
    dend_66 { pt3dadd( -49.1769, 341.846, -61.5103, 0.15 ) }
    dend_66 { pt3dadd( -49.7149, 342.767, -61.4312, 0.52 ) }
    dend_66 { pt3dadd( -49.9607, 343.16, -61.3868, 0.52 ) }
    dend_66 { pt3dadd( -50.3699, 343.779, -61.3022, 0.15 ) }
    dend_66 { pt3dadd( -50.8681, 344.506, -61.1918, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_66 { pt3dadd( -52.1205, 346.285, -60.8873, 0.15 ) }
    dend_66 { pt3dadd( -52.5689, 346.909, -60.7596, 1.18 ) }
    dend_66 { pt3dadd( -52.9027, 347.378, -60.6689, 0.59 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 3/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -10.9434, 125.393, -16.6091, 0.59 ) }
    dend_29 { pt3dadd( -10.8168, 126.273, -16.6312, 0.59 ) }
    dend_29 { pt3dadd( -10.7364, 127.061, -16.6652, 1.18 ) }
    dend_29 { pt3dadd( -10.6861, 127.822, -16.7182, 1.84 ) }
    dend_29 { pt3dadd( -10.6679, 128.273, -16.753, 2.06 ) }
    dend_29 { pt3dadd( -10.6626, 128.708, -16.7861, 2.06 ) }
    dend_29 { pt3dadd( -10.6701, 129.263, -16.826, 1.84 ) }
    dend_29 { pt3dadd( -10.7075, 129.873, -16.8676, 1.55 ) }
    dend_29 { pt3dadd( -10.8161, 130.963, -16.9415, 0.37 ) }
    dend_29 { pt3dadd( -10.9056, 131.661, -16.9859, 0.37 ) }
    dend_29 { pt3dadd( -11.0329, 132.514, -17.0507, 0.96 ) }
    dend_29 { pt3dadd( -11.1732, 133.363, -17.1195, 1.47 ) }
    dend_29 { pt3dadd( -11.2487, 133.783, -17.1525, 1.69 ) }
    dend_29 { pt3dadd( -11.3603, 134.407, -17.1952, 1.55 ) }
    dend_29 { pt3dadd( -11.4627, 134.974, -17.2326, 1.33 ) }
    dend_29 { pt3dadd( -11.5645, 135.709, -17.2806, 0.66 ) }
    dend_29 { pt3dadd( -11.6434, 136.636, -17.3563, 0.37 ) }
    dend_29 { pt3dadd( -11.6808, 137.693, -17.4518, 0.29 ) }
    dend_29 { pt3dadd( -11.6756, 138.596, -17.5368, 0.29 ) }
    dend_29 { pt3dadd( -11.6718, 138.666, -17.5434, 0.29 ) }
    dend_29 { pt3dadd( -11.5147, 140.202, -17.6739, 0.29 ) }
    dend_29 { pt3dadd( -11.4125, 140.938, -17.7238, 0.81 ) }
    dend_29 { pt3dadd( -11.3269, 141.479, -17.761, 0.96 ) }
    dend_29 { pt3dadd( -11.3173, 141.547, -17.765, 0.96 ) }
    dend_29 { pt3dadd( -11.2733, 141.979, -17.787, 0.96 ) }
    dend_29 { pt3dadd( -11.2115, 143.07, -17.8284, 0.29 ) }
    dend_29 { pt3dadd( -11.21, 143.716, -17.8461, 0.29 ) }
    dend_29 { pt3dadd( -11.2319, 144.593, -17.8572, 1.47 ) }
    dend_29 { pt3dadd( -11.2688, 145.437, -17.8882, 2.06 ) }
    dend_29 { pt3dadd( -11.279, 145.747, -17.9049, 2.5 ) }
    dend_29 { pt3dadd( -11.2941, 146.243, -17.9377, 2.43 ) }
    dend_29 { pt3dadd( -11.3056, 146.777, -17.977, 2.14 ) }
    dend_29 { pt3dadd( -11.314, 147.387, -18.0259, 1.77 ) }
    dend_29 { pt3dadd( -11.3232, 148.216, -18.0927, 0.66 ) }
    dend_29 { pt3dadd( -11.3417, 149.473, -18.1884, 0.44 ) }
    dend_29 { pt3dadd( -11.3659, 150.473, -18.255, 0.37 ) }
    dend_29 { pt3dadd( -11.4025, 151.408, -18.3092, 0.37 ) }
    dend_29 { pt3dadd( -11.4663, 152.344, -18.3523, 1.33 ) }
    dend_29 { pt3dadd( -11.5491, 153.183, -18.3823, 1.77 ) }
    dend_29 { pt3dadd( -11.6514, 153.972, -18.3978, 2.28 ) }
    dend_29 { pt3dadd( -11.7351, 154.46, -18.4118, 2.65 ) }
    dend_29 { pt3dadd( -11.8116, 154.88, -18.4266, 2.8 ) }
    dend_29 { pt3dadd( -11.9219, 155.463, -18.4484, 2.5 ) }
    dend_29 { pt3dadd( -12.0061, 155.953, -18.4656, 1.99 ) }
    dend_29 { pt3dadd( -12.0706, 156.367, -18.4812, 1.77 ) }
    dend_29 { pt3dadd( -12.1565, 157.042, -18.5069, 0.81 ) }
    dend_29 { pt3dadd( -12.2317, 157.96, -18.5345, 0.44 ) }
    dend_29 { pt3dadd( -12.2773, 158.893, -18.5603, 0.37 ) }
    dend_29 { pt3dadd( -12.2817, 159.714, -18.5767, 0.74 ) }
    dend_29 { pt3dadd( -12.2755, 160.131, -18.5814, 0.74 ) }
    dend_29 { pt3dadd( -12.2663, 160.742, -18.5822, 0.74 ) }
    dend_29 { pt3dadd( -12.2653, 161.971, -18.5851, 0.52 ) }
    dend_29 { pt3dadd( -12.2661, 162.03, -18.5856, 0.44 ) }
    dend_29 { pt3dadd( -12.2933, 162.956, -18.5999, 0.44 ) }
    dend_29 { pt3dadd( -12.3297, 163.732, -18.6147, 0.44 ) }
    dend_29 { pt3dadd( -12.4126, 165.087, -18.6444, 0.44 ) }
    dend_29 { pt3dadd( -12.5509, 166.729, -18.684, 1.55 ) }
    dend_29 { pt3dadd( -12.6309, 167.518, -18.7048, 2.43 ) }
    dend_29 { pt3dadd( -12.6879, 168.092, -18.7184, 2.65 ) }
    dend_29 { pt3dadd( -12.7377, 168.587, -18.7369, 2.87 ) }
    dend_29 { pt3dadd( -12.8097, 169.308, -18.7693, 2.36 ) }
    dend_29 { pt3dadd( -12.888, 170.077, -18.8219, 1.47 ) }
    dend_29 { pt3dadd( -12.9405, 170.591, -18.8561, 0.96 ) }
    dend_29 { pt3dadd( -13.0543, 171.607, -18.9263, 0.37 ) }
    dend_29 { pt3dadd( -13.1613, 172.513, -18.987, 0.37 ) }
    dend_29 { pt3dadd( -13.2949, 173.632, -19.0575, 0.29 ) }
    dend_29 { pt3dadd( -13.3889, 174.497, -19.1164, 1.69 ) }
    dend_29 { pt3dadd( -13.4769, 175.355, -19.2022, 2.28 ) }
    dend_29 { pt3dadd( -13.5216, 175.736, -19.2513, 2.73 ) }
    dend_29 { pt3dadd( -13.5718, 176.095, -19.3054, 2.8 ) }
    dend_29 { pt3dadd( -13.6697, 176.743, -19.4097, 1.99 ) }
    dend_29 { pt3dadd( -13.8137, 177.654, -19.579, 0.88 ) }
    dend_29 { pt3dadd( -14.0184, 178.72, -19.7898, 0.29 ) }
    dend_29 { pt3dadd( -14.187, 179.438, -19.9497, 0.37 ) }
    dend_29 { pt3dadd( -14.3189, 179.946, -20.0613, 0.44 ) }
    dend_29 { pt3dadd( -14.399, 180.219, -20.1132, 0.59 ) }
    dend_29 { pt3dadd( -14.4403, 180.354, -20.1311, 0.59 ) }
    dend_29 { pt3dadd( -14.5688, 180.794, -20.1566, 0.44 ) }
    dend_29 { pt3dadd( -14.7331, 181.503, -20.1566, 0.37 ) }
    dend_29 { pt3dadd( -14.745, 181.571, -20.1558, 0.37 ) }
    dend_29 { pt3dadd( -14.8775, 182.636, -20.147, 0.52 ) }
    dend_29 { pt3dadd( -14.957, 183.569, -20.1386, 0.81 ) }
    dend_29 { pt3dadd( -14.9763, 184.011, -20.1386, 0.81 ) }
    dend_29 { pt3dadd( -14.9789, 184.467, -20.1434, 0.66 ) }
    dend_29 { pt3dadd( -14.9777, 184.526, -20.146, 0.66 ) }
    dend_29 { pt3dadd( -14.9756, 185.066, -20.193, 0.44 ) }
    dend_29 { pt3dadd( -14.974, 186.076, -20.3192, 0.37 ) }
    dend_29 { pt3dadd( -14.9719, 187.021, -20.4515, 0.37 ) }
    dend_29 { pt3dadd( -14.9714, 187.078, -20.4623, 0.37 ) }
    dend_29 { pt3dadd( -14.9579, 188.005, -20.6885, 1.62 ) }
    dend_29 { pt3dadd( -14.9471, 188.793, -20.9135, 2.65 ) }
    dend_29 { pt3dadd( -14.9413, 189.247, -21.0577, 2.65 ) }
    dend_29 { pt3dadd( -14.9259, 190.194, -21.3883, 1.92 ) }
    dend_29 { pt3dadd( -14.9077, 191.341, -21.8002, 0.74 ) }
    dend_29 { pt3dadd( -14.9051, 192.377, -22.1569, 0.37 ) }
    dend_29 { pt3dadd( -14.9253, 193.295, -22.425, 0.37 ) }
    dend_29 { pt3dadd( -14.9284, 193.352, -22.4383, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_29 { pt3dadd( -14.9942, 193.943, -22.5396, 0.37 ) }
    dend_29 { pt3dadd( -15.0191, 194.09, -22.5527, 0.37 ) }
    dend_29 { pt3dadd( -15.2056, 194.934, -22.5338, 0.37 ) }
    dend_29 { pt3dadd( -15.4605, 195.952, -22.4457, 1.03 ) }
    dend_29 { pt3dadd( -15.6696, 196.776, -22.3597, 1.77 ) }
    dend_29 { pt3dadd( -15.7857, 197.258, -22.3116, 2.06 ) }
    dend_29 { pt3dadd( -15.8972, 197.741, -22.263, 1.92 ) }
    dend_29 { pt3dadd( -16.0475, 198.452, -22.2012, 1.33 ) }
    dend_29 { pt3dadd( -16.1404, 198.953, -22.1689, 0.59 ) }
    dend_29 { pt3dadd( -16.2778, 199.796, -22.146, 0.37 ) }
    dend_29 { pt3dadd( -16.3375, 200.311, -22.1335, 0.59 ) }
    dend_29 { pt3dadd( -16.3559, 200.668, -22.127, 0.66 ) }
    dend_29 { pt3dadd( -16.3569, 200.886, -22.1245, 0.66 ) }
    dend_29 { pt3dadd( -16.3518, 201.393, -22.1228, 0.37 ) }
    dend_29 { pt3dadd( -16.3498, 201.901, -22.1228, 0.37 ) }
    dend_29 { pt3dadd( -16.3726, 202.852, -22.1228, 0.37 ) }
    dend_29 { pt3dadd( -16.4147, 203.778, -22.1228, 0.37 ) }
    dend_29 { pt3dadd( -16.4664, 204.64, -22.1228, 0.59 ) }
    dend_29 { pt3dadd( -16.5537, 205.924, -22.1228, 0.52 ) }
    dend_29 { pt3dadd( -16.6116, 206.706, -22.1228, 1.33 ) }
    dend_29 { pt3dadd( -16.6707, 207.446, -22.1331, 2.14 ) }
    dend_29 { pt3dadd( -16.7383, 208.173, -22.1663, 2.36 ) }
    dend_29 { pt3dadd( -16.787, 208.815, -22.2173, 2.58 ) }
    dend_29 { pt3dadd( -16.8006, 209.351, -22.2741, 2.36 ) }
    dend_29 { pt3dadd( -16.7874, 210.155, -22.3709, 1.62 ) }
    dend_29 { pt3dadd( -16.7574, 210.944, -22.4742, 0.81 ) }
    dend_29 { pt3dadd( -16.7058, 211.938, -22.6055, 0.52 ) }
    dend_29 { pt3dadd( -16.6501, 213.0, -22.733, 0.52 ) }
    dend_29 { pt3dadd( -16.6121, 213.76, -22.815, 0.44 ) }
    dend_29 { pt3dadd( -16.5566, 215.182, -22.9462, 0.44 ) }
    dend_29 { pt3dadd( -16.5222, 216.594, -23.0465, 1.11 ) }
    dend_29 { pt3dadd( -16.5223, 217.383, -23.0768, 1.84 ) }
    dend_29 { pt3dadd( -16.5495, 218.159, -23.0872, 2.36 ) }
    dend_29 { pt3dadd( -16.5747, 218.435, -23.088, 2.5 ) }
    dend_29 { pt3dadd( -16.67, 219.075, -23.086, 2.21 ) }
    dend_29 { pt3dadd( -16.7888, 219.699, -23.0787, 1.55 ) }
    dend_29 { pt3dadd( -16.9139, 220.265, -23.0669, 0.96 ) }
    dend_29 { pt3dadd( -17.0377, 220.804, -23.0572, 0.66 ) }
    dend_29 { pt3dadd( -17.2107, 221.65, -23.047, 0.37 ) }
    dend_29 { pt3dadd( -17.3351, 222.407, -23.0356, 0.66 ) }
    dend_29 { pt3dadd( -17.412, 222.988, -23.0239, 0.88 ) }
    dend_29 { pt3dadd( -17.4991, 223.921, -23.0019, 0.37 ) }
    dend_29 { pt3dadd( -17.5316, 224.498, -22.9872, 0.37 ) }
    dend_29 { pt3dadd( -17.5544, 225.434, -22.9589, 0.37 ) }
    dend_29 { pt3dadd( -17.5362, 226.587, -22.9243, 1.11 ) }
    dend_29 { pt3dadd( -17.533, 226.645, -22.9227, 1.11 ) }
    dend_29 { pt3dadd( -17.4531, 227.443, -22.9163, 1.99 ) }
    dend_29 { pt3dadd( -17.3727, 228.034, -22.9225, 2.21 ) }
    dend_29 { pt3dadd( -17.3068, 228.458, -22.9345, 2.36 ) }
    dend_29 { pt3dadd( -17.1533, 229.442, -22.9726, 1.33 ) }
    dend_29 { pt3dadd( -17.0475, 230.125, -23.0042, 0.52 ) }
    dend_29 { pt3dadd( -16.9101, 231.146, -23.0542, 0.29 ) }
    dend_29 { pt3dadd( -16.8632, 231.572, -23.0744, 0.59 ) }
    dend_29 { pt3dadd( -16.8315, 231.93, -23.0899, 0.59 ) }
    dend_29 { pt3dadd( -16.7797, 232.643, -23.1159, 0.44 ) }
    dend_29 { pt3dadd( -16.743, 233.296, -23.1339, 0.37 ) }
    dend_29 { pt3dadd( -16.7065, 234.017, -23.145, 0.37 ) }
    dend_29 { pt3dadd( -16.6665, 234.825, -23.1576, 1.18 ) }
    dend_29 { pt3dadd( -16.6257, 235.418, -23.1759, 1.77 ) }
    dend_29 { pt3dadd( -16.5682, 236.061, -23.203, 2.06 ) }
    dend_29 { pt3dadd( -16.508, 236.637, -23.2331, 1.92 ) }
    dend_29 { pt3dadd( -16.4452, 237.199, -23.2675, 1.55 ) }
    dend_29 { pt3dadd( -16.3695, 238.077, -23.3235, 0.37 ) }
    dend_29 { pt3dadd( -16.3133, 239.036, -23.3866, 0.37 ) }
    dend_29 { pt3dadd( -16.3126, 239.107, -23.3925, 0.37 ) }
    dend_29 { pt3dadd( -16.3377, 239.825, -23.4594, 0.37 ) }
    dend_29 { pt3dadd( -16.3423, 239.896, -23.4661, 0.37 ) }
    dend_29 { pt3dadd( -16.4476, 241.246, -23.5867, 0.37 ) }
    dend_29 { pt3dadd( -16.4545, 241.317, -23.5921, 0.37 ) }
    dend_29 { pt3dadd( -16.5897, 242.575, -23.7025, 1.18 ) }
    dend_29 { pt3dadd( -16.6738, 243.353, -23.7729, 1.62 ) }
    dend_29 { pt3dadd( -16.7132, 243.779, -23.8113, 1.84 ) }
    dend_29 { pt3dadd( -16.759, 244.506, -23.8713, 1.55 ) }
    dend_29 { pt3dadd( -16.7734, 245.218, -23.936, 1.11 ) }
    dend_29 { pt3dadd( -16.7741, 245.922, -23.9988, 0.52 ) }
    dend_29 { pt3dadd( -16.7525, 246.99, -24.0887, 0.44 ) }
    dend_29 { pt3dadd( -16.7253, 247.818, -24.1636, 0.37 ) }
    dend_29 { pt3dadd( -16.6818, 248.867, -24.2584, 0.37 ) }
    dend_29 { pt3dadd( -16.6036, 250.266, -24.3933, 1.33 ) }
    dend_29 { pt3dadd( -16.5767, 250.69, -24.4333, 1.84 ) }
    dend_29 { pt3dadd( -16.5669, 250.841, -24.4461, 1.84 ) }
    dend_29 { pt3dadd( -16.5378, 251.267, -24.482, 1.84 ) }
    dend_29 { pt3dadd( -16.4952, 252.22, -24.5517, 1.25 ) }
    dend_29 { pt3dadd( -16.4781, 252.791, -24.5959, 0.74 ) }
    dend_29 { pt3dadd( -16.4669, 253.721, -24.662, 0.37 ) }
    dend_29 { pt3dadd( -16.4595, 254.396, -24.7132, 0.44 ) }
    dend_29 { pt3dadd( -16.4531, 255.138, -24.7794, 0.44 ) }
    dend_29 { pt3dadd( -16.4498, 256.204, -24.8835, 0.44 ) }
    dend_29 { pt3dadd( -16.454, 257.088, -24.976, 1.03 ) }
    dend_29 { pt3dadd( -16.4674, 257.879, -25.058, 1.18 ) }
    dend_29 { pt3dadd( -16.4784, 258.554, -25.1414, 0.74 ) }
    dend_29 { pt3dadd( -16.4914, 259.054, -25.2077, 0.74 ) }
    dend_29 { pt3dadd( -16.5192, 259.831, -25.3116, 0.59 ) }
    dend_29 { pt3dadd( -16.5223, 259.901, -25.3204, 0.59 ) }
    dend_29 { pt3dadd( -16.5517, 260.473, -25.3767, 0.59 ) }
    dend_29 { pt3dadd( -16.605, 261.611, -25.5035, 1.47 ) }
    dend_29 { pt3dadd( -16.6312, 262.322, -25.5811, 2.21 ) }
    dend_29 { pt3dadd( -16.6462, 262.894, -25.6398, 2.5 ) }
    dend_29 { pt3dadd( -16.6469, 263.389, -25.69, 2.65 ) }
    dend_29 { pt3dadd( -16.6206, 264.332, -25.7754, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_29 { pt3dadd( -16.5603, 265.289, -25.8496, 0.74 ) }
    dend_29 { pt3dadd( -16.4551, 266.404, -25.9333, 0.52 ) }
    dend_29 { pt3dadd( -16.4458, 266.482, -25.9405, 0.52 ) }
    dend_29 { pt3dadd( -16.3148, 267.386, -26.0346, 0.52 ) }
    dend_29 { pt3dadd( -16.1113, 268.587, -26.1759, 1.33 ) }
    dend_29 { pt3dadd( -15.9534, 269.43, -26.2812, 1.4 ) }
    dend_29 { pt3dadd( -15.7764, 270.321, -26.3945, 1.18 ) }
    dend_29 { pt3dadd( -15.6497, 271.009, -26.4961, 0.52 ) }
    dend_29 { pt3dadd( -15.629, 271.145, -26.5189, 0.52 ) }
    dend_29 { pt3dadd( -15.5313, 271.95, -26.6666, 0.52 ) }
    dend_29 { pt3dadd( -15.4685, 272.615, -26.7922, 0.52 ) }
    dend_29 { pt3dadd( -15.3826, 273.825, -27.0073, 0.74 ) }
    dend_29 { pt3dadd( -15.3292, 274.888, -27.1681, 0.96 ) }
    dend_29 { pt3dadd( -15.2894, 276.001, -27.3245, 1.99 ) }
    dend_29 { pt3dadd( -15.2796, 276.369, -27.3723, 2.58 ) }
    dend_29 { pt3dadd( -15.2622, 276.884, -27.4304, 2.36 ) }
    dend_29 { pt3dadd( -15.2341, 277.467, -27.4879, 2.14 ) }
    dend_29 { pt3dadd( -15.1713, 278.321, -27.554, 1.03 ) }
    dend_29 { pt3dadd( -15.071, 279.235, -27.6139, 0.52 ) }
    dend_29 { pt3dadd( -14.9363, 280.281, -27.682, 0.52 ) }
    dend_29 { pt3dadd( -14.7954, 281.383, -27.744, 0.52 ) }
    dend_29 { pt3dadd( -14.7222, 281.973, -27.7723, 0.88 ) }
    dend_29 { pt3dadd( -14.6533, 282.54, -27.7943, 0.52 ) }
    dend_29 { pt3dadd( -14.5481, 283.465, -27.8197, 0.52 ) }
    dend_29 { pt3dadd( -14.4775, 284.206, -27.8278, 0.52 ) }
    dend_29 { pt3dadd( -14.3988, 285.403, -27.8353, 1.4 ) }
    dend_29 { pt3dadd( -14.3714, 286.065, -27.8377, 1.77 ) }
    dend_29 { pt3dadd( -14.3605, 286.507, -27.8365, 1.92 ) }
    dend_29 { pt3dadd( -14.3534, 286.933, -27.8328, 1.62 ) }
    dend_29 { pt3dadd( -14.3452, 287.664, -27.822, 1.11 ) }
    dend_29 { pt3dadd( -14.3331, 288.532, -27.8111, 0.74 ) }
    dend_29 { pt3dadd( -14.3133, 289.796, -27.8113, 0.59 ) }
    dend_29 { pt3dadd( -14.2971, 291.309, -27.8108, 0.59 ) }
    dend_29 { pt3dadd( -14.2881, 292.496, -27.8099, 0.44 ) }
    dend_29 { pt3dadd( -14.2828, 293.0, -27.8093, 0.66 ) }
    dend_29 { pt3dadd( -14.2819, 293.071, -27.8092, 0.66 ) }
    dend_29 { pt3dadd( -14.2637, 294.222, -27.8062, 1.33 ) }
    dend_29 { pt3dadd( -14.2497, 295.155, -27.8027, 2.21 ) }
    dend_29 { pt3dadd( -14.2356, 295.877, -27.7878, 2.73 ) }
    dend_29 { pt3dadd( -14.2336, 296.555, -27.7688, 2.87 ) }
    dend_29 { pt3dadd( -14.2352, 296.869, -27.7625, 3.09 ) }
    dend_29 { pt3dadd( -14.25, 297.533, -27.7577, 2.36 ) }
    dend_29 { pt3dadd( -14.2835, 298.322, -27.7606, 1.25 ) }
    dend_29 { pt3dadd( -14.3205, 298.887, -27.7707, 0.66 ) }
    dend_29 { pt3dadd( -14.4276, 300.04, -27.8215, 0.37 ) }
    dend_29 { pt3dadd( -14.5349, 300.92, -27.8779, 0.66 ) }
    dend_29 { pt3dadd( -14.6197, 301.567, -27.9289, 0.52 ) }
    dend_29 { pt3dadd( -14.6651, 301.926, -27.9623, 0.66 ) }
    dend_29 { pt3dadd( -14.7449, 302.634, -28.0363, 0.74 ) }
    dend_29 { pt3dadd( -14.818, 303.446, -28.1419, 0.81 ) }
    dend_29 { pt3dadd( -14.8689, 304.301, -28.2736, 1.25 ) }
    dend_29 { pt3dadd( -14.8821, 304.842, -28.3643, 1.69 ) }
    dend_29 { pt3dadd( -14.8777, 305.244, -28.4368, 1.69 ) }
    dend_29 { pt3dadd( -14.8466, 306.03, -28.5834, 1.4 ) }
    dend_29 { pt3dadd( -14.7932, 306.89, -28.7481, 1.11 ) }
    dend_29 { pt3dadd( -14.7339, 307.589, -28.8713, 0.74 ) }
    dend_29 { pt3dadd( -14.644, 308.628, -29.0444, 0.59 ) }
    dend_29 { pt3dadd( -14.6382, 308.705, -29.0566, 0.59 ) }
    dend_29 { pt3dadd( -14.5934, 309.497, -29.1655, 0.59 ) }
    dend_29 { pt3dadd( -14.59, 309.565, -29.1727, 0.59 ) }
    dend_29 { pt3dadd( -14.5493, 310.922, -29.252, 0.59 ) }
    dend_29 { pt3dadd( -14.5496, 311.779, -29.2755, 1.11 ) }
    dend_29 { pt3dadd( -14.5524, 311.847, -29.2774, 1.11 ) }
    dend_29 { pt3dadd( -14.5937, 312.48, -29.2942, 1.77 ) }
    dend_29 { pt3dadd( -14.6456, 313.074, -29.313, 2.06 ) }
    dend_29 { pt3dadd( -14.6966, 313.568, -29.3333, 2.06 ) }
    dend_29 { pt3dadd( -14.7778, 314.207, -29.3631, 1.77 ) }
    dend_29 { pt3dadd( -14.8321, 314.645, -29.3832, 1.4 ) }
    dend_29 { pt3dadd( -14.8898, 315.149, -29.4063, 0.81 ) }
    dend_29 { pt3dadd( -15.0206, 316.29, -29.4627, 0.59 ) }
    dend_29 { pt3dadd( -15.1453, 317.442, -29.521, 0.59 ) }
    dend_29 { pt3dadd( -15.2108, 318.153, -29.5651, 0.96 ) }
    dend_29 { pt3dadd( -15.2577, 318.648, -29.5984, 0.96 ) }
    dend_29 { pt3dadd( -15.2724, 318.801, -29.6086, 0.96 ) }
    dend_29 { pt3dadd( -15.3094, 319.188, -29.6364, 0.81 ) }
    dend_29 { pt3dadd( -15.37, 319.864, -29.6847, 0.81 ) }
    dend_29 { pt3dadd( -15.4562, 320.96, -29.7625, 0.37 ) }
    dend_29 { pt3dadd( -15.5309, 322.034, -29.8392, 0.37 ) }
    dend_29 { pt3dadd( -15.5899, 323.037, -29.8899, 0.37 ) }
    dend_29 { pt3dadd( -15.6256, 323.737, -29.9119, 1.25 ) }
    dend_29 { pt3dadd( -15.6474, 324.458, -29.9119, 1.77 ) }
    dend_29 { pt3dadd( -15.6576, 325.054, -29.8918, 2.28 ) }
    dend_29 { pt3dadd( -15.6506, 325.62, -29.8516, 2.58 ) }
    dend_29 { pt3dadd( -15.6225, 326.337, -29.7886, 2.36 ) }
    dend_29 { pt3dadd( -15.5965, 326.969, -29.7256, 1.92 ) }
    dend_29 { pt3dadd( -15.5641, 327.749, -29.6465, 0.96 ) }
    dend_29 { pt3dadd( -15.5343, 328.477, -29.5797, 0.37 ) }
    dend_29 { pt3dadd( -15.5026, 329.511, -29.5016, 0.37 ) }
    dend_29 { pt3dadd( -15.4899, 330.241, -29.4713, 0.74 ) }
    dend_29 { pt3dadd( -15.4896, 330.671, -29.4699, 0.74 ) }
    dend_29 { pt3dadd( -15.4987, 331.295, -29.4815, 0.74 ) }
    dend_29 { pt3dadd( -15.5184, 331.941, -29.5258, 0.37 ) }
    dend_29 { pt3dadd( -15.5452, 332.651, -29.6134, 0.29 ) }
    dend_29 { pt3dadd( -15.5691, 333.196, -29.7101, 0.29 ) }
    dend_29 { pt3dadd( -15.572, 333.263, -29.7249, 0.29 ) }
    dend_29 { pt3dadd( -15.621, 334.596, -30.0713, 0.29 ) }
    dend_29 { pt3dadd( -15.6327, 335.286, -30.2759, 0.74 ) }
    dend_29 { pt3dadd( -15.6284, 336.337, -30.5996, 1.84 ) }
    dend_29 { pt3dadd( -15.6213, 336.727, -30.7154, 2.28 ) }
    dend_29 { pt3dadd( -15.6204, 336.784, -30.7302, 2.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_29 { pt3dadd( -15.6121, 337.411, -30.8776, 2.06 ) }
    dend_29 { pt3dadd( -15.6049, 338.275, -31.0509, 1.25 ) }
    dend_29 { pt3dadd( -15.6123, 339.285, -31.1914, 0.15 ) }
    dend_29 { pt3dadd( -15.6204, 339.861, -31.2435, 0.15 ) }
    dend_29 { pt3dadd( -15.6416, 340.732, -31.2959, 0.74 ) }
    dend_29 { pt3dadd( -15.6538, 341.083, -31.3081, 1.03 ) }
    dend_29 { pt3dadd( -15.6743, 341.522, -31.3128, 1.03 ) }
    dend_29 { pt3dadd( -15.7039, 342.011, -31.3128, 0.74 ) }
    dend_29 { pt3dadd( -15.7424, 342.698, -31.3445, 0.22 ) }
    dend_29 { pt3dadd( -15.7815, 343.55, -31.4104, 0.22 ) }
    dend_29 { pt3dadd( -15.8314, 344.987, -31.547, 0.88 ) }
    dend_29 { pt3dadd( -15.8478, 345.561, -31.604, 1.47 ) }
    dend_29 { pt3dadd( -15.8593, 346.055, -31.6577, 1.69 ) }
    dend_29 { pt3dadd( -15.8767, 347.124, -31.7793, 1.03 ) }
    dend_29 { pt3dadd( -15.8927, 348.214, -31.9054, 0.37 ) }
    dend_29 { pt3dadd( -15.8923, 349.667, -32.0702, 0.37 ) }
    dend_29 { pt3dadd( -15.8711, 350.956, -32.2214, 0.29 ) }
    dend_29 { pt3dadd( -15.8428, 352.278, -32.3647, 1.4 ) }
    dend_29 { pt3dadd( -15.8324, 352.795, -32.4131, 1.84 ) }
    dend_29 { pt3dadd( -15.8231, 353.37, -32.4533, 1.69 ) }
    dend_29 { pt3dadd( -15.8103, 354.158, -32.5148, 0.81 ) }
    dend_29 { pt3dadd( -15.7894, 355.48, -32.6211, 0.29 ) }
    dend_29 { pt3dadd( -15.7679, 356.686, -32.7146, 0.29 ) }
    dend_29 { pt3dadd( -15.7551, 357.321, -32.7547, 0.96 ) }
    dend_29 { pt3dadd( -15.7443, 357.906, -32.7864, 1.33 ) }
    dend_29 { pt3dadd( -15.7314, 358.454, -32.8083, 1.33 ) }
    dend_29 { pt3dadd( -15.7174, 358.94, -32.826, 1.03 ) }
    dend_29 { pt3dadd( -15.7145, 359.001, -32.8276, 1.03 ) }
    dend_29 { pt3dadd( -15.6372, 360.113, -32.8665, 0.29 ) }
    dend_29 { pt3dadd( -15.5561, 361.123, -32.9067, 0.29 ) }
    dend_29 { pt3dadd( -15.4584, 362.39, -32.9829, 0.88 ) }
    dend_29 { pt3dadd( -15.3994, 363.314, -33.0492, 1.69 ) }
    dend_29 { pt3dadd( -15.3723, 363.841, -33.0896, 2.36 ) }
    dend_29 { pt3dadd( -15.3642, 364.132, -33.1123, 2.58 ) }
    dend_29 { pt3dadd( -15.3587, 364.875, -33.1728, 2.06 ) }
    dend_29 { pt3dadd( -15.3623, 366.368, -33.2848, 0.37 ) }
    dend_29 { pt3dadd( -15.3766, 367.359, -33.3507, 0.37 ) }
    dend_29 { pt3dadd( -15.4037, 368.441, -33.4063, 0.37 ) }
    dend_29 { pt3dadd( -15.4257, 369.295, -33.4438, 0.37 ) }
    dend_29 { pt3dadd( -15.427, 369.365, -33.4462, 0.37 ) }
    dend_29 { pt3dadd( -15.4281, 371.015, -33.4793, 0.37 ) }
    dend_29 { pt3dadd( -15.426, 371.086, -33.4814, 0.37 ) }
    dend_29 { pt3dadd( -15.3689, 372.014, -33.5303, 0.37 ) }
    dend_29 { pt3dadd( -15.3091, 372.745, -33.5825, 0.96 ) }
    dend_29 { pt3dadd( -15.2328, 373.578, -33.6517, 1.25 ) }
    dend_29 { pt3dadd( -15.152, 374.424, -33.7282, 0.88 ) }
    dend_29 { pt3dadd( -15.0108, 375.796, -33.8651, 0.29 ) }
    dend_29 { pt3dadd( -14.999, 375.901, -33.8754, 0.29 ) }
    dend_29 { pt3dadd( -14.891, 376.756, -33.9804, 0.88 ) }
    dend_29 { pt3dadd( -14.7917, 377.544, -34.0819, 1.62 ) }
    dend_29 { pt3dadd( -14.7333, 378.015, -34.1404, 1.99 ) }
    dend_29 { pt3dadd( -14.6715, 378.493, -34.1923, 1.99 ) }
    dend_29 { pt3dadd( -14.6059, 378.93, -34.2276, 1.69 ) }
    dend_29 { pt3dadd( -14.4461, 379.874, -34.3237, 0.59 ) }
    dend_29 { pt3dadd( -14.2225, 381.056, -34.4559, 0.29 ) }
    dend_29 { pt3dadd( -14.0894, 381.774, -34.5506, 0.81 ) }
    dend_29 { pt3dadd( -13.9775, 382.4, -34.6376, 0.81 ) }
    dend_29 { pt3dadd( -13.8293, 383.278, -34.7606, 0.29 ) }
    dend_29 { pt3dadd( -13.684, 384.217, -34.8868, 0.29 ) }
    dend_29 { pt3dadd( -13.4829, 385.639, -35.1089, 0.29 ) }
    dend_29 { pt3dadd( -13.3093, 387.046, -35.3736, 1.25 ) }
    dend_29 { pt3dadd( -13.2503, 387.58, -35.48, 1.69 ) }
    dend_29 { pt3dadd( -13.2069, 388.006, -35.5662, 1.92 ) }
    dend_29 { pt3dadd( -13.1356, 388.763, -35.716, 1.47 ) }
    dend_29 { pt3dadd( -12.9971, 390.09, -35.9564, 0.29 ) }
    dend_29 { pt3dadd( -12.8957, 390.881, -36.1004, 0.29 ) }
    dend_29 { pt3dadd( -12.7282, 391.936, -36.2763, 0.88 ) }
    dend_29 { pt3dadd( -12.6364, 392.442, -36.3553, 1.18 ) }
    dend_29 { pt3dadd( -12.5323, 392.946, -36.4261, 0.96 ) }
    dend_29 { pt3dadd( -12.3711, 393.651, -36.5044, 0.44 ) }
    dend_29 { pt3dadd( -12.1629, 394.563, -36.555, 0.29 ) }
    dend_29 { pt3dadd( -12.1417, 394.661, -36.564, 0.29 ) }
    dend_29 { pt3dadd( -12.0044, 395.486, -36.6637, 0.29 ) }
    dend_29 { pt3dadd( -11.9962, 395.556, -36.6728, 0.29 ) }
    dend_29 { pt3dadd( -11.9505, 396.059, -36.7449, 0.81 ) }
    dend_29 { pt3dadd( -11.9209, 396.482, -36.8057, 0.81 ) }
    dend_29 { pt3dadd( -11.8594, 397.243, -36.9108, 0.66 ) }
    dend_29 { pt3dadd( -11.7545, 398.311, -37.0545, 0.29 ) }
    dend_29 { pt3dadd( -11.6444, 399.187, -37.1624, 0.29 ) }
    dend_29 { pt3dadd( -11.5221, 400.047, -37.2702, 1.11 ) }
    dend_29 { pt3dadd( -11.4112, 400.808, -37.3606, 1.69 ) }
    dend_29 { pt3dadd( -11.3422, 401.343, -37.4218, 1.92 ) }
    dend_29 { pt3dadd( -11.2908, 401.813, -37.4696, 1.92 ) }
    dend_29 { pt3dadd( -11.193, 403.0, -37.5962, 0.74 ) }
    dend_29 { pt3dadd( -11.1441, 403.937, -37.6948, 0.37 ) }
    dend_29 { pt3dadd( -11.1203, 404.997, -37.798, 0.37 ) }
    dend_29 { pt3dadd( -11.1212, 406.237, -37.9233, 0.29 ) }
    dend_29 { pt3dadd( -11.1341, 406.964, -38.0014, 0.29 ) }
    dend_29 { pt3dadd( -11.1461, 407.606, -38.0762, 0.88 ) }
    dend_29 { pt3dadd( -11.1512, 408.023, -38.1254, 0.88 ) }
    dend_29 { pt3dadd( -11.1412, 408.55, -38.1795, 0.52 ) }
    dend_29 { pt3dadd( -11.1083, 409.162, -38.2431, 0.29 ) }
    dend_29 { pt3dadd( -11.0603, 409.806, -38.3061, 0.29 ) }
    dend_29 { pt3dadd( -11.0084, 410.652, -38.3863, 0.29 ) }
    dend_29 { pt3dadd( -10.9748, 411.45, -38.4547, 1.55 ) }
    dend_29 { pt3dadd( -10.9367, 412.394, -38.522, 2.58 ) }
    dend_29 { pt3dadd( -10.918, 412.844, -38.5447, 2.65 ) }
    dend_29 { pt3dadd( -10.8772, 413.558, -38.5647, 2.21 ) }
    dend_29 { pt3dadd( -10.8053, 414.488, -38.5878, 1.11 ) }
    dend_29 { pt3dadd( -10.7251, 415.338, -38.6118, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_29 { pt3dadd( -10.614, 416.368, -38.648, 0.52 ) }
    dend_29 { pt3dadd( -10.4759, 417.416, -38.6907, 0.74 ) }
    dend_29 { pt3dadd( -10.3235, 418.406, -38.7348, 0.88 ) }
    dend_29 { pt3dadd( -10.1414, 419.363, -38.7811, 1.33 ) }
    dend_29 { pt3dadd( -10.1277, 419.419, -38.785, 1.33 ) }
    dend_29 { pt3dadd( -9.97201, 419.966, -38.832, 1.62 ) }
    dend_29 { pt3dadd( -9.85088, 420.347, -38.8691, 1.62 ) }
    dend_29 { pt3dadd( -9.82406, 420.42, -38.8762, 1.62 ) }
    dend_29 { pt3dadd( -9.75528, 420.603, -38.8906, 1.62 ) }
    dend_29 { pt3dadd( -9.33635, 421.683, -38.9535, 0.52 ) }
    dend_29 { pt3dadd( -9.02211, 422.513, -38.9982, 0.29 ) }
    dend_29 { pt3dadd( -8.73895, 423.261, -39.0392, 0.29 ) }
    dend_29 { pt3dadd( -8.47484, 424.021, -39.0421, 0.96 ) }
    dend_29 { pt3dadd( -8.32162, 424.526, -39.0125, 1.4 ) }
    dend_29 { pt3dadd( -8.30617, 424.593, -39.0049, 1.4 ) }
    dend_29 { pt3dadd( -8.24118, 425.022, -38.9348, 1.4 ) }
    dend_29 { pt3dadd( -8.23337, 425.104, -38.9181, 1.4 ) }
    dend_29 { pt3dadd( -8.17496, 426.156, -38.686, 1.03 ) }
    dend_29 { pt3dadd( -8.14236, 427.116, -38.4727, 0.44 ) }
    dend_29 { pt3dadd( -8.10285, 428.32, -38.2187, 0.29 ) }
    dend_29 { pt3dadd( -8.07841, 429.166, -38.0253, 0.29 ) }
    dend_29 { pt3dadd( -8.04924, 430.214, -37.7891, 1.33 ) }
    dend_29 { pt3dadd( -8.03583, 430.768, -37.6694, 1.84 ) }
    dend_29 { pt3dadd( -8.02505, 431.334, -37.5597, 1.84 ) }
    dend_29 { pt3dadd( -8.01622, 431.972, -37.4385, 1.25 ) }
    dend_29 { pt3dadd( -8.01259, 433.171, -37.2223, 0.37 ) }
    dend_29 { pt3dadd( -8.03204, 434.497, -37.0264, 0.29 ) }
    dend_29 { pt3dadd( -8.0346, 434.565, -37.0181, 0.29 ) }
    dend_29 { pt3dadd( -8.07761, 435.349, -36.9291, 0.44 ) }
    dend_29 { pt3dadd( -8.14739, 436.353, -36.8288, 0.52 ) }
    dend_29 { pt3dadd( -8.23469, 437.338, -36.7494, 0.44 ) }
    dend_29 { pt3dadd( -8.35671, 438.621, -36.6995, 0.44 ) }
    dend_29 { pt3dadd( -8.49578, 440.01, -36.6587, 1.11 ) }
    dend_29 { pt3dadd( -8.57261, 440.801, -36.6422, 1.69 ) }
    dend_29 { pt3dadd( -8.62076, 441.317, -36.6365, 1.84 ) }
    dend_29 { pt3dadd( -8.66562, 441.871, -36.6368, 1.84 ) }
    dend_29 { pt3dadd( -8.74178, 442.946, -36.6509, 0.66 ) }
    dend_29 { pt3dadd( -8.81238, 444.087, -36.6838, 0.37 ) }
    dend_29 { pt3dadd( -8.81983, 444.226, -36.6901, 0.37 ) }
    dend_29 { pt3dadd( -8.88593, 445.593, -36.7466, 0.37 ) }
    dend_29 { pt3dadd( -8.91847, 446.685, -36.783, 0.96 ) }
    dend_29 { pt3dadd( -8.91814, 446.826, -36.7873, 0.96 ) }
    dend_29 { pt3dadd( -8.89051, 447.55, -36.8043, 1.55 ) }
    dend_29 { pt3dadd( -8.83005, 448.201, -36.8272, 1.84 ) }
    dend_29 { pt3dadd( -8.82119, 448.27, -36.8302, 1.84 ) }
    dend_29 { pt3dadd( -8.72797, 448.865, -36.8607, 1.69 ) }
    dend_29 { pt3dadd( -8.58908, 449.721, -36.9074, 0.74 ) }
    dend_29 { pt3dadd( -8.44976, 450.635, -36.926, 0.29 ) }
    dend_29 { pt3dadd( -8.31267, 451.655, -36.9174, 0.29 ) }
    dend_29 { pt3dadd( -8.30567, 451.725, -36.9151, 0.29 ) }
    dend_29 { pt3dadd( -8.23816, 452.724, -36.8611, 0.29 ) }
    dend_29 { pt3dadd( -8.23642, 452.793, -36.8556, 0.29 ) }
    dend_29 { pt3dadd( -8.24015, 453.8, -36.7409, 0.81 ) }
    dend_29 { pt3dadd( -8.25862, 454.43, -36.6602, 1.47 ) }
    dend_29 { pt3dadd( -8.28178, 454.933, -36.5993, 1.77 ) }
    dend_29 { pt3dadd( -8.28784, 455.044, -36.5899, 1.77 ) }
    dend_29 { pt3dadd( -8.31428, 455.609, -36.5613, 1.55 ) }
    dend_29 { pt3dadd( -8.3209, 455.749, -36.5583, 1.55 ) }
    dend_29 { pt3dadd( -8.35351, 456.411, -36.5663, 0.96 ) }
    dend_29 { pt3dadd( -8.37101, 457.142, -36.5752, 0.59 ) }
    dend_29 { pt3dadd( -8.38051, 458.495, -36.5659, 0.29 ) }
    dend_29 { pt3dadd( -8.37697, 459.39, -36.5483, 0.29 ) }
    dend_29 { pt3dadd( -8.376, 459.461, -36.5462, 0.29 ) }
    dend_29 { pt3dadd( -8.35044, 460.543, -36.5043, 0.59 ) }
    dend_29 { pt3dadd( -8.32433, 461.257, -36.4692, 0.81 ) }
    dend_29 { pt3dadd( -8.26911, 462.174, -36.4184, 1.25 ) }
    dend_29 { pt3dadd( -8.23121, 462.622, -36.3918, 1.62 ) }
    dend_29 { pt3dadd( -8.2045, 462.977, -36.3745, 1.69 ) }
    dend_29 { pt3dadd( -8.19228, 463.131, -36.3694, 1.69 ) }
    dend_29 { pt3dadd( -8.15326, 463.648, -36.36, 1.25 ) }
    dend_29 { pt3dadd( -8.10155, 464.487, -36.3439, 0.66 ) }
    dend_29 { pt3dadd( -8.05063, 465.353, -36.3304, 0.66 ) }
    dend_29 { pt3dadd( -7.99254, 466.366, -36.3077, 0.66 ) }
    dend_29 { pt3dadd( -7.9263, 467.59, -36.2743, 0.37 ) }
    dend_29 { pt3dadd( -7.89041, 468.457, -36.2476, 0.37 ) }
    dend_29 { pt3dadd( -7.8478, 469.498, -36.2122, 1.62 ) }
    dend_29 { pt3dadd( -7.81949, 470.075, -36.1915, 2.06 ) }
    dend_29 { pt3dadd( -7.79502, 470.464, -36.1779, 2.06 ) }
    dend_29 { pt3dadd( -7.73627, 471.33, -36.1503, 1.47 ) }
    dend_29 { pt3dadd( -7.67414, 472.182, -36.1278, 0.81 ) }
    dend_29 { pt3dadd( -7.58631, 473.141, -36.1154, 0.37 ) }
    dend_29 { pt3dadd( -7.46054, 474.288, -36.122, 0.88 ) }
    dend_29 { pt3dadd( -7.45151, 474.356, -36.1226, 0.88 ) }
    dend_29 { pt3dadd( -7.37917, 474.846, -36.1281, 0.88 ) }
    dend_29 { pt3dadd( -7.36908, 474.907, -36.129, 0.88 ) }
    dend_29 { pt3dadd( -7.27686, 475.507, -36.1441, 1.11 ) }
    dend_29 { pt3dadd( -7.25343, 475.679, -36.1509, 1.11 ) }
    dend_29 { pt3dadd( -7.21352, 476.025, -36.1451, 1.11 ) }
    dend_29 { pt3dadd( -7.20556, 476.096, -36.1418, 1.11 ) }
    dend_29 { pt3dadd( -7.14093, 476.666, -36.1011, 0.81 ) }
    dend_29 { pt3dadd( -7.0476, 477.529, -36.0252, 0.66 ) }
    dend_29 { pt3dadd( -6.96062, 478.334, -35.9444, 0.44 ) }
    dend_29 { pt3dadd( -6.83638, 479.439, -35.8283, 0.29 ) }
    dend_29 { pt3dadd( -6.8233, 479.547, -35.8168, 0.29 ) }
    dend_29 { pt3dadd( -6.73999, 480.117, -35.755, 0.29 ) }
    dend_29 { pt3dadd( -6.72245, 480.221, -35.7444, 0.29 ) }
    dend_29 { pt3dadd( -6.59755, 481.048, -35.6852, 0.81 ) }
    dend_29 { pt3dadd( -6.58676, 481.138, -35.682, 0.81 ) }
    dend_29 { pt3dadd( -6.52879, 481.683, -35.6599, 0.81 ) }
    dend_29 { pt3dadd( -6.50939, 481.893, -35.6468, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_29 { pt3dadd( -6.40808, 482.989, -35.5644, 0.59 ) }
    dend_29 { pt3dadd( -6.29428, 484.337, -35.453, 0.88 ) }
    dend_29 { pt3dadd( -6.2846, 484.476, -35.4414, 0.88 ) }
    dend_29 { pt3dadd( -6.21632, 485.687, -35.2945, 1.62 ) }
    dend_29 { pt3dadd( -6.19466, 486.209, -35.2181, 1.77 ) }
    dend_29 { pt3dadd( -6.1649, 487.01, -35.0893, 1.4 ) }
    dend_29 { pt3dadd( -6.13839, 487.798, -34.9517, 0.88 ) }
    dend_29 { pt3dadd( -6.10204, 489.153, -34.7118, 0.52 ) }
    dend_29 { pt3dadd( -6.09143, 490.312, -34.5264, 0.74 ) }
    dend_29 { pt3dadd( -6.109, 491.031, -34.4317, 1.33 ) }
    dend_29 { pt3dadd( -6.15615, 491.786, -34.3324, 1.84 ) }
    dend_29 { pt3dadd( -6.18948, 492.199, -34.2823, 1.99 ) }
    dend_29 { pt3dadd( -6.236, 492.779, -34.2224, 1.99 ) }
    dend_29 { pt3dadd( -6.29114, 493.542, -34.1627, 1.18 ) }
    dend_29 { pt3dadd( -6.35723, 494.556, -34.1142, 0.52 ) }
    dend_29 { pt3dadd( -6.43699, 496.071, -34.0391, 0.44 ) }
    dend_29 { pt3dadd( -6.48785, 497.209, -33.9836, 1.03 ) }
    dend_29 { pt3dadd( -6.50943, 498.087, -33.9442, 1.25 ) }
    dend_29 { pt3dadd( -6.4971, 498.693, -33.9219, 1.55 ) }
    dend_29 { pt3dadd( -6.49302, 498.764, -33.9198, 1.55 ) }
    dend_29 { pt3dadd( -6.43595, 499.44, -33.9092, 1.55 ) }
    dend_29 { pt3dadd( -6.36105, 500.3, -33.9092, 1.25 ) }
    dend_29 { pt3dadd( -6.29698, 501.245, -33.9092, 0.74 ) }
    dend_29 { pt3dadd( -6.19435, 503.002, -33.9092, 0.29 ) }
    dend_29 { pt3dadd( -6.191, 503.07, -33.9092, 0.29 ) }
    dend_29 { pt3dadd( -6.12453, 504.658, -33.9092, 0.29 ) }
    dend_29 { pt3dadd( -6.09166, 505.955, -33.9092, 0.29 ) }
    dend_29 { pt3dadd( -6.08701, 507.178, -33.9092, 1.47 ) }
    dend_29 { pt3dadd( -6.10165, 507.933, -33.9092, 2.06 ) }
    dend_29 { pt3dadd( -6.12656, 508.43, -33.9092, 2.36 ) }
    dend_29 { pt3dadd( -6.17538, 509.307, -33.9092, 2.06 ) }
    dend_29 { pt3dadd( -6.26482, 510.794, -33.9092, 0.81 ) }
    dend_29 { pt3dadd( -6.36167, 512.159, -33.8794, 0.81 ) }
    dend_29 { pt3dadd( -6.43007, 513.034, -33.8436, 0.52 ) }
    dend_29 { pt3dadd( -6.51535, 514.093, -33.7822, 0.81 ) }
    dend_29 { pt3dadd( -6.59164, 515.111, -33.7063, 1.03 ) }
    dend_29 { pt3dadd( -6.59591, 515.18, -33.6997, 1.03 ) }
    dend_29 { pt3dadd( -6.6223, 516.104, -33.5929, 1.03 ) }
    dend_29 { pt3dadd( -6.62024, 516.275, -33.5666, 1.03 ) }
    dend_29 { pt3dadd( -6.58182, 517.223, -33.4101, 0.88 ) }
    dend_29 { pt3dadd( -6.57349, 517.332, -33.3923, 0.88 ) }
    dend_29 { pt3dadd( -6.4789, 518.334, -33.243, 0.74 ) }
    dend_29 { pt3dadd( -6.34814, 519.449, -33.1045, 0.37 ) }
    dend_29 { pt3dadd( -6.15413, 520.878, -32.9697, 1.18 ) }
    dend_29 { pt3dadd( -6.02901, 521.837, -32.8886, 1.92 ) }
    dend_29 { pt3dadd( -5.9605, 522.412, -32.8467, 1.92 ) }
    dend_29 { pt3dadd( -5.88799, 523.076, -32.806, 1.62 ) }
    dend_29 { pt3dadd( -5.78832, 524.122, -32.759, 0.96 ) }
    dend_29 { pt3dadd( -5.70392, 525.142, -32.7318, 0.74 ) }
    dend_29 { pt3dadd( -5.61904, 526.368, -32.7388, 0.74 ) }
    dend_29 { pt3dadd( -5.56911, 527.45, -32.7503, 0.74 ) }
    dend_29 { pt3dadd( -5.56456, 527.59, -32.7523, 0.74 ) }
    dend_29 { pt3dadd( -5.54459, 528.654, -32.7706, 0.74 ) }
    dend_29 { pt3dadd( -5.54303, 528.82, -32.7753, 0.74 ) }
    dend_29 { pt3dadd( -5.52689, 529.998, -32.8189, 0.74 ) }
    dend_29 { pt3dadd( -5.50187, 531.298, -32.8752, 0.96 ) }
    dend_29 { pt3dadd( -5.49422, 531.592, -32.889, 0.96 ) }
    dend_29 { pt3dadd( -5.45934, 532.812, -32.9431, 0.96 ) }
    dend_29 { pt3dadd( -5.44111, 533.568, -32.9726, 1.47 ) }
    dend_29 { pt3dadd( -5.43772, 533.786, -32.9794, 1.47 ) }
    dend_29 { pt3dadd( -5.42936, 534.819, -33.0006, 1.69 ) }
    dend_29 { pt3dadd( -5.42944, 534.916, -33.002, 1.69 ) }
    dend_29 { pt3dadd( -5.43034, 535.572, -33.0224, 1.69 ) }
    dend_29 { pt3dadd( -5.40543, 536.724, -33.0671, 1.11 ) }
    dend_29 { pt3dadd( -5.38497, 537.24, -33.0974, 1.03 ) }
    dend_29 { pt3dadd( -5.36087, 537.734, -33.1333, 1.03 ) }
    dend_29 { pt3dadd( -5.29994, 538.871, -33.227, 0.59 ) }
    dend_29 { pt3dadd( -5.20628, 540.489, -33.3667, 0.44 ) }
    dend_29 { pt3dadd( -5.09486, 542.223, -33.5271, 0.44 ) }
    dend_29 { pt3dadd( -5.01011, 543.278, -33.6252, 1.11 ) }
    dend_29 { pt3dadd( -4.90993, 544.264, -33.7252, 1.69 ) }
    dend_29 { pt3dadd( -4.81436, 544.976, -33.7968, 1.99 ) }
    dend_29 { pt3dadd( -4.69607, 545.719, -33.8694, 1.62 ) }
    dend_29 { pt3dadd( -4.68364, 545.789, -33.8753, 1.62 ) }
    dend_29 { pt3dadd( -4.47793, 546.885, -33.9575, 0.88 ) }
    dend_29 { pt3dadd( -4.20184, 548.348, -34.0657, 0.74 ) }
    dend_29 { pt3dadd( -3.85089, 550.179, -34.2161, 0.74 ) }
    dend_29 { pt3dadd( -3.83796, 550.247, -34.2218, 0.74 ) }
    dend_29 { pt3dadd( -3.62267, 551.384, -34.323, 0.74 ) }
    dend_29 { pt3dadd( -3.35292, 552.823, -34.4059, 0.88 ) }
    dend_29 { pt3dadd( -3.08879, 554.333, -34.4448, 0.66 ) }
    dend_29 { pt3dadd( -3.07587, 554.412, -34.444, 0.66 ) }
    dend_29 { pt3dadd( -2.87439, 555.736, -34.4051, 0.66 ) }
    dend_29 { pt3dadd( -2.71888, 556.779, -34.357, 0.66 ) }
    dend_29 { pt3dadd( -2.53551, 558.216, -34.2579, 1.25 ) }
    dend_29 { pt3dadd( -2.47644, 558.859, -34.1975, 1.99 ) }
    dend_29 { pt3dadd( -2.45766, 559.285, -34.1494, 1.99 ) }
    dend_29 { pt3dadd( -2.4575, 560.013, -34.077, 1.55 ) }
    dend_29 { pt3dadd( -2.4661, 560.16, -34.0644, 1.55 ) }
    dend_29 { pt3dadd( -2.56026, 561.079, -34.0104, 1.33 ) }
    dend_29 { pt3dadd( -2.67145, 562.077, -34.0181, 1.18 ) }
    dend_29 { pt3dadd( -2.74135, 562.942, -34.0343, 0.96 ) }
    dend_29 { pt3dadd( -2.7663, 563.673, -34.0257, 0.96 ) }
    dend_29 { pt3dadd( -2.76282, 563.822, -34.0206, 0.96 ) }
    dend_29 { pt3dadd( -2.70654, 564.671, -33.9791, 0.66 ) }
    dend_29 { pt3dadd( -2.58589, 565.676, -33.9165, 0.52 ) }
    dend_29 { pt3dadd( -2.44655, 566.58, -33.8511, 0.52 ) }
    dend_29 { pt3dadd( -2.21528, 567.889, -33.7452, 0.81 ) }
    dend_29 { pt3dadd( -1.99627, 568.981, -33.6517, 1.33 ) }
    dend_29 { pt3dadd( -1.96439, 569.127, -33.6377, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_29 { pt3dadd( -1.76743, 569.954, -33.5728, 1.77 ) }
    dend_29 { pt3dadd( -1.64185, 570.466, -33.5428, 2.28 ) }
    dend_29 { pt3dadd( -1.62609, 570.534, -33.545, 2.28 ) }
    dend_29 { pt3dadd( -1.50407, 571.19, -33.642, 2.28 ) }
    dend_29 { pt3dadd( -1.43698, 571.617, -33.7201, 2.28 ) }
    dend_29 { pt3dadd( -1.31472, 572.508, -33.8928, 1.92 ) }
    dend_29 { pt3dadd( -1.30652, 572.576, -33.9066, 1.92 ) }
    dend_29 { pt3dadd( -1.14756, 574.011, -34.2017, 0.81 ) }
    dend_29 { pt3dadd( -1.00577, 575.456, -34.4019, 0.81 ) }
    dend_29 { pt3dadd( -0.99306, 575.606, -34.4153, 0.81 ) }
    dend_29 { pt3dadd( -0.928942, 576.485, -34.446, 0.66 ) }
    dend_29 { pt3dadd( -0.923921, 576.565, -34.4431, 0.66 ) }
    dend_29 { pt3dadd( -0.87553, 577.606, -34.3603, 0.66 ) }
    dend_29 { pt3dadd( -0.836058, 578.975, -34.1541, 0.66 ) }
    dend_29 { pt3dadd( -0.835419, 579.111, -34.1287, 0.66 ) }
    dend_29 { pt3dadd( -0.860501, 579.895, -33.9493, 1.18 ) }
    dend_29 { pt3dadd( -0.869705, 580.022, -33.9184, 1.18 ) }
    dend_29 { pt3dadd( -0.93154, 580.728, -33.764, 1.4 ) }
    dend_29 { pt3dadd( -0.95285, 580.934, -33.7265, 1.4 ) }
    dend_29 { pt3dadd( -1.00802, 581.446, -33.6556, 1.4 ) }
    dend_29 { pt3dadd( -1.10708, 582.455, -33.5202, 1.11 ) }
    dend_29 { pt3dadd( -1.23819, 584.072, -33.3224, 0.88 ) }
    dend_29 { pt3dadd( -1.32715, 585.302, -33.197, 1.03 ) }
    dend_29 { pt3dadd( -1.40097, 586.516, -33.1013, 1.33 ) }
    dend_29 { pt3dadd( -1.40857, 586.654, -33.0939, 1.33 ) }
    dend_29 { pt3dadd( -1.43431, 587.105, -33.0736, 1.33 ) }
    dend_29 { pt3dadd( -1.51683, 588.429, -33.0414, 0.88 ) }
    dend_29 { pt3dadd( -1.56343, 589.142, -33.0144, 0.88 ) }
    dend_29 { pt3dadd( -1.63343, 590.299, -32.9541, 0.74 ) }
    dend_29 { pt3dadd( -1.66877, 591.149, -32.9004, 0.74 ) }
    dend_29 { pt3dadd( -1.69166, 592.08, -32.8366, 1.33 ) }
    dend_29 { pt3dadd( -1.6924, 592.159, -32.8309, 1.33 ) }
    dend_29 { pt3dadd( -1.68557, 592.97, -32.8026, 1.92 ) }
    dend_29 { pt3dadd( -1.67659, 593.604, -32.8092, 2.21 ) }
    dend_29 { pt3dadd( -1.68248, 594.08, -32.8507, 2.21 ) }
    dend_29 { pt3dadd( -1.72075, 594.817, -32.9594, 1.77 ) }
    dend_29 { pt3dadd( -1.78976, 595.736, -33.1311, 1.18 ) }
    dend_29 { pt3dadd( -1.88305, 596.703, -33.32, 0.81 ) }
    dend_29 { pt3dadd( -2.05145, 598.162, -33.621, 0.74 ) }
    dend_29 { pt3dadd( -2.24021, 599.759, -33.9417, 0.66 ) }
    dend_29 { pt3dadd( -2.3846, 601.123, -34.1917, 0.66 ) }
    dend_29 { pt3dadd( -2.39094, 601.193, -34.2033, 0.66 ) }
    dend_29 { pt3dadd( -2.44317, 602.199, -34.3384, 0.66 ) }
    dend_29 { pt3dadd( -2.4412, 602.313, -34.3474, 0.66 ) }
    dend_29 { pt3dadd( -2.31528, 603.786, -34.4266, 0.66 ) }
    dend_29 { pt3dadd( -2.12357, 605.103, -34.4519, 0.66 ) }
    dend_29 { pt3dadd( -2.10543, 605.202, -34.4523, 0.66 ) }
    dend_29 { pt3dadd( -1.87127, 606.432, -34.4557, 0.66 ) }
    dend_29 { pt3dadd( -1.49389, 608.273, -34.4557, 0.66 ) }
    dend_29 { pt3dadd( -1.47172, 608.376, -34.4557, 0.66 ) }
    dend_29 { pt3dadd( -1.35167, 608.91, -34.4557, 1.25 ) }
    dend_29 { pt3dadd( -1.33423, 608.987, -34.4557, 1.25 ) }
    dend_29 { pt3dadd( -1.08254, 610.148, -34.4557, 1.25 ) }
    dend_29 { pt3dadd( -1.06221, 610.252, -34.4557, 1.25 ) }
    dend_29 { pt3dadd( -0.864105, 611.26, -34.4379, 1.25 ) }
    dend_29 { pt3dadd( -0.69771, 612.122, -34.4077, 0.96 ) }
    dend_29 { pt3dadd( -0.538353, 612.982, -34.3539, 0.96 ) }
    dend_29 { pt3dadd( -0.528013, 613.042, -34.3491, 0.96 ) }
    dend_29 { pt3dadd( -0.392568, 613.918, -34.2682, 1.11 ) }
    dend_29 { pt3dadd( -0.181013, 615.419, -34.1173, 0.52 ) }
    dend_29 { pt3dadd( -0.0494398, 616.408, -34.0141, 1.18 ) }
    dend_29 { pt3dadd( 0.101927, 617.464, -33.9093, 1.92 ) }
    dend_29 { pt3dadd( 0.208805, 618.17, -33.8576, 2.43 ) }
    dend_29 { pt3dadd( 0.311076, 618.806, -33.8262, 2.43 ) }
    dend_29 { pt3dadd( 0.439163, 619.574, -33.8059, 2.43 ) }
    dend_29 { pt3dadd( 0.657313, 620.86, -33.809, 1.25 ) }
    dend_29 { pt3dadd( 0.886368, 622.091, -33.8495, 0.59 ) }
    dend_29 { pt3dadd( 1.1333, 623.406, -33.9676, 0.74 ) }
    dend_29 { pt3dadd( 1.29084, 624.234, -34.0759, 1.03 ) }
    dend_29 { pt3dadd( 1.32483, 624.436, -34.1113, 1.03 ) }
    dend_29 { pt3dadd( 1.39799, 624.977, -34.2318, 1.03 ) }
    dend_29 { pt3dadd( 1.47002, 625.734, -34.4283, 0.59 ) }
    dend_29 { pt3dadd( 1.52486, 626.869, -34.7431, 0.59 ) }
    dend_29 { pt3dadd( 1.52734, 626.983, -34.7724, 0.59 ) }
    dend_29 { pt3dadd( 1.57886, 628.039, -35.0285, 0.59 ) }
    dend_29 { pt3dadd( 1.61208, 628.335, -35.0825, 1.03 ) }
    dend_29 { pt3dadd( 1.73339, 629.088, -35.1804, 0.66 ) }
    dend_29 { pt3dadd( 1.83231, 629.577, -35.2165, 0.66 ) }
    dend_29 { pt3dadd( 2.03689, 630.442, -35.2089, 0.66 ) }
    dend_29 { pt3dadd( 2.31815, 631.63, -35.1562, 0.59 ) }
    dend_29 { pt3dadd( 2.6456, 633.033, -35.0589, 1.03 ) }
    dend_29 { pt3dadd( 2.76402, 633.558, -35.0155, 1.84 ) }
    dend_29 { pt3dadd( 2.87005, 634.065, -34.9694, 1.84 ) }
    dend_29 { pt3dadd( 3.1176, 635.399, -34.8448, 1.18 ) }
    dend_29 { pt3dadd( 3.28491, 636.466, -34.7437, 0.66 ) }
    dend_29 { pt3dadd( 3.38847, 637.48, -34.6522, 0.66 ) }
    dend_29 { pt3dadd( 3.39808, 637.658, -34.6407, 0.66 ) }
    dend_29 { pt3dadd( 3.43749, 639.068, -34.5754, 0.66 ) }
    dend_29 { pt3dadd( 3.44202, 640.171, -34.5479, 1.18 ) }
    dend_29 { pt3dadd( 3.42695, 640.926, -34.5495, 1.18 ) }
    dend_29 { pt3dadd( 3.38802, 642.136, -34.5532, 0.66 ) }
    dend_29 { pt3dadd( 3.34271, 643.13, -34.5575, 0.66 ) }
    dend_29 { pt3dadd( 3.28322, 644.07, -34.5635, 1.25 ) }
    dend_29 { pt3dadd( 3.21514, 644.841, -34.5669, 1.99 ) }
    dend_29 { pt3dadd( 3.156, 645.415, -34.5669, 2.21 ) }
    dend_29 { pt3dadd( 3.01202, 646.666, -34.5669, 2.06 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 96/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -10.776, -66.0637, -17.9223, 0.44 ) }
    dend_12 { pt3dadd( -11.3059, -66.4648, -17.8765, 0.44 ) }
    dend_12 { pt3dadd( -11.3532, -66.5017, -17.8717, 0.44 ) }
    dend_12 { pt3dadd( -12.0513, -67.0725, -17.7911, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_12 { pt3dadd( -12.7229, -67.6084, -17.7151, 1.18 ) }
    dend_12 { pt3dadd( -13.1957, -67.9784, -17.664, 0.59 ) }
    dend_12 { pt3dadd( -13.2424, -68.0147, -17.6592, 0.59 ) }
    dend_12 { pt3dadd( -13.6926, -68.3874, -17.6162, 0.22 ) }
    dend_12 { pt3dadd( -14.1421, -68.7505, -17.5686, 0.22 ) }
    dend_12 { pt3dadd( -14.6012, -69.1054, -17.5164, 0.59 ) }
    dend_12 { pt3dadd( -14.9086, -69.3469, -17.4781, 0.59 ) }
    dend_12 { pt3dadd( -14.9778, -69.4082, -17.4654, 0.59 ) }
    dend_12 { pt3dadd( -15.4531, -69.8684, -17.3616, 0.22 ) }
    dend_12 { pt3dadd( -15.8217, -70.263, -17.2717, 1.18 ) }
    dend_12 { pt3dadd( -16.1743, -70.7215, -17.1764, 1.25 ) }
    dend_12 { pt3dadd( -16.2078, -70.7729, -17.1664, 1.25 ) }
    dend_12 { pt3dadd( -16.7716, -71.7561, -16.9385, 0.22 ) }
    dend_12 { pt3dadd( -16.9297, -72.0608, -16.8651, 0.37 ) }
    dend_12 { pt3dadd( -17.0192, -72.2711, -16.8064, 0.37 ) }
    dend_12 { pt3dadd( -17.445, -73.4457, -16.4367, 0.22 ) }
    dend_12 { pt3dadd( -17.5751, -73.8505, -16.3009, 0.22 ) }
    dend_12 { pt3dadd( -17.8519, -74.7599, -15.9834, 1.47 ) }
    dend_12 { pt3dadd( -18.0473, -75.4888, -15.7533, 2.21 ) }
    dend_12 { pt3dadd( -18.2304, -76.2291, -15.5316, 2.21 ) }
    dend_12 { pt3dadd( -18.2441, -76.2835, -15.5143, 2.21 ) }
    dend_12 { pt3dadd( -18.4541, -77.324, -15.1861, 0.74 ) }
    dend_12 { pt3dadd( -18.4629, -77.3797, -15.17, 0.74 ) }
    dend_12 { pt3dadd( -18.6057, -78.5138, -14.8975, 0.22 ) }
    dend_12 { pt3dadd( -18.6333, -78.7564, -14.8425, 0.59 ) }
    dend_12 { pt3dadd( -18.7818, -79.9343, -14.6041, 0.22 ) }
    dend_12 { pt3dadd( -18.8697, -80.6889, -14.4544, 0.22 ) }
    dend_12 { pt3dadd( -18.9354, -81.3629, -14.3136, 0.22 ) }
    dend_12 { pt3dadd( -18.9948, -81.9344, -14.1934, 0.52 ) }
    dend_12 { pt3dadd( -19.0238, -82.1946, -14.143, 0.52 ) }
    dend_12 { pt3dadd( -19.1423, -83.2794, -13.97, 0.22 ) }
    dend_12 { pt3dadd( -19.2061, -83.9742, -13.8863, 0.22 ) }
    dend_12 { pt3dadd( -19.296, -84.9674, -13.7755, 1.55 ) }
    dend_12 { pt3dadd( -19.3228, -85.5367, -13.7094, 1.69 ) }
    dend_12 { pt3dadd( -19.3086, -87.0972, -13.4856, 0.22 ) }
    dend_12 { pt3dadd( -19.2521, -87.8901, -13.3515, 0.22 ) }
    dend_12 { pt3dadd( -19.1705, -88.4293, -13.2475, 0.52 ) }
    dend_12 { pt3dadd( -19.0388, -88.983, -13.1482, 0.52 ) }
    dend_12 { pt3dadd( -18.7705, -89.8302, -13.0205, 0.22 ) }
    dend_12 { pt3dadd( -18.5236, -90.4957, -12.933, 1.4 ) }
    dend_12 { pt3dadd( -18.2897, -91.0505, -12.8727, 1.69 ) }
    dend_12 { pt3dadd( -18.1043, -91.4967, -12.8298, 1.77 ) }
    dend_12 { pt3dadd( -17.5217, -92.9708, -12.7005, 0.15 ) }
    dend_12 { pt3dadd( -17.1395, -93.9812, -12.6302, 0.22 ) }
    dend_12 { pt3dadd( -16.8987, -94.6562, -12.6045, 0.74 ) }
    dend_12 { pt3dadd( -16.7117, -95.2456, -12.5912, 0.74 ) }
    dend_12 { pt3dadd( -16.5048, -95.986, -12.5678, 0.22 ) }
    dend_12 { pt3dadd( -16.456, -96.1952, -12.5548, 0.59 ) }
    dend_12 { pt3dadd( -16.3875, -96.5561, -12.5142, 0.59 ) }
    dend_12 { pt3dadd( -16.3742, -96.6235, -12.508, 0.59 ) }
    dend_12 { pt3dadd( -16.1648, -97.6771, -12.4198, 0.22 ) }
    dend_12 { pt3dadd( -16.0485, -98.313, -12.3924, 0.74 ) }
    dend_12 { pt3dadd( -15.9023, -99.0233, -12.3834, 0.96 ) }
    dend_12 { pt3dadd( -15.7944, -99.5113, -12.3807, 0.66 ) }
    dend_12 { pt3dadd( -15.4229, -101.077, -12.3964, 0.29 ) }
    dend_12 { pt3dadd( -15.2015, -101.942, -12.413, 0.22 ) }
    dend_12 { pt3dadd( -14.9442, -102.872, -12.4362, 0.22 ) }
    dend_12 { pt3dadd( -14.6306, -104.024, -12.474, 1.55 ) }
    dend_12 { pt3dadd( -14.5365, -104.369, -12.4895, 1.92 ) }
    dend_12 { pt3dadd( -14.3022, -105.233, -12.539, 0.96 ) }
    dend_12 { pt3dadd( -14.1728, -105.729, -12.5822, 0.44 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 61/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -10.776, -66.0637, -17.9223, 2.43 ) }
    dend_9 { pt3dadd( -11.082, -67.5738, -18.7247, 2.43 ) }
    dend_9 { pt3dadd( -11.3652, -68.9834, -19.3676, 0.96 ) }
    dend_9 { pt3dadd( -11.5938, -70.0548, -19.7848, 0.52 ) }
    dend_9 { pt3dadd( -11.8069, -71.0414, -20.133, 0.52 ) }
    dend_9 { pt3dadd( -12.0697, -72.2769, -20.542, 0.52 ) }
    dend_9 { pt3dadd( -12.3186, -73.4842, -20.9235, 0.52 ) }
    dend_9 { pt3dadd( -12.5337, -74.5876, -21.1824, 0.52 ) }
    dend_9 { pt3dadd( -12.7532, -75.7411, -21.3955, 0.52 ) }
    dend_9 { pt3dadd( -12.9595, -76.8912, -21.5841, 2.58 ) }
    dend_9 { pt3dadd( -13.1891, -78.2713, -21.8397, 3.68 ) }
    dend_9 { pt3dadd( -13.2494, -78.6168, -21.9127, 3.68 ) }
    dend_9 { pt3dadd( -13.4161, -79.4489, -22.103, 3.24 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 74/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 2.81883, -180.426, 16.6542, 0.59 ) }
    dend_6 { pt3dadd( 2.43872, -182.314, 16.352, 0.59 ) }
    dend_6 { pt3dadd( 2.22425, -183.218, 16.223, 0.37 ) }
    dend_6 { pt3dadd( 1.94566, -184.114, 16.1273, 0.37 ) }
    dend_6 { pt3dadd( 1.69208, -184.714, 16.0831, 0.74 ) }
    dend_6 { pt3dadd( 1.36162, -185.375, 16.0489, 0.74 ) }
    dend_6 { pt3dadd( 1.05767, -185.907, 16.0331, 0.96 ) }
    dend_6 { pt3dadd( 1.01708, -185.963, 16.0382, 0.96 ) }
    dend_6 { pt3dadd( 0.52012, -186.555, 16.1025, 1.25 ) }
    dend_6 { pt3dadd( -0.012179, -187.188, 16.233, 0.81 ) }
    dend_6 { pt3dadd( -0.0497908, -187.244, 16.2473, 0.81 ) }
    dend_6 { pt3dadd( -0.479356, -188.031, 16.4633, 0.59 ) }
    dend_6 { pt3dadd( -0.901355, -188.993, 16.7018, 0.59 ) }
    dend_6 { pt3dadd( -0.921483, -189.047, 16.7135, 0.59 ) }
    dend_6 { pt3dadd( -1.27428, -190.153, 16.923, 0.44 ) }
    dend_6 { pt3dadd( -1.64543, -191.371, 17.1368, 0.44 ) }
    dend_6 { pt3dadd( -1.66531, -191.435, 17.1482, 0.44 ) }
    dend_6 { pt3dadd( -2.02492, -192.553, 17.3457, 2.14 ) }
    dend_6 { pt3dadd( -2.25436, -193.177, 17.4455, 3.09 ) }
    dend_6 { pt3dadd( -2.46785, -193.747, 17.5135, 3.61 ) }
    dend_6 { pt3dadd( -2.72553, -194.408, 17.5135, 3.61 ) }
    dend_6 { pt3dadd( -6.11354, -203.547, 16.7003, 3.61 ) }
    dend_6 { pt3dadd( -10.5394, -212.047, 14.6019, 3.61 ) }
    dend_6 { pt3dadd( -15.6039, -219.831, 11.3433, 3.61 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 98/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 2.81883, -180.426, 16.6542, 0.59 ) }
    dend_5 { pt3dadd( 3.7137, -181.527, 16.4344, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_5 { pt3dadd( 4.57938, -182.538, 16.2902, 0.37 ) }
    dend_5 { pt3dadd( 5.30166, -183.218, 16.4543, 0.37 ) }
    dend_5 { pt3dadd( 6.26819, -183.959, 16.9775, 0.37 ) }
    dend_5 { pt3dadd( 6.33369, -184.002, 17.0262, 0.37 ) }
    dend_5 { pt3dadd( 7.24021, -184.582, 17.7749, 0.74 ) }
    dend_5 { pt3dadd( 7.28705, -184.61, 17.8363, 0.74 ) }
    dend_5 { pt3dadd( 8.59021, -185.434, 19.9191, 0.74 ) }
    dend_5 { pt3dadd( 8.6184, -185.454, 19.9678, 0.74 ) }
    dend_5 { pt3dadd( 9.01624, -185.785, 20.6362, 0.74 ) }
    dend_5 { pt3dadd( 9.34943, -186.136, 21.1457, 0.29 ) }
    dend_5 { pt3dadd( 9.84764, -186.79, 21.7611, 0.29 ) }
    dend_5 { pt3dadd( 10.2542, -187.366, 22.1452, 0.29 ) }
    dend_5 { pt3dadd( 10.6295, -187.946, 22.3389, 0.29 ) }
    dend_5 { pt3dadd( 10.9705, -188.464, 22.4959, 0.81 ) }
    dend_5 { pt3dadd( 11.0089, -188.52, 22.5096, 0.81 ) }
    dend_5 { pt3dadd( 11.3756, -188.966, 22.5827, 1.25 ) }
    dend_5 { pt3dadd( 11.7128, -189.272, 22.5864, 1.25 ) }
    dend_5 { pt3dadd( 12.2136, -189.633, 22.5786, 0.59 ) }
    dend_5 { pt3dadd( 19.1394, -195.843, 25.9649, 0.59 ) }
    // Section: dend_61, id: dend_61, parent: dend_29 (entry count 19/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 3.01202, 646.666, -34.5669, 0.44 ) }
    dend_61 { pt3dadd( 1.15087, 648.687, -36.9789, 0.44 ) }
    dend_61 { pt3dadd( 0.440917, 649.561, -37.9223, 0.44 ) }
    dend_61 { pt3dadd( -1.64732E-5, 650.148, -38.5174, 0.74 ) }
    dend_61 { pt3dadd( -0.025243, 650.188, -38.5547, 0.74 ) }
    dend_61 { pt3dadd( -0.35477, 650.846, -39.108, 0.74 ) }
    dend_61 { pt3dadd( -0.373221, 650.891, -39.1419, 0.74 ) }
    dend_61 { pt3dadd( -0.489198, 651.69, -39.4822, 0.44 ) }
    dend_61 { pt3dadd( -0.487818, 651.751, -39.5152, 0.44 ) }
    dend_61 { pt3dadd( -0.435013, 652.488, -39.962, 0.88 ) }
    dend_61 { pt3dadd( -0.407627, 653.245, -40.4106, 0.96 ) }
    dend_61 { pt3dadd( -0.409606, 653.679, -40.6593, 1.25 ) }
    dend_61 { pt3dadd( -0.411315, 653.729, -40.6904, 1.25 ) }
    dend_61 { pt3dadd( -0.517227, 654.762, -41.3388, 0.66 ) }
    dend_61 { pt3dadd( -0.671258, 655.572, -41.8482, 0.37 ) }
    dend_61 { pt3dadd( -0.831151, 656.129, -42.1912, 0.74 ) }
    dend_61 { pt3dadd( -1.01093, 656.664, -42.5274, 0.74 ) }
    dend_61 { pt3dadd( -1.24009, 657.275, -42.9036, 0.74 ) }
    dend_61 { pt3dadd( -1.61414, 658.197, -43.4432, 0.29 ) }
    dend_61 { pt3dadd( -2.09243, 659.249, -44.0017, 0.29 ) }
    dend_61 { pt3dadd( -2.43205, 659.963, -44.3732, 0.29 ) }
    dend_61 { pt3dadd( -2.91751, 661.002, -44.9183, 1.47 ) }
    dend_61 { pt3dadd( -3.0957, 661.397, -45.1108, 1.69 ) }
    dend_61 { pt3dadd( -3.12356, 661.455, -45.1361, 1.69 ) }
    dend_61 { pt3dadd( -3.41959, 662.038, -45.4192, 1.47 ) }
    dend_61 { pt3dadd( -3.44989, 662.094, -45.4467, 1.47 ) }
    dend_61 { pt3dadd( -4.27334, 663.645, -46.333, 0.22 ) }
    dend_61 { pt3dadd( -4.55852, 664.202, -46.6731, 0.22 ) }
    dend_61 { pt3dadd( -4.99538, 665.135, -47.2663, 0.22 ) }
    dend_61 { pt3dadd( -5.4537, 666.321, -48.0127, 1.03 ) }
    dend_61 { pt3dadd( -5.61495, 666.797, -48.3352, 1.4 ) }
    dend_61 { pt3dadd( -6.07909, 668.284, -49.3826, 0.22 ) }
    dend_61 { pt3dadd( -6.20358, 668.699, -49.686, 0.59 ) }
    dend_61 { pt3dadd( -6.33581, 669.169, -50.0368, 0.74 ) }
    dend_61 { pt3dadd( -6.72457, 670.694, -51.1368, 0.29 ) }
    dend_61 { pt3dadd( -7.04681, 671.79, -51.863, 0.29 ) }
    dend_61 { pt3dadd( -7.06868, 671.847, -51.9012, 0.29 ) }
    dend_61 { pt3dadd( -7.37356, 672.446, -52.2955, 0.44 ) }
    dend_61 { pt3dadd( -7.4037, 672.504, -52.3414, 0.44 ) }
    dend_61 { pt3dadd( -7.64565, 672.965, -52.737, 0.44 ) }
    dend_61 { pt3dadd( -8.00312, 673.664, -53.3454, 0.22 ) }
    dend_61 { pt3dadd( -8.49106, 674.741, -54.2357, 1.92 ) }
    dend_61 { pt3dadd( -8.58204, 674.957, -54.4295, 2.5 ) }
    dend_61 { pt3dadd( -9.35757, 677.138, -56.4776, 0.15 ) }
    dend_61 { pt3dadd( -9.45606, 677.449, -56.7745, 0.15 ) }
    dend_61 { pt3dadd( -9.68033, 678.267, -57.5757, 1.4 ) }
    dend_61 { pt3dadd( -9.72836, 678.454, -57.7573, 1.69 ) }
    dend_61 { pt3dadd( -10.191, 680.238, -59.4598, 0.15 ) }
    dend_61 { pt3dadd( -10.3598, 680.841, -60.0063, 0.15 ) }
    dend_61 { pt3dadd( -10.4116, 681.002, -60.1287, 0.15 ) }
    dend_61 { pt3dadd( -10.4594, 681.144, -60.2223, 0.15 ) }
    dend_61 { pt3dadd( -10.6932, 681.843, -60.5806, 0.96 ) }
    dend_61 { pt3dadd( -10.8537, 682.326, -60.7878, 1.47 ) }
    dend_61 { pt3dadd( -10.9736, 682.674, -60.8954, 1.62 ) }
    dend_61 { pt3dadd( -11.256, 683.451, -61.1392, 0.88 ) }
    dend_61 { pt3dadd( -11.7848, 685.001, -61.6329, 0.22 ) }
    dend_61 { pt3dadd( -11.958, 685.589, -61.8461, 0.22 ) }
    dend_61 { pt3dadd( -12.1086, 686.197, -62.0981, 0.74 ) }
    dend_61 { pt3dadd( -12.1216, 686.261, -62.1252, 0.74 ) }
    dend_61 { pt3dadd( -12.2123, 686.795, -62.3254, 0.74 ) }
    dend_61 { pt3dadd( -12.2543, 687.073, -62.4111, 0.74 ) }
    dend_61 { pt3dadd( -12.4537, 688.529, -62.7691, 0.29 ) }
    dend_61 { pt3dadd( -12.4639, 688.597, -62.784, 0.29 ) }
    dend_61 { pt3dadd( -12.6736, 689.908, -63.0239, 0.29 ) }
    dend_61 { pt3dadd( -12.8971, 691.235, -63.2451, 0.29 ) }
    dend_61 { pt3dadd( -13.0807, 692.273, -63.3905, 0.29 ) }
    dend_61 { pt3dadd( -13.2252, 693.046, -63.4696, 1.47 ) }
    dend_61 { pt3dadd( -13.3111, 693.478, -63.5031, 2.06 ) }
    dend_61 { pt3dadd( -13.3248, 693.545, -63.509, 2.06 ) }
    dend_61 { pt3dadd( -13.4831, 694.311, -63.6021, 1.18 ) }
    dend_61 { pt3dadd( -13.9233, 696.318, -63.9356, 0.22 ) }
    dend_61 { pt3dadd( -14.2359, 697.763, -64.2095, 0.22 ) }
    dend_61 { pt3dadd( -14.4687, 698.908, -64.4881, 1.47 ) }
    dend_61 { pt3dadd( -14.5481, 699.322, -64.6059, 1.18 ) }
    dend_61 { pt3dadd( -14.8339, 700.991, -65.1485, 0.22 ) }
    dend_61 { pt3dadd( -15.0044, 702.104, -65.5583, 1.11 ) }
    dend_61 { pt3dadd( -15.0776, 702.692, -65.8012, 1.33 ) }
    dend_61 { pt3dadd( -15.2869, 704.853, -66.7474, 0.22 ) }
    dend_61 { pt3dadd( -15.2914, 704.917, -66.7747, 0.22 ) }
    dend_61 { pt3dadd( -15.3741, 706.432, -67.4126, 0.22 ) }
    dend_61 { pt3dadd( -15.3761, 706.496, -67.4377, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_61 { pt3dadd( -15.4044, 708.132, -68.0367, 0.22 ) }
    dend_61 { pt3dadd( -15.4068, 708.197, -68.0592, 0.22 ) }
    dend_61 { pt3dadd( -15.4604, 709.104, -68.2997, 1.55 ) }
    dend_61 { pt3dadd( -15.477, 709.248, -68.3321, 2.14 ) }
    dend_61 { pt3dadd( -15.568, 709.747, -68.4188, 2.36 ) }
    dend_61 { pt3dadd( -15.581, 709.803, -68.427, 2.36 ) }
    dend_61 { pt3dadd( -15.9178, 710.801, -68.5592, 1.11 ) }
    dend_61 { pt3dadd( -16.4503, 712.12, -68.7301, 0.22 ) }
    dend_61 { pt3dadd( -16.9555, 713.241, -68.8699, 0.22 ) }
    dend_61 { pt3dadd( -17.3281, 714.019, -68.9649, 1.4 ) }
    dend_61 { pt3dadd( -17.5333, 714.419, -69.0114, 1.4 ) }
    dend_61 { pt3dadd( -18.5581, 716.302, -69.2473, 0.22 ) }
    dend_61 { pt3dadd( -18.9603, 716.984, -69.3373, 0.88 ) }
    dend_61 { pt3dadd( -19.1901, 717.357, -69.392, 0.59 ) }
    dend_61 { pt3dadd( -19.2309, 717.426, -69.4024, 0.59 ) }
    dend_61 { pt3dadd( -19.3276, 717.598, -69.4259, 0.59 ) }
    dend_61 { pt3dadd( -19.9657, 718.898, -69.5578, 0.22 ) }
    dend_61 { pt3dadd( -20.3125, 719.711, -69.6076, 0.22 ) }
    dend_61 { pt3dadd( -20.6333, 720.546, -69.6509, 1.03 ) }
    dend_61 { pt3dadd( -20.7808, 720.95, -69.6684, 1.4 ) }
    dend_61 { pt3dadd( -20.9489, 721.466, -69.6597, 1.4 ) }
    dend_61 { pt3dadd( -21.3302, 722.837, -69.5713, 0.22 ) }
    dend_61 { pt3dadd( -21.3466, 722.906, -69.5638, 0.22 ) }
    dend_61 { pt3dadd( -21.6686, 724.442, -69.3746, 0.22 ) }
    dend_61 { pt3dadd( -21.693, 724.579, -69.358, 0.22 ) }
    dend_61 { pt3dadd( -21.9622, 726.33, -69.1545, 0.22 ) }
    dend_61 { pt3dadd( -22.0985, 727.329, -69.031, 1.33 ) }
    dend_61 { pt3dadd( -22.14, 727.665, -68.9863, 1.62 ) }
    dend_61 { pt3dadd( -22.2146, 728.301, -68.9012, 0.81 ) }
    dend_61 { pt3dadd( -22.3903, 729.998, -68.6743, 0.22 ) }
    dend_61 { pt3dadd( -22.4969, 731.089, -68.5641, 1.25 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 31/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 3.01202, 646.666, -34.5669, 0.59 ) }
    dend_30 { pt3dadd( 2.93191, 647.743, -34.4907, 0.59 ) }
    dend_30 { pt3dadd( 2.83952, 648.883, -34.3325, 0.59 ) }
    dend_30 { pt3dadd( 2.76154, 649.955, -34.1524, 0.81 ) }
    dend_30 { pt3dadd( 2.70562, 650.799, -34.0083, 1.25 ) }
    dend_30 { pt3dadd( 2.70043, 650.878, -33.9948, 1.25 ) }
    dend_30 { pt3dadd( 2.66565, 651.369, -33.9152, 1.11 ) }
    dend_30 { pt3dadd( 2.58083, 652.389, -33.7407, 0.88 ) }
    dend_30 { pt3dadd( 2.52225, 653.124, -33.6299, 0.44 ) }
    dend_30 { pt3dadd( 2.44398, 654.198, -33.5007, 0.37 ) }
    dend_30 { pt3dadd( 2.42405, 654.485, -33.4717, 0.37 ) }
    dend_30 { pt3dadd( 2.36673, 655.267, -33.4118, 0.37 ) }
    dend_30 { pt3dadd( 2.27203, 656.444, -33.3616, 1.47 ) }
    dend_30 { pt3dadd( 2.19563, 657.152, -33.3557, 1.84 ) }
    dend_30 { pt3dadd( 2.16099, 657.433, -33.3533, 1.84 ) }
    dend_30 { pt3dadd( 2.09759, 657.999, -33.3482, 1.84 ) }
    dend_30 { pt3dadd( 2.00389, 658.941, -33.3401, 1.25 ) }
    dend_30 { pt3dadd( 1.8683, 660.512, -33.3275, 0.66 ) }
    dend_30 { pt3dadd( 1.75418, 661.936, -33.3172, 0.66 ) }
    dend_30 { pt3dadd( 1.74753, 662.036, -33.3166, 0.66 ) }
    dend_30 { pt3dadd( 1.69134, 663.064, -33.3131, 0.66 ) }
    dend_30 { pt3dadd( 1.68579, 663.215, -33.3135, 0.66 ) }
    dend_30 { pt3dadd( 1.65958, 664.151, -33.3194, 0.66 ) }
    dend_30 { pt3dadd( 1.65865, 664.231, -33.3202, 0.66 ) }
    dend_30 { pt3dadd( 1.65722, 665.085, -33.3311, 0.66 ) }
    dend_30 { pt3dadd( 1.65055, 665.342, -33.3347, 0.66 ) }
    dend_30 { pt3dadd( 1.62128, 666.153, -33.3464, 0.66 ) }
    dend_30 { pt3dadd( 1.6036, 666.795, -33.3554, 0.66 ) }
    dend_30 { pt3dadd( 1.60336, 666.866, -33.3563, 0.66 ) }
    dend_30 { pt3dadd( 1.62186, 667.89, -33.3677, 0.66 ) }
    dend_30 { pt3dadd( 1.62479, 667.951, -33.3682, 0.66 ) }
    dend_30 { pt3dadd( 1.69081, 668.951, -33.3812, 1.18 ) }
    dend_30 { pt3dadd( 1.69911, 669.021, -33.3758, 1.18 ) }
    dend_30 { pt3dadd( 1.84179, 669.917, -33.2416, 1.33 ) }
    dend_30 { pt3dadd( 1.8568, 669.998, -33.2247, 1.33 ) }
    dend_30 { pt3dadd( 1.91044, 670.25, -33.154, 1.33 ) }
    dend_30 { pt3dadd( 1.93364, 670.36, -33.1208, 1.33 ) }
    dend_30 { pt3dadd( 2.23199, 671.758, -32.6481, 0.81 ) }
    dend_30 { pt3dadd( 2.24349, 671.816, -32.6314, 0.81 ) }
    dend_30 { pt3dadd( 2.37377, 672.372, -32.5045, 0.81 ) }
    dend_30 { pt3dadd( 2.38893, 672.438, -32.4918, 0.81 ) }
    dend_30 { pt3dadd( 2.57238, 673.211, -32.3729, 0.96 ) }
    dend_30 { pt3dadd( 2.60121, 673.325, -32.3596, 0.96 ) }
    dend_30 { pt3dadd( 2.92113, 674.547, -32.2869, 0.37 ) }
    dend_30 { pt3dadd( 3.18822, 675.579, -32.2368, 0.37 ) }
    dend_30 { pt3dadd( 3.38392, 676.395, -32.1757, 1.33 ) }
    dend_30 { pt3dadd( 3.56256, 677.139, -32.0889, 2.06 ) }
    dend_30 { pt3dadd( 3.63854, 677.474, -32.022, 2.36 ) }
    dend_30 { pt3dadd( 3.75575, 678.005, -31.8893, 2.36 ) }
    dend_30 { pt3dadd( 3.92799, 678.849, -31.6237, 1.62 ) }
    dend_30 { pt3dadd( 4.1687, 680.151, -31.1796, 0.52 ) }
    dend_30 { pt3dadd( 4.44404, 681.616, -30.6484, 0.37 ) }
    dend_30 { pt3dadd( 4.67262, 682.911, -30.1328, 1.55 ) }
    dend_30 { pt3dadd( 4.78428, 683.559, -29.8537, 2.21 ) }
    dend_30 { pt3dadd( 4.90365, 684.233, -29.5283, 2.5 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 86/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -13.4161, -79.4489, -22.103, 0.44 ) }
    dend_11 { pt3dadd( -12.9457, -80.689, -21.6542, 0.44 ) }
    dend_11 { pt3dadd( -12.4645, -81.8924, -21.1704, 0.22 ) }
    dend_11 { pt3dadd( -12.4369, -81.9519, -21.142, 0.22 ) }
    dend_11 { pt3dadd( -11.9953, -82.8192, -20.601, 0.22 ) }
    dend_11 { pt3dadd( -11.3333, -84.0362, -19.8313, 1.47 ) }
    dend_11 { pt3dadd( -11.131, -84.3981, -19.6147, 1.99 ) }
    dend_11 { pt3dadd( -11.06, -84.5198, -19.5354, 1.99 ) }
    dend_11 { pt3dadd( -10.5006, -85.3999, -18.9729, 1.77 ) }
    dend_11 { pt3dadd( -9.59412, -86.7844, -18.1328, 0.52 ) }
    dend_11 { pt3dadd( -8.89605, -87.8259, -17.5283, 0.29 ) }
    dend_11 { pt3dadd( -8.36352, -88.6206, -17.1209, 0.29 ) }
    dend_11 { pt3dadd( -8.32854, -88.6746, -17.0944, 0.29 ) }
    dend_11 { pt3dadd( -7.80562, -89.5044, -16.7138, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_11 { pt3dadd( -7.30711, -90.3765, -16.3755, 1.03 ) }
    dend_11 { pt3dadd( -6.63185, -91.6778, -15.9665, 0.22 ) }
    dend_11 { pt3dadd( -6.60878, -91.7295, -15.9504, 0.22 ) }
    dend_11 { pt3dadd( -6.39614, -92.2518, -15.8032, 0.44 ) }
    dend_11 { pt3dadd( -6.37534, -92.3045, -15.7876, 0.44 ) }
    dend_11 { pt3dadd( -6.09229, -93.0027, -15.5619, 0.44 ) }
    dend_11 { pt3dadd( -5.89514, -93.5259, -15.4149, 0.29 ) }
    dend_11 { pt3dadd( -5.56747, -94.4111, -15.1743, 1.55 ) }
    dend_11 { pt3dadd( -5.47694, -94.6453, -15.1054, 2.21 ) }
    dend_11 { pt3dadd( -5.00917, -95.7238, -14.7553, 2.21 ) }
    dend_11 { pt3dadd( -4.55755, -96.6768, -14.4311, 0.44 ) }
    dend_11 { pt3dadd( -3.99162, -97.6995, -14.0538, 0.29 ) }
    dend_11 { pt3dadd( -3.73716, -98.1133, -13.8928, 0.52 ) }
    dend_11 { pt3dadd( -3.69581, -98.1762, -13.8679, 0.52 ) }
    dend_11 { pt3dadd( -3.39166, -98.5882, -13.7344, 0.22 ) }
    dend_11 { pt3dadd( -3.33962, -98.6372, -13.7262, 0.22 ) }
    dend_11 { pt3dadd( -2.96481, -98.8784, -13.6909, 0.22 ) }
    dend_11 { pt3dadd( -2.5891, -99.095, -13.632, 0.74 ) }
    dend_11 { pt3dadd( -2.52128, -99.139, -13.6191, 0.74 ) }
    dend_11 { pt3dadd( -2.03187, -99.5066, -13.5151, 0.74 ) }
    dend_11 { pt3dadd( -1.17216, -100.256, -13.3201, 0.29 ) }
    dend_11 { pt3dadd( -0.642227, -100.792, -13.1601, 0.29 ) }
    dend_11 { pt3dadd( -0.0927408, -101.455, -12.959, 1.33 ) }
    dend_11 { pt3dadd( 0.220184, -101.869, -12.839, 1.92 ) }
    dend_11 { pt3dadd( 0.381383, -102.092, -12.7788, 1.99 ) }
    dend_11 { pt3dadd( 0.720433, -102.588, -12.6519, 1.55 ) }
    dend_11 { pt3dadd( 1.34599, -103.517, -12.4626, 0.66 ) }
    dend_11 { pt3dadd( 1.7559, -104.117, -12.3836, 0.29 ) }
    dend_11 { pt3dadd( 2.40959, -105.078, -12.3606, 0.22 ) }
    dend_11 { pt3dadd( 2.81086, -105.706, -12.3862, 1.03 ) }
    dend_11 { pt3dadd( 3.10978, -106.207, -12.4329, 1.55 ) }
    dend_11 { pt3dadd( 3.57841, -107.048, -12.5583, 0.88 ) }
    dend_11 { pt3dadd( 3.95712, -107.801, -12.7159, 0.29 ) }
    dend_11 { pt3dadd( 4.33196, -108.634, -12.9054, 0.29 ) }
    dend_11 { pt3dadd( 4.71244, -109.626, -13.1427, 0.22 ) }
    dend_11 { pt3dadd( 4.87611, -110.084, -13.2505, 0.52 ) }
    dend_11 { pt3dadd( 4.89915, -110.149, -13.2624, 0.52 ) }
    dend_11 { pt3dadd( 5.1222, -110.755, -13.3145, 0.52 ) }
    dend_11 { pt3dadd( 5.38727, -111.403, -13.3107, 0.44 ) }
    dend_11 { pt3dadd( 5.4677, -111.592, -13.2885, 0.66 ) }
    dend_11 { pt3dadd( 5.67324, -112.087, -13.2045, 0.37 ) }
    dend_11 { pt3dadd( 5.94402, -112.817, -13.0572, 0.29 ) }
    dend_11 { pt3dadd( 6.21094, -113.699, -12.8705, 0.29 ) }
    dend_11 { pt3dadd( 6.22249, -113.754, -12.8565, 0.29 ) }
    dend_11 { pt3dadd( 6.34478, -114.622, -12.636, 1.25 ) }
    dend_11 { pt3dadd( 6.38329, -115.033, -12.5393, 1.84 ) }
    dend_11 { pt3dadd( 6.39711, -115.411, -12.4626, 1.84 ) }
    dend_11 { pt3dadd( 6.39652, -116.281, -12.3411, 0.81 ) }
    dend_11 { pt3dadd( 6.38114, -117.296, -12.2355, 0.29 ) }
    dend_11 { pt3dadd( 6.3698, -118.021, -12.1843, 0.22 ) }
    dend_11 { pt3dadd( 6.36771, -118.119, -12.1809, 0.22 ) }
    dend_11 { pt3dadd( 6.33007, -118.957, -12.1965, 0.22 ) }
    dend_11 { pt3dadd( 6.23274, -120.098, -12.2911, 1.33 ) }
    dend_11 { pt3dadd( 6.16449, -120.636, -12.3672, 1.99 ) }
    dend_11 { pt3dadd( 6.10213, -120.985, -12.4352, 2.28 ) }
    dend_11 { pt3dadd( 5.98364, -121.513, -12.5326, 2.28 ) }
    dend_11 { pt3dadd( 5.64936, -122.869, -12.769, 0.66 ) }
    dend_11 { pt3dadd( 5.42643, -123.676, -12.9091, 0.22 ) }
    dend_11 { pt3dadd( 5.40627, -123.743, -12.9197, 0.22 ) }
    dend_11 { pt3dadd( 5.26274, -124.276, -12.984, 0.22 ) }
    dend_11 { pt3dadd( 5.12623, -124.825, -13.0289, 0.74 ) }
    dend_11 { pt3dadd( 5.04238, -125.205, -13.0375, 1.03 ) }
    dend_11 { pt3dadd( 4.98386, -125.487, -13.0202, 1.11 ) }
    dend_11 { pt3dadd( 4.87716, -126.053, -12.9753, 0.44 ) }
    dend_11 { pt3dadd( 4.69942, -126.982, -12.9233, 0.22 ) }
    dend_11 { pt3dadd( 4.68615, -127.049, -12.9213, 0.22 ) }
    dend_11 { pt3dadd( 4.57443, -127.558, -12.9213, 0.44 ) }
    dend_11 { pt3dadd( 4.44224, -128.311, -12.9213, 0.29 ) }
    dend_11 { pt3dadd( 4.42962, -128.379, -12.9213, 0.29 ) }
    dend_11 { pt3dadd( 4.18565, -129.184, -12.8925, 0.29 ) }
    dend_11 { pt3dadd( 3.99281, -129.688, -12.8575, 0.22 ) }
    dend_11 { pt3dadd( 3.96714, -129.754, -12.8515, 0.22 ) }
    dend_11 { pt3dadd( 3.64522, -130.65, -12.718, 0.22 ) }
    dend_11 { pt3dadd( 3.49124, -131.19, -12.5787, 0.22 ) }
    dend_11 { pt3dadd( 3.18577, -132.716, -12.1022, 2.14 ) }
    dend_11 { pt3dadd( 3.17828, -132.771, -12.0835, 2.14 ) }
    dend_11 { pt3dadd( 3.13715, -133.372, -11.8778, 1.99 ) }
    dend_11 { pt3dadd( 3.1343, -134.256, -11.576, 1.69 ) }
    dend_11 { pt3dadd( 3.20329, -135.574, -11.1196, 0.59 ) }
    dend_11 { pt3dadd( 3.3869, -136.8, -10.7121, 0.22 ) }
    dend_11 { pt3dadd( 3.53161, -137.408, -10.5401, 0.37 ) }
    dend_11 { pt3dadd( 3.69629, -138.049, -10.4187, 0.37 ) }
    dend_11 { pt3dadd( 3.8968, -138.787, -10.3571, 0.74 ) }
    dend_11 { pt3dadd( 3.91592, -138.853, -10.36, 0.74 ) }
    dend_11 { pt3dadd( 4.05689, -139.351, -10.4433, 1.11 ) }
    dend_11 { pt3dadd( 4.32105, -140.337, -10.6695, 0.59 ) }
    dend_11 { pt3dadd( 4.61058, -141.44, -10.9462, 0.29 ) }
    dend_11 { pt3dadd( 4.81192, -142.187, -11.1399, 0.29 ) }
    dend_11 { pt3dadd( 4.84261, -142.29, -11.1677, 0.29 ) }
    dend_11 { pt3dadd( 5.07118, -143.001, -11.3447, 0.29 ) }
    dend_11 { pt3dadd( 5.13955, -143.187, -11.3823, 0.29 ) }
    dend_11 { pt3dadd( 5.46343, -143.926, -11.4694, 0.29 ) }
    dend_11 { pt3dadd( 5.75735, -144.537, -11.4981, 1.18 ) }
    dend_11 { pt3dadd( 5.93805, -144.893, -11.5148, 1.47 ) }
    dend_11 { pt3dadd( 5.96955, -144.955, -11.5171, 1.47 ) }
    dend_11 { pt3dadd( 6.4597, -145.959, -11.5478, 0.44 ) }
    dend_11 { pt3dadd( 6.78736, -146.784, -11.5645, 0.37 ) }
    dend_11 { pt3dadd( 6.94882, -147.409, -11.5699, 0.81 ) }
    dend_11 { pt3dadd( 7.02277, -147.832, -11.576, 0.81 ) }
    dend_11 { pt3dadd( 7.1016, -148.49, -11.586, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_11 { pt3dadd( 7.13726, -148.946, -11.597, 0.29 ) }
    dend_11 { pt3dadd( 7.1776, -149.96, -11.6269, 0.22 ) }
    dend_11 { pt3dadd( 7.21466, -151.046, -11.6875, 0.22 ) }
    dend_11 { pt3dadd( 7.24824, -151.681, -11.7353, 0.44 ) }
    dend_11 { pt3dadd( 7.26623, -151.898, -11.7546, 0.44 ) }
    dend_11 { pt3dadd( 7.32512, -152.32, -11.7965, 0.44 ) }
    dend_11 { pt3dadd( 7.48731, -153.119, -11.8801, 0.29 ) }
    dend_11 { pt3dadd( 7.69532, -153.959, -11.9659, 1.4 ) }
    dend_11 { pt3dadd( 7.8585, -154.581, -12.0272, 1.69 ) }
    dend_11 { pt3dadd( 7.99177, -155.13, -12.0748, 1.92 ) }
    dend_11 { pt3dadd( 8.16877, -155.899, -12.1488, 0.74 ) }
    dend_11 { pt3dadd( 8.32421, -156.836, -12.2477, 0.22 ) }
    dend_11 { pt3dadd( 8.42372, -157.758, -12.35, 0.22 ) }
    dend_11 { pt3dadd( 8.4618, -158.42, -12.4173, 0.88 ) }
    dend_11 { pt3dadd( 8.46222, -158.923, -12.4725, 0.88 ) }
    dend_11 { pt3dadd( 8.42101, -159.739, -12.5638, 0.22 ) }
    dend_11 { pt3dadd( 8.31962, -160.755, -12.6767, 0.22 ) }
    dend_11 { pt3dadd( 8.31003, -160.833, -12.6848, 0.22 ) }
    dend_11 { pt3dadd( 8.19784, -161.553, -12.7516, 0.22 ) }
    dend_11 { pt3dadd( 8.03338, -162.512, -12.7958, 1.03 ) }
    dend_11 { pt3dadd( 7.95248, -162.934, -12.7997, 1.33 ) }
    dend_11 { pt3dadd( 7.89585, -163.217, -12.7915, 1.33 ) }
    dend_11 { pt3dadd( 7.65536, -164.482, -12.7666, 0.22 ) }
    dend_11 { pt3dadd( 7.46672, -165.399, -12.8012, 0.22 ) }
    dend_11 { pt3dadd( 7.33412, -165.96, -12.8595, 0.88 ) }
    dend_11 { pt3dadd( 7.23509, -166.35, -12.9213, 1.11 ) }
    dend_11 { pt3dadd( 7.15241, -166.658, -12.9834, 0.88 ) }
    dend_11 { pt3dadd( 6.83815, -167.86, -13.2732, 0.22 ) }
    dend_11 { pt3dadd( 6.56319, -168.836, -13.5409, 0.22 ) }
    dend_11 { pt3dadd( 6.40677, -169.383, -13.7018, 1.55 ) }
    dend_11 { pt3dadd( 6.26911, -169.866, -13.84, 1.77 ) }
    dend_11 { pt3dadd( 6.12053, -170.398, -13.9763, 1.25 ) }
    dend_11 { pt3dadd( 5.84648, -171.461, -14.2041, 0.22 ) }
    dend_11 { pt3dadd( 5.60802, -172.542, -14.3612, 0.22 ) }
    dend_11 { pt3dadd( 5.59853, -172.6, -14.3673, 0.22 ) }
    dend_11 { pt3dadd( 5.51481, -173.563, -14.467, 0.22 ) }
    dend_11 { pt3dadd( 5.5125, -173.642, -14.4786, 0.22 ) }
    dend_11 { pt3dadd( 5.5469, -174.516, -14.6307, 0.96 ) }
    dend_11 { pt3dadd( 5.5762, -175.071, -14.7351, 1.47 ) }
    dend_11 { pt3dadd( 5.61752, -175.67, -14.873, 0.88 ) }
    dend_11 { pt3dadd( 5.64034, -176.218, -15.0155, 0.66 ) }
    dend_11 { pt3dadd( 5.67642, -177.47, -15.3821, 0.29 ) }
    dend_11 { pt3dadd( 5.67952, -177.961, -15.5306, 0.59 ) }
    dend_11 { pt3dadd( 5.66918, -178.789, -15.7972, 0.59 ) }
    dend_11 { pt3dadd( 5.65849, -179.646, -16.0755, 0.29 ) }
    dend_11 { pt3dadd( 5.66045, -179.732, -16.1021, 0.29 ) }
    dend_11 { pt3dadd( 5.73356, -180.805, -16.4101, 0.29 ) }
    dend_11 { pt3dadd( 5.7426, -180.87, -16.4273, 0.29 ) }
    dend_11 { pt3dadd( 5.8425, -181.409, -16.5697, 0.74 ) }
    dend_11 { pt3dadd( 5.95725, -182.024, -16.7271, 0.88 ) }
    dend_11 { pt3dadd( 6.09619, -183.008, -16.9645, 0.22 ) }
    dend_11 { pt3dadd( 6.17026, -183.806, -17.15, 0.22 ) }
    dend_11 { pt3dadd( 6.18139, -184.695, -17.3615, 1.99 ) }
    dend_11 { pt3dadd( 6.15259, -185.338, -17.5242, 2.43 ) }
    dend_11 { pt3dadd( 5.99844, -186.757, -17.8934, 0.22 ) }
    dend_11 { pt3dadd( 5.8669, -187.521, -18.0983, 0.44 ) }
    dend_11 { pt3dadd( 5.66278, -188.459, -18.3602, 0.37 ) }
    dend_11 { pt3dadd( 5.42177, -189.434, -18.6317, 0.22 ) }
    dend_11 { pt3dadd( 5.24636, -190.081, -18.7991, 1.03 ) }
    dend_11 { pt3dadd( 5.14979, -190.461, -18.9085, 1.25 ) }
    dend_11 { pt3dadd( 5.03667, -191.001, -19.0825, 0.96 ) }
    dend_11 { pt3dadd( 4.84567, -192.227, -19.4986, 0.15 ) }
    dend_11 { pt3dadd( 4.78073, -192.868, -19.7184, 0.74 ) }
    dend_11 { pt3dadd( 4.75784, -193.342, -19.8744, 0.96 ) }
    dend_11 { pt3dadd( 4.72986, -194.812, -20.3429, 0.22 ) }
    dend_11 { pt3dadd( 4.73151, -194.951, -20.3865, 0.22 ) }
    dend_11 { pt3dadd( 4.78381, -195.564, -20.584, 0.22 ) }
    dend_11 { pt3dadd( 4.89677, -196.383, -20.8341, 0.22 ) }
    dend_11 { pt3dadd( 4.90678, -196.441, -20.851, 0.22 ) }
    dend_11 { pt3dadd( 5.11194, -197.483, -21.1464, 2.5 ) }
    dend_11 { pt3dadd( 5.20013, -197.889, -21.2534, 2.73 ) }
    dend_11 { pt3dadd( 5.68126, -199.848, -21.7992, 0.22 ) }
    dend_11 { pt3dadd( 5.85768, -200.436, -21.9772, 0.52 ) }
    dend_11 { pt3dadd( 6.05367, -200.984, -22.15, 0.52 ) }
    dend_11 { pt3dadd( 6.49261, -202.112, -22.4923, 0.22 ) }
    dend_11 { pt3dadd( 6.52026, -202.172, -22.5117, 0.22 ) }
    dend_11 { pt3dadd( 6.75928, -202.659, -22.6724, 0.22 ) }
    dend_11 { pt3dadd( 7.1925, -203.474, -22.9202, 1.18 ) }
    dend_11 { pt3dadd( 7.37065, -203.8, -23.0171, 1.69 ) }
    dend_11 { pt3dadd( 7.73684, -204.475, -23.1985, 1.33 ) }
    dend_11 { pt3dadd( 8.23636, -205.409, -23.3913, 0.22 ) }
    dend_11 { pt3dadd( 8.43472, -205.819, -23.4632, 0.22 ) }
    dend_11 { pt3dadd( 8.6837, -206.446, -23.5591, 1.47 ) }
    dend_11 { pt3dadd( 8.84063, -206.916, -23.6186, 1.69 ) }
    dend_11 { pt3dadd( 8.97945, -207.401, -23.6824, 1.69 ) }
    dend_11 { pt3dadd( 9.33476, -208.81, -23.8592, 0.29 ) }
    dend_11 { pt3dadd( 9.48328, -209.489, -23.9338, 0.29 ) }
    dend_11 { pt3dadd( 9.64294, -210.23, -24.0256, 1.03 ) }
    dend_11 { pt3dadd( 9.66774, -210.379, -24.0438, 1.33 ) }
    dend_11 { pt3dadd( 9.82359, -211.661, -24.1823, 0.22 ) }
    dend_11 { pt3dadd( 9.85733, -212.154, -24.2283, 0.22 ) }
    dend_11 { pt3dadd( 9.85649, -212.508, -24.249, 1.03 ) }
    dend_11 { pt3dadd( 9.85055, -212.944, -24.2517, 1.03 ) }
    dend_11 { pt3dadd( 9.7946, -214.332, -24.1989, 0.22 ) }
    dend_11 { pt3dadd( 9.72196, -215.138, -24.1445, 1.33 ) }
    dend_11 { pt3dadd( 9.67478, -215.451, -24.1132, 1.47 ) }
    dend_11 { pt3dadd( 9.56092, -216.069, -24.0775, 1.55 ) }
    dend_11 { pt3dadd( 9.27654, -217.438, -24.0396, 0.22 ) }
    dend_11 { pt3dadd( 9.16793, -217.888, -24.0438, 0.22 ) }
    dend_11 { pt3dadd( 8.96918, -218.635, -24.0793, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_11 { pt3dadd( 8.81404, -219.187, -24.1187, 1.25 ) }
    dend_11 { pt3dadd( 8.42356, -220.577, -24.2714, 0.22 ) }
    dend_11 { pt3dadd( 8.40275, -220.652, -24.282, 0.22 ) }
    dend_11 { pt3dadd( 8.04826, -222.045, -24.4822, 0.22 ) }
    dend_11 { pt3dadd( 7.97475, -222.358, -24.5234, 0.74 ) }
    dend_11 { pt3dadd( 7.91353, -222.633, -24.5579, 0.74 ) }
    dend_11 { pt3dadd( 7.61626, -224.022, -24.7106, 0.22 ) }
    dend_11 { pt3dadd( 7.37052, -225.222, -24.8035, 0.22 ) }
    dend_11 { pt3dadd( 7.07807, -226.792, -24.9306, 0.22 ) }
    dend_11 { pt3dadd( 6.99865, -227.301, -24.9759, 0.81 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 10/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -13.4161, -79.4489, -22.103, 0.66 ) }
    dend_10 { pt3dadd( -14.2137, -81.1162, -22.015, 0.66 ) }
    dend_10 { pt3dadd( -14.5276, -81.724, -21.956, 0.52 ) }
    dend_10 { pt3dadd( -14.8896, -82.3523, -21.8829, 0.88 ) }
    dend_10 { pt3dadd( -15.1243, -82.7493, -21.8207, 1.03 ) }
    dend_10 { pt3dadd( -15.4444, -83.2898, -21.7168, 0.96 ) }
    dend_10 { pt3dadd( -15.9378, -84.1268, -21.5363, 0.37 ) }
    dend_10 { pt3dadd( -16.4237, -84.9466, -21.2795, 0.29 ) }
    dend_10 { pt3dadd( -16.6513, -85.3704, -21.1407, 0.29 ) }
    dend_10 { pt3dadd( -17.0556, -86.2826, -20.8072, 0.29 ) }
    dend_10 { pt3dadd( -17.1599, -86.5802, -20.6965, 0.74 ) }
    dend_10 { pt3dadd( -17.1823, -86.6636, -20.6685, 0.74 ) }
    dend_10 { pt3dadd( -17.2479, -86.9953, -20.5826, 0.74 ) }
    dend_10 { pt3dadd( -17.3424, -87.635, -20.4442, 0.59 ) }
    dend_10 { pt3dadd( -17.4897, -88.6993, -20.2501, 0.29 ) }
    dend_10 { pt3dadd( -17.6559, -89.7941, -20.0966, 0.29 ) }
    dend_10 { pt3dadd( -17.8237, -90.8264, -19.9779, 0.29 ) }
    dend_10 { pt3dadd( -18.0211, -91.9922, -19.8604, 0.29 ) }
    dend_10 { pt3dadd( -18.1653, -92.9283, -19.8079, 1.33 ) }
    dend_10 { pt3dadd( -18.1765, -93.008, -19.8074, 1.33 ) }
    dend_10 { pt3dadd( -18.2717, -93.8226, -19.8444, 1.99 ) }
    dend_10 { pt3dadd( -18.3018, -94.3294, -19.8744, 2.21 ) }
    dend_10 { pt3dadd( -18.3148, -94.7681, -19.9065, 2.21 ) }
    dend_10 { pt3dadd( -18.3265, -96.2346, -20.0291, 0.29 ) }
    dend_10 { pt3dadd( -18.32, -97.4473, -20.1281, 0.29 ) }
    dend_10 { pt3dadd( -18.3088, -98.153, -20.1793, 0.29 ) }
    dend_10 { pt3dadd( -18.2904, -98.6471, -20.2097, 0.96 ) }
    dend_10 { pt3dadd( -18.275, -99.2356, -20.236, 1.47 ) }
    dend_10 { pt3dadd( -18.2694, -99.5951, -20.2435, 1.84 ) }
    dend_10 { pt3dadd( -18.2547, -100.318, -20.2215, 0.88 ) }
    dend_10 { pt3dadd( -18.2486, -100.386, -20.2212, 0.88 ) }
    dend_10 { pt3dadd( -18.1542, -101.1, -20.2495, 0.29 ) }
    dend_10 { pt3dadd( -18.0507, -101.799, -20.3031, 0.29 ) }
    dend_10 { pt3dadd( -18.0373, -101.877, -20.3108, 0.29 ) }
    dend_10 { pt3dadd( -17.8543, -102.856, -20.4249, 0.52 ) }
    dend_10 { pt3dadd( -17.6388, -103.96, -20.5667, 0.52 ) }
    dend_10 { pt3dadd( -17.4608, -104.895, -20.6814, 0.22 ) }
    dend_10 { pt3dadd( -17.3227, -105.671, -20.7729, 1.47 ) }
    dend_10 { pt3dadd( -17.2211, -106.319, -20.841, 2.06 ) }
    dend_10 { pt3dadd( -17.1862, -106.664, -20.8719, 2.36 ) }
    dend_10 { pt3dadd( -17.1707, -107.397, -20.9212, 1.69 ) }
    dend_10 { pt3dadd( -17.2405, -108.535, -20.9671, 0.74 ) }
    dend_10 { pt3dadd( -17.3696, -109.558, -20.9929, 0.44 ) }
    dend_10 { pt3dadd( -17.5585, -110.63, -21.0312, 0.44 ) }
    dend_10 { pt3dadd( -17.7008, -111.274, -21.0616, 0.44 ) }
    dend_10 { pt3dadd( -17.9981, -112.516, -21.1312, 0.29 ) }
    dend_10 { pt3dadd( -18.1429, -113.15, -21.1727, 0.59 ) }
    dend_10 { pt3dadd( -18.2834, -113.814, -21.2213, 0.59 ) }
    dend_10 { pt3dadd( -18.4032, -114.514, -21.2745, 0.29 ) }
    dend_10 { pt3dadd( -18.4118, -114.592, -21.2813, 0.29 ) }
    dend_10 { pt3dadd( -18.4863, -115.596, -21.3877, 0.29 ) }
    dend_10 { pt3dadd( -18.5246, -116.729, -21.532, 0.29 ) }
    dend_10 { pt3dadd( -18.5317, -116.866, -21.5515, 0.29 ) }
    dend_10 { pt3dadd( -18.6026, -117.362, -21.6326, 0.29 ) }
    dend_10 { pt3dadd( -18.6224, -117.426, -21.6473, 0.29 ) }
    dend_10 { pt3dadd( -18.8774, -118.026, -21.8896, 0.29 ) }
    dend_10 { pt3dadd( -18.9033, -118.083, -21.9182, 0.29 ) }
    dend_10 { pt3dadd( -19.1861, -118.723, -22.2805, 0.29 ) }
    dend_10 { pt3dadd( -19.5782, -119.693, -22.8444, 2.28 ) }
    dend_10 { pt3dadd( -20.0718, -120.914, -23.5642, 2.65 ) }
    dend_10 { pt3dadd( -20.7517, -122.643, -24.5777, 0.29 ) }
    dend_10 { pt3dadd( -21.0956, -123.528, -25.0825, 0.29 ) }
    dend_10 { pt3dadd( -21.3493, -124.138, -25.4265, 0.59 ) }
    dend_10 { pt3dadd( -21.4786, -124.434, -25.5948, 0.22 ) }
    dend_10 { pt3dadd( -21.8068, -125.079, -25.9728, 0.22 ) }
    dend_10 { pt3dadd( -22.0944, -125.521, -26.2685, 0.22 ) }
    dend_10 { pt3dadd( -22.6466, -126.232, -26.789, 1.03 ) }
    dend_10 { pt3dadd( -23.1647, -126.845, -27.2792, 1.92 ) }
    dend_10 { pt3dadd( -23.6002, -127.374, -27.7104, 2.06 ) }
    dend_10 { pt3dadd( -24.0088, -127.93, -28.1757, 1.92 ) }
    dend_10 { pt3dadd( -25.0799, -129.703, -29.6314, 0.29 ) }
    dend_10 { pt3dadd( -25.3858, -130.318, -30.1098, 0.52 ) }
    dend_10 { pt3dadd( -25.4046, -130.364, -30.1431, 0.52 ) }
    dend_10 { pt3dadd( -25.5679, -130.854, -30.4435, 0.52 ) }
    dend_10 { pt3dadd( -25.8148, -131.707, -30.8555, 0.37 ) }
    dend_10 { pt3dadd( -25.9824, -132.448, -31.098, 0.29 ) }
    dend_10 { pt3dadd( -26.1239, -133.292, -31.261, 0.29 ) }
    dend_10 { pt3dadd( -26.2442, -133.963, -31.3742, 0.88 ) }
    dend_10 { pt3dadd( -26.3195, -134.405, -31.4442, 0.88 ) }
    dend_10 { pt3dadd( -26.4734, -135.545, -31.6059, 0.22 ) }
    dend_10 { pt3dadd( -26.5575, -136.491, -31.7158, 1.55 ) }
    dend_10 { pt3dadd( -26.5722, -137.076, -31.7797, 1.84 ) }
    dend_10 { pt3dadd( -26.5509, -137.602, -31.8302, 1.62 ) }
    dend_10 { pt3dadd( -26.4368, -138.875, -31.9735, 0.22 ) }
    dend_10 { pt3dadd( -26.3319, -139.757, -32.079, 0.22 ) }
    dend_10 { pt3dadd( -26.2591, -140.315, -32.1432, 0.22 ) }
    dend_10 { pt3dadd( -26.2136, -140.887, -32.2042, 0.74 ) }
    dend_10 { pt3dadd( -26.2024, -141.391, -32.2506, 0.74 ) }
    dend_10 { pt3dadd( -26.2408, -142.501, -32.3403, 0.29 ) }
    dend_10 { pt3dadd( -26.3154, -143.143, -32.3767, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_10 { pt3dadd( -26.5033, -144.174, -32.4004, 0.29 ) }
    dend_10 { pt3dadd( -26.7135, -145.166, -32.3923, 1.77 ) }
    dend_10 { pt3dadd( -26.8474, -145.754, -32.3718, 2.21 ) }
    dend_10 { pt3dadd( -26.9832, -146.311, -32.3375, 2.21 ) }
    dend_10 { pt3dadd( -27.2384, -147.279, -32.2465, 0.74 ) }
    dend_10 { pt3dadd( -27.4961, -148.184, -32.1816, 0.22 ) }
    dend_10 { pt3dadd( -27.8297, -149.287, -32.1315, 0.22 ) }
    dend_10 { pt3dadd( -28.0053, -149.865, -32.1224, 0.88 ) }
    dend_10 { pt3dadd( -28.1634, -150.411, -32.1263, 1.03 ) }
    dend_10 { pt3dadd( -28.2021, -150.555, -32.1311, 1.03 ) }
    dend_10 { pt3dadd( -28.4574, -151.595, -32.2055, 0.22 ) }
    dend_10 { pt3dadd( -28.6244, -152.284, -32.2747, 0.22 ) }
    dend_10 { pt3dadd( -28.6582, -152.417, -32.2877, 0.22 ) }
    dend_10 { pt3dadd( -28.8501, -153.185, -32.3619, 0.22 ) }
    dend_10 { pt3dadd( -28.9866, -153.694, -32.4027, 0.22 ) }
    dend_10 { pt3dadd( -29.2313, -154.537, -32.4647, 1.33 ) }
    dend_10 { pt3dadd( -29.3837, -155.019, -32.4934, 1.77 ) }
    dend_10 { pt3dadd( -29.6267, -155.751, -32.52, 1.77 ) }
    dend_10 { pt3dadd( -29.8172, -156.333, -32.5309, 0.88 ) }
    dend_10 { pt3dadd( -30.2015, -157.499, -32.5392, 0.29 ) }
    dend_10 { pt3dadd( -30.3188, -157.94, -32.5362, 0.74 ) }
    dend_10 { pt3dadd( -30.4385, -158.418, -32.544, 0.74 ) }
    dend_10 { pt3dadd( -30.6975, -159.547, -32.588, 0.22 ) }
    dend_10 { pt3dadd( -30.8034, -160.046, -32.6146, 0.22 ) }
    dend_10 { pt3dadd( -30.822, -160.135, -32.621, 0.22 ) }
    dend_10 { pt3dadd( -31.0123, -161.039, -32.7154, 0.96 ) }
    dend_10 { pt3dadd( -31.317, -162.349, -32.8678, 1.18 ) }
    dend_10 { pt3dadd( -31.4154, -162.722, -32.9195, 1.47 ) }
    dend_10 { pt3dadd( -31.4415, -162.807, -32.9334, 1.47 ) }
    dend_10 { pt3dadd( -31.5888, -163.253, -32.9967, 1.47 ) }
    dend_10 { pt3dadd( -31.9834, -164.495, -33.1361, 0.22 ) }
    dend_10 { pt3dadd( -32.1053, -164.906, -33.1774, 0.22 ) }
    dend_10 { pt3dadd( -32.2294, -165.468, -33.2172, 0.74 ) }
    dend_10 { pt3dadd( -32.2975, -165.738, -33.2403, 0.96 ) }
    dend_10 { pt3dadd( -32.3379, -165.882, -33.2537, 0.96 ) }
    dend_10 { pt3dadd( -32.4429, -166.22, -33.292, 0.96 ) }
    dend_10 { pt3dadd( -32.7404, -167.166, -33.4192, 0.22 ) }
    dend_10 { pt3dadd( -32.9114, -167.74, -33.4981, 0.29 ) }
    dend_10 { pt3dadd( -33.0899, -168.429, -33.6453, 0.29 ) }
    dend_10 { pt3dadd( -33.2092, -168.903, -33.8018, 0.29 ) }
    dend_10 { pt3dadd( -33.4175, -169.749, -34.1387, 1.25 ) }
    dend_10 { pt3dadd( -33.54, -170.262, -34.37, 1.69 ) }
    dend_10 { pt3dadd( -33.6282, -170.657, -34.5725, 1.69 ) }
    dend_10 { pt3dadd( -33.8704, -171.817, -35.2464, 1.03 ) }
    dend_10 { pt3dadd( -34.1395, -173.011, -35.97, 0.22 ) }
    dend_10 { pt3dadd( -34.2585, -173.491, -36.2565, 0.22 ) }
    dend_10 { pt3dadd( -34.5808, -174.684, -36.9465, 1.99 ) }
    dend_10 { pt3dadd( -34.8036, -175.437, -37.3568, 2.5 ) }
    dend_10 { pt3dadd( -35.2844, -177.018, -38.1158, 0.29 ) }
    dend_10 { pt3dadd( -35.518, -177.742, -38.4045, 0.22 ) }
    dend_10 { pt3dadd( -35.7666, -178.509, -38.6525, 0.52 ) }
    dend_10 { pt3dadd( -35.8797, -178.841, -38.7435, 0.59 ) }
    dend_10 { pt3dadd( -36.2628, -179.948, -38.9635, 0.22 ) }
    dend_10 { pt3dadd( -36.5653, -180.867, -39.0707, 0.22 ) }
    dend_10 { pt3dadd( -36.7418, -181.427, -39.0971, 0.22 ) }
    dend_10 { pt3dadd( -37.091, -182.567, -39.1366, 1.33 ) }
    dend_10 { pt3dadd( -37.2705, -183.101, -39.1572, 1.69 ) }
    dend_10 { pt3dadd( -37.4672, -183.633, -39.1767, 1.47 ) }
    dend_10 { pt3dadd( -37.7756, -184.358, -39.2159, 0.52 ) }
    dend_10 { pt3dadd( -38.039, -184.92, -39.2623, 0.29 ) }
    dend_10 { pt3dadd( -38.7648, -186.33, -39.4076, 0.29 ) }
    dend_10 { pt3dadd( -39.2951, -187.248, -39.5326, 1.11 ) }
    dend_10 { pt3dadd( -39.6051, -187.767, -39.6191, 1.47 ) }
    dend_10 { pt3dadd( -40.4422, -189.105, -39.8713, 0.22 ) }
    dend_10 { pt3dadd( -40.7609, -189.621, -39.9771, 1.77 ) }
    dend_10 { pt3dadd( -41.1913, -190.332, -40.1341, 2.14 ) }
    dend_10 { pt3dadd( -41.4464, -190.769, -40.2373, 1.69 ) }
    dend_10 { pt3dadd( -42.0155, -191.865, -40.4801, 0.22 ) }
    dend_10 { pt3dadd( -42.0437, -191.93, -40.4934, 0.22 ) }
    dend_10 { pt3dadd( -42.2533, -192.502, -40.6048, 0.22 ) }
    dend_10 { pt3dadd( -42.4541, -193.108, -40.7421, 0.52 ) }
    dend_10 { pt3dadd( -42.5087, -193.292, -40.7883, 0.52 ) }
    dend_10 { pt3dadd( -42.7595, -194.213, -41.0256, 0.22 ) }
    dend_10 { pt3dadd( -42.9053, -194.779, -41.181, 0.22 ) }
    dend_10 { pt3dadd( -43.0858, -195.592, -41.4141, 1.99 ) }
    dend_10 { pt3dadd( -43.2286, -196.342, -41.6426, 2.5 ) }
    dend_10 { pt3dadd( -43.347, -197.384, -42.0119, 0.81 ) }
    dend_10 { pt3dadd( -43.4083, -198.068, -42.2707, 0.22 ) }
    dend_10 { pt3dadd( -43.4133, -198.123, -42.2914, 0.22 ) }
    dend_10 { pt3dadd( -43.4557, -198.492, -42.4279, 0.52 ) }
    dend_10 { pt3dadd( -43.4635, -198.547, -42.4472, 0.52 ) }
    dend_10 { pt3dadd( -43.73, -199.623, -42.8226, 0.22 ) }
    dend_10 { pt3dadd( -44.0564, -200.616, -43.1555, 0.22 ) }
    dend_10 { pt3dadd( -44.3756, -201.446, -43.4251, 0.22 ) }
    dend_10 { pt3dadd( -44.706, -202.174, -43.654, 1.33 ) }
    dend_10 { pt3dadd( -44.8684, -202.484, -43.7475, 1.33 ) }
    dend_10 { pt3dadd( -45.5551, -203.666, -44.0922, 0.22 ) }
    dend_10 { pt3dadd( -46.1046, -204.398, -44.2893, 0.22 ) }
    dend_10 { pt3dadd( -46.1457, -204.443, -44.3025, 0.22 ) }
    dend_10 { pt3dadd( -47.2318, -205.454, -44.6011, 2.28 ) }
    dend_10 { pt3dadd( -47.5691, -205.718, -44.6784, 2.73 ) }
    dend_10 { pt3dadd( -47.9046, -205.95, -44.7486, 2.73 ) }
    dend_10 { pt3dadd( -49.5572, -206.909, -45.0624, 0.22 ) }
    dend_10 { pt3dadd( -49.8861, -207.063, -45.1334, 0.74 ) }
    dend_10 { pt3dadd( -50.2238, -207.202, -45.2114, 0.96 ) }
    dend_10 { pt3dadd( -51.3277, -207.564, -45.5135, 0.22 ) }
    dend_10 { pt3dadd( -51.8346, -207.704, -45.678, 1.03 ) }
    dend_10 { pt3dadd( -52.1466, -207.794, -45.8469, 1.03 ) }
    dend_10 { pt3dadd( -53.3287, -208.178, -46.8035, 0.22 ) }
    dend_10 { pt3dadd( -53.376, -208.196, -46.8529, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_10 { pt3dadd( -54.0115, -208.448, -47.5964, 1.4 ) }
    dend_10 { pt3dadd( -54.18, -208.519, -47.813, 1.4 ) }
    dend_10 { pt3dadd( -55.8204, -209.261, -49.9724, 0.59 ) }
    dend_10 { pt3dadd( -56.1969, -209.446, -50.4716, 1.03 ) }
    dend_10 { pt3dadd( -57.3614, -210.081, -51.9363, 0.22 ) }
    dend_10 { pt3dadd( -57.9462, -210.402, -52.5843, 0.22 ) }
    dend_10 { pt3dadd( -57.9856, -210.425, -52.623, 0.22 ) }
    dend_10 { pt3dadd( -58.4832, -210.707, -53.0471, 1.11 ) }
    dend_10 { pt3dadd( -58.8632, -210.908, -53.3023, 1.25 ) }
    dend_10 { pt3dadd( -60.2251, -211.646, -54.1452, 0.22 ) }
    dend_10 { pt3dadd( -60.6749, -211.898, -54.4017, 0.66 ) }
    dend_10 { pt3dadd( -61.9097, -212.606, -55.1323, 0.22 ) }
    dend_10 { pt3dadd( -61.966, -212.638, -55.1647, 0.22 ) }
    dend_10 { pt3dadd( -62.3471, -212.851, -55.3776, 0.96 ) }
    dend_10 { pt3dadd( -62.7065, -213.036, -55.5616, 1.4 ) }
    dend_10 { pt3dadd( -63.2676, -213.304, -55.813, 0.96 ) }
    dend_10 { pt3dadd( -64.2829, -213.785, -56.2099, 0.22 ) }
    dend_10 { pt3dadd( -64.8527, -214.064, -56.3969, 1.62 ) }
    dend_10 { pt3dadd( -65.3177, -214.3, -56.5441, 1.99 ) }
    dend_10 { pt3dadd( -66.794, -215.098, -56.9717, 0.22 ) }
    dend_10 { pt3dadd( -67.2195, -215.353, -57.0891, 0.37 ) }
    dend_10 { pt3dadd( -67.4395, -215.496, -57.1401, 0.37 ) }
    dend_10 { pt3dadd( -68.0087, -215.882, -57.259, 0.22 ) }
    dend_10 { pt3dadd( -68.4727, -216.223, -57.3646, 0.22 ) }
    dend_10 { pt3dadd( -69.1409, -216.734, -57.5256, 0.52 ) }
    dend_10 { pt3dadd( -69.9105, -217.341, -57.7269, 0.22 ) }
    dend_10 { pt3dadd( -70.3384, -217.666, -57.8525, 0.96 ) }
    dend_10 { pt3dadd( -70.758, -217.971, -58.012, 0.96 ) }
    dend_10 { pt3dadd( -71.7888, -218.74, -58.4739, 0.22 ) }
    dend_10 { pt3dadd( -72.5498, -219.323, -58.931, 1.18 ) }
    dend_10 { pt3dadd( -72.8791, -219.588, -59.2126, 1.55 ) }
    dend_10 { pt3dadd( -72.9152, -219.618, -59.2494, 1.55 ) }
    dend_10 { pt3dadd( -73.9211, -220.495, -60.3988, 0.29 ) }
    dend_10 { pt3dadd( -74.3973, -220.912, -60.9787, 0.29 ) }
    dend_10 { pt3dadd( -75.3464, -221.709, -62.1693, 1.55 ) }
    dend_10 { pt3dadd( -76.7962, -222.876, -63.9972, 0.29 ) }
    dend_10 { pt3dadd( -76.8419, -222.911, -64.053, 0.29 ) }
    dend_10 { pt3dadd( -77.2513, -223.223, -64.5343, 1.18 ) }
    dend_10 { pt3dadd( -77.9783, -223.762, -65.3611, 0.22 ) }
    dend_10 { pt3dadd( -78.5744, -224.194, -66.0116, 1.25 ) }
    dend_10 { pt3dadd( -79.5111, -224.922, -66.9771, 0.22 ) }
    dend_10 { pt3dadd( -79.6599, -225.039, -67.1177, 0.74 ) }
    dend_10 { pt3dadd( -80.3027, -225.57, -67.7226, 0.22 ) }
    dend_10 { pt3dadd( -80.3386, -225.603, -67.7566, 0.22 ) }
    dend_10 { pt3dadd( -80.8696, -226.164, -68.2666, 1.11 ) }
    dend_10 { pt3dadd( -81.2426, -226.597, -68.6171, 1.47 ) }
    dend_10 { pt3dadd( -82.0574, -227.605, -69.3254, 0.22 ) }
    dend_10 { pt3dadd( -82.2744, -227.876, -69.5067, 0.59 ) }
    dend_10 { pt3dadd( -82.7777, -228.508, -69.8971, 1.18 ) }
    dend_10 { pt3dadd( -82.8179, -228.559, -69.928, 1.18 ) }
    dend_10 { pt3dadd( -83.3073, -229.196, -70.2883, 1.18 ) }
    dend_10 { pt3dadd( -84.2011, -230.354, -70.9128, 0.22 ) }
    dend_10 { pt3dadd( -84.6592, -230.991, -71.2296, 1.25 ) }
    dend_10 { pt3dadd( -84.8432, -231.242, -71.3526, 1.25 ) }
    dend_10 { pt3dadd( -85.5248, -232.095, -71.7934, 0.29 ) }
    dend_10 { pt3dadd( -85.9196, -232.561, -72.049, 0.96 ) }
    dend_10 { pt3dadd( -86.9115, -233.75, -72.6166, 0.29 ) }
    dend_10 { pt3dadd( -87.6047, -234.563, -72.947, 0.44 ) }
    dend_10 { pt3dadd( -88.3711, -235.426, -73.2456, 0.22 ) }
    dend_10 { pt3dadd( -89.1162, -236.213, -73.4755, 1.18 ) }
    dend_10 { pt3dadd( -89.6432, -236.704, -73.5618, 1.77 ) }
    dend_10 { pt3dadd( -90.9626, -237.78, -73.6129, 0.29 ) }
    dend_10 { pt3dadd( -91.5068, -238.16, -73.552, 0.29 ) }
    dend_10 { pt3dadd( -91.92, -238.393, -73.4521, 0.29 ) }
    dend_10 { pt3dadd( -92.3046, -238.562, -73.3322, 0.88 ) }
    dend_10 { pt3dadd( -93.5061, -239.02, -72.9333, 0.22 ) }
    dend_10 { pt3dadd( -94.2849, -239.252, -72.7175, 1.03 ) }
    dend_10 { pt3dadd( -94.7022, -239.347, -72.6303, 1.03 ) }
    dend_10 { pt3dadd( -95.5435, -239.504, -72.4512, 0.22 ) }
    dend_10 { pt3dadd( -97.7602, -239.807, -72.0031, 0.22 ) }
    dend_10 { pt3dadd( -97.8295, -239.813, -71.9902, 0.22 ) }
    dend_10 { pt3dadd( -99.2188, -239.796, -71.7746, 0.81 ) }
    dend_10 { pt3dadd( -99.4845, -239.772, -71.7432, 1.03 ) }
    dend_10 { pt3dadd( -100.262, -239.631, -71.6347, 0.22 ) }
    dend_10 { pt3dadd( -101.204, -239.375, -71.4966, 0.22 ) }
    dend_10 { pt3dadd( -101.269, -239.352, -71.4822, 0.22 ) }
    dend_10 { pt3dadd( -102.39, -238.961, -71.235, 1.33 ) }
    dend_10 { pt3dadd( -102.888, -238.804, -71.1398, 1.55 ) }
    dend_10 { pt3dadd( -104.586, -238.372, -70.9128, 0.22 ) }
    dend_10 { pt3dadd( -105.074, -238.275, -70.8713, 0.59 ) }
    dend_10 { pt3dadd( -105.837, -238.16, -70.8648, 0.59 ) }
    dend_10 { pt3dadd( -106.652, -238.071, -70.9156, 0.44 ) }
    dend_10 { pt3dadd( -107.941, -237.995, -71.0958, 0.22 ) }
    dend_10 { pt3dadd( -108.75, -237.954, -71.2486, 1.03 ) }
    dend_10 { pt3dadd( -109.043, -237.95, -71.3165, 1.03 ) }
    dend_10 { pt3dadd( -110.28, -237.919, -71.5776, 0.22 ) }
    dend_10 { pt3dadd( -110.813, -237.881, -71.6753, 0.22 ) }
    dend_10 { pt3dadd( -110.873, -237.874, -71.6809, 0.22 ) }
    dend_10 { pt3dadd( -111.985, -237.63, -71.7531, 0.22 ) }
    dend_10 { pt3dadd( -112.99, -237.357, -71.8018, 0.22 ) }
    dend_10 { pt3dadd( -113.047, -237.339, -71.8043, 0.22 ) }
    dend_10 { pt3dadd( -114.094, -236.988, -71.9099, 1.11 ) }
    dend_10 { pt3dadd( -114.487, -236.859, -72.0035, 1.55 ) }
    dend_10 { pt3dadd( -115.563, -236.526, -72.3645, 0.22 ) }
    dend_10 { pt3dadd( -116.357, -236.321, -72.727, 0.22 ) }
    dend_10 { pt3dadd( -116.756, -236.223, -72.9369, 0.66 ) }
    dend_10 { pt3dadd( -117.91, -235.986, -73.5886, 0.22 ) }
    dend_10 { pt3dadd( -118.932, -235.805, -74.1921, 1.25 ) }
    dend_10 { pt3dadd( -119.317, -235.749, -74.4466, 1.47 ) }
    dend_10 { pt3dadd( -120.56, -235.662, -75.2677, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_10 { pt3dadd( -120.619, -235.663, -75.3052, 0.22 ) }
    dend_10 { pt3dadd( -121.087, -235.708, -75.584, 1.03 ) }
    dend_10 { pt3dadd( -121.811, -235.836, -75.9656, 1.33 ) }
    dend_10 { pt3dadd( -123.67, -236.233, -76.9047, 0.22 ) }
    dend_10 { pt3dadd( -125.069, -236.571, -77.6152, 0.22 ) }
    dend_10 { pt3dadd( -126.137, -236.864, -78.1376, 0.22 ) }
    dend_10 { pt3dadd( -126.529, -236.983, -78.3269, 1.03 ) }
    dend_10 { pt3dadd( -127.024, -237.166, -78.5562, 1.25 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 8/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -22.4969, 731.089, -68.5641, 0.88 ) }
    dend_63 { pt3dadd( -22.8974, 732.28, -68.4432, 0.88 ) }
    dend_63 { pt3dadd( -23.5114, 734.109, -68.2864, 0.15 ) }
    dend_63 { pt3dadd( -23.8605, 735.292, -68.2849, 0.15 ) }
    dend_63 { pt3dadd( -23.8971, 735.413, -68.2889, 0.15 ) }
    dend_63 { pt3dadd( -24.0881, 736.048, -68.3098, 1.03 ) }
    dend_63 { pt3dadd( -24.1741, 736.334, -68.3192, 1.4 ) }
    dend_63 { pt3dadd( -24.252, 736.601, -68.3496, 1.4 ) }
    dend_63 { pt3dadd( -24.9405, 738.959, -68.6498, 0.22 ) }
    dend_63 { pt3dadd( -25.4183, 740.717, -68.8835, 0.22 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 18/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -22.4969, 731.089, -68.5641, 0.22 ) }
    dend_62 { pt3dadd( -21.5643, 733.061, -68.0556, 0.22 ) }
    dend_62 { pt3dadd( -21.1434, 733.965, -67.7824, 0.81 ) }
    dend_62 { pt3dadd( -21.0121, 734.249, -67.6896, 1.03 ) }
    dend_62 { pt3dadd( -20.8005, 734.734, -67.5287, 0.81 ) }
    dend_62 { pt3dadd( -19.8917, 736.889, -66.8117, 0.22 ) }
    dend_62 { pt3dadd( -19.7575, 737.228, -66.7105, 0.44 ) }
    dend_62 { pt3dadd( -19.5164, 737.985, -66.4931, 0.15 ) }
    dend_62 { pt3dadd( -19.5007, 738.04, -66.4798, 0.15 ) }
    dend_62 { pt3dadd( -19.303, 738.871, -66.3023, 1.03 ) }
    dend_62 { pt3dadd( -19.2837, 738.973, -66.2839, 1.03 ) }
    dend_62 { pt3dadd( -19.0367, 740.429, -66.1125, 0.15 ) }
    dend_62 { pt3dadd( -18.9786, 740.78, -66.0746, 0.29 ) }
    dend_62 { pt3dadd( -18.7095, 742.405, -65.9141, 0.15 ) }
    dend_62 { pt3dadd( -18.6097, 742.974, -65.8532, 0.66 ) }
    dend_62 { pt3dadd( -18.5957, 743.05, -65.8416, 0.66 ) }
    dend_62 { pt3dadd( -18.3544, 744.419, -65.5782, 0.15 ) }
    dend_62 { pt3dadd( -18.1842, 745.377, -65.3426, 0.66 ) }
    dend_62 { pt3dadd( -18.0305, 746.205, -65.1291, 0.22 ) }
    dend_62 { pt3dadd( -18.0138, 746.281, -65.1084, 0.22 ) }
    dend_62 { pt3dadd( -17.8214, 747.112, -64.8621, 0.74 ) }
    dend_62 { pt3dadd( -17.7789, 747.316, -64.7951, 0.74 ) }
    dend_62 { pt3dadd( -17.7617, 747.494, -64.7144, 0.74 ) }
    // Section: dend_52, id: dend_52, parent: dend_30 (entry count 41/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 4.90365, 684.233, -29.5283, 0.37 ) }
    dend_52 { pt3dadd( 3.36602, 685.149, -29.5569, 0.37 ) }
    dend_52 { pt3dadd( 2.69999, 685.552, -29.5747, 0.37 ) }
    dend_52 { pt3dadd( 2.63304, 685.596, -29.5699, 0.37 ) }
    dend_52 { pt3dadd( 2.07386, 685.973, -29.4979, 0.37 ) }
    dend_52 { pt3dadd( 1.36299, 686.479, -29.3638, 0.88 ) }
    dend_52 { pt3dadd( 0.967727, 686.772, -29.2719, 0.88 ) }
    dend_52 { pt3dadd( 0.908163, 686.822, -29.248, 0.88 ) }
    dend_52 { pt3dadd( 0.0755657, 687.622, -28.7974, 0.88 ) }
    dend_52 { pt3dadd( 0.0392481, 687.662, -28.7734, 0.88 ) }
    dend_52 { pt3dadd( -0.239397, 688.037, -28.5418, 1.03 ) }
    dend_52 { pt3dadd( -0.292983, 688.11, -28.4998, 1.03 ) }
    dend_52 { pt3dadd( -0.569514, 688.44, -28.3191, 1.03 ) }
    dend_52 { pt3dadd( -0.653681, 688.533, -28.2714, 1.03 ) }
    dend_52 { pt3dadd( -1.16279, 689.05, -28.0295, 0.74 ) }
    dend_52 { pt3dadd( -1.83988, 689.7, -27.7229, 0.29 ) }
    dend_52 { pt3dadd( -2.52218, 690.33, -27.4059, 0.29 ) }
    dend_52 { pt3dadd( -3.21685, 690.992, -27.06, 0.29 ) }
    dend_52 { pt3dadd( -3.29972, 691.078, -27.0123, 0.29 ) }
    dend_52 { pt3dadd( -3.7004, 691.54, -26.74, 0.22 ) }
    dend_52 { pt3dadd( -3.7476, 691.605, -26.6972, 0.22 ) }
    dend_52 { pt3dadd( -4.03445, 692.139, -26.3086, 0.52 ) }
    dend_52 { pt3dadd( -4.15559, 692.787, -25.8061, 1.18 ) }
    dend_52 { pt3dadd( -4.16627, 693.318, -25.4026, 1.18 ) }
    dend_52 { pt3dadd( -4.16299, 693.374, -25.3615, 1.18 ) }
    dend_52 { pt3dadd( -4.10184, 693.662, -25.1441, 1.18 ) }
    dend_52 { pt3dadd( -4.08782, 693.708, -25.1093, 1.18 ) }
    dend_52 { pt3dadd( -3.69068, 694.415, -24.5582, 1.33 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 69/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 4.90365, 684.233, -29.5283, 0.52 ) }
    dend_31 { pt3dadd( 5.74218, 685.462, -29.3911, 0.52 ) }
    dend_31 { pt3dadd( 6.47906, 686.56, -29.2379, 0.37 ) }
    dend_31 { pt3dadd( 6.51714, 686.618, -29.2293, 0.37 ) }
    dend_31 { pt3dadd( 7.01431, 687.39, -29.1028, 0.37 ) }
    dend_31 { pt3dadd( 7.36737, 687.944, -29.0075, 0.74 ) }
    dend_31 { pt3dadd( 7.89466, 688.805, -28.8541, 0.44 ) }
    dend_31 { pt3dadd( 8.50132, 689.969, -28.6241, 0.37 ) }
    dend_31 { pt3dadd( 8.52774, 690.021, -28.6129, 0.37 ) }
    dend_31 { pt3dadd( 8.72203, 690.406, -28.5273, 0.37 ) }
    dend_31 { pt3dadd( 8.75302, 690.469, -28.5126, 0.37 ) }
    dend_31 { pt3dadd( 9.22567, 691.507, -28.285, 0.88 ) }
    dend_31 { pt3dadd( 9.51021, 692.263, -28.1835, 1.11 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 82/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -25.4183, 740.717, -68.8835, 0.22 ) }
    dend_65 { pt3dadd( -26.4804, 739.689, -70.0672, 0.22 ) }
    dend_65 { pt3dadd( -26.7623, 739.411, -70.4045, 1.25 ) }
    dend_65 { pt3dadd( -27.7892, 738.386, -71.6788, 0.22 ) }
    dend_65 { pt3dadd( -28.1556, 738.028, -72.1345, 0.96 ) }
    dend_65 { pt3dadd( -29.2128, 737.027, -73.4252, 0.22 ) }
    dend_65 { pt3dadd( -29.2563, 736.985, -73.4807, 0.22 ) }
    dend_65 { pt3dadd( -29.9718, 736.263, -74.475, 0.22 ) }
    dend_65 { pt3dadd( -29.9994, 736.233, -74.5179, 0.22 ) }
    dend_65 { pt3dadd( -30.2546, 735.913, -74.9747, 0.74 ) }
    dend_65 { pt3dadd( -30.3665, 735.767, -75.189, 0.88 ) }
    dend_65 { pt3dadd( -31.1447, 734.821, -76.4954, 0.22 ) }
    dend_65 { pt3dadd( -31.1733, 734.789, -76.5368, 0.22 ) }
    dend_65 { pt3dadd( -31.7629, 734.086, -77.4035, 0.22 ) }
    dend_65 { pt3dadd( -32.1235, 733.633, -77.9496, 0.22 ) }
    dend_65 { pt3dadd( -32.1483, 733.598, -77.9906, 0.22 ) }
    dend_65 { pt3dadd( -32.612, 732.9, -78.7759, 1.11 ) }
    dend_65 { pt3dadd( -33.1076, 732.397, -79.1825, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 0/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -25.4183, 740.717, -68.8835, 0.96 ) }
    dend_64 { pt3dadd( -25.617, 741.322, -69.0079, 0.96 ) }
    dend_64 { pt3dadd( -25.6384, 741.387, -69.0192, 0.96 ) }
    dend_64 { pt3dadd( -25.7476, 741.723, -69.0723, 1.18 ) }
    dend_64 { pt3dadd( -25.9613, 742.39, -69.1729, 0.88 ) }
    dend_64 { pt3dadd( -26.8764, 745.297, -69.6004, 0.15 ) }
    dend_64 { pt3dadd( -26.8973, 745.365, -69.61, 0.15 ) }
    dend_64 { pt3dadd( -27.3907, 747.003, -69.8517, 0.15 ) }
    dend_64 { pt3dadd( -27.7025, 748.093, -70.043, 0.96 ) }
    dend_64 { pt3dadd( -27.8287, 748.569, -70.1378, 1.33 ) }
    dend_64 { pt3dadd( -27.8461, 748.644, -70.1543, 1.33 ) }
    dend_64 { pt3dadd( -27.8807, 748.854, -70.2048, 1.33 ) }
    dend_64 { pt3dadd( -27.898, 748.975, -70.2373, 1.33 ) }
    dend_64 { pt3dadd( -28.1005, 750.78, -70.7502, 0.15 ) }
    dend_64 { pt3dadd( -28.1443, 751.204, -70.8617, 0.44 ) }
    dend_64 { pt3dadd( -28.1879, 751.618, -70.9658, 0.44 ) }
    dend_64 { pt3dadd( -28.3674, 753.105, -71.305, 0.22 ) }
    dend_64 { pt3dadd( -28.3885, 753.25, -71.3344, 0.22 ) }
    dend_64 { pt3dadd( -28.6101, 754.356, -71.514, 0.81 ) }
    dend_64 { pt3dadd( -28.8576, 755.34, -71.633, 0.22 ) }
    dend_64 { pt3dadd( -28.8932, 755.462, -71.6474, 0.22 ) }
    dend_64 { pt3dadd( -29.1504, 756.217, -71.7331, 1.18 ) }
    dend_64 { pt3dadd( -29.2959, 756.598, -71.7712, 1.33 ) }
    dend_64 { pt3dadd( -30.1689, 758.514, -72.0101, 0.22 ) }
    dend_64 { pt3dadd( -30.235, 758.635, -72.0271, 0.22 ) }
    dend_64 { pt3dadd( -30.5198, 759.107, -72.0958, 0.22 ) }
    dend_64 { pt3dadd( -30.9334, 759.72, -72.1867, 1.03 ) }
    dend_64 { pt3dadd( -31.2774, 760.182, -72.2611, 1.33 ) }
    dend_64 { pt3dadd( -32.2986, 761.45, -72.4963, 0.15 ) }
    dend_64 { pt3dadd( -32.8729, 762.055, -72.628, 0.15 ) }
    dend_64 { pt3dadd( -32.9211, 762.104, -72.6392, 0.15 ) }
    dend_64 { pt3dadd( -33.7024, 762.857, -72.8259, 0.15 ) }
    dend_64 { pt3dadd( -33.7539, 762.903, -72.8381, 0.15 ) }
    dend_64 { pt3dadd( -34.5108, 763.515, -73.0084, 1.03 ) }
    dend_64 { pt3dadd( -34.9713, 763.873, -73.089, 1.4 ) }
    // Section: dend_60, id: dend_60, parent: dend_52 (entry count 35/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -3.69068, 694.415, -24.5582, 0.52 ) }
    dend_60 { pt3dadd( -3.83018, 696.171, -25.5867, 0.52 ) }
    dend_60 { pt3dadd( -3.86065, 696.555, -25.7754, 0.52 ) }
    dend_60 { pt3dadd( -3.864, 696.619, -25.806, 0.52 ) }
    dend_60 { pt3dadd( -3.89389, 697.522, -26.2274, 0.37 ) }
    dend_60 { pt3dadd( -3.89382, 697.587, -26.2574, 0.37 ) }
    dend_60 { pt3dadd( -3.83803, 698.517, -26.6997, 0.37 ) }
    dend_60 { pt3dadd( -3.72927, 699.31, -27.0103, 1.03 ) }
    dend_60 { pt3dadd( -3.61235, 699.969, -27.2726, 0.88 ) }
    dend_60 { pt3dadd( -3.59767, 700.042, -27.3026, 0.88 ) }
    dend_60 { pt3dadd( -3.44036, 700.787, -27.6041, 0.59 ) }
    dend_60 { pt3dadd( -3.14195, 702.481, -28.3618, 0.22 ) }
    dend_60 { pt3dadd( -2.98499, 703.582, -28.8658, 0.22 ) }
    dend_60 { pt3dadd( -2.97741, 703.643, -28.897, 0.22 ) }
    dend_60 { pt3dadd( -2.89439, 704.534, -29.3652, 0.88 ) }
    dend_60 { pt3dadd( -2.84726, 705.108, -29.6626, 1.11 ) }
    dend_60 { pt3dadd( -2.71177, 706.932, -30.5613, 0.29 ) }
    dend_60 { pt3dadd( -2.66113, 707.526, -30.8411, 0.22 ) }
    dend_60 { pt3dadd( -2.51342, 708.519, -31.3495, 0.22 ) }
    dend_60 { pt3dadd( -2.5006, 708.581, -31.3818, 0.22 ) }
    dend_60 { pt3dadd( -2.15586, 709.945, -32.0389, 0.22 ) }
    dend_60 { pt3dadd( -1.89778, 710.855, -32.4396, 1.33 ) }
    dend_60 { pt3dadd( -1.75836, 711.284, -32.6095, 1.33 ) }
    dend_60 { pt3dadd( -1.15227, 713.149, -33.3698, 0.22 ) }
    dend_60 { pt3dadd( -1.13231, 713.212, -33.3955, 0.22 ) }
    dend_60 { pt3dadd( -0.78612, 714.36, -33.8834, 0.22 ) }
    dend_60 { pt3dadd( -0.562542, 715.15, -34.2564, 0.81 ) }
    dend_60 { pt3dadd( -0.11854, 716.807, -35.0297, 0.22 ) }
    dend_60 { pt3dadd( 0.0939008, 717.598, -35.3713, 0.81 ) }
    dend_60 { pt3dadd( 0.11361, 717.663, -35.3948, 0.81 ) }
    dend_60 { pt3dadd( 0.210648, 717.954, -35.5058, 0.81 ) }
    dend_60 { pt3dadd( 0.67916, 719.156, -36.0022, 0.22 ) }
    dend_60 { pt3dadd( 1.0508, 720.013, -36.348, 1.4 ) }
    dend_60 { pt3dadd( 1.29728, 720.552, -36.5317, 1.77 ) }
    dend_60 { pt3dadd( 1.696, 721.326, -36.7827, 1.18 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 70/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -3.69068, 694.415, -24.5582, 0.52 ) }
    dend_53 { pt3dadd( -4.28953, 695.458, -24.1779, 0.52 ) }
    dend_53 { pt3dadd( -4.34801, 695.567, -24.1467, 0.52 ) }
    dend_53 { pt3dadd( -4.60766, 696.077, -24.0328, 0.81 ) }
    dend_53 { pt3dadd( -4.64281, 696.148, -24.02, 0.81 ) }
    dend_53 { pt3dadd( -4.79673, 696.483, -23.9703, 0.59 ) }
    dend_53 { pt3dadd( -5.43631, 697.948, -23.7505, 0.29 ) }
    dend_53 { pt3dadd( -5.49137, 698.085, -23.7361, 0.29 ) }
    dend_53 { pt3dadd( -5.75606, 698.76, -23.6306, 1.03 ) }
    dend_53 { pt3dadd( -6.00751, 699.432, -23.4812, 0.96 ) }
    dend_53 { pt3dadd( -6.26744, 700.137, -23.2803, 0.59 ) }
    dend_53 { pt3dadd( -6.5113, 700.838, -23.0178, 0.59 ) }
    dend_53 { pt3dadd( -6.54738, 700.947, -22.962, 0.59 ) }
    dend_53 { pt3dadd( -6.74611, 701.671, -22.5428, 0.59 ) }
    dend_53 { pt3dadd( -6.82968, 702.322, -22.1217, 0.29 ) }
    dend_53 { pt3dadd( -6.8302, 702.371, -22.0882, 0.29 ) }
    dend_53 { pt3dadd( -6.80527, 702.821, -21.7868, 0.29 ) }
    dend_53 { pt3dadd( -6.79688, 702.922, -21.7259, 0.29 ) }
    dend_53 { pt3dadd( -6.76839, 703.599, -21.3658, 0.59 ) }
    dend_53 { pt3dadd( -6.77945, 704.753, -20.8673, 0.22 ) }
    dend_53 { pt3dadd( -6.78474, 704.816, -20.8425, 0.22 ) }
    dend_53 { pt3dadd( -6.95987, 705.524, -20.5991, 0.22 ) }
    dend_53 { pt3dadd( -7.04377, 705.736, -20.536, 0.22 ) }
    dend_53 { pt3dadd( -7.39653, 706.229, -20.4163, 0.22 ) }
    dend_53 { pt3dadd( -7.91036, 706.486, -20.4001, 0.66 ) }
    dend_53 { pt3dadd( -8.05441, 706.516, -20.4149, 0.66 ) }
    dend_53 { pt3dadd( -8.87324, 706.614, -20.5445, 0.88 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 97/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 9.51021, 692.263, -28.1835, 0.29 ) }
    dend_33 { pt3dadd( 10.0259, 693.346, -27.9088, 0.29 ) }
    dend_33 { pt3dadd( 10.0839, 693.481, -27.8821, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_33 { pt3dadd( 10.4061, 694.273, -27.7531, 0.88 ) }
    dend_33 { pt3dadd( 10.6737, 694.963, -27.6556, 1.25 ) }
    dend_33 { pt3dadd( 10.8848, 695.525, -27.5826, 1.25 ) }
    dend_33 { pt3dadd( 11.2054, 696.372, -27.4816, 0.44 ) }
    dend_33 { pt3dadd( 11.5478, 697.326, -27.3984, 0.29 ) }
    dend_33 { pt3dadd( 11.778, 697.966, -27.3537, 0.88 ) }
    dend_33 { pt3dadd( 11.9293, 698.393, -27.3384, 1.25 ) }
    dend_33 { pt3dadd( 11.9526, 698.458, -27.3388, 1.25 ) }
    dend_33 { pt3dadd( 12.1418, 698.981, -27.3496, 0.96 ) }
    dend_33 { pt3dadd( 12.1958, 699.125, -27.3516, 0.96 ) }
    dend_33 { pt3dadd( 12.4227, 699.714, -27.3615, 0.74 ) }
    dend_33 { pt3dadd( 12.8715, 700.872, -27.3837, 0.29 ) }
    dend_33 { pt3dadd( 13.1991, 701.711, -27.4012, 0.52 ) }
    dend_33 { pt3dadd( 13.2749, 701.911, -27.4057, 0.52 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 14/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 9.51021, 692.263, -28.1835, 0.22 ) }
    dend_32 { pt3dadd( 8.60717, 693.111, -28.0607, 0.22 ) }
    dend_32 { pt3dadd( 8.55467, 693.157, -28.0558, 0.22 ) }
    dend_32 { pt3dadd( 7.95487, 693.666, -28.0133, 0.22 ) }
    dend_32 { pt3dadd( 7.90722, 693.706, -28.01, 0.22 ) }
    dend_32 { pt3dadd( 7.00991, 694.467, -27.9464, 0.22 ) }
    dend_32 { pt3dadd( 6.95663, 694.513, -27.9426, 0.22 ) }
    dend_32 { pt3dadd( 6.1722, 695.265, -27.9426, 0.22 ) }
    dend_32 { pt3dadd( 5.82884, 695.576, -27.9426, 0.22 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 23/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -8.87324, 706.614, -20.5445, 0.22 ) }
    dend_55 { pt3dadd( -8.63866, 707.786, -20.6958, 0.22 ) }
    dend_55 { pt3dadd( -8.63314, 707.931, -20.6224, 0.22 ) }
    dend_55 { pt3dadd( -8.72391, 708.567, -20.1563, 0.22 ) }
    dend_55 { pt3dadd( -8.84724, 708.903, -19.8156, 0.37 ) }
    dend_55 { pt3dadd( -9.12427, 709.486, -19.1303, 0.37 ) }
    dend_55 { pt3dadd( -9.15123, 709.533, -19.0537, 0.37 ) }
    dend_55 { pt3dadd( -9.69235, 710.422, -17.2552, 1.18 ) }
    dend_55 { pt3dadd( -9.90055, 710.665, -16.6381, 1.18 ) }
    dend_55 { pt3dadd( -10.2755, 710.987, -15.6028, 0.96 ) }
    dend_55 { pt3dadd( -10.3742, 711.045, -15.3692, 0.96 ) }
    dend_55 { pt3dadd( -11.4217, 711.499, -13.1871, 0.52 ) }
    dend_55 { pt3dadd( -11.4762, 711.519, -13.0822, 0.52 ) }
    dend_55 { pt3dadd( -11.83, 711.652, -12.441, 0.52 ) }
    dend_55 { pt3dadd( -11.9115, 711.683, -12.2838, 0.52 ) }
    dend_55 { pt3dadd( -12.4002, 711.858, -11.394, 0.74 ) }
    dend_55 { pt3dadd( -12.8022, 711.994, -10.7595, 0.88 ) }
    dend_55 { pt3dadd( -12.8519, 712.007, -10.7081, 0.88 ) }
    dend_55 { pt3dadd( -13.6196, 712.267, -9.88789, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 42/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -8.87324, 706.614, -20.5445, 0.22 ) }
    dend_54 { pt3dadd( -9.72574, 706.023, -20.7222, 0.22 ) }
    dend_54 { pt3dadd( -9.80691, 705.967, -20.7391, 0.22 ) }
    dend_54 { pt3dadd( -10.83, 705.258, -20.9522, 0.22 ) }
    dend_54 { pt3dadd( -10.8948, 705.213, -20.9657, 0.22 ) }
    dend_54 { pt3dadd( -11.5426, 704.765, -21.1007, 0.66 ) }
    dend_54 { pt3dadd( -11.857, 704.547, -21.1662, 0.66 ) }
    // Section: dend_51, id: dend_51, parent: dend_33 (entry count 49/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 13.2749, 701.911, -27.4057, 0.15 ) }
    dend_51 { pt3dadd( 14.5223, 701.772, -27.4374, 0.15 ) }
    dend_51 { pt3dadd( 15.2665, 701.518, -27.5007, 0.44 ) }
    dend_51 { pt3dadd( 15.3303, 701.49, -27.5094, 0.44 ) }
    dend_51 { pt3dadd( 15.9841, 701.151, -27.6483, 0.15 ) }
    dend_51 { pt3dadd( 16.4853, 700.888, -27.7671, 0.96 ) }
    dend_51 { pt3dadd( 17.0335, 700.609, -27.8954, 0.96 ) }
    dend_51 { pt3dadd( 18.0805, 700.011, -28.1761, 0.22 ) }
    dend_51 { pt3dadd( 18.2399, 699.921, -28.2217, 0.22 ) }
    dend_51 { pt3dadd( 19.0922, 699.469, -28.4705, 0.52 ) }
    dend_51 { pt3dadd( 19.6897, 699.17, -28.6468, 0.52 ) }
    dend_51 { pt3dadd( 20.4258, 698.859, -28.8582, 0.59 ) }
    dend_51 { pt3dadd( 20.6225, 698.797, -28.9208, 0.59 ) }
    dend_51 { pt3dadd( 21.53, 698.622, -29.2076, 0.15 ) }
    dend_51 { pt3dadd( 21.5966, 698.612, -29.2287, 0.15 ) }
    dend_51 { pt3dadd( 21.9564, 698.552, -29.4166, 0.15 ) }
    dend_51 { pt3dadd( 22.095, 698.526, -29.5131, 0.15 ) }
    dend_51 { pt3dadd( 22.9195, 698.392, -30.1768, 0.88 ) }
    dend_51 { pt3dadd( 23.2896, 698.336, -30.4935, 1.18 ) }
    dend_51 { pt3dadd( 23.7427, 698.292, -30.9237, 1.18 ) }
    dend_51 { pt3dadd( 25.2214, 698.195, -32.3861, 0.22 ) }
    dend_51 { pt3dadd( 25.2789, 698.191, -32.4424, 0.22 ) }
    dend_51 { pt3dadd( 25.5792, 698.16, -32.7206, 0.37 ) }
    dend_51 { pt3dadd( 25.641, 698.154, -32.7747, 0.37 ) }
    dend_51 { pt3dadd( 26.5444, 698.089, -33.5705, 0.22 ) }
    dend_51 { pt3dadd( 26.5918, 698.084, -33.6082, 0.22 ) }
    dend_51 { pt3dadd( 27.2577, 698.052, -34.0204, 0.22 ) }
    dend_51 { pt3dadd( 27.6102, 698.027, -34.2394, 0.74 ) }
    dend_51 { pt3dadd( 27.9866, 697.984, -34.4721, 1.03 ) }
    dend_51 { pt3dadd( 28.0658, 697.974, -34.5192, 1.03 ) }
    dend_51 { pt3dadd( 29.5907, 697.74, -35.3356, 0.37 ) }
    dend_51 { pt3dadd( 30.4349, 697.629, -35.8209, 1.62 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 81/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 13.2749, 701.911, -27.4057, 0.29 ) }
    dend_34 { pt3dadd( 13.6432, 703.139, -27.4483, 0.29 ) }
    dend_34 { pt3dadd( 13.9058, 703.896, -27.475, 0.29 ) }
    dend_34 { pt3dadd( 13.9304, 703.96, -27.4772, 0.29 ) }
    dend_34 { pt3dadd( 14.2589, 704.812, -27.5063, 0.15 ) }
    dend_34 { pt3dadd( 14.6025, 705.705, -27.5367, 1.18 ) }
    dend_34 { pt3dadd( 14.7969, 706.209, -27.5539, 1.77 ) }
    dend_34 { pt3dadd( 15.1161, 706.907, -27.5838, 1.18 ) }
    dend_34 { pt3dadd( 15.3544, 707.377, -27.6062, 1.18 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 90/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -13.6196, 712.267, -9.88789, 0.59 ) }
    dend_57 { pt3dadd( -13.6717, 713.056, -9.66712, 0.59 ) }
    dend_57 { pt3dadd( -13.677, 713.123, -9.65278, 0.59 ) }
    dend_57 { pt3dadd( -13.7139, 713.613, -9.57666, 0.59 ) }
    dend_57 { pt3dadd( -13.7157, 713.692, -9.56804, 0.59 ) }
    dend_57 { pt3dadd( -13.6944, 714.01, -9.55414, 0.59 ) }
    dend_57 { pt3dadd( -13.656, 714.199, -9.46559, 0.59 ) }
    dend_57 { pt3dadd( -13.59, 714.376, -9.19561, 0.29 ) }
    dend_57 { pt3dadd( -13.5207, 714.598, -8.82521, 0.22 ) }
    dend_57 { pt3dadd( -13.465, 714.892, -8.32326, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_57 { pt3dadd( -13.4487, 715.174, -7.84525, 0.74 ) }
    dend_57 { pt3dadd( -13.4841, 716.494, -5.57392, 0.74 ) }
    dend_57 { pt3dadd( -13.6371, 717.917, -3.13107, 0.88 ) }
    dend_57 { pt3dadd( -13.7363, 718.44, -2.22123, 0.22 ) }
    dend_57 { pt3dadd( -13.8601, 718.942, -1.3676, 0.22 ) }
    dend_57 { pt3dadd( -13.9823, 719.329, -0.778159, 0.22 ) }
    dend_57 { pt3dadd( -14.0016, 719.379, -0.716541, 0.22 ) }
    dend_57 { pt3dadd( -14.1572, 719.721, -0.521683, 0.22 ) }
    dend_57 { pt3dadd( -14.1871, 719.792, -0.503857, 0.22 ) }
    dend_57 { pt3dadd( -14.3953, 720.485, -0.287763, 0.22 ) }
    dend_57 { pt3dadd( -14.6195, 721.445, 0.0395053, 0.81 ) }
    dend_57 { pt3dadd( -14.6358, 721.499, 0.057693, 0.81 ) }
    dend_57 { pt3dadd( -14.8983, 722.108, 0.240303, 0.96 ) }
    dend_57 { pt3dadd( -14.9443, 722.201, 0.264456, 0.96 ) }
    dend_57 { pt3dadd( -15.1792, 722.651, 0.360588, 0.96 ) }
    dend_57 { pt3dadd( -15.54, 723.328, 0.47114, 0.44 ) }
    dend_57 { pt3dadd( -15.8031, 723.885, 0.53433, 0.44 ) }
    dend_57 { pt3dadd( -16.1757, 724.769, 0.621338, 0.22 ) }
    dend_57 { pt3dadd( -16.502, 725.658, 0.705996, 0.37 ) }
    dend_57 { pt3dadd( -16.7928, 726.534, 0.801489, 0.37 ) }
    dend_57 { pt3dadd( -17.0143, 727.29, 0.911057, 0.37 ) }
    dend_57 { pt3dadd( -17.2485, 728.187, 1.10133, 0.22 ) }
    dend_57 { pt3dadd( -17.2635, 728.252, 1.11969, 0.22 ) }
    dend_57 { pt3dadd( -17.389, 728.685, 1.34219, 0.22 ) }
    dend_57 { pt3dadd( -17.4249, 728.772, 1.42958, 0.22 ) }
    dend_57 { pt3dadd( -17.7272, 729.334, 2.3594, 0.15 ) }
    dend_57 { pt3dadd( -17.8709, 729.637, 2.92228, 0.44 ) }
    dend_57 { pt3dadd( -17.8829, 729.666, 2.9731, 0.44 ) }
    dend_57 { pt3dadd( -18.1953, 730.566, 4.26707, 0.88 ) }
    dend_57 { pt3dadd( -18.4013, 731.282, 5.09952, 0.88 ) }
    dend_57 { pt3dadd( -18.4417, 731.506, 5.31267, 0.88 ) }
    dend_57 { pt3dadd( -18.5384, 732.59, 6.15829, 0.37 ) }
    dend_57 { pt3dadd( -18.5431, 733.246, 6.54738, 0.22 ) }
    dend_57 { pt3dadd( -18.5135, 733.978, 6.89868, 0.22 ) }
    dend_57 { pt3dadd( -18.451, 734.386, 7.04352, 0.59 ) }
    dend_57 { pt3dadd( -18.2183, 735.484, 7.41138, 0.44 ) }
    dend_57 { pt3dadd( -18.1907, 735.564, 7.44468, 0.44 ) }
    dend_57 { pt3dadd( -17.7629, 736.277, 7.89511, 0.29 ) }
    dend_57 { pt3dadd( -17.6971, 736.336, 7.94387, 0.29 ) }
    dend_57 { pt3dadd( -16.832, 736.711, 8.32907, 0.29 ) }
    dend_57 { pt3dadd( -16.7781, 736.726, 8.35051, 0.29 ) }
    dend_57 { pt3dadd( -15.9492, 737.007, 8.71412, 0.81 ) }
    dend_57 { pt3dadd( -15.8614, 737.05, 8.75909, 0.81 ) }
    dend_57 { pt3dadd( -15.3624, 737.426, 9.07934, 0.81 ) }
    dend_57 { pt3dadd( -14.6604, 738.201, 9.62034, 0.29 ) }
    dend_57 { pt3dadd( -13.9864, 739.206, 10.2371, 0.29 ) }
    dend_57 { pt3dadd( -13.2125, 740.625, 10.9729, 0.52 ) }
    dend_57 { pt3dadd( -12.8285, 741.514, 11.3649, 1.33 ) }
    dend_57 { pt3dadd( -12.4069, 742.657, 11.8433, 0.22 ) }
    dend_57 { pt3dadd( -12.2384, 743.265, 12.0775, 0.74 ) }
    dend_57 { pt3dadd( -12.2108, 743.415, 12.1267, 0.74 ) }
    dend_57 { pt3dadd( -12.0722, 744.282, 12.2921, 0.37 ) }
    dend_57 { pt3dadd( -11.9637, 744.782, 12.3303, 1.03 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 53/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -13.6196, 712.267, -9.88789, 0.22 ) }
    dend_56 { pt3dadd( -14.5399, 712.801, -9.66817, 0.22 ) }
    dend_56 { pt3dadd( -15.1336, 713.137, -9.53121, 0.15 ) }
    dend_56 { pt3dadd( -15.9151, 713.563, -9.37404, 0.15 ) }
    dend_56 { pt3dadd( -16.8552, 714.076, -9.18498, 0.52 ) }
    dend_56 { pt3dadd( -17.2661, 714.3, -9.10236, 0.52 ) }
    dend_56 { pt3dadd( -17.84, 714.612, -8.98693, 0.52 ) }
    dend_56 { pt3dadd( -18.0077, 714.701, -8.95099, 0.52 ) }
    dend_56 { pt3dadd( -18.968, 715.19, -8.73455, 0.22 ) }
    // Section: dend_50, id: dend_50, parent: dend_34 (entry count 62/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 15.3544, 707.377, -27.6062, 0.22 ) }
    dend_50 { pt3dadd( 16.6617, 705.918, -27.9709, 0.22 ) }
    dend_50 { pt3dadd( 17.0396, 705.436, -28.0737, 0.29 ) }
    dend_50 { pt3dadd( 17.719, 704.438, -28.2613, 0.22 ) }
    dend_50 { pt3dadd( 18.2739, 703.622, -28.4146, 0.44 ) }
    dend_50 { pt3dadd( 18.8096, 702.834, -28.5626, 0.22 ) }
    dend_50 { pt3dadd( 18.8482, 702.778, -28.5733, 0.22 ) }
    dend_50 { pt3dadd( 19.0044, 702.399, -28.5733, 0.44 ) }
    dend_50 { pt3dadd( 19.1135, 701.998, -28.5733, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 15.3544, 707.377, -27.6062, 0.29 ) }
    dend_35 { pt3dadd( 15.4533, 707.848, -27.5514, 0.29 ) }
    dend_35 { pt3dadd( 15.7283, 708.934, -27.3282, 0.29 ) }
    dend_35 { pt3dadd( 16.0389, 710.043, -27.049, 0.29 ) }
    dend_35 { pt3dadd( 16.0708, 710.144, -27.0213, 0.29 ) }
    dend_35 { pt3dadd( 16.4503, 711.146, -26.7218, 0.29 ) }
    dend_35 { pt3dadd( 16.5305, 711.333, -26.6624, 0.81 ) }
    dend_35 { pt3dadd( 16.9763, 712.243, -26.3551, 0.66 ) }
    dend_35 { pt3dadd( 17.0001, 712.285, -26.341, 0.66 ) }
    dend_35 { pt3dadd( 17.31, 712.788, -26.1644, 0.52 ) }
    dend_35 { pt3dadd( 18.1175, 714.093, -25.7441, 0.29 ) }
    dend_35 { pt3dadd( 18.6265, 714.937, -25.4481, 0.29 ) }
    dend_35 { pt3dadd( 18.8818, 715.399, -25.2969, 1.33 ) }
    dend_35 { pt3dadd( 19.1758, 715.975, -25.128, 1.55 ) }
    dend_35 { pt3dadd( 19.2051, 716.037, -25.1099, 1.55 ) }
    dend_35 { pt3dadd( 19.516, 716.76, -24.8644, 1.25 ) }
    dend_35 { pt3dadd( 20.1179, 718.267, -24.332, 0.37 ) }
    dend_35 { pt3dadd( 20.4575, 719.165, -23.9995, 0.29 ) }
    dend_35 { pt3dadd( 20.4798, 719.226, -23.9753, 0.29 ) }
    dend_35 { pt3dadd( 20.8253, 720.197, -23.5675, 0.29 ) }
    dend_35 { pt3dadd( 21.4389, 721.926, -22.8265, 1.84 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 92/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -11.9637, 744.782, 12.3303, 0.44 ) }
    dend_59 { pt3dadd( -11.7032, 743.517, 12.2113, 0.44 ) }
    dend_59 { pt3dadd( -11.4714, 742.391, 12.1054, 0.37 ) }
    dend_59 { pt3dadd( -11.3106, 741.61, 12.0318, 0.22 ) }
    dend_59 { pt3dadd( -11.2967, 741.543, 12.0255, 0.22 ) }
    dend_59 { pt3dadd( -11.0363, 740.278, 11.9064, 0.22 ) }
    dend_59 { pt3dadd( -11.0224, 740.21, 11.9001, 0.22 ) }
    dend_59 { pt3dadd( -9.58208, 730.602, 12.7999, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 0/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -11.9637, 744.782, 12.3303, 0.74 ) }
    dend_58 { pt3dadd( -12.1544, 745.395, 12.3008, 0.74 ) }
    dend_58 { pt3dadd( -12.3113, 746.242, 12.2638, 0.22 ) }
    dend_58 { pt3dadd( -12.3238, 746.309, 12.2596, 0.22 ) }
    dend_58 { pt3dadd( -12.4459, 747.026, 12.2371, 0.22 ) }
    dend_58 { pt3dadd( -12.4826, 747.248, 12.2341, 0.22 ) }
    dend_58 { pt3dadd( -12.5927, 747.962, 12.2408, 0.22 ) }
    dend_58 { pt3dadd( -12.7296, 748.907, 12.2782, 1.4 ) }
    dend_58 { pt3dadd( -12.8641, 750.17, 12.395, 0.29 ) }
    dend_58 { pt3dadd( -12.9329, 750.994, 12.5252, 0.29 ) }
    dend_58 { pt3dadd( -12.9387, 751.09, 12.546, 0.29 ) }
    dend_58 { pt3dadd( -13.0036, 752.009, 12.7945, 0.29 ) }
    dend_58 { pt3dadd( -13.0089, 752.074, 12.8167, 0.29 ) }
    dend_58 { pt3dadd( -13.1053, 753.129, 13.2836, 0.81 ) }
    dend_58 { pt3dadd( -13.1442, 753.753, 13.6179, 1.11 ) }
    dend_58 { pt3dadd( -13.1475, 753.813, 13.6505, 1.11 ) }
    dend_58 { pt3dadd( -13.203, 754.588, 14.043, 1.11 ) }
    dend_58 { pt3dadd( -13.2133, 754.693, 14.0943, 1.11 ) }
    dend_58 { pt3dadd( -13.2956, 755.206, 14.303, 1.11 ) }
    dend_58 { pt3dadd( -13.3079, 755.26, 14.3242, 1.11 ) }
    dend_58 { pt3dadd( -13.4704, 755.939, 14.576, 0.22 ) }
    dend_58 { pt3dadd( -13.6489, 756.651, 14.8441, 0.29 ) }
    dend_58 { pt3dadd( -13.6658, 756.714, 14.8681, 0.29 ) }
    dend_58 { pt3dadd( -13.8582, 757.384, 15.1074, 0.22 ) }
    dend_58 { pt3dadd( -14.2255, 758.523, 15.4903, 0.81 ) }
    dend_58 { pt3dadd( -16.5758, 767.798, 17.4851, 0.81 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 26/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 21.4389, 721.926, -22.8265, 1.84 ) }
    dend_37 { pt3dadd( 22.3689, 722.53, -23.0065, 1.84 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 28/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 21.4389, 721.926, -22.8265, 0.22 ) }
    dend_36 { pt3dadd( 21.4051, 723.783, -23.1898, 0.22 ) }
    dend_36 { pt3dadd( 21.4056, 724.783, -23.3544, 0.22 ) }
    dend_36 { pt3dadd( 21.406, 724.842, -23.363, 0.22 ) }
    dend_36 { pt3dadd( 21.4177, 726.03, -23.5118, 0.59 ) }
    dend_36 { pt3dadd( 21.4359, 727.247, -23.65, 0.22 ) }
    dend_36 { pt3dadd( 21.4576, 728.164, -23.7433, 0.66 ) }
    dend_36 { pt3dadd( 21.4665, 728.234, -23.7392, 0.66 ) }
    dend_36 { pt3dadd( 21.5071, 728.447, -23.7152, 0.66 ) }
    dend_36 { pt3dadd( 21.6949, 729.286, -23.5816, 0.15 ) }
    dend_36 { pt3dadd( 21.7119, 729.351, -23.5669, 0.15 ) }
    dend_36 { pt3dadd( 21.8752, 729.922, -23.403, 1.18 ) }
    dend_36 { pt3dadd( 22.3413, 731.255, -22.9537, 0.29 ) }
    dend_36 { pt3dadd( 22.4979, 731.667, -22.804, 0.52 ) }
    dend_36 { pt3dadd( 22.5236, 731.727, -22.7795, 0.52 ) }
    dend_36 { pt3dadd( 22.6494, 731.971, -22.6577, 0.52 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 44/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 22.3689, 722.53, -23.0065, 0.15 ) }
    dend_39 { pt3dadd( 22.8747, 724.236, -22.5471, 0.15 ) }
    dend_39 { pt3dadd( 23.1122, 725.079, -22.3454, 0.15 ) }
    dend_39 { pt3dadd( 23.2745, 725.655, -22.2075, 0.29 ) }
    dend_39 { pt3dadd( 23.3319, 725.859, -22.1588, 0.29 ) }
    dend_39 { pt3dadd( 23.4768, 726.374, -22.0357, 0.15 ) }
    dend_39 { pt3dadd( 23.5905, 726.777, -21.9391, 0.29 ) }
    dend_39 { pt3dadd( 23.6063, 726.882, -21.9391, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 52/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 22.3689, 722.53, -23.0065, 0.29 ) }
    dend_38 { pt3dadd( 22.9575, 721.153, -22.19, 0.29 ) }
    dend_38 { pt3dadd( 23.1335, 720.692, -21.9072, 0.29 ) }
    dend_38 { pt3dadd( 23.4065, 719.912, -21.4353, 0.22 ) }
    dend_38 { pt3dadd( 23.5089, 719.647, -21.2732, 0.52 ) }
    dend_38 { pt3dadd( 23.9262, 718.592, -20.6255, 0.22 ) }
    dend_38 { pt3dadd( 23.9436, 718.544, -20.5958, 0.22 ) }
    dend_38 { pt3dadd( 24.0487, 718.178, -20.377, 0.88 ) }
    dend_38 { pt3dadd( 24.1171, 717.95, -20.2128, 1.03 ) }
    dend_38 { pt3dadd( 24.4089, 716.75, -19.2417, 0.22 ) }
    dend_38 { pt3dadd( 24.4181, 716.686, -19.192, 0.22 ) }
    dend_38 { pt3dadd( 24.5294, 715.533, -18.2792, 0.22 ) }
    dend_38 { pt3dadd( 24.5323, 715.487, -18.2417, 0.22 ) }
    dend_38 { pt3dadd( 24.6316, 714.461, -17.3798, 0.22 ) }
    dend_38 { pt3dadd( 24.7019, 713.797, -16.8077, 0.22 ) }
    dend_38 { pt3dadd( 24.7923, 713.028, -16.0676, 0.22 ) }
    dend_38 { pt3dadd( 24.9989, 712.092, -15.097, 0.29 ) }
    dend_38 { pt3dadd( 25.0263, 712.027, -15.026, 0.29 ) }
    dend_38 { pt3dadd( 25.672, 711.038, -13.9808, 0.15 ) }
    dend_38 { pt3dadd( 25.7034, 711.002, -13.9446, 0.15 ) }
    dend_38 { pt3dadd( 26.7055, 710.145, -13.0895, 0.96 ) }
    dend_38 { pt3dadd( 27.0229, 709.916, -12.865, 0.96 ) }
    dend_38 { pt3dadd( 28.1515, 709.122, -12.1573, 0.22 ) }
    dend_38 { pt3dadd( 29.0783, 708.484, -11.6044, 0.22 ) }
    dend_38 { pt3dadd( 29.1242, 708.454, -11.5792, 0.22 ) }
    dend_38 { pt3dadd( 30.0339, 707.865, -11.1371, 0.22 ) }
    dend_38 { pt3dadd( 31.4756, 706.959, -10.598, 0.22 ) }
    dend_38 { pt3dadd( 32.099, 706.552, -10.3507, 0.74 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 80/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 23.6063, 726.882, -21.9391, 0.37 ) }
    dend_41 { pt3dadd( 23.8133, 728.066, -21.6797, 0.37 ) }
    dend_41 { pt3dadd( 23.825, 728.133, -21.6688, 0.37 ) }
    dend_41 { pt3dadd( 23.8859, 728.539, -21.6201, 0.22 ) }
    dend_41 { pt3dadd( 24.0024, 729.437, -21.5657, 0.22 ) }
    dend_41 { pt3dadd( 24.0501, 729.912, -21.5518, 0.66 ) }
    dend_41 { pt3dadd( 24.058, 729.99, -21.5495, 0.66 ) }
    dend_41 { pt3dadd( 24.1368, 730.815, -21.5881, 0.52 ) }
    dend_41 { pt3dadd( 24.1968, 731.526, -21.6249, 0.52 ) }
    dend_41 { pt3dadd( 24.2475, 732.378, -21.6775, 1.33 ) }
    dend_41 { pt3dadd( 24.2698, 733.089, -21.7326, 1.47 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 91/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 23.6063, 726.882, -21.9391, 0.29 ) }
    dend_40 { pt3dadd( 24.6218, 726.912, -21.4833, 0.29 ) }
    dend_40 { pt3dadd( 24.6768, 726.918, -21.4605, 0.29 ) }
    dend_40 { pt3dadd( 26.2822, 727.179, -20.8144, 0.66 ) }
    dend_40 { pt3dadd( 27.3182, 727.372, -20.3972, 0.15 ) }
    dend_40 { pt3dadd( 27.8563, 727.475, -20.1852, 0.88 ) }
    dend_40 { pt3dadd( 28.4398, 727.578, -19.9818, 0.88 ) }
    dend_40 { pt3dadd( 29.3296, 727.739, -19.6846, 0.22 ) }
    dend_40 { pt3dadd( 29.3869, 727.749, -19.6699, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_40 { pt3dadd( 30.1282, 727.87, -19.5738, 0.81 ) }
    dend_40 { pt3dadd( 30.4449, 727.955, -19.5456, 0.81 ) }
    dend_40 { pt3dadd( 31.4778, 728.285, -19.4682, 0.22 ) }
    dend_40 { pt3dadd( 31.7602, 728.37, -19.4536, 0.96 ) }
    dend_40 { pt3dadd( 31.8274, 728.392, -19.4524, 0.96 ) }
    dend_40 { pt3dadd( 32.3828, 728.587, -19.4686, 0.52 ) }
    dend_40 { pt3dadd( 33.3189, 728.901, -19.4608, 0.22 ) }
    dend_40 { pt3dadd( 33.4146, 728.931, -19.4531, 0.22 ) }
    dend_40 { pt3dadd( 33.7114, 729.016, -19.404, 0.22 ) }
    dend_40 { pt3dadd( 33.802, 729.036, -19.3872, 0.22 ) }
    dend_40 { pt3dadd( 34.663, 729.182, -19.2176, 0.66 ) }
    dend_40 { pt3dadd( 35.9024, 729.348, -18.9647, 0.15 ) }
    dend_40 { pt3dadd( 35.9609, 729.353, -18.9528, 0.15 ) }
    dend_40 { pt3dadd( 36.761, 729.411, -18.8241, 0.15 ) }
    dend_40 { pt3dadd( 37.3414, 729.446, -18.7226, 0.74 ) }
    dend_40 { pt3dadd( 37.5088, 729.458, -18.6932, 0.74 ) }
    dend_40 { pt3dadd( 37.9995, 729.5, -18.6077, 0.74 ) }
    dend_40 { pt3dadd( 38.0687, 729.505, -18.5985, 0.74 ) }
    dend_40 { pt3dadd( 39.1355, 729.57, -18.4542, 0.22 ) }
    dend_40 { pt3dadd( 40.649, 729.612, -18.233, 0.66 ) }
    dend_40 { pt3dadd( 41.0226, 729.613, -18.1721, 0.66 ) }
    dend_40 { pt3dadd( 41.102, 729.612, -18.1581, 0.66 ) }
    dend_40 { pt3dadd( 41.7417, 729.583, -18.0316, 0.22 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 23/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 24.2698, 733.089, -21.7326, 0.44 ) }
    dend_43 { pt3dadd( 24.1223, 734.286, -21.1859, 0.44 ) }
    dend_43 { pt3dadd( 24.0939, 735.122, -20.7588, 0.29 ) }
    dend_43 { pt3dadd( 24.1038, 735.943, -20.3223, 0.29 ) }
    dend_43 { pt3dadd( 24.1736, 737.235, -19.639, 0.81 ) }
    dend_43 { pt3dadd( 24.2163, 737.692, -19.4024, 1.18 ) }
    dend_43 { pt3dadd( 24.2419, 737.91, -19.292, 1.18 ) }
    dend_43 { pt3dadd( 24.5305, 739.122, -18.6937, 0.15 ) }
    dend_43 { pt3dadd( 24.577, 739.251, -18.6272, 0.15 ) }
    dend_43 { pt3dadd( 24.7628, 739.634, -18.4376, 0.66 ) }
    dend_43 { pt3dadd( 24.9471, 739.978, -18.3167, 0.96 ) }
    dend_43 { pt3dadd( 24.9733, 740.039, -18.2958, 0.96 ) }
    dend_43 { pt3dadd( 25.0317, 740.244, -18.2131, 0.96 ) }
    dend_43 { pt3dadd( 25.1909, 740.95, -17.8371, 0.29 ) }
    dend_43 { pt3dadd( 25.2188, 741.074, -17.7603, 0.29 ) }
    dend_43 { pt3dadd( 25.3425, 741.603, -17.4007, 0.29 ) }
    dend_43 { pt3dadd( 25.5655, 742.544, -16.7374, 0.37 ) }
    dend_43 { pt3dadd( 25.7399, 743.29, -16.2045, 0.52 ) }
    dend_43 { pt3dadd( 25.9991, 744.426, -15.3775, 0.96 ) }
    dend_43 { pt3dadd( 26.0147, 744.49, -15.3326, 0.96 ) }
    dend_43 { pt3dadd( 26.1979, 745.119, -14.9124, 1.18 ) }
    dend_43 { pt3dadd( 26.2658, 745.317, -14.7981, 1.18 ) }
    dend_43 { pt3dadd( 26.3931, 745.655, -14.6809, 1.18 ) }
    dend_43 { pt3dadd( 26.428, 745.751, -14.6626, 1.18 ) }
    dend_43 { pt3dadd( 26.6981, 746.633, -14.5676, 1.33 ) }
    dend_43 { pt3dadd( 26.7206, 746.708, -14.5609, 1.33 ) }
    dend_43 { pt3dadd( 26.8851, 747.271, -14.5231, 1.25 ) }
    dend_43 { pt3dadd( 27.3364, 748.817, -14.4328, 0.22 ) }
    dend_43 { pt3dadd( 27.59, 749.756, -14.3885, 0.22 ) }
    dend_43 { pt3dadd( 27.7034, 750.253, -14.3686, 0.59 ) }
    dend_43 { pt3dadd( 27.7264, 750.361, -14.3647, 0.59 ) }
    dend_43 { pt3dadd( 27.7849, 750.647, -14.355, 0.59 ) }
    dend_43 { pt3dadd( 27.9375, 751.497, -14.3324, 0.22 ) }
    dend_43 { pt3dadd( 27.9918, 752.149, -14.3324, 0.96 ) }
    dend_43 { pt3dadd( 28.0074, 752.939, -14.3324, 1.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 58/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 24.2698, 733.089, -21.7326, 0.15 ) }
    dend_42 { pt3dadd( 25.0609, 735.491, -22.1509, 0.15 ) }
    dend_42 { pt3dadd( 25.0838, 735.588, -22.165, 0.15 ) }
    dend_42 { pt3dadd( 25.2008, 736.083, -22.227, 0.15 ) }
    dend_42 { pt3dadd( 25.2168, 736.161, -22.2358, 0.15 ) }
    dend_42 { pt3dadd( 25.3038, 736.692, -22.3013, 0.59 ) }
    dend_42 { pt3dadd( 25.3524, 737.038, -22.3429, 0.59 ) }
    dend_42 { pt3dadd( 25.5487, 739.191, -22.5686, 0.22 ) }
    dend_42 { pt3dadd( 25.6068, 740.046, -22.6588, 1.25 ) }
    dend_42 { pt3dadd( 25.6459, 740.651, -22.7114, 0.88 ) }
    dend_42 { pt3dadd( 25.7365, 742.226, -22.822, 0.15 ) }
    dend_42 { pt3dadd( 25.7638, 742.891, -22.8574, 0.15 ) }
    dend_42 { pt3dadd( 25.7746, 743.625, -22.8861, 0.74 ) }
    dend_42 { pt3dadd( 25.7673, 744.122, -22.8946, 1.11 ) }
    dend_42 { pt3dadd( 25.7247, 745.247, -22.9138, 0.15 ) }
    dend_42 { pt3dadd( 25.7037, 745.836, -22.9197, 0.96 ) }
    dend_42 { pt3dadd( 25.6642, 746.55, -22.9177, 1.18 ) }
    dend_42 { pt3dadd( 25.5201, 748.566, -22.9354, 0.15 ) }
    dend_42 { pt3dadd( 25.512, 748.656, -22.9368, 0.15 ) }
    dend_42 { pt3dadd( 25.4101, 749.592, -22.9696, 0.15 ) }
    dend_42 { pt3dadd( 25.4011, 749.659, -22.9736, 0.15 ) }
    dend_42 { pt3dadd( 25.3384, 750.233, -23.0017, 0.52 ) }
    dend_42 { pt3dadd( 25.3247, 750.37, -23.0056, 0.52 ) }
    dend_42 { pt3dadd( 25.2982, 750.663, -23.0143, 0.52 ) }
    dend_42 { pt3dadd( 25.2945, 750.722, -23.0165, 0.52 ) }
    dend_42 { pt3dadd( 25.2543, 751.692, -23.0532, 0.22 ) }
    dend_42 { pt3dadd( 25.2282, 752.397, -23.0822, 1.11 ) }
    dend_42 { pt3dadd( 25.2071, 753.056, -23.0893, 0.81 ) }
    dend_42 { pt3dadd( 25.1538, 754.792, -23.0743, 0.15 ) }
    dend_42 { pt3dadd( 25.0979, 756.635, -23.0264, 0.15 ) }
    dend_42 { pt3dadd( 25.0853, 757.254, -22.9894, 1.03 ) }
    dend_42 { pt3dadd( 25.0743, 757.947, -22.915, 0.81 ) }
    dend_42 { pt3dadd( 25.0627, 759.439, -22.6709, 0.22 ) }
    dend_42 { pt3dadd( 25.0625, 759.496, -22.658, 0.22 ) }
    dend_42 { pt3dadd( 25.0622, 760.447, -22.3468, 0.52 ) }
    dend_42 { pt3dadd( 25.0573, 761.343, -21.9883, 0.22 ) }
    dend_42 { pt3dadd( 25.0507, 762.146, -21.6562, 0.74 ) }
    dend_42 { pt3dadd( 25.0476, 762.601, -21.466, 0.74 ) }
    dend_42 { pt3dadd( 25.0467, 762.665, -21.4398, 0.74 ) }
    dend_42 { pt3dadd( 25.0436, 763.987, -20.9267, 0.22 ) }
    dend_42 { pt3dadd( 25.0442, 764.042, -20.9064, 0.22 ) }
    dend_42 { pt3dadd( 25.0832, 765.081, -20.6037, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_42 { pt3dadd( 25.1094, 765.44, -20.5166, 0.66 ) }
    dend_42 { pt3dadd( 25.1157, 765.497, -20.5048, 0.66 ) }
    dend_42 { pt3dadd( 25.2267, 766.145, -20.4001, 0.22 ) }
    dend_42 { pt3dadd( 25.5116, 767.19, -20.205, 1.4 ) }
    dend_42 { pt3dadd( 25.911, 768.411, -19.9606, 0.15 ) }
    dend_42 { pt3dadd( 25.9626, 768.548, -19.9321, 0.15 ) }
    dend_42 { pt3dadd( 26.2431, 769.249, -19.7745, 0.15 ) }
    dend_42 { pt3dadd( 26.6818, 770.318, -19.5269, 0.15 ) }
    dend_42 { pt3dadd( 27.4787, 772.193, -19.0753, 0.15 ) }
    dend_42 { pt3dadd( 27.9281, 773.176, -18.8084, 1.33 ) }
    dend_42 { pt3dadd( 28.1138, 773.574, -18.6698, 1.47 ) }
    dend_42 { pt3dadd( 28.8031, 775.084, -18.1831, 0.22 ) }
    dend_42 { pt3dadd( 28.8793, 775.258, -18.131, 0.44 ) }
    dend_42 { pt3dadd( 28.9007, 775.311, -18.1197, 0.44 ) }
    dend_42 { pt3dadd( 29.2137, 776.207, -18.1717, 0.22 ) }
    dend_42 { pt3dadd( 29.5809, 777.358, -18.0969, 0.88 ) }
    dend_42 { pt3dadd( 30.0414, 779.15, -17.7804, 0.59 ) }
    dend_42 { pt3dadd( 30.1294, 779.483, -17.6795, 0.37 ) }
    dend_42 { pt3dadd( 30.3837, 780.371, -17.3316, 0.15 ) }
    dend_42 { pt3dadd( 30.7645, 781.641, -16.7563, 1.62 ) }
    dend_42 { pt3dadd( 31.7076, 784.507, -15.3111, 0.88 ) }
    dend_42 { pt3dadd( 31.9209, 785.095, -14.9691, 1.25 ) }
    dend_42 { pt3dadd( 32.3279, 786.146, -14.2475, 0.15 ) }
    dend_42 { pt3dadd( 32.4753, 786.501, -13.9915, 0.66 ) }
    dend_42 { pt3dadd( 32.504, 786.563, -13.9475, 0.66 ) }
    dend_42 { pt3dadd( 33.0443, 787.64, -13.3053, 0.22 ) }
    dend_42 { pt3dadd( 33.3227, 788.209, -13.1295, 0.88 ) }
    dend_42 { pt3dadd( 33.4294, 788.442, -13.0662, 0.88 ) }
    dend_42 { pt3dadd( 33.4619, 788.524, -13.0459, 0.88 ) }
    dend_42 { pt3dadd( 34.0437, 790.114, -12.6577, 0.22 ) }
    dend_42 { pt3dadd( 34.2433, 790.686, -12.524, 0.66 ) }
    dend_42 { pt3dadd( 34.7087, 792.157, -12.203, 0.15 ) }
    dend_42 { pt3dadd( 34.9283, 792.89, -12.0508, 0.15 ) }
    dend_42 { pt3dadd( 34.9442, 792.949, -12.0394, 0.15 ) }
    dend_42 { pt3dadd( 35.0537, 793.435, -11.953, 0.44 ) }
    dend_42 { pt3dadd( 35.1451, 794.075, -11.8636, 0.22 ) }
    dend_42 { pt3dadd( 35.179, 794.638, -11.8107, 0.52 ) }
    dend_42 { pt3dadd( 35.1666, 794.717, -11.8107, 0.52 ) }
    dend_42 { pt3dadd( 35.086, 795.008, -11.8107, 0.52 ) }
    dend_42 { pt3dadd( 34.9674, 795.35, -11.8107, 0.37 ) }
    dend_42 { pt3dadd( 34.9289, 795.421, -11.8107, 0.37 ) }
    dend_42 { pt3dadd( 34.6641, 795.727, -11.8107, 0.22 ) }
    dend_42 { pt3dadd( 34.1733, 796.186, -11.8107, 0.44 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 43/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 28.0074, 752.939, -14.3324, 0.22 ) }
    dend_45 { pt3dadd( 28.2336, 754.309, -13.8671, 0.22 ) }
    dend_45 { pt3dadd( 28.3456, 755.005, -13.6178, 0.52 ) }
    dend_45 { pt3dadd( 28.6229, 756.754, -12.9726, 0.29 ) }
    dend_45 { pt3dadd( 28.7508, 757.569, -12.6644, 0.88 ) }
    dend_45 { pt3dadd( 28.859, 758.182, -12.4468, 1.18 ) }
    dend_45 { pt3dadd( 28.9383, 758.619, -12.3052, 1.18 ) }
    dend_45 { pt3dadd( 28.9836, 758.843, -12.2444, 1.18 ) }
    dend_45 { pt3dadd( 28.9836, 758.843, -12.2444, 1.18 ) }
    dend_45 { pt3dadd( 28.9959, 758.9, -12.2359, 1.18 ) }
    dend_45 { pt3dadd( 29.2369, 760.015, -12.0942, 0.22 ) }
    dend_45 { pt3dadd( 29.4331, 760.692, -11.9679, 0.44 ) }
    dend_45 { pt3dadd( 29.7543, 761.671, -11.7352, 0.59 ) }
    dend_45 { pt3dadd( 29.9406, 762.134, -11.6045, 1.11 ) }
    dend_45 { pt3dadd( 30.1562, 762.602, -11.4569, 1.11 ) }
    dend_45 { pt3dadd( 30.1821, 762.652, -11.4391, 1.11 ) }
    dend_45 { pt3dadd( 31.1587, 764.186, -10.7717, 0.22 ) }
    dend_45 { pt3dadd( 31.1998, 764.236, -10.7478, 0.22 ) }
    dend_45 { pt3dadd( 31.7967, 764.891, -10.4471, 0.22 ) }
    dend_45 { pt3dadd( 32.122, 765.249, -10.2741, 0.74 ) }
    dend_45 { pt3dadd( 32.167, 765.3, -10.2498, 0.74 ) }
    dend_45 { pt3dadd( 32.5236, 765.733, -10.0487, 0.52 ) }
    dend_45 { pt3dadd( 33.0561, 766.495, -9.73025, 0.22 ) }
    dend_45 { pt3dadd( 33.4216, 767.148, -9.42016, 0.74 ) }
    dend_45 { pt3dadd( 33.931, 768.315, -8.79874, 1.25 ) }
    dend_45 { pt3dadd( 33.9575, 768.393, -8.75662, 1.25 ) }
    dend_45 { pt3dadd( 34.0277, 768.674, -8.60501, 1.11 ) }
    dend_45 { pt3dadd( 34.1456, 769.282, -8.22549, 0.52 ) }
    dend_45 { pt3dadd( 34.3299, 770.185, -7.59693, 0.15 ) }
    dend_45 { pt3dadd( 34.3452, 770.24, -7.55337, 0.15 ) }
    dend_45 { pt3dadd( 34.5903, 770.663, -7.11886, 0.15 ) }
    dend_45 { pt3dadd( 34.6488, 770.725, -7.03526, 0.15 ) }
    dend_45 { pt3dadd( 35.3956, 771.34, -5.93892, 0.44 ) }
    dend_45 { pt3dadd( 35.703, 771.551, -5.49281, 0.66 ) }
    dend_45 { pt3dadd( 35.7429, 771.573, -5.43997, 0.66 ) }
    dend_45 { pt3dadd( 36.7274, 772.064, -4.14424, 0.22 ) }
    dend_45 { pt3dadd( 36.7689, 772.082, -4.0899, 0.22 ) }
    dend_45 { pt3dadd( 37.789, 772.538, -2.71982, 1.33 ) }
    dend_45 { pt3dadd( 37.908, 772.6, -2.53914, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 82/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 28.0074, 752.939, -14.3324, 0.15 ) }
    dend_44 { pt3dadd( 29.5052, 754.133, -14.462, 0.15 ) }
    dend_44 { pt3dadd( 30.0353, 754.535, -14.4881, 0.15 ) }
    dend_44 { pt3dadd( 30.1587, 754.623, -14.4913, 0.15 ) }
    dend_44 { pt3dadd( 30.75, 755.031, -14.5004, 0.44 ) }
    dend_44 { pt3dadd( 30.881, 755.117, -14.5005, 0.44 ) }
    dend_44 { pt3dadd( 31.7398, 755.668, -14.4989, 0.22 ) }
    dend_44 { pt3dadd( 32.1806, 755.941, -14.483, 0.44 ) }
    dend_44 { pt3dadd( 32.7777, 756.258, -14.4668, 0.15 ) }
    dend_44 { pt3dadd( 32.841, 756.289, -14.4655, 0.15 ) }
    dend_44 { pt3dadd( 33.4706, 756.571, -14.4574, 0.66 ) }
    dend_44 { pt3dadd( 33.535, 756.598, -14.4571, 0.66 ) }
    dend_44 { pt3dadd( 34.3907, 756.924, -14.464, 0.22 ) }
    dend_44 { pt3dadd( 35.0872, 757.194, -14.4834, 0.88 ) }
    dend_44 { pt3dadd( 35.1624, 757.223, -14.486, 0.88 ) }
    dend_44 { pt3dadd( 35.3642, 757.297, -14.4939, 1.11 ) }
    dend_44 { pt3dadd( 35.4977, 757.342, -14.5009, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 99/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 37.908, 772.6, -2.53914, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_47 { pt3dadd( 38.2514, 773.958, -1.42122, 0.29 ) }
    dend_47 { pt3dadd( 38.2719, 774.014, -1.38106, 0.29 ) }
    dend_47 { pt3dadd( 38.6215, 774.796, -0.854232, 0.29 ) }
    dend_47 { pt3dadd( 38.6712, 774.884, -0.799718, 0.29 ) }
    dend_47 { pt3dadd( 39.0222, 775.484, -0.463701, 0.74 ) }
    dend_47 { pt3dadd( 39.0513, 775.533, -0.438143, 0.74 ) }
    dend_47 { pt3dadd( 39.3963, 776.135, -0.110414, 0.74 ) }
    dend_47 { pt3dadd( 39.4542, 776.242, -0.0368845, 0.74 ) }
    dend_47 { pt3dadd( 39.8291, 776.933, 0.484544, 0.15 ) }
    dend_47 { pt3dadd( 40.0093, 777.255, 0.730965, 0.15 ) }
    dend_47 { pt3dadd( 40.0318, 777.298, 0.764485, 0.15 ) }
    dend_47 { pt3dadd( 40.762, 778.764, 1.8893, 0.15 ) }
    dend_47 { pt3dadd( 40.9736, 779.254, 2.24998, 1.11 ) }
    dend_47 { pt3dadd( 41.1553, 779.74, 2.57645, 1.25 ) }
    dend_47 { pt3dadd( 41.5516, 780.88, 3.29921, 0.22 ) }
    dend_47 { pt3dadd( 41.7919, 781.556, 3.69929, 0.22 ) }
    dend_47 { pt3dadd( 41.8086, 781.607, 3.72501, 0.22 ) }
    dend_47 { pt3dadd( 42.0449, 782.343, 3.96827, 0.29 ) }
    dend_47 { pt3dadd( 42.2573, 783.085, 4.17255, 0.74 ) }
    dend_47 { pt3dadd( 42.4049, 783.607, 4.31821, 1.11 ) }
    dend_47 { pt3dadd( 42.4264, 783.672, 4.33592, 1.11 ) }
    dend_47 { pt3dadd( 42.7367, 784.38, 4.52577, 0.66 ) }
    dend_47 { pt3dadd( 43.1687, 785.25, 4.75421, 0.22 ) }
    dend_47 { pt3dadd( 43.4851, 785.763, 4.88755, 0.15 ) }
    dend_47 { pt3dadd( 43.9244, 786.374, 5.04268, 1.11 ) }
    dend_47 { pt3dadd( 44.3465, 786.936, 5.16948, 1.69 ) }
    dend_47 { pt3dadd( 44.3839, 786.981, 5.18107, 1.69 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 27/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 37.908, 772.6, -2.53914, 0.29 ) }
    dend_46 { pt3dadd( 37.086, 773.46, -2.67628, 0.29 ) }
    dend_46 { pt3dadd( 36.867, 773.687, -2.71934, 0.29 ) }
    dend_46 { pt3dadd( 36.2469, 774.304, -2.83539, 0.15 ) }
    dend_46 { pt3dadd( 36.1136, 774.434, -2.85951, 0.15 ) }
    dend_46 { pt3dadd( 35.6849, 774.863, -2.93297, 0.29 ) }
    dend_46 { pt3dadd( 35.0244, 775.536, -3.04505, 0.15 ) }
    dend_46 { pt3dadd( 34.9453, 775.622, -3.06317, 0.15 ) }
    dend_46 { pt3dadd( 34.3134, 776.398, -3.2259, 0.15 ) }
    dend_46 { pt3dadd( 34.2601, 776.482, -3.24479, 0.15 ) }
    dend_46 { pt3dadd( 33.9481, 777.054, -3.37253, 0.15 ) }
    dend_46 { pt3dadd( 33.8801, 777.221, -3.41054, 0.15 ) }
    dend_46 { pt3dadd( 33.5157, 778.331, -3.68446, 0.15 ) }
    dend_46 { pt3dadd( 33.4919, 778.418, -3.70621, 0.15 ) }
    dend_46 { pt3dadd( 33.3122, 779.458, -3.99954, 0.15 ) }
    dend_46 { pt3dadd( 33.3032, 779.523, -4.01877, 0.15 ) }
    dend_46 { pt3dadd( 33.2605, 780.062, -4.19369, 0.37 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 44/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 44.3839, 786.981, 5.18107, 0.52 ) }
    dend_49 { pt3dadd( 44.6861, 788.334, 6.45125, 0.52 ) }
    dend_49 { pt3dadd( 44.8467, 789.633, 7.61397, 0.29 ) }
    dend_49 { pt3dadd( 44.8585, 790.097, 7.96567, 0.96 ) }
    dend_49 { pt3dadd( 44.8502, 790.67, 8.3695, 1.11 ) }
    dend_49 { pt3dadd( 44.8459, 790.766, 8.43804, 1.11 ) }
    dend_49 { pt3dadd( 44.7973, 791.577, 9.02448, 0.81 ) }
    dend_49 { pt3dadd( 44.6875, 792.457, 9.60297, 1.11 ) }
    dend_49 { pt3dadd( 44.5584, 793.699, 10.33, 0.37 ) }
    dend_49 { pt3dadd( 44.5556, 793.75, 10.3597, 0.37 ) }
    dend_49 { pt3dadd( 44.5857, 794.903, 10.9865, 0.29 ) }
    dend_49 { pt3dadd( 44.594, 794.963, 11.019, 0.29 ) }
    dend_49 { pt3dadd( 44.8841, 795.715, 11.4939, 0.81 ) }
    dend_49 { pt3dadd( 45.1222, 796.1, 11.7778, 1.03 ) }
    dend_49 { pt3dadd( 45.1575, 796.147, 11.8163, 1.03 ) }
    dend_49 { pt3dadd( 45.4816, 796.558, 12.152, 0.96 ) }
    dend_49 { pt3dadd( 46.3277, 797.594, 12.9773, 0.66 ) }
    dend_49 { pt3dadd( 47.15, 798.622, 13.7675, 0.52 ) }
    dend_49 { pt3dadd( 47.7818, 799.467, 14.3896, 0.44 ) }
    dend_49 { pt3dadd( 48.0842, 799.917, 14.7007, 0.44 ) }
    dend_49 { pt3dadd( 48.3604, 800.308, 15.0056, 0.37 ) }
    dend_49 { pt3dadd( 48.4437, 800.415, 15.0964, 0.37 ) }
    dend_49 { pt3dadd( 49.075, 801.117, 15.7202, 0.37 ) }
    dend_49 { pt3dadd( 49.684, 801.812, 16.3207, 0.22 ) }
    dend_49 { pt3dadd( 50.5368, 802.717, 17.1469, 1.4 ) }
    dend_49 { pt3dadd( 51.7914, 803.953, 18.4024, 0.29 ) }
    dend_49 { pt3dadd( 52.1879, 804.31, 18.8168, 0.96 ) }
    dend_49 { pt3dadd( 52.5091, 804.565, 19.168, 0.96 ) }
    dend_49 { pt3dadd( 57.8048, 810.919, 24.5976, 0.96 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 73/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 44.3839, 786.981, 5.18107, 0.22 ) }
    dend_48 { pt3dadd( 43.6602, 788.47, 5.31214, 0.22 ) }
    dend_48 { pt3dadd( 43.0185, 789.79, 5.42837, 0.22 ) }
    dend_48 { pt3dadd( 42.9532, 789.925, 5.4402, 0.22 ) }
    dend_48 { pt3dadd( 42.3909, 791.082, 5.54206, 0.22 ) }
    dend_48 { pt3dadd( 39.2514, 800.142, 7.49143, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
    ModelViewParmSubset_2 = new SectionList()
    dend_75 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_75 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_74 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_73 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_72 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_27 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_26 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_24 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_23 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_15 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_67 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_20 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_19 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_16 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_13 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_66 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_29 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_12 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_6 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_61 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_11 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_10 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_57 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_42 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_7 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_21 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_70 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_25 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_14 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_22 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_71 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_8 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_18 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_9 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_17 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_28 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_69 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_68 OneSecGrp_SectionRef_35.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_4 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_5 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_30 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_31 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_32 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_52 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_33 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_34 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_53 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_50 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_54 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_51 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_35 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_37 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_55 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_60 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_39 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_56 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_36 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_41 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_40 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_38 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_63 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_43 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_62 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_44 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_65 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_64 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_45 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_59 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_46 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_58 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_47 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_48 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_49 OneSecGrp_SectionRef_78.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, axon_0, axon_0, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_75 nseg = 9
    dend_74 nseg = 3
    dend_73 nseg = 5
    dend_72 nseg = 7
    dend_27 nseg = 3
    dend_26 nseg = 7
    dend_24 nseg = 7
    dend_23 nseg = 13
    dend_15 nseg = 3
    dend_2 nseg = 7
    dend_67 nseg = 3
    dend_20 nseg = 5
    dend_19 nseg = 5
    dend_16 nseg = 7
    dend_13 nseg = 13
    dend_3 nseg = 3
    dend_66 nseg = 11
    dend_29 nseg = 27
    dend_12 nseg = 3
    dend_6 nseg = 3
    dend_61 nseg = 5
    dend_11 nseg = 9
    dend_10 nseg = 13
    dend_57 nseg = 3
    dend_42 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L6_DBC_e08f2b8ef4_0_0


