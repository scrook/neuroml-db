// Cell: dNAC222_L5_ChC_03143d1e9b_0_0
/*
{
  "id" : "dNAC222_L5_ChC_03143d1e9b_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.699158, -10.4987, 0.384835, 2.69968", "-0.589028, -9.39629, 0.347626, 4.40168", "-0.478898, -8.29387, 0.310418, 6.28323", "-0.368767, -7.19145, 0.273209, 7.64436", "-0.258637, -6.08903, 0.236, 8.5434", "-0.148506, -4.98661, 0.198792, 9.49409", "-0.0383758, -3.88419, 0.161583, 10.6841", "0.0717547, -2.78177, 0.124374, 11.1456", "0.181885, -1.67935, 0.0871655, 11.461", "0.292016, -0.576928, 0.0499568, 11.5573", "0.402146, 0.525493, 0.0127481, 11.5875", "0.512276, 1.62791, -0.0244606, 11.382", "0.622407, 2.73033, -0.0616693, 11.2002", "0.732537, 3.83276, -0.098878, 10.9052", "0.842668, 4.93518, -0.136087, 10.3672", "0.952798, 6.0376, -0.173295, 9.50426", "1.06293, 7.14002, -0.210504, 8.36675", "1.17306, 8.24244, -0.247713, 7.22308", "1.28319, 9.34486, -0.284922, 6.14175", "1.39332, 10.4473, -0.32213, 4.86495", "1.50345, 11.5497, -0.359339, 2.69802" ]
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "0.562386, 11.6828, -3.45834, 0.37", "0.124494, 12.8992, -3.54177, 0.37", "0.0709825, 13.2297, -3.60204, 0.74", "0.105466, 13.4901, -3.6945, 0.74", "0.395705, 14.2898, -4.04622, 0.37", "0.681219, 14.9292, -4.30768, 0.66", "1.01493, 15.5891, -4.58697, 1.33", "1.32926, 16.0812, -4.8048, 1.33", "1.85824, 16.8939, -5.17078, 0.74", "2.25339, 17.5437, -5.44638, 0.74", "2.85552, 18.6178, -5.90112, 1.25", "3.23498, 19.4813, -6.25115, 2.06", "3.42747, 20.126, -6.48495, 2.06", "3.56007, 20.9992, -6.77387, 1.4", "3.50974, 22.0076, -7.09562, 0.74", "3.28784, 22.6689, -7.30859, 1.11", "2.90175, 23.1758, -7.47345, 1.11", "2.34508, 23.6089, -7.60399, 0.81", "1.61195, 23.9747, -7.7839, 0.81", "0.716094, 24.2721, -8.02053, 0.81", "-0.157345, 24.4901, -8.27626, 0.96", "-0.878439, 24.6691, -8.49582, 1.11", "-1.52622, 24.8507, -8.73006, 1.11", "-2.93344, 25.342, -9.34469, 1.11", "-3.34922, 25.544, -9.5707, 1.11", "-4.01991, 26.081, -10.0351, 0.59", "-4.41625, 26.657, -10.3707, 0.96", "-4.65066, 27.1887, -10.5928, 1.25", "-4.81611, 27.6682, -10.745, 1.55", "-4.91647, 27.9703, -10.8104, 1.55", "-5.27488, 28.8979, -10.9929, 0.74", "-5.83799, 30.0196, -11.2103, 0.96", "-6.30433, 30.6997, -11.3672, 0.66", "-6.69136, 31.1275, -11.4895, 0.66", "-7.31288, 31.6591, -11.6833, 0.81", "-7.82872, 32.0085, -11.8494, 0.96", "-8.50746, 32.3836, -12.0856, 1.47", "-9.13284, 32.7074, -12.3154, 1.62", "-9.72335, 33.0604, -12.5388, 1.47", "-10.273, 33.4564, -12.7576, 1.11", "-10.894, 34.0009, -13.0228, 0.81", "-11.6251, 34.8116, -13.382, 0.66", "-12.018, 35.3709, -13.6001, 0.81", "-12.5232, 36.315, -13.9264, 1.03", "-12.7185, 36.8069, -14.0913, 1.25", "-12.8576, 37.2646, -14.2519, 1.25", "-13.1089, 38.2526, -14.6328, 0.96", "-13.2962, 39.0151, -14.9689, 0.81", "-13.5573, 39.9559, -15.4397, 0.59", "-13.7725, 40.6096, -15.7894, 0.59", "-14.0686, 41.3841, -16.2087, 0.59", "-14.3939, 42.1444, -16.6059, 0.59", "-14.709, 42.8563, -16.9141, 0.44", "-15.0077, 43.5996, -17.1504, 0.66", "-15.2391, 44.3937, -17.2798, 0.74", "-15.3141, 44.892, -17.3026, 0.96", "-15.3212, 45.4496, -17.2856, 0.96", "-15.2054, 46.6873, -17.2628, 0.52", "-15.0452, 47.6909, -17.276, 0.59", "-14.8331, 48.8291, -17.3334, 0.59", "-14.7238, 49.4651, -17.3928, 0.96", "-14.6399, 50.1989, -17.4965, 0.96", "-14.6136, 51.5018, -17.7581, 0.66", "-14.7467, 52.3974, -18.0275, 0.66", "-15.0405, 53.1229, -18.3078, 0.96", "-15.3801, 53.5628, -18.494, 1.03", "-15.8137, 53.918, -18.6709, 1.03", "-16.3901, 54.2412, -18.8835, 1.03", "-17.1669, 54.5447, -19.1917, 0.74", "-17.7782, 54.7316, -19.4956, 0.74", "-18.186, 54.8321, -19.743, 0.52", "-19.0883, 55.0122, -20.4094, 0.52", "-19.8519, 55.1329, -21.0415, 0.52", "-20.6305, 55.2285, -21.7162, 1.11", "-21.0539, 55.2696, -22.0712, 1.4", "-21.5347, 55.3018, -22.432, 1.4", "-22.3566, 55.3244, -22.9445, 0.81", "-22.8633, 55.3357, -23.1517, 0.59", "-23.6263, 55.3749, -23.3147, 0.44", "-24.3929, 55.4513, -23.3589, 0.44", "-25.1702, 55.5796, -23.3362, 0.74", "-25.913, 55.7935, -23.278, 1.33", "-26.8165, 56.2148, -23.2256, 0.88", "-27.2169, 56.4966, -23.2816, 0.59", "-27.465, 56.7437, -23.3831, 0.59", "-27.814, 57.1811, -23.6383, 0.74", "-28.2458, 57.7943, -24.0849, 0.96", "-28.8033, 58.5925, -24.7683, 0.59", "-29.3802, 59.3719, -25.5281, 0.59", "-29.6804, 59.7633, -25.9074, 0.81", "-30.0595, 60.2111, -26.3232, 0.96", "-30.4229, 60.5744, -26.6345, 1.03", "-31.0383, 61.1269, -27.0288, 0.66", "-31.2268, 61.3019, -27.1266, 0.66", "-31.7331, 61.8527, -27.3704, 0.81", "-32.1798, 62.449, -27.6334, 0.81", "-32.5194, 63.0644, -27.8919, 0.66", "-32.7961, 63.7198, -28.1557, 0.66", "-33.1406, 64.7392, -28.5587, 0.52", "-33.3376, 65.3757, -28.8184, 0.81", "-33.4825, 65.8503, -29.0204, 0.74", "-33.8331, 66.8685, -29.4488, 0.59", "-34.047, 67.3663, -29.6406, 0.74", "-34.3328, 67.8589, -29.8067, 0.96", "-34.7742, 68.4506, -29.9382, 0.96", "-35.1606, 68.9075, -30.0016, 0.74", "-35.6953, 69.5011, -30.0453, 1.03", "-36.0812, 69.9168, -30.0108, 1.25", "-36.352, 70.2315, -29.9554, 0.81", "-36.9264, 70.9745, -29.7773, 0.59", "-37.2764, 71.4788, -29.6299, 0.66", "-37.5669, 71.9358, -29.4823, 0.66", "-38.3202, 73.201, -29.0428, 0.88", "-38.7022, 73.849, -28.8001, 1.11", "-38.9647, 74.2922, -28.6174, 1.03", "-39.2841, 74.8271, -28.3901, 1.25", "-39.4034, 75.026, -28.2979, 1.25" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "4.19239, 10.4323, -4.39834, 1.11", "4.63936, 10.9066, -4.6819, 1.11", "4.98954, 11.2853, -4.91558, 1.11", "5.54822, 11.9187, -5.28802, 1.11", "5.93142, 12.3749, -5.5684, 0.96", "6.56614, 13.0524, -5.98271, 1.55", "7.11817, 13.594, -6.31616, 1.62", "7.44327, 13.8785, -6.49821, 1.62", "7.94566, 14.2732, -6.71938, 1.25", "8.78794, 14.8666, -6.97794, 0.96", "10.0747, 15.682, -7.21257, 0.88", "10.6787, 16.0134, -7.24922, 1.55", "11.3382, 16.3253, -7.23331, 1.84", "12.3273, 16.7443, -7.15582, 1.11", "12.8466, 16.9548, -7.08784, 1.03", "13.4276, 17.2145, -6.97468, 1.25", "13.9896, 17.5404, -6.85688, 0.88", "14.5079, 17.9132, -6.7487, 0.88", "14.9933, 18.3204, -6.64879, 0.88", "15.5632, 18.8271, -6.52756, 0.88", "16.0505, 19.2884, -6.37061, 0.96", "16.5547, 19.8052, -6.18219, 0.96", "17.0149, 20.3283, -5.97702, 0.81", "17.692, 21.1455, -5.61547, 1.11", "18.1361, 21.6634, -5.33444, 1.4", "18.6477, 22.1829, -4.95431, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "3.86239, 8.98703, 2.16166, 1.62", "4.45789, 9.39895, 2.69213, 1.62", "5.26426, 9.89224, 3.41833, 1.25", "6.73123, 10.5808, 4.89112, 1.25", "7.50698, 10.8939, 5.7222, 1.25", "8.31641, 11.1161, 6.69307, 1.92", "8.65892, 11.1772, 7.12927, 2.5", "9.40377, 11.1979, 8.16027, 2.5", "10.9444, 11.0029, 10.4531, 1.77", "12.013, 10.6605, 12.0398, 0.96", "13.5208, 10.0089, 14.2732, 0.88", "13.9518, 9.79771, 14.9218, 0.88", "14.2919, 9.63765, 15.4182, 1.4", "14.628, 9.50613, 15.852, 1.4", "15.8541, 9.22321, 17.0937, 0.66", "16.3741, 9.2548, 17.5086, 0.66", "17.609, 9.75959, 18.2396, 0.88", "18.385, 10.2076, 18.636, 0.88", "19.3595, 10.8766, 19.0221, 0.74", "20.0858, 11.443, 19.2397, 1.4", "20.9219, 12.1509, 19.3919, 2.06", "21.7452, 12.8261, 19.4559, 1.84", "22.7324, 13.5983, 19.3997, 1.18", "23.7596, 14.3437, 19.3686, 1.18", "24.1767, 14.608, 19.4276, 1.03", "24.8739, 14.9628, 19.7172, 1.03", "25.3353, 15.1552, 20.1823, 0.59", "25.7636, 15.3588, 20.8684, 0.59", "26.603, 15.8301, 22.5778, 0.88", "27.5793, 16.469, 24.8265, 1.62", "27.9988, 16.7822, 25.8043, 1.62", "28.9751, 17.5719, 28.0657, 0.88", "29.4298, 17.9387, 29.0513, 0.88", "29.8492, 18.2884, 29.8663, 1.47", "30.144, 18.5376, 30.3337, 1.47", "30.9021, 19.1292, 31.245, 0.81", "31.325, 19.4007, 31.6531, 0.59", "31.7772, 19.6209, 32.0094, 0.59", "32.8805, 20.0989, 32.8887, 1.25", "34.6156, 20.8761, 34.3355, 0.74", "35.1591, 21.1751, 34.8426, 0.29", "35.6428, 21.4645, 35.355, 0.29", "35.9198, 21.6306, 35.6893, 0.59", "36.6532, 22.0862, 36.5932, 1.11", "37.0237, 22.2882, 37.0366, 1.11", "37.8191, 23.0081, 37.9888, 1.11", "38.2683, 23.6631, 38.7456, 0.59", "38.2806, 21.7847, 38.8702, 0.59", "38.4345, 19.8478, 39.3336, 0.52", "38.5409, 18.495, 39.654, 0.59", "45.3782, 20.7408, 45.7485, 0.59", "52.5488, 23.8478, 51.048, 0.59", "58.475, 28.345, 56.9065, 0.59", "64.3461, 33.7515, 62.0445, 0.59", "71.173, 39.5529, 65.2148, 0.59", "77.3234, 45.6588, 69.1363, 0.59", "83.8127, 50.6891, 73.8792, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.56761, 6.59878, 1.60166, 1.69", "-3.56761, 6.59878, 1.60166, 1.69", "-4.06046, 6.90672, 1.93229, 1.69", "-4.66516, 7.21502, 2.37787, 1.4", "-5.09247, 7.41489, 2.78681, 1.03", "-5.677, 7.70444, 3.41272, 0.88", "-6.07977, 7.92263, 3.87267, 0.88", "-6.58667, 8.18061, 4.53323, 0.59", "-7.04661, 8.4111, 5.19762, 0.44", "-7.89216, 8.83215, 6.50679, 0.37", "-8.18334, 8.97925, 6.97537, 0.37", "-8.65741, 9.22534, 7.75789, 0.37", "-9.7753, 9.84031, 9.69759, 1.03", "-10.0293, 9.99603, 10.1547, 1.62", "-16.81, 10.8056, 15.6477, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-3.87761, -1.23222, -14.5883, 0.74", "-5.32512, -2.23525, -14.5786, 0.74", "-7.02763, -3.36848, -14.5694, 1.03", "-8.51674, -4.34019, -14.5922, 1.25", "-9.70749, -5.12876, -14.6234, 1.62", "-10.6832, -5.76405, -14.6541, 1.84", "-11.9628, -6.54807, -14.6627, 1.84", "-13.0961, -7.16071, -14.6112, 1.99", "-14.287, -7.71546, -14.4978, 2.21", "-15.6784, -8.25353, -14.2965, 2.65", "-16.6655, -8.57257, -14.1384, 2.5", "-18.3333, -9.04409, -13.8849, 1.77", "-20.0996, -9.51988, -13.6734, 1.33", "-21.3006, -9.85197, -13.6166, 1.18", "-22.7244, -10.2611, -13.7071, 1.11", "-23.7363, -10.5887, -13.9931, 1.11", "-24.7787, -10.9737, -14.6298, 1.11", "-25.7746, -11.3725, -15.6068, 1.4", "-26.7659, -11.7474, -16.8698, 1.03", "-27.6007, -12.0272, -18.0935, 0.88", "-28.843, -12.3481, -20.0982, 0.88", "-30.1854, -12.5709, -22.4659, 1.47", "-31.2008, -12.6703, -24.3435, 1.77", "-32.3376, -12.6899, -26.5281, 1.84", "-32.7396, -12.665, -27.3209, 2.06", "-33.4678, -12.5705, -28.7958, 1.77", "-34.5896, -12.3269, -31.0118, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-5.36761, -2.06247, 9.10166, 2.06", "-5.36761, -2.06247, 9.10166, 2.06", "-6.14946, -1.98237, 9.51521, 2.06", "-6.73727, -1.95069, 9.80242, 2.06", "-8.26248, -1.97447, 10.5117, 1.84", "-9.1116, -2.05477, 10.8951, 1.84", "-9.76118, -2.16631, 11.1853, 1.99", "-10.9301, -2.46737, 11.706, 1.55", "-11.8811, -2.82509, 12.119, 1.03", "-12.6499, -3.20827, 12.4272, 0.88", "-13.3964, -3.68797, 12.6437, 1.18", "-13.9996, -4.12502, 12.7754, 1.18", "-14.462, -4.49099, 12.8519, 1.47", "-15.1483, -5.08907, 12.9117, 1.25", "-15.824, -5.70266, 13.0009, 1.03", "-16.4333, -6.24935, 13.1374, 1.62", "-17.0436, -6.78446, 13.364, 1.69", "-17.5142, -7.17247, 13.6062, 1.33", "-18.3547, -7.81054, 14.1782, 1.03", "-19.39, -8.46857, 15.0788, 0.88", "-20.1139, -8.81829, 15.8809, 1.11", "-20.7411, -8.99276, 16.7044, 1.33", "-21.1321, -9.01046, 17.2833, 1.33", "-21.5177, -8.90781, 17.8813, 1.18", "-21.9765, -8.63707, 18.5724, 0.88", "-22.629, -8.13443, 19.4157, 1.18", "-23.0359, -7.83166, 19.8736, 1.33", "-23.3946, -7.63339, 20.2309, 1.33", "-24.013, -7.44856, 20.8101, 0.59", "-24.8611, -7.49464, 21.5309, 0.52", "-25.2915, -7.76279, 21.8456, 0.59", "-25.8915, -8.59814, 22.3192, 0.59", "-26.4693, -9.74687, 22.8953, 0.59", "-26.7689, -10.4317, 23.2318, 1.03", "-27.1119, -11.2869, 23.6905, 1.03", "-27.3954, -11.9983, 24.1104, 1.03", "-27.93, -13.1867, 24.967, 1.03", "-28.4367, -13.9707, 25.7779, 0.66", "-28.8636, -14.3325, 26.4018, 0.66", "-29.6158, -14.632, 27.3903, 0.74", "-30.1477, -14.727, 28.0425, 0.81", "-30.6424, -14.7621, 28.6266, 0.52", "-31.5389, -14.7755, 29.6019, 0.52", "-31.923, -14.8041, 30.0238, 0.44", "-32.482, -15.056, 30.7672, 0.37", "-32.7509, -15.4462, 31.2031, 0.37", "-33.0003, -16.0381, 31.6486, 1.11", "-33.2132, -16.6454, 31.9968, 1.4", "-33.4182, -17.4451, 32.372, 1.4", "-33.6701, -18.6593, 32.8893, 0.81", "-33.8398, -19.5736, 33.2357, 0.29", "-33.9911, -20.1782, 33.4743, 0.29", "-34.1698, -20.6637, 33.6783, 0.29", "-39.0883, -24.0664, 39.1481, 0.29", "-45.0407, -27.5542, 43.4052, 0.29", "-50.4864, -31.0344, 48.2988, 0.29", "-55.5401, -33.4369, 54.1382, 0.29", "-60.6058, -35.9462, 59.9242, 0.29", "-66.4341, -39.6723, 64.1607, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.19761, -5.90622, 6.85166, 1.77", "-2.19761, -5.90622, 6.85166, 1.77", "-2.1833, -6.83149, 6.96353, 1.77", "-2.16053, -8.4178, 7.14727, 1.47", "-2.14798, -10.0142, 7.31353, 1.25", "-2.16942, -11.2338, 7.42586, 1.62", "-2.21225, -12.2628, 7.51051, 1.92", "-2.27098, -13.1603, 7.58543, 2.14", "-2.37737, -14.2778, 7.67691, 2.14", "-2.59672, -15.8291, 7.80396, 1.55", "-2.87592, -17.288, 7.91513, 1.33", "-3.12877, -18.3933, 8.00875, 1.55", "-3.31656, -19.0915, 8.0701, 1.92", "-3.5834, -19.9383, 8.17284, 2.21", "-3.78326, -20.4964, 8.25615, 2.5", "-4.01695, -21.1551, 8.37574, 2.5", "-4.23176, -21.8816, 8.51857, 2.36", "-4.46286, -22.8784, 8.72004, 1.69", "-4.68499, -24.1854, 8.97376, 1.25", "-4.79797, -25.4068, 9.20247, 1.4", "-4.80276, -26.4905, 9.38072, 1.62", "-4.68659, -27.8133, 9.56929, 2.06", "-4.54517, -28.6285, 9.67663, 2.36", "-4.40212, -29.157, 9.73713, 2.36", "-4.04919, -30.1644, 9.83428, 2.14", "-3.4745, -31.5779, 9.95939, 1.62", "-2.96738, -32.7684, 10.0522, 1.25", "-2.44721, -33.9967, 10.1602, 1.03", "-1.892, -35.3777, 10.3082, 1.03", "-1.47842, -36.5342, 10.4598, 1.03", "-1.02816, -38.0311, 10.7071, 1.03", "-0.831822, -38.9227, 10.8873, 0.96", "-0.772263, -39.627, 11.0526, 0.96", "-0.853097, -40.2548, 11.2177, 0.96", "-1.2248, -41.0817, 11.4927, 0.96", "-1.58833, -41.5311, 11.6655, 0.88", "-1.96968, -41.8632, 11.801, 1.18", "-2.58532, -42.3243, 11.9737, 1.18", "-3.18168, -42.7457, 12.1267, 1.33", "-3.86833, -43.2236, 12.3176, 1.33", "-4.4587, -43.6403, 12.5025, 1.4", "-5.09157, -44.1155, 12.7311, 1.55", "-5.69778, -44.6188, 13.0002, 1.55", "-6.38393, -45.3065, 13.3866, 1.84", "-6.79945, -45.8086, 13.6607, 2.14", "-7.20642, -46.414, 13.9548, 1.99", "-7.77405, -47.5073, 14.4249, 0.88", "-8.16165, -48.5171, 14.7944, 0.88", "-8.48842, -49.7098, 15.1631, 0.81", "-8.67131, -50.7643, 15.4133, 0.74", "-8.84108, -52.0957, 15.6881, 0.74", "-8.9243, -53.3395, 15.9072, 1.03", "-8.92104, -54.4571, 16.0479, 1.4", "-8.88397, -55.1524, 16.0996, 1.69", "-8.80726, -55.9319, 16.1199, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.44239, -10.2522, -2.20834, 3.39", "1.44239, -10.2522, -2.20834, 3.39", "1.91129, -11.7587, -2.3408, 3.39", "2.2899, -12.974, -2.50282, 3.02", "2.67326, -14.2045, -2.66687, 3.02", "3.17736, -15.8227, -2.8826, 3.02", "3.71885, -17.5608, -3.11432, 3.24", "4.1272, -18.8425, -3.30344, 3.54", "4.59082, -20.2235, -3.55493, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.50345, 11.5497, -0.359339, 0.88", "2.99451, 26.4754, -0.359339, 0.88", "4.48557, 41.4011, -0.359339, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-39.4034, 75.026, -28.2979, 0.44", "-40.9727, 76.5997, -29.2577, 0.44", "-41.6788, 77.3721, -29.6767, 0.37", "-41.9947, 77.8082, -29.8264, 0.66", "-42.4779, 78.6068, -30.0196, 0.66", "-42.9362, 79.5134, -30.1793, 0.59", "-43.215, 80.1966, -30.2751, 0.81", "-43.4228, 81.0562, -30.296, 0.81", "-43.5867, 83.0318, -30.3156, 0.52", "-43.5041, 83.9617, -30.3371, 0.52", "-43.1295, 85.382, -30.4305, 0.44", "-42.5475, 86.7135, -30.6132, 0.44", "-41.7686, 87.9775, -30.8963, 0.74", "-41.0802, 88.8479, -31.157, 0.74", "-39.9463, 90.0301, -31.6329, 0.44", "-39.0826, 90.8503, -31.9614, 0.59", "-38.214, 91.6518, -32.2964, 0.59", "-37.3448, 92.4833, -32.667, 0.59", "-36.6672, 93.2183, -33.0131, 0.37", "-36.175, 93.8047, -33.3006, 0.37", "-35.4345, 94.7319, -33.7689, 0.59", "-34.705, 95.6177, -34.2422, 0.37", "-34.0463, 96.3812, -34.6655, 0.81", "-33.3577, 97.1502, -35.1137, 0.81", "-32.1012, 98.5628, -35.977, 0.44", "-31.137, 99.6757, -36.666, 0.44", "-30.4612, 100.444, -37.1854, 0.81", "-29.7769, 101.23, -37.7281, 0.44", "-29.4076, 101.682, -38.05, 0.59", "-28.5338, 102.833, -38.9185, 0.59", "-28.0265, 103.658, -39.6317, 0.44", "-27.5182, 104.809, -40.6747, 0.44", "-27.2275, 105.792, -41.6885, 0.96", "-27.1501, 106.251, -42.2328, 1.18", "-27.1363, 106.67, -42.7893, 1.18", "-27.3341, 107.752, -44.7578, 0.44", "-27.6241, 108.51, -46.3352, 0.37", "-27.9512, 109.093, -47.9651, 0.66", "-28.1128, 109.326, -48.7304, 0.66", "-28.3825, 109.667, -49.9534, 0.66", "-29.3667, 110.896, -54.8358, 0.44", "-29.5293, 111.094, -55.707, 0.44", "-30.3426, 112.106, -60.3442, 0.29", "-30.5124, 112.35, -61.3289, 0.29", "-30.6957, 112.667, -62.4506, 0.29", "-31.0647, 113.47, -64.8278, 0.74", "-31.4626, 114.645, -67.5152, 0.44", "-31.5392, 114.961, -68.1, 0.44", "-31.6916, 115.785, -69.1771, 0.37", "-31.8339, 116.665, -70.1332, 0.88", "-32.0728, 118.171, -71.3461, 0.29", "-32.2035, 118.797, -71.7021, 0.52", "-32.5134, 119.95, -72.2287, 0.15", "-32.8443, 120.963, -72.7161, 0.22", "-33.4118, 122.546, -73.4843, 0.22", "-33.974, 123.925, -74.1162, 0.22", "-34.5104, 125.223, -74.67, 0.22", "-35.3498, 127.12, -75.5445, 1.47", "-35.9927, 128.508, -76.2556, 0.66", "-36.3884, 129.397, -76.7335, 0.96", "-36.9864, 130.872, -77.5198, 0.22", "-37.3587, 131.873, -77.9832, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-39.4034, 75.026, -28.2979, 0.37", "-39.189, 77.4095, -27.8749, 0.37", "-38.9684, 78.5906, -27.775, 0.37", "-38.7823, 79.7096, -27.5746, 0.37", "-38.6222, 81.3852, -27.1374, 0.74", "-38.6131, 82.8028, -26.705, 0.29", "-38.7764, 84.4703, -26.1563, 0.29", "-38.8857, 85.2534, -25.8853, 0.52", "-39.2571, 86.9774, -25.0172, 0.44", "-39.5484, 88.0746, -24.3476, 0.29", "-39.8035, 89.0315, -23.7221, 0.29", "-40.0532, 90.0938, -22.9879, 0.29", "-40.3519, 91.8878, -21.7947, 0.44", "-40.5066, 93.3431, -20.856, 0.44", "-40.5205, 95.1939, -19.7911, 0.52", "-40.3673, 96.6671, -18.9747, 0.37", "-40.1187, 97.8431, -18.3359, 0.37", "-39.716, 99.1095, -17.7021, 1.11" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "18.6477, 22.1829, -4.95431, 0.29", "19.638, 21.8211, -3.60494, 0.29", "20.5651, 21.5309, -2.50236, 0.59", "21.472, 21.2489, -1.55623, 0.74", "21.9687, 21.1012, -1.079, 0.37", "22.7331, 20.896, -0.292578, 0.37", "23.1577, 20.7929, 0.178003, 0.66", "23.4746, 20.7535, 0.550151, 0.96", "23.9313, 20.7392, 1.26571, 1.25", "24.6204, 20.7988, 2.63353, 0.37", "25.2442, 20.9638, 4.07619, 0.37", "25.4491, 21.048, 4.58277, 0.37", "25.8969, 21.2525, 5.61289, 0.74", "26.6995, 21.5953, 7.17407, 0.66", "27.3638, 21.8544, 8.22323, 0.52", "27.89, 21.9994, 8.81112, 0.66", "28.5422, 22.1019, 9.303, 0.66", "29.4348, 22.18, 9.80265, 0.37", "30.4705, 22.1961, 10.2212, 0.52", "31.0475, 22.1641, 10.4007, 0.52", "32.0545, 22.0715, 10.6865, 0.66", "32.6199, 22.0004, 10.8378, 0.88", "33.3728, 21.9092, 11.0215, 0.88", "34.2472, 21.8336, 11.2748, 0.66", "35.3424, 21.7982, 11.6133, 0.29", "36.3017, 21.8256, 11.9052, 0.29", "37.7547, 21.9984, 12.3327, 0.88", "38.1571, 22.0647, 12.4497, 0.88", "39.7687, 22.3915, 12.8958, 0.29", "41.0115, 22.694, 13.208, 0.29", "42.1993, 23.0264, 13.4752, 0.96", "43.6117, 23.4591, 13.7686, 0.29", "44.6387, 23.7813, 13.9775, 0.29", "45.589, 24.0608, 14.1486, 0.81", "46.3351, 24.2645, 14.2398, 0.81", "46.9968, 24.4344, 14.3156, 0.81", "47.9994, 24.6684, 14.4243, 0.59", "49.1656, 24.8932, 14.5514, 0.29", "50.1952, 25.1286, 14.6782, 0.81", "51.212, 25.364, 14.8126, 0.22", "52.1143, 25.5552, 14.93, 0.22", "52.686, 25.6531, 14.9926, 0.52", "53.4735, 25.7547, 15.0299, 0.22", "61.6641, 27.0016, 19.7942, 0.22", "69.2977, 28.4976, 25.3508, 0.22", "77.9672, 28.3362, 29.3548, 0.22", "86.5558, 26.4509, 33.0994, 0.22", "95.1373, 25.7779, 37.2382, 0.22", "102.314, 23.8428, 43.2456, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "18.6477, 22.1829, -4.95431, 0.81", "19.8435, 22.2726, -4.5914, 0.81", "20.409, 22.251, -4.45342, 1.03", "21.9075, 22.1286, -4.23352, 0.96", "22.7275, 22.071, -4.15727, 0.96", "23.6829, 22.0487, -4.09865, 0.59", "24.3474, 22.0703, -4.07268, 0.66", "25.2378, 22.1062, -4.06705, 0.66", "26.2975, 22.2434, -4.12304, 0.59", "26.8513, 22.4112, -4.21481, 0.81", "27.5513, 22.7543, -4.34916, 0.96", "28.1955, 23.1561, -4.47644, 1.25", "28.6615, 23.4591, -4.56198, 1.4", "29.2484, 23.8262, -4.64328, 1.4", "30.2092, 24.3295, -4.72322, 0.59", "30.6006, 24.4634, -4.74739, 0.59", "31.416, 24.5772, -4.78076, 0.59", "32.3079, 24.5619, -4.80027, 1.03", "32.9421, 24.4829, -4.80311, 1.18", "33.4951, 24.3665, -4.77454, 1.18", "34.3903, 24.1215, -4.67675, 0.74", "35.2532, 23.8632, -4.52549, 0.66", "35.6639, 23.742, -4.43584, 0.96", "36.2, 23.6079, -4.31461, 0.96", "37.1617, 23.4158, -4.10481, 1.03", "37.6159, 23.3555, -4.00686, 1.03", "38.8786, 23.3338, -3.75443, 0.59", "39.5629, 23.4006, -3.63572, 0.59", "40.7826, 23.6151, -3.46589, 0.59", "41.3786, 23.7636, -3.40709, 0.81", "41.9344, 23.9545, -3.38295, 0.81", "43.0643, 24.4356, -3.39688, 0.37", "43.7738, 24.7634, -3.44965, 0.66", "44.4031, 25.0303, -3.50249, 0.74", "44.7975, 25.1717, -3.54454, 0.74", "45.5679, 25.3643, -3.64366, 0.74", "46.393, 25.4549, -3.76407, 0.52", "47.5397, 25.4252, -3.94491, 0.74", "48.4039, 25.3468, -4.06287, 0.88", "48.8785, 25.2952, -4.10152, 0.96", "49.3512, 25.2489, -4.10996, 1.18", "50.0723, 25.2018, -4.07078, 1.18", "50.6226, 25.2148, -3.98718, 0.66", "51.6035, 25.4051, -3.7244, 0.59", "52.2527, 25.6291, -3.43461, 0.59", "52.6851, 25.8216, -3.18796, 0.74", "53.0247, 26.0044, -2.9579, 0.74", "53.3607, 26.2058, -2.70032, 0.74", "54.004, 26.6155, -2.15186, 0.59", "54.8598, 27.1871, -1.34779, 0.96", "55.2677, 27.4525, -0.960434, 1.25", "55.4899, 27.5897, -0.734601, 1.25" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "83.8127, 50.6891, 73.8792, 0.29", "89.3048, 53.88, 79.5912, 0.29", "95.5835, 57.1275, 84.3895, 0.29", "102.028, 61.077, 88.4039, 0.29", "107.658, 64.5409, 93.8223, 0.29", "112.898, 68.9792, 98.9485, 0.29", "116.955, 73.9109, 104.681, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "83.8127, 50.6891, 73.8792, 0.29", "93.5324, 55.458, 82.1189, 0.29", "101.855, 62.8621, 90.0223, 0.29", "108.601, 71.3963, 98.3191, 0.29", "115.984, 77.7243, 107.863, 0.29", "123.008, 84.8324, 117.151, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-34.5896, -12.3269, -31.0118, 0.74", "-36.1941, -13.4884, -31.3694, 0.74", "-37.0545, -13.9461, -31.5294, 0.74", "-37.7814, -14.2377, -31.6745, 0.74", "-38.9262, -14.4894, -32.0407, 0.66", "-39.7559, -14.5511, -32.3941, 0.66", "-40.6336, -14.5488, -32.8194, 0.59", "-41.2374, -14.4289, -33.12, 1.25", "-41.7269, -14.2846, -33.3974, 1.25", "-43.2185, -13.8181, -34.3196, 0.66", "-43.9605, -13.6157, -34.7994, 0.66", "-44.3621, -13.5693, -35.0675, 0.96", "-44.9604, -13.6303, -35.4624, 0.96", "-45.3789, -13.7912, -35.8364, 0.96", "-46.0177, -14.3091, -36.7611, 0.74", "-46.3572, -14.7469, -37.4756, 0.52", "-46.6969, -15.293, -38.3708, 0.81", "-46.9156, -15.6953, -39.0343, 1.03", "-47.7105, -17.3138, -41.7493, 1.25", "-48.2484, -18.4586, -43.721, 0.66", "-48.5149, -19.0071, -44.6967, 0.66", "-48.6836, -19.2836, -45.2088, 1.11", "-48.8391, -19.4482, -45.5151, 1.33", "-49.0733, -19.614, -45.7735, 1.18", "-49.4606, -19.8165, -45.9164, 1.18", "-50.3546, -20.2608, -46.1178, 0.59", "-51.2759, -20.7841, -46.353, 0.52", "-52.0017, -21.271, -46.5991, 0.52", "-52.6008, -21.757, -46.9096, 0.81", "-53.1847, -22.3364, -47.3592, 0.66", "-53.7305, -22.9458, -47.8846, 0.66", "-54.1229, -23.432, -48.3451, 1.33", "-54.3857, -23.775, -48.6796, 1.33", "-55.2054, -24.8511, -49.7421, 0.66", "-55.9271, -25.7667, -50.6456, 0.52", "-56.2687, -26.1658, -51.0501, 0.52", "-56.7154, -26.6104, -51.4561, 0.96", "-57.038, -26.8921, -51.6657, 1.18", "-57.2729, -27.0823, -51.7525, 1.18", "-57.7692, -27.4914, -51.7973, 0.81", "-58.4539, -28.0969, -51.7407, 0.74", "-59.3074, -28.9231, -51.5821, 0.59", "-59.7362, -29.3325, -51.4687, 0.74", "-60.3091, -29.8525, -51.2856, 0.74", "-60.9239, -30.3532, -51.0788, 0.59", "-61.5041, -30.7959, -50.8739, 0.44", "-62.1546, -31.2852, -50.6364, 0.44", "-62.7807, -31.7516, -50.4365, 0.44", "-63.4425, -32.2935, -50.2307, 0.44", "-64.5322, -33.2915, -49.9016, 0.44", "-64.805, -33.5935, -49.8151, 0.96", "-65.3082, -34.3392, -49.6695, 1.18", "-65.6332, -35.0188, -49.5874, 0.81", "-66.0048, -36.1631, -49.5579, 0.59", "-66.1316, -36.669, -49.5993, 0.74", "-66.3271, -37.4892, -49.7207, 0.66", "-66.5771, -38.2881, -49.8753, 0.66", "-66.8157, -38.8744, -50.0131, 0.81", "-67.3446, -39.9411, -50.2705, 0.59", "-67.8639, -40.8693, -50.4833, 0.52", "-68.3518, -41.7696, -50.6631, 0.81", "-68.7837, -42.6468, -50.7992, 1.4", "-68.9844, -43.1691, -50.8175, 1.69", "-69.266, -44.1925, -50.7334, 0.52", "-69.4626, -45.043, -50.6664, 0.44", "-69.6318, -45.9181, -50.7117, 0.44", "-69.7561, -46.5459, -50.8687, 0.29", "-70.0594, -47.7239, -51.336, 1.4", "-70.1373, -47.9591, -51.4484, 1.4", "-71.0033, -50.0458, -52.7183, 0.52", "-71.5666, -51.1966, -53.5076, 0.52", "-71.8885, -51.7904, -53.9364, 0.52", "-72.3763, -52.6739, -54.5736, 0.74", "-72.6976, -53.2654, -54.9839, 0.88", "-73.374, -54.6049, -55.7642, 0.44", "-73.6831, -55.2717, -56.0466, 0.59", "-74.0465, -56.0139, -56.3307, 0.59", "-74.46, -56.7653, -56.6484, 0.37", "-74.7215, -57.2187, -56.8545, 0.59", "-75.2162, -58.0224, -57.2146, 0.81", "-75.7037, -58.7458, -57.4831, 1.18", "-76.0222, -59.1889, -57.6539, 1.18", "-76.9022, -60.2883, -58.1504, 0.74" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-34.5896, -12.3269, -31.0118, 0.81", "-35.0817, -10.4579, -31.0769, 0.81", "-35.3437, -9.77356, -31.0443, 0.81", "-35.7846, -8.9578, -30.9545, 0.81", "-36.2929, -8.3298, -30.8557, 0.88", "-36.9392, -7.845, -30.7774, 0.66", "-38.1648, -7.19749, -30.7017, 0.59", "-39.0608, -7.04722, -30.6976, 0.59", "-39.8794, -7.05943, -30.8425, 0.59", "-40.9753, -7.22227, -31.2185, 0.74", "-42.1555, -7.50498, -31.852, 1.03", "-42.5683, -7.61729, -32.1199, 1.62", "-43.1266, -7.76435, -32.5293, 1.92", "-44.8895, -8.16702, -33.7991, 0.88", "-45.5652, -8.2989, -34.2769, 0.66", "-46.5566, -8.48358, -34.9453, 0.66", "-47.8945, -8.72591, -35.7969, 0.66", "-48.4881, -8.81807, -36.1574, 0.66", "-49.7753, -8.93744, -36.8661, 0.66", "-50.5908, -8.95169, -37.2719, 0.44", "-51.612, -8.90028, -37.8145, 0.44", "-52.353, -8.81361, -38.2531, 0.44", "-53.2165, -8.65776, -38.87, 0.66", "-53.8155, -8.52562, -39.3352, 0.66", "-54.5185, -8.31944, -39.8929, 0.66", "-55.1234, -8.10364, -40.3273, 0.66", "-55.8089, -7.79177, -40.7696, 0.44", "-56.2833, -7.54352, -41.0634, 0.74", "-56.9881, -7.15124, -41.4807, 0.74", "-57.6151, -6.79392, -41.848, 0.74", "-58.1493, -6.48963, -42.1467, 0.74", "-58.7621, -6.14785, -42.474, 0.37", "-59.6826, -5.76183, -42.9882, 0.37", "-60.0879, -5.69178, -43.2344, 0.37", "-60.5251, -5.7309, -43.5398, 0.88", "-61.115, -5.86999, -43.9703, 1.18", "-61.5971, -6.0174, -44.3615, 1.33", "-62.8265, -6.44095, -45.4417, 0.44", "-63.7024, -6.71625, -46.2833, 0.44", "-64.3893, -6.8627, -47.0467, 0.44", "-64.9927, -6.87694, -47.7958, 0.88", "-65.6183, -6.71111, -48.6294, 1.03", "-65.8641, -6.54915, -48.9595, 1.03", "-66.4792, -5.87138, -49.6744, 0.44", "-66.8473, -5.41713, -50.061, 0.44", "-67.2925, -4.92308, -50.4256, 0.44", "-67.6711, -4.59871, -50.6952, 0.59", "-68.3179, -4.19848, -51.0759, 0.59", "-68.9945, -3.93189, -51.4468, 0.74", "-70.2632, -3.70822, -52.0881, 0.37", "-71.0713, -3.70203, -52.5089, 0.37", "-72.2809, -3.87188, -53.1637, 0.59", "-72.7588, -4.0011, -53.4386, 0.88", "-73.6859, -4.37552, -54.0283, 0.66", "-74.313, -4.68228, -54.4483, 0.74", "-74.9844, -5.05198, -54.8931, 0.59", "-75.5619, -5.39253, -55.3023, 0.52", "-76.1022, -5.70754, -55.6854, 0.88", "-77.0894, -6.2099, -56.4146, 0.59", "-77.6606, -6.44143, -56.8486, 0.44", "-78.2891, -6.63208, -57.3407, 1.03", "-78.7263, -6.72116, -57.6818, 1.33", "-78.9963, -6.74994, -57.8834, 1.4", "-80.1375, -6.80143, -58.6658, 0.44", "-80.6004, -6.81261, -58.9642, 0.44", "-81.2854, -6.8128, -59.3787, 0.44", "-82.0082, -6.78995, -59.7837, 0.44", "-83.1801, -6.74303, -60.4349, 0.59", "-83.9854, -6.71075, -60.9475, 0.88", "-84.7106, -6.65536, -61.5318, 1.11", "-85.6325, -6.55123, -62.3938, 0.52", "-86.2836, -6.43639, -63.071, 0.52", "-86.8204, -6.31464, -63.6663, 1.03", "-88.0039, -6.02137, -65.0732, 1.25", "-89.4109, -5.73109, -66.7352, 0.52", "-89.8972, -5.65238, -67.2942, 0.59", "-90.5549, -5.5769, -68.0049, 0.59", "-91.6049, -5.46173, -69.001, 0.44", "-92.3362, -5.37365, -69.5693, 0.44", "-93.4193, -5.19183, -70.262, 0.44", "-93.9953, -5.06064, -70.6173, 0.44", "-94.7624, -4.78761, -71.2358, 0.66", "-95.2831, -4.50526, -71.7865, 0.88", "-95.5457, -4.29296, -72.1238, 0.88", "-96.2677, -3.51807, -73.1718, 0.52", "-96.6881, -2.9482, -73.8577, 0.52", "-97.2452, -2.04791, -74.9386, 0.81", "-97.6099, -1.34269, -75.7563, 0.44", "-97.8064, -0.905925, -76.2598, 0.44", "-98.0048, -0.337544, -76.885, 0.74", "-98.1028, 0.0916748, -77.305, 0.96", "-98.2229, 1.20469, -78.2091, 0.66", "-98.2681, 1.90121, -78.7483, 0.44", "-98.3297, 2.65834, -79.3746, 0.44", "-98.4502, 3.37364, -80.0481, 0.44", "-98.5369, 3.61803, -80.315, 0.44", "-98.9044, 4.12208, -80.9461, 0.96", "-99.8791, 4.66943, -81.8683, 0.66", "-100.554, 4.89418, -82.377, 0.96", "-100.886, 4.9809, -82.5796, 1.25", "-101.281, 5.07286, -82.7947, 1.25", "-101.906, 5.23714, -83.1237, 1.25", "-102.971, 5.6307, -83.6982, 0.37", "-103.593, 6.0136, -84.0263, 0.37", "-103.992, 6.34123, -84.2785, 0.66", "-104.295, 6.61238, -84.4687, 0.81", "-104.77, 7.04379, -84.7355, 0.81", "-105.51, 7.71531, -85.0631, 0.44", "-106.029, 8.1459, -85.2081, 0.44", "-106.996, 8.83947, -85.378, 0.44", "-108.078, 9.56795, -85.4964, 0.44", "-108.903, 10.1184, -85.5427, 0.66", "-109.766, 10.688, -85.5466, 0.96", "-110.641, 11.2578, -85.4884, 0.59", "-111.384, 11.7599, -85.411, 0.44", "-112.149, 12.2889, -85.324, 0.44", "-112.89, 12.7986, -85.2866, 0.44", "-113.54, 13.189, -85.3328, 0.44", "-114.303, 13.5349, -85.4994, 0.74", "-114.686, 13.6591, -85.631, 0.74", "-115.795, 13.9008, -86.0663, 0.52", "-116.304, 13.9819, -86.2909, 0.59", "-117.247, 14.112, -86.7426, 0.44", "-117.949, 14.2383, -87.0949, 0.44", "-118.813, 14.4794, -87.5826, 0.37", "-119.668, 14.8089, -88.0729, 0.52", "-120.335, 15.1455, -88.4681, 1.11", "-120.847, 15.4529, -88.8133, 1.25", "-121.442, 15.8534, -89.2852, 0.37", "-122.286, 16.4355, -90.061, 0.37", "-122.858, 16.802, -90.645, 0.29", "-123.312, 17.0679, -91.1624, 0.29", "-124.126, 17.5288, -92.1486, 0.59", "-124.766, 17.9092, -92.9606, 0.59", "-125.127, 18.138, -93.4236, 0.29", "-125.411, 18.3421, -93.7589, 0.37", "-125.857, 18.7234, -94.2538, 0.37", "-126.468, 19.3033, -94.8188, 0.44", "-126.986, 19.8264, -95.1769, 0.44", "-127.483, 20.3306, -95.444, 0.44", "-128.091, 20.8965, -95.7331, 0.37", "-128.342, 21.0985, -95.8378, 0.37", "-129.0, 21.5288, -96.06, 0.88", "-129.388, 21.738, -96.1738, 1.11", "-130.089, 22.0846, -96.3705, 1.11", "-131.188, 22.6552, -96.6714, 0.37", "-132.035, 23.1433, -96.8985, 0.37", "-132.515, 23.4727, -97.0224, 0.66", "-133.214, 24.1076, -97.2416, 0.66", "-133.743, 24.7338, -97.4494, 0.37", "-134.167, 25.3912, -97.6668, 0.52", "-134.315, 25.6795, -97.7626, 0.66", "-134.525, 26.1484, -97.9133, 0.66", "-135.092, 27.4444, -98.3147, 0.37", "-135.368, 28.0088, -98.4625, 0.37", "-135.7, 28.4902, -98.5327, 0.37", "-136.073, 28.8783, -98.5261, 0.88", "-136.698, 29.3887, -98.4425, 0.81", "-137.012, 29.602, -98.3811, 0.81", "-137.815, 30.0869, -98.1904, 0.29", "-138.872, 30.7017, -97.9303, 0.29", "-139.526, 31.1218, -97.7173, 0.52", "-140.309, 31.683, -97.4443, 0.44", "-140.689, 31.9733, -97.3109, 0.44", "-141.186, 32.3832, -97.1145, 0.81", "-141.762, 32.9273, -96.8629, 0.81", "-142.816, 34.1011, -96.3464, 0.29", "-143.233, 34.6029, -96.1298, 0.44", "-143.624, 35.086, -95.8987, 0.29", "-144.062, 35.6, -95.6509, 0.29", "-144.644, 36.2383, -95.3584, 0.29", "-145.096, 36.7001, -95.171, 0.29", "-145.639, 37.2047, -94.9899, 0.59", "-146.687, 38.1526, -94.6248, 0.22", "-147.364, 38.7538, -94.3911, 0.22", "-147.728, 39.049, -94.2637, 0.52", "-148.072, 39.2864, -94.1349, 0.52" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-66.4341, -39.6723, 64.1607, 0.29", "-73.6228, -44.5973, 71.0425, 0.29", "-79.2539, -51.2715, 77.9746, 0.29", "-84.5264, -57.8327, 85.2827, 0.29", "-89.2104, -65.0603, 92.3917, 0.29", "-92.345, -72.8435, 99.7926, 0.29", "-96.3957, -80.5144, 106.85, 0.29", "-100.477, -88.2034, 113.871, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-66.4341, -39.6723, 64.1607, 0.29", "-74.904, -44.5185, 71.5472, 0.29", "-83.3697, -50.8046, 77.8239, 0.29", "-90.9739, -57.8338, 84.4424, 0.29", "-97.4859, -65.3011, 91.7321, 0.29", "-103.447, -73.5413, 98.6922, 0.29", "-108.24, -83.0923, 104.921, 0.29", "-113.885, -91.5358, 111.912, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-8.80726, -55.9319, 16.1199, 0.66", "-10.0135, -58.6996, 15.1609, 0.66", "-10.3197, -59.4356, 14.9318, 1.03", "-10.6155, -60.2094, 14.7833, 1.03", "-11.1412, -61.6943, 14.6339, 1.03", "-11.4898, -62.8245, 14.5944, 1.03", "-11.8539, -64.2112, 14.6198, 0.81", "-12.0704, -65.4641, 14.8427, 0.81", "-12.1943, -67.3169, 15.2902, 1.4", "-12.1783, -68.1163, 15.5264, 1.62", "-12.0513, -69.3175, 15.9694, 1.4", "-11.9085, -70.1132, 16.2791, 1.92", "-11.6437, -71.1972, 16.7016, 1.4", "-11.1515, -72.8427, 17.3381, 1.69", "-10.795, -73.9424, 17.706, 1.11", "-10.3233, -75.417, 18.1635, 0.81", "-10.1178, -76.1125, 18.3621, 1.11", "-9.90446, -76.9415, 18.574, 1.25", "-9.52508, -78.7838, 19.0031, 0.96", "-9.41374, -79.7136, 19.192, 0.74", "-9.3976, -80.6, 19.3473, 0.81", "-9.57724, -81.9387, 19.5233, 0.52", "-9.83723, -82.8913, 19.6073, 0.88", "-10.1594, -83.6909, 19.6079, 0.88", "-10.6103, -84.5641, 19.4876, 0.88", "-11.0358, -85.3373, 19.3118, 0.66", "-11.4671, -86.1668, 19.0209, 0.66", "-11.9939, -87.338, 18.4073, 0.88", "-12.2884, -88.121, 17.8971, 1.33", "-12.4716, -88.7235, 17.475, 1.47", "-12.6213, -89.292, 17.0747, 1.62", "-12.9165, -90.4534, 16.311, 0.74", "-13.2489, -91.7756, 15.6052, 0.74", "-13.5427, -92.8066, 15.2245, 0.74", "-13.793, -93.6292, 15.0686, 0.74", "-14.1292, -94.7686, 15.0214, 0.66", "-14.422, -95.9592, 15.133, 0.66", "-14.7267, -97.6892, 15.5066, 0.96", "-14.8044, -98.5855, 15.7663, 0.88", "-14.7945, -99.3939, 16.0094, 0.88", "-14.6374, -100.909, 16.4301, 0.52", "-14.3806, -102.308, 16.7807, 1.18", "-14.2394, -102.994, 16.9064, 1.62", "-14.0988, -103.764, 16.9891, 1.62", "-13.9421, -104.85, 17.0826, 0.96", "-13.863, -105.689, 17.1474, 0.96", "-13.8325, -106.954, 17.2381, 0.66", "-13.9596, -108.609, 17.34, 0.52", "-14.1809, -110.092, 17.4719, 0.59", "-14.5666, -111.792, 17.6724, 0.74", "-14.7017, -112.233, 17.7419, 1.11", "-15.0366, -113.073, 17.9429, 1.25", "-15.72, -114.415, 18.381, 0.88", "-16.1545, -115.081, 18.6861, 0.66", "-16.6185, -115.666, 19.0147, 0.66", "-17.0782, -116.181, 19.3214, 0.59", "-17.9994, -117.22, 19.887, 0.59", "-18.5225, -117.817, 20.166, 0.44", "-19.1606, -118.593, 20.435, 0.44", "-19.7024, -119.314, 20.5857, 0.74", "-20.1491, -119.985, 20.6635, 0.74", "-20.5416, -120.626, 20.6895, 0.66", "-21.0625, -121.564, 20.6484, 1.03", "-21.4554, -122.311, 20.6163, 1.4", "-21.878, -123.151, 20.5847, 1.4", "-22.2478, -123.879, 20.5645, 1.47", "-22.8317, -125.033, 20.5532, 0.74", "-23.2858, -125.93, 20.5357, 0.74" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-8.80726, -55.9319, 16.1199, 0.44", "-8.11149, -56.6909, 17.3222, 0.44", "-7.71732, -57.3842, 18.128, 0.44", "-7.46831, -58.3295, 18.868, 0.37", "-7.21771, -60.2253, 19.9285, 0.59", "-7.19045, -60.9796, 20.2337, 0.52", "-7.22673, -61.962, 20.5436, 0.44", "-7.52815, -63.5743, 20.9304, 0.44", "-7.96847, -64.9504, 21.2211, 0.44", "-8.36105, -65.7951, 21.408, 0.59", "-9.00543, -66.7735, 21.7105, 0.59", "-9.80058, -67.6052, 22.2363, 0.37", "-10.9724, -68.5292, 23.1936, 0.59", "-12.0674, -69.2454, 24.2157, 0.88", "-12.7748, -69.6484, 24.894, 0.81", "-14.2127, -70.4213, 26.258, 1.03", "-15.6546, -71.1967, 27.5967, 0.88", "-16.922, -71.9428, 28.6851, 0.44", "-17.9072, -72.6657, 29.4369, 0.44", "-18.5131, -73.2312, 29.8417, 0.66", "-19.2913, -74.0708, 30.2214, 0.66", "-19.9347, -74.8272, 30.3545, 0.66", "-20.8153, -75.905, 30.3294, 0.66", "-21.5624, -76.8329, 30.2452, 1.33", "-21.8852, -77.2693, 30.1838, 1.47", "-22.5073, -78.1322, 30.0543, 1.03", "-23.2869, -79.2392, 29.901, 0.81", "-23.9511, -80.1736, 29.7893, 0.74", "-24.7532, -81.2926, 29.6886, 0.52", "-25.3225, -82.116, 29.6442, 0.44", "-30.6594, -91.4965, 35.1498, 0.44", "-34.4951, -101.494, 40.8797, 0.44", "-39.155, -111.549, 45.8411, 0.44", "-45.8222, -121.186, 48.9096, 0.44", "-53.2639, -129.335, 53.7882, 0.44", "-59.8942, -137.439, 59.7916, 0.44", "-66.5956, -145.878, 65.2488, 0.44", "-74.9071, -153.95, 68.5887, 0.44", "-84.4333, -161.255, 69.3358, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "4.59082, -20.2235, -3.55493, 1.47", "4.09803, -21.6642, -3.90458, 1.47", "3.59373, -23.5187, -4.21565, 1.33", "3.26452, -24.9969, -4.35947, 1.55", "3.04989, -26.1961, -4.38184, 1.55", "2.86931, -27.4396, -4.26121, 1.77", "2.66234, -29.0312, -3.94713, 1.77", "2.57046, -30.0125, -3.62308, 2.14", "2.49782, -30.8314, -3.26537, 2.58", "2.39375, -31.8788, -2.77942, 2.36", "2.16309, -33.8023, -1.9772, 1.77", "1.92721, -35.4634, -1.45265, 1.47", "1.72453, -36.8585, -1.19306, 1.18", "1.52948, -38.3422, -1.06909, 1.11", "1.38593, -39.6629, -1.09311, 1.33", "1.2494, -41.4656, -1.31865, 1.25", "1.21323, -43.0438, -1.65636, 1.47", "1.2568, -44.4576, -2.00571, 1.62", "1.32495, -45.5185, -2.27325, 2.14", "1.3685, -46.2506, -2.44408, 2.58", "1.38909, -47.3033, -2.64811, 2.43", "1.32614, -48.9979, -2.91022, 2.14", "1.18544, -50.3667, -3.09337, 1.92", "0.942085, -51.7246, -3.25232, 1.47", "0.504615, -53.4028, -3.43784, 1.25", "0.0449689, -54.7873, -3.54196, 1.11", "-0.37258, -55.8233, -3.57048, 1.4", "-0.675955, -56.4893, -3.56425, 1.55", "-1.15099, -57.5065, -3.50961, 1.18", "-1.59597, -58.5452, -3.39169, 0.88", "-1.98976, -59.6377, -3.26976, 1.18", "-2.29288, -60.7066, -3.15911, 1.03", "-2.53819, -61.7128, -3.05059, 1.03", "-2.83389, -63.2046, -2.90894, 1.47", "-2.96166, -64.1523, -2.84214, 1.77", "-3.07608, -65.6435, -2.80027, 1.77", "-3.13104, -66.7914, -2.85634, 2.06" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.59082, -20.2235, -3.55493, 1.77", "5.06136, -22.3369, -4.04515, 1.77", "5.27161, -23.3948, -4.27499, 1.99", "5.51337, -24.6112, -4.53926, 1.99", "5.84323, -26.2708, -4.89985, 3.17", "5.99182, -27.0185, -5.06229, 3.76", "6.24608, -28.2977, -5.34023, 4.2", "6.38679, -29.4296, -5.54129, 3.9" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "4.48557, 41.4011, -0.359339, 0.205353", "5.97663, 56.3268, -0.359339, 0.205353", "7.46769, 71.2525, -0.359339, 0.205353" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-39.716, 99.1095, -17.7021, 0.29", "-39.9678, 100.274, -17.8958, 0.29", "-40.2816, 102.003, -18.5498, 0.29", "-40.4801, 103.548, -19.2314, 0.29", "-40.6067, 105.204, -20.0394, 0.29", "-40.6579, 106.389, -20.6698, 0.29", "-40.7129, 108.335, -21.7122, 0.29", "-40.7304, 111.816, -23.7868, 0.29", "-40.7257, 112.885, -24.4674, 0.37", "-40.7366, 114.171, -25.3198, 0.37", "-40.7878, 115.753, -26.4137, 0.37", "-40.8253, 117.054, -27.323, 0.22", "-40.8767, 118.413, -28.2379, 0.22", "-41.0366, 119.901, -29.039, 1.03", "-41.0975, 120.168, -29.1828, 1.03" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-39.716, 99.1095, -17.7021, 0.52", "-41.0897, 100.385, -17.2133, 0.52", "-41.7199, 101.066, -16.9437, 0.52", "-42.3457, 101.861, -16.6577, 0.44", "-42.6211, 102.271, -16.5287, 0.59", "-42.9111, 102.771, -16.3873, 0.59", "-43.4386, 103.733, -16.1111, 0.37", "-44.045, 104.991, -15.8319, 0.37", "-44.406, 105.806, -15.6382, 0.37", "-44.7722, 106.626, -15.4347, 0.37", "-45.1823, 107.522, -15.1893, 0.29", "-45.5693, 108.323, -14.9557, 0.29", "-46.0262, 109.159, -14.697, 0.81", "-46.2472, 109.491, -14.5944, 0.81", "-46.6336, 109.987, -14.4336, 0.74", "-47.177, 110.612, -14.2696, 0.74", "-47.6654, 111.103, -14.2119, 0.96", "-48.1703, 111.563, -14.2426, 0.96", "-48.5114, 111.871, -14.3173, 0.59", "-49.1727, 112.525, -14.569, 0.29", "-49.7782, 113.204, -14.921, 0.29", "-50.4257, 114.009, -15.3964, 0.29", "-50.8766, 114.619, -15.7521, 0.22", "-51.5485, 115.573, -16.2984, 0.22", "-52.0716, 116.356, -16.7343, 0.74", "-52.661, 117.29, -17.1936, 0.37", "-53.1304, 118.108, -17.5163, 0.37", "-53.5569, 118.917, -17.788, 0.81", "-53.8628, 119.463, -17.9741, 1.18", "-54.1622, 119.888, -18.1223, 1.18", "-54.9433, 120.789, -18.4852, 0.29", "-55.777, 121.68, -18.8545, 0.29", "-56.3105, 122.214, -19.108, 0.29", "-56.8579, 122.724, -19.3882, 0.29", "-57.674, 123.421, -19.7985, 0.74", "-58.2702, 123.826, -20.091, 0.74" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "102.314, 23.8428, 43.2456, 0.29", "113.069, 24.2062, 49.6337, 0.29", "123.552, 24.252, 56.4672, 0.29", "134.403, 25.7309, 62.5346, 0.29", "144.553, 28.7537, 69.2441, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "102.314, 23.8428, 43.2456, 0.29", "112.366, 23.8785, 48.849, 0.29", "122.473, 25.9321, 53.9797, 0.29", "133.34, 28.2642, 57.0201, 0.29", "143.274, 32.2174, 61.3787, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "55.4899, 27.5897, -0.734601, 0.44", "56.4614, 27.6097, -1.12267, 0.44", "56.8233, 27.6816, -1.31636, 0.37", "57.4657, 27.8868, -1.68977, 0.59", "57.815, 28.0182, -1.89579, 0.74", "58.7114, 28.3841, -2.40605, 0.37", "59.6362, 28.7844, -2.9049, 0.29", "60.1837, 29.0995, -3.21806, 0.29", "60.576, 29.357, -3.41808, 0.88", "60.72, 29.4652, -3.48836, 1.11", "61.0773, 29.745, -3.63879, 1.11", "61.4148, 29.9935, -3.7122, 1.18", "62.0411, 30.3405, -3.74205, 0.74", "62.4675, 30.5616, -3.74233, 0.59" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "55.4899, 27.5897, -0.734601, 0.29", "56.4624, 28.5535, -0.238363, 0.29", "56.9197, 29.007, 0.0158424, 0.29", "57.5055, 29.5878, 0.341439, 0.66", "58.1379, 30.2149, 0.692945, 0.29", "58.6114, 30.6844, 0.956123, 0.29", "59.5604, 31.6254, 1.48359, 0.29", "60.1036, 32.1127, 1.84097, 0.29", "68.2284, 39.7785, 5.12925, 0.29", "75.2, 48.019, 9.55224, 0.29", "80.7054, 57.6857, 13.2319, 0.29", "87.3635, 66.4732, 17.0997, 0.29" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-76.9022, -60.2883, -58.1504, 0.81", "-77.3873, -61.8925, -59.2693, 0.81", "-77.4747, -62.0913, -59.4242, 0.81", "-78.6331, -64.0393, -61.0244, 0.37", "-78.9895, -64.5289, -61.4194, 0.52", "-79.3372, -64.9888, -61.7821, 0.66", "-79.7425, -65.5326, -62.1911, 0.66", "-80.6523, -66.5733, -62.9821, 0.37", "-81.2221, -67.224, -63.4971, 0.37", "-82.1006, -68.186, -64.2776, 0.37", "-82.6336, -68.784, -64.7787, 0.66", "-83.4873, -69.7242, -65.5727, 1.11", "-83.893, -70.1426, -65.9249, 1.25", "-85.2153, -71.4673, -67.1803, 0.22", "-85.7407, -71.9456, -67.7187, 0.29", "-86.1818, -72.2983, -68.1918, 0.59", "-86.6799, -72.6494, -68.7057, 0.81", "-87.2075, -73.0314, -69.2573, 0.81", "-88.6243, -74.1637, -70.6273, 0.37", "-89.063, -74.5448, -70.9976, 0.37", "-89.819, -75.3472, -71.6019, 0.59", "-90.1145, -75.7027, -71.8125, 0.81", "-91.2399, -77.1555, -72.4718, 0.44", "-92.0605, -78.2389, -72.8155, 0.44", "-92.7531, -79.1395, -72.9979, 0.37", "-93.6063, -80.2579, -73.1829, 0.37", "-94.2399, -81.0777, -73.3193, 0.66", "-94.7337, -81.6834, -73.4529, 0.81", "-95.2164, -82.2298, -73.5714, 0.81", "-96.1005, -83.1894, -73.8149, 0.29", "-96.6112, -83.7054, -73.947, 0.96", "-97.8642, -84.8726, -74.1981, 0.29", "-98.677, -85.6234, -74.3239, 0.29", "-99.4988, -86.3529, -74.3974, 0.44", "-99.9655, -86.749, -74.4304, 0.44", "-100.731, -87.3625, -74.4448, 0.29", "-101.149, -87.7155, -74.4718, 0.59", "-101.801, -88.3116, -74.51, 0.59", "-102.413, -88.9366, -74.5715, 0.52", "-103.355, -89.8936, -74.7433, 0.37", "-103.948, -90.5, -74.8839, 0.88", "-105.048, -91.6432, -75.1811, 0.44", "-105.668, -92.3034, -75.3434, 0.59", "-106.177, -92.845, -75.4686, 0.59", "-106.798, -93.4888, -75.5845, 0.59", "-107.452, -94.117, -75.6468, 0.37", "-107.968, -94.5338, -75.6663, 0.37", "-108.811, -95.0741, -75.6372, 0.29", "-109.128, -95.241, -75.609, 0.29", "-109.95, -95.6271, -75.4814, 0.88", "-110.516, -95.8766, -75.3531, 1.18", "-111.456, -96.2249, -75.1298, 0.29", "-112.137, -96.4475, -74.9809, 0.29", "-113.144, -96.8007, -74.8126, 0.29", "-113.605, -96.9873, -74.748, 0.88", "-114.053, -97.1979, -74.703, 0.88", "-115.509, -97.9678, -74.6596, 0.22", "-115.993, -98.2569, -74.6893, 0.22", "-117.039, -98.8932, -74.8222, 0.59", "-117.269, -99.0369, -74.8657, 0.59", "-118.188, -99.6159, -75.0604, 0.22", "-118.714, -99.9601, -75.1831, 0.44", "-119.46, -100.516, -75.3691, 0.22", "-120.489, -101.268, -75.617, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-76.9022, -60.2883, -58.1504, 0.29", "-78.1406, -60.0673, -58.4678, 0.29", "-78.9285, -59.9593, -58.6186, 0.29", "-79.7115, -59.8872, -58.763, 0.66", "-80.0917, -59.8737, -58.8289, 0.66", "-81.4468, -59.8635, -59.0399, 0.29", "-82.0339, -59.8713, -59.1324, 0.29", "-82.4859, -59.8867, -59.1575, 0.66", "-82.9234, -59.9164, -59.169, 0.66", "-84.4318, -60.0465, -59.1964, 0.29", "-84.9586, -60.079, -59.2207, 0.52", "-85.4513, -60.091, -59.2667, 0.52", "-86.7819, -60.0286, -59.4195, 0.22", "-87.3884, -59.9611, -59.4989, 0.59", "-87.7742, -59.8938, -59.5428, 0.74", "-88.5104, -59.7216, -59.6381, 0.29", "-88.8761, -59.6229, -59.6953, 0.29", "-89.3457, -59.4734, -59.7809, 0.96", "-89.7829, -59.3048, -59.9139, 0.96", "-90.9788, -58.8113, -60.2455, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-23.2858, -125.93, 20.5357, 0.29", "-23.1531, -125.925, 21.2693, 0.29", "-22.8148, -125.964, 22.8626, 0.29", "-22.5755, -126.036, 23.9986, 0.59", "-22.2739, -126.245, 25.579, 0.66", "-21.8442, -126.714, 27.7871, 0.59", "-21.5391, -127.195, 29.228, 0.29", "-21.2973, -127.677, 30.072, 0.52", "-21.1405, -128.265, 30.3776, 0.66", "-20.8884, -129.583, 30.4861, 0.37", "-20.5723, -131.282, 30.4057, 0.29", "-20.3304, -132.632, 30.2479, 0.29", "-20.105, -133.974, 30.0244, 0.29", "-19.8831, -135.193, 29.8047, 0.29", "-19.5551, -136.633, 29.5413, 0.29", "-19.2143, -137.864, 29.3221, 0.29", "-15.7791, -145.533, 36.2473, 0.29", "-13.0296, -151.78, 44.6758, 0.29", "-7.99086, -158.348, 51.6954, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-23.2858, -125.93, 20.5357, 0.74", "-24.03, -126.942, 20.0814, 0.74", "-24.679, -127.985, 19.6905, 0.52", "-25.1734, -128.87, 19.4071, 0.52", "-25.948, -130.486, 18.9881, 0.59", "-26.2639, -131.307, 18.8625, 0.96", "-26.5035, -132.198, 18.7766, 1.18", "-26.57, -132.956, 18.6838, 1.18", "-26.5217, -133.673, 18.611, 0.96", "-26.3047, -134.725, 18.4592, 0.66", "-25.7851, -136.222, 18.0288, 0.52", "-25.2052, -137.562, 17.5622, 0.52", "-24.4598, -138.981, 16.9499, 0.29", "-24.1231, -139.514, 16.6638, 0.37", "-23.1843, -140.752, 15.7909, 0.29", "-22.1411, -141.872, 14.6438, 0.29", "-22.1532, -153.811, 12.3873, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-3.13104, -66.7914, -2.85634, 0.37", "-5.28768, -67.913, -1.65073, 0.37", "-6.14844, -68.4893, -0.738557, 0.37", "-6.73581, -68.936, 0.0373296, 0.37", "-7.1297, -69.2473, 0.574016, 0.37", "-7.61354, -69.6497, 1.27719, 0.59", "-8.07906, -70.0504, 1.9653, 0.74", "-8.39203, -70.3575, 2.59126, 0.52", "-8.62649, -70.5939, 3.06823, 0.59", "-8.8455, -70.8449, 3.46935, 0.74", "-9.25677, -71.2797, 4.08691, 0.52", "-9.53754, -71.5431, 4.42966, 0.52", "-9.81872, -71.7704, 4.71589, 0.74", "-10.1432, -72.0113, 5.01959, 0.74", "-10.4563, -72.2479, 5.30213, 0.52", "-10.9139, -72.5875, 5.70409, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-3.13104, -66.7914, -2.85634, 0.88", "-3.25467, -67.4545, -2.85582, 0.88", "-3.47157, -68.2908, -2.75837, 0.66", "-3.65733, -68.881, -2.53303, 0.74", "-3.81428, -69.2746, -2.32145, 0.88", "-4.09597, -69.8715, -1.96445, 0.88", "-4.27937, -70.2328, -1.74614, 1.03", "-4.50141, -70.6282, -1.46746, 1.03", "-4.99833, -71.549, -0.811298, 1.03", "-5.27783, -72.1269, -0.435833, 1.03", "-5.50184, -72.7089, -0.124115, 0.88", "-5.6175, -73.2059, 0.0575266, 0.88", "-5.63222, -73.6674, 0.156997, 0.88", "-5.48429, -74.5584, 0.187963, 1.25", "-5.38478, -74.8814, 0.167504, 1.55", "-5.18743, -75.3348, 0.142574, 1.55", "-4.84519, -75.9626, 0.1535, 1.55", "-4.59039, -76.3535, 0.200502, 1.55", "-4.07562, -77.0296, 0.364277, 1.03", "-3.63791, -77.5124, 0.557379, 1.03", "-3.25458, -77.8924, 0.750746, 0.81", "-2.61782, -78.4558, 1.10522, 0.81", "-2.15973, -78.8249, 1.36898, 1.03", "-1.71656, -79.1461, 1.60518, 1.03", "-1.21768, -79.4784, 1.83733, 1.03", "-0.816917, -79.7501, 1.98145, 0.88", "-0.213686, -80.1985, 2.14969, 0.88", "0.0816846, -80.4396, 2.20515, 0.96", "0.417845, -80.7519, 2.25155, 0.96", "0.871022, -81.2285, 2.29866, 1.33", "1.10809, -81.5155, 2.31104, 1.62", "1.30505, -81.7762, 2.32065, 1.62" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "6.38679, -29.4296, -5.54129, 0.66", "7.39792, -31.1529, -4.13764, 0.66", "7.65891, -31.7288, -3.71221, 0.88", "8.12119, -32.8859, -2.96238, 1.03", "8.34226, -33.4399, -2.64062, 1.03", "8.5502, -33.928, -2.37731, 1.03", "8.8319, -34.5286, -2.07037, 0.37", "9.09934, -35.1844, -1.80893, 0.37", "9.44787, -35.833, -1.60704, 0.59", "9.90533, -36.3769, -1.53037, 0.81", "10.2699, -36.672, -1.50512, 0.81", "10.6882, -36.9188, -1.47489, 0.52", "11.0845, -37.11, -1.43514, 0.81", "11.6787, -37.3806, -1.35296, 1.25", "11.928, -37.5208, -1.29452, 1.69", "12.2477, -37.7846, -1.17112, 1.69", "12.7043, -38.4617, -0.859706, 0.96", "12.875, -38.9196, -0.667708, 0.66", "12.9673, -39.2827, -0.52251, 0.81", "13.1389, -40.0466, -0.219297, 0.44", "13.3081, -40.6497, 0.0169484, 0.44", "13.4811, -41.121, 0.193841, 0.44", "13.7221, -41.5331, 0.368269, 0.88", "14.2094, -42.0426, 0.661593, 1.25", "14.8064, -42.4959, 0.983922, 0.66", "15.3393, -42.8286, 1.24264, 0.52", "15.6616, -43.0219, 1.39107, 0.52", "16.4532, -43.5275, 1.7657, 0.74", "17.0954, -43.9898, 2.06734, 1.25", "17.339, -44.1947, 2.16963, 1.25", "17.7122, -44.5578, 2.29715, 0.52", "18.1419, -45.0407, 2.39172, 0.44", "18.6649, -45.6935, 2.43527, 0.37", "18.9572, -46.0851, 2.40503, 0.37", "19.2517, -46.4809, 2.33862, 0.96", "19.4772, -46.7752, 2.27802, 1.33", "20.1437, -47.5714, 2.07718, 0.29", "20.386, -47.8262, 1.99616, 0.29", "20.6277, -48.0538, 1.90497, 0.29", "20.7182, -48.1381, 1.87158, 0.44", "24.2855, -52.7829, 2.94631, 0.44", "28.2818, -57.1767, 3.17399, 0.44", "31.6225, -62.115, 3.1834, 0.44", "35.2912, -66.8024, 3.30389, 0.44", "38.8986, -71.5033, 3.89959, 0.44", "42.1963, -76.464, 4.18987, 0.44" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "6.38679, -29.4296, -5.54129, 1.03", "6.38934, -31.0003, -5.69314, 1.03", "6.55005, -32.555, -5.85992, 1.03", "6.78607, -33.6745, -5.99587, 0.96", "7.09307, -34.7282, -6.13527, 0.96", "7.46908, -35.7432, -6.28039, 0.96", "7.78014, -36.423, -6.35941, 1.18", "8.44624, -37.3248, -6.41132, 1.47", "9.14595, -38.0287, -6.39806, 2.21", "9.45096, -38.3018, -6.366, 2.21", "9.93698, -38.7463, -6.25688, 1.99", "10.8043, -39.6308, -5.95233, 1.33", "11.6039, -40.6293, -5.56181, 0.88", "12.111, -41.447, -5.21938, 0.74", "12.4399, -42.2343, -4.90185, 0.74", "12.6908, -43.1929, -4.54928, 1.33", "12.7778, -43.7824, -4.36147, 1.62", "12.8232, -44.4325, -4.19391, 1.92", "12.8484, -45.1325, -4.06633, 1.69", "12.9411, -46.4646, -3.91694, 1.33", "13.1177, -47.8096, -3.85733, 1.03", "13.3068, -48.7305, -3.87556, 0.88", "13.5569, -49.5759, -3.93518, 1.03", "13.9672, -50.6743, -4.06103, 1.03", "14.4534, -51.7695, -4.24135, 1.03", "14.9021, -52.698, -4.45085, 1.33", "15.2229, -53.3981, -4.65078, 1.69", "15.5542, -54.2535, -4.92805, 1.47", "15.7277, -54.8576, -5.14245, 1.03", "15.8952, -55.7855, -5.48392, 0.96", "15.9692, -56.6378, -5.81663, 0.96", "15.9852, -57.6867, -6.22836, 1.4", "15.9569, -58.8028, -6.64932, 1.4", "15.9274, -59.7774, -7.00821, 1.55", "15.9376, -60.3056, -7.18972, 1.77", "16.0259, -61.3153, -7.50099, 0.96", "16.1955, -62.2147, -7.73099, 0.66", "16.4734, -63.0503, -7.86644, 0.66", "16.8859, -63.8427, -7.92846, 0.96", "17.4372, -64.6143, -7.94526, 1.11", "17.7343, -64.9466, -7.94751, 1.4", "18.006, -65.2072, -7.95212, 1.4", "18.5761, -65.7485, -7.96469, 1.4", "19.2479, -66.4599, -7.99739, 0.66", "19.5402, -66.8464, -8.03644, 0.52", "19.8649, -67.4041, -8.11271, 0.52", "20.2891, -68.3235, -8.2171, 0.81", "20.6789, -69.3555, -8.27378, 1.03", "20.8771, -70.0398, -8.29176, 1.03", "21.0756, -70.9657, -8.2743, 1.03", "21.2139, -71.8918, -8.28564, 1.03", "21.3165, -72.8573, -8.3228, 0.88", "21.4178, -74.0397, -8.44585, 1.03", "21.5141, -75.0949, -8.62395, 0.52", "21.6228, -76.0938, -8.8722, 0.52", "21.7841, -77.5518, -9.37985, 0.88", "21.8491, -78.148, -9.645, 1.11", "21.9404, -79.0941, -10.132, 0.59", "21.9769, -79.495, -10.3371, 0.59", "22.0648, -80.3933, -10.6791, 0.52", "22.1414, -81.347, -10.8494, 0.52", "22.1615, -82.1174, -10.755, 1.11", "22.126, -82.7674, -10.5509, 1.25", "22.0146, -83.748, -10.1004, 1.18", "21.8843, -84.7049, -9.59283, 0.52", "21.8021, -85.3681, -9.18934, 0.52", "21.7289, -86.276, -8.65722, 0.52", "21.7133, -86.6189, -8.49244, 0.81", "21.7074, -87.2495, -8.2835, 0.74", "21.6976, -88.0659, -8.14124, 0.74", "21.6628, -88.879, -8.07914, 1.03", "21.5545, -89.9596, -8.07289, 0.66", "21.4297, -90.6744, -8.09561, 0.52", "21.1949, -91.5038, -8.14049, 1.11", "20.9175, -92.2017, -8.23171, 1.11", "20.4506, -93.1943, -8.42836, 0.81", "19.9276, -94.2326, -8.7058, 0.66", "19.5652, -94.9606, -8.92433, 0.88", "19.1196, -95.953, -9.2793, 0.66", "18.5789, -97.2634, -9.87946, 0.59", "18.2626, -98.1217, -10.3507, 0.88", "18.0154, -98.8723, -10.8103, 1.18", "17.8466, -99.4154, -11.1506, 0.96", "17.6318, -100.133, -11.6042, 0.96", "17.2607, -101.441, -12.363, 0.52", "17.1376, -101.871, -12.5773, 0.81", "16.9064, -102.712, -12.9471, 0.66", "16.7578, -103.35, -13.1385, 0.66", "16.6226, -104.134, -13.2473, 0.96", "16.5672, -105.087, -13.0948, 0.88", "16.6017, -105.914, -12.797, 0.88", "16.6518, -106.632, -12.4935, 0.37", "16.7862, -107.943, -11.9046, 1.03", "16.8509, -108.634, -11.61, 1.03", "16.926, -110.167, -10.9882, 0.44", "16.9339, -111.285, -10.6504, 0.44", "16.9199, -111.94, -10.5974, 0.74", "16.9044, -112.623, -10.7605, 0.74", "16.8971, -113.574, -11.224, 0.44", "16.9165, -114.338, -11.6841, 0.66", "16.9811, -115.439, -12.4351, 0.44", "17.113, -117.012, -13.527, 0.88", "17.2977, -118.736, -14.6686, 0.52", "17.4094, -119.613, -15.2362, 0.74", "17.5877, -120.789, -15.9725, 1.33", "17.6896, -121.456, -16.3589, 1.33", "17.8593, -122.83, -17.0271, 0.74", "17.9397, -123.704, -17.3466, 0.66", "17.9857, -124.943, -17.684, 0.66", "17.9491, -125.807, -17.8891, 0.81", "17.8218, -126.69, -18.0861, 0.59", "17.6806, -127.284, -18.191, 1.18", "17.5888, -127.56, -18.2318, 1.18", "17.2203, -128.537, -18.3511, 0.44", "16.9107, -129.386, -18.381, 0.44", "16.6921, -130.099, -18.3697, 1.03", "16.6004, -130.605, -18.3328, 1.4", "16.5976, -131.669, -18.125, 0.52", "16.6684, -132.386, -17.957, 0.52", "16.9112, -133.323, -17.6675, 0.74", "17.0453, -133.659, -17.5223, 0.74", "17.3842, -134.327, -17.1117, 0.59", "17.8623, -135.074, -16.5013, 0.96" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "6.38679, -29.4296, -5.54129, 0.88", "7.76859, -29.4336, -6.17625, 0.88", "8.15678, -29.4238, -6.32006, 0.88", "8.53772, -29.4133, -6.42833, 1.03", "8.79136, -29.4065, -6.48146, 1.33", "9.02267, -29.4025, -6.52062, 1.62", "9.35453, -29.4022, -6.56835, 1.84", "9.63167, -29.3881, -6.57283, 1.47", "9.97021, -29.3724, -6.62133, 1.18", "10.2378, -29.3491, -6.75888, 0.81", "10.5344, -29.3114, -6.98792, 0.81", "10.7254, -29.2903, -7.15888, 1.11", "11.1349, -29.266, -7.56605, 1.33", "11.5677, -29.2558, -8.01961, 1.77", "12.5538, -29.2691, -9.07393, 1.47", "12.8693, -29.2832, -9.40259, 1.11", "13.188, -29.3028, -9.71304, 1.11", "13.6079, -29.3325, -10.0707, 0.81", "13.8555, -29.3552, -10.2373, 0.96", "14.2348, -29.3841, -10.4084, 0.88", "14.5407, -29.3683, -10.4993, 0.74", "14.7798, -29.3092, -10.5781, 0.59", "15.098, -29.1696, -10.7133, 1.03", "15.3379, -29.0364, -10.822, 1.55", "15.5597, -28.9051, -10.9248, 1.69", "16.2263, -28.5069, -11.2511, 1.69", "16.4331, -28.3891, -11.3587, 1.69", "16.9497, -28.1184, -11.6258, 0.88", "17.2393, -27.9898, -11.7646, 0.81", "17.5787, -27.8735, -11.9, 1.11", "18.0115, -27.7755, -12.0368, 1.18", "18.3937, -27.7449, -12.1159, 0.59", "18.5621, -27.7544, -12.145, 0.59", "18.962, -27.8477, -12.1858, 0.96", "19.244, -27.9638, -12.2112, 1.18", "19.4793, -28.1016, -12.2224, 1.18", "19.7134, -28.2689, -12.215, 1.4", "19.9793, -28.4776, -12.1947, 1.4", "20.2257, -28.6651, -12.171, 1.11", "20.3999, -28.7808, -12.1482, 1.11", "20.6161, -28.887, -12.1139, 1.03", "20.9009, -28.9824, -12.0609, 1.03", "21.1502, -29.0325, -12.0082, 1.03", "21.4386, -29.0609, -11.9408, 0.96", "21.8377, -29.0667, -11.8448, 0.88", "22.2711, -29.0485, -11.7279, 0.88", "22.5581, -29.0207, -11.6432, 1.03", "22.7844, -28.9912, -11.5791, 1.11", "22.972, -28.9655, -11.534, 1.18", "23.1454, -28.9496, -11.5148, 1.18", "23.5061, -28.9516, -11.5491, 0.81", "23.772, -28.9878, -11.628, 0.74", "24.1251, -29.0673, -11.7735, 1.18", "24.3968, -29.1411, -11.9026, 1.4", "24.9546, -29.3012, -12.1983, 1.18", "25.3872, -29.4199, -12.4449, 0.88", "25.7146, -29.4952, -12.6482, 0.74", "26.0464, -29.5525, -12.8499, 0.74", "26.348, -29.5767, -13.016, 1.11", "26.6697, -29.5694, -13.1789, 1.4", "26.989, -29.5443, -13.3293, 1.4", "27.4347, -29.5112, -13.5444, 1.11", "27.6978, -29.5021, -13.6816, 0.74", "28.03, -29.5219, -13.8698, 0.66", "28.4259, -29.5994, -14.1113, 0.81", "28.8195, -29.7367, -14.3439, 0.74", "29.1452, -29.8844, -14.5353, 1.25", "29.3239, -29.9743, -14.6337, 1.69", "29.5553, -30.083, -14.7508, 1.69", "29.7921, -30.1669, -14.8419, 1.4", "30.1526, -30.2284, -14.9273, 0.88", "30.6724, -30.2167, -14.9956, 0.81", "30.9068, -30.1901, -15.0133, 0.81", "31.2296, -30.1497, -15.0205, 0.81", "31.6376, -30.1019, -15.0033, 0.81", "31.8877, -30.0831, -14.9769, 0.81", "32.2346, -30.0857, -14.9239, 0.81", "32.4611, -30.1227, -14.8743, 0.96", "32.8067, -30.2425, -14.8127, 0.96", "33.0434, -30.3649, -14.7973, 1.18", "33.259, -30.5004, -14.8141, 1.47", "33.4822, -30.6503, -14.8493, 1.47", "33.8106, -30.8705, -14.9143, 0.74", "34.196, -31.1102, -14.9978, 0.74", "34.6737, -31.3705, -15.1096, 0.66", "35.1248, -31.5852, -15.2266, 0.74", "35.4084, -31.6969, -15.2999, 0.81", "35.7346, -31.7926, -15.3767, 0.81", "35.9004, -31.8224, -15.4091, 1.11", "36.2991, -31.8465, -15.4738, 1.25", "36.4786, -31.8365, -15.5114, 1.62", "36.6844, -31.8046, -15.5817, 1.62", "37.0966, -31.7222, -15.7598, 0.59", "37.3578, -31.6666, -15.8892, 0.59", "37.7522, -31.587, -16.0927, 0.88", "38.2817, -31.4915, -16.3697, 1.4", "38.8123, -31.4146, -16.6366, 0.74", "39.1223, -31.3832, -16.7849, 0.59", "39.3814, -31.3719, -16.8939, 0.81", "39.6029, -31.3805, -16.9563, 0.81", "39.8035, -31.4054, -16.9722, 0.96", "40.0016, -31.4346, -16.9554, 0.96", "40.235, -31.4647, -16.9214, 0.59", "40.6013, -31.4926, -16.8731, 0.59", "40.9567, -31.4988, -16.8258, 0.66", "41.1682, -31.4893, -16.815, 1.03", "41.5192, -31.4607, -16.8166, 1.03", "41.8889, -31.4011, -16.9025, 0.59", "42.0822, -31.3547, -16.9786, 0.59", "42.3439, -31.2809, -17.1089, 0.59", "42.747, -31.1767, -17.3328, 1.11", "42.9274, -31.1415, -17.4355, 1.33", "43.9305, -31.0007, -17.9813, 1.03", "44.1085, -30.9804, -18.0685, 1.4", "44.455, -30.946, -18.2141, 0.81", "44.7976, -30.9143, -18.3291, 0.74", "45.2205, -30.8773, -18.4235, 0.59", "45.4953, -30.8534, -18.4589, 0.59", "45.9217, -30.8201, -18.455, 0.59", "46.4277, -30.7592, -18.4476, 0.88", "46.6079, -30.7193, -18.4415, 1.25", "46.7684, -30.6668, -18.4332, 1.55", "47.008, -30.5717, -18.423, 1.55", "47.2036, -30.4911, -18.4196, 1.33", "47.4459, -30.3906, -18.417, 0.66", "47.7551, -30.2685, -18.413, 0.66", "47.9655, -30.1945, -18.4289, 0.66", "48.3599, -30.0621, -18.5008, 0.66", "48.5488, -30.0205, -18.5976, 0.66", "48.6692, -30.0038, -18.6809, 0.96", "48.815, -29.9923, -18.7941, 0.96", "49.2542, -29.9863, -19.1473, 0.74", "49.5163, -29.9932, -19.3569, 1.62", "50.5521, -30.0431, -20.1512, 0.66", "50.7075, -30.0478, -20.2641, 0.66", "50.9413, -30.0502, -20.4155, 1.11", "51.2401, -30.0502, -20.5818, 1.11", "51.5342, -30.0413, -20.7039, 0.52", "51.8153, -30.0173, -20.7779, 0.52", "52.1622, -29.9517, -20.8199, 1.25", "52.4309, -29.8893, -20.8534, 0.88", "52.9441, -29.7406, -20.916, 0.44", "53.2373, -29.6375, -20.9461, 0.44", "53.6709, -29.4635, -20.9822, 0.52", "53.9575, -29.3366, -21.0012, 0.88", "54.0991, -29.2706, -21.0075, 1.11", "54.224, -29.2052, -21.0258, 1.11", "54.3292, -29.1425, -21.0556, 1.11", "54.6955, -28.9113, -21.2307, 0.52", "54.8527, -28.8162, -21.3423, 0.52", "55.0782, -28.6876, -21.5258, 0.81", "55.6102, -28.4073, -21.9725, 0.81", "55.86, -28.2823, -22.1773, 1.11", "55.967, -28.2323, -22.2558, 1.92", "56.5649, -27.9823, -22.6124, 0.59", "56.6372, -27.9569, -22.6432, 0.59", "56.8848, -27.8918, -22.6907, 0.88", "57.1859, -27.8388, -22.6857, 0.44", "57.6707, -27.7775, -22.6524, 0.44", "58.0496, -27.7426, -22.616, 0.74", "58.265, -27.7326, -22.6029, 0.74", "58.5983, -27.7365, -22.6354, 0.52", "58.8079, -27.7533, -22.6969, 0.52", "59.1372, -27.7969, -22.8481, 0.59", "59.2658, -27.8137, -22.9191, 0.59", "59.8362, -27.8656, -23.255, 0.59", "60.2132, -27.8783, -23.475, 0.81", "60.5688, -27.8658, -23.6802, 1.4", "60.7561, -27.8395, -23.7765, 1.55", "61.179, -27.7158, -23.9424, 0.44", "61.3533, -27.6337, -23.983, 0.88", "61.558, -27.5093, -23.9882, 0.88", "61.7793, -27.3727, -23.9879, 0.59", "62.1218, -27.1758, -23.9926, 0.59", "62.3598, -27.0666, -24.0266, 0.81", "62.6373, -26.9727, -24.0957, 0.81", "63.0148, -26.8716, -24.2286, 0.52", "63.4551, -26.7666, -24.4282, 0.74", "63.6109, -26.7283, -24.5368, 0.74", "63.9841, -26.6085, -24.9111, 0.37", "64.1528, -26.5328, -25.1247, 0.37", "64.3915, -26.3885, -25.4803, 0.37", "64.5825, -26.2364, -25.7999, 0.59", "65.0979, -25.7672, -26.6747, 0.88", "65.3385, -25.5429, -27.0703, 0.52", "65.4283, -25.4703, -27.2088, 0.52", "65.6349, -25.3449, -27.5095, 0.52", "65.8064, -25.2645, -27.7254, 0.81", "66.0324, -25.1797, -27.9662, 0.59", "66.2284, -25.1219, -28.1431, 0.59", "66.8796, -24.9747, -28.7062, 1.18", "67.6599, -24.8319, -29.4212, 0.74", "67.8522, -24.8035, -29.6134, 0.74", "68.0325, -24.7799, -29.8113, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-41.0975, 120.168, -29.1828, 0.29", "-42.0164, 120.093, -29.2894, 0.29", "-42.754, 120.139, -29.4036, 0.29", "-43.1337, 120.258, -29.5314, 0.59", "-43.5611, 120.491, -29.7244, 0.59", "-43.9066, 120.728, -29.8905, 0.59", "-44.2741, 121.018, -30.0628, 0.44", "-44.5521, 121.35, -30.2233, 0.59", "-45.0548, 122.017, -30.594, 0.37", "-45.3021, 122.336, -30.7952, 0.29", "-45.5579, 122.628, -30.9894, 0.59", "-45.8401, 122.923, -31.1899, 0.59", "-46.4569, 123.546, -31.6148, 0.29", "-47.0287, 124.143, -32.033, 0.29", "-47.2946, 124.429, -32.2517, 0.29", "-47.807, 124.976, -32.7534, 0.29", "-48.1355, 125.314, -33.1373, 0.29", "-48.4856, 125.665, -33.5891, 0.52", "-48.8049, 125.989, -34.0241, 0.66", "-49.2726, 126.505, -34.7008, 0.44", "-49.645, 126.92, -35.3008, 0.59", "-50.1097, 127.395, -36.1408, 0.96", "-50.2956, 127.535, -36.4511, 0.52" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-41.0975, 120.168, -29.1828, 0.66", "-39.7986, 120.158, -29.7477, 0.66", "-38.7609, 120.15, -30.199, 0.29", "-38.0075, 120.144, -30.5266, 0.44", "-37.0789, 120.136, -30.9305, 0.44" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-58.2702, 123.826, -20.091, 0.29", "-58.7623, 124.544, -20.7555, 0.29", "-59.3874, 125.377, -21.6108, 0.59", "-59.7952, 125.929, -22.1824, 0.44", "-60.3835, 126.781, -23.0154, 0.88", "-60.6422, 127.214, -23.4093, 1.03", "-61.2154, 128.318, -24.3348, 0.52", "-61.3968, 128.723, -24.6628, 0.44", "-61.7553, 129.593, -25.2858, 0.66", "-62.027, 130.302, -25.7516, 0.88", "-62.5561, 131.682, -26.5644, 0.59", "-62.9163, 132.59, -27.0617, 0.74", "-63.2923, 133.507, -27.5266, 0.74", "-63.8294, 134.714, -28.1413, 0.37", "-64.0847, 135.22, -28.4054, 0.37", "-64.7056, 136.278, -28.9665, 0.66", "-65.1545, 136.902, -29.3019, 0.66", "-65.639, 137.45, -29.6107, 0.52", "-66.3582, 138.111, -29.9976, 0.88", "-66.8605, 138.49, -30.224, 0.88", "-67.6163, 138.951, -30.4949, 0.52", "-68.5418, 139.427, -30.7592, 0.52", "-69.7025, 139.994, -31.0353, 0.88", "-70.4579, 140.373, -31.1901, 0.88", "-71.403, 140.858, -31.3548, 0.52", "-72.2136, 141.288, -31.4856, 0.44", "-73.1353, 141.787, -31.6357, 0.37", "-74.0402, 142.325, -31.7762, 0.37", "-74.9418, 142.921, -31.9201, 0.29", "-76.4066, 143.981, -32.1728, 0.29", "-77.0894, 144.493, -32.2975, 0.29", "-77.875, 145.067, -32.444, 1.11" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-58.2702, 123.826, -20.091, 0.29", "-59.8295, 122.828, -17.9547, 0.29", "-60.678, 122.285, -16.7922, 0.29", "-61.2793, 121.9, -15.9684, 0.22", "-62.0463, 121.408, -14.9175, 0.22", "-62.8997, 120.862, -13.7482, 0.22" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "144.553, 28.7537, 69.2441, 0.29", "145.853, 31.552, 73.6955, 0.29", "147.537, 33.79, 78.3131, 0.29", "149.785, 35.855, 82.7618, 0.29", "151.648, 37.0308, 87.6682, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "144.553, 28.7537, 69.2441, 0.29", "152.671, 26.4956, 72.992, 0.29", "160.988, 26.0216, 76.9283, 0.29", "168.926, 27.2963, 81.4388, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "62.4675, 30.5616, -3.74233, 0.37", "62.6084, 30.9595, -3.56654, 0.37", "62.7976, 31.546, -3.277, 0.37", "62.9347, 31.9708, -3.06725, 0.22", "63.2229, 32.864, -2.62627, 0.22", "63.4426, 33.5448, -2.29016, 0.66", "63.7071, 34.3647, -1.88538, 1.11", "63.7663, 34.5664, -1.77052, 1.11", "65.5404, 39.8071, 0.0249295, 1.11", "67.6074, 44.9861, 1.67227, 1.11", "70.0514, 49.8441, 3.69111, 1.11", "72.5522, 54.3829, 6.26838, 1.11", "75.5443, 59.1041, 7.80317, 1.11", "78.662, 63.6928, 9.46469, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "62.4675, 30.5616, -3.74233, 0.44", "63.1816, 30.7159, -3.74093, 0.44", "63.9463, 30.8425, -3.73709, 0.44", "64.7719, 30.9505, -3.67962, 0.74", "65.276, 31.0061, -3.62643, 1.03", "65.7497, 31.052, -3.56262, 1.03", "66.1228, 31.0865, -3.52442, 1.03", "66.7476, 31.1477, -3.51857, 0.66", "67.6006, 31.2703, -3.59681, 0.66", "67.8974, 31.3452, -3.66735, 0.81", "68.3438, 31.5179, -3.82347, 0.44", "69.2444, 31.9838, -4.21326, 0.44", "70.3099, 32.6515, -4.72421, 0.37", "70.6814, 32.9147, -4.92563, 0.37", "71.2532, 33.3407, -5.25612, 0.37", "71.9425, 33.8694, -5.63121, 0.66", "72.3475, 34.1879, -5.82522, 0.66", "72.9248, 34.6297, -6.01716, 0.37", "73.2752, 34.8739, -6.08941, 0.37", "73.7212, 35.1739, -6.17173, 0.59", "74.1164, 35.4458, -6.25674, 0.59", "74.4928, 35.7162, -6.40749, 0.44", "75.1245, 36.1263, -6.71399, 0.66", "75.2392, 36.1912, -6.77335, 0.96", "75.679, 36.3873, -6.98837, 0.96", "76.3221, 36.5956, -7.29422, 1.11", "77.8099, 36.9511, -7.93576, 0.44", "78.6472, 37.1083, -8.25589, 0.44", "79.3032, 37.2148, -8.47245, 0.37", "80.1111, 37.3542, -8.7322, 0.37", "80.6038, 37.4504, -8.87584, 0.29", "81.289, 37.6363, -9.05388, 0.22", "81.7526, 37.867, -9.18885, 0.59", "81.992, 38.0861, -9.30181, 0.59", "82.6703, 38.8376, -9.76913, 0.29", "82.9551, 39.1628, -9.98903, 0.37", "83.2925, 39.5225, -10.2523, 0.52", "83.6619, 39.8344, -10.537, 0.74", "84.1756, 40.1824, -11.0118, 0.96", "85.0739, 40.7276, -12.0112, 0.29", "85.4123, 40.9413, -12.4627, 0.52", "85.5586, 41.0486, -12.7003, 0.81", "86.0239, 41.4726, -13.594, 1.11", "86.8391, 42.3797, -15.4199, 0.81", "87.1815, 42.8579, -16.2967, 0.96", "87.5325, 43.469, -17.2886, 0.66", "87.7951, 43.966, -18.027, 0.52", "88.071, 44.4744, -18.6833, 0.52", "88.2013, 44.6871, -18.8903, 0.74", "88.5815, 45.0807, -19.1464, 0.74", "88.8424, 45.2679, -19.2516, 0.96", "89.2551, 45.4771, -19.3854, 0.96", "89.9239, 45.7774, -19.6609, 0.74", "90.5762, 46.0903, -19.995, 0.44", "91.2776, 46.5188, -20.4923, 0.44", "91.5375, 46.7242, -20.7298, 0.96", "91.9882, 47.2024, -21.2934, 1.18", "92.5862, 48.0324, -22.273, 0.66", "92.7903, 48.3941, -22.7081, 0.66", "93.1365, 49.1364, -23.6321, 0.59", "93.2638, 49.4329, -23.9773, 0.52", "93.6334, 50.2489, -24.8603, 0.52", "93.74, 50.4914, -25.0848, 0.96", "93.9766, 50.9983, -25.491, 0.96", "94.4361, 51.963, -26.1623, 0.59", "94.8417, 52.8289, -26.6502, 0.59", "95.1019, 53.3968, -26.9312, 0.88", "95.4869, 54.232, -27.2647, 0.74", "95.8368, 54.9015, -27.5115, 0.74", "96.2618, 55.5734, -27.7223, 0.88", "96.5383, 55.8971, -27.8271, 0.88", "97.0625, 56.3452, -28.0472, 0.37", "97.6165, 56.7249, -28.2979, 0.37", "98.4907, 57.2084, -28.7095, 0.37", "99.1012, 57.5169, -29.0306, 0.37", "99.8097, 57.8596, -29.4435, 0.37", "100.238, 58.0802, -29.6976, 0.59", "100.769, 58.3759, -30.0071, 0.74", "101.125, 58.5989, -30.2202, 0.74", "101.795, 59.088, -30.6494, 0.44", "102.153, 59.3515, -30.87, 0.37", "103.214, 60.0265, -31.3958, 0.37", "103.724, 60.2862, -31.6041, 0.74", "103.996, 60.3933, -31.698, 0.74" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "87.3635, 66.4732, 17.0997, 0.29", "92.2046, 72.1226, 19.8207, 0.29", "97.3085, 78.0852, 20.9509, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "87.3635, 66.4732, 17.0997, 0.29", "91.2703, 71.7266, 19.1889, 0.29", "95.2395, 76.5722, 21.9794, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-22.1532, -153.811, 12.3873, 0.29", "-18.9562, -164.518, 10.5886, 0.29", "-17.2602, -175.726, 10.1968, 0.29", "-15.9445, -186.799, 8.16879, 0.29", "-16.0763, -198.121, 7.41636, 0.29", "-17.1716, -209.382, 6.58113, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-22.1532, -153.811, 12.3873, 0.29", "-26.8265, -163.996, 7.65111, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "1.30505, -81.7762, 2.32065, 0.37", "0.0631771, -83.2726, 1.15624, 0.37", "-0.688646, -84.0643, 0.585094, 0.37", "-1.43109, -84.7503, 0.091101, 0.44", "-2.32524, -85.4951, -0.431767, 0.74", "-3.21872, -86.1803, -0.891545, 0.59", "-4.15163, -86.8196, -1.30322, 0.59", "-4.71512, -87.0808, -1.44895, 0.74", "-5.65523, -87.3677, -1.60272, 0.88", "-6.24839, -87.482, -1.64592, 1.18", "-6.84835, -87.5436, -1.6506, 0.59", "-7.76239, -87.5865, -1.63244, 0.44", "-8.6695, -87.613, -1.61851, 0.52", "-9.0894, -87.6409, -1.62394, 0.74", "-9.80179, -87.7822, -1.63448, 0.74", "-10.3113, -87.9818, -1.6696, 0.59", "-10.8253, -88.305, -1.72762, 0.59", "-11.4859, -88.9042, -1.82302, 0.59", "-12.1702, -89.7267, -1.92271, 0.44", "-12.9308, -90.8194, -2.01705, 0.37", "-13.3576, -91.5533, -2.0579, 1.03", "-13.6355, -92.1084, -2.08481, 1.03", "-13.8515, -92.6178, -2.10583, 0.96", "-14.2013, -93.674, -2.13384, 0.66", "-14.4547, -94.6244, -2.15586, 0.66", "-14.6916, -95.7095, -2.20193, 0.88", "-14.8097, -96.376, -2.23613, 1.03", "-14.9383, -97.3217, -2.30485, 0.88", "-15.0634, -98.5374, -2.42273, 0.52", "-15.1355, -99.4867, -2.539, 0.52", "-15.1817, -100.208, -2.64725, 0.96", "-15.2166, -100.678, -2.72694, 0.96", "-15.3523, -101.834, -2.94535, 0.59", "-15.518, -102.753, -3.13202, 0.66", "-15.704, -103.44, -3.28127, 0.81", "-15.9896, -104.276, -3.48068, 0.81", "-16.185, -104.742, -3.60263, 0.81", "-16.5724, -105.591, -3.88966, 0.44", "-16.7787, -106.034, -4.07068, 0.81", "-17.047, -106.673, -4.37499, 0.81", "-17.3552, -107.586, -4.84455, 0.52", "-17.5184, -108.325, -5.2453, 0.52", "-17.6687, -109.676, -5.99476, 0.74", "-17.6898, -110.336, -6.35682, 1.11", "-17.699, -110.946, -6.66723, 1.11", "-17.7181, -111.721, -7.01551, 0.96", "-17.7808, -112.592, -7.35058, 0.59", "-17.9394, -113.669, -7.69722, 0.44", "-18.2684, -114.861, -7.99476, 0.44", "-18.6133, -115.757, -8.18805, 0.44", "-18.9935, -116.596, -8.33574, 0.74", "-19.2797, -117.211, -8.43061, 0.74", "-19.5548, -117.808, -8.50349, 0.74", "-20.031, -118.874, -8.60156, 0.66", "-20.3691, -119.668, -8.65516, 0.44", "-20.7947, -120.696, -8.71611, 0.44", "-21.4538, -122.129, -8.75449, 0.44", "-21.8241, -122.793, -8.73646, 0.88", "-22.2537, -123.414, -8.67522, 1.18", "-22.5862, -123.814, -8.59849, 1.18", "-23.0036, -124.248, -8.48382, 1.03", "-24.1961, -125.31, -8.141, 0.66", "-25.296, -126.16, -7.80605, 0.66", "-26.2303, -126.856, -7.51747, 1.25", "-26.7259, -127.23, -7.36207, 1.55", "-27.3245, -127.691, -7.17456, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "1.30505, -81.7762, 2.32065, 0.74", "0.766699, -82.6957, 1.76606, 0.74", "0.133932, -83.7507, 1.11763, 0.74", "-0.193334, -84.3814, 0.793166, 0.74", "-0.504712, -85.0876, 0.47811, 0.81", "-1.07526, -86.7075, -0.121073, 0.52", "-1.41862, -87.9969, -0.519958, 0.74", "-1.53322, -88.6827, -0.683967, 0.74", "-1.40103, -90.2, -0.825829, 0.74", "-1.1133, -90.9498, -0.813505, 0.81", "-0.528224, -91.854, -0.708814, 0.66", "-0.160495, -92.2991, -0.624619, 1.11", "0.220579, -92.7323, -0.556665, 1.11", "0.694804, -93.2832, -0.529949, 0.81", "1.27027, -94.0304, -0.609478, 0.81", "1.7772, -94.7596, -0.727647, 0.96", "2.21985, -95.4397, -0.853572, 0.88", "2.74699, -96.2761, -0.998351, 0.96", "3.10867, -96.8996, -1.1123, 1.11", "3.49765, -97.6785, -1.27836, 1.11", "3.80147, -98.4097, -1.45509, 0.74", "4.1719, -99.5523, -1.74235, 0.66", "4.32538, -100.15, -1.89239, 0.66", "4.58282, -101.538, -2.20861, 0.66", "4.72867, -102.998, -2.50331, 0.59", "4.73879, -103.845, -2.66278, 0.96", "4.66875, -104.902, -2.85098, 1.18", "4.56146, -105.691, -2.97139, 1.03", "4.40438, -106.619, -3.09017, 0.88", "4.2107, -107.823, -3.20133, 0.74", "4.10218, -108.87, -3.21564, 0.59", "4.04516, -109.756, -3.17302, 0.59", "4.00931, -110.491, -3.07915, 1.4", "3.97309, -111.034, -2.9635, 1.4", "3.89568, -112.422, -2.5489, 0.88", "3.86774, -114.052, -1.87781, 0.66", "3.86391, -114.736, -1.5455, 0.88", "3.85709, -115.604, -1.09362, 0.88", "3.82444, -116.958, -0.378846, 0.59", "3.76772, -117.822, 0.0708716, 0.81", "3.60237, -119.253, 0.777598, 0.81", "3.48944, -119.991, 1.07378, 1.11", "3.3972, -120.597, 1.27856, 1.11", "3.27449, -121.468, 1.48832, 0.52", "3.18235, -122.29, 1.62483, 0.74", "3.10456, -123.024, 1.70406, 1.03", "3.06828, -123.636, 1.72454, 1.25", "3.09386, -124.238, 1.76901, 1.33", "3.24772, -125.224, 1.95052, 1.03", "3.52516, -126.143, 2.20118, 0.74", "3.85684, -126.885, 2.44948, 0.44", "4.2525, -127.556, 2.70651, 0.29", "4.95547, -128.474, 3.10841, 0.29", "5.93075, -129.475, 3.61388, 0.29", "6.50244, -129.919, 3.874, 0.29", "7.03799, -130.226, 4.06266, 0.88", "7.48341, -130.442, 4.19716, 0.88", "8.21909, -130.772, 4.38966, 0.52", "8.55218, -130.92, 4.43872, 0.52", "9.15446, -131.217, 4.51352, 0.52", "9.62518, -131.548, 4.61842, 0.52", "10.2414, -132.175, 4.74882, 0.52", "10.5321, -132.578, 4.79262, 0.88", "10.8374, -133.079, 4.80104, 0.88", "11.2038, -133.692, 4.74428, 1.11", "11.5846, -134.261, 4.65875, 0.66", "12.3215, -135.163, 4.44512, 0.66", "12.6803, -135.482, 4.34372, 0.66", "13.321, -135.932, 4.19488, 0.66", "13.8448, -136.251, 4.09674, 0.52", "14.7347, -136.79, 3.91766, 0.66", "15.025, -136.967, 3.88853, 0.66", "15.6766, -137.365, 3.93579, 0.44", "16.2293, -137.714, 4.0598, 0.44", "17.0134, -138.245, 4.34649, 0.52", "17.9666, -138.932, 4.82786, 0.66", "18.7924, -139.561, 5.30842, 0.44", "19.6848, -140.249, 5.8754, 0.81", "20.5143, -140.888, 6.38337, 0.52", "21.0571, -141.308, 6.68438, 0.74", "21.7106, -141.819, 6.98963, 0.29", "22.0514, -142.099, 7.09028, 0.52", "22.5422, -142.538, 7.08881, 0.59", "23.4678, -143.416, 6.9876, 0.37", "24.1279, -144.06, 6.84563, 0.66", "24.501, -144.423, 6.7441, 1.03", "25.0954, -145.0, 6.55716, 1.03", "25.7564, -145.64, 6.38364, 0.74", "26.8387, -146.665, 6.21222, 0.52" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "17.8623, -135.074, -16.5013, 0.44", "17.8544, -136.088, -16.381, 0.44", "17.8424, -136.796, -16.2955, 0.81", "17.8247, -137.34, -16.2292, 1.18", "17.7936, -138.068, -16.1428, 0.74", "17.7588, -138.824, -16.0566, 0.44", "17.7261, -139.491, -15.9833, 0.96", "17.6887, -140.181, -15.9111, 0.96", "17.6485, -140.837, -15.8462, 1.18", "17.5519, -141.817, -15.7472, 0.74", "17.4038, -142.705, -15.6741, 0.66", "17.2284, -143.43, -15.6302, 0.66", "16.9531, -144.34, -15.6118, 0.66", "16.7959, -144.79, -15.6214, 1.03", "16.5534, -145.414, -15.6588, 0.81", "16.1651, -146.41, -15.7983, 0.52", "15.9775, -147.008, -15.8988, 0.44", "15.834, -147.759, -16.0167, 0.37", "15.8058, -148.187, -16.067, 0.66", "15.8073, -148.657, -16.0891, 0.66", "15.8716, -149.884, -16.1127, 0.44", "15.9473, -151.116, -16.0812, 0.44", "15.9735, -152.1, -16.0221, 0.66", "15.9443, -152.967, -15.9416, 0.81", "15.8312, -153.912, -15.8501, 0.96", "15.5861, -154.909, -15.7388, 1.11", "15.2997, -155.685, -15.6422, 0.81", "14.9952, -156.371, -15.5901, 0.88", "14.7514, -156.905, -15.5755, 0.66", "14.4044, -157.658, -15.5795, 0.29", "13.9692, -158.622, -15.5986, 0.29", "13.7179, -159.181, -15.5997, 0.52", "13.3233, -160.048, -15.609, 0.52", "12.9942, -160.76, -15.6133, 0.37", "12.681, -161.401, -15.6086, 0.29", "12.3732, -161.961, -15.5816, 0.29", "12.2343, -162.165, -15.5702, 0.88", "11.8969, -162.51, -15.5445, 1.11", "11.4676, -162.816, -15.5056, 0.44", "10.9157, -163.118, -15.4503, 0.37", "10.3759, -163.363, -15.4035, 0.59", "9.88716, -163.554, -15.3704, 0.74", "9.23972, -163.788, -15.3347, 0.44", "8.67808, -163.993, -15.3009, 0.37", "8.30788, -164.144, -15.2736, 0.88", "7.8884, -164.35, -15.23, 1.11", "7.59328, -164.525, -15.1848, 1.11", "7.29582, -164.711, -15.1216, 1.11", "6.56828, -165.191, -14.9407, 0.29", "6.09038, -165.52, -14.819, 0.59", "5.77468, -165.744, -14.7355, 0.59", "5.00755, -166.335, -14.5175, 0.29", "4.54694, -166.734, -14.3729, 0.29", "4.19176, -167.082, -14.2535, 0.52", "3.78179, -167.53, -14.1108, 0.52", "3.56657, -167.779, -14.034, 0.81", "3.20853, -168.265, -13.9021, 0.81", "2.8662, -168.879, -13.7673, 0.29", "2.48514, -169.705, -13.6028, 0.29", "2.28083, -170.186, -13.5047, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "17.8623, -135.074, -16.5013, 0.22", "18.899, -135.668, -17.3343, 0.22", "19.992, -136.295, -18.2126, 0.22", "21.3117, -137.052, -19.273, 0.22", "22.2201, -137.572, -20.0029, 0.22", "23.184, -138.125, -20.7774, 0.22", "24.1757, -138.693, -21.5742, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "68.0325, -24.7799, -29.8113, 0.74", "70.9357, -26.682, -30.7178, 0.74", "71.6966, -27.3047, -30.8519, 0.44", "72.2464, -27.7571, -30.8937, 0.74", "73.1069, -28.4127, -30.893, 0.52", "74.2647, -29.2007, -30.8087, 0.52", "75.5203, -29.9447, -30.7019, 0.52", "76.4355, -30.4486, -30.4747, 0.52", "77.3948, -30.8829, -30.2431, 0.52", "78.6385, -31.2615, -30.022, 0.52", "79.699, -31.4125, -29.8888, 0.74", "80.8234, -31.4174, -29.8045, 1.03", "81.2444, -31.3841, -29.7911, 1.4", "81.6657, -31.3373, -29.7931, 1.4", "83.3668, -31.1598, -29.8645, 0.44", "84.006, -31.1139, -29.8387, 0.74", "84.9322, -31.0943, -29.6765, 0.74", "85.5478, -31.1065, -29.4634, 0.96", "86.1079, -31.1484, -29.1621, 0.96", "86.8196, -31.2659, -28.6617, 0.96", "88.4357, -31.756, -27.2069, 0.66", "89.0797, -32.0485, -26.5336, 0.81", "89.4446, -32.2776, -26.0876, 0.81", "90.3077, -32.9163, -24.9494, 0.52", "90.9492, -33.428, -24.0984, 0.52", "91.666, -34.0104, -23.2181, 0.52", "92.4004, -34.5628, -22.4897, 0.52", "93.3709, -35.232, -21.6462, 0.44", "93.9289, -35.5537, -21.2721, 0.96", "94.5791, -35.8345, -21.0452, 1.11", "95.5632, -36.1615, -20.95, 0.44", "96.4835, -36.4523, -21.087, 0.37", "97.1689, -36.7009, -21.3374, 0.37", "98.3008, -37.159, -21.9561, 0.66", "99.581, -37.7116, -22.8184, 0.74", "100.133, -37.9477, -23.2368, 0.81", "100.944, -38.2727, -23.9155, 0.81", "102.003, -38.6501, -24.8379, 0.66", "102.973, -38.9437, -25.637, 0.66", "103.887, -39.1913, -26.3198, 0.29", "104.517, -39.3561, -26.7457, 0.59", "105.188, -39.5182, -27.1618, 0.74", "105.825, -39.6561, -27.5476, 0.44", "106.66, -39.822, -28.0215, 0.37", "107.515, -40.0117, -28.4917, 0.37", "108.345, -40.2277, -28.924, 0.59", "108.997, -40.4295, -29.2547, 0.59", "110.689, -41.0519, -30.285, 0.29", "111.78, -41.5422, -31.062, 0.29", "112.343, -41.8392, -31.5228, 0.29", "112.828, -42.1227, -31.935, 0.74", "113.309, -42.4278, -32.3621, 0.74", "115.206, -43.8801, -34.1592, 0.37", "115.76, -44.423, -34.7333, 0.52", "116.183, -44.9159, -35.255, 0.81", "116.636, -45.4637, -35.8814, 0.37", "117.051, -45.9367, -36.496, 0.37" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "68.0325, -24.7799, -29.8113, 0.88", "69.1801, -24.3504, -31.0774, 0.88", "69.6656, -24.2951, -31.6544, 1.25", "70.1238, -24.3173, -32.2605, 1.25", "70.7332, -24.362, -33.1369, 0.59", "72.363, -24.4815, -35.4808, 0.59", "74.0001, -24.6015, -37.8351, 0.96", "74.8629, -24.7612, -39.1157, 1.11", "76.3746, -25.1727, -41.4946, 1.25", "77.2889, -25.5103, -43.0306, 1.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-77.875, 145.067, -32.444, 0.22", "-77.8693, 144.139, -32.0285, 0.22", "-77.8657, 143.561, -31.7697, 0.22", "-77.8577, 142.266, -31.19, 0.22", "-77.8529, 141.476, -30.8364, 0.22", "-77.8487, 140.797, -30.5325, 0.22" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-77.875, 145.067, -32.444, 0.22", "-78.7554, 145.621, -32.2347, 0.22", "-79.5289, 146.134, -32.0537, 0.22", "-80.2646, 146.622, -31.8815, 0.22", "-80.9685, 147.089, -31.7168, 0.22", "-82.028, 147.792, -31.4688, 0.22", "-82.5686, 148.15, -31.3423, 0.37", "-83.106, 148.555, -31.1892, 0.37" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "151.648, 37.0308, 87.6682, 0.29", "156.309, 42.8637, 97.4272, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "151.648, 37.0308, 87.6682, 0.29", "154.288, 42.0987, 92.8037, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "168.926, 27.2963, 81.4388, 0.29", "171.375, 30.1065, 71.0697, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "168.926, 27.2963, 81.4388, 0.29", "158.218, 27.3148, 84.4812, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "103.996, 60.3933, -31.698, 0.37", "103.178, 60.708, -32.3574, 0.37", "102.143, 61.0435, -33.5975, 0.66", "101.575, 61.1701, -34.6852, 0.29", "101.125, 61.2569, -35.7069, 0.29", "100.585, 61.3789, -36.9969, 0.29", "99.4263, 61.707, -39.7931, 0.29", "98.9064, 61.8123, -41.1071, 0.81", "97.4286, 62.0155, -45.1135, 0.44", "96.9553, 62.0613, -46.5391, 0.96", "96.599, 62.1214, -47.7757, 1.18", "96.1986, 62.2362, -49.4072, 0.88" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "103.996, 60.3933, -31.698, 0.37", "105.087, 60.6926, -31.627, 0.37", "106.341, 61.2362, -31.5876, 0.29", "106.8, 61.4783, -31.5799, 0.66", "107.244, 61.7494, -31.5682, 0.66", "107.791, 62.1481, -31.5744, 0.37", "108.551, 62.7335, -31.6031, 0.37", "109.364, 63.4565, -31.6642, 0.81", "109.692, 63.7883, -31.6713, 1.11", "110.143, 64.2761, -31.657, 1.33", "111.033, 65.3472, -31.5804, 0.44", "111.535, 66.0412, -31.4829, 0.52", "112.161, 67.0445, -31.2902, 1.03", "112.795, 68.2402, -31.0267, 0.52", "113.078, 68.8487, -30.868, 0.66", "113.345, 69.5298, -30.6659, 0.66", "113.678, 70.6464, -30.2967, 0.44", "113.799, 71.2659, -30.132, 0.29", "113.923, 72.0354, -29.987, 0.44", "114.112, 72.9148, -29.9033, 0.66", "114.325, 73.6468, -29.868, 0.37", "114.61, 74.4884, -29.8725, 0.37", "115.079, 75.8525, -29.9486, 0.29", "115.367, 76.732, -30.0029, 0.29", "115.761, 78.2117, -30.1123, 0.29", "115.955, 79.229, -30.1611, 0.29", "116.032, 80.0239, -30.166, 1.55", "116.024, 80.684, -30.1383, 1.18", "115.894, 81.3926, -30.0309, 0.96", "115.452, 82.5371, -29.7723, 0.52", "114.67, 83.8507, -29.3895, 0.29", "114.048, 84.6507, -29.1292, 0.29", "113.72, 85.023, -29.0057, 0.29", "112.81, 86.0295, -28.7041, 0.22", "112.534, 86.3387, -28.6317, 0.66", "112.203, 86.7297, -28.5653, 0.66", "111.66, 87.4659, -28.524, 0.37", "111.267, 88.2139, -28.5219, 0.29", "111.005, 88.9692, -28.5799, 0.22", "110.848, 89.6579, -28.6237, 0.22", "110.686, 90.7375, -28.6214, 0.22", "110.655, 91.2321, -28.5956, 0.29", "110.665, 91.9827, -28.5163, 0.29", "110.731, 93.1144, -28.3562, 0.29", "110.897, 94.5874, -28.1373, 0.29", "111.025, 95.5063, -27.985, 0.29", "111.165, 96.2496, -27.8509, 0.29", "111.366, 97.2251, -27.656, 0.29", "111.72, 98.7047, -27.3307, 0.29", "112.055, 99.8466, -27.0774, 0.29" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-17.1716, -209.382, 6.58113, 0.29", "-16.6286, -220.628, 4.9574, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-17.1716, -209.382, 6.58113, 0.29", "-12.192, -206.752, 12.6471, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-27.3245, -127.691, -7.17456, 0.37", "-27.934, -128.97, -7.25121, 0.37", "-28.2252, -129.582, -7.28783, 0.81" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-27.3245, -127.691, -7.17456, 0.29", "-30.0244, -127.469, -8.02915, 0.29", "-30.814, -127.405, -8.25801, 0.22", "-31.8603, -127.388, -8.52068, 0.22", "-32.4778, -127.426, -8.64776, 1.47", "-32.9357, -127.454, -8.74199, 1.69", "-33.3731, -127.48, -8.83202, 1.69", "-34.5513, -127.539, -8.8307, 0.96", "-35.4042, -127.66, -8.89267, 0.29", "-36.138, -127.875, -8.99996, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "26.8387, -146.665, 6.21222, 0.29", "26.6288, -147.626, 4.77905, 0.29", "26.4458, -148.463, 3.52915, 0.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "26.8387, -146.665, 6.21222, 0.29", "26.9592, -144.901, 5.34928, 0.29", "27.1044, -143.798, 4.31593, 0.29", "27.2224, -143.31, 3.39266, 0.29", "27.3369, -142.836, 2.49681, 0.52", "27.6609, -141.498, -0.0370131, 0.44", "27.7695, -141.048, -0.887223, 0.29", "27.9445, -141.165, -2.34807, 0.29", "28.0061, -141.318, -2.87864, 0.29", "28.195, -136.64, -10.4642, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "2.28083, -170.186, -13.5047, 0.22", "2.25976, -170.93, -13.3688, 0.22", "2.25291, -171.781, -13.1668, 0.22", "2.27264, -172.886, -12.9001, 0.22", "2.30049, -173.793, -12.6813, 0.22", "2.35702, -174.961, -12.409, 0.22", "2.40186, -175.888, -12.193, 0.22", "2.45822, -176.97, -11.9525, 0.22", "2.51814, -177.655, -11.8048, 0.37", "2.55207, -177.89, -11.7503, 0.37", "2.66994, -178.547, -11.5822, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "2.28083, -170.186, -13.5047, 1.55", "1.59495, -170.592, -13.517, 1.55", "1.19417, -170.883, -13.5349, 1.55", "0.401187, -171.485, -13.5682, 0.29", "-0.756085, -172.362, -13.5879, 0.44", "-1.05173, -172.561, -13.6155, 0.44", "-2.30393, -173.261, -13.8031, 0.29", "-3.09521, -173.642, -13.9527, 0.29", "-3.88375, -173.972, -14.0998, 0.29", "-4.75958, -174.272, -14.2435, 0.29", "-6.49571, -174.692, -14.4392, 0.29", "-8.03237, -174.901, -14.5646, 0.29", "-9.00362, -174.916, -14.6159, 0.22", "-9.97807, -174.861, -14.6393, 0.22", "-10.7375, -174.793, -14.6361, 0.22", "-11.5662, -174.695, -14.596, 0.22", "-12.5853, -174.574, -14.4324, 0.22", "-13.3455, -174.439, -14.2827, 0.22", "-13.8772, -174.297, -14.1971, 0.52", "-14.351, -174.131, -14.1411, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "77.2889, -25.5103, -43.0306, 0.81", "79.8224, -25.5167, -43.7573, 0.81", "81.7313, -25.6237, -44.2578, 0.88", "83.2427, -25.7784, -44.6903, 0.37", "83.6794, -25.823, -44.8116, 0.37", "84.6339, -25.9206, -45.0766, 0.66", "85.2552, -25.9841, -45.2491, 0.74", "85.4748, -26.002, -45.3385, 0.74", "86.6437, -26.2397, -45.6285, 0.37", "87.2206, -26.4054, -45.7806, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "77.2889, -25.5103, -43.0306, 0.44", "79.5759, -24.1549, -44.603, 0.44", "81.1909, -23.1977, -45.7133, 0.44", "82.0833, -22.6688, -46.3269, 0.44", "83.8367, -21.6295, -47.5324, 1.18" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "96.1986, 62.2362, -49.4072, 0.96", "94.5178, 63.4491, -53.3056, 0.96", "92.5558, 64.5989, -57.1774, 0.59", "92.0772, 64.8817, -58.0996, 0.59", "91.6448, 65.1699, -58.9774, 0.37", "90.7148, 65.91, -61.0098, 0.29", "90.1371, 66.4244, -62.3149, 0.29", "89.7541, 66.8493, -63.1272, 0.66", "89.1443, 67.8748, -64.5839, 0.22", "88.8425, 68.4947, -65.4861, 0.22", "88.4678, 69.2598, -66.6546, 0.88", "88.2242, 69.7251, -67.3618, 0.88", "87.442, 70.9639, -69.2767, 0.37", "87.0094, 71.46, -70.1882, 0.96", "86.5353, 71.8685, -71.1173, 1.11", "85.6366, 72.5556, -72.9272, 0.44", "85.1231, 72.9592, -74.0483, 0.37", "84.7505, 73.2861, -74.9414, 0.52", "83.2434, 74.7394, -78.7532, 0.37", "82.6468, 75.4841, -80.5683, 0.96", "82.2453, 76.132, -81.9653, 0.96", "81.8736, 76.8184, -83.3823, 0.52", "81.6114, 77.295, -84.459, 1.33", "81.2869, 77.8272, -85.7751, 1.33", "79.7992, 79.9538, -91.1648, 0.52", "79.6209, 80.1875, -91.7719, 0.52", "79.2157, 80.6657, -93.0754, 0.52", "77.3917, 82.5554, -98.6062, 0.44", "76.4857, 83.4037, -101.106, 0.59", "75.9057, 83.946, -102.567, 0.59", "75.2764, 84.5346, -103.897, 0.88", "75.0452, 84.771, -104.333, 1.25", "74.5813, 85.2959, -105.019, 1.47", "73.4314, 86.7166, -106.127, 0.29", "72.3662, 88.1115, -107.01, 0.29", "71.9313, 88.685, -107.342, 0.29", "71.1745, 89.6949, -107.862, 0.29", "70.7004, 90.3699, -108.191, 0.29", "69.58, 92.0547, -108.955, 0.29", "69.1361, 92.7092, -109.258, 0.29", "68.512, 93.481, -109.664, 0.96", "68.1014, 94.0122, -109.969, 1.25" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "96.1986, 62.2362, -49.4072, 0.15", "96.6924, 63.3225, -49.226, 0.15", "96.9629, 63.9177, -49.1267, 0.15", "97.1802, 64.396, -49.0469, 0.81", "97.369, 64.8112, -48.9777, 1.03", "97.6177, 65.3584, -48.8864, 1.03" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-28.2252, -129.582, -7.28783, 0.52", "-28.62, -130.125, -7.40075, 0.52", "-29.1519, -131.011, -7.56218, 0.52", "-29.7298, -132.155, -7.68182, 0.37", "-29.9886, -132.683, -7.72949, 0.52", "-30.3295, -133.394, -7.78433, 0.44", "-30.7177, -134.184, -7.8372, 0.37", "-31.0907, -134.991, -7.85957, 0.29", "-31.4448, -135.85, -7.84322, 0.29", "-31.865, -136.969, -7.82246, 1.03", "-31.9868, -137.283, -7.81493, 1.18", "-32.3672, -138.179, -7.77946, 0.88", "-32.6518, -138.819, -7.76183, 0.44", "-33.0139, -139.645, -7.78641, 0.37", "-33.2052, -140.123, -7.85666, 0.59", "-33.3526, -140.565, -7.96916, 0.44", "-33.5991, -141.452, -8.30123, 0.44", "-33.7383, -142.074, -8.59581, 0.44", "-33.9228, -143.022, -9.08422, 0.52", "-34.0893, -143.906, -9.52753, 0.66", "-34.2014, -144.648, -9.8283, 0.88", "-34.2561, -145.177, -9.96539, 0.88", "-34.2971, -146.009, -10.0135, 0.52", "-34.3279, -146.756, -9.86601, 0.29", "-34.3662, -147.674, -9.49152, 0.29", "-34.4714, -148.729, -8.96431, 0.29", "-34.6012, -149.425, -8.59618, 0.96", "-34.7316, -149.883, -8.38796, 1.18", "-34.8912, -150.383, -8.20616, 1.18", "-35.2116, -151.304, -8.0147, 0.59", "-35.5019, -152.256, -7.95624, 0.52", "-35.7412, -153.175, -7.97553, 0.52", "-36.0437, -154.354, -8.0593, 0.66", "-36.2256, -155.134, -8.13459, 0.66", "-36.3897, -155.972, -8.23815, 0.81", "-36.519, -157.186, -8.41632, 0.81", "-36.4633, -158.07, -8.51794, 0.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-28.2252, -129.582, -7.28783, 0.37", "-28.2505, -129.524, -6.08768, 0.37", "-28.3567, -129.517, -4.52499, 0.37", "-28.4389, -129.516, -3.78931, 0.37", "-28.6864, -129.49, -2.17796, 0.29", "-28.8644, -129.45, -1.22787, 0.29", "-29.0754, -129.402, -0.101476, 0.29", "-29.2725, -129.382, 0.98609, 0.37", "-29.421, -129.397, 1.50629, 0.37", "-29.6156, -129.428, 1.99875, 0.29", "-29.9122, -129.433, 2.50045, 0.22" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "26.4458, -148.463, 3.52915, 0.22", "25.7617, -149.372, 3.55815, 0.22", "24.7761, -150.68, 3.59993, 0.22", "24.2158, -151.424, 3.62368, 0.29", "23.9105, -151.83, 3.63662, 0.29", "23.1192, -152.88, 3.67016, 0.22", "22.6021, -153.567, 3.69208, 0.22", "18.3345, -162.314, 3.18676, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "26.4458, -148.463, 3.52915, 0.37", "26.3458, -149.76, 4.05685, 0.37", "26.139, -150.935, 4.365, 0.96", "25.765, -152.399, 4.56494, 0.59", "25.4376, -153.515, 4.58795, 0.59", "25.0904, -154.698, 4.61234, 0.22", "24.7597, -155.825, 4.63558, 0.22", "24.2924, -157.031, 4.54173, 0.22", "23.8305, -158.05, 4.30646, 0.22", "23.253, -159.096, 3.90391, 0.22", "21.7385, -169.561, 5.2977, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "83.8367, -21.6295, -47.5324, 0.37", "89.572, -17.7921, -55.217, 0.37", "90.5458, -17.0935, -56.4967, 0.66", "91.2933, -16.4793, -57.4649, 0.66", "91.65, -16.1614, -57.9149, 0.96", "92.5802, -15.269, -58.9982, 1.11", "93.7041, -14.1517, -60.175, 1.11", "95.3133, -12.4391, -61.1425, 0.81", "96.569, -11.0738, -61.6769, 1.4", "96.9797, -10.6224, -61.7823, 1.4", "98.5228, -8.95882, -61.8727, 0.37", "99.5719, -7.87394, -61.676, 0.37", "100.792, -6.71203, -61.1634, 0.37", "101.729, -5.86538, -60.5825, 0.66", "102.454, -5.1917, -60.0384, 0.66", "103.366, -4.15532, -59.2696, 0.29", "103.949, -3.2871, -58.6768, 0.52", "104.314, -2.60779, -58.265, 0.52", "104.903, -1.40321, -57.6339, 0.29", "105.543, -0.127022, -57.0337, 1.03", "106.595, 1.81906, -56.2437, 0.66", "107.305, 3.06937, -55.7831, 0.44", "107.569, 3.51445, -55.6233, 0.66", "108.394, 4.89744, -55.1495, 0.37", "108.824, 5.57578, -54.892, 0.52", "109.679, 6.82606, -54.3283, 0.37", "110.281, 7.61422, -53.8582, 0.37", "110.929, 8.44214, -53.3472, 0.37", "111.591, 9.40223, -52.7719, 0.37", "112.16, 10.349, -52.202, 0.96", "112.397, 10.7448, -51.9581, 0.96", "113.383, 12.2816, -50.943, 0.29", "114.218, 13.5172, -50.129, 0.29", "115.027, 14.6578, -49.3835, 0.29", "115.718, 15.6147, -48.7703, 1.11" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "83.8367, -21.6295, -47.5324, 0.52", "83.8609, -17.1582, -50.9536, 0.52", "83.8529, -16.7838, -51.2179, 0.52", "83.7642, -15.0036, -52.3993, 0.37", "83.7393, -14.5053, -52.73, 0.29", "83.6642, -12.998, -53.7304, 0.29", "83.6003, -11.7165, -54.5809, 0.29", "83.4376, -10.3766, -55.0349, 0.29", "83.3647, -9.80112, -55.245, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "68.1014, 94.0122, -109.969, 0.29", "66.7314, 95.9954, -112.897, 0.29", "66.3645, 96.3477, -113.875, 0.29", "65.8896, 96.7027, -115.295, 0.29", "65.0584, 97.3381, -117.866, 0.29", "64.7348, 97.6149, -118.83, 0.44", "64.2955, 97.9907, -120.139, 0.44", "62.9523, 98.8851, -124.018, 0.29", "62.3483, 99.2275, -125.904, 0.29", "62.0329, 99.3952, -127.034, 0.29", "61.5657, 99.6448, -128.765, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "68.1014, 94.0122, -109.969, 0.22", "67.5102, 93.2722, -109.552, 0.22", "67.0059, 92.7202, -109.217, 0.22", "66.3566, 92.0991, -108.791, 1.4", "65.6283, 91.4024, -108.312, 0.22", "64.8158, 90.6251, -107.779, 1.84", "64.104, 89.9443, -107.311, 0.22", "63.467, 89.4202, -106.866, 0.22", "62.8575, 88.9723, -106.434, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "97.6177, 65.3584, -48.8864, 0.74", "97.5941, 65.8242, -48.5165, 0.74", "97.5253, 66.5532, -47.9038, 0.22", "97.4435, 66.9889, -47.5295, 0.22", "97.2164, 67.8302, -46.7742, 0.22", "96.9983, 68.5426, -46.058, 1.33", "96.8984, 68.8805, -45.6839, 1.33", "96.6895, 69.5192, -44.8667, 0.22", "96.5246, 69.9382, -44.2526, 0.22", "96.4035, 70.1879, -43.8542, 0.22", "96.0967, 70.7322, -43.0026, 0.22", "95.8987, 71.1154, -42.334, 0.22", "95.8178, 71.3746, -41.8976, 0.37", "95.7905, 71.6547, -41.4582, 0.37", "95.8338, 71.985, -40.9624, 0.37", "95.9001, 72.2577, -40.6035, 0.15", "96.0565, 73.0663, -39.6725, 0.22", "96.1684, 73.7565, -38.9316, 0.22", "96.2366, 74.2359, -38.4026, 0.22", "96.2911, 75.1117, -37.4517, 0.22", "96.2683, 75.711, -36.7755, 0.22", "96.1837, 76.448, -35.9017, 0.22", "96.1331, 76.713, -35.58, 0.74", "95.8568, 77.7561, -34.2378, 0.29", "95.6583, 78.3747, -33.4388, 0.29", "95.4529, 78.9883, -32.6688, 0.29", "95.3259, 79.4178, -32.0828, 0.29", "95.2376, 79.9055, -31.3304, 0.52", "95.1856, 80.3265, -30.6224, 0.37", "95.1537, 80.8666, -29.6779, 0.29", "95.1523, 80.9953, -29.4415, 0.37", "95.1489, 81.4969, -28.5189, 0.37", "95.1209, 82.1513, -27.2803, 0.37", "95.0837, 82.6373, -26.3085, 0.22", "95.073, 82.892, -25.7638, 0.22", "95.0606, 83.162, -25.1751, 0.74", "95.0435, 83.3187, -24.8543, 0.88", "94.9457, 83.8652, -23.9031, 0.59", "94.7464, 84.5744, -22.8793, 0.81" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "97.6177, 65.3584, -48.8864, 0.29", "99.0291, 65.9588, -49.6282, 0.29", "100.309, 66.3291, -50.5274, 0.29", "101.58, 66.6075, -51.5222, 1.03", "102.18, 66.7203, -52.0185, 1.03", "103.678, 66.9255, -53.2069, 0.44", "104.827, 67.0489, -54.0604, 0.29", "106.364, 67.0802, -55.1903, 0.96", "106.886, 67.0654, -55.5536, 0.96", "108.435, 67.0288, -56.5115, 0.22", "109.628, 67.0507, -57.1741, 0.22", "110.875, 67.1503, -57.726, 0.22", "112.233, 67.3472, -58.2501, 0.22", "113.804, 67.6925, -58.7928, 0.22", "114.783, 67.9727, -59.116, 0.52", "115.582, 68.2953, -59.3572, 0.29", "116.572, 68.8704, -59.6243, 1.03", "117.21, 69.3776, -59.7115, 1.03", "117.751, 69.9905, -59.7018, 0.88", "118.28, 70.6872, -59.6085, 0.66", "118.919, 71.6353, -59.4127, 0.37", "119.543, 72.686, -59.1178, 0.59", "120.245, 74.0298, -58.661, 0.29", "120.845, 75.2241, -58.1721, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-36.4633, -158.07, -8.51794, 0.74", "-36.6061, -158.677, -8.24423, 0.74", "-36.8808, -159.575, -7.78149, 0.66", "-37.1299, -160.166, -7.42703, 0.52", "-37.5227, -160.884, -6.94795, 0.37", "-37.7579, -161.277, -6.68472, 0.74", "-37.9471, -161.612, -6.45803, 1.03", "-38.2074, -162.055, -6.14589, 0.74", "-38.5795, -162.695, -5.70363, 0.52", "-38.939, -163.407, -5.26552, 0.52", "-39.1685, -163.977, -4.98384, 0.66", "-39.4664, -164.968, -4.611, 0.88", "-39.5477, -165.321, -4.5118, 1.18", "-39.6451, -165.887, -4.39438, 0.81", "-39.7456, -166.69, -4.28257, 0.52", "-39.8357, -167.367, -4.22987, 0.52", "-39.9773, -168.171, -4.1964, 0.52", "-40.0683, -168.553, -4.19634, 0.52", "-40.2654, -169.303, -4.19698, 0.52", "-40.4812, -170.046, -4.19164, 0.52", "-40.6872, -170.671, -4.19149, 1.03", "-40.8511, -171.125, -4.18727, 1.25", "-41.0928, -171.689, -4.16924, 0.66", "-41.375, -172.238, -4.13925, 0.29", "-41.787, -172.778, -4.06257, 0.29", "-42.0559, -172.708, -3.94828, 0.52", "-42.7275, -172.226, -3.61742, 0.29", "-43.2484, -171.772, -3.35625, 0.29", "-43.7926, -171.208, -3.07511, 0.22", "-43.8945, -171.086, -3.02258, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-36.4633, -158.07, -8.51794, 0.22", "-36.9877, -160.064, -9.05814, 0.22", "-37.1948, -160.86, -9.28379, 0.22", "-37.5444, -162.45, -9.72416, 0.22", "-37.8896, -164.253, -10.1988, 0.22", "-38.1692, -165.715, -10.5835, 0.22", "-38.7121, -168.551, -11.3301, 0.22", "-38.9636, -169.77, -11.6077, 0.22", "-39.4475, -172.171, -12.1986, 0.22", "-39.6702, -173.508, -12.5707, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "115.718, 15.6147, -48.7703, 0.29", "116.797, 14.6073, -49.2149, 0.29", "117.418, 14.0278, -49.4706, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "115.718, 15.6147, -48.7703, 0.37", "116.214, 15.8401, -48.1369, 0.37", "116.798, 16.1054, -47.391, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_75", "dend_75", "dend_75", "dend_75", "dend_72", "dend_72", "dend_72", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_56", "dend_56", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_39", "dend_38", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_8", "dend_8", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L5_ChC_03143d1e9b_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_78, id: dend_78, parent: soma_0
create dend_78
public dend_78
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: soma_0
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_88, id: dend_88, parent: dend_78
create dend_88
public dend_88
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_69, id: dend_69, parent: dend_53
create dend_69
public dend_69
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_17, id: dend_17, parent: dend_0
create dend_17
public dend_17
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_85, id: dend_85, parent: dend_79
create dend_85
public dend_85
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_17
create dend_31
public dend_31
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_1
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_75, id: dend_75, parent: dend_71
create dend_75
public dend_75
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_68, id: dend_68, parent: dend_58
create dend_68
public dend_68
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_84, id: dend_84, parent: dend_82
create dend_84
public dend_84
// Section: dend_83, id: dend_83, parent: dend_82
create dend_83
public dend_83
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_85
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_78(0), soma_0(0.49999968585636767)
    connect dend_53(0), soma_0(0.49999968585636767)
    connect dend_50(0), soma_0(0.49999968585636767)
    connect dend_49(0), soma_0(0.49999968585636767)
    connect dend_44(0), soma_0(0.49999968585636767)
    connect dend_41(0), soma_0(0.49999968585636767)
    connect dend_32(0), soma_0(0.49999968585636767)
    connect dend_0(0), soma_0(0.49999968585636767)
    connect axon_0(0), soma_0(1.0)
    connect dend_88(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_69(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_17(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_85(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_1(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_75(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_68(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_84(0), dend_82(1.0)
    connect dend_83(0), dend_82(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.699158, -10.4987, 0.384835, 2.69968 ) }
    soma_0 { pt3dadd( -0.589028, -9.39629, 0.347626, 4.40168 ) }
    soma_0 { pt3dadd( -0.478898, -8.29387, 0.310418, 6.28323 ) }
    soma_0 { pt3dadd( -0.368767, -7.19145, 0.273209, 7.64436 ) }
    soma_0 { pt3dadd( -0.258637, -6.08903, 0.236, 8.5434 ) }
    soma_0 { pt3dadd( -0.148506, -4.98661, 0.198792, 9.49409 ) }
    soma_0 { pt3dadd( -0.0383758, -3.88419, 0.161583, 10.6841 ) }
    soma_0 { pt3dadd( 0.0717547, -2.78177, 0.124374, 11.1456 ) }
    soma_0 { pt3dadd( 0.181885, -1.67935, 0.0871655, 11.461 ) }
    soma_0 { pt3dadd( 0.292016, -0.576928, 0.0499568, 11.5573 ) }
    soma_0 { pt3dadd( 0.402146, 0.525493, 0.0127481, 11.5875 ) }
    soma_0 { pt3dadd( 0.512276, 1.62791, -0.0244606, 11.382 ) }
    soma_0 { pt3dadd( 0.622407, 2.73033, -0.0616693, 11.2002 ) }
    soma_0 { pt3dadd( 0.732537, 3.83276, -0.098878, 10.9052 ) }
    soma_0 { pt3dadd( 0.842668, 4.93518, -0.136087, 10.3672 ) }
    soma_0 { pt3dadd( 0.952798, 6.0376, -0.173295, 9.50426 ) }
    soma_0 { pt3dadd( 1.06293, 7.14002, -0.210504, 8.36675 ) }
    soma_0 { pt3dadd( 1.17306, 8.24244, -0.247713, 7.22308 ) }
    soma_0 { pt3dadd( 1.28319, 9.34486, -0.284922, 6.14175 ) }
    soma_0 { pt3dadd( 1.39332, 10.4473, -0.32213, 4.86495 ) }
    soma_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 2.69802 ) }
    // Section: dend_78, id: dend_78, parent: soma_0 (entry count 21/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 0.562386, 11.6828, -3.45834, 0.37 ) }
    dend_78 { pt3dadd( 0.124494, 12.8992, -3.54177, 0.37 ) }
    dend_78 { pt3dadd( 0.0709825, 13.2297, -3.60204, 0.74 ) }
    dend_78 { pt3dadd( 0.105466, 13.4901, -3.6945, 0.74 ) }
    dend_78 { pt3dadd( 0.395705, 14.2898, -4.04622, 0.37 ) }
    dend_78 { pt3dadd( 0.681219, 14.9292, -4.30768, 0.66 ) }
    dend_78 { pt3dadd( 1.01493, 15.5891, -4.58697, 1.33 ) }
    dend_78 { pt3dadd( 1.32926, 16.0812, -4.8048, 1.33 ) }
    dend_78 { pt3dadd( 1.85824, 16.8939, -5.17078, 0.74 ) }
    dend_78 { pt3dadd( 2.25339, 17.5437, -5.44638, 0.74 ) }
    dend_78 { pt3dadd( 2.85552, 18.6178, -5.90112, 1.25 ) }
    dend_78 { pt3dadd( 3.23498, 19.4813, -6.25115, 2.06 ) }
    dend_78 { pt3dadd( 3.42747, 20.126, -6.48495, 2.06 ) }
    dend_78 { pt3dadd( 3.56007, 20.9992, -6.77387, 1.4 ) }
    dend_78 { pt3dadd( 3.50974, 22.0076, -7.09562, 0.74 ) }
    dend_78 { pt3dadd( 3.28784, 22.6689, -7.30859, 1.11 ) }
    dend_78 { pt3dadd( 2.90175, 23.1758, -7.47345, 1.11 ) }
    dend_78 { pt3dadd( 2.34508, 23.6089, -7.60399, 0.81 ) }
    dend_78 { pt3dadd( 1.61195, 23.9747, -7.7839, 0.81 ) }
    dend_78 { pt3dadd( 0.716094, 24.2721, -8.02053, 0.81 ) }
    dend_78 { pt3dadd( -0.157345, 24.4901, -8.27626, 0.96 ) }
    dend_78 { pt3dadd( -0.878439, 24.6691, -8.49582, 1.11 ) }
    dend_78 { pt3dadd( -1.52622, 24.8507, -8.73006, 1.11 ) }
    dend_78 { pt3dadd( -2.93344, 25.342, -9.34469, 1.11 ) }
    dend_78 { pt3dadd( -3.34922, 25.544, -9.5707, 1.11 ) }
    dend_78 { pt3dadd( -4.01991, 26.081, -10.0351, 0.59 ) }
    dend_78 { pt3dadd( -4.41625, 26.657, -10.3707, 0.96 ) }
    dend_78 { pt3dadd( -4.65066, 27.1887, -10.5928, 1.25 ) }
    dend_78 { pt3dadd( -4.81611, 27.6682, -10.745, 1.55 ) }
    dend_78 { pt3dadd( -4.91647, 27.9703, -10.8104, 1.55 ) }
    dend_78 { pt3dadd( -5.27488, 28.8979, -10.9929, 0.74 ) }
    dend_78 { pt3dadd( -5.83799, 30.0196, -11.2103, 0.96 ) }
    dend_78 { pt3dadd( -6.30433, 30.6997, -11.3672, 0.66 ) }
    dend_78 { pt3dadd( -6.69136, 31.1275, -11.4895, 0.66 ) }
    dend_78 { pt3dadd( -7.31288, 31.6591, -11.6833, 0.81 ) }
    dend_78 { pt3dadd( -7.82872, 32.0085, -11.8494, 0.96 ) }
    dend_78 { pt3dadd( -8.50746, 32.3836, -12.0856, 1.47 ) }
    dend_78 { pt3dadd( -9.13284, 32.7074, -12.3154, 1.62 ) }
    dend_78 { pt3dadd( -9.72335, 33.0604, -12.5388, 1.47 ) }
    dend_78 { pt3dadd( -10.273, 33.4564, -12.7576, 1.11 ) }
    dend_78 { pt3dadd( -10.894, 34.0009, -13.0228, 0.81 ) }
    dend_78 { pt3dadd( -11.6251, 34.8116, -13.382, 0.66 ) }
    dend_78 { pt3dadd( -12.018, 35.3709, -13.6001, 0.81 ) }
    dend_78 { pt3dadd( -12.5232, 36.315, -13.9264, 1.03 ) }
    dend_78 { pt3dadd( -12.7185, 36.8069, -14.0913, 1.25 ) }
    dend_78 { pt3dadd( -12.8576, 37.2646, -14.2519, 1.25 ) }
    dend_78 { pt3dadd( -13.1089, 38.2526, -14.6328, 0.96 ) }
    dend_78 { pt3dadd( -13.2962, 39.0151, -14.9689, 0.81 ) }
    dend_78 { pt3dadd( -13.5573, 39.9559, -15.4397, 0.59 ) }
    dend_78 { pt3dadd( -13.7725, 40.6096, -15.7894, 0.59 ) }
    dend_78 { pt3dadd( -14.0686, 41.3841, -16.2087, 0.59 ) }
    dend_78 { pt3dadd( -14.3939, 42.1444, -16.6059, 0.59 ) }
    dend_78 { pt3dadd( -14.709, 42.8563, -16.9141, 0.44 ) }
    dend_78 { pt3dadd( -15.0077, 43.5996, -17.1504, 0.66 ) }
    dend_78 { pt3dadd( -15.2391, 44.3937, -17.2798, 0.74 ) }
    dend_78 { pt3dadd( -15.3141, 44.892, -17.3026, 0.96 ) }
    dend_78 { pt3dadd( -15.3212, 45.4496, -17.2856, 0.96 ) }
    dend_78 { pt3dadd( -15.2054, 46.6873, -17.2628, 0.52 ) }
    dend_78 { pt3dadd( -15.0452, 47.6909, -17.276, 0.59 ) }
    dend_78 { pt3dadd( -14.8331, 48.8291, -17.3334, 0.59 ) }
    dend_78 { pt3dadd( -14.7238, 49.4651, -17.3928, 0.96 ) }
    dend_78 { pt3dadd( -14.6399, 50.1989, -17.4965, 0.96 ) }
    dend_78 { pt3dadd( -14.6136, 51.5018, -17.7581, 0.66 ) }
    dend_78 { pt3dadd( -14.7467, 52.3974, -18.0275, 0.66 ) }
    dend_78 { pt3dadd( -15.0405, 53.1229, -18.3078, 0.96 ) }
    dend_78 { pt3dadd( -15.3801, 53.5628, -18.494, 1.03 ) }
    dend_78 { pt3dadd( -15.8137, 53.918, -18.6709, 1.03 ) }
    dend_78 { pt3dadd( -16.3901, 54.2412, -18.8835, 1.03 ) }
    dend_78 { pt3dadd( -17.1669, 54.5447, -19.1917, 0.74 ) }
    dend_78 { pt3dadd( -17.7782, 54.7316, -19.4956, 0.74 ) }
    dend_78 { pt3dadd( -18.186, 54.8321, -19.743, 0.52 ) }
    dend_78 { pt3dadd( -19.0883, 55.0122, -20.4094, 0.52 ) }
    dend_78 { pt3dadd( -19.8519, 55.1329, -21.0415, 0.52 ) }
    dend_78 { pt3dadd( -20.6305, 55.2285, -21.7162, 1.11 ) }
    dend_78 { pt3dadd( -21.0539, 55.2696, -22.0712, 1.4 ) }
    dend_78 { pt3dadd( -21.5347, 55.3018, -22.432, 1.4 ) }
    dend_78 { pt3dadd( -22.3566, 55.3244, -22.9445, 0.81 ) }
    dend_78 { pt3dadd( -22.8633, 55.3357, -23.1517, 0.59 ) }
    dend_78 { pt3dadd( -23.6263, 55.3749, -23.3147, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_78 { pt3dadd( -24.3929, 55.4513, -23.3589, 0.44 ) }
    dend_78 { pt3dadd( -25.1702, 55.5796, -23.3362, 0.74 ) }
    dend_78 { pt3dadd( -25.913, 55.7935, -23.278, 1.33 ) }
    dend_78 { pt3dadd( -26.8165, 56.2148, -23.2256, 0.88 ) }
    dend_78 { pt3dadd( -27.2169, 56.4966, -23.2816, 0.59 ) }
    dend_78 { pt3dadd( -27.465, 56.7437, -23.3831, 0.59 ) }
    dend_78 { pt3dadd( -27.814, 57.1811, -23.6383, 0.74 ) }
    dend_78 { pt3dadd( -28.2458, 57.7943, -24.0849, 0.96 ) }
    dend_78 { pt3dadd( -28.8033, 58.5925, -24.7683, 0.59 ) }
    dend_78 { pt3dadd( -29.3802, 59.3719, -25.5281, 0.59 ) }
    dend_78 { pt3dadd( -29.6804, 59.7633, -25.9074, 0.81 ) }
    dend_78 { pt3dadd( -30.0595, 60.2111, -26.3232, 0.96 ) }
    dend_78 { pt3dadd( -30.4229, 60.5744, -26.6345, 1.03 ) }
    dend_78 { pt3dadd( -31.0383, 61.1269, -27.0288, 0.66 ) }
    dend_78 { pt3dadd( -31.2268, 61.3019, -27.1266, 0.66 ) }
    dend_78 { pt3dadd( -31.7331, 61.8527, -27.3704, 0.81 ) }
    dend_78 { pt3dadd( -32.1798, 62.449, -27.6334, 0.81 ) }
    dend_78 { pt3dadd( -32.5194, 63.0644, -27.8919, 0.66 ) }
    dend_78 { pt3dadd( -32.7961, 63.7198, -28.1557, 0.66 ) }
    dend_78 { pt3dadd( -33.1406, 64.7392, -28.5587, 0.52 ) }
    dend_78 { pt3dadd( -33.3376, 65.3757, -28.8184, 0.81 ) }
    dend_78 { pt3dadd( -33.4825, 65.8503, -29.0204, 0.74 ) }
    dend_78 { pt3dadd( -33.8331, 66.8685, -29.4488, 0.59 ) }
    dend_78 { pt3dadd( -34.047, 67.3663, -29.6406, 0.74 ) }
    dend_78 { pt3dadd( -34.3328, 67.8589, -29.8067, 0.96 ) }
    dend_78 { pt3dadd( -34.7742, 68.4506, -29.9382, 0.96 ) }
    dend_78 { pt3dadd( -35.1606, 68.9075, -30.0016, 0.74 ) }
    dend_78 { pt3dadd( -35.6953, 69.5011, -30.0453, 1.03 ) }
    dend_78 { pt3dadd( -36.0812, 69.9168, -30.0108, 1.25 ) }
    dend_78 { pt3dadd( -36.352, 70.2315, -29.9554, 0.81 ) }
    dend_78 { pt3dadd( -36.9264, 70.9745, -29.7773, 0.59 ) }
    dend_78 { pt3dadd( -37.2764, 71.4788, -29.6299, 0.66 ) }
    dend_78 { pt3dadd( -37.5669, 71.9358, -29.4823, 0.66 ) }
    dend_78 { pt3dadd( -38.3202, 73.201, -29.0428, 0.88 ) }
    dend_78 { pt3dadd( -38.7022, 73.849, -28.8001, 1.11 ) }
    dend_78 { pt3dadd( -38.9647, 74.2922, -28.6174, 1.03 ) }
    dend_78 { pt3dadd( -39.2841, 74.8271, -28.3901, 1.25 ) }
    dend_78 { pt3dadd( -39.4034, 75.026, -28.2979, 1.25 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 38/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 4.19239, 10.4323, -4.39834, 1.11 ) }
    dend_53 { pt3dadd( 4.63936, 10.9066, -4.6819, 1.11 ) }
    dend_53 { pt3dadd( 4.98954, 11.2853, -4.91558, 1.11 ) }
    dend_53 { pt3dadd( 5.54822, 11.9187, -5.28802, 1.11 ) }
    dend_53 { pt3dadd( 5.93142, 12.3749, -5.5684, 0.96 ) }
    dend_53 { pt3dadd( 6.56614, 13.0524, -5.98271, 1.55 ) }
    dend_53 { pt3dadd( 7.11817, 13.594, -6.31616, 1.62 ) }
    dend_53 { pt3dadd( 7.44327, 13.8785, -6.49821, 1.62 ) }
    dend_53 { pt3dadd( 7.94566, 14.2732, -6.71938, 1.25 ) }
    dend_53 { pt3dadd( 8.78794, 14.8666, -6.97794, 0.96 ) }
    dend_53 { pt3dadd( 10.0747, 15.682, -7.21257, 0.88 ) }
    dend_53 { pt3dadd( 10.6787, 16.0134, -7.24922, 1.55 ) }
    dend_53 { pt3dadd( 11.3382, 16.3253, -7.23331, 1.84 ) }
    dend_53 { pt3dadd( 12.3273, 16.7443, -7.15582, 1.11 ) }
    dend_53 { pt3dadd( 12.8466, 16.9548, -7.08784, 1.03 ) }
    dend_53 { pt3dadd( 13.4276, 17.2145, -6.97468, 1.25 ) }
    dend_53 { pt3dadd( 13.9896, 17.5404, -6.85688, 0.88 ) }
    dend_53 { pt3dadd( 14.5079, 17.9132, -6.7487, 0.88 ) }
    dend_53 { pt3dadd( 14.9933, 18.3204, -6.64879, 0.88 ) }
    dend_53 { pt3dadd( 15.5632, 18.8271, -6.52756, 0.88 ) }
    dend_53 { pt3dadd( 16.0505, 19.2884, -6.37061, 0.96 ) }
    dend_53 { pt3dadd( 16.5547, 19.8052, -6.18219, 0.96 ) }
    dend_53 { pt3dadd( 17.0149, 20.3283, -5.97702, 0.81 ) }
    dend_53 { pt3dadd( 17.692, 21.1455, -5.61547, 1.11 ) }
    dend_53 { pt3dadd( 18.1361, 21.6634, -5.33444, 1.4 ) }
    dend_53 { pt3dadd( 18.6477, 22.1829, -4.95431, 2.06 ) }
    // Section: dend_50, id: dend_50, parent: soma_0 (entry count 64/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 3.86239, 8.98703, 2.16166, 1.62 ) }
    dend_50 { pt3dadd( 4.45789, 9.39895, 2.69213, 1.62 ) }
    dend_50 { pt3dadd( 5.26426, 9.89224, 3.41833, 1.25 ) }
    dend_50 { pt3dadd( 6.73123, 10.5808, 4.89112, 1.25 ) }
    dend_50 { pt3dadd( 7.50698, 10.8939, 5.7222, 1.25 ) }
    dend_50 { pt3dadd( 8.31641, 11.1161, 6.69307, 1.92 ) }
    dend_50 { pt3dadd( 8.65892, 11.1772, 7.12927, 2.5 ) }
    dend_50 { pt3dadd( 9.40377, 11.1979, 8.16027, 2.5 ) }
    dend_50 { pt3dadd( 10.9444, 11.0029, 10.4531, 1.77 ) }
    dend_50 { pt3dadd( 12.013, 10.6605, 12.0398, 0.96 ) }
    dend_50 { pt3dadd( 13.5208, 10.0089, 14.2732, 0.88 ) }
    dend_50 { pt3dadd( 13.9518, 9.79771, 14.9218, 0.88 ) }
    dend_50 { pt3dadd( 14.2919, 9.63765, 15.4182, 1.4 ) }
    dend_50 { pt3dadd( 14.628, 9.50613, 15.852, 1.4 ) }
    dend_50 { pt3dadd( 15.8541, 9.22321, 17.0937, 0.66 ) }
    dend_50 { pt3dadd( 16.3741, 9.2548, 17.5086, 0.66 ) }
    dend_50 { pt3dadd( 17.609, 9.75959, 18.2396, 0.88 ) }
    dend_50 { pt3dadd( 18.385, 10.2076, 18.636, 0.88 ) }
    dend_50 { pt3dadd( 19.3595, 10.8766, 19.0221, 0.74 ) }
    dend_50 { pt3dadd( 20.0858, 11.443, 19.2397, 1.4 ) }
    dend_50 { pt3dadd( 20.9219, 12.1509, 19.3919, 2.06 ) }
    dend_50 { pt3dadd( 21.7452, 12.8261, 19.4559, 1.84 ) }
    dend_50 { pt3dadd( 22.7324, 13.5983, 19.3997, 1.18 ) }
    dend_50 { pt3dadd( 23.7596, 14.3437, 19.3686, 1.18 ) }
    dend_50 { pt3dadd( 24.1767, 14.608, 19.4276, 1.03 ) }
    dend_50 { pt3dadd( 24.8739, 14.9628, 19.7172, 1.03 ) }
    dend_50 { pt3dadd( 25.3353, 15.1552, 20.1823, 0.59 ) }
    dend_50 { pt3dadd( 25.7636, 15.3588, 20.8684, 0.59 ) }
    dend_50 { pt3dadd( 26.603, 15.8301, 22.5778, 0.88 ) }
    dend_50 { pt3dadd( 27.5793, 16.469, 24.8265, 1.62 ) }
    dend_50 { pt3dadd( 27.9988, 16.7822, 25.8043, 1.62 ) }
    dend_50 { pt3dadd( 28.9751, 17.5719, 28.0657, 0.88 ) }
    dend_50 { pt3dadd( 29.4298, 17.9387, 29.0513, 0.88 ) }
    dend_50 { pt3dadd( 29.8492, 18.2884, 29.8663, 1.47 ) }
    dend_50 { pt3dadd( 30.144, 18.5376, 30.3337, 1.47 ) }
    dend_50 { pt3dadd( 30.9021, 19.1292, 31.245, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_50 { pt3dadd( 31.325, 19.4007, 31.6531, 0.59 ) }
    dend_50 { pt3dadd( 31.7772, 19.6209, 32.0094, 0.59 ) }
    dend_50 { pt3dadd( 32.8805, 20.0989, 32.8887, 1.25 ) }
    dend_50 { pt3dadd( 34.6156, 20.8761, 34.3355, 0.74 ) }
    dend_50 { pt3dadd( 35.1591, 21.1751, 34.8426, 0.29 ) }
    dend_50 { pt3dadd( 35.6428, 21.4645, 35.355, 0.29 ) }
    dend_50 { pt3dadd( 35.9198, 21.6306, 35.6893, 0.59 ) }
    dend_50 { pt3dadd( 36.6532, 22.0862, 36.5932, 1.11 ) }
    dend_50 { pt3dadd( 37.0237, 22.2882, 37.0366, 1.11 ) }
    dend_50 { pt3dadd( 37.8191, 23.0081, 37.9888, 1.11 ) }
    dend_50 { pt3dadd( 38.2683, 23.6631, 38.7456, 0.59 ) }
    dend_50 { pt3dadd( 38.2806, 21.7847, 38.8702, 0.59 ) }
    dend_50 { pt3dadd( 38.4345, 19.8478, 39.3336, 0.52 ) }
    dend_50 { pt3dadd( 38.5409, 18.495, 39.654, 0.59 ) }
    dend_50 { pt3dadd( 45.3782, 20.7408, 45.7485, 0.59 ) }
    dend_50 { pt3dadd( 52.5488, 23.8478, 51.048, 0.59 ) }
    dend_50 { pt3dadd( 58.475, 28.345, 56.9065, 0.59 ) }
    dend_50 { pt3dadd( 64.3461, 33.7515, 62.0445, 0.59 ) }
    dend_50 { pt3dadd( 71.173, 39.5529, 65.2148, 0.59 ) }
    dend_50 { pt3dadd( 77.3234, 45.6588, 69.1363, 0.59 ) }
    dend_50 { pt3dadd( 83.8127, 50.6891, 73.8792, 0.59 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.56761, 6.59878, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -3.56761, 6.59878, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -4.06046, 6.90672, 1.93229, 1.69 ) }
    dend_49 { pt3dadd( -4.66516, 7.21502, 2.37787, 1.4 ) }
    dend_49 { pt3dadd( -5.09247, 7.41489, 2.78681, 1.03 ) }
    dend_49 { pt3dadd( -5.677, 7.70444, 3.41272, 0.88 ) }
    dend_49 { pt3dadd( -6.07977, 7.92263, 3.87267, 0.88 ) }
    dend_49 { pt3dadd( -6.58667, 8.18061, 4.53323, 0.59 ) }
    dend_49 { pt3dadd( -7.04661, 8.4111, 5.19762, 0.44 ) }
    dend_49 { pt3dadd( -7.89216, 8.83215, 6.50679, 0.37 ) }
    dend_49 { pt3dadd( -8.18334, 8.97925, 6.97537, 0.37 ) }
    dend_49 { pt3dadd( -8.65741, 9.22534, 7.75789, 0.37 ) }
    dend_49 { pt3dadd( -9.7753, 9.84031, 9.69759, 1.03 ) }
    dend_49 { pt3dadd( -10.0293, 9.99603, 10.1547, 1.62 ) }
    dend_49 { pt3dadd( -16.81, 10.8056, 15.6477, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 36/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -3.87761, -1.23222, -14.5883, 0.74 ) }
    dend_44 { pt3dadd( -5.32512, -2.23525, -14.5786, 0.74 ) }
    dend_44 { pt3dadd( -7.02763, -3.36848, -14.5694, 1.03 ) }
    dend_44 { pt3dadd( -8.51674, -4.34019, -14.5922, 1.25 ) }
    dend_44 { pt3dadd( -9.70749, -5.12876, -14.6234, 1.62 ) }
    dend_44 { pt3dadd( -10.6832, -5.76405, -14.6541, 1.84 ) }
    dend_44 { pt3dadd( -11.9628, -6.54807, -14.6627, 1.84 ) }
    dend_44 { pt3dadd( -13.0961, -7.16071, -14.6112, 1.99 ) }
    dend_44 { pt3dadd( -14.287, -7.71546, -14.4978, 2.21 ) }
    dend_44 { pt3dadd( -15.6784, -8.25353, -14.2965, 2.65 ) }
    dend_44 { pt3dadd( -16.6655, -8.57257, -14.1384, 2.5 ) }
    dend_44 { pt3dadd( -18.3333, -9.04409, -13.8849, 1.77 ) }
    dend_44 { pt3dadd( -20.0996, -9.51988, -13.6734, 1.33 ) }
    dend_44 { pt3dadd( -21.3006, -9.85197, -13.6166, 1.18 ) }
    dend_44 { pt3dadd( -22.7244, -10.2611, -13.7071, 1.11 ) }
    dend_44 { pt3dadd( -23.7363, -10.5887, -13.9931, 1.11 ) }
    dend_44 { pt3dadd( -24.7787, -10.9737, -14.6298, 1.11 ) }
    dend_44 { pt3dadd( -25.7746, -11.3725, -15.6068, 1.4 ) }
    dend_44 { pt3dadd( -26.7659, -11.7474, -16.8698, 1.03 ) }
    dend_44 { pt3dadd( -27.6007, -12.0272, -18.0935, 0.88 ) }
    dend_44 { pt3dadd( -28.843, -12.3481, -20.0982, 0.88 ) }
    dend_44 { pt3dadd( -30.1854, -12.5709, -22.4659, 1.47 ) }
    dend_44 { pt3dadd( -31.2008, -12.6703, -24.3435, 1.77 ) }
    dend_44 { pt3dadd( -32.3376, -12.6899, -26.5281, 1.84 ) }
    dend_44 { pt3dadd( -32.7396, -12.665, -27.3209, 2.06 ) }
    dend_44 { pt3dadd( -33.4678, -12.5705, -28.7958, 1.77 ) }
    dend_44 { pt3dadd( -34.5896, -12.3269, -31.0118, 1.33 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 63/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -5.36761, -2.06247, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -5.36761, -2.06247, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -6.14946, -1.98237, 9.51521, 2.06 ) }
    dend_41 { pt3dadd( -6.73727, -1.95069, 9.80242, 2.06 ) }
    dend_41 { pt3dadd( -8.26248, -1.97447, 10.5117, 1.84 ) }
    dend_41 { pt3dadd( -9.1116, -2.05477, 10.8951, 1.84 ) }
    dend_41 { pt3dadd( -9.76118, -2.16631, 11.1853, 1.99 ) }
    dend_41 { pt3dadd( -10.9301, -2.46737, 11.706, 1.55 ) }
    dend_41 { pt3dadd( -11.8811, -2.82509, 12.119, 1.03 ) }
    dend_41 { pt3dadd( -12.6499, -3.20827, 12.4272, 0.88 ) }
    dend_41 { pt3dadd( -13.3964, -3.68797, 12.6437, 1.18 ) }
    dend_41 { pt3dadd( -13.9996, -4.12502, 12.7754, 1.18 ) }
    dend_41 { pt3dadd( -14.462, -4.49099, 12.8519, 1.47 ) }
    dend_41 { pt3dadd( -15.1483, -5.08907, 12.9117, 1.25 ) }
    dend_41 { pt3dadd( -15.824, -5.70266, 13.0009, 1.03 ) }
    dend_41 { pt3dadd( -16.4333, -6.24935, 13.1374, 1.62 ) }
    dend_41 { pt3dadd( -17.0436, -6.78446, 13.364, 1.69 ) }
    dend_41 { pt3dadd( -17.5142, -7.17247, 13.6062, 1.33 ) }
    dend_41 { pt3dadd( -18.3547, -7.81054, 14.1782, 1.03 ) }
    dend_41 { pt3dadd( -19.39, -8.46857, 15.0788, 0.88 ) }
    dend_41 { pt3dadd( -20.1139, -8.81829, 15.8809, 1.11 ) }
    dend_41 { pt3dadd( -20.7411, -8.99276, 16.7044, 1.33 ) }
    dend_41 { pt3dadd( -21.1321, -9.01046, 17.2833, 1.33 ) }
    dend_41 { pt3dadd( -21.5177, -8.90781, 17.8813, 1.18 ) }
    dend_41 { pt3dadd( -21.9765, -8.63707, 18.5724, 0.88 ) }
    dend_41 { pt3dadd( -22.629, -8.13443, 19.4157, 1.18 ) }
    dend_41 { pt3dadd( -23.0359, -7.83166, 19.8736, 1.33 ) }
    dend_41 { pt3dadd( -23.3946, -7.63339, 20.2309, 1.33 ) }
    dend_41 { pt3dadd( -24.013, -7.44856, 20.8101, 0.59 ) }
    dend_41 { pt3dadd( -24.8611, -7.49464, 21.5309, 0.52 ) }
    dend_41 { pt3dadd( -25.2915, -7.76279, 21.8456, 0.59 ) }
    dend_41 { pt3dadd( -25.8915, -8.59814, 22.3192, 0.59 ) }
    dend_41 { pt3dadd( -26.4693, -9.74687, 22.8953, 0.59 ) }
    dend_41 { pt3dadd( -26.7689, -10.4317, 23.2318, 1.03 ) }
    dend_41 { pt3dadd( -27.1119, -11.2869, 23.6905, 1.03 ) }
    dend_41 { pt3dadd( -27.3954, -11.9983, 24.1104, 1.03 ) }
    dend_41 { pt3dadd( -27.93, -13.1867, 24.967, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_41 { pt3dadd( -28.4367, -13.9707, 25.7779, 0.66 ) }
    dend_41 { pt3dadd( -28.8636, -14.3325, 26.4018, 0.66 ) }
    dend_41 { pt3dadd( -29.6158, -14.632, 27.3903, 0.74 ) }
    dend_41 { pt3dadd( -30.1477, -14.727, 28.0425, 0.81 ) }
    dend_41 { pt3dadd( -30.6424, -14.7621, 28.6266, 0.52 ) }
    dend_41 { pt3dadd( -31.5389, -14.7755, 29.6019, 0.52 ) }
    dend_41 { pt3dadd( -31.923, -14.8041, 30.0238, 0.44 ) }
    dend_41 { pt3dadd( -32.482, -15.056, 30.7672, 0.37 ) }
    dend_41 { pt3dadd( -32.7509, -15.4462, 31.2031, 0.37 ) }
    dend_41 { pt3dadd( -33.0003, -16.0381, 31.6486, 1.11 ) }
    dend_41 { pt3dadd( -33.2132, -16.6454, 31.9968, 1.4 ) }
    dend_41 { pt3dadd( -33.4182, -17.4451, 32.372, 1.4 ) }
    dend_41 { pt3dadd( -33.6701, -18.6593, 32.8893, 0.81 ) }
    dend_41 { pt3dadd( -33.8398, -19.5736, 33.2357, 0.29 ) }
    dend_41 { pt3dadd( -33.9911, -20.1782, 33.4743, 0.29 ) }
    dend_41 { pt3dadd( -34.1698, -20.6637, 33.6783, 0.29 ) }
    dend_41 { pt3dadd( -39.0883, -24.0664, 39.1481, 0.29 ) }
    dend_41 { pt3dadd( -45.0407, -27.5542, 43.4052, 0.29 ) }
    dend_41 { pt3dadd( -50.4864, -31.0344, 48.2988, 0.29 ) }
    dend_41 { pt3dadd( -55.5401, -33.4369, 54.1382, 0.29 ) }
    dend_41 { pt3dadd( -60.6058, -35.9462, 59.9242, 0.29 ) }
    dend_41 { pt3dadd( -66.4341, -39.6723, 64.1607, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 22/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.19761, -5.90622, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.19761, -5.90622, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.1833, -6.83149, 6.96353, 1.77 ) }
    dend_32 { pt3dadd( -2.16053, -8.4178, 7.14727, 1.47 ) }
    dend_32 { pt3dadd( -2.14798, -10.0142, 7.31353, 1.25 ) }
    dend_32 { pt3dadd( -2.16942, -11.2338, 7.42586, 1.62 ) }
    dend_32 { pt3dadd( -2.21225, -12.2628, 7.51051, 1.92 ) }
    dend_32 { pt3dadd( -2.27098, -13.1603, 7.58543, 2.14 ) }
    dend_32 { pt3dadd( -2.37737, -14.2778, 7.67691, 2.14 ) }
    dend_32 { pt3dadd( -2.59672, -15.8291, 7.80396, 1.55 ) }
    dend_32 { pt3dadd( -2.87592, -17.288, 7.91513, 1.33 ) }
    dend_32 { pt3dadd( -3.12877, -18.3933, 8.00875, 1.55 ) }
    dend_32 { pt3dadd( -3.31656, -19.0915, 8.0701, 1.92 ) }
    dend_32 { pt3dadd( -3.5834, -19.9383, 8.17284, 2.21 ) }
    dend_32 { pt3dadd( -3.78326, -20.4964, 8.25615, 2.5 ) }
    dend_32 { pt3dadd( -4.01695, -21.1551, 8.37574, 2.5 ) }
    dend_32 { pt3dadd( -4.23176, -21.8816, 8.51857, 2.36 ) }
    dend_32 { pt3dadd( -4.46286, -22.8784, 8.72004, 1.69 ) }
    dend_32 { pt3dadd( -4.68499, -24.1854, 8.97376, 1.25 ) }
    dend_32 { pt3dadd( -4.79797, -25.4068, 9.20247, 1.4 ) }
    dend_32 { pt3dadd( -4.80276, -26.4905, 9.38072, 1.62 ) }
    dend_32 { pt3dadd( -4.68659, -27.8133, 9.56929, 2.06 ) }
    dend_32 { pt3dadd( -4.54517, -28.6285, 9.67663, 2.36 ) }
    dend_32 { pt3dadd( -4.40212, -29.157, 9.73713, 2.36 ) }
    dend_32 { pt3dadd( -4.04919, -30.1644, 9.83428, 2.14 ) }
    dend_32 { pt3dadd( -3.4745, -31.5779, 9.95939, 1.62 ) }
    dend_32 { pt3dadd( -2.96738, -32.7684, 10.0522, 1.25 ) }
    dend_32 { pt3dadd( -2.44721, -33.9967, 10.1602, 1.03 ) }
    dend_32 { pt3dadd( -1.892, -35.3777, 10.3082, 1.03 ) }
    dend_32 { pt3dadd( -1.47842, -36.5342, 10.4598, 1.03 ) }
    dend_32 { pt3dadd( -1.02816, -38.0311, 10.7071, 1.03 ) }
    dend_32 { pt3dadd( -0.831822, -38.9227, 10.8873, 0.96 ) }
    dend_32 { pt3dadd( -0.772263, -39.627, 11.0526, 0.96 ) }
    dend_32 { pt3dadd( -0.853097, -40.2548, 11.2177, 0.96 ) }
    dend_32 { pt3dadd( -1.2248, -41.0817, 11.4927, 0.96 ) }
    dend_32 { pt3dadd( -1.58833, -41.5311, 11.6655, 0.88 ) }
    dend_32 { pt3dadd( -1.96968, -41.8632, 11.801, 1.18 ) }
    dend_32 { pt3dadd( -2.58532, -42.3243, 11.9737, 1.18 ) }
    dend_32 { pt3dadd( -3.18168, -42.7457, 12.1267, 1.33 ) }
    dend_32 { pt3dadd( -3.86833, -43.2236, 12.3176, 1.33 ) }
    dend_32 { pt3dadd( -4.4587, -43.6403, 12.5025, 1.4 ) }
    dend_32 { pt3dadd( -5.09157, -44.1155, 12.7311, 1.55 ) }
    dend_32 { pt3dadd( -5.69778, -44.6188, 13.0002, 1.55 ) }
    dend_32 { pt3dadd( -6.38393, -45.3065, 13.3866, 1.84 ) }
    dend_32 { pt3dadd( -6.79945, -45.8086, 13.6607, 2.14 ) }
    dend_32 { pt3dadd( -7.20642, -46.414, 13.9548, 1.99 ) }
    dend_32 { pt3dadd( -7.77405, -47.5073, 14.4249, 0.88 ) }
    dend_32 { pt3dadd( -8.16165, -48.5171, 14.7944, 0.88 ) }
    dend_32 { pt3dadd( -8.48842, -49.7098, 15.1631, 0.81 ) }
    dend_32 { pt3dadd( -8.67131, -50.7643, 15.4133, 0.74 ) }
    dend_32 { pt3dadd( -8.84108, -52.0957, 15.6881, 0.74 ) }
    dend_32 { pt3dadd( -8.9243, -53.3395, 15.9072, 1.03 ) }
    dend_32 { pt3dadd( -8.92104, -54.4571, 16.0479, 1.4 ) }
    dend_32 { pt3dadd( -8.88397, -55.1524, 16.0996, 1.69 ) }
    dend_32 { pt3dadd( -8.80726, -55.9319, 16.1199, 1.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.44239, -10.2522, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.44239, -10.2522, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.91129, -11.7587, -2.3408, 3.39 ) }
    dend_0 { pt3dadd( 2.2899, -12.974, -2.50282, 3.02 ) }
    dend_0 { pt3dadd( 2.67326, -14.2045, -2.66687, 3.02 ) }
    dend_0 { pt3dadd( 3.17736, -15.8227, -2.8826, 3.02 ) }
    dend_0 { pt3dadd( 3.71885, -17.5608, -3.11432, 3.24 ) }
    dend_0 { pt3dadd( 4.1272, -18.8425, -3.30344, 3.54 ) }
    dend_0 { pt3dadd( 4.59082, -20.2235, -3.55493, 3.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 86/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 2.99451, 26.4754, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.88 ) }
    // Section: dend_88, id: dend_88, parent: dend_78 (entry count 89/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -39.4034, 75.026, -28.2979, 0.44 ) }
    dend_88 { pt3dadd( -40.9727, 76.5997, -29.2577, 0.44 ) }
    dend_88 { pt3dadd( -41.6788, 77.3721, -29.6767, 0.37 ) }
    dend_88 { pt3dadd( -41.9947, 77.8082, -29.8264, 0.66 ) }
    dend_88 { pt3dadd( -42.4779, 78.6068, -30.0196, 0.66 ) }
    dend_88 { pt3dadd( -42.9362, 79.5134, -30.1793, 0.59 ) }
    dend_88 { pt3dadd( -43.215, 80.1966, -30.2751, 0.81 ) }
    dend_88 { pt3dadd( -43.4228, 81.0562, -30.296, 0.81 ) }
    dend_88 { pt3dadd( -43.5867, 83.0318, -30.3156, 0.52 ) }
    dend_88 { pt3dadd( -43.5041, 83.9617, -30.3371, 0.52 ) }
    dend_88 { pt3dadd( -43.1295, 85.382, -30.4305, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_88 { pt3dadd( -42.5475, 86.7135, -30.6132, 0.44 ) }
    dend_88 { pt3dadd( -41.7686, 87.9775, -30.8963, 0.74 ) }
    dend_88 { pt3dadd( -41.0802, 88.8479, -31.157, 0.74 ) }
    dend_88 { pt3dadd( -39.9463, 90.0301, -31.6329, 0.44 ) }
    dend_88 { pt3dadd( -39.0826, 90.8503, -31.9614, 0.59 ) }
    dend_88 { pt3dadd( -38.214, 91.6518, -32.2964, 0.59 ) }
    dend_88 { pt3dadd( -37.3448, 92.4833, -32.667, 0.59 ) }
    dend_88 { pt3dadd( -36.6672, 93.2183, -33.0131, 0.37 ) }
    dend_88 { pt3dadd( -36.175, 93.8047, -33.3006, 0.37 ) }
    dend_88 { pt3dadd( -35.4345, 94.7319, -33.7689, 0.59 ) }
    dend_88 { pt3dadd( -34.705, 95.6177, -34.2422, 0.37 ) }
    dend_88 { pt3dadd( -34.0463, 96.3812, -34.6655, 0.81 ) }
    dend_88 { pt3dadd( -33.3577, 97.1502, -35.1137, 0.81 ) }
    dend_88 { pt3dadd( -32.1012, 98.5628, -35.977, 0.44 ) }
    dend_88 { pt3dadd( -31.137, 99.6757, -36.666, 0.44 ) }
    dend_88 { pt3dadd( -30.4612, 100.444, -37.1854, 0.81 ) }
    dend_88 { pt3dadd( -29.7769, 101.23, -37.7281, 0.44 ) }
    dend_88 { pt3dadd( -29.4076, 101.682, -38.05, 0.59 ) }
    dend_88 { pt3dadd( -28.5338, 102.833, -38.9185, 0.59 ) }
    dend_88 { pt3dadd( -28.0265, 103.658, -39.6317, 0.44 ) }
    dend_88 { pt3dadd( -27.5182, 104.809, -40.6747, 0.44 ) }
    dend_88 { pt3dadd( -27.2275, 105.792, -41.6885, 0.96 ) }
    dend_88 { pt3dadd( -27.1501, 106.251, -42.2328, 1.18 ) }
    dend_88 { pt3dadd( -27.1363, 106.67, -42.7893, 1.18 ) }
    dend_88 { pt3dadd( -27.3341, 107.752, -44.7578, 0.44 ) }
    dend_88 { pt3dadd( -27.6241, 108.51, -46.3352, 0.37 ) }
    dend_88 { pt3dadd( -27.9512, 109.093, -47.9651, 0.66 ) }
    dend_88 { pt3dadd( -28.1128, 109.326, -48.7304, 0.66 ) }
    dend_88 { pt3dadd( -28.3825, 109.667, -49.9534, 0.66 ) }
    dend_88 { pt3dadd( -29.3667, 110.896, -54.8358, 0.44 ) }
    dend_88 { pt3dadd( -29.5293, 111.094, -55.707, 0.44 ) }
    dend_88 { pt3dadd( -30.3426, 112.106, -60.3442, 0.29 ) }
    dend_88 { pt3dadd( -30.5124, 112.35, -61.3289, 0.29 ) }
    dend_88 { pt3dadd( -30.6957, 112.667, -62.4506, 0.29 ) }
    dend_88 { pt3dadd( -31.0647, 113.47, -64.8278, 0.74 ) }
    dend_88 { pt3dadd( -31.4626, 114.645, -67.5152, 0.44 ) }
    dend_88 { pt3dadd( -31.5392, 114.961, -68.1, 0.44 ) }
    dend_88 { pt3dadd( -31.6916, 115.785, -69.1771, 0.37 ) }
    dend_88 { pt3dadd( -31.8339, 116.665, -70.1332, 0.88 ) }
    dend_88 { pt3dadd( -32.0728, 118.171, -71.3461, 0.29 ) }
    dend_88 { pt3dadd( -32.2035, 118.797, -71.7021, 0.52 ) }
    dend_88 { pt3dadd( -32.5134, 119.95, -72.2287, 0.15 ) }
    dend_88 { pt3dadd( -32.8443, 120.963, -72.7161, 0.22 ) }
    dend_88 { pt3dadd( -33.4118, 122.546, -73.4843, 0.22 ) }
    dend_88 { pt3dadd( -33.974, 123.925, -74.1162, 0.22 ) }
    dend_88 { pt3dadd( -34.5104, 125.223, -74.67, 0.22 ) }
    dend_88 { pt3dadd( -35.3498, 127.12, -75.5445, 1.47 ) }
    dend_88 { pt3dadd( -35.9927, 128.508, -76.2556, 0.66 ) }
    dend_88 { pt3dadd( -36.3884, 129.397, -76.7335, 0.96 ) }
    dend_88 { pt3dadd( -36.9864, 130.872, -77.5198, 0.22 ) }
    dend_88 { pt3dadd( -37.3587, 131.873, -77.9832, 0.22 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 51/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -39.4034, 75.026, -28.2979, 0.37 ) }
    dend_79 { pt3dadd( -39.189, 77.4095, -27.8749, 0.37 ) }
    dend_79 { pt3dadd( -38.9684, 78.5906, -27.775, 0.37 ) }
    dend_79 { pt3dadd( -38.7823, 79.7096, -27.5746, 0.37 ) }
    dend_79 { pt3dadd( -38.6222, 81.3852, -27.1374, 0.74 ) }
    dend_79 { pt3dadd( -38.6131, 82.8028, -26.705, 0.29 ) }
    dend_79 { pt3dadd( -38.7764, 84.4703, -26.1563, 0.29 ) }
    dend_79 { pt3dadd( -38.8857, 85.2534, -25.8853, 0.52 ) }
    dend_79 { pt3dadd( -39.2571, 86.9774, -25.0172, 0.44 ) }
    dend_79 { pt3dadd( -39.5484, 88.0746, -24.3476, 0.29 ) }
    dend_79 { pt3dadd( -39.8035, 89.0315, -23.7221, 0.29 ) }
    dend_79 { pt3dadd( -40.0532, 90.0938, -22.9879, 0.29 ) }
    dend_79 { pt3dadd( -40.3519, 91.8878, -21.7947, 0.44 ) }
    dend_79 { pt3dadd( -40.5066, 93.3431, -20.856, 0.44 ) }
    dend_79 { pt3dadd( -40.5205, 95.1939, -19.7911, 0.52 ) }
    dend_79 { pt3dadd( -40.3673, 96.6671, -18.9747, 0.37 ) }
    dend_79 { pt3dadd( -40.1187, 97.8431, -18.3359, 0.37 ) }
    dend_79 { pt3dadd( -39.716, 99.1095, -17.7021, 1.11 ) }
    // Section: dend_69, id: dend_69, parent: dend_53 (entry count 69/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 18.6477, 22.1829, -4.95431, 0.29 ) }
    dend_69 { pt3dadd( 19.638, 21.8211, -3.60494, 0.29 ) }
    dend_69 { pt3dadd( 20.5651, 21.5309, -2.50236, 0.59 ) }
    dend_69 { pt3dadd( 21.472, 21.2489, -1.55623, 0.74 ) }
    dend_69 { pt3dadd( 21.9687, 21.1012, -1.079, 0.37 ) }
    dend_69 { pt3dadd( 22.7331, 20.896, -0.292578, 0.37 ) }
    dend_69 { pt3dadd( 23.1577, 20.7929, 0.178003, 0.66 ) }
    dend_69 { pt3dadd( 23.4746, 20.7535, 0.550151, 0.96 ) }
    dend_69 { pt3dadd( 23.9313, 20.7392, 1.26571, 1.25 ) }
    dend_69 { pt3dadd( 24.6204, 20.7988, 2.63353, 0.37 ) }
    dend_69 { pt3dadd( 25.2442, 20.9638, 4.07619, 0.37 ) }
    dend_69 { pt3dadd( 25.4491, 21.048, 4.58277, 0.37 ) }
    dend_69 { pt3dadd( 25.8969, 21.2525, 5.61289, 0.74 ) }
    dend_69 { pt3dadd( 26.6995, 21.5953, 7.17407, 0.66 ) }
    dend_69 { pt3dadd( 27.3638, 21.8544, 8.22323, 0.52 ) }
    dend_69 { pt3dadd( 27.89, 21.9994, 8.81112, 0.66 ) }
    dend_69 { pt3dadd( 28.5422, 22.1019, 9.303, 0.66 ) }
    dend_69 { pt3dadd( 29.4348, 22.18, 9.80265, 0.37 ) }
    dend_69 { pt3dadd( 30.4705, 22.1961, 10.2212, 0.52 ) }
    dend_69 { pt3dadd( 31.0475, 22.1641, 10.4007, 0.52 ) }
    dend_69 { pt3dadd( 32.0545, 22.0715, 10.6865, 0.66 ) }
    dend_69 { pt3dadd( 32.6199, 22.0004, 10.8378, 0.88 ) }
    dend_69 { pt3dadd( 33.3728, 21.9092, 11.0215, 0.88 ) }
    dend_69 { pt3dadd( 34.2472, 21.8336, 11.2748, 0.66 ) }
    dend_69 { pt3dadd( 35.3424, 21.7982, 11.6133, 0.29 ) }
    dend_69 { pt3dadd( 36.3017, 21.8256, 11.9052, 0.29 ) }
    dend_69 { pt3dadd( 37.7547, 21.9984, 12.3327, 0.88 ) }
    dend_69 { pt3dadd( 38.1571, 22.0647, 12.4497, 0.88 ) }
    dend_69 { pt3dadd( 39.7687, 22.3915, 12.8958, 0.29 ) }
    dend_69 { pt3dadd( 41.0115, 22.694, 13.208, 0.29 ) }
    dend_69 { pt3dadd( 42.1993, 23.0264, 13.4752, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_69 { pt3dadd( 43.6117, 23.4591, 13.7686, 0.29 ) }
    dend_69 { pt3dadd( 44.6387, 23.7813, 13.9775, 0.29 ) }
    dend_69 { pt3dadd( 45.589, 24.0608, 14.1486, 0.81 ) }
    dend_69 { pt3dadd( 46.3351, 24.2645, 14.2398, 0.81 ) }
    dend_69 { pt3dadd( 46.9968, 24.4344, 14.3156, 0.81 ) }
    dend_69 { pt3dadd( 47.9994, 24.6684, 14.4243, 0.59 ) }
    dend_69 { pt3dadd( 49.1656, 24.8932, 14.5514, 0.29 ) }
    dend_69 { pt3dadd( 50.1952, 25.1286, 14.6782, 0.81 ) }
    dend_69 { pt3dadd( 51.212, 25.364, 14.8126, 0.22 ) }
    dend_69 { pt3dadd( 52.1143, 25.5552, 14.93, 0.22 ) }
    dend_69 { pt3dadd( 52.686, 25.6531, 14.9926, 0.52 ) }
    dend_69 { pt3dadd( 53.4735, 25.7547, 15.0299, 0.22 ) }
    dend_69 { pt3dadd( 61.6641, 27.0016, 19.7942, 0.22 ) }
    dend_69 { pt3dadd( 69.2977, 28.4976, 25.3508, 0.22 ) }
    dend_69 { pt3dadd( 77.9672, 28.3362, 29.3548, 0.22 ) }
    dend_69 { pt3dadd( 86.5558, 26.4509, 33.0994, 0.22 ) }
    dend_69 { pt3dadd( 95.1373, 25.7779, 37.2382, 0.22 ) }
    dend_69 { pt3dadd( 102.314, 23.8428, 43.2456, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 18/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 18.6477, 22.1829, -4.95431, 0.81 ) }
    dend_54 { pt3dadd( 19.8435, 22.2726, -4.5914, 0.81 ) }
    dend_54 { pt3dadd( 20.409, 22.251, -4.45342, 1.03 ) }
    dend_54 { pt3dadd( 21.9075, 22.1286, -4.23352, 0.96 ) }
    dend_54 { pt3dadd( 22.7275, 22.071, -4.15727, 0.96 ) }
    dend_54 { pt3dadd( 23.6829, 22.0487, -4.09865, 0.59 ) }
    dend_54 { pt3dadd( 24.3474, 22.0703, -4.07268, 0.66 ) }
    dend_54 { pt3dadd( 25.2378, 22.1062, -4.06705, 0.66 ) }
    dend_54 { pt3dadd( 26.2975, 22.2434, -4.12304, 0.59 ) }
    dend_54 { pt3dadd( 26.8513, 22.4112, -4.21481, 0.81 ) }
    dend_54 { pt3dadd( 27.5513, 22.7543, -4.34916, 0.96 ) }
    dend_54 { pt3dadd( 28.1955, 23.1561, -4.47644, 1.25 ) }
    dend_54 { pt3dadd( 28.6615, 23.4591, -4.56198, 1.4 ) }
    dend_54 { pt3dadd( 29.2484, 23.8262, -4.64328, 1.4 ) }
    dend_54 { pt3dadd( 30.2092, 24.3295, -4.72322, 0.59 ) }
    dend_54 { pt3dadd( 30.6006, 24.4634, -4.74739, 0.59 ) }
    dend_54 { pt3dadd( 31.416, 24.5772, -4.78076, 0.59 ) }
    dend_54 { pt3dadd( 32.3079, 24.5619, -4.80027, 1.03 ) }
    dend_54 { pt3dadd( 32.9421, 24.4829, -4.80311, 1.18 ) }
    dend_54 { pt3dadd( 33.4951, 24.3665, -4.77454, 1.18 ) }
    dend_54 { pt3dadd( 34.3903, 24.1215, -4.67675, 0.74 ) }
    dend_54 { pt3dadd( 35.2532, 23.8632, -4.52549, 0.66 ) }
    dend_54 { pt3dadd( 35.6639, 23.742, -4.43584, 0.96 ) }
    dend_54 { pt3dadd( 36.2, 23.6079, -4.31461, 0.96 ) }
    dend_54 { pt3dadd( 37.1617, 23.4158, -4.10481, 1.03 ) }
    dend_54 { pt3dadd( 37.6159, 23.3555, -4.00686, 1.03 ) }
    dend_54 { pt3dadd( 38.8786, 23.3338, -3.75443, 0.59 ) }
    dend_54 { pt3dadd( 39.5629, 23.4006, -3.63572, 0.59 ) }
    dend_54 { pt3dadd( 40.7826, 23.6151, -3.46589, 0.59 ) }
    dend_54 { pt3dadd( 41.3786, 23.7636, -3.40709, 0.81 ) }
    dend_54 { pt3dadd( 41.9344, 23.9545, -3.38295, 0.81 ) }
    dend_54 { pt3dadd( 43.0643, 24.4356, -3.39688, 0.37 ) }
    dend_54 { pt3dadd( 43.7738, 24.7634, -3.44965, 0.66 ) }
    dend_54 { pt3dadd( 44.4031, 25.0303, -3.50249, 0.74 ) }
    dend_54 { pt3dadd( 44.7975, 25.1717, -3.54454, 0.74 ) }
    dend_54 { pt3dadd( 45.5679, 25.3643, -3.64366, 0.74 ) }
    dend_54 { pt3dadd( 46.393, 25.4549, -3.76407, 0.52 ) }
    dend_54 { pt3dadd( 47.5397, 25.4252, -3.94491, 0.74 ) }
    dend_54 { pt3dadd( 48.4039, 25.3468, -4.06287, 0.88 ) }
    dend_54 { pt3dadd( 48.8785, 25.2952, -4.10152, 0.96 ) }
    dend_54 { pt3dadd( 49.3512, 25.2489, -4.10996, 1.18 ) }
    dend_54 { pt3dadd( 50.0723, 25.2018, -4.07078, 1.18 ) }
    dend_54 { pt3dadd( 50.6226, 25.2148, -3.98718, 0.66 ) }
    dend_54 { pt3dadd( 51.6035, 25.4051, -3.7244, 0.59 ) }
    dend_54 { pt3dadd( 52.2527, 25.6291, -3.43461, 0.59 ) }
    dend_54 { pt3dadd( 52.6851, 25.8216, -3.18796, 0.74 ) }
    dend_54 { pt3dadd( 53.0247, 26.0044, -2.9579, 0.74 ) }
    dend_54 { pt3dadd( 53.3607, 26.2058, -2.70032, 0.74 ) }
    dend_54 { pt3dadd( 54.004, 26.6155, -2.15186, 0.59 ) }
    dend_54 { pt3dadd( 54.8598, 27.1871, -1.34779, 0.96 ) }
    dend_54 { pt3dadd( 55.2677, 27.4525, -0.960434, 1.25 ) }
    dend_54 { pt3dadd( 55.4899, 27.5897, -0.734601, 1.25 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 70/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 83.8127, 50.6891, 73.8792, 0.29 ) }
    dend_52 { pt3dadd( 89.3048, 53.88, 79.5912, 0.29 ) }
    dend_52 { pt3dadd( 95.5835, 57.1275, 84.3895, 0.29 ) }
    dend_52 { pt3dadd( 102.028, 61.077, 88.4039, 0.29 ) }
    dend_52 { pt3dadd( 107.658, 64.5409, 93.8223, 0.29 ) }
    dend_52 { pt3dadd( 112.898, 68.9792, 98.9485, 0.29 ) }
    dend_52 { pt3dadd( 116.955, 73.9109, 104.681, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 77/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 83.8127, 50.6891, 73.8792, 0.29 ) }
    dend_51 { pt3dadd( 93.5324, 55.458, 82.1189, 0.29 ) }
    dend_51 { pt3dadd( 101.855, 62.8621, 90.0223, 0.29 ) }
    dend_51 { pt3dadd( 108.601, 71.3963, 98.3191, 0.29 ) }
    dend_51 { pt3dadd( 115.984, 77.7243, 107.863, 0.29 ) }
    dend_51 { pt3dadd( 123.008, 84.8324, 117.151, 0.29 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 83/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -34.5896, -12.3269, -31.0118, 0.74 ) }
    dend_46 { pt3dadd( -36.1941, -13.4884, -31.3694, 0.74 ) }
    dend_46 { pt3dadd( -37.0545, -13.9461, -31.5294, 0.74 ) }
    dend_46 { pt3dadd( -37.7814, -14.2377, -31.6745, 0.74 ) }
    dend_46 { pt3dadd( -38.9262, -14.4894, -32.0407, 0.66 ) }
    dend_46 { pt3dadd( -39.7559, -14.5511, -32.3941, 0.66 ) }
    dend_46 { pt3dadd( -40.6336, -14.5488, -32.8194, 0.59 ) }
    dend_46 { pt3dadd( -41.2374, -14.4289, -33.12, 1.25 ) }
    dend_46 { pt3dadd( -41.7269, -14.2846, -33.3974, 1.25 ) }
    dend_46 { pt3dadd( -43.2185, -13.8181, -34.3196, 0.66 ) }
    dend_46 { pt3dadd( -43.9605, -13.6157, -34.7994, 0.66 ) }
    dend_46 { pt3dadd( -44.3621, -13.5693, -35.0675, 0.96 ) }
    dend_46 { pt3dadd( -44.9604, -13.6303, -35.4624, 0.96 ) }
    dend_46 { pt3dadd( -45.3789, -13.7912, -35.8364, 0.96 ) }
    dend_46 { pt3dadd( -46.0177, -14.3091, -36.7611, 0.74 ) }
    dend_46 { pt3dadd( -46.3572, -14.7469, -37.4756, 0.52 ) }
    dend_46 { pt3dadd( -46.6969, -15.293, -38.3708, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_46 { pt3dadd( -46.9156, -15.6953, -39.0343, 1.03 ) }
    dend_46 { pt3dadd( -47.7105, -17.3138, -41.7493, 1.25 ) }
    dend_46 { pt3dadd( -48.2484, -18.4586, -43.721, 0.66 ) }
    dend_46 { pt3dadd( -48.5149, -19.0071, -44.6967, 0.66 ) }
    dend_46 { pt3dadd( -48.6836, -19.2836, -45.2088, 1.11 ) }
    dend_46 { pt3dadd( -48.8391, -19.4482, -45.5151, 1.33 ) }
    dend_46 { pt3dadd( -49.0733, -19.614, -45.7735, 1.18 ) }
    dend_46 { pt3dadd( -49.4606, -19.8165, -45.9164, 1.18 ) }
    dend_46 { pt3dadd( -50.3546, -20.2608, -46.1178, 0.59 ) }
    dend_46 { pt3dadd( -51.2759, -20.7841, -46.353, 0.52 ) }
    dend_46 { pt3dadd( -52.0017, -21.271, -46.5991, 0.52 ) }
    dend_46 { pt3dadd( -52.6008, -21.757, -46.9096, 0.81 ) }
    dend_46 { pt3dadd( -53.1847, -22.3364, -47.3592, 0.66 ) }
    dend_46 { pt3dadd( -53.7305, -22.9458, -47.8846, 0.66 ) }
    dend_46 { pt3dadd( -54.1229, -23.432, -48.3451, 1.33 ) }
    dend_46 { pt3dadd( -54.3857, -23.775, -48.6796, 1.33 ) }
    dend_46 { pt3dadd( -55.2054, -24.8511, -49.7421, 0.66 ) }
    dend_46 { pt3dadd( -55.9271, -25.7667, -50.6456, 0.52 ) }
    dend_46 { pt3dadd( -56.2687, -26.1658, -51.0501, 0.52 ) }
    dend_46 { pt3dadd( -56.7154, -26.6104, -51.4561, 0.96 ) }
    dend_46 { pt3dadd( -57.038, -26.8921, -51.6657, 1.18 ) }
    dend_46 { pt3dadd( -57.2729, -27.0823, -51.7525, 1.18 ) }
    dend_46 { pt3dadd( -57.7692, -27.4914, -51.7973, 0.81 ) }
    dend_46 { pt3dadd( -58.4539, -28.0969, -51.7407, 0.74 ) }
    dend_46 { pt3dadd( -59.3074, -28.9231, -51.5821, 0.59 ) }
    dend_46 { pt3dadd( -59.7362, -29.3325, -51.4687, 0.74 ) }
    dend_46 { pt3dadd( -60.3091, -29.8525, -51.2856, 0.74 ) }
    dend_46 { pt3dadd( -60.9239, -30.3532, -51.0788, 0.59 ) }
    dend_46 { pt3dadd( -61.5041, -30.7959, -50.8739, 0.44 ) }
    dend_46 { pt3dadd( -62.1546, -31.2852, -50.6364, 0.44 ) }
    dend_46 { pt3dadd( -62.7807, -31.7516, -50.4365, 0.44 ) }
    dend_46 { pt3dadd( -63.4425, -32.2935, -50.2307, 0.44 ) }
    dend_46 { pt3dadd( -64.5322, -33.2915, -49.9016, 0.44 ) }
    dend_46 { pt3dadd( -64.805, -33.5935, -49.8151, 0.96 ) }
    dend_46 { pt3dadd( -65.3082, -34.3392, -49.6695, 1.18 ) }
    dend_46 { pt3dadd( -65.6332, -35.0188, -49.5874, 0.81 ) }
    dend_46 { pt3dadd( -66.0048, -36.1631, -49.5579, 0.59 ) }
    dend_46 { pt3dadd( -66.1316, -36.669, -49.5993, 0.74 ) }
    dend_46 { pt3dadd( -66.3271, -37.4892, -49.7207, 0.66 ) }
    dend_46 { pt3dadd( -66.5771, -38.2881, -49.8753, 0.66 ) }
    dend_46 { pt3dadd( -66.8157, -38.8744, -50.0131, 0.81 ) }
    dend_46 { pt3dadd( -67.3446, -39.9411, -50.2705, 0.59 ) }
    dend_46 { pt3dadd( -67.8639, -40.8693, -50.4833, 0.52 ) }
    dend_46 { pt3dadd( -68.3518, -41.7696, -50.6631, 0.81 ) }
    dend_46 { pt3dadd( -68.7837, -42.6468, -50.7992, 1.4 ) }
    dend_46 { pt3dadd( -68.9844, -43.1691, -50.8175, 1.69 ) }
    dend_46 { pt3dadd( -69.266, -44.1925, -50.7334, 0.52 ) }
    dend_46 { pt3dadd( -69.4626, -45.043, -50.6664, 0.44 ) }
    dend_46 { pt3dadd( -69.6318, -45.9181, -50.7117, 0.44 ) }
    dend_46 { pt3dadd( -69.7561, -46.5459, -50.8687, 0.29 ) }
    dend_46 { pt3dadd( -70.0594, -47.7239, -51.336, 1.4 ) }
    dend_46 { pt3dadd( -70.1373, -47.9591, -51.4484, 1.4 ) }
    dend_46 { pt3dadd( -71.0033, -50.0458, -52.7183, 0.52 ) }
    dend_46 { pt3dadd( -71.5666, -51.1966, -53.5076, 0.52 ) }
    dend_46 { pt3dadd( -71.8885, -51.7904, -53.9364, 0.52 ) }
    dend_46 { pt3dadd( -72.3763, -52.6739, -54.5736, 0.74 ) }
    dend_46 { pt3dadd( -72.6976, -53.2654, -54.9839, 0.88 ) }
    dend_46 { pt3dadd( -73.374, -54.6049, -55.7642, 0.44 ) }
    dend_46 { pt3dadd( -73.6831, -55.2717, -56.0466, 0.59 ) }
    dend_46 { pt3dadd( -74.0465, -56.0139, -56.3307, 0.59 ) }
    dend_46 { pt3dadd( -74.46, -56.7653, -56.6484, 0.37 ) }
    dend_46 { pt3dadd( -74.7215, -57.2187, -56.8545, 0.59 ) }
    dend_46 { pt3dadd( -75.2162, -58.0224, -57.2146, 0.81 ) }
    dend_46 { pt3dadd( -75.7037, -58.7458, -57.4831, 1.18 ) }
    dend_46 { pt3dadd( -76.0222, -59.1889, -57.6539, 1.18 ) }
    dend_46 { pt3dadd( -76.9022, -60.2883, -58.1504, 0.74 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 66/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -34.5896, -12.3269, -31.0118, 0.81 ) }
    dend_45 { pt3dadd( -35.0817, -10.4579, -31.0769, 0.81 ) }
    dend_45 { pt3dadd( -35.3437, -9.77356, -31.0443, 0.81 ) }
    dend_45 { pt3dadd( -35.7846, -8.9578, -30.9545, 0.81 ) }
    dend_45 { pt3dadd( -36.2929, -8.3298, -30.8557, 0.88 ) }
    dend_45 { pt3dadd( -36.9392, -7.845, -30.7774, 0.66 ) }
    dend_45 { pt3dadd( -38.1648, -7.19749, -30.7017, 0.59 ) }
    dend_45 { pt3dadd( -39.0608, -7.04722, -30.6976, 0.59 ) }
    dend_45 { pt3dadd( -39.8794, -7.05943, -30.8425, 0.59 ) }
    dend_45 { pt3dadd( -40.9753, -7.22227, -31.2185, 0.74 ) }
    dend_45 { pt3dadd( -42.1555, -7.50498, -31.852, 1.03 ) }
    dend_45 { pt3dadd( -42.5683, -7.61729, -32.1199, 1.62 ) }
    dend_45 { pt3dadd( -43.1266, -7.76435, -32.5293, 1.92 ) }
    dend_45 { pt3dadd( -44.8895, -8.16702, -33.7991, 0.88 ) }
    dend_45 { pt3dadd( -45.5652, -8.2989, -34.2769, 0.66 ) }
    dend_45 { pt3dadd( -46.5566, -8.48358, -34.9453, 0.66 ) }
    dend_45 { pt3dadd( -47.8945, -8.72591, -35.7969, 0.66 ) }
    dend_45 { pt3dadd( -48.4881, -8.81807, -36.1574, 0.66 ) }
    dend_45 { pt3dadd( -49.7753, -8.93744, -36.8661, 0.66 ) }
    dend_45 { pt3dadd( -50.5908, -8.95169, -37.2719, 0.44 ) }
    dend_45 { pt3dadd( -51.612, -8.90028, -37.8145, 0.44 ) }
    dend_45 { pt3dadd( -52.353, -8.81361, -38.2531, 0.44 ) }
    dend_45 { pt3dadd( -53.2165, -8.65776, -38.87, 0.66 ) }
    dend_45 { pt3dadd( -53.8155, -8.52562, -39.3352, 0.66 ) }
    dend_45 { pt3dadd( -54.5185, -8.31944, -39.8929, 0.66 ) }
    dend_45 { pt3dadd( -55.1234, -8.10364, -40.3273, 0.66 ) }
    dend_45 { pt3dadd( -55.8089, -7.79177, -40.7696, 0.44 ) }
    dend_45 { pt3dadd( -56.2833, -7.54352, -41.0634, 0.74 ) }
    dend_45 { pt3dadd( -56.9881, -7.15124, -41.4807, 0.74 ) }
    dend_45 { pt3dadd( -57.6151, -6.79392, -41.848, 0.74 ) }
    dend_45 { pt3dadd( -58.1493, -6.48963, -42.1467, 0.74 ) }
    dend_45 { pt3dadd( -58.7621, -6.14785, -42.474, 0.37 ) }
    dend_45 { pt3dadd( -59.6826, -5.76183, -42.9882, 0.37 ) }
    dend_45 { pt3dadd( -60.0879, -5.69178, -43.2344, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_45 { pt3dadd( -60.5251, -5.7309, -43.5398, 0.88 ) }
    dend_45 { pt3dadd( -61.115, -5.86999, -43.9703, 1.18 ) }
    dend_45 { pt3dadd( -61.5971, -6.0174, -44.3615, 1.33 ) }
    dend_45 { pt3dadd( -62.8265, -6.44095, -45.4417, 0.44 ) }
    dend_45 { pt3dadd( -63.7024, -6.71625, -46.2833, 0.44 ) }
    dend_45 { pt3dadd( -64.3893, -6.8627, -47.0467, 0.44 ) }
    dend_45 { pt3dadd( -64.9927, -6.87694, -47.7958, 0.88 ) }
    dend_45 { pt3dadd( -65.6183, -6.71111, -48.6294, 1.03 ) }
    dend_45 { pt3dadd( -65.8641, -6.54915, -48.9595, 1.03 ) }
    dend_45 { pt3dadd( -66.4792, -5.87138, -49.6744, 0.44 ) }
    dend_45 { pt3dadd( -66.8473, -5.41713, -50.061, 0.44 ) }
    dend_45 { pt3dadd( -67.2925, -4.92308, -50.4256, 0.44 ) }
    dend_45 { pt3dadd( -67.6711, -4.59871, -50.6952, 0.59 ) }
    dend_45 { pt3dadd( -68.3179, -4.19848, -51.0759, 0.59 ) }
    dend_45 { pt3dadd( -68.9945, -3.93189, -51.4468, 0.74 ) }
    dend_45 { pt3dadd( -70.2632, -3.70822, -52.0881, 0.37 ) }
    dend_45 { pt3dadd( -71.0713, -3.70203, -52.5089, 0.37 ) }
    dend_45 { pt3dadd( -72.2809, -3.87188, -53.1637, 0.59 ) }
    dend_45 { pt3dadd( -72.7588, -4.0011, -53.4386, 0.88 ) }
    dend_45 { pt3dadd( -73.6859, -4.37552, -54.0283, 0.66 ) }
    dend_45 { pt3dadd( -74.313, -4.68228, -54.4483, 0.74 ) }
    dend_45 { pt3dadd( -74.9844, -5.05198, -54.8931, 0.59 ) }
    dend_45 { pt3dadd( -75.5619, -5.39253, -55.3023, 0.52 ) }
    dend_45 { pt3dadd( -76.1022, -5.70754, -55.6854, 0.88 ) }
    dend_45 { pt3dadd( -77.0894, -6.2099, -56.4146, 0.59 ) }
    dend_45 { pt3dadd( -77.6606, -6.44143, -56.8486, 0.44 ) }
    dend_45 { pt3dadd( -78.2891, -6.63208, -57.3407, 1.03 ) }
    dend_45 { pt3dadd( -78.7263, -6.72116, -57.6818, 1.33 ) }
    dend_45 { pt3dadd( -78.9963, -6.74994, -57.8834, 1.4 ) }
    dend_45 { pt3dadd( -80.1375, -6.80143, -58.6658, 0.44 ) }
    dend_45 { pt3dadd( -80.6004, -6.81261, -58.9642, 0.44 ) }
    dend_45 { pt3dadd( -81.2854, -6.8128, -59.3787, 0.44 ) }
    dend_45 { pt3dadd( -82.0082, -6.78995, -59.7837, 0.44 ) }
    dend_45 { pt3dadd( -83.1801, -6.74303, -60.4349, 0.59 ) }
    dend_45 { pt3dadd( -83.9854, -6.71075, -60.9475, 0.88 ) }
    dend_45 { pt3dadd( -84.7106, -6.65536, -61.5318, 1.11 ) }
    dend_45 { pt3dadd( -85.6325, -6.55123, -62.3938, 0.52 ) }
    dend_45 { pt3dadd( -86.2836, -6.43639, -63.071, 0.52 ) }
    dend_45 { pt3dadd( -86.8204, -6.31464, -63.6663, 1.03 ) }
    dend_45 { pt3dadd( -88.0039, -6.02137, -65.0732, 1.25 ) }
    dend_45 { pt3dadd( -89.4109, -5.73109, -66.7352, 0.52 ) }
    dend_45 { pt3dadd( -89.8972, -5.65238, -67.2942, 0.59 ) }
    dend_45 { pt3dadd( -90.5549, -5.5769, -68.0049, 0.59 ) }
    dend_45 { pt3dadd( -91.6049, -5.46173, -69.001, 0.44 ) }
    dend_45 { pt3dadd( -92.3362, -5.37365, -69.5693, 0.44 ) }
    dend_45 { pt3dadd( -93.4193, -5.19183, -70.262, 0.44 ) }
    dend_45 { pt3dadd( -93.9953, -5.06064, -70.6173, 0.44 ) }
    dend_45 { pt3dadd( -94.7624, -4.78761, -71.2358, 0.66 ) }
    dend_45 { pt3dadd( -95.2831, -4.50526, -71.7865, 0.88 ) }
    dend_45 { pt3dadd( -95.5457, -4.29296, -72.1238, 0.88 ) }
    dend_45 { pt3dadd( -96.2677, -3.51807, -73.1718, 0.52 ) }
    dend_45 { pt3dadd( -96.6881, -2.9482, -73.8577, 0.52 ) }
    dend_45 { pt3dadd( -97.2452, -2.04791, -74.9386, 0.81 ) }
    dend_45 { pt3dadd( -97.6099, -1.34269, -75.7563, 0.44 ) }
    dend_45 { pt3dadd( -97.8064, -0.905925, -76.2598, 0.44 ) }
    dend_45 { pt3dadd( -98.0048, -0.337544, -76.885, 0.74 ) }
    dend_45 { pt3dadd( -98.1028, 0.0916748, -77.305, 0.96 ) }
    dend_45 { pt3dadd( -98.2229, 1.20469, -78.2091, 0.66 ) }
    dend_45 { pt3dadd( -98.2681, 1.90121, -78.7483, 0.44 ) }
    dend_45 { pt3dadd( -98.3297, 2.65834, -79.3746, 0.44 ) }
    dend_45 { pt3dadd( -98.4502, 3.37364, -80.0481, 0.44 ) }
    dend_45 { pt3dadd( -98.5369, 3.61803, -80.315, 0.44 ) }
    dend_45 { pt3dadd( -98.9044, 4.12208, -80.9461, 0.96 ) }
    dend_45 { pt3dadd( -99.8791, 4.66943, -81.8683, 0.66 ) }
    dend_45 { pt3dadd( -100.554, 4.89418, -82.377, 0.96 ) }
    dend_45 { pt3dadd( -100.886, 4.9809, -82.5796, 1.25 ) }
    dend_45 { pt3dadd( -101.281, 5.07286, -82.7947, 1.25 ) }
    dend_45 { pt3dadd( -101.906, 5.23714, -83.1237, 1.25 ) }
    dend_45 { pt3dadd( -102.971, 5.6307, -83.6982, 0.37 ) }
    dend_45 { pt3dadd( -103.593, 6.0136, -84.0263, 0.37 ) }
    dend_45 { pt3dadd( -103.992, 6.34123, -84.2785, 0.66 ) }
    dend_45 { pt3dadd( -104.295, 6.61238, -84.4687, 0.81 ) }
    dend_45 { pt3dadd( -104.77, 7.04379, -84.7355, 0.81 ) }
    dend_45 { pt3dadd( -105.51, 7.71531, -85.0631, 0.44 ) }
    dend_45 { pt3dadd( -106.029, 8.1459, -85.2081, 0.44 ) }
    dend_45 { pt3dadd( -106.996, 8.83947, -85.378, 0.44 ) }
    dend_45 { pt3dadd( -108.078, 9.56795, -85.4964, 0.44 ) }
    dend_45 { pt3dadd( -108.903, 10.1184, -85.5427, 0.66 ) }
    dend_45 { pt3dadd( -109.766, 10.688, -85.5466, 0.96 ) }
    dend_45 { pt3dadd( -110.641, 11.2578, -85.4884, 0.59 ) }
    dend_45 { pt3dadd( -111.384, 11.7599, -85.411, 0.44 ) }
    dend_45 { pt3dadd( -112.149, 12.2889, -85.324, 0.44 ) }
    dend_45 { pt3dadd( -112.89, 12.7986, -85.2866, 0.44 ) }
    dend_45 { pt3dadd( -113.54, 13.189, -85.3328, 0.44 ) }
    dend_45 { pt3dadd( -114.303, 13.5349, -85.4994, 0.74 ) }
    dend_45 { pt3dadd( -114.686, 13.6591, -85.631, 0.74 ) }
    dend_45 { pt3dadd( -115.795, 13.9008, -86.0663, 0.52 ) }
    dend_45 { pt3dadd( -116.304, 13.9819, -86.2909, 0.59 ) }
    dend_45 { pt3dadd( -117.247, 14.112, -86.7426, 0.44 ) }
    dend_45 { pt3dadd( -117.949, 14.2383, -87.0949, 0.44 ) }
    dend_45 { pt3dadd( -118.813, 14.4794, -87.5826, 0.37 ) }
    dend_45 { pt3dadd( -119.668, 14.8089, -88.0729, 0.52 ) }
    dend_45 { pt3dadd( -120.335, 15.1455, -88.4681, 1.11 ) }
    dend_45 { pt3dadd( -120.847, 15.4529, -88.8133, 1.25 ) }
    dend_45 { pt3dadd( -121.442, 15.8534, -89.2852, 0.37 ) }
    dend_45 { pt3dadd( -122.286, 16.4355, -90.061, 0.37 ) }
    dend_45 { pt3dadd( -122.858, 16.802, -90.645, 0.29 ) }
    dend_45 { pt3dadd( -123.312, 17.0679, -91.1624, 0.29 ) }
    dend_45 { pt3dadd( -124.126, 17.5288, -92.1486, 0.59 ) }
    dend_45 { pt3dadd( -124.766, 17.9092, -92.9606, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_45 { pt3dadd( -125.127, 18.138, -93.4236, 0.29 ) }
    dend_45 { pt3dadd( -125.411, 18.3421, -93.7589, 0.37 ) }
    dend_45 { pt3dadd( -125.857, 18.7234, -94.2538, 0.37 ) }
    dend_45 { pt3dadd( -126.468, 19.3033, -94.8188, 0.44 ) }
    dend_45 { pt3dadd( -126.986, 19.8264, -95.1769, 0.44 ) }
    dend_45 { pt3dadd( -127.483, 20.3306, -95.444, 0.44 ) }
    dend_45 { pt3dadd( -128.091, 20.8965, -95.7331, 0.37 ) }
    dend_45 { pt3dadd( -128.342, 21.0985, -95.8378, 0.37 ) }
    dend_45 { pt3dadd( -129.0, 21.5288, -96.06, 0.88 ) }
    dend_45 { pt3dadd( -129.388, 21.738, -96.1738, 1.11 ) }
    dend_45 { pt3dadd( -130.089, 22.0846, -96.3705, 1.11 ) }
    dend_45 { pt3dadd( -131.188, 22.6552, -96.6714, 0.37 ) }
    dend_45 { pt3dadd( -132.035, 23.1433, -96.8985, 0.37 ) }
    dend_45 { pt3dadd( -132.515, 23.4727, -97.0224, 0.66 ) }
    dend_45 { pt3dadd( -133.214, 24.1076, -97.2416, 0.66 ) }
    dend_45 { pt3dadd( -133.743, 24.7338, -97.4494, 0.37 ) }
    dend_45 { pt3dadd( -134.167, 25.3912, -97.6668, 0.52 ) }
    dend_45 { pt3dadd( -134.315, 25.6795, -97.7626, 0.66 ) }
    dend_45 { pt3dadd( -134.525, 26.1484, -97.9133, 0.66 ) }
    dend_45 { pt3dadd( -135.092, 27.4444, -98.3147, 0.37 ) }
    dend_45 { pt3dadd( -135.368, 28.0088, -98.4625, 0.37 ) }
    dend_45 { pt3dadd( -135.7, 28.4902, -98.5327, 0.37 ) }
    dend_45 { pt3dadd( -136.073, 28.8783, -98.5261, 0.88 ) }
    dend_45 { pt3dadd( -136.698, 29.3887, -98.4425, 0.81 ) }
    dend_45 { pt3dadd( -137.012, 29.602, -98.3811, 0.81 ) }
    dend_45 { pt3dadd( -137.815, 30.0869, -98.1904, 0.29 ) }
    dend_45 { pt3dadd( -138.872, 30.7017, -97.9303, 0.29 ) }
    dend_45 { pt3dadd( -139.526, 31.1218, -97.7173, 0.52 ) }
    dend_45 { pt3dadd( -140.309, 31.683, -97.4443, 0.44 ) }
    dend_45 { pt3dadd( -140.689, 31.9733, -97.3109, 0.44 ) }
    dend_45 { pt3dadd( -141.186, 32.3832, -97.1145, 0.81 ) }
    dend_45 { pt3dadd( -141.762, 32.9273, -96.8629, 0.81 ) }
    dend_45 { pt3dadd( -142.816, 34.1011, -96.3464, 0.29 ) }
    dend_45 { pt3dadd( -143.233, 34.6029, -96.1298, 0.44 ) }
    dend_45 { pt3dadd( -143.624, 35.086, -95.8987, 0.29 ) }
    dend_45 { pt3dadd( -144.062, 35.6, -95.6509, 0.29 ) }
    dend_45 { pt3dadd( -144.644, 36.2383, -95.3584, 0.29 ) }
    dend_45 { pt3dadd( -145.096, 36.7001, -95.171, 0.29 ) }
    dend_45 { pt3dadd( -145.639, 37.2047, -94.9899, 0.59 ) }
    dend_45 { pt3dadd( -146.687, 38.1526, -94.6248, 0.22 ) }
    dend_45 { pt3dadd( -147.364, 38.7538, -94.3911, 0.22 ) }
    dend_45 { pt3dadd( -147.728, 39.049, -94.2637, 0.52 ) }
    dend_45 { pt3dadd( -148.072, 39.2864, -94.1349, 0.52 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 43/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -66.4341, -39.6723, 64.1607, 0.29 ) }
    dend_43 { pt3dadd( -73.6228, -44.5973, 71.0425, 0.29 ) }
    dend_43 { pt3dadd( -79.2539, -51.2715, 77.9746, 0.29 ) }
    dend_43 { pt3dadd( -84.5264, -57.8327, 85.2827, 0.29 ) }
    dend_43 { pt3dadd( -89.2104, -65.0603, 92.3917, 0.29 ) }
    dend_43 { pt3dadd( -92.345, -72.8435, 99.7926, 0.29 ) }
    dend_43 { pt3dadd( -96.3957, -80.5144, 106.85, 0.29 ) }
    dend_43 { pt3dadd( -100.477, -88.2034, 113.871, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 51/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -66.4341, -39.6723, 64.1607, 0.29 ) }
    dend_42 { pt3dadd( -74.904, -44.5185, 71.5472, 0.29 ) }
    dend_42 { pt3dadd( -83.3697, -50.8046, 77.8239, 0.29 ) }
    dend_42 { pt3dadd( -90.9739, -57.8338, 84.4424, 0.29 ) }
    dend_42 { pt3dadd( -97.4859, -65.3011, 91.7321, 0.29 ) }
    dend_42 { pt3dadd( -103.447, -73.5413, 98.6922, 0.29 ) }
    dend_42 { pt3dadd( -108.24, -83.0923, 104.921, 0.29 ) }
    dend_42 { pt3dadd( -113.885, -91.5358, 111.912, 0.29 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 59/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -8.80726, -55.9319, 16.1199, 0.66 ) }
    dend_34 { pt3dadd( -10.0135, -58.6996, 15.1609, 0.66 ) }
    dend_34 { pt3dadd( -10.3197, -59.4356, 14.9318, 1.03 ) }
    dend_34 { pt3dadd( -10.6155, -60.2094, 14.7833, 1.03 ) }
    dend_34 { pt3dadd( -11.1412, -61.6943, 14.6339, 1.03 ) }
    dend_34 { pt3dadd( -11.4898, -62.8245, 14.5944, 1.03 ) }
    dend_34 { pt3dadd( -11.8539, -64.2112, 14.6198, 0.81 ) }
    dend_34 { pt3dadd( -12.0704, -65.4641, 14.8427, 0.81 ) }
    dend_34 { pt3dadd( -12.1943, -67.3169, 15.2902, 1.4 ) }
    dend_34 { pt3dadd( -12.1783, -68.1163, 15.5264, 1.62 ) }
    dend_34 { pt3dadd( -12.0513, -69.3175, 15.9694, 1.4 ) }
    dend_34 { pt3dadd( -11.9085, -70.1132, 16.2791, 1.92 ) }
    dend_34 { pt3dadd( -11.6437, -71.1972, 16.7016, 1.4 ) }
    dend_34 { pt3dadd( -11.1515, -72.8427, 17.3381, 1.69 ) }
    dend_34 { pt3dadd( -10.795, -73.9424, 17.706, 1.11 ) }
    dend_34 { pt3dadd( -10.3233, -75.417, 18.1635, 0.81 ) }
    dend_34 { pt3dadd( -10.1178, -76.1125, 18.3621, 1.11 ) }
    dend_34 { pt3dadd( -9.90446, -76.9415, 18.574, 1.25 ) }
    dend_34 { pt3dadd( -9.52508, -78.7838, 19.0031, 0.96 ) }
    dend_34 { pt3dadd( -9.41374, -79.7136, 19.192, 0.74 ) }
    dend_34 { pt3dadd( -9.3976, -80.6, 19.3473, 0.81 ) }
    dend_34 { pt3dadd( -9.57724, -81.9387, 19.5233, 0.52 ) }
    dend_34 { pt3dadd( -9.83723, -82.8913, 19.6073, 0.88 ) }
    dend_34 { pt3dadd( -10.1594, -83.6909, 19.6079, 0.88 ) }
    dend_34 { pt3dadd( -10.6103, -84.5641, 19.4876, 0.88 ) }
    dend_34 { pt3dadd( -11.0358, -85.3373, 19.3118, 0.66 ) }
    dend_34 { pt3dadd( -11.4671, -86.1668, 19.0209, 0.66 ) }
    dend_34 { pt3dadd( -11.9939, -87.338, 18.4073, 0.88 ) }
    dend_34 { pt3dadd( -12.2884, -88.121, 17.8971, 1.33 ) }
    dend_34 { pt3dadd( -12.4716, -88.7235, 17.475, 1.47 ) }
    dend_34 { pt3dadd( -12.6213, -89.292, 17.0747, 1.62 ) }
    dend_34 { pt3dadd( -12.9165, -90.4534, 16.311, 0.74 ) }
    dend_34 { pt3dadd( -13.2489, -91.7756, 15.6052, 0.74 ) }
    dend_34 { pt3dadd( -13.5427, -92.8066, 15.2245, 0.74 ) }
    dend_34 { pt3dadd( -13.793, -93.6292, 15.0686, 0.74 ) }
    dend_34 { pt3dadd( -14.1292, -94.7686, 15.0214, 0.66 ) }
    dend_34 { pt3dadd( -14.422, -95.9592, 15.133, 0.66 ) }
    dend_34 { pt3dadd( -14.7267, -97.6892, 15.5066, 0.96 ) }
    dend_34 { pt3dadd( -14.8044, -98.5855, 15.7663, 0.88 ) }
    dend_34 { pt3dadd( -14.7945, -99.3939, 16.0094, 0.88 ) }
    dend_34 { pt3dadd( -14.6374, -100.909, 16.4301, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_34 { pt3dadd( -14.3806, -102.308, 16.7807, 1.18 ) }
    dend_34 { pt3dadd( -14.2394, -102.994, 16.9064, 1.62 ) }
    dend_34 { pt3dadd( -14.0988, -103.764, 16.9891, 1.62 ) }
    dend_34 { pt3dadd( -13.9421, -104.85, 17.0826, 0.96 ) }
    dend_34 { pt3dadd( -13.863, -105.689, 17.1474, 0.96 ) }
    dend_34 { pt3dadd( -13.8325, -106.954, 17.2381, 0.66 ) }
    dend_34 { pt3dadd( -13.9596, -108.609, 17.34, 0.52 ) }
    dend_34 { pt3dadd( -14.1809, -110.092, 17.4719, 0.59 ) }
    dend_34 { pt3dadd( -14.5666, -111.792, 17.6724, 0.74 ) }
    dend_34 { pt3dadd( -14.7017, -112.233, 17.7419, 1.11 ) }
    dend_34 { pt3dadd( -15.0366, -113.073, 17.9429, 1.25 ) }
    dend_34 { pt3dadd( -15.72, -114.415, 18.381, 0.88 ) }
    dend_34 { pt3dadd( -16.1545, -115.081, 18.6861, 0.66 ) }
    dend_34 { pt3dadd( -16.6185, -115.666, 19.0147, 0.66 ) }
    dend_34 { pt3dadd( -17.0782, -116.181, 19.3214, 0.59 ) }
    dend_34 { pt3dadd( -17.9994, -117.22, 19.887, 0.59 ) }
    dend_34 { pt3dadd( -18.5225, -117.817, 20.166, 0.44 ) }
    dend_34 { pt3dadd( -19.1606, -118.593, 20.435, 0.44 ) }
    dend_34 { pt3dadd( -19.7024, -119.314, 20.5857, 0.74 ) }
    dend_34 { pt3dadd( -20.1491, -119.985, 20.6635, 0.74 ) }
    dend_34 { pt3dadd( -20.5416, -120.626, 20.6895, 0.66 ) }
    dend_34 { pt3dadd( -21.0625, -121.564, 20.6484, 1.03 ) }
    dend_34 { pt3dadd( -21.4554, -122.311, 20.6163, 1.4 ) }
    dend_34 { pt3dadd( -21.878, -123.151, 20.5847, 1.4 ) }
    dend_34 { pt3dadd( -22.2478, -123.879, 20.5645, 1.47 ) }
    dend_34 { pt3dadd( -22.8317, -125.033, 20.5532, 0.74 ) }
    dend_34 { pt3dadd( -23.2858, -125.93, 20.5357, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 27/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -8.80726, -55.9319, 16.1199, 0.44 ) }
    dend_33 { pt3dadd( -8.11149, -56.6909, 17.3222, 0.44 ) }
    dend_33 { pt3dadd( -7.71732, -57.3842, 18.128, 0.44 ) }
    dend_33 { pt3dadd( -7.46831, -58.3295, 18.868, 0.37 ) }
    dend_33 { pt3dadd( -7.21771, -60.2253, 19.9285, 0.59 ) }
    dend_33 { pt3dadd( -7.19045, -60.9796, 20.2337, 0.52 ) }
    dend_33 { pt3dadd( -7.22673, -61.962, 20.5436, 0.44 ) }
    dend_33 { pt3dadd( -7.52815, -63.5743, 20.9304, 0.44 ) }
    dend_33 { pt3dadd( -7.96847, -64.9504, 21.2211, 0.44 ) }
    dend_33 { pt3dadd( -8.36105, -65.7951, 21.408, 0.59 ) }
    dend_33 { pt3dadd( -9.00543, -66.7735, 21.7105, 0.59 ) }
    dend_33 { pt3dadd( -9.80058, -67.6052, 22.2363, 0.37 ) }
    dend_33 { pt3dadd( -10.9724, -68.5292, 23.1936, 0.59 ) }
    dend_33 { pt3dadd( -12.0674, -69.2454, 24.2157, 0.88 ) }
    dend_33 { pt3dadd( -12.7748, -69.6484, 24.894, 0.81 ) }
    dend_33 { pt3dadd( -14.2127, -70.4213, 26.258, 1.03 ) }
    dend_33 { pt3dadd( -15.6546, -71.1967, 27.5967, 0.88 ) }
    dend_33 { pt3dadd( -16.922, -71.9428, 28.6851, 0.44 ) }
    dend_33 { pt3dadd( -17.9072, -72.6657, 29.4369, 0.44 ) }
    dend_33 { pt3dadd( -18.5131, -73.2312, 29.8417, 0.66 ) }
    dend_33 { pt3dadd( -19.2913, -74.0708, 30.2214, 0.66 ) }
    dend_33 { pt3dadd( -19.9347, -74.8272, 30.3545, 0.66 ) }
    dend_33 { pt3dadd( -20.8153, -75.905, 30.3294, 0.66 ) }
    dend_33 { pt3dadd( -21.5624, -76.8329, 30.2452, 1.33 ) }
    dend_33 { pt3dadd( -21.8852, -77.2693, 30.1838, 1.47 ) }
    dend_33 { pt3dadd( -22.5073, -78.1322, 30.0543, 1.03 ) }
    dend_33 { pt3dadd( -23.2869, -79.2392, 29.901, 0.81 ) }
    dend_33 { pt3dadd( -23.9511, -80.1736, 29.7893, 0.74 ) }
    dend_33 { pt3dadd( -24.7532, -81.2926, 29.6886, 0.52 ) }
    dend_33 { pt3dadd( -25.3225, -82.116, 29.6442, 0.44 ) }
    dend_33 { pt3dadd( -30.6594, -91.4965, 35.1498, 0.44 ) }
    dend_33 { pt3dadd( -34.4951, -101.494, 40.8797, 0.44 ) }
    dend_33 { pt3dadd( -39.155, -111.549, 45.8411, 0.44 ) }
    dend_33 { pt3dadd( -45.8222, -121.186, 48.9096, 0.44 ) }
    dend_33 { pt3dadd( -53.2639, -129.335, 53.7882, 0.44 ) }
    dend_33 { pt3dadd( -59.8942, -137.439, 59.7916, 0.44 ) }
    dend_33 { pt3dadd( -66.5956, -145.878, 65.2488, 0.44 ) }
    dend_33 { pt3dadd( -74.9071, -153.95, 68.5887, 0.44 ) }
    dend_33 { pt3dadd( -84.4333, -161.255, 69.3358, 0.44 ) }
    // Section: dend_17, id: dend_17, parent: dend_0 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 4.59082, -20.2235, -3.55493, 1.47 ) }
    dend_17 { pt3dadd( 4.09803, -21.6642, -3.90458, 1.47 ) }
    dend_17 { pt3dadd( 3.59373, -23.5187, -4.21565, 1.33 ) }
    dend_17 { pt3dadd( 3.26452, -24.9969, -4.35947, 1.55 ) }
    dend_17 { pt3dadd( 3.04989, -26.1961, -4.38184, 1.55 ) }
    dend_17 { pt3dadd( 2.86931, -27.4396, -4.26121, 1.77 ) }
    dend_17 { pt3dadd( 2.66234, -29.0312, -3.94713, 1.77 ) }
    dend_17 { pt3dadd( 2.57046, -30.0125, -3.62308, 2.14 ) }
    dend_17 { pt3dadd( 2.49782, -30.8314, -3.26537, 2.58 ) }
    dend_17 { pt3dadd( 2.39375, -31.8788, -2.77942, 2.36 ) }
    dend_17 { pt3dadd( 2.16309, -33.8023, -1.9772, 1.77 ) }
    dend_17 { pt3dadd( 1.92721, -35.4634, -1.45265, 1.47 ) }
    dend_17 { pt3dadd( 1.72453, -36.8585, -1.19306, 1.18 ) }
    dend_17 { pt3dadd( 1.52948, -38.3422, -1.06909, 1.11 ) }
    dend_17 { pt3dadd( 1.38593, -39.6629, -1.09311, 1.33 ) }
    dend_17 { pt3dadd( 1.2494, -41.4656, -1.31865, 1.25 ) }
    dend_17 { pt3dadd( 1.21323, -43.0438, -1.65636, 1.47 ) }
    dend_17 { pt3dadd( 1.2568, -44.4576, -2.00571, 1.62 ) }
    dend_17 { pt3dadd( 1.32495, -45.5185, -2.27325, 2.14 ) }
    dend_17 { pt3dadd( 1.3685, -46.2506, -2.44408, 2.58 ) }
    dend_17 { pt3dadd( 1.38909, -47.3033, -2.64811, 2.43 ) }
    dend_17 { pt3dadd( 1.32614, -48.9979, -2.91022, 2.14 ) }
    dend_17 { pt3dadd( 1.18544, -50.3667, -3.09337, 1.92 ) }
    dend_17 { pt3dadd( 0.942085, -51.7246, -3.25232, 1.47 ) }
    dend_17 { pt3dadd( 0.504615, -53.4028, -3.43784, 1.25 ) }
    dend_17 { pt3dadd( 0.0449689, -54.7873, -3.54196, 1.11 ) }
    dend_17 { pt3dadd( -0.37258, -55.8233, -3.57048, 1.4 ) }
    dend_17 { pt3dadd( -0.675955, -56.4893, -3.56425, 1.55 ) }
    dend_17 { pt3dadd( -1.15099, -57.5065, -3.50961, 1.18 ) }
    dend_17 { pt3dadd( -1.59597, -58.5452, -3.39169, 0.88 ) }
    dend_17 { pt3dadd( -1.98976, -59.6377, -3.26976, 1.18 ) }
    dend_17 { pt3dadd( -2.29288, -60.7066, -3.15911, 1.03 ) }
    dend_17 { pt3dadd( -2.53819, -61.7128, -3.05059, 1.03 ) }
    dend_17 { pt3dadd( -2.83389, -63.2046, -2.90894, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_17 { pt3dadd( -2.96166, -64.1523, -2.84214, 1.77 ) }
    dend_17 { pt3dadd( -3.07608, -65.6435, -2.80027, 1.77 ) }
    dend_17 { pt3dadd( -3.13104, -66.7914, -2.85634, 2.06 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 3/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.59082, -20.2235, -3.55493, 1.77 ) }
    dend_1 { pt3dadd( 5.06136, -22.3369, -4.04515, 1.77 ) }
    dend_1 { pt3dadd( 5.27161, -23.3948, -4.27499, 1.99 ) }
    dend_1 { pt3dadd( 5.51337, -24.6112, -4.53926, 1.99 ) }
    dend_1 { pt3dadd( 5.84323, -26.2708, -4.89985, 3.17 ) }
    dend_1 { pt3dadd( 5.99182, -27.0185, -5.06229, 3.76 ) }
    dend_1 { pt3dadd( 6.24608, -28.2977, -5.34023, 4.2 ) }
    dend_1 { pt3dadd( 6.38679, -29.4296, -5.54129, 3.9 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.205353 ) }
    axon_1 { pt3dadd( 5.97663, 56.3268, -0.359339, 0.205353 ) }
    axon_1 { pt3dadd( 7.46769, 71.2525, -0.359339, 0.205353 ) }
    // Section: dend_85, id: dend_85, parent: dend_79 (entry count 14/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -39.716, 99.1095, -17.7021, 0.29 ) }
    dend_85 { pt3dadd( -39.9678, 100.274, -17.8958, 0.29 ) }
    dend_85 { pt3dadd( -40.2816, 102.003, -18.5498, 0.29 ) }
    dend_85 { pt3dadd( -40.4801, 103.548, -19.2314, 0.29 ) }
    dend_85 { pt3dadd( -40.6067, 105.204, -20.0394, 0.29 ) }
    dend_85 { pt3dadd( -40.6579, 106.389, -20.6698, 0.29 ) }
    dend_85 { pt3dadd( -40.7129, 108.335, -21.7122, 0.29 ) }
    dend_85 { pt3dadd( -40.7304, 111.816, -23.7868, 0.29 ) }
    dend_85 { pt3dadd( -40.7257, 112.885, -24.4674, 0.37 ) }
    dend_85 { pt3dadd( -40.7366, 114.171, -25.3198, 0.37 ) }
    dend_85 { pt3dadd( -40.7878, 115.753, -26.4137, 0.37 ) }
    dend_85 { pt3dadd( -40.8253, 117.054, -27.323, 0.22 ) }
    dend_85 { pt3dadd( -40.8767, 118.413, -28.2379, 0.22 ) }
    dend_85 { pt3dadd( -41.0366, 119.901, -29.039, 1.03 ) }
    dend_85 { pt3dadd( -41.0975, 120.168, -29.1828, 1.03 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 29/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -39.716, 99.1095, -17.7021, 0.52 ) }
    dend_80 { pt3dadd( -41.0897, 100.385, -17.2133, 0.52 ) }
    dend_80 { pt3dadd( -41.7199, 101.066, -16.9437, 0.52 ) }
    dend_80 { pt3dadd( -42.3457, 101.861, -16.6577, 0.44 ) }
    dend_80 { pt3dadd( -42.6211, 102.271, -16.5287, 0.59 ) }
    dend_80 { pt3dadd( -42.9111, 102.771, -16.3873, 0.59 ) }
    dend_80 { pt3dadd( -43.4386, 103.733, -16.1111, 0.37 ) }
    dend_80 { pt3dadd( -44.045, 104.991, -15.8319, 0.37 ) }
    dend_80 { pt3dadd( -44.406, 105.806, -15.6382, 0.37 ) }
    dend_80 { pt3dadd( -44.7722, 106.626, -15.4347, 0.37 ) }
    dend_80 { pt3dadd( -45.1823, 107.522, -15.1893, 0.29 ) }
    dend_80 { pt3dadd( -45.5693, 108.323, -14.9557, 0.29 ) }
    dend_80 { pt3dadd( -46.0262, 109.159, -14.697, 0.81 ) }
    dend_80 { pt3dadd( -46.2472, 109.491, -14.5944, 0.81 ) }
    dend_80 { pt3dadd( -46.6336, 109.987, -14.4336, 0.74 ) }
    dend_80 { pt3dadd( -47.177, 110.612, -14.2696, 0.74 ) }
    dend_80 { pt3dadd( -47.6654, 111.103, -14.2119, 0.96 ) }
    dend_80 { pt3dadd( -48.1703, 111.563, -14.2426, 0.96 ) }
    dend_80 { pt3dadd( -48.5114, 111.871, -14.3173, 0.59 ) }
    dend_80 { pt3dadd( -49.1727, 112.525, -14.569, 0.29 ) }
    dend_80 { pt3dadd( -49.7782, 113.204, -14.921, 0.29 ) }
    dend_80 { pt3dadd( -50.4257, 114.009, -15.3964, 0.29 ) }
    dend_80 { pt3dadd( -50.8766, 114.619, -15.7521, 0.22 ) }
    dend_80 { pt3dadd( -51.5485, 115.573, -16.2984, 0.22 ) }
    dend_80 { pt3dadd( -52.0716, 116.356, -16.7343, 0.74 ) }
    dend_80 { pt3dadd( -52.661, 117.29, -17.1936, 0.37 ) }
    dend_80 { pt3dadd( -53.1304, 118.108, -17.5163, 0.37 ) }
    dend_80 { pt3dadd( -53.5569, 118.917, -17.788, 0.81 ) }
    dend_80 { pt3dadd( -53.8628, 119.463, -17.9741, 1.18 ) }
    dend_80 { pt3dadd( -54.1622, 119.888, -18.1223, 1.18 ) }
    dend_80 { pt3dadd( -54.9433, 120.789, -18.4852, 0.29 ) }
    dend_80 { pt3dadd( -55.777, 121.68, -18.8545, 0.29 ) }
    dend_80 { pt3dadd( -56.3105, 122.214, -19.108, 0.29 ) }
    dend_80 { pt3dadd( -56.8579, 122.724, -19.3882, 0.29 ) }
    dend_80 { pt3dadd( -57.674, 123.421, -19.7985, 0.74 ) }
    dend_80 { pt3dadd( -58.2702, 123.826, -20.091, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 65/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 102.314, 23.8428, 43.2456, 0.29 ) }
    dend_71 { pt3dadd( 113.069, 24.2062, 49.6337, 0.29 ) }
    dend_71 { pt3dadd( 123.552, 24.252, 56.4672, 0.29 ) }
    dend_71 { pt3dadd( 134.403, 25.7309, 62.5346, 0.29 ) }
    dend_71 { pt3dadd( 144.553, 28.7537, 69.2441, 0.29 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 70/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 102.314, 23.8428, 43.2456, 0.29 ) }
    dend_70 { pt3dadd( 112.366, 23.8785, 48.849, 0.29 ) }
    dend_70 { pt3dadd( 122.473, 25.9321, 53.9797, 0.29 ) }
    dend_70 { pt3dadd( 133.34, 28.2642, 57.0201, 0.29 ) }
    dend_70 { pt3dadd( 143.274, 32.2174, 61.3787, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 75/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 55.4899, 27.5897, -0.734601, 0.44 ) }
    dend_58 { pt3dadd( 56.4614, 27.6097, -1.12267, 0.44 ) }
    dend_58 { pt3dadd( 56.8233, 27.6816, -1.31636, 0.37 ) }
    dend_58 { pt3dadd( 57.4657, 27.8868, -1.68977, 0.59 ) }
    dend_58 { pt3dadd( 57.815, 28.0182, -1.89579, 0.74 ) }
    dend_58 { pt3dadd( 58.7114, 28.3841, -2.40605, 0.37 ) }
    dend_58 { pt3dadd( 59.6362, 28.7844, -2.9049, 0.29 ) }
    dend_58 { pt3dadd( 60.1837, 29.0995, -3.21806, 0.29 ) }
    dend_58 { pt3dadd( 60.576, 29.357, -3.41808, 0.88 ) }
    dend_58 { pt3dadd( 60.72, 29.4652, -3.48836, 1.11 ) }
    dend_58 { pt3dadd( 61.0773, 29.745, -3.63879, 1.11 ) }
    dend_58 { pt3dadd( 61.4148, 29.9935, -3.7122, 1.18 ) }
    dend_58 { pt3dadd( 62.0411, 30.3405, -3.74205, 0.74 ) }
    dend_58 { pt3dadd( 62.4675, 30.5616, -3.74233, 0.59 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 89/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 55.4899, 27.5897, -0.734601, 0.29 ) }
    dend_55 { pt3dadd( 56.4624, 28.5535, -0.238363, 0.29 ) }
    dend_55 { pt3dadd( 56.9197, 29.007, 0.0158424, 0.29 ) }
    dend_55 { pt3dadd( 57.5055, 29.5878, 0.341439, 0.66 ) }
    dend_55 { pt3dadd( 58.1379, 30.2149, 0.692945, 0.29 ) }
    dend_55 { pt3dadd( 58.6114, 30.6844, 0.956123, 0.29 ) }
    dend_55 { pt3dadd( 59.5604, 31.6254, 1.48359, 0.29 ) }
    dend_55 { pt3dadd( 60.1036, 32.1127, 1.84097, 0.29 ) }
    dend_55 { pt3dadd( 68.2284, 39.7785, 5.12925, 0.29 ) }
    dend_55 { pt3dadd( 75.2, 48.019, 9.55224, 0.29 ) }
    dend_55 { pt3dadd( 80.7054, 57.6857, 13.2319, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_55 { pt3dadd( 87.3635, 66.4732, 17.0997, 0.29 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 1/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -76.9022, -60.2883, -58.1504, 0.81 ) }
    dend_48 { pt3dadd( -77.3873, -61.8925, -59.2693, 0.81 ) }
    dend_48 { pt3dadd( -77.4747, -62.0913, -59.4242, 0.81 ) }
    dend_48 { pt3dadd( -78.6331, -64.0393, -61.0244, 0.37 ) }
    dend_48 { pt3dadd( -78.9895, -64.5289, -61.4194, 0.52 ) }
    dend_48 { pt3dadd( -79.3372, -64.9888, -61.7821, 0.66 ) }
    dend_48 { pt3dadd( -79.7425, -65.5326, -62.1911, 0.66 ) }
    dend_48 { pt3dadd( -80.6523, -66.5733, -62.9821, 0.37 ) }
    dend_48 { pt3dadd( -81.2221, -67.224, -63.4971, 0.37 ) }
    dend_48 { pt3dadd( -82.1006, -68.186, -64.2776, 0.37 ) }
    dend_48 { pt3dadd( -82.6336, -68.784, -64.7787, 0.66 ) }
    dend_48 { pt3dadd( -83.4873, -69.7242, -65.5727, 1.11 ) }
    dend_48 { pt3dadd( -83.893, -70.1426, -65.9249, 1.25 ) }
    dend_48 { pt3dadd( -85.2153, -71.4673, -67.1803, 0.22 ) }
    dend_48 { pt3dadd( -85.7407, -71.9456, -67.7187, 0.29 ) }
    dend_48 { pt3dadd( -86.1818, -72.2983, -68.1918, 0.59 ) }
    dend_48 { pt3dadd( -86.6799, -72.6494, -68.7057, 0.81 ) }
    dend_48 { pt3dadd( -87.2075, -73.0314, -69.2573, 0.81 ) }
    dend_48 { pt3dadd( -88.6243, -74.1637, -70.6273, 0.37 ) }
    dend_48 { pt3dadd( -89.063, -74.5448, -70.9976, 0.37 ) }
    dend_48 { pt3dadd( -89.819, -75.3472, -71.6019, 0.59 ) }
    dend_48 { pt3dadd( -90.1145, -75.7027, -71.8125, 0.81 ) }
    dend_48 { pt3dadd( -91.2399, -77.1555, -72.4718, 0.44 ) }
    dend_48 { pt3dadd( -92.0605, -78.2389, -72.8155, 0.44 ) }
    dend_48 { pt3dadd( -92.7531, -79.1395, -72.9979, 0.37 ) }
    dend_48 { pt3dadd( -93.6063, -80.2579, -73.1829, 0.37 ) }
    dend_48 { pt3dadd( -94.2399, -81.0777, -73.3193, 0.66 ) }
    dend_48 { pt3dadd( -94.7337, -81.6834, -73.4529, 0.81 ) }
    dend_48 { pt3dadd( -95.2164, -82.2298, -73.5714, 0.81 ) }
    dend_48 { pt3dadd( -96.1005, -83.1894, -73.8149, 0.29 ) }
    dend_48 { pt3dadd( -96.6112, -83.7054, -73.947, 0.96 ) }
    dend_48 { pt3dadd( -97.8642, -84.8726, -74.1981, 0.29 ) }
    dend_48 { pt3dadd( -98.677, -85.6234, -74.3239, 0.29 ) }
    dend_48 { pt3dadd( -99.4988, -86.3529, -74.3974, 0.44 ) }
    dend_48 { pt3dadd( -99.9655, -86.749, -74.4304, 0.44 ) }
    dend_48 { pt3dadd( -100.731, -87.3625, -74.4448, 0.29 ) }
    dend_48 { pt3dadd( -101.149, -87.7155, -74.4718, 0.59 ) }
    dend_48 { pt3dadd( -101.801, -88.3116, -74.51, 0.59 ) }
    dend_48 { pt3dadd( -102.413, -88.9366, -74.5715, 0.52 ) }
    dend_48 { pt3dadd( -103.355, -89.8936, -74.7433, 0.37 ) }
    dend_48 { pt3dadd( -103.948, -90.5, -74.8839, 0.88 ) }
    dend_48 { pt3dadd( -105.048, -91.6432, -75.1811, 0.44 ) }
    dend_48 { pt3dadd( -105.668, -92.3034, -75.3434, 0.59 ) }
    dend_48 { pt3dadd( -106.177, -92.845, -75.4686, 0.59 ) }
    dend_48 { pt3dadd( -106.798, -93.4888, -75.5845, 0.59 ) }
    dend_48 { pt3dadd( -107.452, -94.117, -75.6468, 0.37 ) }
    dend_48 { pt3dadd( -107.968, -94.5338, -75.6663, 0.37 ) }
    dend_48 { pt3dadd( -108.811, -95.0741, -75.6372, 0.29 ) }
    dend_48 { pt3dadd( -109.128, -95.241, -75.609, 0.29 ) }
    dend_48 { pt3dadd( -109.95, -95.6271, -75.4814, 0.88 ) }
    dend_48 { pt3dadd( -110.516, -95.8766, -75.3531, 1.18 ) }
    dend_48 { pt3dadd( -111.456, -96.2249, -75.1298, 0.29 ) }
    dend_48 { pt3dadd( -112.137, -96.4475, -74.9809, 0.29 ) }
    dend_48 { pt3dadd( -113.144, -96.8007, -74.8126, 0.29 ) }
    dend_48 { pt3dadd( -113.605, -96.9873, -74.748, 0.88 ) }
    dend_48 { pt3dadd( -114.053, -97.1979, -74.703, 0.88 ) }
    dend_48 { pt3dadd( -115.509, -97.9678, -74.6596, 0.22 ) }
    dend_48 { pt3dadd( -115.993, -98.2569, -74.6893, 0.22 ) }
    dend_48 { pt3dadd( -117.039, -98.8932, -74.8222, 0.59 ) }
    dend_48 { pt3dadd( -117.269, -99.0369, -74.8657, 0.59 ) }
    dend_48 { pt3dadd( -118.188, -99.6159, -75.0604, 0.22 ) }
    dend_48 { pt3dadd( -118.714, -99.9601, -75.1831, 0.44 ) }
    dend_48 { pt3dadd( -119.46, -100.516, -75.3691, 0.22 ) }
    dend_48 { pt3dadd( -120.489, -101.268, -75.617, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 65/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -76.9022, -60.2883, -58.1504, 0.29 ) }
    dend_47 { pt3dadd( -78.1406, -60.0673, -58.4678, 0.29 ) }
    dend_47 { pt3dadd( -78.9285, -59.9593, -58.6186, 0.29 ) }
    dend_47 { pt3dadd( -79.7115, -59.8872, -58.763, 0.66 ) }
    dend_47 { pt3dadd( -80.0917, -59.8737, -58.8289, 0.66 ) }
    dend_47 { pt3dadd( -81.4468, -59.8635, -59.0399, 0.29 ) }
    dend_47 { pt3dadd( -82.0339, -59.8713, -59.1324, 0.29 ) }
    dend_47 { pt3dadd( -82.4859, -59.8867, -59.1575, 0.66 ) }
    dend_47 { pt3dadd( -82.9234, -59.9164, -59.169, 0.66 ) }
    dend_47 { pt3dadd( -84.4318, -60.0465, -59.1964, 0.29 ) }
    dend_47 { pt3dadd( -84.9586, -60.079, -59.2207, 0.52 ) }
    dend_47 { pt3dadd( -85.4513, -60.091, -59.2667, 0.52 ) }
    dend_47 { pt3dadd( -86.7819, -60.0286, -59.4195, 0.22 ) }
    dend_47 { pt3dadd( -87.3884, -59.9611, -59.4989, 0.59 ) }
    dend_47 { pt3dadd( -87.7742, -59.8938, -59.5428, 0.74 ) }
    dend_47 { pt3dadd( -88.5104, -59.7216, -59.6381, 0.29 ) }
    dend_47 { pt3dadd( -88.8761, -59.6229, -59.6953, 0.29 ) }
    dend_47 { pt3dadd( -89.3457, -59.4734, -59.7809, 0.96 ) }
    dend_47 { pt3dadd( -89.7829, -59.3048, -59.9139, 0.96 ) }
    dend_47 { pt3dadd( -90.9788, -58.8113, -60.2455, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 85/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -23.2858, -125.93, 20.5357, 0.29 ) }
    dend_40 { pt3dadd( -23.1531, -125.925, 21.2693, 0.29 ) }
    dend_40 { pt3dadd( -22.8148, -125.964, 22.8626, 0.29 ) }
    dend_40 { pt3dadd( -22.5755, -126.036, 23.9986, 0.59 ) }
    dend_40 { pt3dadd( -22.2739, -126.245, 25.579, 0.66 ) }
    dend_40 { pt3dadd( -21.8442, -126.714, 27.7871, 0.59 ) }
    dend_40 { pt3dadd( -21.5391, -127.195, 29.228, 0.29 ) }
    dend_40 { pt3dadd( -21.2973, -127.677, 30.072, 0.52 ) }
    dend_40 { pt3dadd( -21.1405, -128.265, 30.3776, 0.66 ) }
    dend_40 { pt3dadd( -20.8884, -129.583, 30.4861, 0.37 ) }
    dend_40 { pt3dadd( -20.5723, -131.282, 30.4057, 0.29 ) }
    dend_40 { pt3dadd( -20.3304, -132.632, 30.2479, 0.29 ) }
    dend_40 { pt3dadd( -20.105, -133.974, 30.0244, 0.29 ) }
    dend_40 { pt3dadd( -19.8831, -135.193, 29.8047, 0.29 ) }
    dend_40 { pt3dadd( -19.5551, -136.633, 29.5413, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_40 { pt3dadd( -19.2143, -137.864, 29.3221, 0.29 ) }
    dend_40 { pt3dadd( -15.7791, -145.533, 36.2473, 0.29 ) }
    dend_40 { pt3dadd( -13.0296, -151.78, 44.6758, 0.29 ) }
    dend_40 { pt3dadd( -7.99086, -158.348, 51.6954, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 4/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -23.2858, -125.93, 20.5357, 0.74 ) }
    dend_35 { pt3dadd( -24.03, -126.942, 20.0814, 0.74 ) }
    dend_35 { pt3dadd( -24.679, -127.985, 19.6905, 0.52 ) }
    dend_35 { pt3dadd( -25.1734, -128.87, 19.4071, 0.52 ) }
    dend_35 { pt3dadd( -25.948, -130.486, 18.9881, 0.59 ) }
    dend_35 { pt3dadd( -26.2639, -131.307, 18.8625, 0.96 ) }
    dend_35 { pt3dadd( -26.5035, -132.198, 18.7766, 1.18 ) }
    dend_35 { pt3dadd( -26.57, -132.956, 18.6838, 1.18 ) }
    dend_35 { pt3dadd( -26.5217, -133.673, 18.611, 0.96 ) }
    dend_35 { pt3dadd( -26.3047, -134.725, 18.4592, 0.66 ) }
    dend_35 { pt3dadd( -25.7851, -136.222, 18.0288, 0.52 ) }
    dend_35 { pt3dadd( -25.2052, -137.562, 17.5622, 0.52 ) }
    dend_35 { pt3dadd( -24.4598, -138.981, 16.9499, 0.29 ) }
    dend_35 { pt3dadd( -24.1231, -139.514, 16.6638, 0.37 ) }
    dend_35 { pt3dadd( -23.1843, -140.752, 15.7909, 0.29 ) }
    dend_35 { pt3dadd( -22.1411, -141.872, 14.6438, 0.29 ) }
    dend_35 { pt3dadd( -22.1532, -153.811, 12.3873, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_17 (entry count 21/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -3.13104, -66.7914, -2.85634, 0.37 ) }
    dend_31 { pt3dadd( -5.28768, -67.913, -1.65073, 0.37 ) }
    dend_31 { pt3dadd( -6.14844, -68.4893, -0.738557, 0.37 ) }
    dend_31 { pt3dadd( -6.73581, -68.936, 0.0373296, 0.37 ) }
    dend_31 { pt3dadd( -7.1297, -69.2473, 0.574016, 0.37 ) }
    dend_31 { pt3dadd( -7.61354, -69.6497, 1.27719, 0.59 ) }
    dend_31 { pt3dadd( -8.07906, -70.0504, 1.9653, 0.74 ) }
    dend_31 { pt3dadd( -8.39203, -70.3575, 2.59126, 0.52 ) }
    dend_31 { pt3dadd( -8.62649, -70.5939, 3.06823, 0.59 ) }
    dend_31 { pt3dadd( -8.8455, -70.8449, 3.46935, 0.74 ) }
    dend_31 { pt3dadd( -9.25677, -71.2797, 4.08691, 0.52 ) }
    dend_31 { pt3dadd( -9.53754, -71.5431, 4.42966, 0.52 ) }
    dend_31 { pt3dadd( -9.81872, -71.7704, 4.71589, 0.74 ) }
    dend_31 { pt3dadd( -10.1432, -72.0113, 5.01959, 0.74 ) }
    dend_31 { pt3dadd( -10.4563, -72.2479, 5.30213, 0.52 ) }
    dend_31 { pt3dadd( -10.9139, -72.5875, 5.70409, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 37/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -3.13104, -66.7914, -2.85634, 0.88 ) }
    dend_18 { pt3dadd( -3.25467, -67.4545, -2.85582, 0.88 ) }
    dend_18 { pt3dadd( -3.47157, -68.2908, -2.75837, 0.66 ) }
    dend_18 { pt3dadd( -3.65733, -68.881, -2.53303, 0.74 ) }
    dend_18 { pt3dadd( -3.81428, -69.2746, -2.32145, 0.88 ) }
    dend_18 { pt3dadd( -4.09597, -69.8715, -1.96445, 0.88 ) }
    dend_18 { pt3dadd( -4.27937, -70.2328, -1.74614, 1.03 ) }
    dend_18 { pt3dadd( -4.50141, -70.6282, -1.46746, 1.03 ) }
    dend_18 { pt3dadd( -4.99833, -71.549, -0.811298, 1.03 ) }
    dend_18 { pt3dadd( -5.27783, -72.1269, -0.435833, 1.03 ) }
    dend_18 { pt3dadd( -5.50184, -72.7089, -0.124115, 0.88 ) }
    dend_18 { pt3dadd( -5.6175, -73.2059, 0.0575266, 0.88 ) }
    dend_18 { pt3dadd( -5.63222, -73.6674, 0.156997, 0.88 ) }
    dend_18 { pt3dadd( -5.48429, -74.5584, 0.187963, 1.25 ) }
    dend_18 { pt3dadd( -5.38478, -74.8814, 0.167504, 1.55 ) }
    dend_18 { pt3dadd( -5.18743, -75.3348, 0.142574, 1.55 ) }
    dend_18 { pt3dadd( -4.84519, -75.9626, 0.1535, 1.55 ) }
    dend_18 { pt3dadd( -4.59039, -76.3535, 0.200502, 1.55 ) }
    dend_18 { pt3dadd( -4.07562, -77.0296, 0.364277, 1.03 ) }
    dend_18 { pt3dadd( -3.63791, -77.5124, 0.557379, 1.03 ) }
    dend_18 { pt3dadd( -3.25458, -77.8924, 0.750746, 0.81 ) }
    dend_18 { pt3dadd( -2.61782, -78.4558, 1.10522, 0.81 ) }
    dend_18 { pt3dadd( -2.15973, -78.8249, 1.36898, 1.03 ) }
    dend_18 { pt3dadd( -1.71656, -79.1461, 1.60518, 1.03 ) }
    dend_18 { pt3dadd( -1.21768, -79.4784, 1.83733, 1.03 ) }
    dend_18 { pt3dadd( -0.816917, -79.7501, 1.98145, 0.88 ) }
    dend_18 { pt3dadd( -0.213686, -80.1985, 2.14969, 0.88 ) }
    dend_18 { pt3dadd( 0.0816846, -80.4396, 2.20515, 0.96 ) }
    dend_18 { pt3dadd( 0.417845, -80.7519, 2.25155, 0.96 ) }
    dend_18 { pt3dadd( 0.871022, -81.2285, 2.29866, 1.33 ) }
    dend_18 { pt3dadd( 1.10809, -81.5155, 2.31104, 1.62 ) }
    dend_18 { pt3dadd( 1.30505, -81.7762, 2.32065, 1.62 ) }
    // Section: dend_16, id: dend_16, parent: dend_1 (entry count 69/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 6.38679, -29.4296, -5.54129, 0.66 ) }
    dend_16 { pt3dadd( 7.39792, -31.1529, -4.13764, 0.66 ) }
    dend_16 { pt3dadd( 7.65891, -31.7288, -3.71221, 0.88 ) }
    dend_16 { pt3dadd( 8.12119, -32.8859, -2.96238, 1.03 ) }
    dend_16 { pt3dadd( 8.34226, -33.4399, -2.64062, 1.03 ) }
    dend_16 { pt3dadd( 8.5502, -33.928, -2.37731, 1.03 ) }
    dend_16 { pt3dadd( 8.8319, -34.5286, -2.07037, 0.37 ) }
    dend_16 { pt3dadd( 9.09934, -35.1844, -1.80893, 0.37 ) }
    dend_16 { pt3dadd( 9.44787, -35.833, -1.60704, 0.59 ) }
    dend_16 { pt3dadd( 9.90533, -36.3769, -1.53037, 0.81 ) }
    dend_16 { pt3dadd( 10.2699, -36.672, -1.50512, 0.81 ) }
    dend_16 { pt3dadd( 10.6882, -36.9188, -1.47489, 0.52 ) }
    dend_16 { pt3dadd( 11.0845, -37.11, -1.43514, 0.81 ) }
    dend_16 { pt3dadd( 11.6787, -37.3806, -1.35296, 1.25 ) }
    dend_16 { pt3dadd( 11.928, -37.5208, -1.29452, 1.69 ) }
    dend_16 { pt3dadd( 12.2477, -37.7846, -1.17112, 1.69 ) }
    dend_16 { pt3dadd( 12.7043, -38.4617, -0.859706, 0.96 ) }
    dend_16 { pt3dadd( 12.875, -38.9196, -0.667708, 0.66 ) }
    dend_16 { pt3dadd( 12.9673, -39.2827, -0.52251, 0.81 ) }
    dend_16 { pt3dadd( 13.1389, -40.0466, -0.219297, 0.44 ) }
    dend_16 { pt3dadd( 13.3081, -40.6497, 0.0169484, 0.44 ) }
    dend_16 { pt3dadd( 13.4811, -41.121, 0.193841, 0.44 ) }
    dend_16 { pt3dadd( 13.7221, -41.5331, 0.368269, 0.88 ) }
    dend_16 { pt3dadd( 14.2094, -42.0426, 0.661593, 1.25 ) }
    dend_16 { pt3dadd( 14.8064, -42.4959, 0.983922, 0.66 ) }
    dend_16 { pt3dadd( 15.3393, -42.8286, 1.24264, 0.52 ) }
    dend_16 { pt3dadd( 15.6616, -43.0219, 1.39107, 0.52 ) }
    dend_16 { pt3dadd( 16.4532, -43.5275, 1.7657, 0.74 ) }
    dend_16 { pt3dadd( 17.0954, -43.9898, 2.06734, 1.25 ) }
    dend_16 { pt3dadd( 17.339, -44.1947, 2.16963, 1.25 ) }
    dend_16 { pt3dadd( 17.7122, -44.5578, 2.29715, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( 18.1419, -45.0407, 2.39172, 0.44 ) }
    dend_16 { pt3dadd( 18.6649, -45.6935, 2.43527, 0.37 ) }
    dend_16 { pt3dadd( 18.9572, -46.0851, 2.40503, 0.37 ) }
    dend_16 { pt3dadd( 19.2517, -46.4809, 2.33862, 0.96 ) }
    dend_16 { pt3dadd( 19.4772, -46.7752, 2.27802, 1.33 ) }
    dend_16 { pt3dadd( 20.1437, -47.5714, 2.07718, 0.29 ) }
    dend_16 { pt3dadd( 20.386, -47.8262, 1.99616, 0.29 ) }
    dend_16 { pt3dadd( 20.6277, -48.0538, 1.90497, 0.29 ) }
    dend_16 { pt3dadd( 20.7182, -48.1381, 1.87158, 0.44 ) }
    dend_16 { pt3dadd( 24.2855, -52.7829, 2.94631, 0.44 ) }
    dend_16 { pt3dadd( 28.2818, -57.1767, 3.17399, 0.44 ) }
    dend_16 { pt3dadd( 31.6225, -62.115, 3.1834, 0.44 ) }
    dend_16 { pt3dadd( 35.2912, -66.8024, 3.30389, 0.44 ) }
    dend_16 { pt3dadd( 38.8986, -71.5033, 3.89959, 0.44 ) }
    dend_16 { pt3dadd( 42.1963, -76.464, 4.18987, 0.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 15/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 6.38679, -29.4296, -5.54129, 1.03 ) }
    dend_11 { pt3dadd( 6.38934, -31.0003, -5.69314, 1.03 ) }
    dend_11 { pt3dadd( 6.55005, -32.555, -5.85992, 1.03 ) }
    dend_11 { pt3dadd( 6.78607, -33.6745, -5.99587, 0.96 ) }
    dend_11 { pt3dadd( 7.09307, -34.7282, -6.13527, 0.96 ) }
    dend_11 { pt3dadd( 7.46908, -35.7432, -6.28039, 0.96 ) }
    dend_11 { pt3dadd( 7.78014, -36.423, -6.35941, 1.18 ) }
    dend_11 { pt3dadd( 8.44624, -37.3248, -6.41132, 1.47 ) }
    dend_11 { pt3dadd( 9.14595, -38.0287, -6.39806, 2.21 ) }
    dend_11 { pt3dadd( 9.45096, -38.3018, -6.366, 2.21 ) }
    dend_11 { pt3dadd( 9.93698, -38.7463, -6.25688, 1.99 ) }
    dend_11 { pt3dadd( 10.8043, -39.6308, -5.95233, 1.33 ) }
    dend_11 { pt3dadd( 11.6039, -40.6293, -5.56181, 0.88 ) }
    dend_11 { pt3dadd( 12.111, -41.447, -5.21938, 0.74 ) }
    dend_11 { pt3dadd( 12.4399, -42.2343, -4.90185, 0.74 ) }
    dend_11 { pt3dadd( 12.6908, -43.1929, -4.54928, 1.33 ) }
    dend_11 { pt3dadd( 12.7778, -43.7824, -4.36147, 1.62 ) }
    dend_11 { pt3dadd( 12.8232, -44.4325, -4.19391, 1.92 ) }
    dend_11 { pt3dadd( 12.8484, -45.1325, -4.06633, 1.69 ) }
    dend_11 { pt3dadd( 12.9411, -46.4646, -3.91694, 1.33 ) }
    dend_11 { pt3dadd( 13.1177, -47.8096, -3.85733, 1.03 ) }
    dend_11 { pt3dadd( 13.3068, -48.7305, -3.87556, 0.88 ) }
    dend_11 { pt3dadd( 13.5569, -49.5759, -3.93518, 1.03 ) }
    dend_11 { pt3dadd( 13.9672, -50.6743, -4.06103, 1.03 ) }
    dend_11 { pt3dadd( 14.4534, -51.7695, -4.24135, 1.03 ) }
    dend_11 { pt3dadd( 14.9021, -52.698, -4.45085, 1.33 ) }
    dend_11 { pt3dadd( 15.2229, -53.3981, -4.65078, 1.69 ) }
    dend_11 { pt3dadd( 15.5542, -54.2535, -4.92805, 1.47 ) }
    dend_11 { pt3dadd( 15.7277, -54.8576, -5.14245, 1.03 ) }
    dend_11 { pt3dadd( 15.8952, -55.7855, -5.48392, 0.96 ) }
    dend_11 { pt3dadd( 15.9692, -56.6378, -5.81663, 0.96 ) }
    dend_11 { pt3dadd( 15.9852, -57.6867, -6.22836, 1.4 ) }
    dend_11 { pt3dadd( 15.9569, -58.8028, -6.64932, 1.4 ) }
    dend_11 { pt3dadd( 15.9274, -59.7774, -7.00821, 1.55 ) }
    dend_11 { pt3dadd( 15.9376, -60.3056, -7.18972, 1.77 ) }
    dend_11 { pt3dadd( 16.0259, -61.3153, -7.50099, 0.96 ) }
    dend_11 { pt3dadd( 16.1955, -62.2147, -7.73099, 0.66 ) }
    dend_11 { pt3dadd( 16.4734, -63.0503, -7.86644, 0.66 ) }
    dend_11 { pt3dadd( 16.8859, -63.8427, -7.92846, 0.96 ) }
    dend_11 { pt3dadd( 17.4372, -64.6143, -7.94526, 1.11 ) }
    dend_11 { pt3dadd( 17.7343, -64.9466, -7.94751, 1.4 ) }
    dend_11 { pt3dadd( 18.006, -65.2072, -7.95212, 1.4 ) }
    dend_11 { pt3dadd( 18.5761, -65.7485, -7.96469, 1.4 ) }
    dend_11 { pt3dadd( 19.2479, -66.4599, -7.99739, 0.66 ) }
    dend_11 { pt3dadd( 19.5402, -66.8464, -8.03644, 0.52 ) }
    dend_11 { pt3dadd( 19.8649, -67.4041, -8.11271, 0.52 ) }
    dend_11 { pt3dadd( 20.2891, -68.3235, -8.2171, 0.81 ) }
    dend_11 { pt3dadd( 20.6789, -69.3555, -8.27378, 1.03 ) }
    dend_11 { pt3dadd( 20.8771, -70.0398, -8.29176, 1.03 ) }
    dend_11 { pt3dadd( 21.0756, -70.9657, -8.2743, 1.03 ) }
    dend_11 { pt3dadd( 21.2139, -71.8918, -8.28564, 1.03 ) }
    dend_11 { pt3dadd( 21.3165, -72.8573, -8.3228, 0.88 ) }
    dend_11 { pt3dadd( 21.4178, -74.0397, -8.44585, 1.03 ) }
    dend_11 { pt3dadd( 21.5141, -75.0949, -8.62395, 0.52 ) }
    dend_11 { pt3dadd( 21.6228, -76.0938, -8.8722, 0.52 ) }
    dend_11 { pt3dadd( 21.7841, -77.5518, -9.37985, 0.88 ) }
    dend_11 { pt3dadd( 21.8491, -78.148, -9.645, 1.11 ) }
    dend_11 { pt3dadd( 21.9404, -79.0941, -10.132, 0.59 ) }
    dend_11 { pt3dadd( 21.9769, -79.495, -10.3371, 0.59 ) }
    dend_11 { pt3dadd( 22.0648, -80.3933, -10.6791, 0.52 ) }
    dend_11 { pt3dadd( 22.1414, -81.347, -10.8494, 0.52 ) }
    dend_11 { pt3dadd( 22.1615, -82.1174, -10.755, 1.11 ) }
    dend_11 { pt3dadd( 22.126, -82.7674, -10.5509, 1.25 ) }
    dend_11 { pt3dadd( 22.0146, -83.748, -10.1004, 1.18 ) }
    dend_11 { pt3dadd( 21.8843, -84.7049, -9.59283, 0.52 ) }
    dend_11 { pt3dadd( 21.8021, -85.3681, -9.18934, 0.52 ) }
    dend_11 { pt3dadd( 21.7289, -86.276, -8.65722, 0.52 ) }
    dend_11 { pt3dadd( 21.7133, -86.6189, -8.49244, 0.81 ) }
    dend_11 { pt3dadd( 21.7074, -87.2495, -8.2835, 0.74 ) }
    dend_11 { pt3dadd( 21.6976, -88.0659, -8.14124, 0.74 ) }
    dend_11 { pt3dadd( 21.6628, -88.879, -8.07914, 1.03 ) }
    dend_11 { pt3dadd( 21.5545, -89.9596, -8.07289, 0.66 ) }
    dend_11 { pt3dadd( 21.4297, -90.6744, -8.09561, 0.52 ) }
    dend_11 { pt3dadd( 21.1949, -91.5038, -8.14049, 1.11 ) }
    dend_11 { pt3dadd( 20.9175, -92.2017, -8.23171, 1.11 ) }
    dend_11 { pt3dadd( 20.4506, -93.1943, -8.42836, 0.81 ) }
    dend_11 { pt3dadd( 19.9276, -94.2326, -8.7058, 0.66 ) }
    dend_11 { pt3dadd( 19.5652, -94.9606, -8.92433, 0.88 ) }
    dend_11 { pt3dadd( 19.1196, -95.953, -9.2793, 0.66 ) }
    dend_11 { pt3dadd( 18.5789, -97.2634, -9.87946, 0.59 ) }
    dend_11 { pt3dadd( 18.2626, -98.1217, -10.3507, 0.88 ) }
    dend_11 { pt3dadd( 18.0154, -98.8723, -10.8103, 1.18 ) }
    dend_11 { pt3dadd( 17.8466, -99.4154, -11.1506, 0.96 ) }
    dend_11 { pt3dadd( 17.6318, -100.133, -11.6042, 0.96 ) }
    dend_11 { pt3dadd( 17.2607, -101.441, -12.363, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 17.1376, -101.871, -12.5773, 0.81 ) }
    dend_11 { pt3dadd( 16.9064, -102.712, -12.9471, 0.66 ) }
    dend_11 { pt3dadd( 16.7578, -103.35, -13.1385, 0.66 ) }
    dend_11 { pt3dadd( 16.6226, -104.134, -13.2473, 0.96 ) }
    dend_11 { pt3dadd( 16.5672, -105.087, -13.0948, 0.88 ) }
    dend_11 { pt3dadd( 16.6017, -105.914, -12.797, 0.88 ) }
    dend_11 { pt3dadd( 16.6518, -106.632, -12.4935, 0.37 ) }
    dend_11 { pt3dadd( 16.7862, -107.943, -11.9046, 1.03 ) }
    dend_11 { pt3dadd( 16.8509, -108.634, -11.61, 1.03 ) }
    dend_11 { pt3dadd( 16.926, -110.167, -10.9882, 0.44 ) }
    dend_11 { pt3dadd( 16.9339, -111.285, -10.6504, 0.44 ) }
    dend_11 { pt3dadd( 16.9199, -111.94, -10.5974, 0.74 ) }
    dend_11 { pt3dadd( 16.9044, -112.623, -10.7605, 0.74 ) }
    dend_11 { pt3dadd( 16.8971, -113.574, -11.224, 0.44 ) }
    dend_11 { pt3dadd( 16.9165, -114.338, -11.6841, 0.66 ) }
    dend_11 { pt3dadd( 16.9811, -115.439, -12.4351, 0.44 ) }
    dend_11 { pt3dadd( 17.113, -117.012, -13.527, 0.88 ) }
    dend_11 { pt3dadd( 17.2977, -118.736, -14.6686, 0.52 ) }
    dend_11 { pt3dadd( 17.4094, -119.613, -15.2362, 0.74 ) }
    dend_11 { pt3dadd( 17.5877, -120.789, -15.9725, 1.33 ) }
    dend_11 { pt3dadd( 17.6896, -121.456, -16.3589, 1.33 ) }
    dend_11 { pt3dadd( 17.8593, -122.83, -17.0271, 0.74 ) }
    dend_11 { pt3dadd( 17.9397, -123.704, -17.3466, 0.66 ) }
    dend_11 { pt3dadd( 17.9857, -124.943, -17.684, 0.66 ) }
    dend_11 { pt3dadd( 17.9491, -125.807, -17.8891, 0.81 ) }
    dend_11 { pt3dadd( 17.8218, -126.69, -18.0861, 0.59 ) }
    dend_11 { pt3dadd( 17.6806, -127.284, -18.191, 1.18 ) }
    dend_11 { pt3dadd( 17.5888, -127.56, -18.2318, 1.18 ) }
    dend_11 { pt3dadd( 17.2203, -128.537, -18.3511, 0.44 ) }
    dend_11 { pt3dadd( 16.9107, -129.386, -18.381, 0.44 ) }
    dend_11 { pt3dadd( 16.6921, -130.099, -18.3697, 1.03 ) }
    dend_11 { pt3dadd( 16.6004, -130.605, -18.3328, 1.4 ) }
    dend_11 { pt3dadd( 16.5976, -131.669, -18.125, 0.52 ) }
    dend_11 { pt3dadd( 16.6684, -132.386, -17.957, 0.52 ) }
    dend_11 { pt3dadd( 16.9112, -133.323, -17.6675, 0.74 ) }
    dend_11 { pt3dadd( 17.0453, -133.659, -17.5223, 0.74 ) }
    dend_11 { pt3dadd( 17.3842, -134.327, -17.1117, 0.59 ) }
    dend_11 { pt3dadd( 17.8623, -135.074, -16.5013, 0.96 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 38/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 6.38679, -29.4296, -5.54129, 0.88 ) }
    dend_2 { pt3dadd( 7.76859, -29.4336, -6.17625, 0.88 ) }
    dend_2 { pt3dadd( 8.15678, -29.4238, -6.32006, 0.88 ) }
    dend_2 { pt3dadd( 8.53772, -29.4133, -6.42833, 1.03 ) }
    dend_2 { pt3dadd( 8.79136, -29.4065, -6.48146, 1.33 ) }
    dend_2 { pt3dadd( 9.02267, -29.4025, -6.52062, 1.62 ) }
    dend_2 { pt3dadd( 9.35453, -29.4022, -6.56835, 1.84 ) }
    dend_2 { pt3dadd( 9.63167, -29.3881, -6.57283, 1.47 ) }
    dend_2 { pt3dadd( 9.97021, -29.3724, -6.62133, 1.18 ) }
    dend_2 { pt3dadd( 10.2378, -29.3491, -6.75888, 0.81 ) }
    dend_2 { pt3dadd( 10.5344, -29.3114, -6.98792, 0.81 ) }
    dend_2 { pt3dadd( 10.7254, -29.2903, -7.15888, 1.11 ) }
    dend_2 { pt3dadd( 11.1349, -29.266, -7.56605, 1.33 ) }
    dend_2 { pt3dadd( 11.5677, -29.2558, -8.01961, 1.77 ) }
    dend_2 { pt3dadd( 12.5538, -29.2691, -9.07393, 1.47 ) }
    dend_2 { pt3dadd( 12.8693, -29.2832, -9.40259, 1.11 ) }
    dend_2 { pt3dadd( 13.188, -29.3028, -9.71304, 1.11 ) }
    dend_2 { pt3dadd( 13.6079, -29.3325, -10.0707, 0.81 ) }
    dend_2 { pt3dadd( 13.8555, -29.3552, -10.2373, 0.96 ) }
    dend_2 { pt3dadd( 14.2348, -29.3841, -10.4084, 0.88 ) }
    dend_2 { pt3dadd( 14.5407, -29.3683, -10.4993, 0.74 ) }
    dend_2 { pt3dadd( 14.7798, -29.3092, -10.5781, 0.59 ) }
    dend_2 { pt3dadd( 15.098, -29.1696, -10.7133, 1.03 ) }
    dend_2 { pt3dadd( 15.3379, -29.0364, -10.822, 1.55 ) }
    dend_2 { pt3dadd( 15.5597, -28.9051, -10.9248, 1.69 ) }
    dend_2 { pt3dadd( 16.2263, -28.5069, -11.2511, 1.69 ) }
    dend_2 { pt3dadd( 16.4331, -28.3891, -11.3587, 1.69 ) }
    dend_2 { pt3dadd( 16.9497, -28.1184, -11.6258, 0.88 ) }
    dend_2 { pt3dadd( 17.2393, -27.9898, -11.7646, 0.81 ) }
    dend_2 { pt3dadd( 17.5787, -27.8735, -11.9, 1.11 ) }
    dend_2 { pt3dadd( 18.0115, -27.7755, -12.0368, 1.18 ) }
    dend_2 { pt3dadd( 18.3937, -27.7449, -12.1159, 0.59 ) }
    dend_2 { pt3dadd( 18.5621, -27.7544, -12.145, 0.59 ) }
    dend_2 { pt3dadd( 18.962, -27.8477, -12.1858, 0.96 ) }
    dend_2 { pt3dadd( 19.244, -27.9638, -12.2112, 1.18 ) }
    dend_2 { pt3dadd( 19.4793, -28.1016, -12.2224, 1.18 ) }
    dend_2 { pt3dadd( 19.7134, -28.2689, -12.215, 1.4 ) }
    dend_2 { pt3dadd( 19.9793, -28.4776, -12.1947, 1.4 ) }
    dend_2 { pt3dadd( 20.2257, -28.6651, -12.171, 1.11 ) }
    dend_2 { pt3dadd( 20.3999, -28.7808, -12.1482, 1.11 ) }
    dend_2 { pt3dadd( 20.6161, -28.887, -12.1139, 1.03 ) }
    dend_2 { pt3dadd( 20.9009, -28.9824, -12.0609, 1.03 ) }
    dend_2 { pt3dadd( 21.1502, -29.0325, -12.0082, 1.03 ) }
    dend_2 { pt3dadd( 21.4386, -29.0609, -11.9408, 0.96 ) }
    dend_2 { pt3dadd( 21.8377, -29.0667, -11.8448, 0.88 ) }
    dend_2 { pt3dadd( 22.2711, -29.0485, -11.7279, 0.88 ) }
    dend_2 { pt3dadd( 22.5581, -29.0207, -11.6432, 1.03 ) }
    dend_2 { pt3dadd( 22.7844, -28.9912, -11.5791, 1.11 ) }
    dend_2 { pt3dadd( 22.972, -28.9655, -11.534, 1.18 ) }
    dend_2 { pt3dadd( 23.1454, -28.9496, -11.5148, 1.18 ) }
    dend_2 { pt3dadd( 23.5061, -28.9516, -11.5491, 0.81 ) }
    dend_2 { pt3dadd( 23.772, -28.9878, -11.628, 0.74 ) }
    dend_2 { pt3dadd( 24.1251, -29.0673, -11.7735, 1.18 ) }
    dend_2 { pt3dadd( 24.3968, -29.1411, -11.9026, 1.4 ) }
    dend_2 { pt3dadd( 24.9546, -29.3012, -12.1983, 1.18 ) }
    dend_2 { pt3dadd( 25.3872, -29.4199, -12.4449, 0.88 ) }
    dend_2 { pt3dadd( 25.7146, -29.4952, -12.6482, 0.74 ) }
    dend_2 { pt3dadd( 26.0464, -29.5525, -12.8499, 0.74 ) }
    dend_2 { pt3dadd( 26.348, -29.5767, -13.016, 1.11 ) }
    dend_2 { pt3dadd( 26.6697, -29.5694, -13.1789, 1.4 ) }
    dend_2 { pt3dadd( 26.989, -29.5443, -13.3293, 1.4 ) }
    dend_2 { pt3dadd( 27.4347, -29.5112, -13.5444, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( 27.6978, -29.5021, -13.6816, 0.74 ) }
    dend_2 { pt3dadd( 28.03, -29.5219, -13.8698, 0.66 ) }
    dend_2 { pt3dadd( 28.4259, -29.5994, -14.1113, 0.81 ) }
    dend_2 { pt3dadd( 28.8195, -29.7367, -14.3439, 0.74 ) }
    dend_2 { pt3dadd( 29.1452, -29.8844, -14.5353, 1.25 ) }
    dend_2 { pt3dadd( 29.3239, -29.9743, -14.6337, 1.69 ) }
    dend_2 { pt3dadd( 29.5553, -30.083, -14.7508, 1.69 ) }
    dend_2 { pt3dadd( 29.7921, -30.1669, -14.8419, 1.4 ) }
    dend_2 { pt3dadd( 30.1526, -30.2284, -14.9273, 0.88 ) }
    dend_2 { pt3dadd( 30.6724, -30.2167, -14.9956, 0.81 ) }
    dend_2 { pt3dadd( 30.9068, -30.1901, -15.0133, 0.81 ) }
    dend_2 { pt3dadd( 31.2296, -30.1497, -15.0205, 0.81 ) }
    dend_2 { pt3dadd( 31.6376, -30.1019, -15.0033, 0.81 ) }
    dend_2 { pt3dadd( 31.8877, -30.0831, -14.9769, 0.81 ) }
    dend_2 { pt3dadd( 32.2346, -30.0857, -14.9239, 0.81 ) }
    dend_2 { pt3dadd( 32.4611, -30.1227, -14.8743, 0.96 ) }
    dend_2 { pt3dadd( 32.8067, -30.2425, -14.8127, 0.96 ) }
    dend_2 { pt3dadd( 33.0434, -30.3649, -14.7973, 1.18 ) }
    dend_2 { pt3dadd( 33.259, -30.5004, -14.8141, 1.47 ) }
    dend_2 { pt3dadd( 33.4822, -30.6503, -14.8493, 1.47 ) }
    dend_2 { pt3dadd( 33.8106, -30.8705, -14.9143, 0.74 ) }
    dend_2 { pt3dadd( 34.196, -31.1102, -14.9978, 0.74 ) }
    dend_2 { pt3dadd( 34.6737, -31.3705, -15.1096, 0.66 ) }
    dend_2 { pt3dadd( 35.1248, -31.5852, -15.2266, 0.74 ) }
    dend_2 { pt3dadd( 35.4084, -31.6969, -15.2999, 0.81 ) }
    dend_2 { pt3dadd( 35.7346, -31.7926, -15.3767, 0.81 ) }
    dend_2 { pt3dadd( 35.9004, -31.8224, -15.4091, 1.11 ) }
    dend_2 { pt3dadd( 36.2991, -31.8465, -15.4738, 1.25 ) }
    dend_2 { pt3dadd( 36.4786, -31.8365, -15.5114, 1.62 ) }
    dend_2 { pt3dadd( 36.6844, -31.8046, -15.5817, 1.62 ) }
    dend_2 { pt3dadd( 37.0966, -31.7222, -15.7598, 0.59 ) }
    dend_2 { pt3dadd( 37.3578, -31.6666, -15.8892, 0.59 ) }
    dend_2 { pt3dadd( 37.7522, -31.587, -16.0927, 0.88 ) }
    dend_2 { pt3dadd( 38.2817, -31.4915, -16.3697, 1.4 ) }
    dend_2 { pt3dadd( 38.8123, -31.4146, -16.6366, 0.74 ) }
    dend_2 { pt3dadd( 39.1223, -31.3832, -16.7849, 0.59 ) }
    dend_2 { pt3dadd( 39.3814, -31.3719, -16.8939, 0.81 ) }
    dend_2 { pt3dadd( 39.6029, -31.3805, -16.9563, 0.81 ) }
    dend_2 { pt3dadd( 39.8035, -31.4054, -16.9722, 0.96 ) }
    dend_2 { pt3dadd( 40.0016, -31.4346, -16.9554, 0.96 ) }
    dend_2 { pt3dadd( 40.235, -31.4647, -16.9214, 0.59 ) }
    dend_2 { pt3dadd( 40.6013, -31.4926, -16.8731, 0.59 ) }
    dend_2 { pt3dadd( 40.9567, -31.4988, -16.8258, 0.66 ) }
    dend_2 { pt3dadd( 41.1682, -31.4893, -16.815, 1.03 ) }
    dend_2 { pt3dadd( 41.5192, -31.4607, -16.8166, 1.03 ) }
    dend_2 { pt3dadd( 41.8889, -31.4011, -16.9025, 0.59 ) }
    dend_2 { pt3dadd( 42.0822, -31.3547, -16.9786, 0.59 ) }
    dend_2 { pt3dadd( 42.3439, -31.2809, -17.1089, 0.59 ) }
    dend_2 { pt3dadd( 42.747, -31.1767, -17.3328, 1.11 ) }
    dend_2 { pt3dadd( 42.9274, -31.1415, -17.4355, 1.33 ) }
    dend_2 { pt3dadd( 43.9305, -31.0007, -17.9813, 1.03 ) }
    dend_2 { pt3dadd( 44.1085, -30.9804, -18.0685, 1.4 ) }
    dend_2 { pt3dadd( 44.455, -30.946, -18.2141, 0.81 ) }
    dend_2 { pt3dadd( 44.7976, -30.9143, -18.3291, 0.74 ) }
    dend_2 { pt3dadd( 45.2205, -30.8773, -18.4235, 0.59 ) }
    dend_2 { pt3dadd( 45.4953, -30.8534, -18.4589, 0.59 ) }
    dend_2 { pt3dadd( 45.9217, -30.8201, -18.455, 0.59 ) }
    dend_2 { pt3dadd( 46.4277, -30.7592, -18.4476, 0.88 ) }
    dend_2 { pt3dadd( 46.6079, -30.7193, -18.4415, 1.25 ) }
    dend_2 { pt3dadd( 46.7684, -30.6668, -18.4332, 1.55 ) }
    dend_2 { pt3dadd( 47.008, -30.5717, -18.423, 1.55 ) }
    dend_2 { pt3dadd( 47.2036, -30.4911, -18.4196, 1.33 ) }
    dend_2 { pt3dadd( 47.4459, -30.3906, -18.417, 0.66 ) }
    dend_2 { pt3dadd( 47.7551, -30.2685, -18.413, 0.66 ) }
    dend_2 { pt3dadd( 47.9655, -30.1945, -18.4289, 0.66 ) }
    dend_2 { pt3dadd( 48.3599, -30.0621, -18.5008, 0.66 ) }
    dend_2 { pt3dadd( 48.5488, -30.0205, -18.5976, 0.66 ) }
    dend_2 { pt3dadd( 48.6692, -30.0038, -18.6809, 0.96 ) }
    dend_2 { pt3dadd( 48.815, -29.9923, -18.7941, 0.96 ) }
    dend_2 { pt3dadd( 49.2542, -29.9863, -19.1473, 0.74 ) }
    dend_2 { pt3dadd( 49.5163, -29.9932, -19.3569, 1.62 ) }
    dend_2 { pt3dadd( 50.5521, -30.0431, -20.1512, 0.66 ) }
    dend_2 { pt3dadd( 50.7075, -30.0478, -20.2641, 0.66 ) }
    dend_2 { pt3dadd( 50.9413, -30.0502, -20.4155, 1.11 ) }
    dend_2 { pt3dadd( 51.2401, -30.0502, -20.5818, 1.11 ) }
    dend_2 { pt3dadd( 51.5342, -30.0413, -20.7039, 0.52 ) }
    dend_2 { pt3dadd( 51.8153, -30.0173, -20.7779, 0.52 ) }
    dend_2 { pt3dadd( 52.1622, -29.9517, -20.8199, 1.25 ) }
    dend_2 { pt3dadd( 52.4309, -29.8893, -20.8534, 0.88 ) }
    dend_2 { pt3dadd( 52.9441, -29.7406, -20.916, 0.44 ) }
    dend_2 { pt3dadd( 53.2373, -29.6375, -20.9461, 0.44 ) }
    dend_2 { pt3dadd( 53.6709, -29.4635, -20.9822, 0.52 ) }
    dend_2 { pt3dadd( 53.9575, -29.3366, -21.0012, 0.88 ) }
    dend_2 { pt3dadd( 54.0991, -29.2706, -21.0075, 1.11 ) }
    dend_2 { pt3dadd( 54.224, -29.2052, -21.0258, 1.11 ) }
    dend_2 { pt3dadd( 54.3292, -29.1425, -21.0556, 1.11 ) }
    dend_2 { pt3dadd( 54.6955, -28.9113, -21.2307, 0.52 ) }
    dend_2 { pt3dadd( 54.8527, -28.8162, -21.3423, 0.52 ) }
    dend_2 { pt3dadd( 55.0782, -28.6876, -21.5258, 0.81 ) }
    dend_2 { pt3dadd( 55.6102, -28.4073, -21.9725, 0.81 ) }
    dend_2 { pt3dadd( 55.86, -28.2823, -22.1773, 1.11 ) }
    dend_2 { pt3dadd( 55.967, -28.2323, -22.2558, 1.92 ) }
    dend_2 { pt3dadd( 56.5649, -27.9823, -22.6124, 0.59 ) }
    dend_2 { pt3dadd( 56.6372, -27.9569, -22.6432, 0.59 ) }
    dend_2 { pt3dadd( 56.8848, -27.8918, -22.6907, 0.88 ) }
    dend_2 { pt3dadd( 57.1859, -27.8388, -22.6857, 0.44 ) }
    dend_2 { pt3dadd( 57.6707, -27.7775, -22.6524, 0.44 ) }
    dend_2 { pt3dadd( 58.0496, -27.7426, -22.616, 0.74 ) }
    dend_2 { pt3dadd( 58.265, -27.7326, -22.6029, 0.74 ) }
    dend_2 { pt3dadd( 58.5983, -27.7365, -22.6354, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( 58.8079, -27.7533, -22.6969, 0.52 ) }
    dend_2 { pt3dadd( 59.1372, -27.7969, -22.8481, 0.59 ) }
    dend_2 { pt3dadd( 59.2658, -27.8137, -22.9191, 0.59 ) }
    dend_2 { pt3dadd( 59.8362, -27.8656, -23.255, 0.59 ) }
    dend_2 { pt3dadd( 60.2132, -27.8783, -23.475, 0.81 ) }
    dend_2 { pt3dadd( 60.5688, -27.8658, -23.6802, 1.4 ) }
    dend_2 { pt3dadd( 60.7561, -27.8395, -23.7765, 1.55 ) }
    dend_2 { pt3dadd( 61.179, -27.7158, -23.9424, 0.44 ) }
    dend_2 { pt3dadd( 61.3533, -27.6337, -23.983, 0.88 ) }
    dend_2 { pt3dadd( 61.558, -27.5093, -23.9882, 0.88 ) }
    dend_2 { pt3dadd( 61.7793, -27.3727, -23.9879, 0.59 ) }
    dend_2 { pt3dadd( 62.1218, -27.1758, -23.9926, 0.59 ) }
    dend_2 { pt3dadd( 62.3598, -27.0666, -24.0266, 0.81 ) }
    dend_2 { pt3dadd( 62.6373, -26.9727, -24.0957, 0.81 ) }
    dend_2 { pt3dadd( 63.0148, -26.8716, -24.2286, 0.52 ) }
    dend_2 { pt3dadd( 63.4551, -26.7666, -24.4282, 0.74 ) }
    dend_2 { pt3dadd( 63.6109, -26.7283, -24.5368, 0.74 ) }
    dend_2 { pt3dadd( 63.9841, -26.6085, -24.9111, 0.37 ) }
    dend_2 { pt3dadd( 64.1528, -26.5328, -25.1247, 0.37 ) }
    dend_2 { pt3dadd( 64.3915, -26.3885, -25.4803, 0.37 ) }
    dend_2 { pt3dadd( 64.5825, -26.2364, -25.7999, 0.59 ) }
    dend_2 { pt3dadd( 65.0979, -25.7672, -26.6747, 0.88 ) }
    dend_2 { pt3dadd( 65.3385, -25.5429, -27.0703, 0.52 ) }
    dend_2 { pt3dadd( 65.4283, -25.4703, -27.2088, 0.52 ) }
    dend_2 { pt3dadd( 65.6349, -25.3449, -27.5095, 0.52 ) }
    dend_2 { pt3dadd( 65.8064, -25.2645, -27.7254, 0.81 ) }
    dend_2 { pt3dadd( 66.0324, -25.1797, -27.9662, 0.59 ) }
    dend_2 { pt3dadd( 66.2284, -25.1219, -28.1431, 0.59 ) }
    dend_2 { pt3dadd( 66.8796, -24.9747, -28.7062, 1.18 ) }
    dend_2 { pt3dadd( 67.6599, -24.8319, -29.4212, 0.74 ) }
    dend_2 { pt3dadd( 67.8522, -24.8035, -29.6134, 0.74 ) }
    dend_2 { pt3dadd( 68.0325, -24.7799, -29.8113, 0.88 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 32/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -41.0975, 120.168, -29.1828, 0.29 ) }
    dend_87 { pt3dadd( -42.0164, 120.093, -29.2894, 0.29 ) }
    dend_87 { pt3dadd( -42.754, 120.139, -29.4036, 0.29 ) }
    dend_87 { pt3dadd( -43.1337, 120.258, -29.5314, 0.59 ) }
    dend_87 { pt3dadd( -43.5611, 120.491, -29.7244, 0.59 ) }
    dend_87 { pt3dadd( -43.9066, 120.728, -29.8905, 0.59 ) }
    dend_87 { pt3dadd( -44.2741, 121.018, -30.0628, 0.44 ) }
    dend_87 { pt3dadd( -44.5521, 121.35, -30.2233, 0.59 ) }
    dend_87 { pt3dadd( -45.0548, 122.017, -30.594, 0.37 ) }
    dend_87 { pt3dadd( -45.3021, 122.336, -30.7952, 0.29 ) }
    dend_87 { pt3dadd( -45.5579, 122.628, -30.9894, 0.59 ) }
    dend_87 { pt3dadd( -45.8401, 122.923, -31.1899, 0.59 ) }
    dend_87 { pt3dadd( -46.4569, 123.546, -31.6148, 0.29 ) }
    dend_87 { pt3dadd( -47.0287, 124.143, -32.033, 0.29 ) }
    dend_87 { pt3dadd( -47.2946, 124.429, -32.2517, 0.29 ) }
    dend_87 { pt3dadd( -47.807, 124.976, -32.7534, 0.29 ) }
    dend_87 { pt3dadd( -48.1355, 125.314, -33.1373, 0.29 ) }
    dend_87 { pt3dadd( -48.4856, 125.665, -33.5891, 0.52 ) }
    dend_87 { pt3dadd( -48.8049, 125.989, -34.0241, 0.66 ) }
    dend_87 { pt3dadd( -49.2726, 126.505, -34.7008, 0.44 ) }
    dend_87 { pt3dadd( -49.645, 126.92, -35.3008, 0.59 ) }
    dend_87 { pt3dadd( -50.1097, 127.395, -36.1408, 0.96 ) }
    dend_87 { pt3dadd( -50.2956, 127.535, -36.4511, 0.52 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 55/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -41.0975, 120.168, -29.1828, 0.66 ) }
    dend_86 { pt3dadd( -39.7986, 120.158, -29.7477, 0.66 ) }
    dend_86 { pt3dadd( -38.7609, 120.15, -30.199, 0.29 ) }
    dend_86 { pt3dadd( -38.0075, 120.144, -30.5266, 0.44 ) }
    dend_86 { pt3dadd( -37.0789, 120.136, -30.9305, 0.44 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 60/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -58.2702, 123.826, -20.091, 0.29 ) }
    dend_82 { pt3dadd( -58.7623, 124.544, -20.7555, 0.29 ) }
    dend_82 { pt3dadd( -59.3874, 125.377, -21.6108, 0.59 ) }
    dend_82 { pt3dadd( -59.7952, 125.929, -22.1824, 0.44 ) }
    dend_82 { pt3dadd( -60.3835, 126.781, -23.0154, 0.88 ) }
    dend_82 { pt3dadd( -60.6422, 127.214, -23.4093, 1.03 ) }
    dend_82 { pt3dadd( -61.2154, 128.318, -24.3348, 0.52 ) }
    dend_82 { pt3dadd( -61.3968, 128.723, -24.6628, 0.44 ) }
    dend_82 { pt3dadd( -61.7553, 129.593, -25.2858, 0.66 ) }
    dend_82 { pt3dadd( -62.027, 130.302, -25.7516, 0.88 ) }
    dend_82 { pt3dadd( -62.5561, 131.682, -26.5644, 0.59 ) }
    dend_82 { pt3dadd( -62.9163, 132.59, -27.0617, 0.74 ) }
    dend_82 { pt3dadd( -63.2923, 133.507, -27.5266, 0.74 ) }
    dend_82 { pt3dadd( -63.8294, 134.714, -28.1413, 0.37 ) }
    dend_82 { pt3dadd( -64.0847, 135.22, -28.4054, 0.37 ) }
    dend_82 { pt3dadd( -64.7056, 136.278, -28.9665, 0.66 ) }
    dend_82 { pt3dadd( -65.1545, 136.902, -29.3019, 0.66 ) }
    dend_82 { pt3dadd( -65.639, 137.45, -29.6107, 0.52 ) }
    dend_82 { pt3dadd( -66.3582, 138.111, -29.9976, 0.88 ) }
    dend_82 { pt3dadd( -66.8605, 138.49, -30.224, 0.88 ) }
    dend_82 { pt3dadd( -67.6163, 138.951, -30.4949, 0.52 ) }
    dend_82 { pt3dadd( -68.5418, 139.427, -30.7592, 0.52 ) }
    dend_82 { pt3dadd( -69.7025, 139.994, -31.0353, 0.88 ) }
    dend_82 { pt3dadd( -70.4579, 140.373, -31.1901, 0.88 ) }
    dend_82 { pt3dadd( -71.403, 140.858, -31.3548, 0.52 ) }
    dend_82 { pt3dadd( -72.2136, 141.288, -31.4856, 0.44 ) }
    dend_82 { pt3dadd( -73.1353, 141.787, -31.6357, 0.37 ) }
    dend_82 { pt3dadd( -74.0402, 142.325, -31.7762, 0.37 ) }
    dend_82 { pt3dadd( -74.9418, 142.921, -31.9201, 0.29 ) }
    dend_82 { pt3dadd( -76.4066, 143.981, -32.1728, 0.29 ) }
    dend_82 { pt3dadd( -77.0894, 144.493, -32.2975, 0.29 ) }
    dend_82 { pt3dadd( -77.875, 145.067, -32.444, 1.11 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 92/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -58.2702, 123.826, -20.091, 0.29 ) }
    dend_81 { pt3dadd( -59.8295, 122.828, -17.9547, 0.29 ) }
    dend_81 { pt3dadd( -60.678, 122.285, -16.7922, 0.29 ) }
    dend_81 { pt3dadd( -61.2793, 121.9, -15.9684, 0.22 ) }
    dend_81 { pt3dadd( -62.0463, 121.408, -14.9175, 0.22 ) }
    dend_81 { pt3dadd( -62.8997, 120.862, -13.7482, 0.22 ) }
    // Section: dend_75, id: dend_75, parent: dend_71 (entry count 98/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 144.553, 28.7537, 69.2441, 0.29 ) }
    dend_75 { pt3dadd( 145.853, 31.552, 73.6955, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_75 { pt3dadd( 147.537, 33.79, 78.3131, 0.29 ) }
    dend_75 { pt3dadd( 149.785, 35.855, 82.7618, 0.29 ) }
    dend_75 { pt3dadd( 151.648, 37.0308, 87.6682, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 3/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 144.553, 28.7537, 69.2441, 0.29 ) }
    dend_72 { pt3dadd( 152.671, 26.4956, 72.992, 0.29 ) }
    dend_72 { pt3dadd( 160.988, 26.0216, 76.9283, 0.29 ) }
    dend_72 { pt3dadd( 168.926, 27.2963, 81.4388, 0.29 ) }
    // Section: dend_68, id: dend_68, parent: dend_58 (entry count 7/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 62.4675, 30.5616, -3.74233, 0.37 ) }
    dend_68 { pt3dadd( 62.6084, 30.9595, -3.56654, 0.37 ) }
    dend_68 { pt3dadd( 62.7976, 31.546, -3.277, 0.37 ) }
    dend_68 { pt3dadd( 62.9347, 31.9708, -3.06725, 0.22 ) }
    dend_68 { pt3dadd( 63.2229, 32.864, -2.62627, 0.22 ) }
    dend_68 { pt3dadd( 63.4426, 33.5448, -2.29016, 0.66 ) }
    dend_68 { pt3dadd( 63.7071, 34.3647, -1.88538, 1.11 ) }
    dend_68 { pt3dadd( 63.7663, 34.5664, -1.77052, 1.11 ) }
    dend_68 { pt3dadd( 65.5404, 39.8071, 0.0249295, 1.11 ) }
    dend_68 { pt3dadd( 67.6074, 44.9861, 1.67227, 1.11 ) }
    dend_68 { pt3dadd( 70.0514, 49.8441, 3.69111, 1.11 ) }
    dend_68 { pt3dadd( 72.5522, 54.3829, 6.26838, 1.11 ) }
    dend_68 { pt3dadd( 75.5443, 59.1041, 7.80317, 1.11 ) }
    dend_68 { pt3dadd( 78.662, 63.6928, 9.46469, 1.11 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 21/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 62.4675, 30.5616, -3.74233, 0.44 ) }
    dend_59 { pt3dadd( 63.1816, 30.7159, -3.74093, 0.44 ) }
    dend_59 { pt3dadd( 63.9463, 30.8425, -3.73709, 0.44 ) }
    dend_59 { pt3dadd( 64.7719, 30.9505, -3.67962, 0.74 ) }
    dend_59 { pt3dadd( 65.276, 31.0061, -3.62643, 1.03 ) }
    dend_59 { pt3dadd( 65.7497, 31.052, -3.56262, 1.03 ) }
    dend_59 { pt3dadd( 66.1228, 31.0865, -3.52442, 1.03 ) }
    dend_59 { pt3dadd( 66.7476, 31.1477, -3.51857, 0.66 ) }
    dend_59 { pt3dadd( 67.6006, 31.2703, -3.59681, 0.66 ) }
    dend_59 { pt3dadd( 67.8974, 31.3452, -3.66735, 0.81 ) }
    dend_59 { pt3dadd( 68.3438, 31.5179, -3.82347, 0.44 ) }
    dend_59 { pt3dadd( 69.2444, 31.9838, -4.21326, 0.44 ) }
    dend_59 { pt3dadd( 70.3099, 32.6515, -4.72421, 0.37 ) }
    dend_59 { pt3dadd( 70.6814, 32.9147, -4.92563, 0.37 ) }
    dend_59 { pt3dadd( 71.2532, 33.3407, -5.25612, 0.37 ) }
    dend_59 { pt3dadd( 71.9425, 33.8694, -5.63121, 0.66 ) }
    dend_59 { pt3dadd( 72.3475, 34.1879, -5.82522, 0.66 ) }
    dend_59 { pt3dadd( 72.9248, 34.6297, -6.01716, 0.37 ) }
    dend_59 { pt3dadd( 73.2752, 34.8739, -6.08941, 0.37 ) }
    dend_59 { pt3dadd( 73.7212, 35.1739, -6.17173, 0.59 ) }
    dend_59 { pt3dadd( 74.1164, 35.4458, -6.25674, 0.59 ) }
    dend_59 { pt3dadd( 74.4928, 35.7162, -6.40749, 0.44 ) }
    dend_59 { pt3dadd( 75.1245, 36.1263, -6.71399, 0.66 ) }
    dend_59 { pt3dadd( 75.2392, 36.1912, -6.77335, 0.96 ) }
    dend_59 { pt3dadd( 75.679, 36.3873, -6.98837, 0.96 ) }
    dend_59 { pt3dadd( 76.3221, 36.5956, -7.29422, 1.11 ) }
    dend_59 { pt3dadd( 77.8099, 36.9511, -7.93576, 0.44 ) }
    dend_59 { pt3dadd( 78.6472, 37.1083, -8.25589, 0.44 ) }
    dend_59 { pt3dadd( 79.3032, 37.2148, -8.47245, 0.37 ) }
    dend_59 { pt3dadd( 80.1111, 37.3542, -8.7322, 0.37 ) }
    dend_59 { pt3dadd( 80.6038, 37.4504, -8.87584, 0.29 ) }
    dend_59 { pt3dadd( 81.289, 37.6363, -9.05388, 0.22 ) }
    dend_59 { pt3dadd( 81.7526, 37.867, -9.18885, 0.59 ) }
    dend_59 { pt3dadd( 81.992, 38.0861, -9.30181, 0.59 ) }
    dend_59 { pt3dadd( 82.6703, 38.8376, -9.76913, 0.29 ) }
    dend_59 { pt3dadd( 82.9551, 39.1628, -9.98903, 0.37 ) }
    dend_59 { pt3dadd( 83.2925, 39.5225, -10.2523, 0.52 ) }
    dend_59 { pt3dadd( 83.6619, 39.8344, -10.537, 0.74 ) }
    dend_59 { pt3dadd( 84.1756, 40.1824, -11.0118, 0.96 ) }
    dend_59 { pt3dadd( 85.0739, 40.7276, -12.0112, 0.29 ) }
    dend_59 { pt3dadd( 85.4123, 40.9413, -12.4627, 0.52 ) }
    dend_59 { pt3dadd( 85.5586, 41.0486, -12.7003, 0.81 ) }
    dend_59 { pt3dadd( 86.0239, 41.4726, -13.594, 1.11 ) }
    dend_59 { pt3dadd( 86.8391, 42.3797, -15.4199, 0.81 ) }
    dend_59 { pt3dadd( 87.1815, 42.8579, -16.2967, 0.96 ) }
    dend_59 { pt3dadd( 87.5325, 43.469, -17.2886, 0.66 ) }
    dend_59 { pt3dadd( 87.7951, 43.966, -18.027, 0.52 ) }
    dend_59 { pt3dadd( 88.071, 44.4744, -18.6833, 0.52 ) }
    dend_59 { pt3dadd( 88.2013, 44.6871, -18.8903, 0.74 ) }
    dend_59 { pt3dadd( 88.5815, 45.0807, -19.1464, 0.74 ) }
    dend_59 { pt3dadd( 88.8424, 45.2679, -19.2516, 0.96 ) }
    dend_59 { pt3dadd( 89.2551, 45.4771, -19.3854, 0.96 ) }
    dend_59 { pt3dadd( 89.9239, 45.7774, -19.6609, 0.74 ) }
    dend_59 { pt3dadd( 90.5762, 46.0903, -19.995, 0.44 ) }
    dend_59 { pt3dadd( 91.2776, 46.5188, -20.4923, 0.44 ) }
    dend_59 { pt3dadd( 91.5375, 46.7242, -20.7298, 0.96 ) }
    dend_59 { pt3dadd( 91.9882, 47.2024, -21.2934, 1.18 ) }
    dend_59 { pt3dadd( 92.5862, 48.0324, -22.273, 0.66 ) }
    dend_59 { pt3dadd( 92.7903, 48.3941, -22.7081, 0.66 ) }
    dend_59 { pt3dadd( 93.1365, 49.1364, -23.6321, 0.59 ) }
    dend_59 { pt3dadd( 93.2638, 49.4329, -23.9773, 0.52 ) }
    dend_59 { pt3dadd( 93.6334, 50.2489, -24.8603, 0.52 ) }
    dend_59 { pt3dadd( 93.74, 50.4914, -25.0848, 0.96 ) }
    dend_59 { pt3dadd( 93.9766, 50.9983, -25.491, 0.96 ) }
    dend_59 { pt3dadd( 94.4361, 51.963, -26.1623, 0.59 ) }
    dend_59 { pt3dadd( 94.8417, 52.8289, -26.6502, 0.59 ) }
    dend_59 { pt3dadd( 95.1019, 53.3968, -26.9312, 0.88 ) }
    dend_59 { pt3dadd( 95.4869, 54.232, -27.2647, 0.74 ) }
    dend_59 { pt3dadd( 95.8368, 54.9015, -27.5115, 0.74 ) }
    dend_59 { pt3dadd( 96.2618, 55.5734, -27.7223, 0.88 ) }
    dend_59 { pt3dadd( 96.5383, 55.8971, -27.8271, 0.88 ) }
    dend_59 { pt3dadd( 97.0625, 56.3452, -28.0472, 0.37 ) }
    dend_59 { pt3dadd( 97.6165, 56.7249, -28.2979, 0.37 ) }
    dend_59 { pt3dadd( 98.4907, 57.2084, -28.7095, 0.37 ) }
    dend_59 { pt3dadd( 99.1012, 57.5169, -29.0306, 0.37 ) }
    dend_59 { pt3dadd( 99.8097, 57.8596, -29.4435, 0.37 ) }
    dend_59 { pt3dadd( 100.238, 58.0802, -29.6976, 0.59 ) }
    dend_59 { pt3dadd( 100.769, 58.3759, -30.0071, 0.74 ) }
    dend_59 { pt3dadd( 101.125, 58.5989, -30.2202, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_59 { pt3dadd( 101.795, 59.088, -30.6494, 0.44 ) }
    dend_59 { pt3dadd( 102.153, 59.3515, -30.87, 0.37 ) }
    dend_59 { pt3dadd( 103.214, 60.0265, -31.3958, 0.37 ) }
    dend_59 { pt3dadd( 103.724, 60.2862, -31.6041, 0.74 ) }
    dend_59 { pt3dadd( 103.996, 60.3933, -31.698, 0.74 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 5/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 87.3635, 66.4732, 17.0997, 0.29 ) }
    dend_57 { pt3dadd( 92.2046, 72.1226, 19.8207, 0.29 ) }
    dend_57 { pt3dadd( 97.3085, 78.0852, 20.9509, 0.29 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 8/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 87.3635, 66.4732, 17.0997, 0.29 ) }
    dend_56 { pt3dadd( 91.2703, 71.7266, 19.1889, 0.29 ) }
    dend_56 { pt3dadd( 95.2395, 76.5722, 21.9794, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 11/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -22.1532, -153.811, 12.3873, 0.29 ) }
    dend_37 { pt3dadd( -18.9562, -164.518, 10.5886, 0.29 ) }
    dend_37 { pt3dadd( -17.2602, -175.726, 10.1968, 0.29 ) }
    dend_37 { pt3dadd( -15.9445, -186.799, 8.16879, 0.29 ) }
    dend_37 { pt3dadd( -16.0763, -198.121, 7.41636, 0.29 ) }
    dend_37 { pt3dadd( -17.1716, -209.382, 6.58113, 0.29 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -22.1532, -153.811, 12.3873, 0.29 ) }
    dend_36 { pt3dadd( -26.8265, -163.996, 7.65111, 0.29 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 19/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 1.30505, -81.7762, 2.32065, 0.37 ) }
    dend_24 { pt3dadd( 0.0631771, -83.2726, 1.15624, 0.37 ) }
    dend_24 { pt3dadd( -0.688646, -84.0643, 0.585094, 0.37 ) }
    dend_24 { pt3dadd( -1.43109, -84.7503, 0.091101, 0.44 ) }
    dend_24 { pt3dadd( -2.32524, -85.4951, -0.431767, 0.74 ) }
    dend_24 { pt3dadd( -3.21872, -86.1803, -0.891545, 0.59 ) }
    dend_24 { pt3dadd( -4.15163, -86.8196, -1.30322, 0.59 ) }
    dend_24 { pt3dadd( -4.71512, -87.0808, -1.44895, 0.74 ) }
    dend_24 { pt3dadd( -5.65523, -87.3677, -1.60272, 0.88 ) }
    dend_24 { pt3dadd( -6.24839, -87.482, -1.64592, 1.18 ) }
    dend_24 { pt3dadd( -6.84835, -87.5436, -1.6506, 0.59 ) }
    dend_24 { pt3dadd( -7.76239, -87.5865, -1.63244, 0.44 ) }
    dend_24 { pt3dadd( -8.6695, -87.613, -1.61851, 0.52 ) }
    dend_24 { pt3dadd( -9.0894, -87.6409, -1.62394, 0.74 ) }
    dend_24 { pt3dadd( -9.80179, -87.7822, -1.63448, 0.74 ) }
    dend_24 { pt3dadd( -10.3113, -87.9818, -1.6696, 0.59 ) }
    dend_24 { pt3dadd( -10.8253, -88.305, -1.72762, 0.59 ) }
    dend_24 { pt3dadd( -11.4859, -88.9042, -1.82302, 0.59 ) }
    dend_24 { pt3dadd( -12.1702, -89.7267, -1.92271, 0.44 ) }
    dend_24 { pt3dadd( -12.9308, -90.8194, -2.01705, 0.37 ) }
    dend_24 { pt3dadd( -13.3576, -91.5533, -2.0579, 1.03 ) }
    dend_24 { pt3dadd( -13.6355, -92.1084, -2.08481, 1.03 ) }
    dend_24 { pt3dadd( -13.8515, -92.6178, -2.10583, 0.96 ) }
    dend_24 { pt3dadd( -14.2013, -93.674, -2.13384, 0.66 ) }
    dend_24 { pt3dadd( -14.4547, -94.6244, -2.15586, 0.66 ) }
    dend_24 { pt3dadd( -14.6916, -95.7095, -2.20193, 0.88 ) }
    dend_24 { pt3dadd( -14.8097, -96.376, -2.23613, 1.03 ) }
    dend_24 { pt3dadd( -14.9383, -97.3217, -2.30485, 0.88 ) }
    dend_24 { pt3dadd( -15.0634, -98.5374, -2.42273, 0.52 ) }
    dend_24 { pt3dadd( -15.1355, -99.4867, -2.539, 0.52 ) }
    dend_24 { pt3dadd( -15.1817, -100.208, -2.64725, 0.96 ) }
    dend_24 { pt3dadd( -15.2166, -100.678, -2.72694, 0.96 ) }
    dend_24 { pt3dadd( -15.3523, -101.834, -2.94535, 0.59 ) }
    dend_24 { pt3dadd( -15.518, -102.753, -3.13202, 0.66 ) }
    dend_24 { pt3dadd( -15.704, -103.44, -3.28127, 0.81 ) }
    dend_24 { pt3dadd( -15.9896, -104.276, -3.48068, 0.81 ) }
    dend_24 { pt3dadd( -16.185, -104.742, -3.60263, 0.81 ) }
    dend_24 { pt3dadd( -16.5724, -105.591, -3.88966, 0.44 ) }
    dend_24 { pt3dadd( -16.7787, -106.034, -4.07068, 0.81 ) }
    dend_24 { pt3dadd( -17.047, -106.673, -4.37499, 0.81 ) }
    dend_24 { pt3dadd( -17.3552, -107.586, -4.84455, 0.52 ) }
    dend_24 { pt3dadd( -17.5184, -108.325, -5.2453, 0.52 ) }
    dend_24 { pt3dadd( -17.6687, -109.676, -5.99476, 0.74 ) }
    dend_24 { pt3dadd( -17.6898, -110.336, -6.35682, 1.11 ) }
    dend_24 { pt3dadd( -17.699, -110.946, -6.66723, 1.11 ) }
    dend_24 { pt3dadd( -17.7181, -111.721, -7.01551, 0.96 ) }
    dend_24 { pt3dadd( -17.7808, -112.592, -7.35058, 0.59 ) }
    dend_24 { pt3dadd( -17.9394, -113.669, -7.69722, 0.44 ) }
    dend_24 { pt3dadd( -18.2684, -114.861, -7.99476, 0.44 ) }
    dend_24 { pt3dadd( -18.6133, -115.757, -8.18805, 0.44 ) }
    dend_24 { pt3dadd( -18.9935, -116.596, -8.33574, 0.74 ) }
    dend_24 { pt3dadd( -19.2797, -117.211, -8.43061, 0.74 ) }
    dend_24 { pt3dadd( -19.5548, -117.808, -8.50349, 0.74 ) }
    dend_24 { pt3dadd( -20.031, -118.874, -8.60156, 0.66 ) }
    dend_24 { pt3dadd( -20.3691, -119.668, -8.65516, 0.44 ) }
    dend_24 { pt3dadd( -20.7947, -120.696, -8.71611, 0.44 ) }
    dend_24 { pt3dadd( -21.4538, -122.129, -8.75449, 0.44 ) }
    dend_24 { pt3dadd( -21.8241, -122.793, -8.73646, 0.88 ) }
    dend_24 { pt3dadd( -22.2537, -123.414, -8.67522, 1.18 ) }
    dend_24 { pt3dadd( -22.5862, -123.814, -8.59849, 1.18 ) }
    dend_24 { pt3dadd( -23.0036, -124.248, -8.48382, 1.03 ) }
    dend_24 { pt3dadd( -24.1961, -125.31, -8.141, 0.66 ) }
    dend_24 { pt3dadd( -25.296, -126.16, -7.80605, 0.66 ) }
    dend_24 { pt3dadd( -26.2303, -126.856, -7.51747, 1.25 ) }
    dend_24 { pt3dadd( -26.7259, -127.23, -7.36207, 1.55 ) }
    dend_24 { pt3dadd( -27.3245, -127.691, -7.17456, 1.03 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 85/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 1.30505, -81.7762, 2.32065, 0.74 ) }
    dend_19 { pt3dadd( 0.766699, -82.6957, 1.76606, 0.74 ) }
    dend_19 { pt3dadd( 0.133932, -83.7507, 1.11763, 0.74 ) }
    dend_19 { pt3dadd( -0.193334, -84.3814, 0.793166, 0.74 ) }
    dend_19 { pt3dadd( -0.504712, -85.0876, 0.47811, 0.81 ) }
    dend_19 { pt3dadd( -1.07526, -86.7075, -0.121073, 0.52 ) }
    dend_19 { pt3dadd( -1.41862, -87.9969, -0.519958, 0.74 ) }
    dend_19 { pt3dadd( -1.53322, -88.6827, -0.683967, 0.74 ) }
    dend_19 { pt3dadd( -1.40103, -90.2, -0.825829, 0.74 ) }
    dend_19 { pt3dadd( -1.1133, -90.9498, -0.813505, 0.81 ) }
    dend_19 { pt3dadd( -0.528224, -91.854, -0.708814, 0.66 ) }
    dend_19 { pt3dadd( -0.160495, -92.2991, -0.624619, 1.11 ) }
    dend_19 { pt3dadd( 0.220579, -92.7323, -0.556665, 1.11 ) }
    dend_19 { pt3dadd( 0.694804, -93.2832, -0.529949, 0.81 ) }
    dend_19 { pt3dadd( 1.27027, -94.0304, -0.609478, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_19 { pt3dadd( 1.7772, -94.7596, -0.727647, 0.96 ) }
    dend_19 { pt3dadd( 2.21985, -95.4397, -0.853572, 0.88 ) }
    dend_19 { pt3dadd( 2.74699, -96.2761, -0.998351, 0.96 ) }
    dend_19 { pt3dadd( 3.10867, -96.8996, -1.1123, 1.11 ) }
    dend_19 { pt3dadd( 3.49765, -97.6785, -1.27836, 1.11 ) }
    dend_19 { pt3dadd( 3.80147, -98.4097, -1.45509, 0.74 ) }
    dend_19 { pt3dadd( 4.1719, -99.5523, -1.74235, 0.66 ) }
    dend_19 { pt3dadd( 4.32538, -100.15, -1.89239, 0.66 ) }
    dend_19 { pt3dadd( 4.58282, -101.538, -2.20861, 0.66 ) }
    dend_19 { pt3dadd( 4.72867, -102.998, -2.50331, 0.59 ) }
    dend_19 { pt3dadd( 4.73879, -103.845, -2.66278, 0.96 ) }
    dend_19 { pt3dadd( 4.66875, -104.902, -2.85098, 1.18 ) }
    dend_19 { pt3dadd( 4.56146, -105.691, -2.97139, 1.03 ) }
    dend_19 { pt3dadd( 4.40438, -106.619, -3.09017, 0.88 ) }
    dend_19 { pt3dadd( 4.2107, -107.823, -3.20133, 0.74 ) }
    dend_19 { pt3dadd( 4.10218, -108.87, -3.21564, 0.59 ) }
    dend_19 { pt3dadd( 4.04516, -109.756, -3.17302, 0.59 ) }
    dend_19 { pt3dadd( 4.00931, -110.491, -3.07915, 1.4 ) }
    dend_19 { pt3dadd( 3.97309, -111.034, -2.9635, 1.4 ) }
    dend_19 { pt3dadd( 3.89568, -112.422, -2.5489, 0.88 ) }
    dend_19 { pt3dadd( 3.86774, -114.052, -1.87781, 0.66 ) }
    dend_19 { pt3dadd( 3.86391, -114.736, -1.5455, 0.88 ) }
    dend_19 { pt3dadd( 3.85709, -115.604, -1.09362, 0.88 ) }
    dend_19 { pt3dadd( 3.82444, -116.958, -0.378846, 0.59 ) }
    dend_19 { pt3dadd( 3.76772, -117.822, 0.0708716, 0.81 ) }
    dend_19 { pt3dadd( 3.60237, -119.253, 0.777598, 0.81 ) }
    dend_19 { pt3dadd( 3.48944, -119.991, 1.07378, 1.11 ) }
    dend_19 { pt3dadd( 3.3972, -120.597, 1.27856, 1.11 ) }
    dend_19 { pt3dadd( 3.27449, -121.468, 1.48832, 0.52 ) }
    dend_19 { pt3dadd( 3.18235, -122.29, 1.62483, 0.74 ) }
    dend_19 { pt3dadd( 3.10456, -123.024, 1.70406, 1.03 ) }
    dend_19 { pt3dadd( 3.06828, -123.636, 1.72454, 1.25 ) }
    dend_19 { pt3dadd( 3.09386, -124.238, 1.76901, 1.33 ) }
    dend_19 { pt3dadd( 3.24772, -125.224, 1.95052, 1.03 ) }
    dend_19 { pt3dadd( 3.52516, -126.143, 2.20118, 0.74 ) }
    dend_19 { pt3dadd( 3.85684, -126.885, 2.44948, 0.44 ) }
    dend_19 { pt3dadd( 4.2525, -127.556, 2.70651, 0.29 ) }
    dend_19 { pt3dadd( 4.95547, -128.474, 3.10841, 0.29 ) }
    dend_19 { pt3dadd( 5.93075, -129.475, 3.61388, 0.29 ) }
    dend_19 { pt3dadd( 6.50244, -129.919, 3.874, 0.29 ) }
    dend_19 { pt3dadd( 7.03799, -130.226, 4.06266, 0.88 ) }
    dend_19 { pt3dadd( 7.48341, -130.442, 4.19716, 0.88 ) }
    dend_19 { pt3dadd( 8.21909, -130.772, 4.38966, 0.52 ) }
    dend_19 { pt3dadd( 8.55218, -130.92, 4.43872, 0.52 ) }
    dend_19 { pt3dadd( 9.15446, -131.217, 4.51352, 0.52 ) }
    dend_19 { pt3dadd( 9.62518, -131.548, 4.61842, 0.52 ) }
    dend_19 { pt3dadd( 10.2414, -132.175, 4.74882, 0.52 ) }
    dend_19 { pt3dadd( 10.5321, -132.578, 4.79262, 0.88 ) }
    dend_19 { pt3dadd( 10.8374, -133.079, 4.80104, 0.88 ) }
    dend_19 { pt3dadd( 11.2038, -133.692, 4.74428, 1.11 ) }
    dend_19 { pt3dadd( 11.5846, -134.261, 4.65875, 0.66 ) }
    dend_19 { pt3dadd( 12.3215, -135.163, 4.44512, 0.66 ) }
    dend_19 { pt3dadd( 12.6803, -135.482, 4.34372, 0.66 ) }
    dend_19 { pt3dadd( 13.321, -135.932, 4.19488, 0.66 ) }
    dend_19 { pt3dadd( 13.8448, -136.251, 4.09674, 0.52 ) }
    dend_19 { pt3dadd( 14.7347, -136.79, 3.91766, 0.66 ) }
    dend_19 { pt3dadd( 15.025, -136.967, 3.88853, 0.66 ) }
    dend_19 { pt3dadd( 15.6766, -137.365, 3.93579, 0.44 ) }
    dend_19 { pt3dadd( 16.2293, -137.714, 4.0598, 0.44 ) }
    dend_19 { pt3dadd( 17.0134, -138.245, 4.34649, 0.52 ) }
    dend_19 { pt3dadd( 17.9666, -138.932, 4.82786, 0.66 ) }
    dend_19 { pt3dadd( 18.7924, -139.561, 5.30842, 0.44 ) }
    dend_19 { pt3dadd( 19.6848, -140.249, 5.8754, 0.81 ) }
    dend_19 { pt3dadd( 20.5143, -140.888, 6.38337, 0.52 ) }
    dend_19 { pt3dadd( 21.0571, -141.308, 6.68438, 0.74 ) }
    dend_19 { pt3dadd( 21.7106, -141.819, 6.98963, 0.29 ) }
    dend_19 { pt3dadd( 22.0514, -142.099, 7.09028, 0.52 ) }
    dend_19 { pt3dadd( 22.5422, -142.538, 7.08881, 0.59 ) }
    dend_19 { pt3dadd( 23.4678, -143.416, 6.9876, 0.37 ) }
    dend_19 { pt3dadd( 24.1279, -144.06, 6.84563, 0.66 ) }
    dend_19 { pt3dadd( 24.501, -144.423, 6.7441, 1.03 ) }
    dend_19 { pt3dadd( 25.0954, -145.0, 6.55716, 1.03 ) }
    dend_19 { pt3dadd( 25.7564, -145.64, 6.38364, 0.74 ) }
    dend_19 { pt3dadd( 26.8387, -146.665, 6.21222, 0.52 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 74/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 17.8623, -135.074, -16.5013, 0.44 ) }
    dend_13 { pt3dadd( 17.8544, -136.088, -16.381, 0.44 ) }
    dend_13 { pt3dadd( 17.8424, -136.796, -16.2955, 0.81 ) }
    dend_13 { pt3dadd( 17.8247, -137.34, -16.2292, 1.18 ) }
    dend_13 { pt3dadd( 17.7936, -138.068, -16.1428, 0.74 ) }
    dend_13 { pt3dadd( 17.7588, -138.824, -16.0566, 0.44 ) }
    dend_13 { pt3dadd( 17.7261, -139.491, -15.9833, 0.96 ) }
    dend_13 { pt3dadd( 17.6887, -140.181, -15.9111, 0.96 ) }
    dend_13 { pt3dadd( 17.6485, -140.837, -15.8462, 1.18 ) }
    dend_13 { pt3dadd( 17.5519, -141.817, -15.7472, 0.74 ) }
    dend_13 { pt3dadd( 17.4038, -142.705, -15.6741, 0.66 ) }
    dend_13 { pt3dadd( 17.2284, -143.43, -15.6302, 0.66 ) }
    dend_13 { pt3dadd( 16.9531, -144.34, -15.6118, 0.66 ) }
    dend_13 { pt3dadd( 16.7959, -144.79, -15.6214, 1.03 ) }
    dend_13 { pt3dadd( 16.5534, -145.414, -15.6588, 0.81 ) }
    dend_13 { pt3dadd( 16.1651, -146.41, -15.7983, 0.52 ) }
    dend_13 { pt3dadd( 15.9775, -147.008, -15.8988, 0.44 ) }
    dend_13 { pt3dadd( 15.834, -147.759, -16.0167, 0.37 ) }
    dend_13 { pt3dadd( 15.8058, -148.187, -16.067, 0.66 ) }
    dend_13 { pt3dadd( 15.8073, -148.657, -16.0891, 0.66 ) }
    dend_13 { pt3dadd( 15.8716, -149.884, -16.1127, 0.44 ) }
    dend_13 { pt3dadd( 15.9473, -151.116, -16.0812, 0.44 ) }
    dend_13 { pt3dadd( 15.9735, -152.1, -16.0221, 0.66 ) }
    dend_13 { pt3dadd( 15.9443, -152.967, -15.9416, 0.81 ) }
    dend_13 { pt3dadd( 15.8312, -153.912, -15.8501, 0.96 ) }
    dend_13 { pt3dadd( 15.5861, -154.909, -15.7388, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_13 { pt3dadd( 15.2997, -155.685, -15.6422, 0.81 ) }
    dend_13 { pt3dadd( 14.9952, -156.371, -15.5901, 0.88 ) }
    dend_13 { pt3dadd( 14.7514, -156.905, -15.5755, 0.66 ) }
    dend_13 { pt3dadd( 14.4044, -157.658, -15.5795, 0.29 ) }
    dend_13 { pt3dadd( 13.9692, -158.622, -15.5986, 0.29 ) }
    dend_13 { pt3dadd( 13.7179, -159.181, -15.5997, 0.52 ) }
    dend_13 { pt3dadd( 13.3233, -160.048, -15.609, 0.52 ) }
    dend_13 { pt3dadd( 12.9942, -160.76, -15.6133, 0.37 ) }
    dend_13 { pt3dadd( 12.681, -161.401, -15.6086, 0.29 ) }
    dend_13 { pt3dadd( 12.3732, -161.961, -15.5816, 0.29 ) }
    dend_13 { pt3dadd( 12.2343, -162.165, -15.5702, 0.88 ) }
    dend_13 { pt3dadd( 11.8969, -162.51, -15.5445, 1.11 ) }
    dend_13 { pt3dadd( 11.4676, -162.816, -15.5056, 0.44 ) }
    dend_13 { pt3dadd( 10.9157, -163.118, -15.4503, 0.37 ) }
    dend_13 { pt3dadd( 10.3759, -163.363, -15.4035, 0.59 ) }
    dend_13 { pt3dadd( 9.88716, -163.554, -15.3704, 0.74 ) }
    dend_13 { pt3dadd( 9.23972, -163.788, -15.3347, 0.44 ) }
    dend_13 { pt3dadd( 8.67808, -163.993, -15.3009, 0.37 ) }
    dend_13 { pt3dadd( 8.30788, -164.144, -15.2736, 0.88 ) }
    dend_13 { pt3dadd( 7.8884, -164.35, -15.23, 1.11 ) }
    dend_13 { pt3dadd( 7.59328, -164.525, -15.1848, 1.11 ) }
    dend_13 { pt3dadd( 7.29582, -164.711, -15.1216, 1.11 ) }
    dend_13 { pt3dadd( 6.56828, -165.191, -14.9407, 0.29 ) }
    dend_13 { pt3dadd( 6.09038, -165.52, -14.819, 0.59 ) }
    dend_13 { pt3dadd( 5.77468, -165.744, -14.7355, 0.59 ) }
    dend_13 { pt3dadd( 5.00755, -166.335, -14.5175, 0.29 ) }
    dend_13 { pt3dadd( 4.54694, -166.734, -14.3729, 0.29 ) }
    dend_13 { pt3dadd( 4.19176, -167.082, -14.2535, 0.52 ) }
    dend_13 { pt3dadd( 3.78179, -167.53, -14.1108, 0.52 ) }
    dend_13 { pt3dadd( 3.56657, -167.779, -14.034, 0.81 ) }
    dend_13 { pt3dadd( 3.20853, -168.265, -13.9021, 0.81 ) }
    dend_13 { pt3dadd( 2.8662, -168.879, -13.7673, 0.29 ) }
    dend_13 { pt3dadd( 2.48514, -169.705, -13.6028, 0.29 ) }
    dend_13 { pt3dadd( 2.28083, -170.186, -13.5047, 1.18 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 34/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 17.8623, -135.074, -16.5013, 0.22 ) }
    dend_12 { pt3dadd( 18.899, -135.668, -17.3343, 0.22 ) }
    dend_12 { pt3dadd( 19.992, -136.295, -18.2126, 0.22 ) }
    dend_12 { pt3dadd( 21.3117, -137.052, -19.273, 0.22 ) }
    dend_12 { pt3dadd( 22.2201, -137.572, -20.0029, 0.22 ) }
    dend_12 { pt3dadd( 23.184, -138.125, -20.7774, 0.22 ) }
    dend_12 { pt3dadd( 24.1757, -138.693, -21.5742, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 41/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 68.0325, -24.7799, -29.8113, 0.74 ) }
    dend_10 { pt3dadd( 70.9357, -26.682, -30.7178, 0.74 ) }
    dend_10 { pt3dadd( 71.6966, -27.3047, -30.8519, 0.44 ) }
    dend_10 { pt3dadd( 72.2464, -27.7571, -30.8937, 0.74 ) }
    dend_10 { pt3dadd( 73.1069, -28.4127, -30.893, 0.52 ) }
    dend_10 { pt3dadd( 74.2647, -29.2007, -30.8087, 0.52 ) }
    dend_10 { pt3dadd( 75.5203, -29.9447, -30.7019, 0.52 ) }
    dend_10 { pt3dadd( 76.4355, -30.4486, -30.4747, 0.52 ) }
    dend_10 { pt3dadd( 77.3948, -30.8829, -30.2431, 0.52 ) }
    dend_10 { pt3dadd( 78.6385, -31.2615, -30.022, 0.52 ) }
    dend_10 { pt3dadd( 79.699, -31.4125, -29.8888, 0.74 ) }
    dend_10 { pt3dadd( 80.8234, -31.4174, -29.8045, 1.03 ) }
    dend_10 { pt3dadd( 81.2444, -31.3841, -29.7911, 1.4 ) }
    dend_10 { pt3dadd( 81.6657, -31.3373, -29.7931, 1.4 ) }
    dend_10 { pt3dadd( 83.3668, -31.1598, -29.8645, 0.44 ) }
    dend_10 { pt3dadd( 84.006, -31.1139, -29.8387, 0.74 ) }
    dend_10 { pt3dadd( 84.9322, -31.0943, -29.6765, 0.74 ) }
    dend_10 { pt3dadd( 85.5478, -31.1065, -29.4634, 0.96 ) }
    dend_10 { pt3dadd( 86.1079, -31.1484, -29.1621, 0.96 ) }
    dend_10 { pt3dadd( 86.8196, -31.2659, -28.6617, 0.96 ) }
    dend_10 { pt3dadd( 88.4357, -31.756, -27.2069, 0.66 ) }
    dend_10 { pt3dadd( 89.0797, -32.0485, -26.5336, 0.81 ) }
    dend_10 { pt3dadd( 89.4446, -32.2776, -26.0876, 0.81 ) }
    dend_10 { pt3dadd( 90.3077, -32.9163, -24.9494, 0.52 ) }
    dend_10 { pt3dadd( 90.9492, -33.428, -24.0984, 0.52 ) }
    dend_10 { pt3dadd( 91.666, -34.0104, -23.2181, 0.52 ) }
    dend_10 { pt3dadd( 92.4004, -34.5628, -22.4897, 0.52 ) }
    dend_10 { pt3dadd( 93.3709, -35.232, -21.6462, 0.44 ) }
    dend_10 { pt3dadd( 93.9289, -35.5537, -21.2721, 0.96 ) }
    dend_10 { pt3dadd( 94.5791, -35.8345, -21.0452, 1.11 ) }
    dend_10 { pt3dadd( 95.5632, -36.1615, -20.95, 0.44 ) }
    dend_10 { pt3dadd( 96.4835, -36.4523, -21.087, 0.37 ) }
    dend_10 { pt3dadd( 97.1689, -36.7009, -21.3374, 0.37 ) }
    dend_10 { pt3dadd( 98.3008, -37.159, -21.9561, 0.66 ) }
    dend_10 { pt3dadd( 99.581, -37.7116, -22.8184, 0.74 ) }
    dend_10 { pt3dadd( 100.133, -37.9477, -23.2368, 0.81 ) }
    dend_10 { pt3dadd( 100.944, -38.2727, -23.9155, 0.81 ) }
    dend_10 { pt3dadd( 102.003, -38.6501, -24.8379, 0.66 ) }
    dend_10 { pt3dadd( 102.973, -38.9437, -25.637, 0.66 ) }
    dend_10 { pt3dadd( 103.887, -39.1913, -26.3198, 0.29 ) }
    dend_10 { pt3dadd( 104.517, -39.3561, -26.7457, 0.59 ) }
    dend_10 { pt3dadd( 105.188, -39.5182, -27.1618, 0.74 ) }
    dend_10 { pt3dadd( 105.825, -39.6561, -27.5476, 0.44 ) }
    dend_10 { pt3dadd( 106.66, -39.822, -28.0215, 0.37 ) }
    dend_10 { pt3dadd( 107.515, -40.0117, -28.4917, 0.37 ) }
    dend_10 { pt3dadd( 108.345, -40.2277, -28.924, 0.59 ) }
    dend_10 { pt3dadd( 108.997, -40.4295, -29.2547, 0.59 ) }
    dend_10 { pt3dadd( 110.689, -41.0519, -30.285, 0.29 ) }
    dend_10 { pt3dadd( 111.78, -41.5422, -31.062, 0.29 ) }
    dend_10 { pt3dadd( 112.343, -41.8392, -31.5228, 0.29 ) }
    dend_10 { pt3dadd( 112.828, -42.1227, -31.935, 0.74 ) }
    dend_10 { pt3dadd( 113.309, -42.4278, -32.3621, 0.74 ) }
    dend_10 { pt3dadd( 115.206, -43.8801, -34.1592, 0.37 ) }
    dend_10 { pt3dadd( 115.76, -44.423, -34.7333, 0.52 ) }
    dend_10 { pt3dadd( 116.183, -44.9159, -35.255, 0.81 ) }
    dend_10 { pt3dadd( 116.636, -45.4637, -35.8814, 0.37 ) }
    dend_10 { pt3dadd( 117.051, -45.9367, -36.496, 0.37 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 98/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 68.0325, -24.7799, -29.8113, 0.88 ) }
    dend_3 { pt3dadd( 69.1801, -24.3504, -31.0774, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_3 { pt3dadd( 69.6656, -24.2951, -31.6544, 1.25 ) }
    dend_3 { pt3dadd( 70.1238, -24.3173, -32.2605, 1.25 ) }
    dend_3 { pt3dadd( 70.7332, -24.362, -33.1369, 0.59 ) }
    dend_3 { pt3dadd( 72.363, -24.4815, -35.4808, 0.59 ) }
    dend_3 { pt3dadd( 74.0001, -24.6015, -37.8351, 0.96 ) }
    dend_3 { pt3dadd( 74.8629, -24.7612, -39.1157, 1.11 ) }
    dend_3 { pt3dadd( 76.3746, -25.1727, -41.4946, 1.25 ) }
    dend_3 { pt3dadd( 77.2889, -25.5103, -43.0306, 1.55 ) }
    // Section: dend_84, id: dend_84, parent: dend_82 (entry count 8/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -77.875, 145.067, -32.444, 0.22 ) }
    dend_84 { pt3dadd( -77.8693, 144.139, -32.0285, 0.22 ) }
    dend_84 { pt3dadd( -77.8657, 143.561, -31.7697, 0.22 ) }
    dend_84 { pt3dadd( -77.8577, 142.266, -31.19, 0.22 ) }
    dend_84 { pt3dadd( -77.8529, 141.476, -30.8364, 0.22 ) }
    dend_84 { pt3dadd( -77.8487, 140.797, -30.5325, 0.22 ) }
    // Section: dend_83, id: dend_83, parent: dend_82 (entry count 14/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -77.875, 145.067, -32.444, 0.22 ) }
    dend_83 { pt3dadd( -78.7554, 145.621, -32.2347, 0.22 ) }
    dend_83 { pt3dadd( -79.5289, 146.134, -32.0537, 0.22 ) }
    dend_83 { pt3dadd( -80.2646, 146.622, -31.8815, 0.22 ) }
    dend_83 { pt3dadd( -80.9685, 147.089, -31.7168, 0.22 ) }
    dend_83 { pt3dadd( -82.028, 147.792, -31.4688, 0.22 ) }
    dend_83 { pt3dadd( -82.5686, 148.15, -31.3423, 0.37 ) }
    dend_83 { pt3dadd( -83.106, 148.555, -31.1892, 0.37 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 22/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 151.648, 37.0308, 87.6682, 0.29 ) }
    dend_77 { pt3dadd( 156.309, 42.8637, 97.4272, 0.29 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 24/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 151.648, 37.0308, 87.6682, 0.29 ) }
    dend_76 { pt3dadd( 154.288, 42.0987, 92.8037, 0.29 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 26/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 168.926, 27.2963, 81.4388, 0.29 ) }
    dend_74 { pt3dadd( 171.375, 30.1065, 71.0697, 0.29 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 28/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 168.926, 27.2963, 81.4388, 0.29 ) }
    dend_73 { pt3dadd( 158.218, 27.3148, 84.4812, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 30/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 103.996, 60.3933, -31.698, 0.37 ) }
    dend_61 { pt3dadd( 103.178, 60.708, -32.3574, 0.37 ) }
    dend_61 { pt3dadd( 102.143, 61.0435, -33.5975, 0.66 ) }
    dend_61 { pt3dadd( 101.575, 61.1701, -34.6852, 0.29 ) }
    dend_61 { pt3dadd( 101.125, 61.2569, -35.7069, 0.29 ) }
    dend_61 { pt3dadd( 100.585, 61.3789, -36.9969, 0.29 ) }
    dend_61 { pt3dadd( 99.4263, 61.707, -39.7931, 0.29 ) }
    dend_61 { pt3dadd( 98.9064, 61.8123, -41.1071, 0.81 ) }
    dend_61 { pt3dadd( 97.4286, 62.0155, -45.1135, 0.44 ) }
    dend_61 { pt3dadd( 96.9553, 62.0613, -46.5391, 0.96 ) }
    dend_61 { pt3dadd( 96.599, 62.1214, -47.7757, 1.18 ) }
    dend_61 { pt3dadd( 96.1986, 62.2362, -49.4072, 0.88 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 42/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 103.996, 60.3933, -31.698, 0.37 ) }
    dend_60 { pt3dadd( 105.087, 60.6926, -31.627, 0.37 ) }
    dend_60 { pt3dadd( 106.341, 61.2362, -31.5876, 0.29 ) }
    dend_60 { pt3dadd( 106.8, 61.4783, -31.5799, 0.66 ) }
    dend_60 { pt3dadd( 107.244, 61.7494, -31.5682, 0.66 ) }
    dend_60 { pt3dadd( 107.791, 62.1481, -31.5744, 0.37 ) }
    dend_60 { pt3dadd( 108.551, 62.7335, -31.6031, 0.37 ) }
    dend_60 { pt3dadd( 109.364, 63.4565, -31.6642, 0.81 ) }
    dend_60 { pt3dadd( 109.692, 63.7883, -31.6713, 1.11 ) }
    dend_60 { pt3dadd( 110.143, 64.2761, -31.657, 1.33 ) }
    dend_60 { pt3dadd( 111.033, 65.3472, -31.5804, 0.44 ) }
    dend_60 { pt3dadd( 111.535, 66.0412, -31.4829, 0.52 ) }
    dend_60 { pt3dadd( 112.161, 67.0445, -31.2902, 1.03 ) }
    dend_60 { pt3dadd( 112.795, 68.2402, -31.0267, 0.52 ) }
    dend_60 { pt3dadd( 113.078, 68.8487, -30.868, 0.66 ) }
    dend_60 { pt3dadd( 113.345, 69.5298, -30.6659, 0.66 ) }
    dend_60 { pt3dadd( 113.678, 70.6464, -30.2967, 0.44 ) }
    dend_60 { pt3dadd( 113.799, 71.2659, -30.132, 0.29 ) }
    dend_60 { pt3dadd( 113.923, 72.0354, -29.987, 0.44 ) }
    dend_60 { pt3dadd( 114.112, 72.9148, -29.9033, 0.66 ) }
    dend_60 { pt3dadd( 114.325, 73.6468, -29.868, 0.37 ) }
    dend_60 { pt3dadd( 114.61, 74.4884, -29.8725, 0.37 ) }
    dend_60 { pt3dadd( 115.079, 75.8525, -29.9486, 0.29 ) }
    dend_60 { pt3dadd( 115.367, 76.732, -30.0029, 0.29 ) }
    dend_60 { pt3dadd( 115.761, 78.2117, -30.1123, 0.29 ) }
    dend_60 { pt3dadd( 115.955, 79.229, -30.1611, 0.29 ) }
    dend_60 { pt3dadd( 116.032, 80.0239, -30.166, 1.55 ) }
    dend_60 { pt3dadd( 116.024, 80.684, -30.1383, 1.18 ) }
    dend_60 { pt3dadd( 115.894, 81.3926, -30.0309, 0.96 ) }
    dend_60 { pt3dadd( 115.452, 82.5371, -29.7723, 0.52 ) }
    dend_60 { pt3dadd( 114.67, 83.8507, -29.3895, 0.29 ) }
    dend_60 { pt3dadd( 114.048, 84.6507, -29.1292, 0.29 ) }
    dend_60 { pt3dadd( 113.72, 85.023, -29.0057, 0.29 ) }
    dend_60 { pt3dadd( 112.81, 86.0295, -28.7041, 0.22 ) }
    dend_60 { pt3dadd( 112.534, 86.3387, -28.6317, 0.66 ) }
    dend_60 { pt3dadd( 112.203, 86.7297, -28.5653, 0.66 ) }
    dend_60 { pt3dadd( 111.66, 87.4659, -28.524, 0.37 ) }
    dend_60 { pt3dadd( 111.267, 88.2139, -28.5219, 0.29 ) }
    dend_60 { pt3dadd( 111.005, 88.9692, -28.5799, 0.22 ) }
    dend_60 { pt3dadd( 110.848, 89.6579, -28.6237, 0.22 ) }
    dend_60 { pt3dadd( 110.686, 90.7375, -28.6214, 0.22 ) }
    dend_60 { pt3dadd( 110.655, 91.2321, -28.5956, 0.29 ) }
    dend_60 { pt3dadd( 110.665, 91.9827, -28.5163, 0.29 ) }
    dend_60 { pt3dadd( 110.731, 93.1144, -28.3562, 0.29 ) }
    dend_60 { pt3dadd( 110.897, 94.5874, -28.1373, 0.29 ) }
    dend_60 { pt3dadd( 111.025, 95.5063, -27.985, 0.29 ) }
    dend_60 { pt3dadd( 111.165, 96.2496, -27.8509, 0.29 ) }
    dend_60 { pt3dadd( 111.366, 97.2251, -27.656, 0.29 ) }
    dend_60 { pt3dadd( 111.72, 98.7047, -27.3307, 0.29 ) }
    dend_60 { pt3dadd( 112.055, 99.8466, -27.0774, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 92/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -17.1716, -209.382, 6.58113, 0.29 ) }
    dend_39 { pt3dadd( -16.6286, -220.628, 4.9574, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 94/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -17.1716, -209.382, 6.58113, 0.29 ) }
    dend_38 { pt3dadd( -12.192, -206.752, 12.6471, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 96/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -27.3245, -127.691, -7.17456, 0.37 ) }
    dend_26 { pt3dadd( -27.934, -128.97, -7.25121, 0.37 ) }
    dend_26 { pt3dadd( -28.2252, -129.582, -7.28783, 0.81 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 99/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -27.3245, -127.691, -7.17456, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_25 { pt3dadd( -30.0244, -127.469, -8.02915, 0.29 ) }
    dend_25 { pt3dadd( -30.814, -127.405, -8.25801, 0.22 ) }
    dend_25 { pt3dadd( -31.8603, -127.388, -8.52068, 0.22 ) }
    dend_25 { pt3dadd( -32.4778, -127.426, -8.64776, 1.47 ) }
    dend_25 { pt3dadd( -32.9357, -127.454, -8.74199, 1.69 ) }
    dend_25 { pt3dadd( -33.3731, -127.48, -8.83202, 1.69 ) }
    dend_25 { pt3dadd( -34.5513, -127.539, -8.8307, 0.96 ) }
    dend_25 { pt3dadd( -35.4042, -127.66, -8.89267, 0.29 ) }
    dend_25 { pt3dadd( -36.138, -127.875, -8.99996, 0.29 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 9/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 26.8387, -146.665, 6.21222, 0.29 ) }
    dend_21 { pt3dadd( 26.6288, -147.626, 4.77905, 0.29 ) }
    dend_21 { pt3dadd( 26.4458, -148.463, 3.52915, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 12/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 26.8387, -146.665, 6.21222, 0.29 ) }
    dend_20 { pt3dadd( 26.9592, -144.901, 5.34928, 0.29 ) }
    dend_20 { pt3dadd( 27.1044, -143.798, 4.31593, 0.29 ) }
    dend_20 { pt3dadd( 27.2224, -143.31, 3.39266, 0.29 ) }
    dend_20 { pt3dadd( 27.3369, -142.836, 2.49681, 0.52 ) }
    dend_20 { pt3dadd( 27.6609, -141.498, -0.0370131, 0.44 ) }
    dend_20 { pt3dadd( 27.7695, -141.048, -0.887223, 0.29 ) }
    dend_20 { pt3dadd( 27.9445, -141.165, -2.34807, 0.29 ) }
    dend_20 { pt3dadd( 28.0061, -141.318, -2.87864, 0.29 ) }
    dend_20 { pt3dadd( 28.195, -136.64, -10.4642, 0.29 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 22/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 2.28083, -170.186, -13.5047, 0.22 ) }
    dend_15 { pt3dadd( 2.25976, -170.93, -13.3688, 0.22 ) }
    dend_15 { pt3dadd( 2.25291, -171.781, -13.1668, 0.22 ) }
    dend_15 { pt3dadd( 2.27264, -172.886, -12.9001, 0.22 ) }
    dend_15 { pt3dadd( 2.30049, -173.793, -12.6813, 0.22 ) }
    dend_15 { pt3dadd( 2.35702, -174.961, -12.409, 0.22 ) }
    dend_15 { pt3dadd( 2.40186, -175.888, -12.193, 0.22 ) }
    dend_15 { pt3dadd( 2.45822, -176.97, -11.9525, 0.22 ) }
    dend_15 { pt3dadd( 2.51814, -177.655, -11.8048, 0.37 ) }
    dend_15 { pt3dadd( 2.55207, -177.89, -11.7503, 0.37 ) }
    dend_15 { pt3dadd( 2.66994, -178.547, -11.5822, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 33/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 2.28083, -170.186, -13.5047, 1.55 ) }
    dend_14 { pt3dadd( 1.59495, -170.592, -13.517, 1.55 ) }
    dend_14 { pt3dadd( 1.19417, -170.883, -13.5349, 1.55 ) }
    dend_14 { pt3dadd( 0.401187, -171.485, -13.5682, 0.29 ) }
    dend_14 { pt3dadd( -0.756085, -172.362, -13.5879, 0.44 ) }
    dend_14 { pt3dadd( -1.05173, -172.561, -13.6155, 0.44 ) }
    dend_14 { pt3dadd( -2.30393, -173.261, -13.8031, 0.29 ) }
    dend_14 { pt3dadd( -3.09521, -173.642, -13.9527, 0.29 ) }
    dend_14 { pt3dadd( -3.88375, -173.972, -14.0998, 0.29 ) }
    dend_14 { pt3dadd( -4.75958, -174.272, -14.2435, 0.29 ) }
    dend_14 { pt3dadd( -6.49571, -174.692, -14.4392, 0.29 ) }
    dend_14 { pt3dadd( -8.03237, -174.901, -14.5646, 0.29 ) }
    dend_14 { pt3dadd( -9.00362, -174.916, -14.6159, 0.22 ) }
    dend_14 { pt3dadd( -9.97807, -174.861, -14.6393, 0.22 ) }
    dend_14 { pt3dadd( -10.7375, -174.793, -14.6361, 0.22 ) }
    dend_14 { pt3dadd( -11.5662, -174.695, -14.596, 0.22 ) }
    dend_14 { pt3dadd( -12.5853, -174.574, -14.4324, 0.22 ) }
    dend_14 { pt3dadd( -13.3455, -174.439, -14.2827, 0.22 ) }
    dend_14 { pt3dadd( -13.8772, -174.297, -14.1971, 0.52 ) }
    dend_14 { pt3dadd( -14.351, -174.131, -14.1411, 0.52 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 53/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 77.2889, -25.5103, -43.0306, 0.81 ) }
    dend_9 { pt3dadd( 79.8224, -25.5167, -43.7573, 0.81 ) }
    dend_9 { pt3dadd( 81.7313, -25.6237, -44.2578, 0.88 ) }
    dend_9 { pt3dadd( 83.2427, -25.7784, -44.6903, 0.37 ) }
    dend_9 { pt3dadd( 83.6794, -25.823, -44.8116, 0.37 ) }
    dend_9 { pt3dadd( 84.6339, -25.9206, -45.0766, 0.66 ) }
    dend_9 { pt3dadd( 85.2552, -25.9841, -45.2491, 0.74 ) }
    dend_9 { pt3dadd( 85.4748, -26.002, -45.3385, 0.74 ) }
    dend_9 { pt3dadd( 86.6437, -26.2397, -45.6285, 0.37 ) }
    dend_9 { pt3dadd( 87.2206, -26.4054, -45.7806, 0.66 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 63/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 77.2889, -25.5103, -43.0306, 0.44 ) }
    dend_4 { pt3dadd( 79.5759, -24.1549, -44.603, 0.44 ) }
    dend_4 { pt3dadd( 81.1909, -23.1977, -45.7133, 0.44 ) }
    dend_4 { pt3dadd( 82.0833, -22.6688, -46.3269, 0.44 ) }
    dend_4 { pt3dadd( 83.8367, -21.6295, -47.5324, 1.18 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 68/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 96.1986, 62.2362, -49.4072, 0.96 ) }
    dend_65 { pt3dadd( 94.5178, 63.4491, -53.3056, 0.96 ) }
    dend_65 { pt3dadd( 92.5558, 64.5989, -57.1774, 0.59 ) }
    dend_65 { pt3dadd( 92.0772, 64.8817, -58.0996, 0.59 ) }
    dend_65 { pt3dadd( 91.6448, 65.1699, -58.9774, 0.37 ) }
    dend_65 { pt3dadd( 90.7148, 65.91, -61.0098, 0.29 ) }
    dend_65 { pt3dadd( 90.1371, 66.4244, -62.3149, 0.29 ) }
    dend_65 { pt3dadd( 89.7541, 66.8493, -63.1272, 0.66 ) }
    dend_65 { pt3dadd( 89.1443, 67.8748, -64.5839, 0.22 ) }
    dend_65 { pt3dadd( 88.8425, 68.4947, -65.4861, 0.22 ) }
    dend_65 { pt3dadd( 88.4678, 69.2598, -66.6546, 0.88 ) }
    dend_65 { pt3dadd( 88.2242, 69.7251, -67.3618, 0.88 ) }
    dend_65 { pt3dadd( 87.442, 70.9639, -69.2767, 0.37 ) }
    dend_65 { pt3dadd( 87.0094, 71.46, -70.1882, 0.96 ) }
    dend_65 { pt3dadd( 86.5353, 71.8685, -71.1173, 1.11 ) }
    dend_65 { pt3dadd( 85.6366, 72.5556, -72.9272, 0.44 ) }
    dend_65 { pt3dadd( 85.1231, 72.9592, -74.0483, 0.37 ) }
    dend_65 { pt3dadd( 84.7505, 73.2861, -74.9414, 0.52 ) }
    dend_65 { pt3dadd( 83.2434, 74.7394, -78.7532, 0.37 ) }
    dend_65 { pt3dadd( 82.6468, 75.4841, -80.5683, 0.96 ) }
    dend_65 { pt3dadd( 82.2453, 76.132, -81.9653, 0.96 ) }
    dend_65 { pt3dadd( 81.8736, 76.8184, -83.3823, 0.52 ) }
    dend_65 { pt3dadd( 81.6114, 77.295, -84.459, 1.33 ) }
    dend_65 { pt3dadd( 81.2869, 77.8272, -85.7751, 1.33 ) }
    dend_65 { pt3dadd( 79.7992, 79.9538, -91.1648, 0.52 ) }
    dend_65 { pt3dadd( 79.6209, 80.1875, -91.7719, 0.52 ) }
    dend_65 { pt3dadd( 79.2157, 80.6657, -93.0754, 0.52 ) }
    dend_65 { pt3dadd( 77.3917, 82.5554, -98.6062, 0.44 ) }
    dend_65 { pt3dadd( 76.4857, 83.4037, -101.106, 0.59 ) }
    dend_65 { pt3dadd( 75.9057, 83.946, -102.567, 0.59 ) }
    dend_65 { pt3dadd( 75.2764, 84.5346, -103.897, 0.88 ) }
    dend_65 { pt3dadd( 75.0452, 84.771, -104.333, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_65 { pt3dadd( 74.5813, 85.2959, -105.019, 1.47 ) }
    dend_65 { pt3dadd( 73.4314, 86.7166, -106.127, 0.29 ) }
    dend_65 { pt3dadd( 72.3662, 88.1115, -107.01, 0.29 ) }
    dend_65 { pt3dadd( 71.9313, 88.685, -107.342, 0.29 ) }
    dend_65 { pt3dadd( 71.1745, 89.6949, -107.862, 0.29 ) }
    dend_65 { pt3dadd( 70.7004, 90.3699, -108.191, 0.29 ) }
    dend_65 { pt3dadd( 69.58, 92.0547, -108.955, 0.29 ) }
    dend_65 { pt3dadd( 69.1361, 92.7092, -109.258, 0.29 ) }
    dend_65 { pt3dadd( 68.512, 93.481, -109.664, 0.96 ) }
    dend_65 { pt3dadd( 68.1014, 94.0122, -109.969, 1.25 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 10/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 96.1986, 62.2362, -49.4072, 0.15 ) }
    dend_62 { pt3dadd( 96.6924, 63.3225, -49.226, 0.15 ) }
    dend_62 { pt3dadd( 96.9629, 63.9177, -49.1267, 0.15 ) }
    dend_62 { pt3dadd( 97.1802, 64.396, -49.0469, 0.81 ) }
    dend_62 { pt3dadd( 97.369, 64.8112, -48.9777, 1.03 ) }
    dend_62 { pt3dadd( 97.6177, 65.3584, -48.8864, 1.03 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 16/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -28.2252, -129.582, -7.28783, 0.52 ) }
    dend_28 { pt3dadd( -28.62, -130.125, -7.40075, 0.52 ) }
    dend_28 { pt3dadd( -29.1519, -131.011, -7.56218, 0.52 ) }
    dend_28 { pt3dadd( -29.7298, -132.155, -7.68182, 0.37 ) }
    dend_28 { pt3dadd( -29.9886, -132.683, -7.72949, 0.52 ) }
    dend_28 { pt3dadd( -30.3295, -133.394, -7.78433, 0.44 ) }
    dend_28 { pt3dadd( -30.7177, -134.184, -7.8372, 0.37 ) }
    dend_28 { pt3dadd( -31.0907, -134.991, -7.85957, 0.29 ) }
    dend_28 { pt3dadd( -31.4448, -135.85, -7.84322, 0.29 ) }
    dend_28 { pt3dadd( -31.865, -136.969, -7.82246, 1.03 ) }
    dend_28 { pt3dadd( -31.9868, -137.283, -7.81493, 1.18 ) }
    dend_28 { pt3dadd( -32.3672, -138.179, -7.77946, 0.88 ) }
    dend_28 { pt3dadd( -32.6518, -138.819, -7.76183, 0.44 ) }
    dend_28 { pt3dadd( -33.0139, -139.645, -7.78641, 0.37 ) }
    dend_28 { pt3dadd( -33.2052, -140.123, -7.85666, 0.59 ) }
    dend_28 { pt3dadd( -33.3526, -140.565, -7.96916, 0.44 ) }
    dend_28 { pt3dadd( -33.5991, -141.452, -8.30123, 0.44 ) }
    dend_28 { pt3dadd( -33.7383, -142.074, -8.59581, 0.44 ) }
    dend_28 { pt3dadd( -33.9228, -143.022, -9.08422, 0.52 ) }
    dend_28 { pt3dadd( -34.0893, -143.906, -9.52753, 0.66 ) }
    dend_28 { pt3dadd( -34.2014, -144.648, -9.8283, 0.88 ) }
    dend_28 { pt3dadd( -34.2561, -145.177, -9.96539, 0.88 ) }
    dend_28 { pt3dadd( -34.2971, -146.009, -10.0135, 0.52 ) }
    dend_28 { pt3dadd( -34.3279, -146.756, -9.86601, 0.29 ) }
    dend_28 { pt3dadd( -34.3662, -147.674, -9.49152, 0.29 ) }
    dend_28 { pt3dadd( -34.4714, -148.729, -8.96431, 0.29 ) }
    dend_28 { pt3dadd( -34.6012, -149.425, -8.59618, 0.96 ) }
    dend_28 { pt3dadd( -34.7316, -149.883, -8.38796, 1.18 ) }
    dend_28 { pt3dadd( -34.8912, -150.383, -8.20616, 1.18 ) }
    dend_28 { pt3dadd( -35.2116, -151.304, -8.0147, 0.59 ) }
    dend_28 { pt3dadd( -35.5019, -152.256, -7.95624, 0.52 ) }
    dend_28 { pt3dadd( -35.7412, -153.175, -7.97553, 0.52 ) }
    dend_28 { pt3dadd( -36.0437, -154.354, -8.0593, 0.66 ) }
    dend_28 { pt3dadd( -36.2256, -155.134, -8.13459, 0.66 ) }
    dend_28 { pt3dadd( -36.3897, -155.972, -8.23815, 0.81 ) }
    dend_28 { pt3dadd( -36.519, -157.186, -8.41632, 0.81 ) }
    dend_28 { pt3dadd( -36.4633, -158.07, -8.51794, 0.81 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 53/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -28.2252, -129.582, -7.28783, 0.37 ) }
    dend_27 { pt3dadd( -28.2505, -129.524, -6.08768, 0.37 ) }
    dend_27 { pt3dadd( -28.3567, -129.517, -4.52499, 0.37 ) }
    dend_27 { pt3dadd( -28.4389, -129.516, -3.78931, 0.37 ) }
    dend_27 { pt3dadd( -28.6864, -129.49, -2.17796, 0.29 ) }
    dend_27 { pt3dadd( -28.8644, -129.45, -1.22787, 0.29 ) }
    dend_27 { pt3dadd( -29.0754, -129.402, -0.101476, 0.29 ) }
    dend_27 { pt3dadd( -29.2725, -129.382, 0.98609, 0.37 ) }
    dend_27 { pt3dadd( -29.421, -129.397, 1.50629, 0.37 ) }
    dend_27 { pt3dadd( -29.6156, -129.428, 1.99875, 0.29 ) }
    dend_27 { pt3dadd( -29.9122, -129.433, 2.50045, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 64/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 26.4458, -148.463, 3.52915, 0.22 ) }
    dend_23 { pt3dadd( 25.7617, -149.372, 3.55815, 0.22 ) }
    dend_23 { pt3dadd( 24.7761, -150.68, 3.59993, 0.22 ) }
    dend_23 { pt3dadd( 24.2158, -151.424, 3.62368, 0.29 ) }
    dend_23 { pt3dadd( 23.9105, -151.83, 3.63662, 0.29 ) }
    dend_23 { pt3dadd( 23.1192, -152.88, 3.67016, 0.22 ) }
    dend_23 { pt3dadd( 22.6021, -153.567, 3.69208, 0.22 ) }
    dend_23 { pt3dadd( 18.3345, -162.314, 3.18676, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 72/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 26.4458, -148.463, 3.52915, 0.37 ) }
    dend_22 { pt3dadd( 26.3458, -149.76, 4.05685, 0.37 ) }
    dend_22 { pt3dadd( 26.139, -150.935, 4.365, 0.96 ) }
    dend_22 { pt3dadd( 25.765, -152.399, 4.56494, 0.59 ) }
    dend_22 { pt3dadd( 25.4376, -153.515, 4.58795, 0.59 ) }
    dend_22 { pt3dadd( 25.0904, -154.698, 4.61234, 0.22 ) }
    dend_22 { pt3dadd( 24.7597, -155.825, 4.63558, 0.22 ) }
    dend_22 { pt3dadd( 24.2924, -157.031, 4.54173, 0.22 ) }
    dend_22 { pt3dadd( 23.8305, -158.05, 4.30646, 0.22 ) }
    dend_22 { pt3dadd( 23.253, -159.096, 3.90391, 0.22 ) }
    dend_22 { pt3dadd( 21.7385, -169.561, 5.2977, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 83/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 83.8367, -21.6295, -47.5324, 0.37 ) }
    dend_6 { pt3dadd( 89.572, -17.7921, -55.217, 0.37 ) }
    dend_6 { pt3dadd( 90.5458, -17.0935, -56.4967, 0.66 ) }
    dend_6 { pt3dadd( 91.2933, -16.4793, -57.4649, 0.66 ) }
    dend_6 { pt3dadd( 91.65, -16.1614, -57.9149, 0.96 ) }
    dend_6 { pt3dadd( 92.5802, -15.269, -58.9982, 1.11 ) }
    dend_6 { pt3dadd( 93.7041, -14.1517, -60.175, 1.11 ) }
    dend_6 { pt3dadd( 95.3133, -12.4391, -61.1425, 0.81 ) }
    dend_6 { pt3dadd( 96.569, -11.0738, -61.6769, 1.4 ) }
    dend_6 { pt3dadd( 96.9797, -10.6224, -61.7823, 1.4 ) }
    dend_6 { pt3dadd( 98.5228, -8.95882, -61.8727, 0.37 ) }
    dend_6 { pt3dadd( 99.5719, -7.87394, -61.676, 0.37 ) }
    dend_6 { pt3dadd( 100.792, -6.71203, -61.1634, 0.37 ) }
    dend_6 { pt3dadd( 101.729, -5.86538, -60.5825, 0.66 ) }
    dend_6 { pt3dadd( 102.454, -5.1917, -60.0384, 0.66 ) }
    dend_6 { pt3dadd( 103.366, -4.15532, -59.2696, 0.29 ) }
    dend_6 { pt3dadd( 103.949, -3.2871, -58.6768, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_6 { pt3dadd( 104.314, -2.60779, -58.265, 0.52 ) }
    dend_6 { pt3dadd( 104.903, -1.40321, -57.6339, 0.29 ) }
    dend_6 { pt3dadd( 105.543, -0.127022, -57.0337, 1.03 ) }
    dend_6 { pt3dadd( 106.595, 1.81906, -56.2437, 0.66 ) }
    dend_6 { pt3dadd( 107.305, 3.06937, -55.7831, 0.44 ) }
    dend_6 { pt3dadd( 107.569, 3.51445, -55.6233, 0.66 ) }
    dend_6 { pt3dadd( 108.394, 4.89744, -55.1495, 0.37 ) }
    dend_6 { pt3dadd( 108.824, 5.57578, -54.892, 0.52 ) }
    dend_6 { pt3dadd( 109.679, 6.82606, -54.3283, 0.37 ) }
    dend_6 { pt3dadd( 110.281, 7.61422, -53.8582, 0.37 ) }
    dend_6 { pt3dadd( 110.929, 8.44214, -53.3472, 0.37 ) }
    dend_6 { pt3dadd( 111.591, 9.40223, -52.7719, 0.37 ) }
    dend_6 { pt3dadd( 112.16, 10.349, -52.202, 0.96 ) }
    dend_6 { pt3dadd( 112.397, 10.7448, -51.9581, 0.96 ) }
    dend_6 { pt3dadd( 113.383, 12.2816, -50.943, 0.29 ) }
    dend_6 { pt3dadd( 114.218, 13.5172, -50.129, 0.29 ) }
    dend_6 { pt3dadd( 115.027, 14.6578, -49.3835, 0.29 ) }
    dend_6 { pt3dadd( 115.718, 15.6147, -48.7703, 1.11 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 18/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 83.8367, -21.6295, -47.5324, 0.52 ) }
    dend_5 { pt3dadd( 83.8609, -17.1582, -50.9536, 0.52 ) }
    dend_5 { pt3dadd( 83.8529, -16.7838, -51.2179, 0.52 ) }
    dend_5 { pt3dadd( 83.7642, -15.0036, -52.3993, 0.37 ) }
    dend_5 { pt3dadd( 83.7393, -14.5053, -52.73, 0.29 ) }
    dend_5 { pt3dadd( 83.6642, -12.998, -53.7304, 0.29 ) }
    dend_5 { pt3dadd( 83.6003, -11.7165, -54.5809, 0.29 ) }
    dend_5 { pt3dadd( 83.4376, -10.3766, -55.0349, 0.29 ) }
    dend_5 { pt3dadd( 83.3647, -9.80112, -55.245, 0.52 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 27/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 68.1014, 94.0122, -109.969, 0.29 ) }
    dend_67 { pt3dadd( 66.7314, 95.9954, -112.897, 0.29 ) }
    dend_67 { pt3dadd( 66.3645, 96.3477, -113.875, 0.29 ) }
    dend_67 { pt3dadd( 65.8896, 96.7027, -115.295, 0.29 ) }
    dend_67 { pt3dadd( 65.0584, 97.3381, -117.866, 0.29 ) }
    dend_67 { pt3dadd( 64.7348, 97.6149, -118.83, 0.44 ) }
    dend_67 { pt3dadd( 64.2955, 97.9907, -120.139, 0.44 ) }
    dend_67 { pt3dadd( 62.9523, 98.8851, -124.018, 0.29 ) }
    dend_67 { pt3dadd( 62.3483, 99.2275, -125.904, 0.29 ) }
    dend_67 { pt3dadd( 62.0329, 99.3952, -127.034, 0.29 ) }
    dend_67 { pt3dadd( 61.5657, 99.6448, -128.765, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 38/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 68.1014, 94.0122, -109.969, 0.22 ) }
    dend_66 { pt3dadd( 67.5102, 93.2722, -109.552, 0.22 ) }
    dend_66 { pt3dadd( 67.0059, 92.7202, -109.217, 0.22 ) }
    dend_66 { pt3dadd( 66.3566, 92.0991, -108.791, 1.4 ) }
    dend_66 { pt3dadd( 65.6283, 91.4024, -108.312, 0.22 ) }
    dend_66 { pt3dadd( 64.8158, 90.6251, -107.779, 1.84 ) }
    dend_66 { pt3dadd( 64.104, 89.9443, -107.311, 0.22 ) }
    dend_66 { pt3dadd( 63.467, 89.4202, -106.866, 0.22 ) }
    dend_66 { pt3dadd( 62.8575, 88.9723, -106.434, 0.22 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 47/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 97.6177, 65.3584, -48.8864, 0.74 ) }
    dend_64 { pt3dadd( 97.5941, 65.8242, -48.5165, 0.74 ) }
    dend_64 { pt3dadd( 97.5253, 66.5532, -47.9038, 0.22 ) }
    dend_64 { pt3dadd( 97.4435, 66.9889, -47.5295, 0.22 ) }
    dend_64 { pt3dadd( 97.2164, 67.8302, -46.7742, 0.22 ) }
    dend_64 { pt3dadd( 96.9983, 68.5426, -46.058, 1.33 ) }
    dend_64 { pt3dadd( 96.8984, 68.8805, -45.6839, 1.33 ) }
    dend_64 { pt3dadd( 96.6895, 69.5192, -44.8667, 0.22 ) }
    dend_64 { pt3dadd( 96.5246, 69.9382, -44.2526, 0.22 ) }
    dend_64 { pt3dadd( 96.4035, 70.1879, -43.8542, 0.22 ) }
    dend_64 { pt3dadd( 96.0967, 70.7322, -43.0026, 0.22 ) }
    dend_64 { pt3dadd( 95.8987, 71.1154, -42.334, 0.22 ) }
    dend_64 { pt3dadd( 95.8178, 71.3746, -41.8976, 0.37 ) }
    dend_64 { pt3dadd( 95.7905, 71.6547, -41.4582, 0.37 ) }
    dend_64 { pt3dadd( 95.8338, 71.985, -40.9624, 0.37 ) }
    dend_64 { pt3dadd( 95.9001, 72.2577, -40.6035, 0.15 ) }
    dend_64 { pt3dadd( 96.0565, 73.0663, -39.6725, 0.22 ) }
    dend_64 { pt3dadd( 96.1684, 73.7565, -38.9316, 0.22 ) }
    dend_64 { pt3dadd( 96.2366, 74.2359, -38.4026, 0.22 ) }
    dend_64 { pt3dadd( 96.2911, 75.1117, -37.4517, 0.22 ) }
    dend_64 { pt3dadd( 96.2683, 75.711, -36.7755, 0.22 ) }
    dend_64 { pt3dadd( 96.1837, 76.448, -35.9017, 0.22 ) }
    dend_64 { pt3dadd( 96.1331, 76.713, -35.58, 0.74 ) }
    dend_64 { pt3dadd( 95.8568, 77.7561, -34.2378, 0.29 ) }
    dend_64 { pt3dadd( 95.6583, 78.3747, -33.4388, 0.29 ) }
    dend_64 { pt3dadd( 95.4529, 78.9883, -32.6688, 0.29 ) }
    dend_64 { pt3dadd( 95.3259, 79.4178, -32.0828, 0.29 ) }
    dend_64 { pt3dadd( 95.2376, 79.9055, -31.3304, 0.52 ) }
    dend_64 { pt3dadd( 95.1856, 80.3265, -30.6224, 0.37 ) }
    dend_64 { pt3dadd( 95.1537, 80.8666, -29.6779, 0.29 ) }
    dend_64 { pt3dadd( 95.1523, 80.9953, -29.4415, 0.37 ) }
    dend_64 { pt3dadd( 95.1489, 81.4969, -28.5189, 0.37 ) }
    dend_64 { pt3dadd( 95.1209, 82.1513, -27.2803, 0.37 ) }
    dend_64 { pt3dadd( 95.0837, 82.6373, -26.3085, 0.22 ) }
    dend_64 { pt3dadd( 95.073, 82.892, -25.7638, 0.22 ) }
    dend_64 { pt3dadd( 95.0606, 83.162, -25.1751, 0.74 ) }
    dend_64 { pt3dadd( 95.0435, 83.3187, -24.8543, 0.88 ) }
    dend_64 { pt3dadd( 94.9457, 83.8652, -23.9031, 0.59 ) }
    dend_64 { pt3dadd( 94.7464, 84.5744, -22.8793, 0.81 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 86/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 97.6177, 65.3584, -48.8864, 0.29 ) }
    dend_63 { pt3dadd( 99.0291, 65.9588, -49.6282, 0.29 ) }
    dend_63 { pt3dadd( 100.309, 66.3291, -50.5274, 0.29 ) }
    dend_63 { pt3dadd( 101.58, 66.6075, -51.5222, 1.03 ) }
    dend_63 { pt3dadd( 102.18, 66.7203, -52.0185, 1.03 ) }
    dend_63 { pt3dadd( 103.678, 66.9255, -53.2069, 0.44 ) }
    dend_63 { pt3dadd( 104.827, 67.0489, -54.0604, 0.29 ) }
    dend_63 { pt3dadd( 106.364, 67.0802, -55.1903, 0.96 ) }
    dend_63 { pt3dadd( 106.886, 67.0654, -55.5536, 0.96 ) }
    dend_63 { pt3dadd( 108.435, 67.0288, -56.5115, 0.22 ) }
    dend_63 { pt3dadd( 109.628, 67.0507, -57.1741, 0.22 ) }
    dend_63 { pt3dadd( 110.875, 67.1503, -57.726, 0.22 ) }
    dend_63 { pt3dadd( 112.233, 67.3472, -58.2501, 0.22 ) }
    dend_63 { pt3dadd( 113.804, 67.6925, -58.7928, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_63 { pt3dadd( 114.783, 67.9727, -59.116, 0.52 ) }
    dend_63 { pt3dadd( 115.582, 68.2953, -59.3572, 0.29 ) }
    dend_63 { pt3dadd( 116.572, 68.8704, -59.6243, 1.03 ) }
    dend_63 { pt3dadd( 117.21, 69.3776, -59.7115, 1.03 ) }
    dend_63 { pt3dadd( 117.751, 69.9905, -59.7018, 0.88 ) }
    dend_63 { pt3dadd( 118.28, 70.6872, -59.6085, 0.66 ) }
    dend_63 { pt3dadd( 118.919, 71.6353, -59.4127, 0.37 ) }
    dend_63 { pt3dadd( 119.543, 72.686, -59.1178, 0.59 ) }
    dend_63 { pt3dadd( 120.245, 74.0298, -58.661, 0.29 ) }
    dend_63 { pt3dadd( 120.845, 75.2241, -58.1721, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 10/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -36.4633, -158.07, -8.51794, 0.74 ) }
    dend_30 { pt3dadd( -36.6061, -158.677, -8.24423, 0.74 ) }
    dend_30 { pt3dadd( -36.8808, -159.575, -7.78149, 0.66 ) }
    dend_30 { pt3dadd( -37.1299, -160.166, -7.42703, 0.52 ) }
    dend_30 { pt3dadd( -37.5227, -160.884, -6.94795, 0.37 ) }
    dend_30 { pt3dadd( -37.7579, -161.277, -6.68472, 0.74 ) }
    dend_30 { pt3dadd( -37.9471, -161.612, -6.45803, 1.03 ) }
    dend_30 { pt3dadd( -38.2074, -162.055, -6.14589, 0.74 ) }
    dend_30 { pt3dadd( -38.5795, -162.695, -5.70363, 0.52 ) }
    dend_30 { pt3dadd( -38.939, -163.407, -5.26552, 0.52 ) }
    dend_30 { pt3dadd( -39.1685, -163.977, -4.98384, 0.66 ) }
    dend_30 { pt3dadd( -39.4664, -164.968, -4.611, 0.88 ) }
    dend_30 { pt3dadd( -39.5477, -165.321, -4.5118, 1.18 ) }
    dend_30 { pt3dadd( -39.6451, -165.887, -4.39438, 0.81 ) }
    dend_30 { pt3dadd( -39.7456, -166.69, -4.28257, 0.52 ) }
    dend_30 { pt3dadd( -39.8357, -167.367, -4.22987, 0.52 ) }
    dend_30 { pt3dadd( -39.9773, -168.171, -4.1964, 0.52 ) }
    dend_30 { pt3dadd( -40.0683, -168.553, -4.19634, 0.52 ) }
    dend_30 { pt3dadd( -40.2654, -169.303, -4.19698, 0.52 ) }
    dend_30 { pt3dadd( -40.4812, -170.046, -4.19164, 0.52 ) }
    dend_30 { pt3dadd( -40.6872, -170.671, -4.19149, 1.03 ) }
    dend_30 { pt3dadd( -40.8511, -171.125, -4.18727, 1.25 ) }
    dend_30 { pt3dadd( -41.0928, -171.689, -4.16924, 0.66 ) }
    dend_30 { pt3dadd( -41.375, -172.238, -4.13925, 0.29 ) }
    dend_30 { pt3dadd( -41.787, -172.778, -4.06257, 0.29 ) }
    dend_30 { pt3dadd( -42.0559, -172.708, -3.94828, 0.52 ) }
    dend_30 { pt3dadd( -42.7275, -172.226, -3.61742, 0.29 ) }
    dend_30 { pt3dadd( -43.2484, -171.772, -3.35625, 0.29 ) }
    dend_30 { pt3dadd( -43.7926, -171.208, -3.07511, 0.22 ) }
    dend_30 { pt3dadd( -43.8945, -171.086, -3.02258, 0.52 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 40/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -36.4633, -158.07, -8.51794, 0.22 ) }
    dend_29 { pt3dadd( -36.9877, -160.064, -9.05814, 0.22 ) }
    dend_29 { pt3dadd( -37.1948, -160.86, -9.28379, 0.22 ) }
    dend_29 { pt3dadd( -37.5444, -162.45, -9.72416, 0.22 ) }
    dend_29 { pt3dadd( -37.8896, -164.253, -10.1988, 0.22 ) }
    dend_29 { pt3dadd( -38.1692, -165.715, -10.5835, 0.22 ) }
    dend_29 { pt3dadd( -38.7121, -168.551, -11.3301, 0.22 ) }
    dend_29 { pt3dadd( -38.9636, -169.77, -11.6077, 0.22 ) }
    dend_29 { pt3dadd( -39.4475, -172.171, -12.1986, 0.22 ) }
    dend_29 { pt3dadd( -39.6702, -173.508, -12.5707, 0.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 115.718, 15.6147, -48.7703, 0.29 ) }
    dend_8 { pt3dadd( 116.797, 14.6073, -49.2149, 0.29 ) }
    dend_8 { pt3dadd( 117.418, 14.0278, -49.4706, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 53/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 115.718, 15.6147, -48.7703, 0.37 ) }
    dend_7 { pt3dadd( 116.214, 15.8401, -48.1369, 0.37 ) }
    dend_7 { pt3dadd( 116.798, 16.1054, -47.391, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_78 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_78 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_0 ModelViewParmSubset_3.append()
    dend_88 ModelViewParmSubset_3.append()
    dend_79 ModelViewParmSubset_3.append()
    dend_69 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_85 ModelViewParmSubset_3.append()
    dend_80 ModelViewParmSubset_3.append()
    dend_71 ModelViewParmSubset_3.append()
    dend_70 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_87 ModelViewParmSubset_3.append()
    dend_86 ModelViewParmSubset_3.append()
    dend_82 ModelViewParmSubset_3.append()
    dend_81 ModelViewParmSubset_3.append()
    dend_75 ModelViewParmSubset_3.append()
    dend_72 ModelViewParmSubset_3.append()
    dend_68 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_84 ModelViewParmSubset_3.append()
    dend_83 ModelViewParmSubset_3.append()
    dend_77 ModelViewParmSubset_3.append()
    dend_76 ModelViewParmSubset_3.append()
    dend_74 ModelViewParmSubset_3.append()
    dend_73 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_65 ModelViewParmSubset_3.append()
    dend_62 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_67 ModelViewParmSubset_3.append()
    dend_66 ModelViewParmSubset_3.append()
    dend_64 ModelViewParmSubset_3.append()
    dend_63 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_78 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_50 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_44 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_41 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_88 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_69 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_52 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_51 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_46 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_45 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_43 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_42 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_34 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_17 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_71 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_70 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_55 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_48 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_40 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_16 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_11 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_2 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_59 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_24 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_19 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_13 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_10 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_60 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_65 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_6 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_53 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_49 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_54 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_58 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_31 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_18 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_68 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_3 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_4 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_9 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_79 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_56 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_57 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_5 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_47 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_26 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_85 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_12 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_86 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_25 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_61 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_27 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_80 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_62 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_87 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_81 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_21 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_35 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_28 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_7 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_8 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_23 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_20 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_63 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_22 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_82 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_64 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_15 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_29 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_84 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_83 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_30 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_75 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_14 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_72 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_76 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_77 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_74 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_73 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_38 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_39 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_66 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_67 OneSecGrp_SectionRef_85.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_78 all.append()
    dend_78 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_78 nseg = 5
    dend_50 nseg = 7
    dend_44 nseg = 3
    dend_41 nseg = 5
    dend_32 nseg = 3
    dend_88 nseg = 5
    dend_69 nseg = 5
    dend_52 nseg = 3
    dend_51 nseg = 3
    dend_46 nseg = 3
    dend_45 nseg = 9
    dend_43 nseg = 3
    dend_42 nseg = 5
    dend_34 nseg = 3
    dend_33 nseg = 7
    dend_17 nseg = 3
    dend_71 nseg = 3
    dend_70 nseg = 3
    dend_55 nseg = 3
    dend_48 nseg = 3
    dend_40 nseg = 3
    dend_16 nseg = 3
    dend_11 nseg = 5
    dend_2 nseg = 3
    dend_59 nseg = 3
    dend_37 nseg = 3
    dend_24 nseg = 3
    dend_19 nseg = 5
    dend_13 nseg = 3
    dend_10 nseg = 3
    dend_60 nseg = 3
    dend_65 nseg = 3
    dend_6 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L5_ChC_03143d1e9b_0_0


