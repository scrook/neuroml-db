// Cell: cIR216_L6_NBC_38e0d4fd81_0_0
/*
{
  "id" : "cIR216_L6_NBC_38e0d4fd81_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.873478, -12.1204, -1.0889, 3.2264", "-0.698655, -10.9282, -0.984246, 5.56239", "-0.523832, -9.73588, -0.879587, 7.69458", "-0.349009, -8.5436, -0.774929, 10.6304", "-0.174186, -7.35132, -0.670271, 12.3889", "6.37175E-4, -6.15904, -0.565612, 13.0429", "0.17546, -4.96676, -0.460954, 13.3962", "0.350283, -3.77448, -0.356295, 13.6031", "0.525106, -2.5822, -0.251637, 13.7768", "0.699929, -1.38992, -0.146979, 13.7572", "0.874752, -0.197642, -0.0423202, 13.4519", "1.04958, 0.994638, 0.0623382, 13.1714", "1.2244, 2.18692, 0.166997, 12.4149", "1.39922, 3.3792, 0.271655, 11.5059", "1.57404, 4.57148, 0.376313, 10.5982", "1.74887, 5.76376, 0.480972, 9.84377", "1.92369, 6.95604, 0.58563, 9.16735", "2.09851, 8.14832, 0.690289, 7.18404", "2.27334, 9.34059, 0.794947, 5.28238", "2.44816, 10.5329, 0.899606, 3.93844", "2.62298, 11.7252, 1.00426, 2.5386" ]
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "3.61398, 12.209, -0.788928, 2.06", "3.61398, 12.209, -0.788928, 2.06", "3.82792, 13.2049, -0.788928, 2.06", "3.87165, 13.4085, -0.788928, 2.06", "4.14271, 14.6702, -0.788928, 2.06", "4.39355, 15.8379, -0.788928, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "3.65398, 10.1693, -2.84893, 1.77", "4.18888, 11.2815, -4.57797, 1.62", "4.64558, 12.0085, -5.53106, 1.62", "4.66284, 12.0317, -5.57253, 1.62", "5.0683, 12.4835, -6.55363, 1.47", "5.10927, 12.5192, -6.64702, 1.47", "6.10191, 13.1593, -8.79033, 1.47", "7.0201, 13.4416, -10.5327, 1.92", "8.69103, 13.779, -13.6954, 1.92", "9.25451, 13.8589, -14.7749, 1.92", "9.82605, 13.879, -15.8994, 1.92", "10.3739, 13.8664, -16.9963, 1.84", "11.1461, 13.7361, -18.5691, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-2.85602, 8.22182, 2.46107, 1.62", "-2.85602, 8.22182, 2.46107, 1.62", "-3.38335, 8.78395, 2.64655, 1.62", "-3.43077, 8.83384, 2.66205, 1.62", "-4.57379, 10.087, 3.01715, 1.84", "-5.49943, 11.1169, 3.29793, 1.84", "-6.49528, 12.225, 3.60001, 1.62", "-7.59812, 13.4561, 3.94147, 1.62", "-8.86493, 14.8787, 4.34796, 1.92", "-9.51224, 15.6145, 4.55756, 1.92", "-9.55676, 15.6674, 4.57233, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.07398, -9.03918, 1.15107, 2.21", "6.07398, -9.03918, 1.15107, 2.21", "6.51366, -9.83446, 2.29955, 1.84", "7.08922, -10.8755, 3.80298, 1.84", "7.10653, -10.9068, 3.84822, 1.84", "7.70144, -11.9829, 5.40218, 1.62", "8.32683, -13.1141, 7.03582, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.38602, -11.4172, -1.22893, 3.24", "-2.38602, -11.4172, -1.22893, 3.24", "-3.15217, -13.9488, -1.19817, 3.24", "-4.07828, -17.0089, -1.16098, 2.87" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.62298, 11.7252, 1.00426, 0.671034", "4.79915, 26.5665, 1.00426, 0.671034", "6.97531, 41.4078, 1.00426, 0.671034" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "4.39355, 15.8379, -0.788928, 1.47", "4.83789, 16.706, 0.233356, 1.47", "6.26433, 19.1175, 2.46273, 1.18", "6.29283, 19.163, 2.49401, 1.18", "7.07381, 20.2406, 3.02483, 1.18", "8.02894, 21.4371, 3.45622, 1.18", "8.06223, 21.4771, 3.46794, 1.18", "9.06038, 22.574, 3.5321, 1.4", "10.0961, 23.6278, 3.39879, 1.4", "11.2282, 24.8598, 3.24012, 1.18", "11.9635, 25.7312, 3.11724, 1.18", "12.0067, 25.7879, 3.11416, 1.18", "12.6217, 26.6406, 3.12502, 1.18", "12.6606, 26.6997, 3.1344, 1.18", "13.3532, 27.8477, 3.50649, 1.18", "13.3851, 27.9046, 3.53515, 1.18", "14.3129, 29.4227, 4.41373, 1.18", "14.3386, 29.4622, 4.43843, 1.18", "15.0126, 30.3915, 5.03511, 1.18", "15.6493, 31.2249, 5.55626, 1.18", "16.7782, 32.6315, 6.43552, 1.03", "17.7389, 33.8744, 7.14094, 1.03", "17.7675, 33.9142, 7.16202, 1.03", "18.623, 35.1229, 7.76955, 0.81", "19.3174, 36.1339, 8.22912, 0.81", "19.3441, 36.1763, 8.24766, 0.81", "20.3142, 37.8623, 8.906, 1.03", "21.1879, 39.6247, 9.63168, 1.03" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "4.39355, 15.8379, -0.788928, 1.11", "2.79377, 18.8833, -0.0719606, 1.11", "2.37413, 19.8819, -0.00152288, 1.11", "1.96973, 20.8443, 0.0663573, 1.03", "1.25614, 22.5424, 0.186137, 1.25", "1.22665, 22.6126, 0.191086, 1.25", "0.413553, 24.5476, 0.327568, 1.25", "-0.0584638, 25.8938, 0.0890835, 1.47" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "11.1461, 13.7361, -18.5691, 1.55", "12.3248, 9.59075, -22.1603, 1.55", "12.6983, 8.41871, -22.9004, 0.81", "13.0276, 7.34716, -23.3998, 0.81", "13.485, 5.7901, -24.0215, 0.81", "13.5068, 5.69222, -24.0638, 0.81", "13.6852, 4.42893, -24.7591, 1.11", "13.7529, 3.53298, -25.1411, 0.81", "13.6567, 2.34976, -25.9738, 0.59", "13.6313, 2.24165, -26.0759, 0.59", "13.1208, 0.759179, -27.6731, 0.59", "12.4686, -0.971899, -29.5613, 1.25", "12.4486, -1.01982, -29.6157, 1.25", "11.6789, -2.798, -31.6143, 1.18", "10.8414, -4.71769, -33.7952, 0.81", "10.0208, -6.70978, -35.9647, 0.52", "9.72867, -7.49164, -36.7426, 0.52", "9.70566, -7.55323, -36.7982, 0.52", "9.48965, -8.13932, -37.3136, 0.52" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "11.1461, 13.7361, -18.5691, 1.4", "13.4322, 13.1632, -19.1752, 1.4", "16.1403, 12.4845, -19.8933, 1.4", "16.2016, 12.4691, -19.9095, 1.4", "17.625, 12.1124, -20.2869, 1.4", "17.7626, 12.0779, -20.3234, 1.4" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-9.55676, 15.6674, 4.57233, 0.88", "-10.0197, 16.849, 4.93207, 0.88", "-10.2562, 17.5143, 5.1211, 0.88", "-10.6038, 18.6324, 5.40821, 0.88", "-11.1218, 20.465, 5.85187, 0.74", "-11.4096, 21.6561, 6.13689, 0.74", "-11.5612, 22.4096, 6.30603, 1.03", "-11.571, 22.4924, 6.3204, 1.03", "-11.6118, 23.393, 6.5027, 1.03", "-11.6116, 23.5098, 6.52812, 1.03", "-11.6472, 24.682, 6.87045, 0.88", "-11.8315, 25.88, 7.39183, 1.18", "-11.8498, 25.9429, 7.42541, 1.18", "-12.2997, 27.1127, 8.12028, 1.18", "-12.8185, 28.2007, 8.83716, 0.81", "-13.5254, 29.4804, 9.73614, 0.81", "-14.5125, 31.0446, 10.8668, 0.81", "-15.2292, 32.0945, 11.6366, 0.81", "-15.2653, 32.1467, 11.6731, 0.81", "-15.883, 33.0681, 12.246, 0.66", "-15.9159, 33.1258, 12.2773, 0.66", "-16.347, 34.2722, 12.6875, 0.66", "-16.3968, 34.5721, 12.7763, 0.66", "-16.4361, 35.5541, 13.1221, 0.96", "-16.4122, 36.6607, 13.5419, 0.96", "-16.3787, 37.0731, 13.7059, 0.96", "-16.318, 37.6435, 13.9469, 0.96", "-16.0992, 39.1135, 14.636, 0.81", "-15.8949, 40.3272, 15.2348, 0.81", "-15.6988, 41.2926, 15.743, 0.81", "-15.6803, 41.3867, 15.8004, 0.81" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-9.55676, 15.6674, 4.57233, 0.88", "-9.52627, 16.3704, 4.58378, 0.88", "-9.47539, 17.2064, 4.59114, 0.74", "-9.40168, 18.2118, 4.59347, 0.74", "-9.3954, 18.2915, 4.5929, 0.74", "-9.226, 20.0375, 4.5795, 0.74", "-9.09241, 21.2383, 4.57585, 0.88", "-9.01052, 21.9001, 4.55992, 0.88", "-8.98435, 22.0993, 4.55392, 0.88", "-8.86419, 23.0164, 4.52927, 0.74", "-8.72867, 24.1458, 4.54019, 0.74", "-8.58603, 25.4841, 4.59751, 0.74", "-8.47587, 26.7379, 4.68264, 1.62", "-8.37418, 28.0892, 4.79455, 1.62", "-8.28804, 29.6527, 4.97335, 1.33", "-8.24298, 30.7952, 5.13941, 0.96", "-8.2192, 31.8646, 5.31985, 0.96", "-8.20292, 32.7642, 5.49588, 0.96", "-8.201, 32.8422, 5.51314, 0.96", "-8.17628, 33.9823, 5.76503, 0.96", "-8.13035, 35.3018, 6.03003, 0.74", "-8.08062, 36.2966, 6.18534, 0.74", "-8.07581, 36.3756, 6.1965, 0.74", "-8.02196, 37.1216, 6.19684, 1.03", "-8.01506, 37.212, 6.18656, 1.03", "-7.95391, 38.0227, 6.00864, 1.03", "-7.94935, 38.0995, 5.98781, 1.03", "-7.86892, 39.4897, 5.45789, 1.03", "-7.76083, 41.3822, 4.60887, 1.03", "-7.75617, 41.4632, 4.56804, 1.03", "-7.66742, 42.9181, 3.78201, 1.03", "-7.66328, 42.987, 3.7429, 1.03", "-7.59213, 44.4571, 2.92616, 0.88", "-7.58891, 44.5364, 2.88211, 0.88", "-7.57517, 45.0803, 2.65141, 0.88", "-7.57501, 45.1548, 2.62338, 0.88", "-7.58044, 45.8758, 2.39704, 0.88", "-7.58611, 46.3142, 2.322, 0.88", "-7.59169, 47.1811, 2.28547, 0.88", "-7.59101, 47.261, 2.28287, 0.88", "-7.53515, 48.2, 2.27005, 0.88", "-7.50907, 48.5719, 2.26693, 0.88", "-7.39818, 49.8276, 2.2685, 0.88", "-7.25881, 51.1586, 2.29358, 1.03", "-7.24872, 51.2493, 2.29808, 1.03", "-7.05521, 52.766, 2.37521, 1.03" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "8.32683, -13.1141, 7.03582, 1.11", "10.6689, -16.8754, 8.01064, 1.11", "11.6541, -18.3952, 8.27083, 1.11", "11.7592, -18.5373, 8.25108, 1.11", "12.6946, -19.6125, 7.95719, 1.33", "14.0109, -20.9226, 7.48224, 1.11", "16.0981, -22.808, 6.74258, 1.11", "16.1569, -22.859, 6.71554, 1.11", "18.9953, -25.1134, 5.40056, 1.25", "21.1431, -26.7468, 4.3957, 1.55", "23.2082, -28.1723, 3.42263, 1.55", "24.4388, -28.9627, 2.81117, 1.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "8.32683, -13.1141, 7.03582, 1.47", "7.89808, -16.391, 11.6518, 1.47", "7.82717, -17.2238, 12.6668, 1.03", "7.85407, -17.814, 13.2237, 1.03", "8.00031, -18.8946, 14.0904, 0.88", "8.01134, -18.942, 14.1248, 0.88", "8.34754, -20.1501, 14.9601, 0.88", "8.36434, -20.1882, 14.9766, 0.88", "9.31864, -21.9426, 15.828, 0.88", "9.7878, -22.6364, 16.2282, 1.47", "10.7174, -23.8026, 17.002, 0.88", "10.7511, -23.8409, 17.0322, 0.88", "11.7032, -24.7533, 17.9152, 0.74", "11.7765, -24.8158, 17.9904, 0.74", "12.493, -25.3208, 18.8136, 0.74", "12.5382, -25.3479, 18.8639, 0.74", "13.2568, -25.7209, 19.7049, 1.33", "13.8212, -26.0125, 20.4484, 0.96", "14.6949, -26.4809, 21.6504, 1.11", "14.7228, -26.4969, 21.6906, 1.11", "15.1792, -26.8011, 22.3966, 1.11", "15.9263, -27.3839, 23.4822, 0.81", "16.4899, -27.8774, 24.2453, 1.25", "16.9335, -28.3771, 24.8694, 0.88", "16.9577, -28.4102, 24.9012, 0.88", "17.4651, -29.3059, 25.5768, 0.81", "17.7688, -30.1629, 26.0038, 0.81", "17.7838, -30.2346, 26.0202, 0.81", "17.8957, -31.4228, 26.1743, 0.81", "17.8963, -31.4677, 26.1786, 0.81", "17.8788, -32.2893, 26.2316, 0.81", "17.8803, -33.051, 26.313, 1.18", "17.9154, -33.8114, 26.4591, 0.88", "18.0898, -34.6684, 26.8263, 0.59", "18.328, -35.3022, 27.3876, 0.59", "18.3445, -35.3412, 27.4291, 0.59", "18.889, -36.4723, 28.8407, 0.59", "18.9061, -36.5063, 28.8859, 0.59", "19.5728, -37.7636, 30.459, 0.81", "20.1426, -38.8645, 31.775, 0.81", "20.4713, -39.5481, 32.5633, 0.81", "20.4928, -39.5938, 32.6163, 0.81", "20.9895, -40.7147, 33.8808, 0.74", "21.4984, -41.7562, 35.0428, 0.52", "22.1308, -42.938, 36.3003, 0.52", "22.1842, -43.014, 36.3851, 0.52", "22.9888, -43.9379, 37.5925, 0.52", "23.0137, -43.9664, 37.6277, 0.52", "23.3802, -44.4055, 38.1585, 0.52", "23.4301, -44.4829, 38.2394, 0.52", "23.7831, -45.203, 38.6706, 0.52", "23.8428, -45.3596, 38.7386, 0.52", "24.3397, -46.8027, 39.2355, 0.52", "24.6655, -47.6708, 39.5612, 0.52", "24.7533, -47.9078, 39.654, 0.52", "25.0295, -48.6645, 39.9546, 0.52", "25.0553, -48.7341, 39.983, 0.52", "25.5444, -49.6711, 40.427, 0.52", "25.9153, -50.0087, 40.6865, 0.88", "26.0011, -50.0622, 40.7319, 0.88" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-4.07828, -17.0089, -1.16098, 0.59", "-4.80026, -17.2124, -1.2938, 0.59", "-5.93682, -17.561, -1.36608, 0.59", "-7.33665, -18.0201, -1.35293, 0.59", "-7.88565, -18.2166, -1.32294, 0.59", "-9.8262, -19.0103, -1.16572, 0.88", "-10.7712, -19.4453, -1.10763, 0.88", "-11.8194, -19.9874, -1.02084, 0.96", "-12.706, -20.4897, -0.942861, 1.25", "-13.5635, -21.0329, -0.905159, 1.47", "-14.6693, -21.7086, -1.14039, 1.11", "-16.0064, -22.4695, -1.81146, 1.03", "-16.6386, -22.7992, -2.21911, 1.03", "-16.7077, -22.8322, -2.2705, 1.03", "-18.1178, -23.4813, -3.40113, 1.55", "-21.0302, -24.7982, -5.8307, 0.66", "-22.1468, -25.3249, -6.75911, 0.66", "-22.7729, -25.6658, -7.28209, 0.66", "-22.8149, -25.6937, -7.3161, 0.66", "-23.4597, -26.2123, -7.7987, 0.74", "-24.0077, -26.7833, -8.14487, 1.03", "-24.6517, -27.8182, -8.56254, 1.03", "-25.4591, -29.1999, -9.05831, 1.25", "-25.9234, -30.0063, -9.37567, 1.18", "-25.9758, -30.0906, -9.41116, 1.18", "-26.4031, -30.6519, -9.72688, 0.52", "-26.4448, -30.6872, -9.75407, 0.52", "-27.2147, -30.9744, -10.1796, 0.52", "-27.2697, -30.9823, -10.2036, 0.52", "-27.6793, -31.0079, -10.4106, 0.52", "-28.9717, -31.0541, -11.0765, 0.88", "-29.8927, -31.0689, -11.5544, 1.25", "-31.1317, -31.1007, -12.2194, 1.25", "-31.8039, -31.1265, -12.5922, 0.88", "-33.0135, -31.2572, -13.2558, 0.88", "-33.5441, -31.3926, -13.5753, 0.52", "-33.8387, -31.5438, -13.756, 0.52", "-34.048, -31.7159, -13.9304, 0.52", "-34.296, -31.9324, -14.1714, 0.52", "-34.759, -32.309, -14.6657, 0.52", "-35.6409, -32.981, -15.627, 0.88", "-36.2128, -33.3977, -16.2655, 1.25", "-37.8021, -34.4786, -17.9561, 1.62", "-39.1301, -35.3362, -19.2424, 1.55", "-40.2906, -36.046, -20.2876, 0.81", "-40.3554, -36.0841, -20.3412, 0.81", "-40.7185, -36.3086, -20.6005, 0.37", "-41.555, -36.9076, -21.1121, 0.37", "-42.5271, -37.8011, -21.4592, 0.37", "-42.5677, -37.8467, -21.4654, 0.37", "-43.159, -38.5175, -21.5647, 1.03", "-43.7364, -39.1574, -21.6835, 1.47", "-44.3501, -39.84, -21.8201, 0.96", "-44.827, -40.3733, -21.936, 0.29", "-46.1286, -41.8059, -22.2645, 0.29", "-47.8764, -43.683, -22.6918, 0.29", "-48.7527, -44.5779, -22.8924, 0.29", "-49.3535, -45.1559, -23.043, 2.06" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-4.07828, -17.0089, -1.16098, 2.36", "-4.15364, -17.2874, -1.19889, 2.36", "-4.42561, -18.2386, -1.29115, 2.36", "-4.89831, -19.8918, -1.45151, 1.99", "-5.347, -21.461, -1.60372, 1.99", "-5.74656, -22.8583, -1.73926, 2.14", "-6.1889, -24.4053, -1.88932, 3.02", "-6.45102, -25.2525, -1.96452, 3.02" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "6.97531, 41.4078, 1.00426, 1.18", "9.15148, 56.2491, 1.00426, 1.18", "11.3276, 71.0904, 1.00426, 1.18" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "21.1879, 39.6247, 9.63168, 0.74", "20.715, 43.188, 11.0224, 0.74", "20.7129, 43.2742, 11.0419, 0.74", "20.7896, 44.4209, 11.2704, 0.74", "20.9191, 45.4576, 11.4569, 0.59", "21.0947, 46.5254, 11.6262, 0.59", "21.259, 47.4067, 11.748, 0.59", "21.279, 47.4815, 11.7484, 0.59", "21.559, 48.5314, 11.806, 0.22", "21.7149, 49.095, 11.863, 0.81", "21.9026, 49.8128, 11.957, 1.03", "22.0691, 50.4181, 12.1024, 1.03", "22.3916, 51.5723, 12.4354, 0.81", "22.7489, 52.777, 12.8117, 0.59", "23.22, 54.3436, 13.305, 0.59", "23.2497, 54.4416, 13.3424, 0.59", "23.9427, 56.6739, 14.2939, 0.59", "23.9641, 56.7413, 14.3239, 0.59", "24.2224, 57.6154, 14.7431, 0.44", "24.4299, 58.5111, 15.2354, 0.44", "24.7174, 60.4556, 16.3084, 0.44", "24.7639, 61.0003, 16.5877, 0.96", "24.7626, 61.688, 16.8747, 0.96", "24.7139, 63.0151, 17.3958, 0.59", "24.6375, 64.2245, 17.8141, 0.29", "24.5713, 65.1264, 18.0668, 0.29", "24.5583, 65.2902, 18.0895, 0.29", "24.4475, 66.9968, 18.177, 0.29", "24.4454, 67.0852, 18.1713, 0.29", "24.4879, 68.1161, 17.9146, 0.29", "24.4994, 68.2718, 17.8581, 0.81", "24.5349, 69.0165, 17.5481, 0.81", "24.5264, 69.5123, 17.3158, 0.29", "24.3463, 70.3486, 16.8569, 0.29", "23.9896, 71.2219, 16.3292, 0.29", "23.8977, 71.3871, 16.2217, 0.29", "23.4279, 72.0733, 15.7064, 0.29", "23.1842, 72.3744, 15.4553, 0.29", "22.0527, 73.544, 14.3911, 0.29", "21.0468, 74.4216, 13.4955, 0.29", "20.9818, 74.4749, 13.4405, 0.29", "19.7643, 75.4521, 12.3875, 0.29", "19.6591, 75.5339, 12.293, 0.29", "19.0432, 75.9945, 11.7221, 0.29", "18.4833, 76.3603, 11.1793, 0.81", "17.7851, 76.7294, 10.5646, 0.81", "16.3046, 87.6502, 11.4914, 0.81", "14.6022, 98.2448, 14.0644, 0.81" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "21.1879, 39.6247, 9.63168, 1.03", "22.4403, 40.2987, 11.4569, 1.03", "23.2183, 40.7231, 12.5094, 0.74", "24.3461, 41.4563, 13.8218, 0.74", "24.3862, 41.4883, 13.8613, 0.74", "25.1603, 42.135, 14.3809, 0.52", "25.7321, 42.6143, 14.6264, 0.52", "25.8142, 42.6837, 14.6297, 0.52", "26.8836, 43.7177, 14.6459, 0.81", "27.6646, 44.5205, 14.6336, 1.11", "28.9726, 46.0334, 14.9191, 0.66", "29.5354, 46.777, 15.1851, 0.59", "30.0877, 47.5987, 15.8182, 0.59", "30.8407, 48.9015, 17.3607, 0.59", "30.8651, 48.9436, 17.432, 0.59", "31.5515, 50.0663, 19.704, 0.59", "31.5719, 50.1007, 19.7803, 0.59", "32.0807, 50.9238, 21.5192, 1.25", "32.1079, 50.9639, 21.5905, 1.25", "32.7782, 51.8329, 22.6584, 0.96", "33.8034, 53.0391, 23.7512, 0.66", "33.8701, 53.1099, 23.7966, 0.66", "34.84, 54.1298, 24.3228, 0.59", "35.9092, 55.2592, 24.7344, 0.59", "36.821, 56.2425, 25.0429, 0.59", "37.4504, 56.9547, 25.2091, 0.59", "37.7743, 57.2992, 25.2834, 0.59", "38.1754, 57.6859, 25.3959, 0.81", "38.876, 58.2879, 25.6263, 0.81", "39.1432, 58.4962, 25.7276, 0.81", "40.1629, 59.2846, 26.1741, 0.81", "41.1624, 60.0511, 26.6182, 0.44", "42.0319, 60.7096, 27.007, 0.44", "42.1187, 60.7744, 27.0456, 0.44", "42.9474, 61.4097, 27.4437, 0.81", "43.4367, 61.8044, 27.6856, 0.96", "44.0836, 62.379, 28.0325, 0.81", "44.1333, 62.4294, 28.0597, 0.81", "44.9562, 63.3658, 28.4355, 0.52", "45.8646, 64.452, 28.7935, 0.52", "46.3271, 65.0568, 28.9871, 0.81", "47.2128, 66.2838, 29.3693, 0.52", "47.344, 66.4728, 29.4366, 0.52", "48.8133, 68.5905, 30.2623, 0.37", "48.8552, 68.6492, 30.2869, 0.37", "49.8124, 69.9454, 30.8551, 0.37", "50.325, 70.6177, 31.1839, 1.03", "51.4506, 72.0212, 31.9538, 1.03", "51.4946, 72.0737, 31.9867, 1.03", "52.1899, 72.8721, 32.5957, 1.03", "52.2353, 72.9224, 32.6298, 1.03", "52.9559, 73.7054, 33.0512, 0.66", "53.0109, 73.7657, 33.081, 0.66", "53.5092, 74.3361, 33.2852, 0.66", "53.5849, 74.4277, 33.3173, 0.66", "54.0544, 75.0586, 33.5305, 0.66", "55.0375, 76.4082, 33.983, 0.29" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-0.0584638, 25.8938, 0.0890835, 0.96", "-0.0625378, 26.3182, 0.066664, 0.96", "-0.125885, 27.1924, 0.0214192, 0.74", "-0.311387, 28.3237, -0.0137247, 0.74", "-0.321621, 28.3729, -0.0149538, 0.74", "-0.576957, 29.3637, -0.0271428, 0.66", "-0.83888, 30.2815, -0.0316799, 0.66", "-0.887117, 30.411, -0.0249334, 0.66", "-1.35041, 31.1958, 0.0699371, 1.03", "-1.38003, 31.2346, 0.0797375, 1.03", "-1.78758, 31.7206, 0.269687, 1.03", "-1.82272, 31.7607, 0.292293, 1.03", "-2.20217, 32.1899, 0.567553, 0.81", "-2.9066, 33.0637, 1.18352, 0.81", "-3.39805, 33.7292, 1.6668, 0.81", "-3.93077, 34.5054, 2.28742, 0.66", "-4.41292, 35.2726, 2.9287, 0.66", "-4.43634, 35.3137, 2.96217, 0.66", "-4.90603, 36.2869, 3.7058, 1.03", "-5.15315, 36.9143, 4.1656, 1.03", "-5.46444, 37.8299, 4.83522, 0.96", "-5.58497, 38.2835, 5.16193, 0.96", "-5.71812, 38.957, 5.60649, 0.52", "-5.82564, 39.6539, 6.03765, 0.52", "-5.82985, 39.698, 6.06083, 0.52", "-5.85924, 40.684, 6.51835, 1.11", "-5.8492, 41.4375, 6.77521, 1.11", "-5.80979, 42.2186, 7.05795, 1.03", "-5.80668, 42.2654, 7.07554, 1.03", "-5.8148, 42.8227, 7.28423, 0.66", "-5.82206, 42.8774, 7.30364, 0.66", "-6.08247, 43.4589, 7.51028, 0.44", "-6.51599, 43.9863, 7.77595, 0.44", "-6.69924, 44.1462, 7.90006, 0.44", "-7.11477, 44.5213, 8.33423, 0.44", "-7.20678, 44.62, 8.47169, 0.44", "-7.59417, 45.1755, 9.22925, 0.44", "-7.60667, 45.2087, 9.27473, 0.44", "-7.70185, 45.9388, 10.1787, 0.74", "-7.64221, 46.9057, 11.3357, 0.52", "-7.54049, 47.4997, 11.9796, 0.66", "-7.42884, 47.988, 12.4704, 0.66", "-7.15986, 48.9535, 13.3134, 1.47", "-7.0559, 49.3273, 13.5979, 1.47", "-6.66526, 50.8399, 14.4664, 0.66", "-6.49025, 51.6527, 14.8332, 0.66", "-6.47047, 51.7667, 14.8808, 0.66", "-6.39103, 52.7456, 15.2573, 0.66", "-6.39049, 52.8002, 15.2782, 0.66", "-6.39422, 54.2982, 15.888, 0.66", "-6.39572, 54.345, 15.9061, 0.66", "-6.4447, 55.0568, 16.2762, 0.66", "-6.52622, 56.0893, 16.8953, 0.66", "-6.62016, 57.1074, 17.567, 0.88", "-6.62974, 57.2626, 17.6636, 0.88", "-6.62852, 58.1082, 18.1822, 0.88", "-6.5796, 59.2968, 18.8298, 1.11", "-6.54596, 59.7169, 19.0313, 0.88", "-6.48895, 60.3332, 19.3028, 0.59", "-6.45277, 61.4642, 19.7367, 0.59", "-6.47301, 62.3423, 20.0776, 0.44", "-6.51442, 62.9284, 20.2994, 0.44", "-6.52936, 63.0176, 20.3269, 0.44", "-6.7575, 63.7013, 20.5517, 0.44", "-6.92324, 64.0084, 20.6624, 0.44", "-7.14937, 64.2967, 20.7601, 0.44", "-7.26986, 64.4416, 20.7943, 0.44", "-7.43641, 64.7912, 20.849, 0.74", "-7.59949, 65.5007, 20.9193, 0.96", "-7.59889, 65.551, 20.921, 0.96", "-7.55528, 65.9171, 20.9227, 0.96", "-7.54406, 65.9746, 20.9216, 0.96", "-7.34723, 66.8906, 20.8941, 0.44", "-7.33685, 66.9483, 20.8923, 0.44", "-7.27841, 67.6923, 20.8812, 0.44", "-7.27894, 67.7814, 20.8807, 0.44", "-7.32541, 68.4026, 20.866, 0.44", "-7.40977, 69.011, 20.8421, 0.96", "-7.5955, 69.945, 20.8085, 0.96", "-7.89473, 71.0874, 20.7902, 0.96", "-8.09619, 71.7189, 20.7903, 0.96", "-8.27975, 72.2748, 20.7935, 0.44", "-8.57861, 73.1622, 20.8042, 0.44", "-8.93716, 74.2497, 20.8228, 0.44", "-9.2102, 75.1396, 20.8518, 0.44", "-9.23512, 75.2309, 20.8567, 0.44", "-9.39212, 75.895, 20.9171, 0.44", "-9.50002, 76.4262, 20.9869, 0.74", "-9.57488, 76.8681, 21.0536, 0.81", "-9.69049, 77.6176, 21.1753, 0.81", "-9.70201, 77.6992, 21.1897, 0.81", "-9.85824, 78.3869, 21.3354, 0.29", "-9.95848, 78.6664, 21.41, 0.29", "-10.0128, 78.7928, 21.4442, 0.29", "-10.2111, 79.2073, 21.5485, 0.29", "-10.2903, 79.3551, 21.5819, 0.29", "-10.4947, 79.7331, 21.6555, 0.29", "-10.538, 79.8093, 21.6682, 0.29", "-10.9175, 80.4984, 21.7741, 0.29", "-11.1116, 80.8547, 21.8333, 0.29", "-11.1425, 80.9129, 21.8435, 0.29", "-11.2563, 81.1219, 21.8853, 0.88", "-11.5019, 81.6628, 21.9814, 0.88", "-11.8493, 82.4338, 22.0943, 0.88", "-12.0513, 82.8482, 22.151, 0.88", "-12.078, 82.8997, 22.1575, 0.88", "-12.5115, 83.6832, 22.249, 0.29", "-13.1852, 84.851, 22.3729, 0.29", "-13.4962, 85.3848, 22.4101, 0.59", "-13.8335, 85.9474, 22.4283, 0.59", "-14.0934, 86.3776, 22.4299, 0.29", "-14.4182, 86.8851, 22.4276, 0.29", "-14.4858, 86.9799, 22.4271, 0.29", "-14.8865, 87.469, 22.4392, 0.29", "-14.9387, 87.5401, 22.4435, 0.29", "-15.2698, 88.0112, 22.4691, 0.29", "-15.3977, 88.1914, 22.4833, 0.29", "-15.6624, 88.5729, 22.5712, 0.29", "-15.6991, 88.6253, 22.589, 0.29", "-16.1503, 89.2548, 22.8484, 0.29", "-16.3325, 89.5032, 22.9577, 1.11", "-16.7209, 90.0237, 23.1959, 1.33", "-17.3152, 90.8385, 23.5712, 0.74", "-17.7396, 91.4516, 23.8188, 0.44", "-18.1718, 92.1091, 24.0418, 0.44", "-18.271, 92.2678, 24.0851, 0.44", "-18.4242, 92.5243, 24.1357, 0.44", "-18.4884, 92.6314, 24.1394, 0.44", "-18.9836, 93.4559, 24.0545, 0.44", "-19.3235, 94.0174, 23.9793, 1.11", "-19.6617, 94.5786, 23.8946, 1.55", "-19.9178, 95.0257, 23.829, 1.55", "-20.464, 96.0102, 23.6914, 0.22", "-20.7947, 96.643, 23.6135, 0.22", "-21.1211, 97.3076, 23.5504, 0.22", "-21.1567, 97.3886, 23.543, 0.22", "-21.4419, 98.1302, 23.4917, 0.22", "-21.5232, 98.366, 23.4876, 0.22", "-21.6959, 98.951, 23.5208, 0.22", "-21.8403, 99.371, 23.5533, 0.96", "-21.9257, 99.5969, 23.5731, 0.96", "-22.0773, 99.9479, 23.6227, 0.22", "-22.2874, 100.371, 23.7039, 0.22", "-22.3622, 100.522, 23.7359, 0.22", "-22.9577, 101.754, 24.0119, 0.22", "-23.0043, 101.866, 24.043, 0.22", "-23.2338, 102.476, 24.237, 0.81", "-23.2512, 102.528, 24.2553, 0.81", "-23.4334, 103.139, 24.4891, 1.33", "-23.5356, 103.52, 24.649, 1.33", "-23.7785, 104.266, 25.0452, 0.15", "-23.9235, 104.625, 25.2509, 0.15", "-23.9608, 104.694, 25.2902, 0.15", "-24.3361, 105.314, 25.6436, 0.15", "-24.3923, 105.393, 25.6902, 0.15", "-25.6139, 106.957, 26.5955, 0.15", "-25.701, 107.057, 26.6423, 0.15", "-26.8861, 108.264, 27.1151, 0.15", "-26.9794, 108.349, 27.1423, 1.03", "-27.44, 108.717, 27.2223, 1.03", "-27.4865, 108.752, 27.2262, 1.03", "-28.6391, 109.422, 27.1002, 0.15", "-29.5771, 109.919, 26.9492, 0.15", "-29.6963, 109.966, 26.916, 0.59", "-30.1276, 110.142, 26.7935, 0.59", "-33.3825, 117.723, 28.0684, 0.59", "-38.3231, 124.333, 29.036, 0.59", "-43.4216, 130.454, 31.3293, 0.59", "-48.6224, 136.581, 33.363, 0.59", "-54.0821, 142.278, 35.8551, 0.59", "-58.3945, 149.048, 38.0206, 0.59", "-62.811, 155.924, 39.5747, 0.59" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-0.0584638, 25.8938, 0.0890835, 0.66", "-0.685121, 26.5051, -0.291979, 0.66", "-1.64575, 27.121, -0.808309, 0.52", "-2.23269, 27.4327, -1.0724, 0.52", "-2.29092, 27.4635, -1.09447, 0.52", "-3.36113, 28.0321, -1.46629, 0.52", "-3.49871, 28.1088, -1.51307, 0.52", "-5.12103, 29.1167, -2.04393, 0.88", "-5.72691, 29.582, -2.21285, 0.96", "-6.35312, 30.2637, -2.36955, 0.96", "-6.394, 30.3201, -2.37847, 0.96", "-6.92568, 31.2391, -2.49388, 0.66", "-7.57205, 32.5044, -2.64887, 0.66", "-8.15829, 33.8099, -2.78797, 0.66", "-9.0206, 35.6362, -2.97072, 0.66", "-9.05362, 35.698, -2.97785, 0.66", "-9.8259, 36.9619, -3.121, 0.44", "-10.3835, 37.7401, -3.19822, 0.44", "-10.9724, 38.4093, -3.26049, 0.88", "-11.9324, 39.3529, -3.3557, 0.88", "-12.7754, 40.1291, -3.42543, 0.44", "-13.3473, 40.6662, -3.46168, 0.96", "-13.9198, 41.2054, -3.47886, 1.25", "-14.6766, 41.9261, -3.50126, 1.25", "-15.612, 42.8299, -3.4582, 0.52", "-16.4631, 43.6939, -3.32971, 0.29", "-16.617, 43.865, -3.28655, 0.29", "-17.1507, 44.4958, -3.0978, 0.29", "-17.5216, 44.9792, -2.93555, 0.29", "-18.2111, 45.989, -2.56474, 0.29", "-18.6871, 46.7994, -2.263, 0.29", "-18.9729, 47.3791, -2.08456, 0.29", "-19.1757, 47.8627, -1.97261, 0.29", "-19.5092, 48.8231, -1.82012, 0.66", "-19.7253, 49.5374, -1.7432, 0.96", "-20.0217, 50.5782, -1.69273, 0.96", "-20.1984, 51.2352, -1.65517, 0.96", "-20.3771, 51.8963, -1.60943, 0.52", "-20.5219, 52.3885, -1.56636, 0.37", "-20.6627, 52.8063, -1.479, 0.37", "-20.7189, 52.9451, -1.43046, 0.37", "-21.0658, 53.6108, -1.09346, 0.37", "-21.2136, 53.8452, -0.951724, 0.37", "-21.5224, 54.2896, -0.673334, 0.37", "-22.2813, 55.3338, -0.0223078, 0.37", "-22.3939, 55.487, 0.0714748, 0.37", "-23.002, 56.287, 0.47993, 0.37", "-23.3782, 56.7609, 0.664254, 0.66", "-23.8737, 57.3876, 0.825668, 0.66", "-24.5792, 58.3127, 0.916523, 0.66", "-24.621, 58.3691, 0.913234, 0.66", "-25.5229, 59.6921, 0.779425, 0.29", "-25.963, 60.3885, 0.669423, 0.29", "-26.0743, 60.576, 0.633192, 0.29", "-26.5244, 61.406, 0.458924, 0.88", "-26.8396, 62.0705, 0.320424, 0.88", "-27.0098, 62.4856, 0.276527, 0.88", "-27.2052, 63.0613, 0.281732, 0.37", "-27.2291, 63.1385, 0.283352, 0.37", "-27.3873, 63.6276, 0.310246, 0.37", "-27.4596, 63.8361, 0.333385, 0.37", "-27.9379, 65.0194, 0.521883, 0.37", "-27.9669, 65.083, 0.530383, 0.37", "-28.212, 65.5779, 0.589984, 1.11", "-28.811, 66.7093, 0.706377, 1.11", "-29.4031, 67.7617, 0.80188, 1.11", "-30.045, 68.8412, 0.839191, 1.11", "-30.5432, 69.6432, 0.8247, 1.11", "-30.7655, 69.9895, 0.804225, 0.44", "-31.3732, 70.8099, 0.746821, 0.44", "-31.5428, 71.0152, 0.731639, 0.44", "-32.4377, 72.0295, 0.678343, 0.44", "-32.4851, 72.0811, 0.678514, 0.44", "-33.1142, 72.7668, 0.741452, 0.44", "-34.8818, 74.7055, 1.01001, 0.44", "-35.2767, 75.1359, 1.08906, 1.33", "-35.8122, 75.7554, 1.2246, 1.62", "-36.4675, 76.6016, 1.44247, 0.96", "-36.8755, 77.1839, 1.58633, 0.37", "-37.4627, 78.1145, 1.80838, 0.37", "-37.5004, 78.1838, 1.82391, 0.37", "-38.382, 79.8823, 2.17617, 0.37", "-39.0755, 81.2779, 2.43359, 0.37", "-39.4593, 82.0772, 2.56457, 0.74", "-39.6625, 82.5003, 2.62455, 0.29", "-39.7325, 82.6501, 2.64568, 0.29", "-40.4537, 84.2221, 2.86401, 0.29", "-40.5136, 84.3596, 2.88203, 0.29", "-40.8267, 85.0914, 2.96842, 1.55", "-41.1513, 85.8964, 3.05947, 1.62", "-41.429, 86.5878, 3.13517, 1.03", "-41.4561, 86.6525, 3.14222, 1.03", "-41.7019, 87.2112, 3.20243, 0.37", "-41.7311, 87.275, 3.20901, 0.37", "-42.119, 88.0693, 3.28666, 0.37", "-42.5921, 88.9779, 3.37869, 1.11", "-42.9757, 89.6962, 3.46438, 1.11", "-43.175, 90.062, 3.51485, 0.52", "-43.25, 90.2092, 3.53574, 0.52", "-43.534, 90.8193, 3.61988, 0.52", "-43.6563, 91.1054, 3.65811, 0.52", "-43.8681, 91.6537, 3.72688, 0.52", "-44.04, 92.1198, 3.78115, 1.11", "-44.4638, 93.2992, 3.90845, 1.11", "-44.6865, 93.8907, 3.96988, 0.37", "-45.0116, 94.7136, 4.05162, 0.37", "-45.1007, 94.9155, 4.07177, 0.37", "-45.5037, 95.7377, 4.15206, 0.37", "-45.6644, 96.0328, 4.18271, 0.37", "-46.1878, 96.8772, 4.28343, 0.37", "-46.5314, 97.3948, 4.34904, 0.88", "-46.9153, 97.9462, 4.42163, 0.88", "-46.956, 98.0029, 4.4293, 0.88", "-47.091, 98.1847, 4.45594, 0.29", "-47.18, 98.3045, 4.47413, 0.29", "-47.8842, 99.2743, 4.62243, 0.29", "-47.9255, 99.3309, 4.62697, 0.29", "-48.4387, 99.9986, 4.64626, 0.81", "-48.804, 100.448, 4.6456, 1.11", "-49.0261, 100.688, 4.64291, 1.11", "-49.0771, 100.736, 4.64164, 1.11", "-49.8181, 101.31, 4.62221, 0.22", "-50.3331, 101.672, 4.62114, 0.22", "-50.4225, 101.728, 4.6223, 0.22", "-51.2041, 102.233, 4.64998, 0.22", "-51.383, 102.358, 4.65905, 0.22", "-51.9488, 102.798, 4.70641, 0.22", "-52.2958, 103.119, 4.75859, 0.22", "-52.3619, 103.193, 4.76626, 0.66", "-52.67, 103.601, 4.76496, 0.66", "-52.975, 104.087, 4.72778, 0.15", "-53.0884, 104.267, 4.71279, 0.15", "-53.5365, 104.979, 4.64627, 0.15", "-53.618, 105.106, 4.64169, 0.15", "-54.0183, 105.707, 4.65197, 0.59", "-54.6985, 106.634, 4.74012, 0.59", "-55.0612, 107.104, 4.82444, 0.59", "-55.1104, 107.166, 4.83909, 0.59", "-55.5234, 107.674, 4.98944, 0.22", "-55.5669, 107.726, 5.0057, 0.22", "-56.0043, 108.234, 5.17398, 0.22", "-56.2477, 108.506, 5.24629, 0.22", "-56.8602, 109.188, 5.38327, 0.22", "-57.1206, 109.487, 5.42972, 0.22", "-57.3525, 109.752, 5.46197, 0.74", "-57.9638, 110.453, 5.5406, 0.74", "-58.3395, 110.887, 5.58636, 0.22", "-58.43, 110.993, 5.59714, 0.22", "-59.8413, 112.628, 5.77877, 0.22", "-60.0592, 112.865, 5.79049, 0.81", "-60.8012, 113.635, 5.79494, 0.81", "-60.8499, 113.685, 5.79019, 0.81", "-61.0853, 113.92, 5.74739, 0.15", "-61.9547, 114.753, 5.52552, 0.15", "-62.9002, 115.616, 5.18, 0.66", "-63.1974, 115.906, 5.06901, 0.66", "-63.9761, 116.727, 4.77105, 0.15", "-64.2379, 117.024, 4.67873, 0.37", "-64.4114, 117.227, 4.61017, 0.15", "-64.4519, 117.281, 4.59144, 0.15", "-65.0769, 118.189, 4.38169, 0.15", "-65.2437, 118.431, 4.32592, 1.03", "-65.5754, 118.872, 4.18389, 1.03", "-66.1741, 119.664, 3.87821, 0.22", "-66.2144, 119.716, 3.85504, 0.22", "-67.0488, 120.773, 3.27832, 0.22", "-67.0877, 120.823, 3.24925, 0.22", "-67.7232, 121.68, 2.78499, 0.88", "-68.0126, 122.109, 2.62078, 0.88", "-68.0479, 122.169, 2.61719, 0.88", "-68.3309, 122.696, 2.70936, 0.22", "-68.9412, 123.917, 3.07218, 0.22", "-68.9707, 123.977, 3.09376, 0.22", "-69.4608, 124.974, 3.52046, 0.22", "-70.1069, 126.18, 4.04544, 0.22", "-70.6651, 127.165, 4.47537, 0.22", "-71.0766, 127.87, 4.77834, 1.11", "-71.1529, 127.997, 4.83134, 1.11", "-71.371, 128.348, 4.95753, 0.22", "-72.0777, 129.42, 5.19433, 0.22", "-72.296, 129.721, 5.22398, 0.66", "-72.8149, 130.396, 5.28518, 0.66" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "17.7626, 12.0779, -20.3234, 0.81", "18.3635, 12.0247, -21.5001, 0.81", "18.3909, 12.0265, -21.5479, 0.81", "18.6901, 12.0625, -22.0523, 0.81", "18.8256, 12.0945, -22.2661, 0.81", "19.2758, 12.2334, -22.9507, 0.52", "21.0028, 12.9055, -25.4562, 0.81", "21.4768, 13.179, -26.0737, 0.81", "21.5094, 13.1999, -26.1133, 0.81", "22.0258, 13.5784, -26.7199, 0.81", "22.0889, 13.6251, -26.788, 0.81", "22.4589, 13.8591, -27.1191, 0.81", "23.1395, 14.1348, -27.4387, 0.52", "23.4277, 14.135, -27.8925, 0.52", "23.4999, 14.1332, -28.0141, 0.52", "23.8771, 14.0813, -28.7144, 0.81", "24.5109, 13.9589, -29.9854, 0.81", "24.5303, 13.9537, -30.0293, 0.81", "25.5217, 13.6655, -32.5905, 0.74", "25.8074, 13.6226, -33.3767, 1.84" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "17.7626, 12.0779, -20.3234, 1.4", "17.7995, 12.0919, -20.2878, 1.4", "20.3238, 13.0533, -18.259, 0.96", "20.5059, 13.1238, -18.1452, 0.96", "21.8327, 13.6325, -17.4916, 0.96", "21.9114, 13.6635, -17.46, 0.96", "23.3251, 14.2254, -16.9571, 0.96", "23.3829, 14.2495, -16.9443, 0.96", "24.528, 14.7759, -16.9017, 1.18", "25.4358, 15.2274, -16.8681, 0.88", "26.283, 15.6816, -16.8394, 0.88", "26.3389, 15.7126, -16.8376, 0.88", "26.8398, 15.9977, -16.8527, 0.88", "27.5409, 16.4041, -16.9012, 0.88", "27.5958, 16.4365, -16.9067, 0.88", "29.3247, 17.4507, -17.0918, 0.88", "29.403, 17.4953, -17.1002, 0.88", "31.1948, 18.4498, -17.3524, 1.18", "32.4673, 19.0978, -17.5621, 1.18", "32.783, 19.2531, -17.6195, 1.18", "34.1612, 19.9629, -17.8862, 1.18", "34.4069, 20.0953, -17.9383, 1.18", "36.055, 20.9282, -18.2463, 1.18", "36.2392, 21.0045, -18.271, 1.18", "36.7075, 21.151, -18.3257, 0.52", "37.9062, 21.406, -18.42, 0.52", "37.9696, 21.413, -18.4222, 0.52", "39.168, 21.467, -18.3962, 0.88", "40.4891, 21.4347, -18.276, 0.88", "40.7262, 21.425, -18.2593, 0.88", "41.6413, 21.3805, -18.2101, 1.25", "41.8417, 21.3763, -18.2021, 1.25", "42.7139, 21.4441, -18.1793, 1.25", "42.8397, 21.4651, -18.1778, 1.25", "44.261, 21.7913, -18.2327, 1.11", "45.6941, 22.1623, -18.33, 1.11", "46.8415, 22.4588, -18.4231, 0.81", "48.1247, 22.7765, -18.5356, 0.81", "48.3302, 22.8189, -18.5519, 0.81", "50.1603, 23.1251, -18.6712, 0.81", "50.2562, 23.1377, -18.6762, 0.81", "52.2864, 23.328, -18.7638, 0.81", "52.3832, 23.3329, -18.7658, 0.81", "54.5366, 23.3746, -18.7598, 0.81", "55.4042, 23.4041, -18.7839, 0.96", "55.6142, 23.4136, -18.7935, 0.96", "56.5588, 23.479, -18.8731, 0.74", "57.8201, 23.6037, -19.0215, 0.74", "57.8829, 23.6111, -19.0298, 0.74", "60.4995, 23.9557, -19.5083, 0.74", "61.3002, 24.0617, -19.6668, 1.4", "62.9391, 24.2751, -20.0091, 1.77", "63.9091, 24.4018, -20.2292, 1.77", "64.1732, 24.435, -20.2915, 1.77", "65.5744, 24.599, -20.5828, 1.55" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-15.6803, 41.3867, 15.8004, 0.44", "-17.3428, 41.9047, 16.6312, 0.44", "-18.8661, 42.436, 17.3466, 0.44", "-20.5639, 43.0664, 18.1198, 0.44", "-20.6258, 43.09, 18.1467, 0.44", "-22.484, 43.8084, 18.9322, 0.74", "-23.2408, 44.0834, 19.2352, 0.74", "-23.7214, 44.2699, 19.3906, 0.37", "-23.7863, 44.2911, 19.4117, 0.37", "-24.6853, 44.5285, 19.6202, 0.37", "-24.7434, 44.5399, 19.6356, 0.37", "-25.7727, 44.694, 19.9255, 0.37", "-25.8612, 44.7077, 19.9542, 0.37", "-27.1428, 44.9645, 20.46, 0.37", "-27.2268, 44.9855, 20.4968, 0.37", "-28.4803, 45.3949, 21.0469, 0.37", "-29.1182, 45.6568, 21.2912, 0.37", "-29.1874, 45.6954, 21.312, 0.37", "-30.1869, 46.3009, 21.513, 0.37", "-30.247, 46.3391, 21.5215, 0.37", "-31.1843, 46.9016, 21.5998, 0.59", "-32.1018, 47.4217, 21.6173, 0.59", "-33.2901, 48.0232, 21.6211, 0.81", "-34.3155, 48.5243, 21.6114, 0.81", "-35.2828, 48.995, 21.5837, 0.29", "-35.7489, 49.2288, 21.5802, 0.29", "-35.8845, 49.2999, 21.5906, 0.29", "-36.9391, 49.8061, 21.7515, 0.29", "-37.0926, 49.8704, 21.7816, 0.29", "-38.0086, 50.2114, 21.9666, 0.59", "-38.7115, 50.4277, 22.0949, 0.59", "-40.2727, 50.8272, 22.3862, 0.15", "-41.3708, 51.0618, 22.5756, 0.37", "-41.7406, 51.122, 22.6347, 0.74", "-42.4191, 51.1907, 22.76, 0.37", "-42.9725, 51.1972, 22.8798, 0.37", "-43.0512, 51.1955, 22.9012, 0.37", "-43.5612, 51.2306, 23.084, 0.22", "-43.6612, 51.311, 23.1807, 0.22", "-44.2772, 52.0806, 23.9881, 0.22", "-44.3244, 52.1441, 24.0525, 0.22", "-44.8123, 52.8222, 24.6851, 0.22", "-44.9513, 52.9666, 24.863, 0.22", "-45.261, 53.2002, 25.2282, 0.22", "-45.3096, 53.2275, 25.2733, 0.22", "-46.4242, 53.7524, 26.1625, 0.74", "-46.8751, 53.9331, 26.479, 0.74", "-48.7964, 54.5861, 27.6868, 0.59", "-50.1318, 55.0051, 28.4385, 0.37", "-51.4642, 55.3367, 29.1545, 0.37", "-51.5359, 55.3438, 29.1927, 0.37", "-52.2158, 55.2875, 29.5986, 0.37", "-52.3361, 55.2693, 29.6732, 0.37", "-53.3169, 55.063, 30.2777, 0.37", "-54.6377, 54.7976, 31.2591, 0.88", "-56.3744, 54.5508, 32.9092, 0.88", "-57.8226, 54.5448, 34.7885, 0.37", "-58.4425, 54.6335, 35.8356, 0.37", "-58.4925, 54.6453, 35.9311, 0.37", "-59.1681, 54.961, 37.5512, 0.37", "-59.5644, 55.4487, 38.821, 0.37", "-59.9596, 56.663, 40.9443, 0.37", "-59.9607, 56.7001, 41.0061, 0.37", "-68.5467, 57.5934, 46.4328, 0.37" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-15.6803, 41.3867, 15.8004, 0.52", "-15.8893, 42.4275, 16.5655, 0.52", "-16.1643, 43.2345, 17.1045, 0.52", "-16.1844, 43.2776, 17.137, 0.52", "-16.6734, 44.0996, 17.8282, 0.52", "-16.714, 44.1632, 17.8871, 0.52", "-17.2, 44.9611, 18.611, 0.52", "-17.7096, 45.7328, 19.3156, 0.74", "-18.2884, 46.6475, 20.137, 0.74", "-18.8274, 47.685, 21.0219, 0.59", "-19.1905, 48.5306, 21.8157, 0.59", "-19.4676, 49.2929, 22.6099, 0.66", "-19.4805, 49.3367, 22.6589, 0.66", "-19.5938, 49.8961, 23.3049, 0.66", "-19.7723, 51.3686, 24.9755, 0.52", "-19.8285, 53.039, 26.8497, 0.52", "-19.7958, 53.8624, 27.7558, 0.52", "-19.789, 53.931, 27.8307, 0.52", "-19.7257, 54.5098, 28.4042, 0.52", "-19.7094, 54.628, 28.5091, 0.52", "-19.5126, 55.673, 29.1456, 0.96", "-19.3199, 56.5646, 29.4559, 0.96", "-19.2561, 57.116, 29.6183, 0.52", "-19.2631, 58.1208, 29.9432, 0.52", "-19.2758, 58.1839, 29.9642, 0.52", "-19.5719, 59.0901, 30.2372, 0.74", "-19.6038, 59.1578, 30.2561, 0.74", "-20.0516, 60.0956, 30.6104, 0.74", "-20.0734, 60.1537, 30.6369, 0.74", "-20.3311, 61.0552, 31.0759, 0.37", "-20.4789, 61.5835, 31.3973, 0.37", "-20.4921, 61.6323, 31.4255, 0.37", "-20.8431, 63.0194, 32.1802, 0.37", "-21.0019, 63.7067, 32.5916, 0.59", "-21.3199, 64.841, 33.2956, 0.81", "-21.8848, 66.3537, 34.3743, 0.52", "-22.3018, 67.2609, 35.0759, 0.52", "-22.8386, 68.2089, 35.8479, 0.52", "-23.5505, 69.1458, 36.6312, 0.29", "-24.1434, 69.7355, 37.2184, 0.29", "-25.1114, 70.4374, 38.0758, 0.29", "-25.199, 70.4883, 38.1467, 0.29", "-25.7169, 70.722, 38.589, 0.15", "-26.5586, 70.9908, 39.2526, 0.15", "-27.5739, 71.3041, 39.9139, 0.81", "-28.0751, 71.4872, 40.2596, 0.81", "-31.8779, 79.4263, 44.1686, 0.81" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-7.05521, 52.766, 2.37521, 0.66", "-6.82611, 53.1105, 2.30747, 0.66", "-6.56112, 53.6254, 2.16748, 0.66", "-6.48433, 53.8237, 2.11327, 0.66", "-6.05371, 55.131, 1.75972, 0.66", "-6.03433, 55.2173, 1.74009, 0.66", "-5.81618, 56.5467, 1.44989, 0.66", "-5.75054, 57.2257, 1.29012, 0.66", "-5.73309, 57.9005, 1.15404, 0.29", "-5.73407, 57.9899, 1.13856, 0.29", "-5.77558, 59.4171, 0.868386, 0.29", "-5.77958, 60.0619, 0.750164, 0.29", "-5.77856, 60.1515, 0.736022, 0.29", "-5.70275, 61.7367, 0.465065, 0.29", "-5.68744, 61.9473, 0.427349, 0.29", "-5.51954, 63.7773, 0.106687, 0.29", "-5.50797, 63.8661, 0.0929281, 0.29", "-5.43332, 64.5217, -0.00484977, 0.96", "-5.3029, 65.7515, -0.144945, 0.96", "-5.28932, 65.8541, -0.152236, 0.96", "-5.17637, 66.6041, -0.179693, 0.81", "-4.92508, 68.2359, -0.179181, 0.59", "-4.61234, 70.2102, -0.1811, 0.52", "-4.47834, 71.086, -0.223757, 0.37", "-4.22588, 73.0571, -0.394496, 0.37", "-4.10757, 74.112, -0.514545, 1.03", "-4.02327, 74.9768, -0.634349, 1.03", "-4.01701, 75.0532, -0.647134, 1.03", "-3.87724, 76.9131, -1.07808, 0.52", "-3.83156, 78.1249, -1.42666, 0.52", "-3.83075, 78.3345, -1.49293, 0.52", "-3.81259, 80.1817, -1.9882, 0.44", "-3.81122, 80.258, -2.00282, 0.44", "-3.78409, 82.1108, -2.08226, 1.33", "-3.74193, 83.7192, -1.89502, 1.4", "-3.73769, 83.8537, -1.8658, 1.4", "-3.70702, 85.15, -1.47594, 0.22", "-3.68115, 86.7462, -0.840455, 0.22", "-3.67636, 88.4578, -0.0614145, 0.59", "-3.70867, 89.2564, 0.36437, 0.59", "-3.77231, 90.0147, 0.765303, 0.22", "-3.78313, 90.0939, 0.807366, 0.22", "-3.89796, 90.6707, 1.10237, 0.22", "-4.08108, 91.371, 1.47114, 0.22", "-4.37595, 92.2595, 1.86163, 0.22", "-4.44046, 92.4336, 1.94079, 0.22", "-4.94366, 93.7827, 2.55759, 0.81", "-4.97211, 93.8614, 2.59138, 0.81", "-5.30696, 94.7661, 2.95746, 0.81", "-5.43468, 95.1264, 3.08071, 0.81", "-5.7796, 96.1379, 3.38734, 0.22", "-5.82111, 96.2553, 3.41631, 0.22", "-6.26066, 97.4299, 3.62445, 0.22", "-6.47539, 97.9916, 3.71015, 0.22", "-6.84289, 98.935, 3.83154, 0.22", "-7.21057, 99.83, 3.85346, 1.03", "-7.55917, 100.644, 3.81284, 1.03", "-7.96969, 101.584, 3.71313, 0.66", "-8.53518, 102.888, 3.50423, 0.22", "-9.03026, 104.083, 3.26403, 0.22", "-9.8449, 106.055, 2.76798, 0.22", "-9.88115, 106.148, 2.73989, 0.22", "-10.1179, 106.783, 2.53559, 0.88", "-10.3046, 107.297, 2.3828, 0.88", "-10.6726, 108.346, 2.11785, 0.22", "-10.6976, 108.418, 2.10455, 0.22", "-11.4458, 110.451, 1.95318, 0.22", "-11.5077, 110.595, 1.94427, 0.22", "-11.9371, 111.41, 1.84496, 0.22", "-11.9866, 111.484, 1.83117, 0.22", "-12.486, 112.114, 1.69252, 0.96", "-13.1725, 112.926, 1.50172, 0.96", "-13.2385, 113.003, 1.48298, 0.96", "-14.1362, 114.162, 1.11482, 0.37", "-14.7259, 115.082, 0.800144, 0.29", "-15.3469, 116.24, 0.435819, 0.15", "-15.3822, 116.32, 0.411325, 0.15", "-15.6937, 117.083, 0.198548, 0.15", "-16.1556, 118.28, -0.0953295, 1.03", "-16.5903, 119.52, -0.329835, 1.03", "-16.7861, 120.145, -0.44303, 1.03", "-16.9726, 120.816, -0.548894, 0.22", "-17.3322, 122.25, -0.717783, 0.22", "-17.3518, 122.338, -0.723914, 0.22", "-17.5247, 123.311, -0.729456, 0.96", "-17.6754, 124.382, -0.721779, 1.11", "-17.7087, 125.17, -0.701462, 0.22", "-17.6661, 126.031, -0.661894, 0.22", "-17.5708, 126.685, -0.660137, 0.22", "-17.5063, 127.055, -0.671239, 0.22", "-17.4929, 127.145, -0.672205, 0.22", "-17.2781, 129.022, -0.738077, 0.22", "-17.2555, 129.157, -0.75617, 0.22", "-17.0516, 130.23, -1.03302, 0.22", "-17.0326, 130.326, -1.06366, 0.22", "-16.5189, 132.932, -1.92776, 0.22", "-15.9253, 135.958, -2.98875, 0.22", "-15.3638, 138.854, -4.09486, 0.22", "-14.9263, 141.036, -4.95752, 1.33", "-14.7413, 141.888, -5.31449, 1.33" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-7.05521, 52.766, 2.37521, 0.74", "-7.42715, 53.8189, 2.63608, 0.74", "-7.70833, 54.4738, 2.78295, 0.37", "-7.98779, 55.086, 2.91343, 0.37", "-8.07946, 55.2813, 2.95211, 0.37", "-8.47859, 56.1143, 3.10954, 0.22", "-8.50837, 56.1764, 3.12062, 0.22", "-9.02711, 57.1327, 3.24555, 0.22", "-9.06219, 57.1923, 3.25395, 0.22", "-9.43319, 57.7971, 3.35556, 0.22", "-9.57259, 58.0181, 3.39774, 0.88", "-9.88334, 58.5403, 3.50384, 0.88", "-10.0608, 58.8583, 3.57025, 0.44", "-10.224, 59.2344, 3.64101, 0.29", "-10.3562, 59.5962, 3.70049, 0.29", "-10.3729, 59.6627, 3.71418, 0.29", "-10.499, 60.3765, 3.87836, 0.29", "-10.5422, 60.6864, 3.95431, 0.29", "-10.6573, 61.7515, 4.21421, 0.29", "-10.6673, 61.8407, 4.23531, 0.29", "-10.7923, 62.6238, 4.4477, 0.29", "-10.8784, 63.0238, 4.57929, 0.29", "-11.0353, 63.5248, 4.77116, 0.29", "-11.0923, 63.6523, 4.82361, 0.29", "-11.3715, 64.1259, 5.03072, 0.88", "-11.8434, 64.8142, 5.29818, 0.88", "-11.8789, 64.8596, 5.31286, 0.88", "-12.1779, 65.2452, 5.42795, 0.44", "-12.5464, 65.7316, 5.55899, 0.37", "-12.6311, 65.8592, 5.58551, 0.37", "-13.0702, 66.6124, 5.70996, 0.37", "-13.1905, 66.8471, 5.7383, 0.37", "-13.4711, 67.4665, 5.81364, 0.37", "-13.5257, 67.6047, 5.83154, 0.37", "-13.9655, 68.7994, 5.87783, 0.37", "-14.0556, 69.0479, 5.86742, 1.11", "-14.0814, 69.1124, 5.85993, 1.11", "-14.3835, 69.7551, 5.75144, 1.11", "-14.4239, 69.8222, 5.73743, 1.11", "-15.1229, 70.7587, 5.52591, 0.74", "-15.4598, 71.1053, 5.43948, 0.29", "-15.9566, 71.5622, 5.33694, 0.29", "-16.0773, 71.6636, 5.31521, 0.29", "-16.647, 72.0955, 5.2341, 0.74", "-16.9036, 72.3047, 5.2149, 0.74", "-17.1847, 72.5479, 5.22251, 0.29", "-17.2414, 72.603, 5.21962, 0.29", "-17.8438, 73.3362, 5.14705, 0.22", "-17.8881, 73.4019, 5.1406, 0.22", "-18.3347, 74.1972, 5.10196, 0.22", "-18.3995, 74.3319, 5.10146, 0.22", "-18.7236, 74.9692, 5.14102, 0.74", "-19.0921, 75.6589, 5.2197, 0.74", "-19.5546, 76.5066, 5.39229, 0.74", "-19.849, 77.0063, 5.51884, 0.44", "-20.122, 77.4306, 5.64912, 0.22", "-20.9878, 78.7024, 6.08896, 0.22", "-21.0467, 78.7835, 6.12144, 0.22", "-21.4571, 79.2991, 6.34113, 0.81", "-21.9223, 79.9166, 6.63333, 0.96", "-21.9748, 79.9916, 6.66862, 0.96", "-22.2748, 80.4838, 6.91054, 0.96", "-22.3017, 80.5421, 6.93741, 0.96", "-22.4709, 80.9469, 7.09993, 0.29", "-23.0336, 82.4155, 7.60118, 0.29", "-23.0566, 82.4775, 7.62338, 0.29", "-23.2296, 82.8818, 7.76776, 0.88", "-23.5466, 83.5562, 8.00398, 0.88", "-23.9367, 84.2814, 8.24826, 0.88", "-24.2112, 84.7368, 8.39608, 0.29", "-24.5874, 85.2817, 8.56241, 0.15", "-25.3822, 86.3681, 8.90789, 0.15", "-25.7392, 86.8236, 9.05823, 0.44", "-26.2186, 87.4084, 9.25078, 0.44", "-26.2618, 87.46, 9.2674, 0.44", "-26.4715, 87.7036, 9.34063, 0.81", "-27.3986, 88.7389, 9.68112, 0.81", "-27.8798, 89.2472, 9.87822, 0.22", "-28.4067, 89.7702, 10.1023, 0.22", "-28.5563, 89.9138, 10.1686, 0.22", "-29.3678, 90.6707, 10.5294, 0.22", "-30.2299, 91.4445, 10.9195, 0.22", "-30.2784, 91.4877, 10.9428, 0.22", "-30.807, 91.983, 11.2032, 0.22", "-30.948, 92.1357, 11.2689, 0.74", "-31.3329, 92.6764, 11.4283, 0.74", "-31.452, 92.9043, 11.4648, 0.74", "-31.6412, 93.3239, 11.5188, 0.74", "-31.7607, 93.5837, 11.5607, 0.74", "-32.1741, 94.3919, 11.7157, 0.22", "-32.4477, 94.8949, 11.7898, 0.22", "-32.9569, 95.7942, 11.9188, 0.22", "-33.3579, 96.512, 12.0162, 0.88", "-33.9352, 97.5502, 12.1752, 1.25", "-34.4933, 98.5432, 12.3409, 1.25", "-35.2665, 99.87, 12.5817, 1.25", "-35.8071, 100.762, 12.7469, 0.59", "-36.3482, 101.622, 12.8706, 0.59", "-36.9387, 102.487, 12.9571, 0.15", "-37.4886, 103.237, 13.0238, 0.15", "-37.7584, 103.578, 13.0524, 0.37", "-38.0555, 103.895, 13.0851, 0.37", "-38.8974, 104.682, 13.107, 0.22", "-39.688, 105.332, 12.9824, 0.22", "-39.7466, 105.381, 12.9615, 0.22", "-39.9469, 105.559, 12.8624, 0.74", "-40.4881, 106.093, 12.564, 0.74", "-40.5327, 106.142, 12.5433, 0.74", "-41.5504, 107.243, 12.0765, 0.15", "-41.9663, 107.679, 11.8888, 0.15", "-42.0764, 107.793, 11.8492, 0.15", "-42.5454, 108.271, 11.6893, 0.15", "-43.6384, 109.38, 11.3508, 0.15", "-44.5257, 110.279, 11.1401, 0.88", "-45.1327, 110.897, 11.0733, 0.88", "-46.0385, 111.813, 10.9471, 0.66", "-51.3349, 120.206, 11.5627, 0.66" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "24.4388, -28.9627, 2.81117, 1.03", "25.3234, -29.7733, 2.21781, 1.03", "25.4074, -29.8533, 2.18117, 1.03", "26.16, -30.5871, 1.89245, 1.03", "26.4649, -30.8779, 1.81115, 1.03", "28.1554, -32.4693, 1.48676, 1.03", "28.2106, -32.5196, 1.4791, 1.03", "30.326, -34.4267, 1.36963, 0.88", "30.4471, -34.5325, 1.37492, 0.88", "32.2985, -36.12, 1.68356, 0.88", "32.9777, -36.6937, 1.89947, 0.88", "33.5752, -37.1881, 2.17884, 1.25", "34.3377, -37.8028, 2.60679, 1.25", "35.7958, -38.9223, 3.5766, 0.74", "37.2193, -39.9804, 4.52233, 0.74", "38.4097, -40.8333, 5.31073, 0.74", "38.4566, -40.8663, 5.33895, 0.74", "39.132, -41.3351, 5.71228, 1.47", "40.0926, -41.9508, 6.17699, 1.47", "42.2573, -43.1827, 6.87193, 0.66", "43.2676, -43.7118, 7.07422, 0.66", "44.4963, -44.3393, 7.22606, 1.33", "44.5621, -44.3741, 7.23155, 1.33", "45.5912, -44.9634, 7.28728, 1.33", "47.4363, -46.0197, 7.35567, 1.18", "48.8846, -46.8558, 7.37465, 1.18", "48.9755, -46.9098, 7.37461, 1.18", "50.5072, -47.8533, 7.36526, 0.88", "53.0194, -49.5352, 7.35455, 0.88" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "24.4388, -28.9627, 2.81117, 0.74", "24.456, -28.9755, 2.84711, 0.74", "24.6598, -29.1498, 3.46775, 0.74", "24.6718, -29.1609, 3.50624, 0.74", "25.2045, -29.6204, 4.97189, 0.74", "26.0437, -30.2449, 6.99668, 0.74", "26.0601, -30.2561, 7.03352, 0.74", "26.9955, -30.8015, 8.92866, 1.4", "27.2491, -30.9346, 9.41071, 0.74", "27.8122, -31.1598, 10.3155, 0.74", "28.5738, -31.3451, 11.2665, 0.74", "28.6176, -31.352, 11.3056, 0.74", "29.5596, -31.5699, 12.0454, 0.74", "29.5892, -31.5785, 12.0637, 0.74", "30.0528, -31.7287, 12.3901, 0.74", "30.1095, -31.7467, 12.4301, 0.74", "31.115, -32.0308, 13.0625, 0.74", "32.1443, -32.3006, 13.6991, 0.74", "32.6723, -32.4344, 14.0199, 0.74", "33.8982, -32.729, 14.7061, 0.74", "35.0271, -33.0109, 15.2826, 0.74", "36.0094, -33.2473, 15.7364, 1.25", "36.8087, -33.4465, 16.0946, 0.52", "37.1663, -33.5443, 16.2569, 0.52", "37.9539, -33.7965, 16.6272, 0.66", "39.0244, -34.1979, 17.1499, 0.66", "39.0635, -34.2148, 17.1718, 0.66", "40.3474, -34.7348, 17.9279, 0.66", "40.6851, -34.8499, 18.1104, 0.96", "41.1776, -35.0047, 18.3576, 0.66", "41.9348, -35.1997, 18.7051, 0.52", "41.9728, -35.2102, 18.7192, 0.52", "42.7693, -35.4903, 18.967, 0.52", "43.4654, -35.8025, 19.1645, 0.52", "44.053, -36.1267, 19.4034, 0.52", "44.0807, -36.1447, 19.4179, 0.52", "44.7672, -36.594, 19.7962, 0.52", "45.3614, -36.967, 20.1469, 0.52", "46.0542, -37.3859, 20.5657, 1.25", "46.686, -37.6902, 21.0264, 0.52", "47.4278, -37.9852, 21.6009, 0.52", "48.5353, -38.3657, 22.4745, 0.52", "48.6103, -38.3833, 22.5327, 0.52", "49.122, -38.4646, 22.9145, 0.52", "50.8703, -38.5302, 24.1334, 0.37", "51.2044, -38.5086, 24.3644, 0.37", "51.2761, -38.495, 24.4164, 0.37", "51.8675, -38.3303, 24.876, 0.37", "52.0349, -38.2867, 25.0157, 0.37", "52.8398, -38.0817, 25.7153, 0.37", "52.873, -38.0747, 25.7397, 0.37", "53.5575, -37.9158, 26.3009, 0.37", "53.5884, -37.9086, 26.3282, 0.37", "54.415, -37.7326, 27.1493, 0.29", "54.4603, -37.7226, 27.1926, 0.29", "54.8585, -37.6233, 27.5602, 0.29", "54.8924, -37.6145, 27.5831, 0.29", "55.267, -37.5006, 27.7739, 0.29", "55.35, -37.4761, 27.8095, 0.29", "56.036, -37.2842, 28.0545, 0.29", "56.1095, -37.2617, 28.0875, 0.29", "56.8269, -37.0262, 28.452, 0.29", "57.6859, -36.7012, 28.918, 0.29", "57.7201, -36.687, 28.9377, 0.29", "58.5719, -36.3078, 29.4544, 0.29", "59.2969, -35.9415, 29.9334, 0.59", "59.6976, -35.7203, 30.2108, 0.74", "60.0954, -35.4576, 30.5135, 0.74", "60.1247, -35.4366, 30.5351, 0.74", "64.0724, -36.1807, 34.9528, 0.74", "67.4917, -36.6835, 39.8211, 0.74", "70.9504, -38.1968, 44.4535, 0.74" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "26.0011, -50.0622, 40.7319, 0.52", "26.4734, -50.5743, 41.0117, 0.52", "26.6721, -50.8325, 41.1331, 0.66", "26.9559, -51.2872, 41.3154, 0.52", "27.2342, -51.8083, 41.505, 0.29", "27.5304, -52.4932, 41.7104, 0.44", "27.5435, -52.528, 41.7196, 0.44", "27.6565, -52.9439, 41.7649, 0.44", "27.7074, -53.3641, 41.7848, 0.74", "27.7095, -53.4967, 41.7851, 0.74", "27.7003, -53.9271, 41.7632, 0.74", "27.7002, -53.9652, 41.7575, 0.74", "27.7623, -54.4962, 41.722, 0.74", "27.8585, -54.9188, 41.8274, 0.44", "27.87, -54.9522, 41.8421, 0.44", "28.0653, -55.464, 42.0989, 0.37", "28.0869, -55.515, 42.129, 0.37", "28.507, -56.4362, 42.748, 0.37", "29.1376, -57.6716, 43.7499, 0.44", "29.34, -58.0407, 44.0932, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "26.0011, -50.0622, 40.7319, 0.66", "26.7877, -50.4463, 40.8403, 0.66", "27.2351, -50.6303, 40.9654, 0.29", "27.8506, -50.8834, 41.1375, 0.29", "27.9096, -50.9077, 41.154, 0.29", "28.6886, -51.228, 41.3719, 0.29", "28.795, -51.2718, 41.4016, 0.29", "29.671, -51.7074, 41.5044, 0.74", "37.2623, -54.1285, 43.5767, 0.74", "44.5714, -57.9167, 44.1605, 0.74", "51.5071, -62.0647, 45.8744, 0.74", "58.0492, -67.1352, 46.1946, 0.74" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-49.3535, -45.1559, -23.043, 0.29", "-52.2001, -46.6517, -25.4562, 0.29", "-53.8796, -47.6094, -26.8944, 0.29", "-55.5173, -48.5703, -28.2542, 0.29", "-57.9889, -50.0331, -30.2779, 0.88", "-58.9636, -50.658, -31.1352, 1.18", "-60.0283, -51.3694, -32.1112, 0.59", "-61.4294, -52.4816, -33.4639, 0.52", "-61.7798, -52.8237, -33.9102, 0.88", "-61.8214, -52.8694, -33.971, 0.88", "-62.9884, -54.1197, -35.5731, 0.37", "-63.0286, -54.1649, -35.6351, 0.37", "-64.817, -56.2087, -38.4376, 0.37", "-65.5031, -56.9494, -39.3086, 1.25", "-65.5452, -56.9915, -39.3532, 1.25", "-66.4492, -57.7996, -40.1008, 1.25", "-66.5199, -57.854, -40.1442, 1.25", "-67.2963, -58.4465, -40.5123, 0.29", "-69.1034, -59.7481, -41.0131, 0.15", "-69.6595, -60.1799, -41.1888, 0.59", "-70.0813, -60.5233, -41.3472, 0.59", "-70.9729, -61.2743, -41.7326, 0.15", "-72.2201, -62.2703, -42.294, 0.15", "-72.2824, -62.3186, -42.3305, 0.15", "-73.439, -63.1692, -43.0301, 0.88", "-73.5016, -63.2148, -43.0693, 0.88", "-74.325, -63.813, -43.5893, 0.88", "-75.467, -64.6517, -44.3942, 0.22", "-77.6001, -66.2711, -45.9596, 0.22", "-78.8475, -67.4715, -47.0034, 0.22", "-80.7534, -70.0005, -49.0802, 0.22", "-80.789, -70.0621, -49.1303, 0.22", "-81.5557, -72.7164, -51.1952, 0.22", "-81.7004, -74.2736, -52.1481, 0.22", "-81.3776, -78.1099, -53.8098, 0.22", "-80.4696, -81.5369, -54.618, 0.22", "-80.4414, -81.6067, -54.6209, 0.22", "-78.3571, -86.1421, -53.8007, 0.22", "-74.9444, -92.5331, -51.0538, 0.22", "-74.9163, -92.5923, -50.9959, 0.22", "-74.1775, -94.2787, -48.6581, 0.22", "-74.1592, -94.3277, -48.5735, 0.22", "-73.7408, -95.8104, -45.5757, 0.22", "-73.7408, -95.8386, -45.4937, 0.22", "-74.7521, -98.4578, -37.9258, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-49.3535, -45.1559, -23.043, 1.18", "-52.0187, -47.7315, -22.4915, 1.18", "-54.0206, -49.5549, -22.6371, 1.18", "-55.3436, -50.7346, -22.9146, 0.52", "-56.8928, -52.1053, -23.3538, 0.52", "-56.9549, -52.1603, -23.3737, 0.52", "-58.1563, -53.2404, -23.9281, 0.52", "-59.6463, -54.5573, -24.65, 0.52", "-59.7536, -54.6528, -24.7408, 0.52", "-60.5587, -55.3578, -25.7179, 0.37", "-60.6012, -55.4, -25.7779, 0.37", "-61.8162, -56.6539, -27.3473, 1.11", "-62.4153, -57.3128, -28.0586, 1.11", "-62.4696, -57.3715, -28.114, 1.11", "-63.9196, -58.898, -29.5391, 0.22", "-64.8676, -59.851, -30.4051, 0.22", "-65.6457, -60.6548, -31.0298, 0.29", "-65.7273, -60.7407, -31.0822, 0.29", "-66.1561, -61.1884, -31.4232, 0.81", "-66.2125, -61.2471, -31.4764, 0.81", "-66.8103, -61.8797, -32.0464, 0.81", "-67.9382, -63.1176, -33.2393, 0.37", "-67.983, -63.1698, -33.2895, 0.37", "-69.8577, -65.4763, -35.3325, 0.15", "-70.5979, -66.5731, -36.152, 0.96", "-71.1853, -67.572, -36.7898, 1.4", "-71.6704, -68.7045, -37.3607, 0.52", "-71.6847, -68.7745, -37.3795, 0.52", "-71.7581, -70.1521, -37.5688, 0.29", "-71.4852, -72.5088, -37.4773, 0.29", "-71.4679, -72.6054, -37.4672, 0.29", "-71.0551, -74.515, -37.1802, 0.29", "-70.4626, -77.5432, -36.6158, 0.29", "-70.4336, -77.7223, -36.5793, 0.29", "-70.1956, -80.1328, -35.9858, 0.29", "-70.1838, -80.3508, -35.9238, 0.29", "-70.1718, -81.7598, -35.4703, 0.15", "-70.3613, -83.7393, -34.6516, 0.15", "-70.3802, -83.8151, -34.6152, 0.15", "-70.8697, -85.3388, -33.9157, 0.88" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-6.45102, -25.2525, -1.96452, 0.88", "-8.24022, -26.3685, -6.19268, 0.88", "-8.84662, -26.769, -7.50253, 0.88", "-9.51979, -27.2136, -8.95661, 0.88", "-9.54714, -27.2317, -9.01568, 0.88", "-10.0122, -27.5388, -10.0202, 0.88", "-11.2022, -28.3248, -12.5908, 1.4", "-11.502, -28.5691, -13.0291, 1.4" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-6.45102, -25.2525, -1.96452, 0.81", "-7.52463, -27.5862, -0.942912, 0.81", "-8.29622, -29.2633, -0.208695, 0.81", "-8.87154, -30.5138, 0.338761, 0.81", "-9.38055, -31.6202, 0.823123, 0.81" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-6.45102, -25.2525, -1.96452, 2.5", "-6.41328, -25.8456, -1.77457, 2.5", "-6.30933, -27.383, -1.38362, 1.03", "-6.17313, -28.6312, -1.1653, 0.59", "-5.99405, -29.6506, -1.04247, 0.59", "-5.97603, -29.7108, -1.04182, 0.59", "-5.73841, -30.3871, -1.06699, 0.59", "-5.20306, -31.5272, -1.23556, 0.59", "-4.23881, -33.1436, -1.64062, 1.03", "-3.34214, -34.4628, -2.03898, 0.81", "-1.63134, -36.763, -2.68581, 0.81", "-1.59924, -36.8043, -2.69644, 0.81", "0.196141, -39.0286, -3.23455, 0.81", "2.04346, -41.3874, -3.72706, 0.81", "2.07821, -41.4388, -3.7347, 0.81", "2.87596, -42.9902, -3.88941, 0.52", "3.2878, -44.0892, -3.93799, 0.52", "3.39828, -44.4891, -3.9388, 0.74", "3.76219, -46.7589, -3.83812, 1.11", "4.01783, -49.245, -3.71339, 1.11", "4.18567, -50.9281, -3.65761, 0.81", "4.20037, -51.0621, -3.65518, 0.81", "4.519, -53.079, -3.53219, 0.59", "4.53133, -53.1312, -3.52704, 0.59", "4.99641, -54.6028, -3.29128, 0.59", "5.01528, -54.652, -3.28057, 0.59", "5.55945, -55.9983, -2.95318, 0.59", "6.23331, -57.7113, -2.57388, 0.44", "6.68543, -58.9036, -2.3695, 0.44", "6.83726, -59.3738, -2.30239, 1.03", "6.85345, -59.4341, -2.29533, 1.03", "7.08206, -60.3927, -2.23154, 1.03", "7.0966, -60.463, -2.2356, 1.03", "7.31296, -61.2533, -2.37372, 0.52", "7.7303, -62.2703, -2.58381, 0.52", "7.82407, -62.4503, -2.62132, 0.52", "8.36568, -63.3612, -2.80336, 0.74", "8.94839, -64.3057, -2.96799, 0.88", "9.49837, -65.2163, -3.06518, 0.66", "9.95555, -66.0193, -3.09561, 0.44", "10.4348, -67.0042, -3.08445, 0.44", "10.4568, -67.0629, -3.0818, 0.44", "10.8974, -68.5667, -2.96462, 0.44", "11.0897, -69.4092, -2.88582, 0.88", "11.2687, -70.3795, -2.81115, 1.18", "11.5741, -71.9852, -2.67993, 0.88", "11.8059, -73.0691, -2.57523, 1.18", "11.8223, -73.1295, -2.5694, 1.18", "12.41, -74.9073, -2.39914, 0.66", "12.4368, -74.9735, -2.39356, 0.66", "13.3406, -76.6584, -2.22764, 0.66", "13.3752, -76.71, -2.22158, 0.66", "14.3558, -77.9458, -2.08036, 0.66", "14.3951, -77.9939, -2.07601, 0.66", "14.9794, -78.6951, -2.05045, 0.29", "15.5358, -79.4678, -2.11073, 0.29", "15.5691, -79.5197, -2.12041, 0.29", "16.0755, -80.3977, -2.30668, 0.81", "16.67, -81.4655, -2.56082, 1.18", "17.1747, -82.3662, -2.78058, 0.88", "17.801, -83.4919, -3.05501, 0.29", "18.2072, -84.2068, -3.22685, 0.29", "18.3549, -84.447, -3.28222, 0.29", "19.2098, -85.7037, -3.51039, 0.66", "19.6811, -86.3326, -3.57987, 1.03", "20.184, -87.0038, -3.58176, 0.37", "20.2205, -87.0543, -3.57733, 0.37", "20.7524, -87.8798, -3.44376, 0.37", "21.199, -88.6252, -3.22179, 0.81", "21.5178, -89.2078, -2.98851, 0.81", "22.0334, -90.1004, -2.58609, 0.52", "22.0631, -90.1498, -2.56233, 0.52", "22.8734, -91.3604, -1.96619, 0.88", "23.7688, -92.5644, -1.34239, 0.52", "24.0585, -92.882, -1.14678, 0.52", "24.6536, -93.2822, -0.763282, 0.74", "24.8123, -93.3408, -0.66965, 0.74", "25.4938, -93.4208, -0.229459, 0.52", "25.5533, -93.4168, -0.192403, 0.52", "26.9463, -93.144, 0.65975, 0.29", "28.4951, -92.7226, 1.69001, 0.22", "28.7477, -92.6344, 1.87475, 0.37", "30.1108, -92.0975, 2.91807, 0.81", "32.949, -100.6, 2.62512, 0.81", "35.654, -109.15, 2.8683, 0.81", "37.0193, -117.902, 4.34188, 0.81", "39.3316, -126.507, 5.39686, 0.81" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "14.6022, 98.2448, 14.0644, 0.29", "10.3656, 105.702, 21.5668, 0.29", "4.70414, 111.327, 29.6326, 0.29", "-0.248679, 117.147, 38.0244, 0.29", "-6.84174, 123.53, 44.7364, 0.29", "-12.6893, 131.48, 50.4765, 0.29" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "14.6022, 98.2448, 14.0644, 0.74", "14.5952, 106.663, 13.8461, 0.29", "13.9229, 115.009, 14.6121, 0.29", "13.3273, 123.404, 14.4637, 0.29" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "55.0375, 76.4082, 33.983, 0.37", "55.0693, 76.4981, 34.017, 0.37", "55.4435, 77.3852, 34.2848, 0.37", "55.4968, 77.4942, 34.316, 0.37", "55.8127, 78.2046, 34.593, 0.59", "56.1618, 79.0077, 34.9333, 0.59", "56.239, 79.1865, 35.0097, 0.59", "56.7816, 80.3919, 35.5382, 0.29", "57.0141, 80.8299, 35.7439, 0.29", "58.0033, 82.5029, 36.5138, 0.15", "58.0673, 82.6075, 36.5676, 0.15", "58.3594, 83.0809, 36.8403, 0.15", "58.6339, 83.5316, 37.1083, 0.15", "59.2577, 84.5399, 37.7022, 0.15", "59.5624, 85.0168, 37.9546, 0.44", "60.3375, 86.1408, 38.5066, 0.29", "60.8878, 86.9649, 38.9157, 0.29", "61.1463, 87.3738, 39.1216, 0.29", "61.7122, 88.3941, 39.6083, 0.29", "62.0108, 89.0578, 39.8819, 0.74", "67.6752, 99.776, 43.4643, 0.74", "74.3834, 110.237, 45.7667, 0.74", "80.428, 121.12, 48.0348, 0.74" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "55.0375, 76.4082, 33.983, 0.29", "55.1089, 76.3578, 34.0071, 0.29", "55.1639, 76.3307, 34.025, 0.29", "55.6302, 76.1249, 34.1747, 0.29", "55.7581, 76.0766, 34.2153, 0.29", "56.1414, 75.9436, 34.3361, 0.29", "56.3163, 75.8829, 34.3912, 0.29", "57.3809, 75.5366, 34.7251, 0.29", "57.4394, 75.5192, 34.7434, 0.29", "58.0021, 75.3864, 34.9167, 0.88", "58.0704, 75.3726, 34.9376, 0.88", "66.3723, 73.5753, 38.1805, 0.88", "73.755, 70.973, 42.8295, 0.88", "80.8511, 69.3414, 48.2741, 0.88", "88.3805, 68.0055, 53.1858, 0.88" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "25.8074, 13.6226, -33.3767, 0.74", "25.5783, 15.9197, -36.6159, 0.74", "25.6474, 16.7667, -38.0677, 0.74", "25.654, 16.8116, -38.1482, 0.74", "25.7907, 17.305, -39.1055, 0.74", "25.9893, 17.9034, -40.2994, 0.74", "26.4304, 18.9871, -42.6028, 0.59", "27.2938, 20.6844, -46.2703, 0.59", "27.3568, 20.7865, -46.5097, 0.59", "28.1392, 21.9914, -49.3405, 0.59", "28.1631, 22.0253, -49.4227, 0.59", "29.046, 23.1879, -52.3634, 0.29", "29.0714, 23.2231, -52.4447, 0.29", "29.2679, 23.5926, -53.1895, 0.29", "29.5063, 24.3006, -54.5708, 0.29", "29.5012, 24.3391, -54.6399, 0.29", "29.2363, 24.5407, -55.2674, 0.29", "29.0671, 24.5703, -55.4995, 0.29", "28.5508, 24.6578, -56.212, 0.29", "27.9577, 24.7333, -57.0182, 0.74", "27.4911, 24.8529, -58.1821, 0.74", "26.7844, 25.346, -61.0896, 0.37", "26.7758, 25.3614, -61.1797, 0.37", "26.7292, 25.5662, -62.3776, 0.37", "26.7277, 25.5882, -62.5154, 0.37", "26.6849, 26.557, -67.9191, 0.37", "26.6852, 26.7359, -68.8539, 1.03", "26.5118, 27.8083, -74.144, 1.03", "26.5049, 27.8258, -74.234, 1.03", "26.1474, 28.4472, -77.2595, 0.29", "25.9641, 28.7107, -78.3327, 0.29", "25.912, 28.7794, -78.5329, 0.29", "25.4764, 29.4425, -80.0898, 0.29", "25.4561, 29.487, -80.1684, 0.29", "24.961, 31.0512, -82.7727, 0.29", "24.952, 31.1012, -82.8501, 0.29", "24.8378, 32.3074, -84.8652, 1.33", "24.8224, 32.7515, -85.6159, 1.33", "24.8828, 34.4495, -88.5415, 0.29", "24.8749, 35.0572, -89.6392, 0.29", "24.8597, 35.123, -89.7624, 0.29", "24.6095, 35.754, -90.9324, 1.03", "24.4713, 35.9686, -91.3338, 1.03", "24.4486, 36.0009, -91.4171, 1.03", "24.0538, 36.6849, -92.9586, 0.22", "23.6325, 37.4635, -94.7974, 0.22", "23.6135, 37.4964, -94.8814, 0.22", "23.1825, 38.2452, -96.8218, 1.18", "22.1491, 40.1562, -101.506, 0.22", "21.8082, 40.9775, -103.455, 0.22", "21.5105, 42.0544, -105.977, 1.18", "21.422, 43.2265, -109.108, 0.15", "21.4237, 43.3218, -109.381, 0.15", "21.5029, 43.9488, -111.012, 0.15", "21.7175, 45.0978, -113.648, 0.15", "21.9767, 46.1999, -116.085, 1.62", "22.79, 49.0981, -121.791, 0.22", "22.8042, 49.1408, -121.872, 0.22", "23.325, 50.6545, -124.818, 0.22", "23.5838, 51.3869, -126.297, 1.25", "23.6406, 51.6713, -126.773, 1.25", "23.6483, 51.7416, -126.852, 1.25" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "25.8074, 13.6226, -33.3767, 0.96", "25.9735, 13.6158, -33.4533, 0.96", "27.3028, 13.5594, -34.0843, 0.74", "29.0186, 13.4474, -34.7967, 0.74", "30.9115, 13.3469, -35.6351, 0.74", "31.0051, 13.3439, -35.6861, 0.74", "33.8048, 13.3654, -37.5412, 0.74", "33.8652, 13.3698, -37.586, 0.74", "35.7395, 13.6416, -39.214, 0.74", "37.2492, 13.9581, -40.5808, 0.74", "38.8994, 14.4909, -42.1979, 1.62", "40.2738, 15.0278, -43.6778, 0.66", "41.3573, 15.4966, -44.8911, 0.52", "42.8809, 16.1691, -46.6117, 1.25", "43.947, 16.6177, -47.8146, 1.25", "47.1194, 17.8034, -51.0848, 0.59", "49.2875, 18.5207, -53.3301, 0.96", "51.6508, 19.2258, -55.8588, 0.96", "51.7023, 19.2392, -55.9122, 0.96", "55.4486, 20.0956, -59.517, 0.96", "56.5286, 20.2937, -60.5148, 1.47", "59.8739, 20.7494, -63.3024, 0.74", "59.9436, 20.7595, -63.352, 0.74", "63.5329, 21.3292, -65.6879, 0.74", "64.7145, 21.5409, -66.3937, 1.47", "66.3158, 21.8686, -67.177, 0.59", "66.6016, 21.924, -67.313, 0.59", "68.6095, 22.2694, -68.1049, 0.59", "68.7689, 22.294, -68.1809, 0.59", "70.4087, 22.4769, -69.2148, 2.14", "70.8152, 22.5062, -69.4766, 2.14", "72.8437, 22.513, -70.7717, 0.66", "73.4543, 22.4902, -71.1768, 0.66", "73.5132, 22.4881, -71.2238, 0.66", "75.6735, 22.5908, -73.3419, 0.66", "75.724, 22.5984, -73.3974, 0.66", "77.4789, 23.055, -75.5301, 0.66", "77.6983, 23.1493, -75.8359, 1.18", "79.135, 23.921, -78.0733, 0.81", "80.6024, 24.7693, -80.428, 0.44", "81.0534, 25.0769, -81.229, 0.44", "81.0893, 25.0996, -81.2915, 0.44", "82.3014, 25.8428, -83.397, 0.44", "82.3651, 25.8676, -83.4889, 0.44", "83.3829, 26.0228, -84.7001, 0.44", "83.4342, 26.0297, -84.7548, 0.44", "84.5741, 26.1829, -85.9844, 1.4", "84.6356, 26.1935, -86.0438, 1.4", "85.2047, 26.3027, -86.5603, 1.4", "88.6385, 26.9818, -89.936, 0.52", "90.8642, 27.4596, -92.2357, 0.37", "90.9182, 27.4711, -92.2871, 0.37", "93.8585, 28.1248, -94.9084, 0.37", "93.922, 28.1395, -94.9649, 0.37", "97.4046, 28.9692, -98.0917, 0.37", "97.4688, 28.9835, -98.1474, 0.37", "99.8313, 29.4629, -100.138, 0.37", "99.8872, 29.4743, -100.188, 0.37", "101.814, 29.8648, -101.955, 0.29", "104.091, 30.3303, -103.946, 0.29", "104.149, 30.3425, -103.992, 0.29", "108.213, 31.1465, -107.08, 0.29", "110.141, 31.5242, -108.61, 1.62", "110.201, 31.5352, -108.654, 1.62", "111.342, 31.7194, -109.366, 1.62", "112.431, 31.9127, -109.973, 0.29", "114.058, 32.2155, -110.931, 0.29", "116.337, 32.5843, -112.236, 0.29", "116.403, 32.5922, -112.272, 0.29", "118.41, 32.7928, -113.571, 0.29", "118.935, 32.8362, -113.959, 1.11", "121.024, 32.9986, -115.584, 0.29", "122.515, 33.0887, -116.764, 0.29", "124.386, 33.2159, -118.078, 1.47", "126.177, 33.3671, -119.319, 0.15", "126.24, 33.3708, -119.361, 0.15", "127.383, 33.4006, -120.013, 0.15", "127.462, 33.4037, -120.047, 0.15", "129.046, 33.4664, -120.674, 0.15", "129.197, 33.4632, -120.731, 0.15", "130.828, 33.3625, -121.36, 0.15", "132.154, 33.2547, -121.962, 1.11", "132.654, 33.1978, -122.228, 1.11", "132.715, 33.1952, -122.272, 1.11", "134.575, 33.2365, -123.942, 0.37", "135.027, 33.2932, -124.393, 0.59", "135.351, 33.3851, -124.735, 0.59", "135.424, 33.4104, -124.808, 0.59", "137.465, 34.1161, -126.76, 0.29", "137.832, 34.2176, -127.043, 0.22", "137.895, 34.2332, -127.082, 0.22", "138.867, 34.4409, -127.635, 0.22", "139.341, 34.5275, -127.897, 0.22", "140.746, 34.754, -128.608, 1.03", "143.451, 35.1248, -129.804, 0.22", "144.316, 35.2411, -130.201, 0.22", "144.383, 35.2497, -130.233, 0.22", "146.032, 35.4396, -131.069, 1.11", "146.591, 35.5112, -131.355, 1.11", "146.7, 35.5278, -131.407, 1.11" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "65.5744, 24.599, -20.5828, 0.44", "66.2468, 24.8224, -20.5592, 0.44", "66.8023, 25.0245, -20.6004, 0.44", "67.0795, 25.1278, -20.6324, 0.44", "68.6539, 25.728, -21.3827, 0.44", "68.7099, 25.7512, -21.4173, 0.44", "69.3051, 26.0113, -21.8233, 0.81", "70.2688, 26.4407, -22.5264, 0.81", "70.3229, 26.468, -22.5783, 0.81", "72.1445, 27.5247, -24.4938, 0.22", "72.4863, 27.7526, -24.8941, 0.22", "72.5454, 27.7943, -24.9717, 0.22", "72.787, 27.9896, -25.313, 0.44", "73.6116, 28.7209, -26.4843, 0.29", "74.4947, 29.5723, -27.7259, 0.29", "75.8459, 31.0181, -29.7612, 0.96", "76.8691, 32.164, -31.4598, 0.44", "77.3116, 32.6399, -32.1523, 0.44", "77.4881, 32.8272, -32.4191, 1.03", "77.7277, 33.0759, -32.7259, 1.03", "78.8838, 34.3335, -34.1109, 0.29", "78.9495, 34.3903, -34.1586, 0.29", "80.6073, 35.5186, -34.9385, 0.29", "80.7313, 35.5856, -34.9894, 0.29", "82.1076, 36.2373, -35.4568, 0.29", "82.2074, 36.2838, -35.4818, 0.29", "83.947, 37.1133, -35.8787, 0.29", "84.0143, 37.1474, -35.9051, 0.29", "84.6688, 37.4726, -36.2505, 0.29", "84.7992, 37.535, -36.3218, 0.29", "85.6878, 37.9314, -36.7441, 1.03", "87.1595, 38.5449, -37.2246, 0.29", "87.3635, 38.6206, -37.2526, 0.29", "89.4087, 39.2796, -37.5181, 0.29", "89.4753, 39.2988, -37.5264, 0.29", "90.8193, 39.6352, -37.6177, 0.81", "91.5114, 39.8002, -37.6183, 0.22", "93.2355, 40.2531, -37.4866, 0.22", "94.2047, 40.5407, -37.4828, 1.03", "94.3269, 40.5828, -37.4929, 1.03", "95.3746, 40.9965, -37.6596, 0.15", "96.3777, 41.4727, -37.9332, 0.15", "96.4368, 41.5053, -37.9517, 0.15", "97.7145, 42.3695, -38.5245, 0.81", "97.8326, 42.4474, -38.5745, 0.81", "98.1308, 42.602, -38.7133, 0.81", "98.2244, 42.6409, -38.7627, 0.81", "98.7231, 42.7931, -39.0001, 0.15", "98.7858, 42.8105, -39.0251, 0.15", "99.9876, 43.085, -39.3468, 0.15", "101.131, 43.3093, -39.6557, 0.74", "101.353, 43.3456, -39.7164, 0.74", "101.429, 43.3573, -39.7365, 0.74" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "65.5744, 24.599, -20.5828, 0.66", "65.7786, 24.4273, -20.6535, 0.66", "65.8222, 24.3932, -20.6718, 0.66", "66.5741, 23.8902, -20.9796, 0.66", "66.7723, 23.7837, -21.0649, 0.66", "67.4922, 23.4419, -21.3789, 0.66", "68.2157, 23.167, -21.6607, 1.18", "68.3397, 23.1311, -21.7059, 1.18", "68.9254, 23.0193, -21.8891, 1.18", "69.5835, 22.9633, -22.072, 0.44", "69.6478, 22.9614, -22.0868, 0.44", "70.6083, 22.9742, -22.2498, 0.44", "70.8669, 22.9802, -22.3243, 0.44", "71.5468, 23.0074, -22.6043, 0.44", "71.5981, 23.01, -22.6305, 0.44", "72.048, 23.0448, -22.8849, 0.74", "72.104, 23.0528, -22.9188, 0.74", "73.7709, 23.4179, -23.9862, 0.44", "74.8336, 23.6989, -24.5194, 0.44", "74.8868, 23.7143, -24.5357, 0.44", "75.4751, 23.8874, -24.5814, 0.88", "76.1426, 24.0916, -24.526, 0.88", "76.7458, 24.2849, -24.3998, 0.88", "77.9495, 24.6783, -23.9222, 0.44", "79.2847, 25.0886, -23.3013, 0.44", "80.4141, 25.4134, -22.7339, 1.25", "80.4707, 25.4288, -22.7038, 1.25", "81.0632, 25.5798, -22.3795, 1.25", "82.2096, 25.8385, -21.7801, 0.37", "82.9989, 25.9972, -21.5106, 0.37", "83.1117, 26.0154, -21.4942, 0.37", "84.068, 26.1315, -21.5386, 0.37", "84.1486, 26.1384, -21.5492, 0.37", "85.1331, 26.1912, -21.7696, 0.37", "86.8008, 26.2602, -22.2653, 1.03", "87.4986, 26.2671, -22.4716, 1.92", "87.8714, 26.2625, -22.5772, 0.29", "88.5802, 26.2425, -22.7983, 0.29", "88.6904, 26.2412, -22.8328, 0.29", "89.5162, 26.2478, -23.0701, 0.29", "90.0376, 26.2275, -23.1655, 0.74", "90.1018, 26.2233, -23.1801, 0.74", "91.1399, 26.1533, -23.4148, 0.74", "91.1962, 26.1492, -23.4267, 0.74", "91.7352, 26.1119, -23.5143, 0.22", "92.4391, 26.0674, -23.596, 0.22", "92.561, 26.0615, -23.5762, 0.22", "93.0996, 26.0351, -23.3575, 0.96", "93.3643, 26.0239, -23.2063, 0.96", "93.8785, 26.0094, -22.894, 0.96", "93.9272, 26.0088, -22.8631, 0.96", "95.4832, 26.0168, -21.8634, 0.37", "95.5575, 26.0166, -21.817, 0.37", "96.7913, 26.0042, -21.1283, 0.37", "96.843, 26.0035, -21.1026, 0.37", "97.2994, 25.9979, -20.9223, 0.59", "97.4753, 25.9982, -20.8781, 0.22", "97.5326, 25.9999, -20.8716, 0.22", "98.3758, 26.0544, -20.7165, 0.22", "98.4319, 26.0596, -20.7037, 0.22", "98.7843, 26.0896, -20.6237, 0.44", "98.9702, 26.0985, -20.5841, 0.44", "99.779, 26.1062, -20.4216, 0.22", "101.632, 26.0705, -20.0968, 0.22", "102.181, 26.0449, -20.0131, 1.03", "102.732, 26.0078, -19.9414, 0.22", "103.834, 25.9042, -19.82, 0.22", "104.138, 25.8682, -19.7971, 0.22", "105.655, 25.6718, -19.7418, 0.22", "107.491, 25.4044, -19.6902, 0.22", "108.42, 25.276, -19.6699, 1.18", "109.226, 25.1739, -19.657, 1.18", "109.773, 25.1162, -19.6513, 0.15", "111.592, 24.949, -19.6416, 0.15", "111.657, 24.9435, -19.6418, 0.52", "112.143, 24.9145, -19.647, 0.15", "112.258, 24.9108, -19.6492, 0.15", "113.794, 24.9212, -19.6773, 0.15", "114.218, 24.932, -19.6816, 0.96", "114.827, 24.9563, -19.6983, 0.96", "115.008, 24.9657, -19.7046, 0.96", "115.559, 25.009, -19.7276, 0.15", "116.825, 25.1744, -19.7878, 0.15", "116.89, 25.1878, -19.7917, 0.15", "117.128, 25.2497, -19.801, 0.81", "117.183, 25.2667, -19.8016, 0.81", "117.756, 25.4626, -19.7816, 0.81", "118.151, 25.6181, -19.7425, 0.81", "118.204, 25.6398, -19.7372, 0.81", "118.623, 25.8011, -19.6985, 0.15", "118.684, 25.8244, -19.6931, 0.15", "119.365, 26.0816, -19.6362, 0.15", "119.446, 26.1121, -19.6251, 0.15", "120.817, 26.6292, -19.3833, 0.15", "121.114, 26.75, -19.3221, 0.44", "121.271, 26.819, -19.2861, 0.44", "121.384, 26.8737, -19.2568, 0.44", "122.01, 27.2057, -19.0689, 0.15", "122.17, 27.2942, -19.0145, 0.15", "122.537, 27.5288, -18.8447, 0.15", "122.841, 27.7192, -18.7054, 0.88", "123.195, 27.929, -18.5608, 0.88", "123.299, 27.988, -18.5295, 0.88" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-68.5467, 57.5934, 46.4328, 0.37", "-76.0932, 59.641, 53.3378, 0.37", "-83.2911, 61.7862, 60.5796, 0.37", "-90.4682, 63.2293, 68.0044, 0.37" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-68.5467, 57.5934, 46.4328, 0.29", "-77.2728, 60.1229, 50.5188, 0.37", "-86.8511, 61.9366, 52.5458, 0.37", "-96.0936, 64.981, 54.7331, 0.37", "-104.977, 69.5977, 54.767, 0.37", "-113.538, 74.7133, 53.7102, 0.37", "-121.27, 81.1517, 53.5131, 0.37", "-128.432, 88.1002, 54.8824, 0.37", "-134.216, 96.3673, 55.6688, 0.37", "-140.608, 103.822, 57.9626, 0.37", "-145.347, 112.748, 58.8356, 0.37", "-148.87, 121.982, 61.1222, 0.37", "-152.85, 130.641, 64.519, 0.37" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-31.8779, 79.4263, 44.1686, 0.29", "-34.4891, 86.4373, 49.3331, 0.29", "-36.671, 94.037, 53.8652, 0.29", "-37.1806, 101.667, 58.8223, 0.29", "-37.1095, 109.081, 64.1046, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-31.8779, 79.4263, 44.1686, 0.74", "-35.2068, 85.8489, 49.12, 0.29", "-38.673, 91.6192, 54.701, 0.29", "-42.4391, 97.4795, 59.9921, 0.29", "-45.738, 102.755, 66.1131, 0.29", "-49.8606, 107.373, 72.2424, 0.29", "-53.926, 111.739, 78.5815, 0.29", "-57.7354, 115.965, 85.1644, 0.29", "-62.2349, 121.335, 90.3792, 0.29", "-66.2166, 127.15, 95.5597, 0.29", "-70.7628, 132.101, 101.118, 0.29", "-74.4411, 137.138, 107.214, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "53.0194, -49.5352, 7.35455, 0.59", "53.8909, -49.6427, 7.71369, 0.59", "54.0671, -49.6597, 7.77953, 0.59", "54.4001, -49.689, 7.89989, 0.59", "55.3386, -49.8089, 8.23359, 0.44", "56.0812, -49.9173, 8.49536, 0.44", "57.0256, -50.0846, 8.76991, 0.81", "57.8225, -50.2614, 8.94257, 0.52", "57.881, -50.2802, 8.95364, 0.52", "58.7647, -50.6348, 9.05195, 0.22", "58.8295, -50.6651, 9.05492, 0.22", "59.8638, -51.2618, 9.03062, 0.52", "60.7266, -51.8487, 8.95839, 0.44", "61.6627, -52.5441, 8.84331, 0.44", "62.5159, -53.2068, 8.71945, 0.22", "62.6204, -53.2907, 8.70208, 0.22", "63.0311, -53.6302, 8.64019, 0.22", "63.2721, -53.8526, 8.65024, 0.22", "63.7101, -54.322, 8.78589, 0.22", "63.75, -54.373, 8.8172, 0.22", "64.0262, -54.773, 9.10682, 1.03", "64.0557, -54.8191, 9.13797, 1.03", "64.8404, -56.1504, 9.98261, 0.22", "65.2239, -56.872, 10.4024, 0.22", "65.2468, -56.922, 10.4333, 0.22", "65.5223, -57.5017, 10.788, 0.37", "65.7198, -57.913, 11.06, 0.59", "65.9068, -58.2419, 11.2823, 0.59", "65.9394, -58.2873, 11.3113, 0.59", "66.5783, -59.0563, 11.9161, 0.22", "67.0743, -59.5888, 12.382, 0.22", "67.5901, -60.0884, 12.8718, 0.74", "67.9715, -60.4265, 13.2222, 0.74", "68.4829, -60.8686, 13.6362, 0.74", "68.5248, -60.909, 13.6598, 0.74", "68.9377, -61.3285, 13.7974, 0.37", "69.028, -61.4278, 13.815, 0.22", "69.0707, -61.4743, 13.8178, 0.22", "69.6376, -62.1048, 13.833, 0.22", "70.7581, -63.3638, 13.8269, 0.22", "70.8026, -63.4087, 13.8272, 0.22", "71.2946, -63.8706, 13.83, 0.59", "71.785, -64.3174, 13.8357, 1.03", "72.278, -64.7499, 13.8448, 0.44", "72.5078, -64.9328, 13.8531, 0.22", "74.0468, -65.9707, 13.9641, 0.22", "74.0988, -66.0057, 13.9689, 0.22", "82.0359, -69.8132, 15.5589, 0.22", "89.2537, -75.1366, 16.1567, 0.22", "97.3103, -79.0432, 15.9433, 0.22", "104.746, -84.0839, 16.0731, 0.22", "111.486, -90.0628, 16.1941, 0.22" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "53.0194, -49.5352, 7.35455, 0.88", "53.1918, -49.9567, 7.25485, 0.88", "53.4786, -50.8351, 7.04361, 0.66", "53.494, -50.8876, 7.03092, 0.66", "53.7364, -51.6662, 6.85467, 0.66", "54.0717, -52.7166, 6.62505, 0.59", "54.2794, -53.3154, 6.47052, 0.81", "54.5519, -54.0799, 6.2655, 0.81", "54.5944, -54.1873, 6.23185, 0.81", "54.9122, -54.9141, 5.98344, 0.52", "54.938, -54.9607, 5.96611, 0.52", "55.5192, -55.5025, 5.79485, 0.37", "55.5857, -55.5428, 5.78579, 0.37", "56.1377, -55.7675, 5.77114, 0.37", "56.459, -55.8742, 5.7813, 0.37", "57.0828, -56.0479, 5.83978, 0.37", "58.2027, -56.3452, 5.918, 0.22", "58.3277, -56.3789, 5.93024, 0.22", "59.0144, -56.6052, 5.9735, 0.81", "59.1254, -56.6453, 5.97719, 0.81", "59.6544, -56.9221, 5.9904, 1.18", "60.5092, -57.5626, 6.01496, 0.88", "60.8226, -57.8871, 6.02729, 0.29", "61.5263, -58.7602, 6.07923, 0.29", "61.5677, -58.827, 6.08706, 0.29", "62.2078, -60.0139, 6.26448, 0.29", "62.4509, -60.4957, 6.32213, 0.81", "62.7671, -61.131, 6.39343, 0.81", "63.0681, -61.7403, 6.45055, 0.81", "63.6694, -62.9512, 6.56015, 0.44", "64.0829, -63.7768, 6.61381, 0.44", "64.6187, -64.7939, 6.61899, 1.11", "64.8588, -65.214, 6.60403, 1.11" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "70.9504, -38.1968, 44.4535, 0.29", "75.205, -38.2026, 50.9836, 0.29", "78.296, -38.7382, 58.1263, 0.29", "80.3458, -40.5424, 65.4579, 0.29", "80.7039, -43.6764, 72.6595, 0.29", "82.0084, -46.5116, 79.8612, 0.29", "81.9355, -49.4114, 87.1653, 0.29", "81.2492, -52.066, 94.5276, 0.29", "80.4619, -56.3951, 101.091, 0.29", "80.8179, -60.6838, 107.706, 0.29" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "70.9504, -38.1968, 44.4535, 0.74", "83.9243, -40.6171, 49.6295, 0.29", "96.6053, -40.6827, 55.9595, 0.29", "110.221, -38.7251, 59.4426, 0.29", "123.313, -36.5944, 64.4783, 0.29", "136.988, -37.1953, 68.1525, 0.29", "150.239, -35.3369, 72.8642, 0.29", "163.553, -30.967, 75.3183, 0.29", "176.039, -25.6753, 79.6514, 0.29" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "29.34, -58.0407, 44.0932, 0.37", "29.6843, -58.3258, 44.298, 0.37", "30.2845, -58.9999, 44.8249, 0.37", "30.9266, -60.0411, 45.5666, 0.22", "30.9527, -60.097, 45.601, 0.22", "31.5167, -61.8171, 46.3997, 0.52", "31.6836, -62.4548, 46.6476, 0.52", "31.8313, -63.7043, 47.0035, 0.37", "31.8366, -65.0118, 47.1755, 0.22", "31.8006, -65.8146, 47.1784, 0.22", "31.7117, -67.2736, 46.9415, 0.22", "31.7045, -67.3405, 46.9192, 0.22", "31.5954, -68.1108, 46.5933, 0.22", "31.2983, -69.8634, 45.7783, 0.22", "31.1826, -70.655, 45.4166, 0.22", "31.0343, -72.2444, 44.7212, 0.22", "30.9166, -74.673, 43.7037, 0.15", "30.8942, -76.7164, 42.8815, 0.15", "30.9738, -79.4113, 41.8058, 0.15", "31.108, -81.8951, 40.8117, 0.15", "31.3797, -85.4259, 39.4335, 0.15", "31.5294, -86.6316, 38.9816, 0.59", "31.7521, -87.7986, 38.559, 0.59", "32.0227, -88.8707, 38.1809, 0.29", "32.2404, -89.4644, 37.9534, 0.29", "34.4208, -99.2635, 36.2628, 0.29", "35.0884, -109.385, 35.7967, 0.29" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "29.34, -58.0407, 44.0932, 0.59", "29.6443, -58.1723, 44.2543, 0.59", "30.4561, -58.6357, 44.8165, 0.22", "30.872, -58.8353, 45.0456, 0.22", "32.432, -59.5502, 45.8451, 0.22", "32.4851, -59.571, 45.8659, 0.22", "33.8779, -60.1168, 46.4119, 0.22", "35.482, -60.7843, 47.0578, 0.22", "37.5302, -61.7171, 47.9157, 0.22", "37.5828, -61.7401, 47.9353, 0.22", "39.3891, -62.3561, 48.4276, 0.22", "47.0765, -64.6456, 51.6723, 0.22", "54.0574, -66.563, 56.3815, 0.22", "61.9285, -67.4758, 59.7963, 0.22", "69.8475, -66.7647, 63.1033, 0.22", "77.9689, -67.8199, 65.836, 0.22", "85.4599, -68.011, 70.0892, 0.22", "93.0918, -68.1851, 74.0862, 0.22", "100.586, -67.8175, 78.314, 0.22", "106.933, -66.4776, 83.9692, 0.22", "113.159, -66.0217, 89.8958, 0.22", "119.755, -64.6823, 95.2591, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-11.502, -28.5691, -13.0291, 0.96", "-11.0926, -30.954, -18.7698, 0.96", "-10.9864, -31.5732, -20.2604, 0.96", "-10.9806, -31.6066, -20.3406, 0.96" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-11.502, -28.5691, -13.0291, 1.4", "-11.9288, -28.8459, -12.8792, 1.4", "-13.3333, -29.7693, -12.3444, 1.03", "-13.4291, -29.8342, -12.3029, 1.03", "-14.6103, -30.6632, -11.7759, 0.59", "-15.8054, -31.6116, -11.1423, 0.59", "-17.0419, -32.6596, -10.4988, 0.66", "-17.1083, -32.7235, -10.4639, 0.66", "-18.3254, -34.0471, -9.8092, 0.66", "-19.26, -35.1703, -9.33439, 0.44", "-20.474, -36.8236, -8.74459, 0.44", "-21.1422, -37.84, -8.45834, 0.66", "-22.0318, -39.2108, -8.13505, 0.66", "-22.1535, -39.3706, -8.09434, 0.66", "-23.3452, -40.5718, -7.73029, 0.66", "-23.4466, -40.6435, -7.68921, 0.66", "-24.4519, -41.1118, -7.2242, 0.66", "-25.7302, -41.5627, -6.48801, 0.88", "-27.4688, -42.0672, -5.41997, 1.03", "-28.8961, -42.4497, -4.51043, 0.74", "-30.7164, -42.9625, -3.30966, 0.66", "-32.3848, -43.4856, -2.1942, 0.66", "-33.4151, -43.8825, -1.47615, 0.66", "-34.858, -44.6152, -0.400252, 0.66", "-34.9179, -44.6566, -0.354519, 0.66", "-36.4287, -45.9719, 0.783343, 0.66", "-36.4921, -46.0338, 0.826418, 0.66", "-37.7542, -47.283, 1.65433, 0.66", "-37.8119, -47.337, 1.68885, 0.66", "-39.1985, -48.5142, 2.50088, 0.66", "-39.428, -48.6832, 2.62251, 1.03", "-40.2938, -49.1966, 3.02319, 0.52", "-41.7373, -49.9642, 3.61905, 0.52", "-41.8094, -50.0009, 3.64798, 0.52", "-42.6557, -50.453, 3.98974, 0.66", "-43.7412, -51.0501, 4.42793, 0.66", "-44.853, -51.7133, 4.86543, 1.4", "-45.5342, -52.1573, 5.1304, 0.81", "-46.9173, -53.0899, 5.64722, 0.52", "-48.1911, -53.9659, 6.13162, 0.37", "-49.2825, -54.7314, 6.55617, 0.81", "-50.1593, -55.3839, 6.89789, 0.96", "-51.1077, -56.1201, 7.26309, 0.96", "-52.3725, -57.1152, 7.73119, 0.66", "-53.4048, -57.9219, 8.0845, 0.66", "-53.4968, -57.9968, 8.11748, 0.66", "-55.0429, -59.2852, 8.68182, 0.66", "-55.1071, -59.3391, 8.70223, 0.66", "-56.2955, -60.405, 9.01685, 0.66", "-57.8992, -61.9408, 9.35865, 0.66", "-59.1748, -63.1826, 9.56095, 0.66", "-59.2262, -63.2356, 9.56835, 0.66", "-60.3587, -64.4598, 9.73511, 0.66", "-61.5151, -65.7718, 9.93547, 0.66", "-62.0605, -66.3902, 10.0538, 0.44", "-62.1181, -66.4527, 10.0697, 0.44", "-62.7389, -67.015, 10.2264, 0.44", "-63.5515, -67.586, 10.415, 0.44", "-64.6967, -68.1594, 10.6199, 0.88", "-66.3019, -68.7515, 10.8031, 0.96", "-66.991, -68.9679, 10.8499, 0.96", "-68.6988, -69.4499, 10.8716, 0.44", "-70.3118, -69.8478, 10.7982, 0.44", "-71.8468, -70.2315, 10.6511, 0.44", "-72.9929, -70.5202, 10.4982, 0.44", "-73.0739, -70.5455, 10.4849, 0.44", "-73.98, -70.9101, 10.3404, 0.66", "-74.0539, -70.9538, 10.3332, 0.66", "-75.0135, -71.6884, 10.2111, 0.66", "-75.0868, -71.7542, 10.2036, 0.66", "-75.8484, -72.4364, 10.0955, 0.52", "-76.6838, -73.1078, 9.96129, 0.29", "-77.781, -73.8585, 9.76794, 0.29", "-78.7828, -74.4682, 9.5722, 0.96", "-79.9699, -75.1016, 9.35681, 0.96", "-81.3037, -75.7735, 9.19834, 0.88", "-82.7305, -76.4367, 9.12375, 0.74", "-84.6262, -77.261, 9.18687, 0.52", "-84.6941, -77.288, 9.19514, 0.52", "-86.2956, -77.9151, 9.55379, 0.52", "-87.6883, -78.4336, 9.98578, 0.96", "-88.7899, -78.8752, 10.4645, 1.18", "-89.8844, -79.3887, 11.0765, 0.59", "-90.3339, -79.6393, 11.3709, 0.29", "-90.7147, -79.8595, 11.5872, 0.15", "-90.7948, -79.9067, 11.619, 0.29", "-91.4198, -80.229, 11.6853, 0.29", "-91.8914, -80.4293, 11.683, 0.29", "-92.5359, -80.6249, 11.5795, 0.29", "-93.7305, -80.8896, 11.3666, 0.29", "-94.6074, -81.0371, 11.2404, 0.44", "-95.7451, -81.1892, 11.1045, 0.96", "-96.8687, -81.3224, 11.0027, 1.33", "-98.5875, -81.5377, 10.9411, 1.33", "-99.6675, -81.7138, 10.9711, 0.52", "-100.796, -81.978, 11.0858, 0.22", "-100.888, -82.0091, 11.0988, 0.22", "-101.82, -82.4525, 11.228, 0.22", "-102.572, -82.9041, 11.3248, 0.52", "-103.308, -83.4202, 11.4422, 0.88", "-103.378, -83.4698, 11.4487, 0.88", "-104.117, -83.9775, 11.4792, 0.88", "-105.65, -84.9504, 11.5587, 0.22", "-105.724, -84.9935, 11.5625, 0.22", "-106.979, -85.6799, 11.6725, 0.22", "-107.652, -86.0296, 11.7459, 0.22", "-107.717, -86.0629, 11.7548, 0.22", "-108.704, -86.5946, 11.9119, 0.22", "-109.038, -86.8073, 11.9771, 0.22", "-110.608, -87.8929, 12.2411, 0.22", "-111.444, -88.5415, 12.3556, 1.25", "-111.507, -88.5993, 12.3633, 1.25", "-112.441, -89.506, 12.4641, 1.62", "-113.236, -90.3407, 12.5143, 1.62", "-114.045, -91.2551, 12.5603, 0.22", "-114.396, -91.7063, 12.5794, 0.22", "-115.762, -93.6513, 12.6802, 0.22", "-115.865, -93.8067, 12.6872, 0.22", "-116.357, -94.595, 12.7194, 0.22", "-116.89, -95.4737, 12.7528, 0.96", "-117.663, -96.7782, 12.8029, 0.96", "-118.269, -97.6943, 12.8659, 0.15", "-118.867, -98.524, 12.9478, 0.15", "-118.929, -98.6, 12.9615, 0.15", "-119.938, -99.6833, 13.2674, 0.15", "-120.113, -99.8563, 13.3267, 0.15", "-121.042, -100.68, 13.6088, 0.15", "-121.106, -100.735, 13.626, 0.15", "-122.345, -101.786, 13.9123, 0.15", "-122.727, -102.122, 13.9874, 0.88", "-123.564, -102.877, 14.1208, 1.11", "-124.39, -103.658, 14.2577, 0.66", "-124.763, -104.033, 14.3108, 0.22", "-125.286, -104.535, 14.385, 0.15", "-125.35, -104.592, 14.3931, 0.15", "-126.123, -105.265, 14.5391, 0.15", "-126.755, -105.78, 14.7069, 0.15", "-127.218, -106.169, 14.8619, 0.37", "-127.566, -106.454, 14.9743, 0.15", "-127.714, -106.572, 15.0131, 0.15", "-128.552, -107.262, 15.1925, 0.15", "-129.339, -107.921, 15.326, 0.15", "-129.763, -108.265, 15.3865, 0.81", "-130.633, -108.954, 15.5184, 0.81", "-131.356, -109.483, 15.6388, 0.22", "-132.183, -110.039, 15.7875, 0.22", "-132.338, -110.136, 15.8123, 0.22", "-133.19, -110.708, 15.929, 0.22", "-133.26, -110.757, 15.9378, 0.22", "-134.691, -111.86, 16.107, 0.22", "-134.837, -111.973, 16.1041, 0.22", "-135.823, -112.679, 15.6371, 0.22", "-136.612, -113.259, 15.0822, 0.22", "-136.727, -113.333, 14.9777, 0.22", "-137.239, -113.643, 14.4849, 0.96", "-138.742, -114.517, 13.0338, 0.66", "-141.211, -115.792, 10.7565, 0.22", "-142.091, -116.219, 10.0077, 0.22", "-144.178, -117.266, 8.39272, 0.52", "-144.875, -117.642, 7.91436, 0.96", "-145.991, -118.268, 7.28052, 0.96", "-147.275, -119.086, 6.81818, 0.15", "-148.516, -119.974, 6.63204, 0.22", "-149.746, -120.908, 6.56838, 0.22", "-150.082, -121.203, 6.60991, 0.22", "-150.552, -121.637, 6.71984, 0.44", "-151.093, -122.234, 6.94389, 0.74", "-151.143, -122.296, 6.97605, 0.74", "-151.667, -122.871, 7.25687, 0.74", "-151.725, -122.929, 7.28396, 0.74", "-152.653, -123.905, 7.66196, 0.22", "-153.7, -124.976, 7.97756, 0.22", "-153.76, -125.036, 7.9927, 0.22", "-154.835, -126.024, 8.23209, 0.22", "-155.56, -126.665, 8.37526, 0.22", "-155.702, -126.782, 8.40114, 0.22", "-157.761, -128.34, 8.66265, 0.22", "-157.936, -128.466, 8.68581, 0.22", "-159.927, -130.015, 9.09539, 0.22", "-160.223, -130.26, 9.17641, 0.22", "-161.075, -130.974, 9.43447, 0.52", "-161.973, -131.72, 9.73508, 1.33", "-162.849, -132.437, 10.0647, 1.55", "-164.417, -133.671, 10.6916, 0.37", "-164.894, -134.035, 10.9036, 0.22", "-165.227, -134.285, 11.0545, 0.22", "-166.314, -135.12, 11.5438, 0.22", "-166.446, -135.229, 11.6142, 0.22", "-166.976, -135.661, 11.8725, 0.22", "-167.067, -135.736, 11.9035, 0.22", "-167.49, -136.159, 12.082, 0.59", "-168.043, -136.734, 12.334, 0.59", "-168.79, -137.588, 12.6977, 0.22", "-168.924, -137.729, 12.7621, 0.22", "-169.361, -138.16, 12.9742, 0.22", "-169.747, -138.514, 13.1477, 0.22", "-171.024, -139.595, 13.6954, 0.22", "-171.231, -139.768, 13.7854, 0.66", "-171.57, -140.042, 13.9169, 0.22", "-171.633, -140.093, 13.9462, 0.22", "-172.69, -140.966, 14.5156, 0.22", "-172.775, -141.037, 14.566, 0.22", "-173.382, -141.527, 14.9486, 0.66", "-174.173, -142.108, 15.4388, 0.66", "-174.966, -142.72, 15.9034, 0.22", "-175.028, -142.768, 15.9385, 0.22", "-175.707, -143.221, 16.1957, 0.22", "-176.395, -143.628, 16.364, 0.22", "-176.647, -143.754, 16.3791, 0.22", "-178.879, -144.753, 16.2787, 0.22", "-178.97, -144.79, 16.2685, 0.22", "-181.093, -145.585, 15.997, 0.15", "-181.944, -145.894, 15.8729, 1.11", "-183.495, -146.375, 15.4822, 0.44", "-184.176, -146.543, 15.2257, 0.44", "-184.339, -146.582, 15.1515, 0.44", "-185.718, -146.953, 14.4857, 0.44", "-186.576, -147.193, 13.9768, 0.81", "-189.892, -148.211, 11.8265, 0.22", "-192.556, -149.079, 10.0253, 0.74", "-193.459, -149.4, 9.40408, 0.74", "-193.535, -149.431, 9.35081, 0.74", "-196.741, -150.805, 6.92225, 0.22", "-198.007, -151.39, 5.93926, 0.22", "-198.22, -151.516, 5.79196, 0.22", "-199.515, -152.38, 5.00189, 0.22", "-200.04, -152.733, 4.72425, 0.88", "-202.376, -154.399, 3.61328, 0.22", "-202.529, -154.524, 3.56051, 0.22", "-204.467, -156.055, 2.7598, 0.22", "-204.815, -156.323, 2.60939, 0.81", "-205.66, -156.93, 2.23082, 0.52" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-9.38055, -31.6202, 0.823123, 0.29", "-8.46496, -31.9978, -4.80753, 0.29", "-8.24089, -31.9921, -5.66302, 0.44", "-8.21405, -31.9847, -5.72907, 0.44", "-7.53827, -31.7438, -7.05802, 0.44", "-8.29395, -32.0712, -5.8277, 0.44", "-8.36734, -32.1058, -5.72197, 0.44", "-9.44115, -32.7431, -4.5281, 0.44", "-10.1014, -33.1185, -3.87955, 0.44", "-10.1494, -33.1501, -3.83616, 0.44", "-10.5484, -33.4564, -3.53864, 0.66", "-10.591, -33.5074, -3.50975, 0.66", "-11.0688, -34.2204, -3.24626, 0.66", "-11.101, -34.2845, -3.23261, 0.66", "-11.5344, -35.1491, -3.04212, 0.44", "-11.5673, -35.2126, -3.02749, 0.44", "-12.0195, -36.1126, -2.79728, 0.44", "-12.0519, -36.1757, -2.78016, 0.44", "-12.4795, -37.0602, -2.55341, 0.44", "-12.7505, -37.6772, -2.3549, 0.74", "-13.0091, -38.332, -2.02866, 0.74", "-13.3518, -39.2209, -1.50236, 0.59", "-13.3765, -39.2871, -1.45852, 0.59", "-13.8289, -40.468, -0.573078, 0.59", "-14.2688, -41.5389, 0.428778, 0.81", "-14.9556, -42.9356, 2.06981, 0.52", "-15.3663, -43.6429, 3.01593, 0.52", "-15.3946, -43.688, 3.07892, 0.52", "-16.0681, -44.7852, 4.56524, 0.52", "-16.7037, -45.868, 5.91935, 0.74", "-17.2429, -46.8611, 6.97864, 0.52", "-17.5376, -47.4499, 7.5118, 0.52", "-17.9368, -48.2879, 8.24658, 0.52", "-18.6075, -49.4993, 9.25584, 0.52", "-19.3244, -50.5035, 10.0105, 0.81", "-19.3673, -50.564, 10.0476, 0.81", "-19.7404, -51.0545, 10.338, 0.74", "-20.7948, -52.0468, 11.1084, 0.59", "-22.029, -52.6227, 11.8623, 0.81", "-23.1769, -52.7641, 12.4547, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-9.38055, -31.6202, 0.823123, 0.74", "-9.38729, -31.7738, 0.782121, 0.74", "-9.45655, -32.4606, 0.5866, 1.18", "-9.596, -33.5706, 0.263979, 1.03", "-9.80552, -35.2999, -0.233068, 0.74", "-9.99188, -36.7322, -0.685011, 0.66", "-10.2277, -38.4135, -1.2188, 0.66", "-10.3334, -39.0191, -1.45053, 1.03", "-10.358, -39.1424, -1.5035, 1.03", "-10.4935, -39.8577, -1.81863, 0.81", "-10.6437, -41.0939, -2.28643, 0.81", "-10.715, -42.4835, -2.71523, 0.81", "-10.6915, -44.2063, -3.16005, 0.52", "-10.6205, -45.4002, -3.40763, 0.74", "-10.4598, -47.2432, -3.60984, 1.03", "-10.2283, -49.2694, -3.64241, 0.96", "-10.2176, -49.3468, -3.63733, 0.96", "-10.0585, -50.4397, -3.51324, 1.18", "-9.82773, -52.0873, -3.25665, 1.03", "-9.56118, -54.4204, -2.887, 1.03", "-9.41741, -56.1544, -2.61331, 0.96", "-9.31579, -57.6014, -2.41509, 0.81", "-9.23786, -58.6755, -2.27826, 1.03", "-9.14341, -59.4482, -2.2009, 0.74", "-9.00177, -60.2263, -2.16203, 0.59", "-8.98342, -60.2922, -2.16111, 0.59", "-8.56296, -61.4617, -2.13015, 0.59", "-8.50611, -61.596, -2.11988, 0.59", "-7.3795, -64.1951, -1.72385, 0.59", "-7.35703, -64.258, -1.71, 0.59", "-6.83912, -65.9277, -1.27453, 0.59", "-6.8082, -66.0648, -1.23407, 0.59", "-6.70008, -66.9894, -0.928331, 1.03", "-6.55299, -69.111, -0.179936, 0.81", "-6.61034, -71.5618, 0.779271, 0.81", "-6.61293, -71.6164, 0.80023, 0.81", "-6.73277, -72.8404, 1.24929, 1.55", "-6.82954, -73.7072, 1.55656, 1.92" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-12.6893, 131.48, 50.4765, 0.37", "-21.3238, 136.167, 56.8273, 0.37" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-12.6893, 131.48, 50.4765, 0.29", "-11.8252, 137.374, 58.8038, 0.37", "-11.9804, 143.785, 66.8111, 0.37", "-11.583, 148.968, 75.6154, 0.37", "-12.5452, 154.941, 83.8915, 0.37", "-13.2804, 161.688, 91.6024, 0.37" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "23.6483, 51.7416, -126.852, 0.22", "25.8627, 53.6718, -128.999, 0.22", "27.587, 55.2146, -130.651, 0.22", "27.6707, 55.2883, -130.741, 0.22", "29.9939, 57.3812, -133.27, 0.22", "30.6491, 58.0392, -133.972, 1.03", "31.0026, 58.4147, -134.403, 1.03", "31.0437, 58.4645, -134.453, 1.03", "32.1061, 59.9894, -136.171, 0.22", "32.8295, 61.0884, -137.471, 0.22", "33.5532, 62.3942, -138.966, 0.22", "34.5208, 64.5069, -141.511, 0.22", "34.9647, 65.9036, -142.98, 0.22", "35.4849, 68.3037, -145.587, 0.22", "35.4936, 68.3678, -145.656, 0.22", "35.517, 69.8483, -147.167, 0.22", "35.343, 72.7579, -149.684, 0.22", "35.0395, 76.0757, -152.366, 0.22", "34.5691, 80.3217, -155.78, 0.22", "34.5402, 80.6568, -156.035, 0.44", "34.2192, 85.8289, -159.895, 0.15", "34.1931, 89.6242, -162.574, 0.15", "34.4328, 94.8917, -165.914, 0.15", "34.4451, 95.0068, -165.984, 0.15", "34.785, 97.3306, -167.185, 0.15", "34.8116, 97.4568, -167.252, 0.15", "36.1525, 100.544, -169.005, 0.15", "36.2707, 100.72, -169.097, 0.15", "37.1498, 101.821, -169.223, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "23.6483, 51.7416, -126.852, 0.22", "23.2223, 53.1894, -127.496, 0.22", "22.9635, 54.1233, -127.84, 0.22", "22.9227, 54.2721, -127.907, 0.22", "22.6205, 55.6731, -128.548, 0.22", "22.5644, 56.094, -128.725, 0.66", "22.522, 56.5426, -128.906, 0.22", "22.5118, 57.4914, -129.23, 0.22", "22.6055, 58.8494, -129.703, 0.22", "22.8196, 60.0356, -130.103, 0.22", "23.1868, 61.461, -130.575, 0.22", "23.2009, 61.5076, -130.591, 0.22", "23.4654, 62.2618, -130.833, 0.22", "23.4853, 62.3072, -130.845, 0.22", "24.3779, 64.0755, -131.095, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-37.1095, 109.081, 64.1046, 0.37", "-38.4309, 117.299, 68.7362, 0.37", "-39.5022, 125.729, 73.052, 0.37", "-39.469, 133.508, 78.491, 0.37", "-39.0261, 142.162, 82.4362, 0.37" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-37.1095, 109.081, 64.1046, 0.29", "-38.5268, 118.202, 69.5494, 0.37", "-38.7206, 127.429, 74.9845, 0.37", "-38.935, 137.243, 79.3367, 0.37", "-37.9786, 147.239, 83.1347, 0.37" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "64.8588, -65.214, 6.60403, 0.74", "64.3568, -66.3707, 6.73725, 0.74", "64.0479, -67.3962, 6.64754, 0.59", "63.7439, -68.405, 6.55928, 0.59", "63.7265, -68.4629, 6.55421, 0.59", "63.2758, -69.9588, 6.42334, 0.59", "63.2554, -70.0264, 6.41743, 0.59", "62.443, -72.5255, 6.39078, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "64.8588, -65.214, 6.60403, 1.11", "65.2694, -65.4404, 6.48048, 1.11", "66.5524, -66.2791, 6.13978, 0.52", "66.678, -66.3857, 6.11174, 0.52", "67.5615, -67.3002, 5.88757, 0.52", "67.6122, -67.3522, 5.86904, 0.52", "68.5804, -68.3373, 5.46329, 0.74", "68.6342, -68.3986, 5.43694, 0.74", "69.6655, -69.7515, 4.87569, 0.74", "70.3106, -70.6429, 4.44021, 0.74", "70.9924, -71.6348, 3.88533, 0.29", "71.0291, -71.6911, 3.85158, 0.29", "71.2242, -71.9686, 3.65164, 0.29", "71.2689, -72.027, 3.60733, 0.29", "71.8296, -72.6961, 3.05835, 0.29", "72.3392, -73.2723, 2.63643, 0.52", "72.3829, -73.3242, 2.6043, 0.52", "73.3059, -74.3897, 1.94489, 0.52", "73.9528, -75.159, 1.46026, 0.52", "73.9892, -75.2037, 1.43156, 0.52", "74.2711, -75.5736, 1.18166, 0.22", "74.4915, -75.9066, 0.949565, 0.22", "74.5307, -75.9669, 0.902528, 0.22", "74.9644, -76.6829, 0.327642, 0.22", "75.0049, -76.7474, 0.287639, 0.22", "75.7553, -77.9588, -0.159033, 0.22", "75.8422, -78.0991, -0.190256, 0.22", "76.5729, -79.2627, -0.340228, 0.81", "76.9758, -79.8894, -0.375298, 0.81", "78.1236, -81.6399, -0.361467, 0.37", "79.0224, -83.0438, -0.293625, 0.37", "79.4298, -83.7037, -0.226579, 0.44", "79.6065, -84.0026, -0.191859, 0.15", "80.3971, -85.4417, 0.0135358, 0.15", "80.4335, -85.5066, 0.0211838, 0.15", "80.5229, -85.6483, 0.0226439, 0.66", "80.7265, -85.942, -0.0141518, 0.88", "80.7874, -86.0281, -0.025751, 0.88", "81.1967, -86.6207, -0.11176, 0.88", "88.9257, -93.9639, -0.251657, 0.88", "96.6162, -101.206, -1.82381, 0.88" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-10.9806, -31.6066, -20.3406, 0.59", "-8.60865, -32.1272, -26.8751, 0.59", "-8.56859, -32.1421, -26.9399, 0.59", "-7.47063, -32.7737, -27.524, 0.59", "-7.41493, -32.8063, -27.5461, 0.59", "-6.05082, -33.5761, -28.3713, 0.59", "-5.88734, -33.666, -28.4764, 0.59", "-3.68259, -35.0061, -29.5676, 0.59", "-2.71298, -35.6201, -30.1837, 1.03", "-0.85505, -36.9238, -31.8252, 0.88", "1.09213, -38.4602, -34.2652, 0.74", "1.44248, -38.7656, -34.8435, 0.74", "2.24309, -39.4816, -36.436, 0.74", "2.26856, -39.5035, -36.4951, 0.74", "2.98412, -40.0666, -38.0969, 1.03", "3.97855, -40.8849, -40.148, 0.29", "4.44074, -41.1712, -40.8538, 0.44", "5.36647, -41.5839, -41.8878, 0.88", "6.25046, -41.8541, -42.5791, 1.03", "7.21774, -42.0881, -43.2717, 1.03", "7.27581, -42.0961, -43.3058, 1.03", "8.94708, -42.227, -44.197, 1.03", "10.2646, -42.2758, -44.9759, 0.44", "10.3218, -42.2765, -45.0123, 0.44", "12.4136, -42.3686, -47.0537, 0.74", "13.0299, -42.4859, -47.7833, 0.74", "13.0702, -42.5006, -47.8359, 0.74", "13.3226, -42.6389, -48.1838, 0.74", "13.3649, -42.6664, -48.243, 0.74", "15.3285, -44.2118, -50.9698, 0.88", "16.408, -45.2234, -52.5635, 0.88", "17.6455, -46.3863, -54.4548, 0.59", "18.1021, -46.8027, -55.1527, 0.88", "18.1406, -46.8382, -55.2104, 0.88", "19.0512, -47.7335, -56.6188, 0.52", "20.0261, -48.8029, -58.27, 0.37", "20.4278, -49.3115, -59.1028, 0.37", "20.4542, -49.3467, -59.155, 0.37", "20.9686, -50.0007, -60.0963, 0.37", "21.9711, -51.3114, -61.7527, 0.37", "23.1302, -52.7881, -63.5422, 0.37", "23.2021, -52.8754, -63.6451, 0.37", "23.9943, -53.7711, -64.8327, 0.37", "25.7572, -55.5609, -67.4907, 0.37", "26.3847, -56.1124, -68.4072, 0.37", "27.5128, -56.9563, -69.8978, 0.96", "28.0441, -57.3015, -70.5985, 0.96", "29.8536, -58.4014, -73.0747, 0.44", "29.896, -58.4239, -73.1357, 0.44", "30.4046, -58.6638, -73.8101, 1.33", "30.9297, -58.9, -74.6937, 1.33", "32.8327, -59.7758, -78.0674, 0.66", "32.9296, -59.822, -78.2639, 0.66", "33.8786, -60.3032, -80.2239, 1.55", "34.3168, -60.533, -81.1588, 1.55", "37.6244, -62.2998, -88.5719, 0.81", "38.017, -62.5154, -89.4902, 1.77", "39.5986, -63.4086, -93.1941, 0.44", "40.2477, -63.7915, -94.6939, 0.44", "40.2737, -63.8084, -94.7543, 0.44", "41.1696, -64.4638, -96.7831, 0.88", "41.2029, -64.496, -96.8457, 0.88", "42.0082, -65.3976, -98.4498, 0.37", "42.4724, -65.9519, -99.2521, 0.37", "43.1254, -66.7277, -100.411, 0.74", "43.3991, -67.074, -100.987, 0.74", "44.1128, -68.0371, -102.641, 0.37", "44.1365, -68.0688, -102.696, 0.37", "44.5631, -68.662, -103.743, 0.37", "45.222, -69.5275, -105.313, 1.18", "47.2064, -71.9662, -109.784, 0.44", "47.2323, -71.9936, -109.841, 0.44", "47.699, -72.4417, -110.853, 0.44", "48.5589, -73.1663, -112.645, 0.44", "48.879, -73.3997, -113.281, 0.44", "48.983, -73.4626, -113.457, 0.44", "50.531, -74.1501, -115.496, 0.37", "50.5727, -74.1702, -115.558, 0.37", "51.1312, -74.4384, -116.491, 0.37", "52.0469, -75.0168, -118.314, 0.37", "52.1348, -75.0878, -118.515, 0.37", "52.4586, -75.3966, -119.259, 0.37", "53.4872, -76.535, -121.621, 0.37", "53.5158, -76.5683, -121.685, 0.37", "54.7823, -78.0306, -124.374, 0.15", "55.495, -78.8269, -125.76, 0.88", "55.8672, -79.2296, -126.425, 0.88", "55.8969, -79.2636, -126.476, 0.88", "57.1363, -80.803, -128.655, 0.29", "58.6237, -82.7059, -131.241, 0.29", "59.6501, -84.0454, -132.997, 0.29", "61.0881, -85.9767, -135.506, 0.96", "62.9252, -88.4782, -138.801, 0.22", "63.9603, -89.9109, -140.676, 0.37", "65.0971, -91.5347, -142.771, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-10.9806, -31.6066, -20.3406, 0.74", "-11.5368, -33.433, -21.7043, 0.74", "-11.5508, -33.497, -21.7406, 0.74", "-11.7157, -34.4019, -22.1869, 0.74", "-11.9519, -35.8703, -22.7871, 0.74", "-12.2198, -37.1599, -23.2771, 0.74", "-12.243, -37.2364, -23.3081, 0.74", "-12.6914, -38.4367, -23.667, 0.74", "-12.755, -38.5772, -23.7117, 0.74", "-13.2885, -39.5246, -24.0388, 0.74", "-13.8554, -40.3574, -24.317, 0.74", "-14.6633, -41.519, -24.8294, 0.44", "-14.6956, -41.5785, -24.8609, 0.44", "-14.9408, -42.185, -25.2853, 0.66", "-14.9542, -42.2342, -25.3241, 0.66", "-15.0568, -42.8267, -25.8735, 0.96", "-15.1774, -44.053, -27.0659, 0.96", "-15.2558, -45.2033, -28.3147, 1.18", "-15.4057, -46.5281, -30.0676, 1.18", "-15.6238, -47.6686, -31.8158, 1.18", "-15.9242, -48.7582, -33.6852, 0.96", "-15.9534, -48.822, -33.8153, 0.96", "-16.5348, -49.5817, -35.7072, 0.88", "-17.4564, -50.3712, -38.1044, 0.44", "-17.9134, -50.6129, -38.9984, 0.66", "-17.9537, -50.6273, -39.0583, 0.66", "-18.9818, -50.9498, -40.2693, 0.66", "-19.7671, -51.211, -41.0852, 0.44", "-19.8288, -51.2346, -41.1375, 0.44", "-21.1825, -51.9036, -42.1616, 0.74", "-21.7065, -52.2415, -42.6141, 0.74", "-21.7496, -52.2792, -42.661, 0.74", "-22.2461, -52.9352, -43.7006, 0.44", "-22.4646, -53.2516, -44.2041, 0.44", "-22.6385, -53.482, -44.5762, 0.44", "-23.1122, -54.0986, -45.5104, 0.44", "-23.8892, -55.0621, -47.0031, 0.81", "-25.4734, -56.9423, -49.9469, 0.96", "-26.3087, -57.9447, -51.4751, 1.77", "-27.4953, -59.4186, -53.7012, 1.47", "-28.0071, -60.0863, -54.6464, 1.47", "-28.9937, -61.5486, -56.4653, 1.47", "-29.0153, -61.6001, -56.5146, 1.47", "-29.1936, -62.3421, -57.109, 1.55", "-29.4549, -64.2362, -58.5846, 1.11", "-29.5186, -65.0998, -59.1986, 0.66", "-29.6238, -66.5639, -60.204, 0.37", "-29.7796, -68.7968, -61.529, 0.37", "-29.9418, -70.5845, -62.5728, 0.37", "-30.0965, -71.7989, -63.2624, 0.37", "-30.1181, -71.9161, -63.33, 0.37", "-30.3462, -72.7403, -63.843, 0.37", "-30.8704, -74.0228, -64.9009, 0.37", "-31.4321, -75.173, -65.8295, 0.22", "-31.6431, -75.6351, -66.1716, 0.22", "-32.3972, -77.2975, -67.3489, 1.25", "-32.8674, -78.2882, -68.0198, 1.62", "-34.3604, -81.2869, -70.049, 0.22", "-35.6019, -83.5153, -71.5748, 0.22", "-35.6348, -83.573, -71.6087, 0.22", "-36.1548, -84.5182, -72.0949, 0.22", "-36.1978, -84.5848, -72.1264, 0.22", "-37.4348, -86.27, -73.0167, 0.22", "-37.5266, -86.3818, -73.0836, 0.22", "-38.2491, -87.2846, -73.7799, 0.22", "-38.3728, -87.4511, -73.9052, 0.22", "-39.3906, -88.9137, -74.9344, 0.22", "-39.9064, -89.8245, -75.4858, 0.22", "-40.4012, -90.8725, -76.031, 0.96", "-40.7102, -91.6807, -76.4016, 1.25", "-40.953, -92.4132, -76.7713, 0.52", "-41.1918, -93.1653, -77.1553, 0.15", "-41.7776, -95.0609, -78.274, 0.15", "-41.825, -95.1988, -78.3661, 0.15", "-42.2767, -96.4163, -79.1952, 0.15", "-43.0818, -98.3707, -80.6185, 0.15", "-43.2313, -98.7031, -80.8812, 1.4", "-44.2053, -100.775, -82.6072, 1.4", "-44.5556, -101.493, -83.2296, 0.22", "-44.9457, -102.311, -83.9413, 0.22", "-45.1784, -102.81, -84.393, 0.22", "-45.716, -104.008, -85.4218, 0.22", "-45.7404, -104.062, -85.4675, 0.22", "-46.2671, -105.216, -86.3419, 1.03", "-46.6181, -106.001, -86.9258, 1.33", "-47.1167, -107.278, -87.7872, 0.74", "-47.3609, -108.051, -88.1816, 0.22", "-47.6005, -108.965, -88.4803, 0.22", "-47.8753, -110.131, -88.6898, 0.22", "-47.8929, -110.204, -88.6906, 0.22", "-48.0638, -110.814, -88.714, 1.03", "-48.3695, -111.779, -88.7461, 0.74", "-48.6554, -112.65, -88.7769, 0.74", "-49.0159, -113.689, -88.8625, 0.44", "-49.4485, -114.825, -89.0348, 0.22", "-50.4342, -117.23, -89.4738, 0.15", "-50.6247, -117.642, -89.5764, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-23.1769, -52.7641, 12.4547, 0.52", "-23.3789, -52.9145, 12.4021, 0.52", "-23.9194, -53.4836, 12.5115, 0.52", "-24.8446, -54.6506, 13.0228, 0.44", "-25.2355, -55.2379, 13.3115, 0.44", "-25.2619, -55.2808, 13.3358, 0.44", "-25.8871, -56.3331, 13.9666, 0.44", "-26.5532, -57.4057, 14.7334, 0.44", "-26.631, -57.5325, 14.8414, 0.44", "-27.1605, -58.341, 15.6425, 0.44", "-27.5757, -58.8652, 16.1975, 0.44", "-27.6071, -58.897, 16.2304, 0.44", "-28.4452, -59.5783, 16.934, 0.44", "-28.9716, -59.939, 17.3069, 0.37", "-29.2651, -60.116, 17.5268, 0.37", "-29.6965, -60.3779, 17.9015, 0.66", "-30.2488, -60.7422, 18.4195, 0.66", "-30.9211, -61.2407, 19.1222, 0.29", "-31.264, -61.5574, 19.5655, 0.29", "-31.9378, -62.274, 20.5251, 0.29", "-32.5231, -63.0094, 21.4603, 0.29", "-32.5488, -63.0442, 21.5067, 0.29", "-32.6358, -63.1724, 21.6885, 0.96", "-32.9337, -63.638, 22.3311, 0.37", "-33.2055, -64.1508, 23.0036, 0.37", "-33.2231, -64.1853, 23.0435, 0.37", "-33.8031, -65.1432, 24.1754, 0.37", "-33.8925, -65.2847, 24.3445, 0.74", "-34.0172, -65.4658, 24.5684, 0.29", "-34.5606, -66.1568, 25.4692, 0.29", "-34.8639, -66.5436, 26.0375, 0.29", "-39.1511, -71.6076, 30.4168, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-23.1769, -52.7641, 12.4547, 0.81", "-23.2868, -52.6433, 12.5773, 0.81", "-23.4952, -52.4159, 12.8204, 0.44", "-23.856, -51.9478, 13.2715, 0.44", "-24.3575, -51.2971, 13.8985, 0.44", "-24.7436, -50.7961, 14.3813, 0.44", "-25.3645, -49.9905, 15.1577, 0.22", "-25.5917, -49.6856, 15.4611, 0.22", "-25.9652, -49.1914, 16.0082, 0.22", "-30.1827, -44.0357, 21.2175, 0.22", "-35.8165, -40.1519, 26.1262, 0.22", "-40.0024, -35.0005, 31.3651, 0.22", "-43.0258, -28.908, 36.4419, 0.22", "-46.4193, -23.4016, 41.9069, 0.22", "-51.4081, -18.4808, 46.6261, 0.22", "-57.0647, -13.5716, 50.5313, 0.22", "-63.6184, -9.96066, 54.3793, 0.22", "-70.1108, -7.03445, 58.8368, 0.22", "-76.2805, -5.4039, 64.2743, 0.22", "-82.4462, -4.77154, 69.9092, 0.22", "-88.617, -4.36959, 75.5581, 0.22", "-93.5712, -3.6377, 82.2737, 0.22", "-97.8162, -4.08173, 89.4792, 0.22", "-101.673, -3.55483, 96.8962, 0.22", "-105.209, -1.93502, 104.325, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-6.82954, -73.7072, 1.55656, 0.37", "-9.87134, -73.7155, 2.23532, 0.37", "-10.0591, -73.7188, 2.28964, 0.37", "-11.2143, -73.7607, 2.6742, 0.37", "-11.9427, -73.8136, 2.99599, 0.22", "-12.7863, -73.8749, 3.36864, 0.22", "-14.0293, -73.9652, 3.91772, 0.22", "-14.3327, -73.9995, 4.12214, 0.44", "-15.0724, -74.1027, 4.61652, 0.44", "-16.1883, -74.2947, 5.34482, 0.22", "-25.0879, -73.2858, 7.52288, 0.22", "-34.2597, -73.3612, 8.41792, 0.22", "-43.0841, -71.9125, 10.6637, 0.22", "-51.7823, -70.3555, 13.2994, 0.22" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-6.82954, -73.7072, 1.55656, 1.33", "-6.271, -74.5195, 1.44049, 1.33", "-5.73834, -75.4072, 1.28365, 0.88", "-5.71127, -75.4664, 1.27638, 0.88", "-5.1368, -77.0014, 1.12711, 0.66", "-4.52033, -78.9527, 0.966831, 0.66", "-3.92585, -81.1023, 0.817822, 0.66", "-3.47418, -83.0075, 0.707777, 0.66", "-2.94684, -85.5621, 0.582502, 0.96", "-2.73859, -86.8287, 0.528622, 1.69", "-2.61173, -87.9492, 0.491039, 1.25", "-2.52231, -89.0953, 0.459444, 0.96", "-2.51612, -89.1718, 0.457224, 0.96", "-2.31446, -90.6829, 0.438182, 0.59", "-1.83911, -93.2992, 0.39489, 0.59", "-1.2759, -95.8199, 0.368526, 0.96", "-0.632466, -98.3825, 0.355341, 1.11", "-0.225935, -99.9803, 0.356722, 0.74", "0.15784, -101.474, 0.373302, 0.74", "0.364628, -102.363, 0.38613, 0.52", "0.613884, -103.53, 0.410052, 0.52", "0.636545, -103.692, 0.412462, 0.52", "0.643085, -105.29, 0.357075, 0.52", "0.633534, -105.39, 0.348253, 0.52", "0.398247, -107.193, 0.186152, 0.44", "0.389833, -107.28, 0.182457, 0.44", "0.366718, -108.109, 0.198788, 0.44", "0.44435, -110.518, 0.318671, 0.44", "0.451402, -110.594, 0.326616, 0.44", "0.612145, -111.866, 0.503277, 0.88", "0.932703, -114.089, 0.892058, 0.88", "1.19951, -116.523, 1.37846, 0.88", "1.20406, -116.597, 1.39521, 0.88", "1.18225, -117.921, 1.76875, 1.25", "1.1126, -118.844, 2.03957, 1.33", "0.952021, -119.942, 2.37061, 0.96", "0.639056, -121.323, 2.81963, 0.52", "0.381593, -122.238, 3.05091, 0.52", "-0.0319531, -123.646, 3.29954, 1.18", "-0.408302, -124.873, 3.41397, 1.18", "-0.433081, -124.957, 3.41763, 1.18", "-0.780094, -126.26, 3.36989, 0.96", "-1.16977, -127.837, 3.17877, 0.96", "-1.36736, -128.717, 3.00688, 1.25", "-1.53436, -129.723, 2.74579, 1.03", "-1.54246, -129.807, 2.72302, 1.03", "-1.57274, -130.91, 2.42827, 0.88", "-1.51401, -132.184, 2.15531, 0.88", "-1.39327, -133.384, 1.97234, 0.59", "-1.21377, -134.896, 1.78312, 0.52", "-1.14097, -135.465, 1.72829, 0.52", "-1.12154, -135.646, 1.71831, 0.52", "-0.973424, -137.236, 1.71303, 0.52", "-0.969934, -137.344, 1.7199, 0.52", "-1.03755, -138.723, 1.8863, 0.74", "-1.0469, -138.799, 1.8963, 0.74", "-1.18828, -139.912, 2.02364, 0.81", "-1.26156, -140.556, 2.08328, 0.81", "-1.36388, -141.533, 2.13831, 0.29", "-1.43527, -142.329, 2.17768, 0.29", "-1.44005, -142.416, 2.18128, 0.29", "-1.4531, -143.546, 2.20799, 0.29", "-1.44946, -143.634, 2.20823, 0.29", "-1.32576, -144.774, 2.17482, 0.29", "-1.17441, -145.751, 2.07418, 0.29", "-1.09045, -146.21, 2.01179, 0.88", "-0.950514, -146.904, 1.90842, 0.88", "-0.905211, -147.121, 1.87459, 0.88", "-0.756983, -147.934, 1.80574, 0.59", "-0.523381, -149.225, 1.74764, 0.59", "-0.512589, -149.312, 1.74725, 0.59", "-0.349321, -151.34, 1.8227, 0.59", "-0.301703, -152.225, 1.87868, 0.29", "-0.249179, -154.148, 2.03187, 0.29", "-0.250802, -154.387, 2.05487, 0.29", "-0.320071, -156.228, 2.2885, 0.29", "-0.45758, -158.02, 2.50516, 0.37", "-0.557288, -158.808, 2.59489, 1.18", "-0.765811, -160.165, 2.72496, 1.33", "-0.956764, -161.263, 2.79088, 0.74", "-1.23958, -162.739, 2.87281, 0.52", "-1.4727, -163.859, 2.92522, 0.52", "-1.66066, -164.698, 2.9478, 0.52", "-1.67994, -164.784, 2.94919, 0.52", "-1.92881, -165.956, 2.94759, 0.52", "-1.97387, -166.192, 2.94176, 0.52", "-2.13047, -167.057, 2.91064, 0.52", "-2.23762, -167.701, 2.90813, 0.88", "-2.38016, -168.588, 2.91614, 1.03", "-2.52298, -169.554, 2.93324, 0.59", "-2.53307, -169.63, 2.93528, 0.59", "-2.6745, -171.214, 2.93386, 0.29", "-2.72223, -172.333, 2.9066, 0.29", "-2.71959, -172.434, 2.90108, 0.29", "-2.61114, -173.565, 2.8052, 0.29", "-2.58579, -173.801, 2.76535, 0.29", "-2.49281, -174.819, 2.52133, 0.29", "-2.48848, -174.891, 2.49785, 0.29", "-2.50815, -175.817, 2.17263, 0.29", "-2.51558, -175.89, 2.14888, 0.29", "-2.74225, -177.309, 1.75443, 0.29", "-2.80797, -177.636, 1.68893, 0.29", "-3.03649, -178.653, 1.53923, 0.29", "-3.16006, -179.237, 1.46993, 1.03", "-3.31614, -180.054, 1.39706, 1.47", "-3.46798, -181.095, 1.33629, 0.37", "-3.63293, -182.684, 1.32979, 0.37", "-3.64137, -182.76, 1.33055, 0.37", "-3.73007, -183.499, 1.34868, 0.81", "-3.81777, -184.134, 1.37397, 0.88", "-3.9098, -184.69, 1.39801, 0.88", "-4.13847, -185.934, 1.45486, 0.22", "-4.3752, -187.201, 1.51924, 0.22", "-4.38914, -187.288, 1.52287, 0.22", "-4.45057, -187.681, 1.53765, 0.37", "-4.55084, -188.51, 1.55816, 0.37", "-4.65955, -189.833, 1.57046, 0.29", "-4.66048, -189.921, 1.56913, 0.29", "-4.59241, -191.289, 1.531, 0.29", "-4.57907, -191.442, 1.52776, 0.29", "-4.37945, -193.029, 1.49802, 0.22", "-4.29484, -193.588, 1.4884, 0.66", "-4.15904, -194.514, 1.47855, 0.81", "-4.06087, -195.249, 1.47704, 0.96", "-3.94733, -196.1, 1.51919, 0.37", "-3.93574, -196.176, 1.52521, 0.37", "-3.70292, -197.599, 1.65803, 0.15", "-3.6199, -198.178, 1.71325, 0.74", "-3.54755, -198.97, 1.78959, 0.74", "-3.50503, -200.235, 1.90414, 0.22", "-3.52634, -201.226, 1.98328, 0.22", "-3.59516, -202.071, 2.04981, 0.22", "-3.69124, -202.669, 2.0966, 0.59", "-3.87559, -203.475, 2.14467, 0.59", "-4.06917, -204.073, 2.16607, 0.22", "-4.14554, -204.237, 2.16815, 0.22", "-4.53711, -204.936, 2.21092, 0.22", "-4.70725, -205.227, 2.24343, 0.44", "-4.93292, -205.634, 2.29361, 0.44", "-4.96298, -205.716, 2.30214, 0.44", "-5.20706, -206.672, 2.38799, 0.22", "-5.26618, -206.984, 2.37447, 0.22", "-5.34785, -207.653, 2.26621, 0.22", "-5.36336, -207.813, 2.23091, 0.22", "-5.53292, -209.761, 1.71666, 0.22", "-5.54146, -209.865, 1.68605, 0.22", "-5.63021, -211.512, 1.1218, 0.22", "-5.72399, -213.238, 0.478804, 0.22", "-5.7406, -213.549, 0.349196, 0.52", "-5.74619, -213.618, 0.317503, 0.52", "-5.81414, -214.017, 0.0872376, 0.52", "-7.43245, -224.763, -1.29464, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "62.443, -72.5255, 6.39078, 0.44", "62.4188, -72.8817, 6.18772, 0.44", "62.4614, -72.971, 6.17379, 0.44", "62.666, -73.3673, 6.12496, 0.44", "62.7859, -73.5926, 6.09888, 0.44", "63.0642, -74.0982, 6.04101, 0.44", "63.0886, -74.1415, 6.03612, 0.44", "64.395, -76.2957, 5.79816, 0.44", "64.4219, -76.3375, 5.79466, 0.44", "64.6071, -76.6083, 5.78, 1.33", "65.0573, -77.2039, 5.7768, 1.4", "65.2467, -77.4419, 5.80186, 0.37", "65.2778, -77.4798, 5.80893, 0.37", "65.7158, -77.952, 5.96469, 0.29", "65.7489, -77.9863, 5.9776, 0.29", "66.6657, -78.8559, 6.36928, 0.29", "67.5353, -79.6138, 6.7537, 0.29", "67.5712, -79.6436, 6.76951, 0.29", "69.0942, -80.8559, 7.43598, 0.29", "69.1786, -80.9206, 7.47515, 0.29", "70.1693, -81.6528, 7.94884, 0.52", "71.1942, -82.3617, 8.45171, 0.29", "71.5764, -82.6019, 8.63875, 0.59", "71.8809, -82.7827, 8.80055, 0.59", "72.7402, -83.251, 9.315, 0.44", "72.8553, -83.3126, 9.38592, 0.44", "73.3666, -83.5941, 9.63, 0.29", "73.4478, -83.639, 9.66222, 0.29", "74.0559, -83.9766, 9.88237, 0.29", "74.1859, -84.0495, 9.92303, 0.29", "74.785, -84.3898, 10.0698, 0.29", "77.5541, -86.0211, 10.6797, 0.29", "77.6015, -86.0501, 10.6887, 0.29", "83.1376, -89.8036, 12.8436, 0.29" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "62.443, -72.5255, 6.39078, 0.52", "62.2954, -72.3684, 6.38407, 0.52", "62.2396, -72.3211, 6.38573, 0.52", "61.4517, -71.7239, 6.43572, 0.37", "60.2219, -70.8713, 6.51132, 0.37", "59.2322, -70.2081, 6.5262, 0.59", "58.1405, -69.4812, 6.3792, 0.59", "56.9714, -68.7063, 6.08557, 0.22", "56.9213, -68.6738, 6.06804, 0.22", "55.8664, -68.0644, 5.59193, 0.22", "55.1911, -67.7101, 5.2039, 0.22", "53.4461, -66.775, 3.93892, 0.22", "53.242, -66.6555, 3.75155, 0.66", "53.1985, -66.6238, 3.7033, 0.66", "52.5907, -66.1799, 2.98478, 0.37" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "96.6162, -101.206, -1.82381, 0.29", "100.529, -106.105, -2.79482, 0.29", "104.342, -111.166, -3.05163, 0.29", "108.312, -116.104, -3.14984, 0.29", "111.944, -121.288, -2.80079, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "96.6162, -101.206, -1.82381, 0.74", "102.144, -108.193, -3.26554, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-39.1511, -71.6076, 30.4168, 0.37", "-42.6753, -75.5201, 36.6508, 0.37", "-45.9023, -80.5974, 42.2095, 0.37", "-48.8332, -85.2429, 48.2707, 0.37", "-51.8541, -90.1654, 54.0736, 0.37", "-55.8994, -94.6178, 59.6045, 0.37" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-39.1511, -71.6076, 30.4168, 0.29", "-47.0861, -81.367, 31.0988, 0.37", "-53.8598, -91.599, 34.1471, 0.37", "-62.7738, -99.6873, 37.7916, 0.37" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-51.7823, -70.3555, 13.2994, 0.37", "-61.3721, -69.907, 12.6451, 0.37", "-70.86, -70.3108, 11.0981, 0.37", "-80.1211, -72.7427, 10.035, 0.37", "-89.4029, -75.0827, 11.1365, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-51.7823, -70.3555, 13.2994, 0.29", "-63.0005, -69.6642, 18.2181, 0.37", "-73.1632, -70.0612, 25.0783, 0.37", "-82.7635, -69.3295, 32.6837, 0.37", "-90.6324, -67.1538, 41.858, 0.37", "-95.9632, -63.6194, 52.3657, 0.37", "-99.1399, -57.956, 62.8662, 0.37", "-101.603, -54.1874, 74.321, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "52.5907, -66.1799, 2.98478, 0.37", "52.6363, -66.2923, 2.9652, 0.37", "53.136, -67.3655, 2.69931, 0.37", "53.1816, -67.4572, 2.67384, 0.37", "53.8184, -68.7385, 2.31788, 0.37", "53.8394, -68.7808, 2.30612, 0.37", "54.6932, -70.4988, 1.82885, 0.37", "54.7195, -70.5473, 1.81535, 0.37", "55.1159, -71.1564, 1.62732, 0.37", "59.0092, -78.2292, 0.948754, 0.37", "61.6948, -85.8736, 0.484416, 0.37", "64.3269, -93.5454, 0.427846, 0.37", "66.6503, -101.135, 1.96693, 0.37", "69.1802, -108.657, 3.50214, 0.37", "70.5295, -116.48, 5.05102, 0.37", "71.425, -124.547, 5.03127, 0.37", "73.5688, -132.359, 5.37119, 0.37", "75.7276, -140.144, 6.00313, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "52.5907, -66.1799, 2.98478, 0.37", "52.5295, -66.1454, 2.92034, 0.37", "52.4794, -66.1264, 2.87938, 0.37", "51.6309, -65.8533, 2.2428, 0.22", "51.343, -65.7496, 2.05624, 0.22", "50.5853, -65.4583, 1.60725, 0.22", "50.5213, -65.4315, 1.57358, 0.22", "49.5671, -65.0189, 1.12835, 0.22", "49.4432, -64.965, 1.07645, 0.22", "48.6142, -64.6042, 0.763658, 0.22", "48.3942, -64.5032, 0.676846, 0.22", "47.4853, -64.0594, 0.312124, 0.22", "47.3813, -64.0069, 0.270692, 0.22", "45.8305, -63.1894, -0.354319, 0.22", "45.6715, -63.1051, -0.420519, 0.22", "44.1755, -62.3093, -1.05852, 0.22", "44.1125, -62.2711, -1.08228, 0.22", "43.0404, -61.5531, -1.42995, 0.22", "42.8196, -61.3745, -1.4779, 0.22", "42.2076, -60.7727, -1.52957, 0.22", "41.8941, -60.4287, -1.52758, 0.22", "40.9297, -59.2367, -1.42767, 0.22", "40.8432, -59.1257, -1.41584, 0.22", "39.7639, -57.6638, -1.21311, 0.22", "39.7135, -57.5895, -1.2019, 0.22", "39.0706, -56.5585, -1.03975, 0.22", "38.8634, -56.2079, -0.994656, 0.22", "38.351, -55.3146, -0.926989, 0.22", "38.279, -55.1863, -0.92015, 0.22", "37.7429, -54.2674, -0.905085, 0.22", "37.7062, -54.2095, -0.905952, 0.22", "37.4, -53.7573, -0.924568, 0.29", "37.1295, -53.3904, -0.970506, 0.29", "36.488, -52.6157, -1.13582, 0.29", "36.063, -52.1526, -1.2592, 0.29", "35.7004, -51.8, -1.37161, 0.29", "35.6323, -51.7358, -1.39379, 0.29", "34.8766, -51.0438, -1.64947, 0.29", "34.8207, -50.9933, -1.66868, 0.29", "34.125, -50.3646, -1.90116, 0.29", "33.9051, -50.1688, -1.96993, 0.29", "33.3336, -49.6908, -2.13499, 0.29", "32.9762, -49.4109, -2.22435, 0.44", "32.6503, -49.1535, -2.27653, 0.52", "32.2702, -48.8288, -2.32691, 0.52", "32.2206, -48.7822, -2.33171, 0.52", "31.9507, -48.5014, -2.34605, 0.29", "31.6806, -48.1898, -2.35229, 0.29", "30.9683, -47.3322, -2.365, 0.29", "30.9226, -47.2815, -2.36818, 0.29", "30.4988, -46.8382, -2.41174, 0.29", "30.3223, -46.6488, -2.4338, 0.29", "30.1087, -46.4215, -2.46684, 0.29", "29.9691, -46.2702, -2.48853, 0.29", "29.2591, -45.5149, -2.60819, 0.29", "29.1117, -45.3608, -2.6322, 0.29", "28.5503, -44.762, -2.71166, 0.29", "28.3146, -44.5054, -2.73906, 0.29", "27.4158, -43.5013, -2.81649, 0.29", "27.3201, -43.3903, -2.82166, 0.29", "26.7675, -42.7227, -2.83336, 0.52", "26.4221, -42.3035, -2.84122, 0.52", "26.1706, -41.9818, -2.83923, 0.52", "25.9891, -41.7185, -2.82789, 0.37", "25.2441, -40.3942, -2.8049, 0.37", "25.2148, -40.3321, -2.80419, 0.37", "25.0078, -39.7635, -2.78899, 0.52", "24.7288, -38.8616, -2.76532, 0.81", "24.4967, -38.0695, -2.74956, 0.81", "24.158, -37.0273, -2.74068, 0.37", "24.1054, -36.8896, -2.74054, 0.37", "23.8075, -36.2026, -2.74558, 0.37", "23.6588, -35.9193, -2.75868, 0.37", "23.1942, -35.1279, -2.81878, 0.29", "22.4883, -33.9963, -2.89843, 0.29", "21.3643, -32.2997, -2.99339, 0.29", "21.2996, -32.2018, -2.99896, 0.29", "20.3296, -30.7274, -3.08521, 0.29", "20.2766, -30.645, -3.08618, 0.29", "19.7057, -29.7163, -3.04888, 0.29", "19.5479, -29.4564, -3.01968, 0.29", "19.0509, -28.6517, -2.86887, 0.29", "18.9117, -28.4102, -2.80892, 0.29", "18.3819, -27.4122, -2.49724, 0.29", "18.3465, -27.3447, -2.47766, 0.29", "17.501, -25.7078, -2.02481, 0.29", "17.4377, -25.579, -1.99035, 0.29", "16.9282, -24.5045, -1.71635, 0.29", "16.87, -24.3726, -1.68431, 0.29", "15.9067, -21.9714, -1.13783, 0.29", "15.8577, -21.8361, -1.10441, 0.29", "15.6439, -21.1724, -0.927266, 0.29", "15.5982, -21.0364, -0.891866, 0.29", "15.2488, -20.0427, -0.672502, 0.29", "15.177, -19.842, -0.633563, 0.29", "14.5902, -18.2321, -0.36582, 0.29", "14.4845, -17.9609, -0.326917, 0.29", "13.9322, -16.6235, -0.15359, 0.29", "13.4095, -15.5537, 0.0302628, 0.29", "13.3348, -15.411, 0.0533691, 0.29", "12.7549, -14.3667, 0.21842, 0.29", "12.6779, -14.2426, 0.237585, 0.29", "11.7184, -12.7088, 0.536359, 0.29", "10.9153, -11.4302, 0.931434, 0.29", "5.91233, -3.01265, 0.519235, 0.29" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-101.603, -54.1874, 74.321, 0.37", "-107.145, -51.8209, 81.5784, 0.37", "-112.687, -50.5065, 89.0823, 0.37", "-117.566, -48.8604, 96.9809, 0.37", "-122.756, -48.5769, 104.829, 0.37", "-127.235, -49.2067, 113.082, 0.37", "-130.417, -49.5, 121.939, 0.37", "-134.685, -51.0026, 130.187, 0.37", "-139.339, -51.4973, 138.352, 0.37", "-143.806, -51.831, 146.629, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-101.603, -54.1874, 74.321, 0.29", "-104.009, -56.5287, 84.6701, 0.37", "-105.942, -60.2904, 94.6894, 0.37", "-110.188, -64.2186, 103.901, 0.37", "-114.588, -67.2914, 113.36, 0.37", "-118.522, -70.3915, 123.013, 0.37", "-120.99, -73.8458, 133.026, 0.37", "-123.438, -75.6891, 143.469, 0.37", "-125.085, -77.7243, 154.034, 0.37", "-127.12, -78.9203, 164.666, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_69", "dend_58", "dend_45", "dend_24", "dend_0", "dend_73", "dend_70", "dend_68", "dend_59", "dend_49", "dend_46", "dend_30", "dend_25", "dend_21", "dend_1", "dend_77", "dend_74", "dend_72", "dend_71", "dend_63", "dend_60", "dend_55", "dend_50", "dend_48", "dend_47", "dend_34", "dend_31", "dend_27", "dend_26", "dend_23", "dend_22", "dend_16", "dend_3", "dend_2", "dend_79", "dend_78", "dend_76", "dend_75", "dend_65", "dend_64", "dend_62", "dend_61", "dend_57", "dend_56", "dend_52", "dend_51", "dend_44", "dend_35", "dend_33", "dend_32", "dend_29", "dend_28", "dend_18", "dend_17", "dend_11", "dend_4", "dend_81", "dend_80", "dend_67", "dend_66", "dend_54", "dend_53", "dend_39", "dend_36", "dend_20", "dend_19", "dend_13", "dend_12", "dend_6", "dend_5", "dend_43", "dend_40", "dend_38", "dend_37", "dend_15", "dend_14", "dend_10", "dend_7", "dend_42", "dend_41", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_69", "dend_58", "dend_45", "dend_24", "dend_0", "dend_73", "dend_70", "dend_68", "dend_59", "dend_49", "dend_46", "dend_30", "dend_25", "dend_21", "dend_1", "dend_77", "dend_74", "dend_72", "dend_71", "dend_63", "dend_60", "dend_55", "dend_50", "dend_48", "dend_47", "dend_34", "dend_31", "dend_27", "dend_26", "dend_23", "dend_22", "dend_16", "dend_3", "dend_2", "dend_79", "dend_78", "dend_76", "dend_75", "dend_65", "dend_64", "dend_62", "dend_61", "dend_57", "dend_56", "dend_52", "dend_51", "dend_44", "dend_35", "dend_33", "dend_32", "dend_29", "dend_28", "dend_18", "dend_17", "dend_11", "dend_4", "dend_81", "dend_80", "dend_67", "dend_66", "dend_54", "dend_53", "dend_39", "dend_36", "dend_20", "dend_19", "dend_13", "dend_12", "dend_6", "dend_5", "dend_43", "dend_40", "dend_38", "dend_37", "dend_15", "dend_14", "dend_10", "dend_7", "dend_42", "dend_41", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_69", "dend_58", "dend_45", "dend_24", "dend_0", "axon_0", "dend_73", "dend_70", "dend_68", "dend_59", "dend_49", "dend_46", "dend_30", "dend_25", "dend_21", "dend_1", "axon_1", "dend_77", "dend_74", "dend_72", "dend_71", "dend_63", "dend_60", "dend_55", "dend_50", "dend_48", "dend_47", "dend_34", "dend_31", "dend_27", "dend_26", "dend_23", "dend_22", "dend_16", "dend_3", "dend_2", "dend_79", "dend_78", "dend_76", "dend_75", "dend_65", "dend_64", "dend_62", "dend_61", "dend_57", "dend_56", "dend_52", "dend_51", "dend_44", "dend_35", "dend_33", "dend_32", "dend_29", "dend_28", "dend_18", "dend_17", "dend_11", "dend_4", "dend_81", "dend_80", "dend_67", "dend_66", "dend_54", "dend_53", "dend_39", "dend_36", "dend_20", "dend_19", "dend_13", "dend_12", "dend_6", "dend_5", "dend_43", "dend_40", "dend_38", "dend_37", "dend_15", "dend_14", "dend_10", "dend_7", "dend_42", "dend_41", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_78", "dend_78", "dend_78", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_81", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L6_NBC_38e0d4fd81_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_69, id: dend_69, parent: soma_0
create dend_69
public dend_69
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_73, id: dend_73, parent: dend_69
create dend_73
public dend_73
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_68, id: dend_68, parent: dend_58
create dend_68
public dend_68
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_49, id: dend_49, parent: dend_45
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_30, id: dend_30, parent: dend_24
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_0
create dend_21
public dend_21
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_77, id: dend_77, parent: dend_73
create dend_77
public dend_77
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_72, id: dend_72, parent: dend_70
create dend_72
public dend_72
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_63, id: dend_63, parent: dend_59
create dend_63
public dend_63
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_55, id: dend_55, parent: dend_49
create dend_55
public dend_55
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_1
create dend_16
public dend_16
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_79, id: dend_79, parent: dend_77
create dend_79
public dend_79
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_44, id: dend_44, parent: dend_34
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_81, id: dend_81, parent: dend_79
create dend_81
public dend_81
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_69, dend_58, dend_45, dend_24, dend_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_69, dend_58, dend_45, dend_24, dend_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_69, dend_58, dend_45, dend_24, dend_0, axon_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, axon_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_60
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_69, dend_69, dend_69, dend_69, dend_69, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_0, dend_0, dend_0, axon_0, axon_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_81, dend_80, dend_80, dend_80, dend_80, dend_80, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_37, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_69(0), soma_0(0.499998293907579)
    connect dend_58(0), soma_0(0.499998293907579)
    connect dend_45(0), soma_0(0.499998293907579)
    connect dend_24(0), soma_0(0.499998293907579)
    connect dend_0(0), soma_0(0.499998293907579)
    connect axon_0(0), soma_0(1.0)
    connect dend_73(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_68(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_49(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_30(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_77(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_72(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_63(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_55(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_1(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_79(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_44(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_81(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.873478, -12.1204, -1.0889, 3.2264 ) }
    soma_0 { pt3dadd( -0.698655, -10.9282, -0.984246, 5.56239 ) }
    soma_0 { pt3dadd( -0.523832, -9.73588, -0.879587, 7.69458 ) }
    soma_0 { pt3dadd( -0.349009, -8.5436, -0.774929, 10.6304 ) }
    soma_0 { pt3dadd( -0.174186, -7.35132, -0.670271, 12.3889 ) }
    soma_0 { pt3dadd( 6.37175E-4, -6.15904, -0.565612, 13.0429 ) }
    soma_0 { pt3dadd( 0.17546, -4.96676, -0.460954, 13.3962 ) }
    soma_0 { pt3dadd( 0.350283, -3.77448, -0.356295, 13.6031 ) }
    soma_0 { pt3dadd( 0.525106, -2.5822, -0.251637, 13.7768 ) }
    soma_0 { pt3dadd( 0.699929, -1.38992, -0.146979, 13.7572 ) }
    soma_0 { pt3dadd( 0.874752, -0.197642, -0.0423202, 13.4519 ) }
    soma_0 { pt3dadd( 1.04958, 0.994638, 0.0623382, 13.1714 ) }
    soma_0 { pt3dadd( 1.2244, 2.18692, 0.166997, 12.4149 ) }
    soma_0 { pt3dadd( 1.39922, 3.3792, 0.271655, 11.5059 ) }
    soma_0 { pt3dadd( 1.57404, 4.57148, 0.376313, 10.5982 ) }
    soma_0 { pt3dadd( 1.74887, 5.76376, 0.480972, 9.84377 ) }
    soma_0 { pt3dadd( 1.92369, 6.95604, 0.58563, 9.16735 ) }
    soma_0 { pt3dadd( 2.09851, 8.14832, 0.690289, 7.18404 ) }
    soma_0 { pt3dadd( 2.27334, 9.34059, 0.794947, 5.28238 ) }
    soma_0 { pt3dadd( 2.44816, 10.5329, 0.899606, 3.93844 ) }
    soma_0 { pt3dadd( 2.62298, 11.7252, 1.00426, 2.5386 ) }
    // Section: dend_69, id: dend_69, parent: soma_0 (entry count 21/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 3.61398, 12.209, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 3.61398, 12.209, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 3.82792, 13.2049, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 3.87165, 13.4085, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 4.14271, 14.6702, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 4.39355, 15.8379, -0.788928, 2.06 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 27/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 3.65398, 10.1693, -2.84893, 1.77 ) }
    dend_58 { pt3dadd( 4.18888, 11.2815, -4.57797, 1.62 ) }
    dend_58 { pt3dadd( 4.64558, 12.0085, -5.53106, 1.62 ) }
    dend_58 { pt3dadd( 4.66284, 12.0317, -5.57253, 1.62 ) }
    dend_58 { pt3dadd( 5.0683, 12.4835, -6.55363, 1.47 ) }
    dend_58 { pt3dadd( 5.10927, 12.5192, -6.64702, 1.47 ) }
    dend_58 { pt3dadd( 6.10191, 13.1593, -8.79033, 1.47 ) }
    dend_58 { pt3dadd( 7.0201, 13.4416, -10.5327, 1.92 ) }
    dend_58 { pt3dadd( 8.69103, 13.779, -13.6954, 1.92 ) }
    dend_58 { pt3dadd( 9.25451, 13.8589, -14.7749, 1.92 ) }
    dend_58 { pt3dadd( 9.82605, 13.879, -15.8994, 1.92 ) }
    dend_58 { pt3dadd( 10.3739, 13.8664, -16.9963, 1.84 ) }
    dend_58 { pt3dadd( 11.1461, 13.7361, -18.5691, 1.84 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 40/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -2.85602, 8.22182, 2.46107, 1.62 ) }
    dend_45 { pt3dadd( -2.85602, 8.22182, 2.46107, 1.62 ) }
    dend_45 { pt3dadd( -3.38335, 8.78395, 2.64655, 1.62 ) }
    dend_45 { pt3dadd( -3.43077, 8.83384, 2.66205, 1.62 ) }
    dend_45 { pt3dadd( -4.57379, 10.087, 3.01715, 1.84 ) }
    dend_45 { pt3dadd( -5.49943, 11.1169, 3.29793, 1.84 ) }
    dend_45 { pt3dadd( -6.49528, 12.225, 3.60001, 1.62 ) }
    dend_45 { pt3dadd( -7.59812, 13.4561, 3.94147, 1.62 ) }
    dend_45 { pt3dadd( -8.86493, 14.8787, 4.34796, 1.92 ) }
    dend_45 { pt3dadd( -9.51224, 15.6145, 4.55756, 1.92 ) }
    dend_45 { pt3dadd( -9.55676, 15.6674, 4.57233, 1.92 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 51/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.07398, -9.03918, 1.15107, 2.21 ) }
    dend_24 { pt3dadd( 6.07398, -9.03918, 1.15107, 2.21 ) }
    dend_24 { pt3dadd( 6.51366, -9.83446, 2.29955, 1.84 ) }
    dend_24 { pt3dadd( 7.08922, -10.8755, 3.80298, 1.84 ) }
    dend_24 { pt3dadd( 7.10653, -10.9068, 3.84822, 1.84 ) }
    dend_24 { pt3dadd( 7.70144, -11.9829, 5.40218, 1.62 ) }
    dend_24 { pt3dadd( 8.32683, -13.1141, 7.03582, 1.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 58/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.38602, -11.4172, -1.22893, 3.24 ) }
    dend_0 { pt3dadd( -2.38602, -11.4172, -1.22893, 3.24 ) }
    dend_0 { pt3dadd( -3.15217, -13.9488, -1.19817, 3.24 ) }
    dend_0 { pt3dadd( -4.07828, -17.0089, -1.16098, 2.87 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 62/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.62298, 11.7252, 1.00426, 0.671034 ) }
    axon_0 { pt3dadd( 4.79915, 26.5665, 1.00426, 0.671034 ) }
    axon_0 { pt3dadd( 6.97531, 41.4078, 1.00426, 0.671034 ) }
    // Section: dend_73, id: dend_73, parent: dend_69 (entry count 65/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 4.39355, 15.8379, -0.788928, 1.47 ) }
    dend_73 { pt3dadd( 4.83789, 16.706, 0.233356, 1.47 ) }
    dend_73 { pt3dadd( 6.26433, 19.1175, 2.46273, 1.18 ) }
    dend_73 { pt3dadd( 6.29283, 19.163, 2.49401, 1.18 ) }
    dend_73 { pt3dadd( 7.07381, 20.2406, 3.02483, 1.18 ) }
    dend_73 { pt3dadd( 8.02894, 21.4371, 3.45622, 1.18 ) }
    dend_73 { pt3dadd( 8.06223, 21.4771, 3.46794, 1.18 ) }
    dend_73 { pt3dadd( 9.06038, 22.574, 3.5321, 1.4 ) }
    dend_73 { pt3dadd( 10.0961, 23.6278, 3.39879, 1.4 ) }
    dend_73 { pt3dadd( 11.2282, 24.8598, 3.24012, 1.18 ) }
    dend_73 { pt3dadd( 11.9635, 25.7312, 3.11724, 1.18 ) }
    dend_73 { pt3dadd( 12.0067, 25.7879, 3.11416, 1.18 ) }
    dend_73 { pt3dadd( 12.6217, 26.6406, 3.12502, 1.18 ) }
    dend_73 { pt3dadd( 12.6606, 26.6997, 3.1344, 1.18 ) }
    dend_73 { pt3dadd( 13.3532, 27.8477, 3.50649, 1.18 ) }
    dend_73 { pt3dadd( 13.3851, 27.9046, 3.53515, 1.18 ) }
    dend_73 { pt3dadd( 14.3129, 29.4227, 4.41373, 1.18 ) }
    dend_73 { pt3dadd( 14.3386, 29.4622, 4.43843, 1.18 ) }
    dend_73 { pt3dadd( 15.0126, 30.3915, 5.03511, 1.18 ) }
    dend_73 { pt3dadd( 15.6493, 31.2249, 5.55626, 1.18 ) }
    dend_73 { pt3dadd( 16.7782, 32.6315, 6.43552, 1.03 ) }
    dend_73 { pt3dadd( 17.7389, 33.8744, 7.14094, 1.03 ) }
    dend_73 { pt3dadd( 17.7675, 33.9142, 7.16202, 1.03 ) }
    dend_73 { pt3dadd( 18.623, 35.1229, 7.76955, 0.81 ) }
    dend_73 { pt3dadd( 19.3174, 36.1339, 8.22912, 0.81 ) }
    dend_73 { pt3dadd( 19.3441, 36.1763, 8.24766, 0.81 ) }
    dend_73 { pt3dadd( 20.3142, 37.8623, 8.906, 1.03 ) }
    dend_73 { pt3dadd( 21.1879, 39.6247, 9.63168, 1.03 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 93/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 4.39355, 15.8379, -0.788928, 1.11 ) }
    dend_70 { pt3dadd( 2.79377, 18.8833, -0.0719606, 1.11 ) }
    dend_70 { pt3dadd( 2.37413, 19.8819, -0.00152288, 1.11 ) }
    dend_70 { pt3dadd( 1.96973, 20.8443, 0.0663573, 1.03 ) }
    dend_70 { pt3dadd( 1.25614, 22.5424, 0.186137, 1.25 ) }
    dend_70 { pt3dadd( 1.22665, 22.6126, 0.191086, 1.25 ) }
    dend_70 { pt3dadd( 0.413553, 24.5476, 0.327568, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_70 { pt3dadd( -0.0584638, 25.8938, 0.0890835, 1.47 ) }
    // Section: dend_68, id: dend_68, parent: dend_58 (entry count 1/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 11.1461, 13.7361, -18.5691, 1.55 ) }
    dend_68 { pt3dadd( 12.3248, 9.59075, -22.1603, 1.55 ) }
    dend_68 { pt3dadd( 12.6983, 8.41871, -22.9004, 0.81 ) }
    dend_68 { pt3dadd( 13.0276, 7.34716, -23.3998, 0.81 ) }
    dend_68 { pt3dadd( 13.485, 5.7901, -24.0215, 0.81 ) }
    dend_68 { pt3dadd( 13.5068, 5.69222, -24.0638, 0.81 ) }
    dend_68 { pt3dadd( 13.6852, 4.42893, -24.7591, 1.11 ) }
    dend_68 { pt3dadd( 13.7529, 3.53298, -25.1411, 0.81 ) }
    dend_68 { pt3dadd( 13.6567, 2.34976, -25.9738, 0.59 ) }
    dend_68 { pt3dadd( 13.6313, 2.24165, -26.0759, 0.59 ) }
    dend_68 { pt3dadd( 13.1208, 0.759179, -27.6731, 0.59 ) }
    dend_68 { pt3dadd( 12.4686, -0.971899, -29.5613, 1.25 ) }
    dend_68 { pt3dadd( 12.4486, -1.01982, -29.6157, 1.25 ) }
    dend_68 { pt3dadd( 11.6789, -2.798, -31.6143, 1.18 ) }
    dend_68 { pt3dadd( 10.8414, -4.71769, -33.7952, 0.81 ) }
    dend_68 { pt3dadd( 10.0208, -6.70978, -35.9647, 0.52 ) }
    dend_68 { pt3dadd( 9.72867, -7.49164, -36.7426, 0.52 ) }
    dend_68 { pt3dadd( 9.70566, -7.55323, -36.7982, 0.52 ) }
    dend_68 { pt3dadd( 9.48965, -8.13932, -37.3136, 0.52 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 20/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 11.1461, 13.7361, -18.5691, 1.4 ) }
    dend_59 { pt3dadd( 13.4322, 13.1632, -19.1752, 1.4 ) }
    dend_59 { pt3dadd( 16.1403, 12.4845, -19.8933, 1.4 ) }
    dend_59 { pt3dadd( 16.2016, 12.4691, -19.9095, 1.4 ) }
    dend_59 { pt3dadd( 17.625, 12.1124, -20.2869, 1.4 ) }
    dend_59 { pt3dadd( 17.7626, 12.0779, -20.3234, 1.4 ) }
    // Section: dend_49, id: dend_49, parent: dend_45 (entry count 26/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -9.55676, 15.6674, 4.57233, 0.88 ) }
    dend_49 { pt3dadd( -10.0197, 16.849, 4.93207, 0.88 ) }
    dend_49 { pt3dadd( -10.2562, 17.5143, 5.1211, 0.88 ) }
    dend_49 { pt3dadd( -10.6038, 18.6324, 5.40821, 0.88 ) }
    dend_49 { pt3dadd( -11.1218, 20.465, 5.85187, 0.74 ) }
    dend_49 { pt3dadd( -11.4096, 21.6561, 6.13689, 0.74 ) }
    dend_49 { pt3dadd( -11.5612, 22.4096, 6.30603, 1.03 ) }
    dend_49 { pt3dadd( -11.571, 22.4924, 6.3204, 1.03 ) }
    dend_49 { pt3dadd( -11.6118, 23.393, 6.5027, 1.03 ) }
    dend_49 { pt3dadd( -11.6116, 23.5098, 6.52812, 1.03 ) }
    dend_49 { pt3dadd( -11.6472, 24.682, 6.87045, 0.88 ) }
    dend_49 { pt3dadd( -11.8315, 25.88, 7.39183, 1.18 ) }
    dend_49 { pt3dadd( -11.8498, 25.9429, 7.42541, 1.18 ) }
    dend_49 { pt3dadd( -12.2997, 27.1127, 8.12028, 1.18 ) }
    dend_49 { pt3dadd( -12.8185, 28.2007, 8.83716, 0.81 ) }
    dend_49 { pt3dadd( -13.5254, 29.4804, 9.73614, 0.81 ) }
    dend_49 { pt3dadd( -14.5125, 31.0446, 10.8668, 0.81 ) }
    dend_49 { pt3dadd( -15.2292, 32.0945, 11.6366, 0.81 ) }
    dend_49 { pt3dadd( -15.2653, 32.1467, 11.6731, 0.81 ) }
    dend_49 { pt3dadd( -15.883, 33.0681, 12.246, 0.66 ) }
    dend_49 { pt3dadd( -15.9159, 33.1258, 12.2773, 0.66 ) }
    dend_49 { pt3dadd( -16.347, 34.2722, 12.6875, 0.66 ) }
    dend_49 { pt3dadd( -16.3968, 34.5721, 12.7763, 0.66 ) }
    dend_49 { pt3dadd( -16.4361, 35.5541, 13.1221, 0.96 ) }
    dend_49 { pt3dadd( -16.4122, 36.6607, 13.5419, 0.96 ) }
    dend_49 { pt3dadd( -16.3787, 37.0731, 13.7059, 0.96 ) }
    dend_49 { pt3dadd( -16.318, 37.6435, 13.9469, 0.96 ) }
    dend_49 { pt3dadd( -16.0992, 39.1135, 14.636, 0.81 ) }
    dend_49 { pt3dadd( -15.8949, 40.3272, 15.2348, 0.81 ) }
    dend_49 { pt3dadd( -15.6988, 41.2926, 15.743, 0.81 ) }
    dend_49 { pt3dadd( -15.6803, 41.3867, 15.8004, 0.81 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 57/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -9.55676, 15.6674, 4.57233, 0.88 ) }
    dend_46 { pt3dadd( -9.52627, 16.3704, 4.58378, 0.88 ) }
    dend_46 { pt3dadd( -9.47539, 17.2064, 4.59114, 0.74 ) }
    dend_46 { pt3dadd( -9.40168, 18.2118, 4.59347, 0.74 ) }
    dend_46 { pt3dadd( -9.3954, 18.2915, 4.5929, 0.74 ) }
    dend_46 { pt3dadd( -9.226, 20.0375, 4.5795, 0.74 ) }
    dend_46 { pt3dadd( -9.09241, 21.2383, 4.57585, 0.88 ) }
    dend_46 { pt3dadd( -9.01052, 21.9001, 4.55992, 0.88 ) }
    dend_46 { pt3dadd( -8.98435, 22.0993, 4.55392, 0.88 ) }
    dend_46 { pt3dadd( -8.86419, 23.0164, 4.52927, 0.74 ) }
    dend_46 { pt3dadd( -8.72867, 24.1458, 4.54019, 0.74 ) }
    dend_46 { pt3dadd( -8.58603, 25.4841, 4.59751, 0.74 ) }
    dend_46 { pt3dadd( -8.47587, 26.7379, 4.68264, 1.62 ) }
    dend_46 { pt3dadd( -8.37418, 28.0892, 4.79455, 1.62 ) }
    dend_46 { pt3dadd( -8.28804, 29.6527, 4.97335, 1.33 ) }
    dend_46 { pt3dadd( -8.24298, 30.7952, 5.13941, 0.96 ) }
    dend_46 { pt3dadd( -8.2192, 31.8646, 5.31985, 0.96 ) }
    dend_46 { pt3dadd( -8.20292, 32.7642, 5.49588, 0.96 ) }
    dend_46 { pt3dadd( -8.201, 32.8422, 5.51314, 0.96 ) }
    dend_46 { pt3dadd( -8.17628, 33.9823, 5.76503, 0.96 ) }
    dend_46 { pt3dadd( -8.13035, 35.3018, 6.03003, 0.74 ) }
    dend_46 { pt3dadd( -8.08062, 36.2966, 6.18534, 0.74 ) }
    dend_46 { pt3dadd( -8.07581, 36.3756, 6.1965, 0.74 ) }
    dend_46 { pt3dadd( -8.02196, 37.1216, 6.19684, 1.03 ) }
    dend_46 { pt3dadd( -8.01506, 37.212, 6.18656, 1.03 ) }
    dend_46 { pt3dadd( -7.95391, 38.0227, 6.00864, 1.03 ) }
    dend_46 { pt3dadd( -7.94935, 38.0995, 5.98781, 1.03 ) }
    dend_46 { pt3dadd( -7.86892, 39.4897, 5.45789, 1.03 ) }
    dend_46 { pt3dadd( -7.76083, 41.3822, 4.60887, 1.03 ) }
    dend_46 { pt3dadd( -7.75617, 41.4632, 4.56804, 1.03 ) }
    dend_46 { pt3dadd( -7.66742, 42.9181, 3.78201, 1.03 ) }
    dend_46 { pt3dadd( -7.66328, 42.987, 3.7429, 1.03 ) }
    dend_46 { pt3dadd( -7.59213, 44.4571, 2.92616, 0.88 ) }
    dend_46 { pt3dadd( -7.58891, 44.5364, 2.88211, 0.88 ) }
    dend_46 { pt3dadd( -7.57517, 45.0803, 2.65141, 0.88 ) }
    dend_46 { pt3dadd( -7.57501, 45.1548, 2.62338, 0.88 ) }
    dend_46 { pt3dadd( -7.58044, 45.8758, 2.39704, 0.88 ) }
    dend_46 { pt3dadd( -7.58611, 46.3142, 2.322, 0.88 ) }
    dend_46 { pt3dadd( -7.59169, 47.1811, 2.28547, 0.88 ) }
    dend_46 { pt3dadd( -7.59101, 47.261, 2.28287, 0.88 ) }
    dend_46 { pt3dadd( -7.53515, 48.2, 2.27005, 0.88 ) }
    dend_46 { pt3dadd( -7.50907, 48.5719, 2.26693, 0.88 ) }
    dend_46 { pt3dadd( -7.39818, 49.8276, 2.2685, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_46 { pt3dadd( -7.25881, 51.1586, 2.29358, 1.03 ) }
    dend_46 { pt3dadd( -7.24872, 51.2493, 2.29808, 1.03 ) }
    dend_46 { pt3dadd( -7.05521, 52.766, 2.37521, 1.03 ) }
    // Section: dend_30, id: dend_30, parent: dend_24 (entry count 3/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 8.32683, -13.1141, 7.03582, 1.11 ) }
    dend_30 { pt3dadd( 10.6689, -16.8754, 8.01064, 1.11 ) }
    dend_30 { pt3dadd( 11.6541, -18.3952, 8.27083, 1.11 ) }
    dend_30 { pt3dadd( 11.7592, -18.5373, 8.25108, 1.11 ) }
    dend_30 { pt3dadd( 12.6946, -19.6125, 7.95719, 1.33 ) }
    dend_30 { pt3dadd( 14.0109, -20.9226, 7.48224, 1.11 ) }
    dend_30 { pt3dadd( 16.0981, -22.808, 6.74258, 1.11 ) }
    dend_30 { pt3dadd( 16.1569, -22.859, 6.71554, 1.11 ) }
    dend_30 { pt3dadd( 18.9953, -25.1134, 5.40056, 1.25 ) }
    dend_30 { pt3dadd( 21.1431, -26.7468, 4.3957, 1.55 ) }
    dend_30 { pt3dadd( 23.2082, -28.1723, 3.42263, 1.55 ) }
    dend_30 { pt3dadd( 24.4388, -28.9627, 2.81117, 1.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 15/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 8.32683, -13.1141, 7.03582, 1.47 ) }
    dend_25 { pt3dadd( 7.89808, -16.391, 11.6518, 1.47 ) }
    dend_25 { pt3dadd( 7.82717, -17.2238, 12.6668, 1.03 ) }
    dend_25 { pt3dadd( 7.85407, -17.814, 13.2237, 1.03 ) }
    dend_25 { pt3dadd( 8.00031, -18.8946, 14.0904, 0.88 ) }
    dend_25 { pt3dadd( 8.01134, -18.942, 14.1248, 0.88 ) }
    dend_25 { pt3dadd( 8.34754, -20.1501, 14.9601, 0.88 ) }
    dend_25 { pt3dadd( 8.36434, -20.1882, 14.9766, 0.88 ) }
    dend_25 { pt3dadd( 9.31864, -21.9426, 15.828, 0.88 ) }
    dend_25 { pt3dadd( 9.7878, -22.6364, 16.2282, 1.47 ) }
    dend_25 { pt3dadd( 10.7174, -23.8026, 17.002, 0.88 ) }
    dend_25 { pt3dadd( 10.7511, -23.8409, 17.0322, 0.88 ) }
    dend_25 { pt3dadd( 11.7032, -24.7533, 17.9152, 0.74 ) }
    dend_25 { pt3dadd( 11.7765, -24.8158, 17.9904, 0.74 ) }
    dend_25 { pt3dadd( 12.493, -25.3208, 18.8136, 0.74 ) }
    dend_25 { pt3dadd( 12.5382, -25.3479, 18.8639, 0.74 ) }
    dend_25 { pt3dadd( 13.2568, -25.7209, 19.7049, 1.33 ) }
    dend_25 { pt3dadd( 13.8212, -26.0125, 20.4484, 0.96 ) }
    dend_25 { pt3dadd( 14.6949, -26.4809, 21.6504, 1.11 ) }
    dend_25 { pt3dadd( 14.7228, -26.4969, 21.6906, 1.11 ) }
    dend_25 { pt3dadd( 15.1792, -26.8011, 22.3966, 1.11 ) }
    dend_25 { pt3dadd( 15.9263, -27.3839, 23.4822, 0.81 ) }
    dend_25 { pt3dadd( 16.4899, -27.8774, 24.2453, 1.25 ) }
    dend_25 { pt3dadd( 16.9335, -28.3771, 24.8694, 0.88 ) }
    dend_25 { pt3dadd( 16.9577, -28.4102, 24.9012, 0.88 ) }
    dend_25 { pt3dadd( 17.4651, -29.3059, 25.5768, 0.81 ) }
    dend_25 { pt3dadd( 17.7688, -30.1629, 26.0038, 0.81 ) }
    dend_25 { pt3dadd( 17.7838, -30.2346, 26.0202, 0.81 ) }
    dend_25 { pt3dadd( 17.8957, -31.4228, 26.1743, 0.81 ) }
    dend_25 { pt3dadd( 17.8963, -31.4677, 26.1786, 0.81 ) }
    dend_25 { pt3dadd( 17.8788, -32.2893, 26.2316, 0.81 ) }
    dend_25 { pt3dadd( 17.8803, -33.051, 26.313, 1.18 ) }
    dend_25 { pt3dadd( 17.9154, -33.8114, 26.4591, 0.88 ) }
    dend_25 { pt3dadd( 18.0898, -34.6684, 26.8263, 0.59 ) }
    dend_25 { pt3dadd( 18.328, -35.3022, 27.3876, 0.59 ) }
    dend_25 { pt3dadd( 18.3445, -35.3412, 27.4291, 0.59 ) }
    dend_25 { pt3dadd( 18.889, -36.4723, 28.8407, 0.59 ) }
    dend_25 { pt3dadd( 18.9061, -36.5063, 28.8859, 0.59 ) }
    dend_25 { pt3dadd( 19.5728, -37.7636, 30.459, 0.81 ) }
    dend_25 { pt3dadd( 20.1426, -38.8645, 31.775, 0.81 ) }
    dend_25 { pt3dadd( 20.4713, -39.5481, 32.5633, 0.81 ) }
    dend_25 { pt3dadd( 20.4928, -39.5938, 32.6163, 0.81 ) }
    dend_25 { pt3dadd( 20.9895, -40.7147, 33.8808, 0.74 ) }
    dend_25 { pt3dadd( 21.4984, -41.7562, 35.0428, 0.52 ) }
    dend_25 { pt3dadd( 22.1308, -42.938, 36.3003, 0.52 ) }
    dend_25 { pt3dadd( 22.1842, -43.014, 36.3851, 0.52 ) }
    dend_25 { pt3dadd( 22.9888, -43.9379, 37.5925, 0.52 ) }
    dend_25 { pt3dadd( 23.0137, -43.9664, 37.6277, 0.52 ) }
    dend_25 { pt3dadd( 23.3802, -44.4055, 38.1585, 0.52 ) }
    dend_25 { pt3dadd( 23.4301, -44.4829, 38.2394, 0.52 ) }
    dend_25 { pt3dadd( 23.7831, -45.203, 38.6706, 0.52 ) }
    dend_25 { pt3dadd( 23.8428, -45.3596, 38.7386, 0.52 ) }
    dend_25 { pt3dadd( 24.3397, -46.8027, 39.2355, 0.52 ) }
    dend_25 { pt3dadd( 24.6655, -47.6708, 39.5612, 0.52 ) }
    dend_25 { pt3dadd( 24.7533, -47.9078, 39.654, 0.52 ) }
    dend_25 { pt3dadd( 25.0295, -48.6645, 39.9546, 0.52 ) }
    dend_25 { pt3dadd( 25.0553, -48.7341, 39.983, 0.52 ) }
    dend_25 { pt3dadd( 25.5444, -49.6711, 40.427, 0.52 ) }
    dend_25 { pt3dadd( 25.9153, -50.0087, 40.6865, 0.88 ) }
    dend_25 { pt3dadd( 26.0011, -50.0622, 40.7319, 0.88 ) }
    // Section: dend_21, id: dend_21, parent: dend_0 (entry count 75/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -4.07828, -17.0089, -1.16098, 0.59 ) }
    dend_21 { pt3dadd( -4.80026, -17.2124, -1.2938, 0.59 ) }
    dend_21 { pt3dadd( -5.93682, -17.561, -1.36608, 0.59 ) }
    dend_21 { pt3dadd( -7.33665, -18.0201, -1.35293, 0.59 ) }
    dend_21 { pt3dadd( -7.88565, -18.2166, -1.32294, 0.59 ) }
    dend_21 { pt3dadd( -9.8262, -19.0103, -1.16572, 0.88 ) }
    dend_21 { pt3dadd( -10.7712, -19.4453, -1.10763, 0.88 ) }
    dend_21 { pt3dadd( -11.8194, -19.9874, -1.02084, 0.96 ) }
    dend_21 { pt3dadd( -12.706, -20.4897, -0.942861, 1.25 ) }
    dend_21 { pt3dadd( -13.5635, -21.0329, -0.905159, 1.47 ) }
    dend_21 { pt3dadd( -14.6693, -21.7086, -1.14039, 1.11 ) }
    dend_21 { pt3dadd( -16.0064, -22.4695, -1.81146, 1.03 ) }
    dend_21 { pt3dadd( -16.6386, -22.7992, -2.21911, 1.03 ) }
    dend_21 { pt3dadd( -16.7077, -22.8322, -2.2705, 1.03 ) }
    dend_21 { pt3dadd( -18.1178, -23.4813, -3.40113, 1.55 ) }
    dend_21 { pt3dadd( -21.0302, -24.7982, -5.8307, 0.66 ) }
    dend_21 { pt3dadd( -22.1468, -25.3249, -6.75911, 0.66 ) }
    dend_21 { pt3dadd( -22.7729, -25.6658, -7.28209, 0.66 ) }
    dend_21 { pt3dadd( -22.8149, -25.6937, -7.3161, 0.66 ) }
    dend_21 { pt3dadd( -23.4597, -26.2123, -7.7987, 0.74 ) }
    dend_21 { pt3dadd( -24.0077, -26.7833, -8.14487, 1.03 ) }
    dend_21 { pt3dadd( -24.6517, -27.8182, -8.56254, 1.03 ) }
    dend_21 { pt3dadd( -25.4591, -29.1999, -9.05831, 1.25 ) }
    dend_21 { pt3dadd( -25.9234, -30.0063, -9.37567, 1.18 ) }
    dend_21 { pt3dadd( -25.9758, -30.0906, -9.41116, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_21 { pt3dadd( -26.4031, -30.6519, -9.72688, 0.52 ) }
    dend_21 { pt3dadd( -26.4448, -30.6872, -9.75407, 0.52 ) }
    dend_21 { pt3dadd( -27.2147, -30.9744, -10.1796, 0.52 ) }
    dend_21 { pt3dadd( -27.2697, -30.9823, -10.2036, 0.52 ) }
    dend_21 { pt3dadd( -27.6793, -31.0079, -10.4106, 0.52 ) }
    dend_21 { pt3dadd( -28.9717, -31.0541, -11.0765, 0.88 ) }
    dend_21 { pt3dadd( -29.8927, -31.0689, -11.5544, 1.25 ) }
    dend_21 { pt3dadd( -31.1317, -31.1007, -12.2194, 1.25 ) }
    dend_21 { pt3dadd( -31.8039, -31.1265, -12.5922, 0.88 ) }
    dend_21 { pt3dadd( -33.0135, -31.2572, -13.2558, 0.88 ) }
    dend_21 { pt3dadd( -33.5441, -31.3926, -13.5753, 0.52 ) }
    dend_21 { pt3dadd( -33.8387, -31.5438, -13.756, 0.52 ) }
    dend_21 { pt3dadd( -34.048, -31.7159, -13.9304, 0.52 ) }
    dend_21 { pt3dadd( -34.296, -31.9324, -14.1714, 0.52 ) }
    dend_21 { pt3dadd( -34.759, -32.309, -14.6657, 0.52 ) }
    dend_21 { pt3dadd( -35.6409, -32.981, -15.627, 0.88 ) }
    dend_21 { pt3dadd( -36.2128, -33.3977, -16.2655, 1.25 ) }
    dend_21 { pt3dadd( -37.8021, -34.4786, -17.9561, 1.62 ) }
    dend_21 { pt3dadd( -39.1301, -35.3362, -19.2424, 1.55 ) }
    dend_21 { pt3dadd( -40.2906, -36.046, -20.2876, 0.81 ) }
    dend_21 { pt3dadd( -40.3554, -36.0841, -20.3412, 0.81 ) }
    dend_21 { pt3dadd( -40.7185, -36.3086, -20.6005, 0.37 ) }
    dend_21 { pt3dadd( -41.555, -36.9076, -21.1121, 0.37 ) }
    dend_21 { pt3dadd( -42.5271, -37.8011, -21.4592, 0.37 ) }
    dend_21 { pt3dadd( -42.5677, -37.8467, -21.4654, 0.37 ) }
    dend_21 { pt3dadd( -43.159, -38.5175, -21.5647, 1.03 ) }
    dend_21 { pt3dadd( -43.7364, -39.1574, -21.6835, 1.47 ) }
    dend_21 { pt3dadd( -44.3501, -39.84, -21.8201, 0.96 ) }
    dend_21 { pt3dadd( -44.827, -40.3733, -21.936, 0.29 ) }
    dend_21 { pt3dadd( -46.1286, -41.8059, -22.2645, 0.29 ) }
    dend_21 { pt3dadd( -47.8764, -43.683, -22.6918, 0.29 ) }
    dend_21 { pt3dadd( -48.7527, -44.5779, -22.8924, 0.29 ) }
    dend_21 { pt3dadd( -49.3535, -45.1559, -23.043, 2.06 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 33/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -4.07828, -17.0089, -1.16098, 2.36 ) }
    dend_1 { pt3dadd( -4.15364, -17.2874, -1.19889, 2.36 ) }
    dend_1 { pt3dadd( -4.42561, -18.2386, -1.29115, 2.36 ) }
    dend_1 { pt3dadd( -4.89831, -19.8918, -1.45151, 1.99 ) }
    dend_1 { pt3dadd( -5.347, -21.461, -1.60372, 1.99 ) }
    dend_1 { pt3dadd( -5.74656, -22.8583, -1.73926, 2.14 ) }
    dend_1 { pt3dadd( -6.1889, -24.4053, -1.88932, 3.02 ) }
    dend_1 { pt3dadd( -6.45102, -25.2525, -1.96452, 3.02 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 41/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 6.97531, 41.4078, 1.00426, 1.18 ) }
    axon_1 { pt3dadd( 9.15148, 56.2491, 1.00426, 1.18 ) }
    axon_1 { pt3dadd( 11.3276, 71.0904, 1.00426, 1.18 ) }
    // Section: dend_77, id: dend_77, parent: dend_73 (entry count 44/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 21.1879, 39.6247, 9.63168, 0.74 ) }
    dend_77 { pt3dadd( 20.715, 43.188, 11.0224, 0.74 ) }
    dend_77 { pt3dadd( 20.7129, 43.2742, 11.0419, 0.74 ) }
    dend_77 { pt3dadd( 20.7896, 44.4209, 11.2704, 0.74 ) }
    dend_77 { pt3dadd( 20.9191, 45.4576, 11.4569, 0.59 ) }
    dend_77 { pt3dadd( 21.0947, 46.5254, 11.6262, 0.59 ) }
    dend_77 { pt3dadd( 21.259, 47.4067, 11.748, 0.59 ) }
    dend_77 { pt3dadd( 21.279, 47.4815, 11.7484, 0.59 ) }
    dend_77 { pt3dadd( 21.559, 48.5314, 11.806, 0.22 ) }
    dend_77 { pt3dadd( 21.7149, 49.095, 11.863, 0.81 ) }
    dend_77 { pt3dadd( 21.9026, 49.8128, 11.957, 1.03 ) }
    dend_77 { pt3dadd( 22.0691, 50.4181, 12.1024, 1.03 ) }
    dend_77 { pt3dadd( 22.3916, 51.5723, 12.4354, 0.81 ) }
    dend_77 { pt3dadd( 22.7489, 52.777, 12.8117, 0.59 ) }
    dend_77 { pt3dadd( 23.22, 54.3436, 13.305, 0.59 ) }
    dend_77 { pt3dadd( 23.2497, 54.4416, 13.3424, 0.59 ) }
    dend_77 { pt3dadd( 23.9427, 56.6739, 14.2939, 0.59 ) }
    dend_77 { pt3dadd( 23.9641, 56.7413, 14.3239, 0.59 ) }
    dend_77 { pt3dadd( 24.2224, 57.6154, 14.7431, 0.44 ) }
    dend_77 { pt3dadd( 24.4299, 58.5111, 15.2354, 0.44 ) }
    dend_77 { pt3dadd( 24.7174, 60.4556, 16.3084, 0.44 ) }
    dend_77 { pt3dadd( 24.7639, 61.0003, 16.5877, 0.96 ) }
    dend_77 { pt3dadd( 24.7626, 61.688, 16.8747, 0.96 ) }
    dend_77 { pt3dadd( 24.7139, 63.0151, 17.3958, 0.59 ) }
    dend_77 { pt3dadd( 24.6375, 64.2245, 17.8141, 0.29 ) }
    dend_77 { pt3dadd( 24.5713, 65.1264, 18.0668, 0.29 ) }
    dend_77 { pt3dadd( 24.5583, 65.2902, 18.0895, 0.29 ) }
    dend_77 { pt3dadd( 24.4475, 66.9968, 18.177, 0.29 ) }
    dend_77 { pt3dadd( 24.4454, 67.0852, 18.1713, 0.29 ) }
    dend_77 { pt3dadd( 24.4879, 68.1161, 17.9146, 0.29 ) }
    dend_77 { pt3dadd( 24.4994, 68.2718, 17.8581, 0.81 ) }
    dend_77 { pt3dadd( 24.5349, 69.0165, 17.5481, 0.81 ) }
    dend_77 { pt3dadd( 24.5264, 69.5123, 17.3158, 0.29 ) }
    dend_77 { pt3dadd( 24.3463, 70.3486, 16.8569, 0.29 ) }
    dend_77 { pt3dadd( 23.9896, 71.2219, 16.3292, 0.29 ) }
    dend_77 { pt3dadd( 23.8977, 71.3871, 16.2217, 0.29 ) }
    dend_77 { pt3dadd( 23.4279, 72.0733, 15.7064, 0.29 ) }
    dend_77 { pt3dadd( 23.1842, 72.3744, 15.4553, 0.29 ) }
    dend_77 { pt3dadd( 22.0527, 73.544, 14.3911, 0.29 ) }
    dend_77 { pt3dadd( 21.0468, 74.4216, 13.4955, 0.29 ) }
    dend_77 { pt3dadd( 20.9818, 74.4749, 13.4405, 0.29 ) }
    dend_77 { pt3dadd( 19.7643, 75.4521, 12.3875, 0.29 ) }
    dend_77 { pt3dadd( 19.6591, 75.5339, 12.293, 0.29 ) }
    dend_77 { pt3dadd( 19.0432, 75.9945, 11.7221, 0.29 ) }
    dend_77 { pt3dadd( 18.4833, 76.3603, 11.1793, 0.81 ) }
    dend_77 { pt3dadd( 17.7851, 76.7294, 10.5646, 0.81 ) }
    dend_77 { pt3dadd( 16.3046, 87.6502, 11.4914, 0.81 ) }
    dend_77 { pt3dadd( 14.6022, 98.2448, 14.0644, 0.81 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 92/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 21.1879, 39.6247, 9.63168, 1.03 ) }
    dend_74 { pt3dadd( 22.4403, 40.2987, 11.4569, 1.03 ) }
    dend_74 { pt3dadd( 23.2183, 40.7231, 12.5094, 0.74 ) }
    dend_74 { pt3dadd( 24.3461, 41.4563, 13.8218, 0.74 ) }
    dend_74 { pt3dadd( 24.3862, 41.4883, 13.8613, 0.74 ) }
    dend_74 { pt3dadd( 25.1603, 42.135, 14.3809, 0.52 ) }
    dend_74 { pt3dadd( 25.7321, 42.6143, 14.6264, 0.52 ) }
    dend_74 { pt3dadd( 25.8142, 42.6837, 14.6297, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_74 { pt3dadd( 26.8836, 43.7177, 14.6459, 0.81 ) }
    dend_74 { pt3dadd( 27.6646, 44.5205, 14.6336, 1.11 ) }
    dend_74 { pt3dadd( 28.9726, 46.0334, 14.9191, 0.66 ) }
    dend_74 { pt3dadd( 29.5354, 46.777, 15.1851, 0.59 ) }
    dend_74 { pt3dadd( 30.0877, 47.5987, 15.8182, 0.59 ) }
    dend_74 { pt3dadd( 30.8407, 48.9015, 17.3607, 0.59 ) }
    dend_74 { pt3dadd( 30.8651, 48.9436, 17.432, 0.59 ) }
    dend_74 { pt3dadd( 31.5515, 50.0663, 19.704, 0.59 ) }
    dend_74 { pt3dadd( 31.5719, 50.1007, 19.7803, 0.59 ) }
    dend_74 { pt3dadd( 32.0807, 50.9238, 21.5192, 1.25 ) }
    dend_74 { pt3dadd( 32.1079, 50.9639, 21.5905, 1.25 ) }
    dend_74 { pt3dadd( 32.7782, 51.8329, 22.6584, 0.96 ) }
    dend_74 { pt3dadd( 33.8034, 53.0391, 23.7512, 0.66 ) }
    dend_74 { pt3dadd( 33.8701, 53.1099, 23.7966, 0.66 ) }
    dend_74 { pt3dadd( 34.84, 54.1298, 24.3228, 0.59 ) }
    dend_74 { pt3dadd( 35.9092, 55.2592, 24.7344, 0.59 ) }
    dend_74 { pt3dadd( 36.821, 56.2425, 25.0429, 0.59 ) }
    dend_74 { pt3dadd( 37.4504, 56.9547, 25.2091, 0.59 ) }
    dend_74 { pt3dadd( 37.7743, 57.2992, 25.2834, 0.59 ) }
    dend_74 { pt3dadd( 38.1754, 57.6859, 25.3959, 0.81 ) }
    dend_74 { pt3dadd( 38.876, 58.2879, 25.6263, 0.81 ) }
    dend_74 { pt3dadd( 39.1432, 58.4962, 25.7276, 0.81 ) }
    dend_74 { pt3dadd( 40.1629, 59.2846, 26.1741, 0.81 ) }
    dend_74 { pt3dadd( 41.1624, 60.0511, 26.6182, 0.44 ) }
    dend_74 { pt3dadd( 42.0319, 60.7096, 27.007, 0.44 ) }
    dend_74 { pt3dadd( 42.1187, 60.7744, 27.0456, 0.44 ) }
    dend_74 { pt3dadd( 42.9474, 61.4097, 27.4437, 0.81 ) }
    dend_74 { pt3dadd( 43.4367, 61.8044, 27.6856, 0.96 ) }
    dend_74 { pt3dadd( 44.0836, 62.379, 28.0325, 0.81 ) }
    dend_74 { pt3dadd( 44.1333, 62.4294, 28.0597, 0.81 ) }
    dend_74 { pt3dadd( 44.9562, 63.3658, 28.4355, 0.52 ) }
    dend_74 { pt3dadd( 45.8646, 64.452, 28.7935, 0.52 ) }
    dend_74 { pt3dadd( 46.3271, 65.0568, 28.9871, 0.81 ) }
    dend_74 { pt3dadd( 47.2128, 66.2838, 29.3693, 0.52 ) }
    dend_74 { pt3dadd( 47.344, 66.4728, 29.4366, 0.52 ) }
    dend_74 { pt3dadd( 48.8133, 68.5905, 30.2623, 0.37 ) }
    dend_74 { pt3dadd( 48.8552, 68.6492, 30.2869, 0.37 ) }
    dend_74 { pt3dadd( 49.8124, 69.9454, 30.8551, 0.37 ) }
    dend_74 { pt3dadd( 50.325, 70.6177, 31.1839, 1.03 ) }
    dend_74 { pt3dadd( 51.4506, 72.0212, 31.9538, 1.03 ) }
    dend_74 { pt3dadd( 51.4946, 72.0737, 31.9867, 1.03 ) }
    dend_74 { pt3dadd( 52.1899, 72.8721, 32.5957, 1.03 ) }
    dend_74 { pt3dadd( 52.2353, 72.9224, 32.6298, 1.03 ) }
    dend_74 { pt3dadd( 52.9559, 73.7054, 33.0512, 0.66 ) }
    dend_74 { pt3dadd( 53.0109, 73.7657, 33.081, 0.66 ) }
    dend_74 { pt3dadd( 53.5092, 74.3361, 33.2852, 0.66 ) }
    dend_74 { pt3dadd( 53.5849, 74.4277, 33.3173, 0.66 ) }
    dend_74 { pt3dadd( 54.0544, 75.0586, 33.5305, 0.66 ) }
    dend_74 { pt3dadd( 55.0375, 76.4082, 33.983, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_70 (entry count 49/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -0.0584638, 25.8938, 0.0890835, 0.96 ) }
    dend_72 { pt3dadd( -0.0625378, 26.3182, 0.066664, 0.96 ) }
    dend_72 { pt3dadd( -0.125885, 27.1924, 0.0214192, 0.74 ) }
    dend_72 { pt3dadd( -0.311387, 28.3237, -0.0137247, 0.74 ) }
    dend_72 { pt3dadd( -0.321621, 28.3729, -0.0149538, 0.74 ) }
    dend_72 { pt3dadd( -0.576957, 29.3637, -0.0271428, 0.66 ) }
    dend_72 { pt3dadd( -0.83888, 30.2815, -0.0316799, 0.66 ) }
    dend_72 { pt3dadd( -0.887117, 30.411, -0.0249334, 0.66 ) }
    dend_72 { pt3dadd( -1.35041, 31.1958, 0.0699371, 1.03 ) }
    dend_72 { pt3dadd( -1.38003, 31.2346, 0.0797375, 1.03 ) }
    dend_72 { pt3dadd( -1.78758, 31.7206, 0.269687, 1.03 ) }
    dend_72 { pt3dadd( -1.82272, 31.7607, 0.292293, 1.03 ) }
    dend_72 { pt3dadd( -2.20217, 32.1899, 0.567553, 0.81 ) }
    dend_72 { pt3dadd( -2.9066, 33.0637, 1.18352, 0.81 ) }
    dend_72 { pt3dadd( -3.39805, 33.7292, 1.6668, 0.81 ) }
    dend_72 { pt3dadd( -3.93077, 34.5054, 2.28742, 0.66 ) }
    dend_72 { pt3dadd( -4.41292, 35.2726, 2.9287, 0.66 ) }
    dend_72 { pt3dadd( -4.43634, 35.3137, 2.96217, 0.66 ) }
    dend_72 { pt3dadd( -4.90603, 36.2869, 3.7058, 1.03 ) }
    dend_72 { pt3dadd( -5.15315, 36.9143, 4.1656, 1.03 ) }
    dend_72 { pt3dadd( -5.46444, 37.8299, 4.83522, 0.96 ) }
    dend_72 { pt3dadd( -5.58497, 38.2835, 5.16193, 0.96 ) }
    dend_72 { pt3dadd( -5.71812, 38.957, 5.60649, 0.52 ) }
    dend_72 { pt3dadd( -5.82564, 39.6539, 6.03765, 0.52 ) }
    dend_72 { pt3dadd( -5.82985, 39.698, 6.06083, 0.52 ) }
    dend_72 { pt3dadd( -5.85924, 40.684, 6.51835, 1.11 ) }
    dend_72 { pt3dadd( -5.8492, 41.4375, 6.77521, 1.11 ) }
    dend_72 { pt3dadd( -5.80979, 42.2186, 7.05795, 1.03 ) }
    dend_72 { pt3dadd( -5.80668, 42.2654, 7.07554, 1.03 ) }
    dend_72 { pt3dadd( -5.8148, 42.8227, 7.28423, 0.66 ) }
    dend_72 { pt3dadd( -5.82206, 42.8774, 7.30364, 0.66 ) }
    dend_72 { pt3dadd( -6.08247, 43.4589, 7.51028, 0.44 ) }
    dend_72 { pt3dadd( -6.51599, 43.9863, 7.77595, 0.44 ) }
    dend_72 { pt3dadd( -6.69924, 44.1462, 7.90006, 0.44 ) }
    dend_72 { pt3dadd( -7.11477, 44.5213, 8.33423, 0.44 ) }
    dend_72 { pt3dadd( -7.20678, 44.62, 8.47169, 0.44 ) }
    dend_72 { pt3dadd( -7.59417, 45.1755, 9.22925, 0.44 ) }
    dend_72 { pt3dadd( -7.60667, 45.2087, 9.27473, 0.44 ) }
    dend_72 { pt3dadd( -7.70185, 45.9388, 10.1787, 0.74 ) }
    dend_72 { pt3dadd( -7.64221, 46.9057, 11.3357, 0.52 ) }
    dend_72 { pt3dadd( -7.54049, 47.4997, 11.9796, 0.66 ) }
    dend_72 { pt3dadd( -7.42884, 47.988, 12.4704, 0.66 ) }
    dend_72 { pt3dadd( -7.15986, 48.9535, 13.3134, 1.47 ) }
    dend_72 { pt3dadd( -7.0559, 49.3273, 13.5979, 1.47 ) }
    dend_72 { pt3dadd( -6.66526, 50.8399, 14.4664, 0.66 ) }
    dend_72 { pt3dadd( -6.49025, 51.6527, 14.8332, 0.66 ) }
    dend_72 { pt3dadd( -6.47047, 51.7667, 14.8808, 0.66 ) }
    dend_72 { pt3dadd( -6.39103, 52.7456, 15.2573, 0.66 ) }
    dend_72 { pt3dadd( -6.39049, 52.8002, 15.2782, 0.66 ) }
    dend_72 { pt3dadd( -6.39422, 54.2982, 15.888, 0.66 ) }
    dend_72 { pt3dadd( -6.39572, 54.345, 15.9061, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_72 { pt3dadd( -6.4447, 55.0568, 16.2762, 0.66 ) }
    dend_72 { pt3dadd( -6.52622, 56.0893, 16.8953, 0.66 ) }
    dend_72 { pt3dadd( -6.62016, 57.1074, 17.567, 0.88 ) }
    dend_72 { pt3dadd( -6.62974, 57.2626, 17.6636, 0.88 ) }
    dend_72 { pt3dadd( -6.62852, 58.1082, 18.1822, 0.88 ) }
    dend_72 { pt3dadd( -6.5796, 59.2968, 18.8298, 1.11 ) }
    dend_72 { pt3dadd( -6.54596, 59.7169, 19.0313, 0.88 ) }
    dend_72 { pt3dadd( -6.48895, 60.3332, 19.3028, 0.59 ) }
    dend_72 { pt3dadd( -6.45277, 61.4642, 19.7367, 0.59 ) }
    dend_72 { pt3dadd( -6.47301, 62.3423, 20.0776, 0.44 ) }
    dend_72 { pt3dadd( -6.51442, 62.9284, 20.2994, 0.44 ) }
    dend_72 { pt3dadd( -6.52936, 63.0176, 20.3269, 0.44 ) }
    dend_72 { pt3dadd( -6.7575, 63.7013, 20.5517, 0.44 ) }
    dend_72 { pt3dadd( -6.92324, 64.0084, 20.6624, 0.44 ) }
    dend_72 { pt3dadd( -7.14937, 64.2967, 20.7601, 0.44 ) }
    dend_72 { pt3dadd( -7.26986, 64.4416, 20.7943, 0.44 ) }
    dend_72 { pt3dadd( -7.43641, 64.7912, 20.849, 0.74 ) }
    dend_72 { pt3dadd( -7.59949, 65.5007, 20.9193, 0.96 ) }
    dend_72 { pt3dadd( -7.59889, 65.551, 20.921, 0.96 ) }
    dend_72 { pt3dadd( -7.55528, 65.9171, 20.9227, 0.96 ) }
    dend_72 { pt3dadd( -7.54406, 65.9746, 20.9216, 0.96 ) }
    dend_72 { pt3dadd( -7.34723, 66.8906, 20.8941, 0.44 ) }
    dend_72 { pt3dadd( -7.33685, 66.9483, 20.8923, 0.44 ) }
    dend_72 { pt3dadd( -7.27841, 67.6923, 20.8812, 0.44 ) }
    dend_72 { pt3dadd( -7.27894, 67.7814, 20.8807, 0.44 ) }
    dend_72 { pt3dadd( -7.32541, 68.4026, 20.866, 0.44 ) }
    dend_72 { pt3dadd( -7.40977, 69.011, 20.8421, 0.96 ) }
    dend_72 { pt3dadd( -7.5955, 69.945, 20.8085, 0.96 ) }
    dend_72 { pt3dadd( -7.89473, 71.0874, 20.7902, 0.96 ) }
    dend_72 { pt3dadd( -8.09619, 71.7189, 20.7903, 0.96 ) }
    dend_72 { pt3dadd( -8.27975, 72.2748, 20.7935, 0.44 ) }
    dend_72 { pt3dadd( -8.57861, 73.1622, 20.8042, 0.44 ) }
    dend_72 { pt3dadd( -8.93716, 74.2497, 20.8228, 0.44 ) }
    dend_72 { pt3dadd( -9.2102, 75.1396, 20.8518, 0.44 ) }
    dend_72 { pt3dadd( -9.23512, 75.2309, 20.8567, 0.44 ) }
    dend_72 { pt3dadd( -9.39212, 75.895, 20.9171, 0.44 ) }
    dend_72 { pt3dadd( -9.50002, 76.4262, 20.9869, 0.74 ) }
    dend_72 { pt3dadd( -9.57488, 76.8681, 21.0536, 0.81 ) }
    dend_72 { pt3dadd( -9.69049, 77.6176, 21.1753, 0.81 ) }
    dend_72 { pt3dadd( -9.70201, 77.6992, 21.1897, 0.81 ) }
    dend_72 { pt3dadd( -9.85824, 78.3869, 21.3354, 0.29 ) }
    dend_72 { pt3dadd( -9.95848, 78.6664, 21.41, 0.29 ) }
    dend_72 { pt3dadd( -10.0128, 78.7928, 21.4442, 0.29 ) }
    dend_72 { pt3dadd( -10.2111, 79.2073, 21.5485, 0.29 ) }
    dend_72 { pt3dadd( -10.2903, 79.3551, 21.5819, 0.29 ) }
    dend_72 { pt3dadd( -10.4947, 79.7331, 21.6555, 0.29 ) }
    dend_72 { pt3dadd( -10.538, 79.8093, 21.6682, 0.29 ) }
    dend_72 { pt3dadd( -10.9175, 80.4984, 21.7741, 0.29 ) }
    dend_72 { pt3dadd( -11.1116, 80.8547, 21.8333, 0.29 ) }
    dend_72 { pt3dadd( -11.1425, 80.9129, 21.8435, 0.29 ) }
    dend_72 { pt3dadd( -11.2563, 81.1219, 21.8853, 0.88 ) }
    dend_72 { pt3dadd( -11.5019, 81.6628, 21.9814, 0.88 ) }
    dend_72 { pt3dadd( -11.8493, 82.4338, 22.0943, 0.88 ) }
    dend_72 { pt3dadd( -12.0513, 82.8482, 22.151, 0.88 ) }
    dend_72 { pt3dadd( -12.078, 82.8997, 22.1575, 0.88 ) }
    dend_72 { pt3dadd( -12.5115, 83.6832, 22.249, 0.29 ) }
    dend_72 { pt3dadd( -13.1852, 84.851, 22.3729, 0.29 ) }
    dend_72 { pt3dadd( -13.4962, 85.3848, 22.4101, 0.59 ) }
    dend_72 { pt3dadd( -13.8335, 85.9474, 22.4283, 0.59 ) }
    dend_72 { pt3dadd( -14.0934, 86.3776, 22.4299, 0.29 ) }
    dend_72 { pt3dadd( -14.4182, 86.8851, 22.4276, 0.29 ) }
    dend_72 { pt3dadd( -14.4858, 86.9799, 22.4271, 0.29 ) }
    dend_72 { pt3dadd( -14.8865, 87.469, 22.4392, 0.29 ) }
    dend_72 { pt3dadd( -14.9387, 87.5401, 22.4435, 0.29 ) }
    dend_72 { pt3dadd( -15.2698, 88.0112, 22.4691, 0.29 ) }
    dend_72 { pt3dadd( -15.3977, 88.1914, 22.4833, 0.29 ) }
    dend_72 { pt3dadd( -15.6624, 88.5729, 22.5712, 0.29 ) }
    dend_72 { pt3dadd( -15.6991, 88.6253, 22.589, 0.29 ) }
    dend_72 { pt3dadd( -16.1503, 89.2548, 22.8484, 0.29 ) }
    dend_72 { pt3dadd( -16.3325, 89.5032, 22.9577, 1.11 ) }
    dend_72 { pt3dadd( -16.7209, 90.0237, 23.1959, 1.33 ) }
    dend_72 { pt3dadd( -17.3152, 90.8385, 23.5712, 0.74 ) }
    dend_72 { pt3dadd( -17.7396, 91.4516, 23.8188, 0.44 ) }
    dend_72 { pt3dadd( -18.1718, 92.1091, 24.0418, 0.44 ) }
    dend_72 { pt3dadd( -18.271, 92.2678, 24.0851, 0.44 ) }
    dend_72 { pt3dadd( -18.4242, 92.5243, 24.1357, 0.44 ) }
    dend_72 { pt3dadd( -18.4884, 92.6314, 24.1394, 0.44 ) }
    dend_72 { pt3dadd( -18.9836, 93.4559, 24.0545, 0.44 ) }
    dend_72 { pt3dadd( -19.3235, 94.0174, 23.9793, 1.11 ) }
    dend_72 { pt3dadd( -19.6617, 94.5786, 23.8946, 1.55 ) }
    dend_72 { pt3dadd( -19.9178, 95.0257, 23.829, 1.55 ) }
    dend_72 { pt3dadd( -20.464, 96.0102, 23.6914, 0.22 ) }
    dend_72 { pt3dadd( -20.7947, 96.643, 23.6135, 0.22 ) }
    dend_72 { pt3dadd( -21.1211, 97.3076, 23.5504, 0.22 ) }
    dend_72 { pt3dadd( -21.1567, 97.3886, 23.543, 0.22 ) }
    dend_72 { pt3dadd( -21.4419, 98.1302, 23.4917, 0.22 ) }
    dend_72 { pt3dadd( -21.5232, 98.366, 23.4876, 0.22 ) }
    dend_72 { pt3dadd( -21.6959, 98.951, 23.5208, 0.22 ) }
    dend_72 { pt3dadd( -21.8403, 99.371, 23.5533, 0.96 ) }
    dend_72 { pt3dadd( -21.9257, 99.5969, 23.5731, 0.96 ) }
    dend_72 { pt3dadd( -22.0773, 99.9479, 23.6227, 0.22 ) }
    dend_72 { pt3dadd( -22.2874, 100.371, 23.7039, 0.22 ) }
    dend_72 { pt3dadd( -22.3622, 100.522, 23.7359, 0.22 ) }
    dend_72 { pt3dadd( -22.9577, 101.754, 24.0119, 0.22 ) }
    dend_72 { pt3dadd( -23.0043, 101.866, 24.043, 0.22 ) }
    dend_72 { pt3dadd( -23.2338, 102.476, 24.237, 0.81 ) }
    dend_72 { pt3dadd( -23.2512, 102.528, 24.2553, 0.81 ) }
    dend_72 { pt3dadd( -23.4334, 103.139, 24.4891, 1.33 ) }
    dend_72 { pt3dadd( -23.5356, 103.52, 24.649, 1.33 ) }
    dend_72 { pt3dadd( -23.7785, 104.266, 25.0452, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_72 { pt3dadd( -23.9235, 104.625, 25.2509, 0.15 ) }
    dend_72 { pt3dadd( -23.9608, 104.694, 25.2902, 0.15 ) }
    dend_72 { pt3dadd( -24.3361, 105.314, 25.6436, 0.15 ) }
    dend_72 { pt3dadd( -24.3923, 105.393, 25.6902, 0.15 ) }
    dend_72 { pt3dadd( -25.6139, 106.957, 26.5955, 0.15 ) }
    dend_72 { pt3dadd( -25.701, 107.057, 26.6423, 0.15 ) }
    dend_72 { pt3dadd( -26.8861, 108.264, 27.1151, 0.15 ) }
    dend_72 { pt3dadd( -26.9794, 108.349, 27.1423, 1.03 ) }
    dend_72 { pt3dadd( -27.44, 108.717, 27.2223, 1.03 ) }
    dend_72 { pt3dadd( -27.4865, 108.752, 27.2262, 1.03 ) }
    dend_72 { pt3dadd( -28.6391, 109.422, 27.1002, 0.15 ) }
    dend_72 { pt3dadd( -29.5771, 109.919, 26.9492, 0.15 ) }
    dend_72 { pt3dadd( -29.6963, 109.966, 26.916, 0.59 ) }
    dend_72 { pt3dadd( -30.1276, 110.142, 26.7935, 0.59 ) }
    dend_72 { pt3dadd( -33.3825, 117.723, 28.0684, 0.59 ) }
    dend_72 { pt3dadd( -38.3231, 124.333, 29.036, 0.59 ) }
    dend_72 { pt3dadd( -43.4216, 130.454, 31.3293, 0.59 ) }
    dend_72 { pt3dadd( -48.6224, 136.581, 33.363, 0.59 ) }
    dend_72 { pt3dadd( -54.0821, 142.278, 35.8551, 0.59 ) }
    dend_72 { pt3dadd( -58.3945, 149.048, 38.0206, 0.59 ) }
    dend_72 { pt3dadd( -62.811, 155.924, 39.5747, 0.59 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 21/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -0.0584638, 25.8938, 0.0890835, 0.66 ) }
    dend_71 { pt3dadd( -0.685121, 26.5051, -0.291979, 0.66 ) }
    dend_71 { pt3dadd( -1.64575, 27.121, -0.808309, 0.52 ) }
    dend_71 { pt3dadd( -2.23269, 27.4327, -1.0724, 0.52 ) }
    dend_71 { pt3dadd( -2.29092, 27.4635, -1.09447, 0.52 ) }
    dend_71 { pt3dadd( -3.36113, 28.0321, -1.46629, 0.52 ) }
    dend_71 { pt3dadd( -3.49871, 28.1088, -1.51307, 0.52 ) }
    dend_71 { pt3dadd( -5.12103, 29.1167, -2.04393, 0.88 ) }
    dend_71 { pt3dadd( -5.72691, 29.582, -2.21285, 0.96 ) }
    dend_71 { pt3dadd( -6.35312, 30.2637, -2.36955, 0.96 ) }
    dend_71 { pt3dadd( -6.394, 30.3201, -2.37847, 0.96 ) }
    dend_71 { pt3dadd( -6.92568, 31.2391, -2.49388, 0.66 ) }
    dend_71 { pt3dadd( -7.57205, 32.5044, -2.64887, 0.66 ) }
    dend_71 { pt3dadd( -8.15829, 33.8099, -2.78797, 0.66 ) }
    dend_71 { pt3dadd( -9.0206, 35.6362, -2.97072, 0.66 ) }
    dend_71 { pt3dadd( -9.05362, 35.698, -2.97785, 0.66 ) }
    dend_71 { pt3dadd( -9.8259, 36.9619, -3.121, 0.44 ) }
    dend_71 { pt3dadd( -10.3835, 37.7401, -3.19822, 0.44 ) }
    dend_71 { pt3dadd( -10.9724, 38.4093, -3.26049, 0.88 ) }
    dend_71 { pt3dadd( -11.9324, 39.3529, -3.3557, 0.88 ) }
    dend_71 { pt3dadd( -12.7754, 40.1291, -3.42543, 0.44 ) }
    dend_71 { pt3dadd( -13.3473, 40.6662, -3.46168, 0.96 ) }
    dend_71 { pt3dadd( -13.9198, 41.2054, -3.47886, 1.25 ) }
    dend_71 { pt3dadd( -14.6766, 41.9261, -3.50126, 1.25 ) }
    dend_71 { pt3dadd( -15.612, 42.8299, -3.4582, 0.52 ) }
    dend_71 { pt3dadd( -16.4631, 43.6939, -3.32971, 0.29 ) }
    dend_71 { pt3dadd( -16.617, 43.865, -3.28655, 0.29 ) }
    dend_71 { pt3dadd( -17.1507, 44.4958, -3.0978, 0.29 ) }
    dend_71 { pt3dadd( -17.5216, 44.9792, -2.93555, 0.29 ) }
    dend_71 { pt3dadd( -18.2111, 45.989, -2.56474, 0.29 ) }
    dend_71 { pt3dadd( -18.6871, 46.7994, -2.263, 0.29 ) }
    dend_71 { pt3dadd( -18.9729, 47.3791, -2.08456, 0.29 ) }
    dend_71 { pt3dadd( -19.1757, 47.8627, -1.97261, 0.29 ) }
    dend_71 { pt3dadd( -19.5092, 48.8231, -1.82012, 0.66 ) }
    dend_71 { pt3dadd( -19.7253, 49.5374, -1.7432, 0.96 ) }
    dend_71 { pt3dadd( -20.0217, 50.5782, -1.69273, 0.96 ) }
    dend_71 { pt3dadd( -20.1984, 51.2352, -1.65517, 0.96 ) }
    dend_71 { pt3dadd( -20.3771, 51.8963, -1.60943, 0.52 ) }
    dend_71 { pt3dadd( -20.5219, 52.3885, -1.56636, 0.37 ) }
    dend_71 { pt3dadd( -20.6627, 52.8063, -1.479, 0.37 ) }
    dend_71 { pt3dadd( -20.7189, 52.9451, -1.43046, 0.37 ) }
    dend_71 { pt3dadd( -21.0658, 53.6108, -1.09346, 0.37 ) }
    dend_71 { pt3dadd( -21.2136, 53.8452, -0.951724, 0.37 ) }
    dend_71 { pt3dadd( -21.5224, 54.2896, -0.673334, 0.37 ) }
    dend_71 { pt3dadd( -22.2813, 55.3338, -0.0223078, 0.37 ) }
    dend_71 { pt3dadd( -22.3939, 55.487, 0.0714748, 0.37 ) }
    dend_71 { pt3dadd( -23.002, 56.287, 0.47993, 0.37 ) }
    dend_71 { pt3dadd( -23.3782, 56.7609, 0.664254, 0.66 ) }
    dend_71 { pt3dadd( -23.8737, 57.3876, 0.825668, 0.66 ) }
    dend_71 { pt3dadd( -24.5792, 58.3127, 0.916523, 0.66 ) }
    dend_71 { pt3dadd( -24.621, 58.3691, 0.913234, 0.66 ) }
    dend_71 { pt3dadd( -25.5229, 59.6921, 0.779425, 0.29 ) }
    dend_71 { pt3dadd( -25.963, 60.3885, 0.669423, 0.29 ) }
    dend_71 { pt3dadd( -26.0743, 60.576, 0.633192, 0.29 ) }
    dend_71 { pt3dadd( -26.5244, 61.406, 0.458924, 0.88 ) }
    dend_71 { pt3dadd( -26.8396, 62.0705, 0.320424, 0.88 ) }
    dend_71 { pt3dadd( -27.0098, 62.4856, 0.276527, 0.88 ) }
    dend_71 { pt3dadd( -27.2052, 63.0613, 0.281732, 0.37 ) }
    dend_71 { pt3dadd( -27.2291, 63.1385, 0.283352, 0.37 ) }
    dend_71 { pt3dadd( -27.3873, 63.6276, 0.310246, 0.37 ) }
    dend_71 { pt3dadd( -27.4596, 63.8361, 0.333385, 0.37 ) }
    dend_71 { pt3dadd( -27.9379, 65.0194, 0.521883, 0.37 ) }
    dend_71 { pt3dadd( -27.9669, 65.083, 0.530383, 0.37 ) }
    dend_71 { pt3dadd( -28.212, 65.5779, 0.589984, 1.11 ) }
    dend_71 { pt3dadd( -28.811, 66.7093, 0.706377, 1.11 ) }
    dend_71 { pt3dadd( -29.4031, 67.7617, 0.80188, 1.11 ) }
    dend_71 { pt3dadd( -30.045, 68.8412, 0.839191, 1.11 ) }
    dend_71 { pt3dadd( -30.5432, 69.6432, 0.8247, 1.11 ) }
    dend_71 { pt3dadd( -30.7655, 69.9895, 0.804225, 0.44 ) }
    dend_71 { pt3dadd( -31.3732, 70.8099, 0.746821, 0.44 ) }
    dend_71 { pt3dadd( -31.5428, 71.0152, 0.731639, 0.44 ) }
    dend_71 { pt3dadd( -32.4377, 72.0295, 0.678343, 0.44 ) }
    dend_71 { pt3dadd( -32.4851, 72.0811, 0.678514, 0.44 ) }
    dend_71 { pt3dadd( -33.1142, 72.7668, 0.741452, 0.44 ) }
    dend_71 { pt3dadd( -34.8818, 74.7055, 1.01001, 0.44 ) }
    dend_71 { pt3dadd( -35.2767, 75.1359, 1.08906, 1.33 ) }
    dend_71 { pt3dadd( -35.8122, 75.7554, 1.2246, 1.62 ) }
    dend_71 { pt3dadd( -36.4675, 76.6016, 1.44247, 0.96 ) }
    dend_71 { pt3dadd( -36.8755, 77.1839, 1.58633, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_71 { pt3dadd( -37.4627, 78.1145, 1.80838, 0.37 ) }
    dend_71 { pt3dadd( -37.5004, 78.1838, 1.82391, 0.37 ) }
    dend_71 { pt3dadd( -38.382, 79.8823, 2.17617, 0.37 ) }
    dend_71 { pt3dadd( -39.0755, 81.2779, 2.43359, 0.37 ) }
    dend_71 { pt3dadd( -39.4593, 82.0772, 2.56457, 0.74 ) }
    dend_71 { pt3dadd( -39.6625, 82.5003, 2.62455, 0.29 ) }
    dend_71 { pt3dadd( -39.7325, 82.6501, 2.64568, 0.29 ) }
    dend_71 { pt3dadd( -40.4537, 84.2221, 2.86401, 0.29 ) }
    dend_71 { pt3dadd( -40.5136, 84.3596, 2.88203, 0.29 ) }
    dend_71 { pt3dadd( -40.8267, 85.0914, 2.96842, 1.55 ) }
    dend_71 { pt3dadd( -41.1513, 85.8964, 3.05947, 1.62 ) }
    dend_71 { pt3dadd( -41.429, 86.5878, 3.13517, 1.03 ) }
    dend_71 { pt3dadd( -41.4561, 86.6525, 3.14222, 1.03 ) }
    dend_71 { pt3dadd( -41.7019, 87.2112, 3.20243, 0.37 ) }
    dend_71 { pt3dadd( -41.7311, 87.275, 3.20901, 0.37 ) }
    dend_71 { pt3dadd( -42.119, 88.0693, 3.28666, 0.37 ) }
    dend_71 { pt3dadd( -42.5921, 88.9779, 3.37869, 1.11 ) }
    dend_71 { pt3dadd( -42.9757, 89.6962, 3.46438, 1.11 ) }
    dend_71 { pt3dadd( -43.175, 90.062, 3.51485, 0.52 ) }
    dend_71 { pt3dadd( -43.25, 90.2092, 3.53574, 0.52 ) }
    dend_71 { pt3dadd( -43.534, 90.8193, 3.61988, 0.52 ) }
    dend_71 { pt3dadd( -43.6563, 91.1054, 3.65811, 0.52 ) }
    dend_71 { pt3dadd( -43.8681, 91.6537, 3.72688, 0.52 ) }
    dend_71 { pt3dadd( -44.04, 92.1198, 3.78115, 1.11 ) }
    dend_71 { pt3dadd( -44.4638, 93.2992, 3.90845, 1.11 ) }
    dend_71 { pt3dadd( -44.6865, 93.8907, 3.96988, 0.37 ) }
    dend_71 { pt3dadd( -45.0116, 94.7136, 4.05162, 0.37 ) }
    dend_71 { pt3dadd( -45.1007, 94.9155, 4.07177, 0.37 ) }
    dend_71 { pt3dadd( -45.5037, 95.7377, 4.15206, 0.37 ) }
    dend_71 { pt3dadd( -45.6644, 96.0328, 4.18271, 0.37 ) }
    dend_71 { pt3dadd( -46.1878, 96.8772, 4.28343, 0.37 ) }
    dend_71 { pt3dadd( -46.5314, 97.3948, 4.34904, 0.88 ) }
    dend_71 { pt3dadd( -46.9153, 97.9462, 4.42163, 0.88 ) }
    dend_71 { pt3dadd( -46.956, 98.0029, 4.4293, 0.88 ) }
    dend_71 { pt3dadd( -47.091, 98.1847, 4.45594, 0.29 ) }
    dend_71 { pt3dadd( -47.18, 98.3045, 4.47413, 0.29 ) }
    dend_71 { pt3dadd( -47.8842, 99.2743, 4.62243, 0.29 ) }
    dend_71 { pt3dadd( -47.9255, 99.3309, 4.62697, 0.29 ) }
    dend_71 { pt3dadd( -48.4387, 99.9986, 4.64626, 0.81 ) }
    dend_71 { pt3dadd( -48.804, 100.448, 4.6456, 1.11 ) }
    dend_71 { pt3dadd( -49.0261, 100.688, 4.64291, 1.11 ) }
    dend_71 { pt3dadd( -49.0771, 100.736, 4.64164, 1.11 ) }
    dend_71 { pt3dadd( -49.8181, 101.31, 4.62221, 0.22 ) }
    dend_71 { pt3dadd( -50.3331, 101.672, 4.62114, 0.22 ) }
    dend_71 { pt3dadd( -50.4225, 101.728, 4.6223, 0.22 ) }
    dend_71 { pt3dadd( -51.2041, 102.233, 4.64998, 0.22 ) }
    dend_71 { pt3dadd( -51.383, 102.358, 4.65905, 0.22 ) }
    dend_71 { pt3dadd( -51.9488, 102.798, 4.70641, 0.22 ) }
    dend_71 { pt3dadd( -52.2958, 103.119, 4.75859, 0.22 ) }
    dend_71 { pt3dadd( -52.3619, 103.193, 4.76626, 0.66 ) }
    dend_71 { pt3dadd( -52.67, 103.601, 4.76496, 0.66 ) }
    dend_71 { pt3dadd( -52.975, 104.087, 4.72778, 0.15 ) }
    dend_71 { pt3dadd( -53.0884, 104.267, 4.71279, 0.15 ) }
    dend_71 { pt3dadd( -53.5365, 104.979, 4.64627, 0.15 ) }
    dend_71 { pt3dadd( -53.618, 105.106, 4.64169, 0.15 ) }
    dend_71 { pt3dadd( -54.0183, 105.707, 4.65197, 0.59 ) }
    dend_71 { pt3dadd( -54.6985, 106.634, 4.74012, 0.59 ) }
    dend_71 { pt3dadd( -55.0612, 107.104, 4.82444, 0.59 ) }
    dend_71 { pt3dadd( -55.1104, 107.166, 4.83909, 0.59 ) }
    dend_71 { pt3dadd( -55.5234, 107.674, 4.98944, 0.22 ) }
    dend_71 { pt3dadd( -55.5669, 107.726, 5.0057, 0.22 ) }
    dend_71 { pt3dadd( -56.0043, 108.234, 5.17398, 0.22 ) }
    dend_71 { pt3dadd( -56.2477, 108.506, 5.24629, 0.22 ) }
    dend_71 { pt3dadd( -56.8602, 109.188, 5.38327, 0.22 ) }
    dend_71 { pt3dadd( -57.1206, 109.487, 5.42972, 0.22 ) }
    dend_71 { pt3dadd( -57.3525, 109.752, 5.46197, 0.74 ) }
    dend_71 { pt3dadd( -57.9638, 110.453, 5.5406, 0.74 ) }
    dend_71 { pt3dadd( -58.3395, 110.887, 5.58636, 0.22 ) }
    dend_71 { pt3dadd( -58.43, 110.993, 5.59714, 0.22 ) }
    dend_71 { pt3dadd( -59.8413, 112.628, 5.77877, 0.22 ) }
    dend_71 { pt3dadd( -60.0592, 112.865, 5.79049, 0.81 ) }
    dend_71 { pt3dadd( -60.8012, 113.635, 5.79494, 0.81 ) }
    dend_71 { pt3dadd( -60.8499, 113.685, 5.79019, 0.81 ) }
    dend_71 { pt3dadd( -61.0853, 113.92, 5.74739, 0.15 ) }
    dend_71 { pt3dadd( -61.9547, 114.753, 5.52552, 0.15 ) }
    dend_71 { pt3dadd( -62.9002, 115.616, 5.18, 0.66 ) }
    dend_71 { pt3dadd( -63.1974, 115.906, 5.06901, 0.66 ) }
    dend_71 { pt3dadd( -63.9761, 116.727, 4.77105, 0.15 ) }
    dend_71 { pt3dadd( -64.2379, 117.024, 4.67873, 0.37 ) }
    dend_71 { pt3dadd( -64.4114, 117.227, 4.61017, 0.15 ) }
    dend_71 { pt3dadd( -64.4519, 117.281, 4.59144, 0.15 ) }
    dend_71 { pt3dadd( -65.0769, 118.189, 4.38169, 0.15 ) }
    dend_71 { pt3dadd( -65.2437, 118.431, 4.32592, 1.03 ) }
    dend_71 { pt3dadd( -65.5754, 118.872, 4.18389, 1.03 ) }
    dend_71 { pt3dadd( -66.1741, 119.664, 3.87821, 0.22 ) }
    dend_71 { pt3dadd( -66.2144, 119.716, 3.85504, 0.22 ) }
    dend_71 { pt3dadd( -67.0488, 120.773, 3.27832, 0.22 ) }
    dend_71 { pt3dadd( -67.0877, 120.823, 3.24925, 0.22 ) }
    dend_71 { pt3dadd( -67.7232, 121.68, 2.78499, 0.88 ) }
    dend_71 { pt3dadd( -68.0126, 122.109, 2.62078, 0.88 ) }
    dend_71 { pt3dadd( -68.0479, 122.169, 2.61719, 0.88 ) }
    dend_71 { pt3dadd( -68.3309, 122.696, 2.70936, 0.22 ) }
    dend_71 { pt3dadd( -68.9412, 123.917, 3.07218, 0.22 ) }
    dend_71 { pt3dadd( -68.9707, 123.977, 3.09376, 0.22 ) }
    dend_71 { pt3dadd( -69.4608, 124.974, 3.52046, 0.22 ) }
    dend_71 { pt3dadd( -70.1069, 126.18, 4.04544, 0.22 ) }
    dend_71 { pt3dadd( -70.6651, 127.165, 4.47537, 0.22 ) }
    dend_71 { pt3dadd( -71.0766, 127.87, 4.77834, 1.11 ) }
    dend_71 { pt3dadd( -71.1529, 127.997, 4.83134, 1.11 ) }
    dend_71 { pt3dadd( -71.371, 128.348, 4.95753, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_71 { pt3dadd( -72.0777, 129.42, 5.19433, 0.22 ) }
    dend_71 { pt3dadd( -72.296, 129.721, 5.22398, 0.66 ) }
    dend_71 { pt3dadd( -72.8149, 130.396, 5.28518, 0.66 ) }
    // Section: dend_63, id: dend_63, parent: dend_59 (entry count 3/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 17.7626, 12.0779, -20.3234, 0.81 ) }
    dend_63 { pt3dadd( 18.3635, 12.0247, -21.5001, 0.81 ) }
    dend_63 { pt3dadd( 18.3909, 12.0265, -21.5479, 0.81 ) }
    dend_63 { pt3dadd( 18.6901, 12.0625, -22.0523, 0.81 ) }
    dend_63 { pt3dadd( 18.8256, 12.0945, -22.2661, 0.81 ) }
    dend_63 { pt3dadd( 19.2758, 12.2334, -22.9507, 0.52 ) }
    dend_63 { pt3dadd( 21.0028, 12.9055, -25.4562, 0.81 ) }
    dend_63 { pt3dadd( 21.4768, 13.179, -26.0737, 0.81 ) }
    dend_63 { pt3dadd( 21.5094, 13.1999, -26.1133, 0.81 ) }
    dend_63 { pt3dadd( 22.0258, 13.5784, -26.7199, 0.81 ) }
    dend_63 { pt3dadd( 22.0889, 13.6251, -26.788, 0.81 ) }
    dend_63 { pt3dadd( 22.4589, 13.8591, -27.1191, 0.81 ) }
    dend_63 { pt3dadd( 23.1395, 14.1348, -27.4387, 0.52 ) }
    dend_63 { pt3dadd( 23.4277, 14.135, -27.8925, 0.52 ) }
    dend_63 { pt3dadd( 23.4999, 14.1332, -28.0141, 0.52 ) }
    dend_63 { pt3dadd( 23.8771, 14.0813, -28.7144, 0.81 ) }
    dend_63 { pt3dadd( 24.5109, 13.9589, -29.9854, 0.81 ) }
    dend_63 { pt3dadd( 24.5303, 13.9537, -30.0293, 0.81 ) }
    dend_63 { pt3dadd( 25.5217, 13.6655, -32.5905, 0.74 ) }
    dend_63 { pt3dadd( 25.8074, 13.6226, -33.3767, 1.84 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 23/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 17.7626, 12.0779, -20.3234, 1.4 ) }
    dend_60 { pt3dadd( 17.7995, 12.0919, -20.2878, 1.4 ) }
    dend_60 { pt3dadd( 20.3238, 13.0533, -18.259, 0.96 ) }
    dend_60 { pt3dadd( 20.5059, 13.1238, -18.1452, 0.96 ) }
    dend_60 { pt3dadd( 21.8327, 13.6325, -17.4916, 0.96 ) }
    dend_60 { pt3dadd( 21.9114, 13.6635, -17.46, 0.96 ) }
    dend_60 { pt3dadd( 23.3251, 14.2254, -16.9571, 0.96 ) }
    dend_60 { pt3dadd( 23.3829, 14.2495, -16.9443, 0.96 ) }
    dend_60 { pt3dadd( 24.528, 14.7759, -16.9017, 1.18 ) }
    dend_60 { pt3dadd( 25.4358, 15.2274, -16.8681, 0.88 ) }
    dend_60 { pt3dadd( 26.283, 15.6816, -16.8394, 0.88 ) }
    dend_60 { pt3dadd( 26.3389, 15.7126, -16.8376, 0.88 ) }
    dend_60 { pt3dadd( 26.8398, 15.9977, -16.8527, 0.88 ) }
    dend_60 { pt3dadd( 27.5409, 16.4041, -16.9012, 0.88 ) }
    dend_60 { pt3dadd( 27.5958, 16.4365, -16.9067, 0.88 ) }
    dend_60 { pt3dadd( 29.3247, 17.4507, -17.0918, 0.88 ) }
    dend_60 { pt3dadd( 29.403, 17.4953, -17.1002, 0.88 ) }
    dend_60 { pt3dadd( 31.1948, 18.4498, -17.3524, 1.18 ) }
    dend_60 { pt3dadd( 32.4673, 19.0978, -17.5621, 1.18 ) }
    dend_60 { pt3dadd( 32.783, 19.2531, -17.6195, 1.18 ) }
    dend_60 { pt3dadd( 34.1612, 19.9629, -17.8862, 1.18 ) }
    dend_60 { pt3dadd( 34.4069, 20.0953, -17.9383, 1.18 ) }
    dend_60 { pt3dadd( 36.055, 20.9282, -18.2463, 1.18 ) }
    dend_60 { pt3dadd( 36.2392, 21.0045, -18.271, 1.18 ) }
    dend_60 { pt3dadd( 36.7075, 21.151, -18.3257, 0.52 ) }
    dend_60 { pt3dadd( 37.9062, 21.406, -18.42, 0.52 ) }
    dend_60 { pt3dadd( 37.9696, 21.413, -18.4222, 0.52 ) }
    dend_60 { pt3dadd( 39.168, 21.467, -18.3962, 0.88 ) }
    dend_60 { pt3dadd( 40.4891, 21.4347, -18.276, 0.88 ) }
    dend_60 { pt3dadd( 40.7262, 21.425, -18.2593, 0.88 ) }
    dend_60 { pt3dadd( 41.6413, 21.3805, -18.2101, 1.25 ) }
    dend_60 { pt3dadd( 41.8417, 21.3763, -18.2021, 1.25 ) }
    dend_60 { pt3dadd( 42.7139, 21.4441, -18.1793, 1.25 ) }
    dend_60 { pt3dadd( 42.8397, 21.4651, -18.1778, 1.25 ) }
    dend_60 { pt3dadd( 44.261, 21.7913, -18.2327, 1.11 ) }
    dend_60 { pt3dadd( 45.6941, 22.1623, -18.33, 1.11 ) }
    dend_60 { pt3dadd( 46.8415, 22.4588, -18.4231, 0.81 ) }
    dend_60 { pt3dadd( 48.1247, 22.7765, -18.5356, 0.81 ) }
    dend_60 { pt3dadd( 48.3302, 22.8189, -18.5519, 0.81 ) }
    dend_60 { pt3dadd( 50.1603, 23.1251, -18.6712, 0.81 ) }
    dend_60 { pt3dadd( 50.2562, 23.1377, -18.6762, 0.81 ) }
    dend_60 { pt3dadd( 52.2864, 23.328, -18.7638, 0.81 ) }
    dend_60 { pt3dadd( 52.3832, 23.3329, -18.7658, 0.81 ) }
    dend_60 { pt3dadd( 54.5366, 23.3746, -18.7598, 0.81 ) }
    dend_60 { pt3dadd( 55.4042, 23.4041, -18.7839, 0.96 ) }
    dend_60 { pt3dadd( 55.6142, 23.4136, -18.7935, 0.96 ) }
    dend_60 { pt3dadd( 56.5588, 23.479, -18.8731, 0.74 ) }
    dend_60 { pt3dadd( 57.8201, 23.6037, -19.0215, 0.74 ) }
    dend_60 { pt3dadd( 57.8829, 23.6111, -19.0298, 0.74 ) }
    dend_60 { pt3dadd( 60.4995, 23.9557, -19.5083, 0.74 ) }
    dend_60 { pt3dadd( 61.3002, 24.0617, -19.6668, 1.4 ) }
    dend_60 { pt3dadd( 62.9391, 24.2751, -20.0091, 1.77 ) }
    dend_60 { pt3dadd( 63.9091, 24.4018, -20.2292, 1.77 ) }
    dend_60 { pt3dadd( 64.1732, 24.435, -20.2915, 1.77 ) }
    dend_60 { pt3dadd( 65.5744, 24.599, -20.5828, 1.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_49 (entry count 78/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -15.6803, 41.3867, 15.8004, 0.44 ) }
    dend_55 { pt3dadd( -17.3428, 41.9047, 16.6312, 0.44 ) }
    dend_55 { pt3dadd( -18.8661, 42.436, 17.3466, 0.44 ) }
    dend_55 { pt3dadd( -20.5639, 43.0664, 18.1198, 0.44 ) }
    dend_55 { pt3dadd( -20.6258, 43.09, 18.1467, 0.44 ) }
    dend_55 { pt3dadd( -22.484, 43.8084, 18.9322, 0.74 ) }
    dend_55 { pt3dadd( -23.2408, 44.0834, 19.2352, 0.74 ) }
    dend_55 { pt3dadd( -23.7214, 44.2699, 19.3906, 0.37 ) }
    dend_55 { pt3dadd( -23.7863, 44.2911, 19.4117, 0.37 ) }
    dend_55 { pt3dadd( -24.6853, 44.5285, 19.6202, 0.37 ) }
    dend_55 { pt3dadd( -24.7434, 44.5399, 19.6356, 0.37 ) }
    dend_55 { pt3dadd( -25.7727, 44.694, 19.9255, 0.37 ) }
    dend_55 { pt3dadd( -25.8612, 44.7077, 19.9542, 0.37 ) }
    dend_55 { pt3dadd( -27.1428, 44.9645, 20.46, 0.37 ) }
    dend_55 { pt3dadd( -27.2268, 44.9855, 20.4968, 0.37 ) }
    dend_55 { pt3dadd( -28.4803, 45.3949, 21.0469, 0.37 ) }
    dend_55 { pt3dadd( -29.1182, 45.6568, 21.2912, 0.37 ) }
    dend_55 { pt3dadd( -29.1874, 45.6954, 21.312, 0.37 ) }
    dend_55 { pt3dadd( -30.1869, 46.3009, 21.513, 0.37 ) }
    dend_55 { pt3dadd( -30.247, 46.3391, 21.5215, 0.37 ) }
    dend_55 { pt3dadd( -31.1843, 46.9016, 21.5998, 0.59 ) }
    dend_55 { pt3dadd( -32.1018, 47.4217, 21.6173, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_55 { pt3dadd( -33.2901, 48.0232, 21.6211, 0.81 ) }
    dend_55 { pt3dadd( -34.3155, 48.5243, 21.6114, 0.81 ) }
    dend_55 { pt3dadd( -35.2828, 48.995, 21.5837, 0.29 ) }
    dend_55 { pt3dadd( -35.7489, 49.2288, 21.5802, 0.29 ) }
    dend_55 { pt3dadd( -35.8845, 49.2999, 21.5906, 0.29 ) }
    dend_55 { pt3dadd( -36.9391, 49.8061, 21.7515, 0.29 ) }
    dend_55 { pt3dadd( -37.0926, 49.8704, 21.7816, 0.29 ) }
    dend_55 { pt3dadd( -38.0086, 50.2114, 21.9666, 0.59 ) }
    dend_55 { pt3dadd( -38.7115, 50.4277, 22.0949, 0.59 ) }
    dend_55 { pt3dadd( -40.2727, 50.8272, 22.3862, 0.15 ) }
    dend_55 { pt3dadd( -41.3708, 51.0618, 22.5756, 0.37 ) }
    dend_55 { pt3dadd( -41.7406, 51.122, 22.6347, 0.74 ) }
    dend_55 { pt3dadd( -42.4191, 51.1907, 22.76, 0.37 ) }
    dend_55 { pt3dadd( -42.9725, 51.1972, 22.8798, 0.37 ) }
    dend_55 { pt3dadd( -43.0512, 51.1955, 22.9012, 0.37 ) }
    dend_55 { pt3dadd( -43.5612, 51.2306, 23.084, 0.22 ) }
    dend_55 { pt3dadd( -43.6612, 51.311, 23.1807, 0.22 ) }
    dend_55 { pt3dadd( -44.2772, 52.0806, 23.9881, 0.22 ) }
    dend_55 { pt3dadd( -44.3244, 52.1441, 24.0525, 0.22 ) }
    dend_55 { pt3dadd( -44.8123, 52.8222, 24.6851, 0.22 ) }
    dend_55 { pt3dadd( -44.9513, 52.9666, 24.863, 0.22 ) }
    dend_55 { pt3dadd( -45.261, 53.2002, 25.2282, 0.22 ) }
    dend_55 { pt3dadd( -45.3096, 53.2275, 25.2733, 0.22 ) }
    dend_55 { pt3dadd( -46.4242, 53.7524, 26.1625, 0.74 ) }
    dend_55 { pt3dadd( -46.8751, 53.9331, 26.479, 0.74 ) }
    dend_55 { pt3dadd( -48.7964, 54.5861, 27.6868, 0.59 ) }
    dend_55 { pt3dadd( -50.1318, 55.0051, 28.4385, 0.37 ) }
    dend_55 { pt3dadd( -51.4642, 55.3367, 29.1545, 0.37 ) }
    dend_55 { pt3dadd( -51.5359, 55.3438, 29.1927, 0.37 ) }
    dend_55 { pt3dadd( -52.2158, 55.2875, 29.5986, 0.37 ) }
    dend_55 { pt3dadd( -52.3361, 55.2693, 29.6732, 0.37 ) }
    dend_55 { pt3dadd( -53.3169, 55.063, 30.2777, 0.37 ) }
    dend_55 { pt3dadd( -54.6377, 54.7976, 31.2591, 0.88 ) }
    dend_55 { pt3dadd( -56.3744, 54.5508, 32.9092, 0.88 ) }
    dend_55 { pt3dadd( -57.8226, 54.5448, 34.7885, 0.37 ) }
    dend_55 { pt3dadd( -58.4425, 54.6335, 35.8356, 0.37 ) }
    dend_55 { pt3dadd( -58.4925, 54.6453, 35.9311, 0.37 ) }
    dend_55 { pt3dadd( -59.1681, 54.961, 37.5512, 0.37 ) }
    dend_55 { pt3dadd( -59.5644, 55.4487, 38.821, 0.37 ) }
    dend_55 { pt3dadd( -59.9596, 56.663, 40.9443, 0.37 ) }
    dend_55 { pt3dadd( -59.9607, 56.7001, 41.0061, 0.37 ) }
    dend_55 { pt3dadd( -68.5467, 57.5934, 46.4328, 0.37 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 42/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -15.6803, 41.3867, 15.8004, 0.52 ) }
    dend_50 { pt3dadd( -15.8893, 42.4275, 16.5655, 0.52 ) }
    dend_50 { pt3dadd( -16.1643, 43.2345, 17.1045, 0.52 ) }
    dend_50 { pt3dadd( -16.1844, 43.2776, 17.137, 0.52 ) }
    dend_50 { pt3dadd( -16.6734, 44.0996, 17.8282, 0.52 ) }
    dend_50 { pt3dadd( -16.714, 44.1632, 17.8871, 0.52 ) }
    dend_50 { pt3dadd( -17.2, 44.9611, 18.611, 0.52 ) }
    dend_50 { pt3dadd( -17.7096, 45.7328, 19.3156, 0.74 ) }
    dend_50 { pt3dadd( -18.2884, 46.6475, 20.137, 0.74 ) }
    dend_50 { pt3dadd( -18.8274, 47.685, 21.0219, 0.59 ) }
    dend_50 { pt3dadd( -19.1905, 48.5306, 21.8157, 0.59 ) }
    dend_50 { pt3dadd( -19.4676, 49.2929, 22.6099, 0.66 ) }
    dend_50 { pt3dadd( -19.4805, 49.3367, 22.6589, 0.66 ) }
    dend_50 { pt3dadd( -19.5938, 49.8961, 23.3049, 0.66 ) }
    dend_50 { pt3dadd( -19.7723, 51.3686, 24.9755, 0.52 ) }
    dend_50 { pt3dadd( -19.8285, 53.039, 26.8497, 0.52 ) }
    dend_50 { pt3dadd( -19.7958, 53.8624, 27.7558, 0.52 ) }
    dend_50 { pt3dadd( -19.789, 53.931, 27.8307, 0.52 ) }
    dend_50 { pt3dadd( -19.7257, 54.5098, 28.4042, 0.52 ) }
    dend_50 { pt3dadd( -19.7094, 54.628, 28.5091, 0.52 ) }
    dend_50 { pt3dadd( -19.5126, 55.673, 29.1456, 0.96 ) }
    dend_50 { pt3dadd( -19.3199, 56.5646, 29.4559, 0.96 ) }
    dend_50 { pt3dadd( -19.2561, 57.116, 29.6183, 0.52 ) }
    dend_50 { pt3dadd( -19.2631, 58.1208, 29.9432, 0.52 ) }
    dend_50 { pt3dadd( -19.2758, 58.1839, 29.9642, 0.52 ) }
    dend_50 { pt3dadd( -19.5719, 59.0901, 30.2372, 0.74 ) }
    dend_50 { pt3dadd( -19.6038, 59.1578, 30.2561, 0.74 ) }
    dend_50 { pt3dadd( -20.0516, 60.0956, 30.6104, 0.74 ) }
    dend_50 { pt3dadd( -20.0734, 60.1537, 30.6369, 0.74 ) }
    dend_50 { pt3dadd( -20.3311, 61.0552, 31.0759, 0.37 ) }
    dend_50 { pt3dadd( -20.4789, 61.5835, 31.3973, 0.37 ) }
    dend_50 { pt3dadd( -20.4921, 61.6323, 31.4255, 0.37 ) }
    dend_50 { pt3dadd( -20.8431, 63.0194, 32.1802, 0.37 ) }
    dend_50 { pt3dadd( -21.0019, 63.7067, 32.5916, 0.59 ) }
    dend_50 { pt3dadd( -21.3199, 64.841, 33.2956, 0.81 ) }
    dend_50 { pt3dadd( -21.8848, 66.3537, 34.3743, 0.52 ) }
    dend_50 { pt3dadd( -22.3018, 67.2609, 35.0759, 0.52 ) }
    dend_50 { pt3dadd( -22.8386, 68.2089, 35.8479, 0.52 ) }
    dend_50 { pt3dadd( -23.5505, 69.1458, 36.6312, 0.29 ) }
    dend_50 { pt3dadd( -24.1434, 69.7355, 37.2184, 0.29 ) }
    dend_50 { pt3dadd( -25.1114, 70.4374, 38.0758, 0.29 ) }
    dend_50 { pt3dadd( -25.199, 70.4883, 38.1467, 0.29 ) }
    dend_50 { pt3dadd( -25.7169, 70.722, 38.589, 0.15 ) }
    dend_50 { pt3dadd( -26.5586, 70.9908, 39.2526, 0.15 ) }
    dend_50 { pt3dadd( -27.5739, 71.3041, 39.9139, 0.81 ) }
    dend_50 { pt3dadd( -28.0751, 71.4872, 40.2596, 0.81 ) }
    dend_50 { pt3dadd( -31.8779, 79.4263, 44.1686, 0.81 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 89/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -7.05521, 52.766, 2.37521, 0.66 ) }
    dend_48 { pt3dadd( -6.82611, 53.1105, 2.30747, 0.66 ) }
    dend_48 { pt3dadd( -6.56112, 53.6254, 2.16748, 0.66 ) }
    dend_48 { pt3dadd( -6.48433, 53.8237, 2.11327, 0.66 ) }
    dend_48 { pt3dadd( -6.05371, 55.131, 1.75972, 0.66 ) }
    dend_48 { pt3dadd( -6.03433, 55.2173, 1.74009, 0.66 ) }
    dend_48 { pt3dadd( -5.81618, 56.5467, 1.44989, 0.66 ) }
    dend_48 { pt3dadd( -5.75054, 57.2257, 1.29012, 0.66 ) }
    dend_48 { pt3dadd( -5.73309, 57.9005, 1.15404, 0.29 ) }
    dend_48 { pt3dadd( -5.73407, 57.9899, 1.13856, 0.29 ) }
    dend_48 { pt3dadd( -5.77558, 59.4171, 0.868386, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_48 { pt3dadd( -5.77958, 60.0619, 0.750164, 0.29 ) }
    dend_48 { pt3dadd( -5.77856, 60.1515, 0.736022, 0.29 ) }
    dend_48 { pt3dadd( -5.70275, 61.7367, 0.465065, 0.29 ) }
    dend_48 { pt3dadd( -5.68744, 61.9473, 0.427349, 0.29 ) }
    dend_48 { pt3dadd( -5.51954, 63.7773, 0.106687, 0.29 ) }
    dend_48 { pt3dadd( -5.50797, 63.8661, 0.0929281, 0.29 ) }
    dend_48 { pt3dadd( -5.43332, 64.5217, -0.00484977, 0.96 ) }
    dend_48 { pt3dadd( -5.3029, 65.7515, -0.144945, 0.96 ) }
    dend_48 { pt3dadd( -5.28932, 65.8541, -0.152236, 0.96 ) }
    dend_48 { pt3dadd( -5.17637, 66.6041, -0.179693, 0.81 ) }
    dend_48 { pt3dadd( -4.92508, 68.2359, -0.179181, 0.59 ) }
    dend_48 { pt3dadd( -4.61234, 70.2102, -0.1811, 0.52 ) }
    dend_48 { pt3dadd( -4.47834, 71.086, -0.223757, 0.37 ) }
    dend_48 { pt3dadd( -4.22588, 73.0571, -0.394496, 0.37 ) }
    dend_48 { pt3dadd( -4.10757, 74.112, -0.514545, 1.03 ) }
    dend_48 { pt3dadd( -4.02327, 74.9768, -0.634349, 1.03 ) }
    dend_48 { pt3dadd( -4.01701, 75.0532, -0.647134, 1.03 ) }
    dend_48 { pt3dadd( -3.87724, 76.9131, -1.07808, 0.52 ) }
    dend_48 { pt3dadd( -3.83156, 78.1249, -1.42666, 0.52 ) }
    dend_48 { pt3dadd( -3.83075, 78.3345, -1.49293, 0.52 ) }
    dend_48 { pt3dadd( -3.81259, 80.1817, -1.9882, 0.44 ) }
    dend_48 { pt3dadd( -3.81122, 80.258, -2.00282, 0.44 ) }
    dend_48 { pt3dadd( -3.78409, 82.1108, -2.08226, 1.33 ) }
    dend_48 { pt3dadd( -3.74193, 83.7192, -1.89502, 1.4 ) }
    dend_48 { pt3dadd( -3.73769, 83.8537, -1.8658, 1.4 ) }
    dend_48 { pt3dadd( -3.70702, 85.15, -1.47594, 0.22 ) }
    dend_48 { pt3dadd( -3.68115, 86.7462, -0.840455, 0.22 ) }
    dend_48 { pt3dadd( -3.67636, 88.4578, -0.0614145, 0.59 ) }
    dend_48 { pt3dadd( -3.70867, 89.2564, 0.36437, 0.59 ) }
    dend_48 { pt3dadd( -3.77231, 90.0147, 0.765303, 0.22 ) }
    dend_48 { pt3dadd( -3.78313, 90.0939, 0.807366, 0.22 ) }
    dend_48 { pt3dadd( -3.89796, 90.6707, 1.10237, 0.22 ) }
    dend_48 { pt3dadd( -4.08108, 91.371, 1.47114, 0.22 ) }
    dend_48 { pt3dadd( -4.37595, 92.2595, 1.86163, 0.22 ) }
    dend_48 { pt3dadd( -4.44046, 92.4336, 1.94079, 0.22 ) }
    dend_48 { pt3dadd( -4.94366, 93.7827, 2.55759, 0.81 ) }
    dend_48 { pt3dadd( -4.97211, 93.8614, 2.59138, 0.81 ) }
    dend_48 { pt3dadd( -5.30696, 94.7661, 2.95746, 0.81 ) }
    dend_48 { pt3dadd( -5.43468, 95.1264, 3.08071, 0.81 ) }
    dend_48 { pt3dadd( -5.7796, 96.1379, 3.38734, 0.22 ) }
    dend_48 { pt3dadd( -5.82111, 96.2553, 3.41631, 0.22 ) }
    dend_48 { pt3dadd( -6.26066, 97.4299, 3.62445, 0.22 ) }
    dend_48 { pt3dadd( -6.47539, 97.9916, 3.71015, 0.22 ) }
    dend_48 { pt3dadd( -6.84289, 98.935, 3.83154, 0.22 ) }
    dend_48 { pt3dadd( -7.21057, 99.83, 3.85346, 1.03 ) }
    dend_48 { pt3dadd( -7.55917, 100.644, 3.81284, 1.03 ) }
    dend_48 { pt3dadd( -7.96969, 101.584, 3.71313, 0.66 ) }
    dend_48 { pt3dadd( -8.53518, 102.888, 3.50423, 0.22 ) }
    dend_48 { pt3dadd( -9.03026, 104.083, 3.26403, 0.22 ) }
    dend_48 { pt3dadd( -9.8449, 106.055, 2.76798, 0.22 ) }
    dend_48 { pt3dadd( -9.88115, 106.148, 2.73989, 0.22 ) }
    dend_48 { pt3dadd( -10.1179, 106.783, 2.53559, 0.88 ) }
    dend_48 { pt3dadd( -10.3046, 107.297, 2.3828, 0.88 ) }
    dend_48 { pt3dadd( -10.6726, 108.346, 2.11785, 0.22 ) }
    dend_48 { pt3dadd( -10.6976, 108.418, 2.10455, 0.22 ) }
    dend_48 { pt3dadd( -11.4458, 110.451, 1.95318, 0.22 ) }
    dend_48 { pt3dadd( -11.5077, 110.595, 1.94427, 0.22 ) }
    dend_48 { pt3dadd( -11.9371, 111.41, 1.84496, 0.22 ) }
    dend_48 { pt3dadd( -11.9866, 111.484, 1.83117, 0.22 ) }
    dend_48 { pt3dadd( -12.486, 112.114, 1.69252, 0.96 ) }
    dend_48 { pt3dadd( -13.1725, 112.926, 1.50172, 0.96 ) }
    dend_48 { pt3dadd( -13.2385, 113.003, 1.48298, 0.96 ) }
    dend_48 { pt3dadd( -14.1362, 114.162, 1.11482, 0.37 ) }
    dend_48 { pt3dadd( -14.7259, 115.082, 0.800144, 0.29 ) }
    dend_48 { pt3dadd( -15.3469, 116.24, 0.435819, 0.15 ) }
    dend_48 { pt3dadd( -15.3822, 116.32, 0.411325, 0.15 ) }
    dend_48 { pt3dadd( -15.6937, 117.083, 0.198548, 0.15 ) }
    dend_48 { pt3dadd( -16.1556, 118.28, -0.0953295, 1.03 ) }
    dend_48 { pt3dadd( -16.5903, 119.52, -0.329835, 1.03 ) }
    dend_48 { pt3dadd( -16.7861, 120.145, -0.44303, 1.03 ) }
    dend_48 { pt3dadd( -16.9726, 120.816, -0.548894, 0.22 ) }
    dend_48 { pt3dadd( -17.3322, 122.25, -0.717783, 0.22 ) }
    dend_48 { pt3dadd( -17.3518, 122.338, -0.723914, 0.22 ) }
    dend_48 { pt3dadd( -17.5247, 123.311, -0.729456, 0.96 ) }
    dend_48 { pt3dadd( -17.6754, 124.382, -0.721779, 1.11 ) }
    dend_48 { pt3dadd( -17.7087, 125.17, -0.701462, 0.22 ) }
    dend_48 { pt3dadd( -17.6661, 126.031, -0.661894, 0.22 ) }
    dend_48 { pt3dadd( -17.5708, 126.685, -0.660137, 0.22 ) }
    dend_48 { pt3dadd( -17.5063, 127.055, -0.671239, 0.22 ) }
    dend_48 { pt3dadd( -17.4929, 127.145, -0.672205, 0.22 ) }
    dend_48 { pt3dadd( -17.2781, 129.022, -0.738077, 0.22 ) }
    dend_48 { pt3dadd( -17.2555, 129.157, -0.75617, 0.22 ) }
    dend_48 { pt3dadd( -17.0516, 130.23, -1.03302, 0.22 ) }
    dend_48 { pt3dadd( -17.0326, 130.326, -1.06366, 0.22 ) }
    dend_48 { pt3dadd( -16.5189, 132.932, -1.92776, 0.22 ) }
    dend_48 { pt3dadd( -15.9253, 135.958, -2.98875, 0.22 ) }
    dend_48 { pt3dadd( -15.3638, 138.854, -4.09486, 0.22 ) }
    dend_48 { pt3dadd( -14.9263, 141.036, -4.95752, 1.33 ) }
    dend_48 { pt3dadd( -14.7413, 141.888, -5.31449, 1.33 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 89/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -7.05521, 52.766, 2.37521, 0.74 ) }
    dend_47 { pt3dadd( -7.42715, 53.8189, 2.63608, 0.74 ) }
    dend_47 { pt3dadd( -7.70833, 54.4738, 2.78295, 0.37 ) }
    dend_47 { pt3dadd( -7.98779, 55.086, 2.91343, 0.37 ) }
    dend_47 { pt3dadd( -8.07946, 55.2813, 2.95211, 0.37 ) }
    dend_47 { pt3dadd( -8.47859, 56.1143, 3.10954, 0.22 ) }
    dend_47 { pt3dadd( -8.50837, 56.1764, 3.12062, 0.22 ) }
    dend_47 { pt3dadd( -9.02711, 57.1327, 3.24555, 0.22 ) }
    dend_47 { pt3dadd( -9.06219, 57.1923, 3.25395, 0.22 ) }
    dend_47 { pt3dadd( -9.43319, 57.7971, 3.35556, 0.22 ) }
    dend_47 { pt3dadd( -9.57259, 58.0181, 3.39774, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_47 { pt3dadd( -9.88334, 58.5403, 3.50384, 0.88 ) }
    dend_47 { pt3dadd( -10.0608, 58.8583, 3.57025, 0.44 ) }
    dend_47 { pt3dadd( -10.224, 59.2344, 3.64101, 0.29 ) }
    dend_47 { pt3dadd( -10.3562, 59.5962, 3.70049, 0.29 ) }
    dend_47 { pt3dadd( -10.3729, 59.6627, 3.71418, 0.29 ) }
    dend_47 { pt3dadd( -10.499, 60.3765, 3.87836, 0.29 ) }
    dend_47 { pt3dadd( -10.5422, 60.6864, 3.95431, 0.29 ) }
    dend_47 { pt3dadd( -10.6573, 61.7515, 4.21421, 0.29 ) }
    dend_47 { pt3dadd( -10.6673, 61.8407, 4.23531, 0.29 ) }
    dend_47 { pt3dadd( -10.7923, 62.6238, 4.4477, 0.29 ) }
    dend_47 { pt3dadd( -10.8784, 63.0238, 4.57929, 0.29 ) }
    dend_47 { pt3dadd( -11.0353, 63.5248, 4.77116, 0.29 ) }
    dend_47 { pt3dadd( -11.0923, 63.6523, 4.82361, 0.29 ) }
    dend_47 { pt3dadd( -11.3715, 64.1259, 5.03072, 0.88 ) }
    dend_47 { pt3dadd( -11.8434, 64.8142, 5.29818, 0.88 ) }
    dend_47 { pt3dadd( -11.8789, 64.8596, 5.31286, 0.88 ) }
    dend_47 { pt3dadd( -12.1779, 65.2452, 5.42795, 0.44 ) }
    dend_47 { pt3dadd( -12.5464, 65.7316, 5.55899, 0.37 ) }
    dend_47 { pt3dadd( -12.6311, 65.8592, 5.58551, 0.37 ) }
    dend_47 { pt3dadd( -13.0702, 66.6124, 5.70996, 0.37 ) }
    dend_47 { pt3dadd( -13.1905, 66.8471, 5.7383, 0.37 ) }
    dend_47 { pt3dadd( -13.4711, 67.4665, 5.81364, 0.37 ) }
    dend_47 { pt3dadd( -13.5257, 67.6047, 5.83154, 0.37 ) }
    dend_47 { pt3dadd( -13.9655, 68.7994, 5.87783, 0.37 ) }
    dend_47 { pt3dadd( -14.0556, 69.0479, 5.86742, 1.11 ) }
    dend_47 { pt3dadd( -14.0814, 69.1124, 5.85993, 1.11 ) }
    dend_47 { pt3dadd( -14.3835, 69.7551, 5.75144, 1.11 ) }
    dend_47 { pt3dadd( -14.4239, 69.8222, 5.73743, 1.11 ) }
    dend_47 { pt3dadd( -15.1229, 70.7587, 5.52591, 0.74 ) }
    dend_47 { pt3dadd( -15.4598, 71.1053, 5.43948, 0.29 ) }
    dend_47 { pt3dadd( -15.9566, 71.5622, 5.33694, 0.29 ) }
    dend_47 { pt3dadd( -16.0773, 71.6636, 5.31521, 0.29 ) }
    dend_47 { pt3dadd( -16.647, 72.0955, 5.2341, 0.74 ) }
    dend_47 { pt3dadd( -16.9036, 72.3047, 5.2149, 0.74 ) }
    dend_47 { pt3dadd( -17.1847, 72.5479, 5.22251, 0.29 ) }
    dend_47 { pt3dadd( -17.2414, 72.603, 5.21962, 0.29 ) }
    dend_47 { pt3dadd( -17.8438, 73.3362, 5.14705, 0.22 ) }
    dend_47 { pt3dadd( -17.8881, 73.4019, 5.1406, 0.22 ) }
    dend_47 { pt3dadd( -18.3347, 74.1972, 5.10196, 0.22 ) }
    dend_47 { pt3dadd( -18.3995, 74.3319, 5.10146, 0.22 ) }
    dend_47 { pt3dadd( -18.7236, 74.9692, 5.14102, 0.74 ) }
    dend_47 { pt3dadd( -19.0921, 75.6589, 5.2197, 0.74 ) }
    dend_47 { pt3dadd( -19.5546, 76.5066, 5.39229, 0.74 ) }
    dend_47 { pt3dadd( -19.849, 77.0063, 5.51884, 0.44 ) }
    dend_47 { pt3dadd( -20.122, 77.4306, 5.64912, 0.22 ) }
    dend_47 { pt3dadd( -20.9878, 78.7024, 6.08896, 0.22 ) }
    dend_47 { pt3dadd( -21.0467, 78.7835, 6.12144, 0.22 ) }
    dend_47 { pt3dadd( -21.4571, 79.2991, 6.34113, 0.81 ) }
    dend_47 { pt3dadd( -21.9223, 79.9166, 6.63333, 0.96 ) }
    dend_47 { pt3dadd( -21.9748, 79.9916, 6.66862, 0.96 ) }
    dend_47 { pt3dadd( -22.2748, 80.4838, 6.91054, 0.96 ) }
    dend_47 { pt3dadd( -22.3017, 80.5421, 6.93741, 0.96 ) }
    dend_47 { pt3dadd( -22.4709, 80.9469, 7.09993, 0.29 ) }
    dend_47 { pt3dadd( -23.0336, 82.4155, 7.60118, 0.29 ) }
    dend_47 { pt3dadd( -23.0566, 82.4775, 7.62338, 0.29 ) }
    dend_47 { pt3dadd( -23.2296, 82.8818, 7.76776, 0.88 ) }
    dend_47 { pt3dadd( -23.5466, 83.5562, 8.00398, 0.88 ) }
    dend_47 { pt3dadd( -23.9367, 84.2814, 8.24826, 0.88 ) }
    dend_47 { pt3dadd( -24.2112, 84.7368, 8.39608, 0.29 ) }
    dend_47 { pt3dadd( -24.5874, 85.2817, 8.56241, 0.15 ) }
    dend_47 { pt3dadd( -25.3822, 86.3681, 8.90789, 0.15 ) }
    dend_47 { pt3dadd( -25.7392, 86.8236, 9.05823, 0.44 ) }
    dend_47 { pt3dadd( -26.2186, 87.4084, 9.25078, 0.44 ) }
    dend_47 { pt3dadd( -26.2618, 87.46, 9.2674, 0.44 ) }
    dend_47 { pt3dadd( -26.4715, 87.7036, 9.34063, 0.81 ) }
    dend_47 { pt3dadd( -27.3986, 88.7389, 9.68112, 0.81 ) }
    dend_47 { pt3dadd( -27.8798, 89.2472, 9.87822, 0.22 ) }
    dend_47 { pt3dadd( -28.4067, 89.7702, 10.1023, 0.22 ) }
    dend_47 { pt3dadd( -28.5563, 89.9138, 10.1686, 0.22 ) }
    dend_47 { pt3dadd( -29.3678, 90.6707, 10.5294, 0.22 ) }
    dend_47 { pt3dadd( -30.2299, 91.4445, 10.9195, 0.22 ) }
    dend_47 { pt3dadd( -30.2784, 91.4877, 10.9428, 0.22 ) }
    dend_47 { pt3dadd( -30.807, 91.983, 11.2032, 0.22 ) }
    dend_47 { pt3dadd( -30.948, 92.1357, 11.2689, 0.74 ) }
    dend_47 { pt3dadd( -31.3329, 92.6764, 11.4283, 0.74 ) }
    dend_47 { pt3dadd( -31.452, 92.9043, 11.4648, 0.74 ) }
    dend_47 { pt3dadd( -31.6412, 93.3239, 11.5188, 0.74 ) }
    dend_47 { pt3dadd( -31.7607, 93.5837, 11.5607, 0.74 ) }
    dend_47 { pt3dadd( -32.1741, 94.3919, 11.7157, 0.22 ) }
    dend_47 { pt3dadd( -32.4477, 94.8949, 11.7898, 0.22 ) }
    dend_47 { pt3dadd( -32.9569, 95.7942, 11.9188, 0.22 ) }
    dend_47 { pt3dadd( -33.3579, 96.512, 12.0162, 0.88 ) }
    dend_47 { pt3dadd( -33.9352, 97.5502, 12.1752, 1.25 ) }
    dend_47 { pt3dadd( -34.4933, 98.5432, 12.3409, 1.25 ) }
    dend_47 { pt3dadd( -35.2665, 99.87, 12.5817, 1.25 ) }
    dend_47 { pt3dadd( -35.8071, 100.762, 12.7469, 0.59 ) }
    dend_47 { pt3dadd( -36.3482, 101.622, 12.8706, 0.59 ) }
    dend_47 { pt3dadd( -36.9387, 102.487, 12.9571, 0.15 ) }
    dend_47 { pt3dadd( -37.4886, 103.237, 13.0238, 0.15 ) }
    dend_47 { pt3dadd( -37.7584, 103.578, 13.0524, 0.37 ) }
    dend_47 { pt3dadd( -38.0555, 103.895, 13.0851, 0.37 ) }
    dend_47 { pt3dadd( -38.8974, 104.682, 13.107, 0.22 ) }
    dend_47 { pt3dadd( -39.688, 105.332, 12.9824, 0.22 ) }
    dend_47 { pt3dadd( -39.7466, 105.381, 12.9615, 0.22 ) }
    dend_47 { pt3dadd( -39.9469, 105.559, 12.8624, 0.74 ) }
    dend_47 { pt3dadd( -40.4881, 106.093, 12.564, 0.74 ) }
    dend_47 { pt3dadd( -40.5327, 106.142, 12.5433, 0.74 ) }
    dend_47 { pt3dadd( -41.5504, 107.243, 12.0765, 0.15 ) }
    dend_47 { pt3dadd( -41.9663, 107.679, 11.8888, 0.15 ) }
    dend_47 { pt3dadd( -42.0764, 107.793, 11.8492, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_47 { pt3dadd( -42.5454, 108.271, 11.6893, 0.15 ) }
    dend_47 { pt3dadd( -43.6384, 109.38, 11.3508, 0.15 ) }
    dend_47 { pt3dadd( -44.5257, 110.279, 11.1401, 0.88 ) }
    dend_47 { pt3dadd( -45.1327, 110.897, 11.0733, 0.88 ) }
    dend_47 { pt3dadd( -46.0385, 111.813, 10.9471, 0.66 ) }
    dend_47 { pt3dadd( -51.3349, 120.206, 11.5627, 0.66 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 6/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 24.4388, -28.9627, 2.81117, 1.03 ) }
    dend_34 { pt3dadd( 25.3234, -29.7733, 2.21781, 1.03 ) }
    dend_34 { pt3dadd( 25.4074, -29.8533, 2.18117, 1.03 ) }
    dend_34 { pt3dadd( 26.16, -30.5871, 1.89245, 1.03 ) }
    dend_34 { pt3dadd( 26.4649, -30.8779, 1.81115, 1.03 ) }
    dend_34 { pt3dadd( 28.1554, -32.4693, 1.48676, 1.03 ) }
    dend_34 { pt3dadd( 28.2106, -32.5196, 1.4791, 1.03 ) }
    dend_34 { pt3dadd( 30.326, -34.4267, 1.36963, 0.88 ) }
    dend_34 { pt3dadd( 30.4471, -34.5325, 1.37492, 0.88 ) }
    dend_34 { pt3dadd( 32.2985, -36.12, 1.68356, 0.88 ) }
    dend_34 { pt3dadd( 32.9777, -36.6937, 1.89947, 0.88 ) }
    dend_34 { pt3dadd( 33.5752, -37.1881, 2.17884, 1.25 ) }
    dend_34 { pt3dadd( 34.3377, -37.8028, 2.60679, 1.25 ) }
    dend_34 { pt3dadd( 35.7958, -38.9223, 3.5766, 0.74 ) }
    dend_34 { pt3dadd( 37.2193, -39.9804, 4.52233, 0.74 ) }
    dend_34 { pt3dadd( 38.4097, -40.8333, 5.31073, 0.74 ) }
    dend_34 { pt3dadd( 38.4566, -40.8663, 5.33895, 0.74 ) }
    dend_34 { pt3dadd( 39.132, -41.3351, 5.71228, 1.47 ) }
    dend_34 { pt3dadd( 40.0926, -41.9508, 6.17699, 1.47 ) }
    dend_34 { pt3dadd( 42.2573, -43.1827, 6.87193, 0.66 ) }
    dend_34 { pt3dadd( 43.2676, -43.7118, 7.07422, 0.66 ) }
    dend_34 { pt3dadd( 44.4963, -44.3393, 7.22606, 1.33 ) }
    dend_34 { pt3dadd( 44.5621, -44.3741, 7.23155, 1.33 ) }
    dend_34 { pt3dadd( 45.5912, -44.9634, 7.28728, 1.33 ) }
    dend_34 { pt3dadd( 47.4363, -46.0197, 7.35567, 1.18 ) }
    dend_34 { pt3dadd( 48.8846, -46.8558, 7.37465, 1.18 ) }
    dend_34 { pt3dadd( 48.9755, -46.9098, 7.37461, 1.18 ) }
    dend_34 { pt3dadd( 50.5072, -47.8533, 7.36526, 0.88 ) }
    dend_34 { pt3dadd( 53.0194, -49.5352, 7.35455, 0.88 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 35/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 24.4388, -28.9627, 2.81117, 0.74 ) }
    dend_31 { pt3dadd( 24.456, -28.9755, 2.84711, 0.74 ) }
    dend_31 { pt3dadd( 24.6598, -29.1498, 3.46775, 0.74 ) }
    dend_31 { pt3dadd( 24.6718, -29.1609, 3.50624, 0.74 ) }
    dend_31 { pt3dadd( 25.2045, -29.6204, 4.97189, 0.74 ) }
    dend_31 { pt3dadd( 26.0437, -30.2449, 6.99668, 0.74 ) }
    dend_31 { pt3dadd( 26.0601, -30.2561, 7.03352, 0.74 ) }
    dend_31 { pt3dadd( 26.9955, -30.8015, 8.92866, 1.4 ) }
    dend_31 { pt3dadd( 27.2491, -30.9346, 9.41071, 0.74 ) }
    dend_31 { pt3dadd( 27.8122, -31.1598, 10.3155, 0.74 ) }
    dend_31 { pt3dadd( 28.5738, -31.3451, 11.2665, 0.74 ) }
    dend_31 { pt3dadd( 28.6176, -31.352, 11.3056, 0.74 ) }
    dend_31 { pt3dadd( 29.5596, -31.5699, 12.0454, 0.74 ) }
    dend_31 { pt3dadd( 29.5892, -31.5785, 12.0637, 0.74 ) }
    dend_31 { pt3dadd( 30.0528, -31.7287, 12.3901, 0.74 ) }
    dend_31 { pt3dadd( 30.1095, -31.7467, 12.4301, 0.74 ) }
    dend_31 { pt3dadd( 31.115, -32.0308, 13.0625, 0.74 ) }
    dend_31 { pt3dadd( 32.1443, -32.3006, 13.6991, 0.74 ) }
    dend_31 { pt3dadd( 32.6723, -32.4344, 14.0199, 0.74 ) }
    dend_31 { pt3dadd( 33.8982, -32.729, 14.7061, 0.74 ) }
    dend_31 { pt3dadd( 35.0271, -33.0109, 15.2826, 0.74 ) }
    dend_31 { pt3dadd( 36.0094, -33.2473, 15.7364, 1.25 ) }
    dend_31 { pt3dadd( 36.8087, -33.4465, 16.0946, 0.52 ) }
    dend_31 { pt3dadd( 37.1663, -33.5443, 16.2569, 0.52 ) }
    dend_31 { pt3dadd( 37.9539, -33.7965, 16.6272, 0.66 ) }
    dend_31 { pt3dadd( 39.0244, -34.1979, 17.1499, 0.66 ) }
    dend_31 { pt3dadd( 39.0635, -34.2148, 17.1718, 0.66 ) }
    dend_31 { pt3dadd( 40.3474, -34.7348, 17.9279, 0.66 ) }
    dend_31 { pt3dadd( 40.6851, -34.8499, 18.1104, 0.96 ) }
    dend_31 { pt3dadd( 41.1776, -35.0047, 18.3576, 0.66 ) }
    dend_31 { pt3dadd( 41.9348, -35.1997, 18.7051, 0.52 ) }
    dend_31 { pt3dadd( 41.9728, -35.2102, 18.7192, 0.52 ) }
    dend_31 { pt3dadd( 42.7693, -35.4903, 18.967, 0.52 ) }
    dend_31 { pt3dadd( 43.4654, -35.8025, 19.1645, 0.52 ) }
    dend_31 { pt3dadd( 44.053, -36.1267, 19.4034, 0.52 ) }
    dend_31 { pt3dadd( 44.0807, -36.1447, 19.4179, 0.52 ) }
    dend_31 { pt3dadd( 44.7672, -36.594, 19.7962, 0.52 ) }
    dend_31 { pt3dadd( 45.3614, -36.967, 20.1469, 0.52 ) }
    dend_31 { pt3dadd( 46.0542, -37.3859, 20.5657, 1.25 ) }
    dend_31 { pt3dadd( 46.686, -37.6902, 21.0264, 0.52 ) }
    dend_31 { pt3dadd( 47.4278, -37.9852, 21.6009, 0.52 ) }
    dend_31 { pt3dadd( 48.5353, -38.3657, 22.4745, 0.52 ) }
    dend_31 { pt3dadd( 48.6103, -38.3833, 22.5327, 0.52 ) }
    dend_31 { pt3dadd( 49.122, -38.4646, 22.9145, 0.52 ) }
    dend_31 { pt3dadd( 50.8703, -38.5302, 24.1334, 0.37 ) }
    dend_31 { pt3dadd( 51.2044, -38.5086, 24.3644, 0.37 ) }
    dend_31 { pt3dadd( 51.2761, -38.495, 24.4164, 0.37 ) }
    dend_31 { pt3dadd( 51.8675, -38.3303, 24.876, 0.37 ) }
    dend_31 { pt3dadd( 52.0349, -38.2867, 25.0157, 0.37 ) }
    dend_31 { pt3dadd( 52.8398, -38.0817, 25.7153, 0.37 ) }
    dend_31 { pt3dadd( 52.873, -38.0747, 25.7397, 0.37 ) }
    dend_31 { pt3dadd( 53.5575, -37.9158, 26.3009, 0.37 ) }
    dend_31 { pt3dadd( 53.5884, -37.9086, 26.3282, 0.37 ) }
    dend_31 { pt3dadd( 54.415, -37.7326, 27.1493, 0.29 ) }
    dend_31 { pt3dadd( 54.4603, -37.7226, 27.1926, 0.29 ) }
    dend_31 { pt3dadd( 54.8585, -37.6233, 27.5602, 0.29 ) }
    dend_31 { pt3dadd( 54.8924, -37.6145, 27.5831, 0.29 ) }
    dend_31 { pt3dadd( 55.267, -37.5006, 27.7739, 0.29 ) }
    dend_31 { pt3dadd( 55.35, -37.4761, 27.8095, 0.29 ) }
    dend_31 { pt3dadd( 56.036, -37.2842, 28.0545, 0.29 ) }
    dend_31 { pt3dadd( 56.1095, -37.2617, 28.0875, 0.29 ) }
    dend_31 { pt3dadd( 56.8269, -37.0262, 28.452, 0.29 ) }
    dend_31 { pt3dadd( 57.6859, -36.7012, 28.918, 0.29 ) }
    dend_31 { pt3dadd( 57.7201, -36.687, 28.9377, 0.29 ) }
    dend_31 { pt3dadd( 58.5719, -36.3078, 29.4544, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_31 { pt3dadd( 59.2969, -35.9415, 29.9334, 0.59 ) }
    dend_31 { pt3dadd( 59.6976, -35.7203, 30.2108, 0.74 ) }
    dend_31 { pt3dadd( 60.0954, -35.4576, 30.5135, 0.74 ) }
    dend_31 { pt3dadd( 60.1247, -35.4366, 30.5351, 0.74 ) }
    dend_31 { pt3dadd( 64.0724, -36.1807, 34.9528, 0.74 ) }
    dend_31 { pt3dadd( 67.4917, -36.6835, 39.8211, 0.74 ) }
    dend_31 { pt3dadd( 70.9504, -38.1968, 44.4535, 0.74 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 7/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 26.0011, -50.0622, 40.7319, 0.52 ) }
    dend_27 { pt3dadd( 26.4734, -50.5743, 41.0117, 0.52 ) }
    dend_27 { pt3dadd( 26.6721, -50.8325, 41.1331, 0.66 ) }
    dend_27 { pt3dadd( 26.9559, -51.2872, 41.3154, 0.52 ) }
    dend_27 { pt3dadd( 27.2342, -51.8083, 41.505, 0.29 ) }
    dend_27 { pt3dadd( 27.5304, -52.4932, 41.7104, 0.44 ) }
    dend_27 { pt3dadd( 27.5435, -52.528, 41.7196, 0.44 ) }
    dend_27 { pt3dadd( 27.6565, -52.9439, 41.7649, 0.44 ) }
    dend_27 { pt3dadd( 27.7074, -53.3641, 41.7848, 0.74 ) }
    dend_27 { pt3dadd( 27.7095, -53.4967, 41.7851, 0.74 ) }
    dend_27 { pt3dadd( 27.7003, -53.9271, 41.7632, 0.74 ) }
    dend_27 { pt3dadd( 27.7002, -53.9652, 41.7575, 0.74 ) }
    dend_27 { pt3dadd( 27.7623, -54.4962, 41.722, 0.74 ) }
    dend_27 { pt3dadd( 27.8585, -54.9188, 41.8274, 0.44 ) }
    dend_27 { pt3dadd( 27.87, -54.9522, 41.8421, 0.44 ) }
    dend_27 { pt3dadd( 28.0653, -55.464, 42.0989, 0.37 ) }
    dend_27 { pt3dadd( 28.0869, -55.515, 42.129, 0.37 ) }
    dend_27 { pt3dadd( 28.507, -56.4362, 42.748, 0.37 ) }
    dend_27 { pt3dadd( 29.1376, -57.6716, 43.7499, 0.44 ) }
    dend_27 { pt3dadd( 29.34, -58.0407, 44.0932, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 27/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 26.0011, -50.0622, 40.7319, 0.66 ) }
    dend_26 { pt3dadd( 26.7877, -50.4463, 40.8403, 0.66 ) }
    dend_26 { pt3dadd( 27.2351, -50.6303, 40.9654, 0.29 ) }
    dend_26 { pt3dadd( 27.8506, -50.8834, 41.1375, 0.29 ) }
    dend_26 { pt3dadd( 27.9096, -50.9077, 41.154, 0.29 ) }
    dend_26 { pt3dadd( 28.6886, -51.228, 41.3719, 0.29 ) }
    dend_26 { pt3dadd( 28.795, -51.2718, 41.4016, 0.29 ) }
    dend_26 { pt3dadd( 29.671, -51.7074, 41.5044, 0.74 ) }
    dend_26 { pt3dadd( 37.2623, -54.1285, 43.5767, 0.74 ) }
    dend_26 { pt3dadd( 44.5714, -57.9167, 44.1605, 0.74 ) }
    dend_26 { pt3dadd( 51.5071, -62.0647, 45.8744, 0.74 ) }
    dend_26 { pt3dadd( 58.0492, -67.1352, 46.1946, 0.74 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 39/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -49.3535, -45.1559, -23.043, 0.29 ) }
    dend_23 { pt3dadd( -52.2001, -46.6517, -25.4562, 0.29 ) }
    dend_23 { pt3dadd( -53.8796, -47.6094, -26.8944, 0.29 ) }
    dend_23 { pt3dadd( -55.5173, -48.5703, -28.2542, 0.29 ) }
    dend_23 { pt3dadd( -57.9889, -50.0331, -30.2779, 0.88 ) }
    dend_23 { pt3dadd( -58.9636, -50.658, -31.1352, 1.18 ) }
    dend_23 { pt3dadd( -60.0283, -51.3694, -32.1112, 0.59 ) }
    dend_23 { pt3dadd( -61.4294, -52.4816, -33.4639, 0.52 ) }
    dend_23 { pt3dadd( -61.7798, -52.8237, -33.9102, 0.88 ) }
    dend_23 { pt3dadd( -61.8214, -52.8694, -33.971, 0.88 ) }
    dend_23 { pt3dadd( -62.9884, -54.1197, -35.5731, 0.37 ) }
    dend_23 { pt3dadd( -63.0286, -54.1649, -35.6351, 0.37 ) }
    dend_23 { pt3dadd( -64.817, -56.2087, -38.4376, 0.37 ) }
    dend_23 { pt3dadd( -65.5031, -56.9494, -39.3086, 1.25 ) }
    dend_23 { pt3dadd( -65.5452, -56.9915, -39.3532, 1.25 ) }
    dend_23 { pt3dadd( -66.4492, -57.7996, -40.1008, 1.25 ) }
    dend_23 { pt3dadd( -66.5199, -57.854, -40.1442, 1.25 ) }
    dend_23 { pt3dadd( -67.2963, -58.4465, -40.5123, 0.29 ) }
    dend_23 { pt3dadd( -69.1034, -59.7481, -41.0131, 0.15 ) }
    dend_23 { pt3dadd( -69.6595, -60.1799, -41.1888, 0.59 ) }
    dend_23 { pt3dadd( -70.0813, -60.5233, -41.3472, 0.59 ) }
    dend_23 { pt3dadd( -70.9729, -61.2743, -41.7326, 0.15 ) }
    dend_23 { pt3dadd( -72.2201, -62.2703, -42.294, 0.15 ) }
    dend_23 { pt3dadd( -72.2824, -62.3186, -42.3305, 0.15 ) }
    dend_23 { pt3dadd( -73.439, -63.1692, -43.0301, 0.88 ) }
    dend_23 { pt3dadd( -73.5016, -63.2148, -43.0693, 0.88 ) }
    dend_23 { pt3dadd( -74.325, -63.813, -43.5893, 0.88 ) }
    dend_23 { pt3dadd( -75.467, -64.6517, -44.3942, 0.22 ) }
    dend_23 { pt3dadd( -77.6001, -66.2711, -45.9596, 0.22 ) }
    dend_23 { pt3dadd( -78.8475, -67.4715, -47.0034, 0.22 ) }
    dend_23 { pt3dadd( -80.7534, -70.0005, -49.0802, 0.22 ) }
    dend_23 { pt3dadd( -80.789, -70.0621, -49.1303, 0.22 ) }
    dend_23 { pt3dadd( -81.5557, -72.7164, -51.1952, 0.22 ) }
    dend_23 { pt3dadd( -81.7004, -74.2736, -52.1481, 0.22 ) }
    dend_23 { pt3dadd( -81.3776, -78.1099, -53.8098, 0.22 ) }
    dend_23 { pt3dadd( -80.4696, -81.5369, -54.618, 0.22 ) }
    dend_23 { pt3dadd( -80.4414, -81.6067, -54.6209, 0.22 ) }
    dend_23 { pt3dadd( -78.3571, -86.1421, -53.8007, 0.22 ) }
    dend_23 { pt3dadd( -74.9444, -92.5331, -51.0538, 0.22 ) }
    dend_23 { pt3dadd( -74.9163, -92.5923, -50.9959, 0.22 ) }
    dend_23 { pt3dadd( -74.1775, -94.2787, -48.6581, 0.22 ) }
    dend_23 { pt3dadd( -74.1592, -94.3277, -48.5735, 0.22 ) }
    dend_23 { pt3dadd( -73.7408, -95.8104, -45.5757, 0.22 ) }
    dend_23 { pt3dadd( -73.7408, -95.8386, -45.4937, 0.22 ) }
    dend_23 { pt3dadd( -74.7521, -98.4578, -37.9258, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 84/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -49.3535, -45.1559, -23.043, 1.18 ) }
    dend_22 { pt3dadd( -52.0187, -47.7315, -22.4915, 1.18 ) }
    dend_22 { pt3dadd( -54.0206, -49.5549, -22.6371, 1.18 ) }
    dend_22 { pt3dadd( -55.3436, -50.7346, -22.9146, 0.52 ) }
    dend_22 { pt3dadd( -56.8928, -52.1053, -23.3538, 0.52 ) }
    dend_22 { pt3dadd( -56.9549, -52.1603, -23.3737, 0.52 ) }
    dend_22 { pt3dadd( -58.1563, -53.2404, -23.9281, 0.52 ) }
    dend_22 { pt3dadd( -59.6463, -54.5573, -24.65, 0.52 ) }
    dend_22 { pt3dadd( -59.7536, -54.6528, -24.7408, 0.52 ) }
    dend_22 { pt3dadd( -60.5587, -55.3578, -25.7179, 0.37 ) }
    dend_22 { pt3dadd( -60.6012, -55.4, -25.7779, 0.37 ) }
    dend_22 { pt3dadd( -61.8162, -56.6539, -27.3473, 1.11 ) }
    dend_22 { pt3dadd( -62.4153, -57.3128, -28.0586, 1.11 ) }
    dend_22 { pt3dadd( -62.4696, -57.3715, -28.114, 1.11 ) }
    dend_22 { pt3dadd( -63.9196, -58.898, -29.5391, 0.22 ) }
    dend_22 { pt3dadd( -64.8676, -59.851, -30.4051, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_22 { pt3dadd( -65.6457, -60.6548, -31.0298, 0.29 ) }
    dend_22 { pt3dadd( -65.7273, -60.7407, -31.0822, 0.29 ) }
    dend_22 { pt3dadd( -66.1561, -61.1884, -31.4232, 0.81 ) }
    dend_22 { pt3dadd( -66.2125, -61.2471, -31.4764, 0.81 ) }
    dend_22 { pt3dadd( -66.8103, -61.8797, -32.0464, 0.81 ) }
    dend_22 { pt3dadd( -67.9382, -63.1176, -33.2393, 0.37 ) }
    dend_22 { pt3dadd( -67.983, -63.1698, -33.2895, 0.37 ) }
    dend_22 { pt3dadd( -69.8577, -65.4763, -35.3325, 0.15 ) }
    dend_22 { pt3dadd( -70.5979, -66.5731, -36.152, 0.96 ) }
    dend_22 { pt3dadd( -71.1853, -67.572, -36.7898, 1.4 ) }
    dend_22 { pt3dadd( -71.6704, -68.7045, -37.3607, 0.52 ) }
    dend_22 { pt3dadd( -71.6847, -68.7745, -37.3795, 0.52 ) }
    dend_22 { pt3dadd( -71.7581, -70.1521, -37.5688, 0.29 ) }
    dend_22 { pt3dadd( -71.4852, -72.5088, -37.4773, 0.29 ) }
    dend_22 { pt3dadd( -71.4679, -72.6054, -37.4672, 0.29 ) }
    dend_22 { pt3dadd( -71.0551, -74.515, -37.1802, 0.29 ) }
    dend_22 { pt3dadd( -70.4626, -77.5432, -36.6158, 0.29 ) }
    dend_22 { pt3dadd( -70.4336, -77.7223, -36.5793, 0.29 ) }
    dend_22 { pt3dadd( -70.1956, -80.1328, -35.9858, 0.29 ) }
    dend_22 { pt3dadd( -70.1838, -80.3508, -35.9238, 0.29 ) }
    dend_22 { pt3dadd( -70.1718, -81.7598, -35.4703, 0.15 ) }
    dend_22 { pt3dadd( -70.3613, -83.7393, -34.6516, 0.15 ) }
    dend_22 { pt3dadd( -70.3802, -83.8151, -34.6152, 0.15 ) }
    dend_22 { pt3dadd( -70.8697, -85.3388, -33.9157, 0.88 ) }
    // Section: dend_16, id: dend_16, parent: dend_1 (entry count 24/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -6.45102, -25.2525, -1.96452, 0.88 ) }
    dend_16 { pt3dadd( -8.24022, -26.3685, -6.19268, 0.88 ) }
    dend_16 { pt3dadd( -8.84662, -26.769, -7.50253, 0.88 ) }
    dend_16 { pt3dadd( -9.51979, -27.2136, -8.95661, 0.88 ) }
    dend_16 { pt3dadd( -9.54714, -27.2317, -9.01568, 0.88 ) }
    dend_16 { pt3dadd( -10.0122, -27.5388, -10.0202, 0.88 ) }
    dend_16 { pt3dadd( -11.2022, -28.3248, -12.5908, 1.4 ) }
    dend_16 { pt3dadd( -11.502, -28.5691, -13.0291, 1.4 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 32/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -6.45102, -25.2525, -1.96452, 0.81 ) }
    dend_3 { pt3dadd( -7.52463, -27.5862, -0.942912, 0.81 ) }
    dend_3 { pt3dadd( -8.29622, -29.2633, -0.208695, 0.81 ) }
    dend_3 { pt3dadd( -8.87154, -30.5138, 0.338761, 0.81 ) }
    dend_3 { pt3dadd( -9.38055, -31.6202, 0.823123, 0.81 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 37/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -6.45102, -25.2525, -1.96452, 2.5 ) }
    dend_2 { pt3dadd( -6.41328, -25.8456, -1.77457, 2.5 ) }
    dend_2 { pt3dadd( -6.30933, -27.383, -1.38362, 1.03 ) }
    dend_2 { pt3dadd( -6.17313, -28.6312, -1.1653, 0.59 ) }
    dend_2 { pt3dadd( -5.99405, -29.6506, -1.04247, 0.59 ) }
    dend_2 { pt3dadd( -5.97603, -29.7108, -1.04182, 0.59 ) }
    dend_2 { pt3dadd( -5.73841, -30.3871, -1.06699, 0.59 ) }
    dend_2 { pt3dadd( -5.20306, -31.5272, -1.23556, 0.59 ) }
    dend_2 { pt3dadd( -4.23881, -33.1436, -1.64062, 1.03 ) }
    dend_2 { pt3dadd( -3.34214, -34.4628, -2.03898, 0.81 ) }
    dend_2 { pt3dadd( -1.63134, -36.763, -2.68581, 0.81 ) }
    dend_2 { pt3dadd( -1.59924, -36.8043, -2.69644, 0.81 ) }
    dend_2 { pt3dadd( 0.196141, -39.0286, -3.23455, 0.81 ) }
    dend_2 { pt3dadd( 2.04346, -41.3874, -3.72706, 0.81 ) }
    dend_2 { pt3dadd( 2.07821, -41.4388, -3.7347, 0.81 ) }
    dend_2 { pt3dadd( 2.87596, -42.9902, -3.88941, 0.52 ) }
    dend_2 { pt3dadd( 3.2878, -44.0892, -3.93799, 0.52 ) }
    dend_2 { pt3dadd( 3.39828, -44.4891, -3.9388, 0.74 ) }
    dend_2 { pt3dadd( 3.76219, -46.7589, -3.83812, 1.11 ) }
    dend_2 { pt3dadd( 4.01783, -49.245, -3.71339, 1.11 ) }
    dend_2 { pt3dadd( 4.18567, -50.9281, -3.65761, 0.81 ) }
    dend_2 { pt3dadd( 4.20037, -51.0621, -3.65518, 0.81 ) }
    dend_2 { pt3dadd( 4.519, -53.079, -3.53219, 0.59 ) }
    dend_2 { pt3dadd( 4.53133, -53.1312, -3.52704, 0.59 ) }
    dend_2 { pt3dadd( 4.99641, -54.6028, -3.29128, 0.59 ) }
    dend_2 { pt3dadd( 5.01528, -54.652, -3.28057, 0.59 ) }
    dend_2 { pt3dadd( 5.55945, -55.9983, -2.95318, 0.59 ) }
    dend_2 { pt3dadd( 6.23331, -57.7113, -2.57388, 0.44 ) }
    dend_2 { pt3dadd( 6.68543, -58.9036, -2.3695, 0.44 ) }
    dend_2 { pt3dadd( 6.83726, -59.3738, -2.30239, 1.03 ) }
    dend_2 { pt3dadd( 6.85345, -59.4341, -2.29533, 1.03 ) }
    dend_2 { pt3dadd( 7.08206, -60.3927, -2.23154, 1.03 ) }
    dend_2 { pt3dadd( 7.0966, -60.463, -2.2356, 1.03 ) }
    dend_2 { pt3dadd( 7.31296, -61.2533, -2.37372, 0.52 ) }
    dend_2 { pt3dadd( 7.7303, -62.2703, -2.58381, 0.52 ) }
    dend_2 { pt3dadd( 7.82407, -62.4503, -2.62132, 0.52 ) }
    dend_2 { pt3dadd( 8.36568, -63.3612, -2.80336, 0.74 ) }
    dend_2 { pt3dadd( 8.94839, -64.3057, -2.96799, 0.88 ) }
    dend_2 { pt3dadd( 9.49837, -65.2163, -3.06518, 0.66 ) }
    dend_2 { pt3dadd( 9.95555, -66.0193, -3.09561, 0.44 ) }
    dend_2 { pt3dadd( 10.4348, -67.0042, -3.08445, 0.44 ) }
    dend_2 { pt3dadd( 10.4568, -67.0629, -3.0818, 0.44 ) }
    dend_2 { pt3dadd( 10.8974, -68.5667, -2.96462, 0.44 ) }
    dend_2 { pt3dadd( 11.0897, -69.4092, -2.88582, 0.88 ) }
    dend_2 { pt3dadd( 11.2687, -70.3795, -2.81115, 1.18 ) }
    dend_2 { pt3dadd( 11.5741, -71.9852, -2.67993, 0.88 ) }
    dend_2 { pt3dadd( 11.8059, -73.0691, -2.57523, 1.18 ) }
    dend_2 { pt3dadd( 11.8223, -73.1295, -2.5694, 1.18 ) }
    dend_2 { pt3dadd( 12.41, -74.9073, -2.39914, 0.66 ) }
    dend_2 { pt3dadd( 12.4368, -74.9735, -2.39356, 0.66 ) }
    dend_2 { pt3dadd( 13.3406, -76.6584, -2.22764, 0.66 ) }
    dend_2 { pt3dadd( 13.3752, -76.71, -2.22158, 0.66 ) }
    dend_2 { pt3dadd( 14.3558, -77.9458, -2.08036, 0.66 ) }
    dend_2 { pt3dadd( 14.3951, -77.9939, -2.07601, 0.66 ) }
    dend_2 { pt3dadd( 14.9794, -78.6951, -2.05045, 0.29 ) }
    dend_2 { pt3dadd( 15.5358, -79.4678, -2.11073, 0.29 ) }
    dend_2 { pt3dadd( 15.5691, -79.5197, -2.12041, 0.29 ) }
    dend_2 { pt3dadd( 16.0755, -80.3977, -2.30668, 0.81 ) }
    dend_2 { pt3dadd( 16.67, -81.4655, -2.56082, 1.18 ) }
    dend_2 { pt3dadd( 17.1747, -82.3662, -2.78058, 0.88 ) }
    dend_2 { pt3dadd( 17.801, -83.4919, -3.05501, 0.29 ) }
    dend_2 { pt3dadd( 18.2072, -84.2068, -3.22685, 0.29 ) }
    dend_2 { pt3dadd( 18.3549, -84.447, -3.28222, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( 19.2098, -85.7037, -3.51039, 0.66 ) }
    dend_2 { pt3dadd( 19.6811, -86.3326, -3.57987, 1.03 ) }
    dend_2 { pt3dadd( 20.184, -87.0038, -3.58176, 0.37 ) }
    dend_2 { pt3dadd( 20.2205, -87.0543, -3.57733, 0.37 ) }
    dend_2 { pt3dadd( 20.7524, -87.8798, -3.44376, 0.37 ) }
    dend_2 { pt3dadd( 21.199, -88.6252, -3.22179, 0.81 ) }
    dend_2 { pt3dadd( 21.5178, -89.2078, -2.98851, 0.81 ) }
    dend_2 { pt3dadd( 22.0334, -90.1004, -2.58609, 0.52 ) }
    dend_2 { pt3dadd( 22.0631, -90.1498, -2.56233, 0.52 ) }
    dend_2 { pt3dadd( 22.8734, -91.3604, -1.96619, 0.88 ) }
    dend_2 { pt3dadd( 23.7688, -92.5644, -1.34239, 0.52 ) }
    dend_2 { pt3dadd( 24.0585, -92.882, -1.14678, 0.52 ) }
    dend_2 { pt3dadd( 24.6536, -93.2822, -0.763282, 0.74 ) }
    dend_2 { pt3dadd( 24.8123, -93.3408, -0.66965, 0.74 ) }
    dend_2 { pt3dadd( 25.4938, -93.4208, -0.229459, 0.52 ) }
    dend_2 { pt3dadd( 25.5533, -93.4168, -0.192403, 0.52 ) }
    dend_2 { pt3dadd( 26.9463, -93.144, 0.65975, 0.29 ) }
    dend_2 { pt3dadd( 28.4951, -92.7226, 1.69001, 0.22 ) }
    dend_2 { pt3dadd( 28.7477, -92.6344, 1.87475, 0.37 ) }
    dend_2 { pt3dadd( 30.1108, -92.0975, 2.91807, 0.81 ) }
    dend_2 { pt3dadd( 32.949, -100.6, 2.62512, 0.81 ) }
    dend_2 { pt3dadd( 35.654, -109.15, 2.8683, 0.81 ) }
    dend_2 { pt3dadd( 37.0193, -117.902, 4.34188, 0.81 ) }
    dend_2 { pt3dadd( 39.3316, -126.507, 5.39686, 0.81 ) }
    // Section: dend_79, id: dend_79, parent: dend_77 (entry count 24/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 14.6022, 98.2448, 14.0644, 0.29 ) }
    dend_79 { pt3dadd( 10.3656, 105.702, 21.5668, 0.29 ) }
    dend_79 { pt3dadd( 4.70414, 111.327, 29.6326, 0.29 ) }
    dend_79 { pt3dadd( -0.248679, 117.147, 38.0244, 0.29 ) }
    dend_79 { pt3dadd( -6.84174, 123.53, 44.7364, 0.29 ) }
    dend_79 { pt3dadd( -12.6893, 131.48, 50.4765, 0.29 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 30/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 14.6022, 98.2448, 14.0644, 0.74 ) }
    dend_78 { pt3dadd( 14.5952, 106.663, 13.8461, 0.29 ) }
    dend_78 { pt3dadd( 13.9229, 115.009, 14.6121, 0.29 ) }
    dend_78 { pt3dadd( 13.3273, 123.404, 14.4637, 0.29 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 34/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 55.0375, 76.4082, 33.983, 0.37 ) }
    dend_76 { pt3dadd( 55.0693, 76.4981, 34.017, 0.37 ) }
    dend_76 { pt3dadd( 55.4435, 77.3852, 34.2848, 0.37 ) }
    dend_76 { pt3dadd( 55.4968, 77.4942, 34.316, 0.37 ) }
    dend_76 { pt3dadd( 55.8127, 78.2046, 34.593, 0.59 ) }
    dend_76 { pt3dadd( 56.1618, 79.0077, 34.9333, 0.59 ) }
    dend_76 { pt3dadd( 56.239, 79.1865, 35.0097, 0.59 ) }
    dend_76 { pt3dadd( 56.7816, 80.3919, 35.5382, 0.29 ) }
    dend_76 { pt3dadd( 57.0141, 80.8299, 35.7439, 0.29 ) }
    dend_76 { pt3dadd( 58.0033, 82.5029, 36.5138, 0.15 ) }
    dend_76 { pt3dadd( 58.0673, 82.6075, 36.5676, 0.15 ) }
    dend_76 { pt3dadd( 58.3594, 83.0809, 36.8403, 0.15 ) }
    dend_76 { pt3dadd( 58.6339, 83.5316, 37.1083, 0.15 ) }
    dend_76 { pt3dadd( 59.2577, 84.5399, 37.7022, 0.15 ) }
    dend_76 { pt3dadd( 59.5624, 85.0168, 37.9546, 0.44 ) }
    dend_76 { pt3dadd( 60.3375, 86.1408, 38.5066, 0.29 ) }
    dend_76 { pt3dadd( 60.8878, 86.9649, 38.9157, 0.29 ) }
    dend_76 { pt3dadd( 61.1463, 87.3738, 39.1216, 0.29 ) }
    dend_76 { pt3dadd( 61.7122, 88.3941, 39.6083, 0.29 ) }
    dend_76 { pt3dadd( 62.0108, 89.0578, 39.8819, 0.74 ) }
    dend_76 { pt3dadd( 67.6752, 99.776, 43.4643, 0.74 ) }
    dend_76 { pt3dadd( 74.3834, 110.237, 45.7667, 0.74 ) }
    dend_76 { pt3dadd( 80.428, 121.12, 48.0348, 0.74 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 57/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 55.0375, 76.4082, 33.983, 0.29 ) }
    dend_75 { pt3dadd( 55.1089, 76.3578, 34.0071, 0.29 ) }
    dend_75 { pt3dadd( 55.1639, 76.3307, 34.025, 0.29 ) }
    dend_75 { pt3dadd( 55.6302, 76.1249, 34.1747, 0.29 ) }
    dend_75 { pt3dadd( 55.7581, 76.0766, 34.2153, 0.29 ) }
    dend_75 { pt3dadd( 56.1414, 75.9436, 34.3361, 0.29 ) }
    dend_75 { pt3dadd( 56.3163, 75.8829, 34.3912, 0.29 ) }
    dend_75 { pt3dadd( 57.3809, 75.5366, 34.7251, 0.29 ) }
    dend_75 { pt3dadd( 57.4394, 75.5192, 34.7434, 0.29 ) }
    dend_75 { pt3dadd( 58.0021, 75.3864, 34.9167, 0.88 ) }
    dend_75 { pt3dadd( 58.0704, 75.3726, 34.9376, 0.88 ) }
    dend_75 { pt3dadd( 66.3723, 73.5753, 38.1805, 0.88 ) }
    dend_75 { pt3dadd( 73.755, 70.973, 42.8295, 0.88 ) }
    dend_75 { pt3dadd( 80.8511, 69.3414, 48.2741, 0.88 ) }
    dend_75 { pt3dadd( 88.3805, 68.0055, 53.1858, 0.88 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 72/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 25.8074, 13.6226, -33.3767, 0.74 ) }
    dend_65 { pt3dadd( 25.5783, 15.9197, -36.6159, 0.74 ) }
    dend_65 { pt3dadd( 25.6474, 16.7667, -38.0677, 0.74 ) }
    dend_65 { pt3dadd( 25.654, 16.8116, -38.1482, 0.74 ) }
    dend_65 { pt3dadd( 25.7907, 17.305, -39.1055, 0.74 ) }
    dend_65 { pt3dadd( 25.9893, 17.9034, -40.2994, 0.74 ) }
    dend_65 { pt3dadd( 26.4304, 18.9871, -42.6028, 0.59 ) }
    dend_65 { pt3dadd( 27.2938, 20.6844, -46.2703, 0.59 ) }
    dend_65 { pt3dadd( 27.3568, 20.7865, -46.5097, 0.59 ) }
    dend_65 { pt3dadd( 28.1392, 21.9914, -49.3405, 0.59 ) }
    dend_65 { pt3dadd( 28.1631, 22.0253, -49.4227, 0.59 ) }
    dend_65 { pt3dadd( 29.046, 23.1879, -52.3634, 0.29 ) }
    dend_65 { pt3dadd( 29.0714, 23.2231, -52.4447, 0.29 ) }
    dend_65 { pt3dadd( 29.2679, 23.5926, -53.1895, 0.29 ) }
    dend_65 { pt3dadd( 29.5063, 24.3006, -54.5708, 0.29 ) }
    dend_65 { pt3dadd( 29.5012, 24.3391, -54.6399, 0.29 ) }
    dend_65 { pt3dadd( 29.2363, 24.5407, -55.2674, 0.29 ) }
    dend_65 { pt3dadd( 29.0671, 24.5703, -55.4995, 0.29 ) }
    dend_65 { pt3dadd( 28.5508, 24.6578, -56.212, 0.29 ) }
    dend_65 { pt3dadd( 27.9577, 24.7333, -57.0182, 0.74 ) }
    dend_65 { pt3dadd( 27.4911, 24.8529, -58.1821, 0.74 ) }
    dend_65 { pt3dadd( 26.7844, 25.346, -61.0896, 0.37 ) }
    dend_65 { pt3dadd( 26.7758, 25.3614, -61.1797, 0.37 ) }
    dend_65 { pt3dadd( 26.7292, 25.5662, -62.3776, 0.37 ) }
    dend_65 { pt3dadd( 26.7277, 25.5882, -62.5154, 0.37 ) }
    dend_65 { pt3dadd( 26.6849, 26.557, -67.9191, 0.37 ) }
    dend_65 { pt3dadd( 26.6852, 26.7359, -68.8539, 1.03 ) }
    dend_65 { pt3dadd( 26.5118, 27.8083, -74.144, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_65 { pt3dadd( 26.5049, 27.8258, -74.234, 1.03 ) }
    dend_65 { pt3dadd( 26.1474, 28.4472, -77.2595, 0.29 ) }
    dend_65 { pt3dadd( 25.9641, 28.7107, -78.3327, 0.29 ) }
    dend_65 { pt3dadd( 25.912, 28.7794, -78.5329, 0.29 ) }
    dend_65 { pt3dadd( 25.4764, 29.4425, -80.0898, 0.29 ) }
    dend_65 { pt3dadd( 25.4561, 29.487, -80.1684, 0.29 ) }
    dend_65 { pt3dadd( 24.961, 31.0512, -82.7727, 0.29 ) }
    dend_65 { pt3dadd( 24.952, 31.1012, -82.8501, 0.29 ) }
    dend_65 { pt3dadd( 24.8378, 32.3074, -84.8652, 1.33 ) }
    dend_65 { pt3dadd( 24.8224, 32.7515, -85.6159, 1.33 ) }
    dend_65 { pt3dadd( 24.8828, 34.4495, -88.5415, 0.29 ) }
    dend_65 { pt3dadd( 24.8749, 35.0572, -89.6392, 0.29 ) }
    dend_65 { pt3dadd( 24.8597, 35.123, -89.7624, 0.29 ) }
    dend_65 { pt3dadd( 24.6095, 35.754, -90.9324, 1.03 ) }
    dend_65 { pt3dadd( 24.4713, 35.9686, -91.3338, 1.03 ) }
    dend_65 { pt3dadd( 24.4486, 36.0009, -91.4171, 1.03 ) }
    dend_65 { pt3dadd( 24.0538, 36.6849, -92.9586, 0.22 ) }
    dend_65 { pt3dadd( 23.6325, 37.4635, -94.7974, 0.22 ) }
    dend_65 { pt3dadd( 23.6135, 37.4964, -94.8814, 0.22 ) }
    dend_65 { pt3dadd( 23.1825, 38.2452, -96.8218, 1.18 ) }
    dend_65 { pt3dadd( 22.1491, 40.1562, -101.506, 0.22 ) }
    dend_65 { pt3dadd( 21.8082, 40.9775, -103.455, 0.22 ) }
    dend_65 { pt3dadd( 21.5105, 42.0544, -105.977, 1.18 ) }
    dend_65 { pt3dadd( 21.422, 43.2265, -109.108, 0.15 ) }
    dend_65 { pt3dadd( 21.4237, 43.3218, -109.381, 0.15 ) }
    dend_65 { pt3dadd( 21.5029, 43.9488, -111.012, 0.15 ) }
    dend_65 { pt3dadd( 21.7175, 45.0978, -113.648, 0.15 ) }
    dend_65 { pt3dadd( 21.9767, 46.1999, -116.085, 1.62 ) }
    dend_65 { pt3dadd( 22.79, 49.0981, -121.791, 0.22 ) }
    dend_65 { pt3dadd( 22.8042, 49.1408, -121.872, 0.22 ) }
    dend_65 { pt3dadd( 23.325, 50.6545, -124.818, 0.22 ) }
    dend_65 { pt3dadd( 23.5838, 51.3869, -126.297, 1.25 ) }
    dend_65 { pt3dadd( 23.6406, 51.6713, -126.773, 1.25 ) }
    dend_65 { pt3dadd( 23.6483, 51.7416, -126.852, 1.25 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 34/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 25.8074, 13.6226, -33.3767, 0.96 ) }
    dend_64 { pt3dadd( 25.9735, 13.6158, -33.4533, 0.96 ) }
    dend_64 { pt3dadd( 27.3028, 13.5594, -34.0843, 0.74 ) }
    dend_64 { pt3dadd( 29.0186, 13.4474, -34.7967, 0.74 ) }
    dend_64 { pt3dadd( 30.9115, 13.3469, -35.6351, 0.74 ) }
    dend_64 { pt3dadd( 31.0051, 13.3439, -35.6861, 0.74 ) }
    dend_64 { pt3dadd( 33.8048, 13.3654, -37.5412, 0.74 ) }
    dend_64 { pt3dadd( 33.8652, 13.3698, -37.586, 0.74 ) }
    dend_64 { pt3dadd( 35.7395, 13.6416, -39.214, 0.74 ) }
    dend_64 { pt3dadd( 37.2492, 13.9581, -40.5808, 0.74 ) }
    dend_64 { pt3dadd( 38.8994, 14.4909, -42.1979, 1.62 ) }
    dend_64 { pt3dadd( 40.2738, 15.0278, -43.6778, 0.66 ) }
    dend_64 { pt3dadd( 41.3573, 15.4966, -44.8911, 0.52 ) }
    dend_64 { pt3dadd( 42.8809, 16.1691, -46.6117, 1.25 ) }
    dend_64 { pt3dadd( 43.947, 16.6177, -47.8146, 1.25 ) }
    dend_64 { pt3dadd( 47.1194, 17.8034, -51.0848, 0.59 ) }
    dend_64 { pt3dadd( 49.2875, 18.5207, -53.3301, 0.96 ) }
    dend_64 { pt3dadd( 51.6508, 19.2258, -55.8588, 0.96 ) }
    dend_64 { pt3dadd( 51.7023, 19.2392, -55.9122, 0.96 ) }
    dend_64 { pt3dadd( 55.4486, 20.0956, -59.517, 0.96 ) }
    dend_64 { pt3dadd( 56.5286, 20.2937, -60.5148, 1.47 ) }
    dend_64 { pt3dadd( 59.8739, 20.7494, -63.3024, 0.74 ) }
    dend_64 { pt3dadd( 59.9436, 20.7595, -63.352, 0.74 ) }
    dend_64 { pt3dadd( 63.5329, 21.3292, -65.6879, 0.74 ) }
    dend_64 { pt3dadd( 64.7145, 21.5409, -66.3937, 1.47 ) }
    dend_64 { pt3dadd( 66.3158, 21.8686, -67.177, 0.59 ) }
    dend_64 { pt3dadd( 66.6016, 21.924, -67.313, 0.59 ) }
    dend_64 { pt3dadd( 68.6095, 22.2694, -68.1049, 0.59 ) }
    dend_64 { pt3dadd( 68.7689, 22.294, -68.1809, 0.59 ) }
    dend_64 { pt3dadd( 70.4087, 22.4769, -69.2148, 2.14 ) }
    dend_64 { pt3dadd( 70.8152, 22.5062, -69.4766, 2.14 ) }
    dend_64 { pt3dadd( 72.8437, 22.513, -70.7717, 0.66 ) }
    dend_64 { pt3dadd( 73.4543, 22.4902, -71.1768, 0.66 ) }
    dend_64 { pt3dadd( 73.5132, 22.4881, -71.2238, 0.66 ) }
    dend_64 { pt3dadd( 75.6735, 22.5908, -73.3419, 0.66 ) }
    dend_64 { pt3dadd( 75.724, 22.5984, -73.3974, 0.66 ) }
    dend_64 { pt3dadd( 77.4789, 23.055, -75.5301, 0.66 ) }
    dend_64 { pt3dadd( 77.6983, 23.1493, -75.8359, 1.18 ) }
    dend_64 { pt3dadd( 79.135, 23.921, -78.0733, 0.81 ) }
    dend_64 { pt3dadd( 80.6024, 24.7693, -80.428, 0.44 ) }
    dend_64 { pt3dadd( 81.0534, 25.0769, -81.229, 0.44 ) }
    dend_64 { pt3dadd( 81.0893, 25.0996, -81.2915, 0.44 ) }
    dend_64 { pt3dadd( 82.3014, 25.8428, -83.397, 0.44 ) }
    dend_64 { pt3dadd( 82.3651, 25.8676, -83.4889, 0.44 ) }
    dend_64 { pt3dadd( 83.3829, 26.0228, -84.7001, 0.44 ) }
    dend_64 { pt3dadd( 83.4342, 26.0297, -84.7548, 0.44 ) }
    dend_64 { pt3dadd( 84.5741, 26.1829, -85.9844, 1.4 ) }
    dend_64 { pt3dadd( 84.6356, 26.1935, -86.0438, 1.4 ) }
    dend_64 { pt3dadd( 85.2047, 26.3027, -86.5603, 1.4 ) }
    dend_64 { pt3dadd( 88.6385, 26.9818, -89.936, 0.52 ) }
    dend_64 { pt3dadd( 90.8642, 27.4596, -92.2357, 0.37 ) }
    dend_64 { pt3dadd( 90.9182, 27.4711, -92.2871, 0.37 ) }
    dend_64 { pt3dadd( 93.8585, 28.1248, -94.9084, 0.37 ) }
    dend_64 { pt3dadd( 93.922, 28.1395, -94.9649, 0.37 ) }
    dend_64 { pt3dadd( 97.4046, 28.9692, -98.0917, 0.37 ) }
    dend_64 { pt3dadd( 97.4688, 28.9835, -98.1474, 0.37 ) }
    dend_64 { pt3dadd( 99.8313, 29.4629, -100.138, 0.37 ) }
    dend_64 { pt3dadd( 99.8872, 29.4743, -100.188, 0.37 ) }
    dend_64 { pt3dadd( 101.814, 29.8648, -101.955, 0.29 ) }
    dend_64 { pt3dadd( 104.091, 30.3303, -103.946, 0.29 ) }
    dend_64 { pt3dadd( 104.149, 30.3425, -103.992, 0.29 ) }
    dend_64 { pt3dadd( 108.213, 31.1465, -107.08, 0.29 ) }
    dend_64 { pt3dadd( 110.141, 31.5242, -108.61, 1.62 ) }
    dend_64 { pt3dadd( 110.201, 31.5352, -108.654, 1.62 ) }
    dend_64 { pt3dadd( 111.342, 31.7194, -109.366, 1.62 ) }
    dend_64 { pt3dadd( 112.431, 31.9127, -109.973, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_64 { pt3dadd( 114.058, 32.2155, -110.931, 0.29 ) }
    dend_64 { pt3dadd( 116.337, 32.5843, -112.236, 0.29 ) }
    dend_64 { pt3dadd( 116.403, 32.5922, -112.272, 0.29 ) }
    dend_64 { pt3dadd( 118.41, 32.7928, -113.571, 0.29 ) }
    dend_64 { pt3dadd( 118.935, 32.8362, -113.959, 1.11 ) }
    dend_64 { pt3dadd( 121.024, 32.9986, -115.584, 0.29 ) }
    dend_64 { pt3dadd( 122.515, 33.0887, -116.764, 0.29 ) }
    dend_64 { pt3dadd( 124.386, 33.2159, -118.078, 1.47 ) }
    dend_64 { pt3dadd( 126.177, 33.3671, -119.319, 0.15 ) }
    dend_64 { pt3dadd( 126.24, 33.3708, -119.361, 0.15 ) }
    dend_64 { pt3dadd( 127.383, 33.4006, -120.013, 0.15 ) }
    dend_64 { pt3dadd( 127.462, 33.4037, -120.047, 0.15 ) }
    dend_64 { pt3dadd( 129.046, 33.4664, -120.674, 0.15 ) }
    dend_64 { pt3dadd( 129.197, 33.4632, -120.731, 0.15 ) }
    dend_64 { pt3dadd( 130.828, 33.3625, -121.36, 0.15 ) }
    dend_64 { pt3dadd( 132.154, 33.2547, -121.962, 1.11 ) }
    dend_64 { pt3dadd( 132.654, 33.1978, -122.228, 1.11 ) }
    dend_64 { pt3dadd( 132.715, 33.1952, -122.272, 1.11 ) }
    dend_64 { pt3dadd( 134.575, 33.2365, -123.942, 0.37 ) }
    dend_64 { pt3dadd( 135.027, 33.2932, -124.393, 0.59 ) }
    dend_64 { pt3dadd( 135.351, 33.3851, -124.735, 0.59 ) }
    dend_64 { pt3dadd( 135.424, 33.4104, -124.808, 0.59 ) }
    dend_64 { pt3dadd( 137.465, 34.1161, -126.76, 0.29 ) }
    dend_64 { pt3dadd( 137.832, 34.2176, -127.043, 0.22 ) }
    dend_64 { pt3dadd( 137.895, 34.2332, -127.082, 0.22 ) }
    dend_64 { pt3dadd( 138.867, 34.4409, -127.635, 0.22 ) }
    dend_64 { pt3dadd( 139.341, 34.5275, -127.897, 0.22 ) }
    dend_64 { pt3dadd( 140.746, 34.754, -128.608, 1.03 ) }
    dend_64 { pt3dadd( 143.451, 35.1248, -129.804, 0.22 ) }
    dend_64 { pt3dadd( 144.316, 35.2411, -130.201, 0.22 ) }
    dend_64 { pt3dadd( 144.383, 35.2497, -130.233, 0.22 ) }
    dend_64 { pt3dadd( 146.032, 35.4396, -131.069, 1.11 ) }
    dend_64 { pt3dadd( 146.591, 35.5112, -131.355, 1.11 ) }
    dend_64 { pt3dadd( 146.7, 35.5278, -131.407, 1.11 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 34/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 65.5744, 24.599, -20.5828, 0.44 ) }
    dend_62 { pt3dadd( 66.2468, 24.8224, -20.5592, 0.44 ) }
    dend_62 { pt3dadd( 66.8023, 25.0245, -20.6004, 0.44 ) }
    dend_62 { pt3dadd( 67.0795, 25.1278, -20.6324, 0.44 ) }
    dend_62 { pt3dadd( 68.6539, 25.728, -21.3827, 0.44 ) }
    dend_62 { pt3dadd( 68.7099, 25.7512, -21.4173, 0.44 ) }
    dend_62 { pt3dadd( 69.3051, 26.0113, -21.8233, 0.81 ) }
    dend_62 { pt3dadd( 70.2688, 26.4407, -22.5264, 0.81 ) }
    dend_62 { pt3dadd( 70.3229, 26.468, -22.5783, 0.81 ) }
    dend_62 { pt3dadd( 72.1445, 27.5247, -24.4938, 0.22 ) }
    dend_62 { pt3dadd( 72.4863, 27.7526, -24.8941, 0.22 ) }
    dend_62 { pt3dadd( 72.5454, 27.7943, -24.9717, 0.22 ) }
    dend_62 { pt3dadd( 72.787, 27.9896, -25.313, 0.44 ) }
    dend_62 { pt3dadd( 73.6116, 28.7209, -26.4843, 0.29 ) }
    dend_62 { pt3dadd( 74.4947, 29.5723, -27.7259, 0.29 ) }
    dend_62 { pt3dadd( 75.8459, 31.0181, -29.7612, 0.96 ) }
    dend_62 { pt3dadd( 76.8691, 32.164, -31.4598, 0.44 ) }
    dend_62 { pt3dadd( 77.3116, 32.6399, -32.1523, 0.44 ) }
    dend_62 { pt3dadd( 77.4881, 32.8272, -32.4191, 1.03 ) }
    dend_62 { pt3dadd( 77.7277, 33.0759, -32.7259, 1.03 ) }
    dend_62 { pt3dadd( 78.8838, 34.3335, -34.1109, 0.29 ) }
    dend_62 { pt3dadd( 78.9495, 34.3903, -34.1586, 0.29 ) }
    dend_62 { pt3dadd( 80.6073, 35.5186, -34.9385, 0.29 ) }
    dend_62 { pt3dadd( 80.7313, 35.5856, -34.9894, 0.29 ) }
    dend_62 { pt3dadd( 82.1076, 36.2373, -35.4568, 0.29 ) }
    dend_62 { pt3dadd( 82.2074, 36.2838, -35.4818, 0.29 ) }
    dend_62 { pt3dadd( 83.947, 37.1133, -35.8787, 0.29 ) }
    dend_62 { pt3dadd( 84.0143, 37.1474, -35.9051, 0.29 ) }
    dend_62 { pt3dadd( 84.6688, 37.4726, -36.2505, 0.29 ) }
    dend_62 { pt3dadd( 84.7992, 37.535, -36.3218, 0.29 ) }
    dend_62 { pt3dadd( 85.6878, 37.9314, -36.7441, 1.03 ) }
    dend_62 { pt3dadd( 87.1595, 38.5449, -37.2246, 0.29 ) }
    dend_62 { pt3dadd( 87.3635, 38.6206, -37.2526, 0.29 ) }
    dend_62 { pt3dadd( 89.4087, 39.2796, -37.5181, 0.29 ) }
    dend_62 { pt3dadd( 89.4753, 39.2988, -37.5264, 0.29 ) }
    dend_62 { pt3dadd( 90.8193, 39.6352, -37.6177, 0.81 ) }
    dend_62 { pt3dadd( 91.5114, 39.8002, -37.6183, 0.22 ) }
    dend_62 { pt3dadd( 93.2355, 40.2531, -37.4866, 0.22 ) }
    dend_62 { pt3dadd( 94.2047, 40.5407, -37.4828, 1.03 ) }
    dend_62 { pt3dadd( 94.3269, 40.5828, -37.4929, 1.03 ) }
    dend_62 { pt3dadd( 95.3746, 40.9965, -37.6596, 0.15 ) }
    dend_62 { pt3dadd( 96.3777, 41.4727, -37.9332, 0.15 ) }
    dend_62 { pt3dadd( 96.4368, 41.5053, -37.9517, 0.15 ) }
    dend_62 { pt3dadd( 97.7145, 42.3695, -38.5245, 0.81 ) }
    dend_62 { pt3dadd( 97.8326, 42.4474, -38.5745, 0.81 ) }
    dend_62 { pt3dadd( 98.1308, 42.602, -38.7133, 0.81 ) }
    dend_62 { pt3dadd( 98.2244, 42.6409, -38.7627, 0.81 ) }
    dend_62 { pt3dadd( 98.7231, 42.7931, -39.0001, 0.15 ) }
    dend_62 { pt3dadd( 98.7858, 42.8105, -39.0251, 0.15 ) }
    dend_62 { pt3dadd( 99.9876, 43.085, -39.3468, 0.15 ) }
    dend_62 { pt3dadd( 101.131, 43.3093, -39.6557, 0.74 ) }
    dend_62 { pt3dadd( 101.353, 43.3456, -39.7164, 0.74 ) }
    dend_62 { pt3dadd( 101.429, 43.3573, -39.7365, 0.74 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 87/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 65.5744, 24.599, -20.5828, 0.66 ) }
    dend_61 { pt3dadd( 65.7786, 24.4273, -20.6535, 0.66 ) }
    dend_61 { pt3dadd( 65.8222, 24.3932, -20.6718, 0.66 ) }
    dend_61 { pt3dadd( 66.5741, 23.8902, -20.9796, 0.66 ) }
    dend_61 { pt3dadd( 66.7723, 23.7837, -21.0649, 0.66 ) }
    dend_61 { pt3dadd( 67.4922, 23.4419, -21.3789, 0.66 ) }
    dend_61 { pt3dadd( 68.2157, 23.167, -21.6607, 1.18 ) }
    dend_61 { pt3dadd( 68.3397, 23.1311, -21.7059, 1.18 ) }
    dend_61 { pt3dadd( 68.9254, 23.0193, -21.8891, 1.18 ) }
    dend_61 { pt3dadd( 69.5835, 22.9633, -22.072, 0.44 ) }
    dend_61 { pt3dadd( 69.6478, 22.9614, -22.0868, 0.44 ) }
    dend_61 { pt3dadd( 70.6083, 22.9742, -22.2498, 0.44 ) }
    dend_61 { pt3dadd( 70.8669, 22.9802, -22.3243, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_61 { pt3dadd( 71.5468, 23.0074, -22.6043, 0.44 ) }
    dend_61 { pt3dadd( 71.5981, 23.01, -22.6305, 0.44 ) }
    dend_61 { pt3dadd( 72.048, 23.0448, -22.8849, 0.74 ) }
    dend_61 { pt3dadd( 72.104, 23.0528, -22.9188, 0.74 ) }
    dend_61 { pt3dadd( 73.7709, 23.4179, -23.9862, 0.44 ) }
    dend_61 { pt3dadd( 74.8336, 23.6989, -24.5194, 0.44 ) }
    dend_61 { pt3dadd( 74.8868, 23.7143, -24.5357, 0.44 ) }
    dend_61 { pt3dadd( 75.4751, 23.8874, -24.5814, 0.88 ) }
    dend_61 { pt3dadd( 76.1426, 24.0916, -24.526, 0.88 ) }
    dend_61 { pt3dadd( 76.7458, 24.2849, -24.3998, 0.88 ) }
    dend_61 { pt3dadd( 77.9495, 24.6783, -23.9222, 0.44 ) }
    dend_61 { pt3dadd( 79.2847, 25.0886, -23.3013, 0.44 ) }
    dend_61 { pt3dadd( 80.4141, 25.4134, -22.7339, 1.25 ) }
    dend_61 { pt3dadd( 80.4707, 25.4288, -22.7038, 1.25 ) }
    dend_61 { pt3dadd( 81.0632, 25.5798, -22.3795, 1.25 ) }
    dend_61 { pt3dadd( 82.2096, 25.8385, -21.7801, 0.37 ) }
    dend_61 { pt3dadd( 82.9989, 25.9972, -21.5106, 0.37 ) }
    dend_61 { pt3dadd( 83.1117, 26.0154, -21.4942, 0.37 ) }
    dend_61 { pt3dadd( 84.068, 26.1315, -21.5386, 0.37 ) }
    dend_61 { pt3dadd( 84.1486, 26.1384, -21.5492, 0.37 ) }
    dend_61 { pt3dadd( 85.1331, 26.1912, -21.7696, 0.37 ) }
    dend_61 { pt3dadd( 86.8008, 26.2602, -22.2653, 1.03 ) }
    dend_61 { pt3dadd( 87.4986, 26.2671, -22.4716, 1.92 ) }
    dend_61 { pt3dadd( 87.8714, 26.2625, -22.5772, 0.29 ) }
    dend_61 { pt3dadd( 88.5802, 26.2425, -22.7983, 0.29 ) }
    dend_61 { pt3dadd( 88.6904, 26.2412, -22.8328, 0.29 ) }
    dend_61 { pt3dadd( 89.5162, 26.2478, -23.0701, 0.29 ) }
    dend_61 { pt3dadd( 90.0376, 26.2275, -23.1655, 0.74 ) }
    dend_61 { pt3dadd( 90.1018, 26.2233, -23.1801, 0.74 ) }
    dend_61 { pt3dadd( 91.1399, 26.1533, -23.4148, 0.74 ) }
    dend_61 { pt3dadd( 91.1962, 26.1492, -23.4267, 0.74 ) }
    dend_61 { pt3dadd( 91.7352, 26.1119, -23.5143, 0.22 ) }
    dend_61 { pt3dadd( 92.4391, 26.0674, -23.596, 0.22 ) }
    dend_61 { pt3dadd( 92.561, 26.0615, -23.5762, 0.22 ) }
    dend_61 { pt3dadd( 93.0996, 26.0351, -23.3575, 0.96 ) }
    dend_61 { pt3dadd( 93.3643, 26.0239, -23.2063, 0.96 ) }
    dend_61 { pt3dadd( 93.8785, 26.0094, -22.894, 0.96 ) }
    dend_61 { pt3dadd( 93.9272, 26.0088, -22.8631, 0.96 ) }
    dend_61 { pt3dadd( 95.4832, 26.0168, -21.8634, 0.37 ) }
    dend_61 { pt3dadd( 95.5575, 26.0166, -21.817, 0.37 ) }
    dend_61 { pt3dadd( 96.7913, 26.0042, -21.1283, 0.37 ) }
    dend_61 { pt3dadd( 96.843, 26.0035, -21.1026, 0.37 ) }
    dend_61 { pt3dadd( 97.2994, 25.9979, -20.9223, 0.59 ) }
    dend_61 { pt3dadd( 97.4753, 25.9982, -20.8781, 0.22 ) }
    dend_61 { pt3dadd( 97.5326, 25.9999, -20.8716, 0.22 ) }
    dend_61 { pt3dadd( 98.3758, 26.0544, -20.7165, 0.22 ) }
    dend_61 { pt3dadd( 98.4319, 26.0596, -20.7037, 0.22 ) }
    dend_61 { pt3dadd( 98.7843, 26.0896, -20.6237, 0.44 ) }
    dend_61 { pt3dadd( 98.9702, 26.0985, -20.5841, 0.44 ) }
    dend_61 { pt3dadd( 99.779, 26.1062, -20.4216, 0.22 ) }
    dend_61 { pt3dadd( 101.632, 26.0705, -20.0968, 0.22 ) }
    dend_61 { pt3dadd( 102.181, 26.0449, -20.0131, 1.03 ) }
    dend_61 { pt3dadd( 102.732, 26.0078, -19.9414, 0.22 ) }
    dend_61 { pt3dadd( 103.834, 25.9042, -19.82, 0.22 ) }
    dend_61 { pt3dadd( 104.138, 25.8682, -19.7971, 0.22 ) }
    dend_61 { pt3dadd( 105.655, 25.6718, -19.7418, 0.22 ) }
    dend_61 { pt3dadd( 107.491, 25.4044, -19.6902, 0.22 ) }
    dend_61 { pt3dadd( 108.42, 25.276, -19.6699, 1.18 ) }
    dend_61 { pt3dadd( 109.226, 25.1739, -19.657, 1.18 ) }
    dend_61 { pt3dadd( 109.773, 25.1162, -19.6513, 0.15 ) }
    dend_61 { pt3dadd( 111.592, 24.949, -19.6416, 0.15 ) }
    dend_61 { pt3dadd( 111.657, 24.9435, -19.6418, 0.52 ) }
    dend_61 { pt3dadd( 112.143, 24.9145, -19.647, 0.15 ) }
    dend_61 { pt3dadd( 112.258, 24.9108, -19.6492, 0.15 ) }
    dend_61 { pt3dadd( 113.794, 24.9212, -19.6773, 0.15 ) }
    dend_61 { pt3dadd( 114.218, 24.932, -19.6816, 0.96 ) }
    dend_61 { pt3dadd( 114.827, 24.9563, -19.6983, 0.96 ) }
    dend_61 { pt3dadd( 115.008, 24.9657, -19.7046, 0.96 ) }
    dend_61 { pt3dadd( 115.559, 25.009, -19.7276, 0.15 ) }
    dend_61 { pt3dadd( 116.825, 25.1744, -19.7878, 0.15 ) }
    dend_61 { pt3dadd( 116.89, 25.1878, -19.7917, 0.15 ) }
    dend_61 { pt3dadd( 117.128, 25.2497, -19.801, 0.81 ) }
    dend_61 { pt3dadd( 117.183, 25.2667, -19.8016, 0.81 ) }
    dend_61 { pt3dadd( 117.756, 25.4626, -19.7816, 0.81 ) }
    dend_61 { pt3dadd( 118.151, 25.6181, -19.7425, 0.81 ) }
    dend_61 { pt3dadd( 118.204, 25.6398, -19.7372, 0.81 ) }
    dend_61 { pt3dadd( 118.623, 25.8011, -19.6985, 0.15 ) }
    dend_61 { pt3dadd( 118.684, 25.8244, -19.6931, 0.15 ) }
    dend_61 { pt3dadd( 119.365, 26.0816, -19.6362, 0.15 ) }
    dend_61 { pt3dadd( 119.446, 26.1121, -19.6251, 0.15 ) }
    dend_61 { pt3dadd( 120.817, 26.6292, -19.3833, 0.15 ) }
    dend_61 { pt3dadd( 121.114, 26.75, -19.3221, 0.44 ) }
    dend_61 { pt3dadd( 121.271, 26.819, -19.2861, 0.44 ) }
    dend_61 { pt3dadd( 121.384, 26.8737, -19.2568, 0.44 ) }
    dend_61 { pt3dadd( 122.01, 27.2057, -19.0689, 0.15 ) }
    dend_61 { pt3dadd( 122.17, 27.2942, -19.0145, 0.15 ) }
    dend_61 { pt3dadd( 122.537, 27.5288, -18.8447, 0.15 ) }
    dend_61 { pt3dadd( 122.841, 27.7192, -18.7054, 0.88 ) }
    dend_61 { pt3dadd( 123.195, 27.929, -18.5608, 0.88 ) }
    dend_61 { pt3dadd( 123.299, 27.988, -18.5295, 0.88 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 90/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -68.5467, 57.5934, 46.4328, 0.37 ) }
    dend_57 { pt3dadd( -76.0932, 59.641, 53.3378, 0.37 ) }
    dend_57 { pt3dadd( -83.2911, 61.7862, 60.5796, 0.37 ) }
    dend_57 { pt3dadd( -90.4682, 63.2293, 68.0044, 0.37 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 94/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -68.5467, 57.5934, 46.4328, 0.29 ) }
    dend_56 { pt3dadd( -77.2728, 60.1229, 50.5188, 0.37 ) }
    dend_56 { pt3dadd( -86.8511, 61.9366, 52.5458, 0.37 ) }
    dend_56 { pt3dadd( -96.0936, 64.981, 54.7331, 0.37 ) }
    dend_56 { pt3dadd( -104.977, 69.5977, 54.767, 0.37 ) }
    dend_56 { pt3dadd( -113.538, 74.7133, 53.7102, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_56 { pt3dadd( -121.27, 81.1517, 53.5131, 0.37 ) }
    dend_56 { pt3dadd( -128.432, 88.1002, 54.8824, 0.37 ) }
    dend_56 { pt3dadd( -134.216, 96.3673, 55.6688, 0.37 ) }
    dend_56 { pt3dadd( -140.608, 103.822, 57.9626, 0.37 ) }
    dend_56 { pt3dadd( -145.347, 112.748, 58.8356, 0.37 ) }
    dend_56 { pt3dadd( -148.87, 121.982, 61.1222, 0.37 ) }
    dend_56 { pt3dadd( -152.85, 130.641, 64.519, 0.37 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 7/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -31.8779, 79.4263, 44.1686, 0.29 ) }
    dend_52 { pt3dadd( -34.4891, 86.4373, 49.3331, 0.29 ) }
    dend_52 { pt3dadd( -36.671, 94.037, 53.8652, 0.29 ) }
    dend_52 { pt3dadd( -37.1806, 101.667, 58.8223, 0.29 ) }
    dend_52 { pt3dadd( -37.1095, 109.081, 64.1046, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 12/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -31.8779, 79.4263, 44.1686, 0.74 ) }
    dend_51 { pt3dadd( -35.2068, 85.8489, 49.12, 0.29 ) }
    dend_51 { pt3dadd( -38.673, 91.6192, 54.701, 0.29 ) }
    dend_51 { pt3dadd( -42.4391, 97.4795, 59.9921, 0.29 ) }
    dend_51 { pt3dadd( -45.738, 102.755, 66.1131, 0.29 ) }
    dend_51 { pt3dadd( -49.8606, 107.373, 72.2424, 0.29 ) }
    dend_51 { pt3dadd( -53.926, 111.739, 78.5815, 0.29 ) }
    dend_51 { pt3dadd( -57.7354, 115.965, 85.1644, 0.29 ) }
    dend_51 { pt3dadd( -62.2349, 121.335, 90.3792, 0.29 ) }
    dend_51 { pt3dadd( -66.2166, 127.15, 95.5597, 0.29 ) }
    dend_51 { pt3dadd( -70.7628, 132.101, 101.118, 0.29 ) }
    dend_51 { pt3dadd( -74.4411, 137.138, 107.214, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_34 (entry count 24/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 53.0194, -49.5352, 7.35455, 0.59 ) }
    dend_44 { pt3dadd( 53.8909, -49.6427, 7.71369, 0.59 ) }
    dend_44 { pt3dadd( 54.0671, -49.6597, 7.77953, 0.59 ) }
    dend_44 { pt3dadd( 54.4001, -49.689, 7.89989, 0.59 ) }
    dend_44 { pt3dadd( 55.3386, -49.8089, 8.23359, 0.44 ) }
    dend_44 { pt3dadd( 56.0812, -49.9173, 8.49536, 0.44 ) }
    dend_44 { pt3dadd( 57.0256, -50.0846, 8.76991, 0.81 ) }
    dend_44 { pt3dadd( 57.8225, -50.2614, 8.94257, 0.52 ) }
    dend_44 { pt3dadd( 57.881, -50.2802, 8.95364, 0.52 ) }
    dend_44 { pt3dadd( 58.7647, -50.6348, 9.05195, 0.22 ) }
    dend_44 { pt3dadd( 58.8295, -50.6651, 9.05492, 0.22 ) }
    dend_44 { pt3dadd( 59.8638, -51.2618, 9.03062, 0.52 ) }
    dend_44 { pt3dadd( 60.7266, -51.8487, 8.95839, 0.44 ) }
    dend_44 { pt3dadd( 61.6627, -52.5441, 8.84331, 0.44 ) }
    dend_44 { pt3dadd( 62.5159, -53.2068, 8.71945, 0.22 ) }
    dend_44 { pt3dadd( 62.6204, -53.2907, 8.70208, 0.22 ) }
    dend_44 { pt3dadd( 63.0311, -53.6302, 8.64019, 0.22 ) }
    dend_44 { pt3dadd( 63.2721, -53.8526, 8.65024, 0.22 ) }
    dend_44 { pt3dadd( 63.7101, -54.322, 8.78589, 0.22 ) }
    dend_44 { pt3dadd( 63.75, -54.373, 8.8172, 0.22 ) }
    dend_44 { pt3dadd( 64.0262, -54.773, 9.10682, 1.03 ) }
    dend_44 { pt3dadd( 64.0557, -54.8191, 9.13797, 1.03 ) }
    dend_44 { pt3dadd( 64.8404, -56.1504, 9.98261, 0.22 ) }
    dend_44 { pt3dadd( 65.2239, -56.872, 10.4024, 0.22 ) }
    dend_44 { pt3dadd( 65.2468, -56.922, 10.4333, 0.22 ) }
    dend_44 { pt3dadd( 65.5223, -57.5017, 10.788, 0.37 ) }
    dend_44 { pt3dadd( 65.7198, -57.913, 11.06, 0.59 ) }
    dend_44 { pt3dadd( 65.9068, -58.2419, 11.2823, 0.59 ) }
    dend_44 { pt3dadd( 65.9394, -58.2873, 11.3113, 0.59 ) }
    dend_44 { pt3dadd( 66.5783, -59.0563, 11.9161, 0.22 ) }
    dend_44 { pt3dadd( 67.0743, -59.5888, 12.382, 0.22 ) }
    dend_44 { pt3dadd( 67.5901, -60.0884, 12.8718, 0.74 ) }
    dend_44 { pt3dadd( 67.9715, -60.4265, 13.2222, 0.74 ) }
    dend_44 { pt3dadd( 68.4829, -60.8686, 13.6362, 0.74 ) }
    dend_44 { pt3dadd( 68.5248, -60.909, 13.6598, 0.74 ) }
    dend_44 { pt3dadd( 68.9377, -61.3285, 13.7974, 0.37 ) }
    dend_44 { pt3dadd( 69.028, -61.4278, 13.815, 0.22 ) }
    dend_44 { pt3dadd( 69.0707, -61.4743, 13.8178, 0.22 ) }
    dend_44 { pt3dadd( 69.6376, -62.1048, 13.833, 0.22 ) }
    dend_44 { pt3dadd( 70.7581, -63.3638, 13.8269, 0.22 ) }
    dend_44 { pt3dadd( 70.8026, -63.4087, 13.8272, 0.22 ) }
    dend_44 { pt3dadd( 71.2946, -63.8706, 13.83, 0.59 ) }
    dend_44 { pt3dadd( 71.785, -64.3174, 13.8357, 1.03 ) }
    dend_44 { pt3dadd( 72.278, -64.7499, 13.8448, 0.44 ) }
    dend_44 { pt3dadd( 72.5078, -64.9328, 13.8531, 0.22 ) }
    dend_44 { pt3dadd( 74.0468, -65.9707, 13.9641, 0.22 ) }
    dend_44 { pt3dadd( 74.0988, -66.0057, 13.9689, 0.22 ) }
    dend_44 { pt3dadd( 82.0359, -69.8132, 15.5589, 0.22 ) }
    dend_44 { pt3dadd( 89.2537, -75.1366, 16.1567, 0.22 ) }
    dend_44 { pt3dadd( 97.3103, -79.0432, 15.9433, 0.22 ) }
    dend_44 { pt3dadd( 104.746, -84.0839, 16.0731, 0.22 ) }
    dend_44 { pt3dadd( 111.486, -90.0628, 16.1941, 0.22 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 76/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 53.0194, -49.5352, 7.35455, 0.88 ) }
    dend_35 { pt3dadd( 53.1918, -49.9567, 7.25485, 0.88 ) }
    dend_35 { pt3dadd( 53.4786, -50.8351, 7.04361, 0.66 ) }
    dend_35 { pt3dadd( 53.494, -50.8876, 7.03092, 0.66 ) }
    dend_35 { pt3dadd( 53.7364, -51.6662, 6.85467, 0.66 ) }
    dend_35 { pt3dadd( 54.0717, -52.7166, 6.62505, 0.59 ) }
    dend_35 { pt3dadd( 54.2794, -53.3154, 6.47052, 0.81 ) }
    dend_35 { pt3dadd( 54.5519, -54.0799, 6.2655, 0.81 ) }
    dend_35 { pt3dadd( 54.5944, -54.1873, 6.23185, 0.81 ) }
    dend_35 { pt3dadd( 54.9122, -54.9141, 5.98344, 0.52 ) }
    dend_35 { pt3dadd( 54.938, -54.9607, 5.96611, 0.52 ) }
    dend_35 { pt3dadd( 55.5192, -55.5025, 5.79485, 0.37 ) }
    dend_35 { pt3dadd( 55.5857, -55.5428, 5.78579, 0.37 ) }
    dend_35 { pt3dadd( 56.1377, -55.7675, 5.77114, 0.37 ) }
    dend_35 { pt3dadd( 56.459, -55.8742, 5.7813, 0.37 ) }
    dend_35 { pt3dadd( 57.0828, -56.0479, 5.83978, 0.37 ) }
    dend_35 { pt3dadd( 58.2027, -56.3452, 5.918, 0.22 ) }
    dend_35 { pt3dadd( 58.3277, -56.3789, 5.93024, 0.22 ) }
    dend_35 { pt3dadd( 59.0144, -56.6052, 5.9735, 0.81 ) }
    dend_35 { pt3dadd( 59.1254, -56.6453, 5.97719, 0.81 ) }
    dend_35 { pt3dadd( 59.6544, -56.9221, 5.9904, 1.18 ) }
    dend_35 { pt3dadd( 60.5092, -57.5626, 6.01496, 0.88 ) }
    dend_35 { pt3dadd( 60.8226, -57.8871, 6.02729, 0.29 ) }
    dend_35 { pt3dadd( 61.5263, -58.7602, 6.07923, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_35 { pt3dadd( 61.5677, -58.827, 6.08706, 0.29 ) }
    dend_35 { pt3dadd( 62.2078, -60.0139, 6.26448, 0.29 ) }
    dend_35 { pt3dadd( 62.4509, -60.4957, 6.32213, 0.81 ) }
    dend_35 { pt3dadd( 62.7671, -61.131, 6.39343, 0.81 ) }
    dend_35 { pt3dadd( 63.0681, -61.7403, 6.45055, 0.81 ) }
    dend_35 { pt3dadd( 63.6694, -62.9512, 6.56015, 0.44 ) }
    dend_35 { pt3dadd( 64.0829, -63.7768, 6.61381, 0.44 ) }
    dend_35 { pt3dadd( 64.6187, -64.7939, 6.61899, 1.11 ) }
    dend_35 { pt3dadd( 64.8588, -65.214, 6.60403, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 9/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 70.9504, -38.1968, 44.4535, 0.29 ) }
    dend_33 { pt3dadd( 75.205, -38.2026, 50.9836, 0.29 ) }
    dend_33 { pt3dadd( 78.296, -38.7382, 58.1263, 0.29 ) }
    dend_33 { pt3dadd( 80.3458, -40.5424, 65.4579, 0.29 ) }
    dend_33 { pt3dadd( 80.7039, -43.6764, 72.6595, 0.29 ) }
    dend_33 { pt3dadd( 82.0084, -46.5116, 79.8612, 0.29 ) }
    dend_33 { pt3dadd( 81.9355, -49.4114, 87.1653, 0.29 ) }
    dend_33 { pt3dadd( 81.2492, -52.066, 94.5276, 0.29 ) }
    dend_33 { pt3dadd( 80.4619, -56.3951, 101.091, 0.29 ) }
    dend_33 { pt3dadd( 80.8179, -60.6838, 107.706, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 19/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 70.9504, -38.1968, 44.4535, 0.74 ) }
    dend_32 { pt3dadd( 83.9243, -40.6171, 49.6295, 0.29 ) }
    dend_32 { pt3dadd( 96.6053, -40.6827, 55.9595, 0.29 ) }
    dend_32 { pt3dadd( 110.221, -38.7251, 59.4426, 0.29 ) }
    dend_32 { pt3dadd( 123.313, -36.5944, 64.4783, 0.29 ) }
    dend_32 { pt3dadd( 136.988, -37.1953, 68.1525, 0.29 ) }
    dend_32 { pt3dadd( 150.239, -35.3369, 72.8642, 0.29 ) }
    dend_32 { pt3dadd( 163.553, -30.967, 75.3183, 0.29 ) }
    dend_32 { pt3dadd( 176.039, -25.6753, 79.6514, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 28/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 29.34, -58.0407, 44.0932, 0.37 ) }
    dend_29 { pt3dadd( 29.6843, -58.3258, 44.298, 0.37 ) }
    dend_29 { pt3dadd( 30.2845, -58.9999, 44.8249, 0.37 ) }
    dend_29 { pt3dadd( 30.9266, -60.0411, 45.5666, 0.22 ) }
    dend_29 { pt3dadd( 30.9527, -60.097, 45.601, 0.22 ) }
    dend_29 { pt3dadd( 31.5167, -61.8171, 46.3997, 0.52 ) }
    dend_29 { pt3dadd( 31.6836, -62.4548, 46.6476, 0.52 ) }
    dend_29 { pt3dadd( 31.8313, -63.7043, 47.0035, 0.37 ) }
    dend_29 { pt3dadd( 31.8366, -65.0118, 47.1755, 0.22 ) }
    dend_29 { pt3dadd( 31.8006, -65.8146, 47.1784, 0.22 ) }
    dend_29 { pt3dadd( 31.7117, -67.2736, 46.9415, 0.22 ) }
    dend_29 { pt3dadd( 31.7045, -67.3405, 46.9192, 0.22 ) }
    dend_29 { pt3dadd( 31.5954, -68.1108, 46.5933, 0.22 ) }
    dend_29 { pt3dadd( 31.2983, -69.8634, 45.7783, 0.22 ) }
    dend_29 { pt3dadd( 31.1826, -70.655, 45.4166, 0.22 ) }
    dend_29 { pt3dadd( 31.0343, -72.2444, 44.7212, 0.22 ) }
    dend_29 { pt3dadd( 30.9166, -74.673, 43.7037, 0.15 ) }
    dend_29 { pt3dadd( 30.8942, -76.7164, 42.8815, 0.15 ) }
    dend_29 { pt3dadd( 30.9738, -79.4113, 41.8058, 0.15 ) }
    dend_29 { pt3dadd( 31.108, -81.8951, 40.8117, 0.15 ) }
    dend_29 { pt3dadd( 31.3797, -85.4259, 39.4335, 0.15 ) }
    dend_29 { pt3dadd( 31.5294, -86.6316, 38.9816, 0.59 ) }
    dend_29 { pt3dadd( 31.7521, -87.7986, 38.559, 0.59 ) }
    dend_29 { pt3dadd( 32.0227, -88.8707, 38.1809, 0.29 ) }
    dend_29 { pt3dadd( 32.2404, -89.4644, 37.9534, 0.29 ) }
    dend_29 { pt3dadd( 34.4208, -99.2635, 36.2628, 0.29 ) }
    dend_29 { pt3dadd( 35.0884, -109.385, 35.7967, 0.29 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 55/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 29.34, -58.0407, 44.0932, 0.59 ) }
    dend_28 { pt3dadd( 29.6443, -58.1723, 44.2543, 0.59 ) }
    dend_28 { pt3dadd( 30.4561, -58.6357, 44.8165, 0.22 ) }
    dend_28 { pt3dadd( 30.872, -58.8353, 45.0456, 0.22 ) }
    dend_28 { pt3dadd( 32.432, -59.5502, 45.8451, 0.22 ) }
    dend_28 { pt3dadd( 32.4851, -59.571, 45.8659, 0.22 ) }
    dend_28 { pt3dadd( 33.8779, -60.1168, 46.4119, 0.22 ) }
    dend_28 { pt3dadd( 35.482, -60.7843, 47.0578, 0.22 ) }
    dend_28 { pt3dadd( 37.5302, -61.7171, 47.9157, 0.22 ) }
    dend_28 { pt3dadd( 37.5828, -61.7401, 47.9353, 0.22 ) }
    dend_28 { pt3dadd( 39.3891, -62.3561, 48.4276, 0.22 ) }
    dend_28 { pt3dadd( 47.0765, -64.6456, 51.6723, 0.22 ) }
    dend_28 { pt3dadd( 54.0574, -66.563, 56.3815, 0.22 ) }
    dend_28 { pt3dadd( 61.9285, -67.4758, 59.7963, 0.22 ) }
    dend_28 { pt3dadd( 69.8475, -66.7647, 63.1033, 0.22 ) }
    dend_28 { pt3dadd( 77.9689, -67.8199, 65.836, 0.22 ) }
    dend_28 { pt3dadd( 85.4599, -68.011, 70.0892, 0.22 ) }
    dend_28 { pt3dadd( 93.0918, -68.1851, 74.0862, 0.22 ) }
    dend_28 { pt3dadd( 100.586, -67.8175, 78.314, 0.22 ) }
    dend_28 { pt3dadd( 106.933, -66.4776, 83.9692, 0.22 ) }
    dend_28 { pt3dadd( 113.159, -66.0217, 89.8958, 0.22 ) }
    dend_28 { pt3dadd( 119.755, -64.6823, 95.2591, 0.22 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 77/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -11.502, -28.5691, -13.0291, 0.96 ) }
    dend_18 { pt3dadd( -11.0926, -30.954, -18.7698, 0.96 ) }
    dend_18 { pt3dadd( -10.9864, -31.5732, -20.2604, 0.96 ) }
    dend_18 { pt3dadd( -10.9806, -31.6066, -20.3406, 0.96 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 81/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -11.502, -28.5691, -13.0291, 1.4 ) }
    dend_17 { pt3dadd( -11.9288, -28.8459, -12.8792, 1.4 ) }
    dend_17 { pt3dadd( -13.3333, -29.7693, -12.3444, 1.03 ) }
    dend_17 { pt3dadd( -13.4291, -29.8342, -12.3029, 1.03 ) }
    dend_17 { pt3dadd( -14.6103, -30.6632, -11.7759, 0.59 ) }
    dend_17 { pt3dadd( -15.8054, -31.6116, -11.1423, 0.59 ) }
    dend_17 { pt3dadd( -17.0419, -32.6596, -10.4988, 0.66 ) }
    dend_17 { pt3dadd( -17.1083, -32.7235, -10.4639, 0.66 ) }
    dend_17 { pt3dadd( -18.3254, -34.0471, -9.8092, 0.66 ) }
    dend_17 { pt3dadd( -19.26, -35.1703, -9.33439, 0.44 ) }
    dend_17 { pt3dadd( -20.474, -36.8236, -8.74459, 0.44 ) }
    dend_17 { pt3dadd( -21.1422, -37.84, -8.45834, 0.66 ) }
    dend_17 { pt3dadd( -22.0318, -39.2108, -8.13505, 0.66 ) }
    dend_17 { pt3dadd( -22.1535, -39.3706, -8.09434, 0.66 ) }
    dend_17 { pt3dadd( -23.3452, -40.5718, -7.73029, 0.66 ) }
    dend_17 { pt3dadd( -23.4466, -40.6435, -7.68921, 0.66 ) }
    dend_17 { pt3dadd( -24.4519, -41.1118, -7.2242, 0.66 ) }
    dend_17 { pt3dadd( -25.7302, -41.5627, -6.48801, 0.88 ) }
    dend_17 { pt3dadd( -27.4688, -42.0672, -5.41997, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_17 { pt3dadd( -28.8961, -42.4497, -4.51043, 0.74 ) }
    dend_17 { pt3dadd( -30.7164, -42.9625, -3.30966, 0.66 ) }
    dend_17 { pt3dadd( -32.3848, -43.4856, -2.1942, 0.66 ) }
    dend_17 { pt3dadd( -33.4151, -43.8825, -1.47615, 0.66 ) }
    dend_17 { pt3dadd( -34.858, -44.6152, -0.400252, 0.66 ) }
    dend_17 { pt3dadd( -34.9179, -44.6566, -0.354519, 0.66 ) }
    dend_17 { pt3dadd( -36.4287, -45.9719, 0.783343, 0.66 ) }
    dend_17 { pt3dadd( -36.4921, -46.0338, 0.826418, 0.66 ) }
    dend_17 { pt3dadd( -37.7542, -47.283, 1.65433, 0.66 ) }
    dend_17 { pt3dadd( -37.8119, -47.337, 1.68885, 0.66 ) }
    dend_17 { pt3dadd( -39.1985, -48.5142, 2.50088, 0.66 ) }
    dend_17 { pt3dadd( -39.428, -48.6832, 2.62251, 1.03 ) }
    dend_17 { pt3dadd( -40.2938, -49.1966, 3.02319, 0.52 ) }
    dend_17 { pt3dadd( -41.7373, -49.9642, 3.61905, 0.52 ) }
    dend_17 { pt3dadd( -41.8094, -50.0009, 3.64798, 0.52 ) }
    dend_17 { pt3dadd( -42.6557, -50.453, 3.98974, 0.66 ) }
    dend_17 { pt3dadd( -43.7412, -51.0501, 4.42793, 0.66 ) }
    dend_17 { pt3dadd( -44.853, -51.7133, 4.86543, 1.4 ) }
    dend_17 { pt3dadd( -45.5342, -52.1573, 5.1304, 0.81 ) }
    dend_17 { pt3dadd( -46.9173, -53.0899, 5.64722, 0.52 ) }
    dend_17 { pt3dadd( -48.1911, -53.9659, 6.13162, 0.37 ) }
    dend_17 { pt3dadd( -49.2825, -54.7314, 6.55617, 0.81 ) }
    dend_17 { pt3dadd( -50.1593, -55.3839, 6.89789, 0.96 ) }
    dend_17 { pt3dadd( -51.1077, -56.1201, 7.26309, 0.96 ) }
    dend_17 { pt3dadd( -52.3725, -57.1152, 7.73119, 0.66 ) }
    dend_17 { pt3dadd( -53.4048, -57.9219, 8.0845, 0.66 ) }
    dend_17 { pt3dadd( -53.4968, -57.9968, 8.11748, 0.66 ) }
    dend_17 { pt3dadd( -55.0429, -59.2852, 8.68182, 0.66 ) }
    dend_17 { pt3dadd( -55.1071, -59.3391, 8.70223, 0.66 ) }
    dend_17 { pt3dadd( -56.2955, -60.405, 9.01685, 0.66 ) }
    dend_17 { pt3dadd( -57.8992, -61.9408, 9.35865, 0.66 ) }
    dend_17 { pt3dadd( -59.1748, -63.1826, 9.56095, 0.66 ) }
    dend_17 { pt3dadd( -59.2262, -63.2356, 9.56835, 0.66 ) }
    dend_17 { pt3dadd( -60.3587, -64.4598, 9.73511, 0.66 ) }
    dend_17 { pt3dadd( -61.5151, -65.7718, 9.93547, 0.66 ) }
    dend_17 { pt3dadd( -62.0605, -66.3902, 10.0538, 0.44 ) }
    dend_17 { pt3dadd( -62.1181, -66.4527, 10.0697, 0.44 ) }
    dend_17 { pt3dadd( -62.7389, -67.015, 10.2264, 0.44 ) }
    dend_17 { pt3dadd( -63.5515, -67.586, 10.415, 0.44 ) }
    dend_17 { pt3dadd( -64.6967, -68.1594, 10.6199, 0.88 ) }
    dend_17 { pt3dadd( -66.3019, -68.7515, 10.8031, 0.96 ) }
    dend_17 { pt3dadd( -66.991, -68.9679, 10.8499, 0.96 ) }
    dend_17 { pt3dadd( -68.6988, -69.4499, 10.8716, 0.44 ) }
    dend_17 { pt3dadd( -70.3118, -69.8478, 10.7982, 0.44 ) }
    dend_17 { pt3dadd( -71.8468, -70.2315, 10.6511, 0.44 ) }
    dend_17 { pt3dadd( -72.9929, -70.5202, 10.4982, 0.44 ) }
    dend_17 { pt3dadd( -73.0739, -70.5455, 10.4849, 0.44 ) }
    dend_17 { pt3dadd( -73.98, -70.9101, 10.3404, 0.66 ) }
    dend_17 { pt3dadd( -74.0539, -70.9538, 10.3332, 0.66 ) }
    dend_17 { pt3dadd( -75.0135, -71.6884, 10.2111, 0.66 ) }
    dend_17 { pt3dadd( -75.0868, -71.7542, 10.2036, 0.66 ) }
    dend_17 { pt3dadd( -75.8484, -72.4364, 10.0955, 0.52 ) }
    dend_17 { pt3dadd( -76.6838, -73.1078, 9.96129, 0.29 ) }
    dend_17 { pt3dadd( -77.781, -73.8585, 9.76794, 0.29 ) }
    dend_17 { pt3dadd( -78.7828, -74.4682, 9.5722, 0.96 ) }
    dend_17 { pt3dadd( -79.9699, -75.1016, 9.35681, 0.96 ) }
    dend_17 { pt3dadd( -81.3037, -75.7735, 9.19834, 0.88 ) }
    dend_17 { pt3dadd( -82.7305, -76.4367, 9.12375, 0.74 ) }
    dend_17 { pt3dadd( -84.6262, -77.261, 9.18687, 0.52 ) }
    dend_17 { pt3dadd( -84.6941, -77.288, 9.19514, 0.52 ) }
    dend_17 { pt3dadd( -86.2956, -77.9151, 9.55379, 0.52 ) }
    dend_17 { pt3dadd( -87.6883, -78.4336, 9.98578, 0.96 ) }
    dend_17 { pt3dadd( -88.7899, -78.8752, 10.4645, 1.18 ) }
    dend_17 { pt3dadd( -89.8844, -79.3887, 11.0765, 0.59 ) }
    dend_17 { pt3dadd( -90.3339, -79.6393, 11.3709, 0.29 ) }
    dend_17 { pt3dadd( -90.7147, -79.8595, 11.5872, 0.15 ) }
    dend_17 { pt3dadd( -90.7948, -79.9067, 11.619, 0.29 ) }
    dend_17 { pt3dadd( -91.4198, -80.229, 11.6853, 0.29 ) }
    dend_17 { pt3dadd( -91.8914, -80.4293, 11.683, 0.29 ) }
    dend_17 { pt3dadd( -92.5359, -80.6249, 11.5795, 0.29 ) }
    dend_17 { pt3dadd( -93.7305, -80.8896, 11.3666, 0.29 ) }
    dend_17 { pt3dadd( -94.6074, -81.0371, 11.2404, 0.44 ) }
    dend_17 { pt3dadd( -95.7451, -81.1892, 11.1045, 0.96 ) }
    dend_17 { pt3dadd( -96.8687, -81.3224, 11.0027, 1.33 ) }
    dend_17 { pt3dadd( -98.5875, -81.5377, 10.9411, 1.33 ) }
    dend_17 { pt3dadd( -99.6675, -81.7138, 10.9711, 0.52 ) }
    dend_17 { pt3dadd( -100.796, -81.978, 11.0858, 0.22 ) }
    dend_17 { pt3dadd( -100.888, -82.0091, 11.0988, 0.22 ) }
    dend_17 { pt3dadd( -101.82, -82.4525, 11.228, 0.22 ) }
    dend_17 { pt3dadd( -102.572, -82.9041, 11.3248, 0.52 ) }
    dend_17 { pt3dadd( -103.308, -83.4202, 11.4422, 0.88 ) }
    dend_17 { pt3dadd( -103.378, -83.4698, 11.4487, 0.88 ) }
    dend_17 { pt3dadd( -104.117, -83.9775, 11.4792, 0.88 ) }
    dend_17 { pt3dadd( -105.65, -84.9504, 11.5587, 0.22 ) }
    dend_17 { pt3dadd( -105.724, -84.9935, 11.5625, 0.22 ) }
    dend_17 { pt3dadd( -106.979, -85.6799, 11.6725, 0.22 ) }
    dend_17 { pt3dadd( -107.652, -86.0296, 11.7459, 0.22 ) }
    dend_17 { pt3dadd( -107.717, -86.0629, 11.7548, 0.22 ) }
    dend_17 { pt3dadd( -108.704, -86.5946, 11.9119, 0.22 ) }
    dend_17 { pt3dadd( -109.038, -86.8073, 11.9771, 0.22 ) }
    dend_17 { pt3dadd( -110.608, -87.8929, 12.2411, 0.22 ) }
    dend_17 { pt3dadd( -111.444, -88.5415, 12.3556, 1.25 ) }
    dend_17 { pt3dadd( -111.507, -88.5993, 12.3633, 1.25 ) }
    dend_17 { pt3dadd( -112.441, -89.506, 12.4641, 1.62 ) }
    dend_17 { pt3dadd( -113.236, -90.3407, 12.5143, 1.62 ) }
    dend_17 { pt3dadd( -114.045, -91.2551, 12.5603, 0.22 ) }
    dend_17 { pt3dadd( -114.396, -91.7063, 12.5794, 0.22 ) }
    dend_17 { pt3dadd( -115.762, -93.6513, 12.6802, 0.22 ) }
    dend_17 { pt3dadd( -115.865, -93.8067, 12.6872, 0.22 ) }
    dend_17 { pt3dadd( -116.357, -94.595, 12.7194, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_17 { pt3dadd( -116.89, -95.4737, 12.7528, 0.96 ) }
    dend_17 { pt3dadd( -117.663, -96.7782, 12.8029, 0.96 ) }
    dend_17 { pt3dadd( -118.269, -97.6943, 12.8659, 0.15 ) }
    dend_17 { pt3dadd( -118.867, -98.524, 12.9478, 0.15 ) }
    dend_17 { pt3dadd( -118.929, -98.6, 12.9615, 0.15 ) }
    dend_17 { pt3dadd( -119.938, -99.6833, 13.2674, 0.15 ) }
    dend_17 { pt3dadd( -120.113, -99.8563, 13.3267, 0.15 ) }
    dend_17 { pt3dadd( -121.042, -100.68, 13.6088, 0.15 ) }
    dend_17 { pt3dadd( -121.106, -100.735, 13.626, 0.15 ) }
    dend_17 { pt3dadd( -122.345, -101.786, 13.9123, 0.15 ) }
    dend_17 { pt3dadd( -122.727, -102.122, 13.9874, 0.88 ) }
    dend_17 { pt3dadd( -123.564, -102.877, 14.1208, 1.11 ) }
    dend_17 { pt3dadd( -124.39, -103.658, 14.2577, 0.66 ) }
    dend_17 { pt3dadd( -124.763, -104.033, 14.3108, 0.22 ) }
    dend_17 { pt3dadd( -125.286, -104.535, 14.385, 0.15 ) }
    dend_17 { pt3dadd( -125.35, -104.592, 14.3931, 0.15 ) }
    dend_17 { pt3dadd( -126.123, -105.265, 14.5391, 0.15 ) }
    dend_17 { pt3dadd( -126.755, -105.78, 14.7069, 0.15 ) }
    dend_17 { pt3dadd( -127.218, -106.169, 14.8619, 0.37 ) }
    dend_17 { pt3dadd( -127.566, -106.454, 14.9743, 0.15 ) }
    dend_17 { pt3dadd( -127.714, -106.572, 15.0131, 0.15 ) }
    dend_17 { pt3dadd( -128.552, -107.262, 15.1925, 0.15 ) }
    dend_17 { pt3dadd( -129.339, -107.921, 15.326, 0.15 ) }
    dend_17 { pt3dadd( -129.763, -108.265, 15.3865, 0.81 ) }
    dend_17 { pt3dadd( -130.633, -108.954, 15.5184, 0.81 ) }
    dend_17 { pt3dadd( -131.356, -109.483, 15.6388, 0.22 ) }
    dend_17 { pt3dadd( -132.183, -110.039, 15.7875, 0.22 ) }
    dend_17 { pt3dadd( -132.338, -110.136, 15.8123, 0.22 ) }
    dend_17 { pt3dadd( -133.19, -110.708, 15.929, 0.22 ) }
    dend_17 { pt3dadd( -133.26, -110.757, 15.9378, 0.22 ) }
    dend_17 { pt3dadd( -134.691, -111.86, 16.107, 0.22 ) }
    dend_17 { pt3dadd( -134.837, -111.973, 16.1041, 0.22 ) }
    dend_17 { pt3dadd( -135.823, -112.679, 15.6371, 0.22 ) }
    dend_17 { pt3dadd( -136.612, -113.259, 15.0822, 0.22 ) }
    dend_17 { pt3dadd( -136.727, -113.333, 14.9777, 0.22 ) }
    dend_17 { pt3dadd( -137.239, -113.643, 14.4849, 0.96 ) }
    dend_17 { pt3dadd( -138.742, -114.517, 13.0338, 0.66 ) }
    dend_17 { pt3dadd( -141.211, -115.792, 10.7565, 0.22 ) }
    dend_17 { pt3dadd( -142.091, -116.219, 10.0077, 0.22 ) }
    dend_17 { pt3dadd( -144.178, -117.266, 8.39272, 0.52 ) }
    dend_17 { pt3dadd( -144.875, -117.642, 7.91436, 0.96 ) }
    dend_17 { pt3dadd( -145.991, -118.268, 7.28052, 0.96 ) }
    dend_17 { pt3dadd( -147.275, -119.086, 6.81818, 0.15 ) }
    dend_17 { pt3dadd( -148.516, -119.974, 6.63204, 0.22 ) }
    dend_17 { pt3dadd( -149.746, -120.908, 6.56838, 0.22 ) }
    dend_17 { pt3dadd( -150.082, -121.203, 6.60991, 0.22 ) }
    dend_17 { pt3dadd( -150.552, -121.637, 6.71984, 0.44 ) }
    dend_17 { pt3dadd( -151.093, -122.234, 6.94389, 0.74 ) }
    dend_17 { pt3dadd( -151.143, -122.296, 6.97605, 0.74 ) }
    dend_17 { pt3dadd( -151.667, -122.871, 7.25687, 0.74 ) }
    dend_17 { pt3dadd( -151.725, -122.929, 7.28396, 0.74 ) }
    dend_17 { pt3dadd( -152.653, -123.905, 7.66196, 0.22 ) }
    dend_17 { pt3dadd( -153.7, -124.976, 7.97756, 0.22 ) }
    dend_17 { pt3dadd( -153.76, -125.036, 7.9927, 0.22 ) }
    dend_17 { pt3dadd( -154.835, -126.024, 8.23209, 0.22 ) }
    dend_17 { pt3dadd( -155.56, -126.665, 8.37526, 0.22 ) }
    dend_17 { pt3dadd( -155.702, -126.782, 8.40114, 0.22 ) }
    dend_17 { pt3dadd( -157.761, -128.34, 8.66265, 0.22 ) }
    dend_17 { pt3dadd( -157.936, -128.466, 8.68581, 0.22 ) }
    dend_17 { pt3dadd( -159.927, -130.015, 9.09539, 0.22 ) }
    dend_17 { pt3dadd( -160.223, -130.26, 9.17641, 0.22 ) }
    dend_17 { pt3dadd( -161.075, -130.974, 9.43447, 0.52 ) }
    dend_17 { pt3dadd( -161.973, -131.72, 9.73508, 1.33 ) }
    dend_17 { pt3dadd( -162.849, -132.437, 10.0647, 1.55 ) }
    dend_17 { pt3dadd( -164.417, -133.671, 10.6916, 0.37 ) }
    dend_17 { pt3dadd( -164.894, -134.035, 10.9036, 0.22 ) }
    dend_17 { pt3dadd( -165.227, -134.285, 11.0545, 0.22 ) }
    dend_17 { pt3dadd( -166.314, -135.12, 11.5438, 0.22 ) }
    dend_17 { pt3dadd( -166.446, -135.229, 11.6142, 0.22 ) }
    dend_17 { pt3dadd( -166.976, -135.661, 11.8725, 0.22 ) }
    dend_17 { pt3dadd( -167.067, -135.736, 11.9035, 0.22 ) }
    dend_17 { pt3dadd( -167.49, -136.159, 12.082, 0.59 ) }
    dend_17 { pt3dadd( -168.043, -136.734, 12.334, 0.59 ) }
    dend_17 { pt3dadd( -168.79, -137.588, 12.6977, 0.22 ) }
    dend_17 { pt3dadd( -168.924, -137.729, 12.7621, 0.22 ) }
    dend_17 { pt3dadd( -169.361, -138.16, 12.9742, 0.22 ) }
    dend_17 { pt3dadd( -169.747, -138.514, 13.1477, 0.22 ) }
    dend_17 { pt3dadd( -171.024, -139.595, 13.6954, 0.22 ) }
    dend_17 { pt3dadd( -171.231, -139.768, 13.7854, 0.66 ) }
    dend_17 { pt3dadd( -171.57, -140.042, 13.9169, 0.22 ) }
    dend_17 { pt3dadd( -171.633, -140.093, 13.9462, 0.22 ) }
    dend_17 { pt3dadd( -172.69, -140.966, 14.5156, 0.22 ) }
    dend_17 { pt3dadd( -172.775, -141.037, 14.566, 0.22 ) }
    dend_17 { pt3dadd( -173.382, -141.527, 14.9486, 0.66 ) }
    dend_17 { pt3dadd( -174.173, -142.108, 15.4388, 0.66 ) }
    dend_17 { pt3dadd( -174.966, -142.72, 15.9034, 0.22 ) }
    dend_17 { pt3dadd( -175.028, -142.768, 15.9385, 0.22 ) }
    dend_17 { pt3dadd( -175.707, -143.221, 16.1957, 0.22 ) }
    dend_17 { pt3dadd( -176.395, -143.628, 16.364, 0.22 ) }
    dend_17 { pt3dadd( -176.647, -143.754, 16.3791, 0.22 ) }
    dend_17 { pt3dadd( -178.879, -144.753, 16.2787, 0.22 ) }
    dend_17 { pt3dadd( -178.97, -144.79, 16.2685, 0.22 ) }
    dend_17 { pt3dadd( -181.093, -145.585, 15.997, 0.15 ) }
    dend_17 { pt3dadd( -181.944, -145.894, 15.8729, 1.11 ) }
    dend_17 { pt3dadd( -183.495, -146.375, 15.4822, 0.44 ) }
    dend_17 { pt3dadd( -184.176, -146.543, 15.2257, 0.44 ) }
    dend_17 { pt3dadd( -184.339, -146.582, 15.1515, 0.44 ) }
    dend_17 { pt3dadd( -185.718, -146.953, 14.4857, 0.44 ) }
    dend_17 { pt3dadd( -186.576, -147.193, 13.9768, 0.81 ) }
    dend_17 { pt3dadd( -189.892, -148.211, 11.8265, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_17 { pt3dadd( -192.556, -149.079, 10.0253, 0.74 ) }
    dend_17 { pt3dadd( -193.459, -149.4, 9.40408, 0.74 ) }
    dend_17 { pt3dadd( -193.535, -149.431, 9.35081, 0.74 ) }
    dend_17 { pt3dadd( -196.741, -150.805, 6.92225, 0.22 ) }
    dend_17 { pt3dadd( -198.007, -151.39, 5.93926, 0.22 ) }
    dend_17 { pt3dadd( -198.22, -151.516, 5.79196, 0.22 ) }
    dend_17 { pt3dadd( -199.515, -152.38, 5.00189, 0.22 ) }
    dend_17 { pt3dadd( -200.04, -152.733, 4.72425, 0.88 ) }
    dend_17 { pt3dadd( -202.376, -154.399, 3.61328, 0.22 ) }
    dend_17 { pt3dadd( -202.529, -154.524, 3.56051, 0.22 ) }
    dend_17 { pt3dadd( -204.467, -156.055, 2.7598, 0.22 ) }
    dend_17 { pt3dadd( -204.815, -156.323, 2.60939, 0.81 ) }
    dend_17 { pt3dadd( -205.66, -156.93, 2.23082, 0.52 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 13/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -9.38055, -31.6202, 0.823123, 0.29 ) }
    dend_11 { pt3dadd( -8.46496, -31.9978, -4.80753, 0.29 ) }
    dend_11 { pt3dadd( -8.24089, -31.9921, -5.66302, 0.44 ) }
    dend_11 { pt3dadd( -8.21405, -31.9847, -5.72907, 0.44 ) }
    dend_11 { pt3dadd( -7.53827, -31.7438, -7.05802, 0.44 ) }
    dend_11 { pt3dadd( -8.29395, -32.0712, -5.8277, 0.44 ) }
    dend_11 { pt3dadd( -8.36734, -32.1058, -5.72197, 0.44 ) }
    dend_11 { pt3dadd( -9.44115, -32.7431, -4.5281, 0.44 ) }
    dend_11 { pt3dadd( -10.1014, -33.1185, -3.87955, 0.44 ) }
    dend_11 { pt3dadd( -10.1494, -33.1501, -3.83616, 0.44 ) }
    dend_11 { pt3dadd( -10.5484, -33.4564, -3.53864, 0.66 ) }
    dend_11 { pt3dadd( -10.591, -33.5074, -3.50975, 0.66 ) }
    dend_11 { pt3dadd( -11.0688, -34.2204, -3.24626, 0.66 ) }
    dend_11 { pt3dadd( -11.101, -34.2845, -3.23261, 0.66 ) }
    dend_11 { pt3dadd( -11.5344, -35.1491, -3.04212, 0.44 ) }
    dend_11 { pt3dadd( -11.5673, -35.2126, -3.02749, 0.44 ) }
    dend_11 { pt3dadd( -12.0195, -36.1126, -2.79728, 0.44 ) }
    dend_11 { pt3dadd( -12.0519, -36.1757, -2.78016, 0.44 ) }
    dend_11 { pt3dadd( -12.4795, -37.0602, -2.55341, 0.44 ) }
    dend_11 { pt3dadd( -12.7505, -37.6772, -2.3549, 0.74 ) }
    dend_11 { pt3dadd( -13.0091, -38.332, -2.02866, 0.74 ) }
    dend_11 { pt3dadd( -13.3518, -39.2209, -1.50236, 0.59 ) }
    dend_11 { pt3dadd( -13.3765, -39.2871, -1.45852, 0.59 ) }
    dend_11 { pt3dadd( -13.8289, -40.468, -0.573078, 0.59 ) }
    dend_11 { pt3dadd( -14.2688, -41.5389, 0.428778, 0.81 ) }
    dend_11 { pt3dadd( -14.9556, -42.9356, 2.06981, 0.52 ) }
    dend_11 { pt3dadd( -15.3663, -43.6429, 3.01593, 0.52 ) }
    dend_11 { pt3dadd( -15.3946, -43.688, 3.07892, 0.52 ) }
    dend_11 { pt3dadd( -16.0681, -44.7852, 4.56524, 0.52 ) }
    dend_11 { pt3dadd( -16.7037, -45.868, 5.91935, 0.74 ) }
    dend_11 { pt3dadd( -17.2429, -46.8611, 6.97864, 0.52 ) }
    dend_11 { pt3dadd( -17.5376, -47.4499, 7.5118, 0.52 ) }
    dend_11 { pt3dadd( -17.9368, -48.2879, 8.24658, 0.52 ) }
    dend_11 { pt3dadd( -18.6075, -49.4993, 9.25584, 0.52 ) }
    dend_11 { pt3dadd( -19.3244, -50.5035, 10.0105, 0.81 ) }
    dend_11 { pt3dadd( -19.3673, -50.564, 10.0476, 0.81 ) }
    dend_11 { pt3dadd( -19.7404, -51.0545, 10.338, 0.74 ) }
    dend_11 { pt3dadd( -20.7948, -52.0468, 11.1084, 0.59 ) }
    dend_11 { pt3dadd( -22.029, -52.6227, 11.8623, 0.81 ) }
    dend_11 { pt3dadd( -23.1769, -52.7641, 12.4547, 0.81 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 53/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -9.38055, -31.6202, 0.823123, 0.74 ) }
    dend_4 { pt3dadd( -9.38729, -31.7738, 0.782121, 0.74 ) }
    dend_4 { pt3dadd( -9.45655, -32.4606, 0.5866, 1.18 ) }
    dend_4 { pt3dadd( -9.596, -33.5706, 0.263979, 1.03 ) }
    dend_4 { pt3dadd( -9.80552, -35.2999, -0.233068, 0.74 ) }
    dend_4 { pt3dadd( -9.99188, -36.7322, -0.685011, 0.66 ) }
    dend_4 { pt3dadd( -10.2277, -38.4135, -1.2188, 0.66 ) }
    dend_4 { pt3dadd( -10.3334, -39.0191, -1.45053, 1.03 ) }
    dend_4 { pt3dadd( -10.358, -39.1424, -1.5035, 1.03 ) }
    dend_4 { pt3dadd( -10.4935, -39.8577, -1.81863, 0.81 ) }
    dend_4 { pt3dadd( -10.6437, -41.0939, -2.28643, 0.81 ) }
    dend_4 { pt3dadd( -10.715, -42.4835, -2.71523, 0.81 ) }
    dend_4 { pt3dadd( -10.6915, -44.2063, -3.16005, 0.52 ) }
    dend_4 { pt3dadd( -10.6205, -45.4002, -3.40763, 0.74 ) }
    dend_4 { pt3dadd( -10.4598, -47.2432, -3.60984, 1.03 ) }
    dend_4 { pt3dadd( -10.2283, -49.2694, -3.64241, 0.96 ) }
    dend_4 { pt3dadd( -10.2176, -49.3468, -3.63733, 0.96 ) }
    dend_4 { pt3dadd( -10.0585, -50.4397, -3.51324, 1.18 ) }
    dend_4 { pt3dadd( -9.82773, -52.0873, -3.25665, 1.03 ) }
    dend_4 { pt3dadd( -9.56118, -54.4204, -2.887, 1.03 ) }
    dend_4 { pt3dadd( -9.41741, -56.1544, -2.61331, 0.96 ) }
    dend_4 { pt3dadd( -9.31579, -57.6014, -2.41509, 0.81 ) }
    dend_4 { pt3dadd( -9.23786, -58.6755, -2.27826, 1.03 ) }
    dend_4 { pt3dadd( -9.14341, -59.4482, -2.2009, 0.74 ) }
    dend_4 { pt3dadd( -9.00177, -60.2263, -2.16203, 0.59 ) }
    dend_4 { pt3dadd( -8.98342, -60.2922, -2.16111, 0.59 ) }
    dend_4 { pt3dadd( -8.56296, -61.4617, -2.13015, 0.59 ) }
    dend_4 { pt3dadd( -8.50611, -61.596, -2.11988, 0.59 ) }
    dend_4 { pt3dadd( -7.3795, -64.1951, -1.72385, 0.59 ) }
    dend_4 { pt3dadd( -7.35703, -64.258, -1.71, 0.59 ) }
    dend_4 { pt3dadd( -6.83912, -65.9277, -1.27453, 0.59 ) }
    dend_4 { pt3dadd( -6.8082, -66.0648, -1.23407, 0.59 ) }
    dend_4 { pt3dadd( -6.70008, -66.9894, -0.928331, 1.03 ) }
    dend_4 { pt3dadd( -6.55299, -69.111, -0.179936, 0.81 ) }
    dend_4 { pt3dadd( -6.61034, -71.5618, 0.779271, 0.81 ) }
    dend_4 { pt3dadd( -6.61293, -71.6164, 0.80023, 0.81 ) }
    dend_4 { pt3dadd( -6.73277, -72.8404, 1.24929, 1.55 ) }
    dend_4 { pt3dadd( -6.82954, -73.7072, 1.55656, 1.92 ) }
    // Section: dend_81, id: dend_81, parent: dend_79 (entry count 91/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -12.6893, 131.48, 50.4765, 0.37 ) }
    dend_81 { pt3dadd( -21.3238, 136.167, 56.8273, 0.37 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 93/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -12.6893, 131.48, 50.4765, 0.29 ) }
    dend_80 { pt3dadd( -11.8252, 137.374, 58.8038, 0.37 ) }
    dend_80 { pt3dadd( -11.9804, 143.785, 66.8111, 0.37 ) }
    dend_80 { pt3dadd( -11.583, 148.968, 75.6154, 0.37 ) }
    dend_80 { pt3dadd( -12.5452, 154.941, 83.8915, 0.37 ) }
    dend_80 { pt3dadd( -13.2804, 161.688, 91.6024, 0.37 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 99/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 23.6483, 51.7416, -126.852, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_67 { pt3dadd( 25.8627, 53.6718, -128.999, 0.22 ) }
    dend_67 { pt3dadd( 27.587, 55.2146, -130.651, 0.22 ) }
    dend_67 { pt3dadd( 27.6707, 55.2883, -130.741, 0.22 ) }
    dend_67 { pt3dadd( 29.9939, 57.3812, -133.27, 0.22 ) }
    dend_67 { pt3dadd( 30.6491, 58.0392, -133.972, 1.03 ) }
    dend_67 { pt3dadd( 31.0026, 58.4147, -134.403, 1.03 ) }
    dend_67 { pt3dadd( 31.0437, 58.4645, -134.453, 1.03 ) }
    dend_67 { pt3dadd( 32.1061, 59.9894, -136.171, 0.22 ) }
    dend_67 { pt3dadd( 32.8295, 61.0884, -137.471, 0.22 ) }
    dend_67 { pt3dadd( 33.5532, 62.3942, -138.966, 0.22 ) }
    dend_67 { pt3dadd( 34.5208, 64.5069, -141.511, 0.22 ) }
    dend_67 { pt3dadd( 34.9647, 65.9036, -142.98, 0.22 ) }
    dend_67 { pt3dadd( 35.4849, 68.3037, -145.587, 0.22 ) }
    dend_67 { pt3dadd( 35.4936, 68.3678, -145.656, 0.22 ) }
    dend_67 { pt3dadd( 35.517, 69.8483, -147.167, 0.22 ) }
    dend_67 { pt3dadd( 35.343, 72.7579, -149.684, 0.22 ) }
    dend_67 { pt3dadd( 35.0395, 76.0757, -152.366, 0.22 ) }
    dend_67 { pt3dadd( 34.5691, 80.3217, -155.78, 0.22 ) }
    dend_67 { pt3dadd( 34.5402, 80.6568, -156.035, 0.44 ) }
    dend_67 { pt3dadd( 34.2192, 85.8289, -159.895, 0.15 ) }
    dend_67 { pt3dadd( 34.1931, 89.6242, -162.574, 0.15 ) }
    dend_67 { pt3dadd( 34.4328, 94.8917, -165.914, 0.15 ) }
    dend_67 { pt3dadd( 34.4451, 95.0068, -165.984, 0.15 ) }
    dend_67 { pt3dadd( 34.785, 97.3306, -167.185, 0.15 ) }
    dend_67 { pt3dadd( 34.8116, 97.4568, -167.252, 0.15 ) }
    dend_67 { pt3dadd( 36.1525, 100.544, -169.005, 0.15 ) }
    dend_67 { pt3dadd( 36.2707, 100.72, -169.097, 0.15 ) }
    dend_67 { pt3dadd( 37.1498, 101.821, -169.223, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 28/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 23.6483, 51.7416, -126.852, 0.22 ) }
    dend_66 { pt3dadd( 23.2223, 53.1894, -127.496, 0.22 ) }
    dend_66 { pt3dadd( 22.9635, 54.1233, -127.84, 0.22 ) }
    dend_66 { pt3dadd( 22.9227, 54.2721, -127.907, 0.22 ) }
    dend_66 { pt3dadd( 22.6205, 55.6731, -128.548, 0.22 ) }
    dend_66 { pt3dadd( 22.5644, 56.094, -128.725, 0.66 ) }
    dend_66 { pt3dadd( 22.522, 56.5426, -128.906, 0.22 ) }
    dend_66 { pt3dadd( 22.5118, 57.4914, -129.23, 0.22 ) }
    dend_66 { pt3dadd( 22.6055, 58.8494, -129.703, 0.22 ) }
    dend_66 { pt3dadd( 22.8196, 60.0356, -130.103, 0.22 ) }
    dend_66 { pt3dadd( 23.1868, 61.461, -130.575, 0.22 ) }
    dend_66 { pt3dadd( 23.2009, 61.5076, -130.591, 0.22 ) }
    dend_66 { pt3dadd( 23.4654, 62.2618, -130.833, 0.22 ) }
    dend_66 { pt3dadd( 23.4853, 62.3072, -130.845, 0.22 ) }
    dend_66 { pt3dadd( 24.3779, 64.0755, -131.095, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 43/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -37.1095, 109.081, 64.1046, 0.37 ) }
    dend_54 { pt3dadd( -38.4309, 117.299, 68.7362, 0.37 ) }
    dend_54 { pt3dadd( -39.5022, 125.729, 73.052, 0.37 ) }
    dend_54 { pt3dadd( -39.469, 133.508, 78.491, 0.37 ) }
    dend_54 { pt3dadd( -39.0261, 142.162, 82.4362, 0.37 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 48/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -37.1095, 109.081, 64.1046, 0.29 ) }
    dend_53 { pt3dadd( -38.5268, 118.202, 69.5494, 0.37 ) }
    dend_53 { pt3dadd( -38.7206, 127.429, 74.9845, 0.37 ) }
    dend_53 { pt3dadd( -38.935, 137.243, 79.3367, 0.37 ) }
    dend_53 { pt3dadd( -37.9786, 147.239, 83.1347, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 53/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 64.8588, -65.214, 6.60403, 0.74 ) }
    dend_39 { pt3dadd( 64.3568, -66.3707, 6.73725, 0.74 ) }
    dend_39 { pt3dadd( 64.0479, -67.3962, 6.64754, 0.59 ) }
    dend_39 { pt3dadd( 63.7439, -68.405, 6.55928, 0.59 ) }
    dend_39 { pt3dadd( 63.7265, -68.4629, 6.55421, 0.59 ) }
    dend_39 { pt3dadd( 63.2758, -69.9588, 6.42334, 0.59 ) }
    dend_39 { pt3dadd( 63.2554, -70.0264, 6.41743, 0.59 ) }
    dend_39 { pt3dadd( 62.443, -72.5255, 6.39078, 0.52 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 61/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 64.8588, -65.214, 6.60403, 1.11 ) }
    dend_36 { pt3dadd( 65.2694, -65.4404, 6.48048, 1.11 ) }
    dend_36 { pt3dadd( 66.5524, -66.2791, 6.13978, 0.52 ) }
    dend_36 { pt3dadd( 66.678, -66.3857, 6.11174, 0.52 ) }
    dend_36 { pt3dadd( 67.5615, -67.3002, 5.88757, 0.52 ) }
    dend_36 { pt3dadd( 67.6122, -67.3522, 5.86904, 0.52 ) }
    dend_36 { pt3dadd( 68.5804, -68.3373, 5.46329, 0.74 ) }
    dend_36 { pt3dadd( 68.6342, -68.3986, 5.43694, 0.74 ) }
    dend_36 { pt3dadd( 69.6655, -69.7515, 4.87569, 0.74 ) }
    dend_36 { pt3dadd( 70.3106, -70.6429, 4.44021, 0.74 ) }
    dend_36 { pt3dadd( 70.9924, -71.6348, 3.88533, 0.29 ) }
    dend_36 { pt3dadd( 71.0291, -71.6911, 3.85158, 0.29 ) }
    dend_36 { pt3dadd( 71.2242, -71.9686, 3.65164, 0.29 ) }
    dend_36 { pt3dadd( 71.2689, -72.027, 3.60733, 0.29 ) }
    dend_36 { pt3dadd( 71.8296, -72.6961, 3.05835, 0.29 ) }
    dend_36 { pt3dadd( 72.3392, -73.2723, 2.63643, 0.52 ) }
    dend_36 { pt3dadd( 72.3829, -73.3242, 2.6043, 0.52 ) }
    dend_36 { pt3dadd( 73.3059, -74.3897, 1.94489, 0.52 ) }
    dend_36 { pt3dadd( 73.9528, -75.159, 1.46026, 0.52 ) }
    dend_36 { pt3dadd( 73.9892, -75.2037, 1.43156, 0.52 ) }
    dend_36 { pt3dadd( 74.2711, -75.5736, 1.18166, 0.22 ) }
    dend_36 { pt3dadd( 74.4915, -75.9066, 0.949565, 0.22 ) }
    dend_36 { pt3dadd( 74.5307, -75.9669, 0.902528, 0.22 ) }
    dend_36 { pt3dadd( 74.9644, -76.6829, 0.327642, 0.22 ) }
    dend_36 { pt3dadd( 75.0049, -76.7474, 0.287639, 0.22 ) }
    dend_36 { pt3dadd( 75.7553, -77.9588, -0.159033, 0.22 ) }
    dend_36 { pt3dadd( 75.8422, -78.0991, -0.190256, 0.22 ) }
    dend_36 { pt3dadd( 76.5729, -79.2627, -0.340228, 0.81 ) }
    dend_36 { pt3dadd( 76.9758, -79.8894, -0.375298, 0.81 ) }
    dend_36 { pt3dadd( 78.1236, -81.6399, -0.361467, 0.37 ) }
    dend_36 { pt3dadd( 79.0224, -83.0438, -0.293625, 0.37 ) }
    dend_36 { pt3dadd( 79.4298, -83.7037, -0.226579, 0.44 ) }
    dend_36 { pt3dadd( 79.6065, -84.0026, -0.191859, 0.15 ) }
    dend_36 { pt3dadd( 80.3971, -85.4417, 0.0135358, 0.15 ) }
    dend_36 { pt3dadd( 80.4335, -85.5066, 0.0211838, 0.15 ) }
    dend_36 { pt3dadd( 80.5229, -85.6483, 0.0226439, 0.66 ) }
    dend_36 { pt3dadd( 80.7265, -85.942, -0.0141518, 0.88 ) }
    dend_36 { pt3dadd( 80.7874, -86.0281, -0.025751, 0.88 ) }
    dend_36 { pt3dadd( 81.1967, -86.6207, -0.11176, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_36 { pt3dadd( 88.9257, -93.9639, -0.251657, 0.88 ) }
    dend_36 { pt3dadd( 96.6162, -101.206, -1.82381, 0.88 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -10.9806, -31.6066, -20.3406, 0.59 ) }
    dend_20 { pt3dadd( -8.60865, -32.1272, -26.8751, 0.59 ) }
    dend_20 { pt3dadd( -8.56859, -32.1421, -26.9399, 0.59 ) }
    dend_20 { pt3dadd( -7.47063, -32.7737, -27.524, 0.59 ) }
    dend_20 { pt3dadd( -7.41493, -32.8063, -27.5461, 0.59 ) }
    dend_20 { pt3dadd( -6.05082, -33.5761, -28.3713, 0.59 ) }
    dend_20 { pt3dadd( -5.88734, -33.666, -28.4764, 0.59 ) }
    dend_20 { pt3dadd( -3.68259, -35.0061, -29.5676, 0.59 ) }
    dend_20 { pt3dadd( -2.71298, -35.6201, -30.1837, 1.03 ) }
    dend_20 { pt3dadd( -0.85505, -36.9238, -31.8252, 0.88 ) }
    dend_20 { pt3dadd( 1.09213, -38.4602, -34.2652, 0.74 ) }
    dend_20 { pt3dadd( 1.44248, -38.7656, -34.8435, 0.74 ) }
    dend_20 { pt3dadd( 2.24309, -39.4816, -36.436, 0.74 ) }
    dend_20 { pt3dadd( 2.26856, -39.5035, -36.4951, 0.74 ) }
    dend_20 { pt3dadd( 2.98412, -40.0666, -38.0969, 1.03 ) }
    dend_20 { pt3dadd( 3.97855, -40.8849, -40.148, 0.29 ) }
    dend_20 { pt3dadd( 4.44074, -41.1712, -40.8538, 0.44 ) }
    dend_20 { pt3dadd( 5.36647, -41.5839, -41.8878, 0.88 ) }
    dend_20 { pt3dadd( 6.25046, -41.8541, -42.5791, 1.03 ) }
    dend_20 { pt3dadd( 7.21774, -42.0881, -43.2717, 1.03 ) }
    dend_20 { pt3dadd( 7.27581, -42.0961, -43.3058, 1.03 ) }
    dend_20 { pt3dadd( 8.94708, -42.227, -44.197, 1.03 ) }
    dend_20 { pt3dadd( 10.2646, -42.2758, -44.9759, 0.44 ) }
    dend_20 { pt3dadd( 10.3218, -42.2765, -45.0123, 0.44 ) }
    dend_20 { pt3dadd( 12.4136, -42.3686, -47.0537, 0.74 ) }
    dend_20 { pt3dadd( 13.0299, -42.4859, -47.7833, 0.74 ) }
    dend_20 { pt3dadd( 13.0702, -42.5006, -47.8359, 0.74 ) }
    dend_20 { pt3dadd( 13.3226, -42.6389, -48.1838, 0.74 ) }
    dend_20 { pt3dadd( 13.3649, -42.6664, -48.243, 0.74 ) }
    dend_20 { pt3dadd( 15.3285, -44.2118, -50.9698, 0.88 ) }
    dend_20 { pt3dadd( 16.408, -45.2234, -52.5635, 0.88 ) }
    dend_20 { pt3dadd( 17.6455, -46.3863, -54.4548, 0.59 ) }
    dend_20 { pt3dadd( 18.1021, -46.8027, -55.1527, 0.88 ) }
    dend_20 { pt3dadd( 18.1406, -46.8382, -55.2104, 0.88 ) }
    dend_20 { pt3dadd( 19.0512, -47.7335, -56.6188, 0.52 ) }
    dend_20 { pt3dadd( 20.0261, -48.8029, -58.27, 0.37 ) }
    dend_20 { pt3dadd( 20.4278, -49.3115, -59.1028, 0.37 ) }
    dend_20 { pt3dadd( 20.4542, -49.3467, -59.155, 0.37 ) }
    dend_20 { pt3dadd( 20.9686, -50.0007, -60.0963, 0.37 ) }
    dend_20 { pt3dadd( 21.9711, -51.3114, -61.7527, 0.37 ) }
    dend_20 { pt3dadd( 23.1302, -52.7881, -63.5422, 0.37 ) }
    dend_20 { pt3dadd( 23.2021, -52.8754, -63.6451, 0.37 ) }
    dend_20 { pt3dadd( 23.9943, -53.7711, -64.8327, 0.37 ) }
    dend_20 { pt3dadd( 25.7572, -55.5609, -67.4907, 0.37 ) }
    dend_20 { pt3dadd( 26.3847, -56.1124, -68.4072, 0.37 ) }
    dend_20 { pt3dadd( 27.5128, -56.9563, -69.8978, 0.96 ) }
    dend_20 { pt3dadd( 28.0441, -57.3015, -70.5985, 0.96 ) }
    dend_20 { pt3dadd( 29.8536, -58.4014, -73.0747, 0.44 ) }
    dend_20 { pt3dadd( 29.896, -58.4239, -73.1357, 0.44 ) }
    dend_20 { pt3dadd( 30.4046, -58.6638, -73.8101, 1.33 ) }
    dend_20 { pt3dadd( 30.9297, -58.9, -74.6937, 1.33 ) }
    dend_20 { pt3dadd( 32.8327, -59.7758, -78.0674, 0.66 ) }
    dend_20 { pt3dadd( 32.9296, -59.822, -78.2639, 0.66 ) }
    dend_20 { pt3dadd( 33.8786, -60.3032, -80.2239, 1.55 ) }
    dend_20 { pt3dadd( 34.3168, -60.533, -81.1588, 1.55 ) }
    dend_20 { pt3dadd( 37.6244, -62.2998, -88.5719, 0.81 ) }
    dend_20 { pt3dadd( 38.017, -62.5154, -89.4902, 1.77 ) }
    dend_20 { pt3dadd( 39.5986, -63.4086, -93.1941, 0.44 ) }
    dend_20 { pt3dadd( 40.2477, -63.7915, -94.6939, 0.44 ) }
    dend_20 { pt3dadd( 40.2737, -63.8084, -94.7543, 0.44 ) }
    dend_20 { pt3dadd( 41.1696, -64.4638, -96.7831, 0.88 ) }
    dend_20 { pt3dadd( 41.2029, -64.496, -96.8457, 0.88 ) }
    dend_20 { pt3dadd( 42.0082, -65.3976, -98.4498, 0.37 ) }
    dend_20 { pt3dadd( 42.4724, -65.9519, -99.2521, 0.37 ) }
    dend_20 { pt3dadd( 43.1254, -66.7277, -100.411, 0.74 ) }
    dend_20 { pt3dadd( 43.3991, -67.074, -100.987, 0.74 ) }
    dend_20 { pt3dadd( 44.1128, -68.0371, -102.641, 0.37 ) }
    dend_20 { pt3dadd( 44.1365, -68.0688, -102.696, 0.37 ) }
    dend_20 { pt3dadd( 44.5631, -68.662, -103.743, 0.37 ) }
    dend_20 { pt3dadd( 45.222, -69.5275, -105.313, 1.18 ) }
    dend_20 { pt3dadd( 47.2064, -71.9662, -109.784, 0.44 ) }
    dend_20 { pt3dadd( 47.2323, -71.9936, -109.841, 0.44 ) }
    dend_20 { pt3dadd( 47.699, -72.4417, -110.853, 0.44 ) }
    dend_20 { pt3dadd( 48.5589, -73.1663, -112.645, 0.44 ) }
    dend_20 { pt3dadd( 48.879, -73.3997, -113.281, 0.44 ) }
    dend_20 { pt3dadd( 48.983, -73.4626, -113.457, 0.44 ) }
    dend_20 { pt3dadd( 50.531, -74.1501, -115.496, 0.37 ) }
    dend_20 { pt3dadd( 50.5727, -74.1702, -115.558, 0.37 ) }
    dend_20 { pt3dadd( 51.1312, -74.4384, -116.491, 0.37 ) }
    dend_20 { pt3dadd( 52.0469, -75.0168, -118.314, 0.37 ) }
    dend_20 { pt3dadd( 52.1348, -75.0878, -118.515, 0.37 ) }
    dend_20 { pt3dadd( 52.4586, -75.3966, -119.259, 0.37 ) }
    dend_20 { pt3dadd( 53.4872, -76.535, -121.621, 0.37 ) }
    dend_20 { pt3dadd( 53.5158, -76.5683, -121.685, 0.37 ) }
    dend_20 { pt3dadd( 54.7823, -78.0306, -124.374, 0.15 ) }
    dend_20 { pt3dadd( 55.495, -78.8269, -125.76, 0.88 ) }
    dend_20 { pt3dadd( 55.8672, -79.2296, -126.425, 0.88 ) }
    dend_20 { pt3dadd( 55.8969, -79.2636, -126.476, 0.88 ) }
    dend_20 { pt3dadd( 57.1363, -80.803, -128.655, 0.29 ) }
    dend_20 { pt3dadd( 58.6237, -82.7059, -131.241, 0.29 ) }
    dend_20 { pt3dadd( 59.6501, -84.0454, -132.997, 0.29 ) }
    dend_20 { pt3dadd( 61.0881, -85.9767, -135.506, 0.96 ) }
    dend_20 { pt3dadd( 62.9252, -88.4782, -138.801, 0.22 ) }
    dend_20 { pt3dadd( 63.9603, -89.9109, -140.676, 0.37 ) }
    dend_20 { pt3dadd( 65.0971, -91.5347, -142.771, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 97/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -10.9806, -31.6066, -20.3406, 0.74 ) }
    dend_19 { pt3dadd( -11.5368, -33.433, -21.7043, 0.74 ) }
    dend_19 { pt3dadd( -11.5508, -33.497, -21.7406, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_19 { pt3dadd( -11.7157, -34.4019, -22.1869, 0.74 ) }
    dend_19 { pt3dadd( -11.9519, -35.8703, -22.7871, 0.74 ) }
    dend_19 { pt3dadd( -12.2198, -37.1599, -23.2771, 0.74 ) }
    dend_19 { pt3dadd( -12.243, -37.2364, -23.3081, 0.74 ) }
    dend_19 { pt3dadd( -12.6914, -38.4367, -23.667, 0.74 ) }
    dend_19 { pt3dadd( -12.755, -38.5772, -23.7117, 0.74 ) }
    dend_19 { pt3dadd( -13.2885, -39.5246, -24.0388, 0.74 ) }
    dend_19 { pt3dadd( -13.8554, -40.3574, -24.317, 0.74 ) }
    dend_19 { pt3dadd( -14.6633, -41.519, -24.8294, 0.44 ) }
    dend_19 { pt3dadd( -14.6956, -41.5785, -24.8609, 0.44 ) }
    dend_19 { pt3dadd( -14.9408, -42.185, -25.2853, 0.66 ) }
    dend_19 { pt3dadd( -14.9542, -42.2342, -25.3241, 0.66 ) }
    dend_19 { pt3dadd( -15.0568, -42.8267, -25.8735, 0.96 ) }
    dend_19 { pt3dadd( -15.1774, -44.053, -27.0659, 0.96 ) }
    dend_19 { pt3dadd( -15.2558, -45.2033, -28.3147, 1.18 ) }
    dend_19 { pt3dadd( -15.4057, -46.5281, -30.0676, 1.18 ) }
    dend_19 { pt3dadd( -15.6238, -47.6686, -31.8158, 1.18 ) }
    dend_19 { pt3dadd( -15.9242, -48.7582, -33.6852, 0.96 ) }
    dend_19 { pt3dadd( -15.9534, -48.822, -33.8153, 0.96 ) }
    dend_19 { pt3dadd( -16.5348, -49.5817, -35.7072, 0.88 ) }
    dend_19 { pt3dadd( -17.4564, -50.3712, -38.1044, 0.44 ) }
    dend_19 { pt3dadd( -17.9134, -50.6129, -38.9984, 0.66 ) }
    dend_19 { pt3dadd( -17.9537, -50.6273, -39.0583, 0.66 ) }
    dend_19 { pt3dadd( -18.9818, -50.9498, -40.2693, 0.66 ) }
    dend_19 { pt3dadd( -19.7671, -51.211, -41.0852, 0.44 ) }
    dend_19 { pt3dadd( -19.8288, -51.2346, -41.1375, 0.44 ) }
    dend_19 { pt3dadd( -21.1825, -51.9036, -42.1616, 0.74 ) }
    dend_19 { pt3dadd( -21.7065, -52.2415, -42.6141, 0.74 ) }
    dend_19 { pt3dadd( -21.7496, -52.2792, -42.661, 0.74 ) }
    dend_19 { pt3dadd( -22.2461, -52.9352, -43.7006, 0.44 ) }
    dend_19 { pt3dadd( -22.4646, -53.2516, -44.2041, 0.44 ) }
    dend_19 { pt3dadd( -22.6385, -53.482, -44.5762, 0.44 ) }
    dend_19 { pt3dadd( -23.1122, -54.0986, -45.5104, 0.44 ) }
    dend_19 { pt3dadd( -23.8892, -55.0621, -47.0031, 0.81 ) }
    dend_19 { pt3dadd( -25.4734, -56.9423, -49.9469, 0.96 ) }
    dend_19 { pt3dadd( -26.3087, -57.9447, -51.4751, 1.77 ) }
    dend_19 { pt3dadd( -27.4953, -59.4186, -53.7012, 1.47 ) }
    dend_19 { pt3dadd( -28.0071, -60.0863, -54.6464, 1.47 ) }
    dend_19 { pt3dadd( -28.9937, -61.5486, -56.4653, 1.47 ) }
    dend_19 { pt3dadd( -29.0153, -61.6001, -56.5146, 1.47 ) }
    dend_19 { pt3dadd( -29.1936, -62.3421, -57.109, 1.55 ) }
    dend_19 { pt3dadd( -29.4549, -64.2362, -58.5846, 1.11 ) }
    dend_19 { pt3dadd( -29.5186, -65.0998, -59.1986, 0.66 ) }
    dend_19 { pt3dadd( -29.6238, -66.5639, -60.204, 0.37 ) }
    dend_19 { pt3dadd( -29.7796, -68.7968, -61.529, 0.37 ) }
    dend_19 { pt3dadd( -29.9418, -70.5845, -62.5728, 0.37 ) }
    dend_19 { pt3dadd( -30.0965, -71.7989, -63.2624, 0.37 ) }
    dend_19 { pt3dadd( -30.1181, -71.9161, -63.33, 0.37 ) }
    dend_19 { pt3dadd( -30.3462, -72.7403, -63.843, 0.37 ) }
    dend_19 { pt3dadd( -30.8704, -74.0228, -64.9009, 0.37 ) }
    dend_19 { pt3dadd( -31.4321, -75.173, -65.8295, 0.22 ) }
    dend_19 { pt3dadd( -31.6431, -75.6351, -66.1716, 0.22 ) }
    dend_19 { pt3dadd( -32.3972, -77.2975, -67.3489, 1.25 ) }
    dend_19 { pt3dadd( -32.8674, -78.2882, -68.0198, 1.62 ) }
    dend_19 { pt3dadd( -34.3604, -81.2869, -70.049, 0.22 ) }
    dend_19 { pt3dadd( -35.6019, -83.5153, -71.5748, 0.22 ) }
    dend_19 { pt3dadd( -35.6348, -83.573, -71.6087, 0.22 ) }
    dend_19 { pt3dadd( -36.1548, -84.5182, -72.0949, 0.22 ) }
    dend_19 { pt3dadd( -36.1978, -84.5848, -72.1264, 0.22 ) }
    dend_19 { pt3dadd( -37.4348, -86.27, -73.0167, 0.22 ) }
    dend_19 { pt3dadd( -37.5266, -86.3818, -73.0836, 0.22 ) }
    dend_19 { pt3dadd( -38.2491, -87.2846, -73.7799, 0.22 ) }
    dend_19 { pt3dadd( -38.3728, -87.4511, -73.9052, 0.22 ) }
    dend_19 { pt3dadd( -39.3906, -88.9137, -74.9344, 0.22 ) }
    dend_19 { pt3dadd( -39.9064, -89.8245, -75.4858, 0.22 ) }
    dend_19 { pt3dadd( -40.4012, -90.8725, -76.031, 0.96 ) }
    dend_19 { pt3dadd( -40.7102, -91.6807, -76.4016, 1.25 ) }
    dend_19 { pt3dadd( -40.953, -92.4132, -76.7713, 0.52 ) }
    dend_19 { pt3dadd( -41.1918, -93.1653, -77.1553, 0.15 ) }
    dend_19 { pt3dadd( -41.7776, -95.0609, -78.274, 0.15 ) }
    dend_19 { pt3dadd( -41.825, -95.1988, -78.3661, 0.15 ) }
    dend_19 { pt3dadd( -42.2767, -96.4163, -79.1952, 0.15 ) }
    dend_19 { pt3dadd( -43.0818, -98.3707, -80.6185, 0.15 ) }
    dend_19 { pt3dadd( -43.2313, -98.7031, -80.8812, 1.4 ) }
    dend_19 { pt3dadd( -44.2053, -100.775, -82.6072, 1.4 ) }
    dend_19 { pt3dadd( -44.5556, -101.493, -83.2296, 0.22 ) }
    dend_19 { pt3dadd( -44.9457, -102.311, -83.9413, 0.22 ) }
    dend_19 { pt3dadd( -45.1784, -102.81, -84.393, 0.22 ) }
    dend_19 { pt3dadd( -45.716, -104.008, -85.4218, 0.22 ) }
    dend_19 { pt3dadd( -45.7404, -104.062, -85.4675, 0.22 ) }
    dend_19 { pt3dadd( -46.2671, -105.216, -86.3419, 1.03 ) }
    dend_19 { pt3dadd( -46.6181, -106.001, -86.9258, 1.33 ) }
    dend_19 { pt3dadd( -47.1167, -107.278, -87.7872, 0.74 ) }
    dend_19 { pt3dadd( -47.3609, -108.051, -88.1816, 0.22 ) }
    dend_19 { pt3dadd( -47.6005, -108.965, -88.4803, 0.22 ) }
    dend_19 { pt3dadd( -47.8753, -110.131, -88.6898, 0.22 ) }
    dend_19 { pt3dadd( -47.8929, -110.204, -88.6906, 0.22 ) }
    dend_19 { pt3dadd( -48.0638, -110.814, -88.714, 1.03 ) }
    dend_19 { pt3dadd( -48.3695, -111.779, -88.7461, 0.74 ) }
    dend_19 { pt3dadd( -48.6554, -112.65, -88.7769, 0.74 ) }
    dend_19 { pt3dadd( -49.0159, -113.689, -88.8625, 0.44 ) }
    dend_19 { pt3dadd( -49.4485, -114.825, -89.0348, 0.22 ) }
    dend_19 { pt3dadd( -50.4342, -117.23, -89.4738, 0.15 ) }
    dend_19 { pt3dadd( -50.6247, -117.642, -89.5764, 1.03 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 94/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -23.1769, -52.7641, 12.4547, 0.52 ) }
    dend_13 { pt3dadd( -23.3789, -52.9145, 12.4021, 0.52 ) }
    dend_13 { pt3dadd( -23.9194, -53.4836, 12.5115, 0.52 ) }
    dend_13 { pt3dadd( -24.8446, -54.6506, 13.0228, 0.44 ) }
    dend_13 { pt3dadd( -25.2355, -55.2379, 13.3115, 0.44 ) }
    dend_13 { pt3dadd( -25.2619, -55.2808, 13.3358, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_13 { pt3dadd( -25.8871, -56.3331, 13.9666, 0.44 ) }
    dend_13 { pt3dadd( -26.5532, -57.4057, 14.7334, 0.44 ) }
    dend_13 { pt3dadd( -26.631, -57.5325, 14.8414, 0.44 ) }
    dend_13 { pt3dadd( -27.1605, -58.341, 15.6425, 0.44 ) }
    dend_13 { pt3dadd( -27.5757, -58.8652, 16.1975, 0.44 ) }
    dend_13 { pt3dadd( -27.6071, -58.897, 16.2304, 0.44 ) }
    dend_13 { pt3dadd( -28.4452, -59.5783, 16.934, 0.44 ) }
    dend_13 { pt3dadd( -28.9716, -59.939, 17.3069, 0.37 ) }
    dend_13 { pt3dadd( -29.2651, -60.116, 17.5268, 0.37 ) }
    dend_13 { pt3dadd( -29.6965, -60.3779, 17.9015, 0.66 ) }
    dend_13 { pt3dadd( -30.2488, -60.7422, 18.4195, 0.66 ) }
    dend_13 { pt3dadd( -30.9211, -61.2407, 19.1222, 0.29 ) }
    dend_13 { pt3dadd( -31.264, -61.5574, 19.5655, 0.29 ) }
    dend_13 { pt3dadd( -31.9378, -62.274, 20.5251, 0.29 ) }
    dend_13 { pt3dadd( -32.5231, -63.0094, 21.4603, 0.29 ) }
    dend_13 { pt3dadd( -32.5488, -63.0442, 21.5067, 0.29 ) }
    dend_13 { pt3dadd( -32.6358, -63.1724, 21.6885, 0.96 ) }
    dend_13 { pt3dadd( -32.9337, -63.638, 22.3311, 0.37 ) }
    dend_13 { pt3dadd( -33.2055, -64.1508, 23.0036, 0.37 ) }
    dend_13 { pt3dadd( -33.2231, -64.1853, 23.0435, 0.37 ) }
    dend_13 { pt3dadd( -33.8031, -65.1432, 24.1754, 0.37 ) }
    dend_13 { pt3dadd( -33.8925, -65.2847, 24.3445, 0.74 ) }
    dend_13 { pt3dadd( -34.0172, -65.4658, 24.5684, 0.29 ) }
    dend_13 { pt3dadd( -34.5606, -66.1568, 25.4692, 0.29 ) }
    dend_13 { pt3dadd( -34.8639, -66.5436, 26.0375, 0.29 ) }
    dend_13 { pt3dadd( -39.1511, -71.6076, 30.4168, 0.29 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 26/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -23.1769, -52.7641, 12.4547, 0.81 ) }
    dend_12 { pt3dadd( -23.2868, -52.6433, 12.5773, 0.81 ) }
    dend_12 { pt3dadd( -23.4952, -52.4159, 12.8204, 0.44 ) }
    dend_12 { pt3dadd( -23.856, -51.9478, 13.2715, 0.44 ) }
    dend_12 { pt3dadd( -24.3575, -51.2971, 13.8985, 0.44 ) }
    dend_12 { pt3dadd( -24.7436, -50.7961, 14.3813, 0.44 ) }
    dend_12 { pt3dadd( -25.3645, -49.9905, 15.1577, 0.22 ) }
    dend_12 { pt3dadd( -25.5917, -49.6856, 15.4611, 0.22 ) }
    dend_12 { pt3dadd( -25.9652, -49.1914, 16.0082, 0.22 ) }
    dend_12 { pt3dadd( -30.1827, -44.0357, 21.2175, 0.22 ) }
    dend_12 { pt3dadd( -35.8165, -40.1519, 26.1262, 0.22 ) }
    dend_12 { pt3dadd( -40.0024, -35.0005, 31.3651, 0.22 ) }
    dend_12 { pt3dadd( -43.0258, -28.908, 36.4419, 0.22 ) }
    dend_12 { pt3dadd( -46.4193, -23.4016, 41.9069, 0.22 ) }
    dend_12 { pt3dadd( -51.4081, -18.4808, 46.6261, 0.22 ) }
    dend_12 { pt3dadd( -57.0647, -13.5716, 50.5313, 0.22 ) }
    dend_12 { pt3dadd( -63.6184, -9.96066, 54.3793, 0.22 ) }
    dend_12 { pt3dadd( -70.1108, -7.03445, 58.8368, 0.22 ) }
    dend_12 { pt3dadd( -76.2805, -5.4039, 64.2743, 0.22 ) }
    dend_12 { pt3dadd( -82.4462, -4.77154, 69.9092, 0.22 ) }
    dend_12 { pt3dadd( -88.617, -4.36959, 75.5581, 0.22 ) }
    dend_12 { pt3dadd( -93.5712, -3.6377, 82.2737, 0.22 ) }
    dend_12 { pt3dadd( -97.8162, -4.08173, 89.4792, 0.22 ) }
    dend_12 { pt3dadd( -101.673, -3.55483, 96.8962, 0.22 ) }
    dend_12 { pt3dadd( -105.209, -1.93502, 104.325, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 51/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -6.82954, -73.7072, 1.55656, 0.37 ) }
    dend_6 { pt3dadd( -9.87134, -73.7155, 2.23532, 0.37 ) }
    dend_6 { pt3dadd( -10.0591, -73.7188, 2.28964, 0.37 ) }
    dend_6 { pt3dadd( -11.2143, -73.7607, 2.6742, 0.37 ) }
    dend_6 { pt3dadd( -11.9427, -73.8136, 2.99599, 0.22 ) }
    dend_6 { pt3dadd( -12.7863, -73.8749, 3.36864, 0.22 ) }
    dend_6 { pt3dadd( -14.0293, -73.9652, 3.91772, 0.22 ) }
    dend_6 { pt3dadd( -14.3327, -73.9995, 4.12214, 0.44 ) }
    dend_6 { pt3dadd( -15.0724, -74.1027, 4.61652, 0.44 ) }
    dend_6 { pt3dadd( -16.1883, -74.2947, 5.34482, 0.22 ) }
    dend_6 { pt3dadd( -25.0879, -73.2858, 7.52288, 0.22 ) }
    dend_6 { pt3dadd( -34.2597, -73.3612, 8.41792, 0.22 ) }
    dend_6 { pt3dadd( -43.0841, -71.9125, 10.6637, 0.22 ) }
    dend_6 { pt3dadd( -51.7823, -70.3555, 13.2994, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 65/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -6.82954, -73.7072, 1.55656, 1.33 ) }
    dend_5 { pt3dadd( -6.271, -74.5195, 1.44049, 1.33 ) }
    dend_5 { pt3dadd( -5.73834, -75.4072, 1.28365, 0.88 ) }
    dend_5 { pt3dadd( -5.71127, -75.4664, 1.27638, 0.88 ) }
    dend_5 { pt3dadd( -5.1368, -77.0014, 1.12711, 0.66 ) }
    dend_5 { pt3dadd( -4.52033, -78.9527, 0.966831, 0.66 ) }
    dend_5 { pt3dadd( -3.92585, -81.1023, 0.817822, 0.66 ) }
    dend_5 { pt3dadd( -3.47418, -83.0075, 0.707777, 0.66 ) }
    dend_5 { pt3dadd( -2.94684, -85.5621, 0.582502, 0.96 ) }
    dend_5 { pt3dadd( -2.73859, -86.8287, 0.528622, 1.69 ) }
    dend_5 { pt3dadd( -2.61173, -87.9492, 0.491039, 1.25 ) }
    dend_5 { pt3dadd( -2.52231, -89.0953, 0.459444, 0.96 ) }
    dend_5 { pt3dadd( -2.51612, -89.1718, 0.457224, 0.96 ) }
    dend_5 { pt3dadd( -2.31446, -90.6829, 0.438182, 0.59 ) }
    dend_5 { pt3dadd( -1.83911, -93.2992, 0.39489, 0.59 ) }
    dend_5 { pt3dadd( -1.2759, -95.8199, 0.368526, 0.96 ) }
    dend_5 { pt3dadd( -0.632466, -98.3825, 0.355341, 1.11 ) }
    dend_5 { pt3dadd( -0.225935, -99.9803, 0.356722, 0.74 ) }
    dend_5 { pt3dadd( 0.15784, -101.474, 0.373302, 0.74 ) }
    dend_5 { pt3dadd( 0.364628, -102.363, 0.38613, 0.52 ) }
    dend_5 { pt3dadd( 0.613884, -103.53, 0.410052, 0.52 ) }
    dend_5 { pt3dadd( 0.636545, -103.692, 0.412462, 0.52 ) }
    dend_5 { pt3dadd( 0.643085, -105.29, 0.357075, 0.52 ) }
    dend_5 { pt3dadd( 0.633534, -105.39, 0.348253, 0.52 ) }
    dend_5 { pt3dadd( 0.398247, -107.193, 0.186152, 0.44 ) }
    dend_5 { pt3dadd( 0.389833, -107.28, 0.182457, 0.44 ) }
    dend_5 { pt3dadd( 0.366718, -108.109, 0.198788, 0.44 ) }
    dend_5 { pt3dadd( 0.44435, -110.518, 0.318671, 0.44 ) }
    dend_5 { pt3dadd( 0.451402, -110.594, 0.326616, 0.44 ) }
    dend_5 { pt3dadd( 0.612145, -111.866, 0.503277, 0.88 ) }
    dend_5 { pt3dadd( 0.932703, -114.089, 0.892058, 0.88 ) }
    dend_5 { pt3dadd( 1.19951, -116.523, 1.37846, 0.88 ) }
    dend_5 { pt3dadd( 1.20406, -116.597, 1.39521, 0.88 ) }
    dend_5 { pt3dadd( 1.18225, -117.921, 1.76875, 1.25 ) }
    dend_5 { pt3dadd( 1.1126, -118.844, 2.03957, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_5 { pt3dadd( 0.952021, -119.942, 2.37061, 0.96 ) }
    dend_5 { pt3dadd( 0.639056, -121.323, 2.81963, 0.52 ) }
    dend_5 { pt3dadd( 0.381593, -122.238, 3.05091, 0.52 ) }
    dend_5 { pt3dadd( -0.0319531, -123.646, 3.29954, 1.18 ) }
    dend_5 { pt3dadd( -0.408302, -124.873, 3.41397, 1.18 ) }
    dend_5 { pt3dadd( -0.433081, -124.957, 3.41763, 1.18 ) }
    dend_5 { pt3dadd( -0.780094, -126.26, 3.36989, 0.96 ) }
    dend_5 { pt3dadd( -1.16977, -127.837, 3.17877, 0.96 ) }
    dend_5 { pt3dadd( -1.36736, -128.717, 3.00688, 1.25 ) }
    dend_5 { pt3dadd( -1.53436, -129.723, 2.74579, 1.03 ) }
    dend_5 { pt3dadd( -1.54246, -129.807, 2.72302, 1.03 ) }
    dend_5 { pt3dadd( -1.57274, -130.91, 2.42827, 0.88 ) }
    dend_5 { pt3dadd( -1.51401, -132.184, 2.15531, 0.88 ) }
    dend_5 { pt3dadd( -1.39327, -133.384, 1.97234, 0.59 ) }
    dend_5 { pt3dadd( -1.21377, -134.896, 1.78312, 0.52 ) }
    dend_5 { pt3dadd( -1.14097, -135.465, 1.72829, 0.52 ) }
    dend_5 { pt3dadd( -1.12154, -135.646, 1.71831, 0.52 ) }
    dend_5 { pt3dadd( -0.973424, -137.236, 1.71303, 0.52 ) }
    dend_5 { pt3dadd( -0.969934, -137.344, 1.7199, 0.52 ) }
    dend_5 { pt3dadd( -1.03755, -138.723, 1.8863, 0.74 ) }
    dend_5 { pt3dadd( -1.0469, -138.799, 1.8963, 0.74 ) }
    dend_5 { pt3dadd( -1.18828, -139.912, 2.02364, 0.81 ) }
    dend_5 { pt3dadd( -1.26156, -140.556, 2.08328, 0.81 ) }
    dend_5 { pt3dadd( -1.36388, -141.533, 2.13831, 0.29 ) }
    dend_5 { pt3dadd( -1.43527, -142.329, 2.17768, 0.29 ) }
    dend_5 { pt3dadd( -1.44005, -142.416, 2.18128, 0.29 ) }
    dend_5 { pt3dadd( -1.4531, -143.546, 2.20799, 0.29 ) }
    dend_5 { pt3dadd( -1.44946, -143.634, 2.20823, 0.29 ) }
    dend_5 { pt3dadd( -1.32576, -144.774, 2.17482, 0.29 ) }
    dend_5 { pt3dadd( -1.17441, -145.751, 2.07418, 0.29 ) }
    dend_5 { pt3dadd( -1.09045, -146.21, 2.01179, 0.88 ) }
    dend_5 { pt3dadd( -0.950514, -146.904, 1.90842, 0.88 ) }
    dend_5 { pt3dadd( -0.905211, -147.121, 1.87459, 0.88 ) }
    dend_5 { pt3dadd( -0.756983, -147.934, 1.80574, 0.59 ) }
    dend_5 { pt3dadd( -0.523381, -149.225, 1.74764, 0.59 ) }
    dend_5 { pt3dadd( -0.512589, -149.312, 1.74725, 0.59 ) }
    dend_5 { pt3dadd( -0.349321, -151.34, 1.8227, 0.59 ) }
    dend_5 { pt3dadd( -0.301703, -152.225, 1.87868, 0.29 ) }
    dend_5 { pt3dadd( -0.249179, -154.148, 2.03187, 0.29 ) }
    dend_5 { pt3dadd( -0.250802, -154.387, 2.05487, 0.29 ) }
    dend_5 { pt3dadd( -0.320071, -156.228, 2.2885, 0.29 ) }
    dend_5 { pt3dadd( -0.45758, -158.02, 2.50516, 0.37 ) }
    dend_5 { pt3dadd( -0.557288, -158.808, 2.59489, 1.18 ) }
    dend_5 { pt3dadd( -0.765811, -160.165, 2.72496, 1.33 ) }
    dend_5 { pt3dadd( -0.956764, -161.263, 2.79088, 0.74 ) }
    dend_5 { pt3dadd( -1.23958, -162.739, 2.87281, 0.52 ) }
    dend_5 { pt3dadd( -1.4727, -163.859, 2.92522, 0.52 ) }
    dend_5 { pt3dadd( -1.66066, -164.698, 2.9478, 0.52 ) }
    dend_5 { pt3dadd( -1.67994, -164.784, 2.94919, 0.52 ) }
    dend_5 { pt3dadd( -1.92881, -165.956, 2.94759, 0.52 ) }
    dend_5 { pt3dadd( -1.97387, -166.192, 2.94176, 0.52 ) }
    dend_5 { pt3dadd( -2.13047, -167.057, 2.91064, 0.52 ) }
    dend_5 { pt3dadd( -2.23762, -167.701, 2.90813, 0.88 ) }
    dend_5 { pt3dadd( -2.38016, -168.588, 2.91614, 1.03 ) }
    dend_5 { pt3dadd( -2.52298, -169.554, 2.93324, 0.59 ) }
    dend_5 { pt3dadd( -2.53307, -169.63, 2.93528, 0.59 ) }
    dend_5 { pt3dadd( -2.6745, -171.214, 2.93386, 0.29 ) }
    dend_5 { pt3dadd( -2.72223, -172.333, 2.9066, 0.29 ) }
    dend_5 { pt3dadd( -2.71959, -172.434, 2.90108, 0.29 ) }
    dend_5 { pt3dadd( -2.61114, -173.565, 2.8052, 0.29 ) }
    dend_5 { pt3dadd( -2.58579, -173.801, 2.76535, 0.29 ) }
    dend_5 { pt3dadd( -2.49281, -174.819, 2.52133, 0.29 ) }
    dend_5 { pt3dadd( -2.48848, -174.891, 2.49785, 0.29 ) }
    dend_5 { pt3dadd( -2.50815, -175.817, 2.17263, 0.29 ) }
    dend_5 { pt3dadd( -2.51558, -175.89, 2.14888, 0.29 ) }
    dend_5 { pt3dadd( -2.74225, -177.309, 1.75443, 0.29 ) }
    dend_5 { pt3dadd( -2.80797, -177.636, 1.68893, 0.29 ) }
    dend_5 { pt3dadd( -3.03649, -178.653, 1.53923, 0.29 ) }
    dend_5 { pt3dadd( -3.16006, -179.237, 1.46993, 1.03 ) }
    dend_5 { pt3dadd( -3.31614, -180.054, 1.39706, 1.47 ) }
    dend_5 { pt3dadd( -3.46798, -181.095, 1.33629, 0.37 ) }
    dend_5 { pt3dadd( -3.63293, -182.684, 1.32979, 0.37 ) }
    dend_5 { pt3dadd( -3.64137, -182.76, 1.33055, 0.37 ) }
    dend_5 { pt3dadd( -3.73007, -183.499, 1.34868, 0.81 ) }
    dend_5 { pt3dadd( -3.81777, -184.134, 1.37397, 0.88 ) }
    dend_5 { pt3dadd( -3.9098, -184.69, 1.39801, 0.88 ) }
    dend_5 { pt3dadd( -4.13847, -185.934, 1.45486, 0.22 ) }
    dend_5 { pt3dadd( -4.3752, -187.201, 1.51924, 0.22 ) }
    dend_5 { pt3dadd( -4.38914, -187.288, 1.52287, 0.22 ) }
    dend_5 { pt3dadd( -4.45057, -187.681, 1.53765, 0.37 ) }
    dend_5 { pt3dadd( -4.55084, -188.51, 1.55816, 0.37 ) }
    dend_5 { pt3dadd( -4.65955, -189.833, 1.57046, 0.29 ) }
    dend_5 { pt3dadd( -4.66048, -189.921, 1.56913, 0.29 ) }
    dend_5 { pt3dadd( -4.59241, -191.289, 1.531, 0.29 ) }
    dend_5 { pt3dadd( -4.57907, -191.442, 1.52776, 0.29 ) }
    dend_5 { pt3dadd( -4.37945, -193.029, 1.49802, 0.22 ) }
    dend_5 { pt3dadd( -4.29484, -193.588, 1.4884, 0.66 ) }
    dend_5 { pt3dadd( -4.15904, -194.514, 1.47855, 0.81 ) }
    dend_5 { pt3dadd( -4.06087, -195.249, 1.47704, 0.96 ) }
    dend_5 { pt3dadd( -3.94733, -196.1, 1.51919, 0.37 ) }
    dend_5 { pt3dadd( -3.93574, -196.176, 1.52521, 0.37 ) }
    dend_5 { pt3dadd( -3.70292, -197.599, 1.65803, 0.15 ) }
    dend_5 { pt3dadd( -3.6199, -198.178, 1.71325, 0.74 ) }
    dend_5 { pt3dadd( -3.54755, -198.97, 1.78959, 0.74 ) }
    dend_5 { pt3dadd( -3.50503, -200.235, 1.90414, 0.22 ) }
    dend_5 { pt3dadd( -3.52634, -201.226, 1.98328, 0.22 ) }
    dend_5 { pt3dadd( -3.59516, -202.071, 2.04981, 0.22 ) }
    dend_5 { pt3dadd( -3.69124, -202.669, 2.0966, 0.59 ) }
    dend_5 { pt3dadd( -3.87559, -203.475, 2.14467, 0.59 ) }
    dend_5 { pt3dadd( -4.06917, -204.073, 2.16607, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_5 { pt3dadd( -4.14554, -204.237, 2.16815, 0.22 ) }
    dend_5 { pt3dadd( -4.53711, -204.936, 2.21092, 0.22 ) }
    dend_5 { pt3dadd( -4.70725, -205.227, 2.24343, 0.44 ) }
    dend_5 { pt3dadd( -4.93292, -205.634, 2.29361, 0.44 ) }
    dend_5 { pt3dadd( -4.96298, -205.716, 2.30214, 0.44 ) }
    dend_5 { pt3dadd( -5.20706, -206.672, 2.38799, 0.22 ) }
    dend_5 { pt3dadd( -5.26618, -206.984, 2.37447, 0.22 ) }
    dend_5 { pt3dadd( -5.34785, -207.653, 2.26621, 0.22 ) }
    dend_5 { pt3dadd( -5.36336, -207.813, 2.23091, 0.22 ) }
    dend_5 { pt3dadd( -5.53292, -209.761, 1.71666, 0.22 ) }
    dend_5 { pt3dadd( -5.54146, -209.865, 1.68605, 0.22 ) }
    dend_5 { pt3dadd( -5.63021, -211.512, 1.1218, 0.22 ) }
    dend_5 { pt3dadd( -5.72399, -213.238, 0.478804, 0.22 ) }
    dend_5 { pt3dadd( -5.7406, -213.549, 0.349196, 0.52 ) }
    dend_5 { pt3dadd( -5.74619, -213.618, 0.317503, 0.52 ) }
    dend_5 { pt3dadd( -5.81414, -214.017, 0.0872376, 0.52 ) }
    dend_5 { pt3dadd( -7.43245, -224.763, -1.29464, 0.52 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 17/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 62.443, -72.5255, 6.39078, 0.44 ) }
    dend_43 { pt3dadd( 62.4188, -72.8817, 6.18772, 0.44 ) }
    dend_43 { pt3dadd( 62.4614, -72.971, 6.17379, 0.44 ) }
    dend_43 { pt3dadd( 62.666, -73.3673, 6.12496, 0.44 ) }
    dend_43 { pt3dadd( 62.7859, -73.5926, 6.09888, 0.44 ) }
    dend_43 { pt3dadd( 63.0642, -74.0982, 6.04101, 0.44 ) }
    dend_43 { pt3dadd( 63.0886, -74.1415, 6.03612, 0.44 ) }
    dend_43 { pt3dadd( 64.395, -76.2957, 5.79816, 0.44 ) }
    dend_43 { pt3dadd( 64.4219, -76.3375, 5.79466, 0.44 ) }
    dend_43 { pt3dadd( 64.6071, -76.6083, 5.78, 1.33 ) }
    dend_43 { pt3dadd( 65.0573, -77.2039, 5.7768, 1.4 ) }
    dend_43 { pt3dadd( 65.2467, -77.4419, 5.80186, 0.37 ) }
    dend_43 { pt3dadd( 65.2778, -77.4798, 5.80893, 0.37 ) }
    dend_43 { pt3dadd( 65.7158, -77.952, 5.96469, 0.29 ) }
    dend_43 { pt3dadd( 65.7489, -77.9863, 5.9776, 0.29 ) }
    dend_43 { pt3dadd( 66.6657, -78.8559, 6.36928, 0.29 ) }
    dend_43 { pt3dadd( 67.5353, -79.6138, 6.7537, 0.29 ) }
    dend_43 { pt3dadd( 67.5712, -79.6436, 6.76951, 0.29 ) }
    dend_43 { pt3dadd( 69.0942, -80.8559, 7.43598, 0.29 ) }
    dend_43 { pt3dadd( 69.1786, -80.9206, 7.47515, 0.29 ) }
    dend_43 { pt3dadd( 70.1693, -81.6528, 7.94884, 0.52 ) }
    dend_43 { pt3dadd( 71.1942, -82.3617, 8.45171, 0.29 ) }
    dend_43 { pt3dadd( 71.5764, -82.6019, 8.63875, 0.59 ) }
    dend_43 { pt3dadd( 71.8809, -82.7827, 8.80055, 0.59 ) }
    dend_43 { pt3dadd( 72.7402, -83.251, 9.315, 0.44 ) }
    dend_43 { pt3dadd( 72.8553, -83.3126, 9.38592, 0.44 ) }
    dend_43 { pt3dadd( 73.3666, -83.5941, 9.63, 0.29 ) }
    dend_43 { pt3dadd( 73.4478, -83.639, 9.66222, 0.29 ) }
    dend_43 { pt3dadd( 74.0559, -83.9766, 9.88237, 0.29 ) }
    dend_43 { pt3dadd( 74.1859, -84.0495, 9.92303, 0.29 ) }
    dend_43 { pt3dadd( 74.785, -84.3898, 10.0698, 0.29 ) }
    dend_43 { pt3dadd( 77.5541, -86.0211, 10.6797, 0.29 ) }
    dend_43 { pt3dadd( 77.6015, -86.0501, 10.6887, 0.29 ) }
    dend_43 { pt3dadd( 83.1376, -89.8036, 12.8436, 0.29 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 51/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 62.443, -72.5255, 6.39078, 0.52 ) }
    dend_40 { pt3dadd( 62.2954, -72.3684, 6.38407, 0.52 ) }
    dend_40 { pt3dadd( 62.2396, -72.3211, 6.38573, 0.52 ) }
    dend_40 { pt3dadd( 61.4517, -71.7239, 6.43572, 0.37 ) }
    dend_40 { pt3dadd( 60.2219, -70.8713, 6.51132, 0.37 ) }
    dend_40 { pt3dadd( 59.2322, -70.2081, 6.5262, 0.59 ) }
    dend_40 { pt3dadd( 58.1405, -69.4812, 6.3792, 0.59 ) }
    dend_40 { pt3dadd( 56.9714, -68.7063, 6.08557, 0.22 ) }
    dend_40 { pt3dadd( 56.9213, -68.6738, 6.06804, 0.22 ) }
    dend_40 { pt3dadd( 55.8664, -68.0644, 5.59193, 0.22 ) }
    dend_40 { pt3dadd( 55.1911, -67.7101, 5.2039, 0.22 ) }
    dend_40 { pt3dadd( 53.4461, -66.775, 3.93892, 0.22 ) }
    dend_40 { pt3dadd( 53.242, -66.6555, 3.75155, 0.66 ) }
    dend_40 { pt3dadd( 53.1985, -66.6238, 3.7033, 0.66 ) }
    dend_40 { pt3dadd( 52.5907, -66.1799, 2.98478, 0.37 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 66/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 96.6162, -101.206, -1.82381, 0.29 ) }
    dend_38 { pt3dadd( 100.529, -106.105, -2.79482, 0.29 ) }
    dend_38 { pt3dadd( 104.342, -111.166, -3.05163, 0.29 ) }
    dend_38 { pt3dadd( 108.312, -116.104, -3.14984, 0.29 ) }
    dend_38 { pt3dadd( 111.944, -121.288, -2.80079, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 71/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 96.6162, -101.206, -1.82381, 0.74 ) }
    dend_37 { pt3dadd( 102.144, -108.193, -3.26554, 0.29 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 73/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -39.1511, -71.6076, 30.4168, 0.37 ) }
    dend_15 { pt3dadd( -42.6753, -75.5201, 36.6508, 0.37 ) }
    dend_15 { pt3dadd( -45.9023, -80.5974, 42.2095, 0.37 ) }
    dend_15 { pt3dadd( -48.8332, -85.2429, 48.2707, 0.37 ) }
    dend_15 { pt3dadd( -51.8541, -90.1654, 54.0736, 0.37 ) }
    dend_15 { pt3dadd( -55.8994, -94.6178, 59.6045, 0.37 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 79/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -39.1511, -71.6076, 30.4168, 0.29 ) }
    dend_14 { pt3dadd( -47.0861, -81.367, 31.0988, 0.37 ) }
    dend_14 { pt3dadd( -53.8598, -91.599, 34.1471, 0.37 ) }
    dend_14 { pt3dadd( -62.7738, -99.6873, 37.7916, 0.37 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 83/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -51.7823, -70.3555, 13.2994, 0.37 ) }
    dend_10 { pt3dadd( -61.3721, -69.907, 12.6451, 0.37 ) }
    dend_10 { pt3dadd( -70.86, -70.3108, 11.0981, 0.37 ) }
    dend_10 { pt3dadd( -80.1211, -72.7427, 10.035, 0.37 ) }
    dend_10 { pt3dadd( -89.4029, -75.0827, 11.1365, 0.37 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 88/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -51.7823, -70.3555, 13.2994, 0.29 ) }
    dend_7 { pt3dadd( -63.0005, -69.6642, 18.2181, 0.37 ) }
    dend_7 { pt3dadd( -73.1632, -70.0612, 25.0783, 0.37 ) }
    dend_7 { pt3dadd( -82.7635, -69.3295, 32.6837, 0.37 ) }
    dend_7 { pt3dadd( -90.6324, -67.1538, 41.858, 0.37 ) }
    dend_7 { pt3dadd( -95.9632, -63.6194, 52.3657, 0.37 ) }
    dend_7 { pt3dadd( -99.1399, -57.956, 62.8662, 0.37 ) }
    dend_7 { pt3dadd( -101.603, -54.1874, 74.321, 0.37 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 96/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 52.5907, -66.1799, 2.98478, 0.37 ) }
    dend_42 { pt3dadd( 52.6363, -66.2923, 2.9652, 0.37 ) }
    dend_42 { pt3dadd( 53.136, -67.3655, 2.69931, 0.37 ) }
    dend_42 { pt3dadd( 53.1816, -67.4572, 2.67384, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_42 { pt3dadd( 53.8184, -68.7385, 2.31788, 0.37 ) }
    dend_42 { pt3dadd( 53.8394, -68.7808, 2.30612, 0.37 ) }
    dend_42 { pt3dadd( 54.6932, -70.4988, 1.82885, 0.37 ) }
    dend_42 { pt3dadd( 54.7195, -70.5473, 1.81535, 0.37 ) }
    dend_42 { pt3dadd( 55.1159, -71.1564, 1.62732, 0.37 ) }
    dend_42 { pt3dadd( 59.0092, -78.2292, 0.948754, 0.37 ) }
    dend_42 { pt3dadd( 61.6948, -85.8736, 0.484416, 0.37 ) }
    dend_42 { pt3dadd( 64.3269, -93.5454, 0.427846, 0.37 ) }
    dend_42 { pt3dadd( 66.6503, -101.135, 1.96693, 0.37 ) }
    dend_42 { pt3dadd( 69.1802, -108.657, 3.50214, 0.37 ) }
    dend_42 { pt3dadd( 70.5295, -116.48, 5.05102, 0.37 ) }
    dend_42 { pt3dadd( 71.425, -124.547, 5.03127, 0.37 ) }
    dend_42 { pt3dadd( 73.5688, -132.359, 5.37119, 0.37 ) }
    dend_42 { pt3dadd( 75.7276, -140.144, 6.00313, 0.37 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 14/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 52.5907, -66.1799, 2.98478, 0.37 ) }
    dend_41 { pt3dadd( 52.5295, -66.1454, 2.92034, 0.37 ) }
    dend_41 { pt3dadd( 52.4794, -66.1264, 2.87938, 0.37 ) }
    dend_41 { pt3dadd( 51.6309, -65.8533, 2.2428, 0.22 ) }
    dend_41 { pt3dadd( 51.343, -65.7496, 2.05624, 0.22 ) }
    dend_41 { pt3dadd( 50.5853, -65.4583, 1.60725, 0.22 ) }
    dend_41 { pt3dadd( 50.5213, -65.4315, 1.57358, 0.22 ) }
    dend_41 { pt3dadd( 49.5671, -65.0189, 1.12835, 0.22 ) }
    dend_41 { pt3dadd( 49.4432, -64.965, 1.07645, 0.22 ) }
    dend_41 { pt3dadd( 48.6142, -64.6042, 0.763658, 0.22 ) }
    dend_41 { pt3dadd( 48.3942, -64.5032, 0.676846, 0.22 ) }
    dend_41 { pt3dadd( 47.4853, -64.0594, 0.312124, 0.22 ) }
    dend_41 { pt3dadd( 47.3813, -64.0069, 0.270692, 0.22 ) }
    dend_41 { pt3dadd( 45.8305, -63.1894, -0.354319, 0.22 ) }
    dend_41 { pt3dadd( 45.6715, -63.1051, -0.420519, 0.22 ) }
    dend_41 { pt3dadd( 44.1755, -62.3093, -1.05852, 0.22 ) }
    dend_41 { pt3dadd( 44.1125, -62.2711, -1.08228, 0.22 ) }
    dend_41 { pt3dadd( 43.0404, -61.5531, -1.42995, 0.22 ) }
    dend_41 { pt3dadd( 42.8196, -61.3745, -1.4779, 0.22 ) }
    dend_41 { pt3dadd( 42.2076, -60.7727, -1.52957, 0.22 ) }
    dend_41 { pt3dadd( 41.8941, -60.4287, -1.52758, 0.22 ) }
    dend_41 { pt3dadd( 40.9297, -59.2367, -1.42767, 0.22 ) }
    dend_41 { pt3dadd( 40.8432, -59.1257, -1.41584, 0.22 ) }
    dend_41 { pt3dadd( 39.7639, -57.6638, -1.21311, 0.22 ) }
    dend_41 { pt3dadd( 39.7135, -57.5895, -1.2019, 0.22 ) }
    dend_41 { pt3dadd( 39.0706, -56.5585, -1.03975, 0.22 ) }
    dend_41 { pt3dadd( 38.8634, -56.2079, -0.994656, 0.22 ) }
    dend_41 { pt3dadd( 38.351, -55.3146, -0.926989, 0.22 ) }
    dend_41 { pt3dadd( 38.279, -55.1863, -0.92015, 0.22 ) }
    dend_41 { pt3dadd( 37.7429, -54.2674, -0.905085, 0.22 ) }
    dend_41 { pt3dadd( 37.7062, -54.2095, -0.905952, 0.22 ) }
    dend_41 { pt3dadd( 37.4, -53.7573, -0.924568, 0.29 ) }
    dend_41 { pt3dadd( 37.1295, -53.3904, -0.970506, 0.29 ) }
    dend_41 { pt3dadd( 36.488, -52.6157, -1.13582, 0.29 ) }
    dend_41 { pt3dadd( 36.063, -52.1526, -1.2592, 0.29 ) }
    dend_41 { pt3dadd( 35.7004, -51.8, -1.37161, 0.29 ) }
    dend_41 { pt3dadd( 35.6323, -51.7358, -1.39379, 0.29 ) }
    dend_41 { pt3dadd( 34.8766, -51.0438, -1.64947, 0.29 ) }
    dend_41 { pt3dadd( 34.8207, -50.9933, -1.66868, 0.29 ) }
    dend_41 { pt3dadd( 34.125, -50.3646, -1.90116, 0.29 ) }
    dend_41 { pt3dadd( 33.9051, -50.1688, -1.96993, 0.29 ) }
    dend_41 { pt3dadd( 33.3336, -49.6908, -2.13499, 0.29 ) }
    dend_41 { pt3dadd( 32.9762, -49.4109, -2.22435, 0.44 ) }
    dend_41 { pt3dadd( 32.6503, -49.1535, -2.27653, 0.52 ) }
    dend_41 { pt3dadd( 32.2702, -48.8288, -2.32691, 0.52 ) }
    dend_41 { pt3dadd( 32.2206, -48.7822, -2.33171, 0.52 ) }
    dend_41 { pt3dadd( 31.9507, -48.5014, -2.34605, 0.29 ) }
    dend_41 { pt3dadd( 31.6806, -48.1898, -2.35229, 0.29 ) }
    dend_41 { pt3dadd( 30.9683, -47.3322, -2.365, 0.29 ) }
    dend_41 { pt3dadd( 30.9226, -47.2815, -2.36818, 0.29 ) }
    dend_41 { pt3dadd( 30.4988, -46.8382, -2.41174, 0.29 ) }
    dend_41 { pt3dadd( 30.3223, -46.6488, -2.4338, 0.29 ) }
    dend_41 { pt3dadd( 30.1087, -46.4215, -2.46684, 0.29 ) }
    dend_41 { pt3dadd( 29.9691, -46.2702, -2.48853, 0.29 ) }
    dend_41 { pt3dadd( 29.2591, -45.5149, -2.60819, 0.29 ) }
    dend_41 { pt3dadd( 29.1117, -45.3608, -2.6322, 0.29 ) }
    dend_41 { pt3dadd( 28.5503, -44.762, -2.71166, 0.29 ) }
    dend_41 { pt3dadd( 28.3146, -44.5054, -2.73906, 0.29 ) }
    dend_41 { pt3dadd( 27.4158, -43.5013, -2.81649, 0.29 ) }
    dend_41 { pt3dadd( 27.3201, -43.3903, -2.82166, 0.29 ) }
    dend_41 { pt3dadd( 26.7675, -42.7227, -2.83336, 0.52 ) }
    dend_41 { pt3dadd( 26.4221, -42.3035, -2.84122, 0.52 ) }
    dend_41 { pt3dadd( 26.1706, -41.9818, -2.83923, 0.52 ) }
    dend_41 { pt3dadd( 25.9891, -41.7185, -2.82789, 0.37 ) }
    dend_41 { pt3dadd( 25.2441, -40.3942, -2.8049, 0.37 ) }
    dend_41 { pt3dadd( 25.2148, -40.3321, -2.80419, 0.37 ) }
    dend_41 { pt3dadd( 25.0078, -39.7635, -2.78899, 0.52 ) }
    dend_41 { pt3dadd( 24.7288, -38.8616, -2.76532, 0.81 ) }
    dend_41 { pt3dadd( 24.4967, -38.0695, -2.74956, 0.81 ) }
    dend_41 { pt3dadd( 24.158, -37.0273, -2.74068, 0.37 ) }
    dend_41 { pt3dadd( 24.1054, -36.8896, -2.74054, 0.37 ) }
    dend_41 { pt3dadd( 23.8075, -36.2026, -2.74558, 0.37 ) }
    dend_41 { pt3dadd( 23.6588, -35.9193, -2.75868, 0.37 ) }
    dend_41 { pt3dadd( 23.1942, -35.1279, -2.81878, 0.29 ) }
    dend_41 { pt3dadd( 22.4883, -33.9963, -2.89843, 0.29 ) }
    dend_41 { pt3dadd( 21.3643, -32.2997, -2.99339, 0.29 ) }
    dend_41 { pt3dadd( 21.2996, -32.2018, -2.99896, 0.29 ) }
    dend_41 { pt3dadd( 20.3296, -30.7274, -3.08521, 0.29 ) }
    dend_41 { pt3dadd( 20.2766, -30.645, -3.08618, 0.29 ) }
    dend_41 { pt3dadd( 19.7057, -29.7163, -3.04888, 0.29 ) }
    dend_41 { pt3dadd( 19.5479, -29.4564, -3.01968, 0.29 ) }
    dend_41 { pt3dadd( 19.0509, -28.6517, -2.86887, 0.29 ) }
    dend_41 { pt3dadd( 18.9117, -28.4102, -2.80892, 0.29 ) }
    dend_41 { pt3dadd( 18.3819, -27.4122, -2.49724, 0.29 ) }
    dend_41 { pt3dadd( 18.3465, -27.3447, -2.47766, 0.29 ) }
    dend_41 { pt3dadd( 17.501, -25.7078, -2.02481, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_41 { pt3dadd( 17.4377, -25.579, -1.99035, 0.29 ) }
    dend_41 { pt3dadd( 16.9282, -24.5045, -1.71635, 0.29 ) }
    dend_41 { pt3dadd( 16.87, -24.3726, -1.68431, 0.29 ) }
    dend_41 { pt3dadd( 15.9067, -21.9714, -1.13783, 0.29 ) }
    dend_41 { pt3dadd( 15.8577, -21.8361, -1.10441, 0.29 ) }
    dend_41 { pt3dadd( 15.6439, -21.1724, -0.927266, 0.29 ) }
    dend_41 { pt3dadd( 15.5982, -21.0364, -0.891866, 0.29 ) }
    dend_41 { pt3dadd( 15.2488, -20.0427, -0.672502, 0.29 ) }
    dend_41 { pt3dadd( 15.177, -19.842, -0.633563, 0.29 ) }
    dend_41 { pt3dadd( 14.5902, -18.2321, -0.36582, 0.29 ) }
    dend_41 { pt3dadd( 14.4845, -17.9609, -0.326917, 0.29 ) }
    dend_41 { pt3dadd( 13.9322, -16.6235, -0.15359, 0.29 ) }
    dend_41 { pt3dadd( 13.4095, -15.5537, 0.0302628, 0.29 ) }
    dend_41 { pt3dadd( 13.3348, -15.411, 0.0533691, 0.29 ) }
    dend_41 { pt3dadd( 12.7549, -14.3667, 0.21842, 0.29 ) }
    dend_41 { pt3dadd( 12.6779, -14.2426, 0.237585, 0.29 ) }
    dend_41 { pt3dadd( 11.7184, -12.7088, 0.536359, 0.29 ) }
    dend_41 { pt3dadd( 10.9153, -11.4302, 0.931434, 0.29 ) }
    dend_41 { pt3dadd( 5.91233, -3.01265, 0.519235, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 19/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -101.603, -54.1874, 74.321, 0.37 ) }
    dend_9 { pt3dadd( -107.145, -51.8209, 81.5784, 0.37 ) }
    dend_9 { pt3dadd( -112.687, -50.5065, 89.0823, 0.37 ) }
    dend_9 { pt3dadd( -117.566, -48.8604, 96.9809, 0.37 ) }
    dend_9 { pt3dadd( -122.756, -48.5769, 104.829, 0.37 ) }
    dend_9 { pt3dadd( -127.235, -49.2067, 113.082, 0.37 ) }
    dend_9 { pt3dadd( -130.417, -49.5, 121.939, 0.37 ) }
    dend_9 { pt3dadd( -134.685, -51.0026, 130.187, 0.37 ) }
    dend_9 { pt3dadd( -139.339, -51.4973, 138.352, 0.37 ) }
    dend_9 { pt3dadd( -143.806, -51.831, 146.629, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 29/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -101.603, -54.1874, 74.321, 0.29 ) }
    dend_8 { pt3dadd( -104.009, -56.5287, 84.6701, 0.37 ) }
    dend_8 { pt3dadd( -105.942, -60.2904, 94.6894, 0.37 ) }
    dend_8 { pt3dadd( -110.188, -64.2186, 103.901, 0.37 ) }
    dend_8 { pt3dadd( -114.588, -67.2914, 113.36, 0.37 ) }
    dend_8 { pt3dadd( -118.522, -70.3915, 123.013, 0.37 ) }
    dend_8 { pt3dadd( -120.99, -73.8458, 133.026, 0.37 ) }
    dend_8 { pt3dadd( -123.438, -75.6891, 143.469, 0.37 ) }
    dend_8 { pt3dadd( -125.085, -77.7243, 154.034, 0.37 ) }
    dend_8 { pt3dadd( -127.12, -78.9203, 164.666, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_69, dend_58, dend_45, dend_24, dend_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_69 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_69, dend_58, dend_45, dend_24, dend_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_69, dend_58, dend_45, dend_24, dend_0, axon_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, axon_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
    ModelViewParmSubset_5 = new SectionList()
    dend_69 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_26 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_25 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_77 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_74 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_72 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_71 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_60 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_55 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_48 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_47 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_31 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_23 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_22 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_2 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_79 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_76 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_65 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_64 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_62 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_61 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_56 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_51 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_44 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_33 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_32 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_29 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_28 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_17 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_11 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_4 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_80 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_67 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_53 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_36 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_20 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_19 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_12 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_6 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_5 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_15 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_7 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_42 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_41 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_9 OneSecGrp_SectionRef_84.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_8 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_69 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_24 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_45 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_70 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_58 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_3 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_59 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_16 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_30 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_18 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_73 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_49 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_63 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_68 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_46 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_34 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_27 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_35 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_13 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_39 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_26 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_40 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_43 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_78 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_52 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_14 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_75 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_57 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_37 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_10 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_66 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_38 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_54 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_81 OneSecGrp_SectionRef_60.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_69, dend_69, dend_69, dend_69, dend_69, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_0, dend_0, dend_0, axon_0, axon_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_81, dend_80, dend_80, dend_80, dend_80, dend_80, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_37, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_81 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_66 all.append()
    dend_66 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_25 nseg = 3
    dend_21 nseg = 3
    dend_77 nseg = 3
    dend_74 nseg = 3
    dend_72 nseg = 7
    dend_71 nseg = 7
    dend_60 nseg = 3
    dend_55 nseg = 3
    dend_50 nseg = 3
    dend_48 nseg = 5
    dend_47 nseg = 5
    dend_31 nseg = 3
    dend_23 nseg = 5
    dend_22 nseg = 3
    dend_2 nseg = 7
    dend_79 nseg = 3
    dend_76 nseg = 3
    dend_65 nseg = 5
    dend_64 nseg = 7
    dend_62 nseg = 3
    dend_61 nseg = 3
    dend_56 nseg = 7
    dend_51 nseg = 5
    dend_44 nseg = 3
    dend_33 nseg = 3
    dend_32 nseg = 5
    dend_29 nseg = 3
    dend_28 nseg = 5
    dend_17 nseg = 13
    dend_11 nseg = 3
    dend_4 nseg = 3
    dend_80 nseg = 3
    dend_67 nseg = 3
    dend_53 nseg = 3
    dend_36 nseg = 3
    dend_20 nseg = 9
    dend_19 nseg = 7
    dend_12 nseg = 7
    dend_6 nseg = 3
    dend_5 nseg = 7
    dend_15 nseg = 3
    dend_7 nseg = 5
    dend_42 nseg = 3
    dend_41 nseg = 5
    dend_9 nseg = 5
    dend_8 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L6_NBC_38e0d4fd81_0_0


