// Cell: Cell_486509232
/*
{
  "id" : "Cell_486509232",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "370.371, 548.559, 19.3472, 9.724", "375.233, 548.559, 19.3472, 9.724", "380.095, 548.559, 19.3472, 9.724" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "375.233, 548.559, 19.3472, 1.0", "381.074, 562.375, 19.3472, 1.0", "386.916, 576.191, 19.3472, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "371.133, 547.91, 19.9788, 0.4316", "370.149, 547.802, 19.6927, 0.4674", "369.058, 547.626, 19.3453, 0.4238", "367.92, 547.554, 19.0638, 0.4178", "366.782, 547.638, 18.8072, 0.5026", "365.641, 547.635, 18.5933, 0.6502", "364.522, 547.461, 18.5169, 0.5142", "363.576, 547.269, 18.706, 0.4188", "362.864, 547.159, 18.565, 0.3972", "361.863, 547.537, 18.3333, 0.5178" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "374.668, 544.673, 19.5311, 0.4582", "374.531, 543.537, 19.595, 0.6272", "374.784, 542.432, 19.7214, 0.8684", "375.04, 541.328, 19.8909, 0.9808", "375.222, 540.201, 20.0564, 0.9838", "375.323, 539.062, 20.1819, 0.8428", "375.424, 537.922, 20.2726, 0.8348", "375.526, 536.783, 20.3349, 0.9618", "375.486, 535.64, 20.3858, 0.7382", "375.4, 534.5, 20.4404, 0.493", "375.315, 533.359, 20.5079, 0.3598", "375.231, 532.219, 20.5906, 0.3824" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "379.289, 548.752, 15.5538, 0.5432", "380.37, 549.106, 15.1409, 0.5262", "381.344, 549.702, 14.8401, 0.565", "382.073, 550.583, 14.6582, 0.753", "382.891, 551.374, 14.5075, 0.9968", "383.778, 552.069, 14.3299, 1.0402", "384.851, 552.466, 14.2064, 0.8168", "385.976, 552.666, 14.1216, 0.5052", "387.114, 552.775, 14.0577, 0.3444", "388.251, 552.83, 14.0771, 0.3094", "389.384, 552.875, 14.1747, 0.3412", "390.518, 552.919, 14.3232, 0.3886" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "371.943, 549.039, 24.5133, 0.3752", "370.815, 549.189, 25.35, 0.3372", "369.685, 549.335, 26.0073, 0.3062", "368.561, 549.543, 26.5714, 0.2862", "367.483, 549.83, 27.1323, 0.296", "366.423, 550.137, 27.7489, 0.315", "365.386, 550.436, 28.4718, 0.3454", "364.414, 550.703, 29.3583, 0.426", "363.419, 551.003, 30.336, 0.458", "362.409, 551.377, 31.3264, 0.4008" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "378.761, 546.33, 17.7067, 0.3062", "379.839, 545.944, 17.5653, 0.334", "380.899, 545.518, 17.4565, 0.3804", "381.946, 545.055, 17.3819, 0.4928", "382.983, 544.571, 17.346, 0.5724", "384.028, 544.108, 17.3244, 0.659", "385.089, 543.678, 17.2895, 0.6584", "386.115, 543.196, 17.2046, 0.5228", "387.143, 542.694, 17.1443, 0.4678", "388.072, 542.027, 17.1091, 0.5566", "388.951, 541.295, 17.0839, 0.7098", "389.851, 540.589, 17.0625, 0.821", "390.833, 540.002, 17.0628, 0.722" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "371.088, 551.053, 19.234, 0.5564", "370.21, 551.781, 19.1411, 0.502", "369.71, 552.769, 18.9734, 0.5272", "368.63, 553.058, 18.9063, 0.6484", "367.513, 553.175, 18.9428, 0.5122", "366.377, 553.317, 18.9778, 0.4092", "365.243, 553.463, 18.9974, 0.4084", "364.109, 553.61, 18.9944, 0.399", "362.983, 553.804, 18.9505, 0.4188", "361.856, 553.996, 18.8586, 0.5046", "360.728, 553.855, 18.7141, 0.6546", "359.617, 553.627, 18.5408, 0.5176" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "378.471, 550.315, 23.5206, 0.437", "379.243, 551.017, 24.34, 0.678", "379.978, 551.871, 25.0228, 0.5264", "380.975, 552.408, 25.4406, 0.4046", "382.094, 552.529, 25.6265, 0.3218", "383.211, 552.303, 25.7195, 0.3876" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "386.916, 576.191, 19.3472, 1.0", "392.757, 590.007, 19.3472, 1.0", "398.598, 603.823, 19.3472, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "361.863, 547.537, 18.3333, 0.5178", "361.295, 547.87, 18.1818, 0.6492", "360.326, 548.46, 18.1725, 0.6526", "359.345, 548.911, 18.3893, 0.6828", "358.269, 549.072, 18.7797, 0.6208", "357.185, 549.078, 19.3459, 0.6222", "356.135, 549.161, 20.0175, 0.5178", "355.13, 549.613, 20.6524, 0.3854", "354.346, 550.43, 21.1589, 0.3014", "353.751, 551.403, 21.5322, 0.2772", "353.265, 552.437, 21.8489, 0.2794", "352.862, 553.489, 22.1865, 0.2834", "352.509, 554.552, 22.5693, 0.2908", "352.181, 555.624, 23.0044, 0.3058", "351.881, 556.706, 23.4826, 0.327", "351.624, 557.802, 23.9798, 0.3986", "351.373, 558.905, 24.4621, 0.3752", "351.161, 560.006, 24.9371, 0.4022", "351.094, 561.059, 25.4745, 0.34", "350.845, 562.159, 25.9426, 0.3112", "350.511, 563.253, 26.304, 0.2954", "350.174, 564.346, 26.5871, 0.3126", "349.818, 565.43, 26.8556, 0.3484", "349.452, 566.501, 27.1489, 0.3954", "349.041, 567.545, 27.49, 0.5754", "348.51, 568.488, 27.9324, 0.4604", "347.966, 569.456, 28.4119, 0.3656", "347.487, 570.491, 28.803, 0.3016", "347.064, 571.55, 29.1396, 0.3256", "346.642, 572.599, 29.4552, 0.3646", "345.867, 573.422, 29.7354, 0.4642", "345.029, 574.196, 29.9732, 0.517", "344.24, 575.024, 30.1669, 0.5668", "343.511, 575.906, 30.3355, 0.4364", "342.846, 576.837, 30.487, 0.3596", "342.193, 577.775, 30.6359, 0.3326", "341.56, 578.727, 30.8087, 0.4086", "340.945, 579.69, 31.0299, 0.3938", "340.337, 580.657, 31.3118, 0.4378", "339.753, 581.636, 31.6761, 0.4004", "339.234, 582.636, 32.1549, 0.4508", "338.728, 583.638, 32.7429, 0.4198", "338.091, 584.469, 33.5087, 0.5102", "337.344, 585.161, 34.4302, 0.4174", "336.389, 585.519, 35.457, 0.365", "335.303, 585.473, 36.4876, 0.3734", "334.304, 585.388, 37.5735, 0.3338", "333.286, 585.489, 38.6638, 0.3", "332.236, 585.695, 39.6939, 0.2746", "331.182, 585.91, 40.6616, 0.2746", "330.132, 586.182, 41.5629, 0.2746", "329.086, 586.501, 42.3962, 0.2748", "328.042, 586.822, 43.1592, 0.2748", "326.997, 587.144, 43.8626, 0.2752", "325.938, 587.483, 44.4903, 0.2756", "324.864, 587.855, 45.001, 0.2766", "323.79, 588.231, 45.4124, 0.2782", "322.714, 588.605, 45.747, 0.2814", "321.64, 588.982, 46.0236, 0.287", "320.574, 589.386, 46.2518, 0.2988", "319.532, 589.854, 46.4346, 0.3142", "318.491, 590.328, 46.5881, 0.3734", "317.451, 590.802, 46.7194, 0.3338", "316.41, 591.275, 46.835, 0.3", "315.398, 591.807, 46.94, 0.2746", "314.498, 592.512, 47.0366, 0.2746", "313.609, 593.232, 47.1299, 0.2746", "312.72, 593.951, 47.2228, 0.2746", "311.832, 594.671, 47.3178, 0.2746", "310.944, 595.391, 47.4186, 0.2746", "310.068, 596.128, 47.5247, 0.2746", "309.192, 596.865, 47.6456, 0.2746", "308.318, 597.603, 47.7924, 0.2746", "307.444, 598.341, 47.9732, 0.2746", "306.569, 599.077, 48.1942, 0.2746", "305.63, 599.689, 48.5324, 0.2744", "304.672, 600.154, 49.0308, 0.2744", "303.715, 600.609, 49.644, 0.2742", "302.732, 601.148, 50.2536, 0.274", "301.749, 601.696, 50.8334, 0.2736", "300.767, 602.243, 51.3685, 0.2728", "299.741, 602.728, 51.8286, 0.2712", "298.704, 603.196, 52.2124, 0.2684", "297.572, 603.293, 52.5426, 0.2626", "296.449, 603.119, 52.8357, 0.2542", "295.365, 602.778, 53.0928, 0.2288", "294.38, 602.206, 53.5581, 0.2288" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "361.863, 547.537, 18.3333, 0.5178", "361.219, 547.553, 16.4376, 0.4576", "360.153, 547.247, 15.2998, 0.472", "359.254, 546.557, 14.8738, 0.501", "358.422, 545.792, 14.3391, 0.6858", "357.733, 545.252, 13.5311, 0.8508", "357.174, 544.553, 12.5404, 0.8744", "356.641, 543.784, 11.4768, 0.6868", "356.016, 542.993, 10.4642, 0.5462", "355.274, 542.198, 9.6122, 0.4242", "354.666, 541.255, 8.9923, 0.4404", "354.204, 540.219, 8.6255, 0.4366", "353.933, 539.206, 8.6579, 0.3664", "353.642, 538.218, 8.9935, 0.3128", "353.0, 537.283, 9.3862, 0.2994", "352.179, 536.489, 9.7698, 0.3154", "351.213, 535.884, 10.1253, 0.3758", "350.232, 535.304, 10.4367, 0.3382", "349.248, 534.727, 10.6964, 0.3082", "348.264, 534.15, 10.9346, 0.2896", "347.281, 533.567, 11.1679, 0.3034", "346.298, 532.982, 11.3924, 0.323", "345.322, 532.399, 11.6553, 0.3896", "344.36, 531.83, 11.9947, 0.365", "343.345, 531.358, 12.3866, 0.3526", "342.278, 531.004, 12.8028, 0.3976", "341.2, 530.67, 13.2233, 0.3794", "340.098, 530.384, 13.6049, 0.3804", "338.991, 530.103, 13.9441, 0.4438", "337.886, 529.823, 14.2503, 0.4906", "336.793, 529.499, 14.5439, 0.4622", "335.702, 529.167, 14.8415, 0.5126", "334.612, 528.835, 15.1563, 0.5622", "333.616, 528.288, 15.5114, 0.6398", "332.706, 527.612, 15.9111, 0.6232", "331.713, 527.121, 16.3922, 0.4566", "330.665, 526.802, 16.9447, 0.3496", "329.585, 526.969, 17.5409, 0.3142", "328.503, 527.153, 18.1453, 0.3738", "327.385, 527.275, 18.6917, 0.3344", "326.265, 527.394, 19.1683, 0.301", "325.147, 527.513, 19.5695, 0.2766", "324.012, 527.64, 19.848, 0.2782", "322.876, 527.772, 19.9973, 0.2814", "321.74, 527.904, 20.0494, 0.287", "320.604, 528.036, 20.0335, 0.2988", "319.462, 528.113, 19.9692, 0.3142", "318.32, 528.171, 19.8734, 0.3736", "317.179, 528.231, 19.7607, 0.3342", "316.036, 528.29, 19.6353, 0.3004", "314.896, 528.232, 19.4785, 0.2754", "313.764, 528.113, 19.2859, 0.2762", "312.63, 527.993, 19.0645, 0.2778", "311.497, 527.874, 18.8215, 0.2804", "310.36, 527.831, 18.557, 0.2856", "309.224, 527.827, 18.2773, 0.2948", "308.088, 527.822, 17.9921, 0.313", "306.951, 527.818, 17.709, 0.3418", "305.816, 527.828, 17.4336, 0.4196", "304.68, 527.843, 17.1729, 0.4448", "303.544, 527.859, 16.9341, 0.3818", "302.408, 527.868, 16.7241, 0.3414", "301.292, 527.62, 16.6028, 0.3534", "300.178, 527.365, 16.5555, 0.4098", "299.063, 527.109, 16.5652, 0.5782", "297.931, 526.954, 16.6197, 0.5818", "296.79, 526.876, 16.7049, 0.7124", "295.658, 526.731, 16.8036, 0.8106", "294.718, 526.081, 16.9012, 0.7768", "293.844, 525.344, 16.9872, 0.6186", "293.203, 524.397, 17.0397, 0.5592", "292.56, 523.451, 17.071, 0.2288" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "375.231, 532.219, 20.5906, 0.3824", "375.2, 531.792, 19.9445, 0.2288", "375.127, 530.769, 18.8519, 0.6662", "375.647, 529.824, 18.3726, 0.6434", "376.578, 529.178, 17.9201, 0.6328", "377.602, 528.694, 17.5119, 0.4598", "378.626, 528.21, 17.1608, 0.4272", "379.666, 527.745, 16.8944, 0.3392" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "375.231, 532.219, 20.5906, 0.3824", "374.893, 531.16, 20.7108, 0.4894", "374.548, 530.073, 20.8586, 0.6006", "374.324, 528.954, 21.006, 0.5436", "374.206, 527.815, 21.1346, 0.5712", "374.077, 526.68, 21.2637, 0.6614", "373.93, 525.551, 21.4137, 0.6396", "373.785, 524.423, 21.5758, 0.8314" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "390.518, 552.919, 14.3232, 0.3886", "390.987, 552.995, 14.4029, 0.532", "392.039, 553.326, 14.4157, 0.5292", "392.966, 553.96, 14.4847, 0.4544", "393.514, 554.834, 14.6084, 0.4256", "393.672, 555.955, 14.6707, 0.5256", "393.901, 557.062, 14.6644, 0.6514", "394.286, 558.135, 14.6634, 0.7172", "394.786, 559.162, 14.6688, 0.5072", "395.314, 560.177, 14.6687, 0.3578", "395.786, 561.212, 14.7008, 0.2874", "396.189, 562.277, 14.7743, 0.2994", "396.477, 563.38, 14.8411, 0.3154", "396.668, 564.506, 14.8651, 0.3758", "396.807, 565.639, 14.8555, 0.3384", "396.874, 566.78, 14.8392, 0.3084", "396.89, 567.924, 14.8331, 0.29", "396.898, 569.067, 14.8454, 0.3042", "396.904, 570.211, 14.8852, 0.3244", "396.896, 571.354, 14.9599, 0.3924", "396.874, 572.497, 15.0691, 0.369", "396.848, 573.637, 15.2036, 0.3658", "396.826, 574.779, 15.3538, 0.3932", "396.824, 575.919, 15.5135, 0.5116", "396.846, 577.059, 15.6767, 0.6306", "396.873, 578.199, 15.8342, 0.654", "396.886, 579.341, 15.9686, 0.5096", "396.875, 580.485, 16.0618, 0.4672", "396.847, 581.628, 16.114, 0.439", "396.788, 582.77, 16.1387, 0.3708", "396.687, 583.909, 16.1487, 0.3212", "396.556, 585.046, 16.1596, 0.3142", "396.398, 586.178, 16.1931, 0.3472", "396.23, 587.308, 16.2619, 0.4132", "396.108, 588.444, 16.3557, 0.5122", "396.031, 589.584, 16.462, 0.809", "396.006, 590.726, 16.5829, 0.8102", "396.046, 591.866, 16.7236, 0.7322", "396.126, 593.004, 16.8645, 0.5192", "396.214, 594.143, 16.9739, 0.4552", "396.183, 595.279, 17.0757, 0.5618", "395.918, 596.379, 17.2229, 0.5816", "395.49, 597.43, 17.4192, 0.5658", "394.987, 598.45, 17.6445, 0.563", "394.447, 599.455, 17.8945, 0.4296", "393.886, 600.442, 18.1717, 0.3456", "393.311, 601.419, 18.4675, 0.3128", "392.744, 602.403, 18.7648, 0.3412", "392.216, 603.411, 19.0482, 0.4184", "391.72, 604.438, 19.3102, 0.4428", "391.245, 605.476, 19.5517, 0.3776", "390.824, 606.536, 19.7765, 0.335", "390.485, 607.626, 19.9898, 0.3342", "390.182, 608.728, 20.2005, 0.4102", "389.994, 609.848, 20.4245, 0.4044", "390.066, 610.975, 20.6798, 0.4196", "390.279, 612.09, 20.9699, 0.5496", "390.511, 613.201, 21.2901, 0.5268", "390.776, 614.3, 21.6403, 0.6196", "391.08, 615.383, 22.0182, 0.5944", "391.43, 616.451, 22.4073, 0.5906", "391.877, 617.485, 22.7825, 0.6034", "392.434, 618.473, 23.1202, 0.53", "393.01, 619.459, 23.3966, 0.409", "393.378, 620.529, 23.6036, 0.3396", "393.459, 621.662, 23.7634, 0.3736", "393.514, 622.803, 23.898, 0.3342", "393.681, 623.933, 24.0226, 0.3006", "393.927, 625.05, 24.1538, 0.2756", "394.163, 626.163, 24.3249, 0.2766", "394.466, 627.24, 24.5638, 0.2782", "394.996, 628.221, 24.8443, 0.2814", "395.584, 629.193, 25.1083, 0.2872", "396.099, 630.214, 25.317, 0.2982", "396.459, 631.295, 25.4679, 0.3182", "396.647, 632.42, 25.5689, 0.3562", "396.741, 633.559, 25.6254, 0.4222", "396.768, 634.703, 25.6449, 0.5658", "396.747, 635.846, 25.6384, 0.7292", "396.71, 636.99, 25.6153, 0.8458", "396.565, 638.119, 25.5505, 0.822", "396.373, 639.239, 25.4304, 0.5708", "396.272, 640.372, 25.2837, 0.423", "396.262, 641.514, 25.1403, 0.436", "396.375, 642.65, 25.0187, 0.439", "396.724, 643.731, 24.9156, 0.5482", "397.438, 644.593, 24.8171, 0.4764", "398.467, 645.025, 24.7341, 0.5306", "399.542, 645.399, 24.7114, 0.4068", "400.032, 646.337, 24.7201, 0.3518", "400.116, 647.474, 24.744, 0.3182", "400.223, 648.61, 24.7763, 0.3812", "400.538, 649.708, 24.7783, 0.3484", "400.926, 650.784, 24.7312, 0.3266", "401.457, 651.794, 24.6122, 0.3246", "402.058, 652.762, 24.4238, 0.3642", "402.697, 653.706, 24.1826, 0.4558", "403.284, 654.683, 23.8925, 0.5378", "403.518, 655.772, 23.5211, 0.43", "403.678, 656.892, 23.1114, 0.3464", "403.866, 658.008, 22.6787, 0.3134", "404.609, 658.8, 22.1748, 0.3472", "405.733, 658.734, 21.6979, 0.4054", "406.859, 658.776, 21.2145, 0.5358", "407.773, 659.363, 20.6893, 0.6694", "408.258, 660.319, 20.1312, 0.7542", "408.297, 661.414, 19.5955, 0.5592", "408.08, 662.535, 19.1888, 0.5338", "407.758, 663.624, 18.8306, 0.2288" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "390.518, 552.919, 14.3232, 0.3886", "390.879, 553.027, 15.2729, 0.2288", "391.882, 553.198, 15.9622, 0.3044", "393.013, 553.19, 16.2399, 0.3246", "394.155, 553.25, 16.4429, 0.3928", "395.298, 553.291, 16.5797, 0.3706", "396.436, 553.304, 16.6412, 0.3638", "397.572, 553.293, 16.6493, 0.4132", "398.716, 553.283, 16.6655, 0.433", "399.859, 553.276, 16.7512, 0.36", "400.998, 553.286, 16.9461, 0.3012", "402.123, 553.32, 17.2763, 0.2766", "403.243, 553.341, 17.7286, 0.2784", "404.34, 553.397, 18.2919, 0.2818", "405.379, 553.71, 18.9503, 0.2878", "406.376, 553.698, 19.6625, 0.3", "407.36, 553.178, 20.375, 0.3166", "408.399, 552.765, 21.07, 0.378", "409.505, 552.56, 21.7368, 0.3426", "410.633, 552.544, 22.3857, 0.316", "411.715, 552.481, 23.0766, 0.304", "412.649, 552.21, 23.8949, 0.3304", "413.498, 551.851, 24.8426, 0.3726", "414.459, 551.43, 25.7191, 0.483", "415.535, 551.072, 26.4129, 0.531", "416.605, 551.131, 27.0858, 0.6954", "417.623, 551.419, 27.7999, 0.8624", "418.665, 551.572, 28.537, 0.6974", "419.731, 551.505, 29.2807, 0.6366", "420.794, 551.273, 30.0168, 0.7056", "421.842, 550.933, 30.7112, 0.6376", "422.857, 550.464, 31.3048, 0.5492", "423.822, 549.87, 31.7671, 0.4294", "424.771, 549.241, 32.1118, 0.4504", "425.725, 548.615, 32.3518, 0.4548", "426.687, 547.998, 32.4946, 0.4012", "427.651, 547.383, 32.5556, 0.3734", "428.595, 546.737, 32.5466, 0.431", "429.5, 546.039, 32.4708, 0.4656", "430.414, 545.356, 32.3277, 0.4222", "431.392, 544.78, 32.114, 0.4072", "432.43, 544.308, 31.8578, 0.5194", "433.5, 543.91, 31.5927, 0.506", "434.522, 543.443, 31.2631, 0.4102", "435.417, 542.864, 30.8148, 0.3492", "436.266, 542.188, 30.3078, 0.3554", "437.097, 541.431, 29.8343, 0.4754", "437.919, 540.644, 29.4328, 0.3992", "438.799, 539.921, 29.1138, 0.3364", "439.798, 539.375, 28.8912, 0.2948", "440.858, 538.946, 28.758, 0.3132", "441.944, 538.592, 28.6868, 0.341", "443.075, 538.441, 28.6628, 0.4226", "444.216, 538.437, 28.6787, 0.4284", "445.359, 538.495, 28.7157, 0.4588", "446.496, 538.607, 28.7552, 0.6488", "447.462, 538.119, 28.7574, 0.5808", "448.439, 537.616, 28.9024, 0.665", "449.434, 537.105, 29.136, 0.4862", "450.211, 536.269, 29.3619, 0.408", "450.909, 535.366, 29.5873, 0.4072", "451.369, 534.327, 29.8259, 0.391", "451.681, 533.236, 30.0656, 0.4324", "451.735, 532.095, 30.2604, 0.391", "451.731, 530.951, 30.4058, 0.431", "451.687, 529.81, 30.4996, 0.3956", "452.141, 528.765, 30.6138, 0.404", "452.72, 527.786, 30.7642, 0.5182", "453.325, 526.818, 30.931, 0.4802", "453.931, 525.849, 31.1184, 0.4778", "454.511, 524.866, 31.3295, 0.6", "454.937, 523.814, 31.5801, 0.6704", "455.355, 522.759, 31.8511, 0.6426", "455.778, 521.705, 32.1342, 0.4456", "456.355, 520.731, 32.4296, 0.3282", "456.921, 519.748, 32.7239, 0.28", "457.223, 518.644, 32.9638, 0.2846", "457.513, 517.538, 33.1551, 0.2928", "457.734, 516.422, 33.343, 0.3094", "457.948, 515.305, 33.532, 0.3348", "458.075, 514.174, 33.7145, 0.4068", "458.09, 513.035, 33.8848, 0.4208", "458.226, 511.899, 33.9962, 0.339", "458.519, 510.811, 33.9993, 0.2542", "458.754, 509.711, 34.1418, 0.2288" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "362.409, 551.377, 31.3264, 0.4008", "361.749, 551.699, 32.2778, 0.4024", "360.849, 552.306, 33.2097, 0.3406", "360.079, 553.09, 34.1124, 0.3124", "359.447, 553.959, 35.0272, 0.2976", "358.899, 554.872, 35.9783, 0.3182", "358.215, 555.648, 36.9886, 0.351", "357.338, 556.246, 38.0274, 0.4374", "356.421, 556.834, 39.0622, 0.473", "355.583, 557.451, 40.1318, 0.4594", "355.004, 558.19, 41.272, 0.3616", "354.717, 559.042, 42.4696, 0.3042", "354.5, 560.033, 43.6215, 0.2824", "354.273, 561.098, 44.6538, 0.289", "354.168, 562.191, 45.5608, 0.3024", "354.267, 563.286, 46.3428, 0.321", "354.623, 564.33, 47.0053, 0.3858", "355.162, 565.304, 47.5546, 0.358", "355.762, 566.256, 48.0077, 0.3396", "356.326, 567.244, 48.3482, 0.3734", "356.608, 568.34, 48.5383, 0.334", "356.691, 569.474, 48.6111, 0.3002", "356.771, 570.614, 48.6391, 0.2748", "356.795, 571.758, 48.6682, 0.2752", "356.674, 572.893, 48.7267, 0.2756", "356.477, 574.02, 48.8418, 0.2766", "356.112, 575.102, 49.0325, 0.2782", "355.648, 576.147, 49.2999, 0.2814", "355.246, 577.218, 49.6401, 0.287", "354.917, 578.301, 50.099, 0.2988", "354.752, 578.722, 50.939, 0.3142", "354.56, 579.024, 52.0811, 0.3734", "354.012, 579.999, 53.0718, 0.3338", "353.451, 580.993, 53.8874, 0.3", "353.022, 582.043, 54.5642, 0.2746", "352.608, 583.097, 55.1085, 0.2746", "352.194, 584.152, 55.5341, 0.2746", "351.802, 585.213, 55.9045, 0.2746", "351.445, 586.286, 56.2808, 0.2746", "351.09, 587.362, 56.6574, 0.2746", "350.734, 588.435, 57.0254, 0.2746", "350.379, 589.509, 57.3807, 0.2746", "350.015, 590.583, 57.713, 0.2746", "349.618, 591.654, 57.9958, 0.2746", "349.219, 592.725, 58.2378, 0.2746", "348.822, 593.795, 58.45, 0.2746", "348.423, 594.866, 58.6454, 0.2746", "348.071, 595.953, 58.8322, 0.2746", "347.792, 597.062, 59.0153, 0.2746", "347.517, 598.172, 59.2074, 0.2746", "347.242, 599.282, 59.4129, 0.2746", "346.918, 600.341, 59.7254, 0.2744", "346.585, 601.378, 60.1356, 0.2744", "346.329, 602.476, 60.5492, 0.2742", "346.082, 603.58, 60.9434, 0.274", "345.805, 604.683, 61.2853, 0.2736", "345.495, 605.784, 61.5471, 0.2728", "345.142, 606.87, 61.7285, 0.2712", "344.669, 607.911, 61.8422, 0.2684", "343.956, 608.806, 61.9032, 0.2626", "343.127, 609.594, 61.9293, 0.2542", "342.302, 610.386, 61.9374, 0.2288", "341.834, 611.43, 61.9385, 0.2288" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "362.409, 551.377, 31.3264, 0.4008", "362.36, 551.383, 32.0166, 0.4576", "361.745, 550.725, 33.0744, 0.3842", "361.028, 549.856, 33.5012, 0.3484", "360.312, 548.985, 33.9727, 0.3536", "359.595, 548.116, 34.4733, 0.4722", "358.949, 547.195, 34.9924, 0.3932", "358.318, 546.262, 35.5172, 0.3254", "357.688, 545.331, 36.0371, 0.2746", "357.056, 544.399, 36.5663, 0.2746", "356.491, 543.435, 37.1101, 0.2746", "356.056, 542.406, 37.6765, 0.2746", "355.622, 541.377, 38.2609, 0.2746", "355.188, 540.349, 38.859, 0.2746", "354.753, 539.32, 39.4677, 0.2746", "354.319, 538.292, 40.0856, 0.2746", "354.019, 537.214, 40.7058, 0.2746", "353.742, 536.128, 41.3311, 0.2746", "353.466, 535.042, 41.9684, 0.2746", "353.189, 533.955, 42.6272, 0.2746", "353.14, 532.854, 43.3241, 0.2746", "353.24, 531.744, 44.0742, 0.2746", "353.338, 530.633, 44.8868, 0.2744", "353.573, 529.591, 45.7951, 0.2744", "354.083, 528.688, 46.8454, 0.2742", "354.743, 528.234, 48.0575, 0.274", "355.575, 528.299, 49.4382, 0.2736", "356.254, 528.733, 50.92, 0.2728", "356.902, 529.241, 52.4457, 0.2712", "357.824, 529.217, 53.8955, 0.2684", "358.758, 529.166, 55.2247, 0.2626", "359.765, 528.799, 56.2716, 0.2542", "360.797, 528.321, 57.0254, 0.2288", "361.828, 527.844, 57.9869, 0.2288" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "390.833, 540.002, 17.0628, 0.722", "391.714, 539.417, 16.1376, 0.4576", "392.725, 538.899, 15.9632, 0.4502", "393.772, 538.437, 15.897, 0.4524", "394.861, 538.09, 15.8192, 0.6346", "395.983, 537.878, 15.7353, 0.5668", "397.113, 537.699, 15.6471, 0.5784", "398.239, 537.498, 15.5531, 0.6206", "399.361, 537.28, 15.4396, 0.5986", "400.444, 537.125, 15.2074, 0.5862", "401.561, 536.949, 14.9514, 0.4256", "402.679, 536.706, 14.7362, 0.3384", "403.776, 536.385, 14.5612, 0.2982", "404.867, 536.043, 14.415, 0.3198", "405.948, 535.669, 14.2867, 0.3524", "407.028, 535.29, 14.1636, 0.4476", "408.119, 534.945, 14.014, 0.4558", "409.238, 534.722, 13.8066, 0.6026", "410.372, 534.795, 13.5121, 0.4638", "411.514, 534.845, 13.1549, 0.3714", "412.647, 534.693, 12.7252, 0.3138", "413.764, 534.463, 12.1661, 0.3414", "414.695, 533.997, 11.378, 0.4266", "414.994, 533.335, 10.2933, 0.4208", "415.54, 532.827, 9.0308, 0.517", "416.401, 532.994, 7.7379, 0.4068", "417.202, 533.609, 5.178, 0.4576" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "390.833, 540.002, 17.0628, 0.722", "391.919, 539.883, 17.0215, 0.6478", "392.953, 539.418, 16.9991, 0.6644", "393.99, 538.938, 17.028, 0.6336", "395.071, 538.58, 17.134, 0.6468", "396.166, 538.314, 17.3453, 0.5582", "397.235, 538.106, 17.6881, 0.4858", "398.336, 537.896, 18.0756, 0.3636", "399.461, 537.725, 18.3827, 0.3078", "400.576, 537.901, 18.6522, 0.2892", "401.598, 538.367, 18.9431, 0.3014", "402.679, 538.715, 19.2225, 0.3256", "403.805, 538.91, 19.468, 0.3636", "404.937, 539.055, 19.7211, 0.4668", "406.069, 539.168, 20.0155, 0.4986", "407.183, 538.996, 20.3568, 0.6468", "408.219, 538.546, 20.7411, 0.717", "409.284, 538.154, 21.1586, 0.6948", "410.387, 537.877, 21.5959, 0.7082", "411.408, 537.459, 22.1052, 0.6974", "411.691, 536.588, 22.7765, 0.6204", "412.286, 535.681, 23.4486, 0.526", "413.319, 535.2, 24.0067, 0.574", "414.333, 534.676, 24.4595, 0.7244", "415.135, 533.86, 24.7835, 0.7044" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "359.617, 553.627, 18.5408, 0.5176", "358.579, 553.026, 18.315, 0.334", "357.519, 552.612, 18.254, 0.3002", "356.395, 552.43, 18.206, 0.2748", "355.284, 552.616, 18.1511, 0.275", "354.257, 553.103, 18.0728, 0.2754", "353.284, 553.701, 17.9624, 0.276", "352.346, 554.349, 17.8253, 0.2772", "351.418, 555.013, 17.6728, 0.2796", "350.498, 555.687, 17.5239, 0.284", "349.585, 556.375, 17.3969, 0.2916", "348.676, 557.071, 17.2966, 0.3074", "347.769, 557.768, 17.2189, 0.3302", "346.824, 558.409, 17.155, 0.4032", "345.836, 558.984, 17.0964, 0.3898", "344.832, 559.534, 17.0379, 0.4004", "343.827, 560.08, 16.9775, 0.4768", "342.778, 560.529, 16.9175, 0.5712", "341.685, 560.863, 16.8611, 0.5176", "340.58, 561.161, 16.8095, 0.385", "339.475, 561.453, 16.7623, 0.3006", "338.368, 561.741, 16.721, 0.2756", "337.259, 562.024, 16.6861, 0.2764", "336.151, 562.306, 16.655, 0.278", "335.041, 562.586, 16.6245, 0.2808", "333.918, 562.795, 16.5856, 0.2862", "332.782, 562.911, 16.5307, 0.2958", "331.641, 562.99, 16.4599, 0.3148", "330.5, 563.064, 16.3772, 0.3452", "329.359, 563.132, 16.2948, 0.4256", "328.217, 563.191, 16.2224, 0.457", "327.074, 563.25, 16.1603, 0.3992", "325.932, 563.326, 16.0977, 0.3994", "324.797, 563.441, 16.0184, 0.335", "323.663, 563.579, 15.9159, 0.3022", "322.533, 563.737, 15.7956, 0.2788", "321.41, 563.946, 15.6698, 0.2822", "320.295, 564.198, 15.5487, 0.2888", "319.182, 564.456, 15.437, 0.3006", "318.053, 564.633, 15.339, 0.3252", "316.912, 564.645, 15.2576, 0.3578", "315.772, 564.563, 15.1905, 0.4802", "314.631, 564.464, 15.1321, 0.4076", "313.489, 564.397, 15.078, 0.3532", "312.346, 564.376, 15.0247, 0.3208", "311.202, 564.379, 14.9687, 0.3856", "310.083, 564.586, 14.9009, 0.3566", "309.039, 565.039, 14.8136, 0.3418", "308.236, 565.825, 14.6965, 0.354", "307.602, 566.77, 14.5558, 0.4134", "306.902, 567.671, 14.4214, 0.5726", "306.135, 568.521, 14.3011, 0.6296", "305.341, 569.336, 14.1735, 0.518", "304.693, 570.267, 14.0415, 0.4526", "304.255, 571.316, 13.9261, 0.5576", "303.885, 572.396, 13.8763, 0.5708", "303.518, 573.476, 13.8949, 0.5596", "303.144, 574.557, 13.9355, 0.4846", "302.792, 575.645, 13.9941, 0.6088", "302.543, 576.747, 14.1152, 0.475", "301.971, 577.682, 14.3081, 0.3938", "301.046, 578.287, 14.3835, 0.3486", "300.618, 579.315, 14.3802, 0.4394", "299.99, 580.269, 14.3781, 0.4468", "299.118, 581.006, 14.3591, 0.5552", "298.196, 581.683, 14.3527, 0.525", "297.2, 582.233, 14.3913, 0.4464", "296.186, 582.749, 14.4805, 0.4116", "295.178, 583.278, 14.587, 0.4956", "294.175, 583.816, 14.6825, 0.615", "293.225, 584.435, 14.6665, 0.5574", "292.297, 585.061, 14.5322, 0.6588", "291.262, 585.547, 14.3995, 0.5228", "290.273, 586.119, 14.2503, 0.4718", "289.429, 586.854, 14.0354, 0.5444", "288.539, 587.571, 13.8742, 0.5546", "287.614, 588.236, 13.8013, 0.4896", "286.533, 588.607, 13.7381, 0.5478", "285.449, 588.968, 13.6623, 0.4754", "284.375, 589.358, 13.5667, 0.529", "283.296, 589.734, 13.4648, 0.404", "282.211, 590.095, 13.3595, 0.3456", "281.231, 590.684, 13.2378, 0.3118", "280.329, 591.388, 13.093, 0.3446", "279.774, 592.361, 12.8432, 0.3996", "279.337, 593.408, 12.543, 0.5294", "279.141, 594.534, 12.244, 0.6346", "279.023, 595.61, 11.8302, 0.8022", "278.905, 596.684, 11.3501, 0.788", "278.824, 597.812, 10.9183, 0.7372", "278.739, 598.951, 10.5908, 0.5338", "278.738, 600.096, 10.1654, 0.6864" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "359.617, 553.627, 18.5408, 0.5176", "359.262, 553.738, 17.9747, 0.2288", "358.194, 554.104, 17.3933, 0.3012", "357.184, 554.628, 17.1727, 0.3186", "356.326, 555.373, 16.9316, 0.3816", "355.755, 556.324, 16.5806, 0.3492", "355.394, 557.326, 16.0539, 0.3282", "354.925, 558.331, 15.4561, 0.3288", "354.202, 559.015, 14.7095, 0.3648", "353.52, 559.856, 13.9141, 0.4928", "352.995, 560.812, 13.0946, 0.4322", "352.311, 561.686, 12.3146, 0.3922", "351.489, 562.424, 11.5711, 0.4258", "350.598, 563.04, 10.8448, 0.4208", "350.065, 563.479, 9.9767, 0.5112", "349.113, 564.104, 9.3281, 0.4238", "348.111, 564.654, 8.8763, 0.356", "346.975, 564.793, 8.4, 0.4576" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "383.211, 552.303, 25.7195, 0.3876", "383.286, 552.371, 25.8259, 0.36", "384.077, 553.195, 25.9813, 0.3492", "384.585, 554.134, 26.1076, 0.3616" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "383.211, 552.303, 25.7195, 0.3876", "384.382, 551.912, 26.923, 0.4454", "385.359, 551.586, 27.6295, 0.328", "386.337, 551.26, 28.4483, 0.2794", "387.314, 550.934, 29.3213, 0.2834", "388.319, 550.607, 30.1748, 0.2908", "389.391, 550.285, 30.8848, 0.3058", "390.494, 549.986, 31.3821, 0.3268", "391.614, 549.756, 31.7251, 0.3982", "392.744, 549.625, 31.992, 0.3744", "393.877, 549.515, 32.2291, 0.4006", "395.0, 549.383, 32.473, 0.3374", "396.125, 549.246, 32.7365, 0.3064", "397.26, 549.135, 32.9924, 0.2864", "398.4, 549.051, 33.2116, 0.2964", "399.542, 548.986, 33.3998, 0.3158", "400.684, 548.942, 33.5804, 0.3468", "401.821, 548.858, 33.7688, 0.4286", "402.94, 548.664, 33.9833, 0.4628", "404.048, 548.413, 34.2286, 0.4098", "405.153, 548.15, 34.4968, 0.4192", "406.252, 547.855, 34.7726, 0.3716", "407.341, 547.523, 35.0414, 0.3704", "408.427, 547.181, 35.2976, 0.403", "409.507, 546.815, 35.5379, 0.5226", "410.558, 546.373, 35.7591, 0.6866", "411.584, 545.87, 35.9635, 0.585", "412.599, 545.345, 36.155, 0.5356", "413.586, 544.768, 36.3247, 0.6842", "414.547, 544.149, 36.4893, 0.708", "415.497, 543.553, 36.724, 0.6018", "416.426, 542.915, 37.0143, 0.4474", "417.382, 542.293, 37.2974, 0.4128", "418.379, 541.732, 37.5581, 0.5008", "419.4, 541.254, 37.8661, 0.6108", "420.367, 540.761, 38.2696, 0.6164", "421.308, 540.192, 38.7142, 0.444", "422.31, 539.707, 39.1516, 0.3254", "423.396, 539.422, 39.5486, 0.2748", "424.513, 539.204, 39.8535, 0.2748", "425.617, 538.917, 40.0126, 0.2752", "426.711, 538.61, 40.0302, 0.2756", "427.827, 538.44, 39.9538, 0.2766", "428.955, 538.422, 39.8345, 0.2784", "430.09, 538.455, 39.7348, 0.2816", "431.23, 538.539, 39.7256, 0.2874", "432.352, 538.667, 39.872, 0.2994", "433.385, 538.824, 40.2427, 0.3152", "434.398, 538.862, 40.7954, 0.3756", "435.468, 538.584, 41.3535, 0.3378", "436.527, 538.159, 41.8174, 0.3074", "437.599, 537.76, 42.1716, 0.2882", "438.686, 537.404, 42.425, 0.2998", "439.81, 537.226, 42.6266, 0.321", "440.943, 537.227, 42.8165, 0.3626", "442.073, 537.375, 43.0046, 0.4288", "443.211, 537.474, 43.1841, 0.6034", "444.34, 537.316, 43.342, 0.6768", "445.435, 536.989, 43.4843, 0.6542", "446.495, 536.561, 43.631, 0.4682", "447.537, 536.093, 43.7956, 0.365", "448.55, 535.568, 43.9975, 0.3734", "449.509, 534.961, 44.254, 0.3338", "450.444, 534.325, 44.562, 0.3", "451.339, 533.633, 44.9075, 0.2746", "452.181, 532.878, 45.278, 0.2746", "453.076, 532.183, 45.6585, 0.2746", "454.086, 531.666, 46.0312, 0.2746", "455.068, 531.092, 46.3896, 0.2746", "455.932, 530.349, 46.7351, 0.2746", "456.843, 529.671, 47.098, 0.2746", "457.846, 529.161, 47.5048, 0.2746", "458.96, 528.971, 47.927, 0.2746", "459.969, 528.51, 48.4086, 0.2746", "460.73, 527.749, 48.9726, 0.2746", "461.496, 526.954, 49.5608, 0.2746", "462.338, 526.19, 50.0906, 0.2746", "463.194, 525.435, 50.5529, 0.2746", "463.996, 524.643, 50.9989, 0.2746", "464.732, 523.824, 51.4615, 0.2748", "465.061, 522.765, 51.9154, 0.2748", "464.931, 521.641, 52.3267, 0.275", "464.606, 520.545, 52.6546, 0.2754", "464.271, 519.45, 52.9082, 0.2762", "464.02, 518.335, 53.1135, 0.2778", "463.902, 517.205, 53.3316, 0.2804", "463.852, 516.078, 53.5917, 0.2854", "463.752, 514.953, 53.8874, 0.2944", "463.744, 513.828, 54.2094, 0.3126", "463.929, 512.721, 54.5412, 0.3396", "464.241, 511.628, 54.8204, 0.4228", "464.677, 510.569, 54.9976, 0.4148", "465.12, 509.515, 55.0903, 0.501", "465.706, 508.545, 55.0715, 0.3996", "466.336, 507.61, 54.9693, 0.3368", "467.213, 506.888, 54.8514, 0.297", "468.191, 506.303, 54.7851, 0.3108", "469.158, 505.695, 54.8341, 0.3672", "470.115, 505.081, 54.997, 0.322", "470.979, 504.377, 55.2972, 0.2796", "471.735, 503.611, 55.7278, 0.2288", "472.49, 502.843, 56.9033, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "379.666, 527.745, 16.8944, 0.3392", "380.148, 528.745, 16.8169, 0.2932", "381.032, 529.348, 16.8981, 0.3086", "382.126, 529.334, 16.9004, 0.3398", "383.088, 528.779, 16.8309, 0.3858", "383.884, 527.967, 16.7044, 0.5268", "384.63, 527.103, 16.5227, 0.5198", "385.311, 526.186, 16.3014, 0.4368", "385.696, 525.128, 16.0923, 0.3932", "385.839, 523.997, 15.8826, 0.4626", "386.102, 522.92, 15.573, 0.5502", "386.865, 522.306, 15.0876, 0.453", "387.819, 521.763, 14.5296, 0.3902", "388.724, 521.082, 13.9796, 0.3894", "389.697, 520.489, 13.4497, 0.514", "390.757, 520.077, 12.9447, 0.589", "391.851, 519.759, 12.4634, 0.7994", "392.657, 519.504, 11.7889, 1.0728", "393.287, 518.866, 10.9737, 1.0028", "393.998, 517.975, 10.3071, 0.9268", "394.963, 517.368, 9.7494, 0.753", "396.07, 517.095, 9.2936, 0.591", "397.126, 516.657, 8.9568, 0.4276", "397.909, 515.851, 8.6567, 0.3752", "398.486, 514.911, 8.3293, 0.4354", "399.092, 513.947, 8.0238, 0.4688", "399.867, 513.105, 7.771, 0.452", "400.814, 512.469, 7.6064, 0.3474", "401.807, 511.907, 7.5124, 0.2796", "402.747, 511.28, 7.3834, 0.2288", "403.67, 510.652, 6.9171, 0.2288" ],
    "parent" : "apic_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "379.666, 527.745, 16.8944, 0.3392", "380.317, 528.21, 15.2335, 0.2288", "381.116, 528.836, 13.7988, 0.3124", "381.994, 529.44, 13.1903, 0.3438", "382.904, 529.987, 12.4963, 0.4068", "384.003, 530.175, 11.8152, 0.5018", "385.037, 529.691, 11.2393, 0.7824", "386.133, 529.394, 10.7485, 0.7966", "387.245, 529.316, 10.3068, 0.5338", "388.361, 529.268, 9.9059, 0.305", "389.496, 529.218, 9.2112, 0.2288" ],
    "parent" : "apic_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "373.785, 524.423, 21.5758, 0.8314", "373.227, 524.047, 23.0371, 0.4576", "372.38, 523.62, 24.991, 0.5574", "371.443, 523.432, 25.8406, 0.4192", "370.535, 523.806, 26.8119, 0.3264", "369.851, 524.64, 27.7777, 0.2766", "369.266, 525.603, 28.6504, 0.2782", "368.741, 526.606, 29.4224, 0.2814", "368.407, 527.696, 30.0966, 0.287", "368.114, 528.798, 30.742, 0.2988", "367.876, 529.917, 31.3984, 0.3144", "367.678, 531.041, 32.1616, 0.374", "368.037, 531.144, 33.2262, 0.3348", "368.164, 531.359, 34.7648, 0.3018", "368.466, 531.226, 36.6394, 0.278", "368.898, 530.839, 38.7276, 0.281", "369.328, 530.452, 40.9828, 0.2862", "369.957, 530.432, 43.2558, 0.2966", "370.603, 530.443, 45.4378, 0.3136", "371.249, 530.456, 47.4653, 0.356", "371.895, 530.467, 49.3223, 0.3814", "372.541, 530.479, 52.92, 0.6864" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "373.785, 524.423, 21.5758, 0.8314", "373.538, 523.534, 21.699, 0.745", "373.23, 522.434, 21.794, 0.6718", "372.923, 521.331, 21.8681, 0.8006", "372.78, 520.203, 21.9732, 0.899", "372.656, 519.074, 22.1054, 0.8468", "372.556, 517.936, 22.2326, 0.746", "372.471, 516.795, 22.3428, 0.5786", "372.355, 515.657, 22.4123, 0.6304", "372.23, 514.522, 22.4397, 0.5708", "372.165, 513.393, 22.5105, 0.757", "372.107, 512.269, 22.6197, 0.5784" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "415.135, 533.86, 24.7835, 0.7044", "414.239, 534.0, 25.8051, 0.6864", "413.38, 533.722, 28.4402, 0.7208", "413.06, 533.882, 29.6416, 0.6418", "413.022, 534.617, 31.0467, 0.444", "413.161, 535.623, 32.4411, 0.3254", "413.411, 536.654, 33.7484, 0.2746", "413.778, 537.682, 34.9121, 0.2746", "414.153, 538.711, 35.922, 0.2746", "414.295, 539.797, 36.8119, 0.2748", "414.42, 540.887, 37.6365, 0.275", "414.542, 541.976, 38.4353, 0.2752", "414.414, 543.058, 39.2241, 0.2758", "414.269, 544.137, 40.0042, 0.277", "414.122, 545.217, 40.7725, 0.279", "413.977, 546.297, 41.5288, 0.2826", "413.812, 547.377, 42.2685, 0.2896", "412.911, 548.007, 42.7784, 0.3024", "411.959, 548.539, 43.3471, 0.3268", "411.038, 549.098, 43.9897, 0.3684", "410.19, 549.724, 44.7006, 0.4632", "409.345, 550.35, 45.4482, 0.5536", "408.543, 551.106, 46.1535, 0.4492", "407.781, 551.933, 46.7746, 0.4322", "407.019, 552.76, 47.7988, 0.2288" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "415.135, 533.86, 24.7835, 0.7044", "415.611, 532.316, 25.276, 0.4396", "416.068, 531.282, 25.5284, 0.3624", "416.716, 530.354, 25.7989, 0.3524", "417.536, 529.568, 26.0756, 0.3746", "418.46, 528.906, 26.3594, 0.4456", "419.444, 528.339, 26.6499, 0.6626", "420.443, 527.797, 26.9417, 0.6496", "421.421, 527.215, 27.2266, 0.5834", "422.383, 526.603, 27.5013, 0.6638", "423.306, 525.939, 27.7721, 0.742", "424.068, 525.109, 28.0473, 0.7732", "424.676, 524.148, 28.331, 0.697", "425.248, 523.166, 28.6238, 0.7492", "425.711, 522.135, 28.9293, 0.593", "426.054, 521.059, 29.2452, 0.6174", "426.388, 519.978, 29.5568, 0.5098", "426.807, 518.926, 29.8438, 0.5952", "427.323, 517.911, 30.0894, 0.5156", "427.846, 516.896, 30.2803, 0.6066", "428.336, 515.867, 30.3862, 0.532", "428.828, 514.847, 30.3836, 0.6596", "429.263, 513.822, 30.375, 0.5218", "429.577, 512.783, 30.4721, 0.4818", "429.969, 511.763, 30.5631, 0.5046", "430.493, 510.794, 30.494, 0.7636", "430.947, 509.793, 30.3078, 0.8776", "431.373, 508.741, 30.1017, 0.8076", "431.751, 507.671, 29.8861, 0.6708", "431.759, 506.6, 29.6218, 0.4506", "431.566, 505.55, 29.5, 0.3376", "431.516, 504.511, 29.6111, 0.2972", "431.453, 503.394, 29.7651, 0.316", "431.304, 502.264, 29.8424, 0.3546", "431.064, 501.15, 29.8189, 0.4072", "430.742, 500.105, 29.6237, 0.5966", "430.448, 499.055, 29.2771, 0.502", "430.247, 497.951, 28.8775, 0.432", "430.294, 496.818, 28.5547, 0.4762", "430.543, 495.704, 28.3301, 0.4002", "430.924, 494.628, 28.1613, 0.3386", "431.567, 493.692, 27.9885, 0.299", "432.397, 492.912, 27.7861, 0.3194", "433.352, 492.291, 27.573, 0.3592", "434.212, 491.545, 27.2725, 0.4244", "434.848, 490.636, 26.795, 0.5876", "435.254, 489.632, 26.1615, 0.6836", "435.382, 488.519, 25.485, 0.4914", "435.427, 487.44, 24.7359, 0.3304", "435.472, 486.854, 23.7575, 0.2288", "435.863, 487.729, 21.6233, 0.2288" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "384.585, 554.134, 26.1076, 0.3616", "385.293, 554.35, 24.3308, 0.2288", "386.357, 554.678, 25.4713, 0.3932", "387.418, 555.012, 25.9545, 0.5712", "388.476, 555.354, 26.5346, 0.4526", "389.523, 555.708, 27.1914, 0.3508", "390.503, 556.119, 27.9379, 0.2746", "391.407, 556.605, 28.7672, 0.2746", "392.334, 557.175, 29.5624, 0.2746", "393.295, 557.784, 30.2579, 0.2746", "394.252, 558.341, 30.9252, 0.2746", "395.241, 558.859, 31.5627, 0.2746", "396.197, 559.439, 32.177, 0.2746", "397.163, 559.88, 32.8423, 0.2746", "398.232, 559.759, 33.5152, 0.2746", "399.338, 559.601, 34.1832, 0.2748", "400.445, 559.628, 34.8541, 0.275", "401.526, 559.811, 35.5387, 0.2752", "402.583, 560.107, 36.2306, 0.2758", "403.644, 560.457, 36.8976, 0.277", "404.711, 560.837, 37.5256, 0.279", "405.779, 561.211, 38.1287, 0.2826", "406.843, 561.511, 38.7579, 0.2896", "407.879, 561.713, 39.4562, 0.3026", "408.909, 561.904, 40.2091, 0.326", "409.931, 562.24, 40.9634, 0.3726", "410.905, 562.776, 41.6545, 0.4428", "411.854, 563.395, 42.2453, 0.6526", "412.815, 564.011, 42.7168, 0.6546", "413.825, 564.536, 43.1077, 0.4774", "414.852, 565.01, 43.47, 0.3404", "415.862, 565.515, 43.8262, 0.3018", "416.835, 566.092, 44.1851, 0.3272", "417.785, 566.706, 44.5463, 0.3616", "418.744, 567.307, 44.9028, 0.487", "419.75, 567.834, 45.236, 0.42", "420.796, 568.279, 45.5333, 0.3774", "421.85, 568.709, 45.7934, 0.3606", "422.922, 569.092, 46.0177, 0.4848", "424.018, 569.397, 46.205, 0.4174", "425.114, 569.712, 46.3473, 0.3652", "426.178, 570.127, 46.4274, 0.3738", "427.216, 570.6, 46.424, 0.3346", "428.259, 571.037, 46.3232, 0.3014", "429.27, 571.509, 46.1376, 0.2772", "430.22, 572.087, 45.9094, 0.2794", "431.178, 572.693, 45.7304, 0.2834", "432.149, 573.29, 45.6907, 0.2908", "433.069, 573.938, 45.8282, 0.3058", "433.914, 574.653, 46.1404, 0.3272", "434.682, 575.456, 46.566, 0.3988", "435.389, 576.324, 47.0478, 0.3756", "436.093, 577.213, 47.5294, 0.4028", "436.854, 578.063, 47.9758, 0.341", "437.673, 578.861, 48.3725, 0.3132", "438.368, 579.712, 48.6648, 0.3", "438.655, 580.694, 49.1484, 0.3164", "438.168, 581.447, 49.8674, 0.3786", "437.367, 582.055, 50.6873, 0.339", "436.41, 582.573, 51.4839, 0.3304", "435.508, 583.168, 53.1096, 0.2288" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "384.585, 554.134, 26.1076, 0.3616", "384.013, 554.339, 26.647, 0.4558", "383.317, 554.39, 27.5812, 0.514", "382.676, 554.989, 28.7193, 0.5014", "382.457, 556.01, 29.883, 0.605", "382.059, 557.05, 30.9652, 0.6378", "381.636, 558.009, 32.0197, 0.5566", "381.342, 558.997, 33.0, 0.4096", "381.392, 560.118, 33.6694, 0.3484", "381.645, 560.7, 34.5285, 0.3536" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "372.107, 512.269, 22.6197, 0.5784", "372.862, 511.707, 24.079, 0.6864", "373.746, 511.06, 24.9447, 0.4856", "374.702, 510.516, 25.3264, 0.428", "375.763, 510.19, 25.7422, 0.3406", "376.89, 510.111, 26.1265, 0.3124", "378.023, 510.221, 26.4527, 0.2978", "379.134, 510.479, 26.7144, 0.3174", "380.215, 510.848, 26.905, 0.3546", "381.267, 511.297, 27.0377, 0.4206", "382.275, 511.835, 27.1551, 0.5562", "383.171, 512.535, 27.2801, 0.7438", "384.005, 513.312, 27.4654, 0.7158", "384.669, 514.206, 27.7641, 0.6566", "385.25, 515.16, 28.1683, 0.8114", "385.882, 516.094, 28.6367, 0.9574", "386.556, 517.002, 29.1441, 0.7702", "387.31, 517.828, 29.6996, 0.8156", "388.039, 518.66, 30.3061, 0.595", "388.637, 519.57, 30.9613, 0.522", "389.249, 520.49, 31.635, 0.585", "389.936, 521.377, 32.293, 0.6552", "390.738, 522.127, 32.9566, 0.553", "391.597, 522.785, 33.633, 0.5778", "392.374, 523.508, 34.3207, 0.4974", "393.164, 524.27, 34.9647, 0.5048", "394.056, 524.968, 35.4628, 0.6744", "395.004, 525.606, 35.8336, 0.6898", "395.972, 526.215, 36.1385, 0.5686", "397.006, 526.686, 36.4367, 0.385", "398.086, 527.031, 36.773, 0.3006", "399.116, 527.504, 37.1613, 0.2756", "399.966, 528.239, 37.6384, 0.2766", "400.462, 529.216, 38.2304, 0.2784", "400.888, 530.208, 38.9533, 0.2818", "401.351, 531.154, 39.8014, 0.2876", "401.861, 532.057, 40.752, 0.2998", "402.527, 532.874, 41.7547, 0.3162", "403.331, 533.587, 42.7689, 0.3772", "404.259, 534.146, 43.7671, 0.3408", "405.135, 534.762, 44.7605, 0.3126", "405.857, 535.51, 45.7668, 0.299", "406.54, 536.287, 46.7807, 0.3144", "407.225, 537.035, 47.8016, 0.374", "408.022, 537.633, 48.8144, 0.335", "408.951, 538.048, 49.779, 0.3022", "409.988, 538.468, 50.5366, 0.2786", "411.06, 538.837, 51.123, 0.2822", "412.135, 539.185, 51.5819, 0.2886", "413.221, 539.517, 51.9198, 0.3006", "414.325, 539.82, 52.1394, 0.3234", "415.428, 540.122, 52.2852, 0.362", "416.535, 540.406, 52.3902, 0.4516", "417.628, 540.744, 52.4742, 0.5298", "418.705, 541.121, 52.5479, 0.4152", "419.761, 541.559, 52.6224, 0.3192", "420.816, 541.999, 52.6991, 0.2626", "421.847, 542.492, 52.7618, 0.2542", "422.866, 543.012, 52.8058, 0.2288", "423.885, 543.532, 52.8492, 0.2288" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "372.107, 512.269, 22.6197, 0.5784", "371.872, 511.287, 22.6599, 0.502", "371.612, 510.175, 22.6362, 0.4964", "371.361, 509.063, 22.5517, 0.7414", "371.112, 507.95, 22.4104, 0.8704", "370.864, 506.84, 22.2202, 0.6294", "370.497, 505.777, 22.0049, 0.4544", "369.82, 504.876, 21.7933, 0.4112", "368.94, 504.155, 21.6068, 0.5686", "367.999, 503.506, 21.468, 0.6222", "367.215, 502.708, 21.3832, 0.5044", "366.779, 501.662, 21.3391, 0.4268", "366.51, 500.55, 21.3112, 0.513", "366.215, 499.448, 21.2754, 0.4708", "365.783, 498.398, 21.2377, 0.4598", "365.161, 497.44, 21.2154, 0.5702", "364.49, 496.514, 21.1981, 0.5968", "363.816, 495.59, 21.1711, 0.595", "363.137, 494.67, 21.1336, 0.6118", "362.423, 493.779, 21.081, 0.5452", "361.66, 492.931, 21.0061, 0.4382", "360.883, 492.099, 20.9182, 0.3886", "360.103, 491.264, 20.8473, 0.4902", "359.319, 490.432, 20.8296, 0.4262", "358.533, 489.602, 20.8759, 0.3872", "357.733, 488.79, 20.988, 0.386", "356.905, 488.014, 21.1691, 0.4958", "356.14, 487.188, 21.403, 0.6136", "355.549, 486.229, 21.6609, 0.5622", "355.206, 485.161, 21.9008, 0.6322", "355.114, 484.024, 22.085, 0.6462", "355.007, 482.888, 22.2027, 0.548", "354.754, 481.774, 22.2551, 0.5108", "354.472, 480.667, 22.2517, 0.6544", "354.25, 479.547, 22.2061, 0.8042", "354.067, 478.418, 22.1383, 0.7312", "353.902, 477.288, 22.0705, 0.6974", "353.745, 476.156, 22.0187, 0.5998", "353.591, 475.022, 21.9903, 0.5884", "353.334, 473.915, 22.0034, 0.4294", "352.907, 472.858, 22.0779, 0.3456", "352.424, 471.824, 22.2087, 0.312", "351.936, 470.795, 22.3801, 0.3432", "351.447, 469.765, 22.5772, 0.405", "350.959, 468.736, 22.7867, 0.502", "350.5, 467.694, 22.9945, 0.7654", "350.111, 466.62, 23.1871, 0.8496", "349.778, 465.528, 23.3597, 0.9072", "349.454, 464.432, 23.5138, 0.8068", "349.13, 463.337, 23.6513, 0.7114", "348.808, 462.241, 23.7733, 0.5514", "348.484, 461.145, 23.8806, 0.4004", "348.16, 460.049, 23.9733, 0.3302", "347.806, 458.964, 24.04, 0.3252", "347.398, 457.895, 24.0655, 0.394", "346.97, 456.836, 24.0519, 0.3714", "346.538, 455.776, 24.0111, 0.3726", "346.107, 454.718, 23.9566, 0.3936", "345.676, 453.66, 23.9013, 0.5718", "345.243, 452.602, 23.8573, 0.4536", "344.824, 451.538, 23.8407, 0.3528", "344.44, 450.461, 23.8748, 0.2782", "344.086, 449.378, 23.9698, 0.2812", "343.737, 448.292, 24.1148, 0.287", "343.389, 447.207, 24.2953, 0.2978", "343.04, 446.122, 24.4977, 0.317", "342.682, 445.039, 24.7073, 0.3564", "342.304, 443.961, 24.9099, 0.4104", "341.915, 442.887, 25.1014, 0.604", "341.524, 441.814, 25.2854, 0.5082", "341.163, 440.731, 25.469, 0.4796", "340.934, 439.62, 25.6668, 0.39", "340.842, 438.488, 25.8874, 0.4006", "340.778, 437.356, 26.1235, 0.4774", "340.716, 436.222, 26.3596, 0.5724", "340.658, 435.083, 26.5663, 0.5196", "340.604, 433.94, 26.721, 0.3888", "340.552, 432.797, 26.8266, 0.3076", "340.499, 431.654, 26.8962, 0.2884", "340.373, 430.52, 26.9385, 0.3012", "340.121, 429.406, 26.9572, 0.3188", "339.81, 428.308, 26.9636, 0.3822", "339.652, 427.191, 27.0035, 0.35", "339.767, 426.078, 27.1328, 0.3298", "339.565, 425.051, 27.3094, 0.3308", "338.893, 424.128, 27.4693, 0.3744", "338.172, 423.24, 27.6094, 0.4804", "337.462, 422.343, 27.7376, 0.5558", "336.814, 421.406, 27.8797, 0.597", "336.222, 420.435, 28.0552, 0.6944", "335.637, 419.46, 28.2682, 0.5442", "335.051, 418.486, 28.5141, 0.4988", "334.467, 417.511, 28.7798, 0.428", "333.916, 416.516, 29.0497, 0.4596", "333.468, 415.47, 29.3059, 0.642", "333.089, 414.393, 29.5406, 0.609", "332.719, 413.314, 29.7578, 0.5186", "332.349, 412.233, 29.9625, 0.493", "331.984, 411.152, 30.1596, 0.6712", "331.631, 410.069, 30.3554, 0.8228", "331.284, 408.983, 30.5511, 0.8266", "330.936, 407.898, 30.7437, 0.5776", "330.547, 406.827, 30.926, 0.4434", "330.023, 405.817, 31.0839, 0.4372", "329.406, 404.855, 31.2102, 0.619", "328.779, 403.898, 31.3065, 0.7054", "328.159, 402.937, 31.3748, 0.7096", "327.618, 401.933, 31.4048, 0.559", "327.144, 400.893, 31.3942, 0.5918", "326.677, 399.85, 31.3566, 0.5096", "326.211, 398.806, 31.3071, 0.5942", "325.745, 397.763, 31.2567, 0.5154", "325.278, 396.72, 31.2172, 0.5988", "324.822, 395.672, 31.2189, 0.5536", "324.375, 394.622, 31.2808, 0.5256", "323.931, 393.57, 31.3953, 0.4316", "323.485, 392.52, 31.5493, 0.4616", "323.042, 391.469, 31.7318, 0.441", "322.597, 390.418, 31.9318, 0.5444", "322.151, 389.367, 32.1398, 0.505", "321.774, 388.292, 32.3529, 0.4098", "321.514, 387.183, 32.5724, 0.3414", "321.311, 386.062, 32.7986, 0.3768", "321.113, 384.939, 33.0305, 0.3402", "320.916, 383.817, 33.2676, 0.3116", "320.718, 382.694, 33.509, 0.2962", "320.521, 381.571, 33.7546, 0.3144", "320.323, 380.449, 34.0026, 0.3506", "320.082, 379.338, 34.26, 0.4046", "319.779, 378.245, 34.5327, 0.5682", "319.452, 377.161, 34.8135, 0.5636", "319.122, 376.077, 35.0862, 0.6776", "318.794, 374.994, 35.3349, 0.7508", "318.464, 373.911, 35.5446, 0.642", "318.133, 372.827, 35.7039, 0.4848", "317.737, 371.79, 35.7134, 0.4348", "317.287, 370.804, 35.5267, 0.5414", "316.873, 369.796, 35.2201, 0.6874", "316.572, 368.719, 34.8981, 0.7502", "316.34, 367.608, 34.6273, 0.733", "316.131, 366.495, 34.4963, 0.6642", "315.939, 365.391, 34.5632, 0.4854", "315.658, 364.317, 34.7939, 0.404", "315.255, 363.281, 35.1218, 0.4106", "314.867, 362.225, 35.4598, 0.5732", "314.602, 361.117, 35.735, 0.6028", "314.525, 359.981, 35.9103, 0.6048", "314.705, 358.866, 35.9803, 0.6358", "315.318, 357.988, 35.9366, 0.561", "315.694, 357.015, 35.8691, 0.6072", "315.408, 355.957, 35.9128, 0.7098", "314.958, 354.937, 36.0811, 0.8196", "314.52, 353.91, 36.3373, 0.7258", "314.186, 352.831, 36.6162, 0.6228", "314.026, 351.704, 36.843, 0.774", "313.919, 350.565, 36.9891, 0.7656", "313.814, 349.427, 37.0583, 1.0092", "313.709, 348.289, 37.0734, 1.1164", "313.604, 347.149, 37.0611, 0.929", "313.497, 346.011, 37.0429, 0.6254", "313.315, 344.882, 37.0367, 0.535", "313.08, 343.764, 37.0647, 0.5924", "313.103, 342.638, 37.1445, 0.521", "313.435, 341.553, 37.249, 0.5658", "313.89, 340.509, 37.3198, 0.4742", "313.883, 339.404, 37.3848, 0.466", "313.45, 338.357, 37.4945, 0.5814", "312.967, 337.327, 37.6438, 0.619", "312.485, 336.297, 37.8227, 0.6308", "312.174, 335.203, 38.0176, 0.7036", "312.021, 334.073, 38.2152, 0.5918", "311.909, 332.937, 38.4003, 0.4378", "311.801, 331.801, 38.5638, 0.3512", "311.692, 330.665, 38.7064, 0.3708", "311.544, 329.533, 38.8268, 0.446", "311.171, 328.455, 38.9074, 0.6272", "310.67, 327.429, 38.9466, 0.7592", "310.156, 326.408, 38.9578, 0.6212", "309.64, 325.388, 38.9556, 0.6226", "309.125, 324.366, 38.9603, 0.52", "308.611, 323.345, 39.0026, 0.6112", "308.1, 322.325, 39.0928, 0.5588", "307.587, 321.305, 39.2224, 0.6204", "307.075, 320.286, 39.38, 0.8808", "306.562, 319.265, 39.5545, 1.1108", "306.068, 318.238, 39.7348, 1.1622", "305.633, 317.183, 39.9134, 1.0184", "305.233, 316.116, 40.0851, 0.7698", "304.835, 315.047, 40.2455, 0.6786", "304.438, 313.978, 40.3925, 0.5452", "303.94, 312.949, 40.4936, 0.583", "303.369, 311.961, 40.5359, 0.6412", "302.802, 310.969, 40.5423, 0.8062", "302.319, 309.932, 40.5401, 0.8354", "302.016, 308.832, 40.5488, 0.6312", "301.657, 307.746, 40.5905, 0.5916", "301.23, 306.687, 40.6753, 0.4748", "300.794, 305.63, 40.7977, 0.4682", "300.367, 304.572, 40.9534, 0.5808", "299.969, 303.505, 41.1494, 0.6402", "299.535, 302.455, 41.3748, 0.561", "299.032, 301.434, 41.6091, 0.418", "298.505, 300.424, 41.8424, 0.3638", "297.974, 299.414, 42.0689, 0.3824", "297.467, 298.393, 42.2814, 0.5248", "297.008, 297.347, 42.4693, 0.4936", "296.568, 296.293, 42.6325, 0.4978", "296.13, 295.237, 42.7725, 0.6602", "295.801, 294.149, 42.9122, 0.6688", "295.543, 293.046, 43.059, 0.5036", "295.311, 291.927, 43.1662, 0.3906", "295.094, 290.807, 43.1948, 0.3858", "294.88, 289.697, 43.1242, 0.5266", "294.378, 288.68, 43.0119, 0.5204", "293.735, 287.735, 42.8977, 0.432", "293.082, 286.796, 42.7974, 0.4132", "292.485, 285.822, 42.7218, 0.3606", "291.985, 284.794, 42.6731, 0.3492", "291.522, 283.751, 42.6507, 0.3676", "291.095, 282.689, 42.6625, 0.4394", "290.817, 281.59, 42.7577, 0.6166", "290.606, 280.481, 42.9397, 0.7322", "290.42, 279.367, 43.1805, 0.6076", "290.405, 278.228, 43.421, 0.42", "290.427, 277.085, 43.6369, 0.3182", "290.28, 275.952, 43.8287, 0.3086", "290.062, 274.83, 43.9972, 0.337", "289.842, 273.709, 44.151, 0.3932", "289.621, 272.588, 44.301, 0.4806", "289.413, 271.466, 44.4595, 0.7246", "289.243, 270.34, 44.641, 0.7784", "289.09, 269.215, 44.8384, 0.7538", "288.937, 268.09, 45.0374, 0.626", "288.784, 266.965, 45.2245, 0.5598", "288.577, 265.842, 45.3639, 0.522", "288.263, 264.746, 45.4051, 0.498", "287.915, 263.663, 45.3513, 0.4588", "287.564, 262.582, 45.2298, 0.3604", "287.247, 261.486, 45.0842, 0.302", "286.979, 260.375, 44.9593, 0.2782", "286.726, 259.259, 44.8762, 0.2814", "286.471, 258.145, 44.8325, 0.2872", "286.201, 257.045, 44.784, 0.2982", "285.89, 255.955, 44.7476, 0.3178", "285.41, 254.93, 44.8353, 0.3568", "284.879, 253.944, 45.0587, 0.4172", "284.346, 252.96, 45.3888, 0.587", "283.839, 251.961, 45.7954, 0.6206", "283.529, 250.872, 46.2269, 0.676", "283.283, 249.764, 46.6539, 0.5832", "283.042, 248.653, 47.0602, 0.6732", "282.8, 247.542, 47.4502, 0.713", "282.567, 246.431, 47.8324, 0.716", "282.451, 245.327, 48.2541, 0.6076", "282.374, 244.229, 48.713, 0.5026", "282.299, 243.132, 49.1837, 0.5284", "282.128, 242.027, 49.6132, 0.6508", "281.688, 240.973, 49.9036, 0.5158", "281.185, 239.949, 50.0536, 0.4202", "280.679, 238.926, 50.0928, 0.4072", "280.168, 237.905, 50.0609, 0.5", "279.607, 236.909, 50.0114, 0.7918", "279.033, 235.919, 49.9766, 0.7522", "278.461, 234.928, 49.9752, 0.7518", "277.887, 233.939, 50.0094, 0.6248", "277.312, 232.949, 50.0774, 0.7744", "276.739, 231.959, 50.1774, 0.783", "276.215, 230.948, 50.3479, 0.7302", "275.711, 229.933, 50.5921, 0.7388", "275.207, 228.917, 50.8973, 0.695", "274.705, 227.901, 51.2498, 0.9024", "274.202, 226.885, 51.6356, 1.031", "273.699, 225.869, 52.0352, 1.1398", "273.268, 224.849, 52.4745, 1.0538", "272.879, 223.834, 52.9528, 0.92", "272.497, 222.822, 53.4456, 0.7762", "271.901, 221.866, 53.8686, 0.9174", "270.909, 221.481, 54.0165, 1.2586", "270.098, 220.683, 54.0585, 1.2776", "269.418, 219.765, 54.0742, 1.0874", "268.795, 218.805, 54.0977, 0.9152", "268.382, 217.748, 54.1822, 1.0918", "267.971, 216.689, 54.3334, 1.0722", "267.503, 215.652, 54.5362, 0.8894", "266.912, 214.674, 54.7324, 1.033", "266.322, 213.697, 54.9094, 1.0162", "265.732, 212.719, 55.064, 0.7566" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "381.645, 560.7, 34.5285, 0.3536", "381.102, 560.777, 35.943, 0.3932", "380.565, 561.787, 36.4582, 0.3256", "380.03, 562.798, 36.8032, 0.2748", "379.493, 563.809, 37.0199, 0.2752", "378.957, 564.819, 37.1073, 0.2758", "378.422, 565.829, 37.1319, 0.2768", "377.885, 566.841, 37.0992, 0.2786", "377.348, 567.851, 37.0398, 0.282", "376.812, 568.861, 36.9485, 0.2882", "376.276, 569.872, 36.8309, 0.301", "375.76, 570.885, 36.6699, 0.3182", "375.349, 571.723, 36.3283, 0.381", "374.733, 572.214, 35.7907, 0.3476", "373.934, 572.851, 35.3489, 0.3264", "373.603, 573.713, 35.2929, 0.3184", "373.304, 574.742, 35.4444, 0.3816", "372.91, 575.811, 35.6443, 0.3488", "372.475, 576.868, 35.8604, 0.3278", "372.034, 577.922, 36.0716, 0.3256", "371.595, 578.978, 36.248, 0.3722", "371.124, 580.019, 36.4207, 0.4418", "370.607, 581.03, 36.6708, 0.6508", "370.071, 582.024, 37.021, 0.6514", "369.656, 583.041, 37.4892, 0.4716", "369.414, 584.057, 38.0789, 0.3292", "369.139, 585.057, 38.7352, 0.2816", "368.63, 585.996, 39.3708, 0.2874", "367.758, 586.706, 39.8468, 0.2994", "366.738, 587.19, 40.0938, 0.3154", "365.746, 587.681, 40.1139, 0.3758", "364.752, 588.216, 40.0162, 0.3384", "363.73, 588.726, 39.9269, 0.3084", "362.682, 589.149, 39.9358, 0.29", "361.622, 589.556, 40.0319, 0.303", "360.561, 589.976, 40.1831, 0.3292", "359.508, 590.409, 40.364, 0.3656", "358.463, 590.87, 40.5356, 0.4942", "357.431, 591.362, 40.6683, 0.4346", "356.403, 591.863, 40.7602, 0.398", "355.383, 592.379, 40.8044, 0.4294", "354.37, 592.904, 40.8033, 0.4642", "353.405, 593.516, 40.796, 0.4126", "352.497, 594.212, 40.8178, 0.4238", "351.586, 594.902, 40.8736, 0.3822", "350.652, 595.562, 40.9595, 0.379", "349.691, 596.182, 41.0754, 0.4722", "348.697, 596.747, 41.2171, 0.3932", "347.69, 597.292, 41.3798, 0.3254", "346.744, 597.917, 41.6074, 0.2746", "345.868, 598.606, 41.9247, 0.2746", "345.011, 599.31, 42.3119, 0.2746", "344.183, 600.071, 42.7112, 0.2746", "343.382, 600.875, 43.08, 0.2746", "342.587, 601.685, 43.3997, 0.2748", "341.792, 602.496, 43.6601, 0.2748", "341.137, 603.431, 43.8234, 0.2752", "340.64, 604.458, 43.8738, 0.2756", "340.181, 605.5, 43.8371, 0.2766", "339.718, 606.545, 43.7626, 0.2782", "339.252, 607.59, 43.6789, 0.2814", "338.801, 608.641, 43.5982, 0.287", "338.385, 609.707, 43.5288, 0.2988", "337.944, 610.763, 43.4706, 0.3142", "337.633, 611.86, 43.393, 0.3738", "336.891, 612.721, 43.3325, 0.3344", "336.052, 613.492, 43.2765, 0.301", "335.317, 614.359, 43.2079, 0.2766", "334.634, 615.276, 43.0819, 0.2782", "334.04, 616.236, 42.819, 0.2814", "333.875, 617.104, 42.2573, 0.287", "333.728, 618.073, 41.5307, 0.2988", "333.532, 619.189, 40.8632, 0.3142", "333.336, 620.309, 40.2769, 0.3734", "332.968, 621.39, 39.8076, 0.3338", "332.574, 622.463, 39.4528, 0.3", "332.161, 623.528, 39.1874, 0.2746", "331.405, 624.371, 38.9214, 0.2746", "330.658, 625.226, 38.6316, 0.2746", "329.946, 626.111, 38.3267, 0.2746", "329.234, 626.999, 38.0064, 0.2746", "328.522, 627.885, 37.6748, 0.2746", "327.992, 628.889, 37.3304, 0.2746", "327.581, 629.946, 36.976, 0.2744", "327.173, 631.004, 36.6106, 0.2744", "326.764, 632.062, 36.2345, 0.2742", "326.349, 633.117, 35.8492, 0.274", "325.762, 634.084, 35.4511, 0.2736", "325.171, 635.048, 35.0442, 0.2728", "324.58, 636.014, 34.6167, 0.2712", "323.987, 636.976, 34.1824, 0.2684", "323.257, 637.842, 33.7554, 0.2626", "322.455, 638.644, 33.3508, 0.2542", "321.518, 639.268, 32.9568, 0.2288", "320.615, 639.818, 31.9088, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "381.645, 560.7, 34.5285, 0.3536", "381.855, 560.941, 35.8548, 0.2288", "382.476, 561.789, 37.0555, 0.3596", "383.016, 562.747, 37.5589, 0.4832", "383.52, 563.745, 38.1069, 0.4134", "384.029, 564.739, 38.6798, 0.3628", "384.543, 565.729, 39.2644, 0.3444", "385.188, 566.648, 39.8104, 0.402", "385.975, 567.477, 40.2746, 0.5216", "386.797, 568.273, 40.682, 0.68", "387.519, 568.995, 41.197, 0.5956", "388.123, 569.711, 41.8849, 0.4446", "388.698, 570.536, 42.6448, 0.3648", "389.243, 571.495, 43.3336, 0.391", "389.86, 572.453, 43.8836, 0.5078", "390.72, 573.178, 44.2887, 0.6232", "391.727, 573.619, 44.4814, 0.6406", "392.558, 574.162, 44.7042, 0.4838", "393.425, 574.799, 44.996, 0.4248", "394.378, 575.411, 45.2866, 0.3348", "395.339, 576.017, 45.5652, 0.3016", "396.307, 576.613, 45.8119, 0.2776", "397.287, 577.194, 46.0006, 0.2802", "398.27, 577.771, 46.0998, 0.285", "399.225, 578.395, 46.0816, 0.294", "400.115, 579.08, 45.9096, 0.31", "400.981, 579.784, 45.6011, 0.3426", "401.853, 580.482, 45.1979, 0.3896", "402.786, 581.105, 44.7513, 0.541", "403.747, 581.694, 44.2968, 0.511", "404.712, 582.278, 43.8589, 0.5906", "405.716, 582.797, 43.4613, 0.5386", "406.786, 583.182, 43.1234, 0.4964", "407.875, 583.52, 42.8386, 0.384", "408.964, 583.86, 42.5928, 0.3406", "410.045, 584.224, 42.3744, 0.3756", "411.115, 584.621, 42.1733, 0.3378", "412.18, 585.028, 41.9821, 0.3074", "413.244, 585.441, 41.802, 0.2882", "414.297, 585.884, 41.65, 0.2994", "415.345, 586.344, 41.5209, 0.323", "416.359, 586.865, 41.375, 0.3538", "417.355, 587.422, 41.2255, 0.4726", "418.35, 587.946, 41.1376, 0.3936", "419.362, 588.374, 40.9573, 0.3262", "420.382, 588.768, 40.647, 0.276", "421.429, 589.131, 40.2651, 0.2774", "422.528, 589.404, 39.8947, 0.2798", "423.643, 589.647, 39.5592, 0.2844", "424.752, 589.912, 39.2627, 0.2928", "425.796, 590.358, 39.018, 0.308", "426.773, 590.941, 38.8164, 0.3384", "427.737, 591.551, 38.6431, 0.3836", "428.712, 592.146, 38.4969, 0.5226", "429.707, 592.708, 38.397, 0.5118", "430.71, 593.258, 38.3424, 0.4226", "431.712, 593.808, 38.3191, 0.3644", "432.711, 594.364, 38.2995, 0.4218", "433.71, 594.918, 38.2808, 0.413", "434.729, 595.434, 38.2945, 0.4976", "435.819, 595.756, 38.3457, 0.3932", "436.954, 595.862, 38.3886, 0.3252", "438.086, 595.974, 38.5042, 0.2742", "439.216, 596.087, 38.6809, 0.274", "440.357, 596.025, 38.8828, 0.2736", "441.492, 595.91, 39.0958, 0.2728", "442.63, 595.794, 39.3341, 0.2712", "443.714, 595.442, 39.5996, 0.2684", "444.795, 595.079, 39.8731, 0.2626", "445.795, 594.558, 40.1859, 0.2542", "446.66, 593.877, 40.5616, 0.2288", "447.525, 593.194, 41.5058, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "265.732, 212.719, 55.064, 0.7566", "266.327, 211.497, 55.5461, 0.4782", "266.827, 210.469, 55.664, 0.404", "267.245, 209.415, 55.8443, 0.3454", "267.629, 208.354, 56.086, 0.3114", "268.006, 207.293, 56.3676, 0.344", "268.178, 206.168, 56.6322, 0.3986", "268.241, 205.027, 56.8532, 0.5272", "268.289, 203.885, 57.0284, 0.632", "268.337, 202.743, 57.1595, 0.7898", "268.377, 201.6, 57.2513, 0.8028", "268.403, 200.456, 57.3101, 0.581", "268.427, 199.312, 57.3496, 0.4484", "268.451, 198.168, 57.3779, 0.4524", "268.475, 197.024, 57.3994, 0.6182", "268.499, 195.881, 57.4185, 0.8444", "268.524, 194.737, 57.4384, 0.972", "268.561, 193.593, 57.4619, 0.7936", "268.661, 192.455, 57.4913, 0.648", "268.777, 191.317, 57.5285, 0.622", "268.893, 190.179, 57.5764, 0.534", "269.008, 189.04, 57.6391, 0.563", "269.124, 187.902, 57.7212, 0.6006", "269.239, 186.764, 57.8264, 0.749", "269.355, 185.625, 57.9578, 0.642", "268.595, 184.827, 58.1781, 0.696", "267.713, 184.128, 58.4763, 0.7156", "267.065, 183.2, 58.8165, 0.6848", "266.458, 182.244, 59.1833, 0.7246", "266.337, 181.109, 59.542, 0.5584", "266.216, 179.975, 59.8912, 0.4982", "266.118, 178.842, 60.2426, 0.557", "266.072, 177.714, 60.6259, 0.7532", "266.025, 176.586, 61.0431, 0.694", "265.978, 175.458, 61.4925, 0.8068" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "265.732, 212.719, 55.064, 0.7566", "264.462, 211.984, 55.2493, 0.3648", "263.472, 211.412, 55.3104, 0.3914", "262.48, 210.842, 55.3711, 0.5082", "261.49, 210.27, 55.4408, 0.6246", "260.719, 209.434, 55.5766, 0.6414", "259.973, 208.577, 55.7715, 0.4928", "259.227, 207.721, 56.009, 0.4054", "258.481, 206.865, 56.2713, 0.4738", "257.736, 206.008, 56.5432, 0.3962", "256.99, 205.151, 56.8109, 0.331" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "265.978, 175.458, 61.4925, 0.8068", "265.917, 174.513, 61.4457, 0.2288", "265.843, 173.372, 61.495, 0.4748", "265.709, 172.236, 61.5149, 0.3976", "265.525, 171.108, 61.518, 0.3338", "265.505, 169.965, 61.5079, 0.29", "265.399, 168.827, 61.5238, 0.3028", "265.265, 167.692, 61.5689, 0.3292", "265.131, 166.557, 61.6381, 0.3654", "264.997, 165.422, 61.7288, 0.494", "264.923, 164.281, 61.831, 0.4334", "264.897, 163.138, 61.9363, 0.4006", "264.879, 161.994, 62.0418, 0.4116", "264.862, 160.85, 62.1533, 0.5404", "264.845, 159.707, 62.2784, 0.7096", "264.828, 158.563, 62.4249, 0.6756", "264.39, 157.51, 62.6161, 0.4694", "263.382, 156.985, 62.8701, 0.3254", "262.365, 156.474, 63.1792, 0.2746", "261.651, 155.61, 63.5746, 0.2746", "261.026, 154.684, 64.0433, 0.2746", "260.402, 153.758, 64.5663, 0.2746" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "265.978, 175.458, 61.4925, 0.8068", "266.506, 174.854, 61.9671, 0.8502", "267.244, 174.01, 62.4862, 0.5924", "267.982, 173.168, 63.04, 0.3842", "268.72, 172.325, 63.6216, 0.2892", "269.454, 171.48, 64.2306, 0.3028", "270.178, 170.629, 64.8701, 0.3216", "270.899, 169.773, 65.5421, 0.387", "271.621, 168.919, 66.2491, 0.3602", "272.341, 168.063, 66.9992, 0.3436", "273.032, 167.223, 67.8387, 0.381", "273.7, 166.398, 68.7851, 0.3482", "274.364, 165.576, 69.8281, 0.326", "275.026, 164.799, 70.9761, 0.325", "275.682, 164.087, 72.2341, 0.3576", "276.333, 163.395, 73.5734, 0.4798", "277.061, 162.771, 74.9482, 0.4068", "277.827, 162.184, 76.3227, 0.3516", "278.541, 161.548, 77.6706, 0.3178", "279.001, 160.737, 78.9642, 0.3804", "279.367, 159.875, 80.1721, 0.3466", "279.726, 158.953, 81.2409, 0.3248", "280.107, 157.986, 82.1285, 0.3152", "280.805, 157.118, 82.6423, 0.3756", "281.776, 156.666, 82.7568, 0.3378", "282.867, 156.341, 82.6806, 0.3074", "283.966, 156.024, 82.4866, 0.2882", "285.064, 155.708, 82.2245, 0.2996", "286.143, 155.352, 81.898, 0.323", "287.195, 154.964, 81.515, 0.3538", "288.243, 154.574, 81.0863, 0.4726", "289.292, 154.183, 80.6109, 0.3938", "290.341, 153.792, 80.1069, 0.3264", "291.391, 153.4, 79.5934, 0.2764", "292.344, 152.795, 79.1098, 0.2782", "293.264, 152.134, 78.6632, 0.2812", "294.185, 151.47, 78.2446, 0.2868", "295.104, 150.805, 77.845, 0.297", "296.024, 150.141, 77.455, 0.317", "296.944, 149.477, 77.0669, 0.3492", "297.921, 148.905, 76.6685, 0.433", "298.965, 148.477, 76.2521, 0.4706", "300.014, 148.062, 75.8204, 0.4254", "301.065, 147.648, 75.376, 0.443", "302.116, 147.235, 74.9213, 0.4412", "303.166, 146.82, 74.4576, 0.3748", "304.216, 146.404, 73.9872, 0.3298", "305.292, 146.069, 73.5059, 0.3246", "306.4, 145.89, 73.0072, 0.393", "307.509, 145.724, 72.494, 0.3698", "308.619, 145.559, 71.9709, 0.3688", "309.73, 145.393, 71.4417, 0.3914", "310.84, 145.227, 70.9097, 0.5442", "311.949, 145.061, 70.3769, 0.517", "313.068, 144.922, 69.8536, 0.6004", "314.192, 144.794, 69.3412, 0.5638", "315.314, 144.667, 68.8372, 0.5084", "316.413, 144.737, 68.3021, 0.5746", "317.497, 144.859, 67.7396, 0.5644", "318.578, 144.865, 67.1703, 0.5032", "319.533, 144.34, 66.6439, 0.5962", "320.479, 143.773, 66.1833, 0.452", "321.546, 143.686, 65.9215, 0.3498", "322.67, 143.817, 65.8851, 0.2728", "323.796, 143.931, 66.0327, 0.2712", "324.928, 143.995, 66.2978, 0.2684", "326.061, 144.059, 66.6271, 0.2626", "327.189, 144.126, 66.9872, 0.2542", "328.312, 144.194, 67.3476, 0.2288", "329.4, 144.404, 68.1601, 0.2288" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "256.99, 205.151, 56.8109, 0.331", "256.607, 204.744, 57.0226, 0.2848", "255.824, 203.912, 57.1987, 0.2936", "255.04, 203.081, 57.3468, 0.3096", "254.257, 202.248, 57.4722, 0.34", "253.475, 201.416, 57.5806, 0.3932", "252.691, 200.583, 57.6769, 0.5086", "251.908, 199.752, 57.766, 0.6398", "251.186, 198.865, 57.8178, 0.5984", "250.47, 197.973, 57.8418, 0.76", "249.755, 197.081, 57.8514, 0.5878", "249.038, 196.189, 57.8584, 0.5014", "248.322, 195.298, 57.8735, 0.5832" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "256.99, 205.151, 56.8109, 0.331", "256.98, 204.958, 57.0374, 0.2288", "256.919, 203.818, 56.819, 0.3146", "256.859, 202.679, 56.7224, 0.3506", "256.81, 201.54, 56.6149, 0.4072", "256.833, 200.397, 56.5174, 0.561", "256.99, 199.265, 56.4558, 0.609", "257.172, 198.136, 56.4304, 0.477", "257.354, 197.007, 56.4374, 0.3886", "257.536, 195.878, 56.4676, 0.3822", "257.718, 194.749, 56.5127, 0.52", "257.9, 193.619, 56.5656, 0.5074", "258.089, 192.491, 56.6224, 0.4128", "258.306, 191.368, 56.6868, 0.3542", "258.545, 190.251, 56.7591, 0.3646", "258.786, 189.133, 56.8366, 0.4926", "259.029, 188.016, 56.915, 0.4304", "259.27, 186.899, 56.989, 0.3966", "259.513, 185.782, 57.0528, 0.3958", "259.755, 184.665, 57.1015, 0.5522", "259.998, 183.548, 57.1301, 0.5328", "260.131, 182.412, 57.1248, 0.6248", "259.939, 181.294, 57.0556, 0.6338", "259.667, 180.188, 56.9271, 0.518", "259.391, 179.082, 56.7549, 0.49", "259.116, 177.977, 56.5544, 0.4462", "258.874, 176.863, 56.3371, 0.554", "258.717, 175.74, 56.1089, 0.5228", "258.676, 174.605, 55.8897, 0.4438", "259.011, 173.524, 55.7094, 0.399", "259.581, 172.535, 55.5817, 0.5102", "259.92, 171.447, 55.5106, 0.458", "259.453, 170.418, 55.5094, 0.4732", "258.777, 169.501, 55.5601, 0.414", "258.097, 168.586, 55.6354, 0.4996", "257.461, 167.638, 55.7052, 0.3968", "257.034, 166.578, 55.7245, 0.3322", "256.782, 165.464, 55.6696, 0.2872", "256.531, 164.349, 55.5327, 0.2978", "256.279, 163.235, 55.337, 0.3192", "256.027, 162.121, 55.1048, 0.3502", "255.745, 161.02, 54.8346, 0.4492", "255.406, 159.954, 54.5118, 0.4322", "254.977, 158.98, 53.5346, 0.6864" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "260.402, 153.758, 64.5663, 0.2746", "260.268, 153.492, 65.0636, 0.2746", "259.772, 152.496, 65.6124, 0.2746", "259.276, 151.501, 66.1993, 0.2746", "258.788, 150.501, 66.8119, 0.2746", "258.327, 149.486, 67.4433, 0.2746", "257.874, 148.467, 68.0932, 0.2746", "257.426, 147.446, 68.7635, 0.2746", "257.074, 146.39, 69.4501, 0.2746", "257.169, 145.302, 70.1554, 0.2746", "257.403, 144.207, 70.887, 0.2746", "257.653, 143.122, 71.6626, 0.2748", "257.99, 142.12, 72.5404, 0.2748", "258.372, 141.169, 73.5311, 0.2752", "258.794, 140.238, 74.6102, 0.2756", "259.376, 139.392, 75.7439, 0.2766", "260.005, 138.57, 76.9059, 0.2782", "260.627, 137.745, 78.0735, 0.2814", "261.215, 136.892, 79.2268, 0.287", "261.792, 136.032, 80.3586, 0.2988", "262.375, 135.173, 81.4652, 0.3142", "263.009, 134.325, 82.53, 0.3734", "263.716, 133.499, 83.5327, 0.3338", "264.441, 132.68, 84.4816, 0.3", "265.158, 131.854, 85.3944, 0.2746", "265.823, 130.983, 86.2879, 0.2746", "266.403, 130.051, 87.1786, 0.2746", "266.963, 129.104, 88.0888, 0.2744", "267.522, 128.156, 89.038, 0.2744", "268.027, 127.183, 90.0446, 0.2742", "267.951, 126.186, 91.1652, 0.274", "267.22, 125.616, 92.4456, 0.2736", "266.359, 125.392, 93.8871, 0.2728", "265.397, 125.506, 95.4531, 0.2712", "264.524, 125.788, 97.1018, 0.2684", "263.832, 125.913, 98.8364, 0.2626", "263.098, 125.551, 100.535, 0.2542", "262.545, 125.128, 102.18, 0.2288", "262.276, 124.806, 105.713, 0.2288" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "260.402, 153.758, 64.5663, 0.2746", "260.562, 152.502, 63.2573, 0.2746", "260.7, 151.415, 62.7371, 0.2746", "260.839, 150.329, 62.1219, 0.2746", "261.094, 149.259, 61.4516, 0.2746", "261.371, 148.194, 60.7578, 0.2746", "261.648, 147.128, 60.0673, 0.2746", "261.676, 146.006, 59.4336, 0.2746", "261.679, 144.881, 58.8456, 0.2746", "261.346, 143.793, 58.3195, 0.2744", "260.889, 142.746, 57.8404, 0.2744", "260.254, 141.807, 57.3518, 0.2742", "259.579, 140.897, 56.833, 0.274", "259.027, 139.996, 56.1831, 0.2736", "258.498, 139.099, 55.4238, 0.2728", "258.3, 138.09, 54.5801, 0.2712", "258.108, 137.079, 53.7068, 0.2684", "258.209, 135.964, 52.9466, 0.2626", "258.374, 134.844, 52.3286, 0.2542", "258.507, 133.716, 51.8602, 0.2288", "258.615, 132.583, 51.2232, 0.2288" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "248.322, 195.298, 57.8735, 0.5832", "247.891, 194.687, 57.9454, 0.4746", "247.236, 193.758, 58.0815, 0.3926", "246.579, 192.829, 58.2641, 0.348", "245.926, 191.897, 58.4752, 0.4306", "245.309, 190.941, 58.6939, 0.4666", "244.774, 189.934, 58.8958, 0.4168", "244.298, 188.895, 59.0652, 0.4318", "243.822, 187.855, 59.2052, 0.397", "243.347, 186.816, 59.3202, 0.4076", "242.87, 185.778, 59.4143, 0.5198", "242.377, 184.746, 59.4882, 0.507", "241.842, 183.736, 59.5358, 0.4124", "241.265, 182.747, 59.5521, 0.3512", "240.688, 181.76, 59.5437, 0.371", "240.112, 180.771, 59.5157, 0.4458", "239.546, 179.779, 59.474, 0.6282", "239.051, 178.75, 59.4208, 0.7548", "238.677, 177.67, 59.3564, 0.644", "238.339, 176.577, 59.2813, 0.5132", "238.03, 175.478, 59.2004, 0.3672", "237.928, 174.359, 59.1371, 0.3144", "238.058, 173.23, 59.11, 0.3024", "237.893, 172.148, 59.0531, 0.321", "237.367, 171.156, 58.9025, 0.3858", "237.128, 170.102, 58.6936, 0.358", "237.235, 168.97, 58.4763, 0.3396", "237.375, 167.841, 58.2728, 0.3734", "237.589, 166.72, 58.1151, 0.3338", "237.862, 165.61, 58.0269, 0.3", "238.096, 164.491, 58.0126, 0.2746", "238.105, 163.379, 58.1008, 0.2746", "237.768, 162.351, 58.3215, 0.2746", "237.152, 161.44, 58.592, 0.2746", "236.302, 160.711, 58.7633, 0.2746", "235.396, 160.035, 58.8297, 0.2746", "234.592, 159.231, 58.8496, 0.2746", "234.029, 158.251, 58.8529, 0.2746", "233.644, 157.174, 58.8636, 0.2746", "233.362, 156.068, 58.9137, 0.2746", "233.185, 154.942, 59.0265, 0.2746", "233.049, 153.81, 59.1903, 0.2746", "232.911, 152.677, 59.3852, 0.2746", "232.781, 151.546, 59.5997, 0.2746", "232.666, 150.414, 59.8296, 0.2746", "232.563, 149.284, 60.0662, 0.2746", "232.461, 148.154, 60.2966, 0.2746", "232.368, 147.022, 60.5052, 0.2746", "232.328, 145.883, 60.6609, 0.2746", "232.369, 144.741, 60.73, 0.2746", "232.441, 143.601, 60.711, 0.2746", "232.515, 142.461, 60.6194, 0.2746", "232.652, 141.329, 60.4663, 0.2746", "232.934, 140.228, 60.2557, 0.2746", "233.313, 139.157, 59.9992, 0.2746", "233.709, 138.093, 59.7122, 0.2746", "234.137, 137.041, 59.4051, 0.2746", "234.639, 136.024, 59.0859, 0.2746", "235.193, 135.032, 58.7622, 0.2746", "235.785, 134.063, 58.4388, 0.2746", "236.458, 133.151, 58.1179, 0.2746", "237.212, 132.304, 57.7993, 0.2746", "237.969, 131.457, 57.489, 0.2746", "238.67, 130.56, 57.1978, 0.2746", "239.334, 129.63, 56.9321, 0.2746", "240.075, 128.765, 56.6821, 0.2746", "240.942, 128.031, 56.4245, 0.2746", "241.859, 127.358, 56.1319, 0.2746", "242.819, 126.751, 55.7894, 0.2746", "243.853, 126.557, 55.4966, 0.2746", "244.914, 126.756, 55.2471, 0.2746", "245.482, 126.033, 54.6652, 0.2746", "245.828, 125.027, 53.8423, 0.2746", "246.404, 124.647, 52.6504, 0.2746", "246.993, 124.373, 51.1787, 0.2746", "247.614, 124.109, 49.5396, 0.2746", "248.518, 123.939, 47.9368, 0.2746", "249.437, 123.776, 46.4618, 0.2746", "250.418, 123.619, 45.1665, 0.2746", "251.55, 123.511, 44.2126, 0.2746", "252.683, 123.404, 43.5296, 0.2746", "253.817, 123.297, 43.0424, 0.2746", "254.952, 123.216, 42.6824, 0.2746", "256.088, 123.145, 42.4043, 0.2746", "257.224, 123.075, 42.1694, 0.2746", "258.36, 123.005, 41.9496, 0.2746", "259.5, 122.956, 41.7581, 0.2746", "260.643, 122.933, 41.6086, 0.2746", "261.786, 122.91, 41.4985, 0.2744", "262.93, 122.887, 41.4246, 0.2744", "264.072, 122.934, 41.3773, 0.2742", "265.211, 123.022, 41.3501, 0.274", "266.352, 123.079, 41.3776, 0.2736", "267.463, 123.074, 41.522, 0.2728", "268.603, 123.042, 41.6833, 0.2712", "269.738, 122.986, 41.7754, 0.2684", "270.879, 122.916, 41.8368, 0.2626", "272.017, 122.823, 41.9174, 0.2542", "273.153, 122.729, 42.0064, 0.2288", "274.288, 122.632, 42.268, 0.2288" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "248.322, 195.298, 57.8735, 0.5832", "246.821, 195.365, 58.3218, 0.2766", "245.688, 195.346, 58.6037, 0.2782", "244.575, 195.089, 58.9086, 0.2814", "243.464, 194.821, 59.2346, 0.287", "242.371, 194.495, 59.5952, 0.2988", "241.581, 193.79, 60.097, 0.3142", "240.798, 193.079, 60.6917, 0.3736", "240.004, 192.351, 61.3259, 0.3342", "239.178, 191.568, 61.8755, 0.3004", "238.354, 190.786, 62.3398, 0.2754", "237.504, 190.026, 62.7152, 0.276", "236.577, 189.355, 62.991, 0.2774", "235.651, 188.683, 63.2058, 0.2796", "234.726, 188.013, 63.3962, 0.284", "233.649, 187.634, 63.6082, 0.2918", "232.571, 187.262, 63.8481, 0.3078", "231.492, 186.89, 64.1175, 0.3308", "230.424, 186.526, 64.4512, 0.4054", "229.378, 186.171, 64.8673, 0.3878", "228.331, 185.816, 65.3332, 0.4254", "227.284, 185.461, 65.8188, 0.3842", "226.232, 185.026, 66.2306, 0.3886", "225.179, 184.583, 66.5608, 0.4614", "224.129, 184.138, 66.8133, 0.5118", "223.078, 183.694, 67.0004, 0.557", "222.015, 183.269, 67.1101, 0.4188", "220.952, 182.848, 67.1628, 0.3256", "219.888, 182.427, 67.188, 0.2748", "218.826, 182.006, 67.2014, 0.2752", "217.762, 181.585, 67.2165, 0.2758", "216.699, 181.164, 67.2445, 0.2766", "215.625, 180.773, 67.3226, 0.2784", "214.546, 180.419, 67.4736, 0.2818", "213.466, 180.066, 67.6782, 0.288", "212.387, 179.712, 67.9176, 0.3004", "211.307, 179.359, 68.1744, 0.3172", "210.226, 179.008, 68.4306, 0.3792", "209.109, 178.767, 68.6468, 0.3448", "207.994, 178.526, 68.8204, 0.3198", "206.878, 178.284, 68.9576, 0.3136", "205.761, 178.042, 69.0642, 0.3362", "204.676, 177.682, 69.1093, 0.4406", "203.591, 177.321, 69.111, 0.3304", "202.506, 176.961, 69.0262, 0.2288" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_192",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_193",
    "groups" : [ ],
    "sections" : [ "dend_21", "apic_0", "dend_18", "dend_15", "dend_10", "dend_7", "dend_0", "dend_23", "dend_22", "apic_16", "apic_1", "dend_20", "dend_19", "dend_17", "dend_16", "dend_14", "dend_11", "dend_9", "dend_8", "dend_2", "dend_1", "apic_18", "apic_17", "apic_15", "apic_2", "dend_13", "dend_12", "dend_6", "dend_3", "apic_14", "apic_3", "dend_5", "dend_4", "apic_9", "apic_4", "apic_11", "apic_10", "apic_6", "apic_5", "apic_13", "apic_12", "apic_8", "apic_7" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_16", "apic_1", "apic_18", "apic_17", "apic_15", "apic_2", "apic_14", "apic_3", "apic_9", "apic_4", "apic_11", "apic_10", "apic_6", "apic_5", "apic_13", "apic_12", "apic_8", "apic_7" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_21", "dend_18", "dend_15", "dend_10", "dend_7", "dend_0", "dend_23", "dend_22", "dend_20", "dend_19", "dend_17", "dend_16", "dend_14", "dend_11", "dend_9", "dend_8", "dend_2", "dend_1", "dend_13", "dend_12", "dend_6", "dend_3", "dend_5", "dend_4" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7353",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "2.0"
  }, {
    "group" : "apic",
    "value" : "2.0"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "9.016032E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "8.3863684E-5",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.41741502",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "8.2311436E-4",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.041363504",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0024803642",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.032078188",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.34350085",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "5.2595034E-4",
    "erev" : "-91.403564"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "5.0941715E-4",
    "erev" : "-91.403564"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "2.9638377E-5",
    "erev" : "-91.403564"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "3.3061715E-6",
    "erev" : "-91.403564"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "8.9465233E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0076925275",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_486509232",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_486509232

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: apic_16, id: apic_16, parent: apic_0
create apic_16
public apic_16
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: apic_18, id: apic_18, parent: apic_16
create apic_18
public apic_18
// Section: apic_17, id: apic_17, parent: apic_16
create apic_17
public apic_17
// Section: apic_15, id: apic_15, parent: apic_1
create apic_15
public apic_15
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_14, id: apic_14, parent: apic_2
create apic_14
public apic_14
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: apic_9, id: apic_9, parent: apic_3
create apic_9
public apic_9
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: apic_11, id: apic_11, parent: apic_9
create apic_11
public apic_11
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10
// Section: apic_6, id: apic_6, parent: apic_4
create apic_6
public apic_6
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_13, id: apic_13, parent: apic_11
create apic_13
public apic_13
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12
// Section: apic_8, id: apic_8, parent: apic_6
create apic_8
public apic_8
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_192, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_192
// Group: {name=ModelViewParmSubset_193, groups=[], sections=[dend_21, apic_0, dend_18, dend_15, dend_10, dend_7, dend_0, dend_23, dend_22, apic_16, apic_1, dend_20, dend_19, dend_17, dend_16, dend_14, dend_11, dend_9, dend_8, dend_2, dend_1, apic_18, apic_17, apic_15, apic_2, dend_13, dend_12, dend_6, dend_3, apic_14, apic_3, dend_5, dend_4, apic_9, apic_4, apic_11, apic_10, apic_6, apic_5, apic_13, apic_12, apic_8, apic_7]}
objref ModelViewParmSubset_193
// Group: {name=apic, groups=[], sections=[apic_0, apic_16, apic_1, apic_18, apic_17, apic_15, apic_2, apic_14, apic_3, apic_9, apic_4, apic_11, apic_10, apic_6, apic_5, apic_13, apic_12, apic_8, apic_7]}
objref apic
// Group: {name=dend, groups=[], sections=[dend_21, dend_18, dend_15, dend_10, dend_7, dend_0, dend_23, dend_22, dend_20, dend_19, dend_17, dend_16, dend_14, dend_11, dend_9, dend_8, dend_2, dend_1, dend_13, dend_12, dend_6, dend_3, dend_5, dend_4]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_7353, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_7353
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_486509232
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5)
    connect dend_21(0), soma_0(0.5)
    connect apic_0(0), soma_0(0.5)
    connect dend_18(0), soma_0(0.5)
    connect dend_15(0), soma_0(0.5)
    connect dend_10(0), soma_0(0.5)
    connect dend_7(0), soma_0(0.5)
    connect dend_0(0), soma_0(0.5)
    connect axon_1(0), axon_0(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect apic_16(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect apic_18(0), apic_16(1.0)
    connect apic_17(0), apic_16(1.0)
    connect apic_15(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_14(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect apic_9(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect apic_11(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)
    connect apic_6(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_13(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)
    connect apic_8(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 370.371, 548.559, 19.3472, 9.724 ) }
    soma_0 { pt3dadd( 375.233, 548.559, 19.3472, 9.724 ) }
    soma_0 { pt3dadd( 380.095, 548.559, 19.3472, 9.724 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 375.233, 548.559, 19.3472, 1.0 ) }
    axon_0 { pt3dadd( 381.074, 562.375, 19.3472, 1.0 ) }
    axon_0 { pt3dadd( 386.916, 576.191, 19.3472, 1.0 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 6/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 371.133, 547.91, 19.9788, 0.4316 ) }
    dend_21 { pt3dadd( 370.149, 547.802, 19.6927, 0.4674 ) }
    dend_21 { pt3dadd( 369.058, 547.626, 19.3453, 0.4238 ) }
    dend_21 { pt3dadd( 367.92, 547.554, 19.0638, 0.4178 ) }
    dend_21 { pt3dadd( 366.782, 547.638, 18.8072, 0.5026 ) }
    dend_21 { pt3dadd( 365.641, 547.635, 18.5933, 0.6502 ) }
    dend_21 { pt3dadd( 364.522, 547.461, 18.5169, 0.5142 ) }
    dend_21 { pt3dadd( 363.576, 547.269, 18.706, 0.4188 ) }
    dend_21 { pt3dadd( 362.864, 547.159, 18.565, 0.3972 ) }
    dend_21 { pt3dadd( 361.863, 547.537, 18.3333, 0.5178 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 16/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 374.668, 544.673, 19.5311, 0.4582 ) }
    apic_0 { pt3dadd( 374.531, 543.537, 19.595, 0.6272 ) }
    apic_0 { pt3dadd( 374.784, 542.432, 19.7214, 0.8684 ) }
    apic_0 { pt3dadd( 375.04, 541.328, 19.8909, 0.9808 ) }
    apic_0 { pt3dadd( 375.222, 540.201, 20.0564, 0.9838 ) }
    apic_0 { pt3dadd( 375.323, 539.062, 20.1819, 0.8428 ) }
    apic_0 { pt3dadd( 375.424, 537.922, 20.2726, 0.8348 ) }
    apic_0 { pt3dadd( 375.526, 536.783, 20.3349, 0.9618 ) }
    apic_0 { pt3dadd( 375.486, 535.64, 20.3858, 0.7382 ) }
    apic_0 { pt3dadd( 375.4, 534.5, 20.4404, 0.493 ) }
    apic_0 { pt3dadd( 375.315, 533.359, 20.5079, 0.3598 ) }
    apic_0 { pt3dadd( 375.231, 532.219, 20.5906, 0.3824 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 28/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 379.289, 548.752, 15.5538, 0.5432 ) }
    dend_18 { pt3dadd( 380.37, 549.106, 15.1409, 0.5262 ) }
    dend_18 { pt3dadd( 381.344, 549.702, 14.8401, 0.565 ) }
    dend_18 { pt3dadd( 382.073, 550.583, 14.6582, 0.753 ) }
    dend_18 { pt3dadd( 382.891, 551.374, 14.5075, 0.9968 ) }
    dend_18 { pt3dadd( 383.778, 552.069, 14.3299, 1.0402 ) }
    dend_18 { pt3dadd( 384.851, 552.466, 14.2064, 0.8168 ) }
    dend_18 { pt3dadd( 385.976, 552.666, 14.1216, 0.5052 ) }
    dend_18 { pt3dadd( 387.114, 552.775, 14.0577, 0.3444 ) }
    dend_18 { pt3dadd( 388.251, 552.83, 14.0771, 0.3094 ) }
    dend_18 { pt3dadd( 389.384, 552.875, 14.1747, 0.3412 ) }
    dend_18 { pt3dadd( 390.518, 552.919, 14.3232, 0.3886 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 40/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 371.943, 549.039, 24.5133, 0.3752 ) }
    dend_15 { pt3dadd( 370.815, 549.189, 25.35, 0.3372 ) }
    dend_15 { pt3dadd( 369.685, 549.335, 26.0073, 0.3062 ) }
    dend_15 { pt3dadd( 368.561, 549.543, 26.5714, 0.2862 ) }
    dend_15 { pt3dadd( 367.483, 549.83, 27.1323, 0.296 ) }
    dend_15 { pt3dadd( 366.423, 550.137, 27.7489, 0.315 ) }
    dend_15 { pt3dadd( 365.386, 550.436, 28.4718, 0.3454 ) }
    dend_15 { pt3dadd( 364.414, 550.703, 29.3583, 0.426 ) }
    dend_15 { pt3dadd( 363.419, 551.003, 30.336, 0.458 ) }
    dend_15 { pt3dadd( 362.409, 551.377, 31.3264, 0.4008 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 50/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 378.761, 546.33, 17.7067, 0.3062 ) }
    dend_10 { pt3dadd( 379.839, 545.944, 17.5653, 0.334 ) }
    dend_10 { pt3dadd( 380.899, 545.518, 17.4565, 0.3804 ) }
    dend_10 { pt3dadd( 381.946, 545.055, 17.3819, 0.4928 ) }
    dend_10 { pt3dadd( 382.983, 544.571, 17.346, 0.5724 ) }
    dend_10 { pt3dadd( 384.028, 544.108, 17.3244, 0.659 ) }
    dend_10 { pt3dadd( 385.089, 543.678, 17.2895, 0.6584 ) }
    dend_10 { pt3dadd( 386.115, 543.196, 17.2046, 0.5228 ) }
    dend_10 { pt3dadd( 387.143, 542.694, 17.1443, 0.4678 ) }
    dend_10 { pt3dadd( 388.072, 542.027, 17.1091, 0.5566 ) }
    dend_10 { pt3dadd( 388.951, 541.295, 17.0839, 0.7098 ) }
    dend_10 { pt3dadd( 389.851, 540.589, 17.0625, 0.821 ) }
    dend_10 { pt3dadd( 390.833, 540.002, 17.0628, 0.722 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 63/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 371.088, 551.053, 19.234, 0.5564 ) }
    dend_7 { pt3dadd( 370.21, 551.781, 19.1411, 0.502 ) }
    dend_7 { pt3dadd( 369.71, 552.769, 18.9734, 0.5272 ) }
    dend_7 { pt3dadd( 368.63, 553.058, 18.9063, 0.6484 ) }
    dend_7 { pt3dadd( 367.513, 553.175, 18.9428, 0.5122 ) }
    dend_7 { pt3dadd( 366.377, 553.317, 18.9778, 0.4092 ) }
    dend_7 { pt3dadd( 365.243, 553.463, 18.9974, 0.4084 ) }
    dend_7 { pt3dadd( 364.109, 553.61, 18.9944, 0.399 ) }
    dend_7 { pt3dadd( 362.983, 553.804, 18.9505, 0.4188 ) }
    dend_7 { pt3dadd( 361.856, 553.996, 18.8586, 0.5046 ) }
    dend_7 { pt3dadd( 360.728, 553.855, 18.7141, 0.6546 ) }
    dend_7 { pt3dadd( 359.617, 553.627, 18.5408, 0.5176 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 75/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 378.471, 550.315, 23.5206, 0.437 ) }
    dend_0 { pt3dadd( 379.243, 551.017, 24.34, 0.678 ) }
    dend_0 { pt3dadd( 379.978, 551.871, 25.0228, 0.5264 ) }
    dend_0 { pt3dadd( 380.975, 552.408, 25.4406, 0.4046 ) }
    dend_0 { pt3dadd( 382.094, 552.529, 25.6265, 0.3218 ) }
    dend_0 { pt3dadd( 383.211, 552.303, 25.7195, 0.3876 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 81/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 386.916, 576.191, 19.3472, 1.0 ) }
    axon_1 { pt3dadd( 392.757, 590.007, 19.3472, 1.0 ) }
    axon_1 { pt3dadd( 398.598, 603.823, 19.3472, 1.0 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 84/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 361.863, 547.537, 18.3333, 0.5178 ) }
    dend_23 { pt3dadd( 361.295, 547.87, 18.1818, 0.6492 ) }
    dend_23 { pt3dadd( 360.326, 548.46, 18.1725, 0.6526 ) }
    dend_23 { pt3dadd( 359.345, 548.911, 18.3893, 0.6828 ) }
    dend_23 { pt3dadd( 358.269, 549.072, 18.7797, 0.6208 ) }
    dend_23 { pt3dadd( 357.185, 549.078, 19.3459, 0.6222 ) }
    dend_23 { pt3dadd( 356.135, 549.161, 20.0175, 0.5178 ) }
    dend_23 { pt3dadd( 355.13, 549.613, 20.6524, 0.3854 ) }
    dend_23 { pt3dadd( 354.346, 550.43, 21.1589, 0.3014 ) }
    dend_23 { pt3dadd( 353.751, 551.403, 21.5322, 0.2772 ) }
    dend_23 { pt3dadd( 353.265, 552.437, 21.8489, 0.2794 ) }
    dend_23 { pt3dadd( 352.862, 553.489, 22.1865, 0.2834 ) }
    dend_23 { pt3dadd( 352.509, 554.552, 22.5693, 0.2908 ) }
    dend_23 { pt3dadd( 352.181, 555.624, 23.0044, 0.3058 ) }
    dend_23 { pt3dadd( 351.881, 556.706, 23.4826, 0.327 ) }
    dend_23 { pt3dadd( 351.624, 557.802, 23.9798, 0.3986 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( 351.373, 558.905, 24.4621, 0.3752 ) }
    dend_23 { pt3dadd( 351.161, 560.006, 24.9371, 0.4022 ) }
    dend_23 { pt3dadd( 351.094, 561.059, 25.4745, 0.34 ) }
    dend_23 { pt3dadd( 350.845, 562.159, 25.9426, 0.3112 ) }
    dend_23 { pt3dadd( 350.511, 563.253, 26.304, 0.2954 ) }
    dend_23 { pt3dadd( 350.174, 564.346, 26.5871, 0.3126 ) }
    dend_23 { pt3dadd( 349.818, 565.43, 26.8556, 0.3484 ) }
    dend_23 { pt3dadd( 349.452, 566.501, 27.1489, 0.3954 ) }
    dend_23 { pt3dadd( 349.041, 567.545, 27.49, 0.5754 ) }
    dend_23 { pt3dadd( 348.51, 568.488, 27.9324, 0.4604 ) }
    dend_23 { pt3dadd( 347.966, 569.456, 28.4119, 0.3656 ) }
    dend_23 { pt3dadd( 347.487, 570.491, 28.803, 0.3016 ) }
    dend_23 { pt3dadd( 347.064, 571.55, 29.1396, 0.3256 ) }
    dend_23 { pt3dadd( 346.642, 572.599, 29.4552, 0.3646 ) }
    dend_23 { pt3dadd( 345.867, 573.422, 29.7354, 0.4642 ) }
    dend_23 { pt3dadd( 345.029, 574.196, 29.9732, 0.517 ) }
    dend_23 { pt3dadd( 344.24, 575.024, 30.1669, 0.5668 ) }
    dend_23 { pt3dadd( 343.511, 575.906, 30.3355, 0.4364 ) }
    dend_23 { pt3dadd( 342.846, 576.837, 30.487, 0.3596 ) }
    dend_23 { pt3dadd( 342.193, 577.775, 30.6359, 0.3326 ) }
    dend_23 { pt3dadd( 341.56, 578.727, 30.8087, 0.4086 ) }
    dend_23 { pt3dadd( 340.945, 579.69, 31.0299, 0.3938 ) }
    dend_23 { pt3dadd( 340.337, 580.657, 31.3118, 0.4378 ) }
    dend_23 { pt3dadd( 339.753, 581.636, 31.6761, 0.4004 ) }
    dend_23 { pt3dadd( 339.234, 582.636, 32.1549, 0.4508 ) }
    dend_23 { pt3dadd( 338.728, 583.638, 32.7429, 0.4198 ) }
    dend_23 { pt3dadd( 338.091, 584.469, 33.5087, 0.5102 ) }
    dend_23 { pt3dadd( 337.344, 585.161, 34.4302, 0.4174 ) }
    dend_23 { pt3dadd( 336.389, 585.519, 35.457, 0.365 ) }
    dend_23 { pt3dadd( 335.303, 585.473, 36.4876, 0.3734 ) }
    dend_23 { pt3dadd( 334.304, 585.388, 37.5735, 0.3338 ) }
    dend_23 { pt3dadd( 333.286, 585.489, 38.6638, 0.3 ) }
    dend_23 { pt3dadd( 332.236, 585.695, 39.6939, 0.2746 ) }
    dend_23 { pt3dadd( 331.182, 585.91, 40.6616, 0.2746 ) }
    dend_23 { pt3dadd( 330.132, 586.182, 41.5629, 0.2746 ) }
    dend_23 { pt3dadd( 329.086, 586.501, 42.3962, 0.2748 ) }
    dend_23 { pt3dadd( 328.042, 586.822, 43.1592, 0.2748 ) }
    dend_23 { pt3dadd( 326.997, 587.144, 43.8626, 0.2752 ) }
    dend_23 { pt3dadd( 325.938, 587.483, 44.4903, 0.2756 ) }
    dend_23 { pt3dadd( 324.864, 587.855, 45.001, 0.2766 ) }
    dend_23 { pt3dadd( 323.79, 588.231, 45.4124, 0.2782 ) }
    dend_23 { pt3dadd( 322.714, 588.605, 45.747, 0.2814 ) }
    dend_23 { pt3dadd( 321.64, 588.982, 46.0236, 0.287 ) }
    dend_23 { pt3dadd( 320.574, 589.386, 46.2518, 0.2988 ) }
    dend_23 { pt3dadd( 319.532, 589.854, 46.4346, 0.3142 ) }
    dend_23 { pt3dadd( 318.491, 590.328, 46.5881, 0.3734 ) }
    dend_23 { pt3dadd( 317.451, 590.802, 46.7194, 0.3338 ) }
    dend_23 { pt3dadd( 316.41, 591.275, 46.835, 0.3 ) }
    dend_23 { pt3dadd( 315.398, 591.807, 46.94, 0.2746 ) }
    dend_23 { pt3dadd( 314.498, 592.512, 47.0366, 0.2746 ) }
    dend_23 { pt3dadd( 313.609, 593.232, 47.1299, 0.2746 ) }
    dend_23 { pt3dadd( 312.72, 593.951, 47.2228, 0.2746 ) }
    dend_23 { pt3dadd( 311.832, 594.671, 47.3178, 0.2746 ) }
    dend_23 { pt3dadd( 310.944, 595.391, 47.4186, 0.2746 ) }
    dend_23 { pt3dadd( 310.068, 596.128, 47.5247, 0.2746 ) }
    dend_23 { pt3dadd( 309.192, 596.865, 47.6456, 0.2746 ) }
    dend_23 { pt3dadd( 308.318, 597.603, 47.7924, 0.2746 ) }
    dend_23 { pt3dadd( 307.444, 598.341, 47.9732, 0.2746 ) }
    dend_23 { pt3dadd( 306.569, 599.077, 48.1942, 0.2746 ) }
    dend_23 { pt3dadd( 305.63, 599.689, 48.5324, 0.2744 ) }
    dend_23 { pt3dadd( 304.672, 600.154, 49.0308, 0.2744 ) }
    dend_23 { pt3dadd( 303.715, 600.609, 49.644, 0.2742 ) }
    dend_23 { pt3dadd( 302.732, 601.148, 50.2536, 0.274 ) }
    dend_23 { pt3dadd( 301.749, 601.696, 50.8334, 0.2736 ) }
    dend_23 { pt3dadd( 300.767, 602.243, 51.3685, 0.2728 ) }
    dend_23 { pt3dadd( 299.741, 602.728, 51.8286, 0.2712 ) }
    dend_23 { pt3dadd( 298.704, 603.196, 52.2124, 0.2684 ) }
    dend_23 { pt3dadd( 297.572, 603.293, 52.5426, 0.2626 ) }
    dend_23 { pt3dadd( 296.449, 603.119, 52.8357, 0.2542 ) }
    dend_23 { pt3dadd( 295.365, 602.778, 53.0928, 0.2288 ) }
    dend_23 { pt3dadd( 294.38, 602.206, 53.5581, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 71/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 361.863, 547.537, 18.3333, 0.5178 ) }
    dend_22 { pt3dadd( 361.219, 547.553, 16.4376, 0.4576 ) }
    dend_22 { pt3dadd( 360.153, 547.247, 15.2998, 0.472 ) }
    dend_22 { pt3dadd( 359.254, 546.557, 14.8738, 0.501 ) }
    dend_22 { pt3dadd( 358.422, 545.792, 14.3391, 0.6858 ) }
    dend_22 { pt3dadd( 357.733, 545.252, 13.5311, 0.8508 ) }
    dend_22 { pt3dadd( 357.174, 544.553, 12.5404, 0.8744 ) }
    dend_22 { pt3dadd( 356.641, 543.784, 11.4768, 0.6868 ) }
    dend_22 { pt3dadd( 356.016, 542.993, 10.4642, 0.5462 ) }
    dend_22 { pt3dadd( 355.274, 542.198, 9.6122, 0.4242 ) }
    dend_22 { pt3dadd( 354.666, 541.255, 8.9923, 0.4404 ) }
    dend_22 { pt3dadd( 354.204, 540.219, 8.6255, 0.4366 ) }
    dend_22 { pt3dadd( 353.933, 539.206, 8.6579, 0.3664 ) }
    dend_22 { pt3dadd( 353.642, 538.218, 8.9935, 0.3128 ) }
    dend_22 { pt3dadd( 353.0, 537.283, 9.3862, 0.2994 ) }
    dend_22 { pt3dadd( 352.179, 536.489, 9.7698, 0.3154 ) }
    dend_22 { pt3dadd( 351.213, 535.884, 10.1253, 0.3758 ) }
    dend_22 { pt3dadd( 350.232, 535.304, 10.4367, 0.3382 ) }
    dend_22 { pt3dadd( 349.248, 534.727, 10.6964, 0.3082 ) }
    dend_22 { pt3dadd( 348.264, 534.15, 10.9346, 0.2896 ) }
    dend_22 { pt3dadd( 347.281, 533.567, 11.1679, 0.3034 ) }
    dend_22 { pt3dadd( 346.298, 532.982, 11.3924, 0.323 ) }
    dend_22 { pt3dadd( 345.322, 532.399, 11.6553, 0.3896 ) }
    dend_22 { pt3dadd( 344.36, 531.83, 11.9947, 0.365 ) }
    dend_22 { pt3dadd( 343.345, 531.358, 12.3866, 0.3526 ) }
    dend_22 { pt3dadd( 342.278, 531.004, 12.8028, 0.3976 ) }
    dend_22 { pt3dadd( 341.2, 530.67, 13.2233, 0.3794 ) }
    dend_22 { pt3dadd( 340.098, 530.384, 13.6049, 0.3804 ) }
    dend_22 { pt3dadd( 338.991, 530.103, 13.9441, 0.4438 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_22 { pt3dadd( 337.886, 529.823, 14.2503, 0.4906 ) }
    dend_22 { pt3dadd( 336.793, 529.499, 14.5439, 0.4622 ) }
    dend_22 { pt3dadd( 335.702, 529.167, 14.8415, 0.5126 ) }
    dend_22 { pt3dadd( 334.612, 528.835, 15.1563, 0.5622 ) }
    dend_22 { pt3dadd( 333.616, 528.288, 15.5114, 0.6398 ) }
    dend_22 { pt3dadd( 332.706, 527.612, 15.9111, 0.6232 ) }
    dend_22 { pt3dadd( 331.713, 527.121, 16.3922, 0.4566 ) }
    dend_22 { pt3dadd( 330.665, 526.802, 16.9447, 0.3496 ) }
    dend_22 { pt3dadd( 329.585, 526.969, 17.5409, 0.3142 ) }
    dend_22 { pt3dadd( 328.503, 527.153, 18.1453, 0.3738 ) }
    dend_22 { pt3dadd( 327.385, 527.275, 18.6917, 0.3344 ) }
    dend_22 { pt3dadd( 326.265, 527.394, 19.1683, 0.301 ) }
    dend_22 { pt3dadd( 325.147, 527.513, 19.5695, 0.2766 ) }
    dend_22 { pt3dadd( 324.012, 527.64, 19.848, 0.2782 ) }
    dend_22 { pt3dadd( 322.876, 527.772, 19.9973, 0.2814 ) }
    dend_22 { pt3dadd( 321.74, 527.904, 20.0494, 0.287 ) }
    dend_22 { pt3dadd( 320.604, 528.036, 20.0335, 0.2988 ) }
    dend_22 { pt3dadd( 319.462, 528.113, 19.9692, 0.3142 ) }
    dend_22 { pt3dadd( 318.32, 528.171, 19.8734, 0.3736 ) }
    dend_22 { pt3dadd( 317.179, 528.231, 19.7607, 0.3342 ) }
    dend_22 { pt3dadd( 316.036, 528.29, 19.6353, 0.3004 ) }
    dend_22 { pt3dadd( 314.896, 528.232, 19.4785, 0.2754 ) }
    dend_22 { pt3dadd( 313.764, 528.113, 19.2859, 0.2762 ) }
    dend_22 { pt3dadd( 312.63, 527.993, 19.0645, 0.2778 ) }
    dend_22 { pt3dadd( 311.497, 527.874, 18.8215, 0.2804 ) }
    dend_22 { pt3dadd( 310.36, 527.831, 18.557, 0.2856 ) }
    dend_22 { pt3dadd( 309.224, 527.827, 18.2773, 0.2948 ) }
    dend_22 { pt3dadd( 308.088, 527.822, 17.9921, 0.313 ) }
    dend_22 { pt3dadd( 306.951, 527.818, 17.709, 0.3418 ) }
    dend_22 { pt3dadd( 305.816, 527.828, 17.4336, 0.4196 ) }
    dend_22 { pt3dadd( 304.68, 527.843, 17.1729, 0.4448 ) }
    dend_22 { pt3dadd( 303.544, 527.859, 16.9341, 0.3818 ) }
    dend_22 { pt3dadd( 302.408, 527.868, 16.7241, 0.3414 ) }
    dend_22 { pt3dadd( 301.292, 527.62, 16.6028, 0.3534 ) }
    dend_22 { pt3dadd( 300.178, 527.365, 16.5555, 0.4098 ) }
    dend_22 { pt3dadd( 299.063, 527.109, 16.5652, 0.5782 ) }
    dend_22 { pt3dadd( 297.931, 526.954, 16.6197, 0.5818 ) }
    dend_22 { pt3dadd( 296.79, 526.876, 16.7049, 0.7124 ) }
    dend_22 { pt3dadd( 295.658, 526.731, 16.8036, 0.8106 ) }
    dend_22 { pt3dadd( 294.718, 526.081, 16.9012, 0.7768 ) }
    dend_22 { pt3dadd( 293.844, 525.344, 16.9872, 0.6186 ) }
    dend_22 { pt3dadd( 293.203, 524.397, 17.0397, 0.5592 ) }
    dend_22 { pt3dadd( 292.56, 523.451, 17.071, 0.2288 ) }
    // Section: apic_16, id: apic_16, parent: apic_0 (entry count 43/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 375.231, 532.219, 20.5906, 0.3824 ) }
    apic_16 { pt3dadd( 375.2, 531.792, 19.9445, 0.2288 ) }
    apic_16 { pt3dadd( 375.127, 530.769, 18.8519, 0.6662 ) }
    apic_16 { pt3dadd( 375.647, 529.824, 18.3726, 0.6434 ) }
    apic_16 { pt3dadd( 376.578, 529.178, 17.9201, 0.6328 ) }
    apic_16 { pt3dadd( 377.602, 528.694, 17.5119, 0.4598 ) }
    apic_16 { pt3dadd( 378.626, 528.21, 17.1608, 0.4272 ) }
    apic_16 { pt3dadd( 379.666, 527.745, 16.8944, 0.3392 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 51/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 375.231, 532.219, 20.5906, 0.3824 ) }
    apic_1 { pt3dadd( 374.893, 531.16, 20.7108, 0.4894 ) }
    apic_1 { pt3dadd( 374.548, 530.073, 20.8586, 0.6006 ) }
    apic_1 { pt3dadd( 374.324, 528.954, 21.006, 0.5436 ) }
    apic_1 { pt3dadd( 374.206, 527.815, 21.1346, 0.5712 ) }
    apic_1 { pt3dadd( 374.077, 526.68, 21.2637, 0.6614 ) }
    apic_1 { pt3dadd( 373.93, 525.551, 21.4137, 0.6396 ) }
    apic_1 { pt3dadd( 373.785, 524.423, 21.5758, 0.8314 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 59/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 390.518, 552.919, 14.3232, 0.3886 ) }
    dend_20 { pt3dadd( 390.987, 552.995, 14.4029, 0.532 ) }
    dend_20 { pt3dadd( 392.039, 553.326, 14.4157, 0.5292 ) }
    dend_20 { pt3dadd( 392.966, 553.96, 14.4847, 0.4544 ) }
    dend_20 { pt3dadd( 393.514, 554.834, 14.6084, 0.4256 ) }
    dend_20 { pt3dadd( 393.672, 555.955, 14.6707, 0.5256 ) }
    dend_20 { pt3dadd( 393.901, 557.062, 14.6644, 0.6514 ) }
    dend_20 { pt3dadd( 394.286, 558.135, 14.6634, 0.7172 ) }
    dend_20 { pt3dadd( 394.786, 559.162, 14.6688, 0.5072 ) }
    dend_20 { pt3dadd( 395.314, 560.177, 14.6687, 0.3578 ) }
    dend_20 { pt3dadd( 395.786, 561.212, 14.7008, 0.2874 ) }
    dend_20 { pt3dadd( 396.189, 562.277, 14.7743, 0.2994 ) }
    dend_20 { pt3dadd( 396.477, 563.38, 14.8411, 0.3154 ) }
    dend_20 { pt3dadd( 396.668, 564.506, 14.8651, 0.3758 ) }
    dend_20 { pt3dadd( 396.807, 565.639, 14.8555, 0.3384 ) }
    dend_20 { pt3dadd( 396.874, 566.78, 14.8392, 0.3084 ) }
    dend_20 { pt3dadd( 396.89, 567.924, 14.8331, 0.29 ) }
    dend_20 { pt3dadd( 396.898, 569.067, 14.8454, 0.3042 ) }
    dend_20 { pt3dadd( 396.904, 570.211, 14.8852, 0.3244 ) }
    dend_20 { pt3dadd( 396.896, 571.354, 14.9599, 0.3924 ) }
    dend_20 { pt3dadd( 396.874, 572.497, 15.0691, 0.369 ) }
    dend_20 { pt3dadd( 396.848, 573.637, 15.2036, 0.3658 ) }
    dend_20 { pt3dadd( 396.826, 574.779, 15.3538, 0.3932 ) }
    dend_20 { pt3dadd( 396.824, 575.919, 15.5135, 0.5116 ) }
    dend_20 { pt3dadd( 396.846, 577.059, 15.6767, 0.6306 ) }
    dend_20 { pt3dadd( 396.873, 578.199, 15.8342, 0.654 ) }
    dend_20 { pt3dadd( 396.886, 579.341, 15.9686, 0.5096 ) }
    dend_20 { pt3dadd( 396.875, 580.485, 16.0618, 0.4672 ) }
    dend_20 { pt3dadd( 396.847, 581.628, 16.114, 0.439 ) }
    dend_20 { pt3dadd( 396.788, 582.77, 16.1387, 0.3708 ) }
    dend_20 { pt3dadd( 396.687, 583.909, 16.1487, 0.3212 ) }
    dend_20 { pt3dadd( 396.556, 585.046, 16.1596, 0.3142 ) }
    dend_20 { pt3dadd( 396.398, 586.178, 16.1931, 0.3472 ) }
    dend_20 { pt3dadd( 396.23, 587.308, 16.2619, 0.4132 ) }
    dend_20 { pt3dadd( 396.108, 588.444, 16.3557, 0.5122 ) }
    dend_20 { pt3dadd( 396.031, 589.584, 16.462, 0.809 ) }
    dend_20 { pt3dadd( 396.006, 590.726, 16.5829, 0.8102 ) }
    dend_20 { pt3dadd( 396.046, 591.866, 16.7236, 0.7322 ) }
    dend_20 { pt3dadd( 396.126, 593.004, 16.8645, 0.5192 ) }
    dend_20 { pt3dadd( 396.214, 594.143, 16.9739, 0.4552 ) }
    dend_20 { pt3dadd( 396.183, 595.279, 17.0757, 0.5618 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_20 { pt3dadd( 395.918, 596.379, 17.2229, 0.5816 ) }
    dend_20 { pt3dadd( 395.49, 597.43, 17.4192, 0.5658 ) }
    dend_20 { pt3dadd( 394.987, 598.45, 17.6445, 0.563 ) }
    dend_20 { pt3dadd( 394.447, 599.455, 17.8945, 0.4296 ) }
    dend_20 { pt3dadd( 393.886, 600.442, 18.1717, 0.3456 ) }
    dend_20 { pt3dadd( 393.311, 601.419, 18.4675, 0.3128 ) }
    dend_20 { pt3dadd( 392.744, 602.403, 18.7648, 0.3412 ) }
    dend_20 { pt3dadd( 392.216, 603.411, 19.0482, 0.4184 ) }
    dend_20 { pt3dadd( 391.72, 604.438, 19.3102, 0.4428 ) }
    dend_20 { pt3dadd( 391.245, 605.476, 19.5517, 0.3776 ) }
    dend_20 { pt3dadd( 390.824, 606.536, 19.7765, 0.335 ) }
    dend_20 { pt3dadd( 390.485, 607.626, 19.9898, 0.3342 ) }
    dend_20 { pt3dadd( 390.182, 608.728, 20.2005, 0.4102 ) }
    dend_20 { pt3dadd( 389.994, 609.848, 20.4245, 0.4044 ) }
    dend_20 { pt3dadd( 390.066, 610.975, 20.6798, 0.4196 ) }
    dend_20 { pt3dadd( 390.279, 612.09, 20.9699, 0.5496 ) }
    dend_20 { pt3dadd( 390.511, 613.201, 21.2901, 0.5268 ) }
    dend_20 { pt3dadd( 390.776, 614.3, 21.6403, 0.6196 ) }
    dend_20 { pt3dadd( 391.08, 615.383, 22.0182, 0.5944 ) }
    dend_20 { pt3dadd( 391.43, 616.451, 22.4073, 0.5906 ) }
    dend_20 { pt3dadd( 391.877, 617.485, 22.7825, 0.6034 ) }
    dend_20 { pt3dadd( 392.434, 618.473, 23.1202, 0.53 ) }
    dend_20 { pt3dadd( 393.01, 619.459, 23.3966, 0.409 ) }
    dend_20 { pt3dadd( 393.378, 620.529, 23.6036, 0.3396 ) }
    dend_20 { pt3dadd( 393.459, 621.662, 23.7634, 0.3736 ) }
    dend_20 { pt3dadd( 393.514, 622.803, 23.898, 0.3342 ) }
    dend_20 { pt3dadd( 393.681, 623.933, 24.0226, 0.3006 ) }
    dend_20 { pt3dadd( 393.927, 625.05, 24.1538, 0.2756 ) }
    dend_20 { pt3dadd( 394.163, 626.163, 24.3249, 0.2766 ) }
    dend_20 { pt3dadd( 394.466, 627.24, 24.5638, 0.2782 ) }
    dend_20 { pt3dadd( 394.996, 628.221, 24.8443, 0.2814 ) }
    dend_20 { pt3dadd( 395.584, 629.193, 25.1083, 0.2872 ) }
    dend_20 { pt3dadd( 396.099, 630.214, 25.317, 0.2982 ) }
    dend_20 { pt3dadd( 396.459, 631.295, 25.4679, 0.3182 ) }
    dend_20 { pt3dadd( 396.647, 632.42, 25.5689, 0.3562 ) }
    dend_20 { pt3dadd( 396.741, 633.559, 25.6254, 0.4222 ) }
    dend_20 { pt3dadd( 396.768, 634.703, 25.6449, 0.5658 ) }
    dend_20 { pt3dadd( 396.747, 635.846, 25.6384, 0.7292 ) }
    dend_20 { pt3dadd( 396.71, 636.99, 25.6153, 0.8458 ) }
    dend_20 { pt3dadd( 396.565, 638.119, 25.5505, 0.822 ) }
    dend_20 { pt3dadd( 396.373, 639.239, 25.4304, 0.5708 ) }
    dend_20 { pt3dadd( 396.272, 640.372, 25.2837, 0.423 ) }
    dend_20 { pt3dadd( 396.262, 641.514, 25.1403, 0.436 ) }
    dend_20 { pt3dadd( 396.375, 642.65, 25.0187, 0.439 ) }
    dend_20 { pt3dadd( 396.724, 643.731, 24.9156, 0.5482 ) }
    dend_20 { pt3dadd( 397.438, 644.593, 24.8171, 0.4764 ) }
    dend_20 { pt3dadd( 398.467, 645.025, 24.7341, 0.5306 ) }
    dend_20 { pt3dadd( 399.542, 645.399, 24.7114, 0.4068 ) }
    dend_20 { pt3dadd( 400.032, 646.337, 24.7201, 0.3518 ) }
    dend_20 { pt3dadd( 400.116, 647.474, 24.744, 0.3182 ) }
    dend_20 { pt3dadd( 400.223, 648.61, 24.7763, 0.3812 ) }
    dend_20 { pt3dadd( 400.538, 649.708, 24.7783, 0.3484 ) }
    dend_20 { pt3dadd( 400.926, 650.784, 24.7312, 0.3266 ) }
    dend_20 { pt3dadd( 401.457, 651.794, 24.6122, 0.3246 ) }
    dend_20 { pt3dadd( 402.058, 652.762, 24.4238, 0.3642 ) }
    dend_20 { pt3dadd( 402.697, 653.706, 24.1826, 0.4558 ) }
    dend_20 { pt3dadd( 403.284, 654.683, 23.8925, 0.5378 ) }
    dend_20 { pt3dadd( 403.518, 655.772, 23.5211, 0.43 ) }
    dend_20 { pt3dadd( 403.678, 656.892, 23.1114, 0.3464 ) }
    dend_20 { pt3dadd( 403.866, 658.008, 22.6787, 0.3134 ) }
    dend_20 { pt3dadd( 404.609, 658.8, 22.1748, 0.3472 ) }
    dend_20 { pt3dadd( 405.733, 658.734, 21.6979, 0.4054 ) }
    dend_20 { pt3dadd( 406.859, 658.776, 21.2145, 0.5358 ) }
    dend_20 { pt3dadd( 407.773, 659.363, 20.6893, 0.6694 ) }
    dend_20 { pt3dadd( 408.258, 660.319, 20.1312, 0.7542 ) }
    dend_20 { pt3dadd( 408.297, 661.414, 19.5955, 0.5592 ) }
    dend_20 { pt3dadd( 408.08, 662.535, 19.1888, 0.5338 ) }
    dend_20 { pt3dadd( 407.758, 663.624, 18.8306, 0.2288 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 68/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 390.518, 552.919, 14.3232, 0.3886 ) }
    dend_19 { pt3dadd( 390.879, 553.027, 15.2729, 0.2288 ) }
    dend_19 { pt3dadd( 391.882, 553.198, 15.9622, 0.3044 ) }
    dend_19 { pt3dadd( 393.013, 553.19, 16.2399, 0.3246 ) }
    dend_19 { pt3dadd( 394.155, 553.25, 16.4429, 0.3928 ) }
    dend_19 { pt3dadd( 395.298, 553.291, 16.5797, 0.3706 ) }
    dend_19 { pt3dadd( 396.436, 553.304, 16.6412, 0.3638 ) }
    dend_19 { pt3dadd( 397.572, 553.293, 16.6493, 0.4132 ) }
    dend_19 { pt3dadd( 398.716, 553.283, 16.6655, 0.433 ) }
    dend_19 { pt3dadd( 399.859, 553.276, 16.7512, 0.36 ) }
    dend_19 { pt3dadd( 400.998, 553.286, 16.9461, 0.3012 ) }
    dend_19 { pt3dadd( 402.123, 553.32, 17.2763, 0.2766 ) }
    dend_19 { pt3dadd( 403.243, 553.341, 17.7286, 0.2784 ) }
    dend_19 { pt3dadd( 404.34, 553.397, 18.2919, 0.2818 ) }
    dend_19 { pt3dadd( 405.379, 553.71, 18.9503, 0.2878 ) }
    dend_19 { pt3dadd( 406.376, 553.698, 19.6625, 0.3 ) }
    dend_19 { pt3dadd( 407.36, 553.178, 20.375, 0.3166 ) }
    dend_19 { pt3dadd( 408.399, 552.765, 21.07, 0.378 ) }
    dend_19 { pt3dadd( 409.505, 552.56, 21.7368, 0.3426 ) }
    dend_19 { pt3dadd( 410.633, 552.544, 22.3857, 0.316 ) }
    dend_19 { pt3dadd( 411.715, 552.481, 23.0766, 0.304 ) }
    dend_19 { pt3dadd( 412.649, 552.21, 23.8949, 0.3304 ) }
    dend_19 { pt3dadd( 413.498, 551.851, 24.8426, 0.3726 ) }
    dend_19 { pt3dadd( 414.459, 551.43, 25.7191, 0.483 ) }
    dend_19 { pt3dadd( 415.535, 551.072, 26.4129, 0.531 ) }
    dend_19 { pt3dadd( 416.605, 551.131, 27.0858, 0.6954 ) }
    dend_19 { pt3dadd( 417.623, 551.419, 27.7999, 0.8624 ) }
    dend_19 { pt3dadd( 418.665, 551.572, 28.537, 0.6974 ) }
    dend_19 { pt3dadd( 419.731, 551.505, 29.2807, 0.6366 ) }
    dend_19 { pt3dadd( 420.794, 551.273, 30.0168, 0.7056 ) }
    dend_19 { pt3dadd( 421.842, 550.933, 30.7112, 0.6376 ) }
    dend_19 { pt3dadd( 422.857, 550.464, 31.3048, 0.5492 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_19 { pt3dadd( 423.822, 549.87, 31.7671, 0.4294 ) }
    dend_19 { pt3dadd( 424.771, 549.241, 32.1118, 0.4504 ) }
    dend_19 { pt3dadd( 425.725, 548.615, 32.3518, 0.4548 ) }
    dend_19 { pt3dadd( 426.687, 547.998, 32.4946, 0.4012 ) }
    dend_19 { pt3dadd( 427.651, 547.383, 32.5556, 0.3734 ) }
    dend_19 { pt3dadd( 428.595, 546.737, 32.5466, 0.431 ) }
    dend_19 { pt3dadd( 429.5, 546.039, 32.4708, 0.4656 ) }
    dend_19 { pt3dadd( 430.414, 545.356, 32.3277, 0.4222 ) }
    dend_19 { pt3dadd( 431.392, 544.78, 32.114, 0.4072 ) }
    dend_19 { pt3dadd( 432.43, 544.308, 31.8578, 0.5194 ) }
    dend_19 { pt3dadd( 433.5, 543.91, 31.5927, 0.506 ) }
    dend_19 { pt3dadd( 434.522, 543.443, 31.2631, 0.4102 ) }
    dend_19 { pt3dadd( 435.417, 542.864, 30.8148, 0.3492 ) }
    dend_19 { pt3dadd( 436.266, 542.188, 30.3078, 0.3554 ) }
    dend_19 { pt3dadd( 437.097, 541.431, 29.8343, 0.4754 ) }
    dend_19 { pt3dadd( 437.919, 540.644, 29.4328, 0.3992 ) }
    dend_19 { pt3dadd( 438.799, 539.921, 29.1138, 0.3364 ) }
    dend_19 { pt3dadd( 439.798, 539.375, 28.8912, 0.2948 ) }
    dend_19 { pt3dadd( 440.858, 538.946, 28.758, 0.3132 ) }
    dend_19 { pt3dadd( 441.944, 538.592, 28.6868, 0.341 ) }
    dend_19 { pt3dadd( 443.075, 538.441, 28.6628, 0.4226 ) }
    dend_19 { pt3dadd( 444.216, 538.437, 28.6787, 0.4284 ) }
    dend_19 { pt3dadd( 445.359, 538.495, 28.7157, 0.4588 ) }
    dend_19 { pt3dadd( 446.496, 538.607, 28.7552, 0.6488 ) }
    dend_19 { pt3dadd( 447.462, 538.119, 28.7574, 0.5808 ) }
    dend_19 { pt3dadd( 448.439, 537.616, 28.9024, 0.665 ) }
    dend_19 { pt3dadd( 449.434, 537.105, 29.136, 0.4862 ) }
    dend_19 { pt3dadd( 450.211, 536.269, 29.3619, 0.408 ) }
    dend_19 { pt3dadd( 450.909, 535.366, 29.5873, 0.4072 ) }
    dend_19 { pt3dadd( 451.369, 534.327, 29.8259, 0.391 ) }
    dend_19 { pt3dadd( 451.681, 533.236, 30.0656, 0.4324 ) }
    dend_19 { pt3dadd( 451.735, 532.095, 30.2604, 0.391 ) }
    dend_19 { pt3dadd( 451.731, 530.951, 30.4058, 0.431 ) }
    dend_19 { pt3dadd( 451.687, 529.81, 30.4996, 0.3956 ) }
    dend_19 { pt3dadd( 452.141, 528.765, 30.6138, 0.404 ) }
    dend_19 { pt3dadd( 452.72, 527.786, 30.7642, 0.5182 ) }
    dend_19 { pt3dadd( 453.325, 526.818, 30.931, 0.4802 ) }
    dend_19 { pt3dadd( 453.931, 525.849, 31.1184, 0.4778 ) }
    dend_19 { pt3dadd( 454.511, 524.866, 31.3295, 0.6 ) }
    dend_19 { pt3dadd( 454.937, 523.814, 31.5801, 0.6704 ) }
    dend_19 { pt3dadd( 455.355, 522.759, 31.8511, 0.6426 ) }
    dend_19 { pt3dadd( 455.778, 521.705, 32.1342, 0.4456 ) }
    dend_19 { pt3dadd( 456.355, 520.731, 32.4296, 0.3282 ) }
    dend_19 { pt3dadd( 456.921, 519.748, 32.7239, 0.28 ) }
    dend_19 { pt3dadd( 457.223, 518.644, 32.9638, 0.2846 ) }
    dend_19 { pt3dadd( 457.513, 517.538, 33.1551, 0.2928 ) }
    dend_19 { pt3dadd( 457.734, 516.422, 33.343, 0.3094 ) }
    dend_19 { pt3dadd( 457.948, 515.305, 33.532, 0.3348 ) }
    dend_19 { pt3dadd( 458.075, 514.174, 33.7145, 0.4068 ) }
    dend_19 { pt3dadd( 458.09, 513.035, 33.8848, 0.4208 ) }
    dend_19 { pt3dadd( 458.226, 511.899, 33.9962, 0.339 ) }
    dend_19 { pt3dadd( 458.519, 510.811, 33.9993, 0.2542 ) }
    dend_19 { pt3dadd( 458.754, 509.711, 34.1418, 0.2288 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 53/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 362.409, 551.377, 31.3264, 0.4008 ) }
    dend_17 { pt3dadd( 361.749, 551.699, 32.2778, 0.4024 ) }
    dend_17 { pt3dadd( 360.849, 552.306, 33.2097, 0.3406 ) }
    dend_17 { pt3dadd( 360.079, 553.09, 34.1124, 0.3124 ) }
    dend_17 { pt3dadd( 359.447, 553.959, 35.0272, 0.2976 ) }
    dend_17 { pt3dadd( 358.899, 554.872, 35.9783, 0.3182 ) }
    dend_17 { pt3dadd( 358.215, 555.648, 36.9886, 0.351 ) }
    dend_17 { pt3dadd( 357.338, 556.246, 38.0274, 0.4374 ) }
    dend_17 { pt3dadd( 356.421, 556.834, 39.0622, 0.473 ) }
    dend_17 { pt3dadd( 355.583, 557.451, 40.1318, 0.4594 ) }
    dend_17 { pt3dadd( 355.004, 558.19, 41.272, 0.3616 ) }
    dend_17 { pt3dadd( 354.717, 559.042, 42.4696, 0.3042 ) }
    dend_17 { pt3dadd( 354.5, 560.033, 43.6215, 0.2824 ) }
    dend_17 { pt3dadd( 354.273, 561.098, 44.6538, 0.289 ) }
    dend_17 { pt3dadd( 354.168, 562.191, 45.5608, 0.3024 ) }
    dend_17 { pt3dadd( 354.267, 563.286, 46.3428, 0.321 ) }
    dend_17 { pt3dadd( 354.623, 564.33, 47.0053, 0.3858 ) }
    dend_17 { pt3dadd( 355.162, 565.304, 47.5546, 0.358 ) }
    dend_17 { pt3dadd( 355.762, 566.256, 48.0077, 0.3396 ) }
    dend_17 { pt3dadd( 356.326, 567.244, 48.3482, 0.3734 ) }
    dend_17 { pt3dadd( 356.608, 568.34, 48.5383, 0.334 ) }
    dend_17 { pt3dadd( 356.691, 569.474, 48.6111, 0.3002 ) }
    dend_17 { pt3dadd( 356.771, 570.614, 48.6391, 0.2748 ) }
    dend_17 { pt3dadd( 356.795, 571.758, 48.6682, 0.2752 ) }
    dend_17 { pt3dadd( 356.674, 572.893, 48.7267, 0.2756 ) }
    dend_17 { pt3dadd( 356.477, 574.02, 48.8418, 0.2766 ) }
    dend_17 { pt3dadd( 356.112, 575.102, 49.0325, 0.2782 ) }
    dend_17 { pt3dadd( 355.648, 576.147, 49.2999, 0.2814 ) }
    dend_17 { pt3dadd( 355.246, 577.218, 49.6401, 0.287 ) }
    dend_17 { pt3dadd( 354.917, 578.301, 50.099, 0.2988 ) }
    dend_17 { pt3dadd( 354.752, 578.722, 50.939, 0.3142 ) }
    dend_17 { pt3dadd( 354.56, 579.024, 52.0811, 0.3734 ) }
    dend_17 { pt3dadd( 354.012, 579.999, 53.0718, 0.3338 ) }
    dend_17 { pt3dadd( 353.451, 580.993, 53.8874, 0.3 ) }
    dend_17 { pt3dadd( 353.022, 582.043, 54.5642, 0.2746 ) }
    dend_17 { pt3dadd( 352.608, 583.097, 55.1085, 0.2746 ) }
    dend_17 { pt3dadd( 352.194, 584.152, 55.5341, 0.2746 ) }
    dend_17 { pt3dadd( 351.802, 585.213, 55.9045, 0.2746 ) }
    dend_17 { pt3dadd( 351.445, 586.286, 56.2808, 0.2746 ) }
    dend_17 { pt3dadd( 351.09, 587.362, 56.6574, 0.2746 ) }
    dend_17 { pt3dadd( 350.734, 588.435, 57.0254, 0.2746 ) }
    dend_17 { pt3dadd( 350.379, 589.509, 57.3807, 0.2746 ) }
    dend_17 { pt3dadd( 350.015, 590.583, 57.713, 0.2746 ) }
    dend_17 { pt3dadd( 349.618, 591.654, 57.9958, 0.2746 ) }
    dend_17 { pt3dadd( 349.219, 592.725, 58.2378, 0.2746 ) }
    dend_17 { pt3dadd( 348.822, 593.795, 58.45, 0.2746 ) }
    dend_17 { pt3dadd( 348.423, 594.866, 58.6454, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_17 { pt3dadd( 348.071, 595.953, 58.8322, 0.2746 ) }
    dend_17 { pt3dadd( 347.792, 597.062, 59.0153, 0.2746 ) }
    dend_17 { pt3dadd( 347.517, 598.172, 59.2074, 0.2746 ) }
    dend_17 { pt3dadd( 347.242, 599.282, 59.4129, 0.2746 ) }
    dend_17 { pt3dadd( 346.918, 600.341, 59.7254, 0.2744 ) }
    dend_17 { pt3dadd( 346.585, 601.378, 60.1356, 0.2744 ) }
    dend_17 { pt3dadd( 346.329, 602.476, 60.5492, 0.2742 ) }
    dend_17 { pt3dadd( 346.082, 603.58, 60.9434, 0.274 ) }
    dend_17 { pt3dadd( 345.805, 604.683, 61.2853, 0.2736 ) }
    dend_17 { pt3dadd( 345.495, 605.784, 61.5471, 0.2728 ) }
    dend_17 { pt3dadd( 345.142, 606.87, 61.7285, 0.2712 ) }
    dend_17 { pt3dadd( 344.669, 607.911, 61.8422, 0.2684 ) }
    dend_17 { pt3dadd( 343.956, 608.806, 61.9032, 0.2626 ) }
    dend_17 { pt3dadd( 343.127, 609.594, 61.9293, 0.2542 ) }
    dend_17 { pt3dadd( 342.302, 610.386, 61.9374, 0.2288 ) }
    dend_17 { pt3dadd( 341.834, 611.43, 61.9385, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 16/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 362.409, 551.377, 31.3264, 0.4008 ) }
    dend_16 { pt3dadd( 362.36, 551.383, 32.0166, 0.4576 ) }
    dend_16 { pt3dadd( 361.745, 550.725, 33.0744, 0.3842 ) }
    dend_16 { pt3dadd( 361.028, 549.856, 33.5012, 0.3484 ) }
    dend_16 { pt3dadd( 360.312, 548.985, 33.9727, 0.3536 ) }
    dend_16 { pt3dadd( 359.595, 548.116, 34.4733, 0.4722 ) }
    dend_16 { pt3dadd( 358.949, 547.195, 34.9924, 0.3932 ) }
    dend_16 { pt3dadd( 358.318, 546.262, 35.5172, 0.3254 ) }
    dend_16 { pt3dadd( 357.688, 545.331, 36.0371, 0.2746 ) }
    dend_16 { pt3dadd( 357.056, 544.399, 36.5663, 0.2746 ) }
    dend_16 { pt3dadd( 356.491, 543.435, 37.1101, 0.2746 ) }
    dend_16 { pt3dadd( 356.056, 542.406, 37.6765, 0.2746 ) }
    dend_16 { pt3dadd( 355.622, 541.377, 38.2609, 0.2746 ) }
    dend_16 { pt3dadd( 355.188, 540.349, 38.859, 0.2746 ) }
    dend_16 { pt3dadd( 354.753, 539.32, 39.4677, 0.2746 ) }
    dend_16 { pt3dadd( 354.319, 538.292, 40.0856, 0.2746 ) }
    dend_16 { pt3dadd( 354.019, 537.214, 40.7058, 0.2746 ) }
    dend_16 { pt3dadd( 353.742, 536.128, 41.3311, 0.2746 ) }
    dend_16 { pt3dadd( 353.466, 535.042, 41.9684, 0.2746 ) }
    dend_16 { pt3dadd( 353.189, 533.955, 42.6272, 0.2746 ) }
    dend_16 { pt3dadd( 353.14, 532.854, 43.3241, 0.2746 ) }
    dend_16 { pt3dadd( 353.24, 531.744, 44.0742, 0.2746 ) }
    dend_16 { pt3dadd( 353.338, 530.633, 44.8868, 0.2744 ) }
    dend_16 { pt3dadd( 353.573, 529.591, 45.7951, 0.2744 ) }
    dend_16 { pt3dadd( 354.083, 528.688, 46.8454, 0.2742 ) }
    dend_16 { pt3dadd( 354.743, 528.234, 48.0575, 0.274 ) }
    dend_16 { pt3dadd( 355.575, 528.299, 49.4382, 0.2736 ) }
    dend_16 { pt3dadd( 356.254, 528.733, 50.92, 0.2728 ) }
    dend_16 { pt3dadd( 356.902, 529.241, 52.4457, 0.2712 ) }
    dend_16 { pt3dadd( 357.824, 529.217, 53.8955, 0.2684 ) }
    dend_16 { pt3dadd( 358.758, 529.166, 55.2247, 0.2626 ) }
    dend_16 { pt3dadd( 359.765, 528.799, 56.2716, 0.2542 ) }
    dend_16 { pt3dadd( 360.797, 528.321, 57.0254, 0.2288 ) }
    dend_16 { pt3dadd( 361.828, 527.844, 57.9869, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 50/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 390.833, 540.002, 17.0628, 0.722 ) }
    dend_14 { pt3dadd( 391.714, 539.417, 16.1376, 0.4576 ) }
    dend_14 { pt3dadd( 392.725, 538.899, 15.9632, 0.4502 ) }
    dend_14 { pt3dadd( 393.772, 538.437, 15.897, 0.4524 ) }
    dend_14 { pt3dadd( 394.861, 538.09, 15.8192, 0.6346 ) }
    dend_14 { pt3dadd( 395.983, 537.878, 15.7353, 0.5668 ) }
    dend_14 { pt3dadd( 397.113, 537.699, 15.6471, 0.5784 ) }
    dend_14 { pt3dadd( 398.239, 537.498, 15.5531, 0.6206 ) }
    dend_14 { pt3dadd( 399.361, 537.28, 15.4396, 0.5986 ) }
    dend_14 { pt3dadd( 400.444, 537.125, 15.2074, 0.5862 ) }
    dend_14 { pt3dadd( 401.561, 536.949, 14.9514, 0.4256 ) }
    dend_14 { pt3dadd( 402.679, 536.706, 14.7362, 0.3384 ) }
    dend_14 { pt3dadd( 403.776, 536.385, 14.5612, 0.2982 ) }
    dend_14 { pt3dadd( 404.867, 536.043, 14.415, 0.3198 ) }
    dend_14 { pt3dadd( 405.948, 535.669, 14.2867, 0.3524 ) }
    dend_14 { pt3dadd( 407.028, 535.29, 14.1636, 0.4476 ) }
    dend_14 { pt3dadd( 408.119, 534.945, 14.014, 0.4558 ) }
    dend_14 { pt3dadd( 409.238, 534.722, 13.8066, 0.6026 ) }
    dend_14 { pt3dadd( 410.372, 534.795, 13.5121, 0.4638 ) }
    dend_14 { pt3dadd( 411.514, 534.845, 13.1549, 0.3714 ) }
    dend_14 { pt3dadd( 412.647, 534.693, 12.7252, 0.3138 ) }
    dend_14 { pt3dadd( 413.764, 534.463, 12.1661, 0.3414 ) }
    dend_14 { pt3dadd( 414.695, 533.997, 11.378, 0.4266 ) }
    dend_14 { pt3dadd( 414.994, 533.335, 10.2933, 0.4208 ) }
    dend_14 { pt3dadd( 415.54, 532.827, 9.0308, 0.517 ) }
    dend_14 { pt3dadd( 416.401, 532.994, 7.7379, 0.4068 ) }
    dend_14 { pt3dadd( 417.202, 533.609, 5.178, 0.4576 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 77/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 390.833, 540.002, 17.0628, 0.722 ) }
    dend_11 { pt3dadd( 391.919, 539.883, 17.0215, 0.6478 ) }
    dend_11 { pt3dadd( 392.953, 539.418, 16.9991, 0.6644 ) }
    dend_11 { pt3dadd( 393.99, 538.938, 17.028, 0.6336 ) }
    dend_11 { pt3dadd( 395.071, 538.58, 17.134, 0.6468 ) }
    dend_11 { pt3dadd( 396.166, 538.314, 17.3453, 0.5582 ) }
    dend_11 { pt3dadd( 397.235, 538.106, 17.6881, 0.4858 ) }
    dend_11 { pt3dadd( 398.336, 537.896, 18.0756, 0.3636 ) }
    dend_11 { pt3dadd( 399.461, 537.725, 18.3827, 0.3078 ) }
    dend_11 { pt3dadd( 400.576, 537.901, 18.6522, 0.2892 ) }
    dend_11 { pt3dadd( 401.598, 538.367, 18.9431, 0.3014 ) }
    dend_11 { pt3dadd( 402.679, 538.715, 19.2225, 0.3256 ) }
    dend_11 { pt3dadd( 403.805, 538.91, 19.468, 0.3636 ) }
    dend_11 { pt3dadd( 404.937, 539.055, 19.7211, 0.4668 ) }
    dend_11 { pt3dadd( 406.069, 539.168, 20.0155, 0.4986 ) }
    dend_11 { pt3dadd( 407.183, 538.996, 20.3568, 0.6468 ) }
    dend_11 { pt3dadd( 408.219, 538.546, 20.7411, 0.717 ) }
    dend_11 { pt3dadd( 409.284, 538.154, 21.1586, 0.6948 ) }
    dend_11 { pt3dadd( 410.387, 537.877, 21.5959, 0.7082 ) }
    dend_11 { pt3dadd( 411.408, 537.459, 22.1052, 0.6974 ) }
    dend_11 { pt3dadd( 411.691, 536.588, 22.7765, 0.6204 ) }
    dend_11 { pt3dadd( 412.286, 535.681, 23.4486, 0.526 ) }
    dend_11 { pt3dadd( 413.319, 535.2, 24.0067, 0.574 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_11 { pt3dadd( 414.333, 534.676, 24.4595, 0.7244 ) }
    dend_11 { pt3dadd( 415.135, 533.86, 24.7835, 0.7044 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 2/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 359.617, 553.627, 18.5408, 0.5176 ) }
    dend_9 { pt3dadd( 358.579, 553.026, 18.315, 0.334 ) }
    dend_9 { pt3dadd( 357.519, 552.612, 18.254, 0.3002 ) }
    dend_9 { pt3dadd( 356.395, 552.43, 18.206, 0.2748 ) }
    dend_9 { pt3dadd( 355.284, 552.616, 18.1511, 0.275 ) }
    dend_9 { pt3dadd( 354.257, 553.103, 18.0728, 0.2754 ) }
    dend_9 { pt3dadd( 353.284, 553.701, 17.9624, 0.276 ) }
    dend_9 { pt3dadd( 352.346, 554.349, 17.8253, 0.2772 ) }
    dend_9 { pt3dadd( 351.418, 555.013, 17.6728, 0.2796 ) }
    dend_9 { pt3dadd( 350.498, 555.687, 17.5239, 0.284 ) }
    dend_9 { pt3dadd( 349.585, 556.375, 17.3969, 0.2916 ) }
    dend_9 { pt3dadd( 348.676, 557.071, 17.2966, 0.3074 ) }
    dend_9 { pt3dadd( 347.769, 557.768, 17.2189, 0.3302 ) }
    dend_9 { pt3dadd( 346.824, 558.409, 17.155, 0.4032 ) }
    dend_9 { pt3dadd( 345.836, 558.984, 17.0964, 0.3898 ) }
    dend_9 { pt3dadd( 344.832, 559.534, 17.0379, 0.4004 ) }
    dend_9 { pt3dadd( 343.827, 560.08, 16.9775, 0.4768 ) }
    dend_9 { pt3dadd( 342.778, 560.529, 16.9175, 0.5712 ) }
    dend_9 { pt3dadd( 341.685, 560.863, 16.8611, 0.5176 ) }
    dend_9 { pt3dadd( 340.58, 561.161, 16.8095, 0.385 ) }
    dend_9 { pt3dadd( 339.475, 561.453, 16.7623, 0.3006 ) }
    dend_9 { pt3dadd( 338.368, 561.741, 16.721, 0.2756 ) }
    dend_9 { pt3dadd( 337.259, 562.024, 16.6861, 0.2764 ) }
    dend_9 { pt3dadd( 336.151, 562.306, 16.655, 0.278 ) }
    dend_9 { pt3dadd( 335.041, 562.586, 16.6245, 0.2808 ) }
    dend_9 { pt3dadd( 333.918, 562.795, 16.5856, 0.2862 ) }
    dend_9 { pt3dadd( 332.782, 562.911, 16.5307, 0.2958 ) }
    dend_9 { pt3dadd( 331.641, 562.99, 16.4599, 0.3148 ) }
    dend_9 { pt3dadd( 330.5, 563.064, 16.3772, 0.3452 ) }
    dend_9 { pt3dadd( 329.359, 563.132, 16.2948, 0.4256 ) }
    dend_9 { pt3dadd( 328.217, 563.191, 16.2224, 0.457 ) }
    dend_9 { pt3dadd( 327.074, 563.25, 16.1603, 0.3992 ) }
    dend_9 { pt3dadd( 325.932, 563.326, 16.0977, 0.3994 ) }
    dend_9 { pt3dadd( 324.797, 563.441, 16.0184, 0.335 ) }
    dend_9 { pt3dadd( 323.663, 563.579, 15.9159, 0.3022 ) }
    dend_9 { pt3dadd( 322.533, 563.737, 15.7956, 0.2788 ) }
    dend_9 { pt3dadd( 321.41, 563.946, 15.6698, 0.2822 ) }
    dend_9 { pt3dadd( 320.295, 564.198, 15.5487, 0.2888 ) }
    dend_9 { pt3dadd( 319.182, 564.456, 15.437, 0.3006 ) }
    dend_9 { pt3dadd( 318.053, 564.633, 15.339, 0.3252 ) }
    dend_9 { pt3dadd( 316.912, 564.645, 15.2576, 0.3578 ) }
    dend_9 { pt3dadd( 315.772, 564.563, 15.1905, 0.4802 ) }
    dend_9 { pt3dadd( 314.631, 564.464, 15.1321, 0.4076 ) }
    dend_9 { pt3dadd( 313.489, 564.397, 15.078, 0.3532 ) }
    dend_9 { pt3dadd( 312.346, 564.376, 15.0247, 0.3208 ) }
    dend_9 { pt3dadd( 311.202, 564.379, 14.9687, 0.3856 ) }
    dend_9 { pt3dadd( 310.083, 564.586, 14.9009, 0.3566 ) }
    dend_9 { pt3dadd( 309.039, 565.039, 14.8136, 0.3418 ) }
    dend_9 { pt3dadd( 308.236, 565.825, 14.6965, 0.354 ) }
    dend_9 { pt3dadd( 307.602, 566.77, 14.5558, 0.4134 ) }
    dend_9 { pt3dadd( 306.902, 567.671, 14.4214, 0.5726 ) }
    dend_9 { pt3dadd( 306.135, 568.521, 14.3011, 0.6296 ) }
    dend_9 { pt3dadd( 305.341, 569.336, 14.1735, 0.518 ) }
    dend_9 { pt3dadd( 304.693, 570.267, 14.0415, 0.4526 ) }
    dend_9 { pt3dadd( 304.255, 571.316, 13.9261, 0.5576 ) }
    dend_9 { pt3dadd( 303.885, 572.396, 13.8763, 0.5708 ) }
    dend_9 { pt3dadd( 303.518, 573.476, 13.8949, 0.5596 ) }
    dend_9 { pt3dadd( 303.144, 574.557, 13.9355, 0.4846 ) }
    dend_9 { pt3dadd( 302.792, 575.645, 13.9941, 0.6088 ) }
    dend_9 { pt3dadd( 302.543, 576.747, 14.1152, 0.475 ) }
    dend_9 { pt3dadd( 301.971, 577.682, 14.3081, 0.3938 ) }
    dend_9 { pt3dadd( 301.046, 578.287, 14.3835, 0.3486 ) }
    dend_9 { pt3dadd( 300.618, 579.315, 14.3802, 0.4394 ) }
    dend_9 { pt3dadd( 299.99, 580.269, 14.3781, 0.4468 ) }
    dend_9 { pt3dadd( 299.118, 581.006, 14.3591, 0.5552 ) }
    dend_9 { pt3dadd( 298.196, 581.683, 14.3527, 0.525 ) }
    dend_9 { pt3dadd( 297.2, 582.233, 14.3913, 0.4464 ) }
    dend_9 { pt3dadd( 296.186, 582.749, 14.4805, 0.4116 ) }
    dend_9 { pt3dadd( 295.178, 583.278, 14.587, 0.4956 ) }
    dend_9 { pt3dadd( 294.175, 583.816, 14.6825, 0.615 ) }
    dend_9 { pt3dadd( 293.225, 584.435, 14.6665, 0.5574 ) }
    dend_9 { pt3dadd( 292.297, 585.061, 14.5322, 0.6588 ) }
    dend_9 { pt3dadd( 291.262, 585.547, 14.3995, 0.5228 ) }
    dend_9 { pt3dadd( 290.273, 586.119, 14.2503, 0.4718 ) }
    dend_9 { pt3dadd( 289.429, 586.854, 14.0354, 0.5444 ) }
    dend_9 { pt3dadd( 288.539, 587.571, 13.8742, 0.5546 ) }
    dend_9 { pt3dadd( 287.614, 588.236, 13.8013, 0.4896 ) }
    dend_9 { pt3dadd( 286.533, 588.607, 13.7381, 0.5478 ) }
    dend_9 { pt3dadd( 285.449, 588.968, 13.6623, 0.4754 ) }
    dend_9 { pt3dadd( 284.375, 589.358, 13.5667, 0.529 ) }
    dend_9 { pt3dadd( 283.296, 589.734, 13.4648, 0.404 ) }
    dend_9 { pt3dadd( 282.211, 590.095, 13.3595, 0.3456 ) }
    dend_9 { pt3dadd( 281.231, 590.684, 13.2378, 0.3118 ) }
    dend_9 { pt3dadd( 280.329, 591.388, 13.093, 0.3446 ) }
    dend_9 { pt3dadd( 279.774, 592.361, 12.8432, 0.3996 ) }
    dend_9 { pt3dadd( 279.337, 593.408, 12.543, 0.5294 ) }
    dend_9 { pt3dadd( 279.141, 594.534, 12.244, 0.6346 ) }
    dend_9 { pt3dadd( 279.023, 595.61, 11.8302, 0.8022 ) }
    dend_9 { pt3dadd( 278.905, 596.684, 11.3501, 0.788 ) }
    dend_9 { pt3dadd( 278.824, 597.812, 10.9183, 0.7372 ) }
    dend_9 { pt3dadd( 278.739, 598.951, 10.5908, 0.5338 ) }
    dend_9 { pt3dadd( 278.738, 600.096, 10.1654, 0.6864 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 94/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 359.617, 553.627, 18.5408, 0.5176 ) }
    dend_8 { pt3dadd( 359.262, 553.738, 17.9747, 0.2288 ) }
    dend_8 { pt3dadd( 358.194, 554.104, 17.3933, 0.3012 ) }
    dend_8 { pt3dadd( 357.184, 554.628, 17.1727, 0.3186 ) }
    dend_8 { pt3dadd( 356.326, 555.373, 16.9316, 0.3816 ) }
    dend_8 { pt3dadd( 355.755, 556.324, 16.5806, 0.3492 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_8 { pt3dadd( 355.394, 557.326, 16.0539, 0.3282 ) }
    dend_8 { pt3dadd( 354.925, 558.331, 15.4561, 0.3288 ) }
    dend_8 { pt3dadd( 354.202, 559.015, 14.7095, 0.3648 ) }
    dend_8 { pt3dadd( 353.52, 559.856, 13.9141, 0.4928 ) }
    dend_8 { pt3dadd( 352.995, 560.812, 13.0946, 0.4322 ) }
    dend_8 { pt3dadd( 352.311, 561.686, 12.3146, 0.3922 ) }
    dend_8 { pt3dadd( 351.489, 562.424, 11.5711, 0.4258 ) }
    dend_8 { pt3dadd( 350.598, 563.04, 10.8448, 0.4208 ) }
    dend_8 { pt3dadd( 350.065, 563.479, 9.9767, 0.5112 ) }
    dend_8 { pt3dadd( 349.113, 564.104, 9.3281, 0.4238 ) }
    dend_8 { pt3dadd( 348.111, 564.654, 8.8763, 0.356 ) }
    dend_8 { pt3dadd( 346.975, 564.793, 8.4, 0.4576 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 12/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 383.211, 552.303, 25.7195, 0.3876 ) }
    dend_2 { pt3dadd( 383.286, 552.371, 25.8259, 0.36 ) }
    dend_2 { pt3dadd( 384.077, 553.195, 25.9813, 0.3492 ) }
    dend_2 { pt3dadd( 384.585, 554.134, 26.1076, 0.3616 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 16/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 383.211, 552.303, 25.7195, 0.3876 ) }
    dend_1 { pt3dadd( 384.382, 551.912, 26.923, 0.4454 ) }
    dend_1 { pt3dadd( 385.359, 551.586, 27.6295, 0.328 ) }
    dend_1 { pt3dadd( 386.337, 551.26, 28.4483, 0.2794 ) }
    dend_1 { pt3dadd( 387.314, 550.934, 29.3213, 0.2834 ) }
    dend_1 { pt3dadd( 388.319, 550.607, 30.1748, 0.2908 ) }
    dend_1 { pt3dadd( 389.391, 550.285, 30.8848, 0.3058 ) }
    dend_1 { pt3dadd( 390.494, 549.986, 31.3821, 0.3268 ) }
    dend_1 { pt3dadd( 391.614, 549.756, 31.7251, 0.3982 ) }
    dend_1 { pt3dadd( 392.744, 549.625, 31.992, 0.3744 ) }
    dend_1 { pt3dadd( 393.877, 549.515, 32.2291, 0.4006 ) }
    dend_1 { pt3dadd( 395.0, 549.383, 32.473, 0.3374 ) }
    dend_1 { pt3dadd( 396.125, 549.246, 32.7365, 0.3064 ) }
    dend_1 { pt3dadd( 397.26, 549.135, 32.9924, 0.2864 ) }
    dend_1 { pt3dadd( 398.4, 549.051, 33.2116, 0.2964 ) }
    dend_1 { pt3dadd( 399.542, 548.986, 33.3998, 0.3158 ) }
    dend_1 { pt3dadd( 400.684, 548.942, 33.5804, 0.3468 ) }
    dend_1 { pt3dadd( 401.821, 548.858, 33.7688, 0.4286 ) }
    dend_1 { pt3dadd( 402.94, 548.664, 33.9833, 0.4628 ) }
    dend_1 { pt3dadd( 404.048, 548.413, 34.2286, 0.4098 ) }
    dend_1 { pt3dadd( 405.153, 548.15, 34.4968, 0.4192 ) }
    dend_1 { pt3dadd( 406.252, 547.855, 34.7726, 0.3716 ) }
    dend_1 { pt3dadd( 407.341, 547.523, 35.0414, 0.3704 ) }
    dend_1 { pt3dadd( 408.427, 547.181, 35.2976, 0.403 ) }
    dend_1 { pt3dadd( 409.507, 546.815, 35.5379, 0.5226 ) }
    dend_1 { pt3dadd( 410.558, 546.373, 35.7591, 0.6866 ) }
    dend_1 { pt3dadd( 411.584, 545.87, 35.9635, 0.585 ) }
    dend_1 { pt3dadd( 412.599, 545.345, 36.155, 0.5356 ) }
    dend_1 { pt3dadd( 413.586, 544.768, 36.3247, 0.6842 ) }
    dend_1 { pt3dadd( 414.547, 544.149, 36.4893, 0.708 ) }
    dend_1 { pt3dadd( 415.497, 543.553, 36.724, 0.6018 ) }
    dend_1 { pt3dadd( 416.426, 542.915, 37.0143, 0.4474 ) }
    dend_1 { pt3dadd( 417.382, 542.293, 37.2974, 0.4128 ) }
    dend_1 { pt3dadd( 418.379, 541.732, 37.5581, 0.5008 ) }
    dend_1 { pt3dadd( 419.4, 541.254, 37.8661, 0.6108 ) }
    dend_1 { pt3dadd( 420.367, 540.761, 38.2696, 0.6164 ) }
    dend_1 { pt3dadd( 421.308, 540.192, 38.7142, 0.444 ) }
    dend_1 { pt3dadd( 422.31, 539.707, 39.1516, 0.3254 ) }
    dend_1 { pt3dadd( 423.396, 539.422, 39.5486, 0.2748 ) }
    dend_1 { pt3dadd( 424.513, 539.204, 39.8535, 0.2748 ) }
    dend_1 { pt3dadd( 425.617, 538.917, 40.0126, 0.2752 ) }
    dend_1 { pt3dadd( 426.711, 538.61, 40.0302, 0.2756 ) }
    dend_1 { pt3dadd( 427.827, 538.44, 39.9538, 0.2766 ) }
    dend_1 { pt3dadd( 428.955, 538.422, 39.8345, 0.2784 ) }
    dend_1 { pt3dadd( 430.09, 538.455, 39.7348, 0.2816 ) }
    dend_1 { pt3dadd( 431.23, 538.539, 39.7256, 0.2874 ) }
    dend_1 { pt3dadd( 432.352, 538.667, 39.872, 0.2994 ) }
    dend_1 { pt3dadd( 433.385, 538.824, 40.2427, 0.3152 ) }
    dend_1 { pt3dadd( 434.398, 538.862, 40.7954, 0.3756 ) }
    dend_1 { pt3dadd( 435.468, 538.584, 41.3535, 0.3378 ) }
    dend_1 { pt3dadd( 436.527, 538.159, 41.8174, 0.3074 ) }
    dend_1 { pt3dadd( 437.599, 537.76, 42.1716, 0.2882 ) }
    dend_1 { pt3dadd( 438.686, 537.404, 42.425, 0.2998 ) }
    dend_1 { pt3dadd( 439.81, 537.226, 42.6266, 0.321 ) }
    dend_1 { pt3dadd( 440.943, 537.227, 42.8165, 0.3626 ) }
    dend_1 { pt3dadd( 442.073, 537.375, 43.0046, 0.4288 ) }
    dend_1 { pt3dadd( 443.211, 537.474, 43.1841, 0.6034 ) }
    dend_1 { pt3dadd( 444.34, 537.316, 43.342, 0.6768 ) }
    dend_1 { pt3dadd( 445.435, 536.989, 43.4843, 0.6542 ) }
    dend_1 { pt3dadd( 446.495, 536.561, 43.631, 0.4682 ) }
    dend_1 { pt3dadd( 447.537, 536.093, 43.7956, 0.365 ) }
    dend_1 { pt3dadd( 448.55, 535.568, 43.9975, 0.3734 ) }
    dend_1 { pt3dadd( 449.509, 534.961, 44.254, 0.3338 ) }
    dend_1 { pt3dadd( 450.444, 534.325, 44.562, 0.3 ) }
    dend_1 { pt3dadd( 451.339, 533.633, 44.9075, 0.2746 ) }
    dend_1 { pt3dadd( 452.181, 532.878, 45.278, 0.2746 ) }
    dend_1 { pt3dadd( 453.076, 532.183, 45.6585, 0.2746 ) }
    dend_1 { pt3dadd( 454.086, 531.666, 46.0312, 0.2746 ) }
    dend_1 { pt3dadd( 455.068, 531.092, 46.3896, 0.2746 ) }
    dend_1 { pt3dadd( 455.932, 530.349, 46.7351, 0.2746 ) }
    dend_1 { pt3dadd( 456.843, 529.671, 47.098, 0.2746 ) }
    dend_1 { pt3dadd( 457.846, 529.161, 47.5048, 0.2746 ) }
    dend_1 { pt3dadd( 458.96, 528.971, 47.927, 0.2746 ) }
    dend_1 { pt3dadd( 459.969, 528.51, 48.4086, 0.2746 ) }
    dend_1 { pt3dadd( 460.73, 527.749, 48.9726, 0.2746 ) }
    dend_1 { pt3dadd( 461.496, 526.954, 49.5608, 0.2746 ) }
    dend_1 { pt3dadd( 462.338, 526.19, 50.0906, 0.2746 ) }
    dend_1 { pt3dadd( 463.194, 525.435, 50.5529, 0.2746 ) }
    dend_1 { pt3dadd( 463.996, 524.643, 50.9989, 0.2746 ) }
    dend_1 { pt3dadd( 464.732, 523.824, 51.4615, 0.2748 ) }
    dend_1 { pt3dadd( 465.061, 522.765, 51.9154, 0.2748 ) }
    dend_1 { pt3dadd( 464.931, 521.641, 52.3267, 0.275 ) }
    dend_1 { pt3dadd( 464.606, 520.545, 52.6546, 0.2754 ) }
    dend_1 { pt3dadd( 464.271, 519.45, 52.9082, 0.2762 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_1 { pt3dadd( 464.02, 518.335, 53.1135, 0.2778 ) }
    dend_1 { pt3dadd( 463.902, 517.205, 53.3316, 0.2804 ) }
    dend_1 { pt3dadd( 463.852, 516.078, 53.5917, 0.2854 ) }
    dend_1 { pt3dadd( 463.752, 514.953, 53.8874, 0.2944 ) }
    dend_1 { pt3dadd( 463.744, 513.828, 54.2094, 0.3126 ) }
    dend_1 { pt3dadd( 463.929, 512.721, 54.5412, 0.3396 ) }
    dend_1 { pt3dadd( 464.241, 511.628, 54.8204, 0.4228 ) }
    dend_1 { pt3dadd( 464.677, 510.569, 54.9976, 0.4148 ) }
    dend_1 { pt3dadd( 465.12, 509.515, 55.0903, 0.501 ) }
    dend_1 { pt3dadd( 465.706, 508.545, 55.0715, 0.3996 ) }
    dend_1 { pt3dadd( 466.336, 507.61, 54.9693, 0.3368 ) }
    dend_1 { pt3dadd( 467.213, 506.888, 54.8514, 0.297 ) }
    dend_1 { pt3dadd( 468.191, 506.303, 54.7851, 0.3108 ) }
    dend_1 { pt3dadd( 469.158, 505.695, 54.8341, 0.3672 ) }
    dend_1 { pt3dadd( 470.115, 505.081, 54.997, 0.322 ) }
    dend_1 { pt3dadd( 470.979, 504.377, 55.2972, 0.2796 ) }
    dend_1 { pt3dadd( 471.735, 503.611, 55.7278, 0.2288 ) }
    dend_1 { pt3dadd( 472.49, 502.843, 56.9033, 0.2288 ) }
    // Section: apic_18, id: apic_18, parent: apic_16 (entry count 18/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 379.666, 527.745, 16.8944, 0.3392 ) }
    apic_18 { pt3dadd( 380.148, 528.745, 16.8169, 0.2932 ) }
    apic_18 { pt3dadd( 381.032, 529.348, 16.8981, 0.3086 ) }
    apic_18 { pt3dadd( 382.126, 529.334, 16.9004, 0.3398 ) }
    apic_18 { pt3dadd( 383.088, 528.779, 16.8309, 0.3858 ) }
    apic_18 { pt3dadd( 383.884, 527.967, 16.7044, 0.5268 ) }
    apic_18 { pt3dadd( 384.63, 527.103, 16.5227, 0.5198 ) }
    apic_18 { pt3dadd( 385.311, 526.186, 16.3014, 0.4368 ) }
    apic_18 { pt3dadd( 385.696, 525.128, 16.0923, 0.3932 ) }
    apic_18 { pt3dadd( 385.839, 523.997, 15.8826, 0.4626 ) }
    apic_18 { pt3dadd( 386.102, 522.92, 15.573, 0.5502 ) }
    apic_18 { pt3dadd( 386.865, 522.306, 15.0876, 0.453 ) }
    apic_18 { pt3dadd( 387.819, 521.763, 14.5296, 0.3902 ) }
    apic_18 { pt3dadd( 388.724, 521.082, 13.9796, 0.3894 ) }
    apic_18 { pt3dadd( 389.697, 520.489, 13.4497, 0.514 ) }
    apic_18 { pt3dadd( 390.757, 520.077, 12.9447, 0.589 ) }
    apic_18 { pt3dadd( 391.851, 519.759, 12.4634, 0.7994 ) }
    apic_18 { pt3dadd( 392.657, 519.504, 11.7889, 1.0728 ) }
    apic_18 { pt3dadd( 393.287, 518.866, 10.9737, 1.0028 ) }
    apic_18 { pt3dadd( 393.998, 517.975, 10.3071, 0.9268 ) }
    apic_18 { pt3dadd( 394.963, 517.368, 9.7494, 0.753 ) }
    apic_18 { pt3dadd( 396.07, 517.095, 9.2936, 0.591 ) }
    apic_18 { pt3dadd( 397.126, 516.657, 8.9568, 0.4276 ) }
    apic_18 { pt3dadd( 397.909, 515.851, 8.6567, 0.3752 ) }
    apic_18 { pt3dadd( 398.486, 514.911, 8.3293, 0.4354 ) }
    apic_18 { pt3dadd( 399.092, 513.947, 8.0238, 0.4688 ) }
    apic_18 { pt3dadd( 399.867, 513.105, 7.771, 0.452 ) }
    apic_18 { pt3dadd( 400.814, 512.469, 7.6064, 0.3474 ) }
    apic_18 { pt3dadd( 401.807, 511.907, 7.5124, 0.2796 ) }
    apic_18 { pt3dadd( 402.747, 511.28, 7.3834, 0.2288 ) }
    apic_18 { pt3dadd( 403.67, 510.652, 6.9171, 0.2288 ) }
    // Section: apic_17, id: apic_17, parent: apic_16 (entry count 49/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 379.666, 527.745, 16.8944, 0.3392 ) }
    apic_17 { pt3dadd( 380.317, 528.21, 15.2335, 0.2288 ) }
    apic_17 { pt3dadd( 381.116, 528.836, 13.7988, 0.3124 ) }
    apic_17 { pt3dadd( 381.994, 529.44, 13.1903, 0.3438 ) }
    apic_17 { pt3dadd( 382.904, 529.987, 12.4963, 0.4068 ) }
    apic_17 { pt3dadd( 384.003, 530.175, 11.8152, 0.5018 ) }
    apic_17 { pt3dadd( 385.037, 529.691, 11.2393, 0.7824 ) }
    apic_17 { pt3dadd( 386.133, 529.394, 10.7485, 0.7966 ) }
    apic_17 { pt3dadd( 387.245, 529.316, 10.3068, 0.5338 ) }
    apic_17 { pt3dadd( 388.361, 529.268, 9.9059, 0.305 ) }
    apic_17 { pt3dadd( 389.496, 529.218, 9.2112, 0.2288 ) }
    // Section: apic_15, id: apic_15, parent: apic_1 (entry count 60/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 373.785, 524.423, 21.5758, 0.8314 ) }
    apic_15 { pt3dadd( 373.227, 524.047, 23.0371, 0.4576 ) }
    apic_15 { pt3dadd( 372.38, 523.62, 24.991, 0.5574 ) }
    apic_15 { pt3dadd( 371.443, 523.432, 25.8406, 0.4192 ) }
    apic_15 { pt3dadd( 370.535, 523.806, 26.8119, 0.3264 ) }
    apic_15 { pt3dadd( 369.851, 524.64, 27.7777, 0.2766 ) }
    apic_15 { pt3dadd( 369.266, 525.603, 28.6504, 0.2782 ) }
    apic_15 { pt3dadd( 368.741, 526.606, 29.4224, 0.2814 ) }
    apic_15 { pt3dadd( 368.407, 527.696, 30.0966, 0.287 ) }
    apic_15 { pt3dadd( 368.114, 528.798, 30.742, 0.2988 ) }
    apic_15 { pt3dadd( 367.876, 529.917, 31.3984, 0.3144 ) }
    apic_15 { pt3dadd( 367.678, 531.041, 32.1616, 0.374 ) }
    apic_15 { pt3dadd( 368.037, 531.144, 33.2262, 0.3348 ) }
    apic_15 { pt3dadd( 368.164, 531.359, 34.7648, 0.3018 ) }
    apic_15 { pt3dadd( 368.466, 531.226, 36.6394, 0.278 ) }
    apic_15 { pt3dadd( 368.898, 530.839, 38.7276, 0.281 ) }
    apic_15 { pt3dadd( 369.328, 530.452, 40.9828, 0.2862 ) }
    apic_15 { pt3dadd( 369.957, 530.432, 43.2558, 0.2966 ) }
    apic_15 { pt3dadd( 370.603, 530.443, 45.4378, 0.3136 ) }
    apic_15 { pt3dadd( 371.249, 530.456, 47.4653, 0.356 ) }
    apic_15 { pt3dadd( 371.895, 530.467, 49.3223, 0.3814 ) }
    apic_15 { pt3dadd( 372.541, 530.479, 52.92, 0.6864 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 82/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 373.785, 524.423, 21.5758, 0.8314 ) }
    apic_2 { pt3dadd( 373.538, 523.534, 21.699, 0.745 ) }
    apic_2 { pt3dadd( 373.23, 522.434, 21.794, 0.6718 ) }
    apic_2 { pt3dadd( 372.923, 521.331, 21.8681, 0.8006 ) }
    apic_2 { pt3dadd( 372.78, 520.203, 21.9732, 0.899 ) }
    apic_2 { pt3dadd( 372.656, 519.074, 22.1054, 0.8468 ) }
    apic_2 { pt3dadd( 372.556, 517.936, 22.2326, 0.746 ) }
    apic_2 { pt3dadd( 372.471, 516.795, 22.3428, 0.5786 ) }
    apic_2 { pt3dadd( 372.355, 515.657, 22.4123, 0.6304 ) }
    apic_2 { pt3dadd( 372.23, 514.522, 22.4397, 0.5708 ) }
    apic_2 { pt3dadd( 372.165, 513.393, 22.5105, 0.757 ) }
    apic_2 { pt3dadd( 372.107, 512.269, 22.6197, 0.5784 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 94/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 415.135, 533.86, 24.7835, 0.7044 ) }
    dend_13 { pt3dadd( 414.239, 534.0, 25.8051, 0.6864 ) }
    dend_13 { pt3dadd( 413.38, 533.722, 28.4402, 0.7208 ) }
    dend_13 { pt3dadd( 413.06, 533.882, 29.6416, 0.6418 ) }
    dend_13 { pt3dadd( 413.022, 534.617, 31.0467, 0.444 ) }
    dend_13 { pt3dadd( 413.161, 535.623, 32.4411, 0.3254 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_13 { pt3dadd( 413.411, 536.654, 33.7484, 0.2746 ) }
    dend_13 { pt3dadd( 413.778, 537.682, 34.9121, 0.2746 ) }
    dend_13 { pt3dadd( 414.153, 538.711, 35.922, 0.2746 ) }
    dend_13 { pt3dadd( 414.295, 539.797, 36.8119, 0.2748 ) }
    dend_13 { pt3dadd( 414.42, 540.887, 37.6365, 0.275 ) }
    dend_13 { pt3dadd( 414.542, 541.976, 38.4353, 0.2752 ) }
    dend_13 { pt3dadd( 414.414, 543.058, 39.2241, 0.2758 ) }
    dend_13 { pt3dadd( 414.269, 544.137, 40.0042, 0.277 ) }
    dend_13 { pt3dadd( 414.122, 545.217, 40.7725, 0.279 ) }
    dend_13 { pt3dadd( 413.977, 546.297, 41.5288, 0.2826 ) }
    dend_13 { pt3dadd( 413.812, 547.377, 42.2685, 0.2896 ) }
    dend_13 { pt3dadd( 412.911, 548.007, 42.7784, 0.3024 ) }
    dend_13 { pt3dadd( 411.959, 548.539, 43.3471, 0.3268 ) }
    dend_13 { pt3dadd( 411.038, 549.098, 43.9897, 0.3684 ) }
    dend_13 { pt3dadd( 410.19, 549.724, 44.7006, 0.4632 ) }
    dend_13 { pt3dadd( 409.345, 550.35, 45.4482, 0.5536 ) }
    dend_13 { pt3dadd( 408.543, 551.106, 46.1535, 0.4492 ) }
    dend_13 { pt3dadd( 407.781, 551.933, 46.7746, 0.4322 ) }
    dend_13 { pt3dadd( 407.019, 552.76, 47.7988, 0.2288 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 19/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 415.135, 533.86, 24.7835, 0.7044 ) }
    dend_12 { pt3dadd( 415.611, 532.316, 25.276, 0.4396 ) }
    dend_12 { pt3dadd( 416.068, 531.282, 25.5284, 0.3624 ) }
    dend_12 { pt3dadd( 416.716, 530.354, 25.7989, 0.3524 ) }
    dend_12 { pt3dadd( 417.536, 529.568, 26.0756, 0.3746 ) }
    dend_12 { pt3dadd( 418.46, 528.906, 26.3594, 0.4456 ) }
    dend_12 { pt3dadd( 419.444, 528.339, 26.6499, 0.6626 ) }
    dend_12 { pt3dadd( 420.443, 527.797, 26.9417, 0.6496 ) }
    dend_12 { pt3dadd( 421.421, 527.215, 27.2266, 0.5834 ) }
    dend_12 { pt3dadd( 422.383, 526.603, 27.5013, 0.6638 ) }
    dend_12 { pt3dadd( 423.306, 525.939, 27.7721, 0.742 ) }
    dend_12 { pt3dadd( 424.068, 525.109, 28.0473, 0.7732 ) }
    dend_12 { pt3dadd( 424.676, 524.148, 28.331, 0.697 ) }
    dend_12 { pt3dadd( 425.248, 523.166, 28.6238, 0.7492 ) }
    dend_12 { pt3dadd( 425.711, 522.135, 28.9293, 0.593 ) }
    dend_12 { pt3dadd( 426.054, 521.059, 29.2452, 0.6174 ) }
    dend_12 { pt3dadd( 426.388, 519.978, 29.5568, 0.5098 ) }
    dend_12 { pt3dadd( 426.807, 518.926, 29.8438, 0.5952 ) }
    dend_12 { pt3dadd( 427.323, 517.911, 30.0894, 0.5156 ) }
    dend_12 { pt3dadd( 427.846, 516.896, 30.2803, 0.6066 ) }
    dend_12 { pt3dadd( 428.336, 515.867, 30.3862, 0.532 ) }
    dend_12 { pt3dadd( 428.828, 514.847, 30.3836, 0.6596 ) }
    dend_12 { pt3dadd( 429.263, 513.822, 30.375, 0.5218 ) }
    dend_12 { pt3dadd( 429.577, 512.783, 30.4721, 0.4818 ) }
    dend_12 { pt3dadd( 429.969, 511.763, 30.5631, 0.5046 ) }
    dend_12 { pt3dadd( 430.493, 510.794, 30.494, 0.7636 ) }
    dend_12 { pt3dadd( 430.947, 509.793, 30.3078, 0.8776 ) }
    dend_12 { pt3dadd( 431.373, 508.741, 30.1017, 0.8076 ) }
    dend_12 { pt3dadd( 431.751, 507.671, 29.8861, 0.6708 ) }
    dend_12 { pt3dadd( 431.759, 506.6, 29.6218, 0.4506 ) }
    dend_12 { pt3dadd( 431.566, 505.55, 29.5, 0.3376 ) }
    dend_12 { pt3dadd( 431.516, 504.511, 29.6111, 0.2972 ) }
    dend_12 { pt3dadd( 431.453, 503.394, 29.7651, 0.316 ) }
    dend_12 { pt3dadd( 431.304, 502.264, 29.8424, 0.3546 ) }
    dend_12 { pt3dadd( 431.064, 501.15, 29.8189, 0.4072 ) }
    dend_12 { pt3dadd( 430.742, 500.105, 29.6237, 0.5966 ) }
    dend_12 { pt3dadd( 430.448, 499.055, 29.2771, 0.502 ) }
    dend_12 { pt3dadd( 430.247, 497.951, 28.8775, 0.432 ) }
    dend_12 { pt3dadd( 430.294, 496.818, 28.5547, 0.4762 ) }
    dend_12 { pt3dadd( 430.543, 495.704, 28.3301, 0.4002 ) }
    dend_12 { pt3dadd( 430.924, 494.628, 28.1613, 0.3386 ) }
    dend_12 { pt3dadd( 431.567, 493.692, 27.9885, 0.299 ) }
    dend_12 { pt3dadd( 432.397, 492.912, 27.7861, 0.3194 ) }
    dend_12 { pt3dadd( 433.352, 492.291, 27.573, 0.3592 ) }
    dend_12 { pt3dadd( 434.212, 491.545, 27.2725, 0.4244 ) }
    dend_12 { pt3dadd( 434.848, 490.636, 26.795, 0.5876 ) }
    dend_12 { pt3dadd( 435.254, 489.632, 26.1615, 0.6836 ) }
    dend_12 { pt3dadd( 435.382, 488.519, 25.485, 0.4914 ) }
    dend_12 { pt3dadd( 435.427, 487.44, 24.7359, 0.3304 ) }
    dend_12 { pt3dadd( 435.472, 486.854, 23.7575, 0.2288 ) }
    dend_12 { pt3dadd( 435.863, 487.729, 21.6233, 0.2288 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 70/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 384.585, 554.134, 26.1076, 0.3616 ) }
    dend_6 { pt3dadd( 385.293, 554.35, 24.3308, 0.2288 ) }
    dend_6 { pt3dadd( 386.357, 554.678, 25.4713, 0.3932 ) }
    dend_6 { pt3dadd( 387.418, 555.012, 25.9545, 0.5712 ) }
    dend_6 { pt3dadd( 388.476, 555.354, 26.5346, 0.4526 ) }
    dend_6 { pt3dadd( 389.523, 555.708, 27.1914, 0.3508 ) }
    dend_6 { pt3dadd( 390.503, 556.119, 27.9379, 0.2746 ) }
    dend_6 { pt3dadd( 391.407, 556.605, 28.7672, 0.2746 ) }
    dend_6 { pt3dadd( 392.334, 557.175, 29.5624, 0.2746 ) }
    dend_6 { pt3dadd( 393.295, 557.784, 30.2579, 0.2746 ) }
    dend_6 { pt3dadd( 394.252, 558.341, 30.9252, 0.2746 ) }
    dend_6 { pt3dadd( 395.241, 558.859, 31.5627, 0.2746 ) }
    dend_6 { pt3dadd( 396.197, 559.439, 32.177, 0.2746 ) }
    dend_6 { pt3dadd( 397.163, 559.88, 32.8423, 0.2746 ) }
    dend_6 { pt3dadd( 398.232, 559.759, 33.5152, 0.2746 ) }
    dend_6 { pt3dadd( 399.338, 559.601, 34.1832, 0.2748 ) }
    dend_6 { pt3dadd( 400.445, 559.628, 34.8541, 0.275 ) }
    dend_6 { pt3dadd( 401.526, 559.811, 35.5387, 0.2752 ) }
    dend_6 { pt3dadd( 402.583, 560.107, 36.2306, 0.2758 ) }
    dend_6 { pt3dadd( 403.644, 560.457, 36.8976, 0.277 ) }
    dend_6 { pt3dadd( 404.711, 560.837, 37.5256, 0.279 ) }
    dend_6 { pt3dadd( 405.779, 561.211, 38.1287, 0.2826 ) }
    dend_6 { pt3dadd( 406.843, 561.511, 38.7579, 0.2896 ) }
    dend_6 { pt3dadd( 407.879, 561.713, 39.4562, 0.3026 ) }
    dend_6 { pt3dadd( 408.909, 561.904, 40.2091, 0.326 ) }
    dend_6 { pt3dadd( 409.931, 562.24, 40.9634, 0.3726 ) }
    dend_6 { pt3dadd( 410.905, 562.776, 41.6545, 0.4428 ) }
    dend_6 { pt3dadd( 411.854, 563.395, 42.2453, 0.6526 ) }
    dend_6 { pt3dadd( 412.815, 564.011, 42.7168, 0.6546 ) }
    dend_6 { pt3dadd( 413.825, 564.536, 43.1077, 0.4774 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_6 { pt3dadd( 414.852, 565.01, 43.47, 0.3404 ) }
    dend_6 { pt3dadd( 415.862, 565.515, 43.8262, 0.3018 ) }
    dend_6 { pt3dadd( 416.835, 566.092, 44.1851, 0.3272 ) }
    dend_6 { pt3dadd( 417.785, 566.706, 44.5463, 0.3616 ) }
    dend_6 { pt3dadd( 418.744, 567.307, 44.9028, 0.487 ) }
    dend_6 { pt3dadd( 419.75, 567.834, 45.236, 0.42 ) }
    dend_6 { pt3dadd( 420.796, 568.279, 45.5333, 0.3774 ) }
    dend_6 { pt3dadd( 421.85, 568.709, 45.7934, 0.3606 ) }
    dend_6 { pt3dadd( 422.922, 569.092, 46.0177, 0.4848 ) }
    dend_6 { pt3dadd( 424.018, 569.397, 46.205, 0.4174 ) }
    dend_6 { pt3dadd( 425.114, 569.712, 46.3473, 0.3652 ) }
    dend_6 { pt3dadd( 426.178, 570.127, 46.4274, 0.3738 ) }
    dend_6 { pt3dadd( 427.216, 570.6, 46.424, 0.3346 ) }
    dend_6 { pt3dadd( 428.259, 571.037, 46.3232, 0.3014 ) }
    dend_6 { pt3dadd( 429.27, 571.509, 46.1376, 0.2772 ) }
    dend_6 { pt3dadd( 430.22, 572.087, 45.9094, 0.2794 ) }
    dend_6 { pt3dadd( 431.178, 572.693, 45.7304, 0.2834 ) }
    dend_6 { pt3dadd( 432.149, 573.29, 45.6907, 0.2908 ) }
    dend_6 { pt3dadd( 433.069, 573.938, 45.8282, 0.3058 ) }
    dend_6 { pt3dadd( 433.914, 574.653, 46.1404, 0.3272 ) }
    dend_6 { pt3dadd( 434.682, 575.456, 46.566, 0.3988 ) }
    dend_6 { pt3dadd( 435.389, 576.324, 47.0478, 0.3756 ) }
    dend_6 { pt3dadd( 436.093, 577.213, 47.5294, 0.4028 ) }
    dend_6 { pt3dadd( 436.854, 578.063, 47.9758, 0.341 ) }
    dend_6 { pt3dadd( 437.673, 578.861, 48.3725, 0.3132 ) }
    dend_6 { pt3dadd( 438.368, 579.712, 48.6648, 0.3 ) }
    dend_6 { pt3dadd( 438.655, 580.694, 49.1484, 0.3164 ) }
    dend_6 { pt3dadd( 438.168, 581.447, 49.8674, 0.3786 ) }
    dend_6 { pt3dadd( 437.367, 582.055, 50.6873, 0.339 ) }
    dend_6 { pt3dadd( 436.41, 582.573, 51.4839, 0.3304 ) }
    dend_6 { pt3dadd( 435.508, 583.168, 53.1096, 0.2288 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 384.585, 554.134, 26.1076, 0.3616 ) }
    dend_3 { pt3dadd( 384.013, 554.339, 26.647, 0.4558 ) }
    dend_3 { pt3dadd( 383.317, 554.39, 27.5812, 0.514 ) }
    dend_3 { pt3dadd( 382.676, 554.989, 28.7193, 0.5014 ) }
    dend_3 { pt3dadd( 382.457, 556.01, 29.883, 0.605 ) }
    dend_3 { pt3dadd( 382.059, 557.05, 30.9652, 0.6378 ) }
    dend_3 { pt3dadd( 381.636, 558.009, 32.0197, 0.5566 ) }
    dend_3 { pt3dadd( 381.342, 558.997, 33.0, 0.4096 ) }
    dend_3 { pt3dadd( 381.392, 560.118, 33.6694, 0.3484 ) }
    dend_3 { pt3dadd( 381.645, 560.7, 34.5285, 0.3536 ) }
    // Section: apic_14, id: apic_14, parent: apic_2 (entry count 41/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 372.107, 512.269, 22.6197, 0.5784 ) }
    apic_14 { pt3dadd( 372.862, 511.707, 24.079, 0.6864 ) }
    apic_14 { pt3dadd( 373.746, 511.06, 24.9447, 0.4856 ) }
    apic_14 { pt3dadd( 374.702, 510.516, 25.3264, 0.428 ) }
    apic_14 { pt3dadd( 375.763, 510.19, 25.7422, 0.3406 ) }
    apic_14 { pt3dadd( 376.89, 510.111, 26.1265, 0.3124 ) }
    apic_14 { pt3dadd( 378.023, 510.221, 26.4527, 0.2978 ) }
    apic_14 { pt3dadd( 379.134, 510.479, 26.7144, 0.3174 ) }
    apic_14 { pt3dadd( 380.215, 510.848, 26.905, 0.3546 ) }
    apic_14 { pt3dadd( 381.267, 511.297, 27.0377, 0.4206 ) }
    apic_14 { pt3dadd( 382.275, 511.835, 27.1551, 0.5562 ) }
    apic_14 { pt3dadd( 383.171, 512.535, 27.2801, 0.7438 ) }
    apic_14 { pt3dadd( 384.005, 513.312, 27.4654, 0.7158 ) }
    apic_14 { pt3dadd( 384.669, 514.206, 27.7641, 0.6566 ) }
    apic_14 { pt3dadd( 385.25, 515.16, 28.1683, 0.8114 ) }
    apic_14 { pt3dadd( 385.882, 516.094, 28.6367, 0.9574 ) }
    apic_14 { pt3dadd( 386.556, 517.002, 29.1441, 0.7702 ) }
    apic_14 { pt3dadd( 387.31, 517.828, 29.6996, 0.8156 ) }
    apic_14 { pt3dadd( 388.039, 518.66, 30.3061, 0.595 ) }
    apic_14 { pt3dadd( 388.637, 519.57, 30.9613, 0.522 ) }
    apic_14 { pt3dadd( 389.249, 520.49, 31.635, 0.585 ) }
    apic_14 { pt3dadd( 389.936, 521.377, 32.293, 0.6552 ) }
    apic_14 { pt3dadd( 390.738, 522.127, 32.9566, 0.553 ) }
    apic_14 { pt3dadd( 391.597, 522.785, 33.633, 0.5778 ) }
    apic_14 { pt3dadd( 392.374, 523.508, 34.3207, 0.4974 ) }
    apic_14 { pt3dadd( 393.164, 524.27, 34.9647, 0.5048 ) }
    apic_14 { pt3dadd( 394.056, 524.968, 35.4628, 0.6744 ) }
    apic_14 { pt3dadd( 395.004, 525.606, 35.8336, 0.6898 ) }
    apic_14 { pt3dadd( 395.972, 526.215, 36.1385, 0.5686 ) }
    apic_14 { pt3dadd( 397.006, 526.686, 36.4367, 0.385 ) }
    apic_14 { pt3dadd( 398.086, 527.031, 36.773, 0.3006 ) }
    apic_14 { pt3dadd( 399.116, 527.504, 37.1613, 0.2756 ) }
    apic_14 { pt3dadd( 399.966, 528.239, 37.6384, 0.2766 ) }
    apic_14 { pt3dadd( 400.462, 529.216, 38.2304, 0.2784 ) }
    apic_14 { pt3dadd( 400.888, 530.208, 38.9533, 0.2818 ) }
    apic_14 { pt3dadd( 401.351, 531.154, 39.8014, 0.2876 ) }
    apic_14 { pt3dadd( 401.861, 532.057, 40.752, 0.2998 ) }
    apic_14 { pt3dadd( 402.527, 532.874, 41.7547, 0.3162 ) }
    apic_14 { pt3dadd( 403.331, 533.587, 42.7689, 0.3772 ) }
    apic_14 { pt3dadd( 404.259, 534.146, 43.7671, 0.3408 ) }
    apic_14 { pt3dadd( 405.135, 534.762, 44.7605, 0.3126 ) }
    apic_14 { pt3dadd( 405.857, 535.51, 45.7668, 0.299 ) }
    apic_14 { pt3dadd( 406.54, 536.287, 46.7807, 0.3144 ) }
    apic_14 { pt3dadd( 407.225, 537.035, 47.8016, 0.374 ) }
    apic_14 { pt3dadd( 408.022, 537.633, 48.8144, 0.335 ) }
    apic_14 { pt3dadd( 408.951, 538.048, 49.779, 0.3022 ) }
    apic_14 { pt3dadd( 409.988, 538.468, 50.5366, 0.2786 ) }
    apic_14 { pt3dadd( 411.06, 538.837, 51.123, 0.2822 ) }
    apic_14 { pt3dadd( 412.135, 539.185, 51.5819, 0.2886 ) }
    apic_14 { pt3dadd( 413.221, 539.517, 51.9198, 0.3006 ) }
    apic_14 { pt3dadd( 414.325, 539.82, 52.1394, 0.3234 ) }
    apic_14 { pt3dadd( 415.428, 540.122, 52.2852, 0.362 ) }
    apic_14 { pt3dadd( 416.535, 540.406, 52.3902, 0.4516 ) }
    apic_14 { pt3dadd( 417.628, 540.744, 52.4742, 0.5298 ) }
    apic_14 { pt3dadd( 418.705, 541.121, 52.5479, 0.4152 ) }
    apic_14 { pt3dadd( 419.761, 541.559, 52.6224, 0.3192 ) }
    apic_14 { pt3dadd( 420.816, 541.999, 52.6991, 0.2626 ) }
    apic_14 { pt3dadd( 421.847, 542.492, 52.7618, 0.2542 ) }
    apic_14 { pt3dadd( 422.866, 543.012, 52.8058, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    apic_14 { pt3dadd( 423.885, 543.532, 52.8492, 0.2288 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 1/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 372.107, 512.269, 22.6197, 0.5784 ) }
    apic_3 { pt3dadd( 371.872, 511.287, 22.6599, 0.502 ) }
    apic_3 { pt3dadd( 371.612, 510.175, 22.6362, 0.4964 ) }
    apic_3 { pt3dadd( 371.361, 509.063, 22.5517, 0.7414 ) }
    apic_3 { pt3dadd( 371.112, 507.95, 22.4104, 0.8704 ) }
    apic_3 { pt3dadd( 370.864, 506.84, 22.2202, 0.6294 ) }
    apic_3 { pt3dadd( 370.497, 505.777, 22.0049, 0.4544 ) }
    apic_3 { pt3dadd( 369.82, 504.876, 21.7933, 0.4112 ) }
    apic_3 { pt3dadd( 368.94, 504.155, 21.6068, 0.5686 ) }
    apic_3 { pt3dadd( 367.999, 503.506, 21.468, 0.6222 ) }
    apic_3 { pt3dadd( 367.215, 502.708, 21.3832, 0.5044 ) }
    apic_3 { pt3dadd( 366.779, 501.662, 21.3391, 0.4268 ) }
    apic_3 { pt3dadd( 366.51, 500.55, 21.3112, 0.513 ) }
    apic_3 { pt3dadd( 366.215, 499.448, 21.2754, 0.4708 ) }
    apic_3 { pt3dadd( 365.783, 498.398, 21.2377, 0.4598 ) }
    apic_3 { pt3dadd( 365.161, 497.44, 21.2154, 0.5702 ) }
    apic_3 { pt3dadd( 364.49, 496.514, 21.1981, 0.5968 ) }
    apic_3 { pt3dadd( 363.816, 495.59, 21.1711, 0.595 ) }
    apic_3 { pt3dadd( 363.137, 494.67, 21.1336, 0.6118 ) }
    apic_3 { pt3dadd( 362.423, 493.779, 21.081, 0.5452 ) }
    apic_3 { pt3dadd( 361.66, 492.931, 21.0061, 0.4382 ) }
    apic_3 { pt3dadd( 360.883, 492.099, 20.9182, 0.3886 ) }
    apic_3 { pt3dadd( 360.103, 491.264, 20.8473, 0.4902 ) }
    apic_3 { pt3dadd( 359.319, 490.432, 20.8296, 0.4262 ) }
    apic_3 { pt3dadd( 358.533, 489.602, 20.8759, 0.3872 ) }
    apic_3 { pt3dadd( 357.733, 488.79, 20.988, 0.386 ) }
    apic_3 { pt3dadd( 356.905, 488.014, 21.1691, 0.4958 ) }
    apic_3 { pt3dadd( 356.14, 487.188, 21.403, 0.6136 ) }
    apic_3 { pt3dadd( 355.549, 486.229, 21.6609, 0.5622 ) }
    apic_3 { pt3dadd( 355.206, 485.161, 21.9008, 0.6322 ) }
    apic_3 { pt3dadd( 355.114, 484.024, 22.085, 0.6462 ) }
    apic_3 { pt3dadd( 355.007, 482.888, 22.2027, 0.548 ) }
    apic_3 { pt3dadd( 354.754, 481.774, 22.2551, 0.5108 ) }
    apic_3 { pt3dadd( 354.472, 480.667, 22.2517, 0.6544 ) }
    apic_3 { pt3dadd( 354.25, 479.547, 22.2061, 0.8042 ) }
    apic_3 { pt3dadd( 354.067, 478.418, 22.1383, 0.7312 ) }
    apic_3 { pt3dadd( 353.902, 477.288, 22.0705, 0.6974 ) }
    apic_3 { pt3dadd( 353.745, 476.156, 22.0187, 0.5998 ) }
    apic_3 { pt3dadd( 353.591, 475.022, 21.9903, 0.5884 ) }
    apic_3 { pt3dadd( 353.334, 473.915, 22.0034, 0.4294 ) }
    apic_3 { pt3dadd( 352.907, 472.858, 22.0779, 0.3456 ) }
    apic_3 { pt3dadd( 352.424, 471.824, 22.2087, 0.312 ) }
    apic_3 { pt3dadd( 351.936, 470.795, 22.3801, 0.3432 ) }
    apic_3 { pt3dadd( 351.447, 469.765, 22.5772, 0.405 ) }
    apic_3 { pt3dadd( 350.959, 468.736, 22.7867, 0.502 ) }
    apic_3 { pt3dadd( 350.5, 467.694, 22.9945, 0.7654 ) }
    apic_3 { pt3dadd( 350.111, 466.62, 23.1871, 0.8496 ) }
    apic_3 { pt3dadd( 349.778, 465.528, 23.3597, 0.9072 ) }
    apic_3 { pt3dadd( 349.454, 464.432, 23.5138, 0.8068 ) }
    apic_3 { pt3dadd( 349.13, 463.337, 23.6513, 0.7114 ) }
    apic_3 { pt3dadd( 348.808, 462.241, 23.7733, 0.5514 ) }
    apic_3 { pt3dadd( 348.484, 461.145, 23.8806, 0.4004 ) }
    apic_3 { pt3dadd( 348.16, 460.049, 23.9733, 0.3302 ) }
    apic_3 { pt3dadd( 347.806, 458.964, 24.04, 0.3252 ) }
    apic_3 { pt3dadd( 347.398, 457.895, 24.0655, 0.394 ) }
    apic_3 { pt3dadd( 346.97, 456.836, 24.0519, 0.3714 ) }
    apic_3 { pt3dadd( 346.538, 455.776, 24.0111, 0.3726 ) }
    apic_3 { pt3dadd( 346.107, 454.718, 23.9566, 0.3936 ) }
    apic_3 { pt3dadd( 345.676, 453.66, 23.9013, 0.5718 ) }
    apic_3 { pt3dadd( 345.243, 452.602, 23.8573, 0.4536 ) }
    apic_3 { pt3dadd( 344.824, 451.538, 23.8407, 0.3528 ) }
    apic_3 { pt3dadd( 344.44, 450.461, 23.8748, 0.2782 ) }
    apic_3 { pt3dadd( 344.086, 449.378, 23.9698, 0.2812 ) }
    apic_3 { pt3dadd( 343.737, 448.292, 24.1148, 0.287 ) }
    apic_3 { pt3dadd( 343.389, 447.207, 24.2953, 0.2978 ) }
    apic_3 { pt3dadd( 343.04, 446.122, 24.4977, 0.317 ) }
    apic_3 { pt3dadd( 342.682, 445.039, 24.7073, 0.3564 ) }
    apic_3 { pt3dadd( 342.304, 443.961, 24.9099, 0.4104 ) }
    apic_3 { pt3dadd( 341.915, 442.887, 25.1014, 0.604 ) }
    apic_3 { pt3dadd( 341.524, 441.814, 25.2854, 0.5082 ) }
    apic_3 { pt3dadd( 341.163, 440.731, 25.469, 0.4796 ) }
    apic_3 { pt3dadd( 340.934, 439.62, 25.6668, 0.39 ) }
    apic_3 { pt3dadd( 340.842, 438.488, 25.8874, 0.4006 ) }
    apic_3 { pt3dadd( 340.778, 437.356, 26.1235, 0.4774 ) }
    apic_3 { pt3dadd( 340.716, 436.222, 26.3596, 0.5724 ) }
    apic_3 { pt3dadd( 340.658, 435.083, 26.5663, 0.5196 ) }
    apic_3 { pt3dadd( 340.604, 433.94, 26.721, 0.3888 ) }
    apic_3 { pt3dadd( 340.552, 432.797, 26.8266, 0.3076 ) }
    apic_3 { pt3dadd( 340.499, 431.654, 26.8962, 0.2884 ) }
    apic_3 { pt3dadd( 340.373, 430.52, 26.9385, 0.3012 ) }
    apic_3 { pt3dadd( 340.121, 429.406, 26.9572, 0.3188 ) }
    apic_3 { pt3dadd( 339.81, 428.308, 26.9636, 0.3822 ) }
    apic_3 { pt3dadd( 339.652, 427.191, 27.0035, 0.35 ) }
    apic_3 { pt3dadd( 339.767, 426.078, 27.1328, 0.3298 ) }
    apic_3 { pt3dadd( 339.565, 425.051, 27.3094, 0.3308 ) }
    apic_3 { pt3dadd( 338.893, 424.128, 27.4693, 0.3744 ) }
    apic_3 { pt3dadd( 338.172, 423.24, 27.6094, 0.4804 ) }
    apic_3 { pt3dadd( 337.462, 422.343, 27.7376, 0.5558 ) }
    apic_3 { pt3dadd( 336.814, 421.406, 27.8797, 0.597 ) }
    apic_3 { pt3dadd( 336.222, 420.435, 28.0552, 0.6944 ) }
    apic_3 { pt3dadd( 335.637, 419.46, 28.2682, 0.5442 ) }
    apic_3 { pt3dadd( 335.051, 418.486, 28.5141, 0.4988 ) }
    apic_3 { pt3dadd( 334.467, 417.511, 28.7798, 0.428 ) }
    apic_3 { pt3dadd( 333.916, 416.516, 29.0497, 0.4596 ) }
    apic_3 { pt3dadd( 333.468, 415.47, 29.3059, 0.642 ) }
    apic_3 { pt3dadd( 333.089, 414.393, 29.5406, 0.609 ) }
    apic_3 { pt3dadd( 332.719, 413.314, 29.7578, 0.5186 ) }
    apic_3 { pt3dadd( 332.349, 412.233, 29.9625, 0.493 ) }
    apic_3 { pt3dadd( 331.984, 411.152, 30.1596, 0.6712 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    apic_3 { pt3dadd( 331.631, 410.069, 30.3554, 0.8228 ) }
    apic_3 { pt3dadd( 331.284, 408.983, 30.5511, 0.8266 ) }
    apic_3 { pt3dadd( 330.936, 407.898, 30.7437, 0.5776 ) }
    apic_3 { pt3dadd( 330.547, 406.827, 30.926, 0.4434 ) }
    apic_3 { pt3dadd( 330.023, 405.817, 31.0839, 0.4372 ) }
    apic_3 { pt3dadd( 329.406, 404.855, 31.2102, 0.619 ) }
    apic_3 { pt3dadd( 328.779, 403.898, 31.3065, 0.7054 ) }
    apic_3 { pt3dadd( 328.159, 402.937, 31.3748, 0.7096 ) }
    apic_3 { pt3dadd( 327.618, 401.933, 31.4048, 0.559 ) }
    apic_3 { pt3dadd( 327.144, 400.893, 31.3942, 0.5918 ) }
    apic_3 { pt3dadd( 326.677, 399.85, 31.3566, 0.5096 ) }
    apic_3 { pt3dadd( 326.211, 398.806, 31.3071, 0.5942 ) }
    apic_3 { pt3dadd( 325.745, 397.763, 31.2567, 0.5154 ) }
    apic_3 { pt3dadd( 325.278, 396.72, 31.2172, 0.5988 ) }
    apic_3 { pt3dadd( 324.822, 395.672, 31.2189, 0.5536 ) }
    apic_3 { pt3dadd( 324.375, 394.622, 31.2808, 0.5256 ) }
    apic_3 { pt3dadd( 323.931, 393.57, 31.3953, 0.4316 ) }
    apic_3 { pt3dadd( 323.485, 392.52, 31.5493, 0.4616 ) }
    apic_3 { pt3dadd( 323.042, 391.469, 31.7318, 0.441 ) }
    apic_3 { pt3dadd( 322.597, 390.418, 31.9318, 0.5444 ) }
    apic_3 { pt3dadd( 322.151, 389.367, 32.1398, 0.505 ) }
    apic_3 { pt3dadd( 321.774, 388.292, 32.3529, 0.4098 ) }
    apic_3 { pt3dadd( 321.514, 387.183, 32.5724, 0.3414 ) }
    apic_3 { pt3dadd( 321.311, 386.062, 32.7986, 0.3768 ) }
    apic_3 { pt3dadd( 321.113, 384.939, 33.0305, 0.3402 ) }
    apic_3 { pt3dadd( 320.916, 383.817, 33.2676, 0.3116 ) }
    apic_3 { pt3dadd( 320.718, 382.694, 33.509, 0.2962 ) }
    apic_3 { pt3dadd( 320.521, 381.571, 33.7546, 0.3144 ) }
    apic_3 { pt3dadd( 320.323, 380.449, 34.0026, 0.3506 ) }
    apic_3 { pt3dadd( 320.082, 379.338, 34.26, 0.4046 ) }
    apic_3 { pt3dadd( 319.779, 378.245, 34.5327, 0.5682 ) }
    apic_3 { pt3dadd( 319.452, 377.161, 34.8135, 0.5636 ) }
    apic_3 { pt3dadd( 319.122, 376.077, 35.0862, 0.6776 ) }
    apic_3 { pt3dadd( 318.794, 374.994, 35.3349, 0.7508 ) }
    apic_3 { pt3dadd( 318.464, 373.911, 35.5446, 0.642 ) }
    apic_3 { pt3dadd( 318.133, 372.827, 35.7039, 0.4848 ) }
    apic_3 { pt3dadd( 317.737, 371.79, 35.7134, 0.4348 ) }
    apic_3 { pt3dadd( 317.287, 370.804, 35.5267, 0.5414 ) }
    apic_3 { pt3dadd( 316.873, 369.796, 35.2201, 0.6874 ) }
    apic_3 { pt3dadd( 316.572, 368.719, 34.8981, 0.7502 ) }
    apic_3 { pt3dadd( 316.34, 367.608, 34.6273, 0.733 ) }
    apic_3 { pt3dadd( 316.131, 366.495, 34.4963, 0.6642 ) }
    apic_3 { pt3dadd( 315.939, 365.391, 34.5632, 0.4854 ) }
    apic_3 { pt3dadd( 315.658, 364.317, 34.7939, 0.404 ) }
    apic_3 { pt3dadd( 315.255, 363.281, 35.1218, 0.4106 ) }
    apic_3 { pt3dadd( 314.867, 362.225, 35.4598, 0.5732 ) }
    apic_3 { pt3dadd( 314.602, 361.117, 35.735, 0.6028 ) }
    apic_3 { pt3dadd( 314.525, 359.981, 35.9103, 0.6048 ) }
    apic_3 { pt3dadd( 314.705, 358.866, 35.9803, 0.6358 ) }
    apic_3 { pt3dadd( 315.318, 357.988, 35.9366, 0.561 ) }
    apic_3 { pt3dadd( 315.694, 357.015, 35.8691, 0.6072 ) }
    apic_3 { pt3dadd( 315.408, 355.957, 35.9128, 0.7098 ) }
    apic_3 { pt3dadd( 314.958, 354.937, 36.0811, 0.8196 ) }
    apic_3 { pt3dadd( 314.52, 353.91, 36.3373, 0.7258 ) }
    apic_3 { pt3dadd( 314.186, 352.831, 36.6162, 0.6228 ) }
    apic_3 { pt3dadd( 314.026, 351.704, 36.843, 0.774 ) }
    apic_3 { pt3dadd( 313.919, 350.565, 36.9891, 0.7656 ) }
    apic_3 { pt3dadd( 313.814, 349.427, 37.0583, 1.0092 ) }
    apic_3 { pt3dadd( 313.709, 348.289, 37.0734, 1.1164 ) }
    apic_3 { pt3dadd( 313.604, 347.149, 37.0611, 0.929 ) }
    apic_3 { pt3dadd( 313.497, 346.011, 37.0429, 0.6254 ) }
    apic_3 { pt3dadd( 313.315, 344.882, 37.0367, 0.535 ) }
    apic_3 { pt3dadd( 313.08, 343.764, 37.0647, 0.5924 ) }
    apic_3 { pt3dadd( 313.103, 342.638, 37.1445, 0.521 ) }
    apic_3 { pt3dadd( 313.435, 341.553, 37.249, 0.5658 ) }
    apic_3 { pt3dadd( 313.89, 340.509, 37.3198, 0.4742 ) }
    apic_3 { pt3dadd( 313.883, 339.404, 37.3848, 0.466 ) }
    apic_3 { pt3dadd( 313.45, 338.357, 37.4945, 0.5814 ) }
    apic_3 { pt3dadd( 312.967, 337.327, 37.6438, 0.619 ) }
    apic_3 { pt3dadd( 312.485, 336.297, 37.8227, 0.6308 ) }
    apic_3 { pt3dadd( 312.174, 335.203, 38.0176, 0.7036 ) }
    apic_3 { pt3dadd( 312.021, 334.073, 38.2152, 0.5918 ) }
    apic_3 { pt3dadd( 311.909, 332.937, 38.4003, 0.4378 ) }
    apic_3 { pt3dadd( 311.801, 331.801, 38.5638, 0.3512 ) }
    apic_3 { pt3dadd( 311.692, 330.665, 38.7064, 0.3708 ) }
    apic_3 { pt3dadd( 311.544, 329.533, 38.8268, 0.446 ) }
    apic_3 { pt3dadd( 311.171, 328.455, 38.9074, 0.6272 ) }
    apic_3 { pt3dadd( 310.67, 327.429, 38.9466, 0.7592 ) }
    apic_3 { pt3dadd( 310.156, 326.408, 38.9578, 0.6212 ) }
    apic_3 { pt3dadd( 309.64, 325.388, 38.9556, 0.6226 ) }
    apic_3 { pt3dadd( 309.125, 324.366, 38.9603, 0.52 ) }
    apic_3 { pt3dadd( 308.611, 323.345, 39.0026, 0.6112 ) }
    apic_3 { pt3dadd( 308.1, 322.325, 39.0928, 0.5588 ) }
    apic_3 { pt3dadd( 307.587, 321.305, 39.2224, 0.6204 ) }
    apic_3 { pt3dadd( 307.075, 320.286, 39.38, 0.8808 ) }
    apic_3 { pt3dadd( 306.562, 319.265, 39.5545, 1.1108 ) }
    apic_3 { pt3dadd( 306.068, 318.238, 39.7348, 1.1622 ) }
    apic_3 { pt3dadd( 305.633, 317.183, 39.9134, 1.0184 ) }
    apic_3 { pt3dadd( 305.233, 316.116, 40.0851, 0.7698 ) }
    apic_3 { pt3dadd( 304.835, 315.047, 40.2455, 0.6786 ) }
    apic_3 { pt3dadd( 304.438, 313.978, 40.3925, 0.5452 ) }
    apic_3 { pt3dadd( 303.94, 312.949, 40.4936, 0.583 ) }
    apic_3 { pt3dadd( 303.369, 311.961, 40.5359, 0.6412 ) }
    apic_3 { pt3dadd( 302.802, 310.969, 40.5423, 0.8062 ) }
    apic_3 { pt3dadd( 302.319, 309.932, 40.5401, 0.8354 ) }
    apic_3 { pt3dadd( 302.016, 308.832, 40.5488, 0.6312 ) }
    apic_3 { pt3dadd( 301.657, 307.746, 40.5905, 0.5916 ) }
    apic_3 { pt3dadd( 301.23, 306.687, 40.6753, 0.4748 ) }
    apic_3 { pt3dadd( 300.794, 305.63, 40.7977, 0.4682 ) }
    apic_3 { pt3dadd( 300.367, 304.572, 40.9534, 0.5808 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    apic_3 { pt3dadd( 299.969, 303.505, 41.1494, 0.6402 ) }
    apic_3 { pt3dadd( 299.535, 302.455, 41.3748, 0.561 ) }
    apic_3 { pt3dadd( 299.032, 301.434, 41.6091, 0.418 ) }
    apic_3 { pt3dadd( 298.505, 300.424, 41.8424, 0.3638 ) }
    apic_3 { pt3dadd( 297.974, 299.414, 42.0689, 0.3824 ) }
    apic_3 { pt3dadd( 297.467, 298.393, 42.2814, 0.5248 ) }
    apic_3 { pt3dadd( 297.008, 297.347, 42.4693, 0.4936 ) }
    apic_3 { pt3dadd( 296.568, 296.293, 42.6325, 0.4978 ) }
    apic_3 { pt3dadd( 296.13, 295.237, 42.7725, 0.6602 ) }
    apic_3 { pt3dadd( 295.801, 294.149, 42.9122, 0.6688 ) }
    apic_3 { pt3dadd( 295.543, 293.046, 43.059, 0.5036 ) }
    apic_3 { pt3dadd( 295.311, 291.927, 43.1662, 0.3906 ) }
    apic_3 { pt3dadd( 295.094, 290.807, 43.1948, 0.3858 ) }
    apic_3 { pt3dadd( 294.88, 289.697, 43.1242, 0.5266 ) }
    apic_3 { pt3dadd( 294.378, 288.68, 43.0119, 0.5204 ) }
    apic_3 { pt3dadd( 293.735, 287.735, 42.8977, 0.432 ) }
    apic_3 { pt3dadd( 293.082, 286.796, 42.7974, 0.4132 ) }
    apic_3 { pt3dadd( 292.485, 285.822, 42.7218, 0.3606 ) }
    apic_3 { pt3dadd( 291.985, 284.794, 42.6731, 0.3492 ) }
    apic_3 { pt3dadd( 291.522, 283.751, 42.6507, 0.3676 ) }
    apic_3 { pt3dadd( 291.095, 282.689, 42.6625, 0.4394 ) }
    apic_3 { pt3dadd( 290.817, 281.59, 42.7577, 0.6166 ) }
    apic_3 { pt3dadd( 290.606, 280.481, 42.9397, 0.7322 ) }
    apic_3 { pt3dadd( 290.42, 279.367, 43.1805, 0.6076 ) }
    apic_3 { pt3dadd( 290.405, 278.228, 43.421, 0.42 ) }
    apic_3 { pt3dadd( 290.427, 277.085, 43.6369, 0.3182 ) }
    apic_3 { pt3dadd( 290.28, 275.952, 43.8287, 0.3086 ) }
    apic_3 { pt3dadd( 290.062, 274.83, 43.9972, 0.337 ) }
    apic_3 { pt3dadd( 289.842, 273.709, 44.151, 0.3932 ) }
    apic_3 { pt3dadd( 289.621, 272.588, 44.301, 0.4806 ) }
    apic_3 { pt3dadd( 289.413, 271.466, 44.4595, 0.7246 ) }
    apic_3 { pt3dadd( 289.243, 270.34, 44.641, 0.7784 ) }
    apic_3 { pt3dadd( 289.09, 269.215, 44.8384, 0.7538 ) }
    apic_3 { pt3dadd( 288.937, 268.09, 45.0374, 0.626 ) }
    apic_3 { pt3dadd( 288.784, 266.965, 45.2245, 0.5598 ) }
    apic_3 { pt3dadd( 288.577, 265.842, 45.3639, 0.522 ) }
    apic_3 { pt3dadd( 288.263, 264.746, 45.4051, 0.498 ) }
    apic_3 { pt3dadd( 287.915, 263.663, 45.3513, 0.4588 ) }
    apic_3 { pt3dadd( 287.564, 262.582, 45.2298, 0.3604 ) }
    apic_3 { pt3dadd( 287.247, 261.486, 45.0842, 0.302 ) }
    apic_3 { pt3dadd( 286.979, 260.375, 44.9593, 0.2782 ) }
    apic_3 { pt3dadd( 286.726, 259.259, 44.8762, 0.2814 ) }
    apic_3 { pt3dadd( 286.471, 258.145, 44.8325, 0.2872 ) }
    apic_3 { pt3dadd( 286.201, 257.045, 44.784, 0.2982 ) }
    apic_3 { pt3dadd( 285.89, 255.955, 44.7476, 0.3178 ) }
    apic_3 { pt3dadd( 285.41, 254.93, 44.8353, 0.3568 ) }
    apic_3 { pt3dadd( 284.879, 253.944, 45.0587, 0.4172 ) }
    apic_3 { pt3dadd( 284.346, 252.96, 45.3888, 0.587 ) }
    apic_3 { pt3dadd( 283.839, 251.961, 45.7954, 0.6206 ) }
    apic_3 { pt3dadd( 283.529, 250.872, 46.2269, 0.676 ) }
    apic_3 { pt3dadd( 283.283, 249.764, 46.6539, 0.5832 ) }
    apic_3 { pt3dadd( 283.042, 248.653, 47.0602, 0.6732 ) }
    apic_3 { pt3dadd( 282.8, 247.542, 47.4502, 0.713 ) }
    apic_3 { pt3dadd( 282.567, 246.431, 47.8324, 0.716 ) }
    apic_3 { pt3dadd( 282.451, 245.327, 48.2541, 0.6076 ) }
    apic_3 { pt3dadd( 282.374, 244.229, 48.713, 0.5026 ) }
    apic_3 { pt3dadd( 282.299, 243.132, 49.1837, 0.5284 ) }
    apic_3 { pt3dadd( 282.128, 242.027, 49.6132, 0.6508 ) }
    apic_3 { pt3dadd( 281.688, 240.973, 49.9036, 0.5158 ) }
    apic_3 { pt3dadd( 281.185, 239.949, 50.0536, 0.4202 ) }
    apic_3 { pt3dadd( 280.679, 238.926, 50.0928, 0.4072 ) }
    apic_3 { pt3dadd( 280.168, 237.905, 50.0609, 0.5 ) }
    apic_3 { pt3dadd( 279.607, 236.909, 50.0114, 0.7918 ) }
    apic_3 { pt3dadd( 279.033, 235.919, 49.9766, 0.7522 ) }
    apic_3 { pt3dadd( 278.461, 234.928, 49.9752, 0.7518 ) }
    apic_3 { pt3dadd( 277.887, 233.939, 50.0094, 0.6248 ) }
    apic_3 { pt3dadd( 277.312, 232.949, 50.0774, 0.7744 ) }
    apic_3 { pt3dadd( 276.739, 231.959, 50.1774, 0.783 ) }
    apic_3 { pt3dadd( 276.215, 230.948, 50.3479, 0.7302 ) }
    apic_3 { pt3dadd( 275.711, 229.933, 50.5921, 0.7388 ) }
    apic_3 { pt3dadd( 275.207, 228.917, 50.8973, 0.695 ) }
    apic_3 { pt3dadd( 274.705, 227.901, 51.2498, 0.9024 ) }
    apic_3 { pt3dadd( 274.202, 226.885, 51.6356, 1.031 ) }
    apic_3 { pt3dadd( 273.699, 225.869, 52.0352, 1.1398 ) }
    apic_3 { pt3dadd( 273.268, 224.849, 52.4745, 1.0538 ) }
    apic_3 { pt3dadd( 272.879, 223.834, 52.9528, 0.92 ) }
    apic_3 { pt3dadd( 272.497, 222.822, 53.4456, 0.7762 ) }
    apic_3 { pt3dadd( 271.901, 221.866, 53.8686, 0.9174 ) }
    apic_3 { pt3dadd( 270.909, 221.481, 54.0165, 1.2586 ) }
    apic_3 { pt3dadd( 270.098, 220.683, 54.0585, 1.2776 ) }
    apic_3 { pt3dadd( 269.418, 219.765, 54.0742, 1.0874 ) }
    apic_3 { pt3dadd( 268.795, 218.805, 54.0977, 0.9152 ) }
    apic_3 { pt3dadd( 268.382, 217.748, 54.1822, 1.0918 ) }
    apic_3 { pt3dadd( 267.971, 216.689, 54.3334, 1.0722 ) }
    apic_3 { pt3dadd( 267.503, 215.652, 54.5362, 0.8894 ) }
    apic_3 { pt3dadd( 266.912, 214.674, 54.7324, 1.033 ) }
    apic_3 { pt3dadd( 266.322, 213.697, 54.9094, 1.0162 ) }
    apic_3 { pt3dadd( 265.732, 212.719, 55.064, 0.7566 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 88/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 381.645, 560.7, 34.5285, 0.3536 ) }
    dend_5 { pt3dadd( 381.102, 560.777, 35.943, 0.3932 ) }
    dend_5 { pt3dadd( 380.565, 561.787, 36.4582, 0.3256 ) }
    dend_5 { pt3dadd( 380.03, 562.798, 36.8032, 0.2748 ) }
    dend_5 { pt3dadd( 379.493, 563.809, 37.0199, 0.2752 ) }
    dend_5 { pt3dadd( 378.957, 564.819, 37.1073, 0.2758 ) }
    dend_5 { pt3dadd( 378.422, 565.829, 37.1319, 0.2768 ) }
    dend_5 { pt3dadd( 377.885, 566.841, 37.0992, 0.2786 ) }
    dend_5 { pt3dadd( 377.348, 567.851, 37.0398, 0.282 ) }
    dend_5 { pt3dadd( 376.812, 568.861, 36.9485, 0.2882 ) }
    dend_5 { pt3dadd( 376.276, 569.872, 36.8309, 0.301 ) }
    dend_5 { pt3dadd( 375.76, 570.885, 36.6699, 0.3182 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_5 { pt3dadd( 375.349, 571.723, 36.3283, 0.381 ) }
    dend_5 { pt3dadd( 374.733, 572.214, 35.7907, 0.3476 ) }
    dend_5 { pt3dadd( 373.934, 572.851, 35.3489, 0.3264 ) }
    dend_5 { pt3dadd( 373.603, 573.713, 35.2929, 0.3184 ) }
    dend_5 { pt3dadd( 373.304, 574.742, 35.4444, 0.3816 ) }
    dend_5 { pt3dadd( 372.91, 575.811, 35.6443, 0.3488 ) }
    dend_5 { pt3dadd( 372.475, 576.868, 35.8604, 0.3278 ) }
    dend_5 { pt3dadd( 372.034, 577.922, 36.0716, 0.3256 ) }
    dend_5 { pt3dadd( 371.595, 578.978, 36.248, 0.3722 ) }
    dend_5 { pt3dadd( 371.124, 580.019, 36.4207, 0.4418 ) }
    dend_5 { pt3dadd( 370.607, 581.03, 36.6708, 0.6508 ) }
    dend_5 { pt3dadd( 370.071, 582.024, 37.021, 0.6514 ) }
    dend_5 { pt3dadd( 369.656, 583.041, 37.4892, 0.4716 ) }
    dend_5 { pt3dadd( 369.414, 584.057, 38.0789, 0.3292 ) }
    dend_5 { pt3dadd( 369.139, 585.057, 38.7352, 0.2816 ) }
    dend_5 { pt3dadd( 368.63, 585.996, 39.3708, 0.2874 ) }
    dend_5 { pt3dadd( 367.758, 586.706, 39.8468, 0.2994 ) }
    dend_5 { pt3dadd( 366.738, 587.19, 40.0938, 0.3154 ) }
    dend_5 { pt3dadd( 365.746, 587.681, 40.1139, 0.3758 ) }
    dend_5 { pt3dadd( 364.752, 588.216, 40.0162, 0.3384 ) }
    dend_5 { pt3dadd( 363.73, 588.726, 39.9269, 0.3084 ) }
    dend_5 { pt3dadd( 362.682, 589.149, 39.9358, 0.29 ) }
    dend_5 { pt3dadd( 361.622, 589.556, 40.0319, 0.303 ) }
    dend_5 { pt3dadd( 360.561, 589.976, 40.1831, 0.3292 ) }
    dend_5 { pt3dadd( 359.508, 590.409, 40.364, 0.3656 ) }
    dend_5 { pt3dadd( 358.463, 590.87, 40.5356, 0.4942 ) }
    dend_5 { pt3dadd( 357.431, 591.362, 40.6683, 0.4346 ) }
    dend_5 { pt3dadd( 356.403, 591.863, 40.7602, 0.398 ) }
    dend_5 { pt3dadd( 355.383, 592.379, 40.8044, 0.4294 ) }
    dend_5 { pt3dadd( 354.37, 592.904, 40.8033, 0.4642 ) }
    dend_5 { pt3dadd( 353.405, 593.516, 40.796, 0.4126 ) }
    dend_5 { pt3dadd( 352.497, 594.212, 40.8178, 0.4238 ) }
    dend_5 { pt3dadd( 351.586, 594.902, 40.8736, 0.3822 ) }
    dend_5 { pt3dadd( 350.652, 595.562, 40.9595, 0.379 ) }
    dend_5 { pt3dadd( 349.691, 596.182, 41.0754, 0.4722 ) }
    dend_5 { pt3dadd( 348.697, 596.747, 41.2171, 0.3932 ) }
    dend_5 { pt3dadd( 347.69, 597.292, 41.3798, 0.3254 ) }
    dend_5 { pt3dadd( 346.744, 597.917, 41.6074, 0.2746 ) }
    dend_5 { pt3dadd( 345.868, 598.606, 41.9247, 0.2746 ) }
    dend_5 { pt3dadd( 345.011, 599.31, 42.3119, 0.2746 ) }
    dend_5 { pt3dadd( 344.183, 600.071, 42.7112, 0.2746 ) }
    dend_5 { pt3dadd( 343.382, 600.875, 43.08, 0.2746 ) }
    dend_5 { pt3dadd( 342.587, 601.685, 43.3997, 0.2748 ) }
    dend_5 { pt3dadd( 341.792, 602.496, 43.6601, 0.2748 ) }
    dend_5 { pt3dadd( 341.137, 603.431, 43.8234, 0.2752 ) }
    dend_5 { pt3dadd( 340.64, 604.458, 43.8738, 0.2756 ) }
    dend_5 { pt3dadd( 340.181, 605.5, 43.8371, 0.2766 ) }
    dend_5 { pt3dadd( 339.718, 606.545, 43.7626, 0.2782 ) }
    dend_5 { pt3dadd( 339.252, 607.59, 43.6789, 0.2814 ) }
    dend_5 { pt3dadd( 338.801, 608.641, 43.5982, 0.287 ) }
    dend_5 { pt3dadd( 338.385, 609.707, 43.5288, 0.2988 ) }
    dend_5 { pt3dadd( 337.944, 610.763, 43.4706, 0.3142 ) }
    dend_5 { pt3dadd( 337.633, 611.86, 43.393, 0.3738 ) }
    dend_5 { pt3dadd( 336.891, 612.721, 43.3325, 0.3344 ) }
    dend_5 { pt3dadd( 336.052, 613.492, 43.2765, 0.301 ) }
    dend_5 { pt3dadd( 335.317, 614.359, 43.2079, 0.2766 ) }
    dend_5 { pt3dadd( 334.634, 615.276, 43.0819, 0.2782 ) }
    dend_5 { pt3dadd( 334.04, 616.236, 42.819, 0.2814 ) }
    dend_5 { pt3dadd( 333.875, 617.104, 42.2573, 0.287 ) }
    dend_5 { pt3dadd( 333.728, 618.073, 41.5307, 0.2988 ) }
    dend_5 { pt3dadd( 333.532, 619.189, 40.8632, 0.3142 ) }
    dend_5 { pt3dadd( 333.336, 620.309, 40.2769, 0.3734 ) }
    dend_5 { pt3dadd( 332.968, 621.39, 39.8076, 0.3338 ) }
    dend_5 { pt3dadd( 332.574, 622.463, 39.4528, 0.3 ) }
    dend_5 { pt3dadd( 332.161, 623.528, 39.1874, 0.2746 ) }
    dend_5 { pt3dadd( 331.405, 624.371, 38.9214, 0.2746 ) }
    dend_5 { pt3dadd( 330.658, 625.226, 38.6316, 0.2746 ) }
    dend_5 { pt3dadd( 329.946, 626.111, 38.3267, 0.2746 ) }
    dend_5 { pt3dadd( 329.234, 626.999, 38.0064, 0.2746 ) }
    dend_5 { pt3dadd( 328.522, 627.885, 37.6748, 0.2746 ) }
    dend_5 { pt3dadd( 327.992, 628.889, 37.3304, 0.2746 ) }
    dend_5 { pt3dadd( 327.581, 629.946, 36.976, 0.2744 ) }
    dend_5 { pt3dadd( 327.173, 631.004, 36.6106, 0.2744 ) }
    dend_5 { pt3dadd( 326.764, 632.062, 36.2345, 0.2742 ) }
    dend_5 { pt3dadd( 326.349, 633.117, 35.8492, 0.274 ) }
    dend_5 { pt3dadd( 325.762, 634.084, 35.4511, 0.2736 ) }
    dend_5 { pt3dadd( 325.171, 635.048, 35.0442, 0.2728 ) }
    dend_5 { pt3dadd( 324.58, 636.014, 34.6167, 0.2712 ) }
    dend_5 { pt3dadd( 323.987, 636.976, 34.1824, 0.2684 ) }
    dend_5 { pt3dadd( 323.257, 637.842, 33.7554, 0.2626 ) }
    dend_5 { pt3dadd( 322.455, 638.644, 33.3508, 0.2542 ) }
    dend_5 { pt3dadd( 321.518, 639.268, 32.9568, 0.2288 ) }
    dend_5 { pt3dadd( 320.615, 639.818, 31.9088, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 83/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 381.645, 560.7, 34.5285, 0.3536 ) }
    dend_4 { pt3dadd( 381.855, 560.941, 35.8548, 0.2288 ) }
    dend_4 { pt3dadd( 382.476, 561.789, 37.0555, 0.3596 ) }
    dend_4 { pt3dadd( 383.016, 562.747, 37.5589, 0.4832 ) }
    dend_4 { pt3dadd( 383.52, 563.745, 38.1069, 0.4134 ) }
    dend_4 { pt3dadd( 384.029, 564.739, 38.6798, 0.3628 ) }
    dend_4 { pt3dadd( 384.543, 565.729, 39.2644, 0.3444 ) }
    dend_4 { pt3dadd( 385.188, 566.648, 39.8104, 0.402 ) }
    dend_4 { pt3dadd( 385.975, 567.477, 40.2746, 0.5216 ) }
    dend_4 { pt3dadd( 386.797, 568.273, 40.682, 0.68 ) }
    dend_4 { pt3dadd( 387.519, 568.995, 41.197, 0.5956 ) }
    dend_4 { pt3dadd( 388.123, 569.711, 41.8849, 0.4446 ) }
    dend_4 { pt3dadd( 388.698, 570.536, 42.6448, 0.3648 ) }
    dend_4 { pt3dadd( 389.243, 571.495, 43.3336, 0.391 ) }
    dend_4 { pt3dadd( 389.86, 572.453, 43.8836, 0.5078 ) }
    dend_4 { pt3dadd( 390.72, 573.178, 44.2887, 0.6232 ) }
    dend_4 { pt3dadd( 391.727, 573.619, 44.4814, 0.6406 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_4 { pt3dadd( 392.558, 574.162, 44.7042, 0.4838 ) }
    dend_4 { pt3dadd( 393.425, 574.799, 44.996, 0.4248 ) }
    dend_4 { pt3dadd( 394.378, 575.411, 45.2866, 0.3348 ) }
    dend_4 { pt3dadd( 395.339, 576.017, 45.5652, 0.3016 ) }
    dend_4 { pt3dadd( 396.307, 576.613, 45.8119, 0.2776 ) }
    dend_4 { pt3dadd( 397.287, 577.194, 46.0006, 0.2802 ) }
    dend_4 { pt3dadd( 398.27, 577.771, 46.0998, 0.285 ) }
    dend_4 { pt3dadd( 399.225, 578.395, 46.0816, 0.294 ) }
    dend_4 { pt3dadd( 400.115, 579.08, 45.9096, 0.31 ) }
    dend_4 { pt3dadd( 400.981, 579.784, 45.6011, 0.3426 ) }
    dend_4 { pt3dadd( 401.853, 580.482, 45.1979, 0.3896 ) }
    dend_4 { pt3dadd( 402.786, 581.105, 44.7513, 0.541 ) }
    dend_4 { pt3dadd( 403.747, 581.694, 44.2968, 0.511 ) }
    dend_4 { pt3dadd( 404.712, 582.278, 43.8589, 0.5906 ) }
    dend_4 { pt3dadd( 405.716, 582.797, 43.4613, 0.5386 ) }
    dend_4 { pt3dadd( 406.786, 583.182, 43.1234, 0.4964 ) }
    dend_4 { pt3dadd( 407.875, 583.52, 42.8386, 0.384 ) }
    dend_4 { pt3dadd( 408.964, 583.86, 42.5928, 0.3406 ) }
    dend_4 { pt3dadd( 410.045, 584.224, 42.3744, 0.3756 ) }
    dend_4 { pt3dadd( 411.115, 584.621, 42.1733, 0.3378 ) }
    dend_4 { pt3dadd( 412.18, 585.028, 41.9821, 0.3074 ) }
    dend_4 { pt3dadd( 413.244, 585.441, 41.802, 0.2882 ) }
    dend_4 { pt3dadd( 414.297, 585.884, 41.65, 0.2994 ) }
    dend_4 { pt3dadd( 415.345, 586.344, 41.5209, 0.323 ) }
    dend_4 { pt3dadd( 416.359, 586.865, 41.375, 0.3538 ) }
    dend_4 { pt3dadd( 417.355, 587.422, 41.2255, 0.4726 ) }
    dend_4 { pt3dadd( 418.35, 587.946, 41.1376, 0.3936 ) }
    dend_4 { pt3dadd( 419.362, 588.374, 40.9573, 0.3262 ) }
    dend_4 { pt3dadd( 420.382, 588.768, 40.647, 0.276 ) }
    dend_4 { pt3dadd( 421.429, 589.131, 40.2651, 0.2774 ) }
    dend_4 { pt3dadd( 422.528, 589.404, 39.8947, 0.2798 ) }
    dend_4 { pt3dadd( 423.643, 589.647, 39.5592, 0.2844 ) }
    dend_4 { pt3dadd( 424.752, 589.912, 39.2627, 0.2928 ) }
    dend_4 { pt3dadd( 425.796, 590.358, 39.018, 0.308 ) }
    dend_4 { pt3dadd( 426.773, 590.941, 38.8164, 0.3384 ) }
    dend_4 { pt3dadd( 427.737, 591.551, 38.6431, 0.3836 ) }
    dend_4 { pt3dadd( 428.712, 592.146, 38.4969, 0.5226 ) }
    dend_4 { pt3dadd( 429.707, 592.708, 38.397, 0.5118 ) }
    dend_4 { pt3dadd( 430.71, 593.258, 38.3424, 0.4226 ) }
    dend_4 { pt3dadd( 431.712, 593.808, 38.3191, 0.3644 ) }
    dend_4 { pt3dadd( 432.711, 594.364, 38.2995, 0.4218 ) }
    dend_4 { pt3dadd( 433.71, 594.918, 38.2808, 0.413 ) }
    dend_4 { pt3dadd( 434.729, 595.434, 38.2945, 0.4976 ) }
    dend_4 { pt3dadd( 435.819, 595.756, 38.3457, 0.3932 ) }
    dend_4 { pt3dadd( 436.954, 595.862, 38.3886, 0.3252 ) }
    dend_4 { pt3dadd( 438.086, 595.974, 38.5042, 0.2742 ) }
    dend_4 { pt3dadd( 439.216, 596.087, 38.6809, 0.274 ) }
    dend_4 { pt3dadd( 440.357, 596.025, 38.8828, 0.2736 ) }
    dend_4 { pt3dadd( 441.492, 595.91, 39.0958, 0.2728 ) }
    dend_4 { pt3dadd( 442.63, 595.794, 39.3341, 0.2712 ) }
    dend_4 { pt3dadd( 443.714, 595.442, 39.5996, 0.2684 ) }
    dend_4 { pt3dadd( 444.795, 595.079, 39.8731, 0.2626 ) }
    dend_4 { pt3dadd( 445.795, 594.558, 40.1859, 0.2542 ) }
    dend_4 { pt3dadd( 446.66, 593.877, 40.5616, 0.2288 ) }
    dend_4 { pt3dadd( 447.525, 593.194, 41.5058, 0.2288 ) }
    // Section: apic_9, id: apic_9, parent: apic_3 (entry count 55/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 265.732, 212.719, 55.064, 0.7566 ) }
    apic_9 { pt3dadd( 266.327, 211.497, 55.5461, 0.4782 ) }
    apic_9 { pt3dadd( 266.827, 210.469, 55.664, 0.404 ) }
    apic_9 { pt3dadd( 267.245, 209.415, 55.8443, 0.3454 ) }
    apic_9 { pt3dadd( 267.629, 208.354, 56.086, 0.3114 ) }
    apic_9 { pt3dadd( 268.006, 207.293, 56.3676, 0.344 ) }
    apic_9 { pt3dadd( 268.178, 206.168, 56.6322, 0.3986 ) }
    apic_9 { pt3dadd( 268.241, 205.027, 56.8532, 0.5272 ) }
    apic_9 { pt3dadd( 268.289, 203.885, 57.0284, 0.632 ) }
    apic_9 { pt3dadd( 268.337, 202.743, 57.1595, 0.7898 ) }
    apic_9 { pt3dadd( 268.377, 201.6, 57.2513, 0.8028 ) }
    apic_9 { pt3dadd( 268.403, 200.456, 57.3101, 0.581 ) }
    apic_9 { pt3dadd( 268.427, 199.312, 57.3496, 0.4484 ) }
    apic_9 { pt3dadd( 268.451, 198.168, 57.3779, 0.4524 ) }
    apic_9 { pt3dadd( 268.475, 197.024, 57.3994, 0.6182 ) }
    apic_9 { pt3dadd( 268.499, 195.881, 57.4185, 0.8444 ) }
    apic_9 { pt3dadd( 268.524, 194.737, 57.4384, 0.972 ) }
    apic_9 { pt3dadd( 268.561, 193.593, 57.4619, 0.7936 ) }
    apic_9 { pt3dadd( 268.661, 192.455, 57.4913, 0.648 ) }
    apic_9 { pt3dadd( 268.777, 191.317, 57.5285, 0.622 ) }
    apic_9 { pt3dadd( 268.893, 190.179, 57.5764, 0.534 ) }
    apic_9 { pt3dadd( 269.008, 189.04, 57.6391, 0.563 ) }
    apic_9 { pt3dadd( 269.124, 187.902, 57.7212, 0.6006 ) }
    apic_9 { pt3dadd( 269.239, 186.764, 57.8264, 0.749 ) }
    apic_9 { pt3dadd( 269.355, 185.625, 57.9578, 0.642 ) }
    apic_9 { pt3dadd( 268.595, 184.827, 58.1781, 0.696 ) }
    apic_9 { pt3dadd( 267.713, 184.128, 58.4763, 0.7156 ) }
    apic_9 { pt3dadd( 267.065, 183.2, 58.8165, 0.6848 ) }
    apic_9 { pt3dadd( 266.458, 182.244, 59.1833, 0.7246 ) }
    apic_9 { pt3dadd( 266.337, 181.109, 59.542, 0.5584 ) }
    apic_9 { pt3dadd( 266.216, 179.975, 59.8912, 0.4982 ) }
    apic_9 { pt3dadd( 266.118, 178.842, 60.2426, 0.557 ) }
    apic_9 { pt3dadd( 266.072, 177.714, 60.6259, 0.7532 ) }
    apic_9 { pt3dadd( 266.025, 176.586, 61.0431, 0.694 ) }
    apic_9 { pt3dadd( 265.978, 175.458, 61.4925, 0.8068 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 90/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 265.732, 212.719, 55.064, 0.7566 ) }
    apic_4 { pt3dadd( 264.462, 211.984, 55.2493, 0.3648 ) }
    apic_4 { pt3dadd( 263.472, 211.412, 55.3104, 0.3914 ) }
    apic_4 { pt3dadd( 262.48, 210.842, 55.3711, 0.5082 ) }
    apic_4 { pt3dadd( 261.49, 210.27, 55.4408, 0.6246 ) }
    apic_4 { pt3dadd( 260.719, 209.434, 55.5766, 0.6414 ) }
    apic_4 { pt3dadd( 259.973, 208.577, 55.7715, 0.4928 ) }
    apic_4 { pt3dadd( 259.227, 207.721, 56.009, 0.4054 ) }
    apic_4 { pt3dadd( 258.481, 206.865, 56.2713, 0.4738 ) }
    apic_4 { pt3dadd( 257.736, 206.008, 56.5432, 0.3962 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    apic_4 { pt3dadd( 256.99, 205.151, 56.8109, 0.331 ) }
    // Section: apic_11, id: apic_11, parent: apic_9 (entry count 1/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 265.978, 175.458, 61.4925, 0.8068 ) }
    apic_11 { pt3dadd( 265.917, 174.513, 61.4457, 0.2288 ) }
    apic_11 { pt3dadd( 265.843, 173.372, 61.495, 0.4748 ) }
    apic_11 { pt3dadd( 265.709, 172.236, 61.5149, 0.3976 ) }
    apic_11 { pt3dadd( 265.525, 171.108, 61.518, 0.3338 ) }
    apic_11 { pt3dadd( 265.505, 169.965, 61.5079, 0.29 ) }
    apic_11 { pt3dadd( 265.399, 168.827, 61.5238, 0.3028 ) }
    apic_11 { pt3dadd( 265.265, 167.692, 61.5689, 0.3292 ) }
    apic_11 { pt3dadd( 265.131, 166.557, 61.6381, 0.3654 ) }
    apic_11 { pt3dadd( 264.997, 165.422, 61.7288, 0.494 ) }
    apic_11 { pt3dadd( 264.923, 164.281, 61.831, 0.4334 ) }
    apic_11 { pt3dadd( 264.897, 163.138, 61.9363, 0.4006 ) }
    apic_11 { pt3dadd( 264.879, 161.994, 62.0418, 0.4116 ) }
    apic_11 { pt3dadd( 264.862, 160.85, 62.1533, 0.5404 ) }
    apic_11 { pt3dadd( 264.845, 159.707, 62.2784, 0.7096 ) }
    apic_11 { pt3dadd( 264.828, 158.563, 62.4249, 0.6756 ) }
    apic_11 { pt3dadd( 264.39, 157.51, 62.6161, 0.4694 ) }
    apic_11 { pt3dadd( 263.382, 156.985, 62.8701, 0.3254 ) }
    apic_11 { pt3dadd( 262.365, 156.474, 63.1792, 0.2746 ) }
    apic_11 { pt3dadd( 261.651, 155.61, 63.5746, 0.2746 ) }
    apic_11 { pt3dadd( 261.026, 154.684, 64.0433, 0.2746 ) }
    apic_11 { pt3dadd( 260.402, 153.758, 64.5663, 0.2746 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 23/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 265.978, 175.458, 61.4925, 0.8068 ) }
    apic_10 { pt3dadd( 266.506, 174.854, 61.9671, 0.8502 ) }
    apic_10 { pt3dadd( 267.244, 174.01, 62.4862, 0.5924 ) }
    apic_10 { pt3dadd( 267.982, 173.168, 63.04, 0.3842 ) }
    apic_10 { pt3dadd( 268.72, 172.325, 63.6216, 0.2892 ) }
    apic_10 { pt3dadd( 269.454, 171.48, 64.2306, 0.3028 ) }
    apic_10 { pt3dadd( 270.178, 170.629, 64.8701, 0.3216 ) }
    apic_10 { pt3dadd( 270.899, 169.773, 65.5421, 0.387 ) }
    apic_10 { pt3dadd( 271.621, 168.919, 66.2491, 0.3602 ) }
    apic_10 { pt3dadd( 272.341, 168.063, 66.9992, 0.3436 ) }
    apic_10 { pt3dadd( 273.032, 167.223, 67.8387, 0.381 ) }
    apic_10 { pt3dadd( 273.7, 166.398, 68.7851, 0.3482 ) }
    apic_10 { pt3dadd( 274.364, 165.576, 69.8281, 0.326 ) }
    apic_10 { pt3dadd( 275.026, 164.799, 70.9761, 0.325 ) }
    apic_10 { pt3dadd( 275.682, 164.087, 72.2341, 0.3576 ) }
    apic_10 { pt3dadd( 276.333, 163.395, 73.5734, 0.4798 ) }
    apic_10 { pt3dadd( 277.061, 162.771, 74.9482, 0.4068 ) }
    apic_10 { pt3dadd( 277.827, 162.184, 76.3227, 0.3516 ) }
    apic_10 { pt3dadd( 278.541, 161.548, 77.6706, 0.3178 ) }
    apic_10 { pt3dadd( 279.001, 160.737, 78.9642, 0.3804 ) }
    apic_10 { pt3dadd( 279.367, 159.875, 80.1721, 0.3466 ) }
    apic_10 { pt3dadd( 279.726, 158.953, 81.2409, 0.3248 ) }
    apic_10 { pt3dadd( 280.107, 157.986, 82.1285, 0.3152 ) }
    apic_10 { pt3dadd( 280.805, 157.118, 82.6423, 0.3756 ) }
    apic_10 { pt3dadd( 281.776, 156.666, 82.7568, 0.3378 ) }
    apic_10 { pt3dadd( 282.867, 156.341, 82.6806, 0.3074 ) }
    apic_10 { pt3dadd( 283.966, 156.024, 82.4866, 0.2882 ) }
    apic_10 { pt3dadd( 285.064, 155.708, 82.2245, 0.2996 ) }
    apic_10 { pt3dadd( 286.143, 155.352, 81.898, 0.323 ) }
    apic_10 { pt3dadd( 287.195, 154.964, 81.515, 0.3538 ) }
    apic_10 { pt3dadd( 288.243, 154.574, 81.0863, 0.4726 ) }
    apic_10 { pt3dadd( 289.292, 154.183, 80.6109, 0.3938 ) }
    apic_10 { pt3dadd( 290.341, 153.792, 80.1069, 0.3264 ) }
    apic_10 { pt3dadd( 291.391, 153.4, 79.5934, 0.2764 ) }
    apic_10 { pt3dadd( 292.344, 152.795, 79.1098, 0.2782 ) }
    apic_10 { pt3dadd( 293.264, 152.134, 78.6632, 0.2812 ) }
    apic_10 { pt3dadd( 294.185, 151.47, 78.2446, 0.2868 ) }
    apic_10 { pt3dadd( 295.104, 150.805, 77.845, 0.297 ) }
    apic_10 { pt3dadd( 296.024, 150.141, 77.455, 0.317 ) }
    apic_10 { pt3dadd( 296.944, 149.477, 77.0669, 0.3492 ) }
    apic_10 { pt3dadd( 297.921, 148.905, 76.6685, 0.433 ) }
    apic_10 { pt3dadd( 298.965, 148.477, 76.2521, 0.4706 ) }
    apic_10 { pt3dadd( 300.014, 148.062, 75.8204, 0.4254 ) }
    apic_10 { pt3dadd( 301.065, 147.648, 75.376, 0.443 ) }
    apic_10 { pt3dadd( 302.116, 147.235, 74.9213, 0.4412 ) }
    apic_10 { pt3dadd( 303.166, 146.82, 74.4576, 0.3748 ) }
    apic_10 { pt3dadd( 304.216, 146.404, 73.9872, 0.3298 ) }
    apic_10 { pt3dadd( 305.292, 146.069, 73.5059, 0.3246 ) }
    apic_10 { pt3dadd( 306.4, 145.89, 73.0072, 0.393 ) }
    apic_10 { pt3dadd( 307.509, 145.724, 72.494, 0.3698 ) }
    apic_10 { pt3dadd( 308.619, 145.559, 71.9709, 0.3688 ) }
    apic_10 { pt3dadd( 309.73, 145.393, 71.4417, 0.3914 ) }
    apic_10 { pt3dadd( 310.84, 145.227, 70.9097, 0.5442 ) }
    apic_10 { pt3dadd( 311.949, 145.061, 70.3769, 0.517 ) }
    apic_10 { pt3dadd( 313.068, 144.922, 69.8536, 0.6004 ) }
    apic_10 { pt3dadd( 314.192, 144.794, 69.3412, 0.5638 ) }
    apic_10 { pt3dadd( 315.314, 144.667, 68.8372, 0.5084 ) }
    apic_10 { pt3dadd( 316.413, 144.737, 68.3021, 0.5746 ) }
    apic_10 { pt3dadd( 317.497, 144.859, 67.7396, 0.5644 ) }
    apic_10 { pt3dadd( 318.578, 144.865, 67.1703, 0.5032 ) }
    apic_10 { pt3dadd( 319.533, 144.34, 66.6439, 0.5962 ) }
    apic_10 { pt3dadd( 320.479, 143.773, 66.1833, 0.452 ) }
    apic_10 { pt3dadd( 321.546, 143.686, 65.9215, 0.3498 ) }
    apic_10 { pt3dadd( 322.67, 143.817, 65.8851, 0.2728 ) }
    apic_10 { pt3dadd( 323.796, 143.931, 66.0327, 0.2712 ) }
    apic_10 { pt3dadd( 324.928, 143.995, 66.2978, 0.2684 ) }
    apic_10 { pt3dadd( 326.061, 144.059, 66.6271, 0.2626 ) }
    apic_10 { pt3dadd( 327.189, 144.126, 66.9872, 0.2542 ) }
    apic_10 { pt3dadd( 328.312, 144.194, 67.3476, 0.2288 ) }
    apic_10 { pt3dadd( 329.4, 144.404, 68.1601, 0.2288 ) }
    // Section: apic_6, id: apic_6, parent: apic_4 (entry count 93/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 256.99, 205.151, 56.8109, 0.331 ) }
    apic_6 { pt3dadd( 256.607, 204.744, 57.0226, 0.2848 ) }
    apic_6 { pt3dadd( 255.824, 203.912, 57.1987, 0.2936 ) }
    apic_6 { pt3dadd( 255.04, 203.081, 57.3468, 0.3096 ) }
    apic_6 { pt3dadd( 254.257, 202.248, 57.4722, 0.34 ) }
    apic_6 { pt3dadd( 253.475, 201.416, 57.5806, 0.3932 ) }
    apic_6 { pt3dadd( 252.691, 200.583, 57.6769, 0.5086 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_6 { pt3dadd( 251.908, 199.752, 57.766, 0.6398 ) }
    apic_6 { pt3dadd( 251.186, 198.865, 57.8178, 0.5984 ) }
    apic_6 { pt3dadd( 250.47, 197.973, 57.8418, 0.76 ) }
    apic_6 { pt3dadd( 249.755, 197.081, 57.8514, 0.5878 ) }
    apic_6 { pt3dadd( 249.038, 196.189, 57.8584, 0.5014 ) }
    apic_6 { pt3dadd( 248.322, 195.298, 57.8735, 0.5832 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 6/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 256.99, 205.151, 56.8109, 0.331 ) }
    apic_5 { pt3dadd( 256.98, 204.958, 57.0374, 0.2288 ) }
    apic_5 { pt3dadd( 256.919, 203.818, 56.819, 0.3146 ) }
    apic_5 { pt3dadd( 256.859, 202.679, 56.7224, 0.3506 ) }
    apic_5 { pt3dadd( 256.81, 201.54, 56.6149, 0.4072 ) }
    apic_5 { pt3dadd( 256.833, 200.397, 56.5174, 0.561 ) }
    apic_5 { pt3dadd( 256.99, 199.265, 56.4558, 0.609 ) }
    apic_5 { pt3dadd( 257.172, 198.136, 56.4304, 0.477 ) }
    apic_5 { pt3dadd( 257.354, 197.007, 56.4374, 0.3886 ) }
    apic_5 { pt3dadd( 257.536, 195.878, 56.4676, 0.3822 ) }
    apic_5 { pt3dadd( 257.718, 194.749, 56.5127, 0.52 ) }
    apic_5 { pt3dadd( 257.9, 193.619, 56.5656, 0.5074 ) }
    apic_5 { pt3dadd( 258.089, 192.491, 56.6224, 0.4128 ) }
    apic_5 { pt3dadd( 258.306, 191.368, 56.6868, 0.3542 ) }
    apic_5 { pt3dadd( 258.545, 190.251, 56.7591, 0.3646 ) }
    apic_5 { pt3dadd( 258.786, 189.133, 56.8366, 0.4926 ) }
    apic_5 { pt3dadd( 259.029, 188.016, 56.915, 0.4304 ) }
    apic_5 { pt3dadd( 259.27, 186.899, 56.989, 0.3966 ) }
    apic_5 { pt3dadd( 259.513, 185.782, 57.0528, 0.3958 ) }
    apic_5 { pt3dadd( 259.755, 184.665, 57.1015, 0.5522 ) }
    apic_5 { pt3dadd( 259.998, 183.548, 57.1301, 0.5328 ) }
    apic_5 { pt3dadd( 260.131, 182.412, 57.1248, 0.6248 ) }
    apic_5 { pt3dadd( 259.939, 181.294, 57.0556, 0.6338 ) }
    apic_5 { pt3dadd( 259.667, 180.188, 56.9271, 0.518 ) }
    apic_5 { pt3dadd( 259.391, 179.082, 56.7549, 0.49 ) }
    apic_5 { pt3dadd( 259.116, 177.977, 56.5544, 0.4462 ) }
    apic_5 { pt3dadd( 258.874, 176.863, 56.3371, 0.554 ) }
    apic_5 { pt3dadd( 258.717, 175.74, 56.1089, 0.5228 ) }
    apic_5 { pt3dadd( 258.676, 174.605, 55.8897, 0.4438 ) }
    apic_5 { pt3dadd( 259.011, 173.524, 55.7094, 0.399 ) }
    apic_5 { pt3dadd( 259.581, 172.535, 55.5817, 0.5102 ) }
    apic_5 { pt3dadd( 259.92, 171.447, 55.5106, 0.458 ) }
    apic_5 { pt3dadd( 259.453, 170.418, 55.5094, 0.4732 ) }
    apic_5 { pt3dadd( 258.777, 169.501, 55.5601, 0.414 ) }
    apic_5 { pt3dadd( 258.097, 168.586, 55.6354, 0.4996 ) }
    apic_5 { pt3dadd( 257.461, 167.638, 55.7052, 0.3968 ) }
    apic_5 { pt3dadd( 257.034, 166.578, 55.7245, 0.3322 ) }
    apic_5 { pt3dadd( 256.782, 165.464, 55.6696, 0.2872 ) }
    apic_5 { pt3dadd( 256.531, 164.349, 55.5327, 0.2978 ) }
    apic_5 { pt3dadd( 256.279, 163.235, 55.337, 0.3192 ) }
    apic_5 { pt3dadd( 256.027, 162.121, 55.1048, 0.3502 ) }
    apic_5 { pt3dadd( 255.745, 161.02, 54.8346, 0.4492 ) }
    apic_5 { pt3dadd( 255.406, 159.954, 54.5118, 0.4322 ) }
    apic_5 { pt3dadd( 254.977, 158.98, 53.5346, 0.6864 ) }
    // Section: apic_13, id: apic_13, parent: apic_11 (entry count 50/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 260.402, 153.758, 64.5663, 0.2746 ) }
    apic_13 { pt3dadd( 260.268, 153.492, 65.0636, 0.2746 ) }
    apic_13 { pt3dadd( 259.772, 152.496, 65.6124, 0.2746 ) }
    apic_13 { pt3dadd( 259.276, 151.501, 66.1993, 0.2746 ) }
    apic_13 { pt3dadd( 258.788, 150.501, 66.8119, 0.2746 ) }
    apic_13 { pt3dadd( 258.327, 149.486, 67.4433, 0.2746 ) }
    apic_13 { pt3dadd( 257.874, 148.467, 68.0932, 0.2746 ) }
    apic_13 { pt3dadd( 257.426, 147.446, 68.7635, 0.2746 ) }
    apic_13 { pt3dadd( 257.074, 146.39, 69.4501, 0.2746 ) }
    apic_13 { pt3dadd( 257.169, 145.302, 70.1554, 0.2746 ) }
    apic_13 { pt3dadd( 257.403, 144.207, 70.887, 0.2746 ) }
    apic_13 { pt3dadd( 257.653, 143.122, 71.6626, 0.2748 ) }
    apic_13 { pt3dadd( 257.99, 142.12, 72.5404, 0.2748 ) }
    apic_13 { pt3dadd( 258.372, 141.169, 73.5311, 0.2752 ) }
    apic_13 { pt3dadd( 258.794, 140.238, 74.6102, 0.2756 ) }
    apic_13 { pt3dadd( 259.376, 139.392, 75.7439, 0.2766 ) }
    apic_13 { pt3dadd( 260.005, 138.57, 76.9059, 0.2782 ) }
    apic_13 { pt3dadd( 260.627, 137.745, 78.0735, 0.2814 ) }
    apic_13 { pt3dadd( 261.215, 136.892, 79.2268, 0.287 ) }
    apic_13 { pt3dadd( 261.792, 136.032, 80.3586, 0.2988 ) }
    apic_13 { pt3dadd( 262.375, 135.173, 81.4652, 0.3142 ) }
    apic_13 { pt3dadd( 263.009, 134.325, 82.53, 0.3734 ) }
    apic_13 { pt3dadd( 263.716, 133.499, 83.5327, 0.3338 ) }
    apic_13 { pt3dadd( 264.441, 132.68, 84.4816, 0.3 ) }
    apic_13 { pt3dadd( 265.158, 131.854, 85.3944, 0.2746 ) }
    apic_13 { pt3dadd( 265.823, 130.983, 86.2879, 0.2746 ) }
    apic_13 { pt3dadd( 266.403, 130.051, 87.1786, 0.2746 ) }
    apic_13 { pt3dadd( 266.963, 129.104, 88.0888, 0.2744 ) }
    apic_13 { pt3dadd( 267.522, 128.156, 89.038, 0.2744 ) }
    apic_13 { pt3dadd( 268.027, 127.183, 90.0446, 0.2742 ) }
    apic_13 { pt3dadd( 267.951, 126.186, 91.1652, 0.274 ) }
    apic_13 { pt3dadd( 267.22, 125.616, 92.4456, 0.2736 ) }
    apic_13 { pt3dadd( 266.359, 125.392, 93.8871, 0.2728 ) }
    apic_13 { pt3dadd( 265.397, 125.506, 95.4531, 0.2712 ) }
    apic_13 { pt3dadd( 264.524, 125.788, 97.1018, 0.2684 ) }
    apic_13 { pt3dadd( 263.832, 125.913, 98.8364, 0.2626 ) }
    apic_13 { pt3dadd( 263.098, 125.551, 100.535, 0.2542 ) }
    apic_13 { pt3dadd( 262.545, 125.128, 102.18, 0.2288 ) }
    apic_13 { pt3dadd( 262.276, 124.806, 105.713, 0.2288 ) }
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 89/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 260.402, 153.758, 64.5663, 0.2746 ) }
    apic_12 { pt3dadd( 260.562, 152.502, 63.2573, 0.2746 ) }
    apic_12 { pt3dadd( 260.7, 151.415, 62.7371, 0.2746 ) }
    apic_12 { pt3dadd( 260.839, 150.329, 62.1219, 0.2746 ) }
    apic_12 { pt3dadd( 261.094, 149.259, 61.4516, 0.2746 ) }
    apic_12 { pt3dadd( 261.371, 148.194, 60.7578, 0.2746 ) }
    apic_12 { pt3dadd( 261.648, 147.128, 60.0673, 0.2746 ) }
    apic_12 { pt3dadd( 261.676, 146.006, 59.4336, 0.2746 ) }
    apic_12 { pt3dadd( 261.679, 144.881, 58.8456, 0.2746 ) }
    apic_12 { pt3dadd( 261.346, 143.793, 58.3195, 0.2744 ) }
    apic_12 { pt3dadd( 260.889, 142.746, 57.8404, 0.2744 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    apic_12 { pt3dadd( 260.254, 141.807, 57.3518, 0.2742 ) }
    apic_12 { pt3dadd( 259.579, 140.897, 56.833, 0.274 ) }
    apic_12 { pt3dadd( 259.027, 139.996, 56.1831, 0.2736 ) }
    apic_12 { pt3dadd( 258.498, 139.099, 55.4238, 0.2728 ) }
    apic_12 { pt3dadd( 258.3, 138.09, 54.5801, 0.2712 ) }
    apic_12 { pt3dadd( 258.108, 137.079, 53.7068, 0.2684 ) }
    apic_12 { pt3dadd( 258.209, 135.964, 52.9466, 0.2626 ) }
    apic_12 { pt3dadd( 258.374, 134.844, 52.3286, 0.2542 ) }
    apic_12 { pt3dadd( 258.507, 133.716, 51.8602, 0.2288 ) }
    apic_12 { pt3dadd( 258.615, 132.583, 51.2232, 0.2288 ) }
    // Section: apic_8, id: apic_8, parent: apic_6 (entry count 10/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 248.322, 195.298, 57.8735, 0.5832 ) }
    apic_8 { pt3dadd( 247.891, 194.687, 57.9454, 0.4746 ) }
    apic_8 { pt3dadd( 247.236, 193.758, 58.0815, 0.3926 ) }
    apic_8 { pt3dadd( 246.579, 192.829, 58.2641, 0.348 ) }
    apic_8 { pt3dadd( 245.926, 191.897, 58.4752, 0.4306 ) }
    apic_8 { pt3dadd( 245.309, 190.941, 58.6939, 0.4666 ) }
    apic_8 { pt3dadd( 244.774, 189.934, 58.8958, 0.4168 ) }
    apic_8 { pt3dadd( 244.298, 188.895, 59.0652, 0.4318 ) }
    apic_8 { pt3dadd( 243.822, 187.855, 59.2052, 0.397 ) }
    apic_8 { pt3dadd( 243.347, 186.816, 59.3202, 0.4076 ) }
    apic_8 { pt3dadd( 242.87, 185.778, 59.4143, 0.5198 ) }
    apic_8 { pt3dadd( 242.377, 184.746, 59.4882, 0.507 ) }
    apic_8 { pt3dadd( 241.842, 183.736, 59.5358, 0.4124 ) }
    apic_8 { pt3dadd( 241.265, 182.747, 59.5521, 0.3512 ) }
    apic_8 { pt3dadd( 240.688, 181.76, 59.5437, 0.371 ) }
    apic_8 { pt3dadd( 240.112, 180.771, 59.5157, 0.4458 ) }
    apic_8 { pt3dadd( 239.546, 179.779, 59.474, 0.6282 ) }
    apic_8 { pt3dadd( 239.051, 178.75, 59.4208, 0.7548 ) }
    apic_8 { pt3dadd( 238.677, 177.67, 59.3564, 0.644 ) }
    apic_8 { pt3dadd( 238.339, 176.577, 59.2813, 0.5132 ) }
    apic_8 { pt3dadd( 238.03, 175.478, 59.2004, 0.3672 ) }
    apic_8 { pt3dadd( 237.928, 174.359, 59.1371, 0.3144 ) }
    apic_8 { pt3dadd( 238.058, 173.23, 59.11, 0.3024 ) }
    apic_8 { pt3dadd( 237.893, 172.148, 59.0531, 0.321 ) }
    apic_8 { pt3dadd( 237.367, 171.156, 58.9025, 0.3858 ) }
    apic_8 { pt3dadd( 237.128, 170.102, 58.6936, 0.358 ) }
    apic_8 { pt3dadd( 237.235, 168.97, 58.4763, 0.3396 ) }
    apic_8 { pt3dadd( 237.375, 167.841, 58.2728, 0.3734 ) }
    apic_8 { pt3dadd( 237.589, 166.72, 58.1151, 0.3338 ) }
    apic_8 { pt3dadd( 237.862, 165.61, 58.0269, 0.3 ) }
    apic_8 { pt3dadd( 238.096, 164.491, 58.0126, 0.2746 ) }
    apic_8 { pt3dadd( 238.105, 163.379, 58.1008, 0.2746 ) }
    apic_8 { pt3dadd( 237.768, 162.351, 58.3215, 0.2746 ) }
    apic_8 { pt3dadd( 237.152, 161.44, 58.592, 0.2746 ) }
    apic_8 { pt3dadd( 236.302, 160.711, 58.7633, 0.2746 ) }
    apic_8 { pt3dadd( 235.396, 160.035, 58.8297, 0.2746 ) }
    apic_8 { pt3dadd( 234.592, 159.231, 58.8496, 0.2746 ) }
    apic_8 { pt3dadd( 234.029, 158.251, 58.8529, 0.2746 ) }
    apic_8 { pt3dadd( 233.644, 157.174, 58.8636, 0.2746 ) }
    apic_8 { pt3dadd( 233.362, 156.068, 58.9137, 0.2746 ) }
    apic_8 { pt3dadd( 233.185, 154.942, 59.0265, 0.2746 ) }
    apic_8 { pt3dadd( 233.049, 153.81, 59.1903, 0.2746 ) }
    apic_8 { pt3dadd( 232.911, 152.677, 59.3852, 0.2746 ) }
    apic_8 { pt3dadd( 232.781, 151.546, 59.5997, 0.2746 ) }
    apic_8 { pt3dadd( 232.666, 150.414, 59.8296, 0.2746 ) }
    apic_8 { pt3dadd( 232.563, 149.284, 60.0662, 0.2746 ) }
    apic_8 { pt3dadd( 232.461, 148.154, 60.2966, 0.2746 ) }
    apic_8 { pt3dadd( 232.368, 147.022, 60.5052, 0.2746 ) }
    apic_8 { pt3dadd( 232.328, 145.883, 60.6609, 0.2746 ) }
    apic_8 { pt3dadd( 232.369, 144.741, 60.73, 0.2746 ) }
    apic_8 { pt3dadd( 232.441, 143.601, 60.711, 0.2746 ) }
    apic_8 { pt3dadd( 232.515, 142.461, 60.6194, 0.2746 ) }
    apic_8 { pt3dadd( 232.652, 141.329, 60.4663, 0.2746 ) }
    apic_8 { pt3dadd( 232.934, 140.228, 60.2557, 0.2746 ) }
    apic_8 { pt3dadd( 233.313, 139.157, 59.9992, 0.2746 ) }
    apic_8 { pt3dadd( 233.709, 138.093, 59.7122, 0.2746 ) }
    apic_8 { pt3dadd( 234.137, 137.041, 59.4051, 0.2746 ) }
    apic_8 { pt3dadd( 234.639, 136.024, 59.0859, 0.2746 ) }
    apic_8 { pt3dadd( 235.193, 135.032, 58.7622, 0.2746 ) }
    apic_8 { pt3dadd( 235.785, 134.063, 58.4388, 0.2746 ) }
    apic_8 { pt3dadd( 236.458, 133.151, 58.1179, 0.2746 ) }
    apic_8 { pt3dadd( 237.212, 132.304, 57.7993, 0.2746 ) }
    apic_8 { pt3dadd( 237.969, 131.457, 57.489, 0.2746 ) }
    apic_8 { pt3dadd( 238.67, 130.56, 57.1978, 0.2746 ) }
    apic_8 { pt3dadd( 239.334, 129.63, 56.9321, 0.2746 ) }
    apic_8 { pt3dadd( 240.075, 128.765, 56.6821, 0.2746 ) }
    apic_8 { pt3dadd( 240.942, 128.031, 56.4245, 0.2746 ) }
    apic_8 { pt3dadd( 241.859, 127.358, 56.1319, 0.2746 ) }
    apic_8 { pt3dadd( 242.819, 126.751, 55.7894, 0.2746 ) }
    apic_8 { pt3dadd( 243.853, 126.557, 55.4966, 0.2746 ) }
    apic_8 { pt3dadd( 244.914, 126.756, 55.2471, 0.2746 ) }
    apic_8 { pt3dadd( 245.482, 126.033, 54.6652, 0.2746 ) }
    apic_8 { pt3dadd( 245.828, 125.027, 53.8423, 0.2746 ) }
    apic_8 { pt3dadd( 246.404, 124.647, 52.6504, 0.2746 ) }
    apic_8 { pt3dadd( 246.993, 124.373, 51.1787, 0.2746 ) }
    apic_8 { pt3dadd( 247.614, 124.109, 49.5396, 0.2746 ) }
    apic_8 { pt3dadd( 248.518, 123.939, 47.9368, 0.2746 ) }
    apic_8 { pt3dadd( 249.437, 123.776, 46.4618, 0.2746 ) }
    apic_8 { pt3dadd( 250.418, 123.619, 45.1665, 0.2746 ) }
    apic_8 { pt3dadd( 251.55, 123.511, 44.2126, 0.2746 ) }
    apic_8 { pt3dadd( 252.683, 123.404, 43.5296, 0.2746 ) }
    apic_8 { pt3dadd( 253.817, 123.297, 43.0424, 0.2746 ) }
    apic_8 { pt3dadd( 254.952, 123.216, 42.6824, 0.2746 ) }
    apic_8 { pt3dadd( 256.088, 123.145, 42.4043, 0.2746 ) }
    apic_8 { pt3dadd( 257.224, 123.075, 42.1694, 0.2746 ) }
    apic_8 { pt3dadd( 258.36, 123.005, 41.9496, 0.2746 ) }
    apic_8 { pt3dadd( 259.5, 122.956, 41.7581, 0.2746 ) }
    apic_8 { pt3dadd( 260.643, 122.933, 41.6086, 0.2746 ) }
    apic_8 { pt3dadd( 261.786, 122.91, 41.4985, 0.2744 ) }
    apic_8 { pt3dadd( 262.93, 122.887, 41.4246, 0.2744 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_8 { pt3dadd( 264.072, 122.934, 41.3773, 0.2742 ) }
    apic_8 { pt3dadd( 265.211, 123.022, 41.3501, 0.274 ) }
    apic_8 { pt3dadd( 266.352, 123.079, 41.3776, 0.2736 ) }
    apic_8 { pt3dadd( 267.463, 123.074, 41.522, 0.2728 ) }
    apic_8 { pt3dadd( 268.603, 123.042, 41.6833, 0.2712 ) }
    apic_8 { pt3dadd( 269.738, 122.986, 41.7754, 0.2684 ) }
    apic_8 { pt3dadd( 270.879, 122.916, 41.8368, 0.2626 ) }
    apic_8 { pt3dadd( 272.017, 122.823, 41.9174, 0.2542 ) }
    apic_8 { pt3dadd( 273.153, 122.729, 42.0064, 0.2288 ) }
    apic_8 { pt3dadd( 274.288, 122.632, 42.268, 0.2288 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 10/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 248.322, 195.298, 57.8735, 0.5832 ) }
    apic_7 { pt3dadd( 246.821, 195.365, 58.3218, 0.2766 ) }
    apic_7 { pt3dadd( 245.688, 195.346, 58.6037, 0.2782 ) }
    apic_7 { pt3dadd( 244.575, 195.089, 58.9086, 0.2814 ) }
    apic_7 { pt3dadd( 243.464, 194.821, 59.2346, 0.287 ) }
    apic_7 { pt3dadd( 242.371, 194.495, 59.5952, 0.2988 ) }
    apic_7 { pt3dadd( 241.581, 193.79, 60.097, 0.3142 ) }
    apic_7 { pt3dadd( 240.798, 193.079, 60.6917, 0.3736 ) }
    apic_7 { pt3dadd( 240.004, 192.351, 61.3259, 0.3342 ) }
    apic_7 { pt3dadd( 239.178, 191.568, 61.8755, 0.3004 ) }
    apic_7 { pt3dadd( 238.354, 190.786, 62.3398, 0.2754 ) }
    apic_7 { pt3dadd( 237.504, 190.026, 62.7152, 0.276 ) }
    apic_7 { pt3dadd( 236.577, 189.355, 62.991, 0.2774 ) }
    apic_7 { pt3dadd( 235.651, 188.683, 63.2058, 0.2796 ) }
    apic_7 { pt3dadd( 234.726, 188.013, 63.3962, 0.284 ) }
    apic_7 { pt3dadd( 233.649, 187.634, 63.6082, 0.2918 ) }
    apic_7 { pt3dadd( 232.571, 187.262, 63.8481, 0.3078 ) }
    apic_7 { pt3dadd( 231.492, 186.89, 64.1175, 0.3308 ) }
    apic_7 { pt3dadd( 230.424, 186.526, 64.4512, 0.4054 ) }
    apic_7 { pt3dadd( 229.378, 186.171, 64.8673, 0.3878 ) }
    apic_7 { pt3dadd( 228.331, 185.816, 65.3332, 0.4254 ) }
    apic_7 { pt3dadd( 227.284, 185.461, 65.8188, 0.3842 ) }
    apic_7 { pt3dadd( 226.232, 185.026, 66.2306, 0.3886 ) }
    apic_7 { pt3dadd( 225.179, 184.583, 66.5608, 0.4614 ) }
    apic_7 { pt3dadd( 224.129, 184.138, 66.8133, 0.5118 ) }
    apic_7 { pt3dadd( 223.078, 183.694, 67.0004, 0.557 ) }
    apic_7 { pt3dadd( 222.015, 183.269, 67.1101, 0.4188 ) }
    apic_7 { pt3dadd( 220.952, 182.848, 67.1628, 0.3256 ) }
    apic_7 { pt3dadd( 219.888, 182.427, 67.188, 0.2748 ) }
    apic_7 { pt3dadd( 218.826, 182.006, 67.2014, 0.2752 ) }
    apic_7 { pt3dadd( 217.762, 181.585, 67.2165, 0.2758 ) }
    apic_7 { pt3dadd( 216.699, 181.164, 67.2445, 0.2766 ) }
    apic_7 { pt3dadd( 215.625, 180.773, 67.3226, 0.2784 ) }
    apic_7 { pt3dadd( 214.546, 180.419, 67.4736, 0.2818 ) }
    apic_7 { pt3dadd( 213.466, 180.066, 67.6782, 0.288 ) }
    apic_7 { pt3dadd( 212.387, 179.712, 67.9176, 0.3004 ) }
    apic_7 { pt3dadd( 211.307, 179.359, 68.1744, 0.3172 ) }
    apic_7 { pt3dadd( 210.226, 179.008, 68.4306, 0.3792 ) }
    apic_7 { pt3dadd( 209.109, 178.767, 68.6468, 0.3448 ) }
    apic_7 { pt3dadd( 207.994, 178.526, 68.8204, 0.3198 ) }
    apic_7 { pt3dadd( 206.878, 178.284, 68.9576, 0.3136 ) }
    apic_7 { pt3dadd( 205.761, 178.042, 69.0642, 0.3362 ) }
    apic_7 { pt3dadd( 204.676, 177.682, 69.1093, 0.4406 ) }
    apic_7 { pt3dadd( 203.591, 177.321, 69.111, 0.3304 ) }
    apic_7 { pt3dadd( 202.506, 176.961, 69.0262, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_192, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_192 = new SectionList()
    soma_0 ModelViewParmSubset_192.append()
    axon_0 ModelViewParmSubset_192.append()
    axon_1 ModelViewParmSubset_192.append()

    // Group: {name=ModelViewParmSubset_193, groups=[], sections=[dend_21, apic_0, dend_18, dend_15, dend_10, dend_7, dend_0, dend_23, dend_22, apic_16, apic_1, dend_20, dend_19, dend_17, dend_16, dend_14, dend_11, dend_9, dend_8, dend_2, dend_1, apic_18, apic_17, apic_15, apic_2, dend_13, dend_12, dend_6, dend_3, apic_14, apic_3, dend_5, dend_4, apic_9, apic_4, apic_11, apic_10, apic_6, apic_5, apic_13, apic_12, apic_8, apic_7]}
    ModelViewParmSubset_193 = new SectionList()
    dend_21 ModelViewParmSubset_193.append()
    apic_0 ModelViewParmSubset_193.append()
    dend_18 ModelViewParmSubset_193.append()
    dend_15 ModelViewParmSubset_193.append()
    dend_10 ModelViewParmSubset_193.append()
    dend_7 ModelViewParmSubset_193.append()
    dend_0 ModelViewParmSubset_193.append()
    dend_23 ModelViewParmSubset_193.append()
    dend_22 ModelViewParmSubset_193.append()
    apic_16 ModelViewParmSubset_193.append()
    apic_1 ModelViewParmSubset_193.append()
    dend_20 ModelViewParmSubset_193.append()
    dend_19 ModelViewParmSubset_193.append()
    dend_17 ModelViewParmSubset_193.append()
    dend_16 ModelViewParmSubset_193.append()
    dend_14 ModelViewParmSubset_193.append()
    dend_11 ModelViewParmSubset_193.append()
    dend_9 ModelViewParmSubset_193.append()
    dend_8 ModelViewParmSubset_193.append()
    dend_2 ModelViewParmSubset_193.append()
    dend_1 ModelViewParmSubset_193.append()
    apic_18 ModelViewParmSubset_193.append()
    apic_17 ModelViewParmSubset_193.append()
    apic_15 ModelViewParmSubset_193.append()
    apic_2 ModelViewParmSubset_193.append()
    dend_13 ModelViewParmSubset_193.append()
    dend_12 ModelViewParmSubset_193.append()
    dend_6 ModelViewParmSubset_193.append()
    dend_3 ModelViewParmSubset_193.append()
    apic_14 ModelViewParmSubset_193.append()
    apic_3 ModelViewParmSubset_193.append()
    dend_5 ModelViewParmSubset_193.append()
    dend_4 ModelViewParmSubset_193.append()
    apic_9 ModelViewParmSubset_193.append()
    apic_4 ModelViewParmSubset_193.append()
    apic_11 ModelViewParmSubset_193.append()
    apic_10 ModelViewParmSubset_193.append()
    apic_6 ModelViewParmSubset_193.append()
    apic_5 ModelViewParmSubset_193.append()
    apic_13 ModelViewParmSubset_193.append()
    apic_12 ModelViewParmSubset_193.append()
    apic_8 ModelViewParmSubset_193.append()
    apic_7 ModelViewParmSubset_193.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_16, apic_1, apic_18, apic_17, apic_15, apic_2, apic_14, apic_3, apic_9, apic_4, apic_11, apic_10, apic_6, apic_5, apic_13, apic_12, apic_8, apic_7]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_16 apic.append()
    apic_1 apic.append()
    apic_18 apic.append()
    apic_17 apic.append()
    apic_15 apic.append()
    apic_2 apic.append()
    apic_14 apic.append()
    apic_3 apic.append()
    apic_9 apic.append()
    apic_4 apic.append()
    apic_11 apic.append()
    apic_10 apic.append()
    apic_6 apic.append()
    apic_5 apic.append()
    apic_13 apic.append()
    apic_12 apic.append()
    apic_8 apic.append()
    apic_7 apic.append()

    // Group: {name=dend, groups=[], sections=[dend_21, dend_18, dend_15, dend_10, dend_7, dend_0, dend_23, dend_22, dend_20, dend_19, dend_17, dend_16, dend_14, dend_11, dend_9, dend_8, dend_2, dend_1, dend_13, dend_12, dend_6, dend_3, dend_5, dend_4]}
    dend = new SectionList()
    dend_21 dend.append()
    dend_18 dend.append()
    dend_15 dend.append()
    dend_10 dend.append()
    dend_7 dend.append()
    dend_0 dend.append()
    dend_23 dend.append()
    dend_22 dend.append()
    dend_20 dend.append()
    dend_19 dend.append()
    dend_17 dend.append()
    dend_16 dend.append()
    dend_14 dend.append()
    dend_11 dend.append()
    dend_9 dend.append()
    dend_8 dend.append()
    dend_2 dend.append()
    dend_1 dend.append()
    dend_13 dend.append()
    dend_12 dend.append()
    dend_6 dend.append()
    dend_3 dend.append()
    dend_5 dend.append()
    dend_4 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_7353, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_7353 = new SectionList()
    soma_0 OneSecGrp_SectionRef_7353.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_3 all.append()
    dend_3 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    apic_5 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    apic_7 all.append()
    apic_7 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 2.0  // units: uF/cm2
    forsec apic cm = 2.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 9.016032E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 8.3863684E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.41741502  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 8.2311436E-4  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.041363504  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.0024803642  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.032078188  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.34350085  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 5.2595034E-4  // units: S cm-2
        e_pas_nml2 = -91.403564  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 5.0941715E-4  // units: S cm-2
        e_pas_nml2 = -91.403564  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 2.9638377E-5  // units: S cm-2
        e_pas_nml2 = -91.403564  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 3.3061715E-6  // units: S cm-2
        e_pas_nml2 = -91.403564  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 8.9465233E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0076925275  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_486509232
    forsec soma {
        insert CaDynamics_486509232
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_23 nseg = 5
    dend_22 nseg = 5
    dend_20 nseg = 7
    dend_19 nseg = 5
    dend_17 nseg = 3
    dend_16 nseg = 3
    dend_9 nseg = 5
    dend_1 nseg = 5
    dend_12 nseg = 3
    dend_6 nseg = 3
    apic_14 nseg = 3
    apic_3 nseg = 17
    dend_5 nseg = 5
    dend_4 nseg = 5
    apic_10 nseg = 5
    apic_5 nseg = 3
    apic_13 nseg = 3
    apic_8 nseg = 5
    apic_7 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_486509232


