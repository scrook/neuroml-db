// Cell: cACint209_L6_SBC_1994e395b2_0_0
/*
{
  "id" : "cACint209_L6_SBC_1994e395b2_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.488402, 10.6886, -0.10439, 2.1741", "0.446743, 9.60874, -0.0969525, 3.70718", "0.405084, 8.52883, -0.0895152, 5.34259", "0.363425, 7.44892, -0.0820778, 6.31081", "0.321766, 6.36901, -0.0746405, 7.2239", "0.280106, 5.2891, -0.0672032, 7.79497", "0.238447, 4.20919, -0.0597659, 8.16787", "0.196788, 3.12928, -0.0523285, 8.65603", "0.155129, 2.04937, -0.0448912, 9.27596", "0.11347, 0.969459, -0.0374539, 9.68183", "0.0718107, -0.110451, -0.0300165, 9.60108", "0.0301515, -1.19036, -0.0225792, 9.40911", "-0.0115077, -2.27027, -0.0151419, 8.85229", "-0.0531668, -3.35018, -0.00770454, 8.34531", "-0.094826, -4.43009, -2.67214E-4, 7.89073", "-0.136485, -5.51, 0.00717012, 7.34681", "-0.178144, -6.58991, 0.0146074, 6.74183", "-0.219803, -7.66982, 0.0220448, 6.06339", "-0.261463, -8.74973, 0.0294821, 5.33412", "-0.303122, -9.82964, 0.0369194, 3.6506", "-0.344781, -10.9096, 0.0443568, 2.18196" ]
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "1.87458, 3.14782, 11.4844, 0.81", "1.51522, 3.86509, 11.4844, 0.81", "1.11749, 4.65894, 11.4844, 0.81", "0.530345, 5.83084, 11.4844, 0.81", "0.0704797, 6.74871, 11.4844, 0.81", "-0.483931, 7.85528, 11.4844, 1.4", "-0.625743, 8.13833, 11.4844, 1.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999773444601353
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-1.37542, -9.94143, 0.224411, 4.05", "-1.37542, -9.94143, 0.224411, 4.05", "-1.82438, -11.486, 0.233427, 3.61", "-2.44675, -13.7454, 0.184988, 2.87", "-2.97313, -15.8462, 0.03012, 2.36", "-3.43414, -17.8903, -0.128628, 2.36", "-3.87326, -20.0388, -0.274645, 2.65", "-4.23072, -21.8739, -0.410398, 2.65", "-4.52714, -23.5516, -0.553597, 2.8", "-4.92082, -26.16, -0.809404, 2.43", "-5.2191, -28.4752, -1.06726, 2.28", "-5.48259, -30.9596, -1.3732, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999773444601353
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.565422, 10.6201, -2.89559, 3.17", "-0.565422, 10.6201, -2.89559, 3.17", "-1.71379, 11.8222, -2.9768, 2.8", "-2.83306, 12.9391, -3.05148, 2.8", "-3.84402, 13.9268, -3.11459, 2.8", "-5.13486, 15.2018, -3.18258, 2.8", "-6.11892, 16.2301, -3.22809, 2.58", "-6.80612, 16.9856, -3.25476, 2.58", "-7.38664, 17.6715, -3.27189, 2.36", "-7.9086, 18.4029, -3.27956, 1.92", "-8.55862, 19.677, -3.28119, 1.92", "-8.91953, 20.9586, -3.27097, 1.92", "-9.05157, 22.0948, -3.26407, 1.92", "-9.03124, 23.0701, -3.26166, 2.21", "-8.88667, 24.1071, -3.31761, 2.21", "-8.68049, 24.9693, -3.40816, 1.84", "-8.28397, 26.2197, -3.59762, 1.84", "-8.00319, 27.0255, -3.74406, 1.84", "-7.68245, 27.9293, -3.94863, 1.84", "-7.10075, 29.6798, -4.4218, 1.69", "-6.89588, 30.399, -4.64243, 1.69", "-6.63962, 31.4791, -5.05871, 1.69", "-6.4652, 32.4774, -5.51748, 1.84", "-6.35867, 33.329, -5.94918, 1.99", "-6.3057, 34.1578, -6.39064, 1.99", "-6.27315, 35.0932, -6.89471, 1.99", "-6.26006, 36.4849, -7.73107, 2.14", "-6.27318, 37.2189, -8.23292, 2.14", "-6.30266, 37.8743, -8.72581, 2.14", "-6.34761, 38.5268, -9.21712, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999773444601353
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.344781, -10.9096, 0.0443568, 0.553219", "-0.922998, -25.8985, 0.0443568, 0.553219", "-1.50121, -40.8873, 0.0443568, 0.553219" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-0.625743, 8.13833, 11.4844, 0.81", "-2.14489, 9.99842, 10.3546, 0.81", "-2.88533, 10.9274, 9.86734, 0.81", "-3.46812, 11.6383, 9.54281, 1.03", "-4.02481, 12.2872, 9.28165, 1.03", "-4.73873, 13.0763, 8.99948, 0.59", "-5.47022, 13.8424, 8.76184, 0.37", "-6.15439, 14.5342, 8.67915, 0.37", "-6.78559, 15.133, 8.61874, 0.59", "-7.3071, 15.619, 8.56652, 0.59", "-7.8042, 16.0573, 8.51754, 0.66", "-8.50589, 16.6506, 8.39847, 0.59", "-9.22126, 17.2196, 8.18771, 0.44", "-10.1246, 17.9363, 7.74477, 0.44", "-10.5545, 18.2957, 7.47093, 0.96", "-11.1365, 18.8104, 7.05419, 1.33", "-11.6438, 19.2958, 6.6626, 1.55", "-12.49, 20.1784, 5.97403, 1.03", "-13.6121, 21.5033, 5.06672, 0.52", "-13.8748, 21.8788, 4.85539, 0.88", "-14.3308, 22.669, 4.48721, 0.52", "-14.6464, 23.377, 4.23289, 0.52", "-14.8649, 24.0025, 4.06688, 0.52", "-15.1942, 25.1264, 3.82611, 0.88", "-15.5281, 26.2969, 3.5901, 0.74", "-15.7574, 26.9676, 3.44149, 0.59", "-16.3617, 28.3454, 3.09891, 0.59", "-16.8585, 29.17, 2.88268, 1.25", "-17.5285, 29.9724, 2.65428, 1.4", "-18.1527, 30.4888, 2.50606, 1.18", "-18.9044, 30.9634, 2.39285, 0.88", "-19.8541, 31.4733, 2.29002, 0.66", "-20.5572, 31.8018, 2.24634, 0.66", "-21.0791, 32.056, 2.23376, 0.66", "-21.8609, 32.5466, 2.26266, 0.59", "-22.3818, 33.0451, 2.31148, 0.59", "-22.8083, 33.7225, 2.39447, 0.74", "-22.9535, 34.059, 2.44815, 0.88", "-23.1218, 34.5233, 2.54337, 0.88", "-23.3245, 35.1078, 2.69001, 1.03", "-23.5934, 35.7918, 2.89288, 0.66", "-24.067, 36.8193, 3.24543, 0.44", "-24.4626, 37.6144, 3.54313, 0.44", "-24.8423, 38.3735, 3.75966, 0.59", "-25.0417, 38.7903, 3.82743, 0.96", "-25.4357, 39.7593, 3.86534, 1.18", "-25.5882, 40.2864, 3.82071, 1.18", "-25.7384, 41.1637, 3.65337, 0.74", "-25.878, 42.9276, 3.25552, 0.37", "-25.9171, 43.8151, 3.0472, 0.29", "-25.9499, 44.7315, 2.84454, 0.29", "-25.9888, 45.6926, 2.64563, 0.37", "-26.0625, 46.4058, 2.52827, 0.37", "-26.2852, 47.4542, 2.44746, 0.29", "-26.5409, 48.1862, 2.49956, 0.37", "-26.8007, 48.7395, 2.58126, 0.74", "-27.0115, 49.1102, 2.65072, 0.74", "-27.3156, 49.6008, 2.73102, 0.44", "-27.7612, 50.4006, 2.81342, 0.66", "-28.1507, 51.1937, 2.81113, 1.25", "-28.3718, 51.6808, 2.78226, 1.47", "-28.6209, 52.2223, 2.73089, 1.47", "-29.0819, 53.1784, 2.61358, 1.11", "-29.7003, 54.417, 2.42952, 0.29", "-30.1637, 55.3107, 2.28154, 0.66", "-30.4346, 55.8076, 2.18779, 0.52", "-30.9014, 56.5935, 2.00679, 0.52", "-31.5128, 57.5238, 1.78671, 0.66", "-32.2602, 58.5812, 1.56063, 0.88", "-32.6516, 59.0845, 1.45879, 1.47", "-33.1423, 59.7225, 1.35345, 1.47", "-33.7074, 60.4755, 1.24064, 0.74", "-34.2652, 61.1799, 1.12986, 0.74", "-34.7896, 61.7712, 1.04827, 0.74", "-35.4006, 62.3809, 0.986353, 0.37", "-36.1345, 63.077, 0.947962, 0.37", "-36.7256, 63.6313, 0.938575, 0.29", "-37.2729, 64.1634, 0.929514, 0.29", "-37.9355, 64.834, 0.883405, 0.29", "-38.3167, 65.2496, 0.837183, 0.29", "-38.854, 65.9515, 0.680872, 0.88", "-39.1554, 66.4398, 0.532361, 1.47", "-39.393, 66.9536, 0.354494, 1.47", "-39.5524, 67.4125, 0.200295, 1.47", "-39.7257, 68.0921, -0.027552, 1.18", "-39.9877, 69.4174, -0.444414, 0.37", "-40.1046, 70.1457, -0.637594, 0.37", "-40.2388, 70.8718, -0.767188, 0.37", "-40.3598, 71.3831, -0.818019, 0.96", "-40.5431, 72.0153, -0.833679, 1.03", "-40.6656, 72.3678, -0.805371, 1.03", "-41.0399, 73.3128, -0.667973, 0.37", "-41.4433, 74.2337, -0.579624, 0.37", "-41.6812, 74.7573, -0.557756, 0.29", "-41.9595, 75.3469, -0.643686, 0.29", "-42.3724, 76.2234, -0.880759, 0.29", "-42.6457, 76.8639, -1.12529, 0.29", "-42.9997, 77.744, -1.53063, 1.18", "-43.1565, 78.1921, -1.75138, 1.47", "-43.7513, 80.1503, -2.8091, 0.22", "-43.8093, 80.3621, -2.93429, 0.44", "-44.0012, 81.1902, -3.44855, 0.66", "-44.1441, 81.933, -3.88865, 0.22", "-44.2633, 82.6565, -4.29436, 0.22", "-44.4663, 83.9421, -4.98925, 0.88", "-44.5664, 84.624, -5.32796, 0.88", "-44.6812, 85.2703, -5.66586, 0.88", "-44.9258, 86.3685, -6.29284, 0.37", "-45.1435, 87.131, -6.7832, 0.37", "-45.2731, 87.4507, -7.00533, 0.88", "-45.4951, 87.8762, -7.29631, 0.88", "-45.8972, 88.5209, -7.77589, 0.52", "-46.292, 89.0599, -8.21559, 0.29", "-46.7592, 89.6445, -8.72426, 0.29", "-47.2973, 90.3082, -9.28164, 1.11", "-47.6163, 90.7566, -9.65206, 1.33", "-47.9641, 91.2932, -10.101, 1.55", "-48.2866, 91.8261, -10.5528, 1.55", "-48.7385, 92.6079, -11.2287, 0.52", "-49.1644, 93.3428, -11.8619, 0.44", "-49.8901, 94.531, -12.8542, 1.47", "-50.2451, 95.1048, -13.2961, 1.47", "-51.0655, 96.4344, -14.2034, 0.44", "-51.509, 97.1523, -14.6636, 0.44", "-52.0607, 98.0648, -15.2233, 0.44", "-52.5873, 98.9628, -15.7466, 0.37", "-53.0838, 99.8162, -16.1851, 0.37", "-53.8037, 101.235, -16.7825, 1.47", "-54.0288, 101.801, -16.9548, 1.77", "-54.4979, 103.28, -17.2814, 0.29", "-54.6816, 104.004, -17.3963, 1.03", "-54.7707, 104.431, -17.4337, 1.03", "-55.0541, 105.944, -17.4397, 0.66", "-55.3798, 107.793, -17.2699, 0.29", "-55.5511, 108.725, -17.1076, 1.03", "-55.6278, 109.111, -17.0071, 1.25", "-55.8612, 110.104, -16.7186, 0.22", "-55.9976, 110.573, -16.5831, 0.44", "-56.3093, 111.433, -16.3435, 0.22", "-56.5841, 112.097, -16.126, 0.52", "-56.7936, 112.587, -15.9599, 0.52", "-57.2935, 113.83, -15.5413, 0.22", "-57.5404, 114.508, -15.3191, 0.29", "-57.7713, 115.206, -15.0983, 0.29", "-58.2122, 116.612, -14.6722, 1.11", "-58.3494, 117.085, -14.5495, 1.33", "-58.5705, 117.972, -14.3446, 0.29", "-58.749, 118.862, -14.1584, 0.29", "-58.8069, 119.22, -14.0945, 0.44", "-58.9478, 120.22, -13.9582, 0.22", "-59.0925, 121.245, -13.8603, 0.66", "-59.1486, 121.56, -13.831, 1.18", "-59.2565, 122.005, -13.7913, 1.18", "-59.3454, 122.359, -13.7602, 0.74", "-59.6662, 123.681, -13.6489, 0.22", "-59.7862, 124.201, -13.6108, 0.66", "-60.0299, 125.087, -13.524, 0.22", "-60.1693, 125.519, -13.4745, 0.52" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-0.625743, 8.13833, 11.4844, 0.44", "-0.471567, 9.44323, 10.6076, 0.44", "-0.418436, 10.1659, 10.1333, 0.44", "-0.360624, 11.0433, 9.57585, 0.96", "-0.304201, 11.6186, 9.21718, 0.96", "-0.14386, 13.2096, 8.35736, 0.52", "-0.097628, 13.7971, 8.10383, 0.52", "-0.0869376, 14.3394, 7.89498, 0.66", "-0.148183, 15.0854, 7.74372, 0.37", "-0.215018, 15.6542, 7.79248, 0.37", "-0.290145, 16.819, 8.049, 0.37", "-0.30348, 17.9167, 8.35072, 0.59", "-0.293335, 18.5502, 8.49879, 0.81", "-0.275463, 19.1751, 8.62754, 0.81", "-0.242224, 20.8106, 8.98161, 0.29", "-0.227759, 22.0196, 9.18524, 0.29", "-0.19692, 22.9845, 9.30287, 0.29", "-0.137309, 23.7813, 9.36652, 0.29", "-0.0624358, 24.5089, 9.41555, 0.88", "0.0306527, 25.4386, 9.45605, 0.88", "0.00774544, 26.1857, 9.50196, 0.52", "-0.140845, 26.964, 9.68156, 0.37" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-5.48259, -30.9596, -1.3732, 1.77", "-5.15179, -32.337, -1.48558, 1.77", "-4.95617, -33.0248, -1.50128, 1.77", "-4.71137, -33.7681, -1.70427, 1.77", "-4.3766, -34.5624, -2.10395, 1.77", "-3.9902, -35.4792, -2.56527, 1.92", "-3.69438, -36.1811, -2.91844, 2.14", "-3.238, -37.065, -3.43897, 2.36", "-1.88489, -39.4346, -5.28791, 1.77", "-1.38549, -40.1991, -6.13842, 1.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-5.48259, -30.9596, -1.3732, 0.81", "-4.98533, -31.866, -0.709779, 0.81", "-4.07223, -33.1144, 0.208105, 0.66", "-3.65587, -33.5418, 0.540159, 0.88", "-2.93015, -34.1519, 1.01565, 0.59", "-2.15199, -34.7121, 1.41488, 0.88", "-1.26129, -35.278, 1.76157, 1.18", "-0.468495, -35.6796, 1.89207, 0.81", "0.513803, -36.0643, 1.93068, 0.66", "1.20318, -36.3052, 1.92939, 0.59", "2.16486, -36.6223, 1.90027, 0.88", "3.03065, -36.912, 1.85294, 0.74", "3.93975, -37.2564, 1.78496, 0.59", "4.88056, -37.654, 1.70467, 0.74", "5.70926, -38.0428, 1.64421, 0.74", "6.20649, -38.2995, 1.62261, 0.88", "6.74614, -38.6172, 1.62085, 0.88", "7.4264, -39.0773, 1.631, 0.66", "8.0992, -39.6304, 1.62621, 0.66", "8.49022, -40.0557, 1.59588, 0.52", "8.89982, -40.6616, 1.53978, 0.52", "9.10411, -41.1224, 1.51585, 0.96", "9.20549, -41.4493, 1.52228, 1.18", "9.39013, -42.1732, 1.57962, 1.03", "9.48874, -42.5596, 1.66164, 1.18", "9.65794, -43.0768, 1.85343, 1.03", "10.0028, -43.8557, 2.28361, 0.37", "10.3535, -44.4784, 2.74503, 0.74", "10.5625, -44.8135, 3.05582, 0.88", "11.0278, -45.5362, 3.82559, 0.59", "11.263, -45.9157, 4.24339, 0.59", "11.5284, -46.3835, 4.74699, 0.88", "11.8329, -46.999, 5.35968, 0.74", "12.0802, -47.6026, 5.89814, 1.25", "12.2421, -48.0068, 6.21169, 1.25", "12.454, -48.5007, 6.5256, 0.81", "12.6755, -49.0156, 6.80714, 0.59", "12.9512, -49.6219, 7.09141, 0.59", "13.2174, -50.1263, 7.27785, 0.59", "13.7168, -50.9096, 7.53784, 0.44", "14.0711, -51.3728, 7.70907, 0.52", "14.458, -51.7983, 7.88515, 0.44", "14.9358, -52.2688, 8.09393, 0.44", "15.3192, -52.6409, 8.26123, 0.52", "15.7871, -53.1315, 8.48253, 0.66", "16.2067, -53.6083, 8.67562, 0.66", "16.7344, -54.2872, 8.93371, 0.52", "16.9652, -54.617, 9.07804, 0.81", "17.2171, -55.0513, 9.28471, 0.81", "17.4669, -55.5723, 9.53969, 0.66", "17.8134, -56.4271, 9.94067, 0.52", "18.1042, -57.2617, 10.3232, 0.52", "18.3426, -58.0376, 10.6897, 1.18", "18.4608, -58.4249, 10.8821, 1.4", "18.6653, -59.0465, 11.2157, 1.25", "18.9086, -59.7561, 11.6509, 1.03", "18.9917, -59.9895, 11.8223, 1.03" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-6.34761, 38.5268, -9.21712, 1.33", "-7.0241, 39.6312, -9.37899, 1.33", "-7.70423, 40.8625, -9.51132, 1.33", "-8.34367, 42.0975, -9.55593, 1.33", "-9.03171, 43.5328, -9.50923, 1.33", "-9.73853, 45.1466, -9.3792, 1.47", "-10.2039, 46.3359, -9.23841, 1.69", "-10.5052, 47.3446, -9.05546, 1.77", "-10.777, 48.5042, -8.77745, 1.99", "-10.9956, 49.6706, -8.47504, 2.14", "-11.2271, 51.0751, -8.10518, 1.84", "-11.5126, 52.7294, -7.69902, 1.84", "-11.8048, 54.1664, -7.41233, 1.84", "-12.0363, 55.1437, -7.28686, 1.92", "-12.3643, 56.3631, -7.21269, 1.92", "-12.7075, 57.5342, -7.17916, 1.92", "-13.096, 58.7227, -7.17758, 1.62", "-13.6347, 60.1636, -7.23167, 1.62", "-14.1911, 61.5025, -7.32717, 1.77", "-14.6996, 62.6691, -7.44536, 2.14" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-6.34761, 38.5268, -9.21712, 0.66", "-5.20024, 40.6385, -9.4234, 0.66", "-4.47557, 41.7706, -9.43547, 0.66", "-4.18441, 42.1794, -9.40006, 0.96", "-3.61526, 42.946, -9.25755, 0.96", "-3.18491, 43.5641, -9.0397, 0.74", "-2.87612, 44.0588, -8.83427, 0.66", "-2.37755, 44.8392, -8.38064, 0.66", "-1.94849, 45.4956, -7.99924, 0.66", "-1.52274, 46.1161, -7.66928, 0.66", "-0.336161, 47.6689, -7.0001, 0.88", "0.518033, 48.658, -6.69257, 0.29", "1.25832, 49.3857, -6.59765, 0.29", "2.33434, 50.1422, -6.79503, 1.18", "2.8601, 50.4144, -7.00697, 1.62", "4.19381, 50.9694, -7.70078, 0.81", "4.99212, 51.2463, -8.178, 0.81", "5.76877, 51.4629, -8.66955, 1.03", "6.95622, 51.7718, -9.47488, 0.44", "7.96246, 52.0382, -10.1973, 0.44", "8.6055, 52.2408, -10.649, 1.18", "9.10703, 52.4499, -10.96, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-1.50121, -40.8873, 0.0443568, 0.15", "-2.07943, -55.8762, 0.0443568, 0.15", "-2.65765, -70.865, 0.0443568, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-1.38549, -40.1991, -6.13842, 1.03", "-3.42655, -42.4535, -9.55287, 1.03", "-5.35897, -44.2193, -11.7774, 0.81", "-6.34559, -45.0, -12.6552, 0.81", "-7.53914, -45.7843, -13.5231, 0.81", "-8.58144, -46.3625, -14.1957, 1.11", "-9.737, -46.8846, -14.8316, 1.11", "-11.3007, -47.2844, -15.2382, 1.4", "-12.3752, -47.4299, -15.4112, 1.4", "-14.2296, -47.4702, -15.7962, 1.11", "-15.2225, -47.3141, -16.0669, 1.33", "-17.0297, -46.665, -16.6761, 1.03", "-18.1561, -46.0591, -17.3723, 0.81", "-18.8709, -45.6403, -17.9332, 0.81", "-20.5255, -44.7874, -19.3924, 0.81", "-22.2476, -44.0918, -21.0536, 1.03", "-23.5717, -43.7396, -22.3818, 1.33", "-27.9102, -43.3848, -26.8956, 1.03", "-29.3718, -43.5878, -28.35, 1.03", "-31.207, -44.2452, -29.9586, 1.33", "-32.6306, -45.0432, -30.9888, 1.33", "-33.7968, -45.8824, -31.6705, 1.47", "-35.6652, -47.3789, -32.3856, 1.11", "-37.1518, -48.574, -32.5945, 0.88", "-38.2507, -49.3127, -32.6835, 1.55", "-39.4431, -49.9003, -32.7452, 1.84", "-40.7497, -50.2916, -32.808, 1.99", "-43.0342, -50.4996, -32.8791, 1.18", "-44.57, -50.3004, -32.884, 0.88", "-46.1379, -49.7665, -32.8753, 1.25", "-47.351, -49.0439, -32.8706, 1.47", "-48.7854, -47.8834, -33.0329, 1.18", "-50.3818, -46.6702, -33.8799, 0.96", "-50.9291, -46.3833, -34.4855, 1.18", "-51.4461, -46.2211, -35.1759, 1.18", "-52.555, -46.0219, -36.6377, 0.74", "-54.801, -45.8613, -39.453, 0.74", "-58.8267, -45.8452, -44.6824, 1.47", "-61.2071, -45.9667, -47.8481, 1.99", "-63.2959, -46.1814, -50.6418, 1.47", "-64.5102, -46.377, -52.2681, 1.62", "-66.2655, -46.7845, -54.6203, 1.33" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-1.38549, -40.1991, -6.13842, 0.88", "-0.469464, -40.7877, -6.83143, 0.88", "0.190279, -41.3282, -7.46382, 1.03", "0.759681, -41.982, -8.15392, 1.03", "1.16909, -42.7186, -8.84794, 0.88", "1.48513, -43.6106, -9.60458, 0.81", "1.70496, -44.7078, -10.5136, 1.03", "1.641, -45.3348, -11.0128, 1.33", "1.2822, -46.2409, -11.8195, 0.88", "0.671406, -47.1687, -12.7458, 0.66", "0.287267, -47.6289, -13.311, 0.96", "-0.148721, -48.1272, -14.146, 0.66", "-0.420181, -48.5022, -14.9881, 0.74", "-0.623646, -49.1772, -17.0016, 0.88", "-0.524906, -49.3815, -17.7573, 1.11", "0.0390762, -49.9135, -19.8037, 0.88", "0.736229, -50.5364, -22.0346, 0.74", "1.28783, -51.0688, -23.6084, 0.74", "1.72298, -51.5476, -24.8152, 0.74", "2.11003, -52.0511, -25.8827, 0.66", "2.76709, -53.1036, -27.8074, 0.96", "3.19886, -53.9832, -29.113, 1.25", "3.58938, -54.9174, -30.3046, 0.81", "4.04105, -56.0565, -31.6671, 0.74", "4.36936, -56.7588, -32.465, 0.88", "4.96021, -57.6536, -33.3469, 0.59", "5.83309, -58.5103, -34.0082, 0.59", "6.7338, -59.1799, -34.4193, 1.18", "7.20985, -59.4631, -34.5124, 1.62", "7.73955, -59.7344, -34.5224, 1.84", "9.20123, -60.3883, -34.4252, 1.18", "10.3274, -60.8309, -34.3902, 0.81", "10.7955, -61.0015, -34.4175, 0.96", "12.0017, -61.4424, -34.7131, 0.59", "12.4152, -61.6076, -34.8978, 0.66", "13.1579, -61.9483, -35.3657, 0.52", "14.599, -62.7856, -36.6783, 1.18", "15.1218, -63.1808, -37.2715, 1.25", "15.9943, -63.9556, -38.6214, 0.88", "16.349, -64.2888, -39.2602, 0.88", "16.8286, -64.7268, -40.1401, 0.66", "17.7353, -65.4424, -41.8183, 1.47", "18.1563, -65.709, -42.5818, 1.69", "20.154, -66.6992, -46.128, 0.81", "20.6028, -66.8738, -46.8819, 0.81", "21.1773, -67.0513, -47.7743, 0.66", "22.5755, -67.3698, -49.6924, 1.03", "23.0755, -67.4499, -50.2464, 1.03", "23.7791, -67.5835, -50.8527, 1.33", "25.0085, -67.9507, -51.4783, 0.88", "25.935, -68.3528, -51.8373, 0.88", "26.6793, -68.7894, -52.0054, 0.74", "26.9824, -68.998, -52.0279, 0.88", "27.8961, -69.6523, -52.0392, 0.44", "28.6771, -70.1988, -52.0074, 1.77", "29.1068, -70.504, -51.9666, 2.06", "29.6052, -70.9339, -51.8864, 2.06" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-14.6996, 62.6691, -7.44536, 1.25", "-13.9648, 63.9562, -8.13166, 1.25", "-13.6677, 64.4936, -8.34682, 1.4", "-13.2176, 65.4536, -8.64296, 1.11", "-12.734, 66.6954, -8.94864, 1.33", "-12.4529, 67.5713, -9.12973, 1.25", "-12.1157, 68.7817, -9.35436, 1.25", "-11.7793, 70.1431, -9.53065, 1.47", "-11.4833, 71.4443, -9.65471, 1.69", "-11.2801, 72.5914, -9.69939, 1.84", "-11.1799, 73.5804, -9.69301, 2.14", "-11.1697, 74.5518, -9.6931, 2.14" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-14.6996, 62.6691, -7.44536, 0.96", "-15.5581, 63.7668, -7.2187, 0.96", "-16.1422, 64.4963, -7.18884, 0.81", "-17.2311, 65.7684, -7.33739, 0.66", "-17.8317, 66.4022, -7.52651, 0.59", "-18.5592, 67.0968, -7.84256, 0.59", "-19.4799, 67.8937, -8.34403, 0.74", "-20.2218, 68.4167, -8.91458, 0.74", "-20.8117, 68.7763, -9.47413, 1.11", "-21.5115, 69.1586, -10.2212, 0.74", "-22.0034, 69.4288, -10.755, 1.25", "-22.7343, 69.887, -11.5425, 0.96", "-23.5466, 70.5187, -12.3157, 0.44", "-23.8393, 70.8413, -12.5801, 0.44", "-24.1179, 71.3017, -12.823, 0.74", "-24.4019, 71.9985, -13.0406, 0.74", "-24.6926, 72.8048, -13.1204, 0.74", "-25.0576, 73.7581, -12.9741, 0.59", "-25.3575, 74.4493, -12.7053, 0.59", "-25.6887, 75.1336, -12.2882, 0.88", "-25.9852, 75.7491, -11.8429, 0.66", "-26.7817, 77.1736, -10.5595, 0.66", "-27.4149, 78.1719, -9.54891, 0.96", "-27.7708, 78.685, -9.00354, 0.66", "-28.2592, 79.3213, -8.30933, 0.52", "-28.8773, 80.0648, -7.52089, 0.88", "-29.7605, 81.1266, -6.55611, 0.59", "-30.2015, 81.6899, -6.19289, 0.59", "-30.6163, 82.2011, -5.94669, 0.59", "-31.384, 83.0603, -5.60866, 0.59", "-32.1096, 83.8021, -5.35963, 1.11", "-33.076, 84.7369, -5.08158, 0.59", "-33.6653, 85.3206, -4.97133, 0.59", "-34.3719, 85.9916, -4.85604, 0.81", "-35.0736, 86.6579, -4.76442, 0.81", "-35.7943, 87.3577, -4.72429, 0.96", "-36.4338, 87.9644, -4.71847, 1.03", "-37.063, 88.5055, -4.73946, 1.33", "-37.7288, 89.0271, -4.75041, 1.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "9.10703, 52.4499, -10.96, 0.88", "10.0314, 52.7, -11.1913, 0.88", "10.7791, 52.8339, -11.3819, 0.66", "11.3388, 52.8991, -11.5273, 1.03", "11.9781, 52.9738, -11.7161, 1.18", "12.5307, 53.0642, -11.9103, 1.18", "12.9514, 53.1591, -12.0824, 0.81", "13.4719, 53.3084, -12.3485, 0.44", "14.0423, 53.5507, -12.7015, 0.44", "14.6634, 53.9705, -13.1536, 0.44", "15.2253, 54.5027, -13.5998, 0.59", "15.6064, 54.9268, -13.9027, 0.81", "15.9051, 55.2658, -14.1263, 0.81", "16.2809, 55.6838, -14.3819, 0.66", "16.7603, 56.1487, -14.6568, 0.66", "17.3694, 56.5974, -14.9222, 0.66", "17.9213, 56.8725, -15.1095, 0.88", "18.5268, 57.072, -15.2886, 0.52", "18.9732, 57.1567, -15.4139, 0.96", "19.5307, 57.175, -15.5707, 0.96", "19.9658, 57.1149, -15.6933, 1.11", "20.5207, 56.9269, -15.8682, 1.18", "20.9205, 56.7142, -16.0051, 1.18", "21.3866, 56.364, -16.1995, 0.66", "22.009, 55.747, -16.5268, 0.96", "22.577, 55.0092, -16.9059, 0.44", "23.1798, 54.0481, -17.4383, 0.37", "23.4882, 53.5018, -17.7731, 1.18", "23.8164, 52.9006, -18.1828, 1.33", "24.06, 52.4455, -18.5291, 1.33", "24.4454, 51.6755, -19.2171, 0.59", "24.7684, 50.9474, -19.9698, 0.37", "24.9557, 50.4483, -20.5344, 0.37", "25.0629, 50.0569, -21.0219, 0.37", "25.1459, 49.6458, -21.5574, 0.37", "25.2186, 48.9807, -22.4584, 0.52", "25.2369, 48.4319, -23.2193, 0.52", "25.2298, 47.9136, -23.8924, 0.52", "25.2238, 46.8039, -25.1411, 0.96", "25.2602, 46.0695, -25.8653, 1.47", "25.3535, 45.4568, -26.411, 1.69", "25.4742, 45.036, -26.7497, 1.92", "25.69, 44.5136, -27.1433, 1.92", "26.3169, 43.3422, -27.9541, 0.74", "26.8815, 42.4707, -28.4701, 0.37", "27.2951, 41.9305, -28.777, 0.88", "27.5998, 41.6088, -28.9635, 1.11", "27.8834, 41.3547, -29.1245, 1.11", "28.2792, 41.0405, -29.3382, 1.33", "28.5208, 40.8597, -29.4626, 1.33", "28.9323, 40.4767, -29.6518, 0.81", "29.2503, 39.9752, -29.8255, 0.44", "29.5018, 39.366, -30.0355, 0.37", "29.7499, 38.6083, -30.3318, 0.37", "29.8877, 38.139, -30.5423, 1.18", "30.0359, 37.6151, -30.8056, 1.4", "30.3477, 36.5236, -31.4555, 0.29", "30.6882, 35.5605, -32.1889, 0.66", "31.0215, 34.855, -32.8752, 1.11", "31.2683, 34.4066, -33.3867, 1.62", "31.3807, 34.2018, -33.6315, 1.84", "31.67, 33.6806, -34.2614, 1.84", "32.0547, 32.9189, -35.1797, 0.81", "32.3473, 32.267, -35.909, 0.44", "32.5423, 31.7941, -36.39, 0.44", "32.8609, 31.0591, -37.0689, 0.44", "33.093, 30.5675, -37.4803, 0.59", "33.6855, 29.4924, -38.2765, 0.52", "34.0386, 28.9656, -38.6332, 0.37", "34.3855, 28.5715, -38.9459, 0.96", "34.896, 28.0855, -39.4037, 1.62", "35.1351, 27.875, -39.6137, 1.99", "35.5933, 27.4495, -40.0238, 1.99", "35.8831, 27.1674, -40.2688, 1.47", "36.92, 26.0337, -41.1879, 0.52", "37.5468, 25.339, -41.7423, 0.52", "38.0343, 24.806, -42.1627, 0.88", "38.5416, 24.283, -42.5736, 0.59", "38.9855, 23.8495, -42.9001, 0.37", "39.363, 23.5084, -43.1188, 0.37", "39.9167, 23.0696, -43.3046, 0.74", "40.262, 22.8054, -43.4213, 0.74", "40.5576, 22.5547, -43.558, 0.37", "40.7463, 22.3549, -43.6814, 0.37", "41.1386, 21.8307, -44.031, 0.81", "41.2781, 21.5771, -44.2033, 1.03", "41.7484, 20.5037, -44.9089, 0.37", "42.0413, 19.7473, -45.4042, 1.18", "42.2529, 19.1498, -45.7939, 1.47", "42.5184, 18.4332, -46.2688, 0.66", "42.8853, 17.5855, -46.8821, 0.29", "43.0689, 17.2419, -47.137, 1.25", "43.2915, 16.8976, -47.4111, 1.55", "43.5404, 16.583, -47.6948, 1.55", "44.2613, 15.8568, -48.4392, 0.44", "45.1354, 15.1677, -49.2764, 1.18", "45.8252, 14.7172, -49.895, 1.84", "46.654, 14.2307, -50.6196, 2.06", "47.6406, 13.7107, -51.4878, 0.29", "48.2369, 13.4266, -52.022, 0.29", "48.8998, 13.1081, -52.6205, 1.18", "49.4442, 12.8057, -53.1002, 0.88", "49.7982, 12.5968, -53.4022, 0.52", "50.5582, 12.1301, -53.9924, 0.52", "51.0073, 11.826, -54.3444, 0.52", "51.6659, 11.3372, -54.8496, 0.29", "52.2056, 10.9166, -55.2265, 0.29", "52.7224, 10.5207, -55.5689, 0.66", "53.1954, 10.1425, -55.861, 0.81", "53.3866, 9.98149, -55.9647, 0.81", "54.1218, 9.35411, -56.3759, 0.29", "54.6721, 8.9032, -56.6973, 0.96", "55.1712, 8.50446, -57.0169, 1.03", "55.7423, 8.03234, -57.3987, 0.29", "56.0837, 7.75413, -57.6262, 0.29", "56.6266, 7.34145, -57.9754, 0.96", "57.1853, 6.95727, -58.3057, 0.96", "57.9486, 6.49625, -58.7252, 0.37", "58.7239, 6.08884, -59.0983, 0.66", "59.059, 5.91712, -59.2505, 0.96", "59.8739, 5.47778, -59.5972, 0.29", "60.7205, 5.0032, -59.9237, 1.03", "61.0247, 4.83537, -60.0386, 1.33", "61.8193, 4.43076, -60.3191, 0.37", "62.5795, 4.11834, -60.599, 0.37", "63.2353, 3.89635, -60.8716, 0.37", "63.6442, 3.78734, -61.0591, 0.74", "64.2995, 3.63151, -61.3787, 0.74", "64.7805, 3.51447, -61.6228, 0.37", "65.3999, 3.38109, -61.9451, 0.29", "66.0464, 3.28387, -62.2743, 0.29", "66.57, 3.22754, -62.5346, 0.88", "67.1334, 3.1766, -62.8041, 1.25", "67.7957, 3.12224, -63.116, 1.18", "68.6724, 3.0632, -63.5281, 0.29", "69.3064, 3.04746, -63.8286, 0.74", "69.84, 3.0505, -64.0788, 0.74", "70.4575, 3.06404, -64.3991, 0.37", "71.2107, 3.081, -64.8355, 0.96", "71.6477, 3.07784, -65.1026, 1.33", "72.0798, 3.03569, -65.388, 1.33", "72.7753, 2.88757, -65.8561, 0.37", "73.5091, 2.65667, -66.353, 0.44", "74.0155, 2.46305, -66.6906, 0.44", "74.5819, 2.23469, -67.0429, 0.44", "75.4031, 1.90147, -67.5215, 0.96", "75.935, 1.67161, -67.8053, 1.03", "76.3136, 1.49722, -67.9861, 0.81", "76.8182, 1.24242, -68.1997, 0.52", "77.4176, 0.915719, -68.437, 0.29", "77.7368, 0.740442, -68.5698, 0.29", "78.3115, 0.448708, -68.7558, 0.88", "78.8616, 0.178284, -68.899, 1.25", "79.0866, 0.0583718, -68.9469, 1.25", "79.8505, -0.421484, -69.0896, 0.29", "80.388, -0.828626, -69.1877, 0.29", "81.293, -1.58239, -69.3518, 0.29", "81.6072, -1.84839, -69.4145, 0.29", "82.2679, -2.39669, -69.5726, 0.96", "82.7753, -2.78053, -69.7194, 0.96", "83.3393, -3.16358, -69.9238, 0.44", "83.7129, -3.38711, -70.0868, 0.37", "84.1508, -3.60443, -70.3365, 0.81", "84.8016, -3.83897, -70.7554, 0.29", "85.3218, -4.00164, -71.1277, 0.29", "85.7857, -4.15847, -71.4776, 0.74", "86.3201, -4.37882, -71.9107, 0.96", "86.8666, -4.66358, -72.3806, 0.96", "87.5967, -5.11733, -73.0149, 0.44", "88.1804, -5.54728, -73.5561, 0.29", "88.6551, -5.95901, -74.0174, 0.29", "89.0923, -6.38281, -74.4354, 0.96", "89.3316, -6.62665, -74.6546, 1.11", "89.754, -7.03899, -75.0, 1.18", "90.4621, -7.7046, -75.5815, 0.37", "90.8636, -8.03665, -75.9232, 0.37", "91.4531, -8.48575, -76.4551, 0.29", "92.0201, -8.88119, -76.9808, 0.29", "92.5658, -9.23309, -77.4969, 0.96", "93.4196, -9.72548, -78.2945, 0.44", "93.8337, -9.92844, -78.6528, 1.03", "94.1664, -10.0714, -78.9233, 1.03", "94.8991, -10.333, -79.4973, 0.29", "95.2813, -10.438, -79.7653, 0.29", "95.7419, -10.5231, -80.065, 0.96", "96.3358, -10.5961, -80.4206, 0.96", "96.7031, -10.6405, -80.6431, 0.37", "97.3122, -10.7239, -81.0237, 0.22", "97.9849, -10.8444, -81.4676, 1.11", "98.7239, -10.9693, -81.9729, 1.11", "99.7251, -11.1277, -82.6927, 0.44", "100.194, -11.1998, -83.0492, 1.03", "100.51, -11.2616, -83.2994, 1.03", "101.161, -11.4719, -83.8322, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "9.10703, 52.4499, -10.96, 0.29", "9.31483, 53.2338, -11.0989, 0.29", "9.42225, 53.6022, -11.1739, 0.29", "9.62418, 54.309, -11.3176, 0.29", "9.76454, 54.7972, -11.419, 0.81", "9.84943, 55.0837, -11.4821, 0.81", "10.0194, 55.6764, -11.6164, 0.29", "10.1927, 56.2272, -11.7491, 0.29", "10.3561, 56.751, -11.8822, 0.88", "10.4027, 56.9119, -11.9246, 0.88", "10.5339, 57.3699, -12.0552, 0.22", "10.696, 57.9348, -12.2156, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-66.2655, -46.7845, -54.6203, 0.88", "-72.2045, -45.335, -63.0998, 0.88", "-73.0408, -45.1866, -64.1807, 0.52", "-73.4332, -45.1347, -64.6476, 0.52", "-74.4099, -45.0441, -65.7079, 0.52", "-75.4467, -45.0035, -66.7089, 0.52", "-76.316, -45.0199, -67.4324, 1.03", "-76.8158, -45.2215, -67.4166, 1.62", "-77.0632, -45.3325, -67.3949, 1.99", "-77.6679, -45.5778, -67.3129, 2.14", "-78.7205, -45.8493, -67.168, 1.55", "-79.7351, -45.9413, -67.1688, 0.74", "-80.7472, -45.9181, -67.3602, 0.37", "-81.7158, -45.8586, -67.6566, 0.37", "-82.4037, -45.851, -67.9794, 0.37", "-84.0182, -45.8991, -68.9306, 0.74", "-85.6431, -46.0036, -69.9866, 1.4", "-86.4995, -46.0928, -70.5532, 1.92", "-86.9185, -46.154, -70.8285, 2.21", "-89.2923, -46.5291, -72.4508, 0.52", "-90.0276, -46.6479, -72.9754, 0.52", "-90.9518, -46.799, -73.6547, 0.52", "-91.6441, -46.8557, -74.1809, 0.59", "-92.1658, -46.8381, -74.6049, 0.59", "-93.9532, -46.5341, -76.0853, 1.69", "-95.5624, -45.9859, -77.3994, 2.06", "-96.9279, -45.4059, -78.4863, 1.03", "-97.5865, -45.0831, -79.0117, 0.29", "-98.2816, -44.7506, -79.5361, 0.29", "-99.1621, -44.3797, -80.095, 1.25", "-99.7029, -44.2167, -80.3561, 1.62", "-100.454, -44.0561, -80.6692, 1.92", "-102.657, -43.8285, -81.5898, 0.81", "-103.742, -43.8811, -82.0501, 1.11", "-104.285, -43.9532, -82.3153, 1.11", "-105.527, -44.1507, -83.028, 0.37", "-106.318, -44.2705, -83.5284, 0.29", "-107.2, -44.4237, -84.1005, 0.29", "-108.132, -44.5977, -84.6585, 0.29", "-109.962, -44.8499, -85.8016, 1.33", "-110.683, -44.9044, -86.2861, 1.55", "-111.368, -44.9041, -86.7884, 1.77" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-66.2655, -46.7845, -54.6203, 1.18", "-68.2364, -47.6377, -55.0588, 1.18", "-70.5625, -48.7545, -55.4561, 0.52", "-71.9094, -49.3976, -55.6502, 0.52", "-74.9719, -50.882, -55.8096, 0.88", "-76.8513, -51.8112, -55.7625, 1.18", "-78.2192, -52.5347, -55.6645, 1.18", "-79.8312, -53.517, -55.4246, 1.25", "-81.2418, -54.483, -55.1379, 1.11", "-83.5056, -56.2274, -54.3879, 0.88", "-84.8453, -57.343, -53.7586, 0.59", "-85.9475, -58.27, -53.1992, 0.44", "-86.7549, -58.9342, -52.7683, 0.29", "-87.6461, -59.6362, -52.2741, 0.29", "-88.691, -60.4039, -51.7358, 0.88", "-89.7013, -60.9949, -51.3603, 1.25", "-90.32, -61.2929, -51.1763, 1.47", "-91.3273, -61.7171, -50.9164, 1.47", "-92.1809, -62.0817, -50.7354, 1.33", "-93.4734, -62.6863, -50.5157, 0.59", "-94.8037, -63.3778, -50.3558, 0.44", "-96.4768, -64.307, -50.2012, 0.37", "-97.4993, -64.8819, -50.1184, 0.96", "-98.8116, -65.6095, -50.0185, 0.59", "-100.626, -66.5765, -49.8756, 0.52", "-101.664, -67.0766, -49.7879, 0.52", "-102.761, -67.5145, -49.6911, 1.11", "-103.749, -67.8075, -49.5921, 1.99", "-104.823, -68.0246, -49.4728, 2.28", "-105.968, -68.1464, -49.3439, 1.99", "-107.375, -68.1832, -49.1883, 1.69", "-108.699, -68.1598, -49.0711, 1.4", "-109.763, -68.1449, -49.0096, 0.66", "-111.031, -68.1777, -48.9724, 0.52", "-112.294, -68.306, -48.9703, 0.52", "-113.262, -68.5543, -48.9973, 0.29", "-114.187, -69.1153, -49.0515, 0.29", "-115.208, -70.1689, -49.0836, 0.81", "-115.733, -70.8652, -49.0455, 1.11", "-116.417, -71.9201, -48.8785, 0.96", "-117.204, -73.1877, -48.4524, 0.74", "-117.931, -74.1669, -47.9349, 0.37", "-118.952, -75.1489, -47.0152, 1.11", "-119.626, -75.6647, -46.3647, 1.84", "-120.383, -76.1025, -45.6001, 2.36", "-121.664, -76.5869, -44.2436, 2.58", "-123.0, -76.8378, -42.7795, 0.59", "-124.132, -76.8726, -41.4798, 0.81" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "29.6052, -70.9339, -51.8864, 0.74", "31.1396, -72.2072, -52.4388, 0.74", "32.2767, -73.0967, -52.9958, 0.66", "32.9764, -73.6229, -53.3958, 1.11", "33.5564, -74.0322, -53.7683, 1.11", "34.7721, -74.8055, -54.6006, 0.88", "35.6659, -75.3237, -55.2444, 0.59", "36.5656, -75.8109, -56.0081, 1.11", "36.8464, -75.9481, -56.2776, 1.47", "37.4228, -76.182, -56.8424, 1.69", "38.214, -76.4401, -57.5942, 1.69", "39.2227, -76.6531, -58.4451, 1.77", "39.8101, -76.7554, -58.9301, 1.77" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "29.6052, -70.9339, -51.8864, 0.37", "29.6, -71.5335, -53.0591, 0.37", "29.5079, -72.0902, -54.2, 1.03", "29.3134, -72.791, -55.6239, 1.25", "28.919, -73.5896, -57.4642, 0.66", "28.7545, -73.8242, -58.0805, 0.81", "28.1251, -74.5295, -60.2596, 1.11", "27.8233, -74.7363, -61.1138, 1.4", "27.4355, -74.9112, -62.0154, 0.88", "26.4348, -75.1697, -63.9944, 0.22", "25.4397, -75.3318, -65.7965, 0.37", "24.3196, -75.4853, -67.7978, 1.03", "23.7404, -75.5604, -68.8507, 1.69", "23.4067, -75.6453, -69.6272, 1.69", "21.9745, -76.211, -73.2904, 0.15", "21.7779, -76.3679, -74.0016, 0.15", "21.6591, -76.5351, -74.6358, 1.18", "21.545, -76.8342, -75.606, 1.47", "21.323, -78.0398, -79.0726, 0.88", "21.2923, -78.704, -80.783, 1.55", "21.4111, -80.1287, -84.0695, 0.81", "21.4461, -80.6619, -85.2994, 0.37", "21.4435, -80.9532, -85.9484, 0.52", "21.4011, -81.3333, -86.6909, 0.52", "21.3346, -81.7009, -87.1696, 0.37", "21.1936, -82.3244, -87.718, 0.37", "20.8968, -82.9576, -87.9909, 0.81", "20.6155, -83.5214, -88.1841, 1.11", "20.2496, -84.4166, -88.4288, 1.25", "19.8383, -85.6435, -88.7554, 0.29", "19.6244, -86.342, -88.9309, 0.29", "19.2213, -87.5714, -89.2119, 1.55", "18.9731, -88.2336, -89.3583, 1.77", "18.3037, -89.7754, -89.7078, 0.29", "17.6593, -90.9617, -89.9858, 0.22", "16.7282, -92.2237, -90.3039, 0.22", "15.8358, -93.1806, -90.5457, 0.66", "15.1857, -93.7201, -90.6934, 1.4", "15.0476, -93.8125, -90.7194, 1.92", "14.2679, -94.2445, -90.8329, 1.62", "13.3737, -94.7204, -90.9266, 0.52", "12.5688, -95.1529, -91.0192, 0.29", "11.6642, -95.6783, -91.1411, 0.52", "11.2699, -95.9139, -91.1958, 0.52", "10.4429, -96.4286, -91.3134, 0.37", "10.087, -96.6514, -91.3619, 0.88", "9.54447, -96.9784, -91.4493, 0.88", "8.92142, -97.3366, -91.5638, 0.44", "8.2533, -97.7379, -91.7024, 0.22", "7.74132, -98.0755, -91.8287, 0.96", "7.07716, -98.5594, -92.0453, 0.96", "5.95703, -99.5029, -92.4893, 0.29", "5.47891, -99.9656, -92.7181, 1.25", "5.04303, -100.399, -92.942, 1.25", "4.51572, -100.944, -93.2388, 0.96", "3.88373, -101.653, -93.6517, 0.96", "3.03369, -102.772, -94.3475, 0.29", "2.49001, -103.612, -94.8819, 0.29", "2.08212, -104.329, -95.353, 0.66", "1.75751, -104.962, -95.7984, 0.37", "1.33598, -105.795, -96.4891, 0.96", "1.0164, -106.472, -97.1785, 1.18", "0.873171, -106.802, -97.5835, 0.81", "0.55076, -107.55, -98.6051, 0.52", "0.210391, -108.306, -99.6176, 0.44", "-0.340134, -109.386, -101.083, 0.96", "-1.1538, -110.759, -103.042, 0.37", "-1.60153, -111.46, -104.059, 0.37", "-2.1947, -112.419, -105.462, 0.37", "-2.71197, -113.328, -106.713, 1.18", "-2.98202, -113.886, -107.401, 1.47", "-3.18762, -114.398, -107.97, 1.47", "-3.70066, -116.027, -109.62, 0.74", "-3.92202, -117.055, -110.59, 0.29", "-4.03326, -117.969, -111.391, 0.29", "-4.11039, -119.367, -112.541, 0.96", "-4.11819, -119.899, -112.922, 1.11", "-4.07874, -120.883, -113.526, 0.29", "-3.96616, -121.774, -113.989, 0.29", "-3.7887, -122.616, -114.372, 0.44", "-3.6021, -123.22, -114.626, 0.29", "-3.39857, -123.854, -114.83, 1.03", "-3.22039, -124.469, -115.005, 1.03", "-2.8774, -125.732, -115.353, 0.29", "-2.56405, -126.712, -115.599, 1.11", "-2.41533, -127.143, -115.698, 1.25", "-2.00781, -128.375, -115.943, 0.22", "-1.91429, -128.721, -115.994, 0.74", "-1.84262, -129.058, -116.036, 0.74", "-1.69578, -129.968, -116.113, 0.22", "-1.61235, -130.59, -116.164, 0.66", "-1.53001, -131.137, -116.21, 0.66", "-1.40329, -131.89, -116.274, 0.22", "-1.32989, -132.421, -116.321, 0.81", "-1.24587, -133.262, -116.396, 0.22", "-1.18343, -134.354, -116.49, 0.52", "-1.16271, -135.044, -116.548, 0.66", "-1.15638, -135.436, -116.579, 0.66", "-1.13929, -136.383, -116.648, 0.29", "-1.1294, -137.772, -116.741, 0.29", "-1.12374, -138.501, -116.789, 0.81", "-1.12228, -138.776, -116.806, 0.81", "-1.11472, -139.872, -116.873, 0.29", "-1.10005, -140.823, -116.929, 0.66" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-11.1697, 74.5518, -9.6931, 1.25", "-11.1909, 76.4896, -8.27662, 1.25", "-11.1285, 77.1456, -8.07148, 1.25", "-11.0191, 78.1339, -8.05121, 1.03", "-10.9608, 78.6503, -8.1092, 1.11", "-10.8556, 79.578, -8.26799, 1.11", "-10.7547, 80.5498, -8.45649, 1.03", "-10.5919, 81.9002, -8.87616, 0.96", "-10.4753, 83.0866, -9.29394, 1.18", "-10.4074, 84.0928, -9.67758, 1.18", "-10.372, 85.0355, -10.0402, 1.4", "-10.3727, 86.1061, -10.4247, 1.55", "-10.4136, 87.375, -10.8408, 1.18", "-10.4602, 88.3166, -11.1143, 0.96", "-10.5174, 89.4783, -11.4316, 1.25", "-10.5801, 90.3729, -11.6653, 1.25", "-10.6489, 91.1792, -11.8624, 1.03", "-10.7701, 92.3387, -12.1078, 1.03", "-10.8794, 93.1149, -12.2398, 1.03", "-11.0734, 94.3338, -12.4001, 1.03", "-11.3058, 95.7304, -12.5178, 1.03", "-11.4137, 96.3567, -12.5497, 1.33", "-11.6583, 97.7657, -12.5879, 1.62", "-11.8588, 98.9025, -12.5913, 1.11", "-12.0815, 100.0, -12.5037, 1.4", "-12.2635, 100.851, -12.3792, 1.25", "-12.4596, 101.876, -12.179, 1.55", "-12.4943, 102.085, -12.1324, 1.47", "-12.6778, 103.416, -11.807, 1.62", "-12.8986, 105.2, -11.362, 1.47", "-13.0014, 105.938, -11.1975, 1.55", "-13.1033, 106.629, -11.0802, 1.11", "-13.2837, 107.908, -10.9202, 0.88", "-13.3882, 108.777, -10.852, 0.88", "-13.4512, 109.602, -10.8325, 0.88", "-13.4615, 110.779, -10.8646, 0.88", "-13.409, 111.678, -10.8744, 1.18", "-13.2666, 112.72, -10.8855, 1.18", "-13.0993, 113.485, -10.8872, 1.33", "-12.8654, 114.369, -10.8504, 1.33", "-12.4729, 115.754, -10.7109, 1.11", "-12.0835, 117.137, -10.4893, 0.88", "-11.8492, 118.083, -10.2827, 0.88", "-11.6377, 119.172, -10.0025, 1.03", "-11.5125, 120.252, -9.70629, 1.33", "-11.4859, 121.262, -9.42725, 1.33", "-11.5394, 122.106, -9.21615, 1.47", "-11.6605, 122.896, -9.01954, 1.4", "-11.8162, 123.624, -8.84022, 1.4", "-12.0163, 124.439, -8.66464, 1.18", "-12.2488, 125.392, -8.49677, 1.18", "-12.404, 126.055, -8.38342, 1.03", "-12.6064, 127.056, -8.21049, 1.03", "-12.7311, 127.98, -8.05313, 0.88", "-12.7677, 128.981, -7.95162, 1.03", "-12.7437, 129.905, -7.89885, 0.96", "-12.6841, 130.617, -7.90705, 0.96", "-12.5662, 131.589, -7.98204, 0.96", "-12.3558, 132.868, -8.21845, 0.96", "-11.9515, 134.798, -8.84169, 0.81", "-11.6978, 135.984, -9.37621, 1.03", "-11.5594, 136.709, -9.76554, 1.03", "-11.394, 137.747, -10.3369, 0.88", "-11.1953, 139.24, -11.1426, 1.03", "-11.0325, 140.861, -11.9498, 1.03", "-10.9678, 141.801, -12.3229, 1.25", "-10.9323, 143.036, -12.7281, 1.25", "-10.9814, 144.777, -13.1462, 1.03", "-11.0486, 145.678, -13.2893, 1.03", "-11.1533, 146.903, -13.4148, 1.03", "-11.2586, 148.484, -13.5085, 1.03", "-11.2865, 150.166, -13.5771, 0.88", "-11.227, 151.639, -13.6239, 0.88", "-11.1225, 152.926, -13.6532, 0.88", "-10.8667, 155.307, -13.6743, 0.74", "-10.6625, 156.859, -13.6587, 0.74", "-10.4291, 158.468, -13.5947, 0.74", "-10.2242, 159.789, -13.5444, 0.74", "-10.0564, 161.179, -13.584, 0.74", "-9.99572, 162.626, -13.8304, 0.74", "-10.0376, 163.311, -14.0424, 0.88", "-10.1227, 164.106, -14.3948, 1.03", "-10.266, 165.508, -15.0691, 0.74", "-10.4137, 167.481, -15.9907, 0.74", "-10.4597, 169.167, -16.7338, 0.59", "-10.4493, 169.931, -17.0278, 0.88", "-10.3989, 171.234, -17.4509, 1.11", "-10.2731, 173.112, -17.9116, 1.55", "-10.1564, 174.627, -18.121, 1.33", "-10.0458, 175.923, -18.1976, 1.11", "-9.89763, 177.561, -18.24, 1.11", "-9.76506, 178.866, -18.2582, 1.11", "-9.60092, 180.186, -18.2392, 1.03", "-9.35677, 181.691, -18.1742, 0.88", "-9.18016, 182.506, -18.1118, 1.18", "-9.04908, 183.018, -18.0477, 1.4", "-8.8516, 183.757, -17.9265, 1.25", "-8.63886, 184.614, -17.7862, 1.25", "-8.5302, 185.15, -17.7275, 1.11", "-8.43801, 185.764, -17.6945, 0.96", "-8.39963, 186.543, -17.6866, 0.96", "-8.41058, 187.087, -17.7005, 0.88", "-8.47118, 188.158, -17.7411, 0.66", "-8.52059, 188.854, -17.7347, 0.81", "-8.56487, 189.59, -17.6803, 0.81", "-8.59402, 190.446, -17.5428, 0.74", "-8.58492, 192.124, -17.1397, 0.88", "-8.57094, 192.576, -16.9926, 1.18", "-8.48131, 193.745, -16.5147, 1.18", "-8.40257, 194.406, -16.1993, 1.18", "-8.284, 195.105, -15.8422, 1.11", "-8.11027, 195.907, -15.4259, 0.96", "-7.98692, 196.46, -15.1424, 0.96", "-7.83608, 197.136, -14.853, 0.81", "-7.67798, 197.839, -14.6204, 1.11", "-7.58075, 198.242, -14.5321, 1.47", "-7.35083, 199.123, -14.4505, 1.03", "-7.15186, 199.862, -14.4522, 1.03", "-6.9211, 200.675, -14.5268, 1.25", "-6.78117, 201.24, -14.5947, 1.25", "-6.509, 202.61, -14.7437, 0.88", "-6.4169, 203.327, -14.7852, 0.88", "-6.36749, 204.238, -14.793, 1.18", "-6.37513, 205.228, -14.7417, 0.96", "-6.43821, 206.328, -14.5833, 0.81", "-6.5237, 207.286, -14.3562, 1.25", "-6.60687, 208.049, -14.1022, 0.66", "-6.68777, 208.816, -13.807, 0.96", "-6.74383, 209.52, -13.538, 1.25", "-6.77544, 210.21, -13.2888, 0.96", "-6.76037, 210.882, -13.094, 0.96", "-6.70914, 211.65, -12.8927, 1.25", "-6.65045, 212.245, -12.7358, 1.55", "-6.56168, 212.956, -12.5392, 1.55", "-6.48227, 213.475, -12.3976, 1.25", "-6.36203, 214.233, -12.229, 0.96" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-11.1697, 74.5518, -9.6931, 0.59", "-10.5801, 78.0137, -10.6317, 0.59", "-10.4075, 79.2933, -10.959, 0.88", "-10.2646, 80.8058, -11.299, 1.18", "-10.1222, 82.6991, -11.6402, 1.18", "-9.98218, 84.0253, -11.8561, 0.96", "-9.81384, 85.5068, -12.0823, 0.59", "-9.75075, 86.4525, -12.173, 0.96", "-9.64625, 87.9962, -12.3205, 0.96", "-9.52197, 89.8295, -12.5401, 0.96", "-9.43078, 91.5511, -12.8014, 0.52", "-9.40907, 92.8035, -13.0398, 0.37", "-9.44977, 93.6121, -13.2624, 0.37", "-9.58934, 94.4222, -13.5628, 0.81", "-9.7963, 95.0989, -13.9347, 1.18", "-9.95563, 95.5651, -14.2185, 1.18", "-10.2172, 96.3983, -14.6686, 0.66", "-10.3769, 97.1473, -15.0183, 0.66", "-10.5418, 98.397, -15.4837, 0.59", "-10.6332, 99.9392, -15.9227, 0.88", "-10.656, 102.149, -16.4118, 1.11", "-10.6284, 103.379, -16.6186, 1.11", "-10.595, 104.43, -16.7287, 1.11", "-10.5883, 105.686, -16.7682, 0.37", "-10.672, 107.028, -16.7039, 0.37", "-10.8306, 107.909, -16.5915, 0.74", "-10.909, 108.188, -16.5502, 0.88", "-11.3144, 109.429, -16.3413, 0.88", "-11.64, 110.367, -16.1333, 0.66", "-12.0697, 111.648, -15.7788, 0.52", "-12.2189, 112.249, -15.6103, 0.52", "-12.3722, 113.408, -15.3142, 0.96", "-12.3769, 114.203, -15.1443, 0.96", "-12.309, 114.867, -15.0323, 1.18", "-12.2257, 115.42, -14.9667, 1.18", "-12.0063, 116.875, -14.8587, 0.66", "-11.9351, 117.687, -14.843, 0.88", "-11.9387, 118.761, -14.8769, 0.88", "-11.9759, 119.603, -14.9578, 0.44", "-12.0416, 120.525, -15.0639, 0.74", "-12.0922, 121.09, -15.1227, 0.74", "-12.1668, 121.84, -15.1676, 0.52", "-12.2221, 122.778, -15.1907, 0.37", "-12.2359, 123.568, -15.1771, 0.37", "-12.2066, 124.534, -15.1075, 0.74", "-12.164, 125.148, -15.0338, 0.74", "-12.096, 125.972, -14.9174, 0.66", "-11.9851, 127.304, -14.7098, 0.74", "-11.9514, 127.705, -14.6418, 1.4", "-11.8576, 128.548, -14.4667, 1.4", "-11.7232, 129.337, -14.3111, 1.33", "-11.3856, 130.747, -14.0371, 0.44", "-11.0064, 131.97, -13.7945, 0.44", "-10.7271, 132.784, -13.6513, 0.37", "-10.2214, 134.26, -13.4494, 0.37", "-9.81162, 135.499, -13.3265, 0.59", "-9.58493, 136.272, -13.2913, 0.59", "-9.42241, 136.985, -13.3077, 0.29", "-9.31161, 138.719, -13.5097, 0.88", "-9.39752, 139.539, -13.655, 1.77", "-9.56084, 140.278, -13.7925, 2.06", "-9.74208, 140.92, -13.893, 1.69", "-10.0078, 141.847, -14.045, 1.18", "-10.3961, 143.264, -14.2978, 0.44", "-10.7371, 144.533, -14.5331, 0.37", "-11.1118, 145.969, -14.8067, 0.74", "-11.2656, 146.553, -14.9307, 0.74", "-11.582, 147.826, -15.2287, 0.52", "-11.8338, 148.749, -15.4253, 0.44", "-12.0115, 149.328, -15.5224, 0.66", "-12.2268, 149.887, -15.5931, 0.66", "-12.5608, 150.629, -15.6805, 0.37", "-12.8409, 151.19, -15.7181, 0.37", "-13.7608, 152.819, -15.6506, 0.59", "-14.4058, 153.961, -15.4825, 1.03", "-14.7458, 154.602, -15.3404, 1.4" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-37.7288, 89.0271, -4.75041, 0.29", "-38.1565, 90.35, -4.46892, 0.29", "-38.4078, 90.9738, -4.3637, 0.44", "-38.684, 91.4226, -4.3005, 0.66", "-39.1356, 91.8783, -4.22461, 0.29", "-39.652, 92.2761, -4.16124, 0.29", "-39.9388, 92.4795, -4.13099, 0.74", "-40.3381, 92.6818, -4.09904, 0.88", "-41.2327, 93.1033, -4.06487, 0.44", "-42.0855, 93.5263, -4.05966, 0.52", "-42.3277, 93.6685, -4.05677, 0.81", "-42.7367, 93.9895, -4.01753, 0.44", "-43.1209, 94.3611, -3.92251, 0.88", "-43.537, 94.8232, -3.74639, 0.59", "-43.8653, 95.3146, -3.56325, 0.29", "-44.0932, 95.7469, -3.40597, 0.29", "-44.4513, 96.5063, -3.13288, 0.96", "-44.7595, 97.1904, -2.88864, 1.18", "-45.0666, 97.8981, -2.62781, 0.81", "-45.4598, 98.882, -2.29757, 0.52", "-45.6599, 99.4006, -2.14087, 0.52", "-45.943, 100.188, -1.96795, 0.44", "-46.1598, 100.813, -1.86425, 0.66", "-46.4131, 101.509, -1.73844, 0.88", "-46.576, 101.922, -1.65789, 0.52", "-46.7941, 102.427, -1.53119, 0.29", "-47.1016, 103.133, -1.35615, 0.29", "-47.5066, 104.075, -1.12506, 0.52", "-47.8415, 104.799, -0.978945, 0.81", "-48.138, 105.464, -0.886642, 0.22", "-48.3475, 105.967, -0.824584, 0.22", "-48.6899, 106.803, -0.743414, 0.37", "-48.8726, 107.235, -0.718122, 0.37", "-49.2784, 108.143, -0.701043, 0.37", "-49.6893, 109.012, -0.703061, 0.29", "-50.1093, 109.913, -0.680538, 0.52", "-50.3164, 110.389, -0.657654, 0.88", "-50.6785, 111.366, -0.570082, 0.59", "-50.8374, 111.881, -0.509824, 0.44", "-50.9914, 112.518, -0.406119, 0.22", "-51.2617, 113.792, -0.174865, 0.22", "-51.3507, 114.366, -0.0675644, 0.81", "-51.3874, 114.849, 0.0147917, 1.33", "-51.4002, 115.327, 0.0778895, 1.33", "-51.3914, 116.202, 0.176236, 0.59", "-51.3533, 116.781, 0.233874, 0.81", "-51.2873, 117.32, 0.283371, 0.81", "-51.1386, 118.162, 0.335893, 0.52", "-50.9046, 119.235, 0.367803, 0.22", "-50.6915, 120.087, 0.37485, 0.22", "-50.3987, 121.117, 0.369881, 0.59", "-50.1984, 121.762, 0.376227, 0.81", "-49.912, 122.673, 0.38383, 0.29", "-49.7196, 123.33, 0.407378, 0.22", "-49.6323, 123.669, 0.416493, 0.59", "-49.5997, 123.928, 0.408238, 0.59", "-49.6514, 124.593, 0.310517, 0.22", "-49.7754, 125.186, 0.140672, 0.29", "-49.8862, 125.587, -0.0219756, 0.81", "-49.9565, 125.863, -0.167754, 1.11", "-50.0013, 126.079, -0.288282, 1.11", "-50.1598, 127.132, -0.859988, 0.37", "-50.2071, 127.622, -1.0818, 0.96", "-50.2504, 128.307, -1.33076, 0.88", "-50.2858, 128.852, -1.51147, 0.88", "-50.3624, 129.581, -1.73866, 0.52", "-50.4393, 130.119, -1.89396, 0.74", "-50.6151, 131.077, -2.14226, 0.29", "-50.7965, 131.96, -2.39864, 0.59", "-50.9354, 132.563, -2.59779, 0.59", "-51.0561, 133.334, -2.91094, 0.29", "-51.0956, 133.969, -3.23471, 1.18", "-51.0852, 134.267, -3.40216, 1.47", "-50.9886, 134.985, -3.82482, 1.18", "-50.8656, 135.686, -4.21665, 0.44", "-50.6213, 136.893, -4.8363, 0.22", "-50.4993, 137.366, -5.07314, 0.22", "-50.2483, 138.317, -5.49489, 1.18", "-50.1835, 138.557, -5.58658, 1.4", "-49.8878, 139.648, -5.89493, 0.44", "-49.7091, 140.271, -6.02698, 0.66", "-49.5698, 140.86, -6.11745, 0.66", "-49.3326, 141.699, -6.22471, 0.22", "-49.1999, 142.061, -6.26649, 0.59", "-48.9649, 142.615, -6.32437, 0.52", "-48.6665, 143.252, -6.37195, 0.96", "-48.3946, 143.845, -6.44971, 0.59", "-48.1384, 144.415, -6.54613, 0.37", "-47.8633, 144.994, -6.65774, 0.59", "-47.6745, 145.389, -6.7158, 0.81", "-47.2406, 146.325, -6.84856, 0.22", "-46.897, 147.123, -6.9352, 0.59", "-46.6949, 147.625, -6.98238, 0.52", "-46.4897, 148.221, -7.04418, 0.22", "-46.2066, 149.137, -7.14186, 0.22", "-45.9169, 150.152, -7.25857, 0.88", "-45.7709, 150.733, -7.32845, 1.69", "-45.7103, 151.054, -7.36084, 1.92", "-45.6256, 151.666, -7.45259, 1.25" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-37.7288, 89.0271, -4.75041, 0.52", "-38.2459, 89.1594, -5.06558, 0.52", "-38.5804, 89.2374, -5.26881, 0.59", "-38.9435, 89.3179, -5.48738, 0.44", "-39.1946, 89.3813, -5.6345, 0.59", "-39.4825, 89.47, -5.79368, 0.59", "-39.8359, 89.6003, -5.9786, 0.52", "-40.0658, 89.6968, -6.08986, 0.74", "-40.3663, 89.844, -6.22396, 0.37", "-40.5969, 89.966, -6.31585, 0.37", "-40.8963, 90.1275, -6.42802, 0.37", "-41.1618, 90.259, -6.52234, 0.52", "-41.4917, 90.3779, -6.65263, 0.52", "-41.7388, 90.4128, -6.7723, 0.29", "-42.0561, 90.4049, -6.96762, 0.81", "-42.2406, 90.3843, -7.09798, 1.11", "-42.4894, 90.3522, -7.28862, 1.25", "-42.8703, 90.3092, -7.59226, 0.66", "-43.194, 90.2862, -7.86229, 0.37", "-43.6419, 90.2974, -8.27047, 0.37", "-43.9245, 90.3413, -8.55842, 0.29", "-44.281, 90.4397, -8.95419, 0.66", "-44.4113, 90.496, -9.1158, 0.88", "-44.5781, 90.6033, -9.37014, 0.59", "-44.8049, 90.7853, -9.80438, 0.37", "-44.9395, 90.9055, -10.1279, 0.37", "-45.0277, 90.985, -10.3868, 0.96", "-45.144, 91.0882, -10.8275, 1.18", "-45.33, 91.2251, -11.5932, 0.59", "-45.3983, 91.2634, -11.88, 0.44", "-45.4821, 91.2872, -12.1948, 0.29", "-45.5919, 91.2965, -12.5519, 0.15", "-45.7855, 91.282, -13.1166, 0.88", "-45.8912, 91.2679, -13.3634, 1.18", "-46.0605, 91.2565, -13.6883, 0.44", "-46.2343, 91.2648, -13.9788, 0.37", "-46.4094, 91.2882, -14.2244, 0.96", "-46.7335, 91.3547, -14.5827, 1.25", "-47.12, 91.4599, -14.9086, 0.44", "-47.3897, 91.5455, -15.0877, 0.44", "-47.7582, 91.6723, -15.2839, 1.03", "-48.0818, 91.7897, -15.4127, 0.88", "-48.5196, 91.9561, -15.5577, 0.74", "-49.2179, 92.2274, -15.7286, 0.37", "-49.7025, 92.4092, -15.8164, 0.88", "-49.8634, 92.4655, -15.8363, 1.18", "-50.2909, 92.6239, -15.8664, 1.18" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "101.161, -11.4719, -83.8322, 0.29", "100.761, -10.2018, -88.3493, 0.29", "100.635, -9.77832, -89.5065, 0.52", "100.584, -9.61852, -89.8459, 0.52", "100.358, -8.98966, -90.9116, 0.29", "100.111, -8.36564, -91.8048, 0.96", "100.035, -8.15913, -92.0735, 1.33", "99.9315, -7.8182, -92.3055, 1.33", "99.7408, -7.12824, -92.7802, 0.59", "99.6223, -6.50795, -93.2906, 0.37", "99.6276, -5.97467, -93.9178, 0.22", "99.9249, -5.45727, -94.8825, 0.22", "100.139, -5.33779, -95.2771, 0.59", "100.58, -5.25331, -95.9055, 0.59", "101.0, -5.25046, -96.4006, 0.37", "101.558, -5.29945, -96.9795, 0.96", "102.122, -5.3713, -97.5079, 0.96", "102.87, -5.49359, -98.1838, 0.44", "103.248, -5.55893, -98.5253, 0.52", "103.738, -5.65999, -98.971, 0.22", "104.069, -5.72759, -99.2908, 0.74", "104.78, -5.85067, -100.004, 0.29", "105.101, -5.88602, -100.346, 0.29", "105.584, -5.89518, -100.913, 0.88", "106.146, -5.86221, -101.612, 0.37", "107.07, -5.71675, -102.834, 0.96", "107.466, -5.602, -103.395, 1.4", "107.81, -5.43229, -103.929, 0.59", "108.326, -5.03456, -104.811, 0.22", "108.752, -4.54459, -105.622, 0.22", "109.063, -3.98691, -106.318, 1.11", "109.241, -3.41457, -106.865, 1.33", "109.365, -2.7458, -107.423, 1.33", "109.429, -2.20524, -107.818, 1.33", "109.461, -1.6763, -108.148, 0.59", "109.495, -0.752129, -108.683, 0.22", "109.59, 0.298161, -109.272, 1.4", "109.683, 0.792715, -109.565, 1.69", "109.947, 1.74032, -110.18, 0.29", "110.1, 2.11235, -110.494, 0.66", "110.377, 2.55392, -111.044, 0.66", "110.867, 2.88718, -112.038, 0.22", "111.24, 2.80596, -112.99, 1.03", "111.359, 2.62312, -113.504, 1.03", "111.476, 1.71829, -115.212, 0.74", "111.506, 1.13166, -116.191, 1.03", "111.48, 0.166823, -117.608, 1.11", "111.362, -0.881554, -118.988, 1.11", "111.155, -2.03804, -120.374, 0.74", "110.879, -3.15293, -121.644, 0.96" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "101.161, -11.4719, -83.8322, 0.37", "103.562, -13.535, -84.7411, 0.37", "104.497, -14.1655, -84.8124, 0.44", "105.114, -14.4958, -84.6405, 0.44", "107.137, -15.3894, -83.7322, 0.74", "107.44, -15.4875, -83.5788, 0.88", "108.52, -15.7461, -83.0364, 0.37", "109.943, -15.9711, -82.2043, 0.37", "112.155, -16.2498, -80.8584, 0.88", "112.931, -16.3268, -80.3756, 1.03", "114.118, -16.4231, -79.6447, 0.29", "115.258, -16.4882, -78.9082, 0.29", "116.176, -16.5097, -78.2797, 0.29", "117.947, -16.4763, -77.2265, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-111.368, -44.9041, -86.7884, 0.74", "-112.58, -44.5519, -87.013, 0.74", "-113.518, -44.3106, -87.1708, 1.03", "-115.056, -43.9741, -87.4873, 0.37", "-115.857, -43.8351, -87.6939, 0.22", "-116.833, -43.7082, -87.9987, 1.4", "-117.52, -43.6379, -88.2334, 1.55", "-118.431, -43.6043, -88.5977, 1.55", "-119.987, -43.6249, -89.2987, 0.81", "-121.109, -43.6969, -89.8361, 0.52", "-122.059, -43.8044, -90.2999, 0.88", "-123.137, -43.9487, -90.8424, 0.22", "-123.966, -44.0476, -91.2653, 0.74", "-124.697, -44.0925, -91.634, 0.74", "-125.277, -44.0669, -91.9695, 0.74", "-126.264, -43.9478, -92.6237, 0.44", "-127.076, -43.8296, -93.2107, 0.22", "-127.515, -43.7678, -93.5775, 0.81", "-128.153, -43.6824, -94.1276, 0.81", "-130.507, -43.3623, -96.1632, 0.52", "-131.43, -43.2497, -96.9406, 1.03", "-132.188, -43.1952, -97.5351, 1.4", "-133.44, -43.1652, -98.4387, 1.18", "-134.173, -43.1743, -98.9257, 0.66", "-135.284, -43.2023, -99.6033, 1.18", "-135.93, -43.2162, -99.9506, 1.55", "-137.453, -43.2269, -100.789, 0.52", "-138.086, -43.2274, -101.167, 1.18", "-138.977, -43.2353, -101.735, 1.18", "-140.576, -43.2433, -102.875, 0.29", "-141.194, -43.2465, -103.372, 0.29", "-141.927, -43.243, -104.001, 0.29", "-142.75, -43.2181, -104.737, 0.59", "-143.496, -43.188, -105.413, 0.59", "-144.047, -43.1501, -105.896, 0.44", "-145.353, -43.0199, -106.986, 1.03", "-146.007, -42.9241, -107.547, 1.33", "-147.516, -42.6587, -108.812, 0.29", "-148.176, -42.5244, -109.333, 0.29", "-148.774, -42.3899, -109.774, 0.96", "-149.565, -42.2034, -110.295, 0.96", "-152.161, -41.5181, -111.637, 0.29", "-152.651, -41.367, -111.818, 0.29", "-153.49, -41.1024, -112.0, 1.03", "-154.308, -40.8543, -112.072, 1.33", "-155.302, -40.5612, -112.045, 0.74", "-156.653, -40.1591, -111.873, 0.37", "-158.249, -39.6833, -111.516, 0.29", "-159.196, -39.4116, -111.319, 0.22", "-160.209, -39.1401, -111.112, 0.22", "-161.243, -38.8477, -110.905, 0.52", "-162.001, -38.6226, -110.761, 0.96", "-162.662, -38.4207, -110.656, 1.18", "-163.34, -38.2283, -110.56, 1.18", "-164.292, -37.9304, -110.431, 0.74", "-165.165, -37.6617, -110.306, 0.22", "-165.603, -37.5323, -110.23, 0.44", "-166.182, -37.3585, -110.099, 0.44", "-166.899, -37.1135, -109.918, 0.22", "-167.628, -36.8279, -109.715, 0.22", "-168.114, -36.6111, -109.57, 0.88", "-168.641, -36.3635, -109.399, 1.25", "-168.891, -36.2231, -109.309, 1.25", "-170.034, -35.4665, -108.858, 0.22", "-170.613, -35.0272, -108.619, 0.22", "-171.201, -34.532, -108.374, 0.88", "-171.692, -34.0736, -108.169, 1.25", "-172.413, -33.3297, -107.866, 0.22", "-173.259, -32.3853, -107.508, 0.22", "-173.926, -31.5714, -107.234, 0.88", "-174.315, -31.0512, -107.076, 0.88", "-174.655, -30.5421, -106.906, 0.37", "-175.129, -29.7171, -106.599, 0.15", "-175.539, -28.8765, -106.267, 0.96", "-175.808, -28.2433, -106.005, 1.18", "-176.443, -26.6277, -105.234, 0.22", "-177.009, -25.1671, -104.448, 0.81", "-177.285, -24.4033, -104.01, 0.74", "-177.605, -23.4038, -103.403, 0.29", "-177.704, -23.0613, -103.183, 0.29", "-177.966, -22.112, -102.546, 0.52", "-178.084, -21.6404, -102.227, 0.66", "-178.282, -20.7222, -101.719, 0.22", "-178.364, -20.2415, -101.5, 0.22", "-178.441, -19.393, -101.197, 0.81", "-178.449, -18.8991, -101.081, 1.11", "-178.399, -18.125, -101.014, 1.11", "-178.255, -16.9387, -101.055, 0.22", "-178.157, -16.304, -101.148, 0.59", "-178.1, -15.9129, -101.225, 0.59", "-177.995, -15.123, -101.391, 0.29", "-177.897, -13.8916, -101.672, 0.22", "-177.838, -12.6651, -101.977, 0.88", "-177.835, -11.5767, -102.223, 1.11", "-177.88, -9.86832, -102.541, 0.22", "-177.91, -9.08501, -102.664, 0.52", "-178.0, -7.84198, -102.858, 0.22", "-178.162, -6.44109, -103.086, 0.22", "-178.371, -5.02216, -103.327, 0.66", "-178.568, -3.86772, -103.557, 0.66", "-178.819, -2.60707, -103.895, 0.88", "-179.136, -1.12964, -104.351, 0.66", "-179.355, -0.185118, -104.667, 0.44", "-179.581, 0.661867, -104.982, 0.66", "-179.685, 1.03878, -105.151, 0.66", "-180.172, 2.62943, -105.966, 0.22", "-180.544, 3.75575, -106.562, 0.22", "-180.707, 4.31925, -106.83, 1.33" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-111.368, -44.9041, -86.7884, 0.44", "-112.081, -46.1571, -87.2961, 0.44", "-112.633, -47.1148, -87.7426, 0.29", "-112.902, -47.5577, -87.9815, 0.66", "-113.197, -47.997, -88.2642, 0.66", "-113.755, -48.7332, -88.853, 0.29", "-114.053, -49.092, -89.1675, 0.59", "-114.544, -49.6628, -89.7471, 0.37", "-115.122, -50.2896, -90.4718, 1.18", "-115.63, -50.8466, -91.1935, 1.62", "-116.141, -51.4503, -92.1577, 1.62", "-116.786, -52.2995, -93.8676, 0.29", "-117.019, -52.6483, -94.6968, 0.29", "-117.141, -52.8696, -95.2768, 0.66", "-117.347, -53.3273, -96.4471, 0.52", "-117.696, -54.2692, -98.6377, 1.18", "-117.906, -54.965, -100.09, 1.77", "-118.031, -55.3917, -100.928, 1.77", "-118.526, -56.5564, -103.053, 0.29", "-118.772, -57.0646, -103.849, 0.29", "-119.047, -57.619, -104.613, 0.29", "-119.44, -58.4805, -105.725, 1.62", "-119.655, -59.035, -106.468, 1.69", "-120.287, -61.2083, -109.64, 0.29", "-120.397, -61.8444, -110.657, 0.29", "-120.418, -62.337, -111.522, 0.29", "-120.296, -63.3839, -113.481, 1.25", "-120.028, -64.1545, -115.047, 0.66", "-119.632, -64.7337, -116.293, 0.29", "-119.217, -65.0916, -117.098, 1.03", "-118.845, -65.3496, -117.755, 1.03", "-118.37, -65.6583, -118.512, 0.44", "-117.679, -66.068, -119.449, 0.29", "-117.247, -66.3196, -120.007, 0.88", "-116.979, -66.4869, -120.357, 1.33", "-115.627, -67.5291, -122.405, 0.29", "-115.243, -67.9296, -123.089, 0.96", "-115.059, -68.1976, -123.489, 0.81", "-114.806, -68.739, -124.226, 0.37", "-114.554, -69.4592, -125.176, 0.66", "-114.282, -70.3895, -126.381, 0.52", "-114.134, -70.9746, -127.136, 0.88", "-114.035, -71.3962, -127.755, 0.88", "-113.774, -72.5511, -129.952, 0.44", "-113.72, -72.9074, -130.8, 0.37", "-113.671, -73.349, -132.068, 0.29", "-113.619, -73.6388, -133.054, 0.96", "-113.534, -74.0425, -134.639, 1.03", "-113.357, -74.8062, -137.768, 0.74", "-113.243, -75.2653, -139.548, 1.33", "-113.137, -75.6848, -140.948, 1.11", "-113.029, -76.1331, -142.176, 0.44", "-112.936, -76.5062, -142.96, 0.81", "-112.773, -77.0349, -143.808, 0.88", "-112.421, -78.0215, -145.091, 0.22", "-112.167, -78.6222, -145.902, 0.22", "-112.047, -78.9275, -146.35, 0.59", "-111.914, -79.3232, -146.973, 0.59", "-111.582, -80.3599, -148.745, 0.37", "-111.414, -80.893, -149.819, 0.59", "-111.203, -81.5912, -151.371, 0.44", "-111.121, -81.9186, -152.241, 0.74", "-111.084, -82.1402, -152.872, 0.74", "-111.069, -82.5386, -153.995, 0.37", "-111.169, -83.174, -156.065, 0.96", "-111.255, -83.4117, -157.024, 0.88", "-111.667, -84.0612, -159.986, 0.66", "-111.847, -84.2745, -161.08, 0.96", "-112.044, -84.467, -162.124, 0.96", "-112.866, -85.1986, -166.057, 0.66", "-113.473, -85.8072, -168.872, 0.66", "-114.164, -86.6105, -172.128, 0.44", "-114.537, -87.1925, -173.98, 0.74", "-114.701, -87.5442, -174.884, 0.37", "-114.846, -88.0262, -175.824, 0.81", "-115.017, -89.1131, -177.19, 0.22", "-115.056, -89.688, -177.74, 0.81", "-115.01, -90.8772, -178.618, 0.22", "-114.898, -92.3983, -179.583, 0.22", "-114.835, -93.0803, -180.01, 0.88", "-114.796, -93.5936, -180.336, 0.88" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-124.132, -76.8726, -41.4798, 0.96", "-126.578, -78.2732, -42.8371, 0.96", "-128.177, -79.1978, -43.4686, 0.22", "-128.996, -79.6714, -43.7921, 0.52", "-129.641, -80.0441, -44.0466, 0.66", "-130.603, -80.6009, -44.4269, 0.44", "-131.694, -81.2316, -44.8577, 1.33", "-133.217, -81.9256, -45.034, 1.84" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-124.132, -76.8726, -41.4798, 0.37", "-125.588, -76.1129, -40.1913, 0.37", "-126.088, -75.8812, -39.7416, 0.37", "-126.926, -75.4926, -38.9872, 0.22", "-127.379, -75.2826, -38.5796, 1.03", "-127.844, -75.067, -38.1611, 1.77", "-128.399, -74.81, -37.6623, 2.14", "-128.782, -74.6693, -37.3988, 2.14" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "39.8101, -76.7554, -58.9301, 0.44", "40.9626, -76.4186, -58.9585, 0.44", "41.6756, -76.13, -58.9718, 0.22", "42.3309, -75.7232, -59.0314, 0.22", "43.0754, -75.1791, -59.1877, 0.44", "43.2968, -74.989, -59.2727, 0.81", "43.6492, -74.6621, -59.4353, 0.81", "43.9451, -74.3297, -59.6812, 0.37", "44.4691, -73.5813, -60.3536, 0.44", "44.6668, -73.166, -60.9014, 0.59", "44.8842, -72.5374, -61.8839, 0.15", "45.0069, -72.1275, -62.6137, 0.29", "45.2186, -71.3996, -64.0412, 1.18", "45.3333, -71.0125, -64.8677, 1.18", "45.8299, -69.5286, -68.1696, 0.74", "45.9289, -69.2539, -68.758, 0.74", "46.0764, -68.893, -69.5066, 0.96", "46.2211, -68.5738, -70.1194, 0.96", "46.5107, -68.015, -71.0079, 0.52", "46.9122, -67.2816, -71.9126, 0.29", "47.323, -66.6044, -72.5343, 0.29", "47.8671, -65.7102, -73.2792, 1.33", "48.1432, -65.2639, -73.6135, 1.33", "48.7145, -64.3496, -74.2071, 0.44", "49.3205, -63.4011, -74.7203, 0.37", "49.8275, -62.6238, -75.0532, 0.37", "50.0698, -62.2793, -75.1638, 0.37", "50.5285, -61.6665, -75.3042, 0.22", "51.5172, -60.4191, -75.5386, 1.55", "51.9478, -59.9194, -75.6109, 1.77", "52.9584, -58.755, -75.7806, 0.37", "53.296, -58.3108, -75.8383, 0.44", "53.5328, -57.9422, -75.8849, 0.44", "53.7624, -57.5319, -75.9433, 0.44", "54.2757, -56.5609, -76.1115, 0.29", "54.6061, -55.9026, -76.2501, 0.22", "54.9814, -55.1438, -76.4288, 0.22", "55.6382, -53.8221, -76.7314, 1.18", "56.0534, -52.9857, -76.9004, 1.4", "56.2039, -52.6907, -76.9518, 1.62", "56.3944, -52.335, -77.0149, 1.62", "56.9022, -51.5401, -77.2075, 0.96", "57.3121, -50.9791, -77.3713, 0.59", "57.9301, -50.1842, -77.6343, 0.52", "58.5842, -49.3592, -77.9122, 0.37", "59.1021, -48.7309, -78.1362, 1.03", "60.2809, -47.4467, -78.6472, 0.22", "60.7065, -47.0575, -78.8218, 0.66", "61.0353, -46.8192, -78.9423, 0.66", "61.8426, -46.4474, -79.1855, 0.29", "62.4789, -46.3856, -79.2985, 0.29", "63.3381, -46.6187, -79.4793, 0.29", "64.2679, -47.1966, -79.7498, 1.33", "64.6787, -47.5796, -79.9742, 1.47", "65.3019, -48.2877, -80.4744, 0.74", "65.7826, -48.8804, -80.97, 0.44", "66.97, -50.2721, -82.3977, 0.96", "67.3204, -50.6337, -82.8592, 0.74", "68.2132, -51.4415, -84.0742, 0.29", "68.7171, -51.8052, -84.6973, 0.52", "69.3729, -52.1751, -85.3903, 0.29", "70.081, -52.4897, -85.9916, 0.66", "70.5573, -52.6493, -86.2912, 0.66", "71.2253, -52.7981, -86.6987, 0.29", "72.3754, -52.9761, -87.3705, 0.96", "73.1077, -53.0992, -87.8138, 0.29", "73.8737, -53.2271, -88.3052, 1.11", "75.0778, -53.408, -89.1006, 0.37", "76.2989, -53.5486, -89.9162, 0.96", "77.1319, -53.6021, -90.4765, 0.52", "77.8909, -53.6284, -90.9898, 0.96", "78.1777, -53.6312, -91.1753, 0.96", "79.2813, -53.6505, -91.8573, 0.29", "79.8033, -53.6682, -92.1404, 0.81", "80.204, -53.6798, -92.3158, 0.81", "81.1091, -53.6624, -92.6737, 0.29", "81.8311, -53.6087, -92.9319, 0.81" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "39.8101, -76.7554, -58.9301, 0.74", "40.3732, -78.1718, -58.792, 0.74", "40.9069, -79.2135, -58.6092, 0.81", "41.5512, -80.2619, -58.3715, 0.81", "42.3388, -81.3598, -58.0891, 0.59", "43.0401, -82.1903, -57.8589, 0.37", "43.4808, -82.6337, -57.7142, 0.37", "44.4431, -83.4397, -57.3524, 0.88", "44.8482, -83.7129, -57.2138, 0.88", "45.3278, -84.0148, -57.0558, 0.88", "45.9659, -84.455, -56.8841, 0.29", "47.0286, -85.384, -56.6542, 0.29", "47.5641, -86.023, -56.5751, 1.03", "47.9092, -86.5048, -56.5351, 1.33", "48.4922, -87.3394, -56.4534, 1.18", "49.2037, -88.3127, -56.3421, 1.03", "49.7869, -89.0265, -56.2481, 0.81", "50.7814, -89.9683, -56.0767, 0.37", "51.8889, -90.7292, -55.8555, 0.96", "52.6035, -91.0975, -55.7117, 1.18", "53.3889, -91.3929, -55.5347, 1.18", "54.1484, -91.5874, -55.3673, 0.88", "55.3349, -91.7665, -55.1806, 0.44", "55.9034, -91.7987, -55.1706, 0.44", "56.9459, -91.8017, -55.325, 0.37", "57.775, -91.7789, -55.5949, 0.37", "58.9323, -91.7472, -56.1657, 0.66", "59.7712, -91.7547, -56.6804, 1.03", "60.8258, -91.7502, -57.4414, 0.74", "61.5388, -91.7407, -58.0108, 0.52", "62.4306, -91.7108, -58.8104, 0.44", "63.1412, -91.7157, -59.5114, 0.44", "63.8633, -91.7957, -60.204, 0.37" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-6.36203, 214.233, -12.229, 0.29", "-6.50464, 216.383, -12.6055, 0.29", "-6.49011, 216.863, -12.62, 0.29", "-6.47713, 217.371, -12.5895, 0.66", "-6.51181, 217.902, -12.5096, 0.88", "-6.60756, 218.531, -12.3826, 0.88", "-6.87717, 219.602, -12.0033, 0.52", "-7.17316, 220.409, -11.4878, 0.66", "-7.41729, 220.882, -11.0528, 0.81", "-7.85214, 221.553, -10.3143, 0.37", "-8.20952, 222.021, -9.75641, 0.52", "-9.03164, 222.96, -8.57622, 0.74", "-9.66942, 223.609, -7.76208, 1.03", "-10.8632, 224.71, -6.35568, 1.03", "-11.4358, 225.226, -5.70871, 0.74", "-11.8904, 225.658, -5.19759, 0.44", "-12.3245, 226.092, -4.7111, 0.44", "-13.0117, 226.816, -3.98473, 0.44", "-14.0327, 227.944, -2.94933, 0.88", "-14.5703, 228.585, -2.41853, 1.18", "-14.934, 229.043, -2.02607, 0.52", "-15.305, 229.554, -1.57972, 0.52", "-15.7605, 230.291, -0.971866, 0.59", "-16.0263, 230.826, -0.594435, 0.81", "-16.3086, 231.521, -0.246059, 0.29", "-16.5044, 231.938, -0.0729229, 0.29", "-16.8065, 232.413, 0.109425, 0.66", "-17.1682, 232.81, 0.316784, 0.66", "-17.5046, 233.124, 0.545551, 0.37", "-17.8389, 233.423, 0.827433, 0.66", "-18.2698, 233.841, 1.24148, 0.81", "-18.629, 234.249, 1.62325, 0.74", "-19.5773, 235.549, 2.78137, 0.44", "-19.8988, 236.131, 3.26271, 0.37", "-20.0877, 236.675, 3.6535, 0.37", "-20.2118, 237.44, 4.10821, 0.29", "-20.2331, 238.033, 4.42004, 0.15", "-20.196, 238.503, 4.6216, 0.44", "-20.1429, 238.759, 4.687, 0.44", "-20.097, 238.993, 4.74274, 0.44", "-19.9647, 240.525, 5.19813, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-6.36203, 214.233, -12.229, 0.74", "-6.26674, 215.376, -12.6725, 0.74", "-6.24055, 216.378, -13.0431, 0.74", "-6.27146, 217.989, -13.6235, 0.96", "-6.36726, 219.16, -13.9957, 0.96", "-6.57396, 220.539, -14.3694, 0.74", "-6.95456, 222.442, -14.8213, 0.59", "-7.20343, 223.364, -14.9818, 0.81", "-7.5661, 224.58, -15.1134, 0.81", "-8.0428, 226.118, -15.174, 0.81", "-8.51892, 227.81, -15.13, 0.96", "-8.79012, 228.955, -15.0422, 0.96", "-9.10843, 230.89, -14.8368, 0.74", "-9.19668, 231.957, -14.6969, 1.03", "-9.1899, 232.729, -14.5841, 1.03", "-9.0646, 234.048, -14.4219, 1.03", "-8.96948, 234.742, -14.3532, 1.03", "-8.84489, 235.796, -14.2999, 1.03", "-8.81063, 236.697, -14.289, 1.03", "-8.84934, 237.742, -14.3248, 0.96", "-8.99879, 238.891, -14.415, 0.74", "-9.18547, 239.827, -14.5307, 0.74", "-9.4682, 240.925, -14.6861, 0.88", "-9.90784, 242.328, -14.8985, 1.11", "-10.2786, 243.382, -15.0753, 1.11", "-10.9134, 245.092, -15.3641, 0.96", "-11.2546, 246.027, -15.5051, 0.96", "-11.5797, 246.941, -15.6154, 0.96", "-11.8637, 247.721, -15.6901, 0.96", "-12.2423, 248.709, -15.7645, 0.81", "-12.6986, 249.905, -15.8234, 0.96", "-13.0297, 250.798, -15.8281, 0.96", "-13.42, 251.846, -15.7689, 0.96", "-13.6907, 252.634, -15.6805, 1.25", "-13.997, 253.568, -15.502, 1.25", "-14.4125, 254.93, -15.1312, 1.11", "-14.6982, 256.089, -14.7773, 0.88", "-14.8932, 257.297, -14.3786, 0.74", "-14.9396, 258.124, -14.1097, 1.18", "-14.9066, 259.111, -13.7844, 1.18", "-14.8671, 259.73, -13.5726, 1.18", "-14.8104, 260.853, -13.1862, 0.96", "-14.785, 261.686, -12.949, 0.81", "-14.7911, 262.604, -12.7466, 0.81", "-14.8458, 263.66, -12.5502, 0.81", "-14.9472, 264.988, -12.3428, 0.81", "-15.0675, 266.047, -12.1917, 1.11", "-15.2214, 267.174, -12.0566, 1.11", "-15.3722, 268.374, -12.0123, 0.96", "-15.5118, 269.627, -12.0662, 0.96", "-15.6723, 271.33, -12.2969, 0.88", "-15.7844, 272.886, -12.6455, 0.88", "-15.8588, 274.201, -13.0344, 0.88", "-15.9407, 276.241, -13.7361, 0.88", "-15.9903, 277.767, -14.2954, 1.11", "-16.0215, 279.028, -14.7803, 1.11", "-16.067, 280.192, -15.1782, 1.11", "-16.1198, 281.526, -15.511, 0.81", "-16.1816, 283.599, -15.8029, 1.11", "-16.1925, 284.471, -15.8164, 1.11", "-16.1449, 285.92, -15.7409, 1.11", "-16.0117, 288.098, -15.5286, 0.96", "-15.8818, 289.761, -15.3236, 0.96", "-15.7748, 290.883, -15.213, 0.96", "-15.6667, 291.837, -15.1767, 0.96", "-15.4149, 293.619, -15.1715, 0.81", "-15.2052, 294.807, -15.1983, 0.81", "-14.9374, 296.192, -15.2737, 0.66", "-14.5201, 298.327, -15.4272, 0.66", "-14.2049, 300.085, -15.5638, 0.66", "-13.8971, 302.249, -15.7653, 1.03", "-13.8084, 303.247, -15.862, 1.03", "-13.7002, 305.183, -16.1212, 0.81", "-13.6818, 306.353, -16.3159, 0.81", "-13.7144, 307.568, -16.5452, 0.96", "-13.8089, 309.349, -16.9294, 0.66", "-13.8993, 310.635, -17.2392, 0.88", "-13.9969, 312.122, -17.5729, 0.88", "-14.0907, 313.729, -17.8728, 0.88", "-14.1828, 315.544, -18.1271, 1.03", "-14.1911, 316.545, -18.2417, 1.03", "-14.1634, 317.565, -18.3326, 1.03", "-14.0981, 319.339, -18.4426, 0.81", "-14.0639, 321.021, -18.4956, 0.81", "-14.0682, 322.141, -18.5298, 0.81", "-14.1544, 324.443, -18.6009, 0.81", "-14.3036, 326.142, -18.6834, 1.25", "-14.3875, 326.745, -18.7337, 1.33", "-14.5586, 327.754, -18.8578, 1.33", "-14.7647, 328.896, -19.0321, 1.18", "-14.9311, 329.864, -19.2066, 0.74", "-15.183, 331.266, -19.4769, 0.66", "-15.3538, 332.387, -19.7191, 0.96", "-15.4658, 333.407, -19.9507, 0.96", "-15.5255, 334.303, -20.1284, 0.66", "-15.5707, 335.504, -20.2824, 0.66", "-15.6246, 337.035, -20.3855, 0.66", "-15.6813, 338.238, -20.405, 0.96", "-15.7537, 339.183, -20.4169, 0.96", "-15.8593, 340.197, -20.4766, 0.74", "-16.1127, 342.448, -20.6973, 0.74", "-16.2004, 343.179, -20.7858, 0.88", "-16.4178, 345.075, -21.0639, 0.96", "-16.6234, 346.856, -21.3389, 0.81", "-16.8274, 348.686, -21.6389, 0.66", "-16.9723, 350.289, -21.9102, 0.81", "-17.0729, 351.564, -22.0964, 0.96", "-17.1907, 353.487, -22.3091, 0.74", "-17.2521, 354.447, -22.377, 1.03", "-17.3714, 355.676, -22.3838, 1.03", "-17.603, 357.447, -22.3332, 1.33", "-17.7799, 358.576, -22.3041, 1.55", "-18.0982, 360.421, -22.2684, 0.81", "-18.3454, 361.676, -22.2653, 0.66", "-18.6145, 362.943, -22.3017, 0.66", "-18.8173, 363.862, -22.3667, 0.66", "-19.1098, 365.261, -22.5218, 0.66", "-19.3077, 366.432, -22.668, 0.66", "-19.4841, 367.703, -22.8001, 1.25", "-19.5391, 368.275, -22.8535, 1.03", "-19.6156, 369.83, -22.9878, 0.81", "-19.6488, 371.22, -23.0748, 0.81", "-19.6498, 372.751, -23.1527, 0.66", "-19.619, 374.044, -23.1877, 0.66", "-19.5643, 375.325, -23.1912, 0.96", "-19.5084, 376.452, -23.1741, 1.4", "-19.4625, 377.356, -23.1465, 1.4", "-19.4388, 378.023, -23.1292, 1.4", "-19.4315, 379.212, -23.1156, 0.88", "-19.4321, 380.684, -23.1107, 0.74", "-19.4235, 381.648, -23.1124, 0.74", "-19.4059, 383.246, -23.1274, 0.74", "-19.3742, 384.601, -23.1457, 0.66", "-19.315, 386.124, -23.1743, 0.66", "-19.2054, 388.2, -23.229, 0.66", "-19.1014, 389.71, -23.2612, 0.74", "-19.0165, 390.646, -23.2744, 0.74", "-18.8892, 391.755, -23.2811, 0.96", "-18.764, 392.746, -23.275, 1.11", "-18.6697, 393.489, -23.2722, 1.11", "-18.5419, 394.76, -23.285, 0.74", "-18.4439, 395.859, -23.3157, 0.59", "-18.3244, 397.102, -23.3463, 0.59", "-18.1847, 398.287, -23.378, 0.88", "-18.1114, 398.871, -23.4032, 1.25", "-18.0016, 399.746, -23.4597, 1.4", "-17.928, 400.36, -23.5143, 1.4", "-17.8406, 401.285, -23.6185, 0.88", "-17.7639, 402.397, -23.7673, 0.66", "-17.7112, 403.851, -23.9839, 0.66", "-17.7025, 404.933, -24.1345, 0.66", "-17.7146, 405.661, -24.2319, 0.52", "-17.7618, 407.048, -24.4078, 0.81", "-17.8087, 408.124, -24.55, 0.81", "-17.8551, 409.18, -24.677, 0.66", "-17.8943, 410.781, -24.8363, 0.59", "-17.9038, 411.666, -24.9037, 0.88", "-17.8977, 412.717, -24.9705, 1.11", "-17.8782, 413.762, -25.0209, 1.11", "-17.8535, 414.599, -25.0515, 1.11", "-17.8205, 415.365, -25.0711, 0.88", "-17.7574, 416.292, -25.0999, 0.52", "-17.6824, 417.227, -25.1236, 0.81", "-17.6127, 418.175, -25.1318, 0.81", "-17.5861, 418.734, -25.1227, 0.81", "-17.5536, 419.734, -25.1021, 0.96", "-17.5382, 420.976, -25.0767, 0.59", "-17.5334, 421.865, -25.0571, 0.44", "-17.5338, 423.161, -25.0095, 0.44", "-17.5348, 424.148, -24.9622, 1.11", "-17.5401, 424.594, -24.9385, 1.4", "-17.5921, 425.555, -24.8816, 1.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-14.7458, 154.602, -15.3404, 0.29", "-15.3657, 155.888, -15.9972, 0.29", "-15.8042, 156.993, -16.619, 0.52", "-16.0867, 157.779, -17.0916, 0.52", "-16.5757, 159.259, -17.9829, 0.66", "-16.7578, 159.856, -18.3389, 0.66", "-16.9601, 160.469, -18.6534, 0.37", "-17.5662, 162.191, -19.2726, 0.29", "-17.7844, 162.826, -19.3937, 0.59", "-18.0388, 163.606, -19.4505, 0.81", "-18.2005, 164.085, -19.4333, 0.81", "-18.9304, 166.105, -19.2312, 0.74", "-19.3565, 167.182, -19.0702, 0.74", "-19.9495, 168.502, -18.8286, 0.44", "-20.3481, 169.382, -18.7035, 0.29", "-20.7395, 170.266, -18.6302, 0.29", "-20.988, 170.861, -18.6248, 0.52", "-21.2309, 171.563, -18.6901, 0.52", "-21.4888, 172.42, -18.8142, 0.52", "-21.8665, 173.792, -19.0742, 0.74", "-22.0763, 174.632, -19.2658, 0.96", "-22.2104, 175.246, -19.4159, 0.96", "-22.3761, 176.127, -19.6282, 0.59", "-22.5415, 177.2, -19.8791, 0.37", "-22.61, 178.208, -20.1502, 0.22", "-22.6046, 178.883, -20.337, 0.22", "-22.5764, 179.521, -20.4967, 0.74", "-22.514, 180.455, -20.7233, 1.03", "-22.485, 180.951, -20.8422, 1.03", "-22.3965, 182.823, -21.2771, 0.44", "-22.3223, 184.12, -21.5708, 0.44", "-22.2811, 185.29, -21.8026, 0.37", "-22.265, 186.35, -21.9939, 0.37", "-22.2701, 187.356, -22.1492, 0.37", "-22.2991, 188.421, -22.2593, 0.37", "-22.3279, 189.451, -22.3029, 0.37", "-22.2808, 191.091, -22.3274, 0.88", "-22.2154, 191.924, -22.3037, 1.18", "-22.1442, 192.544, -22.2648, 1.18", "-21.9968, 193.543, -22.1716, 0.74", "-21.7951, 194.835, -22.0204, 0.52", "-21.6188, 196.04, -21.872, 0.44", "-21.4169, 197.378, -21.6947, 0.37", "-21.3152, 198.088, -21.5867, 0.37", "-21.1696, 199.187, -21.3858, 0.37", "-21.016, 200.509, -21.092, 0.59", "-20.9399, 201.332, -20.8698, 1.03", "-20.8748, 202.099, -20.6393, 1.03", "-20.8176, 202.925, -20.3858, 0.96", "-20.7906, 204.066, -20.0568, 0.29", "-20.7974, 205.121, -19.818, 0.29", "-20.8177, 205.72, -19.7285, 0.52", "-20.8629, 206.29, -19.6782, 0.52", "-20.9456, 206.973, -19.6571, 0.29", "-21.0867, 207.914, -19.681, 0.52", "-21.2823, 209.05, -19.722, 0.66", "-21.4339, 210.028, -19.6992, 0.66", "-21.5331, 210.95, -19.6217, 0.52", "-21.5689, 211.585, -19.5482, 0.81", "-21.5633, 212.301, -19.4778, 1.11", "-21.5125, 213.436, -19.4073, 0.15", "-21.4446, 214.53, -19.3591, 0.15", "-21.3731, 215.291, -19.3382, 0.52", "-21.2092, 216.585, -19.3257, 0.59", "-20.9997, 218.03, -19.327, 0.29", "-20.8376, 219.177, -19.3475, 0.29", "-20.7036, 220.13, -19.4005, 0.96", "-20.642, 220.655, -19.4363, 0.96", "-20.5597, 221.51, -19.4609, 0.59", "-20.4784, 222.296, -19.4605, 0.22", "-20.3833, 223.409, -19.4407, 0.22", "-20.3051, 224.355, -19.4402, 0.88", "-20.2757, 224.903, -19.4575, 0.88", "-20.2658, 225.584, -19.4977, 0.88", "-20.2895, 226.729, -19.6053, 0.29", "-20.3695, 227.86, -19.7574, 0.22", "-20.4446, 228.352, -19.8356, 0.22", "-20.7078, 229.393, -20.0062, 0.81", "-20.8721, 229.923, -20.069, 1.11", "-20.9737, 230.231, -20.0871, 1.11", "-21.1956, 231.13, -20.0772, 0.88", "-21.3172, 232.021, -20.0355, 0.59", "-21.3781, 233.058, -19.9622, 0.29", "-21.389, 234.529, -19.838, 0.29", "-21.3833, 235.712, -19.7501, 0.74", "-21.3438, 237.556, -19.686, 0.52", "-21.2855, 238.705, -19.7092, 1.03", "-21.2227, 239.612, -19.7916, 1.03", "-21.1992, 240.177, -19.8911, 0.74", "-21.2257, 241.379, -20.2535, 0.44", "-21.3745, 242.607, -20.7158, 0.88", "-21.53, 243.386, -21.0173, 1.18", "-21.6016, 243.774, -21.1711, 1.18", "-21.744, 244.66, -21.5022, 0.59", "-21.9095, 245.985, -21.9381, 0.29", "-22.0402, 247.364, -22.3101, 0.81", "-22.1664, 248.692, -22.599, 0.52", "-22.2522, 249.561, -22.7735, 0.52", "-22.3324, 250.416, -22.9462, 0.74", "-22.45, 251.483, -23.1623, 0.74", "-22.6327, 252.66, -23.3926, 0.22", "-22.7181, 253.087, -23.4992, 0.22", "-22.8808, 253.746, -23.6866, 0.52", "-23.0083, 254.212, -23.8094, 0.52", "-23.2352, 255.114, -24.0414, 0.29", "-23.4113, 255.884, -24.2287, 0.29", "-23.6052, 256.838, -24.4502, 1.03", "-23.748, 257.649, -24.6146, 1.03", "-23.8461, 258.212, -24.7044, 1.03", "-23.9904, 259.039, -24.7888, 0.52", "-24.1007, 259.732, -24.8107, 0.29", "-24.2279, 260.443, -24.7919, 0.59", "-24.324, 260.921, -24.7397, 0.59", "-24.5131, 261.917, -24.5769, 0.22", "-24.6854, 262.922, -24.3756, 0.81", "-24.7772, 263.581, -24.2214, 1.03", "-24.8006, 263.814, -24.1634, 1.03", "-24.8868, 264.798, -23.9302, 0.59", "-24.9844, 265.773, -23.7288, 0.37", "-25.0646, 266.319, -23.6351, 0.37", "-25.2282, 267.051, -23.5497, 0.66", "-25.362, 267.513, -23.5133, 0.66", "-25.8196, 268.812, -23.4891, 0.29", "-26.0725, 269.441, -23.5187, 0.29", "-26.4933, 270.425, -23.6031, 0.74", "-26.8159, 271.173, -23.672, 0.74", "-27.1668, 271.986, -23.7408, 0.74", "-27.6279, 273.091, -23.8046, 0.29", "-28.0162, 274.079, -23.8286, 0.29", "-28.508, 275.523, -23.7727, 1.33", "-28.7192, 276.252, -23.6796, 1.33", "-28.9629, 277.291, -23.4815, 1.11", "-29.1214, 278.174, -23.2565, 0.59", "-29.2033, 279.122, -22.9611, 0.44", "-29.1722, 281.029, -22.3614, 0.29", "-28.9886, 282.394, -21.9458, 0.74", "-28.8106, 283.189, -21.7473, 0.81", "-28.6074, 283.867, -21.625, 0.44", "-28.1497, 285.187, -21.4845, 0.22", "-27.7133, 286.339, -21.4371, 0.81", "-27.4951, 286.865, -21.4488, 0.81", "-27.0446, 287.934, -21.5152, 0.22", "-26.7155, 288.777, -21.5597, 0.22", "-26.3375, 289.805, -21.6191, 0.81", "-26.2436, 290.097, -21.628, 0.81", "-25.9295, 291.114, -21.6202, 0.29", "-25.6713, 291.951, -21.5898, 0.88", "-25.3769, 292.882, -21.5081, 0.88", "-24.9457, 294.328, -21.3436, 0.22", "-24.6959, 295.34, -21.2263, 0.74", "-24.6359, 295.664, -21.1886, 0.88", "-24.5095, 296.793, -21.0999, 0.15", "-24.4526, 297.723, -21.0435, 0.52", "-24.4333, 298.537, -21.0092, 0.22", "-24.4252, 299.346, -21.01, 0.66", "-24.4192, 299.752, -21.0348, 0.88", "-24.4135, 301.398, -21.2365, 0.22", "-24.4233, 301.895, -21.3252, 0.59", "-24.4463, 302.601, -21.4821, 0.44", "-24.5074, 303.572, -21.7009, 0.22", "-24.5643, 304.162, -21.8224, 0.37", "-24.7174, 305.201, -22.0105, 0.15", "-24.9312, 306.209, -22.1587, 0.81", "-25.0732, 306.795, -22.2309, 1.11", "-25.3152, 307.708, -22.3134, 1.03", "-25.5524, 308.563, -22.3588, 0.29", "-25.7773, 309.411, -22.398, 0.29", "-25.9816, 310.186, -22.4428, 0.29", "-26.338, 311.575, -22.5421, 0.22", "-26.553, 312.423, -22.6151, 0.74", "-27.0062, 314.283, -22.8145, 0.22", "-27.2843, 315.395, -22.9513, 0.81", "-27.8659, 317.677, -23.2587, 0.22", "-27.9682, 318.077, -23.3148, 0.22", "-28.1773, 318.91, -23.4298, 0.81", "-28.2501, 319.219, -23.4643, 1.03", "-28.4177, 319.951, -23.5219, 0.22", "-28.5881, 320.644, -23.5489, 0.44", "-28.8088, 321.517, -23.5491, 0.22", "-28.9775, 322.182, -23.5396, 0.44", "-29.1926, 323.026, -23.5122, 0.22", "-29.4196, 323.856, -23.4888, 0.44", "-29.6882, 324.716, -23.4715, 0.59", "-29.9867, 325.621, -23.5081, 0.29", "-30.3757, 326.789, -23.6449, 0.44", "-30.7871, 327.99, -23.8609, 0.44", "-31.3445, 329.646, -24.2226, 0.81", "-31.6078, 330.569, -24.4625, 0.96", "-31.8863, 331.805, -24.8498, 0.66", "-32.2265, 333.382, -25.469, 0.29", "-32.3301, 333.887, -25.7126, 0.44", "-32.4718, 334.72, -26.1688, 0.15", "-32.6133, 335.898, -26.8822, 0.44", "-32.6771, 336.737, -27.3926, 0.44", "-32.7522, 337.641, -27.9035, 0.15", "-32.7652, 337.977, -28.1142, 0.74" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-14.7458, 154.602, -15.3404, 0.22", "-13.8051, 155.857, -15.5261, 0.22", "-13.3233, 156.404, -15.5568, 0.22", "-12.8573, 156.934, -15.5865, 0.22", "-12.3701, 157.488, -15.6176, 0.22", "-11.981, 157.931, -15.6424, 0.44", "-11.2331, 158.781, -15.69, 0.74", "-10.726, 159.412, -15.6579, 0.88" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-50.2909, 92.6239, -15.8664, 0.29", "-51.1204, 92.222, -16.7977, 0.29", "-51.6209, 91.9796, -17.3597, 0.29", "-52.3586, 91.6222, -18.1879, 0.29", "-53.171, 91.2286, -19.1001, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-50.2909, 92.6239, -15.8664, 0.22", "-51.371, 94.2986, -16.2708, 0.22", "-51.9293, 95.1643, -16.4798, 0.66", "-52.179, 95.5515, -16.5733, 0.66", "-52.65, 96.2817, -16.7496, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-180.707, 4.31925, -106.83, 0.22", "-180.481, 6.22415, -108.02, 0.22", "-180.427, 6.68453, -108.307, 0.22", "-180.321, 7.57361, -108.863, 0.88", "-180.287, 7.85972, -109.041, 0.66", "-180.258, 8.1063, -109.195, 0.66" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-180.707, 4.31925, -106.83, 0.22", "-181.453, 5.33294, -107.264, 0.22", "-181.797, 5.69077, -107.444, 0.44", "-182.499, 6.3181, -107.801, 0.22", "-182.776, 6.54888, -107.934, 0.59", "-183.523, 7.17734, -108.272, 0.29", "-184.449, 7.957, -108.691, 0.29", "-184.971, 8.33037, -108.914, 0.29", "-185.401, 8.58773, -109.101, 0.59", "-186.041, 8.89355, -109.387, 0.22", "-186.574, 9.13367, -109.617, 0.44" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-133.217, -81.9256, -45.034, 0.37", "-133.419, -82.899, -45.8585, 0.37", "-133.538, -83.5816, -46.4268, 0.15", "-133.602, -84.1633, -46.8764, 0.44", "-133.644, -84.6697, -47.2475, 0.44", "-133.693, -85.3929, -47.7571, 0.22", "-133.734, -86.0176, -48.175, 1.03", "-133.744, -86.2694, -48.3146, 1.03", "-133.769, -87.2037, -48.7433, 0.29", "-133.794, -87.8469, -48.9991, 1.03", "-133.828, -88.4738, -49.1988, 1.03", "-133.875, -89.1152, -49.3614, 0.29", "-133.945, -90.0007, -49.5384, 0.29", "-133.984, -90.506, -49.6111, 0.81", "-134.03, -91.0082, -49.6556, 0.52", "-134.139, -92.1524, -49.7205, 0.29", "-134.238, -93.1092, -49.7526, 0.74", "-134.296, -93.6675, -49.7367, 1.03", "-134.424, -94.8679, -49.6468, 0.22", "-134.485, -95.4175, -49.5796, 0.22", "-134.52, -95.7052, -49.5282, 0.59", "-134.551, -95.9231, -49.4848, 0.59", "-134.739, -97.2168, -49.2411, 0.59", "-134.844, -97.8583, -49.1798, 0.37", "-135.029, -98.8461, -49.1532, 1.25", "-135.097, -99.2084, -49.159, 1.47", "-135.289, -100.148, -49.2064, 0.37", "-135.443, -100.758, -49.2695, 1.03", "-135.769, -101.799, -49.4486, 0.29", "-135.929, -102.25, -49.521, 0.44", "-136.021, -102.548, -49.5503, 0.66", "-136.1, -102.866, -49.5649, 0.52", "-136.231, -103.543, -49.5227, 0.29", "-136.309, -104.183, -49.4152, 0.74", "-136.309, -104.457, -49.3311, 0.74", "-136.239, -105.796, -48.8956, 0.22", "-136.201, -106.134, -48.7868, 0.44", "-136.123, -106.55, -48.6415, 0.59", "-135.969, -107.258, -48.371, 0.37", "-135.794, -108.097, -48.0482, 0.74", "-135.724, -108.542, -47.8806, 0.74", "-135.679, -109.146, -47.6761, 0.29", "-135.647, -110.183, -47.3631, 1.03", "-135.667, -111.179, -47.1253, 0.22", "-135.703, -111.581, -47.0471, 0.88", "-135.885, -112.727, -46.9026, 0.29", "-136.029, -113.431, -46.8366, 0.15", "-136.17, -113.951, -46.8147, 0.74", "-136.447, -114.709, -46.8549, 1.03", "-136.671, -115.23, -46.9213, 1.11", "-137.138, -116.196, -47.0904, 0.22", "-137.265, -116.439, -47.1487, 0.59", "-137.364, -116.633, -47.2035, 0.59", "-137.87, -117.656, -47.523, 0.22", "-138.025, -118.017, -47.6454, 0.74", "-138.144, -118.424, -47.7705, 0.74", "-138.218, -119.156, -47.9403, 0.22", "-138.167, -119.988, -48.1104, 0.59", "-138.106, -120.318, -48.1825, 0.74", "-137.882, -121.078, -48.3667, 0.22", "-137.557, -121.996, -48.5719, 0.88", "-137.123, -123.015, -48.7875, 0.15", "-136.94, -123.365, -48.851, 0.15", "-136.601, -123.933, -48.9133, 0.74", "-136.361, -124.318, -48.9526, 0.74" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-133.217, -81.9256, -45.034, 0.29", "-133.879, -81.4471, -44.2594, 0.29", "-134.486, -81.1166, -43.6044, 0.29", "-135.102, -80.8563, -42.9007, 0.29", "-135.402, -80.7494, -42.5489, 0.29", "-136.071, -80.5536, -41.7493, 0.52", "-136.511, -80.466, -41.2352, 0.74", "-136.93, -80.4386, -40.7187, 0.37", "-137.493, -80.4659, -40.0502, 0.66", "-137.723, -80.5031, -39.8048, 1.03", "-138.257, -80.6589, -39.2524, 1.03", "-138.98, -80.9832, -38.5111, 0.22", "-139.422, -81.2382, -38.0479, 0.22", "-139.834, -81.5979, -37.5402, 0.44", "-140.074, -81.8713, -37.2073, 0.44", "-140.404, -82.3357, -36.6783, 0.29", "-140.665, -82.8052, -36.1978, 1.11", "-140.785, -83.0651, -35.9539, 1.25", "-141.245, -84.2123, -34.9775, 0.66", "-141.483, -84.8865, -34.4392, 0.22", "-141.605, -85.2957, -34.1346, 0.22", "-141.721, -85.8131, -33.7851, 0.22", "-141.816, -86.2874, -33.5104, 0.81", "-141.899, -86.6805, -33.3119, 0.81", "-142.007, -87.1297, -33.1313, 0.29", "-142.197, -87.8258, -32.8637, 0.88", "-142.556, -88.8457, -32.4394, 0.22", "-142.734, -89.2117, -32.2638, 0.52", "-143.04, -89.7223, -31.9939, 0.29", "-143.293, -90.0665, -31.8064, 0.66", "-143.844, -90.6837, -31.4733, 0.29", "-144.141, -90.9803, -31.3467, 0.96", "-144.332, -91.1621, -31.2811, 0.96", "-144.997, -91.8154, -31.047, 0.29", "-145.379, -92.2262, -30.8809, 1.33", "-145.734, -92.6273, -30.6871, 1.55", "-146.313, -93.2811, -30.2942, 0.29", "-146.594, -93.5972, -30.0623, 0.29", "-146.96, -94.0264, -29.7024, 0.52", "-147.422, -94.5394, -29.2185, 0.96", "-147.726, -94.8892, -28.8538, 0.44", "-148.078, -95.3343, -28.3527, 0.29", "-148.489, -95.898, -27.6442, 0.88", "-148.741, -96.3022, -27.1715, 0.96" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-128.782, -74.6693, -37.3988, 0.29", "-129.459, -75.4268, -37.6701, 0.29", "-130.094, -76.3629, -37.7054, 0.29", "-130.594, -77.1606, -37.5943, 0.81", "-131.014, -77.8257, -37.405, 0.81", "-131.449, -78.4998, -37.0732, 0.37", "-132.411, -79.9374, -36.0008, 0.37", "-132.802, -80.4974, -35.2631, 0.59", "-133.059, -80.8205, -34.6973, 0.88", "-133.348, -81.1501, -34.0129, 0.88", "-133.812, -81.6693, -32.8351, 1.03", "-134.192, -82.121, -31.8074, 1.03", "-134.633, -82.7594, -30.4612, 0.59", "-134.844, -83.276, -29.5412, 0.37", "-134.976, -84.0627, -28.4288, 0.37", "-134.997, -84.9068, -27.4948, 0.66", "-134.967, -85.6447, -26.8583, 0.96", "-134.862, -87.0848, -25.8166, 1.03", "-134.763, -88.1883, -25.0857, 0.44", "-134.695, -89.0624, -24.4841, 0.44", "-134.657, -89.6106, -24.1099, 0.66", "-134.624, -90.209, -23.6846, 0.88", "-134.485, -90.8856, -23.0248, 0.88", "-134.168, -91.6453, -22.0926, 0.44", "-133.759, -92.2641, -21.1838, 0.74", "-133.304, -92.7693, -20.3972, 0.74", "-132.665, -93.3172, -19.5326, 1.03", "-130.587, -94.7368, -17.2102, 0.44", "-129.963, -95.0715, -16.6291, 0.44", "-129.664, -95.189, -16.3829, 0.74", "-128.788, -95.4479, -15.6998, 0.74", "-127.911, -95.6237, -14.9948, 0.66", "-127.371, -95.646, -14.5558, 0.52", "-126.77, -95.5643, -14.0865, 0.52", "-125.459, -95.0485, -12.8045, 1.03", "-124.713, -94.4079, -11.8577, 0.22", "-124.528, -93.7639, -11.2835, 0.22", "-124.775, -92.4181, -10.3784, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-128.782, -74.6693, -37.3988, 0.29", "-130.433, -73.8552, -36.7515, 0.29", "-131.121, -73.559, -36.3367, 0.29", "-131.577, -73.3652, -35.9245, 0.66", "-132.064, -73.1502, -35.4252, 0.66", "-132.669, -72.9035, -34.7774, 0.44", "-133.263, -72.6614, -34.1415, 0.29", "-134.383, -72.284, -32.8321, 0.59", "-135.238, -72.0086, -31.6398, 1.03", "-135.862, -71.8045, -30.6101, 1.4", "-136.099, -71.7267, -30.1304, 1.4" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "63.8633, -91.7957, -60.204, 0.81", "64.4192, -92.2738, -61.1524, 0.81", "64.7266, -92.5386, -61.634, 1.11", "66.3936, -93.8634, -64.0099, 0.44", "66.7042, -94.0747, -64.4141, 0.29", "67.1011, -94.3041, -64.8857, 0.29", "67.8105, -94.6758, -65.6937, 0.29", "68.3197, -94.8602, -66.2745, 0.59", "68.6408, -94.9744, -66.7665, 0.74", "69.0209, -95.0914, -67.3691, 0.37", "69.4298, -95.1773, -68.0883, 0.81", "69.6404, -95.1986, -68.4721, 0.96", "70.4467, -95.2259, -70.0019, 1.4", "71.8569, -95.1747, -73.233, 0.74", "72.2136, -95.1395, -74.142, 0.29", "72.5371, -95.0945, -75.012, 0.29", "72.7238, -95.0568, -75.5172, 0.66", "73.5032, -94.8739, -77.4878, 1.69", "74.9894, -94.4948, -80.849, 1.18", "76.0655, -94.2511, -83.0032, 0.74", "76.6542, -94.1807, -84.1455, 1.47", "76.8855, -94.1878, -84.5623, 1.47", "77.5018, -94.2955, -85.576, 0.29", "78.2558, -94.5846, -86.5405, 0.29", "79.0394, -95.1277, -87.1895, 1.11", "79.7516, -95.8309, -87.651, 0.29", "80.1967, -96.3825, -87.8999, 1.25", "80.4454, -96.7272, -88.0365, 1.25", "80.9708, -97.518, -88.3245, 0.15", "81.2975, -97.9459, -88.498, 0.59", "81.5189, -98.1447, -88.6195, 0.59", "82.1588, -98.5649, -88.9952, 0.22", "82.911, -98.9568, -89.43, 1.84", "83.4182, -99.1732, -89.7171, 1.84", "84.5087, -99.553, -90.3115, 0.22", "85.1991, -99.7766, -90.654, 0.59", "86.033, -100.061, -91.0311, 0.22", "86.6854, -100.31, -91.298, 0.22", "87.3719, -100.645, -91.5329, 0.88", "87.7485, -100.862, -91.6433, 1.11", "88.795, -101.551, -91.9022, 0.22", "89.339, -101.931, -92.014, 1.33", "89.634, -102.148, -92.0747, 1.55", "90.4378, -102.817, -92.2392, 0.22", "90.9489, -103.289, -92.3426, 0.66", "91.2064, -103.552, -92.4007, 0.66", "91.7213, -104.132, -92.541, 0.22", "92.1831, -104.672, -92.6878, 0.44", "92.5545, -105.121, -92.8249, 0.22", "92.9103, -105.549, -92.9779, 0.96", "93.1912, -105.883, -93.0748, 1.18", "94.1337, -107.026, -93.3292, 0.15", "94.5209, -107.484, -93.4033, 0.96", "94.8034, -107.802, -93.476, 0.96", "95.3141, -108.366, -93.6331, 0.15", "96.3291, -109.502, -93.9972, 0.81", "96.8468, -110.06, -94.2323, 0.81", "97.5396, -110.757, -94.607, 0.29", "98.6773, -111.801, -95.3089, 0.44", "99.1243, -112.16, -95.6076, 0.81", "99.4731, -112.381, -95.8552, 0.81", "100.324, -112.77, -96.541, 0.37", "100.901, -112.954, -96.9918, 0.29", "101.534, -113.106, -97.438, 0.59", "102.18, -113.243, -97.8391, 0.44", "103.009, -113.395, -98.3377, 0.29", "104.046, -113.57, -98.9249, 0.59", "104.686, -113.669, -99.3147, 0.59", "105.244, -113.742, -99.6918, 0.29", "106.162, -113.833, -100.341, 0.29", "106.712, -113.881, -100.749, 0.29", "107.189, -113.928, -101.071, 0.74", "108.366, -114.035, -101.781, 0.74", "108.896, -114.093, -102.092, 0.37", "109.233, -114.135, -102.284, 1.03", "109.719, -114.197, -102.547, 1.03", "110.707, -114.371, -103.086, 0.29", "112.17, -114.715, -103.846, 1.11", "113.272, -115.049, -104.34, 0.44", "113.603, -115.166, -104.501, 0.22" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "63.8633, -91.7957, -60.204, 0.52", "65.0895, -91.7305, -59.9734, 0.52", "65.8828, -91.6393, -59.8473, 0.52", "66.6952, -91.5166, -59.7253, 0.81", "67.3116, -91.3636, -59.6506, 0.81", "68.34, -91.0077, -59.5507, 0.29", "69.1133, -90.6493, -59.5041, 0.29", "69.7599, -90.1617, -59.5235, 0.88", "70.2704, -89.6147, -59.5703, 1.11", "70.8637, -88.7597, -59.686, 0.44", "71.2803, -87.9063, -59.8402, 0.37", "71.6166, -86.9146, -60.0606, 0.37", "71.9242, -85.5887, -60.3454, 0.66", "72.0531, -84.7245, -60.5206, 1.03", "72.1235, -83.8163, -60.6599, 1.03", "72.1478, -82.3814, -60.7399, 0.52", "72.1394, -81.8473, -60.7163, 0.37", "72.1299, -80.9609, -60.5834, 1.03", "72.1457, -80.4299, -60.4447, 1.03", "72.2684, -79.2715, -60.0774, 0.29", "72.6001, -77.4158, -59.3736, 0.22", "72.768, -76.7558, -59.0888, 0.66", "72.9331, -76.1942, -58.853, 0.52", "73.1838, -75.3768, -58.5628, 0.37", "73.5556, -74.2661, -58.2316, 0.74", "73.83, -73.5527, -58.0455, 0.22", "74.1951, -72.6841, -57.8217, 0.88", "74.3609, -72.2442, -57.6955, 0.88", "74.7652, -71.0099, -57.3261, 0.29", "74.9298, -70.3783, -57.1379, 0.44", "75.0582, -69.725, -56.9346, 0.29", "75.1679, -68.9929, -56.7545, 0.29", "75.2566, -67.9116, -56.5619, 0.81", "75.299, -67.124, -56.4368, 1.03", "75.3122, -66.5785, -56.3666, 1.03", "75.304, -65.9756, -56.3147, 0.22", "75.282, -64.7847, -56.2135, 0.22", "75.3033, -63.8194, -56.0687, 0.81", "75.349, -63.3421, -55.9447, 0.81", "75.478, -62.659, -55.6433, 0.44", "75.6679, -61.9967, -55.2594, 0.44", "75.9791, -61.0901, -54.6349, 0.96", "76.2997, -60.2067, -53.9275, 0.96", "76.5067, -59.6196, -53.4513, 1.11", "76.7928, -58.776, -52.8033, 0.29", "77.0232, -58.1126, -52.3095, 0.81", "77.2957, -57.3872, -51.8042, 0.81", "77.7063, -56.3714, -51.215, 0.44", "78.0729, -55.3939, -50.7543, 1.11", "78.3325, -54.6968, -50.466, 1.11", "78.5237, -54.1943, -50.2834, 0.81", "78.7634, -53.6786, -50.0992, 0.52", "79.3891, -52.6689, -49.7601, 0.22", "80.1151, -51.8317, -49.5267, 0.22", "80.7271, -51.3689, -49.4352, 0.59", "80.9744, -51.2512, -49.4328, 0.59", "82.4353, -50.7907, -49.5711, 0.52", "83.3018, -50.6285, -49.7016, 0.29", "84.4548, -50.5045, -49.9114, 0.52", "85.5789, -50.3977, -50.1561, 0.44", "86.3337, -50.3098, -50.3465, 0.81", "86.9701, -50.1971, -50.5132, 1.03", "88.1425, -49.8681, -50.8091, 0.29", "88.7291, -49.653, -50.9042, 0.29", "89.4016, -49.3846, -50.9492, 0.81", "89.8715, -49.207, -50.9454, 0.81", "90.8177, -48.9152, -50.8919, 0.52", "92.0313, -48.6963, -50.7559, 0.15", "92.9795, -48.7034, -50.5868, 0.44", "93.6105, -48.8195, -50.3839, 0.74", "94.0769, -48.9403, -50.182, 1.03", "94.5621, -49.0677, -49.9356, 1.03", "95.2604, -49.2253, -49.5178, 0.88", "96.1466, -49.2968, -48.927, 0.37", "97.4932, -49.0334, -48.0602, 0.81", "98.1975, -48.689, -47.6387, 0.81", "98.8594, -48.1732, -47.2006, 0.29", "99.3069, -47.7153, -46.8665, 0.29", "99.9108, -46.9793, -46.3888, 0.15", "100.41, -46.3813, -46.0314, 1.03", "100.728, -46.0526, -45.8248, 1.03", "102.079, -44.9602, -44.9804, 0.52", "102.846, -44.4915, -44.5209, 0.52", "103.716, -44.1067, -44.0305, 0.44", "105.223, -43.628, -43.2417, 0.88", "106.154, -43.3916, -42.8058, 0.74", "107.065, -43.2058, -42.4661, 0.44", "107.684, -43.1202, -42.3088, 0.37", "108.507, -43.0438, -42.1546, 0.22", "109.213, -43.0224, -42.0643, 0.22", "110.157, -42.9932, -41.9837, 0.44", "110.755, -42.9553, -41.9645, 0.22", "111.547, -42.8816, -41.9626, 0.22", "112.335, -42.8083, -41.9971, 0.44", "113.621, -42.7649, -42.1127, 0.29" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-17.5921, 425.555, -24.8816, 0.74", "-17.3487, 427.476, -25.2016, 0.74", "-17.2682, 428.283, -25.3172, 0.52", "-17.1971, 429.077, -25.4021, 0.37", "-17.1082, 430.336, -25.5177, 0.37", "-17.0797, 430.809, -25.5553, 0.59", "-17.0194, 431.815, -25.6174, 0.74", "-16.9973, 432.447, -25.6303, 0.74", "-16.927, 433.654, -25.6656, 0.37", "-16.869, 434.535, -25.6987, 0.37", "-16.7701, 436.06, -25.7606, 0.81", "-16.7061, 437.083, -25.8056, 0.96", "-16.6396, 438.124, -25.8457, 0.96", "-16.553, 439.484, -25.8985, 0.66", "-16.5069, 440.281, -25.9331, 0.44", "-16.4739, 440.9, -25.953, 0.44", "-16.4326, 442.065, -25.9902, 0.44", "-16.4186, 443.089, -26.0244, 0.81", "-16.4281, 443.796, -26.0535, 1.03", "-16.4516, 444.532, -26.0879, 1.03", "-16.5043, 445.768, -26.1709, 0.74", "-16.5595, 446.731, -26.2566, 0.74", "-16.6768, 448.27, -26.4148, 0.44", "-16.8219, 449.791, -26.6023, 0.44", "-16.8867, 450.526, -26.7073, 1.03", "-16.9382, 451.235, -26.8191, 1.18", "-16.9865, 452.379, -27.0316, 0.52", "-16.9805, 453.484, -27.2753, 0.74", "-16.9276, 454.603, -27.5743, 1.11", "-16.8462, 455.637, -27.879, 0.44", "-16.7614, 456.557, -28.1717, 0.37", "-16.6538, 457.541, -28.4884, 0.37", "-16.4844, 458.924, -28.9249, 0.59", "-16.3563, 459.932, -29.2212, 0.96", "-16.2728, 460.649, -29.3975, 1.18", "-16.2123, 461.308, -29.5202, 1.18", "-16.0864, 462.773, -29.7146, 0.44", "-16.0114, 463.792, -29.7738, 0.37", "-15.9581, 464.519, -29.7704, 0.59", "-15.8714, 465.426, -29.7419, 0.44", "-15.7403, 466.533, -29.7223, 0.44", "-15.6312, 467.352, -29.7204, 0.74", "-15.5493, 467.965, -29.7334, 0.74", "-15.4883, 468.434, -29.7599, 0.74", "-15.3782, 469.382, -29.846, 0.37", "-15.2618, 470.545, -29.9826, 1.18", "-15.2254, 470.977, -30.0357, 1.18", "-15.1521, 471.914, -30.1232, 0.88", "-15.0736, 472.855, -30.1778, 0.59", "-14.9728, 474.085, -30.201, 0.88", "-14.9126, 474.981, -30.194, 1.11", "-14.8581, 475.89, -30.16, 1.11", "-14.7758, 477.116, -30.1004, 0.52", "-14.6686, 478.337, -30.0179, 0.44", "-14.5898, 479.022, -29.9549, 0.44" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-17.5921, 425.555, -24.8816, 0.29", "-17.9493, 426.641, -24.3628, 0.29", "-18.2884, 427.831, -23.856, 0.66", "-18.4806, 428.521, -23.5653, 0.66", "-18.6495, 429.141, -23.2974, 0.37", "-18.9422, 430.194, -22.8234, 0.22", "-19.0353, 430.521, -22.6707, 0.66", "-19.1411, 430.949, -22.4626, 0.66", "-19.4214, 432.129, -21.9325, 0.37", "-19.6036, 432.843, -21.6299, 0.37", "-19.86, 433.808, -21.2608, 0.59", "-19.9689, 434.26, -21.1052, 0.37", "-20.1276, 434.959, -20.8829, 0.29", "-20.2989, 435.745, -20.6679, 0.74", "-20.3881, 436.18, -20.575, 0.96", "-20.5078, 436.755, -20.4603, 0.52", "-20.6909, 437.564, -20.3091, 0.44", "-20.8652, 438.314, -20.149, 0.29", "-21.101, 439.307, -19.8856, 0.29", "-21.2603, 439.93, -19.6789, 0.66", "-21.4244, 440.586, -19.4324, 0.81", "-21.6728, 441.685, -18.9842, 0.29", "-21.9396, 443.072, -18.381, 0.29", "-22.0837, 444.033, -17.9462, 0.29", "-22.1691, 444.872, -17.5767, 0.88", "-22.2095, 445.511, -17.3175, 0.88", "-22.2333, 446.27, -17.0351, 0.29", "-22.2049, 447.219, -16.7363, 0.29", "-22.1844, 447.518, -16.6665, 0.52", "-22.0713, 448.585, -16.4758, 0.22", "-21.9627, 449.23, -16.3832, 0.52", "-21.8346, 449.825, -16.2973, 0.52", "-21.4128, 451.39, -16.056, 0.44", "-21.1441, 452.225, -15.9229, 0.96", "-20.963, 452.715, -15.8408, 0.96", "-20.5133, 453.807, -15.6369, 0.29", "-20.1153, 454.699, -15.46, 0.22", "-19.744, 455.502, -15.2878, 0.81", "-19.3087, 456.436, -15.06, 0.29", "-18.9749, 457.167, -14.8695, 0.29", "-18.6818, 457.844, -14.6798, 0.66", "-18.5693, 458.123, -14.589, 0.81", "-18.2489, 458.976, -14.284, 0.29", "-18.0684, 459.513, -14.0768, 0.29", "-17.952, 459.91, -13.9152, 0.81", "-17.8437, 460.335, -13.7452, 0.81", "-17.6477, 461.207, -13.4366, 0.29", "-17.4382, 462.289, -13.1012, 0.29", "-17.3049, 463.092, -12.8845, 0.88", "-17.239, 463.522, -12.7832, 1.03", "-17.1366, 464.195, -12.6389, 0.74", "-16.8531, 466.095, -12.2641, 0.22", "-16.7377, 466.826, -12.1272, 0.96", "-16.6322, 467.407, -12.0063, 1.11", "-16.4038, 468.626, -11.7357, 0.29", "-16.2744, 469.294, -11.5765, 0.59", "-16.1926, 469.785, -11.4406, 0.59", "-16.0856, 470.545, -11.1969, 0.59", "-15.9778, 471.507, -10.8469, 0.29", "-15.9153, 472.206, -10.5642, 0.44", "-15.8976, 473.294, -10.0773, 0.29", "-15.9408, 474.433, -9.55039, 0.81", "-15.9611, 474.751, -9.39685, 0.81", "-15.9983, 475.165, -9.19514, 1.03", "-16.0583, 475.812, -8.87598, 0.37", "-16.1428, 476.921, -8.30786, 0.29", "-16.1711, 477.535, -8.01044, 0.29", "-16.1916, 478.717, -7.49852, 0.29", "-16.1899, 479.324, -7.28352, 0.81", "-16.2034, 480.515, -6.92888, 0.37", "-16.24, 481.464, -6.63876, 0.29", "-16.2627, 482.397, -6.32119, 1.11", "-16.3063, 482.99, -6.09125, 0.66", "-16.5123, 484.129, -5.58148, 0.29", "-16.8058, 485.144, -5.02879, 0.29", "-17.24, 486.214, -4.2974, 0.29", "-17.5099, 486.805, -3.77766, 0.29", "-17.7559, 487.291, -3.29557, 0.29", "-18.1373, 487.966, -2.59582, 0.81", "-18.3947, 488.344, -2.1876, 1.11", "-18.7146, 488.838, -1.70283, 0.88", "-19.5521, 490.324, -0.485194, 0.29", "-19.8491, 490.928, -0.0273745, 0.29", "-20.1144, 491.592, 0.438783, 0.74", "-20.4715, 492.609, 1.06612, 0.29", "-20.7783, 493.473, 1.54001, 0.29", "-21.1169, 494.443, 2.01573, 0.66", "-21.2468, 494.888, 2.19637, 0.88", "-21.4191, 495.908, 2.61207, 0.22", "-21.4516, 496.596, 2.87385, 0.37", "-21.4502, 496.666, 2.89198, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-136.099, -71.7267, -30.1304, 0.22", "-137.659, -71.6848, -29.7498, 0.22", "-138.31, -71.7092, -29.5902, 0.22", "-139.255, -71.8065, -29.3587, 0.37", "-140.206, -71.9494, -29.1255, 0.22", "-141.396, -72.1743, -28.8339, 0.22", "-142.644, -72.4329, -28.5286, 0.81", "-143.237, -72.5848, -28.3933, 0.81", "-144.026, -72.8279, -28.2252, 0.52", "-144.72, -73.0775, -28.0912, 0.29", "-145.299, -73.2982, -27.9884, 0.66", "-146.138, -73.6076, -27.8748, 0.66", "-146.81, -73.8221, -27.8078, 0.29", "-147.762, -74.097, -27.7486, 0.29", "-148.714, -74.3337, -27.724, 0.96", "-149.648, -74.5469, -27.7836, 1.03", "-150.962, -74.8431, -27.947, 0.22", "-151.301, -74.9229, -28.0055, 0.22", "-151.943, -75.089, -28.132, 0.88", "-152.49, -75.2677, -28.2585, 0.88", "-153.961, -75.8423, -28.6751, 0.22", "-154.727, -76.1843, -28.9482, 0.22", "-155.39, -76.5299, -29.2068, 0.22", "-155.952, -76.8754, -29.4437, 0.88", "-156.544, -77.3488, -29.736, 1.11", "-157.166, -78.0181, -30.1332, 0.88", "-157.869, -79.1227, -30.7469, 0.29", "-158.26, -80.0315, -31.2781, 1.18", "-158.43, -80.5206, -31.5749, 1.33", "-158.749, -81.686, -32.3119, 0.29", "-158.893, -82.5738, -32.8667, 0.22", "-158.906, -83.3885, -33.3045, 0.22", "-158.746, -84.4686, -33.8114, 0.96" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-136.099, -71.7267, -30.1304, 0.66", "-136.565, -71.7328, -27.9476, 0.66", "-136.701, -71.6876, -27.242, 0.66", "-136.853, -71.5701, -26.3733, 0.81", "-136.997, -71.4361, -25.6315, 0.81", "-137.403, -71.1007, -23.8644, 0.96", "-137.767, -70.8399, -22.4998, 1.33", "-138.044, -70.6286, -21.7004, 0.44", "-138.32, -70.4167, -21.0228, 0.44", "-138.636, -70.1926, -20.4601, 0.37", "-139.269, -69.8043, -19.7829, 0.37", "-139.617, -69.6498, -19.6027, 0.37", "-140.298, -69.4086, -19.3842, 0.29", "-141.033, -69.1938, -19.1742, 0.66", "-141.557, -69.0533, -18.9686, 0.88", "-142.142, -68.9161, -18.6669, 0.88", "-142.901, -68.8145, -18.1479, 0.66", "-143.296, -68.8405, -17.748, 0.66", "-143.734, -68.9578, -17.144, 0.81", "-144.7, -69.3515, -15.4703, 0.81", "-145.062, -69.5258, -14.6725, 0.59", "-145.403, -69.6867, -13.7283, 0.44", "-145.711, -69.778, -12.6836, 0.44", "-145.882, -69.7689, -12.0841, 0.37", "-146.097, -69.6484, -11.4423, 0.37", "-146.431, -69.2855, -10.7481, 0.66", "-146.755, -68.8898, -10.2849, 0.66", "-147.228, -68.38, -9.88365, 0.44", "-147.687, -68.0221, -9.67375, 0.66", "-148.166, -67.7898, -9.55327, 0.66", "-148.898, -67.5901, -9.43157, 0.66", "-150.586, -67.3625, -9.18998, 0.37", "-151.225, -67.3298, -9.08776, 0.66", "-152.137, -67.3412, -8.92941, 0.66", "-152.867, -67.3983, -8.77161, 0.44", "-153.525, -67.4907, -8.59104, 0.37", "-154.003, -67.5937, -8.39026, 0.59", "-154.685, -67.7841, -7.96786, 0.44", "-155.148, -67.9281, -7.64987, 0.37", "-155.735, -68.1267, -7.1925, 0.37", "-156.473, -68.4038, -6.58304, 0.37", "-157.423, -68.785, -5.76013, 0.37", "-158.073, -69.0518, -5.17035, 0.29", "-158.422, -69.1846, -4.84921, 0.52", "-159.178, -69.3997, -4.16465, 0.29", "-159.802, -69.5448, -3.58337, 0.37", "-160.207, -69.6077, -3.21638, 0.37", "-160.665, -69.6242, -2.8798, 0.96", "-161.277, -69.5778, -2.48414, 0.66", "-161.684, -69.5021, -2.23576, 0.44" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-14.5898, 479.022, -29.9549, 0.52", "-14.5606, 479.761, -29.9958, 0.52", "-14.5493, 480.332, -30.0281, 1.03", "-14.5457, 480.794, -30.0549, 1.03", "-14.544, 481.686, -30.1155, 1.11", "-14.5409, 482.716, -30.1762, 0.29", "-14.5302, 483.67, -30.2332, 0.29", "-14.5072, 484.563, -30.2952, 0.96", "-14.4982, 484.972, -30.3172, 1.11", "-14.4876, 485.905, -30.351, 0.66", "-14.4994, 486.947, -30.3745, 0.52", "-14.5348, 487.872, -30.3837, 0.52", "-14.5878, 488.833, -30.3769, 0.52", "-14.6465, 489.553, -30.3588, 0.81", "-14.7667, 490.732, -30.32, 1.11", "-14.8453, 491.385, -30.2919, 1.33", "-15.0676, 493.028, -30.2264, 0.44", "-15.1754, 493.787, -30.1957, 0.44", "-15.3468, 495.101, -30.1485, 0.37", "-15.4333, 495.892, -30.1237, 0.96", "-15.4974, 496.731, -30.1046, 1.25", "-15.5194, 497.289, -30.0947, 1.25", "-15.5154, 497.898, -30.0835, 1.03", "-15.4981, 498.368, -30.0742, 0.74", "-15.4607, 499.044, -30.0576, 0.52", "-15.4363, 499.665, -30.0377, 0.37", "-15.4189, 500.324, -30.0133, 0.37", "-15.4139, 501.173, -29.9741, 0.37", "-15.4283, 502.255, -29.9262, 0.66", "-15.4481, 502.854, -29.9031, 0.66", "-15.4826, 503.859, -29.8747, 0.66", "-15.5167, 504.725, -29.853, 0.29", "-15.544, 505.498, -29.8415, 0.29", "-15.5637, 506.042, -29.8379, 0.81", "-15.5949, 507.0, -29.8421, 1.03", "-15.6202, 507.774, -29.851, 1.18", "-15.637, 508.362, -29.8625, 0.81", "-15.6598, 509.17, -29.8896, 0.29", "-15.6803, 509.886, -29.9151, 0.29", "-15.6994, 510.614, -29.9406, 0.96", "-15.724, 511.443, -29.9693, 1.11", "-15.7388, 512.066, -29.9834, 1.11", "-15.7477, 513.089, -29.9992, 0.74", "-15.7484, 513.973, -29.9999, 0.44", "-15.7395, 514.863, -29.9858, 0.88", "-15.7314, 515.505, -29.9677, 0.88", "-15.7106, 516.418, -29.9367, 0.52", "-15.6775, 517.383, -29.8993, 0.52", "-15.6341, 518.35, -29.857, 0.52", "-15.5958, 519.366, -29.8197, 0.52", "-15.5802, 520.199, -29.7971, 1.11", "-15.5762, 520.625, -29.79, 1.11", "-15.5844, 521.425, -29.7857, 0.81", "-15.6019, 522.506, -29.7872, 0.29", "-15.625, 523.532, -29.799, 0.29", "-15.6451, 524.128, -29.8098, 0.96", "-15.6805, 524.804, -29.8195, 1.11", "-15.7433, 525.515, -29.8291, 1.4" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-14.5898, 479.022, -29.9549, 0.44", "-14.0489, 478.007, -28.9447, 0.44", "-13.6732, 477.301, -28.2429, 0.37", "-13.0688, 476.166, -27.1138, 0.29", "-12.7799, 475.624, -26.5742, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-161.684, -69.5021, -2.23576, 0.22", "-160.998, -68.7219, -2.23279, 0.22", "-160.511, -68.1685, -2.23069, 0.22", "-160.029, -67.6199, -2.22861, 0.59", "-159.702, -67.2481, -2.22719, 0.59", "-159.273, -66.7606, -2.22534, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-161.684, -69.5021, -2.23576, 0.37", "-162.763, -68.4789, -1.85152, 0.37", "-163.648, -67.7242, -1.5517, 0.37", "-164.569, -67.017, -1.2554, 0.22", "-165.555, -66.2593, -0.937939, 0.22", "-166.265, -65.7146, -0.709684, 0.22", "-167.026, -65.1302, -0.464823, 0.22", "-167.288, -64.9581, -0.383463, 0.52", "-167.891, -64.6464, -0.210361, 0.66" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-15.7433, 525.515, -29.8291, 0.22", "-14.6316, 528.517, -32.1952, 0.22", "-14.518, 529.053, -32.6414, 0.29", "-14.4428, 529.986, -33.4912, 0.29", "-14.4801, 530.265, -33.8197, 0.66", "-14.6095, 530.656, -34.3685, 0.66", "-14.8024, 531.141, -35.0483, 0.29", "-15.2983, 531.7, -35.8352, 0.88", "-15.5364, 531.955, -36.1845, 0.88", "-16.3414, 532.825, -37.2968, 0.29", "-16.6562, 533.22, -37.7131, 0.29", "-17.0578, 533.883, -38.2048, 0.29", "-17.3997, 534.746, -38.6694, 0.66", "-17.6475, 535.59, -39.047, 0.22", "-17.8267, 536.267, -39.3221, 0.22", "-18.0255, 536.964, -39.5973, 0.22", "-18.4385, 538.195, -40.1278, 0.96", "-18.9962, 539.582, -40.8372, 1.33", "-19.6646, 541.059, -41.704, 0.29", "-19.8703, 541.506, -41.9801, 0.29", "-20.3295, 542.443, -42.5865, 0.29", "-20.7231, 543.154, -43.0902, 0.29", "-21.2152, 543.814, -43.6364, 0.96", "-21.544, 544.106, -43.9031, 1.11" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-15.7433, 525.515, -29.8291, 0.29", "-15.8446, 527.239, -29.6546, 0.29", "-15.9225, 528.539, -29.5234, 0.29", "-16.0485, 530.389, -29.3524, 0.29", "-16.1666, 531.946, -29.2206, 0.74", "-16.2578, 533.046, -29.1356, 1.03", "-16.3249, 533.807, -29.0811, 1.03", "-16.4992, 535.669, -28.9517, 0.29", "-16.6421, 537.342, -28.8263, 0.29", "-16.7103, 538.176, -28.7582, 0.96", "-16.7759, 539.01, -28.6855, 1.18", "-16.8758, 540.309, -28.5756, 0.59", "-16.9705, 541.533, -28.464, 0.37", "-17.0997, 543.317, -28.2815, 0.37", "-17.1934, 544.765, -28.1147, 0.29", "-17.3242, 546.682, -27.8952, 0.29", "-17.4373, 548.041, -27.7478, 0.88", "-17.4886, 548.575, -27.6953, 1.03", "-17.5877, 549.455, -27.6258, 1.03", "-17.73, 550.621, -27.5484, 1.03", "-17.92, 552.209, -27.4477, 0.44", "-18.0867, 553.741, -27.3386, 0.74", "-18.1388, 554.237, -27.3046, 0.74", "-18.2606, 555.455, -27.2343, 0.44", "-18.337, 556.17, -27.2002, 0.37", "-18.4197, 557.026, -27.1535, 0.74", "-18.4711, 557.742, -27.0988, 0.96", "-18.521, 558.966, -26.9917, 0.29", "-18.5421, 559.668, -26.9174, 0.29", "-18.56, 560.73, -26.7895, 0.81", "-18.5606, 561.116, -26.7374, 0.81", "-18.5517, 561.88, -26.6337, 0.37", "-18.5538, 563.046, -26.4951, 0.37", "-18.5606, 563.814, -26.4157, 1.03", "-18.5875, 564.492, -26.3717, 1.03", "-18.6751, 565.824, -26.3246, 1.03", "-18.7906, 567.058, -26.3197, 0.37", "-19.0044, 568.733, -26.3545, 0.29", "-19.1497, 569.652, -26.3906, 0.29", "-19.3774, 570.894, -26.4517, 0.88", "-19.5326, 571.65, -26.4901, 1.25", "-19.6899, 572.317, -26.5258, 1.25", "-19.9515, 573.373, -26.564, 0.74", "-20.1714, 574.269, -26.5799, 0.74", "-20.572, 575.909, -26.5843, 1.25", "-20.778, 576.809, -26.5745, 1.25", "-20.951, 577.602, -26.5672, 0.52", "-21.1683, 578.656, -26.5566, 0.29", "-21.3287, 579.487, -26.5528, 0.52", "-21.4804, 580.313, -26.5513, 0.81", "-21.8387, 582.352, -26.5683, 0.37", "-22.1039, 583.86, -26.5898, 0.37", "-22.1698, 584.243, -26.5962, 1.03", "-22.305, 585.008, -26.6132, 1.4", "-22.3973, 585.524, -26.6259, 1.4", "-22.6463, 586.962, -26.6523, 0.52", "-22.85, 588.173, -26.668, 0.52", "-23.0445, 589.392, -26.6727, 0.81", "-23.1788, 590.295, -26.6657, 0.81", "-23.3051, 591.206, -26.649, 0.81", "-23.4509, 592.314, -26.6205, 0.44", "-23.5426, 593.071, -26.5924, 0.44", "-23.6699, 594.206, -26.5397, 0.81", "-23.7978, 595.376, -26.4817, 0.88", "-23.9286, 596.658, -26.4083, 1.18", "-24.0442, 597.801, -26.3419, 1.4", "-24.1001, 598.35, -26.3102, 1.4", "-24.1735, 599.176, -26.2617, 0.88", "-24.3319, 601.308, -26.1263, 0.37", "-24.3994, 602.411, -26.0513, 0.37", "-24.436, 603.174, -25.9939, 0.66", "-24.4651, 603.934, -25.9297, 0.96", "-24.495, 604.849, -25.8436, 0.37", "-24.5152, 605.575, -25.7707, 0.74", "-24.5319, 606.818, -25.6507, 0.37", "-24.5469, 607.902, -25.5551, 0.81", "-24.5594, 608.899, -25.477, 1.03", "-24.5694, 610.851, -25.3661, 0.22", "-24.5716, 612.212, -25.3085, 0.22", "-24.5614, 613.798, -25.2603, 0.22", "-24.537, 615.264, -25.2393, 1.25", "-24.5154, 615.984, -25.2419, 1.33", "-24.4712, 617.209, -25.2675, 0.44", "-24.4144, 618.246, -25.3126, 0.44", "-24.3192, 619.521, -25.3686, 0.44", "-24.2273, 620.541, -25.4093, 0.37", "-24.086, 622.049, -25.4657, 0.37", "-24.0192, 622.818, -25.4797, 0.37", "-23.9406, 623.946, -25.4871, 0.74", "-23.8935, 624.779, -25.4946, 1.03", "-23.8635, 625.651, -25.4952, 0.74", "-23.8595, 626.362, -25.478, 0.29", "-23.8844, 627.425, -25.4282, 0.29", "-23.9154, 628.032, -25.3912, 0.66", "-23.9779, 628.885, -25.3272, 0.66", "-24.0772, 630.104, -25.2441, 0.22", "-24.1568, 631.021, -25.1769, 0.52", "-24.208, 631.662, -25.1266, 0.52", "-24.3907, 633.876, -24.9379, 0.22", "-24.4906, 635.125, -24.7962, 0.59", "-24.5277, 635.58, -24.735, 0.59", "-24.6229, 636.73, -24.5564, 0.22", "-24.6841, 637.471, -24.433, 0.81", "-24.7277, 638.008, -24.3385, 0.81", "-24.8275, 639.434, -24.0729, 0.22", "-24.8628, 640.028, -23.9615, 0.59", "-24.8752, 640.36, -23.8982, 0.59", "-24.9336, 642.578, -23.5045, 0.22", "-24.9545, 643.275, -23.3951, 0.22", "-24.9928, 644.48, -23.2343, 0.74", "-25.0193, 645.048, -23.1768, 0.81", "-25.0719, 645.881, -23.1029, 0.81", "-25.1849, 647.318, -22.9908, 0.22", "-25.3173, 648.762, -22.8902, 0.22", "-25.4109, 649.67, -22.8331, 0.22", "-25.5445, 650.818, -22.7711, 0.81", "-25.5821, 651.128, -22.755, 0.81", "-25.7921, 653.018, -22.6494, 0.22", "-25.8003, 653.114, -22.643, 0.52", "-25.9139, 655.271, -22.4676, 0.29", "-25.9461, 656.488, -22.3551, 0.88", "-25.9475, 657.183, -22.2852, 0.88", "-25.9401, 658.439, -22.1626, 0.22", "-25.9391, 659.239, -22.0933, 0.22", "-25.9354, 660.175, -22.0069, 0.96", "-25.9327, 660.562, -21.9683, 0.96", "-25.9238, 662.11, -21.7995, 0.22", "-25.9357, 663.024, -21.7032, 0.22", "-25.9686, 664.241, -21.5638, 0.88", "-26.0148, 665.466, -21.4194, 0.22", "-26.0738, 666.695, -21.2784, 0.88", "-26.0893, 667.077, -21.2315, 0.88", "-26.1281, 668.355, -21.061, 0.22", "-26.14, 669.294, -20.9181, 0.96" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-21.544, 544.106, -43.9031, 0.37", "-21.7052, 544.685, -44.186, 0.37", "-21.7556, 544.88, -44.2795, 0.59", "-21.8381, 545.241, -44.4382, 0.59", "-21.8958, 545.549, -44.5617, 0.29", "-21.9811, 546.083, -44.7735, 0.29", "-22.0219, 546.374, -44.8914, 0.29", "-22.0409, 546.633, -45.007, 0.52", "-22.0413, 546.883, -45.1268, 0.22", "-22.0223, 547.198, -45.2928, 0.52", "-22.0017, 547.537, -45.484, 0.81", "-21.9954, 547.778, -45.6154, 0.81", "-22.0122, 548.374, -45.9459, 0.22", "-22.037, 548.671, -46.1143, 0.81", "-22.0867, 548.991, -46.2967, 0.81", "-22.1711, 549.349, -46.4912, 0.29", "-22.3157, 549.851, -46.7515, 0.29", "-22.4307, 550.202, -46.9409, 0.81", "-22.5236, 550.457, -47.0938, 1.11", "-22.5964, 550.689, -47.2464, 0.74", "-22.6731, 551.005, -47.4589, 0.29", "-22.757, 551.447, -47.7681, 0.29", "-22.8204, 551.812, -48.0242, 0.29", "-22.8952, 552.318, -48.3621, 1.03", "-22.9538, 552.741, -48.6258, 1.18", "-23.0533, 553.484, -49.0623, 0.29", "-23.0902, 553.775, -49.2193, 0.29", "-23.1452, 554.246, -49.4464, 1.55", "-23.1733, 554.498, -49.5607, 1.33", "-23.2196, 554.854, -49.7244, 0.81", "-23.2747, 555.228, -49.9115, 0.52", "-23.3557, 555.778, -50.2058, 0.29", "-23.4206, 556.25, -50.4619, 0.52", "-23.4432, 556.429, -50.5558, 0.81", "-23.5344, 557.171, -50.9163, 0.22", "-23.5875, 557.686, -51.1387, 0.22", "-23.6167, 557.962, -51.2356, 0.66", "-23.6396, 558.265, -51.3188, 0.66", "-23.6582, 558.849, -51.441, 0.22", "-23.6436, 559.116, -51.4918, 0.52", "-23.6161, 559.348, -51.5372, 0.52", "-23.5613, 559.847, -51.6582, 0.29", "-23.5148, 560.374, -51.8129, 0.96", "-23.501, 560.641, -51.9041, 0.96", "-23.4669, 561.467, -52.2231, 0.22", "-23.4536, 562.052, -52.4698, 0.96", "-23.4546, 562.457, -52.6579, 0.22", "-23.463, 562.646, -52.7589, 0.59", "-23.4936, 562.854, -52.8779, 0.59" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-21.544, 544.106, -43.9031, 0.15", "-22.706, 543.666, -45.1109, 0.15", "-23.0587, 543.543, -45.4535, 0.52", "-23.2918, 543.466, -45.6732, 0.66", "-24.1352, 543.188, -46.4569, 0.22", "-24.8989, 542.927, -47.1491, 0.22", "-25.2235, 542.811, -47.4266, 0.59", "-25.7228, 542.66, -47.8292, 0.66", "-26.6255, 542.381, -48.5167, 0.29", "-26.9582, 542.275, -48.7539, 0.81", "-27.6263, 542.045, -49.2173, 0.96", "-28.3787, 541.77, -49.7557, 0.15", "-29.1369, 541.479, -50.3283, 0.15", "-29.8684, 541.191, -50.8976, 0.15", "-30.4739, 540.949, -51.3716, 0.88", "-30.9107, 540.752, -51.7223, 0.88", "-32.1057, 540.199, -52.7162, 0.22", "-32.5601, 539.976, -53.1121, 0.74", "-33.1822, 539.637, -53.6587, 0.74", "-33.8965, 539.202, -54.3025, 0.29", "-34.5055, 538.801, -54.848, 0.29" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_54", "dend_27", "dend_0", "dend_56", "dend_55", "dend_29", "dend_28", "dend_6", "dend_1", "dend_37", "dend_30", "dend_12", "dend_7", "dend_3", "dend_2", "dend_49", "dend_38", "dend_32", "dend_31", "dend_16", "dend_13", "dend_11", "dend_8", "dend_5", "dend_4", "dend_51", "dend_50", "dend_46", "dend_39", "dend_36", "dend_33", "dend_26", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_40", "dend_35", "dend_34", "dend_19", "dend_18", "dend_44", "dend_41", "dend_21", "dend_20", "dend_43", "dend_42", "dend_23", "dend_22", "dend_25", "dend_24" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_54", "dend_27", "dend_0", "dend_56", "dend_55", "dend_29", "dend_28", "dend_6", "dend_1", "dend_37", "dend_30", "dend_12", "dend_7", "dend_3", "dend_2", "dend_49", "dend_38", "dend_32", "dend_31", "dend_16", "dend_13", "dend_11", "dend_8", "dend_5", "dend_4", "dend_51", "dend_50", "dend_46", "dend_39", "dend_36", "dend_33", "dend_26", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_40", "dend_35", "dend_34", "dend_19", "dend_18", "dend_44", "dend_41", "dend_21", "dend_20", "dend_43", "dend_42", "dend_23", "dend_22", "dend_25", "dend_24" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_54", "dend_27", "dend_0", "axon_0", "dend_56", "dend_55", "dend_29", "dend_28", "dend_6", "dend_1", "axon_1", "dend_37", "dend_30", "dend_12", "dend_7", "dend_3", "dend_2", "dend_49", "dend_38", "dend_32", "dend_31", "dend_16", "dend_13", "dend_11", "dend_8", "dend_5", "dend_4", "dend_51", "dend_50", "dend_46", "dend_39", "dend_36", "dend_33", "dend_26", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_40", "dend_35", "dend_34", "dend_19", "dend_18", "dend_44", "dend_41", "dend_21", "dend_20", "dend_43", "dend_42", "dend_23", "dend_22", "dend_25", "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L6_SBC_1994e395b2_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_54, id: dend_54, parent: soma_0
create dend_54
public dend_54
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_37, id: dend_37, parent: dend_29
create dend_37
public dend_37
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_12, id: dend_12, parent: dend_6
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_49, id: dend_49, parent: dend_37
create dend_49
public dend_49
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_38
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_16
create dend_26
public dend_26
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_39
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_54, dend_27, dend_0, axon_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, axon_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_59
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_54(0), soma_0(0.49999773444601353)
    connect dend_27(0), soma_0(0.49999773444601353)
    connect dend_0(0), soma_0(0.49999773444601353)
    connect axon_0(0), soma_0(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_37(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_12(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_49(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_26(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.488402, 10.6886, -0.10439, 2.1741 ) }
    soma_0 { pt3dadd( 0.446743, 9.60874, -0.0969525, 3.70718 ) }
    soma_0 { pt3dadd( 0.405084, 8.52883, -0.0895152, 5.34259 ) }
    soma_0 { pt3dadd( 0.363425, 7.44892, -0.0820778, 6.31081 ) }
    soma_0 { pt3dadd( 0.321766, 6.36901, -0.0746405, 7.2239 ) }
    soma_0 { pt3dadd( 0.280106, 5.2891, -0.0672032, 7.79497 ) }
    soma_0 { pt3dadd( 0.238447, 4.20919, -0.0597659, 8.16787 ) }
    soma_0 { pt3dadd( 0.196788, 3.12928, -0.0523285, 8.65603 ) }
    soma_0 { pt3dadd( 0.155129, 2.04937, -0.0448912, 9.27596 ) }
    soma_0 { pt3dadd( 0.11347, 0.969459, -0.0374539, 9.68183 ) }
    soma_0 { pt3dadd( 0.0718107, -0.110451, -0.0300165, 9.60108 ) }
    soma_0 { pt3dadd( 0.0301515, -1.19036, -0.0225792, 9.40911 ) }
    soma_0 { pt3dadd( -0.0115077, -2.27027, -0.0151419, 8.85229 ) }
    soma_0 { pt3dadd( -0.0531668, -3.35018, -0.00770454, 8.34531 ) }
    soma_0 { pt3dadd( -0.094826, -4.43009, -2.67214E-4, 7.89073 ) }
    soma_0 { pt3dadd( -0.136485, -5.51, 0.00717012, 7.34681 ) }
    soma_0 { pt3dadd( -0.178144, -6.58991, 0.0146074, 6.74183 ) }
    soma_0 { pt3dadd( -0.219803, -7.66982, 0.0220448, 6.06339 ) }
    soma_0 { pt3dadd( -0.261463, -8.74973, 0.0294821, 5.33412 ) }
    soma_0 { pt3dadd( -0.303122, -9.82964, 0.0369194, 3.6506 ) }
    soma_0 { pt3dadd( -0.344781, -10.9096, 0.0443568, 2.18196 ) }
    // Section: dend_54, id: dend_54, parent: soma_0 (entry count 21/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 1.87458, 3.14782, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( 1.51522, 3.86509, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( 1.11749, 4.65894, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( 0.530345, 5.83084, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( 0.0704797, 6.74871, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( -0.483931, 7.85528, 11.4844, 1.4 ) }
    dend_54 { pt3dadd( -0.625743, 8.13833, 11.4844, 1.4 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 28/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -1.37542, -9.94143, 0.224411, 4.05 ) }
    dend_27 { pt3dadd( -1.37542, -9.94143, 0.224411, 4.05 ) }
    dend_27 { pt3dadd( -1.82438, -11.486, 0.233427, 3.61 ) }
    dend_27 { pt3dadd( -2.44675, -13.7454, 0.184988, 2.87 ) }
    dend_27 { pt3dadd( -2.97313, -15.8462, 0.03012, 2.36 ) }
    dend_27 { pt3dadd( -3.43414, -17.8903, -0.128628, 2.36 ) }
    dend_27 { pt3dadd( -3.87326, -20.0388, -0.274645, 2.65 ) }
    dend_27 { pt3dadd( -4.23072, -21.8739, -0.410398, 2.65 ) }
    dend_27 { pt3dadd( -4.52714, -23.5516, -0.553597, 2.8 ) }
    dend_27 { pt3dadd( -4.92082, -26.16, -0.809404, 2.43 ) }
    dend_27 { pt3dadd( -5.2191, -28.4752, -1.06726, 2.28 ) }
    dend_27 { pt3dadd( -5.48259, -30.9596, -1.3732, 2.14 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 40/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.565422, 10.6201, -2.89559, 3.17 ) }
    dend_0 { pt3dadd( -0.565422, 10.6201, -2.89559, 3.17 ) }
    dend_0 { pt3dadd( -1.71379, 11.8222, -2.9768, 2.8 ) }
    dend_0 { pt3dadd( -2.83306, 12.9391, -3.05148, 2.8 ) }
    dend_0 { pt3dadd( -3.84402, 13.9268, -3.11459, 2.8 ) }
    dend_0 { pt3dadd( -5.13486, 15.2018, -3.18258, 2.8 ) }
    dend_0 { pt3dadd( -6.11892, 16.2301, -3.22809, 2.58 ) }
    dend_0 { pt3dadd( -6.80612, 16.9856, -3.25476, 2.58 ) }
    dend_0 { pt3dadd( -7.38664, 17.6715, -3.27189, 2.36 ) }
    dend_0 { pt3dadd( -7.9086, 18.4029, -3.27956, 1.92 ) }
    dend_0 { pt3dadd( -8.55862, 19.677, -3.28119, 1.92 ) }
    dend_0 { pt3dadd( -8.91953, 20.9586, -3.27097, 1.92 ) }
    dend_0 { pt3dadd( -9.05157, 22.0948, -3.26407, 1.92 ) }
    dend_0 { pt3dadd( -9.03124, 23.0701, -3.26166, 2.21 ) }
    dend_0 { pt3dadd( -8.88667, 24.1071, -3.31761, 2.21 ) }
    dend_0 { pt3dadd( -8.68049, 24.9693, -3.40816, 1.84 ) }
    dend_0 { pt3dadd( -8.28397, 26.2197, -3.59762, 1.84 ) }
    dend_0 { pt3dadd( -8.00319, 27.0255, -3.74406, 1.84 ) }
    dend_0 { pt3dadd( -7.68245, 27.9293, -3.94863, 1.84 ) }
    dend_0 { pt3dadd( -7.10075, 29.6798, -4.4218, 1.69 ) }
    dend_0 { pt3dadd( -6.89588, 30.399, -4.64243, 1.69 ) }
    dend_0 { pt3dadd( -6.63962, 31.4791, -5.05871, 1.69 ) }
    dend_0 { pt3dadd( -6.4652, 32.4774, -5.51748, 1.84 ) }
    dend_0 { pt3dadd( -6.35867, 33.329, -5.94918, 1.99 ) }
    dend_0 { pt3dadd( -6.3057, 34.1578, -6.39064, 1.99 ) }
    dend_0 { pt3dadd( -6.27315, 35.0932, -6.89471, 1.99 ) }
    dend_0 { pt3dadd( -6.26006, 36.4849, -7.73107, 2.14 ) }
    dend_0 { pt3dadd( -6.27318, 37.2189, -8.23292, 2.14 ) }
    dend_0 { pt3dadd( -6.30266, 37.8743, -8.72581, 2.14 ) }
    dend_0 { pt3dadd( -6.34761, 38.5268, -9.21712, 2.14 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 70/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.344781, -10.9096, 0.0443568, 0.553219 ) }
    axon_0 { pt3dadd( -0.922998, -25.8985, 0.0443568, 0.553219 ) }
    axon_0 { pt3dadd( -1.50121, -40.8873, 0.0443568, 0.553219 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 73/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -0.625743, 8.13833, 11.4844, 0.81 ) }
    dend_56 { pt3dadd( -2.14489, 9.99842, 10.3546, 0.81 ) }
    dend_56 { pt3dadd( -2.88533, 10.9274, 9.86734, 0.81 ) }
    dend_56 { pt3dadd( -3.46812, 11.6383, 9.54281, 1.03 ) }
    dend_56 { pt3dadd( -4.02481, 12.2872, 9.28165, 1.03 ) }
    dend_56 { pt3dadd( -4.73873, 13.0763, 8.99948, 0.59 ) }
    dend_56 { pt3dadd( -5.47022, 13.8424, 8.76184, 0.37 ) }
    dend_56 { pt3dadd( -6.15439, 14.5342, 8.67915, 0.37 ) }
    dend_56 { pt3dadd( -6.78559, 15.133, 8.61874, 0.59 ) }
    dend_56 { pt3dadd( -7.3071, 15.619, 8.56652, 0.59 ) }
    dend_56 { pt3dadd( -7.8042, 16.0573, 8.51754, 0.66 ) }
    dend_56 { pt3dadd( -8.50589, 16.6506, 8.39847, 0.59 ) }
    dend_56 { pt3dadd( -9.22126, 17.2196, 8.18771, 0.44 ) }
    dend_56 { pt3dadd( -10.1246, 17.9363, 7.74477, 0.44 ) }
    dend_56 { pt3dadd( -10.5545, 18.2957, 7.47093, 0.96 ) }
    dend_56 { pt3dadd( -11.1365, 18.8104, 7.05419, 1.33 ) }
    dend_56 { pt3dadd( -11.6438, 19.2958, 6.6626, 1.55 ) }
    dend_56 { pt3dadd( -12.49, 20.1784, 5.97403, 1.03 ) }
    dend_56 { pt3dadd( -13.6121, 21.5033, 5.06672, 0.52 ) }
    dend_56 { pt3dadd( -13.8748, 21.8788, 4.85539, 0.88 ) }
    dend_56 { pt3dadd( -14.3308, 22.669, 4.48721, 0.52 ) }
    dend_56 { pt3dadd( -14.6464, 23.377, 4.23289, 0.52 ) }
    dend_56 { pt3dadd( -14.8649, 24.0025, 4.06688, 0.52 ) }
    dend_56 { pt3dadd( -15.1942, 25.1264, 3.82611, 0.88 ) }
    dend_56 { pt3dadd( -15.5281, 26.2969, 3.5901, 0.74 ) }
    dend_56 { pt3dadd( -15.7574, 26.9676, 3.44149, 0.59 ) }
    dend_56 { pt3dadd( -16.3617, 28.3454, 3.09891, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_56 { pt3dadd( -16.8585, 29.17, 2.88268, 1.25 ) }
    dend_56 { pt3dadd( -17.5285, 29.9724, 2.65428, 1.4 ) }
    dend_56 { pt3dadd( -18.1527, 30.4888, 2.50606, 1.18 ) }
    dend_56 { pt3dadd( -18.9044, 30.9634, 2.39285, 0.88 ) }
    dend_56 { pt3dadd( -19.8541, 31.4733, 2.29002, 0.66 ) }
    dend_56 { pt3dadd( -20.5572, 31.8018, 2.24634, 0.66 ) }
    dend_56 { pt3dadd( -21.0791, 32.056, 2.23376, 0.66 ) }
    dend_56 { pt3dadd( -21.8609, 32.5466, 2.26266, 0.59 ) }
    dend_56 { pt3dadd( -22.3818, 33.0451, 2.31148, 0.59 ) }
    dend_56 { pt3dadd( -22.8083, 33.7225, 2.39447, 0.74 ) }
    dend_56 { pt3dadd( -22.9535, 34.059, 2.44815, 0.88 ) }
    dend_56 { pt3dadd( -23.1218, 34.5233, 2.54337, 0.88 ) }
    dend_56 { pt3dadd( -23.3245, 35.1078, 2.69001, 1.03 ) }
    dend_56 { pt3dadd( -23.5934, 35.7918, 2.89288, 0.66 ) }
    dend_56 { pt3dadd( -24.067, 36.8193, 3.24543, 0.44 ) }
    dend_56 { pt3dadd( -24.4626, 37.6144, 3.54313, 0.44 ) }
    dend_56 { pt3dadd( -24.8423, 38.3735, 3.75966, 0.59 ) }
    dend_56 { pt3dadd( -25.0417, 38.7903, 3.82743, 0.96 ) }
    dend_56 { pt3dadd( -25.4357, 39.7593, 3.86534, 1.18 ) }
    dend_56 { pt3dadd( -25.5882, 40.2864, 3.82071, 1.18 ) }
    dend_56 { pt3dadd( -25.7384, 41.1637, 3.65337, 0.74 ) }
    dend_56 { pt3dadd( -25.878, 42.9276, 3.25552, 0.37 ) }
    dend_56 { pt3dadd( -25.9171, 43.8151, 3.0472, 0.29 ) }
    dend_56 { pt3dadd( -25.9499, 44.7315, 2.84454, 0.29 ) }
    dend_56 { pt3dadd( -25.9888, 45.6926, 2.64563, 0.37 ) }
    dend_56 { pt3dadd( -26.0625, 46.4058, 2.52827, 0.37 ) }
    dend_56 { pt3dadd( -26.2852, 47.4542, 2.44746, 0.29 ) }
    dend_56 { pt3dadd( -26.5409, 48.1862, 2.49956, 0.37 ) }
    dend_56 { pt3dadd( -26.8007, 48.7395, 2.58126, 0.74 ) }
    dend_56 { pt3dadd( -27.0115, 49.1102, 2.65072, 0.74 ) }
    dend_56 { pt3dadd( -27.3156, 49.6008, 2.73102, 0.44 ) }
    dend_56 { pt3dadd( -27.7612, 50.4006, 2.81342, 0.66 ) }
    dend_56 { pt3dadd( -28.1507, 51.1937, 2.81113, 1.25 ) }
    dend_56 { pt3dadd( -28.3718, 51.6808, 2.78226, 1.47 ) }
    dend_56 { pt3dadd( -28.6209, 52.2223, 2.73089, 1.47 ) }
    dend_56 { pt3dadd( -29.0819, 53.1784, 2.61358, 1.11 ) }
    dend_56 { pt3dadd( -29.7003, 54.417, 2.42952, 0.29 ) }
    dend_56 { pt3dadd( -30.1637, 55.3107, 2.28154, 0.66 ) }
    dend_56 { pt3dadd( -30.4346, 55.8076, 2.18779, 0.52 ) }
    dend_56 { pt3dadd( -30.9014, 56.5935, 2.00679, 0.52 ) }
    dend_56 { pt3dadd( -31.5128, 57.5238, 1.78671, 0.66 ) }
    dend_56 { pt3dadd( -32.2602, 58.5812, 1.56063, 0.88 ) }
    dend_56 { pt3dadd( -32.6516, 59.0845, 1.45879, 1.47 ) }
    dend_56 { pt3dadd( -33.1423, 59.7225, 1.35345, 1.47 ) }
    dend_56 { pt3dadd( -33.7074, 60.4755, 1.24064, 0.74 ) }
    dend_56 { pt3dadd( -34.2652, 61.1799, 1.12986, 0.74 ) }
    dend_56 { pt3dadd( -34.7896, 61.7712, 1.04827, 0.74 ) }
    dend_56 { pt3dadd( -35.4006, 62.3809, 0.986353, 0.37 ) }
    dend_56 { pt3dadd( -36.1345, 63.077, 0.947962, 0.37 ) }
    dend_56 { pt3dadd( -36.7256, 63.6313, 0.938575, 0.29 ) }
    dend_56 { pt3dadd( -37.2729, 64.1634, 0.929514, 0.29 ) }
    dend_56 { pt3dadd( -37.9355, 64.834, 0.883405, 0.29 ) }
    dend_56 { pt3dadd( -38.3167, 65.2496, 0.837183, 0.29 ) }
    dend_56 { pt3dadd( -38.854, 65.9515, 0.680872, 0.88 ) }
    dend_56 { pt3dadd( -39.1554, 66.4398, 0.532361, 1.47 ) }
    dend_56 { pt3dadd( -39.393, 66.9536, 0.354494, 1.47 ) }
    dend_56 { pt3dadd( -39.5524, 67.4125, 0.200295, 1.47 ) }
    dend_56 { pt3dadd( -39.7257, 68.0921, -0.027552, 1.18 ) }
    dend_56 { pt3dadd( -39.9877, 69.4174, -0.444414, 0.37 ) }
    dend_56 { pt3dadd( -40.1046, 70.1457, -0.637594, 0.37 ) }
    dend_56 { pt3dadd( -40.2388, 70.8718, -0.767188, 0.37 ) }
    dend_56 { pt3dadd( -40.3598, 71.3831, -0.818019, 0.96 ) }
    dend_56 { pt3dadd( -40.5431, 72.0153, -0.833679, 1.03 ) }
    dend_56 { pt3dadd( -40.6656, 72.3678, -0.805371, 1.03 ) }
    dend_56 { pt3dadd( -41.0399, 73.3128, -0.667973, 0.37 ) }
    dend_56 { pt3dadd( -41.4433, 74.2337, -0.579624, 0.37 ) }
    dend_56 { pt3dadd( -41.6812, 74.7573, -0.557756, 0.29 ) }
    dend_56 { pt3dadd( -41.9595, 75.3469, -0.643686, 0.29 ) }
    dend_56 { pt3dadd( -42.3724, 76.2234, -0.880759, 0.29 ) }
    dend_56 { pt3dadd( -42.6457, 76.8639, -1.12529, 0.29 ) }
    dend_56 { pt3dadd( -42.9997, 77.744, -1.53063, 1.18 ) }
    dend_56 { pt3dadd( -43.1565, 78.1921, -1.75138, 1.47 ) }
    dend_56 { pt3dadd( -43.7513, 80.1503, -2.8091, 0.22 ) }
    dend_56 { pt3dadd( -43.8093, 80.3621, -2.93429, 0.44 ) }
    dend_56 { pt3dadd( -44.0012, 81.1902, -3.44855, 0.66 ) }
    dend_56 { pt3dadd( -44.1441, 81.933, -3.88865, 0.22 ) }
    dend_56 { pt3dadd( -44.2633, 82.6565, -4.29436, 0.22 ) }
    dend_56 { pt3dadd( -44.4663, 83.9421, -4.98925, 0.88 ) }
    dend_56 { pt3dadd( -44.5664, 84.624, -5.32796, 0.88 ) }
    dend_56 { pt3dadd( -44.6812, 85.2703, -5.66586, 0.88 ) }
    dend_56 { pt3dadd( -44.9258, 86.3685, -6.29284, 0.37 ) }
    dend_56 { pt3dadd( -45.1435, 87.131, -6.7832, 0.37 ) }
    dend_56 { pt3dadd( -45.2731, 87.4507, -7.00533, 0.88 ) }
    dend_56 { pt3dadd( -45.4951, 87.8762, -7.29631, 0.88 ) }
    dend_56 { pt3dadd( -45.8972, 88.5209, -7.77589, 0.52 ) }
    dend_56 { pt3dadd( -46.292, 89.0599, -8.21559, 0.29 ) }
    dend_56 { pt3dadd( -46.7592, 89.6445, -8.72426, 0.29 ) }
    dend_56 { pt3dadd( -47.2973, 90.3082, -9.28164, 1.11 ) }
    dend_56 { pt3dadd( -47.6163, 90.7566, -9.65206, 1.33 ) }
    dend_56 { pt3dadd( -47.9641, 91.2932, -10.101, 1.55 ) }
    dend_56 { pt3dadd( -48.2866, 91.8261, -10.5528, 1.55 ) }
    dend_56 { pt3dadd( -48.7385, 92.6079, -11.2287, 0.52 ) }
    dend_56 { pt3dadd( -49.1644, 93.3428, -11.8619, 0.44 ) }
    dend_56 { pt3dadd( -49.8901, 94.531, -12.8542, 1.47 ) }
    dend_56 { pt3dadd( -50.2451, 95.1048, -13.2961, 1.47 ) }
    dend_56 { pt3dadd( -51.0655, 96.4344, -14.2034, 0.44 ) }
    dend_56 { pt3dadd( -51.509, 97.1523, -14.6636, 0.44 ) }
    dend_56 { pt3dadd( -52.0607, 98.0648, -15.2233, 0.44 ) }
    dend_56 { pt3dadd( -52.5873, 98.9628, -15.7466, 0.37 ) }
    dend_56 { pt3dadd( -53.0838, 99.8162, -16.1851, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_56 { pt3dadd( -53.8037, 101.235, -16.7825, 1.47 ) }
    dend_56 { pt3dadd( -54.0288, 101.801, -16.9548, 1.77 ) }
    dend_56 { pt3dadd( -54.4979, 103.28, -17.2814, 0.29 ) }
    dend_56 { pt3dadd( -54.6816, 104.004, -17.3963, 1.03 ) }
    dend_56 { pt3dadd( -54.7707, 104.431, -17.4337, 1.03 ) }
    dend_56 { pt3dadd( -55.0541, 105.944, -17.4397, 0.66 ) }
    dend_56 { pt3dadd( -55.3798, 107.793, -17.2699, 0.29 ) }
    dend_56 { pt3dadd( -55.5511, 108.725, -17.1076, 1.03 ) }
    dend_56 { pt3dadd( -55.6278, 109.111, -17.0071, 1.25 ) }
    dend_56 { pt3dadd( -55.8612, 110.104, -16.7186, 0.22 ) }
    dend_56 { pt3dadd( -55.9976, 110.573, -16.5831, 0.44 ) }
    dend_56 { pt3dadd( -56.3093, 111.433, -16.3435, 0.22 ) }
    dend_56 { pt3dadd( -56.5841, 112.097, -16.126, 0.52 ) }
    dend_56 { pt3dadd( -56.7936, 112.587, -15.9599, 0.52 ) }
    dend_56 { pt3dadd( -57.2935, 113.83, -15.5413, 0.22 ) }
    dend_56 { pt3dadd( -57.5404, 114.508, -15.3191, 0.29 ) }
    dend_56 { pt3dadd( -57.7713, 115.206, -15.0983, 0.29 ) }
    dend_56 { pt3dadd( -58.2122, 116.612, -14.6722, 1.11 ) }
    dend_56 { pt3dadd( -58.3494, 117.085, -14.5495, 1.33 ) }
    dend_56 { pt3dadd( -58.5705, 117.972, -14.3446, 0.29 ) }
    dend_56 { pt3dadd( -58.749, 118.862, -14.1584, 0.29 ) }
    dend_56 { pt3dadd( -58.8069, 119.22, -14.0945, 0.44 ) }
    dend_56 { pt3dadd( -58.9478, 120.22, -13.9582, 0.22 ) }
    dend_56 { pt3dadd( -59.0925, 121.245, -13.8603, 0.66 ) }
    dend_56 { pt3dadd( -59.1486, 121.56, -13.831, 1.18 ) }
    dend_56 { pt3dadd( -59.2565, 122.005, -13.7913, 1.18 ) }
    dend_56 { pt3dadd( -59.3454, 122.359, -13.7602, 0.74 ) }
    dend_56 { pt3dadd( -59.6662, 123.681, -13.6489, 0.22 ) }
    dend_56 { pt3dadd( -59.7862, 124.201, -13.6108, 0.66 ) }
    dend_56 { pt3dadd( -60.0299, 125.087, -13.524, 0.22 ) }
    dend_56 { pt3dadd( -60.1693, 125.519, -13.4745, 0.52 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 31/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -0.625743, 8.13833, 11.4844, 0.44 ) }
    dend_55 { pt3dadd( -0.471567, 9.44323, 10.6076, 0.44 ) }
    dend_55 { pt3dadd( -0.418436, 10.1659, 10.1333, 0.44 ) }
    dend_55 { pt3dadd( -0.360624, 11.0433, 9.57585, 0.96 ) }
    dend_55 { pt3dadd( -0.304201, 11.6186, 9.21718, 0.96 ) }
    dend_55 { pt3dadd( -0.14386, 13.2096, 8.35736, 0.52 ) }
    dend_55 { pt3dadd( -0.097628, 13.7971, 8.10383, 0.52 ) }
    dend_55 { pt3dadd( -0.0869376, 14.3394, 7.89498, 0.66 ) }
    dend_55 { pt3dadd( -0.148183, 15.0854, 7.74372, 0.37 ) }
    dend_55 { pt3dadd( -0.215018, 15.6542, 7.79248, 0.37 ) }
    dend_55 { pt3dadd( -0.290145, 16.819, 8.049, 0.37 ) }
    dend_55 { pt3dadd( -0.30348, 17.9167, 8.35072, 0.59 ) }
    dend_55 { pt3dadd( -0.293335, 18.5502, 8.49879, 0.81 ) }
    dend_55 { pt3dadd( -0.275463, 19.1751, 8.62754, 0.81 ) }
    dend_55 { pt3dadd( -0.242224, 20.8106, 8.98161, 0.29 ) }
    dend_55 { pt3dadd( -0.227759, 22.0196, 9.18524, 0.29 ) }
    dend_55 { pt3dadd( -0.19692, 22.9845, 9.30287, 0.29 ) }
    dend_55 { pt3dadd( -0.137309, 23.7813, 9.36652, 0.29 ) }
    dend_55 { pt3dadd( -0.0624358, 24.5089, 9.41555, 0.88 ) }
    dend_55 { pt3dadd( 0.0306527, 25.4386, 9.45605, 0.88 ) }
    dend_55 { pt3dadd( 0.00774544, 26.1857, 9.50196, 0.52 ) }
    dend_55 { pt3dadd( -0.140845, 26.964, 9.68156, 0.37 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 53/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -5.48259, -30.9596, -1.3732, 1.77 ) }
    dend_29 { pt3dadd( -5.15179, -32.337, -1.48558, 1.77 ) }
    dend_29 { pt3dadd( -4.95617, -33.0248, -1.50128, 1.77 ) }
    dend_29 { pt3dadd( -4.71137, -33.7681, -1.70427, 1.77 ) }
    dend_29 { pt3dadd( -4.3766, -34.5624, -2.10395, 1.77 ) }
    dend_29 { pt3dadd( -3.9902, -35.4792, -2.56527, 1.92 ) }
    dend_29 { pt3dadd( -3.69438, -36.1811, -2.91844, 2.14 ) }
    dend_29 { pt3dadd( -3.238, -37.065, -3.43897, 2.36 ) }
    dend_29 { pt3dadd( -1.88489, -39.4346, -5.28791, 1.77 ) }
    dend_29 { pt3dadd( -1.38549, -40.1991, -6.13842, 1.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 63/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -5.48259, -30.9596, -1.3732, 0.81 ) }
    dend_28 { pt3dadd( -4.98533, -31.866, -0.709779, 0.81 ) }
    dend_28 { pt3dadd( -4.07223, -33.1144, 0.208105, 0.66 ) }
    dend_28 { pt3dadd( -3.65587, -33.5418, 0.540159, 0.88 ) }
    dend_28 { pt3dadd( -2.93015, -34.1519, 1.01565, 0.59 ) }
    dend_28 { pt3dadd( -2.15199, -34.7121, 1.41488, 0.88 ) }
    dend_28 { pt3dadd( -1.26129, -35.278, 1.76157, 1.18 ) }
    dend_28 { pt3dadd( -0.468495, -35.6796, 1.89207, 0.81 ) }
    dend_28 { pt3dadd( 0.513803, -36.0643, 1.93068, 0.66 ) }
    dend_28 { pt3dadd( 1.20318, -36.3052, 1.92939, 0.59 ) }
    dend_28 { pt3dadd( 2.16486, -36.6223, 1.90027, 0.88 ) }
    dend_28 { pt3dadd( 3.03065, -36.912, 1.85294, 0.74 ) }
    dend_28 { pt3dadd( 3.93975, -37.2564, 1.78496, 0.59 ) }
    dend_28 { pt3dadd( 4.88056, -37.654, 1.70467, 0.74 ) }
    dend_28 { pt3dadd( 5.70926, -38.0428, 1.64421, 0.74 ) }
    dend_28 { pt3dadd( 6.20649, -38.2995, 1.62261, 0.88 ) }
    dend_28 { pt3dadd( 6.74614, -38.6172, 1.62085, 0.88 ) }
    dend_28 { pt3dadd( 7.4264, -39.0773, 1.631, 0.66 ) }
    dend_28 { pt3dadd( 8.0992, -39.6304, 1.62621, 0.66 ) }
    dend_28 { pt3dadd( 8.49022, -40.0557, 1.59588, 0.52 ) }
    dend_28 { pt3dadd( 8.89982, -40.6616, 1.53978, 0.52 ) }
    dend_28 { pt3dadd( 9.10411, -41.1224, 1.51585, 0.96 ) }
    dend_28 { pt3dadd( 9.20549, -41.4493, 1.52228, 1.18 ) }
    dend_28 { pt3dadd( 9.39013, -42.1732, 1.57962, 1.03 ) }
    dend_28 { pt3dadd( 9.48874, -42.5596, 1.66164, 1.18 ) }
    dend_28 { pt3dadd( 9.65794, -43.0768, 1.85343, 1.03 ) }
    dend_28 { pt3dadd( 10.0028, -43.8557, 2.28361, 0.37 ) }
    dend_28 { pt3dadd( 10.3535, -44.4784, 2.74503, 0.74 ) }
    dend_28 { pt3dadd( 10.5625, -44.8135, 3.05582, 0.88 ) }
    dend_28 { pt3dadd( 11.0278, -45.5362, 3.82559, 0.59 ) }
    dend_28 { pt3dadd( 11.263, -45.9157, 4.24339, 0.59 ) }
    dend_28 { pt3dadd( 11.5284, -46.3835, 4.74699, 0.88 ) }
    dend_28 { pt3dadd( 11.8329, -46.999, 5.35968, 0.74 ) }
    dend_28 { pt3dadd( 12.0802, -47.6026, 5.89814, 1.25 ) }
    dend_28 { pt3dadd( 12.2421, -48.0068, 6.21169, 1.25 ) }
    dend_28 { pt3dadd( 12.454, -48.5007, 6.5256, 0.81 ) }
    dend_28 { pt3dadd( 12.6755, -49.0156, 6.80714, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_28 { pt3dadd( 12.9512, -49.6219, 7.09141, 0.59 ) }
    dend_28 { pt3dadd( 13.2174, -50.1263, 7.27785, 0.59 ) }
    dend_28 { pt3dadd( 13.7168, -50.9096, 7.53784, 0.44 ) }
    dend_28 { pt3dadd( 14.0711, -51.3728, 7.70907, 0.52 ) }
    dend_28 { pt3dadd( 14.458, -51.7983, 7.88515, 0.44 ) }
    dend_28 { pt3dadd( 14.9358, -52.2688, 8.09393, 0.44 ) }
    dend_28 { pt3dadd( 15.3192, -52.6409, 8.26123, 0.52 ) }
    dend_28 { pt3dadd( 15.7871, -53.1315, 8.48253, 0.66 ) }
    dend_28 { pt3dadd( 16.2067, -53.6083, 8.67562, 0.66 ) }
    dend_28 { pt3dadd( 16.7344, -54.2872, 8.93371, 0.52 ) }
    dend_28 { pt3dadd( 16.9652, -54.617, 9.07804, 0.81 ) }
    dend_28 { pt3dadd( 17.2171, -55.0513, 9.28471, 0.81 ) }
    dend_28 { pt3dadd( 17.4669, -55.5723, 9.53969, 0.66 ) }
    dend_28 { pt3dadd( 17.8134, -56.4271, 9.94067, 0.52 ) }
    dend_28 { pt3dadd( 18.1042, -57.2617, 10.3232, 0.52 ) }
    dend_28 { pt3dadd( 18.3426, -58.0376, 10.6897, 1.18 ) }
    dend_28 { pt3dadd( 18.4608, -58.4249, 10.8821, 1.4 ) }
    dend_28 { pt3dadd( 18.6653, -59.0465, 11.2157, 1.25 ) }
    dend_28 { pt3dadd( 18.9086, -59.7561, 11.6509, 1.03 ) }
    dend_28 { pt3dadd( 18.9917, -59.9895, 11.8223, 1.03 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 20/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -6.34761, 38.5268, -9.21712, 1.33 ) }
    dend_6 { pt3dadd( -7.0241, 39.6312, -9.37899, 1.33 ) }
    dend_6 { pt3dadd( -7.70423, 40.8625, -9.51132, 1.33 ) }
    dend_6 { pt3dadd( -8.34367, 42.0975, -9.55593, 1.33 ) }
    dend_6 { pt3dadd( -9.03171, 43.5328, -9.50923, 1.33 ) }
    dend_6 { pt3dadd( -9.73853, 45.1466, -9.3792, 1.47 ) }
    dend_6 { pt3dadd( -10.2039, 46.3359, -9.23841, 1.69 ) }
    dend_6 { pt3dadd( -10.5052, 47.3446, -9.05546, 1.77 ) }
    dend_6 { pt3dadd( -10.777, 48.5042, -8.77745, 1.99 ) }
    dend_6 { pt3dadd( -10.9956, 49.6706, -8.47504, 2.14 ) }
    dend_6 { pt3dadd( -11.2271, 51.0751, -8.10518, 1.84 ) }
    dend_6 { pt3dadd( -11.5126, 52.7294, -7.69902, 1.84 ) }
    dend_6 { pt3dadd( -11.8048, 54.1664, -7.41233, 1.84 ) }
    dend_6 { pt3dadd( -12.0363, 55.1437, -7.28686, 1.92 ) }
    dend_6 { pt3dadd( -12.3643, 56.3631, -7.21269, 1.92 ) }
    dend_6 { pt3dadd( -12.7075, 57.5342, -7.17916, 1.92 ) }
    dend_6 { pt3dadd( -13.096, 58.7227, -7.17758, 1.62 ) }
    dend_6 { pt3dadd( -13.6347, 60.1636, -7.23167, 1.62 ) }
    dend_6 { pt3dadd( -14.1911, 61.5025, -7.32717, 1.77 ) }
    dend_6 { pt3dadd( -14.6996, 62.6691, -7.44536, 2.14 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -6.34761, 38.5268, -9.21712, 0.66 ) }
    dend_1 { pt3dadd( -5.20024, 40.6385, -9.4234, 0.66 ) }
    dend_1 { pt3dadd( -4.47557, 41.7706, -9.43547, 0.66 ) }
    dend_1 { pt3dadd( -4.18441, 42.1794, -9.40006, 0.96 ) }
    dend_1 { pt3dadd( -3.61526, 42.946, -9.25755, 0.96 ) }
    dend_1 { pt3dadd( -3.18491, 43.5641, -9.0397, 0.74 ) }
    dend_1 { pt3dadd( -2.87612, 44.0588, -8.83427, 0.66 ) }
    dend_1 { pt3dadd( -2.37755, 44.8392, -8.38064, 0.66 ) }
    dend_1 { pt3dadd( -1.94849, 45.4956, -7.99924, 0.66 ) }
    dend_1 { pt3dadd( -1.52274, 46.1161, -7.66928, 0.66 ) }
    dend_1 { pt3dadd( -0.336161, 47.6689, -7.0001, 0.88 ) }
    dend_1 { pt3dadd( 0.518033, 48.658, -6.69257, 0.29 ) }
    dend_1 { pt3dadd( 1.25832, 49.3857, -6.59765, 0.29 ) }
    dend_1 { pt3dadd( 2.33434, 50.1422, -6.79503, 1.18 ) }
    dend_1 { pt3dadd( 2.8601, 50.4144, -7.00697, 1.62 ) }
    dend_1 { pt3dadd( 4.19381, 50.9694, -7.70078, 0.81 ) }
    dend_1 { pt3dadd( 4.99212, 51.2463, -8.178, 0.81 ) }
    dend_1 { pt3dadd( 5.76877, 51.4629, -8.66955, 1.03 ) }
    dend_1 { pt3dadd( 6.95622, 51.7718, -9.47488, 0.44 ) }
    dend_1 { pt3dadd( 7.96246, 52.0382, -10.1973, 0.44 ) }
    dend_1 { pt3dadd( 8.6055, 52.2408, -10.649, 1.18 ) }
    dend_1 { pt3dadd( 9.10703, 52.4499, -10.96, 1.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 62/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -1.50121, -40.8873, 0.0443568, 0.15 ) }
    axon_1 { pt3dadd( -2.07943, -55.8762, 0.0443568, 0.15 ) }
    axon_1 { pt3dadd( -2.65765, -70.865, 0.0443568, 0.15 ) }
    // Section: dend_37, id: dend_37, parent: dend_29 (entry count 65/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -1.38549, -40.1991, -6.13842, 1.03 ) }
    dend_37 { pt3dadd( -3.42655, -42.4535, -9.55287, 1.03 ) }
    dend_37 { pt3dadd( -5.35897, -44.2193, -11.7774, 0.81 ) }
    dend_37 { pt3dadd( -6.34559, -45.0, -12.6552, 0.81 ) }
    dend_37 { pt3dadd( -7.53914, -45.7843, -13.5231, 0.81 ) }
    dend_37 { pt3dadd( -8.58144, -46.3625, -14.1957, 1.11 ) }
    dend_37 { pt3dadd( -9.737, -46.8846, -14.8316, 1.11 ) }
    dend_37 { pt3dadd( -11.3007, -47.2844, -15.2382, 1.4 ) }
    dend_37 { pt3dadd( -12.3752, -47.4299, -15.4112, 1.4 ) }
    dend_37 { pt3dadd( -14.2296, -47.4702, -15.7962, 1.11 ) }
    dend_37 { pt3dadd( -15.2225, -47.3141, -16.0669, 1.33 ) }
    dend_37 { pt3dadd( -17.0297, -46.665, -16.6761, 1.03 ) }
    dend_37 { pt3dadd( -18.1561, -46.0591, -17.3723, 0.81 ) }
    dend_37 { pt3dadd( -18.8709, -45.6403, -17.9332, 0.81 ) }
    dend_37 { pt3dadd( -20.5255, -44.7874, -19.3924, 0.81 ) }
    dend_37 { pt3dadd( -22.2476, -44.0918, -21.0536, 1.03 ) }
    dend_37 { pt3dadd( -23.5717, -43.7396, -22.3818, 1.33 ) }
    dend_37 { pt3dadd( -27.9102, -43.3848, -26.8956, 1.03 ) }
    dend_37 { pt3dadd( -29.3718, -43.5878, -28.35, 1.03 ) }
    dend_37 { pt3dadd( -31.207, -44.2452, -29.9586, 1.33 ) }
    dend_37 { pt3dadd( -32.6306, -45.0432, -30.9888, 1.33 ) }
    dend_37 { pt3dadd( -33.7968, -45.8824, -31.6705, 1.47 ) }
    dend_37 { pt3dadd( -35.6652, -47.3789, -32.3856, 1.11 ) }
    dend_37 { pt3dadd( -37.1518, -48.574, -32.5945, 0.88 ) }
    dend_37 { pt3dadd( -38.2507, -49.3127, -32.6835, 1.55 ) }
    dend_37 { pt3dadd( -39.4431, -49.9003, -32.7452, 1.84 ) }
    dend_37 { pt3dadd( -40.7497, -50.2916, -32.808, 1.99 ) }
    dend_37 { pt3dadd( -43.0342, -50.4996, -32.8791, 1.18 ) }
    dend_37 { pt3dadd( -44.57, -50.3004, -32.884, 0.88 ) }
    dend_37 { pt3dadd( -46.1379, -49.7665, -32.8753, 1.25 ) }
    dend_37 { pt3dadd( -47.351, -49.0439, -32.8706, 1.47 ) }
    dend_37 { pt3dadd( -48.7854, -47.8834, -33.0329, 1.18 ) }
    dend_37 { pt3dadd( -50.3818, -46.6702, -33.8799, 0.96 ) }
    dend_37 { pt3dadd( -50.9291, -46.3833, -34.4855, 1.18 ) }
    dend_37 { pt3dadd( -51.4461, -46.2211, -35.1759, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_37 { pt3dadd( -52.555, -46.0219, -36.6377, 0.74 ) }
    dend_37 { pt3dadd( -54.801, -45.8613, -39.453, 0.74 ) }
    dend_37 { pt3dadd( -58.8267, -45.8452, -44.6824, 1.47 ) }
    dend_37 { pt3dadd( -61.2071, -45.9667, -47.8481, 1.99 ) }
    dend_37 { pt3dadd( -63.2959, -46.1814, -50.6418, 1.47 ) }
    dend_37 { pt3dadd( -64.5102, -46.377, -52.2681, 1.62 ) }
    dend_37 { pt3dadd( -66.2655, -46.7845, -54.6203, 1.33 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 7/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -1.38549, -40.1991, -6.13842, 0.88 ) }
    dend_30 { pt3dadd( -0.469464, -40.7877, -6.83143, 0.88 ) }
    dend_30 { pt3dadd( 0.190279, -41.3282, -7.46382, 1.03 ) }
    dend_30 { pt3dadd( 0.759681, -41.982, -8.15392, 1.03 ) }
    dend_30 { pt3dadd( 1.16909, -42.7186, -8.84794, 0.88 ) }
    dend_30 { pt3dadd( 1.48513, -43.6106, -9.60458, 0.81 ) }
    dend_30 { pt3dadd( 1.70496, -44.7078, -10.5136, 1.03 ) }
    dend_30 { pt3dadd( 1.641, -45.3348, -11.0128, 1.33 ) }
    dend_30 { pt3dadd( 1.2822, -46.2409, -11.8195, 0.88 ) }
    dend_30 { pt3dadd( 0.671406, -47.1687, -12.7458, 0.66 ) }
    dend_30 { pt3dadd( 0.287267, -47.6289, -13.311, 0.96 ) }
    dend_30 { pt3dadd( -0.148721, -48.1272, -14.146, 0.66 ) }
    dend_30 { pt3dadd( -0.420181, -48.5022, -14.9881, 0.74 ) }
    dend_30 { pt3dadd( -0.623646, -49.1772, -17.0016, 0.88 ) }
    dend_30 { pt3dadd( -0.524906, -49.3815, -17.7573, 1.11 ) }
    dend_30 { pt3dadd( 0.0390762, -49.9135, -19.8037, 0.88 ) }
    dend_30 { pt3dadd( 0.736229, -50.5364, -22.0346, 0.74 ) }
    dend_30 { pt3dadd( 1.28783, -51.0688, -23.6084, 0.74 ) }
    dend_30 { pt3dadd( 1.72298, -51.5476, -24.8152, 0.74 ) }
    dend_30 { pt3dadd( 2.11003, -52.0511, -25.8827, 0.66 ) }
    dend_30 { pt3dadd( 2.76709, -53.1036, -27.8074, 0.96 ) }
    dend_30 { pt3dadd( 3.19886, -53.9832, -29.113, 1.25 ) }
    dend_30 { pt3dadd( 3.58938, -54.9174, -30.3046, 0.81 ) }
    dend_30 { pt3dadd( 4.04105, -56.0565, -31.6671, 0.74 ) }
    dend_30 { pt3dadd( 4.36936, -56.7588, -32.465, 0.88 ) }
    dend_30 { pt3dadd( 4.96021, -57.6536, -33.3469, 0.59 ) }
    dend_30 { pt3dadd( 5.83309, -58.5103, -34.0082, 0.59 ) }
    dend_30 { pt3dadd( 6.7338, -59.1799, -34.4193, 1.18 ) }
    dend_30 { pt3dadd( 7.20985, -59.4631, -34.5124, 1.62 ) }
    dend_30 { pt3dadd( 7.73955, -59.7344, -34.5224, 1.84 ) }
    dend_30 { pt3dadd( 9.20123, -60.3883, -34.4252, 1.18 ) }
    dend_30 { pt3dadd( 10.3274, -60.8309, -34.3902, 0.81 ) }
    dend_30 { pt3dadd( 10.7955, -61.0015, -34.4175, 0.96 ) }
    dend_30 { pt3dadd( 12.0017, -61.4424, -34.7131, 0.59 ) }
    dend_30 { pt3dadd( 12.4152, -61.6076, -34.8978, 0.66 ) }
    dend_30 { pt3dadd( 13.1579, -61.9483, -35.3657, 0.52 ) }
    dend_30 { pt3dadd( 14.599, -62.7856, -36.6783, 1.18 ) }
    dend_30 { pt3dadd( 15.1218, -63.1808, -37.2715, 1.25 ) }
    dend_30 { pt3dadd( 15.9943, -63.9556, -38.6214, 0.88 ) }
    dend_30 { pt3dadd( 16.349, -64.2888, -39.2602, 0.88 ) }
    dend_30 { pt3dadd( 16.8286, -64.7268, -40.1401, 0.66 ) }
    dend_30 { pt3dadd( 17.7353, -65.4424, -41.8183, 1.47 ) }
    dend_30 { pt3dadd( 18.1563, -65.709, -42.5818, 1.69 ) }
    dend_30 { pt3dadd( 20.154, -66.6992, -46.128, 0.81 ) }
    dend_30 { pt3dadd( 20.6028, -66.8738, -46.8819, 0.81 ) }
    dend_30 { pt3dadd( 21.1773, -67.0513, -47.7743, 0.66 ) }
    dend_30 { pt3dadd( 22.5755, -67.3698, -49.6924, 1.03 ) }
    dend_30 { pt3dadd( 23.0755, -67.4499, -50.2464, 1.03 ) }
    dend_30 { pt3dadd( 23.7791, -67.5835, -50.8527, 1.33 ) }
    dend_30 { pt3dadd( 25.0085, -67.9507, -51.4783, 0.88 ) }
    dend_30 { pt3dadd( 25.935, -68.3528, -51.8373, 0.88 ) }
    dend_30 { pt3dadd( 26.6793, -68.7894, -52.0054, 0.74 ) }
    dend_30 { pt3dadd( 26.9824, -68.998, -52.0279, 0.88 ) }
    dend_30 { pt3dadd( 27.8961, -69.6523, -52.0392, 0.44 ) }
    dend_30 { pt3dadd( 28.6771, -70.1988, -52.0074, 1.77 ) }
    dend_30 { pt3dadd( 29.1068, -70.504, -51.9666, 2.06 ) }
    dend_30 { pt3dadd( 29.6052, -70.9339, -51.8864, 2.06 ) }
    // Section: dend_12, id: dend_12, parent: dend_6 (entry count 64/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -14.6996, 62.6691, -7.44536, 1.25 ) }
    dend_12 { pt3dadd( -13.9648, 63.9562, -8.13166, 1.25 ) }
    dend_12 { pt3dadd( -13.6677, 64.4936, -8.34682, 1.4 ) }
    dend_12 { pt3dadd( -13.2176, 65.4536, -8.64296, 1.11 ) }
    dend_12 { pt3dadd( -12.734, 66.6954, -8.94864, 1.33 ) }
    dend_12 { pt3dadd( -12.4529, 67.5713, -9.12973, 1.25 ) }
    dend_12 { pt3dadd( -12.1157, 68.7817, -9.35436, 1.25 ) }
    dend_12 { pt3dadd( -11.7793, 70.1431, -9.53065, 1.47 ) }
    dend_12 { pt3dadd( -11.4833, 71.4443, -9.65471, 1.69 ) }
    dend_12 { pt3dadd( -11.2801, 72.5914, -9.69939, 1.84 ) }
    dend_12 { pt3dadd( -11.1799, 73.5804, -9.69301, 2.14 ) }
    dend_12 { pt3dadd( -11.1697, 74.5518, -9.6931, 2.14 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 76/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -14.6996, 62.6691, -7.44536, 0.96 ) }
    dend_7 { pt3dadd( -15.5581, 63.7668, -7.2187, 0.96 ) }
    dend_7 { pt3dadd( -16.1422, 64.4963, -7.18884, 0.81 ) }
    dend_7 { pt3dadd( -17.2311, 65.7684, -7.33739, 0.66 ) }
    dend_7 { pt3dadd( -17.8317, 66.4022, -7.52651, 0.59 ) }
    dend_7 { pt3dadd( -18.5592, 67.0968, -7.84256, 0.59 ) }
    dend_7 { pt3dadd( -19.4799, 67.8937, -8.34403, 0.74 ) }
    dend_7 { pt3dadd( -20.2218, 68.4167, -8.91458, 0.74 ) }
    dend_7 { pt3dadd( -20.8117, 68.7763, -9.47413, 1.11 ) }
    dend_7 { pt3dadd( -21.5115, 69.1586, -10.2212, 0.74 ) }
    dend_7 { pt3dadd( -22.0034, 69.4288, -10.755, 1.25 ) }
    dend_7 { pt3dadd( -22.7343, 69.887, -11.5425, 0.96 ) }
    dend_7 { pt3dadd( -23.5466, 70.5187, -12.3157, 0.44 ) }
    dend_7 { pt3dadd( -23.8393, 70.8413, -12.5801, 0.44 ) }
    dend_7 { pt3dadd( -24.1179, 71.3017, -12.823, 0.74 ) }
    dend_7 { pt3dadd( -24.4019, 71.9985, -13.0406, 0.74 ) }
    dend_7 { pt3dadd( -24.6926, 72.8048, -13.1204, 0.74 ) }
    dend_7 { pt3dadd( -25.0576, 73.7581, -12.9741, 0.59 ) }
    dend_7 { pt3dadd( -25.3575, 74.4493, -12.7053, 0.59 ) }
    dend_7 { pt3dadd( -25.6887, 75.1336, -12.2882, 0.88 ) }
    dend_7 { pt3dadd( -25.9852, 75.7491, -11.8429, 0.66 ) }
    dend_7 { pt3dadd( -26.7817, 77.1736, -10.5595, 0.66 ) }
    dend_7 { pt3dadd( -27.4149, 78.1719, -9.54891, 0.96 ) }
    dend_7 { pt3dadd( -27.7708, 78.685, -9.00354, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_7 { pt3dadd( -28.2592, 79.3213, -8.30933, 0.52 ) }
    dend_7 { pt3dadd( -28.8773, 80.0648, -7.52089, 0.88 ) }
    dend_7 { pt3dadd( -29.7605, 81.1266, -6.55611, 0.59 ) }
    dend_7 { pt3dadd( -30.2015, 81.6899, -6.19289, 0.59 ) }
    dend_7 { pt3dadd( -30.6163, 82.2011, -5.94669, 0.59 ) }
    dend_7 { pt3dadd( -31.384, 83.0603, -5.60866, 0.59 ) }
    dend_7 { pt3dadd( -32.1096, 83.8021, -5.35963, 1.11 ) }
    dend_7 { pt3dadd( -33.076, 84.7369, -5.08158, 0.59 ) }
    dend_7 { pt3dadd( -33.6653, 85.3206, -4.97133, 0.59 ) }
    dend_7 { pt3dadd( -34.3719, 85.9916, -4.85604, 0.81 ) }
    dend_7 { pt3dadd( -35.0736, 86.6579, -4.76442, 0.81 ) }
    dend_7 { pt3dadd( -35.7943, 87.3577, -4.72429, 0.96 ) }
    dend_7 { pt3dadd( -36.4338, 87.9644, -4.71847, 1.03 ) }
    dend_7 { pt3dadd( -37.063, 88.5055, -4.73946, 1.33 ) }
    dend_7 { pt3dadd( -37.7288, 89.0271, -4.75041, 1.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 15/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 9.10703, 52.4499, -10.96, 0.88 ) }
    dend_3 { pt3dadd( 10.0314, 52.7, -11.1913, 0.88 ) }
    dend_3 { pt3dadd( 10.7791, 52.8339, -11.3819, 0.66 ) }
    dend_3 { pt3dadd( 11.3388, 52.8991, -11.5273, 1.03 ) }
    dend_3 { pt3dadd( 11.9781, 52.9738, -11.7161, 1.18 ) }
    dend_3 { pt3dadd( 12.5307, 53.0642, -11.9103, 1.18 ) }
    dend_3 { pt3dadd( 12.9514, 53.1591, -12.0824, 0.81 ) }
    dend_3 { pt3dadd( 13.4719, 53.3084, -12.3485, 0.44 ) }
    dend_3 { pt3dadd( 14.0423, 53.5507, -12.7015, 0.44 ) }
    dend_3 { pt3dadd( 14.6634, 53.9705, -13.1536, 0.44 ) }
    dend_3 { pt3dadd( 15.2253, 54.5027, -13.5998, 0.59 ) }
    dend_3 { pt3dadd( 15.6064, 54.9268, -13.9027, 0.81 ) }
    dend_3 { pt3dadd( 15.9051, 55.2658, -14.1263, 0.81 ) }
    dend_3 { pt3dadd( 16.2809, 55.6838, -14.3819, 0.66 ) }
    dend_3 { pt3dadd( 16.7603, 56.1487, -14.6568, 0.66 ) }
    dend_3 { pt3dadd( 17.3694, 56.5974, -14.9222, 0.66 ) }
    dend_3 { pt3dadd( 17.9213, 56.8725, -15.1095, 0.88 ) }
    dend_3 { pt3dadd( 18.5268, 57.072, -15.2886, 0.52 ) }
    dend_3 { pt3dadd( 18.9732, 57.1567, -15.4139, 0.96 ) }
    dend_3 { pt3dadd( 19.5307, 57.175, -15.5707, 0.96 ) }
    dend_3 { pt3dadd( 19.9658, 57.1149, -15.6933, 1.11 ) }
    dend_3 { pt3dadd( 20.5207, 56.9269, -15.8682, 1.18 ) }
    dend_3 { pt3dadd( 20.9205, 56.7142, -16.0051, 1.18 ) }
    dend_3 { pt3dadd( 21.3866, 56.364, -16.1995, 0.66 ) }
    dend_3 { pt3dadd( 22.009, 55.747, -16.5268, 0.96 ) }
    dend_3 { pt3dadd( 22.577, 55.0092, -16.9059, 0.44 ) }
    dend_3 { pt3dadd( 23.1798, 54.0481, -17.4383, 0.37 ) }
    dend_3 { pt3dadd( 23.4882, 53.5018, -17.7731, 1.18 ) }
    dend_3 { pt3dadd( 23.8164, 52.9006, -18.1828, 1.33 ) }
    dend_3 { pt3dadd( 24.06, 52.4455, -18.5291, 1.33 ) }
    dend_3 { pt3dadd( 24.4454, 51.6755, -19.2171, 0.59 ) }
    dend_3 { pt3dadd( 24.7684, 50.9474, -19.9698, 0.37 ) }
    dend_3 { pt3dadd( 24.9557, 50.4483, -20.5344, 0.37 ) }
    dend_3 { pt3dadd( 25.0629, 50.0569, -21.0219, 0.37 ) }
    dend_3 { pt3dadd( 25.1459, 49.6458, -21.5574, 0.37 ) }
    dend_3 { pt3dadd( 25.2186, 48.9807, -22.4584, 0.52 ) }
    dend_3 { pt3dadd( 25.2369, 48.4319, -23.2193, 0.52 ) }
    dend_3 { pt3dadd( 25.2298, 47.9136, -23.8924, 0.52 ) }
    dend_3 { pt3dadd( 25.2238, 46.8039, -25.1411, 0.96 ) }
    dend_3 { pt3dadd( 25.2602, 46.0695, -25.8653, 1.47 ) }
    dend_3 { pt3dadd( 25.3535, 45.4568, -26.411, 1.69 ) }
    dend_3 { pt3dadd( 25.4742, 45.036, -26.7497, 1.92 ) }
    dend_3 { pt3dadd( 25.69, 44.5136, -27.1433, 1.92 ) }
    dend_3 { pt3dadd( 26.3169, 43.3422, -27.9541, 0.74 ) }
    dend_3 { pt3dadd( 26.8815, 42.4707, -28.4701, 0.37 ) }
    dend_3 { pt3dadd( 27.2951, 41.9305, -28.777, 0.88 ) }
    dend_3 { pt3dadd( 27.5998, 41.6088, -28.9635, 1.11 ) }
    dend_3 { pt3dadd( 27.8834, 41.3547, -29.1245, 1.11 ) }
    dend_3 { pt3dadd( 28.2792, 41.0405, -29.3382, 1.33 ) }
    dend_3 { pt3dadd( 28.5208, 40.8597, -29.4626, 1.33 ) }
    dend_3 { pt3dadd( 28.9323, 40.4767, -29.6518, 0.81 ) }
    dend_3 { pt3dadd( 29.2503, 39.9752, -29.8255, 0.44 ) }
    dend_3 { pt3dadd( 29.5018, 39.366, -30.0355, 0.37 ) }
    dend_3 { pt3dadd( 29.7499, 38.6083, -30.3318, 0.37 ) }
    dend_3 { pt3dadd( 29.8877, 38.139, -30.5423, 1.18 ) }
    dend_3 { pt3dadd( 30.0359, 37.6151, -30.8056, 1.4 ) }
    dend_3 { pt3dadd( 30.3477, 36.5236, -31.4555, 0.29 ) }
    dend_3 { pt3dadd( 30.6882, 35.5605, -32.1889, 0.66 ) }
    dend_3 { pt3dadd( 31.0215, 34.855, -32.8752, 1.11 ) }
    dend_3 { pt3dadd( 31.2683, 34.4066, -33.3867, 1.62 ) }
    dend_3 { pt3dadd( 31.3807, 34.2018, -33.6315, 1.84 ) }
    dend_3 { pt3dadd( 31.67, 33.6806, -34.2614, 1.84 ) }
    dend_3 { pt3dadd( 32.0547, 32.9189, -35.1797, 0.81 ) }
    dend_3 { pt3dadd( 32.3473, 32.267, -35.909, 0.44 ) }
    dend_3 { pt3dadd( 32.5423, 31.7941, -36.39, 0.44 ) }
    dend_3 { pt3dadd( 32.8609, 31.0591, -37.0689, 0.44 ) }
    dend_3 { pt3dadd( 33.093, 30.5675, -37.4803, 0.59 ) }
    dend_3 { pt3dadd( 33.6855, 29.4924, -38.2765, 0.52 ) }
    dend_3 { pt3dadd( 34.0386, 28.9656, -38.6332, 0.37 ) }
    dend_3 { pt3dadd( 34.3855, 28.5715, -38.9459, 0.96 ) }
    dend_3 { pt3dadd( 34.896, 28.0855, -39.4037, 1.62 ) }
    dend_3 { pt3dadd( 35.1351, 27.875, -39.6137, 1.99 ) }
    dend_3 { pt3dadd( 35.5933, 27.4495, -40.0238, 1.99 ) }
    dend_3 { pt3dadd( 35.8831, 27.1674, -40.2688, 1.47 ) }
    dend_3 { pt3dadd( 36.92, 26.0337, -41.1879, 0.52 ) }
    dend_3 { pt3dadd( 37.5468, 25.339, -41.7423, 0.52 ) }
    dend_3 { pt3dadd( 38.0343, 24.806, -42.1627, 0.88 ) }
    dend_3 { pt3dadd( 38.5416, 24.283, -42.5736, 0.59 ) }
    dend_3 { pt3dadd( 38.9855, 23.8495, -42.9001, 0.37 ) }
    dend_3 { pt3dadd( 39.363, 23.5084, -43.1188, 0.37 ) }
    dend_3 { pt3dadd( 39.9167, 23.0696, -43.3046, 0.74 ) }
    dend_3 { pt3dadd( 40.262, 22.8054, -43.4213, 0.74 ) }
    dend_3 { pt3dadd( 40.5576, 22.5547, -43.558, 0.37 ) }
    dend_3 { pt3dadd( 40.7463, 22.3549, -43.6814, 0.37 ) }
    dend_3 { pt3dadd( 41.1386, 21.8307, -44.031, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_3 { pt3dadd( 41.2781, 21.5771, -44.2033, 1.03 ) }
    dend_3 { pt3dadd( 41.7484, 20.5037, -44.9089, 0.37 ) }
    dend_3 { pt3dadd( 42.0413, 19.7473, -45.4042, 1.18 ) }
    dend_3 { pt3dadd( 42.2529, 19.1498, -45.7939, 1.47 ) }
    dend_3 { pt3dadd( 42.5184, 18.4332, -46.2688, 0.66 ) }
    dend_3 { pt3dadd( 42.8853, 17.5855, -46.8821, 0.29 ) }
    dend_3 { pt3dadd( 43.0689, 17.2419, -47.137, 1.25 ) }
    dend_3 { pt3dadd( 43.2915, 16.8976, -47.4111, 1.55 ) }
    dend_3 { pt3dadd( 43.5404, 16.583, -47.6948, 1.55 ) }
    dend_3 { pt3dadd( 44.2613, 15.8568, -48.4392, 0.44 ) }
    dend_3 { pt3dadd( 45.1354, 15.1677, -49.2764, 1.18 ) }
    dend_3 { pt3dadd( 45.8252, 14.7172, -49.895, 1.84 ) }
    dend_3 { pt3dadd( 46.654, 14.2307, -50.6196, 2.06 ) }
    dend_3 { pt3dadd( 47.6406, 13.7107, -51.4878, 0.29 ) }
    dend_3 { pt3dadd( 48.2369, 13.4266, -52.022, 0.29 ) }
    dend_3 { pt3dadd( 48.8998, 13.1081, -52.6205, 1.18 ) }
    dend_3 { pt3dadd( 49.4442, 12.8057, -53.1002, 0.88 ) }
    dend_3 { pt3dadd( 49.7982, 12.5968, -53.4022, 0.52 ) }
    dend_3 { pt3dadd( 50.5582, 12.1301, -53.9924, 0.52 ) }
    dend_3 { pt3dadd( 51.0073, 11.826, -54.3444, 0.52 ) }
    dend_3 { pt3dadd( 51.6659, 11.3372, -54.8496, 0.29 ) }
    dend_3 { pt3dadd( 52.2056, 10.9166, -55.2265, 0.29 ) }
    dend_3 { pt3dadd( 52.7224, 10.5207, -55.5689, 0.66 ) }
    dend_3 { pt3dadd( 53.1954, 10.1425, -55.861, 0.81 ) }
    dend_3 { pt3dadd( 53.3866, 9.98149, -55.9647, 0.81 ) }
    dend_3 { pt3dadd( 54.1218, 9.35411, -56.3759, 0.29 ) }
    dend_3 { pt3dadd( 54.6721, 8.9032, -56.6973, 0.96 ) }
    dend_3 { pt3dadd( 55.1712, 8.50446, -57.0169, 1.03 ) }
    dend_3 { pt3dadd( 55.7423, 8.03234, -57.3987, 0.29 ) }
    dend_3 { pt3dadd( 56.0837, 7.75413, -57.6262, 0.29 ) }
    dend_3 { pt3dadd( 56.6266, 7.34145, -57.9754, 0.96 ) }
    dend_3 { pt3dadd( 57.1853, 6.95727, -58.3057, 0.96 ) }
    dend_3 { pt3dadd( 57.9486, 6.49625, -58.7252, 0.37 ) }
    dend_3 { pt3dadd( 58.7239, 6.08884, -59.0983, 0.66 ) }
    dend_3 { pt3dadd( 59.059, 5.91712, -59.2505, 0.96 ) }
    dend_3 { pt3dadd( 59.8739, 5.47778, -59.5972, 0.29 ) }
    dend_3 { pt3dadd( 60.7205, 5.0032, -59.9237, 1.03 ) }
    dend_3 { pt3dadd( 61.0247, 4.83537, -60.0386, 1.33 ) }
    dend_3 { pt3dadd( 61.8193, 4.43076, -60.3191, 0.37 ) }
    dend_3 { pt3dadd( 62.5795, 4.11834, -60.599, 0.37 ) }
    dend_3 { pt3dadd( 63.2353, 3.89635, -60.8716, 0.37 ) }
    dend_3 { pt3dadd( 63.6442, 3.78734, -61.0591, 0.74 ) }
    dend_3 { pt3dadd( 64.2995, 3.63151, -61.3787, 0.74 ) }
    dend_3 { pt3dadd( 64.7805, 3.51447, -61.6228, 0.37 ) }
    dend_3 { pt3dadd( 65.3999, 3.38109, -61.9451, 0.29 ) }
    dend_3 { pt3dadd( 66.0464, 3.28387, -62.2743, 0.29 ) }
    dend_3 { pt3dadd( 66.57, 3.22754, -62.5346, 0.88 ) }
    dend_3 { pt3dadd( 67.1334, 3.1766, -62.8041, 1.25 ) }
    dend_3 { pt3dadd( 67.7957, 3.12224, -63.116, 1.18 ) }
    dend_3 { pt3dadd( 68.6724, 3.0632, -63.5281, 0.29 ) }
    dend_3 { pt3dadd( 69.3064, 3.04746, -63.8286, 0.74 ) }
    dend_3 { pt3dadd( 69.84, 3.0505, -64.0788, 0.74 ) }
    dend_3 { pt3dadd( 70.4575, 3.06404, -64.3991, 0.37 ) }
    dend_3 { pt3dadd( 71.2107, 3.081, -64.8355, 0.96 ) }
    dend_3 { pt3dadd( 71.6477, 3.07784, -65.1026, 1.33 ) }
    dend_3 { pt3dadd( 72.0798, 3.03569, -65.388, 1.33 ) }
    dend_3 { pt3dadd( 72.7753, 2.88757, -65.8561, 0.37 ) }
    dend_3 { pt3dadd( 73.5091, 2.65667, -66.353, 0.44 ) }
    dend_3 { pt3dadd( 74.0155, 2.46305, -66.6906, 0.44 ) }
    dend_3 { pt3dadd( 74.5819, 2.23469, -67.0429, 0.44 ) }
    dend_3 { pt3dadd( 75.4031, 1.90147, -67.5215, 0.96 ) }
    dend_3 { pt3dadd( 75.935, 1.67161, -67.8053, 1.03 ) }
    dend_3 { pt3dadd( 76.3136, 1.49722, -67.9861, 0.81 ) }
    dend_3 { pt3dadd( 76.8182, 1.24242, -68.1997, 0.52 ) }
    dend_3 { pt3dadd( 77.4176, 0.915719, -68.437, 0.29 ) }
    dend_3 { pt3dadd( 77.7368, 0.740442, -68.5698, 0.29 ) }
    dend_3 { pt3dadd( 78.3115, 0.448708, -68.7558, 0.88 ) }
    dend_3 { pt3dadd( 78.8616, 0.178284, -68.899, 1.25 ) }
    dend_3 { pt3dadd( 79.0866, 0.0583718, -68.9469, 1.25 ) }
    dend_3 { pt3dadd( 79.8505, -0.421484, -69.0896, 0.29 ) }
    dend_3 { pt3dadd( 80.388, -0.828626, -69.1877, 0.29 ) }
    dend_3 { pt3dadd( 81.293, -1.58239, -69.3518, 0.29 ) }
    dend_3 { pt3dadd( 81.6072, -1.84839, -69.4145, 0.29 ) }
    dend_3 { pt3dadd( 82.2679, -2.39669, -69.5726, 0.96 ) }
    dend_3 { pt3dadd( 82.7753, -2.78053, -69.7194, 0.96 ) }
    dend_3 { pt3dadd( 83.3393, -3.16358, -69.9238, 0.44 ) }
    dend_3 { pt3dadd( 83.7129, -3.38711, -70.0868, 0.37 ) }
    dend_3 { pt3dadd( 84.1508, -3.60443, -70.3365, 0.81 ) }
    dend_3 { pt3dadd( 84.8016, -3.83897, -70.7554, 0.29 ) }
    dend_3 { pt3dadd( 85.3218, -4.00164, -71.1277, 0.29 ) }
    dend_3 { pt3dadd( 85.7857, -4.15847, -71.4776, 0.74 ) }
    dend_3 { pt3dadd( 86.3201, -4.37882, -71.9107, 0.96 ) }
    dend_3 { pt3dadd( 86.8666, -4.66358, -72.3806, 0.96 ) }
    dend_3 { pt3dadd( 87.5967, -5.11733, -73.0149, 0.44 ) }
    dend_3 { pt3dadd( 88.1804, -5.54728, -73.5561, 0.29 ) }
    dend_3 { pt3dadd( 88.6551, -5.95901, -74.0174, 0.29 ) }
    dend_3 { pt3dadd( 89.0923, -6.38281, -74.4354, 0.96 ) }
    dend_3 { pt3dadd( 89.3316, -6.62665, -74.6546, 1.11 ) }
    dend_3 { pt3dadd( 89.754, -7.03899, -75.0, 1.18 ) }
    dend_3 { pt3dadd( 90.4621, -7.7046, -75.5815, 0.37 ) }
    dend_3 { pt3dadd( 90.8636, -8.03665, -75.9232, 0.37 ) }
    dend_3 { pt3dadd( 91.4531, -8.48575, -76.4551, 0.29 ) }
    dend_3 { pt3dadd( 92.0201, -8.88119, -76.9808, 0.29 ) }
    dend_3 { pt3dadd( 92.5658, -9.23309, -77.4969, 0.96 ) }
    dend_3 { pt3dadd( 93.4196, -9.72548, -78.2945, 0.44 ) }
    dend_3 { pt3dadd( 93.8337, -9.92844, -78.6528, 1.03 ) }
    dend_3 { pt3dadd( 94.1664, -10.0714, -78.9233, 1.03 ) }
    dend_3 { pt3dadd( 94.8991, -10.333, -79.4973, 0.29 ) }
    dend_3 { pt3dadd( 95.2813, -10.438, -79.7653, 0.29 ) }
    dend_3 { pt3dadd( 95.7419, -10.5231, -80.065, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_3 { pt3dadd( 96.3358, -10.5961, -80.4206, 0.96 ) }
    dend_3 { pt3dadd( 96.7031, -10.6405, -80.6431, 0.37 ) }
    dend_3 { pt3dadd( 97.3122, -10.7239, -81.0237, 0.22 ) }
    dend_3 { pt3dadd( 97.9849, -10.8444, -81.4676, 1.11 ) }
    dend_3 { pt3dadd( 98.7239, -10.9693, -81.9729, 1.11 ) }
    dend_3 { pt3dadd( 99.7251, -11.1277, -82.6927, 0.44 ) }
    dend_3 { pt3dadd( 100.194, -11.1998, -83.0492, 1.03 ) }
    dend_3 { pt3dadd( 100.51, -11.2616, -83.2994, 1.03 ) }
    dend_3 { pt3dadd( 101.161, -11.4719, -83.8322, 0.74 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 9/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 9.10703, 52.4499, -10.96, 0.29 ) }
    dend_2 { pt3dadd( 9.31483, 53.2338, -11.0989, 0.29 ) }
    dend_2 { pt3dadd( 9.42225, 53.6022, -11.1739, 0.29 ) }
    dend_2 { pt3dadd( 9.62418, 54.309, -11.3176, 0.29 ) }
    dend_2 { pt3dadd( 9.76454, 54.7972, -11.419, 0.81 ) }
    dend_2 { pt3dadd( 9.84943, 55.0837, -11.4821, 0.81 ) }
    dend_2 { pt3dadd( 10.0194, 55.6764, -11.6164, 0.29 ) }
    dend_2 { pt3dadd( 10.1927, 56.2272, -11.7491, 0.29 ) }
    dend_2 { pt3dadd( 10.3561, 56.751, -11.8822, 0.88 ) }
    dend_2 { pt3dadd( 10.4027, 56.9119, -11.9246, 0.88 ) }
    dend_2 { pt3dadd( 10.5339, 57.3699, -12.0552, 0.22 ) }
    dend_2 { pt3dadd( 10.696, 57.9348, -12.2156, 0.74 ) }
    // Section: dend_49, id: dend_49, parent: dend_37 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -66.2655, -46.7845, -54.6203, 0.88 ) }
    dend_49 { pt3dadd( -72.2045, -45.335, -63.0998, 0.88 ) }
    dend_49 { pt3dadd( -73.0408, -45.1866, -64.1807, 0.52 ) }
    dend_49 { pt3dadd( -73.4332, -45.1347, -64.6476, 0.52 ) }
    dend_49 { pt3dadd( -74.4099, -45.0441, -65.7079, 0.52 ) }
    dend_49 { pt3dadd( -75.4467, -45.0035, -66.7089, 0.52 ) }
    dend_49 { pt3dadd( -76.316, -45.0199, -67.4324, 1.03 ) }
    dend_49 { pt3dadd( -76.8158, -45.2215, -67.4166, 1.62 ) }
    dend_49 { pt3dadd( -77.0632, -45.3325, -67.3949, 1.99 ) }
    dend_49 { pt3dadd( -77.6679, -45.5778, -67.3129, 2.14 ) }
    dend_49 { pt3dadd( -78.7205, -45.8493, -67.168, 1.55 ) }
    dend_49 { pt3dadd( -79.7351, -45.9413, -67.1688, 0.74 ) }
    dend_49 { pt3dadd( -80.7472, -45.9181, -67.3602, 0.37 ) }
    dend_49 { pt3dadd( -81.7158, -45.8586, -67.6566, 0.37 ) }
    dend_49 { pt3dadd( -82.4037, -45.851, -67.9794, 0.37 ) }
    dend_49 { pt3dadd( -84.0182, -45.8991, -68.9306, 0.74 ) }
    dend_49 { pt3dadd( -85.6431, -46.0036, -69.9866, 1.4 ) }
    dend_49 { pt3dadd( -86.4995, -46.0928, -70.5532, 1.92 ) }
    dend_49 { pt3dadd( -86.9185, -46.154, -70.8285, 2.21 ) }
    dend_49 { pt3dadd( -89.2923, -46.5291, -72.4508, 0.52 ) }
    dend_49 { pt3dadd( -90.0276, -46.6479, -72.9754, 0.52 ) }
    dend_49 { pt3dadd( -90.9518, -46.799, -73.6547, 0.52 ) }
    dend_49 { pt3dadd( -91.6441, -46.8557, -74.1809, 0.59 ) }
    dend_49 { pt3dadd( -92.1658, -46.8381, -74.6049, 0.59 ) }
    dend_49 { pt3dadd( -93.9532, -46.5341, -76.0853, 1.69 ) }
    dend_49 { pt3dadd( -95.5624, -45.9859, -77.3994, 2.06 ) }
    dend_49 { pt3dadd( -96.9279, -45.4059, -78.4863, 1.03 ) }
    dend_49 { pt3dadd( -97.5865, -45.0831, -79.0117, 0.29 ) }
    dend_49 { pt3dadd( -98.2816, -44.7506, -79.5361, 0.29 ) }
    dend_49 { pt3dadd( -99.1621, -44.3797, -80.095, 1.25 ) }
    dend_49 { pt3dadd( -99.7029, -44.2167, -80.3561, 1.62 ) }
    dend_49 { pt3dadd( -100.454, -44.0561, -80.6692, 1.92 ) }
    dend_49 { pt3dadd( -102.657, -43.8285, -81.5898, 0.81 ) }
    dend_49 { pt3dadd( -103.742, -43.8811, -82.0501, 1.11 ) }
    dend_49 { pt3dadd( -104.285, -43.9532, -82.3153, 1.11 ) }
    dend_49 { pt3dadd( -105.527, -44.1507, -83.028, 0.37 ) }
    dend_49 { pt3dadd( -106.318, -44.2705, -83.5284, 0.29 ) }
    dend_49 { pt3dadd( -107.2, -44.4237, -84.1005, 0.29 ) }
    dend_49 { pt3dadd( -108.132, -44.5977, -84.6585, 0.29 ) }
    dend_49 { pt3dadd( -109.962, -44.8499, -85.8016, 1.33 ) }
    dend_49 { pt3dadd( -110.683, -44.9044, -86.2861, 1.55 ) }
    dend_49 { pt3dadd( -111.368, -44.9041, -86.7884, 1.77 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 63/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -66.2655, -46.7845, -54.6203, 1.18 ) }
    dend_38 { pt3dadd( -68.2364, -47.6377, -55.0588, 1.18 ) }
    dend_38 { pt3dadd( -70.5625, -48.7545, -55.4561, 0.52 ) }
    dend_38 { pt3dadd( -71.9094, -49.3976, -55.6502, 0.52 ) }
    dend_38 { pt3dadd( -74.9719, -50.882, -55.8096, 0.88 ) }
    dend_38 { pt3dadd( -76.8513, -51.8112, -55.7625, 1.18 ) }
    dend_38 { pt3dadd( -78.2192, -52.5347, -55.6645, 1.18 ) }
    dend_38 { pt3dadd( -79.8312, -53.517, -55.4246, 1.25 ) }
    dend_38 { pt3dadd( -81.2418, -54.483, -55.1379, 1.11 ) }
    dend_38 { pt3dadd( -83.5056, -56.2274, -54.3879, 0.88 ) }
    dend_38 { pt3dadd( -84.8453, -57.343, -53.7586, 0.59 ) }
    dend_38 { pt3dadd( -85.9475, -58.27, -53.1992, 0.44 ) }
    dend_38 { pt3dadd( -86.7549, -58.9342, -52.7683, 0.29 ) }
    dend_38 { pt3dadd( -87.6461, -59.6362, -52.2741, 0.29 ) }
    dend_38 { pt3dadd( -88.691, -60.4039, -51.7358, 0.88 ) }
    dend_38 { pt3dadd( -89.7013, -60.9949, -51.3603, 1.25 ) }
    dend_38 { pt3dadd( -90.32, -61.2929, -51.1763, 1.47 ) }
    dend_38 { pt3dadd( -91.3273, -61.7171, -50.9164, 1.47 ) }
    dend_38 { pt3dadd( -92.1809, -62.0817, -50.7354, 1.33 ) }
    dend_38 { pt3dadd( -93.4734, -62.6863, -50.5157, 0.59 ) }
    dend_38 { pt3dadd( -94.8037, -63.3778, -50.3558, 0.44 ) }
    dend_38 { pt3dadd( -96.4768, -64.307, -50.2012, 0.37 ) }
    dend_38 { pt3dadd( -97.4993, -64.8819, -50.1184, 0.96 ) }
    dend_38 { pt3dadd( -98.8116, -65.6095, -50.0185, 0.59 ) }
    dend_38 { pt3dadd( -100.626, -66.5765, -49.8756, 0.52 ) }
    dend_38 { pt3dadd( -101.664, -67.0766, -49.7879, 0.52 ) }
    dend_38 { pt3dadd( -102.761, -67.5145, -49.6911, 1.11 ) }
    dend_38 { pt3dadd( -103.749, -67.8075, -49.5921, 1.99 ) }
    dend_38 { pt3dadd( -104.823, -68.0246, -49.4728, 2.28 ) }
    dend_38 { pt3dadd( -105.968, -68.1464, -49.3439, 1.99 ) }
    dend_38 { pt3dadd( -107.375, -68.1832, -49.1883, 1.69 ) }
    dend_38 { pt3dadd( -108.699, -68.1598, -49.0711, 1.4 ) }
    dend_38 { pt3dadd( -109.763, -68.1449, -49.0096, 0.66 ) }
    dend_38 { pt3dadd( -111.031, -68.1777, -48.9724, 0.52 ) }
    dend_38 { pt3dadd( -112.294, -68.306, -48.9703, 0.52 ) }
    dend_38 { pt3dadd( -113.262, -68.5543, -48.9973, 0.29 ) }
    dend_38 { pt3dadd( -114.187, -69.1153, -49.0515, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_38 { pt3dadd( -115.208, -70.1689, -49.0836, 0.81 ) }
    dend_38 { pt3dadd( -115.733, -70.8652, -49.0455, 1.11 ) }
    dend_38 { pt3dadd( -116.417, -71.9201, -48.8785, 0.96 ) }
    dend_38 { pt3dadd( -117.204, -73.1877, -48.4524, 0.74 ) }
    dend_38 { pt3dadd( -117.931, -74.1669, -47.9349, 0.37 ) }
    dend_38 { pt3dadd( -118.952, -75.1489, -47.0152, 1.11 ) }
    dend_38 { pt3dadd( -119.626, -75.6647, -46.3647, 1.84 ) }
    dend_38 { pt3dadd( -120.383, -76.1025, -45.6001, 2.36 ) }
    dend_38 { pt3dadd( -121.664, -76.5869, -44.2436, 2.58 ) }
    dend_38 { pt3dadd( -123.0, -76.8378, -42.7795, 0.59 ) }
    dend_38 { pt3dadd( -124.132, -76.8726, -41.4798, 0.81 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 11/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 29.6052, -70.9339, -51.8864, 0.74 ) }
    dend_32 { pt3dadd( 31.1396, -72.2072, -52.4388, 0.74 ) }
    dend_32 { pt3dadd( 32.2767, -73.0967, -52.9958, 0.66 ) }
    dend_32 { pt3dadd( 32.9764, -73.6229, -53.3958, 1.11 ) }
    dend_32 { pt3dadd( 33.5564, -74.0322, -53.7683, 1.11 ) }
    dend_32 { pt3dadd( 34.7721, -74.8055, -54.6006, 0.88 ) }
    dend_32 { pt3dadd( 35.6659, -75.3237, -55.2444, 0.59 ) }
    dend_32 { pt3dadd( 36.5656, -75.8109, -56.0081, 1.11 ) }
    dend_32 { pt3dadd( 36.8464, -75.9481, -56.2776, 1.47 ) }
    dend_32 { pt3dadd( 37.4228, -76.182, -56.8424, 1.69 ) }
    dend_32 { pt3dadd( 38.214, -76.4401, -57.5942, 1.69 ) }
    dend_32 { pt3dadd( 39.2227, -76.6531, -58.4451, 1.77 ) }
    dend_32 { pt3dadd( 39.8101, -76.7554, -58.9301, 1.77 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 24/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 29.6052, -70.9339, -51.8864, 0.37 ) }
    dend_31 { pt3dadd( 29.6, -71.5335, -53.0591, 0.37 ) }
    dend_31 { pt3dadd( 29.5079, -72.0902, -54.2, 1.03 ) }
    dend_31 { pt3dadd( 29.3134, -72.791, -55.6239, 1.25 ) }
    dend_31 { pt3dadd( 28.919, -73.5896, -57.4642, 0.66 ) }
    dend_31 { pt3dadd( 28.7545, -73.8242, -58.0805, 0.81 ) }
    dend_31 { pt3dadd( 28.1251, -74.5295, -60.2596, 1.11 ) }
    dend_31 { pt3dadd( 27.8233, -74.7363, -61.1138, 1.4 ) }
    dend_31 { pt3dadd( 27.4355, -74.9112, -62.0154, 0.88 ) }
    dend_31 { pt3dadd( 26.4348, -75.1697, -63.9944, 0.22 ) }
    dend_31 { pt3dadd( 25.4397, -75.3318, -65.7965, 0.37 ) }
    dend_31 { pt3dadd( 24.3196, -75.4853, -67.7978, 1.03 ) }
    dend_31 { pt3dadd( 23.7404, -75.5604, -68.8507, 1.69 ) }
    dend_31 { pt3dadd( 23.4067, -75.6453, -69.6272, 1.69 ) }
    dend_31 { pt3dadd( 21.9745, -76.211, -73.2904, 0.15 ) }
    dend_31 { pt3dadd( 21.7779, -76.3679, -74.0016, 0.15 ) }
    dend_31 { pt3dadd( 21.6591, -76.5351, -74.6358, 1.18 ) }
    dend_31 { pt3dadd( 21.545, -76.8342, -75.606, 1.47 ) }
    dend_31 { pt3dadd( 21.323, -78.0398, -79.0726, 0.88 ) }
    dend_31 { pt3dadd( 21.2923, -78.704, -80.783, 1.55 ) }
    dend_31 { pt3dadd( 21.4111, -80.1287, -84.0695, 0.81 ) }
    dend_31 { pt3dadd( 21.4461, -80.6619, -85.2994, 0.37 ) }
    dend_31 { pt3dadd( 21.4435, -80.9532, -85.9484, 0.52 ) }
    dend_31 { pt3dadd( 21.4011, -81.3333, -86.6909, 0.52 ) }
    dend_31 { pt3dadd( 21.3346, -81.7009, -87.1696, 0.37 ) }
    dend_31 { pt3dadd( 21.1936, -82.3244, -87.718, 0.37 ) }
    dend_31 { pt3dadd( 20.8968, -82.9576, -87.9909, 0.81 ) }
    dend_31 { pt3dadd( 20.6155, -83.5214, -88.1841, 1.11 ) }
    dend_31 { pt3dadd( 20.2496, -84.4166, -88.4288, 1.25 ) }
    dend_31 { pt3dadd( 19.8383, -85.6435, -88.7554, 0.29 ) }
    dend_31 { pt3dadd( 19.6244, -86.342, -88.9309, 0.29 ) }
    dend_31 { pt3dadd( 19.2213, -87.5714, -89.2119, 1.55 ) }
    dend_31 { pt3dadd( 18.9731, -88.2336, -89.3583, 1.77 ) }
    dend_31 { pt3dadd( 18.3037, -89.7754, -89.7078, 0.29 ) }
    dend_31 { pt3dadd( 17.6593, -90.9617, -89.9858, 0.22 ) }
    dend_31 { pt3dadd( 16.7282, -92.2237, -90.3039, 0.22 ) }
    dend_31 { pt3dadd( 15.8358, -93.1806, -90.5457, 0.66 ) }
    dend_31 { pt3dadd( 15.1857, -93.7201, -90.6934, 1.4 ) }
    dend_31 { pt3dadd( 15.0476, -93.8125, -90.7194, 1.92 ) }
    dend_31 { pt3dadd( 14.2679, -94.2445, -90.8329, 1.62 ) }
    dend_31 { pt3dadd( 13.3737, -94.7204, -90.9266, 0.52 ) }
    dend_31 { pt3dadd( 12.5688, -95.1529, -91.0192, 0.29 ) }
    dend_31 { pt3dadd( 11.6642, -95.6783, -91.1411, 0.52 ) }
    dend_31 { pt3dadd( 11.2699, -95.9139, -91.1958, 0.52 ) }
    dend_31 { pt3dadd( 10.4429, -96.4286, -91.3134, 0.37 ) }
    dend_31 { pt3dadd( 10.087, -96.6514, -91.3619, 0.88 ) }
    dend_31 { pt3dadd( 9.54447, -96.9784, -91.4493, 0.88 ) }
    dend_31 { pt3dadd( 8.92142, -97.3366, -91.5638, 0.44 ) }
    dend_31 { pt3dadd( 8.2533, -97.7379, -91.7024, 0.22 ) }
    dend_31 { pt3dadd( 7.74132, -98.0755, -91.8287, 0.96 ) }
    dend_31 { pt3dadd( 7.07716, -98.5594, -92.0453, 0.96 ) }
    dend_31 { pt3dadd( 5.95703, -99.5029, -92.4893, 0.29 ) }
    dend_31 { pt3dadd( 5.47891, -99.9656, -92.7181, 1.25 ) }
    dend_31 { pt3dadd( 5.04303, -100.399, -92.942, 1.25 ) }
    dend_31 { pt3dadd( 4.51572, -100.944, -93.2388, 0.96 ) }
    dend_31 { pt3dadd( 3.88373, -101.653, -93.6517, 0.96 ) }
    dend_31 { pt3dadd( 3.03369, -102.772, -94.3475, 0.29 ) }
    dend_31 { pt3dadd( 2.49001, -103.612, -94.8819, 0.29 ) }
    dend_31 { pt3dadd( 2.08212, -104.329, -95.353, 0.66 ) }
    dend_31 { pt3dadd( 1.75751, -104.962, -95.7984, 0.37 ) }
    dend_31 { pt3dadd( 1.33598, -105.795, -96.4891, 0.96 ) }
    dend_31 { pt3dadd( 1.0164, -106.472, -97.1785, 1.18 ) }
    dend_31 { pt3dadd( 0.873171, -106.802, -97.5835, 0.81 ) }
    dend_31 { pt3dadd( 0.55076, -107.55, -98.6051, 0.52 ) }
    dend_31 { pt3dadd( 0.210391, -108.306, -99.6176, 0.44 ) }
    dend_31 { pt3dadd( -0.340134, -109.386, -101.083, 0.96 ) }
    dend_31 { pt3dadd( -1.1538, -110.759, -103.042, 0.37 ) }
    dend_31 { pt3dadd( -1.60153, -111.46, -104.059, 0.37 ) }
    dend_31 { pt3dadd( -2.1947, -112.419, -105.462, 0.37 ) }
    dend_31 { pt3dadd( -2.71197, -113.328, -106.713, 1.18 ) }
    dend_31 { pt3dadd( -2.98202, -113.886, -107.401, 1.47 ) }
    dend_31 { pt3dadd( -3.18762, -114.398, -107.97, 1.47 ) }
    dend_31 { pt3dadd( -3.70066, -116.027, -109.62, 0.74 ) }
    dend_31 { pt3dadd( -3.92202, -117.055, -110.59, 0.29 ) }
    dend_31 { pt3dadd( -4.03326, -117.969, -111.391, 0.29 ) }
    dend_31 { pt3dadd( -4.11039, -119.367, -112.541, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_31 { pt3dadd( -4.11819, -119.899, -112.922, 1.11 ) }
    dend_31 { pt3dadd( -4.07874, -120.883, -113.526, 0.29 ) }
    dend_31 { pt3dadd( -3.96616, -121.774, -113.989, 0.29 ) }
    dend_31 { pt3dadd( -3.7887, -122.616, -114.372, 0.44 ) }
    dend_31 { pt3dadd( -3.6021, -123.22, -114.626, 0.29 ) }
    dend_31 { pt3dadd( -3.39857, -123.854, -114.83, 1.03 ) }
    dend_31 { pt3dadd( -3.22039, -124.469, -115.005, 1.03 ) }
    dend_31 { pt3dadd( -2.8774, -125.732, -115.353, 0.29 ) }
    dend_31 { pt3dadd( -2.56405, -126.712, -115.599, 1.11 ) }
    dend_31 { pt3dadd( -2.41533, -127.143, -115.698, 1.25 ) }
    dend_31 { pt3dadd( -2.00781, -128.375, -115.943, 0.22 ) }
    dend_31 { pt3dadd( -1.91429, -128.721, -115.994, 0.74 ) }
    dend_31 { pt3dadd( -1.84262, -129.058, -116.036, 0.74 ) }
    dend_31 { pt3dadd( -1.69578, -129.968, -116.113, 0.22 ) }
    dend_31 { pt3dadd( -1.61235, -130.59, -116.164, 0.66 ) }
    dend_31 { pt3dadd( -1.53001, -131.137, -116.21, 0.66 ) }
    dend_31 { pt3dadd( -1.40329, -131.89, -116.274, 0.22 ) }
    dend_31 { pt3dadd( -1.32989, -132.421, -116.321, 0.81 ) }
    dend_31 { pt3dadd( -1.24587, -133.262, -116.396, 0.22 ) }
    dend_31 { pt3dadd( -1.18343, -134.354, -116.49, 0.52 ) }
    dend_31 { pt3dadd( -1.16271, -135.044, -116.548, 0.66 ) }
    dend_31 { pt3dadd( -1.15638, -135.436, -116.579, 0.66 ) }
    dend_31 { pt3dadd( -1.13929, -136.383, -116.648, 0.29 ) }
    dend_31 { pt3dadd( -1.1294, -137.772, -116.741, 0.29 ) }
    dend_31 { pt3dadd( -1.12374, -138.501, -116.789, 0.81 ) }
    dend_31 { pt3dadd( -1.12228, -138.776, -116.806, 0.81 ) }
    dend_31 { pt3dadd( -1.11472, -139.872, -116.873, 0.29 ) }
    dend_31 { pt3dadd( -1.10005, -140.823, -116.929, 0.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 28/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -11.1697, 74.5518, -9.6931, 1.25 ) }
    dend_16 { pt3dadd( -11.1909, 76.4896, -8.27662, 1.25 ) }
    dend_16 { pt3dadd( -11.1285, 77.1456, -8.07148, 1.25 ) }
    dend_16 { pt3dadd( -11.0191, 78.1339, -8.05121, 1.03 ) }
    dend_16 { pt3dadd( -10.9608, 78.6503, -8.1092, 1.11 ) }
    dend_16 { pt3dadd( -10.8556, 79.578, -8.26799, 1.11 ) }
    dend_16 { pt3dadd( -10.7547, 80.5498, -8.45649, 1.03 ) }
    dend_16 { pt3dadd( -10.5919, 81.9002, -8.87616, 0.96 ) }
    dend_16 { pt3dadd( -10.4753, 83.0866, -9.29394, 1.18 ) }
    dend_16 { pt3dadd( -10.4074, 84.0928, -9.67758, 1.18 ) }
    dend_16 { pt3dadd( -10.372, 85.0355, -10.0402, 1.4 ) }
    dend_16 { pt3dadd( -10.3727, 86.1061, -10.4247, 1.55 ) }
    dend_16 { pt3dadd( -10.4136, 87.375, -10.8408, 1.18 ) }
    dend_16 { pt3dadd( -10.4602, 88.3166, -11.1143, 0.96 ) }
    dend_16 { pt3dadd( -10.5174, 89.4783, -11.4316, 1.25 ) }
    dend_16 { pt3dadd( -10.5801, 90.3729, -11.6653, 1.25 ) }
    dend_16 { pt3dadd( -10.6489, 91.1792, -11.8624, 1.03 ) }
    dend_16 { pt3dadd( -10.7701, 92.3387, -12.1078, 1.03 ) }
    dend_16 { pt3dadd( -10.8794, 93.1149, -12.2398, 1.03 ) }
    dend_16 { pt3dadd( -11.0734, 94.3338, -12.4001, 1.03 ) }
    dend_16 { pt3dadd( -11.3058, 95.7304, -12.5178, 1.03 ) }
    dend_16 { pt3dadd( -11.4137, 96.3567, -12.5497, 1.33 ) }
    dend_16 { pt3dadd( -11.6583, 97.7657, -12.5879, 1.62 ) }
    dend_16 { pt3dadd( -11.8588, 98.9025, -12.5913, 1.11 ) }
    dend_16 { pt3dadd( -12.0815, 100.0, -12.5037, 1.4 ) }
    dend_16 { pt3dadd( -12.2635, 100.851, -12.3792, 1.25 ) }
    dend_16 { pt3dadd( -12.4596, 101.876, -12.179, 1.55 ) }
    dend_16 { pt3dadd( -12.4943, 102.085, -12.1324, 1.47 ) }
    dend_16 { pt3dadd( -12.6778, 103.416, -11.807, 1.62 ) }
    dend_16 { pt3dadd( -12.8986, 105.2, -11.362, 1.47 ) }
    dend_16 { pt3dadd( -13.0014, 105.938, -11.1975, 1.55 ) }
    dend_16 { pt3dadd( -13.1033, 106.629, -11.0802, 1.11 ) }
    dend_16 { pt3dadd( -13.2837, 107.908, -10.9202, 0.88 ) }
    dend_16 { pt3dadd( -13.3882, 108.777, -10.852, 0.88 ) }
    dend_16 { pt3dadd( -13.4512, 109.602, -10.8325, 0.88 ) }
    dend_16 { pt3dadd( -13.4615, 110.779, -10.8646, 0.88 ) }
    dend_16 { pt3dadd( -13.409, 111.678, -10.8744, 1.18 ) }
    dend_16 { pt3dadd( -13.2666, 112.72, -10.8855, 1.18 ) }
    dend_16 { pt3dadd( -13.0993, 113.485, -10.8872, 1.33 ) }
    dend_16 { pt3dadd( -12.8654, 114.369, -10.8504, 1.33 ) }
    dend_16 { pt3dadd( -12.4729, 115.754, -10.7109, 1.11 ) }
    dend_16 { pt3dadd( -12.0835, 117.137, -10.4893, 0.88 ) }
    dend_16 { pt3dadd( -11.8492, 118.083, -10.2827, 0.88 ) }
    dend_16 { pt3dadd( -11.6377, 119.172, -10.0025, 1.03 ) }
    dend_16 { pt3dadd( -11.5125, 120.252, -9.70629, 1.33 ) }
    dend_16 { pt3dadd( -11.4859, 121.262, -9.42725, 1.33 ) }
    dend_16 { pt3dadd( -11.5394, 122.106, -9.21615, 1.47 ) }
    dend_16 { pt3dadd( -11.6605, 122.896, -9.01954, 1.4 ) }
    dend_16 { pt3dadd( -11.8162, 123.624, -8.84022, 1.4 ) }
    dend_16 { pt3dadd( -12.0163, 124.439, -8.66464, 1.18 ) }
    dend_16 { pt3dadd( -12.2488, 125.392, -8.49677, 1.18 ) }
    dend_16 { pt3dadd( -12.404, 126.055, -8.38342, 1.03 ) }
    dend_16 { pt3dadd( -12.6064, 127.056, -8.21049, 1.03 ) }
    dend_16 { pt3dadd( -12.7311, 127.98, -8.05313, 0.88 ) }
    dend_16 { pt3dadd( -12.7677, 128.981, -7.95162, 1.03 ) }
    dend_16 { pt3dadd( -12.7437, 129.905, -7.89885, 0.96 ) }
    dend_16 { pt3dadd( -12.6841, 130.617, -7.90705, 0.96 ) }
    dend_16 { pt3dadd( -12.5662, 131.589, -7.98204, 0.96 ) }
    dend_16 { pt3dadd( -12.3558, 132.868, -8.21845, 0.96 ) }
    dend_16 { pt3dadd( -11.9515, 134.798, -8.84169, 0.81 ) }
    dend_16 { pt3dadd( -11.6978, 135.984, -9.37621, 1.03 ) }
    dend_16 { pt3dadd( -11.5594, 136.709, -9.76554, 1.03 ) }
    dend_16 { pt3dadd( -11.394, 137.747, -10.3369, 0.88 ) }
    dend_16 { pt3dadd( -11.1953, 139.24, -11.1426, 1.03 ) }
    dend_16 { pt3dadd( -11.0325, 140.861, -11.9498, 1.03 ) }
    dend_16 { pt3dadd( -10.9678, 141.801, -12.3229, 1.25 ) }
    dend_16 { pt3dadd( -10.9323, 143.036, -12.7281, 1.25 ) }
    dend_16 { pt3dadd( -10.9814, 144.777, -13.1462, 1.03 ) }
    dend_16 { pt3dadd( -11.0486, 145.678, -13.2893, 1.03 ) }
    dend_16 { pt3dadd( -11.1533, 146.903, -13.4148, 1.03 ) }
    dend_16 { pt3dadd( -11.2586, 148.484, -13.5085, 1.03 ) }
    dend_16 { pt3dadd( -11.2865, 150.166, -13.5771, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_16 { pt3dadd( -11.227, 151.639, -13.6239, 0.88 ) }
    dend_16 { pt3dadd( -11.1225, 152.926, -13.6532, 0.88 ) }
    dend_16 { pt3dadd( -10.8667, 155.307, -13.6743, 0.74 ) }
    dend_16 { pt3dadd( -10.6625, 156.859, -13.6587, 0.74 ) }
    dend_16 { pt3dadd( -10.4291, 158.468, -13.5947, 0.74 ) }
    dend_16 { pt3dadd( -10.2242, 159.789, -13.5444, 0.74 ) }
    dend_16 { pt3dadd( -10.0564, 161.179, -13.584, 0.74 ) }
    dend_16 { pt3dadd( -9.99572, 162.626, -13.8304, 0.74 ) }
    dend_16 { pt3dadd( -10.0376, 163.311, -14.0424, 0.88 ) }
    dend_16 { pt3dadd( -10.1227, 164.106, -14.3948, 1.03 ) }
    dend_16 { pt3dadd( -10.266, 165.508, -15.0691, 0.74 ) }
    dend_16 { pt3dadd( -10.4137, 167.481, -15.9907, 0.74 ) }
    dend_16 { pt3dadd( -10.4597, 169.167, -16.7338, 0.59 ) }
    dend_16 { pt3dadd( -10.4493, 169.931, -17.0278, 0.88 ) }
    dend_16 { pt3dadd( -10.3989, 171.234, -17.4509, 1.11 ) }
    dend_16 { pt3dadd( -10.2731, 173.112, -17.9116, 1.55 ) }
    dend_16 { pt3dadd( -10.1564, 174.627, -18.121, 1.33 ) }
    dend_16 { pt3dadd( -10.0458, 175.923, -18.1976, 1.11 ) }
    dend_16 { pt3dadd( -9.89763, 177.561, -18.24, 1.11 ) }
    dend_16 { pt3dadd( -9.76506, 178.866, -18.2582, 1.11 ) }
    dend_16 { pt3dadd( -9.60092, 180.186, -18.2392, 1.03 ) }
    dend_16 { pt3dadd( -9.35677, 181.691, -18.1742, 0.88 ) }
    dend_16 { pt3dadd( -9.18016, 182.506, -18.1118, 1.18 ) }
    dend_16 { pt3dadd( -9.04908, 183.018, -18.0477, 1.4 ) }
    dend_16 { pt3dadd( -8.8516, 183.757, -17.9265, 1.25 ) }
    dend_16 { pt3dadd( -8.63886, 184.614, -17.7862, 1.25 ) }
    dend_16 { pt3dadd( -8.5302, 185.15, -17.7275, 1.11 ) }
    dend_16 { pt3dadd( -8.43801, 185.764, -17.6945, 0.96 ) }
    dend_16 { pt3dadd( -8.39963, 186.543, -17.6866, 0.96 ) }
    dend_16 { pt3dadd( -8.41058, 187.087, -17.7005, 0.88 ) }
    dend_16 { pt3dadd( -8.47118, 188.158, -17.7411, 0.66 ) }
    dend_16 { pt3dadd( -8.52059, 188.854, -17.7347, 0.81 ) }
    dend_16 { pt3dadd( -8.56487, 189.59, -17.6803, 0.81 ) }
    dend_16 { pt3dadd( -8.59402, 190.446, -17.5428, 0.74 ) }
    dend_16 { pt3dadd( -8.58492, 192.124, -17.1397, 0.88 ) }
    dend_16 { pt3dadd( -8.57094, 192.576, -16.9926, 1.18 ) }
    dend_16 { pt3dadd( -8.48131, 193.745, -16.5147, 1.18 ) }
    dend_16 { pt3dadd( -8.40257, 194.406, -16.1993, 1.18 ) }
    dend_16 { pt3dadd( -8.284, 195.105, -15.8422, 1.11 ) }
    dend_16 { pt3dadd( -8.11027, 195.907, -15.4259, 0.96 ) }
    dend_16 { pt3dadd( -7.98692, 196.46, -15.1424, 0.96 ) }
    dend_16 { pt3dadd( -7.83608, 197.136, -14.853, 0.81 ) }
    dend_16 { pt3dadd( -7.67798, 197.839, -14.6204, 1.11 ) }
    dend_16 { pt3dadd( -7.58075, 198.242, -14.5321, 1.47 ) }
    dend_16 { pt3dadd( -7.35083, 199.123, -14.4505, 1.03 ) }
    dend_16 { pt3dadd( -7.15186, 199.862, -14.4522, 1.03 ) }
    dend_16 { pt3dadd( -6.9211, 200.675, -14.5268, 1.25 ) }
    dend_16 { pt3dadd( -6.78117, 201.24, -14.5947, 1.25 ) }
    dend_16 { pt3dadd( -6.509, 202.61, -14.7437, 0.88 ) }
    dend_16 { pt3dadd( -6.4169, 203.327, -14.7852, 0.88 ) }
    dend_16 { pt3dadd( -6.36749, 204.238, -14.793, 1.18 ) }
    dend_16 { pt3dadd( -6.37513, 205.228, -14.7417, 0.96 ) }
    dend_16 { pt3dadd( -6.43821, 206.328, -14.5833, 0.81 ) }
    dend_16 { pt3dadd( -6.5237, 207.286, -14.3562, 1.25 ) }
    dend_16 { pt3dadd( -6.60687, 208.049, -14.1022, 0.66 ) }
    dend_16 { pt3dadd( -6.68777, 208.816, -13.807, 0.96 ) }
    dend_16 { pt3dadd( -6.74383, 209.52, -13.538, 1.25 ) }
    dend_16 { pt3dadd( -6.77544, 210.21, -13.2888, 0.96 ) }
    dend_16 { pt3dadd( -6.76037, 210.882, -13.094, 0.96 ) }
    dend_16 { pt3dadd( -6.70914, 211.65, -12.8927, 1.25 ) }
    dend_16 { pt3dadd( -6.65045, 212.245, -12.7358, 1.55 ) }
    dend_16 { pt3dadd( -6.56168, 212.956, -12.5392, 1.55 ) }
    dend_16 { pt3dadd( -6.48227, 213.475, -12.3976, 1.25 ) }
    dend_16 { pt3dadd( -6.36203, 214.233, -12.229, 0.96 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 64/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -11.1697, 74.5518, -9.6931, 0.59 ) }
    dend_13 { pt3dadd( -10.5801, 78.0137, -10.6317, 0.59 ) }
    dend_13 { pt3dadd( -10.4075, 79.2933, -10.959, 0.88 ) }
    dend_13 { pt3dadd( -10.2646, 80.8058, -11.299, 1.18 ) }
    dend_13 { pt3dadd( -10.1222, 82.6991, -11.6402, 1.18 ) }
    dend_13 { pt3dadd( -9.98218, 84.0253, -11.8561, 0.96 ) }
    dend_13 { pt3dadd( -9.81384, 85.5068, -12.0823, 0.59 ) }
    dend_13 { pt3dadd( -9.75075, 86.4525, -12.173, 0.96 ) }
    dend_13 { pt3dadd( -9.64625, 87.9962, -12.3205, 0.96 ) }
    dend_13 { pt3dadd( -9.52197, 89.8295, -12.5401, 0.96 ) }
    dend_13 { pt3dadd( -9.43078, 91.5511, -12.8014, 0.52 ) }
    dend_13 { pt3dadd( -9.40907, 92.8035, -13.0398, 0.37 ) }
    dend_13 { pt3dadd( -9.44977, 93.6121, -13.2624, 0.37 ) }
    dend_13 { pt3dadd( -9.58934, 94.4222, -13.5628, 0.81 ) }
    dend_13 { pt3dadd( -9.7963, 95.0989, -13.9347, 1.18 ) }
    dend_13 { pt3dadd( -9.95563, 95.5651, -14.2185, 1.18 ) }
    dend_13 { pt3dadd( -10.2172, 96.3983, -14.6686, 0.66 ) }
    dend_13 { pt3dadd( -10.3769, 97.1473, -15.0183, 0.66 ) }
    dend_13 { pt3dadd( -10.5418, 98.397, -15.4837, 0.59 ) }
    dend_13 { pt3dadd( -10.6332, 99.9392, -15.9227, 0.88 ) }
    dend_13 { pt3dadd( -10.656, 102.149, -16.4118, 1.11 ) }
    dend_13 { pt3dadd( -10.6284, 103.379, -16.6186, 1.11 ) }
    dend_13 { pt3dadd( -10.595, 104.43, -16.7287, 1.11 ) }
    dend_13 { pt3dadd( -10.5883, 105.686, -16.7682, 0.37 ) }
    dend_13 { pt3dadd( -10.672, 107.028, -16.7039, 0.37 ) }
    dend_13 { pt3dadd( -10.8306, 107.909, -16.5915, 0.74 ) }
    dend_13 { pt3dadd( -10.909, 108.188, -16.5502, 0.88 ) }
    dend_13 { pt3dadd( -11.3144, 109.429, -16.3413, 0.88 ) }
    dend_13 { pt3dadd( -11.64, 110.367, -16.1333, 0.66 ) }
    dend_13 { pt3dadd( -12.0697, 111.648, -15.7788, 0.52 ) }
    dend_13 { pt3dadd( -12.2189, 112.249, -15.6103, 0.52 ) }
    dend_13 { pt3dadd( -12.3722, 113.408, -15.3142, 0.96 ) }
    dend_13 { pt3dadd( -12.3769, 114.203, -15.1443, 0.96 ) }
    dend_13 { pt3dadd( -12.309, 114.867, -15.0323, 1.18 ) }
    dend_13 { pt3dadd( -12.2257, 115.42, -14.9667, 1.18 ) }
    dend_13 { pt3dadd( -12.0063, 116.875, -14.8587, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( -11.9351, 117.687, -14.843, 0.88 ) }
    dend_13 { pt3dadd( -11.9387, 118.761, -14.8769, 0.88 ) }
    dend_13 { pt3dadd( -11.9759, 119.603, -14.9578, 0.44 ) }
    dend_13 { pt3dadd( -12.0416, 120.525, -15.0639, 0.74 ) }
    dend_13 { pt3dadd( -12.0922, 121.09, -15.1227, 0.74 ) }
    dend_13 { pt3dadd( -12.1668, 121.84, -15.1676, 0.52 ) }
    dend_13 { pt3dadd( -12.2221, 122.778, -15.1907, 0.37 ) }
    dend_13 { pt3dadd( -12.2359, 123.568, -15.1771, 0.37 ) }
    dend_13 { pt3dadd( -12.2066, 124.534, -15.1075, 0.74 ) }
    dend_13 { pt3dadd( -12.164, 125.148, -15.0338, 0.74 ) }
    dend_13 { pt3dadd( -12.096, 125.972, -14.9174, 0.66 ) }
    dend_13 { pt3dadd( -11.9851, 127.304, -14.7098, 0.74 ) }
    dend_13 { pt3dadd( -11.9514, 127.705, -14.6418, 1.4 ) }
    dend_13 { pt3dadd( -11.8576, 128.548, -14.4667, 1.4 ) }
    dend_13 { pt3dadd( -11.7232, 129.337, -14.3111, 1.33 ) }
    dend_13 { pt3dadd( -11.3856, 130.747, -14.0371, 0.44 ) }
    dend_13 { pt3dadd( -11.0064, 131.97, -13.7945, 0.44 ) }
    dend_13 { pt3dadd( -10.7271, 132.784, -13.6513, 0.37 ) }
    dend_13 { pt3dadd( -10.2214, 134.26, -13.4494, 0.37 ) }
    dend_13 { pt3dadd( -9.81162, 135.499, -13.3265, 0.59 ) }
    dend_13 { pt3dadd( -9.58493, 136.272, -13.2913, 0.59 ) }
    dend_13 { pt3dadd( -9.42241, 136.985, -13.3077, 0.29 ) }
    dend_13 { pt3dadd( -9.31161, 138.719, -13.5097, 0.88 ) }
    dend_13 { pt3dadd( -9.39752, 139.539, -13.655, 1.77 ) }
    dend_13 { pt3dadd( -9.56084, 140.278, -13.7925, 2.06 ) }
    dend_13 { pt3dadd( -9.74208, 140.92, -13.893, 1.69 ) }
    dend_13 { pt3dadd( -10.0078, 141.847, -14.045, 1.18 ) }
    dend_13 { pt3dadd( -10.3961, 143.264, -14.2978, 0.44 ) }
    dend_13 { pt3dadd( -10.7371, 144.533, -14.5331, 0.37 ) }
    dend_13 { pt3dadd( -11.1118, 145.969, -14.8067, 0.74 ) }
    dend_13 { pt3dadd( -11.2656, 146.553, -14.9307, 0.74 ) }
    dend_13 { pt3dadd( -11.582, 147.826, -15.2287, 0.52 ) }
    dend_13 { pt3dadd( -11.8338, 148.749, -15.4253, 0.44 ) }
    dend_13 { pt3dadd( -12.0115, 149.328, -15.5224, 0.66 ) }
    dend_13 { pt3dadd( -12.2268, 149.887, -15.5931, 0.66 ) }
    dend_13 { pt3dadd( -12.5608, 150.629, -15.6805, 0.37 ) }
    dend_13 { pt3dadd( -12.8409, 151.19, -15.7181, 0.37 ) }
    dend_13 { pt3dadd( -13.7608, 152.819, -15.6506, 0.59 ) }
    dend_13 { pt3dadd( -14.4058, 153.961, -15.4825, 1.03 ) }
    dend_13 { pt3dadd( -14.7458, 154.602, -15.3404, 1.4 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 40/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -37.7288, 89.0271, -4.75041, 0.29 ) }
    dend_11 { pt3dadd( -38.1565, 90.35, -4.46892, 0.29 ) }
    dend_11 { pt3dadd( -38.4078, 90.9738, -4.3637, 0.44 ) }
    dend_11 { pt3dadd( -38.684, 91.4226, -4.3005, 0.66 ) }
    dend_11 { pt3dadd( -39.1356, 91.8783, -4.22461, 0.29 ) }
    dend_11 { pt3dadd( -39.652, 92.2761, -4.16124, 0.29 ) }
    dend_11 { pt3dadd( -39.9388, 92.4795, -4.13099, 0.74 ) }
    dend_11 { pt3dadd( -40.3381, 92.6818, -4.09904, 0.88 ) }
    dend_11 { pt3dadd( -41.2327, 93.1033, -4.06487, 0.44 ) }
    dend_11 { pt3dadd( -42.0855, 93.5263, -4.05966, 0.52 ) }
    dend_11 { pt3dadd( -42.3277, 93.6685, -4.05677, 0.81 ) }
    dend_11 { pt3dadd( -42.7367, 93.9895, -4.01753, 0.44 ) }
    dend_11 { pt3dadd( -43.1209, 94.3611, -3.92251, 0.88 ) }
    dend_11 { pt3dadd( -43.537, 94.8232, -3.74639, 0.59 ) }
    dend_11 { pt3dadd( -43.8653, 95.3146, -3.56325, 0.29 ) }
    dend_11 { pt3dadd( -44.0932, 95.7469, -3.40597, 0.29 ) }
    dend_11 { pt3dadd( -44.4513, 96.5063, -3.13288, 0.96 ) }
    dend_11 { pt3dadd( -44.7595, 97.1904, -2.88864, 1.18 ) }
    dend_11 { pt3dadd( -45.0666, 97.8981, -2.62781, 0.81 ) }
    dend_11 { pt3dadd( -45.4598, 98.882, -2.29757, 0.52 ) }
    dend_11 { pt3dadd( -45.6599, 99.4006, -2.14087, 0.52 ) }
    dend_11 { pt3dadd( -45.943, 100.188, -1.96795, 0.44 ) }
    dend_11 { pt3dadd( -46.1598, 100.813, -1.86425, 0.66 ) }
    dend_11 { pt3dadd( -46.4131, 101.509, -1.73844, 0.88 ) }
    dend_11 { pt3dadd( -46.576, 101.922, -1.65789, 0.52 ) }
    dend_11 { pt3dadd( -46.7941, 102.427, -1.53119, 0.29 ) }
    dend_11 { pt3dadd( -47.1016, 103.133, -1.35615, 0.29 ) }
    dend_11 { pt3dadd( -47.5066, 104.075, -1.12506, 0.52 ) }
    dend_11 { pt3dadd( -47.8415, 104.799, -0.978945, 0.81 ) }
    dend_11 { pt3dadd( -48.138, 105.464, -0.886642, 0.22 ) }
    dend_11 { pt3dadd( -48.3475, 105.967, -0.824584, 0.22 ) }
    dend_11 { pt3dadd( -48.6899, 106.803, -0.743414, 0.37 ) }
    dend_11 { pt3dadd( -48.8726, 107.235, -0.718122, 0.37 ) }
    dend_11 { pt3dadd( -49.2784, 108.143, -0.701043, 0.37 ) }
    dend_11 { pt3dadd( -49.6893, 109.012, -0.703061, 0.29 ) }
    dend_11 { pt3dadd( -50.1093, 109.913, -0.680538, 0.52 ) }
    dend_11 { pt3dadd( -50.3164, 110.389, -0.657654, 0.88 ) }
    dend_11 { pt3dadd( -50.6785, 111.366, -0.570082, 0.59 ) }
    dend_11 { pt3dadd( -50.8374, 111.881, -0.509824, 0.44 ) }
    dend_11 { pt3dadd( -50.9914, 112.518, -0.406119, 0.22 ) }
    dend_11 { pt3dadd( -51.2617, 113.792, -0.174865, 0.22 ) }
    dend_11 { pt3dadd( -51.3507, 114.366, -0.0675644, 0.81 ) }
    dend_11 { pt3dadd( -51.3874, 114.849, 0.0147917, 1.33 ) }
    dend_11 { pt3dadd( -51.4002, 115.327, 0.0778895, 1.33 ) }
    dend_11 { pt3dadd( -51.3914, 116.202, 0.176236, 0.59 ) }
    dend_11 { pt3dadd( -51.3533, 116.781, 0.233874, 0.81 ) }
    dend_11 { pt3dadd( -51.2873, 117.32, 0.283371, 0.81 ) }
    dend_11 { pt3dadd( -51.1386, 118.162, 0.335893, 0.52 ) }
    dend_11 { pt3dadd( -50.9046, 119.235, 0.367803, 0.22 ) }
    dend_11 { pt3dadd( -50.6915, 120.087, 0.37485, 0.22 ) }
    dend_11 { pt3dadd( -50.3987, 121.117, 0.369881, 0.59 ) }
    dend_11 { pt3dadd( -50.1984, 121.762, 0.376227, 0.81 ) }
    dend_11 { pt3dadd( -49.912, 122.673, 0.38383, 0.29 ) }
    dend_11 { pt3dadd( -49.7196, 123.33, 0.407378, 0.22 ) }
    dend_11 { pt3dadd( -49.6323, 123.669, 0.416493, 0.59 ) }
    dend_11 { pt3dadd( -49.5997, 123.928, 0.408238, 0.59 ) }
    dend_11 { pt3dadd( -49.6514, 124.593, 0.310517, 0.22 ) }
    dend_11 { pt3dadd( -49.7754, 125.186, 0.140672, 0.29 ) }
    dend_11 { pt3dadd( -49.8862, 125.587, -0.0219756, 0.81 ) }
    dend_11 { pt3dadd( -49.9565, 125.863, -0.167754, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_11 { pt3dadd( -50.0013, 126.079, -0.288282, 1.11 ) }
    dend_11 { pt3dadd( -50.1598, 127.132, -0.859988, 0.37 ) }
    dend_11 { pt3dadd( -50.2071, 127.622, -1.0818, 0.96 ) }
    dend_11 { pt3dadd( -50.2504, 128.307, -1.33076, 0.88 ) }
    dend_11 { pt3dadd( -50.2858, 128.852, -1.51147, 0.88 ) }
    dend_11 { pt3dadd( -50.3624, 129.581, -1.73866, 0.52 ) }
    dend_11 { pt3dadd( -50.4393, 130.119, -1.89396, 0.74 ) }
    dend_11 { pt3dadd( -50.6151, 131.077, -2.14226, 0.29 ) }
    dend_11 { pt3dadd( -50.7965, 131.96, -2.39864, 0.59 ) }
    dend_11 { pt3dadd( -50.9354, 132.563, -2.59779, 0.59 ) }
    dend_11 { pt3dadd( -51.0561, 133.334, -2.91094, 0.29 ) }
    dend_11 { pt3dadd( -51.0956, 133.969, -3.23471, 1.18 ) }
    dend_11 { pt3dadd( -51.0852, 134.267, -3.40216, 1.47 ) }
    dend_11 { pt3dadd( -50.9886, 134.985, -3.82482, 1.18 ) }
    dend_11 { pt3dadd( -50.8656, 135.686, -4.21665, 0.44 ) }
    dend_11 { pt3dadd( -50.6213, 136.893, -4.8363, 0.22 ) }
    dend_11 { pt3dadd( -50.4993, 137.366, -5.07314, 0.22 ) }
    dend_11 { pt3dadd( -50.2483, 138.317, -5.49489, 1.18 ) }
    dend_11 { pt3dadd( -50.1835, 138.557, -5.58658, 1.4 ) }
    dend_11 { pt3dadd( -49.8878, 139.648, -5.89493, 0.44 ) }
    dend_11 { pt3dadd( -49.7091, 140.271, -6.02698, 0.66 ) }
    dend_11 { pt3dadd( -49.5698, 140.86, -6.11745, 0.66 ) }
    dend_11 { pt3dadd( -49.3326, 141.699, -6.22471, 0.22 ) }
    dend_11 { pt3dadd( -49.1999, 142.061, -6.26649, 0.59 ) }
    dend_11 { pt3dadd( -48.9649, 142.615, -6.32437, 0.52 ) }
    dend_11 { pt3dadd( -48.6665, 143.252, -6.37195, 0.96 ) }
    dend_11 { pt3dadd( -48.3946, 143.845, -6.44971, 0.59 ) }
    dend_11 { pt3dadd( -48.1384, 144.415, -6.54613, 0.37 ) }
    dend_11 { pt3dadd( -47.8633, 144.994, -6.65774, 0.59 ) }
    dend_11 { pt3dadd( -47.6745, 145.389, -6.7158, 0.81 ) }
    dend_11 { pt3dadd( -47.2406, 146.325, -6.84856, 0.22 ) }
    dend_11 { pt3dadd( -46.897, 147.123, -6.9352, 0.59 ) }
    dend_11 { pt3dadd( -46.6949, 147.625, -6.98238, 0.52 ) }
    dend_11 { pt3dadd( -46.4897, 148.221, -7.04418, 0.22 ) }
    dend_11 { pt3dadd( -46.2066, 149.137, -7.14186, 0.22 ) }
    dend_11 { pt3dadd( -45.9169, 150.152, -7.25857, 0.88 ) }
    dend_11 { pt3dadd( -45.7709, 150.733, -7.32845, 1.69 ) }
    dend_11 { pt3dadd( -45.7103, 151.054, -7.36084, 1.92 ) }
    dend_11 { pt3dadd( -45.6256, 151.666, -7.45259, 1.25 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 39/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -37.7288, 89.0271, -4.75041, 0.52 ) }
    dend_8 { pt3dadd( -38.2459, 89.1594, -5.06558, 0.52 ) }
    dend_8 { pt3dadd( -38.5804, 89.2374, -5.26881, 0.59 ) }
    dend_8 { pt3dadd( -38.9435, 89.3179, -5.48738, 0.44 ) }
    dend_8 { pt3dadd( -39.1946, 89.3813, -5.6345, 0.59 ) }
    dend_8 { pt3dadd( -39.4825, 89.47, -5.79368, 0.59 ) }
    dend_8 { pt3dadd( -39.8359, 89.6003, -5.9786, 0.52 ) }
    dend_8 { pt3dadd( -40.0658, 89.6968, -6.08986, 0.74 ) }
    dend_8 { pt3dadd( -40.3663, 89.844, -6.22396, 0.37 ) }
    dend_8 { pt3dadd( -40.5969, 89.966, -6.31585, 0.37 ) }
    dend_8 { pt3dadd( -40.8963, 90.1275, -6.42802, 0.37 ) }
    dend_8 { pt3dadd( -41.1618, 90.259, -6.52234, 0.52 ) }
    dend_8 { pt3dadd( -41.4917, 90.3779, -6.65263, 0.52 ) }
    dend_8 { pt3dadd( -41.7388, 90.4128, -6.7723, 0.29 ) }
    dend_8 { pt3dadd( -42.0561, 90.4049, -6.96762, 0.81 ) }
    dend_8 { pt3dadd( -42.2406, 90.3843, -7.09798, 1.11 ) }
    dend_8 { pt3dadd( -42.4894, 90.3522, -7.28862, 1.25 ) }
    dend_8 { pt3dadd( -42.8703, 90.3092, -7.59226, 0.66 ) }
    dend_8 { pt3dadd( -43.194, 90.2862, -7.86229, 0.37 ) }
    dend_8 { pt3dadd( -43.6419, 90.2974, -8.27047, 0.37 ) }
    dend_8 { pt3dadd( -43.9245, 90.3413, -8.55842, 0.29 ) }
    dend_8 { pt3dadd( -44.281, 90.4397, -8.95419, 0.66 ) }
    dend_8 { pt3dadd( -44.4113, 90.496, -9.1158, 0.88 ) }
    dend_8 { pt3dadd( -44.5781, 90.6033, -9.37014, 0.59 ) }
    dend_8 { pt3dadd( -44.8049, 90.7853, -9.80438, 0.37 ) }
    dend_8 { pt3dadd( -44.9395, 90.9055, -10.1279, 0.37 ) }
    dend_8 { pt3dadd( -45.0277, 90.985, -10.3868, 0.96 ) }
    dend_8 { pt3dadd( -45.144, 91.0882, -10.8275, 1.18 ) }
    dend_8 { pt3dadd( -45.33, 91.2251, -11.5932, 0.59 ) }
    dend_8 { pt3dadd( -45.3983, 91.2634, -11.88, 0.44 ) }
    dend_8 { pt3dadd( -45.4821, 91.2872, -12.1948, 0.29 ) }
    dend_8 { pt3dadd( -45.5919, 91.2965, -12.5519, 0.15 ) }
    dend_8 { pt3dadd( -45.7855, 91.282, -13.1166, 0.88 ) }
    dend_8 { pt3dadd( -45.8912, 91.2679, -13.3634, 1.18 ) }
    dend_8 { pt3dadd( -46.0605, 91.2565, -13.6883, 0.44 ) }
    dend_8 { pt3dadd( -46.2343, 91.2648, -13.9788, 0.37 ) }
    dend_8 { pt3dadd( -46.4094, 91.2882, -14.2244, 0.96 ) }
    dend_8 { pt3dadd( -46.7335, 91.3547, -14.5827, 1.25 ) }
    dend_8 { pt3dadd( -47.12, 91.4599, -14.9086, 0.44 ) }
    dend_8 { pt3dadd( -47.3897, 91.5455, -15.0877, 0.44 ) }
    dend_8 { pt3dadd( -47.7582, 91.6723, -15.2839, 1.03 ) }
    dend_8 { pt3dadd( -48.0818, 91.7897, -15.4127, 0.88 ) }
    dend_8 { pt3dadd( -48.5196, 91.9561, -15.5577, 0.74 ) }
    dend_8 { pt3dadd( -49.2179, 92.2274, -15.7286, 0.37 ) }
    dend_8 { pt3dadd( -49.7025, 92.4092, -15.8164, 0.88 ) }
    dend_8 { pt3dadd( -49.8634, 92.4655, -15.8363, 1.18 ) }
    dend_8 { pt3dadd( -50.2909, 92.6239, -15.8664, 1.18 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 86/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 101.161, -11.4719, -83.8322, 0.29 ) }
    dend_5 { pt3dadd( 100.761, -10.2018, -88.3493, 0.29 ) }
    dend_5 { pt3dadd( 100.635, -9.77832, -89.5065, 0.52 ) }
    dend_5 { pt3dadd( 100.584, -9.61852, -89.8459, 0.52 ) }
    dend_5 { pt3dadd( 100.358, -8.98966, -90.9116, 0.29 ) }
    dend_5 { pt3dadd( 100.111, -8.36564, -91.8048, 0.96 ) }
    dend_5 { pt3dadd( 100.035, -8.15913, -92.0735, 1.33 ) }
    dend_5 { pt3dadd( 99.9315, -7.8182, -92.3055, 1.33 ) }
    dend_5 { pt3dadd( 99.7408, -7.12824, -92.7802, 0.59 ) }
    dend_5 { pt3dadd( 99.6223, -6.50795, -93.2906, 0.37 ) }
    dend_5 { pt3dadd( 99.6276, -5.97467, -93.9178, 0.22 ) }
    dend_5 { pt3dadd( 99.9249, -5.45727, -94.8825, 0.22 ) }
    dend_5 { pt3dadd( 100.139, -5.33779, -95.2771, 0.59 ) }
    dend_5 { pt3dadd( 100.58, -5.25331, -95.9055, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_5 { pt3dadd( 101.0, -5.25046, -96.4006, 0.37 ) }
    dend_5 { pt3dadd( 101.558, -5.29945, -96.9795, 0.96 ) }
    dend_5 { pt3dadd( 102.122, -5.3713, -97.5079, 0.96 ) }
    dend_5 { pt3dadd( 102.87, -5.49359, -98.1838, 0.44 ) }
    dend_5 { pt3dadd( 103.248, -5.55893, -98.5253, 0.52 ) }
    dend_5 { pt3dadd( 103.738, -5.65999, -98.971, 0.22 ) }
    dend_5 { pt3dadd( 104.069, -5.72759, -99.2908, 0.74 ) }
    dend_5 { pt3dadd( 104.78, -5.85067, -100.004, 0.29 ) }
    dend_5 { pt3dadd( 105.101, -5.88602, -100.346, 0.29 ) }
    dend_5 { pt3dadd( 105.584, -5.89518, -100.913, 0.88 ) }
    dend_5 { pt3dadd( 106.146, -5.86221, -101.612, 0.37 ) }
    dend_5 { pt3dadd( 107.07, -5.71675, -102.834, 0.96 ) }
    dend_5 { pt3dadd( 107.466, -5.602, -103.395, 1.4 ) }
    dend_5 { pt3dadd( 107.81, -5.43229, -103.929, 0.59 ) }
    dend_5 { pt3dadd( 108.326, -5.03456, -104.811, 0.22 ) }
    dend_5 { pt3dadd( 108.752, -4.54459, -105.622, 0.22 ) }
    dend_5 { pt3dadd( 109.063, -3.98691, -106.318, 1.11 ) }
    dend_5 { pt3dadd( 109.241, -3.41457, -106.865, 1.33 ) }
    dend_5 { pt3dadd( 109.365, -2.7458, -107.423, 1.33 ) }
    dend_5 { pt3dadd( 109.429, -2.20524, -107.818, 1.33 ) }
    dend_5 { pt3dadd( 109.461, -1.6763, -108.148, 0.59 ) }
    dend_5 { pt3dadd( 109.495, -0.752129, -108.683, 0.22 ) }
    dend_5 { pt3dadd( 109.59, 0.298161, -109.272, 1.4 ) }
    dend_5 { pt3dadd( 109.683, 0.792715, -109.565, 1.69 ) }
    dend_5 { pt3dadd( 109.947, 1.74032, -110.18, 0.29 ) }
    dend_5 { pt3dadd( 110.1, 2.11235, -110.494, 0.66 ) }
    dend_5 { pt3dadd( 110.377, 2.55392, -111.044, 0.66 ) }
    dend_5 { pt3dadd( 110.867, 2.88718, -112.038, 0.22 ) }
    dend_5 { pt3dadd( 111.24, 2.80596, -112.99, 1.03 ) }
    dend_5 { pt3dadd( 111.359, 2.62312, -113.504, 1.03 ) }
    dend_5 { pt3dadd( 111.476, 1.71829, -115.212, 0.74 ) }
    dend_5 { pt3dadd( 111.506, 1.13166, -116.191, 1.03 ) }
    dend_5 { pt3dadd( 111.48, 0.166823, -117.608, 1.11 ) }
    dend_5 { pt3dadd( 111.362, -0.881554, -118.988, 1.11 ) }
    dend_5 { pt3dadd( 111.155, -2.03804, -120.374, 0.74 ) }
    dend_5 { pt3dadd( 110.879, -3.15293, -121.644, 0.96 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 36/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 101.161, -11.4719, -83.8322, 0.37 ) }
    dend_4 { pt3dadd( 103.562, -13.535, -84.7411, 0.37 ) }
    dend_4 { pt3dadd( 104.497, -14.1655, -84.8124, 0.44 ) }
    dend_4 { pt3dadd( 105.114, -14.4958, -84.6405, 0.44 ) }
    dend_4 { pt3dadd( 107.137, -15.3894, -83.7322, 0.74 ) }
    dend_4 { pt3dadd( 107.44, -15.4875, -83.5788, 0.88 ) }
    dend_4 { pt3dadd( 108.52, -15.7461, -83.0364, 0.37 ) }
    dend_4 { pt3dadd( 109.943, -15.9711, -82.2043, 0.37 ) }
    dend_4 { pt3dadd( 112.155, -16.2498, -80.8584, 0.88 ) }
    dend_4 { pt3dadd( 112.931, -16.3268, -80.3756, 1.03 ) }
    dend_4 { pt3dadd( 114.118, -16.4231, -79.6447, 0.29 ) }
    dend_4 { pt3dadd( 115.258, -16.4882, -78.9082, 0.29 ) }
    dend_4 { pt3dadd( 116.176, -16.5097, -78.2797, 0.29 ) }
    dend_4 { pt3dadd( 117.947, -16.4763, -77.2265, 0.81 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 50/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -111.368, -44.9041, -86.7884, 0.74 ) }
    dend_51 { pt3dadd( -112.58, -44.5519, -87.013, 0.74 ) }
    dend_51 { pt3dadd( -113.518, -44.3106, -87.1708, 1.03 ) }
    dend_51 { pt3dadd( -115.056, -43.9741, -87.4873, 0.37 ) }
    dend_51 { pt3dadd( -115.857, -43.8351, -87.6939, 0.22 ) }
    dend_51 { pt3dadd( -116.833, -43.7082, -87.9987, 1.4 ) }
    dend_51 { pt3dadd( -117.52, -43.6379, -88.2334, 1.55 ) }
    dend_51 { pt3dadd( -118.431, -43.6043, -88.5977, 1.55 ) }
    dend_51 { pt3dadd( -119.987, -43.6249, -89.2987, 0.81 ) }
    dend_51 { pt3dadd( -121.109, -43.6969, -89.8361, 0.52 ) }
    dend_51 { pt3dadd( -122.059, -43.8044, -90.2999, 0.88 ) }
    dend_51 { pt3dadd( -123.137, -43.9487, -90.8424, 0.22 ) }
    dend_51 { pt3dadd( -123.966, -44.0476, -91.2653, 0.74 ) }
    dend_51 { pt3dadd( -124.697, -44.0925, -91.634, 0.74 ) }
    dend_51 { pt3dadd( -125.277, -44.0669, -91.9695, 0.74 ) }
    dend_51 { pt3dadd( -126.264, -43.9478, -92.6237, 0.44 ) }
    dend_51 { pt3dadd( -127.076, -43.8296, -93.2107, 0.22 ) }
    dend_51 { pt3dadd( -127.515, -43.7678, -93.5775, 0.81 ) }
    dend_51 { pt3dadd( -128.153, -43.6824, -94.1276, 0.81 ) }
    dend_51 { pt3dadd( -130.507, -43.3623, -96.1632, 0.52 ) }
    dend_51 { pt3dadd( -131.43, -43.2497, -96.9406, 1.03 ) }
    dend_51 { pt3dadd( -132.188, -43.1952, -97.5351, 1.4 ) }
    dend_51 { pt3dadd( -133.44, -43.1652, -98.4387, 1.18 ) }
    dend_51 { pt3dadd( -134.173, -43.1743, -98.9257, 0.66 ) }
    dend_51 { pt3dadd( -135.284, -43.2023, -99.6033, 1.18 ) }
    dend_51 { pt3dadd( -135.93, -43.2162, -99.9506, 1.55 ) }
    dend_51 { pt3dadd( -137.453, -43.2269, -100.789, 0.52 ) }
    dend_51 { pt3dadd( -138.086, -43.2274, -101.167, 1.18 ) }
    dend_51 { pt3dadd( -138.977, -43.2353, -101.735, 1.18 ) }
    dend_51 { pt3dadd( -140.576, -43.2433, -102.875, 0.29 ) }
    dend_51 { pt3dadd( -141.194, -43.2465, -103.372, 0.29 ) }
    dend_51 { pt3dadd( -141.927, -43.243, -104.001, 0.29 ) }
    dend_51 { pt3dadd( -142.75, -43.2181, -104.737, 0.59 ) }
    dend_51 { pt3dadd( -143.496, -43.188, -105.413, 0.59 ) }
    dend_51 { pt3dadd( -144.047, -43.1501, -105.896, 0.44 ) }
    dend_51 { pt3dadd( -145.353, -43.0199, -106.986, 1.03 ) }
    dend_51 { pt3dadd( -146.007, -42.9241, -107.547, 1.33 ) }
    dend_51 { pt3dadd( -147.516, -42.6587, -108.812, 0.29 ) }
    dend_51 { pt3dadd( -148.176, -42.5244, -109.333, 0.29 ) }
    dend_51 { pt3dadd( -148.774, -42.3899, -109.774, 0.96 ) }
    dend_51 { pt3dadd( -149.565, -42.2034, -110.295, 0.96 ) }
    dend_51 { pt3dadd( -152.161, -41.5181, -111.637, 0.29 ) }
    dend_51 { pt3dadd( -152.651, -41.367, -111.818, 0.29 ) }
    dend_51 { pt3dadd( -153.49, -41.1024, -112.0, 1.03 ) }
    dend_51 { pt3dadd( -154.308, -40.8543, -112.072, 1.33 ) }
    dend_51 { pt3dadd( -155.302, -40.5612, -112.045, 0.74 ) }
    dend_51 { pt3dadd( -156.653, -40.1591, -111.873, 0.37 ) }
    dend_51 { pt3dadd( -158.249, -39.6833, -111.516, 0.29 ) }
    dend_51 { pt3dadd( -159.196, -39.4116, -111.319, 0.22 ) }
    dend_51 { pt3dadd( -160.209, -39.1401, -111.112, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_51 { pt3dadd( -161.243, -38.8477, -110.905, 0.52 ) }
    dend_51 { pt3dadd( -162.001, -38.6226, -110.761, 0.96 ) }
    dend_51 { pt3dadd( -162.662, -38.4207, -110.656, 1.18 ) }
    dend_51 { pt3dadd( -163.34, -38.2283, -110.56, 1.18 ) }
    dend_51 { pt3dadd( -164.292, -37.9304, -110.431, 0.74 ) }
    dend_51 { pt3dadd( -165.165, -37.6617, -110.306, 0.22 ) }
    dend_51 { pt3dadd( -165.603, -37.5323, -110.23, 0.44 ) }
    dend_51 { pt3dadd( -166.182, -37.3585, -110.099, 0.44 ) }
    dend_51 { pt3dadd( -166.899, -37.1135, -109.918, 0.22 ) }
    dend_51 { pt3dadd( -167.628, -36.8279, -109.715, 0.22 ) }
    dend_51 { pt3dadd( -168.114, -36.6111, -109.57, 0.88 ) }
    dend_51 { pt3dadd( -168.641, -36.3635, -109.399, 1.25 ) }
    dend_51 { pt3dadd( -168.891, -36.2231, -109.309, 1.25 ) }
    dend_51 { pt3dadd( -170.034, -35.4665, -108.858, 0.22 ) }
    dend_51 { pt3dadd( -170.613, -35.0272, -108.619, 0.22 ) }
    dend_51 { pt3dadd( -171.201, -34.532, -108.374, 0.88 ) }
    dend_51 { pt3dadd( -171.692, -34.0736, -108.169, 1.25 ) }
    dend_51 { pt3dadd( -172.413, -33.3297, -107.866, 0.22 ) }
    dend_51 { pt3dadd( -173.259, -32.3853, -107.508, 0.22 ) }
    dend_51 { pt3dadd( -173.926, -31.5714, -107.234, 0.88 ) }
    dend_51 { pt3dadd( -174.315, -31.0512, -107.076, 0.88 ) }
    dend_51 { pt3dadd( -174.655, -30.5421, -106.906, 0.37 ) }
    dend_51 { pt3dadd( -175.129, -29.7171, -106.599, 0.15 ) }
    dend_51 { pt3dadd( -175.539, -28.8765, -106.267, 0.96 ) }
    dend_51 { pt3dadd( -175.808, -28.2433, -106.005, 1.18 ) }
    dend_51 { pt3dadd( -176.443, -26.6277, -105.234, 0.22 ) }
    dend_51 { pt3dadd( -177.009, -25.1671, -104.448, 0.81 ) }
    dend_51 { pt3dadd( -177.285, -24.4033, -104.01, 0.74 ) }
    dend_51 { pt3dadd( -177.605, -23.4038, -103.403, 0.29 ) }
    dend_51 { pt3dadd( -177.704, -23.0613, -103.183, 0.29 ) }
    dend_51 { pt3dadd( -177.966, -22.112, -102.546, 0.52 ) }
    dend_51 { pt3dadd( -178.084, -21.6404, -102.227, 0.66 ) }
    dend_51 { pt3dadd( -178.282, -20.7222, -101.719, 0.22 ) }
    dend_51 { pt3dadd( -178.364, -20.2415, -101.5, 0.22 ) }
    dend_51 { pt3dadd( -178.441, -19.393, -101.197, 0.81 ) }
    dend_51 { pt3dadd( -178.449, -18.8991, -101.081, 1.11 ) }
    dend_51 { pt3dadd( -178.399, -18.125, -101.014, 1.11 ) }
    dend_51 { pt3dadd( -178.255, -16.9387, -101.055, 0.22 ) }
    dend_51 { pt3dadd( -178.157, -16.304, -101.148, 0.59 ) }
    dend_51 { pt3dadd( -178.1, -15.9129, -101.225, 0.59 ) }
    dend_51 { pt3dadd( -177.995, -15.123, -101.391, 0.29 ) }
    dend_51 { pt3dadd( -177.897, -13.8916, -101.672, 0.22 ) }
    dend_51 { pt3dadd( -177.838, -12.6651, -101.977, 0.88 ) }
    dend_51 { pt3dadd( -177.835, -11.5767, -102.223, 1.11 ) }
    dend_51 { pt3dadd( -177.88, -9.86832, -102.541, 0.22 ) }
    dend_51 { pt3dadd( -177.91, -9.08501, -102.664, 0.52 ) }
    dend_51 { pt3dadd( -178.0, -7.84198, -102.858, 0.22 ) }
    dend_51 { pt3dadd( -178.162, -6.44109, -103.086, 0.22 ) }
    dend_51 { pt3dadd( -178.371, -5.02216, -103.327, 0.66 ) }
    dend_51 { pt3dadd( -178.568, -3.86772, -103.557, 0.66 ) }
    dend_51 { pt3dadd( -178.819, -2.60707, -103.895, 0.88 ) }
    dend_51 { pt3dadd( -179.136, -1.12964, -104.351, 0.66 ) }
    dend_51 { pt3dadd( -179.355, -0.185118, -104.667, 0.44 ) }
    dend_51 { pt3dadd( -179.581, 0.661867, -104.982, 0.66 ) }
    dend_51 { pt3dadd( -179.685, 1.03878, -105.151, 0.66 ) }
    dend_51 { pt3dadd( -180.172, 2.62943, -105.966, 0.22 ) }
    dend_51 { pt3dadd( -180.544, 3.75575, -106.562, 0.22 ) }
    dend_51 { pt3dadd( -180.707, 4.31925, -106.83, 1.33 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 58/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -111.368, -44.9041, -86.7884, 0.44 ) }
    dend_50 { pt3dadd( -112.081, -46.1571, -87.2961, 0.44 ) }
    dend_50 { pt3dadd( -112.633, -47.1148, -87.7426, 0.29 ) }
    dend_50 { pt3dadd( -112.902, -47.5577, -87.9815, 0.66 ) }
    dend_50 { pt3dadd( -113.197, -47.997, -88.2642, 0.66 ) }
    dend_50 { pt3dadd( -113.755, -48.7332, -88.853, 0.29 ) }
    dend_50 { pt3dadd( -114.053, -49.092, -89.1675, 0.59 ) }
    dend_50 { pt3dadd( -114.544, -49.6628, -89.7471, 0.37 ) }
    dend_50 { pt3dadd( -115.122, -50.2896, -90.4718, 1.18 ) }
    dend_50 { pt3dadd( -115.63, -50.8466, -91.1935, 1.62 ) }
    dend_50 { pt3dadd( -116.141, -51.4503, -92.1577, 1.62 ) }
    dend_50 { pt3dadd( -116.786, -52.2995, -93.8676, 0.29 ) }
    dend_50 { pt3dadd( -117.019, -52.6483, -94.6968, 0.29 ) }
    dend_50 { pt3dadd( -117.141, -52.8696, -95.2768, 0.66 ) }
    dend_50 { pt3dadd( -117.347, -53.3273, -96.4471, 0.52 ) }
    dend_50 { pt3dadd( -117.696, -54.2692, -98.6377, 1.18 ) }
    dend_50 { pt3dadd( -117.906, -54.965, -100.09, 1.77 ) }
    dend_50 { pt3dadd( -118.031, -55.3917, -100.928, 1.77 ) }
    dend_50 { pt3dadd( -118.526, -56.5564, -103.053, 0.29 ) }
    dend_50 { pt3dadd( -118.772, -57.0646, -103.849, 0.29 ) }
    dend_50 { pt3dadd( -119.047, -57.619, -104.613, 0.29 ) }
    dend_50 { pt3dadd( -119.44, -58.4805, -105.725, 1.62 ) }
    dend_50 { pt3dadd( -119.655, -59.035, -106.468, 1.69 ) }
    dend_50 { pt3dadd( -120.287, -61.2083, -109.64, 0.29 ) }
    dend_50 { pt3dadd( -120.397, -61.8444, -110.657, 0.29 ) }
    dend_50 { pt3dadd( -120.418, -62.337, -111.522, 0.29 ) }
    dend_50 { pt3dadd( -120.296, -63.3839, -113.481, 1.25 ) }
    dend_50 { pt3dadd( -120.028, -64.1545, -115.047, 0.66 ) }
    dend_50 { pt3dadd( -119.632, -64.7337, -116.293, 0.29 ) }
    dend_50 { pt3dadd( -119.217, -65.0916, -117.098, 1.03 ) }
    dend_50 { pt3dadd( -118.845, -65.3496, -117.755, 1.03 ) }
    dend_50 { pt3dadd( -118.37, -65.6583, -118.512, 0.44 ) }
    dend_50 { pt3dadd( -117.679, -66.068, -119.449, 0.29 ) }
    dend_50 { pt3dadd( -117.247, -66.3196, -120.007, 0.88 ) }
    dend_50 { pt3dadd( -116.979, -66.4869, -120.357, 1.33 ) }
    dend_50 { pt3dadd( -115.627, -67.5291, -122.405, 0.29 ) }
    dend_50 { pt3dadd( -115.243, -67.9296, -123.089, 0.96 ) }
    dend_50 { pt3dadd( -115.059, -68.1976, -123.489, 0.81 ) }
    dend_50 { pt3dadd( -114.806, -68.739, -124.226, 0.37 ) }
    dend_50 { pt3dadd( -114.554, -69.4592, -125.176, 0.66 ) }
    dend_50 { pt3dadd( -114.282, -70.3895, -126.381, 0.52 ) }
    dend_50 { pt3dadd( -114.134, -70.9746, -127.136, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_50 { pt3dadd( -114.035, -71.3962, -127.755, 0.88 ) }
    dend_50 { pt3dadd( -113.774, -72.5511, -129.952, 0.44 ) }
    dend_50 { pt3dadd( -113.72, -72.9074, -130.8, 0.37 ) }
    dend_50 { pt3dadd( -113.671, -73.349, -132.068, 0.29 ) }
    dend_50 { pt3dadd( -113.619, -73.6388, -133.054, 0.96 ) }
    dend_50 { pt3dadd( -113.534, -74.0425, -134.639, 1.03 ) }
    dend_50 { pt3dadd( -113.357, -74.8062, -137.768, 0.74 ) }
    dend_50 { pt3dadd( -113.243, -75.2653, -139.548, 1.33 ) }
    dend_50 { pt3dadd( -113.137, -75.6848, -140.948, 1.11 ) }
    dend_50 { pt3dadd( -113.029, -76.1331, -142.176, 0.44 ) }
    dend_50 { pt3dadd( -112.936, -76.5062, -142.96, 0.81 ) }
    dend_50 { pt3dadd( -112.773, -77.0349, -143.808, 0.88 ) }
    dend_50 { pt3dadd( -112.421, -78.0215, -145.091, 0.22 ) }
    dend_50 { pt3dadd( -112.167, -78.6222, -145.902, 0.22 ) }
    dend_50 { pt3dadd( -112.047, -78.9275, -146.35, 0.59 ) }
    dend_50 { pt3dadd( -111.914, -79.3232, -146.973, 0.59 ) }
    dend_50 { pt3dadd( -111.582, -80.3599, -148.745, 0.37 ) }
    dend_50 { pt3dadd( -111.414, -80.893, -149.819, 0.59 ) }
    dend_50 { pt3dadd( -111.203, -81.5912, -151.371, 0.44 ) }
    dend_50 { pt3dadd( -111.121, -81.9186, -152.241, 0.74 ) }
    dend_50 { pt3dadd( -111.084, -82.1402, -152.872, 0.74 ) }
    dend_50 { pt3dadd( -111.069, -82.5386, -153.995, 0.37 ) }
    dend_50 { pt3dadd( -111.169, -83.174, -156.065, 0.96 ) }
    dend_50 { pt3dadd( -111.255, -83.4117, -157.024, 0.88 ) }
    dend_50 { pt3dadd( -111.667, -84.0612, -159.986, 0.66 ) }
    dend_50 { pt3dadd( -111.847, -84.2745, -161.08, 0.96 ) }
    dend_50 { pt3dadd( -112.044, -84.467, -162.124, 0.96 ) }
    dend_50 { pt3dadd( -112.866, -85.1986, -166.057, 0.66 ) }
    dend_50 { pt3dadd( -113.473, -85.8072, -168.872, 0.66 ) }
    dend_50 { pt3dadd( -114.164, -86.6105, -172.128, 0.44 ) }
    dend_50 { pt3dadd( -114.537, -87.1925, -173.98, 0.74 ) }
    dend_50 { pt3dadd( -114.701, -87.5442, -174.884, 0.37 ) }
    dend_50 { pt3dadd( -114.846, -88.0262, -175.824, 0.81 ) }
    dend_50 { pt3dadd( -115.017, -89.1131, -177.19, 0.22 ) }
    dend_50 { pt3dadd( -115.056, -89.688, -177.74, 0.81 ) }
    dend_50 { pt3dadd( -115.01, -90.8772, -178.618, 0.22 ) }
    dend_50 { pt3dadd( -114.898, -92.3983, -179.583, 0.22 ) }
    dend_50 { pt3dadd( -114.835, -93.0803, -180.01, 0.88 ) }
    dend_50 { pt3dadd( -114.796, -93.5936, -180.336, 0.88 ) }
    // Section: dend_46, id: dend_46, parent: dend_38 (entry count 39/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -124.132, -76.8726, -41.4798, 0.96 ) }
    dend_46 { pt3dadd( -126.578, -78.2732, -42.8371, 0.96 ) }
    dend_46 { pt3dadd( -128.177, -79.1978, -43.4686, 0.22 ) }
    dend_46 { pt3dadd( -128.996, -79.6714, -43.7921, 0.52 ) }
    dend_46 { pt3dadd( -129.641, -80.0441, -44.0466, 0.66 ) }
    dend_46 { pt3dadd( -130.603, -80.6009, -44.4269, 0.44 ) }
    dend_46 { pt3dadd( -131.694, -81.2316, -44.8577, 1.33 ) }
    dend_46 { pt3dadd( -133.217, -81.9256, -45.034, 1.84 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 47/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -124.132, -76.8726, -41.4798, 0.37 ) }
    dend_39 { pt3dadd( -125.588, -76.1129, -40.1913, 0.37 ) }
    dend_39 { pt3dadd( -126.088, -75.8812, -39.7416, 0.37 ) }
    dend_39 { pt3dadd( -126.926, -75.4926, -38.9872, 0.22 ) }
    dend_39 { pt3dadd( -127.379, -75.2826, -38.5796, 1.03 ) }
    dend_39 { pt3dadd( -127.844, -75.067, -38.1611, 1.77 ) }
    dend_39 { pt3dadd( -128.399, -74.81, -37.6623, 2.14 ) }
    dend_39 { pt3dadd( -128.782, -74.6693, -37.3988, 2.14 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 55/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 39.8101, -76.7554, -58.9301, 0.44 ) }
    dend_36 { pt3dadd( 40.9626, -76.4186, -58.9585, 0.44 ) }
    dend_36 { pt3dadd( 41.6756, -76.13, -58.9718, 0.22 ) }
    dend_36 { pt3dadd( 42.3309, -75.7232, -59.0314, 0.22 ) }
    dend_36 { pt3dadd( 43.0754, -75.1791, -59.1877, 0.44 ) }
    dend_36 { pt3dadd( 43.2968, -74.989, -59.2727, 0.81 ) }
    dend_36 { pt3dadd( 43.6492, -74.6621, -59.4353, 0.81 ) }
    dend_36 { pt3dadd( 43.9451, -74.3297, -59.6812, 0.37 ) }
    dend_36 { pt3dadd( 44.4691, -73.5813, -60.3536, 0.44 ) }
    dend_36 { pt3dadd( 44.6668, -73.166, -60.9014, 0.59 ) }
    dend_36 { pt3dadd( 44.8842, -72.5374, -61.8839, 0.15 ) }
    dend_36 { pt3dadd( 45.0069, -72.1275, -62.6137, 0.29 ) }
    dend_36 { pt3dadd( 45.2186, -71.3996, -64.0412, 1.18 ) }
    dend_36 { pt3dadd( 45.3333, -71.0125, -64.8677, 1.18 ) }
    dend_36 { pt3dadd( 45.8299, -69.5286, -68.1696, 0.74 ) }
    dend_36 { pt3dadd( 45.9289, -69.2539, -68.758, 0.74 ) }
    dend_36 { pt3dadd( 46.0764, -68.893, -69.5066, 0.96 ) }
    dend_36 { pt3dadd( 46.2211, -68.5738, -70.1194, 0.96 ) }
    dend_36 { pt3dadd( 46.5107, -68.015, -71.0079, 0.52 ) }
    dend_36 { pt3dadd( 46.9122, -67.2816, -71.9126, 0.29 ) }
    dend_36 { pt3dadd( 47.323, -66.6044, -72.5343, 0.29 ) }
    dend_36 { pt3dadd( 47.8671, -65.7102, -73.2792, 1.33 ) }
    dend_36 { pt3dadd( 48.1432, -65.2639, -73.6135, 1.33 ) }
    dend_36 { pt3dadd( 48.7145, -64.3496, -74.2071, 0.44 ) }
    dend_36 { pt3dadd( 49.3205, -63.4011, -74.7203, 0.37 ) }
    dend_36 { pt3dadd( 49.8275, -62.6238, -75.0532, 0.37 ) }
    dend_36 { pt3dadd( 50.0698, -62.2793, -75.1638, 0.37 ) }
    dend_36 { pt3dadd( 50.5285, -61.6665, -75.3042, 0.22 ) }
    dend_36 { pt3dadd( 51.5172, -60.4191, -75.5386, 1.55 ) }
    dend_36 { pt3dadd( 51.9478, -59.9194, -75.6109, 1.77 ) }
    dend_36 { pt3dadd( 52.9584, -58.755, -75.7806, 0.37 ) }
    dend_36 { pt3dadd( 53.296, -58.3108, -75.8383, 0.44 ) }
    dend_36 { pt3dadd( 53.5328, -57.9422, -75.8849, 0.44 ) }
    dend_36 { pt3dadd( 53.7624, -57.5319, -75.9433, 0.44 ) }
    dend_36 { pt3dadd( 54.2757, -56.5609, -76.1115, 0.29 ) }
    dend_36 { pt3dadd( 54.6061, -55.9026, -76.2501, 0.22 ) }
    dend_36 { pt3dadd( 54.9814, -55.1438, -76.4288, 0.22 ) }
    dend_36 { pt3dadd( 55.6382, -53.8221, -76.7314, 1.18 ) }
    dend_36 { pt3dadd( 56.0534, -52.9857, -76.9004, 1.4 ) }
    dend_36 { pt3dadd( 56.2039, -52.6907, -76.9518, 1.62 ) }
    dend_36 { pt3dadd( 56.3944, -52.335, -77.0149, 1.62 ) }
    dend_36 { pt3dadd( 56.9022, -51.5401, -77.2075, 0.96 ) }
    dend_36 { pt3dadd( 57.3121, -50.9791, -77.3713, 0.59 ) }
    dend_36 { pt3dadd( 57.9301, -50.1842, -77.6343, 0.52 ) }
    dend_36 { pt3dadd( 58.5842, -49.3592, -77.9122, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_36 { pt3dadd( 59.1021, -48.7309, -78.1362, 1.03 ) }
    dend_36 { pt3dadd( 60.2809, -47.4467, -78.6472, 0.22 ) }
    dend_36 { pt3dadd( 60.7065, -47.0575, -78.8218, 0.66 ) }
    dend_36 { pt3dadd( 61.0353, -46.8192, -78.9423, 0.66 ) }
    dend_36 { pt3dadd( 61.8426, -46.4474, -79.1855, 0.29 ) }
    dend_36 { pt3dadd( 62.4789, -46.3856, -79.2985, 0.29 ) }
    dend_36 { pt3dadd( 63.3381, -46.6187, -79.4793, 0.29 ) }
    dend_36 { pt3dadd( 64.2679, -47.1966, -79.7498, 1.33 ) }
    dend_36 { pt3dadd( 64.6787, -47.5796, -79.9742, 1.47 ) }
    dend_36 { pt3dadd( 65.3019, -48.2877, -80.4744, 0.74 ) }
    dend_36 { pt3dadd( 65.7826, -48.8804, -80.97, 0.44 ) }
    dend_36 { pt3dadd( 66.97, -50.2721, -82.3977, 0.96 ) }
    dend_36 { pt3dadd( 67.3204, -50.6337, -82.8592, 0.74 ) }
    dend_36 { pt3dadd( 68.2132, -51.4415, -84.0742, 0.29 ) }
    dend_36 { pt3dadd( 68.7171, -51.8052, -84.6973, 0.52 ) }
    dend_36 { pt3dadd( 69.3729, -52.1751, -85.3903, 0.29 ) }
    dend_36 { pt3dadd( 70.081, -52.4897, -85.9916, 0.66 ) }
    dend_36 { pt3dadd( 70.5573, -52.6493, -86.2912, 0.66 ) }
    dend_36 { pt3dadd( 71.2253, -52.7981, -86.6987, 0.29 ) }
    dend_36 { pt3dadd( 72.3754, -52.9761, -87.3705, 0.96 ) }
    dend_36 { pt3dadd( 73.1077, -53.0992, -87.8138, 0.29 ) }
    dend_36 { pt3dadd( 73.8737, -53.2271, -88.3052, 1.11 ) }
    dend_36 { pt3dadd( 75.0778, -53.408, -89.1006, 0.37 ) }
    dend_36 { pt3dadd( 76.2989, -53.5486, -89.9162, 0.96 ) }
    dend_36 { pt3dadd( 77.1319, -53.6021, -90.4765, 0.52 ) }
    dend_36 { pt3dadd( 77.8909, -53.6284, -90.9898, 0.96 ) }
    dend_36 { pt3dadd( 78.1777, -53.6312, -91.1753, 0.96 ) }
    dend_36 { pt3dadd( 79.2813, -53.6505, -91.8573, 0.29 ) }
    dend_36 { pt3dadd( 79.8033, -53.6682, -92.1404, 0.81 ) }
    dend_36 { pt3dadd( 80.204, -53.6798, -92.3158, 0.81 ) }
    dend_36 { pt3dadd( 81.1091, -53.6624, -92.6737, 0.29 ) }
    dend_36 { pt3dadd( 81.8311, -53.6087, -92.9319, 0.81 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 32/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 39.8101, -76.7554, -58.9301, 0.74 ) }
    dend_33 { pt3dadd( 40.3732, -78.1718, -58.792, 0.74 ) }
    dend_33 { pt3dadd( 40.9069, -79.2135, -58.6092, 0.81 ) }
    dend_33 { pt3dadd( 41.5512, -80.2619, -58.3715, 0.81 ) }
    dend_33 { pt3dadd( 42.3388, -81.3598, -58.0891, 0.59 ) }
    dend_33 { pt3dadd( 43.0401, -82.1903, -57.8589, 0.37 ) }
    dend_33 { pt3dadd( 43.4808, -82.6337, -57.7142, 0.37 ) }
    dend_33 { pt3dadd( 44.4431, -83.4397, -57.3524, 0.88 ) }
    dend_33 { pt3dadd( 44.8482, -83.7129, -57.2138, 0.88 ) }
    dend_33 { pt3dadd( 45.3278, -84.0148, -57.0558, 0.88 ) }
    dend_33 { pt3dadd( 45.9659, -84.455, -56.8841, 0.29 ) }
    dend_33 { pt3dadd( 47.0286, -85.384, -56.6542, 0.29 ) }
    dend_33 { pt3dadd( 47.5641, -86.023, -56.5751, 1.03 ) }
    dend_33 { pt3dadd( 47.9092, -86.5048, -56.5351, 1.33 ) }
    dend_33 { pt3dadd( 48.4922, -87.3394, -56.4534, 1.18 ) }
    dend_33 { pt3dadd( 49.2037, -88.3127, -56.3421, 1.03 ) }
    dend_33 { pt3dadd( 49.7869, -89.0265, -56.2481, 0.81 ) }
    dend_33 { pt3dadd( 50.7814, -89.9683, -56.0767, 0.37 ) }
    dend_33 { pt3dadd( 51.8889, -90.7292, -55.8555, 0.96 ) }
    dend_33 { pt3dadd( 52.6035, -91.0975, -55.7117, 1.18 ) }
    dend_33 { pt3dadd( 53.3889, -91.3929, -55.5347, 1.18 ) }
    dend_33 { pt3dadd( 54.1484, -91.5874, -55.3673, 0.88 ) }
    dend_33 { pt3dadd( 55.3349, -91.7665, -55.1806, 0.44 ) }
    dend_33 { pt3dadd( 55.9034, -91.7987, -55.1706, 0.44 ) }
    dend_33 { pt3dadd( 56.9459, -91.8017, -55.325, 0.37 ) }
    dend_33 { pt3dadd( 57.775, -91.7789, -55.5949, 0.37 ) }
    dend_33 { pt3dadd( 58.9323, -91.7472, -56.1657, 0.66 ) }
    dend_33 { pt3dadd( 59.7712, -91.7547, -56.6804, 1.03 ) }
    dend_33 { pt3dadd( 60.8258, -91.7502, -57.4414, 0.74 ) }
    dend_33 { pt3dadd( 61.5388, -91.7407, -58.0108, 0.52 ) }
    dend_33 { pt3dadd( 62.4306, -91.7108, -58.8104, 0.44 ) }
    dend_33 { pt3dadd( 63.1412, -91.7157, -59.5114, 0.44 ) }
    dend_33 { pt3dadd( 63.8633, -91.7957, -60.204, 0.37 ) }
    // Section: dend_26, id: dend_26, parent: dend_16 (entry count 65/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -6.36203, 214.233, -12.229, 0.29 ) }
    dend_26 { pt3dadd( -6.50464, 216.383, -12.6055, 0.29 ) }
    dend_26 { pt3dadd( -6.49011, 216.863, -12.62, 0.29 ) }
    dend_26 { pt3dadd( -6.47713, 217.371, -12.5895, 0.66 ) }
    dend_26 { pt3dadd( -6.51181, 217.902, -12.5096, 0.88 ) }
    dend_26 { pt3dadd( -6.60756, 218.531, -12.3826, 0.88 ) }
    dend_26 { pt3dadd( -6.87717, 219.602, -12.0033, 0.52 ) }
    dend_26 { pt3dadd( -7.17316, 220.409, -11.4878, 0.66 ) }
    dend_26 { pt3dadd( -7.41729, 220.882, -11.0528, 0.81 ) }
    dend_26 { pt3dadd( -7.85214, 221.553, -10.3143, 0.37 ) }
    dend_26 { pt3dadd( -8.20952, 222.021, -9.75641, 0.52 ) }
    dend_26 { pt3dadd( -9.03164, 222.96, -8.57622, 0.74 ) }
    dend_26 { pt3dadd( -9.66942, 223.609, -7.76208, 1.03 ) }
    dend_26 { pt3dadd( -10.8632, 224.71, -6.35568, 1.03 ) }
    dend_26 { pt3dadd( -11.4358, 225.226, -5.70871, 0.74 ) }
    dend_26 { pt3dadd( -11.8904, 225.658, -5.19759, 0.44 ) }
    dend_26 { pt3dadd( -12.3245, 226.092, -4.7111, 0.44 ) }
    dend_26 { pt3dadd( -13.0117, 226.816, -3.98473, 0.44 ) }
    dend_26 { pt3dadd( -14.0327, 227.944, -2.94933, 0.88 ) }
    dend_26 { pt3dadd( -14.5703, 228.585, -2.41853, 1.18 ) }
    dend_26 { pt3dadd( -14.934, 229.043, -2.02607, 0.52 ) }
    dend_26 { pt3dadd( -15.305, 229.554, -1.57972, 0.52 ) }
    dend_26 { pt3dadd( -15.7605, 230.291, -0.971866, 0.59 ) }
    dend_26 { pt3dadd( -16.0263, 230.826, -0.594435, 0.81 ) }
    dend_26 { pt3dadd( -16.3086, 231.521, -0.246059, 0.29 ) }
    dend_26 { pt3dadd( -16.5044, 231.938, -0.0729229, 0.29 ) }
    dend_26 { pt3dadd( -16.8065, 232.413, 0.109425, 0.66 ) }
    dend_26 { pt3dadd( -17.1682, 232.81, 0.316784, 0.66 ) }
    dend_26 { pt3dadd( -17.5046, 233.124, 0.545551, 0.37 ) }
    dend_26 { pt3dadd( -17.8389, 233.423, 0.827433, 0.66 ) }
    dend_26 { pt3dadd( -18.2698, 233.841, 1.24148, 0.81 ) }
    dend_26 { pt3dadd( -18.629, 234.249, 1.62325, 0.74 ) }
    dend_26 { pt3dadd( -19.5773, 235.549, 2.78137, 0.44 ) }
    dend_26 { pt3dadd( -19.8988, 236.131, 3.26271, 0.37 ) }
    dend_26 { pt3dadd( -20.0877, 236.675, 3.6535, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_26 { pt3dadd( -20.2118, 237.44, 4.10821, 0.29 ) }
    dend_26 { pt3dadd( -20.2331, 238.033, 4.42004, 0.15 ) }
    dend_26 { pt3dadd( -20.196, 238.503, 4.6216, 0.44 ) }
    dend_26 { pt3dadd( -20.1429, 238.759, 4.687, 0.44 ) }
    dend_26 { pt3dadd( -20.097, 238.993, 4.74274, 0.44 ) }
    dend_26 { pt3dadd( -19.9647, 240.525, 5.19813, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 6/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -6.36203, 214.233, -12.229, 0.74 ) }
    dend_17 { pt3dadd( -6.26674, 215.376, -12.6725, 0.74 ) }
    dend_17 { pt3dadd( -6.24055, 216.378, -13.0431, 0.74 ) }
    dend_17 { pt3dadd( -6.27146, 217.989, -13.6235, 0.96 ) }
    dend_17 { pt3dadd( -6.36726, 219.16, -13.9957, 0.96 ) }
    dend_17 { pt3dadd( -6.57396, 220.539, -14.3694, 0.74 ) }
    dend_17 { pt3dadd( -6.95456, 222.442, -14.8213, 0.59 ) }
    dend_17 { pt3dadd( -7.20343, 223.364, -14.9818, 0.81 ) }
    dend_17 { pt3dadd( -7.5661, 224.58, -15.1134, 0.81 ) }
    dend_17 { pt3dadd( -8.0428, 226.118, -15.174, 0.81 ) }
    dend_17 { pt3dadd( -8.51892, 227.81, -15.13, 0.96 ) }
    dend_17 { pt3dadd( -8.79012, 228.955, -15.0422, 0.96 ) }
    dend_17 { pt3dadd( -9.10843, 230.89, -14.8368, 0.74 ) }
    dend_17 { pt3dadd( -9.19668, 231.957, -14.6969, 1.03 ) }
    dend_17 { pt3dadd( -9.1899, 232.729, -14.5841, 1.03 ) }
    dend_17 { pt3dadd( -9.0646, 234.048, -14.4219, 1.03 ) }
    dend_17 { pt3dadd( -8.96948, 234.742, -14.3532, 1.03 ) }
    dend_17 { pt3dadd( -8.84489, 235.796, -14.2999, 1.03 ) }
    dend_17 { pt3dadd( -8.81063, 236.697, -14.289, 1.03 ) }
    dend_17 { pt3dadd( -8.84934, 237.742, -14.3248, 0.96 ) }
    dend_17 { pt3dadd( -8.99879, 238.891, -14.415, 0.74 ) }
    dend_17 { pt3dadd( -9.18547, 239.827, -14.5307, 0.74 ) }
    dend_17 { pt3dadd( -9.4682, 240.925, -14.6861, 0.88 ) }
    dend_17 { pt3dadd( -9.90784, 242.328, -14.8985, 1.11 ) }
    dend_17 { pt3dadd( -10.2786, 243.382, -15.0753, 1.11 ) }
    dend_17 { pt3dadd( -10.9134, 245.092, -15.3641, 0.96 ) }
    dend_17 { pt3dadd( -11.2546, 246.027, -15.5051, 0.96 ) }
    dend_17 { pt3dadd( -11.5797, 246.941, -15.6154, 0.96 ) }
    dend_17 { pt3dadd( -11.8637, 247.721, -15.6901, 0.96 ) }
    dend_17 { pt3dadd( -12.2423, 248.709, -15.7645, 0.81 ) }
    dend_17 { pt3dadd( -12.6986, 249.905, -15.8234, 0.96 ) }
    dend_17 { pt3dadd( -13.0297, 250.798, -15.8281, 0.96 ) }
    dend_17 { pt3dadd( -13.42, 251.846, -15.7689, 0.96 ) }
    dend_17 { pt3dadd( -13.6907, 252.634, -15.6805, 1.25 ) }
    dend_17 { pt3dadd( -13.997, 253.568, -15.502, 1.25 ) }
    dend_17 { pt3dadd( -14.4125, 254.93, -15.1312, 1.11 ) }
    dend_17 { pt3dadd( -14.6982, 256.089, -14.7773, 0.88 ) }
    dend_17 { pt3dadd( -14.8932, 257.297, -14.3786, 0.74 ) }
    dend_17 { pt3dadd( -14.9396, 258.124, -14.1097, 1.18 ) }
    dend_17 { pt3dadd( -14.9066, 259.111, -13.7844, 1.18 ) }
    dend_17 { pt3dadd( -14.8671, 259.73, -13.5726, 1.18 ) }
    dend_17 { pt3dadd( -14.8104, 260.853, -13.1862, 0.96 ) }
    dend_17 { pt3dadd( -14.785, 261.686, -12.949, 0.81 ) }
    dend_17 { pt3dadd( -14.7911, 262.604, -12.7466, 0.81 ) }
    dend_17 { pt3dadd( -14.8458, 263.66, -12.5502, 0.81 ) }
    dend_17 { pt3dadd( -14.9472, 264.988, -12.3428, 0.81 ) }
    dend_17 { pt3dadd( -15.0675, 266.047, -12.1917, 1.11 ) }
    dend_17 { pt3dadd( -15.2214, 267.174, -12.0566, 1.11 ) }
    dend_17 { pt3dadd( -15.3722, 268.374, -12.0123, 0.96 ) }
    dend_17 { pt3dadd( -15.5118, 269.627, -12.0662, 0.96 ) }
    dend_17 { pt3dadd( -15.6723, 271.33, -12.2969, 0.88 ) }
    dend_17 { pt3dadd( -15.7844, 272.886, -12.6455, 0.88 ) }
    dend_17 { pt3dadd( -15.8588, 274.201, -13.0344, 0.88 ) }
    dend_17 { pt3dadd( -15.9407, 276.241, -13.7361, 0.88 ) }
    dend_17 { pt3dadd( -15.9903, 277.767, -14.2954, 1.11 ) }
    dend_17 { pt3dadd( -16.0215, 279.028, -14.7803, 1.11 ) }
    dend_17 { pt3dadd( -16.067, 280.192, -15.1782, 1.11 ) }
    dend_17 { pt3dadd( -16.1198, 281.526, -15.511, 0.81 ) }
    dend_17 { pt3dadd( -16.1816, 283.599, -15.8029, 1.11 ) }
    dend_17 { pt3dadd( -16.1925, 284.471, -15.8164, 1.11 ) }
    dend_17 { pt3dadd( -16.1449, 285.92, -15.7409, 1.11 ) }
    dend_17 { pt3dadd( -16.0117, 288.098, -15.5286, 0.96 ) }
    dend_17 { pt3dadd( -15.8818, 289.761, -15.3236, 0.96 ) }
    dend_17 { pt3dadd( -15.7748, 290.883, -15.213, 0.96 ) }
    dend_17 { pt3dadd( -15.6667, 291.837, -15.1767, 0.96 ) }
    dend_17 { pt3dadd( -15.4149, 293.619, -15.1715, 0.81 ) }
    dend_17 { pt3dadd( -15.2052, 294.807, -15.1983, 0.81 ) }
    dend_17 { pt3dadd( -14.9374, 296.192, -15.2737, 0.66 ) }
    dend_17 { pt3dadd( -14.5201, 298.327, -15.4272, 0.66 ) }
    dend_17 { pt3dadd( -14.2049, 300.085, -15.5638, 0.66 ) }
    dend_17 { pt3dadd( -13.8971, 302.249, -15.7653, 1.03 ) }
    dend_17 { pt3dadd( -13.8084, 303.247, -15.862, 1.03 ) }
    dend_17 { pt3dadd( -13.7002, 305.183, -16.1212, 0.81 ) }
    dend_17 { pt3dadd( -13.6818, 306.353, -16.3159, 0.81 ) }
    dend_17 { pt3dadd( -13.7144, 307.568, -16.5452, 0.96 ) }
    dend_17 { pt3dadd( -13.8089, 309.349, -16.9294, 0.66 ) }
    dend_17 { pt3dadd( -13.8993, 310.635, -17.2392, 0.88 ) }
    dend_17 { pt3dadd( -13.9969, 312.122, -17.5729, 0.88 ) }
    dend_17 { pt3dadd( -14.0907, 313.729, -17.8728, 0.88 ) }
    dend_17 { pt3dadd( -14.1828, 315.544, -18.1271, 1.03 ) }
    dend_17 { pt3dadd( -14.1911, 316.545, -18.2417, 1.03 ) }
    dend_17 { pt3dadd( -14.1634, 317.565, -18.3326, 1.03 ) }
    dend_17 { pt3dadd( -14.0981, 319.339, -18.4426, 0.81 ) }
    dend_17 { pt3dadd( -14.0639, 321.021, -18.4956, 0.81 ) }
    dend_17 { pt3dadd( -14.0682, 322.141, -18.5298, 0.81 ) }
    dend_17 { pt3dadd( -14.1544, 324.443, -18.6009, 0.81 ) }
    dend_17 { pt3dadd( -14.3036, 326.142, -18.6834, 1.25 ) }
    dend_17 { pt3dadd( -14.3875, 326.745, -18.7337, 1.33 ) }
    dend_17 { pt3dadd( -14.5586, 327.754, -18.8578, 1.33 ) }
    dend_17 { pt3dadd( -14.7647, 328.896, -19.0321, 1.18 ) }
    dend_17 { pt3dadd( -14.9311, 329.864, -19.2066, 0.74 ) }
    dend_17 { pt3dadd( -15.183, 331.266, -19.4769, 0.66 ) }
    dend_17 { pt3dadd( -15.3538, 332.387, -19.7191, 0.96 ) }
    dend_17 { pt3dadd( -15.4658, 333.407, -19.9507, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_17 { pt3dadd( -15.5255, 334.303, -20.1284, 0.66 ) }
    dend_17 { pt3dadd( -15.5707, 335.504, -20.2824, 0.66 ) }
    dend_17 { pt3dadd( -15.6246, 337.035, -20.3855, 0.66 ) }
    dend_17 { pt3dadd( -15.6813, 338.238, -20.405, 0.96 ) }
    dend_17 { pt3dadd( -15.7537, 339.183, -20.4169, 0.96 ) }
    dend_17 { pt3dadd( -15.8593, 340.197, -20.4766, 0.74 ) }
    dend_17 { pt3dadd( -16.1127, 342.448, -20.6973, 0.74 ) }
    dend_17 { pt3dadd( -16.2004, 343.179, -20.7858, 0.88 ) }
    dend_17 { pt3dadd( -16.4178, 345.075, -21.0639, 0.96 ) }
    dend_17 { pt3dadd( -16.6234, 346.856, -21.3389, 0.81 ) }
    dend_17 { pt3dadd( -16.8274, 348.686, -21.6389, 0.66 ) }
    dend_17 { pt3dadd( -16.9723, 350.289, -21.9102, 0.81 ) }
    dend_17 { pt3dadd( -17.0729, 351.564, -22.0964, 0.96 ) }
    dend_17 { pt3dadd( -17.1907, 353.487, -22.3091, 0.74 ) }
    dend_17 { pt3dadd( -17.2521, 354.447, -22.377, 1.03 ) }
    dend_17 { pt3dadd( -17.3714, 355.676, -22.3838, 1.03 ) }
    dend_17 { pt3dadd( -17.603, 357.447, -22.3332, 1.33 ) }
    dend_17 { pt3dadd( -17.7799, 358.576, -22.3041, 1.55 ) }
    dend_17 { pt3dadd( -18.0982, 360.421, -22.2684, 0.81 ) }
    dend_17 { pt3dadd( -18.3454, 361.676, -22.2653, 0.66 ) }
    dend_17 { pt3dadd( -18.6145, 362.943, -22.3017, 0.66 ) }
    dend_17 { pt3dadd( -18.8173, 363.862, -22.3667, 0.66 ) }
    dend_17 { pt3dadd( -19.1098, 365.261, -22.5218, 0.66 ) }
    dend_17 { pt3dadd( -19.3077, 366.432, -22.668, 0.66 ) }
    dend_17 { pt3dadd( -19.4841, 367.703, -22.8001, 1.25 ) }
    dend_17 { pt3dadd( -19.5391, 368.275, -22.8535, 1.03 ) }
    dend_17 { pt3dadd( -19.6156, 369.83, -22.9878, 0.81 ) }
    dend_17 { pt3dadd( -19.6488, 371.22, -23.0748, 0.81 ) }
    dend_17 { pt3dadd( -19.6498, 372.751, -23.1527, 0.66 ) }
    dend_17 { pt3dadd( -19.619, 374.044, -23.1877, 0.66 ) }
    dend_17 { pt3dadd( -19.5643, 375.325, -23.1912, 0.96 ) }
    dend_17 { pt3dadd( -19.5084, 376.452, -23.1741, 1.4 ) }
    dend_17 { pt3dadd( -19.4625, 377.356, -23.1465, 1.4 ) }
    dend_17 { pt3dadd( -19.4388, 378.023, -23.1292, 1.4 ) }
    dend_17 { pt3dadd( -19.4315, 379.212, -23.1156, 0.88 ) }
    dend_17 { pt3dadd( -19.4321, 380.684, -23.1107, 0.74 ) }
    dend_17 { pt3dadd( -19.4235, 381.648, -23.1124, 0.74 ) }
    dend_17 { pt3dadd( -19.4059, 383.246, -23.1274, 0.74 ) }
    dend_17 { pt3dadd( -19.3742, 384.601, -23.1457, 0.66 ) }
    dend_17 { pt3dadd( -19.315, 386.124, -23.1743, 0.66 ) }
    dend_17 { pt3dadd( -19.2054, 388.2, -23.229, 0.66 ) }
    dend_17 { pt3dadd( -19.1014, 389.71, -23.2612, 0.74 ) }
    dend_17 { pt3dadd( -19.0165, 390.646, -23.2744, 0.74 ) }
    dend_17 { pt3dadd( -18.8892, 391.755, -23.2811, 0.96 ) }
    dend_17 { pt3dadd( -18.764, 392.746, -23.275, 1.11 ) }
    dend_17 { pt3dadd( -18.6697, 393.489, -23.2722, 1.11 ) }
    dend_17 { pt3dadd( -18.5419, 394.76, -23.285, 0.74 ) }
    dend_17 { pt3dadd( -18.4439, 395.859, -23.3157, 0.59 ) }
    dend_17 { pt3dadd( -18.3244, 397.102, -23.3463, 0.59 ) }
    dend_17 { pt3dadd( -18.1847, 398.287, -23.378, 0.88 ) }
    dend_17 { pt3dadd( -18.1114, 398.871, -23.4032, 1.25 ) }
    dend_17 { pt3dadd( -18.0016, 399.746, -23.4597, 1.4 ) }
    dend_17 { pt3dadd( -17.928, 400.36, -23.5143, 1.4 ) }
    dend_17 { pt3dadd( -17.8406, 401.285, -23.6185, 0.88 ) }
    dend_17 { pt3dadd( -17.7639, 402.397, -23.7673, 0.66 ) }
    dend_17 { pt3dadd( -17.7112, 403.851, -23.9839, 0.66 ) }
    dend_17 { pt3dadd( -17.7025, 404.933, -24.1345, 0.66 ) }
    dend_17 { pt3dadd( -17.7146, 405.661, -24.2319, 0.52 ) }
    dend_17 { pt3dadd( -17.7618, 407.048, -24.4078, 0.81 ) }
    dend_17 { pt3dadd( -17.8087, 408.124, -24.55, 0.81 ) }
    dend_17 { pt3dadd( -17.8551, 409.18, -24.677, 0.66 ) }
    dend_17 { pt3dadd( -17.8943, 410.781, -24.8363, 0.59 ) }
    dend_17 { pt3dadd( -17.9038, 411.666, -24.9037, 0.88 ) }
    dend_17 { pt3dadd( -17.8977, 412.717, -24.9705, 1.11 ) }
    dend_17 { pt3dadd( -17.8782, 413.762, -25.0209, 1.11 ) }
    dend_17 { pt3dadd( -17.8535, 414.599, -25.0515, 1.11 ) }
    dend_17 { pt3dadd( -17.8205, 415.365, -25.0711, 0.88 ) }
    dend_17 { pt3dadd( -17.7574, 416.292, -25.0999, 0.52 ) }
    dend_17 { pt3dadd( -17.6824, 417.227, -25.1236, 0.81 ) }
    dend_17 { pt3dadd( -17.6127, 418.175, -25.1318, 0.81 ) }
    dend_17 { pt3dadd( -17.5861, 418.734, -25.1227, 0.81 ) }
    dend_17 { pt3dadd( -17.5536, 419.734, -25.1021, 0.96 ) }
    dend_17 { pt3dadd( -17.5382, 420.976, -25.0767, 0.59 ) }
    dend_17 { pt3dadd( -17.5334, 421.865, -25.0571, 0.44 ) }
    dend_17 { pt3dadd( -17.5338, 423.161, -25.0095, 0.44 ) }
    dend_17 { pt3dadd( -17.5348, 424.148, -24.9622, 1.11 ) }
    dend_17 { pt3dadd( -17.5401, 424.594, -24.9385, 1.4 ) }
    dend_17 { pt3dadd( -17.5921, 425.555, -24.8816, 1.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 78/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -14.7458, 154.602, -15.3404, 0.29 ) }
    dend_15 { pt3dadd( -15.3657, 155.888, -15.9972, 0.29 ) }
    dend_15 { pt3dadd( -15.8042, 156.993, -16.619, 0.52 ) }
    dend_15 { pt3dadd( -16.0867, 157.779, -17.0916, 0.52 ) }
    dend_15 { pt3dadd( -16.5757, 159.259, -17.9829, 0.66 ) }
    dend_15 { pt3dadd( -16.7578, 159.856, -18.3389, 0.66 ) }
    dend_15 { pt3dadd( -16.9601, 160.469, -18.6534, 0.37 ) }
    dend_15 { pt3dadd( -17.5662, 162.191, -19.2726, 0.29 ) }
    dend_15 { pt3dadd( -17.7844, 162.826, -19.3937, 0.59 ) }
    dend_15 { pt3dadd( -18.0388, 163.606, -19.4505, 0.81 ) }
    dend_15 { pt3dadd( -18.2005, 164.085, -19.4333, 0.81 ) }
    dend_15 { pt3dadd( -18.9304, 166.105, -19.2312, 0.74 ) }
    dend_15 { pt3dadd( -19.3565, 167.182, -19.0702, 0.74 ) }
    dend_15 { pt3dadd( -19.9495, 168.502, -18.8286, 0.44 ) }
    dend_15 { pt3dadd( -20.3481, 169.382, -18.7035, 0.29 ) }
    dend_15 { pt3dadd( -20.7395, 170.266, -18.6302, 0.29 ) }
    dend_15 { pt3dadd( -20.988, 170.861, -18.6248, 0.52 ) }
    dend_15 { pt3dadd( -21.2309, 171.563, -18.6901, 0.52 ) }
    dend_15 { pt3dadd( -21.4888, 172.42, -18.8142, 0.52 ) }
    dend_15 { pt3dadd( -21.8665, 173.792, -19.0742, 0.74 ) }
    dend_15 { pt3dadd( -22.0763, 174.632, -19.2658, 0.96 ) }
    dend_15 { pt3dadd( -22.2104, 175.246, -19.4159, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_15 { pt3dadd( -22.3761, 176.127, -19.6282, 0.59 ) }
    dend_15 { pt3dadd( -22.5415, 177.2, -19.8791, 0.37 ) }
    dend_15 { pt3dadd( -22.61, 178.208, -20.1502, 0.22 ) }
    dend_15 { pt3dadd( -22.6046, 178.883, -20.337, 0.22 ) }
    dend_15 { pt3dadd( -22.5764, 179.521, -20.4967, 0.74 ) }
    dend_15 { pt3dadd( -22.514, 180.455, -20.7233, 1.03 ) }
    dend_15 { pt3dadd( -22.485, 180.951, -20.8422, 1.03 ) }
    dend_15 { pt3dadd( -22.3965, 182.823, -21.2771, 0.44 ) }
    dend_15 { pt3dadd( -22.3223, 184.12, -21.5708, 0.44 ) }
    dend_15 { pt3dadd( -22.2811, 185.29, -21.8026, 0.37 ) }
    dend_15 { pt3dadd( -22.265, 186.35, -21.9939, 0.37 ) }
    dend_15 { pt3dadd( -22.2701, 187.356, -22.1492, 0.37 ) }
    dend_15 { pt3dadd( -22.2991, 188.421, -22.2593, 0.37 ) }
    dend_15 { pt3dadd( -22.3279, 189.451, -22.3029, 0.37 ) }
    dend_15 { pt3dadd( -22.2808, 191.091, -22.3274, 0.88 ) }
    dend_15 { pt3dadd( -22.2154, 191.924, -22.3037, 1.18 ) }
    dend_15 { pt3dadd( -22.1442, 192.544, -22.2648, 1.18 ) }
    dend_15 { pt3dadd( -21.9968, 193.543, -22.1716, 0.74 ) }
    dend_15 { pt3dadd( -21.7951, 194.835, -22.0204, 0.52 ) }
    dend_15 { pt3dadd( -21.6188, 196.04, -21.872, 0.44 ) }
    dend_15 { pt3dadd( -21.4169, 197.378, -21.6947, 0.37 ) }
    dend_15 { pt3dadd( -21.3152, 198.088, -21.5867, 0.37 ) }
    dend_15 { pt3dadd( -21.1696, 199.187, -21.3858, 0.37 ) }
    dend_15 { pt3dadd( -21.016, 200.509, -21.092, 0.59 ) }
    dend_15 { pt3dadd( -20.9399, 201.332, -20.8698, 1.03 ) }
    dend_15 { pt3dadd( -20.8748, 202.099, -20.6393, 1.03 ) }
    dend_15 { pt3dadd( -20.8176, 202.925, -20.3858, 0.96 ) }
    dend_15 { pt3dadd( -20.7906, 204.066, -20.0568, 0.29 ) }
    dend_15 { pt3dadd( -20.7974, 205.121, -19.818, 0.29 ) }
    dend_15 { pt3dadd( -20.8177, 205.72, -19.7285, 0.52 ) }
    dend_15 { pt3dadd( -20.8629, 206.29, -19.6782, 0.52 ) }
    dend_15 { pt3dadd( -20.9456, 206.973, -19.6571, 0.29 ) }
    dend_15 { pt3dadd( -21.0867, 207.914, -19.681, 0.52 ) }
    dend_15 { pt3dadd( -21.2823, 209.05, -19.722, 0.66 ) }
    dend_15 { pt3dadd( -21.4339, 210.028, -19.6992, 0.66 ) }
    dend_15 { pt3dadd( -21.5331, 210.95, -19.6217, 0.52 ) }
    dend_15 { pt3dadd( -21.5689, 211.585, -19.5482, 0.81 ) }
    dend_15 { pt3dadd( -21.5633, 212.301, -19.4778, 1.11 ) }
    dend_15 { pt3dadd( -21.5125, 213.436, -19.4073, 0.15 ) }
    dend_15 { pt3dadd( -21.4446, 214.53, -19.3591, 0.15 ) }
    dend_15 { pt3dadd( -21.3731, 215.291, -19.3382, 0.52 ) }
    dend_15 { pt3dadd( -21.2092, 216.585, -19.3257, 0.59 ) }
    dend_15 { pt3dadd( -20.9997, 218.03, -19.327, 0.29 ) }
    dend_15 { pt3dadd( -20.8376, 219.177, -19.3475, 0.29 ) }
    dend_15 { pt3dadd( -20.7036, 220.13, -19.4005, 0.96 ) }
    dend_15 { pt3dadd( -20.642, 220.655, -19.4363, 0.96 ) }
    dend_15 { pt3dadd( -20.5597, 221.51, -19.4609, 0.59 ) }
    dend_15 { pt3dadd( -20.4784, 222.296, -19.4605, 0.22 ) }
    dend_15 { pt3dadd( -20.3833, 223.409, -19.4407, 0.22 ) }
    dend_15 { pt3dadd( -20.3051, 224.355, -19.4402, 0.88 ) }
    dend_15 { pt3dadd( -20.2757, 224.903, -19.4575, 0.88 ) }
    dend_15 { pt3dadd( -20.2658, 225.584, -19.4977, 0.88 ) }
    dend_15 { pt3dadd( -20.2895, 226.729, -19.6053, 0.29 ) }
    dend_15 { pt3dadd( -20.3695, 227.86, -19.7574, 0.22 ) }
    dend_15 { pt3dadd( -20.4446, 228.352, -19.8356, 0.22 ) }
    dend_15 { pt3dadd( -20.7078, 229.393, -20.0062, 0.81 ) }
    dend_15 { pt3dadd( -20.8721, 229.923, -20.069, 1.11 ) }
    dend_15 { pt3dadd( -20.9737, 230.231, -20.0871, 1.11 ) }
    dend_15 { pt3dadd( -21.1956, 231.13, -20.0772, 0.88 ) }
    dend_15 { pt3dadd( -21.3172, 232.021, -20.0355, 0.59 ) }
    dend_15 { pt3dadd( -21.3781, 233.058, -19.9622, 0.29 ) }
    dend_15 { pt3dadd( -21.389, 234.529, -19.838, 0.29 ) }
    dend_15 { pt3dadd( -21.3833, 235.712, -19.7501, 0.74 ) }
    dend_15 { pt3dadd( -21.3438, 237.556, -19.686, 0.52 ) }
    dend_15 { pt3dadd( -21.2855, 238.705, -19.7092, 1.03 ) }
    dend_15 { pt3dadd( -21.2227, 239.612, -19.7916, 1.03 ) }
    dend_15 { pt3dadd( -21.1992, 240.177, -19.8911, 0.74 ) }
    dend_15 { pt3dadd( -21.2257, 241.379, -20.2535, 0.44 ) }
    dend_15 { pt3dadd( -21.3745, 242.607, -20.7158, 0.88 ) }
    dend_15 { pt3dadd( -21.53, 243.386, -21.0173, 1.18 ) }
    dend_15 { pt3dadd( -21.6016, 243.774, -21.1711, 1.18 ) }
    dend_15 { pt3dadd( -21.744, 244.66, -21.5022, 0.59 ) }
    dend_15 { pt3dadd( -21.9095, 245.985, -21.9381, 0.29 ) }
    dend_15 { pt3dadd( -22.0402, 247.364, -22.3101, 0.81 ) }
    dend_15 { pt3dadd( -22.1664, 248.692, -22.599, 0.52 ) }
    dend_15 { pt3dadd( -22.2522, 249.561, -22.7735, 0.52 ) }
    dend_15 { pt3dadd( -22.3324, 250.416, -22.9462, 0.74 ) }
    dend_15 { pt3dadd( -22.45, 251.483, -23.1623, 0.74 ) }
    dend_15 { pt3dadd( -22.6327, 252.66, -23.3926, 0.22 ) }
    dend_15 { pt3dadd( -22.7181, 253.087, -23.4992, 0.22 ) }
    dend_15 { pt3dadd( -22.8808, 253.746, -23.6866, 0.52 ) }
    dend_15 { pt3dadd( -23.0083, 254.212, -23.8094, 0.52 ) }
    dend_15 { pt3dadd( -23.2352, 255.114, -24.0414, 0.29 ) }
    dend_15 { pt3dadd( -23.4113, 255.884, -24.2287, 0.29 ) }
    dend_15 { pt3dadd( -23.6052, 256.838, -24.4502, 1.03 ) }
    dend_15 { pt3dadd( -23.748, 257.649, -24.6146, 1.03 ) }
    dend_15 { pt3dadd( -23.8461, 258.212, -24.7044, 1.03 ) }
    dend_15 { pt3dadd( -23.9904, 259.039, -24.7888, 0.52 ) }
    dend_15 { pt3dadd( -24.1007, 259.732, -24.8107, 0.29 ) }
    dend_15 { pt3dadd( -24.2279, 260.443, -24.7919, 0.59 ) }
    dend_15 { pt3dadd( -24.324, 260.921, -24.7397, 0.59 ) }
    dend_15 { pt3dadd( -24.5131, 261.917, -24.5769, 0.22 ) }
    dend_15 { pt3dadd( -24.6854, 262.922, -24.3756, 0.81 ) }
    dend_15 { pt3dadd( -24.7772, 263.581, -24.2214, 1.03 ) }
    dend_15 { pt3dadd( -24.8006, 263.814, -24.1634, 1.03 ) }
    dend_15 { pt3dadd( -24.8868, 264.798, -23.9302, 0.59 ) }
    dend_15 { pt3dadd( -24.9844, 265.773, -23.7288, 0.37 ) }
    dend_15 { pt3dadd( -25.0646, 266.319, -23.6351, 0.37 ) }
    dend_15 { pt3dadd( -25.2282, 267.051, -23.5497, 0.66 ) }
    dend_15 { pt3dadd( -25.362, 267.513, -23.5133, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_15 { pt3dadd( -25.8196, 268.812, -23.4891, 0.29 ) }
    dend_15 { pt3dadd( -26.0725, 269.441, -23.5187, 0.29 ) }
    dend_15 { pt3dadd( -26.4933, 270.425, -23.6031, 0.74 ) }
    dend_15 { pt3dadd( -26.8159, 271.173, -23.672, 0.74 ) }
    dend_15 { pt3dadd( -27.1668, 271.986, -23.7408, 0.74 ) }
    dend_15 { pt3dadd( -27.6279, 273.091, -23.8046, 0.29 ) }
    dend_15 { pt3dadd( -28.0162, 274.079, -23.8286, 0.29 ) }
    dend_15 { pt3dadd( -28.508, 275.523, -23.7727, 1.33 ) }
    dend_15 { pt3dadd( -28.7192, 276.252, -23.6796, 1.33 ) }
    dend_15 { pt3dadd( -28.9629, 277.291, -23.4815, 1.11 ) }
    dend_15 { pt3dadd( -29.1214, 278.174, -23.2565, 0.59 ) }
    dend_15 { pt3dadd( -29.2033, 279.122, -22.9611, 0.44 ) }
    dend_15 { pt3dadd( -29.1722, 281.029, -22.3614, 0.29 ) }
    dend_15 { pt3dadd( -28.9886, 282.394, -21.9458, 0.74 ) }
    dend_15 { pt3dadd( -28.8106, 283.189, -21.7473, 0.81 ) }
    dend_15 { pt3dadd( -28.6074, 283.867, -21.625, 0.44 ) }
    dend_15 { pt3dadd( -28.1497, 285.187, -21.4845, 0.22 ) }
    dend_15 { pt3dadd( -27.7133, 286.339, -21.4371, 0.81 ) }
    dend_15 { pt3dadd( -27.4951, 286.865, -21.4488, 0.81 ) }
    dend_15 { pt3dadd( -27.0446, 287.934, -21.5152, 0.22 ) }
    dend_15 { pt3dadd( -26.7155, 288.777, -21.5597, 0.22 ) }
    dend_15 { pt3dadd( -26.3375, 289.805, -21.6191, 0.81 ) }
    dend_15 { pt3dadd( -26.2436, 290.097, -21.628, 0.81 ) }
    dend_15 { pt3dadd( -25.9295, 291.114, -21.6202, 0.29 ) }
    dend_15 { pt3dadd( -25.6713, 291.951, -21.5898, 0.88 ) }
    dend_15 { pt3dadd( -25.3769, 292.882, -21.5081, 0.88 ) }
    dend_15 { pt3dadd( -24.9457, 294.328, -21.3436, 0.22 ) }
    dend_15 { pt3dadd( -24.6959, 295.34, -21.2263, 0.74 ) }
    dend_15 { pt3dadd( -24.6359, 295.664, -21.1886, 0.88 ) }
    dend_15 { pt3dadd( -24.5095, 296.793, -21.0999, 0.15 ) }
    dend_15 { pt3dadd( -24.4526, 297.723, -21.0435, 0.52 ) }
    dend_15 { pt3dadd( -24.4333, 298.537, -21.0092, 0.22 ) }
    dend_15 { pt3dadd( -24.4252, 299.346, -21.01, 0.66 ) }
    dend_15 { pt3dadd( -24.4192, 299.752, -21.0348, 0.88 ) }
    dend_15 { pt3dadd( -24.4135, 301.398, -21.2365, 0.22 ) }
    dend_15 { pt3dadd( -24.4233, 301.895, -21.3252, 0.59 ) }
    dend_15 { pt3dadd( -24.4463, 302.601, -21.4821, 0.44 ) }
    dend_15 { pt3dadd( -24.5074, 303.572, -21.7009, 0.22 ) }
    dend_15 { pt3dadd( -24.5643, 304.162, -21.8224, 0.37 ) }
    dend_15 { pt3dadd( -24.7174, 305.201, -22.0105, 0.15 ) }
    dend_15 { pt3dadd( -24.9312, 306.209, -22.1587, 0.81 ) }
    dend_15 { pt3dadd( -25.0732, 306.795, -22.2309, 1.11 ) }
    dend_15 { pt3dadd( -25.3152, 307.708, -22.3134, 1.03 ) }
    dend_15 { pt3dadd( -25.5524, 308.563, -22.3588, 0.29 ) }
    dend_15 { pt3dadd( -25.7773, 309.411, -22.398, 0.29 ) }
    dend_15 { pt3dadd( -25.9816, 310.186, -22.4428, 0.29 ) }
    dend_15 { pt3dadd( -26.338, 311.575, -22.5421, 0.22 ) }
    dend_15 { pt3dadd( -26.553, 312.423, -22.6151, 0.74 ) }
    dend_15 { pt3dadd( -27.0062, 314.283, -22.8145, 0.22 ) }
    dend_15 { pt3dadd( -27.2843, 315.395, -22.9513, 0.81 ) }
    dend_15 { pt3dadd( -27.8659, 317.677, -23.2587, 0.22 ) }
    dend_15 { pt3dadd( -27.9682, 318.077, -23.3148, 0.22 ) }
    dend_15 { pt3dadd( -28.1773, 318.91, -23.4298, 0.81 ) }
    dend_15 { pt3dadd( -28.2501, 319.219, -23.4643, 1.03 ) }
    dend_15 { pt3dadd( -28.4177, 319.951, -23.5219, 0.22 ) }
    dend_15 { pt3dadd( -28.5881, 320.644, -23.5489, 0.44 ) }
    dend_15 { pt3dadd( -28.8088, 321.517, -23.5491, 0.22 ) }
    dend_15 { pt3dadd( -28.9775, 322.182, -23.5396, 0.44 ) }
    dend_15 { pt3dadd( -29.1926, 323.026, -23.5122, 0.22 ) }
    dend_15 { pt3dadd( -29.4196, 323.856, -23.4888, 0.44 ) }
    dend_15 { pt3dadd( -29.6882, 324.716, -23.4715, 0.59 ) }
    dend_15 { pt3dadd( -29.9867, 325.621, -23.5081, 0.29 ) }
    dend_15 { pt3dadd( -30.3757, 326.789, -23.6449, 0.44 ) }
    dend_15 { pt3dadd( -30.7871, 327.99, -23.8609, 0.44 ) }
    dend_15 { pt3dadd( -31.3445, 329.646, -24.2226, 0.81 ) }
    dend_15 { pt3dadd( -31.6078, 330.569, -24.4625, 0.96 ) }
    dend_15 { pt3dadd( -31.8863, 331.805, -24.8498, 0.66 ) }
    dend_15 { pt3dadd( -32.2265, 333.382, -25.469, 0.29 ) }
    dend_15 { pt3dadd( -32.3301, 333.887, -25.7126, 0.44 ) }
    dend_15 { pt3dadd( -32.4718, 334.72, -26.1688, 0.15 ) }
    dend_15 { pt3dadd( -32.6133, 335.898, -26.8822, 0.44 ) }
    dend_15 { pt3dadd( -32.6771, 336.737, -27.3926, 0.44 ) }
    dend_15 { pt3dadd( -32.7522, 337.641, -27.9035, 0.15 ) }
    dend_15 { pt3dadd( -32.7652, 337.977, -28.1142, 0.74 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 74/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -14.7458, 154.602, -15.3404, 0.22 ) }
    dend_14 { pt3dadd( -13.8051, 155.857, -15.5261, 0.22 ) }
    dend_14 { pt3dadd( -13.3233, 156.404, -15.5568, 0.22 ) }
    dend_14 { pt3dadd( -12.8573, 156.934, -15.5865, 0.22 ) }
    dend_14 { pt3dadd( -12.3701, 157.488, -15.6176, 0.22 ) }
    dend_14 { pt3dadd( -11.981, 157.931, -15.6424, 0.44 ) }
    dend_14 { pt3dadd( -11.2331, 158.781, -15.69, 0.74 ) }
    dend_14 { pt3dadd( -10.726, 159.412, -15.6579, 0.88 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 82/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -50.2909, 92.6239, -15.8664, 0.29 ) }
    dend_10 { pt3dadd( -51.1204, 92.222, -16.7977, 0.29 ) }
    dend_10 { pt3dadd( -51.6209, 91.9796, -17.3597, 0.29 ) }
    dend_10 { pt3dadd( -52.3586, 91.6222, -18.1879, 0.29 ) }
    dend_10 { pt3dadd( -53.171, 91.2286, -19.1001, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 87/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -50.2909, 92.6239, -15.8664, 0.22 ) }
    dend_9 { pt3dadd( -51.371, 94.2986, -16.2708, 0.22 ) }
    dend_9 { pt3dadd( -51.9293, 95.1643, -16.4798, 0.66 ) }
    dend_9 { pt3dadd( -52.179, 95.5515, -16.5733, 0.66 ) }
    dend_9 { pt3dadd( -52.65, 96.2817, -16.7496, 0.29 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 92/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -180.707, 4.31925, -106.83, 0.22 ) }
    dend_53 { pt3dadd( -180.481, 6.22415, -108.02, 0.22 ) }
    dend_53 { pt3dadd( -180.427, 6.68453, -108.307, 0.22 ) }
    dend_53 { pt3dadd( -180.321, 7.57361, -108.863, 0.88 ) }
    dend_53 { pt3dadd( -180.287, 7.85972, -109.041, 0.66 ) }
    dend_53 { pt3dadd( -180.258, 8.1063, -109.195, 0.66 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 98/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -180.707, 4.31925, -106.83, 0.22 ) }
    dend_52 { pt3dadd( -181.453, 5.33294, -107.264, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_52 { pt3dadd( -181.797, 5.69077, -107.444, 0.44 ) }
    dend_52 { pt3dadd( -182.499, 6.3181, -107.801, 0.22 ) }
    dend_52 { pt3dadd( -182.776, 6.54888, -107.934, 0.59 ) }
    dend_52 { pt3dadd( -183.523, 7.17734, -108.272, 0.29 ) }
    dend_52 { pt3dadd( -184.449, 7.957, -108.691, 0.29 ) }
    dend_52 { pt3dadd( -184.971, 8.33037, -108.914, 0.29 ) }
    dend_52 { pt3dadd( -185.401, 8.58773, -109.101, 0.59 ) }
    dend_52 { pt3dadd( -186.041, 8.89355, -109.387, 0.22 ) }
    dend_52 { pt3dadd( -186.574, 9.13367, -109.617, 0.44 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 9/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -133.217, -81.9256, -45.034, 0.37 ) }
    dend_48 { pt3dadd( -133.419, -82.899, -45.8585, 0.37 ) }
    dend_48 { pt3dadd( -133.538, -83.5816, -46.4268, 0.15 ) }
    dend_48 { pt3dadd( -133.602, -84.1633, -46.8764, 0.44 ) }
    dend_48 { pt3dadd( -133.644, -84.6697, -47.2475, 0.44 ) }
    dend_48 { pt3dadd( -133.693, -85.3929, -47.7571, 0.22 ) }
    dend_48 { pt3dadd( -133.734, -86.0176, -48.175, 1.03 ) }
    dend_48 { pt3dadd( -133.744, -86.2694, -48.3146, 1.03 ) }
    dend_48 { pt3dadd( -133.769, -87.2037, -48.7433, 0.29 ) }
    dend_48 { pt3dadd( -133.794, -87.8469, -48.9991, 1.03 ) }
    dend_48 { pt3dadd( -133.828, -88.4738, -49.1988, 1.03 ) }
    dend_48 { pt3dadd( -133.875, -89.1152, -49.3614, 0.29 ) }
    dend_48 { pt3dadd( -133.945, -90.0007, -49.5384, 0.29 ) }
    dend_48 { pt3dadd( -133.984, -90.506, -49.6111, 0.81 ) }
    dend_48 { pt3dadd( -134.03, -91.0082, -49.6556, 0.52 ) }
    dend_48 { pt3dadd( -134.139, -92.1524, -49.7205, 0.29 ) }
    dend_48 { pt3dadd( -134.238, -93.1092, -49.7526, 0.74 ) }
    dend_48 { pt3dadd( -134.296, -93.6675, -49.7367, 1.03 ) }
    dend_48 { pt3dadd( -134.424, -94.8679, -49.6468, 0.22 ) }
    dend_48 { pt3dadd( -134.485, -95.4175, -49.5796, 0.22 ) }
    dend_48 { pt3dadd( -134.52, -95.7052, -49.5282, 0.59 ) }
    dend_48 { pt3dadd( -134.551, -95.9231, -49.4848, 0.59 ) }
    dend_48 { pt3dadd( -134.739, -97.2168, -49.2411, 0.59 ) }
    dend_48 { pt3dadd( -134.844, -97.8583, -49.1798, 0.37 ) }
    dend_48 { pt3dadd( -135.029, -98.8461, -49.1532, 1.25 ) }
    dend_48 { pt3dadd( -135.097, -99.2084, -49.159, 1.47 ) }
    dend_48 { pt3dadd( -135.289, -100.148, -49.2064, 0.37 ) }
    dend_48 { pt3dadd( -135.443, -100.758, -49.2695, 1.03 ) }
    dend_48 { pt3dadd( -135.769, -101.799, -49.4486, 0.29 ) }
    dend_48 { pt3dadd( -135.929, -102.25, -49.521, 0.44 ) }
    dend_48 { pt3dadd( -136.021, -102.548, -49.5503, 0.66 ) }
    dend_48 { pt3dadd( -136.1, -102.866, -49.5649, 0.52 ) }
    dend_48 { pt3dadd( -136.231, -103.543, -49.5227, 0.29 ) }
    dend_48 { pt3dadd( -136.309, -104.183, -49.4152, 0.74 ) }
    dend_48 { pt3dadd( -136.309, -104.457, -49.3311, 0.74 ) }
    dend_48 { pt3dadd( -136.239, -105.796, -48.8956, 0.22 ) }
    dend_48 { pt3dadd( -136.201, -106.134, -48.7868, 0.44 ) }
    dend_48 { pt3dadd( -136.123, -106.55, -48.6415, 0.59 ) }
    dend_48 { pt3dadd( -135.969, -107.258, -48.371, 0.37 ) }
    dend_48 { pt3dadd( -135.794, -108.097, -48.0482, 0.74 ) }
    dend_48 { pt3dadd( -135.724, -108.542, -47.8806, 0.74 ) }
    dend_48 { pt3dadd( -135.679, -109.146, -47.6761, 0.29 ) }
    dend_48 { pt3dadd( -135.647, -110.183, -47.3631, 1.03 ) }
    dend_48 { pt3dadd( -135.667, -111.179, -47.1253, 0.22 ) }
    dend_48 { pt3dadd( -135.703, -111.581, -47.0471, 0.88 ) }
    dend_48 { pt3dadd( -135.885, -112.727, -46.9026, 0.29 ) }
    dend_48 { pt3dadd( -136.029, -113.431, -46.8366, 0.15 ) }
    dend_48 { pt3dadd( -136.17, -113.951, -46.8147, 0.74 ) }
    dend_48 { pt3dadd( -136.447, -114.709, -46.8549, 1.03 ) }
    dend_48 { pt3dadd( -136.671, -115.23, -46.9213, 1.11 ) }
    dend_48 { pt3dadd( -137.138, -116.196, -47.0904, 0.22 ) }
    dend_48 { pt3dadd( -137.265, -116.439, -47.1487, 0.59 ) }
    dend_48 { pt3dadd( -137.364, -116.633, -47.2035, 0.59 ) }
    dend_48 { pt3dadd( -137.87, -117.656, -47.523, 0.22 ) }
    dend_48 { pt3dadd( -138.025, -118.017, -47.6454, 0.74 ) }
    dend_48 { pt3dadd( -138.144, -118.424, -47.7705, 0.74 ) }
    dend_48 { pt3dadd( -138.218, -119.156, -47.9403, 0.22 ) }
    dend_48 { pt3dadd( -138.167, -119.988, -48.1104, 0.59 ) }
    dend_48 { pt3dadd( -138.106, -120.318, -48.1825, 0.74 ) }
    dend_48 { pt3dadd( -137.882, -121.078, -48.3667, 0.22 ) }
    dend_48 { pt3dadd( -137.557, -121.996, -48.5719, 0.88 ) }
    dend_48 { pt3dadd( -137.123, -123.015, -48.7875, 0.15 ) }
    dend_48 { pt3dadd( -136.94, -123.365, -48.851, 0.15 ) }
    dend_48 { pt3dadd( -136.601, -123.933, -48.9133, 0.74 ) }
    dend_48 { pt3dadd( -136.361, -124.318, -48.9526, 0.74 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 74/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -133.217, -81.9256, -45.034, 0.29 ) }
    dend_47 { pt3dadd( -133.879, -81.4471, -44.2594, 0.29 ) }
    dend_47 { pt3dadd( -134.486, -81.1166, -43.6044, 0.29 ) }
    dend_47 { pt3dadd( -135.102, -80.8563, -42.9007, 0.29 ) }
    dend_47 { pt3dadd( -135.402, -80.7494, -42.5489, 0.29 ) }
    dend_47 { pt3dadd( -136.071, -80.5536, -41.7493, 0.52 ) }
    dend_47 { pt3dadd( -136.511, -80.466, -41.2352, 0.74 ) }
    dend_47 { pt3dadd( -136.93, -80.4386, -40.7187, 0.37 ) }
    dend_47 { pt3dadd( -137.493, -80.4659, -40.0502, 0.66 ) }
    dend_47 { pt3dadd( -137.723, -80.5031, -39.8048, 1.03 ) }
    dend_47 { pt3dadd( -138.257, -80.6589, -39.2524, 1.03 ) }
    dend_47 { pt3dadd( -138.98, -80.9832, -38.5111, 0.22 ) }
    dend_47 { pt3dadd( -139.422, -81.2382, -38.0479, 0.22 ) }
    dend_47 { pt3dadd( -139.834, -81.5979, -37.5402, 0.44 ) }
    dend_47 { pt3dadd( -140.074, -81.8713, -37.2073, 0.44 ) }
    dend_47 { pt3dadd( -140.404, -82.3357, -36.6783, 0.29 ) }
    dend_47 { pt3dadd( -140.665, -82.8052, -36.1978, 1.11 ) }
    dend_47 { pt3dadd( -140.785, -83.0651, -35.9539, 1.25 ) }
    dend_47 { pt3dadd( -141.245, -84.2123, -34.9775, 0.66 ) }
    dend_47 { pt3dadd( -141.483, -84.8865, -34.4392, 0.22 ) }
    dend_47 { pt3dadd( -141.605, -85.2957, -34.1346, 0.22 ) }
    dend_47 { pt3dadd( -141.721, -85.8131, -33.7851, 0.22 ) }
    dend_47 { pt3dadd( -141.816, -86.2874, -33.5104, 0.81 ) }
    dend_47 { pt3dadd( -141.899, -86.6805, -33.3119, 0.81 ) }
    dend_47 { pt3dadd( -142.007, -87.1297, -33.1313, 0.29 ) }
    dend_47 { pt3dadd( -142.197, -87.8258, -32.8637, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_47 { pt3dadd( -142.556, -88.8457, -32.4394, 0.22 ) }
    dend_47 { pt3dadd( -142.734, -89.2117, -32.2638, 0.52 ) }
    dend_47 { pt3dadd( -143.04, -89.7223, -31.9939, 0.29 ) }
    dend_47 { pt3dadd( -143.293, -90.0665, -31.8064, 0.66 ) }
    dend_47 { pt3dadd( -143.844, -90.6837, -31.4733, 0.29 ) }
    dend_47 { pt3dadd( -144.141, -90.9803, -31.3467, 0.96 ) }
    dend_47 { pt3dadd( -144.332, -91.1621, -31.2811, 0.96 ) }
    dend_47 { pt3dadd( -144.997, -91.8154, -31.047, 0.29 ) }
    dend_47 { pt3dadd( -145.379, -92.2262, -30.8809, 1.33 ) }
    dend_47 { pt3dadd( -145.734, -92.6273, -30.6871, 1.55 ) }
    dend_47 { pt3dadd( -146.313, -93.2811, -30.2942, 0.29 ) }
    dend_47 { pt3dadd( -146.594, -93.5972, -30.0623, 0.29 ) }
    dend_47 { pt3dadd( -146.96, -94.0264, -29.7024, 0.52 ) }
    dend_47 { pt3dadd( -147.422, -94.5394, -29.2185, 0.96 ) }
    dend_47 { pt3dadd( -147.726, -94.8892, -28.8538, 0.44 ) }
    dend_47 { pt3dadd( -148.078, -95.3343, -28.3527, 0.29 ) }
    dend_47 { pt3dadd( -148.489, -95.898, -27.6442, 0.88 ) }
    dend_47 { pt3dadd( -148.741, -96.3022, -27.1715, 0.96 ) }
    // Section: dend_45, id: dend_45, parent: dend_39 (entry count 18/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -128.782, -74.6693, -37.3988, 0.29 ) }
    dend_45 { pt3dadd( -129.459, -75.4268, -37.6701, 0.29 ) }
    dend_45 { pt3dadd( -130.094, -76.3629, -37.7054, 0.29 ) }
    dend_45 { pt3dadd( -130.594, -77.1606, -37.5943, 0.81 ) }
    dend_45 { pt3dadd( -131.014, -77.8257, -37.405, 0.81 ) }
    dend_45 { pt3dadd( -131.449, -78.4998, -37.0732, 0.37 ) }
    dend_45 { pt3dadd( -132.411, -79.9374, -36.0008, 0.37 ) }
    dend_45 { pt3dadd( -132.802, -80.4974, -35.2631, 0.59 ) }
    dend_45 { pt3dadd( -133.059, -80.8205, -34.6973, 0.88 ) }
    dend_45 { pt3dadd( -133.348, -81.1501, -34.0129, 0.88 ) }
    dend_45 { pt3dadd( -133.812, -81.6693, -32.8351, 1.03 ) }
    dend_45 { pt3dadd( -134.192, -82.121, -31.8074, 1.03 ) }
    dend_45 { pt3dadd( -134.633, -82.7594, -30.4612, 0.59 ) }
    dend_45 { pt3dadd( -134.844, -83.276, -29.5412, 0.37 ) }
    dend_45 { pt3dadd( -134.976, -84.0627, -28.4288, 0.37 ) }
    dend_45 { pt3dadd( -134.997, -84.9068, -27.4948, 0.66 ) }
    dend_45 { pt3dadd( -134.967, -85.6447, -26.8583, 0.96 ) }
    dend_45 { pt3dadd( -134.862, -87.0848, -25.8166, 1.03 ) }
    dend_45 { pt3dadd( -134.763, -88.1883, -25.0857, 0.44 ) }
    dend_45 { pt3dadd( -134.695, -89.0624, -24.4841, 0.44 ) }
    dend_45 { pt3dadd( -134.657, -89.6106, -24.1099, 0.66 ) }
    dend_45 { pt3dadd( -134.624, -90.209, -23.6846, 0.88 ) }
    dend_45 { pt3dadd( -134.485, -90.8856, -23.0248, 0.88 ) }
    dend_45 { pt3dadd( -134.168, -91.6453, -22.0926, 0.44 ) }
    dend_45 { pt3dadd( -133.759, -92.2641, -21.1838, 0.74 ) }
    dend_45 { pt3dadd( -133.304, -92.7693, -20.3972, 0.74 ) }
    dend_45 { pt3dadd( -132.665, -93.3172, -19.5326, 1.03 ) }
    dend_45 { pt3dadd( -130.587, -94.7368, -17.2102, 0.44 ) }
    dend_45 { pt3dadd( -129.963, -95.0715, -16.6291, 0.44 ) }
    dend_45 { pt3dadd( -129.664, -95.189, -16.3829, 0.74 ) }
    dend_45 { pt3dadd( -128.788, -95.4479, -15.6998, 0.74 ) }
    dend_45 { pt3dadd( -127.911, -95.6237, -14.9948, 0.66 ) }
    dend_45 { pt3dadd( -127.371, -95.646, -14.5558, 0.52 ) }
    dend_45 { pt3dadd( -126.77, -95.5643, -14.0865, 0.52 ) }
    dend_45 { pt3dadd( -125.459, -95.0485, -12.8045, 1.03 ) }
    dend_45 { pt3dadd( -124.713, -94.4079, -11.8577, 0.22 ) }
    dend_45 { pt3dadd( -124.528, -93.7639, -11.2835, 0.22 ) }
    dend_45 { pt3dadd( -124.775, -92.4181, -10.3784, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 56/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -128.782, -74.6693, -37.3988, 0.29 ) }
    dend_40 { pt3dadd( -130.433, -73.8552, -36.7515, 0.29 ) }
    dend_40 { pt3dadd( -131.121, -73.559, -36.3367, 0.29 ) }
    dend_40 { pt3dadd( -131.577, -73.3652, -35.9245, 0.66 ) }
    dend_40 { pt3dadd( -132.064, -73.1502, -35.4252, 0.66 ) }
    dend_40 { pt3dadd( -132.669, -72.9035, -34.7774, 0.44 ) }
    dend_40 { pt3dadd( -133.263, -72.6614, -34.1415, 0.29 ) }
    dend_40 { pt3dadd( -134.383, -72.284, -32.8321, 0.59 ) }
    dend_40 { pt3dadd( -135.238, -72.0086, -31.6398, 1.03 ) }
    dend_40 { pt3dadd( -135.862, -71.8045, -30.6101, 1.4 ) }
    dend_40 { pt3dadd( -136.099, -71.7267, -30.1304, 1.4 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 67/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 63.8633, -91.7957, -60.204, 0.81 ) }
    dend_35 { pt3dadd( 64.4192, -92.2738, -61.1524, 0.81 ) }
    dend_35 { pt3dadd( 64.7266, -92.5386, -61.634, 1.11 ) }
    dend_35 { pt3dadd( 66.3936, -93.8634, -64.0099, 0.44 ) }
    dend_35 { pt3dadd( 66.7042, -94.0747, -64.4141, 0.29 ) }
    dend_35 { pt3dadd( 67.1011, -94.3041, -64.8857, 0.29 ) }
    dend_35 { pt3dadd( 67.8105, -94.6758, -65.6937, 0.29 ) }
    dend_35 { pt3dadd( 68.3197, -94.8602, -66.2745, 0.59 ) }
    dend_35 { pt3dadd( 68.6408, -94.9744, -66.7665, 0.74 ) }
    dend_35 { pt3dadd( 69.0209, -95.0914, -67.3691, 0.37 ) }
    dend_35 { pt3dadd( 69.4298, -95.1773, -68.0883, 0.81 ) }
    dend_35 { pt3dadd( 69.6404, -95.1986, -68.4721, 0.96 ) }
    dend_35 { pt3dadd( 70.4467, -95.2259, -70.0019, 1.4 ) }
    dend_35 { pt3dadd( 71.8569, -95.1747, -73.233, 0.74 ) }
    dend_35 { pt3dadd( 72.2136, -95.1395, -74.142, 0.29 ) }
    dend_35 { pt3dadd( 72.5371, -95.0945, -75.012, 0.29 ) }
    dend_35 { pt3dadd( 72.7238, -95.0568, -75.5172, 0.66 ) }
    dend_35 { pt3dadd( 73.5032, -94.8739, -77.4878, 1.69 ) }
    dend_35 { pt3dadd( 74.9894, -94.4948, -80.849, 1.18 ) }
    dend_35 { pt3dadd( 76.0655, -94.2511, -83.0032, 0.74 ) }
    dend_35 { pt3dadd( 76.6542, -94.1807, -84.1455, 1.47 ) }
    dend_35 { pt3dadd( 76.8855, -94.1878, -84.5623, 1.47 ) }
    dend_35 { pt3dadd( 77.5018, -94.2955, -85.576, 0.29 ) }
    dend_35 { pt3dadd( 78.2558, -94.5846, -86.5405, 0.29 ) }
    dend_35 { pt3dadd( 79.0394, -95.1277, -87.1895, 1.11 ) }
    dend_35 { pt3dadd( 79.7516, -95.8309, -87.651, 0.29 ) }
    dend_35 { pt3dadd( 80.1967, -96.3825, -87.8999, 1.25 ) }
    dend_35 { pt3dadd( 80.4454, -96.7272, -88.0365, 1.25 ) }
    dend_35 { pt3dadd( 80.9708, -97.518, -88.3245, 0.15 ) }
    dend_35 { pt3dadd( 81.2975, -97.9459, -88.498, 0.59 ) }
    dend_35 { pt3dadd( 81.5189, -98.1447, -88.6195, 0.59 ) }
    dend_35 { pt3dadd( 82.1588, -98.5649, -88.9952, 0.22 ) }
    dend_35 { pt3dadd( 82.911, -98.9568, -89.43, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_35 { pt3dadd( 83.4182, -99.1732, -89.7171, 1.84 ) }
    dend_35 { pt3dadd( 84.5087, -99.553, -90.3115, 0.22 ) }
    dend_35 { pt3dadd( 85.1991, -99.7766, -90.654, 0.59 ) }
    dend_35 { pt3dadd( 86.033, -100.061, -91.0311, 0.22 ) }
    dend_35 { pt3dadd( 86.6854, -100.31, -91.298, 0.22 ) }
    dend_35 { pt3dadd( 87.3719, -100.645, -91.5329, 0.88 ) }
    dend_35 { pt3dadd( 87.7485, -100.862, -91.6433, 1.11 ) }
    dend_35 { pt3dadd( 88.795, -101.551, -91.9022, 0.22 ) }
    dend_35 { pt3dadd( 89.339, -101.931, -92.014, 1.33 ) }
    dend_35 { pt3dadd( 89.634, -102.148, -92.0747, 1.55 ) }
    dend_35 { pt3dadd( 90.4378, -102.817, -92.2392, 0.22 ) }
    dend_35 { pt3dadd( 90.9489, -103.289, -92.3426, 0.66 ) }
    dend_35 { pt3dadd( 91.2064, -103.552, -92.4007, 0.66 ) }
    dend_35 { pt3dadd( 91.7213, -104.132, -92.541, 0.22 ) }
    dend_35 { pt3dadd( 92.1831, -104.672, -92.6878, 0.44 ) }
    dend_35 { pt3dadd( 92.5545, -105.121, -92.8249, 0.22 ) }
    dend_35 { pt3dadd( 92.9103, -105.549, -92.9779, 0.96 ) }
    dend_35 { pt3dadd( 93.1912, -105.883, -93.0748, 1.18 ) }
    dend_35 { pt3dadd( 94.1337, -107.026, -93.3292, 0.15 ) }
    dend_35 { pt3dadd( 94.5209, -107.484, -93.4033, 0.96 ) }
    dend_35 { pt3dadd( 94.8034, -107.802, -93.476, 0.96 ) }
    dend_35 { pt3dadd( 95.3141, -108.366, -93.6331, 0.15 ) }
    dend_35 { pt3dadd( 96.3291, -109.502, -93.9972, 0.81 ) }
    dend_35 { pt3dadd( 96.8468, -110.06, -94.2323, 0.81 ) }
    dend_35 { pt3dadd( 97.5396, -110.757, -94.607, 0.29 ) }
    dend_35 { pt3dadd( 98.6773, -111.801, -95.3089, 0.44 ) }
    dend_35 { pt3dadd( 99.1243, -112.16, -95.6076, 0.81 ) }
    dend_35 { pt3dadd( 99.4731, -112.381, -95.8552, 0.81 ) }
    dend_35 { pt3dadd( 100.324, -112.77, -96.541, 0.37 ) }
    dend_35 { pt3dadd( 100.901, -112.954, -96.9918, 0.29 ) }
    dend_35 { pt3dadd( 101.534, -113.106, -97.438, 0.59 ) }
    dend_35 { pt3dadd( 102.18, -113.243, -97.8391, 0.44 ) }
    dend_35 { pt3dadd( 103.009, -113.395, -98.3377, 0.29 ) }
    dend_35 { pt3dadd( 104.046, -113.57, -98.9249, 0.59 ) }
    dend_35 { pt3dadd( 104.686, -113.669, -99.3147, 0.59 ) }
    dend_35 { pt3dadd( 105.244, -113.742, -99.6918, 0.29 ) }
    dend_35 { pt3dadd( 106.162, -113.833, -100.341, 0.29 ) }
    dend_35 { pt3dadd( 106.712, -113.881, -100.749, 0.29 ) }
    dend_35 { pt3dadd( 107.189, -113.928, -101.071, 0.74 ) }
    dend_35 { pt3dadd( 108.366, -114.035, -101.781, 0.74 ) }
    dend_35 { pt3dadd( 108.896, -114.093, -102.092, 0.37 ) }
    dend_35 { pt3dadd( 109.233, -114.135, -102.284, 1.03 ) }
    dend_35 { pt3dadd( 109.719, -114.197, -102.547, 1.03 ) }
    dend_35 { pt3dadd( 110.707, -114.371, -103.086, 0.29 ) }
    dend_35 { pt3dadd( 112.17, -114.715, -103.846, 1.11 ) }
    dend_35 { pt3dadd( 113.272, -115.049, -104.34, 0.44 ) }
    dend_35 { pt3dadd( 113.603, -115.166, -104.501, 0.22 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 47/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 63.8633, -91.7957, -60.204, 0.52 ) }
    dend_34 { pt3dadd( 65.0895, -91.7305, -59.9734, 0.52 ) }
    dend_34 { pt3dadd( 65.8828, -91.6393, -59.8473, 0.52 ) }
    dend_34 { pt3dadd( 66.6952, -91.5166, -59.7253, 0.81 ) }
    dend_34 { pt3dadd( 67.3116, -91.3636, -59.6506, 0.81 ) }
    dend_34 { pt3dadd( 68.34, -91.0077, -59.5507, 0.29 ) }
    dend_34 { pt3dadd( 69.1133, -90.6493, -59.5041, 0.29 ) }
    dend_34 { pt3dadd( 69.7599, -90.1617, -59.5235, 0.88 ) }
    dend_34 { pt3dadd( 70.2704, -89.6147, -59.5703, 1.11 ) }
    dend_34 { pt3dadd( 70.8637, -88.7597, -59.686, 0.44 ) }
    dend_34 { pt3dadd( 71.2803, -87.9063, -59.8402, 0.37 ) }
    dend_34 { pt3dadd( 71.6166, -86.9146, -60.0606, 0.37 ) }
    dend_34 { pt3dadd( 71.9242, -85.5887, -60.3454, 0.66 ) }
    dend_34 { pt3dadd( 72.0531, -84.7245, -60.5206, 1.03 ) }
    dend_34 { pt3dadd( 72.1235, -83.8163, -60.6599, 1.03 ) }
    dend_34 { pt3dadd( 72.1478, -82.3814, -60.7399, 0.52 ) }
    dend_34 { pt3dadd( 72.1394, -81.8473, -60.7163, 0.37 ) }
    dend_34 { pt3dadd( 72.1299, -80.9609, -60.5834, 1.03 ) }
    dend_34 { pt3dadd( 72.1457, -80.4299, -60.4447, 1.03 ) }
    dend_34 { pt3dadd( 72.2684, -79.2715, -60.0774, 0.29 ) }
    dend_34 { pt3dadd( 72.6001, -77.4158, -59.3736, 0.22 ) }
    dend_34 { pt3dadd( 72.768, -76.7558, -59.0888, 0.66 ) }
    dend_34 { pt3dadd( 72.9331, -76.1942, -58.853, 0.52 ) }
    dend_34 { pt3dadd( 73.1838, -75.3768, -58.5628, 0.37 ) }
    dend_34 { pt3dadd( 73.5556, -74.2661, -58.2316, 0.74 ) }
    dend_34 { pt3dadd( 73.83, -73.5527, -58.0455, 0.22 ) }
    dend_34 { pt3dadd( 74.1951, -72.6841, -57.8217, 0.88 ) }
    dend_34 { pt3dadd( 74.3609, -72.2442, -57.6955, 0.88 ) }
    dend_34 { pt3dadd( 74.7652, -71.0099, -57.3261, 0.29 ) }
    dend_34 { pt3dadd( 74.9298, -70.3783, -57.1379, 0.44 ) }
    dend_34 { pt3dadd( 75.0582, -69.725, -56.9346, 0.29 ) }
    dend_34 { pt3dadd( 75.1679, -68.9929, -56.7545, 0.29 ) }
    dend_34 { pt3dadd( 75.2566, -67.9116, -56.5619, 0.81 ) }
    dend_34 { pt3dadd( 75.299, -67.124, -56.4368, 1.03 ) }
    dend_34 { pt3dadd( 75.3122, -66.5785, -56.3666, 1.03 ) }
    dend_34 { pt3dadd( 75.304, -65.9756, -56.3147, 0.22 ) }
    dend_34 { pt3dadd( 75.282, -64.7847, -56.2135, 0.22 ) }
    dend_34 { pt3dadd( 75.3033, -63.8194, -56.0687, 0.81 ) }
    dend_34 { pt3dadd( 75.349, -63.3421, -55.9447, 0.81 ) }
    dend_34 { pt3dadd( 75.478, -62.659, -55.6433, 0.44 ) }
    dend_34 { pt3dadd( 75.6679, -61.9967, -55.2594, 0.44 ) }
    dend_34 { pt3dadd( 75.9791, -61.0901, -54.6349, 0.96 ) }
    dend_34 { pt3dadd( 76.2997, -60.2067, -53.9275, 0.96 ) }
    dend_34 { pt3dadd( 76.5067, -59.6196, -53.4513, 1.11 ) }
    dend_34 { pt3dadd( 76.7928, -58.776, -52.8033, 0.29 ) }
    dend_34 { pt3dadd( 77.0232, -58.1126, -52.3095, 0.81 ) }
    dend_34 { pt3dadd( 77.2957, -57.3872, -51.8042, 0.81 ) }
    dend_34 { pt3dadd( 77.7063, -56.3714, -51.215, 0.44 ) }
    dend_34 { pt3dadd( 78.0729, -55.3939, -50.7543, 1.11 ) }
    dend_34 { pt3dadd( 78.3325, -54.6968, -50.466, 1.11 ) }
    dend_34 { pt3dadd( 78.5237, -54.1943, -50.2834, 0.81 ) }
    dend_34 { pt3dadd( 78.7634, -53.6786, -50.0992, 0.52 ) }
    dend_34 { pt3dadd( 79.3891, -52.6689, -49.7601, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_34 { pt3dadd( 80.1151, -51.8317, -49.5267, 0.22 ) }
    dend_34 { pt3dadd( 80.7271, -51.3689, -49.4352, 0.59 ) }
    dend_34 { pt3dadd( 80.9744, -51.2512, -49.4328, 0.59 ) }
    dend_34 { pt3dadd( 82.4353, -50.7907, -49.5711, 0.52 ) }
    dend_34 { pt3dadd( 83.3018, -50.6285, -49.7016, 0.29 ) }
    dend_34 { pt3dadd( 84.4548, -50.5045, -49.9114, 0.52 ) }
    dend_34 { pt3dadd( 85.5789, -50.3977, -50.1561, 0.44 ) }
    dend_34 { pt3dadd( 86.3337, -50.3098, -50.3465, 0.81 ) }
    dend_34 { pt3dadd( 86.9701, -50.1971, -50.5132, 1.03 ) }
    dend_34 { pt3dadd( 88.1425, -49.8681, -50.8091, 0.29 ) }
    dend_34 { pt3dadd( 88.7291, -49.653, -50.9042, 0.29 ) }
    dend_34 { pt3dadd( 89.4016, -49.3846, -50.9492, 0.81 ) }
    dend_34 { pt3dadd( 89.8715, -49.207, -50.9454, 0.81 ) }
    dend_34 { pt3dadd( 90.8177, -48.9152, -50.8919, 0.52 ) }
    dend_34 { pt3dadd( 92.0313, -48.6963, -50.7559, 0.15 ) }
    dend_34 { pt3dadd( 92.9795, -48.7034, -50.5868, 0.44 ) }
    dend_34 { pt3dadd( 93.6105, -48.8195, -50.3839, 0.74 ) }
    dend_34 { pt3dadd( 94.0769, -48.9403, -50.182, 1.03 ) }
    dend_34 { pt3dadd( 94.5621, -49.0677, -49.9356, 1.03 ) }
    dend_34 { pt3dadd( 95.2604, -49.2253, -49.5178, 0.88 ) }
    dend_34 { pt3dadd( 96.1466, -49.2968, -48.927, 0.37 ) }
    dend_34 { pt3dadd( 97.4932, -49.0334, -48.0602, 0.81 ) }
    dend_34 { pt3dadd( 98.1975, -48.689, -47.6387, 0.81 ) }
    dend_34 { pt3dadd( 98.8594, -48.1732, -47.2006, 0.29 ) }
    dend_34 { pt3dadd( 99.3069, -47.7153, -46.8665, 0.29 ) }
    dend_34 { pt3dadd( 99.9108, -46.9793, -46.3888, 0.15 ) }
    dend_34 { pt3dadd( 100.41, -46.3813, -46.0314, 1.03 ) }
    dend_34 { pt3dadd( 100.728, -46.0526, -45.8248, 1.03 ) }
    dend_34 { pt3dadd( 102.079, -44.9602, -44.9804, 0.52 ) }
    dend_34 { pt3dadd( 102.846, -44.4915, -44.5209, 0.52 ) }
    dend_34 { pt3dadd( 103.716, -44.1067, -44.0305, 0.44 ) }
    dend_34 { pt3dadd( 105.223, -43.628, -43.2417, 0.88 ) }
    dend_34 { pt3dadd( 106.154, -43.3916, -42.8058, 0.74 ) }
    dend_34 { pt3dadd( 107.065, -43.2058, -42.4661, 0.44 ) }
    dend_34 { pt3dadd( 107.684, -43.1202, -42.3088, 0.37 ) }
    dend_34 { pt3dadd( 108.507, -43.0438, -42.1546, 0.22 ) }
    dend_34 { pt3dadd( 109.213, -43.0224, -42.0643, 0.22 ) }
    dend_34 { pt3dadd( 110.157, -42.9932, -41.9837, 0.44 ) }
    dend_34 { pt3dadd( 110.755, -42.9553, -41.9645, 0.22 ) }
    dend_34 { pt3dadd( 111.547, -42.8816, -41.9626, 0.22 ) }
    dend_34 { pt3dadd( 112.335, -42.8083, -41.9971, 0.44 ) }
    dend_34 { pt3dadd( 113.621, -42.7649, -42.1127, 0.29 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 42/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -17.5921, 425.555, -24.8816, 0.74 ) }
    dend_19 { pt3dadd( -17.3487, 427.476, -25.2016, 0.74 ) }
    dend_19 { pt3dadd( -17.2682, 428.283, -25.3172, 0.52 ) }
    dend_19 { pt3dadd( -17.1971, 429.077, -25.4021, 0.37 ) }
    dend_19 { pt3dadd( -17.1082, 430.336, -25.5177, 0.37 ) }
    dend_19 { pt3dadd( -17.0797, 430.809, -25.5553, 0.59 ) }
    dend_19 { pt3dadd( -17.0194, 431.815, -25.6174, 0.74 ) }
    dend_19 { pt3dadd( -16.9973, 432.447, -25.6303, 0.74 ) }
    dend_19 { pt3dadd( -16.927, 433.654, -25.6656, 0.37 ) }
    dend_19 { pt3dadd( -16.869, 434.535, -25.6987, 0.37 ) }
    dend_19 { pt3dadd( -16.7701, 436.06, -25.7606, 0.81 ) }
    dend_19 { pt3dadd( -16.7061, 437.083, -25.8056, 0.96 ) }
    dend_19 { pt3dadd( -16.6396, 438.124, -25.8457, 0.96 ) }
    dend_19 { pt3dadd( -16.553, 439.484, -25.8985, 0.66 ) }
    dend_19 { pt3dadd( -16.5069, 440.281, -25.9331, 0.44 ) }
    dend_19 { pt3dadd( -16.4739, 440.9, -25.953, 0.44 ) }
    dend_19 { pt3dadd( -16.4326, 442.065, -25.9902, 0.44 ) }
    dend_19 { pt3dadd( -16.4186, 443.089, -26.0244, 0.81 ) }
    dend_19 { pt3dadd( -16.4281, 443.796, -26.0535, 1.03 ) }
    dend_19 { pt3dadd( -16.4516, 444.532, -26.0879, 1.03 ) }
    dend_19 { pt3dadd( -16.5043, 445.768, -26.1709, 0.74 ) }
    dend_19 { pt3dadd( -16.5595, 446.731, -26.2566, 0.74 ) }
    dend_19 { pt3dadd( -16.6768, 448.27, -26.4148, 0.44 ) }
    dend_19 { pt3dadd( -16.8219, 449.791, -26.6023, 0.44 ) }
    dend_19 { pt3dadd( -16.8867, 450.526, -26.7073, 1.03 ) }
    dend_19 { pt3dadd( -16.9382, 451.235, -26.8191, 1.18 ) }
    dend_19 { pt3dadd( -16.9865, 452.379, -27.0316, 0.52 ) }
    dend_19 { pt3dadd( -16.9805, 453.484, -27.2753, 0.74 ) }
    dend_19 { pt3dadd( -16.9276, 454.603, -27.5743, 1.11 ) }
    dend_19 { pt3dadd( -16.8462, 455.637, -27.879, 0.44 ) }
    dend_19 { pt3dadd( -16.7614, 456.557, -28.1717, 0.37 ) }
    dend_19 { pt3dadd( -16.6538, 457.541, -28.4884, 0.37 ) }
    dend_19 { pt3dadd( -16.4844, 458.924, -28.9249, 0.59 ) }
    dend_19 { pt3dadd( -16.3563, 459.932, -29.2212, 0.96 ) }
    dend_19 { pt3dadd( -16.2728, 460.649, -29.3975, 1.18 ) }
    dend_19 { pt3dadd( -16.2123, 461.308, -29.5202, 1.18 ) }
    dend_19 { pt3dadd( -16.0864, 462.773, -29.7146, 0.44 ) }
    dend_19 { pt3dadd( -16.0114, 463.792, -29.7738, 0.37 ) }
    dend_19 { pt3dadd( -15.9581, 464.519, -29.7704, 0.59 ) }
    dend_19 { pt3dadd( -15.8714, 465.426, -29.7419, 0.44 ) }
    dend_19 { pt3dadd( -15.7403, 466.533, -29.7223, 0.44 ) }
    dend_19 { pt3dadd( -15.6312, 467.352, -29.7204, 0.74 ) }
    dend_19 { pt3dadd( -15.5493, 467.965, -29.7334, 0.74 ) }
    dend_19 { pt3dadd( -15.4883, 468.434, -29.7599, 0.74 ) }
    dend_19 { pt3dadd( -15.3782, 469.382, -29.846, 0.37 ) }
    dend_19 { pt3dadd( -15.2618, 470.545, -29.9826, 1.18 ) }
    dend_19 { pt3dadd( -15.2254, 470.977, -30.0357, 1.18 ) }
    dend_19 { pt3dadd( -15.1521, 471.914, -30.1232, 0.88 ) }
    dend_19 { pt3dadd( -15.0736, 472.855, -30.1778, 0.59 ) }
    dend_19 { pt3dadd( -14.9728, 474.085, -30.201, 0.88 ) }
    dend_19 { pt3dadd( -14.9126, 474.981, -30.194, 1.11 ) }
    dend_19 { pt3dadd( -14.8581, 475.89, -30.16, 1.11 ) }
    dend_19 { pt3dadd( -14.7758, 477.116, -30.1004, 0.52 ) }
    dend_19 { pt3dadd( -14.6686, 478.337, -30.0179, 0.44 ) }
    dend_19 { pt3dadd( -14.5898, 479.022, -29.9549, 0.44 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 97/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -17.5921, 425.555, -24.8816, 0.29 ) }
    dend_18 { pt3dadd( -17.9493, 426.641, -24.3628, 0.29 ) }
    dend_18 { pt3dadd( -18.2884, 427.831, -23.856, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_18 { pt3dadd( -18.4806, 428.521, -23.5653, 0.66 ) }
    dend_18 { pt3dadd( -18.6495, 429.141, -23.2974, 0.37 ) }
    dend_18 { pt3dadd( -18.9422, 430.194, -22.8234, 0.22 ) }
    dend_18 { pt3dadd( -19.0353, 430.521, -22.6707, 0.66 ) }
    dend_18 { pt3dadd( -19.1411, 430.949, -22.4626, 0.66 ) }
    dend_18 { pt3dadd( -19.4214, 432.129, -21.9325, 0.37 ) }
    dend_18 { pt3dadd( -19.6036, 432.843, -21.6299, 0.37 ) }
    dend_18 { pt3dadd( -19.86, 433.808, -21.2608, 0.59 ) }
    dend_18 { pt3dadd( -19.9689, 434.26, -21.1052, 0.37 ) }
    dend_18 { pt3dadd( -20.1276, 434.959, -20.8829, 0.29 ) }
    dend_18 { pt3dadd( -20.2989, 435.745, -20.6679, 0.74 ) }
    dend_18 { pt3dadd( -20.3881, 436.18, -20.575, 0.96 ) }
    dend_18 { pt3dadd( -20.5078, 436.755, -20.4603, 0.52 ) }
    dend_18 { pt3dadd( -20.6909, 437.564, -20.3091, 0.44 ) }
    dend_18 { pt3dadd( -20.8652, 438.314, -20.149, 0.29 ) }
    dend_18 { pt3dadd( -21.101, 439.307, -19.8856, 0.29 ) }
    dend_18 { pt3dadd( -21.2603, 439.93, -19.6789, 0.66 ) }
    dend_18 { pt3dadd( -21.4244, 440.586, -19.4324, 0.81 ) }
    dend_18 { pt3dadd( -21.6728, 441.685, -18.9842, 0.29 ) }
    dend_18 { pt3dadd( -21.9396, 443.072, -18.381, 0.29 ) }
    dend_18 { pt3dadd( -22.0837, 444.033, -17.9462, 0.29 ) }
    dend_18 { pt3dadd( -22.1691, 444.872, -17.5767, 0.88 ) }
    dend_18 { pt3dadd( -22.2095, 445.511, -17.3175, 0.88 ) }
    dend_18 { pt3dadd( -22.2333, 446.27, -17.0351, 0.29 ) }
    dend_18 { pt3dadd( -22.2049, 447.219, -16.7363, 0.29 ) }
    dend_18 { pt3dadd( -22.1844, 447.518, -16.6665, 0.52 ) }
    dend_18 { pt3dadd( -22.0713, 448.585, -16.4758, 0.22 ) }
    dend_18 { pt3dadd( -21.9627, 449.23, -16.3832, 0.52 ) }
    dend_18 { pt3dadd( -21.8346, 449.825, -16.2973, 0.52 ) }
    dend_18 { pt3dadd( -21.4128, 451.39, -16.056, 0.44 ) }
    dend_18 { pt3dadd( -21.1441, 452.225, -15.9229, 0.96 ) }
    dend_18 { pt3dadd( -20.963, 452.715, -15.8408, 0.96 ) }
    dend_18 { pt3dadd( -20.5133, 453.807, -15.6369, 0.29 ) }
    dend_18 { pt3dadd( -20.1153, 454.699, -15.46, 0.22 ) }
    dend_18 { pt3dadd( -19.744, 455.502, -15.2878, 0.81 ) }
    dend_18 { pt3dadd( -19.3087, 456.436, -15.06, 0.29 ) }
    dend_18 { pt3dadd( -18.9749, 457.167, -14.8695, 0.29 ) }
    dend_18 { pt3dadd( -18.6818, 457.844, -14.6798, 0.66 ) }
    dend_18 { pt3dadd( -18.5693, 458.123, -14.589, 0.81 ) }
    dend_18 { pt3dadd( -18.2489, 458.976, -14.284, 0.29 ) }
    dend_18 { pt3dadd( -18.0684, 459.513, -14.0768, 0.29 ) }
    dend_18 { pt3dadd( -17.952, 459.91, -13.9152, 0.81 ) }
    dend_18 { pt3dadd( -17.8437, 460.335, -13.7452, 0.81 ) }
    dend_18 { pt3dadd( -17.6477, 461.207, -13.4366, 0.29 ) }
    dend_18 { pt3dadd( -17.4382, 462.289, -13.1012, 0.29 ) }
    dend_18 { pt3dadd( -17.3049, 463.092, -12.8845, 0.88 ) }
    dend_18 { pt3dadd( -17.239, 463.522, -12.7832, 1.03 ) }
    dend_18 { pt3dadd( -17.1366, 464.195, -12.6389, 0.74 ) }
    dend_18 { pt3dadd( -16.8531, 466.095, -12.2641, 0.22 ) }
    dend_18 { pt3dadd( -16.7377, 466.826, -12.1272, 0.96 ) }
    dend_18 { pt3dadd( -16.6322, 467.407, -12.0063, 1.11 ) }
    dend_18 { pt3dadd( -16.4038, 468.626, -11.7357, 0.29 ) }
    dend_18 { pt3dadd( -16.2744, 469.294, -11.5765, 0.59 ) }
    dend_18 { pt3dadd( -16.1926, 469.785, -11.4406, 0.59 ) }
    dend_18 { pt3dadd( -16.0856, 470.545, -11.1969, 0.59 ) }
    dend_18 { pt3dadd( -15.9778, 471.507, -10.8469, 0.29 ) }
    dend_18 { pt3dadd( -15.9153, 472.206, -10.5642, 0.44 ) }
    dend_18 { pt3dadd( -15.8976, 473.294, -10.0773, 0.29 ) }
    dend_18 { pt3dadd( -15.9408, 474.433, -9.55039, 0.81 ) }
    dend_18 { pt3dadd( -15.9611, 474.751, -9.39685, 0.81 ) }
    dend_18 { pt3dadd( -15.9983, 475.165, -9.19514, 1.03 ) }
    dend_18 { pt3dadd( -16.0583, 475.812, -8.87598, 0.37 ) }
    dend_18 { pt3dadd( -16.1428, 476.921, -8.30786, 0.29 ) }
    dend_18 { pt3dadd( -16.1711, 477.535, -8.01044, 0.29 ) }
    dend_18 { pt3dadd( -16.1916, 478.717, -7.49852, 0.29 ) }
    dend_18 { pt3dadd( -16.1899, 479.324, -7.28352, 0.81 ) }
    dend_18 { pt3dadd( -16.2034, 480.515, -6.92888, 0.37 ) }
    dend_18 { pt3dadd( -16.24, 481.464, -6.63876, 0.29 ) }
    dend_18 { pt3dadd( -16.2627, 482.397, -6.32119, 1.11 ) }
    dend_18 { pt3dadd( -16.3063, 482.99, -6.09125, 0.66 ) }
    dend_18 { pt3dadd( -16.5123, 484.129, -5.58148, 0.29 ) }
    dend_18 { pt3dadd( -16.8058, 485.144, -5.02879, 0.29 ) }
    dend_18 { pt3dadd( -17.24, 486.214, -4.2974, 0.29 ) }
    dend_18 { pt3dadd( -17.5099, 486.805, -3.77766, 0.29 ) }
    dend_18 { pt3dadd( -17.7559, 487.291, -3.29557, 0.29 ) }
    dend_18 { pt3dadd( -18.1373, 487.966, -2.59582, 0.81 ) }
    dend_18 { pt3dadd( -18.3947, 488.344, -2.1876, 1.11 ) }
    dend_18 { pt3dadd( -18.7146, 488.838, -1.70283, 0.88 ) }
    dend_18 { pt3dadd( -19.5521, 490.324, -0.485194, 0.29 ) }
    dend_18 { pt3dadd( -19.8491, 490.928, -0.0273745, 0.29 ) }
    dend_18 { pt3dadd( -20.1144, 491.592, 0.438783, 0.74 ) }
    dend_18 { pt3dadd( -20.4715, 492.609, 1.06612, 0.29 ) }
    dend_18 { pt3dadd( -20.7783, 493.473, 1.54001, 0.29 ) }
    dend_18 { pt3dadd( -21.1169, 494.443, 2.01573, 0.66 ) }
    dend_18 { pt3dadd( -21.2468, 494.888, 2.19637, 0.88 ) }
    dend_18 { pt3dadd( -21.4191, 495.908, 2.61207, 0.22 ) }
    dend_18 { pt3dadd( -21.4516, 496.596, 2.87385, 0.37 ) }
    dend_18 { pt3dadd( -21.4502, 496.666, 2.89198, 0.37 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 88/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -136.099, -71.7267, -30.1304, 0.22 ) }
    dend_44 { pt3dadd( -137.659, -71.6848, -29.7498, 0.22 ) }
    dend_44 { pt3dadd( -138.31, -71.7092, -29.5902, 0.22 ) }
    dend_44 { pt3dadd( -139.255, -71.8065, -29.3587, 0.37 ) }
    dend_44 { pt3dadd( -140.206, -71.9494, -29.1255, 0.22 ) }
    dend_44 { pt3dadd( -141.396, -72.1743, -28.8339, 0.22 ) }
    dend_44 { pt3dadd( -142.644, -72.4329, -28.5286, 0.81 ) }
    dend_44 { pt3dadd( -143.237, -72.5848, -28.3933, 0.81 ) }
    dend_44 { pt3dadd( -144.026, -72.8279, -28.2252, 0.52 ) }
    dend_44 { pt3dadd( -144.72, -73.0775, -28.0912, 0.29 ) }
    dend_44 { pt3dadd( -145.299, -73.2982, -27.9884, 0.66 ) }
    dend_44 { pt3dadd( -146.138, -73.6076, -27.8748, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_44 { pt3dadd( -146.81, -73.8221, -27.8078, 0.29 ) }
    dend_44 { pt3dadd( -147.762, -74.097, -27.7486, 0.29 ) }
    dend_44 { pt3dadd( -148.714, -74.3337, -27.724, 0.96 ) }
    dend_44 { pt3dadd( -149.648, -74.5469, -27.7836, 1.03 ) }
    dend_44 { pt3dadd( -150.962, -74.8431, -27.947, 0.22 ) }
    dend_44 { pt3dadd( -151.301, -74.9229, -28.0055, 0.22 ) }
    dend_44 { pt3dadd( -151.943, -75.089, -28.132, 0.88 ) }
    dend_44 { pt3dadd( -152.49, -75.2677, -28.2585, 0.88 ) }
    dend_44 { pt3dadd( -153.961, -75.8423, -28.6751, 0.22 ) }
    dend_44 { pt3dadd( -154.727, -76.1843, -28.9482, 0.22 ) }
    dend_44 { pt3dadd( -155.39, -76.5299, -29.2068, 0.22 ) }
    dend_44 { pt3dadd( -155.952, -76.8754, -29.4437, 0.88 ) }
    dend_44 { pt3dadd( -156.544, -77.3488, -29.736, 1.11 ) }
    dend_44 { pt3dadd( -157.166, -78.0181, -30.1332, 0.88 ) }
    dend_44 { pt3dadd( -157.869, -79.1227, -30.7469, 0.29 ) }
    dend_44 { pt3dadd( -158.26, -80.0315, -31.2781, 1.18 ) }
    dend_44 { pt3dadd( -158.43, -80.5206, -31.5749, 1.33 ) }
    dend_44 { pt3dadd( -158.749, -81.686, -32.3119, 0.29 ) }
    dend_44 { pt3dadd( -158.893, -82.5738, -32.8667, 0.22 ) }
    dend_44 { pt3dadd( -158.906, -83.3885, -33.3045, 0.22 ) }
    dend_44 { pt3dadd( -158.746, -84.4686, -33.8114, 0.96 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 21/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -136.099, -71.7267, -30.1304, 0.66 ) }
    dend_41 { pt3dadd( -136.565, -71.7328, -27.9476, 0.66 ) }
    dend_41 { pt3dadd( -136.701, -71.6876, -27.242, 0.66 ) }
    dend_41 { pt3dadd( -136.853, -71.5701, -26.3733, 0.81 ) }
    dend_41 { pt3dadd( -136.997, -71.4361, -25.6315, 0.81 ) }
    dend_41 { pt3dadd( -137.403, -71.1007, -23.8644, 0.96 ) }
    dend_41 { pt3dadd( -137.767, -70.8399, -22.4998, 1.33 ) }
    dend_41 { pt3dadd( -138.044, -70.6286, -21.7004, 0.44 ) }
    dend_41 { pt3dadd( -138.32, -70.4167, -21.0228, 0.44 ) }
    dend_41 { pt3dadd( -138.636, -70.1926, -20.4601, 0.37 ) }
    dend_41 { pt3dadd( -139.269, -69.8043, -19.7829, 0.37 ) }
    dend_41 { pt3dadd( -139.617, -69.6498, -19.6027, 0.37 ) }
    dend_41 { pt3dadd( -140.298, -69.4086, -19.3842, 0.29 ) }
    dend_41 { pt3dadd( -141.033, -69.1938, -19.1742, 0.66 ) }
    dend_41 { pt3dadd( -141.557, -69.0533, -18.9686, 0.88 ) }
    dend_41 { pt3dadd( -142.142, -68.9161, -18.6669, 0.88 ) }
    dend_41 { pt3dadd( -142.901, -68.8145, -18.1479, 0.66 ) }
    dend_41 { pt3dadd( -143.296, -68.8405, -17.748, 0.66 ) }
    dend_41 { pt3dadd( -143.734, -68.9578, -17.144, 0.81 ) }
    dend_41 { pt3dadd( -144.7, -69.3515, -15.4703, 0.81 ) }
    dend_41 { pt3dadd( -145.062, -69.5258, -14.6725, 0.59 ) }
    dend_41 { pt3dadd( -145.403, -69.6867, -13.7283, 0.44 ) }
    dend_41 { pt3dadd( -145.711, -69.778, -12.6836, 0.44 ) }
    dend_41 { pt3dadd( -145.882, -69.7689, -12.0841, 0.37 ) }
    dend_41 { pt3dadd( -146.097, -69.6484, -11.4423, 0.37 ) }
    dend_41 { pt3dadd( -146.431, -69.2855, -10.7481, 0.66 ) }
    dend_41 { pt3dadd( -146.755, -68.8898, -10.2849, 0.66 ) }
    dend_41 { pt3dadd( -147.228, -68.38, -9.88365, 0.44 ) }
    dend_41 { pt3dadd( -147.687, -68.0221, -9.67375, 0.66 ) }
    dend_41 { pt3dadd( -148.166, -67.7898, -9.55327, 0.66 ) }
    dend_41 { pt3dadd( -148.898, -67.5901, -9.43157, 0.66 ) }
    dend_41 { pt3dadd( -150.586, -67.3625, -9.18998, 0.37 ) }
    dend_41 { pt3dadd( -151.225, -67.3298, -9.08776, 0.66 ) }
    dend_41 { pt3dadd( -152.137, -67.3412, -8.92941, 0.66 ) }
    dend_41 { pt3dadd( -152.867, -67.3983, -8.77161, 0.44 ) }
    dend_41 { pt3dadd( -153.525, -67.4907, -8.59104, 0.37 ) }
    dend_41 { pt3dadd( -154.003, -67.5937, -8.39026, 0.59 ) }
    dend_41 { pt3dadd( -154.685, -67.7841, -7.96786, 0.44 ) }
    dend_41 { pt3dadd( -155.148, -67.9281, -7.64987, 0.37 ) }
    dend_41 { pt3dadd( -155.735, -68.1267, -7.1925, 0.37 ) }
    dend_41 { pt3dadd( -156.473, -68.4038, -6.58304, 0.37 ) }
    dend_41 { pt3dadd( -157.423, -68.785, -5.76013, 0.37 ) }
    dend_41 { pt3dadd( -158.073, -69.0518, -5.17035, 0.29 ) }
    dend_41 { pt3dadd( -158.422, -69.1846, -4.84921, 0.52 ) }
    dend_41 { pt3dadd( -159.178, -69.3997, -4.16465, 0.29 ) }
    dend_41 { pt3dadd( -159.802, -69.5448, -3.58337, 0.37 ) }
    dend_41 { pt3dadd( -160.207, -69.6077, -3.21638, 0.37 ) }
    dend_41 { pt3dadd( -160.665, -69.6242, -2.8798, 0.96 ) }
    dend_41 { pt3dadd( -161.277, -69.5778, -2.48414, 0.66 ) }
    dend_41 { pt3dadd( -161.684, -69.5021, -2.23576, 0.44 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 71/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -14.5898, 479.022, -29.9549, 0.52 ) }
    dend_21 { pt3dadd( -14.5606, 479.761, -29.9958, 0.52 ) }
    dend_21 { pt3dadd( -14.5493, 480.332, -30.0281, 1.03 ) }
    dend_21 { pt3dadd( -14.5457, 480.794, -30.0549, 1.03 ) }
    dend_21 { pt3dadd( -14.544, 481.686, -30.1155, 1.11 ) }
    dend_21 { pt3dadd( -14.5409, 482.716, -30.1762, 0.29 ) }
    dend_21 { pt3dadd( -14.5302, 483.67, -30.2332, 0.29 ) }
    dend_21 { pt3dadd( -14.5072, 484.563, -30.2952, 0.96 ) }
    dend_21 { pt3dadd( -14.4982, 484.972, -30.3172, 1.11 ) }
    dend_21 { pt3dadd( -14.4876, 485.905, -30.351, 0.66 ) }
    dend_21 { pt3dadd( -14.4994, 486.947, -30.3745, 0.52 ) }
    dend_21 { pt3dadd( -14.5348, 487.872, -30.3837, 0.52 ) }
    dend_21 { pt3dadd( -14.5878, 488.833, -30.3769, 0.52 ) }
    dend_21 { pt3dadd( -14.6465, 489.553, -30.3588, 0.81 ) }
    dend_21 { pt3dadd( -14.7667, 490.732, -30.32, 1.11 ) }
    dend_21 { pt3dadd( -14.8453, 491.385, -30.2919, 1.33 ) }
    dend_21 { pt3dadd( -15.0676, 493.028, -30.2264, 0.44 ) }
    dend_21 { pt3dadd( -15.1754, 493.787, -30.1957, 0.44 ) }
    dend_21 { pt3dadd( -15.3468, 495.101, -30.1485, 0.37 ) }
    dend_21 { pt3dadd( -15.4333, 495.892, -30.1237, 0.96 ) }
    dend_21 { pt3dadd( -15.4974, 496.731, -30.1046, 1.25 ) }
    dend_21 { pt3dadd( -15.5194, 497.289, -30.0947, 1.25 ) }
    dend_21 { pt3dadd( -15.5154, 497.898, -30.0835, 1.03 ) }
    dend_21 { pt3dadd( -15.4981, 498.368, -30.0742, 0.74 ) }
    dend_21 { pt3dadd( -15.4607, 499.044, -30.0576, 0.52 ) }
    dend_21 { pt3dadd( -15.4363, 499.665, -30.0377, 0.37 ) }
    dend_21 { pt3dadd( -15.4189, 500.324, -30.0133, 0.37 ) }
    dend_21 { pt3dadd( -15.4139, 501.173, -29.9741, 0.37 ) }
    dend_21 { pt3dadd( -15.4283, 502.255, -29.9262, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_21 { pt3dadd( -15.4481, 502.854, -29.9031, 0.66 ) }
    dend_21 { pt3dadd( -15.4826, 503.859, -29.8747, 0.66 ) }
    dend_21 { pt3dadd( -15.5167, 504.725, -29.853, 0.29 ) }
    dend_21 { pt3dadd( -15.544, 505.498, -29.8415, 0.29 ) }
    dend_21 { pt3dadd( -15.5637, 506.042, -29.8379, 0.81 ) }
    dend_21 { pt3dadd( -15.5949, 507.0, -29.8421, 1.03 ) }
    dend_21 { pt3dadd( -15.6202, 507.774, -29.851, 1.18 ) }
    dend_21 { pt3dadd( -15.637, 508.362, -29.8625, 0.81 ) }
    dend_21 { pt3dadd( -15.6598, 509.17, -29.8896, 0.29 ) }
    dend_21 { pt3dadd( -15.6803, 509.886, -29.9151, 0.29 ) }
    dend_21 { pt3dadd( -15.6994, 510.614, -29.9406, 0.96 ) }
    dend_21 { pt3dadd( -15.724, 511.443, -29.9693, 1.11 ) }
    dend_21 { pt3dadd( -15.7388, 512.066, -29.9834, 1.11 ) }
    dend_21 { pt3dadd( -15.7477, 513.089, -29.9992, 0.74 ) }
    dend_21 { pt3dadd( -15.7484, 513.973, -29.9999, 0.44 ) }
    dend_21 { pt3dadd( -15.7395, 514.863, -29.9858, 0.88 ) }
    dend_21 { pt3dadd( -15.7314, 515.505, -29.9677, 0.88 ) }
    dend_21 { pt3dadd( -15.7106, 516.418, -29.9367, 0.52 ) }
    dend_21 { pt3dadd( -15.6775, 517.383, -29.8993, 0.52 ) }
    dend_21 { pt3dadd( -15.6341, 518.35, -29.857, 0.52 ) }
    dend_21 { pt3dadd( -15.5958, 519.366, -29.8197, 0.52 ) }
    dend_21 { pt3dadd( -15.5802, 520.199, -29.7971, 1.11 ) }
    dend_21 { pt3dadd( -15.5762, 520.625, -29.79, 1.11 ) }
    dend_21 { pt3dadd( -15.5844, 521.425, -29.7857, 0.81 ) }
    dend_21 { pt3dadd( -15.6019, 522.506, -29.7872, 0.29 ) }
    dend_21 { pt3dadd( -15.625, 523.532, -29.799, 0.29 ) }
    dend_21 { pt3dadd( -15.6451, 524.128, -29.8098, 0.96 ) }
    dend_21 { pt3dadd( -15.6805, 524.804, -29.8195, 1.11 ) }
    dend_21 { pt3dadd( -15.7433, 525.515, -29.8291, 1.4 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 29/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -14.5898, 479.022, -29.9549, 0.44 ) }
    dend_20 { pt3dadd( -14.0489, 478.007, -28.9447, 0.44 ) }
    dend_20 { pt3dadd( -13.6732, 477.301, -28.2429, 0.37 ) }
    dend_20 { pt3dadd( -13.0688, 476.166, -27.1138, 0.29 ) }
    dend_20 { pt3dadd( -12.7799, 475.624, -26.5742, 0.29 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 34/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -161.684, -69.5021, -2.23576, 0.22 ) }
    dend_43 { pt3dadd( -160.998, -68.7219, -2.23279, 0.22 ) }
    dend_43 { pt3dadd( -160.511, -68.1685, -2.23069, 0.22 ) }
    dend_43 { pt3dadd( -160.029, -67.6199, -2.22861, 0.59 ) }
    dend_43 { pt3dadd( -159.702, -67.2481, -2.22719, 0.59 ) }
    dend_43 { pt3dadd( -159.273, -66.7606, -2.22534, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 40/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -161.684, -69.5021, -2.23576, 0.37 ) }
    dend_42 { pt3dadd( -162.763, -68.4789, -1.85152, 0.37 ) }
    dend_42 { pt3dadd( -163.648, -67.7242, -1.5517, 0.37 ) }
    dend_42 { pt3dadd( -164.569, -67.017, -1.2554, 0.22 ) }
    dend_42 { pt3dadd( -165.555, -66.2593, -0.937939, 0.22 ) }
    dend_42 { pt3dadd( -166.265, -65.7146, -0.709684, 0.22 ) }
    dend_42 { pt3dadd( -167.026, -65.1302, -0.464823, 0.22 ) }
    dend_42 { pt3dadd( -167.288, -64.9581, -0.383463, 0.52 ) }
    dend_42 { pt3dadd( -167.891, -64.6464, -0.210361, 0.66 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 49/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -15.7433, 525.515, -29.8291, 0.22 ) }
    dend_23 { pt3dadd( -14.6316, 528.517, -32.1952, 0.22 ) }
    dend_23 { pt3dadd( -14.518, 529.053, -32.6414, 0.29 ) }
    dend_23 { pt3dadd( -14.4428, 529.986, -33.4912, 0.29 ) }
    dend_23 { pt3dadd( -14.4801, 530.265, -33.8197, 0.66 ) }
    dend_23 { pt3dadd( -14.6095, 530.656, -34.3685, 0.66 ) }
    dend_23 { pt3dadd( -14.8024, 531.141, -35.0483, 0.29 ) }
    dend_23 { pt3dadd( -15.2983, 531.7, -35.8352, 0.88 ) }
    dend_23 { pt3dadd( -15.5364, 531.955, -36.1845, 0.88 ) }
    dend_23 { pt3dadd( -16.3414, 532.825, -37.2968, 0.29 ) }
    dend_23 { pt3dadd( -16.6562, 533.22, -37.7131, 0.29 ) }
    dend_23 { pt3dadd( -17.0578, 533.883, -38.2048, 0.29 ) }
    dend_23 { pt3dadd( -17.3997, 534.746, -38.6694, 0.66 ) }
    dend_23 { pt3dadd( -17.6475, 535.59, -39.047, 0.22 ) }
    dend_23 { pt3dadd( -17.8267, 536.267, -39.3221, 0.22 ) }
    dend_23 { pt3dadd( -18.0255, 536.964, -39.5973, 0.22 ) }
    dend_23 { pt3dadd( -18.4385, 538.195, -40.1278, 0.96 ) }
    dend_23 { pt3dadd( -18.9962, 539.582, -40.8372, 1.33 ) }
    dend_23 { pt3dadd( -19.6646, 541.059, -41.704, 0.29 ) }
    dend_23 { pt3dadd( -19.8703, 541.506, -41.9801, 0.29 ) }
    dend_23 { pt3dadd( -20.3295, 542.443, -42.5865, 0.29 ) }
    dend_23 { pt3dadd( -20.7231, 543.154, -43.0902, 0.29 ) }
    dend_23 { pt3dadd( -21.2152, 543.814, -43.6364, 0.96 ) }
    dend_23 { pt3dadd( -21.544, 544.106, -43.9031, 1.11 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 73/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -15.7433, 525.515, -29.8291, 0.29 ) }
    dend_22 { pt3dadd( -15.8446, 527.239, -29.6546, 0.29 ) }
    dend_22 { pt3dadd( -15.9225, 528.539, -29.5234, 0.29 ) }
    dend_22 { pt3dadd( -16.0485, 530.389, -29.3524, 0.29 ) }
    dend_22 { pt3dadd( -16.1666, 531.946, -29.2206, 0.74 ) }
    dend_22 { pt3dadd( -16.2578, 533.046, -29.1356, 1.03 ) }
    dend_22 { pt3dadd( -16.3249, 533.807, -29.0811, 1.03 ) }
    dend_22 { pt3dadd( -16.4992, 535.669, -28.9517, 0.29 ) }
    dend_22 { pt3dadd( -16.6421, 537.342, -28.8263, 0.29 ) }
    dend_22 { pt3dadd( -16.7103, 538.176, -28.7582, 0.96 ) }
    dend_22 { pt3dadd( -16.7759, 539.01, -28.6855, 1.18 ) }
    dend_22 { pt3dadd( -16.8758, 540.309, -28.5756, 0.59 ) }
    dend_22 { pt3dadd( -16.9705, 541.533, -28.464, 0.37 ) }
    dend_22 { pt3dadd( -17.0997, 543.317, -28.2815, 0.37 ) }
    dend_22 { pt3dadd( -17.1934, 544.765, -28.1147, 0.29 ) }
    dend_22 { pt3dadd( -17.3242, 546.682, -27.8952, 0.29 ) }
    dend_22 { pt3dadd( -17.4373, 548.041, -27.7478, 0.88 ) }
    dend_22 { pt3dadd( -17.4886, 548.575, -27.6953, 1.03 ) }
    dend_22 { pt3dadd( -17.5877, 549.455, -27.6258, 1.03 ) }
    dend_22 { pt3dadd( -17.73, 550.621, -27.5484, 1.03 ) }
    dend_22 { pt3dadd( -17.92, 552.209, -27.4477, 0.44 ) }
    dend_22 { pt3dadd( -18.0867, 553.741, -27.3386, 0.74 ) }
    dend_22 { pt3dadd( -18.1388, 554.237, -27.3046, 0.74 ) }
    dend_22 { pt3dadd( -18.2606, 555.455, -27.2343, 0.44 ) }
    dend_22 { pt3dadd( -18.337, 556.17, -27.2002, 0.37 ) }
    dend_22 { pt3dadd( -18.4197, 557.026, -27.1535, 0.74 ) }
    dend_22 { pt3dadd( -18.4711, 557.742, -27.0988, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_22 { pt3dadd( -18.521, 558.966, -26.9917, 0.29 ) }
    dend_22 { pt3dadd( -18.5421, 559.668, -26.9174, 0.29 ) }
    dend_22 { pt3dadd( -18.56, 560.73, -26.7895, 0.81 ) }
    dend_22 { pt3dadd( -18.5606, 561.116, -26.7374, 0.81 ) }
    dend_22 { pt3dadd( -18.5517, 561.88, -26.6337, 0.37 ) }
    dend_22 { pt3dadd( -18.5538, 563.046, -26.4951, 0.37 ) }
    dend_22 { pt3dadd( -18.5606, 563.814, -26.4157, 1.03 ) }
    dend_22 { pt3dadd( -18.5875, 564.492, -26.3717, 1.03 ) }
    dend_22 { pt3dadd( -18.6751, 565.824, -26.3246, 1.03 ) }
    dend_22 { pt3dadd( -18.7906, 567.058, -26.3197, 0.37 ) }
    dend_22 { pt3dadd( -19.0044, 568.733, -26.3545, 0.29 ) }
    dend_22 { pt3dadd( -19.1497, 569.652, -26.3906, 0.29 ) }
    dend_22 { pt3dadd( -19.3774, 570.894, -26.4517, 0.88 ) }
    dend_22 { pt3dadd( -19.5326, 571.65, -26.4901, 1.25 ) }
    dend_22 { pt3dadd( -19.6899, 572.317, -26.5258, 1.25 ) }
    dend_22 { pt3dadd( -19.9515, 573.373, -26.564, 0.74 ) }
    dend_22 { pt3dadd( -20.1714, 574.269, -26.5799, 0.74 ) }
    dend_22 { pt3dadd( -20.572, 575.909, -26.5843, 1.25 ) }
    dend_22 { pt3dadd( -20.778, 576.809, -26.5745, 1.25 ) }
    dend_22 { pt3dadd( -20.951, 577.602, -26.5672, 0.52 ) }
    dend_22 { pt3dadd( -21.1683, 578.656, -26.5566, 0.29 ) }
    dend_22 { pt3dadd( -21.3287, 579.487, -26.5528, 0.52 ) }
    dend_22 { pt3dadd( -21.4804, 580.313, -26.5513, 0.81 ) }
    dend_22 { pt3dadd( -21.8387, 582.352, -26.5683, 0.37 ) }
    dend_22 { pt3dadd( -22.1039, 583.86, -26.5898, 0.37 ) }
    dend_22 { pt3dadd( -22.1698, 584.243, -26.5962, 1.03 ) }
    dend_22 { pt3dadd( -22.305, 585.008, -26.6132, 1.4 ) }
    dend_22 { pt3dadd( -22.3973, 585.524, -26.6259, 1.4 ) }
    dend_22 { pt3dadd( -22.6463, 586.962, -26.6523, 0.52 ) }
    dend_22 { pt3dadd( -22.85, 588.173, -26.668, 0.52 ) }
    dend_22 { pt3dadd( -23.0445, 589.392, -26.6727, 0.81 ) }
    dend_22 { pt3dadd( -23.1788, 590.295, -26.6657, 0.81 ) }
    dend_22 { pt3dadd( -23.3051, 591.206, -26.649, 0.81 ) }
    dend_22 { pt3dadd( -23.4509, 592.314, -26.6205, 0.44 ) }
    dend_22 { pt3dadd( -23.5426, 593.071, -26.5924, 0.44 ) }
    dend_22 { pt3dadd( -23.6699, 594.206, -26.5397, 0.81 ) }
    dend_22 { pt3dadd( -23.7978, 595.376, -26.4817, 0.88 ) }
    dend_22 { pt3dadd( -23.9286, 596.658, -26.4083, 1.18 ) }
    dend_22 { pt3dadd( -24.0442, 597.801, -26.3419, 1.4 ) }
    dend_22 { pt3dadd( -24.1001, 598.35, -26.3102, 1.4 ) }
    dend_22 { pt3dadd( -24.1735, 599.176, -26.2617, 0.88 ) }
    dend_22 { pt3dadd( -24.3319, 601.308, -26.1263, 0.37 ) }
    dend_22 { pt3dadd( -24.3994, 602.411, -26.0513, 0.37 ) }
    dend_22 { pt3dadd( -24.436, 603.174, -25.9939, 0.66 ) }
    dend_22 { pt3dadd( -24.4651, 603.934, -25.9297, 0.96 ) }
    dend_22 { pt3dadd( -24.495, 604.849, -25.8436, 0.37 ) }
    dend_22 { pt3dadd( -24.5152, 605.575, -25.7707, 0.74 ) }
    dend_22 { pt3dadd( -24.5319, 606.818, -25.6507, 0.37 ) }
    dend_22 { pt3dadd( -24.5469, 607.902, -25.5551, 0.81 ) }
    dend_22 { pt3dadd( -24.5594, 608.899, -25.477, 1.03 ) }
    dend_22 { pt3dadd( -24.5694, 610.851, -25.3661, 0.22 ) }
    dend_22 { pt3dadd( -24.5716, 612.212, -25.3085, 0.22 ) }
    dend_22 { pt3dadd( -24.5614, 613.798, -25.2603, 0.22 ) }
    dend_22 { pt3dadd( -24.537, 615.264, -25.2393, 1.25 ) }
    dend_22 { pt3dadd( -24.5154, 615.984, -25.2419, 1.33 ) }
    dend_22 { pt3dadd( -24.4712, 617.209, -25.2675, 0.44 ) }
    dend_22 { pt3dadd( -24.4144, 618.246, -25.3126, 0.44 ) }
    dend_22 { pt3dadd( -24.3192, 619.521, -25.3686, 0.44 ) }
    dend_22 { pt3dadd( -24.2273, 620.541, -25.4093, 0.37 ) }
    dend_22 { pt3dadd( -24.086, 622.049, -25.4657, 0.37 ) }
    dend_22 { pt3dadd( -24.0192, 622.818, -25.4797, 0.37 ) }
    dend_22 { pt3dadd( -23.9406, 623.946, -25.4871, 0.74 ) }
    dend_22 { pt3dadd( -23.8935, 624.779, -25.4946, 1.03 ) }
    dend_22 { pt3dadd( -23.8635, 625.651, -25.4952, 0.74 ) }
    dend_22 { pt3dadd( -23.8595, 626.362, -25.478, 0.29 ) }
    dend_22 { pt3dadd( -23.8844, 627.425, -25.4282, 0.29 ) }
    dend_22 { pt3dadd( -23.9154, 628.032, -25.3912, 0.66 ) }
    dend_22 { pt3dadd( -23.9779, 628.885, -25.3272, 0.66 ) }
    dend_22 { pt3dadd( -24.0772, 630.104, -25.2441, 0.22 ) }
    dend_22 { pt3dadd( -24.1568, 631.021, -25.1769, 0.52 ) }
    dend_22 { pt3dadd( -24.208, 631.662, -25.1266, 0.52 ) }
    dend_22 { pt3dadd( -24.3907, 633.876, -24.9379, 0.22 ) }
    dend_22 { pt3dadd( -24.4906, 635.125, -24.7962, 0.59 ) }
    dend_22 { pt3dadd( -24.5277, 635.58, -24.735, 0.59 ) }
    dend_22 { pt3dadd( -24.6229, 636.73, -24.5564, 0.22 ) }
    dend_22 { pt3dadd( -24.6841, 637.471, -24.433, 0.81 ) }
    dend_22 { pt3dadd( -24.7277, 638.008, -24.3385, 0.81 ) }
    dend_22 { pt3dadd( -24.8275, 639.434, -24.0729, 0.22 ) }
    dend_22 { pt3dadd( -24.8628, 640.028, -23.9615, 0.59 ) }
    dend_22 { pt3dadd( -24.8752, 640.36, -23.8982, 0.59 ) }
    dend_22 { pt3dadd( -24.9336, 642.578, -23.5045, 0.22 ) }
    dend_22 { pt3dadd( -24.9545, 643.275, -23.3951, 0.22 ) }
    dend_22 { pt3dadd( -24.9928, 644.48, -23.2343, 0.74 ) }
    dend_22 { pt3dadd( -25.0193, 645.048, -23.1768, 0.81 ) }
    dend_22 { pt3dadd( -25.0719, 645.881, -23.1029, 0.81 ) }
    dend_22 { pt3dadd( -25.1849, 647.318, -22.9908, 0.22 ) }
    dend_22 { pt3dadd( -25.3173, 648.762, -22.8902, 0.22 ) }
    dend_22 { pt3dadd( -25.4109, 649.67, -22.8331, 0.22 ) }
    dend_22 { pt3dadd( -25.5445, 650.818, -22.7711, 0.81 ) }
    dend_22 { pt3dadd( -25.5821, 651.128, -22.755, 0.81 ) }
    dend_22 { pt3dadd( -25.7921, 653.018, -22.6494, 0.22 ) }
    dend_22 { pt3dadd( -25.8003, 653.114, -22.643, 0.52 ) }
    dend_22 { pt3dadd( -25.9139, 655.271, -22.4676, 0.29 ) }
    dend_22 { pt3dadd( -25.9461, 656.488, -22.3551, 0.88 ) }
    dend_22 { pt3dadd( -25.9475, 657.183, -22.2852, 0.88 ) }
    dend_22 { pt3dadd( -25.9401, 658.439, -22.1626, 0.22 ) }
    dend_22 { pt3dadd( -25.9391, 659.239, -22.0933, 0.22 ) }
    dend_22 { pt3dadd( -25.9354, 660.175, -22.0069, 0.96 ) }
    dend_22 { pt3dadd( -25.9327, 660.562, -21.9683, 0.96 ) }
    dend_22 { pt3dadd( -25.9238, 662.11, -21.7995, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_22 { pt3dadd( -25.9357, 663.024, -21.7032, 0.22 ) }
    dend_22 { pt3dadd( -25.9686, 664.241, -21.5638, 0.88 ) }
    dend_22 { pt3dadd( -26.0148, 665.466, -21.4194, 0.22 ) }
    dend_22 { pt3dadd( -26.0738, 666.695, -21.2784, 0.88 ) }
    dend_22 { pt3dadd( -26.0893, 667.077, -21.2315, 0.88 ) }
    dend_22 { pt3dadd( -26.1281, 668.355, -21.061, 0.22 ) }
    dend_22 { pt3dadd( -26.14, 669.294, -20.9181, 0.96 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 7/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -21.544, 544.106, -43.9031, 0.37 ) }
    dend_25 { pt3dadd( -21.7052, 544.685, -44.186, 0.37 ) }
    dend_25 { pt3dadd( -21.7556, 544.88, -44.2795, 0.59 ) }
    dend_25 { pt3dadd( -21.8381, 545.241, -44.4382, 0.59 ) }
    dend_25 { pt3dadd( -21.8958, 545.549, -44.5617, 0.29 ) }
    dend_25 { pt3dadd( -21.9811, 546.083, -44.7735, 0.29 ) }
    dend_25 { pt3dadd( -22.0219, 546.374, -44.8914, 0.29 ) }
    dend_25 { pt3dadd( -22.0409, 546.633, -45.007, 0.52 ) }
    dend_25 { pt3dadd( -22.0413, 546.883, -45.1268, 0.22 ) }
    dend_25 { pt3dadd( -22.0223, 547.198, -45.2928, 0.52 ) }
    dend_25 { pt3dadd( -22.0017, 547.537, -45.484, 0.81 ) }
    dend_25 { pt3dadd( -21.9954, 547.778, -45.6154, 0.81 ) }
    dend_25 { pt3dadd( -22.0122, 548.374, -45.9459, 0.22 ) }
    dend_25 { pt3dadd( -22.037, 548.671, -46.1143, 0.81 ) }
    dend_25 { pt3dadd( -22.0867, 548.991, -46.2967, 0.81 ) }
    dend_25 { pt3dadd( -22.1711, 549.349, -46.4912, 0.29 ) }
    dend_25 { pt3dadd( -22.3157, 549.851, -46.7515, 0.29 ) }
    dend_25 { pt3dadd( -22.4307, 550.202, -46.9409, 0.81 ) }
    dend_25 { pt3dadd( -22.5236, 550.457, -47.0938, 1.11 ) }
    dend_25 { pt3dadd( -22.5964, 550.689, -47.2464, 0.74 ) }
    dend_25 { pt3dadd( -22.6731, 551.005, -47.4589, 0.29 ) }
    dend_25 { pt3dadd( -22.757, 551.447, -47.7681, 0.29 ) }
    dend_25 { pt3dadd( -22.8204, 551.812, -48.0242, 0.29 ) }
    dend_25 { pt3dadd( -22.8952, 552.318, -48.3621, 1.03 ) }
    dend_25 { pt3dadd( -22.9538, 552.741, -48.6258, 1.18 ) }
    dend_25 { pt3dadd( -23.0533, 553.484, -49.0623, 0.29 ) }
    dend_25 { pt3dadd( -23.0902, 553.775, -49.2193, 0.29 ) }
    dend_25 { pt3dadd( -23.1452, 554.246, -49.4464, 1.55 ) }
    dend_25 { pt3dadd( -23.1733, 554.498, -49.5607, 1.33 ) }
    dend_25 { pt3dadd( -23.2196, 554.854, -49.7244, 0.81 ) }
    dend_25 { pt3dadd( -23.2747, 555.228, -49.9115, 0.52 ) }
    dend_25 { pt3dadd( -23.3557, 555.778, -50.2058, 0.29 ) }
    dend_25 { pt3dadd( -23.4206, 556.25, -50.4619, 0.52 ) }
    dend_25 { pt3dadd( -23.4432, 556.429, -50.5558, 0.81 ) }
    dend_25 { pt3dadd( -23.5344, 557.171, -50.9163, 0.22 ) }
    dend_25 { pt3dadd( -23.5875, 557.686, -51.1387, 0.22 ) }
    dend_25 { pt3dadd( -23.6167, 557.962, -51.2356, 0.66 ) }
    dend_25 { pt3dadd( -23.6396, 558.265, -51.3188, 0.66 ) }
    dend_25 { pt3dadd( -23.6582, 558.849, -51.441, 0.22 ) }
    dend_25 { pt3dadd( -23.6436, 559.116, -51.4918, 0.52 ) }
    dend_25 { pt3dadd( -23.6161, 559.348, -51.5372, 0.52 ) }
    dend_25 { pt3dadd( -23.5613, 559.847, -51.6582, 0.29 ) }
    dend_25 { pt3dadd( -23.5148, 560.374, -51.8129, 0.96 ) }
    dend_25 { pt3dadd( -23.501, 560.641, -51.9041, 0.96 ) }
    dend_25 { pt3dadd( -23.4669, 561.467, -52.2231, 0.22 ) }
    dend_25 { pt3dadd( -23.4536, 562.052, -52.4698, 0.96 ) }
    dend_25 { pt3dadd( -23.4546, 562.457, -52.6579, 0.22 ) }
    dend_25 { pt3dadd( -23.463, 562.646, -52.7589, 0.59 ) }
    dend_25 { pt3dadd( -23.4936, 562.854, -52.8779, 0.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 56/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -21.544, 544.106, -43.9031, 0.15 ) }
    dend_24 { pt3dadd( -22.706, 543.666, -45.1109, 0.15 ) }
    dend_24 { pt3dadd( -23.0587, 543.543, -45.4535, 0.52 ) }
    dend_24 { pt3dadd( -23.2918, 543.466, -45.6732, 0.66 ) }
    dend_24 { pt3dadd( -24.1352, 543.188, -46.4569, 0.22 ) }
    dend_24 { pt3dadd( -24.8989, 542.927, -47.1491, 0.22 ) }
    dend_24 { pt3dadd( -25.2235, 542.811, -47.4266, 0.59 ) }
    dend_24 { pt3dadd( -25.7228, 542.66, -47.8292, 0.66 ) }
    dend_24 { pt3dadd( -26.6255, 542.381, -48.5167, 0.29 ) }
    dend_24 { pt3dadd( -26.9582, 542.275, -48.7539, 0.81 ) }
    dend_24 { pt3dadd( -27.6263, 542.045, -49.2173, 0.96 ) }
    dend_24 { pt3dadd( -28.3787, 541.77, -49.7557, 0.15 ) }
    dend_24 { pt3dadd( -29.1369, 541.479, -50.3283, 0.15 ) }
    dend_24 { pt3dadd( -29.8684, 541.191, -50.8976, 0.15 ) }
    dend_24 { pt3dadd( -30.4739, 540.949, -51.3716, 0.88 ) }
    dend_24 { pt3dadd( -30.9107, 540.752, -51.7223, 0.88 ) }
    dend_24 { pt3dadd( -32.1057, 540.199, -52.7162, 0.22 ) }
    dend_24 { pt3dadd( -32.5601, 539.976, -53.1121, 0.74 ) }
    dend_24 { pt3dadd( -33.1822, 539.637, -53.6587, 0.74 ) }
    dend_24 { pt3dadd( -33.8965, 539.202, -54.3025, 0.29 ) }
    dend_24 { pt3dadd( -34.5055, 538.801, -54.848, 0.29 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
    ModelViewParmSubset_2 = new SectionList()
    dend_54 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_54, dend_27, dend_0, axon_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, axon_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
    ModelViewParmSubset_5 = new SectionList()
    dend_54 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_56 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_28 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_37 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_30 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_3 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_49 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_38 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_31 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_16 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_13 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_11 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_5 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_51 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_50 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_15 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_48 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_45 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_35 OneSecGrp_SectionRef_47.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_34 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_19 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_18 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_41 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_21 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_22 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_54 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_27 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_29 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_6 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_2 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_12 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_7 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_8 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_32 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_9 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_10 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_14 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_40 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_47 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_44 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_26 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_43 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_42 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_53 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_52 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_20 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_23 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_24 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_25 OneSecGrp_SectionRef_59.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_56 nseg = 7
    dend_28 nseg = 3
    dend_37 nseg = 5
    dend_30 nseg = 3
    dend_3 nseg = 7
    dend_49 nseg = 3
    dend_38 nseg = 3
    dend_31 nseg = 5
    dend_16 nseg = 7
    dend_13 nseg = 5
    dend_11 nseg = 3
    dend_5 nseg = 3
    dend_51 nseg = 5
    dend_50 nseg = 5
    dend_36 nseg = 3
    dend_17 nseg = 11
    dend_15 nseg = 9
    dend_48 nseg = 3
    dend_45 nseg = 3
    dend_35 nseg = 3
    dend_34 nseg = 5
    dend_19 nseg = 3
    dend_18 nseg = 3
    dend_41 nseg = 3
    dend_21 nseg = 3
    dend_22 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L6_SBC_1994e395b2_0_0


