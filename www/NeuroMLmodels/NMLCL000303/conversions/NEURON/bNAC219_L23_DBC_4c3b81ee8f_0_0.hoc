// Cell: bNAC219_L23_DBC_4c3b81ee8f_0_0
/*
{
  "id" : "bNAC219_L23_DBC_4c3b81ee8f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.77789, -9.10671, 0.213384, 1.9414", "-1.61905, -8.1823, 0.19421, 2.74435", "-1.46021, -7.25789, 0.175037, 3.60731", "-1.30137, -6.33348, 0.155863, 4.45639", "-1.14253, -5.40907, 0.13669, 5.44814", "-0.98369, -4.48466, 0.117516, 6.63999", "-0.824851, -3.56025, 0.0983425, 7.51786", "-0.666011, -2.63584, 0.079169, 8.28149", "-0.507172, -1.71143, 0.0599954, 9.04511", "-0.348332, -0.787014, 0.0408218, 9.54017", "-0.189493, 0.137397, 0.0216482, 9.79406", "-0.0306533, 1.06181, 0.0024746, 9.91581", "0.128186, 1.98622, -0.016699, 9.60599", "0.287026, 2.91063, -0.0358726, 9.02434", "0.445865, 3.83504, -0.0550462, 8.24064", "0.604705, 4.75945, -0.0742198, 6.93834", "0.763544, 5.68386, -0.0933933, 5.63916", "0.922383, 6.60827, -0.112567, 4.40137", "1.08122, 7.53268, -0.131741, 3.22963", "1.24006, 8.4571, -0.150914, 2.07547", "1.3989, 9.38151, -0.170088, 1.29813" ]
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-1.00698, -7.77123, 2.18969, 2.77", "-1.27371, -10.4095, 2.18969, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998602831057
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-5.20698, 3.81127, 1.30969, 1.66", "-6.12306, 4.29879, 1.493, 1.66", "-8.70756, 5.67419, 2.01016, 1.11", "-11.2241, 7.01345, 2.51372, 1.11", "-14.1316, 8.56073, 3.0955, 1.11", "-17.3875, 10.2934, 3.747, 1.11", "-21.6206, 12.5461, 4.59404, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998602831057
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.04302, 9.37702, 7.37969, 2.77", "2.48984, 11.9386, 6.42528, 2.77", "2.75566, 13.6311, 5.74533, 2.49", "3.3921, 17.0553, 4.39308, 1.66", "3.88106, 19.4443, 3.49722, 1.66", "4.4026, 21.9925, 2.54167, 1.38", "5.12761, 25.5349, 1.21331, 1.38", "5.77951, 28.8224, -0.100097, 1.11", "6.48166, 32.5897, -1.62946, 1.11", "6.86247, 34.7262, -2.4287, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998602831057
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.3989, 9.38151, -0.170088, 0.55", "3.93909, 24.1649, -0.170088, 0.55", "6.47928, 38.9482, -0.170088, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-1.27371, -10.4095, 2.18969, 1.38", "0.449963, -14.5982, 2.23956, 1.38", "1.93761, -18.2133, 2.2826, 1.11", "3.75768, -22.6363, 2.33525, 1.11", "5.4008, -26.6292, 2.38279, 0.83", "7.24249, -31.1047, 2.43607, 1.11", "8.32253, -33.7293, 2.46732, 1.11" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-1.27371, -10.4095, 2.18969, 1.38", "-1.38764, -11.2661, 2.99969, 1.38", "-1.48334, -12.2328, 3.89493, 1.66", "-1.66531, -14.9099, 6.21818, 1.38", "-1.85056, -17.3571, 8.35217, 1.11", "-2.0506, -19.7069, 10.3657, 1.38", "-2.26848, -22.179, 12.3711, 1.11", "-2.33982, -22.8879, 12.9346, 1.11", "-2.5532, -25.2107, 14.6186, 1.38", "-2.68234, -27.025, 15.6828, 1.11", "-2.85957, -29.3506, 16.7736, 1.38", "-3.0428, -31.4406, 17.6427, 0.55", "-3.17748, -32.8341, 18.1592, 0.55", "-3.40383, -34.9293, 18.8611, 0.83", "-3.63046, -37.333, 19.5019, 0.83", "-3.71675, -39.4135, 19.8538, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-21.6206, 12.5461, 4.59404, 0.83", "-24.0299, 14.1216, -0.343005, 0.83", "-25.5348, 15.1043, -3.42512, 0.83", "-27.1408, 16.0907, -6.69135, 0.83", "-29.8578, 17.3805, -12.0108, 0.83", "-33.7216, 18.9763, -19.1896, 0.83", "-34.6493, 19.3595, -20.9133, 0.83", "-37.8123, 20.6572, -26.9689, 0.83", "-40.8101, 21.8149, -32.9322, 0.55", "-43.9719, 22.9121, -38.9056, 0.55", "-47.2454, 23.6229, -44.5021, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-21.6206, 12.5461, 4.59404, 0.83", "-22.4947, 15.4688, 5.70976, 0.83", "-22.9204, 16.9508, 6.36687, 0.83", "-23.4678, 18.6366, 7.14809, 0.83", "-25.0253, 22.6876, 9.52024, 0.83", "-26.1751, 25.6782, 11.2715, 0.83", "-27.1805, 28.2932, 12.8027, 0.83", "-28.419, 31.6674, 14.9352, 0.83", "-29.3122, 34.1611, 16.5635, 0.83", "-31.7935, 40.4566, 21.124, 1.11" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "6.86247, 34.7262, -2.4287, 0.83", "7.16866, 37.2547, -1.39518, 0.83", "7.43822, 39.4806, -0.485314, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.86247, 34.7262, -2.4287, 0.83", "7.0981, 35.2093, -5.57878, 0.83", "7.29048, 35.5002, -7.29432, 0.83", "8.71973, 36.9223, -16.5337, 0.55", "8.96188, 37.1632, -18.099, 0.55", "9.53177, 37.7303, -21.783, 0.55", "10.0986, 38.2943, -25.4472, 0.55", "10.9436, 38.8303, -30.0969, 0.83", "12.5005, 39.5876, -37.8801, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "6.47928, 38.9482, -0.170088, 0.28", "9.01947, 53.7316, -0.170088, 0.28", "11.5597, 68.5149, -0.170088, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "8.32253, -33.7293, 2.46732, 1.11", "8.92172, -35.2449, 4.09117, 1.11" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "8.32253, -33.7293, 2.46732, 1.38", "8.39003, -35.3202, 3.35496, 1.38", "8.45558, -37.8388, 4.7028, 1.38", "8.60147, -42.6776, 7.09868, 0.83", "8.73013, -45.2516, 8.21344, 0.83", "8.84013, -46.5465, 8.73829, 0.83", "9.07833, -48.6052, 9.51305, 0.83", "9.43721, -51.3068, 10.5182, 0.83", "9.85055, -53.8545, 11.3939, 0.83", "10.7055, -58.2557, 12.4893, 0.83", "10.9933, -59.8426, 12.8521, 0.83", "11.5072, -62.3007, 13.3655, 1.11" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-3.71675, -39.4135, 19.8538, 0.55", "-5.54034, -43.5372, 22.9382, 0.55", "-7.31018, -47.5394, 25.9318, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-3.71675, -39.4135, 19.8538, 0.83", "-4.19574, -41.5507, 17.2842, 0.83", "-4.61811, -43.4827, 15.3863, 0.83", "-4.89511, -45.1279, 14.0177, 0.83", "-6.28476, -53.6716, 8.17941, 0.83", "-6.5447, -55.4147, 7.17875, 0.55", "-6.89313, -57.5928, 6.06247, 0.55", "-7.54656, -61.1616, 4.46796, 0.83", "-8.14669, -64.2695, 3.3454, 0.55", "-8.95457, -68.3889, 2.41082, 0.55", "-9.44268, -71.4419, 2.21357, 0.55", "-9.69919, -73.0392, 2.12531, 0.55", "-9.90144, -74.2264, 2.0729, 0.55", "-10.4959, -77.8437, 2.02169, 0.83", "-11.1146, -81.9479, 2.37683, 0.55", "-11.2172, -83.1488, 2.56709, 0.55", "-11.3412, -85.0853, 2.93443, 0.55", "-11.371, -86.209, 3.17942, 0.55", "-11.388, -89.5809, 4.08177, 0.83", "-11.3915, -93.7852, 5.55346, 0.55", "-11.3623, -95.9504, 6.5012, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-47.2454, 23.6229, -44.5021, 0.55", "-51.0878, 23.6793, -45.4223, 0.55", "-53.8871, 23.7194, -46.0023, 0.55", "-56.1739, 23.7454, -46.2919, 0.55", "-58.1155, 23.6883, -46.4169, 0.28", "-59.603, 23.5568, -46.4185, 0.83", "-62.0579, 23.2645, -46.2877, 0.28", "-64.5483, 22.8237, -45.8929, 0.55", "-67.3759, 22.1966, -45.3206, 0.55", "-69.8602, 21.5064, -44.7181, 0.55", "-72.5067, 20.5497, -44.1514, 0.83", "-74.542, 19.7221, -43.774, 0.28", "-75.511, 19.348, -43.6359, 0.55", "-76.4968, 19.0035, -43.6989, 0.28", "-77.8124, 18.6444, -44.1238, 0.55", "-81.0516, 18.1686, -46.3812, 0.55", "-82.0266, 18.1137, -47.2697, 0.28", "-84.2914, 18.0521, -49.5652, 0.55", "-87.8029, 18.1181, -53.3761, 0.28", "-89.1228, 18.2164, -54.9171, 0.55", "-92.8363, 18.7179, -59.778, 0.28", "-93.5145, 18.8477, -60.8301, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-47.2454, 23.6229, -44.5021, 1.11", "-48.8637, 20.3333, -45.3625, 1.11", "-50.2101, 17.5919, -46.12, 0.28", "-51.7989, 14.5317, -46.9338, 0.55", "-53.7159, 10.7712, -47.8562, 0.55", "-55.4114, 7.38899, -48.5486, 0.28", "-56.6804, 4.83661, -49.0394, 0.55", "-58.529, 0.980744, -49.7123, 0.55", "-59.4494, -1.10668, -50.0306, 0.83", "-60.2355, -3.05471, -50.1999, 0.55", "-61.7442, -6.74909, -50.2784, 0.55", "-63.1119, -9.82846, -50.191, 0.83", "-64.3187, -12.1667, -50.0024, 0.83", "-66.1952, -15.269, -49.7576, 0.83", "-68.8256, -19.2092, -49.5391, 0.55", "-70.0503, -20.918, -49.4448, 0.55", "-71.7843, -23.2006, -49.4326, 1.38", "-74.7143, -26.7926, -49.1896, 0.28", "-78.4609, -31.1747, -48.7475, 0.55", "-80.6002, -33.5958, -48.4206, 0.55", "-82.7922, -36.0844, -48.0545, 0.28", "-86.6929, -40.0484, -46.7145, 0.83", "-90.7931, -43.39, -43.9465, 0.28", "-91.9684, -44.0949, -42.7934, 0.55", "-92.4488, -44.3043, -42.1853, 0.28", "-94.1492, -44.8546, -39.8106, 0.55", "-98.5897, -46.1032, -33.2293, 0.55", "-101.949, -47.0693, -27.8374, 0.28", "-102.809, -47.306, -26.4848, 0.83", "-104.9, -47.8267, -23.072, 0.28", "-105.252, -47.9255, -22.4653, 0.55", "-106.932, -48.5533, -19.2695, 0.28", "-107.563, -49.3379, -17.743, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-31.7935, 40.4566, 21.124, 0.55", "-35.192, 43.6709, 23.2572, 0.55", "-37.0563, 45.9241, 24.3959, 0.55", "-39.6065, 49.3459, 25.9051, 0.55", "-41.2913, 51.5965, 26.951, 0.55", "-43.2237, 54.0938, 28.1873, 0.83", "-45.6552, 57.08, 29.7123, 0.55", "-48.4157, 60.475, 31.351, 0.83", "-51.0606, 63.2514, 32.7595, 0.55", "-53.4017, 65.5897, 34.0123, 0.83", "-56.1961, 68.0446, 35.4863, 0.83", "-58.9663, 70.0129, 36.8697, 0.55", "-61.0066, 71.1036, 37.8853, 0.55", "-64.9324, 72.3356, 39.6853, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-31.7935, 40.4566, 21.124, 0.55", "-33.0142, 42.3543, 20.9252, 0.55", "-33.493, 43.4443, 21.1566, 0.83", "-34.0703, 44.7833, 21.4967, 0.55", "-34.41, 45.598, 21.7674, 0.83", "-34.9628, 47.0478, 22.2433, 0.55", "-35.2059, 47.7924, 22.5032, 0.83", "-36.4659, 52.7089, 24.29, 0.83", "-37.0647, 55.5822, 25.5344, 0.83", "-37.4324, 57.7357, 26.5402, 0.55", "-37.7086, 59.4119, 27.3097, 0.55", "-38.3353, 62.6038, 28.6621, 0.83", "-38.644, 64.2335, 29.3287, 0.83", "-39.3533, 67.8774, 30.6675, 0.83", "-39.8551, 70.7317, 31.7474, 0.55", "-40.4067, 73.3104, 32.6273, 0.55", "-41.3344, 76.5324, 33.7901, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "7.43822, 39.4806, -0.485314, 0.83", "7.57987, 40.4811, -0.47751, 0.83", "7.83689, 41.9999, -0.421043, 0.83", "8.23111, 43.9568, -0.334204, 0.83", "8.66597, 46.1073, -0.23595, 0.83", "8.92356, 47.3007, -0.212882, 0.83", "9.35396, 49.3628, -0.144356, 0.83", "9.78597, 51.4966, -0.225389, 0.83", "10.1238, 52.7188, -0.298723, 0.83", "10.4782, 53.682, -0.315764, 0.83", "11.2944, 55.5246, -0.262358, 0.83", "12.1378, 57.0801, -0.179961, 0.83", "14.2125, 60.3006, 0.0438356, 0.83", "16.2956, 62.9868, 0.302977, 0.83", "19.4089, 66.44, 0.710344, 0.83", "20.6923, 67.6786, 0.875412, 0.83", "22.9195, 69.5086, 1.18743, 0.83", "25.4466, 71.3546, 1.51853, 0.83", "27.8918, 72.9484, 1.81752, 0.83", "29.3029, 73.8227, 1.8773, 0.83", "31.2409, 74.9688, 1.80665, 0.83", "33.8128, 76.5815, 1.536, 0.83", "35.2959, 77.634, 1.28701, 0.83", "37.4824, 79.4097, 0.576613, 0.83", "38.9969, 80.9167, -0.226437, 1.11", "40.1957, 82.3299, -1.15389, 0.83", "41.1195, 83.6202, -2.08819, 0.83", "41.8329, 84.7812, -2.96362, 0.83", "43.5197, 87.6781, -4.89034, 0.83", "44.1898, 88.8422, -5.51991, 0.83", "45.7003, 91.1073, -6.40339, 0.83", "46.4964, 92.1074, -6.62443, 0.83", "47.9112, 93.6946, -6.77429, 0.83", "50.039, 96.0319, -6.78898, 0.55", "51.6294, 97.7548, -6.66841, 0.83", "53.5718, 99.9175, -6.52713, 0.55", "55.2487, 101.973, -6.44861, 0.55", "55.4955, 102.307, -6.45641, 0.28", "56.1666, 103.401, -6.54464, 1.11", "57.1688, 105.494, -6.71801, 1.11", "57.6708, 106.967, -6.69766, 0.55", "58.0846, 108.718, -6.5262, 0.83", "58.3565, 110.105, -6.27327, 1.38", "58.7092, 111.875, -5.90649, 0.83", "59.2852, 114.682, -5.23967, 0.83", "59.5031, 115.814, -4.94459, 0.28", "59.7015, 116.954, -4.67904, 0.83", "59.9398, 118.464, -4.38945, 0.83", "60.1444, 120.092, -4.13253, 0.83", "60.3311, 121.588, -3.95433, 1.38", "60.4933, 123.107, -3.90809, 0.83", "60.7444, 125.584, -3.89327, 0.55", "60.864, 126.768, -3.87905, 0.55", "60.9387, 127.596, -3.82314, 0.55", "61.0314, 128.609, -3.7927, 0.83", "61.1455, 129.807, -3.78335, 0.55", "61.2351, 130.652, -3.81325, 0.83", "61.3967, 131.843, -3.93393, 0.55", "61.52, 133.045, -4.09969, 0.55", "61.8236, 136.535, -4.77174, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "7.43822, 39.4806, -0.485314, 0.55", "6.55664, 41.2843, -0.554296, 0.55", "5.84837, 42.7256, -0.619657, 0.83", "5.01352, 44.4244, -0.696697, 0.55", "3.64274, 47.2138, -0.823192, 0.83", "1.99245, 50.572, -0.975482, 0.55", "0.935501, 52.7228, -1.07301, 0.55", "0.637572, 53.3457, -1.11716, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "12.5005, 39.5876, -37.8801, 0.28", "13.9822, 37.8021, -38.3208, 0.28", "16.0184, 35.2877, -39.1724, 0.55", "17.9436, 32.7884, -40.1246, 0.55", "19.6804, 30.488, -41.1446, 0.55", "21.7042, 28.0859, -42.1426, 0.28", "22.9633, 26.7978, -42.6136, 0.55", "24.6124, 25.432, -43.1274, 0.28", "26.142, 24.4299, -43.4352, 0.55", "28.3371, 23.3476, -43.6601, 0.28", "33.1453, 21.3844, -43.8191, 0.55", "36.5339, 20.2012, -43.6537, 0.28", "38.3057, 19.6752, -43.4758, 0.55", "40.8359, 19.0512, -43.0789, 0.28", "41.8893, 18.8551, -42.8778, 0.83", "44.4793, 18.4795, -42.2426, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "12.5005, 39.5876, -37.8801, 0.55", "13.3569, 39.8627, -38.236, 0.55", "14.4392, 40.2103, -38.6858, 0.55", "15.0769, 40.4151, -38.9508, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "8.92172, -35.2449, 4.09117, 0.83", "11.1564, -35.656, 5.54602, 0.83", "13.2097, -35.8759, 6.7685, 0.83", "15.5336, -36.0219, 8.12612, 0.83", "17.8795, -36.0372, 9.48061, 0.83", "20.7277, -35.8741, 11.0878, 0.83", "23.9633, -35.6105, 12.8829, 0.83", "26.7562, -35.2976, 14.3743, 0.83", "29.8895, -34.786, 16.0803, 0.83", "33.3405, -34.0418, 17.9704, 0.83", "36.5184, -33.2158, 19.6081, 0.83", "37.0758, -33.0658, 19.8735, 0.83", "37.421, -32.9904, 20.0362, 0.83" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "8.92172, -35.2449, 4.09117, 0.83", "8.6474, -36.5193, 4.09249, 0.83", "8.41298, -37.7485, 4.1273, 0.83", "8.22152, -38.7153, 4.17829, 0.55", "7.9665, -39.9262, 4.1855, 0.83", "7.76987, -40.9576, 4.09584, 0.83", "7.57341, -42.1611, 3.9268, 0.83", "7.35615, -43.7535, 3.61951, 0.55", "7.18763, -45.0787, 3.35874, 0.83", "7.00573, -46.5359, 3.06143, 0.83", "6.75066, -48.5051, 2.69281, 0.83", "6.61606, -49.4292, 2.55457, 0.55", "6.41573, -50.6587, 2.37944, 0.83", "6.13416, -52.253, 2.23504, 0.55", "5.96238, -53.3058, 2.15724, 0.55", "5.79856, -54.3609, 2.10543, 0.55", "5.58935, -55.5283, 2.02714, 0.55", "5.36207, -56.7351, 1.84846, 0.55", "5.0801, -58.356, 1.47841, 0.55", "4.81527, -59.8998, 1.01992, 0.28", "4.61354, -60.9761, 0.672627, 0.55", "4.35977, -62.1638, 0.314952, 0.28", "4.23319, -62.7553, 0.134819, 0.55", "4.12515, -63.2525, 0.00196457, 0.28", "3.79803, -64.7339, -0.367737, 0.55", "3.66856, -65.3418, -0.468507, 0.55", "3.37188, -67.0297, -0.697144, 0.55", "3.25273, -68.3626, -0.844417, 0.55", "3.24397, -68.6097, -0.862202, 0.28", "3.30898, -69.3225, -0.954385, 0.55", "3.43109, -70.0072, -1.14297, 0.28", "3.56751, -70.6683, -1.3822, 0.55", "3.73373, -71.3281, -1.68189, 0.55", "3.94465, -72.3481, -2.22251, 0.55", "4.39454, -74.6435, -3.66674, 0.55", "4.7779, -76.6659, -5.01865, 0.55", "4.87883, -77.2642, -5.40898, 0.28", "4.99544, -77.9538, -5.82071, 0.55", "5.18282, -79.7578, -6.80475, 0.55", "5.27761, -81.3247, -7.53217, 0.28", "5.25689, -82.8544, -8.02747, 0.55", "5.1962, -84.31, -8.31996, 0.55", "4.99592, -86.3956, -8.74521, 0.55", "4.74021, -88.3465, -9.12853, 0.55", "4.57257, -89.7565, -9.41183, 0.55", "4.43424, -90.7522, -9.64743, 0.55", "4.15747, -93.06, -10.4154, 0.83", "4.01875, -95.5731, -11.4196, 0.55", "4.03864, -97.0582, -12.0518, 0.55", "4.18204, -98.6099, -12.7149, 0.55", "4.3874, -99.9767, -13.2859, 0.55", "4.80364, -102.103, -14.0702, 0.55", "5.41062, -104.532, -14.7756, 0.55", "5.68167, -105.586, -15.0211, 0.55", "5.91973, -106.593, -15.2565, 0.55", "6.15446, -107.802, -15.5477, 0.83", "6.54438, -109.98, -16.1404, 0.55", "6.84652, -112.479, -16.9469, 0.83", "6.87215, -114.83, -17.931, 0.55", "6.72357, -116.827, -18.9583, 0.28", "6.59586, -117.702, -19.5164, 0.55", "6.38794, -118.712, -20.319, 0.83", "6.11621, -119.931, -21.5443, 0.83", "5.8123, -121.609, -23.8121, 0.55", "5.69876, -122.604, -25.3771, 0.55", "5.6224, -123.535, -26.9356, 1.11", "5.5894, -124.769, -29.0645, 0.55", "5.64389, -126.152, -31.5298, 0.83", "6.02256, -128.819, -36.5537, 0.28", "6.11336, -129.16, -37.2614, 0.28", "6.42948, -130.25, -39.6092, 0.83" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "11.5072, -62.3007, 13.3655, 0.55", "12.7191, -65.3999, 13.1406, 0.55", "14.2226, -69.2736, 13.1789, 0.83", "15.3102, -72.1829, 13.3271, 0.55", "16.8507, -77.016, 13.6802, 0.55", "18.0394, -82.2522, 14.1629, 0.55", "18.4803, -84.783, 14.4186, 0.55", "19.0369, -89.855, 15.0429, 0.83", "19.1933, -92.6353, 15.4329, 0.55", "19.1628, -97.631, 16.1545, 0.55", "18.7603, -102.887, 16.7612, 0.55", "18.278, -106.147, 17.0355, 0.55", "17.1295, -111.931, 17.2352, 0.55", "16.4263, -114.669, 17.1721, 0.83", "15.3547, -118.347, 16.9849, 0.55", "14.2282, -121.729, 16.7107, 0.83", "13.3072, -124.294, 16.5434, 0.83", "11.4218, -128.531, 16.3516, 0.55", "9.88163, -131.47, 16.1969, 0.83", "8.64285, -133.58, 16.0525, 0.83", "7.00632, -136.123, 15.9134, 0.83", "4.63204, -139.327, 15.6319, 0.55", "2.7761, -141.622, 15.2448, 0.55", "-0.926037, -146.159, 14.1851, 0.55", "-4.11013, -150.123, 13.0205, 1.11", "-6.50837, -153.188, 12.0121, 0.55", "-9.43743, -157.1, 10.557, 0.55", "-11.3617, -159.737, 9.45899, 0.55", "-12.9868, -162.238, 8.50399, 1.11", "-14.0394, -164.347, 7.84249, 0.55", "-14.2529, -165.065, 7.659, 0.83", "-14.4241, -166.418, 7.39314, 0.28", "-14.4499, -167.271, 7.3128, 0.55", "-14.4477, -168.918, 7.18465, 0.28", "-14.5147, -171.364, 7.07224, 0.83", "-14.8044, -174.652, 7.00603, 0.28", "-15.1997, -177.918, 6.89401, 0.55", "-15.5716, -180.725, 6.81345, 0.28", "-15.7809, -181.922, 6.80945, 0.83", "-16.4585, -185.1, 6.83252, 0.28", "-17.2084, -188.141, 6.91614, 0.28", "-17.7844, -190.278, 7.05826, 0.83", "-18.847, -193.324, 7.27542, 0.28", "-19.9473, -196.549, 7.51198, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "11.5072, -62.3007, 13.3655, 0.55", "8.96665, -63.2971, 12.9735, 0.55", "5.77357, -64.4348, 12.5264, 0.55", "3.0964, -65.3386, 12.567, 0.55", "-0.256823, -66.3714, 12.8998, 0.55", "-2.79346, -67.1108, 13.3673, 0.55", "-3.6317, -67.3575, 13.5866, 0.55", "-4.55694, -67.6155, 13.9324, 1.11", "-8.99822, -68.9983, 16.044, 0.55", "-10.0608, -69.3911, 16.671, 0.55", "-11.603, -70.0073, 17.7486, 0.83", "-13.1204, -70.7396, 18.828, 0.28", "-15.5537, -71.9859, 20.5819, 0.55", "-16.4042, -72.4885, 21.1418, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-11.3623, -95.9504, 6.5012, 0.55", "-10.052, -97.2061, 7.08015, 0.55", "-8.2844, -98.9577, 7.84612, 0.55", "-6.1921, -101.052, 8.78115, 0.55", "-3.36879, -103.998, 10.0894, 0.55", "-1.60841, -105.854, 10.9304, 0.83", "-0.359539, -107.106, 11.5922, 1.11", "0.669833, -108.048, 12.1871, 0.83", "2.06247, -109.098, 13.0775, 0.83", "3.48449, -110.014, 14.0812, 0.83", "4.99935, -110.8, 15.2392, 0.83", "7.27756, -111.967, 17.0244, 0.55", "8.78484, -112.77, 18.2618, 0.55", "10.8182, -114.136, 19.8795, 0.83", "9.86303, -116.135, 18.7469, 0.55", "8.81954, -118.079, 18.0715, 0.55", "7.8513, -119.904, 17.4463, 0.55", "6.36392, -122.715, 16.4866, 0.83", "4.97134, -125.077, 15.6217, 0.55", "3.15609, -127.75, 14.4216, 0.55", "0.683401, -130.94, 12.7763, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-11.3623, -95.9504, 6.5012, 1.11", "-11.2239, -97.5546, 6.80321, 1.11", "-11.1115, -99.6637, 7.15479, 0.55", "-11.0646, -100.986, 7.36799, 0.55", "-10.9857, -102.693, 7.61146, 0.55", "-10.9497, -105.062, 7.99356, 0.55", "-10.9192, -107.929, 8.46308, 0.55", "-10.8572, -110.551, 8.89613, 0.55", "-10.8409, -111.769, 9.09654, 0.28", "-10.8666, -113.701, 9.3757, 0.83", "-11.0715, -116.821, 9.75676, 0.55", "-11.186, -118.017, 9.88495, 0.55", "-11.3289, -119.45, 10.0328, 0.28", "-11.4836, -120.666, 10.1675, 0.83", "-11.7661, -122.513, 10.3661, 0.55", "-12.2777, -125.052, 10.6342, 0.83", "-12.571, -126.254, 10.744, 0.55", "-12.8957, -127.165, 10.8373, 0.55", "-13.4133, -128.358, 10.9599, 0.83", "-14.0557, -129.674, 11.0995, 0.83", "-15.0889, -131.43, 11.3086, 0.55", "-15.7061, -132.453, 11.4375, 0.55", "-16.7641, -134.132, 11.6628, 0.55", "-17.5806, -135.325, 11.8496, 0.83", "-18.5612, -136.709, 12.0863, 0.28", "-19.5605, -138.085, 12.3619, 0.55", "-21.1203, -140.275, 12.8385, 0.55", "-21.9581, -141.517, 13.1283, 0.55", "-22.6039, -142.514, 13.3955, 0.55", "-23.3066, -143.482, 13.6818, 0.55", "-24.8544, -145.455, 14.282, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-64.9324, 72.3356, 39.6853, 0.55", "-69.581, 71.8183, 39.8892, 0.55", "-73.4118, 71.392, 40.0573, 0.55", "-78.628, 70.8115, 40.2861, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-64.9324, 72.3356, 39.6853, 0.55", "-65.5174, 69.6196, 38.7771, 0.55", "-65.9347, 67.6824, 38.1294, 0.55", "-66.7149, 64.0602, 36.9182, 0.55", "-67.0713, 62.4056, 36.365, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "0.637572, 53.3457, -1.11716, 0.55", "-1.43176, 53.7307, 3.60307, 0.55", "-2.21005, 53.9193, 5.24817, 0.55", "-3.73514, 54.3328, 7.97713, 0.55", "-7.8821, 55.1073, 15.5222, 0.55", "-8.83732, 55.2222, 17.154, 0.55", "-9.58508, 55.2509, 18.3807, 0.55", "-10.5887, 55.2025, 20.0197, 0.55", "-13.6235, 54.7037, 24.4959, 0.55", "-16.5374, 54.0163, 28.3075, 0.55", "-18.6736, 53.3956, 30.7113, 0.55", "-20.2568, 52.8552, 32.5466, 0.55", "-22.5451, 51.9599, 35.722, 0.55", "-24.7374, 51.106, 39.0928, 0.55", "-26.2303, 50.7159, 41.7298, 0.55", "-27.3275, 50.6845, 43.708, 0.55", "-29.0078, 50.8958, 46.8855, 0.55", "-33.6104, 52.348, 54.9462, 0.55", "-35.0524, 53.0772, 57.3532, 0.55", "-38.5351, 55.1956, 62.7182, 0.55", "-40.9524, 56.7708, 66.1449, 0.55", "-43.0816, 58.2037, 68.6123, 0.55", "-47.3132, 60.9838, 72.3399, 0.55", "-50.7175, 63.1094, 74.2326, 0.55", "-52.3372, 64.0229, 74.8903, 0.55", "-54.8887, 65.3566, 75.5979, 0.55", "-60.4808, 68.1808, 76.8956, 0.55", "-64.6182, 70.1912, 77.7473, 0.55", "-69.7863, 72.5369, 78.6531, 0.55", "-72.4283, 73.6843, 79.0254, 0.55", "-78.0356, 76.2597, 79.7704, 0.55", "-81.8005, 78.0339, 80.3157, 0.55", "-84.605, 79.4983, 81.0583, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "0.637572, 53.3457, -1.11716, 0.55", "-0.293333, 55.3439, -1.50415, 0.55", "-0.853567, 56.5464, -1.73705, 0.55", "-1.505, 57.9448, -2.00786, 0.55", "-2.13935, 59.3064, -2.27156, 0.83", "-2.59231, 60.2787, -2.45986, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "37.421, -32.9904, 20.0362, 0.55", "39.9718, -32.9902, 18.9131, 0.55", "42.7545, -33.1144, 17.6939, 0.55", "46.2669, -33.3917, 16.2564, 0.55", "52.2952, -33.8677, 13.7891, 0.55", "55.6193, -34.1301, 12.4286, 0.55", "58.8769, -34.3874, 11.0953, 0.55", "61.1134, -34.6522, 10.1361, 0.83", "63.8176, -35.1901, 8.84991, 0.83" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "37.421, -32.9904, 20.0362, 0.55", "38.4026, -32.9793, 18.7651, 0.55", "39.0083, -32.9218, 17.9636, 0.55", "41.6219, -32.5147, 14.4463, 0.55", "43.9314, -31.9796, 11.3997, 0.55", "45.1776, -31.5781, 9.77713, 0.83", "47.2594, -30.7299, 7.16132, 0.55", "48.0554, -30.3232, 6.16428, 0.55", "48.5671, -29.9054, 5.58652, 0.28", "49.3442, -28.5771, 5.02984, 0.55", "50.0453, -26.811, 4.77162, 0.55", "50.4867, -25.4888, 4.74313, 0.83", "51.1072, -23.2465, 4.92764, 0.28", "51.5958, -21.2413, 5.09876, 0.55", "51.8707, -19.9108, 5.19954, 0.55", "52.0865, -18.4886, 5.24455, 0.28", "52.2155, -17.2614, 5.18928, 0.55", "52.3032, -15.2403, 4.96906, 0.28", "52.3299, -13.8906, 4.76481, 0.55", "52.2694, -12.7094, 4.62749, 0.28", "52.1602, -10.9147, 4.41441, 0.55", "52.1107, -9.63094, 4.24865, 0.55", "52.0829, -7.40435, 3.97356, 0.55", "52.1206, -6.23238, 3.81016, 0.55", "52.2274, -4.37754, 3.58556, 0.55", "52.3809, -3.11985, 3.46081, 0.55", "52.5947, -2.09452, 3.38355, 0.55", "52.9595, -0.776676, 3.38444, 0.28", "53.1324, -0.209896, 3.40511, 0.55", "53.505, 0.971694, 3.461, 0.28", "53.8426, 2.14054, 3.55622, 0.55", "54.1766, 3.38641, 3.69862, 0.55", "54.7197, 5.4453, 3.97535, 0.28", "55.0266, 6.60778, 4.13769, 0.55", "55.3672, 7.98043, 4.38413, 0.28", "55.8722, 10.2733, 4.87095, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-19.9473, -196.549, 7.51198, 0.55", "-18.831, -199.307, 7.13157, 0.55", "-18.5092, -200.382, 7.12675, 0.55", "-17.9644, -202.132, 7.16544, 0.83", "-17.5639, -203.184, 7.19295, 0.28", "-16.7862, -204.727, 7.13278, 0.55", "-16.4197, -205.454, 7.10443, 0.28", "-15.2049, -207.582, 7.23133, 0.55", "-14.6199, -208.502, 7.27416, 0.28", "-13.6095, -210.057, 7.33007, 0.83", "-12.0752, -212.025, 7.18717, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-19.9473, -196.549, 7.51198, 0.55", "-22.9817, -196.589, 7.86387, 0.55", "-23.6023, -196.665, 7.99804, 0.28", "-25.117, -196.85, 8.32545, 0.55", "-25.9948, -196.957, 8.51517, 0.28", "-27.6664, -197.161, 8.87652, 0.55", "-29.1994, -197.348, 9.20789, 0.28", "-31.5646, -197.46, 9.78255, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "0.683401, -130.94, 12.7763, 0.55", "-0.414771, -132.17, 13.7325, 0.55", "-1.91152, -133.848, 15.0358, 0.55", "-2.77173, -134.812, 15.7848, 0.83", "-3.73483, -135.891, 16.6234, 0.83", "-4.88608, -137.181, 17.6258, 0.55", "-5.84842, -138.259, 18.4637, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "0.683401, -130.94, 12.7763, 0.55", "0.65981, -133.081, 13.0571, 0.55", "0.522558, -135.862, 13.5434, 0.55", "0.342154, -141.362, 14.5877, 0.55", "0.275816, -144.598, 15.2094, 0.83", "0.279236, -148.329, 15.9901, 0.55", "0.288605, -152.484, 16.8647, 0.83", "0.306408, -156.279, 17.6994, 0.55", "0.344271, -159.628, 18.5084, 0.55", "0.353608, -161.596, 19.0296, 1.11", "0.509388, -165.102, 19.9649, 0.55", "0.662195, -168.284, 20.8706, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-2.59231, 60.2787, -2.45986, 0.55", "-5.6844, 66.1175, -4.43647, 0.55", "-7.35363, 69.2696, -5.5035, 0.55", "-8.22385, 70.9128, -6.05979, 0.28", "-9.69484, 73.6905, -7.00011, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-2.59231, 60.2787, -2.45986, 0.55", "-4.77168, 60.0323, -2.27816, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "63.8176, -35.1901, 8.84991, 0.55", "65.4903, -34.5105, 11.0084, 0.55", "66.6584, -33.9486, 12.8341, 0.55", "69.2554, -32.7978, 17.5623, 0.55", "72.3262, -31.4484, 23.5023, 0.55", "74.0456, -30.7911, 26.8207, 0.28", "74.9786, -30.4829, 28.5381, 0.55", "77.8222, -29.7464, 33.8606, 0.83", "79.8027, -29.4019, 37.5681, 0.83", "81.973, -29.2869, 41.2639, 0.83", "83.3247, -29.3436, 43.164, 0.55", "84.7906, -29.4324, 45.0412, 0.83", "88.2851, -29.7919, 49.1717, 0.55", "90.7413, -30.0888, 51.4968, 0.55", "93.0021, -30.2939, 53.4173, 0.83", "95.6652, -30.6467, 55.6467, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "63.8176, -35.1901, 8.84991, 0.83", "65.2001, -36.9674, 8.28377, 0.83", "66.9397, -39.3854, 7.14688, 0.83", "68.1008, -40.9994, 6.38802, 0.55", "68.8343, -42.019, 5.90866, 0.55", "70.5808, -44.4467, 4.76723, 0.83", "71.6586, -45.9448, 4.06286, 0.83", "73.3096, -48.2282, 2.56508, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-4.77168, 60.0323, -2.27816, 0.55", "-10.4385, 56.739, -1.38328, 0.55", "-14.8812, 54.3449, -0.711208, 0.55", "-20.4205, 51.3599, 0.126761, 0.55", "-24.7429, 49.0307, 0.780649, 0.55", "-30.8779, 45.7247, 1.70873, 0.55", "-36.4024, 42.7476, 2.54447, 0.55", "-40.8912, 40.2451, 3.11441, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-4.77168, 60.0323, -2.27816, 0.55", "-7.20915, 61.5464, -1.18839, 0.55", "-9.21997, 62.8268, -0.226673, 0.55", "-10.2053, 63.3843, 0.308509, 0.55", "-13.4429, 64.9355, 2.44634, 0.55", "-18.7189, 67.3847, 6.16747, 0.55", "-20.5851, 68.2479, 7.48447, 0.55", "-22.105, 68.9473, 8.63634, 0.55", "-26.6425, 70.8624, 12.3801, 0.55", "-30.6781, 72.4976, 15.8171, 0.55", "-32.1153, 73.025, 17.1098, 0.83", "-33.9021, 73.7235, 18.7042, 0.55", "-34.9044, 74.1388, 19.6091, 0.55", "-38.2935, 75.4462, 22.6312, 0.55", "-40.5379, 76.6469, 24.4952, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "73.3096, -48.2282, 2.56508, 0.55", "72.8676, -48.715, 0.91458, 0.55", "71.602, -50.1088, -3.81087, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "73.3096, -48.2282, 2.56508, 0.83", "73.7392, -50.2616, 2.51395, 0.83", "74.0324, -51.6732, 2.44525, 0.55", "74.533, -54.0991, 2.3084, 0.83", "75.0898, -56.5834, 2.17016, 0.83", "75.8504, -59.8122, 2.06366, 0.55", "76.1939, -61.4469, 2.01786, 0.28", "76.4535, -62.9068, 1.97645, 0.55", "76.6976, -64.9826, 1.85428, 0.28", "76.7063, -66.0284, 1.84769, 1.11", "76.3554, -68.3056, 1.96022, 0.55", "75.787, -70.2721, 2.13816, 0.55", "74.7171, -72.9304, 2.50278, 0.55", "73.2196, -75.4329, 3.22508, 0.55", "70.7349, -78.7378, 4.56448, 0.55", "69.5141, -80.0527, 5.19034, 0.83", "68.6297, -80.8867, 5.65828, 0.28", "67.5158, -81.8318, 6.32585, 0.55", "63.2666, -84.9278, 9.10531, 0.55", "62.4581, -85.4999, 9.71664, 0.83", "60.5541, -86.7793, 10.9789, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "60.5541, -86.7793, 10.9789, 0.28", "59.4463, -89.4994, 11.632, 0.28", "58.8908, -90.8635, 11.9596, 0.83", "58.1375, -92.7133, 12.4037, 0.28", "57.0011, -95.5036, 13.0737, 0.55", "56.2172, -97.4284, 13.5359, 0.28", "55.0638, -100.26, 14.2159, 0.83" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "60.5541, -86.7793, 10.9789, 0.55", "57.4188, -88.0519, 10.6488, 0.55", "54.981, -89.3383, 10.4895, 1.11", "52.0976, -91.0752, 10.1627, 0.55", "49.4419, -92.8503, 9.71953, 0.55", "47.2567, -94.5241, 9.23757, 0.83", "43.7603, -97.4306, 8.43711, 0.28", "41.2859, -99.8128, 8.11482, 0.83", "39.5148, -101.676, 7.9975, 0.28", "38.1329, -103.367, 8.02015, 0.55", "36.5478, -105.617, 8.17115, 0.55", "34.0988, -109.266, 8.43957, 1.11", "31.1106, -114.092, 8.97199, 0.28", "30.5849, -114.919, 9.13122, 0.55", "29.6451, -116.318, 9.48973, 0.28", "28.4984, -118.004, 9.92851, 0.55", "27.0715, -119.957, 10.3922, 0.55", "25.3681, -122.484, 10.8376, 1.11", "23.1355, -125.534, 11.2406, 0.28", "21.7991, -126.989, 11.5416, 0.55", "20.4846, -128.216, 11.8946, 0.55", "18.6392, -129.861, 12.6138, 0.55", "16.4668, -131.832, 13.6042, 0.28", "13.6311, -134.447, 14.9102, 0.55", "10.6046, -137.275, 16.3972, 0.55", "8.57102, -139.231, 17.5027, 0.55", "5.45822, -142.187, 19.327, 0.55", "4.03702, -143.589, 20.2007, 0.55", "2.8839, -144.681, 20.8869, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_22", "dend_13", "dend_0", "dend_30", "dend_23", "dend_19", "dend_14", "dend_4", "dend_1", "dend_36", "dend_31", "dend_29", "dend_24", "dend_21", "dend_20", "dend_16", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_38", "dend_37", "dend_33", "dend_32", "dend_26", "dend_25", "dend_18", "dend_17", "dend_11", "dend_6", "dend_40", "dend_39", "dend_35", "dend_34", "dend_28", "dend_27", "dend_10", "dend_7", "dend_46", "dend_41", "dend_9", "dend_8", "dend_45", "dend_42", "dend_44", "dend_43" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_22", "dend_13", "dend_0", "dend_30", "dend_23", "dend_19", "dend_14", "dend_4", "dend_1", "dend_36", "dend_31", "dend_29", "dend_24", "dend_21", "dend_20", "dend_16", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_38", "dend_37", "dend_33", "dend_32", "dend_26", "dend_25", "dend_18", "dend_17", "dend_11", "dend_6", "dend_40", "dend_39", "dend_35", "dend_34", "dend_28", "dend_27", "dend_10", "dend_7", "dend_46", "dend_41", "dend_9", "dend_8", "dend_45", "dend_42", "dend_44", "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_22", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_36", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_DBC_4c3b81ee8f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_30, id: dend_30, parent: dend_22
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_36, id: dend_36, parent: dend_30
create dend_36
public dend_36
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_23
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_4
create dend_12
public dend_12
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_11, id: dend_11, parent: dend_5
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_46, id: dend_46, parent: dend_40
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_22, dend_13, dend_0, dend_30, dend_23, dend_19, dend_14, dend_4, dend_1, dend_36, dend_31, dend_29, dend_24, dend_21, dend_20, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_38, dend_37, dend_33, dend_32, dend_26, dend_25, dend_18, dend_17, dend_11, dend_6, dend_40, dend_39, dend_35, dend_34, dend_28, dend_27, dend_10, dend_7, dend_46, dend_41, dend_9, dend_8, dend_45, dend_42, dend_44, dend_43]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_22, dend_13, dend_0, dend_30, dend_23, dend_19, dend_14, dend_4, dend_1, dend_36, dend_31, dend_29, dend_24, dend_21, dend_20, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_38, dend_37, dend_33, dend_32, dend_26, dend_25, dend_18, dend_17, dend_11, dend_6, dend_40, dend_39, dend_35, dend_34, dend_28, dend_27, dend_10, dend_7, dend_46, dend_41, dend_9, dend_8, dend_45, dend_42, dend_44, dend_43]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_37
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_10, dend_10, dend_10, dend_10, dend_7, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_22(0), soma_0(0.4999998602831057)
    connect dend_13(0), soma_0(0.4999998602831057)
    connect dend_0(0), soma_0(0.4999998602831057)
    connect axon_0(0), soma_0(1.0)
    connect dend_30(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_36(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_12(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_11(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_46(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.77789, -9.10671, 0.213384, 1.9414 ) }
    soma_0 { pt3dadd( -1.61905, -8.1823, 0.19421, 2.74435 ) }
    soma_0 { pt3dadd( -1.46021, -7.25789, 0.175037, 3.60731 ) }
    soma_0 { pt3dadd( -1.30137, -6.33348, 0.155863, 4.45639 ) }
    soma_0 { pt3dadd( -1.14253, -5.40907, 0.13669, 5.44814 ) }
    soma_0 { pt3dadd( -0.98369, -4.48466, 0.117516, 6.63999 ) }
    soma_0 { pt3dadd( -0.824851, -3.56025, 0.0983425, 7.51786 ) }
    soma_0 { pt3dadd( -0.666011, -2.63584, 0.079169, 8.28149 ) }
    soma_0 { pt3dadd( -0.507172, -1.71143, 0.0599954, 9.04511 ) }
    soma_0 { pt3dadd( -0.348332, -0.787014, 0.0408218, 9.54017 ) }
    soma_0 { pt3dadd( -0.189493, 0.137397, 0.0216482, 9.79406 ) }
    soma_0 { pt3dadd( -0.0306533, 1.06181, 0.0024746, 9.91581 ) }
    soma_0 { pt3dadd( 0.128186, 1.98622, -0.016699, 9.60599 ) }
    soma_0 { pt3dadd( 0.287026, 2.91063, -0.0358726, 9.02434 ) }
    soma_0 { pt3dadd( 0.445865, 3.83504, -0.0550462, 8.24064 ) }
    soma_0 { pt3dadd( 0.604705, 4.75945, -0.0742198, 6.93834 ) }
    soma_0 { pt3dadd( 0.763544, 5.68386, -0.0933933, 5.63916 ) }
    soma_0 { pt3dadd( 0.922383, 6.60827, -0.112567, 4.40137 ) }
    soma_0 { pt3dadd( 1.08122, 7.53268, -0.131741, 3.22963 ) }
    soma_0 { pt3dadd( 1.24006, 8.4571, -0.150914, 2.07547 ) }
    soma_0 { pt3dadd( 1.3989, 9.38151, -0.170088, 1.29813 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 21/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -1.00698, -7.77123, 2.18969, 2.77 ) }
    dend_22 { pt3dadd( -1.27371, -10.4095, 2.18969, 2.77 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 23/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -5.20698, 3.81127, 1.30969, 1.66 ) }
    dend_13 { pt3dadd( -6.12306, 4.29879, 1.493, 1.66 ) }
    dend_13 { pt3dadd( -8.70756, 5.67419, 2.01016, 1.11 ) }
    dend_13 { pt3dadd( -11.2241, 7.01345, 2.51372, 1.11 ) }
    dend_13 { pt3dadd( -14.1316, 8.56073, 3.0955, 1.11 ) }
    dend_13 { pt3dadd( -17.3875, 10.2934, 3.747, 1.11 ) }
    dend_13 { pt3dadd( -21.6206, 12.5461, 4.59404, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.04302, 9.37702, 7.37969, 2.77 ) }
    dend_0 { pt3dadd( 2.48984, 11.9386, 6.42528, 2.77 ) }
    dend_0 { pt3dadd( 2.75566, 13.6311, 5.74533, 2.49 ) }
    dend_0 { pt3dadd( 3.3921, 17.0553, 4.39308, 1.66 ) }
    dend_0 { pt3dadd( 3.88106, 19.4443, 3.49722, 1.66 ) }
    dend_0 { pt3dadd( 4.4026, 21.9925, 2.54167, 1.38 ) }
    dend_0 { pt3dadd( 5.12761, 25.5349, 1.21331, 1.38 ) }
    dend_0 { pt3dadd( 5.77951, 28.8224, -0.100097, 1.11 ) }
    dend_0 { pt3dadd( 6.48166, 32.5897, -1.62946, 1.11 ) }
    dend_0 { pt3dadd( 6.86247, 34.7262, -2.4287, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 40/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.3989, 9.38151, -0.170088, 0.55 ) }
    axon_0 { pt3dadd( 3.93909, 24.1649, -0.170088, 0.55 ) }
    axon_0 { pt3dadd( 6.47928, 38.9482, -0.170088, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_22 (entry count 43/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -1.27371, -10.4095, 2.18969, 1.38 ) }
    dend_30 { pt3dadd( 0.449963, -14.5982, 2.23956, 1.38 ) }
    dend_30 { pt3dadd( 1.93761, -18.2133, 2.2826, 1.11 ) }
    dend_30 { pt3dadd( 3.75768, -22.6363, 2.33525, 1.11 ) }
    dend_30 { pt3dadd( 5.4008, -26.6292, 2.38279, 0.83 ) }
    dend_30 { pt3dadd( 7.24249, -31.1047, 2.43607, 1.11 ) }
    dend_30 { pt3dadd( 8.32253, -33.7293, 2.46732, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 50/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -1.27371, -10.4095, 2.18969, 1.38 ) }
    dend_23 { pt3dadd( -1.38764, -11.2661, 2.99969, 1.38 ) }
    dend_23 { pt3dadd( -1.48334, -12.2328, 3.89493, 1.66 ) }
    dend_23 { pt3dadd( -1.66531, -14.9099, 6.21818, 1.38 ) }
    dend_23 { pt3dadd( -1.85056, -17.3571, 8.35217, 1.11 ) }
    dend_23 { pt3dadd( -2.0506, -19.7069, 10.3657, 1.38 ) }
    dend_23 { pt3dadd( -2.26848, -22.179, 12.3711, 1.11 ) }
    dend_23 { pt3dadd( -2.33982, -22.8879, 12.9346, 1.11 ) }
    dend_23 { pt3dadd( -2.5532, -25.2107, 14.6186, 1.38 ) }
    dend_23 { pt3dadd( -2.68234, -27.025, 15.6828, 1.11 ) }
    dend_23 { pt3dadd( -2.85957, -29.3506, 16.7736, 1.38 ) }
    dend_23 { pt3dadd( -3.0428, -31.4406, 17.6427, 0.55 ) }
    dend_23 { pt3dadd( -3.17748, -32.8341, 18.1592, 0.55 ) }
    dend_23 { pt3dadd( -3.40383, -34.9293, 18.8611, 0.83 ) }
    dend_23 { pt3dadd( -3.63046, -37.333, 19.5019, 0.83 ) }
    dend_23 { pt3dadd( -3.71675, -39.4135, 19.8538, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 66/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -21.6206, 12.5461, 4.59404, 0.83 ) }
    dend_19 { pt3dadd( -24.0299, 14.1216, -0.343005, 0.83 ) }
    dend_19 { pt3dadd( -25.5348, 15.1043, -3.42512, 0.83 ) }
    dend_19 { pt3dadd( -27.1408, 16.0907, -6.69135, 0.83 ) }
    dend_19 { pt3dadd( -29.8578, 17.3805, -12.0108, 0.83 ) }
    dend_19 { pt3dadd( -33.7216, 18.9763, -19.1896, 0.83 ) }
    dend_19 { pt3dadd( -34.6493, 19.3595, -20.9133, 0.83 ) }
    dend_19 { pt3dadd( -37.8123, 20.6572, -26.9689, 0.83 ) }
    dend_19 { pt3dadd( -40.8101, 21.8149, -32.9322, 0.55 ) }
    dend_19 { pt3dadd( -43.9719, 22.9121, -38.9056, 0.55 ) }
    dend_19 { pt3dadd( -47.2454, 23.6229, -44.5021, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 77/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -21.6206, 12.5461, 4.59404, 0.83 ) }
    dend_14 { pt3dadd( -22.4947, 15.4688, 5.70976, 0.83 ) }
    dend_14 { pt3dadd( -22.9204, 16.9508, 6.36687, 0.83 ) }
    dend_14 { pt3dadd( -23.4678, 18.6366, 7.14809, 0.83 ) }
    dend_14 { pt3dadd( -25.0253, 22.6876, 9.52024, 0.83 ) }
    dend_14 { pt3dadd( -26.1751, 25.6782, 11.2715, 0.83 ) }
    dend_14 { pt3dadd( -27.1805, 28.2932, 12.8027, 0.83 ) }
    dend_14 { pt3dadd( -28.419, 31.6674, 14.9352, 0.83 ) }
    dend_14 { pt3dadd( -29.3122, 34.1611, 16.5635, 0.83 ) }
    dend_14 { pt3dadd( -31.7935, 40.4566, 21.124, 1.11 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 87/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 6.86247, 34.7262, -2.4287, 0.83 ) }
    dend_4 { pt3dadd( 7.16866, 37.2547, -1.39518, 0.83 ) }
    dend_4 { pt3dadd( 7.43822, 39.4806, -0.485314, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 90/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.86247, 34.7262, -2.4287, 0.83 ) }
    dend_1 { pt3dadd( 7.0981, 35.2093, -5.57878, 0.83 ) }
    dend_1 { pt3dadd( 7.29048, 35.5002, -7.29432, 0.83 ) }
    dend_1 { pt3dadd( 8.71973, 36.9223, -16.5337, 0.55 ) }
    dend_1 { pt3dadd( 8.96188, 37.1632, -18.099, 0.55 ) }
    dend_1 { pt3dadd( 9.53177, 37.7303, -21.783, 0.55 ) }
    dend_1 { pt3dadd( 10.0986, 38.2943, -25.4472, 0.55 ) }
    dend_1 { pt3dadd( 10.9436, 38.8303, -30.0969, 0.83 ) }
    dend_1 { pt3dadd( 12.5005, 39.5876, -37.8801, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 99/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 6.47928, 38.9482, -0.170088, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    axon_1 { pt3dadd( 9.01947, 53.7316, -0.170088, 0.28 ) }
    axon_1 { pt3dadd( 11.5597, 68.5149, -0.170088, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_30 (entry count 2/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 8.32253, -33.7293, 2.46732, 1.11 ) }
    dend_36 { pt3dadd( 8.92172, -35.2449, 4.09117, 1.11 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 4/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 8.32253, -33.7293, 2.46732, 1.38 ) }
    dend_31 { pt3dadd( 8.39003, -35.3202, 3.35496, 1.38 ) }
    dend_31 { pt3dadd( 8.45558, -37.8388, 4.7028, 1.38 ) }
    dend_31 { pt3dadd( 8.60147, -42.6776, 7.09868, 0.83 ) }
    dend_31 { pt3dadd( 8.73013, -45.2516, 8.21344, 0.83 ) }
    dend_31 { pt3dadd( 8.84013, -46.5465, 8.73829, 0.83 ) }
    dend_31 { pt3dadd( 9.07833, -48.6052, 9.51305, 0.83 ) }
    dend_31 { pt3dadd( 9.43721, -51.3068, 10.5182, 0.83 ) }
    dend_31 { pt3dadd( 9.85055, -53.8545, 11.3939, 0.83 ) }
    dend_31 { pt3dadd( 10.7055, -58.2557, 12.4893, 0.83 ) }
    dend_31 { pt3dadd( 10.9933, -59.8426, 12.8521, 0.83 ) }
    dend_31 { pt3dadd( 11.5072, -62.3007, 13.3655, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_23 (entry count 16/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -3.71675, -39.4135, 19.8538, 0.55 ) }
    dend_29 { pt3dadd( -5.54034, -43.5372, 22.9382, 0.55 ) }
    dend_29 { pt3dadd( -7.31018, -47.5394, 25.9318, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 19/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -3.71675, -39.4135, 19.8538, 0.83 ) }
    dend_24 { pt3dadd( -4.19574, -41.5507, 17.2842, 0.83 ) }
    dend_24 { pt3dadd( -4.61811, -43.4827, 15.3863, 0.83 ) }
    dend_24 { pt3dadd( -4.89511, -45.1279, 14.0177, 0.83 ) }
    dend_24 { pt3dadd( -6.28476, -53.6716, 8.17941, 0.83 ) }
    dend_24 { pt3dadd( -6.5447, -55.4147, 7.17875, 0.55 ) }
    dend_24 { pt3dadd( -6.89313, -57.5928, 6.06247, 0.55 ) }
    dend_24 { pt3dadd( -7.54656, -61.1616, 4.46796, 0.83 ) }
    dend_24 { pt3dadd( -8.14669, -64.2695, 3.3454, 0.55 ) }
    dend_24 { pt3dadd( -8.95457, -68.3889, 2.41082, 0.55 ) }
    dend_24 { pt3dadd( -9.44268, -71.4419, 2.21357, 0.55 ) }
    dend_24 { pt3dadd( -9.69919, -73.0392, 2.12531, 0.55 ) }
    dend_24 { pt3dadd( -9.90144, -74.2264, 2.0729, 0.55 ) }
    dend_24 { pt3dadd( -10.4959, -77.8437, 2.02169, 0.83 ) }
    dend_24 { pt3dadd( -11.1146, -81.9479, 2.37683, 0.55 ) }
    dend_24 { pt3dadd( -11.2172, -83.1488, 2.56709, 0.55 ) }
    dend_24 { pt3dadd( -11.3412, -85.0853, 2.93443, 0.55 ) }
    dend_24 { pt3dadd( -11.371, -86.209, 3.17942, 0.55 ) }
    dend_24 { pt3dadd( -11.388, -89.5809, 4.08177, 0.83 ) }
    dend_24 { pt3dadd( -11.3915, -93.7852, 5.55346, 0.55 ) }
    dend_24 { pt3dadd( -11.3623, -95.9504, 6.5012, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 40/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -47.2454, 23.6229, -44.5021, 0.55 ) }
    dend_21 { pt3dadd( -51.0878, 23.6793, -45.4223, 0.55 ) }
    dend_21 { pt3dadd( -53.8871, 23.7194, -46.0023, 0.55 ) }
    dend_21 { pt3dadd( -56.1739, 23.7454, -46.2919, 0.55 ) }
    dend_21 { pt3dadd( -58.1155, 23.6883, -46.4169, 0.28 ) }
    dend_21 { pt3dadd( -59.603, 23.5568, -46.4185, 0.83 ) }
    dend_21 { pt3dadd( -62.0579, 23.2645, -46.2877, 0.28 ) }
    dend_21 { pt3dadd( -64.5483, 22.8237, -45.8929, 0.55 ) }
    dend_21 { pt3dadd( -67.3759, 22.1966, -45.3206, 0.55 ) }
    dend_21 { pt3dadd( -69.8602, 21.5064, -44.7181, 0.55 ) }
    dend_21 { pt3dadd( -72.5067, 20.5497, -44.1514, 0.83 ) }
    dend_21 { pt3dadd( -74.542, 19.7221, -43.774, 0.28 ) }
    dend_21 { pt3dadd( -75.511, 19.348, -43.6359, 0.55 ) }
    dend_21 { pt3dadd( -76.4968, 19.0035, -43.6989, 0.28 ) }
    dend_21 { pt3dadd( -77.8124, 18.6444, -44.1238, 0.55 ) }
    dend_21 { pt3dadd( -81.0516, 18.1686, -46.3812, 0.55 ) }
    dend_21 { pt3dadd( -82.0266, 18.1137, -47.2697, 0.28 ) }
    dend_21 { pt3dadd( -84.2914, 18.0521, -49.5652, 0.55 ) }
    dend_21 { pt3dadd( -87.8029, 18.1181, -53.3761, 0.28 ) }
    dend_21 { pt3dadd( -89.1228, 18.2164, -54.9171, 0.55 ) }
    dend_21 { pt3dadd( -92.8363, 18.7179, -59.778, 0.28 ) }
    dend_21 { pt3dadd( -93.5145, 18.8477, -60.8301, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 62/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -47.2454, 23.6229, -44.5021, 1.11 ) }
    dend_20 { pt3dadd( -48.8637, 20.3333, -45.3625, 1.11 ) }
    dend_20 { pt3dadd( -50.2101, 17.5919, -46.12, 0.28 ) }
    dend_20 { pt3dadd( -51.7989, 14.5317, -46.9338, 0.55 ) }
    dend_20 { pt3dadd( -53.7159, 10.7712, -47.8562, 0.55 ) }
    dend_20 { pt3dadd( -55.4114, 7.38899, -48.5486, 0.28 ) }
    dend_20 { pt3dadd( -56.6804, 4.83661, -49.0394, 0.55 ) }
    dend_20 { pt3dadd( -58.529, 0.980744, -49.7123, 0.55 ) }
    dend_20 { pt3dadd( -59.4494, -1.10668, -50.0306, 0.83 ) }
    dend_20 { pt3dadd( -60.2355, -3.05471, -50.1999, 0.55 ) }
    dend_20 { pt3dadd( -61.7442, -6.74909, -50.2784, 0.55 ) }
    dend_20 { pt3dadd( -63.1119, -9.82846, -50.191, 0.83 ) }
    dend_20 { pt3dadd( -64.3187, -12.1667, -50.0024, 0.83 ) }
    dend_20 { pt3dadd( -66.1952, -15.269, -49.7576, 0.83 ) }
    dend_20 { pt3dadd( -68.8256, -19.2092, -49.5391, 0.55 ) }
    dend_20 { pt3dadd( -70.0503, -20.918, -49.4448, 0.55 ) }
    dend_20 { pt3dadd( -71.7843, -23.2006, -49.4326, 1.38 ) }
    dend_20 { pt3dadd( -74.7143, -26.7926, -49.1896, 0.28 ) }
    dend_20 { pt3dadd( -78.4609, -31.1747, -48.7475, 0.55 ) }
    dend_20 { pt3dadd( -80.6002, -33.5958, -48.4206, 0.55 ) }
    dend_20 { pt3dadd( -82.7922, -36.0844, -48.0545, 0.28 ) }
    dend_20 { pt3dadd( -86.6929, -40.0484, -46.7145, 0.83 ) }
    dend_20 { pt3dadd( -90.7931, -43.39, -43.9465, 0.28 ) }
    dend_20 { pt3dadd( -91.9684, -44.0949, -42.7934, 0.55 ) }
    dend_20 { pt3dadd( -92.4488, -44.3043, -42.1853, 0.28 ) }
    dend_20 { pt3dadd( -94.1492, -44.8546, -39.8106, 0.55 ) }
    dend_20 { pt3dadd( -98.5897, -46.1032, -33.2293, 0.55 ) }
    dend_20 { pt3dadd( -101.949, -47.0693, -27.8374, 0.28 ) }
    dend_20 { pt3dadd( -102.809, -47.306, -26.4848, 0.83 ) }
    dend_20 { pt3dadd( -104.9, -47.8267, -23.072, 0.28 ) }
    dend_20 { pt3dadd( -105.252, -47.9255, -22.4653, 0.55 ) }
    dend_20 { pt3dadd( -106.932, -48.5533, -19.2695, 0.28 ) }
    dend_20 { pt3dadd( -107.563, -49.3379, -17.743, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 95/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -31.7935, 40.4566, 21.124, 0.55 ) }
    dend_16 { pt3dadd( -35.192, 43.6709, 23.2572, 0.55 ) }
    dend_16 { pt3dadd( -37.0563, 45.9241, 24.3959, 0.55 ) }
    dend_16 { pt3dadd( -39.6065, 49.3459, 25.9051, 0.55 ) }
    dend_16 { pt3dadd( -41.2913, 51.5965, 26.951, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_16 { pt3dadd( -43.2237, 54.0938, 28.1873, 0.83 ) }
    dend_16 { pt3dadd( -45.6552, 57.08, 29.7123, 0.55 ) }
    dend_16 { pt3dadd( -48.4157, 60.475, 31.351, 0.83 ) }
    dend_16 { pt3dadd( -51.0606, 63.2514, 32.7595, 0.55 ) }
    dend_16 { pt3dadd( -53.4017, 65.5897, 34.0123, 0.83 ) }
    dend_16 { pt3dadd( -56.1961, 68.0446, 35.4863, 0.83 ) }
    dend_16 { pt3dadd( -58.9663, 70.0129, 36.8697, 0.55 ) }
    dend_16 { pt3dadd( -61.0066, 71.1036, 37.8853, 0.55 ) }
    dend_16 { pt3dadd( -64.9324, 72.3356, 39.6853, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 9/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -31.7935, 40.4566, 21.124, 0.55 ) }
    dend_15 { pt3dadd( -33.0142, 42.3543, 20.9252, 0.55 ) }
    dend_15 { pt3dadd( -33.493, 43.4443, 21.1566, 0.83 ) }
    dend_15 { pt3dadd( -34.0703, 44.7833, 21.4967, 0.55 ) }
    dend_15 { pt3dadd( -34.41, 45.598, 21.7674, 0.83 ) }
    dend_15 { pt3dadd( -34.9628, 47.0478, 22.2433, 0.55 ) }
    dend_15 { pt3dadd( -35.2059, 47.7924, 22.5032, 0.83 ) }
    dend_15 { pt3dadd( -36.4659, 52.7089, 24.29, 0.83 ) }
    dend_15 { pt3dadd( -37.0647, 55.5822, 25.5344, 0.83 ) }
    dend_15 { pt3dadd( -37.4324, 57.7357, 26.5402, 0.55 ) }
    dend_15 { pt3dadd( -37.7086, 59.4119, 27.3097, 0.55 ) }
    dend_15 { pt3dadd( -38.3353, 62.6038, 28.6621, 0.83 ) }
    dend_15 { pt3dadd( -38.644, 64.2335, 29.3287, 0.83 ) }
    dend_15 { pt3dadd( -39.3533, 67.8774, 30.6675, 0.83 ) }
    dend_15 { pt3dadd( -39.8551, 70.7317, 31.7474, 0.55 ) }
    dend_15 { pt3dadd( -40.4067, 73.3104, 32.6273, 0.55 ) }
    dend_15 { pt3dadd( -41.3344, 76.5324, 33.7901, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_4 (entry count 26/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 7.43822, 39.4806, -0.485314, 0.83 ) }
    dend_12 { pt3dadd( 7.57987, 40.4811, -0.47751, 0.83 ) }
    dend_12 { pt3dadd( 7.83689, 41.9999, -0.421043, 0.83 ) }
    dend_12 { pt3dadd( 8.23111, 43.9568, -0.334204, 0.83 ) }
    dend_12 { pt3dadd( 8.66597, 46.1073, -0.23595, 0.83 ) }
    dend_12 { pt3dadd( 8.92356, 47.3007, -0.212882, 0.83 ) }
    dend_12 { pt3dadd( 9.35396, 49.3628, -0.144356, 0.83 ) }
    dend_12 { pt3dadd( 9.78597, 51.4966, -0.225389, 0.83 ) }
    dend_12 { pt3dadd( 10.1238, 52.7188, -0.298723, 0.83 ) }
    dend_12 { pt3dadd( 10.4782, 53.682, -0.315764, 0.83 ) }
    dend_12 { pt3dadd( 11.2944, 55.5246, -0.262358, 0.83 ) }
    dend_12 { pt3dadd( 12.1378, 57.0801, -0.179961, 0.83 ) }
    dend_12 { pt3dadd( 14.2125, 60.3006, 0.0438356, 0.83 ) }
    dend_12 { pt3dadd( 16.2956, 62.9868, 0.302977, 0.83 ) }
    dend_12 { pt3dadd( 19.4089, 66.44, 0.710344, 0.83 ) }
    dend_12 { pt3dadd( 20.6923, 67.6786, 0.875412, 0.83 ) }
    dend_12 { pt3dadd( 22.9195, 69.5086, 1.18743, 0.83 ) }
    dend_12 { pt3dadd( 25.4466, 71.3546, 1.51853, 0.83 ) }
    dend_12 { pt3dadd( 27.8918, 72.9484, 1.81752, 0.83 ) }
    dend_12 { pt3dadd( 29.3029, 73.8227, 1.8773, 0.83 ) }
    dend_12 { pt3dadd( 31.2409, 74.9688, 1.80665, 0.83 ) }
    dend_12 { pt3dadd( 33.8128, 76.5815, 1.536, 0.83 ) }
    dend_12 { pt3dadd( 35.2959, 77.634, 1.28701, 0.83 ) }
    dend_12 { pt3dadd( 37.4824, 79.4097, 0.576613, 0.83 ) }
    dend_12 { pt3dadd( 38.9969, 80.9167, -0.226437, 1.11 ) }
    dend_12 { pt3dadd( 40.1957, 82.3299, -1.15389, 0.83 ) }
    dend_12 { pt3dadd( 41.1195, 83.6202, -2.08819, 0.83 ) }
    dend_12 { pt3dadd( 41.8329, 84.7812, -2.96362, 0.83 ) }
    dend_12 { pt3dadd( 43.5197, 87.6781, -4.89034, 0.83 ) }
    dend_12 { pt3dadd( 44.1898, 88.8422, -5.51991, 0.83 ) }
    dend_12 { pt3dadd( 45.7003, 91.1073, -6.40339, 0.83 ) }
    dend_12 { pt3dadd( 46.4964, 92.1074, -6.62443, 0.83 ) }
    dend_12 { pt3dadd( 47.9112, 93.6946, -6.77429, 0.83 ) }
    dend_12 { pt3dadd( 50.039, 96.0319, -6.78898, 0.55 ) }
    dend_12 { pt3dadd( 51.6294, 97.7548, -6.66841, 0.83 ) }
    dend_12 { pt3dadd( 53.5718, 99.9175, -6.52713, 0.55 ) }
    dend_12 { pt3dadd( 55.2487, 101.973, -6.44861, 0.55 ) }
    dend_12 { pt3dadd( 55.4955, 102.307, -6.45641, 0.28 ) }
    dend_12 { pt3dadd( 56.1666, 103.401, -6.54464, 1.11 ) }
    dend_12 { pt3dadd( 57.1688, 105.494, -6.71801, 1.11 ) }
    dend_12 { pt3dadd( 57.6708, 106.967, -6.69766, 0.55 ) }
    dend_12 { pt3dadd( 58.0846, 108.718, -6.5262, 0.83 ) }
    dend_12 { pt3dadd( 58.3565, 110.105, -6.27327, 1.38 ) }
    dend_12 { pt3dadd( 58.7092, 111.875, -5.90649, 0.83 ) }
    dend_12 { pt3dadd( 59.2852, 114.682, -5.23967, 0.83 ) }
    dend_12 { pt3dadd( 59.5031, 115.814, -4.94459, 0.28 ) }
    dend_12 { pt3dadd( 59.7015, 116.954, -4.67904, 0.83 ) }
    dend_12 { pt3dadd( 59.9398, 118.464, -4.38945, 0.83 ) }
    dend_12 { pt3dadd( 60.1444, 120.092, -4.13253, 0.83 ) }
    dend_12 { pt3dadd( 60.3311, 121.588, -3.95433, 1.38 ) }
    dend_12 { pt3dadd( 60.4933, 123.107, -3.90809, 0.83 ) }
    dend_12 { pt3dadd( 60.7444, 125.584, -3.89327, 0.55 ) }
    dend_12 { pt3dadd( 60.864, 126.768, -3.87905, 0.55 ) }
    dend_12 { pt3dadd( 60.9387, 127.596, -3.82314, 0.55 ) }
    dend_12 { pt3dadd( 61.0314, 128.609, -3.7927, 0.83 ) }
    dend_12 { pt3dadd( 61.1455, 129.807, -3.78335, 0.55 ) }
    dend_12 { pt3dadd( 61.2351, 130.652, -3.81325, 0.83 ) }
    dend_12 { pt3dadd( 61.3967, 131.843, -3.93393, 0.55 ) }
    dend_12 { pt3dadd( 61.52, 133.045, -4.09969, 0.55 ) }
    dend_12 { pt3dadd( 61.8236, 136.535, -4.77174, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 86/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 7.43822, 39.4806, -0.485314, 0.55 ) }
    dend_5 { pt3dadd( 6.55664, 41.2843, -0.554296, 0.55 ) }
    dend_5 { pt3dadd( 5.84837, 42.7256, -0.619657, 0.83 ) }
    dend_5 { pt3dadd( 5.01352, 44.4244, -0.696697, 0.55 ) }
    dend_5 { pt3dadd( 3.64274, 47.2138, -0.823192, 0.83 ) }
    dend_5 { pt3dadd( 1.99245, 50.572, -0.975482, 0.55 ) }
    dend_5 { pt3dadd( 0.935501, 52.7228, -1.07301, 0.55 ) }
    dend_5 { pt3dadd( 0.637572, 53.3457, -1.11716, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 94/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 12.5005, 39.5876, -37.8801, 0.28 ) }
    dend_3 { pt3dadd( 13.9822, 37.8021, -38.3208, 0.28 ) }
    dend_3 { pt3dadd( 16.0184, 35.2877, -39.1724, 0.55 ) }
    dend_3 { pt3dadd( 17.9436, 32.7884, -40.1246, 0.55 ) }
    dend_3 { pt3dadd( 19.6804, 30.488, -41.1446, 0.55 ) }
    dend_3 { pt3dadd( 21.7042, 28.0859, -42.1426, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_3 { pt3dadd( 22.9633, 26.7978, -42.6136, 0.55 ) }
    dend_3 { pt3dadd( 24.6124, 25.432, -43.1274, 0.28 ) }
    dend_3 { pt3dadd( 26.142, 24.4299, -43.4352, 0.55 ) }
    dend_3 { pt3dadd( 28.3371, 23.3476, -43.6601, 0.28 ) }
    dend_3 { pt3dadd( 33.1453, 21.3844, -43.8191, 0.55 ) }
    dend_3 { pt3dadd( 36.5339, 20.2012, -43.6537, 0.28 ) }
    dend_3 { pt3dadd( 38.3057, 19.6752, -43.4758, 0.55 ) }
    dend_3 { pt3dadd( 40.8359, 19.0512, -43.0789, 0.28 ) }
    dend_3 { pt3dadd( 41.8893, 18.8551, -42.8778, 0.83 ) }
    dend_3 { pt3dadd( 44.4793, 18.4795, -42.2426, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 10/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 12.5005, 39.5876, -37.8801, 0.55 ) }
    dend_2 { pt3dadd( 13.3569, 39.8627, -38.236, 0.55 ) }
    dend_2 { pt3dadd( 14.4392, 40.2103, -38.6858, 0.55 ) }
    dend_2 { pt3dadd( 15.0769, 40.4151, -38.9508, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 14/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 8.92172, -35.2449, 4.09117, 0.83 ) }
    dend_38 { pt3dadd( 11.1564, -35.656, 5.54602, 0.83 ) }
    dend_38 { pt3dadd( 13.2097, -35.8759, 6.7685, 0.83 ) }
    dend_38 { pt3dadd( 15.5336, -36.0219, 8.12612, 0.83 ) }
    dend_38 { pt3dadd( 17.8795, -36.0372, 9.48061, 0.83 ) }
    dend_38 { pt3dadd( 20.7277, -35.8741, 11.0878, 0.83 ) }
    dend_38 { pt3dadd( 23.9633, -35.6105, 12.8829, 0.83 ) }
    dend_38 { pt3dadd( 26.7562, -35.2976, 14.3743, 0.83 ) }
    dend_38 { pt3dadd( 29.8895, -34.786, 16.0803, 0.83 ) }
    dend_38 { pt3dadd( 33.3405, -34.0418, 17.9704, 0.83 ) }
    dend_38 { pt3dadd( 36.5184, -33.2158, 19.6081, 0.83 ) }
    dend_38 { pt3dadd( 37.0758, -33.0658, 19.8735, 0.83 ) }
    dend_38 { pt3dadd( 37.421, -32.9904, 20.0362, 0.83 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 27/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 8.92172, -35.2449, 4.09117, 0.83 ) }
    dend_37 { pt3dadd( 8.6474, -36.5193, 4.09249, 0.83 ) }
    dend_37 { pt3dadd( 8.41298, -37.7485, 4.1273, 0.83 ) }
    dend_37 { pt3dadd( 8.22152, -38.7153, 4.17829, 0.55 ) }
    dend_37 { pt3dadd( 7.9665, -39.9262, 4.1855, 0.83 ) }
    dend_37 { pt3dadd( 7.76987, -40.9576, 4.09584, 0.83 ) }
    dend_37 { pt3dadd( 7.57341, -42.1611, 3.9268, 0.83 ) }
    dend_37 { pt3dadd( 7.35615, -43.7535, 3.61951, 0.55 ) }
    dend_37 { pt3dadd( 7.18763, -45.0787, 3.35874, 0.83 ) }
    dend_37 { pt3dadd( 7.00573, -46.5359, 3.06143, 0.83 ) }
    dend_37 { pt3dadd( 6.75066, -48.5051, 2.69281, 0.83 ) }
    dend_37 { pt3dadd( 6.61606, -49.4292, 2.55457, 0.55 ) }
    dend_37 { pt3dadd( 6.41573, -50.6587, 2.37944, 0.83 ) }
    dend_37 { pt3dadd( 6.13416, -52.253, 2.23504, 0.55 ) }
    dend_37 { pt3dadd( 5.96238, -53.3058, 2.15724, 0.55 ) }
    dend_37 { pt3dadd( 5.79856, -54.3609, 2.10543, 0.55 ) }
    dend_37 { pt3dadd( 5.58935, -55.5283, 2.02714, 0.55 ) }
    dend_37 { pt3dadd( 5.36207, -56.7351, 1.84846, 0.55 ) }
    dend_37 { pt3dadd( 5.0801, -58.356, 1.47841, 0.55 ) }
    dend_37 { pt3dadd( 4.81527, -59.8998, 1.01992, 0.28 ) }
    dend_37 { pt3dadd( 4.61354, -60.9761, 0.672627, 0.55 ) }
    dend_37 { pt3dadd( 4.35977, -62.1638, 0.314952, 0.28 ) }
    dend_37 { pt3dadd( 4.23319, -62.7553, 0.134819, 0.55 ) }
    dend_37 { pt3dadd( 4.12515, -63.2525, 0.00196457, 0.28 ) }
    dend_37 { pt3dadd( 3.79803, -64.7339, -0.367737, 0.55 ) }
    dend_37 { pt3dadd( 3.66856, -65.3418, -0.468507, 0.55 ) }
    dend_37 { pt3dadd( 3.37188, -67.0297, -0.697144, 0.55 ) }
    dend_37 { pt3dadd( 3.25273, -68.3626, -0.844417, 0.55 ) }
    dend_37 { pt3dadd( 3.24397, -68.6097, -0.862202, 0.28 ) }
    dend_37 { pt3dadd( 3.30898, -69.3225, -0.954385, 0.55 ) }
    dend_37 { pt3dadd( 3.43109, -70.0072, -1.14297, 0.28 ) }
    dend_37 { pt3dadd( 3.56751, -70.6683, -1.3822, 0.55 ) }
    dend_37 { pt3dadd( 3.73373, -71.3281, -1.68189, 0.55 ) }
    dend_37 { pt3dadd( 3.94465, -72.3481, -2.22251, 0.55 ) }
    dend_37 { pt3dadd( 4.39454, -74.6435, -3.66674, 0.55 ) }
    dend_37 { pt3dadd( 4.7779, -76.6659, -5.01865, 0.55 ) }
    dend_37 { pt3dadd( 4.87883, -77.2642, -5.40898, 0.28 ) }
    dend_37 { pt3dadd( 4.99544, -77.9538, -5.82071, 0.55 ) }
    dend_37 { pt3dadd( 5.18282, -79.7578, -6.80475, 0.55 ) }
    dend_37 { pt3dadd( 5.27761, -81.3247, -7.53217, 0.28 ) }
    dend_37 { pt3dadd( 5.25689, -82.8544, -8.02747, 0.55 ) }
    dend_37 { pt3dadd( 5.1962, -84.31, -8.31996, 0.55 ) }
    dend_37 { pt3dadd( 4.99592, -86.3956, -8.74521, 0.55 ) }
    dend_37 { pt3dadd( 4.74021, -88.3465, -9.12853, 0.55 ) }
    dend_37 { pt3dadd( 4.57257, -89.7565, -9.41183, 0.55 ) }
    dend_37 { pt3dadd( 4.43424, -90.7522, -9.64743, 0.55 ) }
    dend_37 { pt3dadd( 4.15747, -93.06, -10.4154, 0.83 ) }
    dend_37 { pt3dadd( 4.01875, -95.5731, -11.4196, 0.55 ) }
    dend_37 { pt3dadd( 4.03864, -97.0582, -12.0518, 0.55 ) }
    dend_37 { pt3dadd( 4.18204, -98.6099, -12.7149, 0.55 ) }
    dend_37 { pt3dadd( 4.3874, -99.9767, -13.2859, 0.55 ) }
    dend_37 { pt3dadd( 4.80364, -102.103, -14.0702, 0.55 ) }
    dend_37 { pt3dadd( 5.41062, -104.532, -14.7756, 0.55 ) }
    dend_37 { pt3dadd( 5.68167, -105.586, -15.0211, 0.55 ) }
    dend_37 { pt3dadd( 5.91973, -106.593, -15.2565, 0.55 ) }
    dend_37 { pt3dadd( 6.15446, -107.802, -15.5477, 0.83 ) }
    dend_37 { pt3dadd( 6.54438, -109.98, -16.1404, 0.55 ) }
    dend_37 { pt3dadd( 6.84652, -112.479, -16.9469, 0.83 ) }
    dend_37 { pt3dadd( 6.87215, -114.83, -17.931, 0.55 ) }
    dend_37 { pt3dadd( 6.72357, -116.827, -18.9583, 0.28 ) }
    dend_37 { pt3dadd( 6.59586, -117.702, -19.5164, 0.55 ) }
    dend_37 { pt3dadd( 6.38794, -118.712, -20.319, 0.83 ) }
    dend_37 { pt3dadd( 6.11621, -119.931, -21.5443, 0.83 ) }
    dend_37 { pt3dadd( 5.8123, -121.609, -23.8121, 0.55 ) }
    dend_37 { pt3dadd( 5.69876, -122.604, -25.3771, 0.55 ) }
    dend_37 { pt3dadd( 5.6224, -123.535, -26.9356, 1.11 ) }
    dend_37 { pt3dadd( 5.5894, -124.769, -29.0645, 0.55 ) }
    dend_37 { pt3dadd( 5.64389, -126.152, -31.5298, 0.83 ) }
    dend_37 { pt3dadd( 6.02256, -128.819, -36.5537, 0.28 ) }
    dend_37 { pt3dadd( 6.11336, -129.16, -37.2614, 0.28 ) }
    dend_37 { pt3dadd( 6.42948, -130.25, -39.6092, 0.83 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 98/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 11.5072, -62.3007, 13.3655, 0.55 ) }
    dend_33 { pt3dadd( 12.7191, -65.3999, 13.1406, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_33 { pt3dadd( 14.2226, -69.2736, 13.1789, 0.83 ) }
    dend_33 { pt3dadd( 15.3102, -72.1829, 13.3271, 0.55 ) }
    dend_33 { pt3dadd( 16.8507, -77.016, 13.6802, 0.55 ) }
    dend_33 { pt3dadd( 18.0394, -82.2522, 14.1629, 0.55 ) }
    dend_33 { pt3dadd( 18.4803, -84.783, 14.4186, 0.55 ) }
    dend_33 { pt3dadd( 19.0369, -89.855, 15.0429, 0.83 ) }
    dend_33 { pt3dadd( 19.1933, -92.6353, 15.4329, 0.55 ) }
    dend_33 { pt3dadd( 19.1628, -97.631, 16.1545, 0.55 ) }
    dend_33 { pt3dadd( 18.7603, -102.887, 16.7612, 0.55 ) }
    dend_33 { pt3dadd( 18.278, -106.147, 17.0355, 0.55 ) }
    dend_33 { pt3dadd( 17.1295, -111.931, 17.2352, 0.55 ) }
    dend_33 { pt3dadd( 16.4263, -114.669, 17.1721, 0.83 ) }
    dend_33 { pt3dadd( 15.3547, -118.347, 16.9849, 0.55 ) }
    dend_33 { pt3dadd( 14.2282, -121.729, 16.7107, 0.83 ) }
    dend_33 { pt3dadd( 13.3072, -124.294, 16.5434, 0.83 ) }
    dend_33 { pt3dadd( 11.4218, -128.531, 16.3516, 0.55 ) }
    dend_33 { pt3dadd( 9.88163, -131.47, 16.1969, 0.83 ) }
    dend_33 { pt3dadd( 8.64285, -133.58, 16.0525, 0.83 ) }
    dend_33 { pt3dadd( 7.00632, -136.123, 15.9134, 0.83 ) }
    dend_33 { pt3dadd( 4.63204, -139.327, 15.6319, 0.55 ) }
    dend_33 { pt3dadd( 2.7761, -141.622, 15.2448, 0.55 ) }
    dend_33 { pt3dadd( -0.926037, -146.159, 14.1851, 0.55 ) }
    dend_33 { pt3dadd( -4.11013, -150.123, 13.0205, 1.11 ) }
    dend_33 { pt3dadd( -6.50837, -153.188, 12.0121, 0.55 ) }
    dend_33 { pt3dadd( -9.43743, -157.1, 10.557, 0.55 ) }
    dend_33 { pt3dadd( -11.3617, -159.737, 9.45899, 0.55 ) }
    dend_33 { pt3dadd( -12.9868, -162.238, 8.50399, 1.11 ) }
    dend_33 { pt3dadd( -14.0394, -164.347, 7.84249, 0.55 ) }
    dend_33 { pt3dadd( -14.2529, -165.065, 7.659, 0.83 ) }
    dend_33 { pt3dadd( -14.4241, -166.418, 7.39314, 0.28 ) }
    dend_33 { pt3dadd( -14.4499, -167.271, 7.3128, 0.55 ) }
    dend_33 { pt3dadd( -14.4477, -168.918, 7.18465, 0.28 ) }
    dend_33 { pt3dadd( -14.5147, -171.364, 7.07224, 0.83 ) }
    dend_33 { pt3dadd( -14.8044, -174.652, 7.00603, 0.28 ) }
    dend_33 { pt3dadd( -15.1997, -177.918, 6.89401, 0.55 ) }
    dend_33 { pt3dadd( -15.5716, -180.725, 6.81345, 0.28 ) }
    dend_33 { pt3dadd( -15.7809, -181.922, 6.80945, 0.83 ) }
    dend_33 { pt3dadd( -16.4585, -185.1, 6.83252, 0.28 ) }
    dend_33 { pt3dadd( -17.2084, -188.141, 6.91614, 0.28 ) }
    dend_33 { pt3dadd( -17.7844, -190.278, 7.05826, 0.83 ) }
    dend_33 { pt3dadd( -18.847, -193.324, 7.27542, 0.28 ) }
    dend_33 { pt3dadd( -19.9473, -196.549, 7.51198, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 42/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 11.5072, -62.3007, 13.3655, 0.55 ) }
    dend_32 { pt3dadd( 8.96665, -63.2971, 12.9735, 0.55 ) }
    dend_32 { pt3dadd( 5.77357, -64.4348, 12.5264, 0.55 ) }
    dend_32 { pt3dadd( 3.0964, -65.3386, 12.567, 0.55 ) }
    dend_32 { pt3dadd( -0.256823, -66.3714, 12.8998, 0.55 ) }
    dend_32 { pt3dadd( -2.79346, -67.1108, 13.3673, 0.55 ) }
    dend_32 { pt3dadd( -3.6317, -67.3575, 13.5866, 0.55 ) }
    dend_32 { pt3dadd( -4.55694, -67.6155, 13.9324, 1.11 ) }
    dend_32 { pt3dadd( -8.99822, -68.9983, 16.044, 0.55 ) }
    dend_32 { pt3dadd( -10.0608, -69.3911, 16.671, 0.55 ) }
    dend_32 { pt3dadd( -11.603, -70.0073, 17.7486, 0.83 ) }
    dend_32 { pt3dadd( -13.1204, -70.7396, 18.828, 0.28 ) }
    dend_32 { pt3dadd( -15.5537, -71.9859, 20.5819, 0.55 ) }
    dend_32 { pt3dadd( -16.4042, -72.4885, 21.1418, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 56/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -11.3623, -95.9504, 6.5012, 0.55 ) }
    dend_26 { pt3dadd( -10.052, -97.2061, 7.08015, 0.55 ) }
    dend_26 { pt3dadd( -8.2844, -98.9577, 7.84612, 0.55 ) }
    dend_26 { pt3dadd( -6.1921, -101.052, 8.78115, 0.55 ) }
    dend_26 { pt3dadd( -3.36879, -103.998, 10.0894, 0.55 ) }
    dend_26 { pt3dadd( -1.60841, -105.854, 10.9304, 0.83 ) }
    dend_26 { pt3dadd( -0.359539, -107.106, 11.5922, 1.11 ) }
    dend_26 { pt3dadd( 0.669833, -108.048, 12.1871, 0.83 ) }
    dend_26 { pt3dadd( 2.06247, -109.098, 13.0775, 0.83 ) }
    dend_26 { pt3dadd( 3.48449, -110.014, 14.0812, 0.83 ) }
    dend_26 { pt3dadd( 4.99935, -110.8, 15.2392, 0.83 ) }
    dend_26 { pt3dadd( 7.27756, -111.967, 17.0244, 0.55 ) }
    dend_26 { pt3dadd( 8.78484, -112.77, 18.2618, 0.55 ) }
    dend_26 { pt3dadd( 10.8182, -114.136, 19.8795, 0.83 ) }
    dend_26 { pt3dadd( 9.86303, -116.135, 18.7469, 0.55 ) }
    dend_26 { pt3dadd( 8.81954, -118.079, 18.0715, 0.55 ) }
    dend_26 { pt3dadd( 7.8513, -119.904, 17.4463, 0.55 ) }
    dend_26 { pt3dadd( 6.36392, -122.715, 16.4866, 0.83 ) }
    dend_26 { pt3dadd( 4.97134, -125.077, 15.6217, 0.55 ) }
    dend_26 { pt3dadd( 3.15609, -127.75, 14.4216, 0.55 ) }
    dend_26 { pt3dadd( 0.683401, -130.94, 12.7763, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 77/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -11.3623, -95.9504, 6.5012, 1.11 ) }
    dend_25 { pt3dadd( -11.2239, -97.5546, 6.80321, 1.11 ) }
    dend_25 { pt3dadd( -11.1115, -99.6637, 7.15479, 0.55 ) }
    dend_25 { pt3dadd( -11.0646, -100.986, 7.36799, 0.55 ) }
    dend_25 { pt3dadd( -10.9857, -102.693, 7.61146, 0.55 ) }
    dend_25 { pt3dadd( -10.9497, -105.062, 7.99356, 0.55 ) }
    dend_25 { pt3dadd( -10.9192, -107.929, 8.46308, 0.55 ) }
    dend_25 { pt3dadd( -10.8572, -110.551, 8.89613, 0.55 ) }
    dend_25 { pt3dadd( -10.8409, -111.769, 9.09654, 0.28 ) }
    dend_25 { pt3dadd( -10.8666, -113.701, 9.3757, 0.83 ) }
    dend_25 { pt3dadd( -11.0715, -116.821, 9.75676, 0.55 ) }
    dend_25 { pt3dadd( -11.186, -118.017, 9.88495, 0.55 ) }
    dend_25 { pt3dadd( -11.3289, -119.45, 10.0328, 0.28 ) }
    dend_25 { pt3dadd( -11.4836, -120.666, 10.1675, 0.83 ) }
    dend_25 { pt3dadd( -11.7661, -122.513, 10.3661, 0.55 ) }
    dend_25 { pt3dadd( -12.2777, -125.052, 10.6342, 0.83 ) }
    dend_25 { pt3dadd( -12.571, -126.254, 10.744, 0.55 ) }
    dend_25 { pt3dadd( -12.8957, -127.165, 10.8373, 0.55 ) }
    dend_25 { pt3dadd( -13.4133, -128.358, 10.9599, 0.83 ) }
    dend_25 { pt3dadd( -14.0557, -129.674, 11.0995, 0.83 ) }
    dend_25 { pt3dadd( -15.0889, -131.43, 11.3086, 0.55 ) }
    dend_25 { pt3dadd( -15.7061, -132.453, 11.4375, 0.55 ) }
    dend_25 { pt3dadd( -16.7641, -134.132, 11.6628, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_25 { pt3dadd( -17.5806, -135.325, 11.8496, 0.83 ) }
    dend_25 { pt3dadd( -18.5612, -136.709, 12.0863, 0.28 ) }
    dend_25 { pt3dadd( -19.5605, -138.085, 12.3619, 0.55 ) }
    dend_25 { pt3dadd( -21.1203, -140.275, 12.8385, 0.55 ) }
    dend_25 { pt3dadd( -21.9581, -141.517, 13.1283, 0.55 ) }
    dend_25 { pt3dadd( -22.6039, -142.514, 13.3955, 0.55 ) }
    dend_25 { pt3dadd( -23.3066, -143.482, 13.6818, 0.55 ) }
    dend_25 { pt3dadd( -24.8544, -145.455, 14.282, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 8/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -64.9324, 72.3356, 39.6853, 0.55 ) }
    dend_18 { pt3dadd( -69.581, 71.8183, 39.8892, 0.55 ) }
    dend_18 { pt3dadd( -73.4118, 71.392, 40.0573, 0.55 ) }
    dend_18 { pt3dadd( -78.628, 70.8115, 40.2861, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 12/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -64.9324, 72.3356, 39.6853, 0.55 ) }
    dend_17 { pt3dadd( -65.5174, 69.6196, 38.7771, 0.55 ) }
    dend_17 { pt3dadd( -65.9347, 67.6824, 38.1294, 0.55 ) }
    dend_17 { pt3dadd( -66.7149, 64.0602, 36.9182, 0.55 ) }
    dend_17 { pt3dadd( -67.0713, 62.4056, 36.365, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_5 (entry count 17/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 0.637572, 53.3457, -1.11716, 0.55 ) }
    dend_11 { pt3dadd( -1.43176, 53.7307, 3.60307, 0.55 ) }
    dend_11 { pt3dadd( -2.21005, 53.9193, 5.24817, 0.55 ) }
    dend_11 { pt3dadd( -3.73514, 54.3328, 7.97713, 0.55 ) }
    dend_11 { pt3dadd( -7.8821, 55.1073, 15.5222, 0.55 ) }
    dend_11 { pt3dadd( -8.83732, 55.2222, 17.154, 0.55 ) }
    dend_11 { pt3dadd( -9.58508, 55.2509, 18.3807, 0.55 ) }
    dend_11 { pt3dadd( -10.5887, 55.2025, 20.0197, 0.55 ) }
    dend_11 { pt3dadd( -13.6235, 54.7037, 24.4959, 0.55 ) }
    dend_11 { pt3dadd( -16.5374, 54.0163, 28.3075, 0.55 ) }
    dend_11 { pt3dadd( -18.6736, 53.3956, 30.7113, 0.55 ) }
    dend_11 { pt3dadd( -20.2568, 52.8552, 32.5466, 0.55 ) }
    dend_11 { pt3dadd( -22.5451, 51.9599, 35.722, 0.55 ) }
    dend_11 { pt3dadd( -24.7374, 51.106, 39.0928, 0.55 ) }
    dend_11 { pt3dadd( -26.2303, 50.7159, 41.7298, 0.55 ) }
    dend_11 { pt3dadd( -27.3275, 50.6845, 43.708, 0.55 ) }
    dend_11 { pt3dadd( -29.0078, 50.8958, 46.8855, 0.55 ) }
    dend_11 { pt3dadd( -33.6104, 52.348, 54.9462, 0.55 ) }
    dend_11 { pt3dadd( -35.0524, 53.0772, 57.3532, 0.55 ) }
    dend_11 { pt3dadd( -38.5351, 55.1956, 62.7182, 0.55 ) }
    dend_11 { pt3dadd( -40.9524, 56.7708, 66.1449, 0.55 ) }
    dend_11 { pt3dadd( -43.0816, 58.2037, 68.6123, 0.55 ) }
    dend_11 { pt3dadd( -47.3132, 60.9838, 72.3399, 0.55 ) }
    dend_11 { pt3dadd( -50.7175, 63.1094, 74.2326, 0.55 ) }
    dend_11 { pt3dadd( -52.3372, 64.0229, 74.8903, 0.55 ) }
    dend_11 { pt3dadd( -54.8887, 65.3566, 75.5979, 0.55 ) }
    dend_11 { pt3dadd( -60.4808, 68.1808, 76.8956, 0.55 ) }
    dend_11 { pt3dadd( -64.6182, 70.1912, 77.7473, 0.55 ) }
    dend_11 { pt3dadd( -69.7863, 72.5369, 78.6531, 0.55 ) }
    dend_11 { pt3dadd( -72.4283, 73.6843, 79.0254, 0.55 ) }
    dend_11 { pt3dadd( -78.0356, 76.2597, 79.7704, 0.55 ) }
    dend_11 { pt3dadd( -81.8005, 78.0339, 80.3157, 0.55 ) }
    dend_11 { pt3dadd( -84.605, 79.4983, 81.0583, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 50/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 0.637572, 53.3457, -1.11716, 0.55 ) }
    dend_6 { pt3dadd( -0.293333, 55.3439, -1.50415, 0.55 ) }
    dend_6 { pt3dadd( -0.853567, 56.5464, -1.73705, 0.55 ) }
    dend_6 { pt3dadd( -1.505, 57.9448, -2.00786, 0.55 ) }
    dend_6 { pt3dadd( -2.13935, 59.3064, -2.27156, 0.83 ) }
    dend_6 { pt3dadd( -2.59231, 60.2787, -2.45986, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 56/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 37.421, -32.9904, 20.0362, 0.55 ) }
    dend_40 { pt3dadd( 39.9718, -32.9902, 18.9131, 0.55 ) }
    dend_40 { pt3dadd( 42.7545, -33.1144, 17.6939, 0.55 ) }
    dend_40 { pt3dadd( 46.2669, -33.3917, 16.2564, 0.55 ) }
    dend_40 { pt3dadd( 52.2952, -33.8677, 13.7891, 0.55 ) }
    dend_40 { pt3dadd( 55.6193, -34.1301, 12.4286, 0.55 ) }
    dend_40 { pt3dadd( 58.8769, -34.3874, 11.0953, 0.55 ) }
    dend_40 { pt3dadd( 61.1134, -34.6522, 10.1361, 0.83 ) }
    dend_40 { pt3dadd( 63.8176, -35.1901, 8.84991, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 65/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 37.421, -32.9904, 20.0362, 0.55 ) }
    dend_39 { pt3dadd( 38.4026, -32.9793, 18.7651, 0.55 ) }
    dend_39 { pt3dadd( 39.0083, -32.9218, 17.9636, 0.55 ) }
    dend_39 { pt3dadd( 41.6219, -32.5147, 14.4463, 0.55 ) }
    dend_39 { pt3dadd( 43.9314, -31.9796, 11.3997, 0.55 ) }
    dend_39 { pt3dadd( 45.1776, -31.5781, 9.77713, 0.83 ) }
    dend_39 { pt3dadd( 47.2594, -30.7299, 7.16132, 0.55 ) }
    dend_39 { pt3dadd( 48.0554, -30.3232, 6.16428, 0.55 ) }
    dend_39 { pt3dadd( 48.5671, -29.9054, 5.58652, 0.28 ) }
    dend_39 { pt3dadd( 49.3442, -28.5771, 5.02984, 0.55 ) }
    dend_39 { pt3dadd( 50.0453, -26.811, 4.77162, 0.55 ) }
    dend_39 { pt3dadd( 50.4867, -25.4888, 4.74313, 0.83 ) }
    dend_39 { pt3dadd( 51.1072, -23.2465, 4.92764, 0.28 ) }
    dend_39 { pt3dadd( 51.5958, -21.2413, 5.09876, 0.55 ) }
    dend_39 { pt3dadd( 51.8707, -19.9108, 5.19954, 0.55 ) }
    dend_39 { pt3dadd( 52.0865, -18.4886, 5.24455, 0.28 ) }
    dend_39 { pt3dadd( 52.2155, -17.2614, 5.18928, 0.55 ) }
    dend_39 { pt3dadd( 52.3032, -15.2403, 4.96906, 0.28 ) }
    dend_39 { pt3dadd( 52.3299, -13.8906, 4.76481, 0.55 ) }
    dend_39 { pt3dadd( 52.2694, -12.7094, 4.62749, 0.28 ) }
    dend_39 { pt3dadd( 52.1602, -10.9147, 4.41441, 0.55 ) }
    dend_39 { pt3dadd( 52.1107, -9.63094, 4.24865, 0.55 ) }
    dend_39 { pt3dadd( 52.0829, -7.40435, 3.97356, 0.55 ) }
    dend_39 { pt3dadd( 52.1206, -6.23238, 3.81016, 0.55 ) }
    dend_39 { pt3dadd( 52.2274, -4.37754, 3.58556, 0.55 ) }
    dend_39 { pt3dadd( 52.3809, -3.11985, 3.46081, 0.55 ) }
    dend_39 { pt3dadd( 52.5947, -2.09452, 3.38355, 0.55 ) }
    dend_39 { pt3dadd( 52.9595, -0.776676, 3.38444, 0.28 ) }
    dend_39 { pt3dadd( 53.1324, -0.209896, 3.40511, 0.55 ) }
    dend_39 { pt3dadd( 53.505, 0.971694, 3.461, 0.28 ) }
    dend_39 { pt3dadd( 53.8426, 2.14054, 3.55622, 0.55 ) }
    dend_39 { pt3dadd( 54.1766, 3.38641, 3.69862, 0.55 ) }
    dend_39 { pt3dadd( 54.7197, 5.4453, 3.97535, 0.28 ) }
    dend_39 { pt3dadd( 55.0266, 6.60778, 4.13769, 0.55 ) }
    dend_39 { pt3dadd( 55.3672, 7.98043, 4.38413, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_39 { pt3dadd( 55.8722, 10.2733, 4.87095, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 1/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -19.9473, -196.549, 7.51198, 0.55 ) }
    dend_35 { pt3dadd( -18.831, -199.307, 7.13157, 0.55 ) }
    dend_35 { pt3dadd( -18.5092, -200.382, 7.12675, 0.55 ) }
    dend_35 { pt3dadd( -17.9644, -202.132, 7.16544, 0.83 ) }
    dend_35 { pt3dadd( -17.5639, -203.184, 7.19295, 0.28 ) }
    dend_35 { pt3dadd( -16.7862, -204.727, 7.13278, 0.55 ) }
    dend_35 { pt3dadd( -16.4197, -205.454, 7.10443, 0.28 ) }
    dend_35 { pt3dadd( -15.2049, -207.582, 7.23133, 0.55 ) }
    dend_35 { pt3dadd( -14.6199, -208.502, 7.27416, 0.28 ) }
    dend_35 { pt3dadd( -13.6095, -210.057, 7.33007, 0.83 ) }
    dend_35 { pt3dadd( -12.0752, -212.025, 7.18717, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 12/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -19.9473, -196.549, 7.51198, 0.55 ) }
    dend_34 { pt3dadd( -22.9817, -196.589, 7.86387, 0.55 ) }
    dend_34 { pt3dadd( -23.6023, -196.665, 7.99804, 0.28 ) }
    dend_34 { pt3dadd( -25.117, -196.85, 8.32545, 0.55 ) }
    dend_34 { pt3dadd( -25.9948, -196.957, 8.51517, 0.28 ) }
    dend_34 { pt3dadd( -27.6664, -197.161, 8.87652, 0.55 ) }
    dend_34 { pt3dadd( -29.1994, -197.348, 9.20789, 0.28 ) }
    dend_34 { pt3dadd( -31.5646, -197.46, 9.78255, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 20/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 0.683401, -130.94, 12.7763, 0.55 ) }
    dend_28 { pt3dadd( -0.414771, -132.17, 13.7325, 0.55 ) }
    dend_28 { pt3dadd( -1.91152, -133.848, 15.0358, 0.55 ) }
    dend_28 { pt3dadd( -2.77173, -134.812, 15.7848, 0.83 ) }
    dend_28 { pt3dadd( -3.73483, -135.891, 16.6234, 0.83 ) }
    dend_28 { pt3dadd( -4.88608, -137.181, 17.6258, 0.55 ) }
    dend_28 { pt3dadd( -5.84842, -138.259, 18.4637, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 27/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 0.683401, -130.94, 12.7763, 0.55 ) }
    dend_27 { pt3dadd( 0.65981, -133.081, 13.0571, 0.55 ) }
    dend_27 { pt3dadd( 0.522558, -135.862, 13.5434, 0.55 ) }
    dend_27 { pt3dadd( 0.342154, -141.362, 14.5877, 0.55 ) }
    dend_27 { pt3dadd( 0.275816, -144.598, 15.2094, 0.83 ) }
    dend_27 { pt3dadd( 0.279236, -148.329, 15.9901, 0.55 ) }
    dend_27 { pt3dadd( 0.288605, -152.484, 16.8647, 0.83 ) }
    dend_27 { pt3dadd( 0.306408, -156.279, 17.6994, 0.55 ) }
    dend_27 { pt3dadd( 0.344271, -159.628, 18.5084, 0.55 ) }
    dend_27 { pt3dadd( 0.353608, -161.596, 19.0296, 1.11 ) }
    dend_27 { pt3dadd( 0.509388, -165.102, 19.9649, 0.55 ) }
    dend_27 { pt3dadd( 0.662195, -168.284, 20.8706, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 39/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -2.59231, 60.2787, -2.45986, 0.55 ) }
    dend_10 { pt3dadd( -5.6844, 66.1175, -4.43647, 0.55 ) }
    dend_10 { pt3dadd( -7.35363, 69.2696, -5.5035, 0.55 ) }
    dend_10 { pt3dadd( -8.22385, 70.9128, -6.05979, 0.28 ) }
    dend_10 { pt3dadd( -9.69484, 73.6905, -7.00011, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 44/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -2.59231, 60.2787, -2.45986, 0.55 ) }
    dend_7 { pt3dadd( -4.77168, 60.0323, -2.27816, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_40 (entry count 46/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 63.8176, -35.1901, 8.84991, 0.55 ) }
    dend_46 { pt3dadd( 65.4903, -34.5105, 11.0084, 0.55 ) }
    dend_46 { pt3dadd( 66.6584, -33.9486, 12.8341, 0.55 ) }
    dend_46 { pt3dadd( 69.2554, -32.7978, 17.5623, 0.55 ) }
    dend_46 { pt3dadd( 72.3262, -31.4484, 23.5023, 0.55 ) }
    dend_46 { pt3dadd( 74.0456, -30.7911, 26.8207, 0.28 ) }
    dend_46 { pt3dadd( 74.9786, -30.4829, 28.5381, 0.55 ) }
    dend_46 { pt3dadd( 77.8222, -29.7464, 33.8606, 0.83 ) }
    dend_46 { pt3dadd( 79.8027, -29.4019, 37.5681, 0.83 ) }
    dend_46 { pt3dadd( 81.973, -29.2869, 41.2639, 0.83 ) }
    dend_46 { pt3dadd( 83.3247, -29.3436, 43.164, 0.55 ) }
    dend_46 { pt3dadd( 84.7906, -29.4324, 45.0412, 0.83 ) }
    dend_46 { pt3dadd( 88.2851, -29.7919, 49.1717, 0.55 ) }
    dend_46 { pt3dadd( 90.7413, -30.0888, 51.4968, 0.55 ) }
    dend_46 { pt3dadd( 93.0021, -30.2939, 53.4173, 0.83 ) }
    dend_46 { pt3dadd( 95.6652, -30.6467, 55.6467, 0.83 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 62/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 63.8176, -35.1901, 8.84991, 0.83 ) }
    dend_41 { pt3dadd( 65.2001, -36.9674, 8.28377, 0.83 ) }
    dend_41 { pt3dadd( 66.9397, -39.3854, 7.14688, 0.83 ) }
    dend_41 { pt3dadd( 68.1008, -40.9994, 6.38802, 0.55 ) }
    dend_41 { pt3dadd( 68.8343, -42.019, 5.90866, 0.55 ) }
    dend_41 { pt3dadd( 70.5808, -44.4467, 4.76723, 0.83 ) }
    dend_41 { pt3dadd( 71.6586, -45.9448, 4.06286, 0.83 ) }
    dend_41 { pt3dadd( 73.3096, -48.2282, 2.56508, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 70/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -4.77168, 60.0323, -2.27816, 0.55 ) }
    dend_9 { pt3dadd( -10.4385, 56.739, -1.38328, 0.55 ) }
    dend_9 { pt3dadd( -14.8812, 54.3449, -0.711208, 0.55 ) }
    dend_9 { pt3dadd( -20.4205, 51.3599, 0.126761, 0.55 ) }
    dend_9 { pt3dadd( -24.7429, 49.0307, 0.780649, 0.55 ) }
    dend_9 { pt3dadd( -30.8779, 45.7247, 1.70873, 0.55 ) }
    dend_9 { pt3dadd( -36.4024, 42.7476, 2.54447, 0.55 ) }
    dend_9 { pt3dadd( -40.8912, 40.2451, 3.11441, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 78/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -4.77168, 60.0323, -2.27816, 0.55 ) }
    dend_8 { pt3dadd( -7.20915, 61.5464, -1.18839, 0.55 ) }
    dend_8 { pt3dadd( -9.21997, 62.8268, -0.226673, 0.55 ) }
    dend_8 { pt3dadd( -10.2053, 63.3843, 0.308509, 0.55 ) }
    dend_8 { pt3dadd( -13.4429, 64.9355, 2.44634, 0.55 ) }
    dend_8 { pt3dadd( -18.7189, 67.3847, 6.16747, 0.55 ) }
    dend_8 { pt3dadd( -20.5851, 68.2479, 7.48447, 0.55 ) }
    dend_8 { pt3dadd( -22.105, 68.9473, 8.63634, 0.55 ) }
    dend_8 { pt3dadd( -26.6425, 70.8624, 12.3801, 0.55 ) }
    dend_8 { pt3dadd( -30.6781, 72.4976, 15.8171, 0.55 ) }
    dend_8 { pt3dadd( -32.1153, 73.025, 17.1098, 0.83 ) }
    dend_8 { pt3dadd( -33.9021, 73.7235, 18.7042, 0.55 ) }
    dend_8 { pt3dadd( -34.9044, 74.1388, 19.6091, 0.55 ) }
    dend_8 { pt3dadd( -38.2935, 75.4462, 22.6312, 0.55 ) }
    dend_8 { pt3dadd( -40.5379, 76.6469, 24.4952, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 93/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 73.3096, -48.2282, 2.56508, 0.55 ) }
    dend_45 { pt3dadd( 72.8676, -48.715, 0.91458, 0.55 ) }
    dend_45 { pt3dadd( 71.602, -50.1088, -3.81087, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 96/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 73.3096, -48.2282, 2.56508, 0.83 ) }
    dend_42 { pt3dadd( 73.7392, -50.2616, 2.51395, 0.83 ) }
    dend_42 { pt3dadd( 74.0324, -51.6732, 2.44525, 0.55 ) }
    dend_42 { pt3dadd( 74.533, -54.0991, 2.3084, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_42 { pt3dadd( 75.0898, -56.5834, 2.17016, 0.83 ) }
    dend_42 { pt3dadd( 75.8504, -59.8122, 2.06366, 0.55 ) }
    dend_42 { pt3dadd( 76.1939, -61.4469, 2.01786, 0.28 ) }
    dend_42 { pt3dadd( 76.4535, -62.9068, 1.97645, 0.55 ) }
    dend_42 { pt3dadd( 76.6976, -64.9826, 1.85428, 0.28 ) }
    dend_42 { pt3dadd( 76.7063, -66.0284, 1.84769, 1.11 ) }
    dend_42 { pt3dadd( 76.3554, -68.3056, 1.96022, 0.55 ) }
    dend_42 { pt3dadd( 75.787, -70.2721, 2.13816, 0.55 ) }
    dend_42 { pt3dadd( 74.7171, -72.9304, 2.50278, 0.55 ) }
    dend_42 { pt3dadd( 73.2196, -75.4329, 3.22508, 0.55 ) }
    dend_42 { pt3dadd( 70.7349, -78.7378, 4.56448, 0.55 ) }
    dend_42 { pt3dadd( 69.5141, -80.0527, 5.19034, 0.83 ) }
    dend_42 { pt3dadd( 68.6297, -80.8867, 5.65828, 0.28 ) }
    dend_42 { pt3dadd( 67.5158, -81.8318, 6.32585, 0.55 ) }
    dend_42 { pt3dadd( 63.2666, -84.9278, 9.10531, 0.55 ) }
    dend_42 { pt3dadd( 62.4581, -85.4999, 9.71664, 0.83 ) }
    dend_42 { pt3dadd( 60.5541, -86.7793, 10.9789, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 17/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 60.5541, -86.7793, 10.9789, 0.28 ) }
    dend_44 { pt3dadd( 59.4463, -89.4994, 11.632, 0.28 ) }
    dend_44 { pt3dadd( 58.8908, -90.8635, 11.9596, 0.83 ) }
    dend_44 { pt3dadd( 58.1375, -92.7133, 12.4037, 0.28 ) }
    dend_44 { pt3dadd( 57.0011, -95.5036, 13.0737, 0.55 ) }
    dend_44 { pt3dadd( 56.2172, -97.4284, 13.5359, 0.28 ) }
    dend_44 { pt3dadd( 55.0638, -100.26, 14.2159, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 24/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 60.5541, -86.7793, 10.9789, 0.55 ) }
    dend_43 { pt3dadd( 57.4188, -88.0519, 10.6488, 0.55 ) }
    dend_43 { pt3dadd( 54.981, -89.3383, 10.4895, 1.11 ) }
    dend_43 { pt3dadd( 52.0976, -91.0752, 10.1627, 0.55 ) }
    dend_43 { pt3dadd( 49.4419, -92.8503, 9.71953, 0.55 ) }
    dend_43 { pt3dadd( 47.2567, -94.5241, 9.23757, 0.83 ) }
    dend_43 { pt3dadd( 43.7603, -97.4306, 8.43711, 0.28 ) }
    dend_43 { pt3dadd( 41.2859, -99.8128, 8.11482, 0.83 ) }
    dend_43 { pt3dadd( 39.5148, -101.676, 7.9975, 0.28 ) }
    dend_43 { pt3dadd( 38.1329, -103.367, 8.02015, 0.55 ) }
    dend_43 { pt3dadd( 36.5478, -105.617, 8.17115, 0.55 ) }
    dend_43 { pt3dadd( 34.0988, -109.266, 8.43957, 1.11 ) }
    dend_43 { pt3dadd( 31.1106, -114.092, 8.97199, 0.28 ) }
    dend_43 { pt3dadd( 30.5849, -114.919, 9.13122, 0.55 ) }
    dend_43 { pt3dadd( 29.6451, -116.318, 9.48973, 0.28 ) }
    dend_43 { pt3dadd( 28.4984, -118.004, 9.92851, 0.55 ) }
    dend_43 { pt3dadd( 27.0715, -119.957, 10.3922, 0.55 ) }
    dend_43 { pt3dadd( 25.3681, -122.484, 10.8376, 1.11 ) }
    dend_43 { pt3dadd( 23.1355, -125.534, 11.2406, 0.28 ) }
    dend_43 { pt3dadd( 21.7991, -126.989, 11.5416, 0.55 ) }
    dend_43 { pt3dadd( 20.4846, -128.216, 11.8946, 0.55 ) }
    dend_43 { pt3dadd( 18.6392, -129.861, 12.6138, 0.55 ) }
    dend_43 { pt3dadd( 16.4668, -131.832, 13.6042, 0.28 ) }
    dend_43 { pt3dadd( 13.6311, -134.447, 14.9102, 0.55 ) }
    dend_43 { pt3dadd( 10.6046, -137.275, 16.3972, 0.55 ) }
    dend_43 { pt3dadd( 8.57102, -139.231, 17.5027, 0.55 ) }
    dend_43 { pt3dadd( 5.45822, -142.187, 19.327, 0.55 ) }
    dend_43 { pt3dadd( 4.03702, -143.589, 20.2007, 0.55 ) }
    dend_43 { pt3dadd( 2.8839, -144.681, 20.8869, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_22, dend_13, dend_0, dend_30, dend_23, dend_19, dend_14, dend_4, dend_1, dend_36, dend_31, dend_29, dend_24, dend_21, dend_20, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_38, dend_37, dend_33, dend_32, dend_26, dend_25, dend_18, dend_17, dend_11, dend_6, dend_40, dend_39, dend_35, dend_34, dend_28, dend_27, dend_10, dend_7, dend_46, dend_41, dend_9, dend_8, dend_45, dend_42, dend_44, dend_43]}
    ModelViewParmSubset_2 = new SectionList()
    dend_22 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_22, dend_13, dend_0, dend_30, dend_23, dend_19, dend_14, dend_4, dend_1, dend_36, dend_31, dend_29, dend_24, dend_21, dend_20, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_38, dend_37, dend_33, dend_32, dend_26, dend_25, dend_18, dend_17, dend_11, dend_6, dend_40, dend_39, dend_35, dend_34, dend_28, dend_27, dend_10, dend_7, dend_46, dend_41, dend_9, dend_8, dend_45, dend_42, dend_44, dend_43]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_19 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_24 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_21 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_12 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_3 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_37 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_33 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_26 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_25 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_11 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_39 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_46 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_9 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_8 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_42 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_43 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_22 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_13 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_30 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_36 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_23 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_29 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_14 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_6 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_7 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_31 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_38 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_10 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_32 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_40 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_15 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_41 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_17 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_45 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_18 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_28 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_44 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_27 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_34 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_35 OneSecGrp_SectionRef_37.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_10, dend_10, dend_10, dend_10, dend_7, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_22 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_36 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_10 all.append()
    dend_7 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_43 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_19 nseg = 3
    dend_24 nseg = 3
    dend_21 nseg = 3
    dend_20 nseg = 5
    dend_16 nseg = 3
    dend_12 nseg = 5
    dend_3 nseg = 3
    dend_37 nseg = 5
    dend_33 nseg = 7
    dend_26 nseg = 3
    dend_25 nseg = 3
    dend_11 nseg = 7
    dend_39 nseg = 3
    dend_46 nseg = 3
    dend_9 nseg = 3
    dend_8 nseg = 3
    dend_42 nseg = 3
    dend_43 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_DBC_4c3b81ee8f_0_0


