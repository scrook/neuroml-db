// Cell: Cell_485591806
/*
{
  "id" : "Cell_485591806",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "343.309, 456.272, 10.6198, 12.584", "349.601, 456.272, 10.6198, 12.584", "355.893, 456.272, 10.6198, 12.584" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "349.601, 456.272, 10.6198, 1.0", "355.442, 470.088, 10.6198, 1.0", "361.284, 483.904, 10.6198, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "345.91, 450.635, 11.8038, 1.8662", "345.496, 449.584, 12.1279, 0.6092", "344.989, 448.56, 12.3774, 0.5542", "344.5, 447.527, 12.5341, 0.6176", "344.089, 446.465, 12.5762, 0.6188", "343.647, 445.427, 12.502, 0.498", "343.112, 444.417, 12.4329, 0.4148", "342.5, 443.464, 12.4471, 0.4914", "341.74, 442.61, 12.5044, 0.4282", "340.827, 441.943, 12.5267, 0.3922", "339.962, 441.202, 12.5569, 0.389" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "344.323, 458.927, 12.2746, 0.2288", "343.231, 459.038, 12.8221, 0.3162", "342.118, 458.808, 12.9966, 0.3772", "341.052, 458.638, 13.3433, 0.341", "340.203, 458.179, 13.9225, 0.313", "339.189, 458.163, 14.6087, 0.2998", "338.259, 458.773, 15.2732, 0.316", "337.262, 459.246, 15.9601, 0.377", "336.242, 459.664, 16.6616, 0.3408", "335.683, 460.579, 17.3339, 0.3124", "335.195, 461.594, 17.9616, 0.2988", "334.733, 462.567, 18.6358, 0.3142", "334.269, 463.565, 19.3263, 0.3736", "333.474, 464.357, 19.9565, 0.3342", "332.475, 464.795, 20.5984, 0.3006", "331.48, 465.135, 21.2916, 0.2758", "330.697, 465.902, 21.936, 0.2768", "330.009, 466.64, 22.6049, 0.2786", "329.677, 467.635, 23.2254, 0.282", "329.228, 468.671, 23.6832, 0.2882", "328.35, 469.389, 23.9011, 0.3008", "327.364, 469.885, 23.8423, 0.3178", "326.376, 470.321, 23.557, 0.3804", "325.307, 470.701, 23.1967, 0.3466", "324.218, 471.049, 22.8572, 0.3248", "323.17, 471.495, 22.536, 0.3152", "322.154, 471.997, 22.2346, 0.3754", "321.175, 472.575, 21.9745, 0.3376", "320.228, 473.206, 21.7512, 0.307", "319.429, 474.0, 21.5229, 0.2874", "318.726, 474.895, 21.3254, 0.2994", "318.09, 475.832, 21.2636, 0.3154", "317.366, 476.703, 21.3059, 0.3758", "316.504, 477.452, 21.372, 0.3382", "315.59, 478.141, 21.4333, 0.3078", "314.658, 478.803, 21.4799, 0.289", "313.922, 479.676, 21.5005, 0.3024", "313.463, 480.723, 21.492, 0.321", "313.156, 481.822, 21.4502, 0.3858", "312.914, 482.926, 21.3641, 0.358", "312.655, 484.029, 21.2686, 0.3396", "312.415, 485.145, 21.233, 0.3734", "312.374, 486.276, 21.3174, 0.3338", "312.715, 487.343, 21.54, 0.3", "313.115, 488.4, 21.8462, 0.2746", "313.121, 489.463, 22.2448, 0.2746", "312.161, 490.043, 22.6559, 0.2746", "311.078, 490.353, 23.0703, 0.2746", "310.18, 490.892, 23.5187, 0.2746", "309.697, 491.903, 23.9322, 0.2746", "309.235, 492.86, 24.3088, 0.2746", "308.753, 493.672, 24.7186, 0.2746", "308.667, 494.763, 24.9417, 0.2746", "308.349, 495.781, 24.982, 0.2746", "307.924, 496.838, 25.0004, 0.2746", "307.519, 497.903, 25.0613, 0.2746", "306.829, 498.741, 25.2289, 0.2746", "305.923, 499.373, 25.5326, 0.2746", "305.136, 500.149, 25.9406, 0.2746", "304.433, 501.033, 26.391, 0.2746", "303.648, 501.84, 26.8471, 0.2746", "302.788, 502.572, 27.2895, 0.2746", "301.855, 503.216, 27.6881, 0.2746", "300.88, 503.802, 28.0487, 0.2746", "300.236, 504.662, 28.4208, 0.2746", "299.57, 505.545, 28.796, 0.2746", "298.556, 505.975, 29.101, 0.2746", "297.671, 506.556, 29.4328, 0.2748", "297.45, 507.648, 29.6934, 0.2748", "296.529, 508.275, 29.8052, 0.2752", "295.738, 509.029, 29.7276, 0.2756" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "354.892, 457.527, 16.2274, 0.2288", "356.017, 457.603, 15.9551, 0.313", "357.053, 457.774, 15.7728, 0.3416", "358.011, 457.951, 15.4714, 0.419", "358.844, 458.651, 15.399, 0.4438", "359.449, 459.367, 15.6786, 0.3798", "359.749, 460.23, 16.2347, 0.3388", "360.246, 461.253, 16.7705, 0.3422", "361.182, 461.906, 17.2182, 0.4204" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "346.484, 461.514, 8.3012, 0.2288", "345.942, 462.47, 7.576, 0.3074", "345.833, 463.596, 7.2906, 0.3302", "345.346, 464.62, 6.9844, 0.4028", "344.886, 465.632, 6.6154, 0.3904", "345.08, 466.734, 6.3594, 0.3942", "345.057, 467.848, 6.0506, 0.5014", "344.681, 468.86, 5.6645, 0.4418", "343.946, 469.729, 5.334, 0.4412", "343.294, 470.66, 5.1105, 0.3652", "342.572, 471.496, 4.8203, 0.3588", "341.642, 472.114, 4.4942, 0.3792", "340.608, 472.598, 4.2339, 0.4906", "339.611, 473.159, 4.0477, 0.5678", "338.717, 473.872, 3.9035, 0.6526", "337.711, 474.4, 3.7554, 0.6356", "336.633, 474.711, 3.5936, 0.5338", "335.71, 475.321, 3.6694, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "352.055, 452.113, 15.0413, 0.4576", "353.025, 451.711, 15.2034, 0.4514", "354.044, 451.215, 15.2752, 0.4622", "355.012, 450.658, 15.2072, 0.6178", "356.089, 450.444, 15.021, 0.7046", "357.196, 450.689, 14.8457, 0.7004", "358.269, 450.527, 14.6007, 0.5792" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "354.785, 455.658, 4.356, 0.2288", "355.919, 455.614, 4.2789, 0.5172", "357.017, 455.297, 4.2505, 0.472", "358.072, 454.854, 4.2426, 0.4926" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "361.284, 483.904, 10.6198, 1.0", "367.125, 497.72, 10.6198, 1.0", "372.966, 511.536, 10.6198, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "339.962, 441.202, 12.5569, 0.389", "338.778, 440.844, 13.6441, 0.2288", "337.745, 441.093, 14.0071, 0.3148", "336.865, 441.813, 14.1041, 0.3748", "336.155, 442.663, 14.2281, 0.3364", "335.449, 443.465, 14.4421, 0.3048", "334.484, 443.97, 14.6457, 0.2836", "333.452, 444.428, 14.717, 0.291", "332.587, 445.065, 14.5583, 0.3062", "331.773, 445.78, 14.2274, 0.3276", "330.842, 446.416, 13.8427, 0.3996", "329.919, 447.083, 13.4594, 0.3772", "329.159, 447.845, 13.0138, 0.4058", "328.368, 448.58, 12.5351, 0.3464", "327.51, 449.317, 12.1508, 0.3244", "326.688, 450.111, 11.8574, 0.3144", "325.864, 450.904, 11.6171, 0.3742", "324.941, 451.571, 11.4291, 0.3352", "323.95, 452.142, 11.2835, 0.3024", "322.974, 452.735, 11.1382, 0.279", "321.996, 453.272, 10.9175, 0.2828", "320.952, 453.689, 10.6554, 0.2896", "320.013, 454.316, 10.4248, 0.3036", "319.627, 455.334, 10.2086, 0.3234", "318.978, 456.214, 9.9659, 0.3902", "318.027, 456.789, 9.8373, 0.3662", "317.235, 457.577, 9.7145, 0.3548", "316.533, 458.466, 9.5683, 0.4014", "315.905, 459.417, 9.4317, 0.3868", "315.353, 460.418, 9.3391, 0.3938", "314.836, 461.437, 9.288, 0.4694", "314.351, 462.473, 9.266, 0.5342", "313.908, 463.525, 9.3044, 0.5634", "313.565, 464.597, 9.4205, 0.6002", "313.417, 465.718, 9.4849, 0.5244", "312.921, 466.731, 9.5007, 0.3972", "312.169, 467.553, 9.5758, 0.3242", "311.312, 468.302, 9.5954, 0.3142", "310.588, 469.145, 9.4906, 0.3734", "309.779, 469.948, 9.3619, 0.3338", "308.734, 470.4, 9.2593, 0.3", "307.689, 470.868, 9.1786, 0.2746", "306.696, 471.434, 9.1142, 0.2746", "305.763, 472.096, 9.0777, 0.2746", "304.934, 472.884, 9.0626, 0.2746", "304.106, 473.673, 9.0498, 0.2746", "303.373, 474.552, 9.0323, 0.2748", "302.432, 475.2, 9.0083, 0.275", "301.303, 475.349, 8.9754, 0.2752", "300.457, 476.112, 8.923, 0.2758", "299.801, 477.05, 8.8551, 0.2768", "298.961, 477.826, 8.7705, 0.2796", "298.033, 478.489, 8.6513, 0.2796", "297.123, 479.172, 8.4949, 0.305", "296.274, 479.899, 7.957, 0.2288" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "339.962, 441.202, 12.5569, 0.389", "339.484, 440.133, 12.7162, 0.5324", "339.68, 439.06, 12.9499, 0.5314", "339.988, 437.972, 13.2335, 0.4522", "340.051, 436.847, 13.5473, 0.4514", "339.862, 435.728, 13.8617, 0.4272", "339.543, 434.637, 14.1532, 0.4938", "339.054, 433.635, 14.4488, 0.5324", "338.341, 432.752, 14.6815, 0.559", "337.657, 431.839, 14.8247, 0.598", "336.971, 430.962, 14.855, 0.4906", "336.246, 430.085, 14.8784, 0.4788", "335.409, 429.31, 14.9687, 0.4616", "334.61, 428.534, 15.1988, 0.4076", "333.982, 427.671, 15.6055, 0.4152", "333.375, 426.726, 16.0722, 0.3642", "332.888, 425.698, 16.5406, 0.3558", "332.579, 424.646, 17.0512, 0.3798", "332.433, 423.565, 17.5796, 0.461" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "295.738, 509.029, 29.7276, 0.2756", "294.542, 509.172, 29.3356, 0.2288", "293.398, 509.173, 29.1514, 0.2746", "292.254, 509.168, 29.0777, 0.2746", "291.11, 509.168, 28.9716, 0.2746", "289.966, 509.168, 28.8249, 0.2746", "288.861, 509.401, 28.632, 0.2746", "287.799, 509.825, 28.3906, 0.2746", "286.993, 510.223, 27.9128, 0.2746", "286.753, 511.109, 27.2819, 0.2746", "286.638, 512.212, 26.6264, 0.2746", "286.317, 513.285, 25.9965, 0.2746", "285.659, 514.202, 25.4521, 0.2746", "285.346, 515.27, 24.9706, 0.2746", "285.046, 516.249, 24.4369, 0.2746", "284.323, 517.109, 24.0144, 0.2746", "283.467, 517.867, 23.6858, 0.2746", "282.495, 518.468, 23.4255, 0.2746", "281.413, 518.739, 23.135, 0.2748", "280.34, 518.812, 22.7701, 0.2748", "279.22, 518.612, 22.4956, 0.2752", "278.117, 518.336, 22.3062, 0.2756", "277.14, 517.745, 22.1363, 0.2766", "276.183, 517.118, 21.9522, 0.2784", "275.131, 516.789, 21.6575, 0.2816", "273.991, 516.744, 21.3454, 0.2876", "272.925, 517.148, 20.9959, 0.2984", "272.061, 517.777, 20.5127, 0.3198", "271.009, 517.937, 19.9497, 0.354", "269.927, 518.074, 19.3813, 0.4432", "268.787, 518.141, 18.9369, 0.483", "267.647, 518.207, 18.5961, 0.4802", "266.505, 518.279, 18.3739, 0.3898", "265.363, 518.351, 18.2553, 0.4068", "264.219, 518.365, 18.1874, 0.2288" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "295.738, 509.029, 29.7276, 0.2756", "295.681, 509.268, 29.633, 0.2766", "295.496, 510.383, 29.521, 0.2782", "295.438, 511.524, 29.458, 0.2814", "295.432, 512.668, 29.486, 0.287", "295.432, 513.812, 29.6131, 0.2988", "295.281, 514.859, 29.9244, 0.3142", "295.03, 515.828, 30.4598, 0.3734", "294.715, 516.857, 31.0702, 0.3338", "294.216, 517.87, 31.5916, 0.3", "294.175, 518.819, 32.1384, 0.2746", "294.316, 519.87, 32.7085, 0.2746", "294.077, 520.967, 33.2114, 0.2746", "293.603, 522.005, 33.6678, 0.2748", "292.877, 522.861, 34.1006, 0.2748", "291.952, 523.456, 34.6063, 0.2752", "291.617, 524.185, 35.322, 0.2756", "291.325, 524.935, 36.2146, 0.2766", "290.563, 525.71, 37.0185, 0.2782", "289.86, 526.611, 37.6457, 0.2814", "289.37, 527.635, 38.0764, 0.287", "289.127, 528.75, 38.3726, 0.2988", "289.077, 529.892, 38.5888, 0.3142", "288.921, 530.934, 38.9362, 0.3734", "288.656, 532.021, 39.3534, 0.334", "288.415, 533.074, 39.8807, 0.3002", "288.131, 534.176, 40.3094, 0.2748", "287.939, 535.283, 40.7641, 0.275", "287.685, 536.357, 41.2552, 0.2754", "287.425, 537.431, 41.7561, 0.2762", "287.477, 538.549, 42.245, 0.2776", "287.533, 539.677, 42.7006, 0.2804", "287.584, 540.82, 43.0716, 0.2852", "287.666, 541.961, 43.3885, 0.2954", "287.851, 543.077, 43.7052, 0.3078", "288.015, 544.198, 44.0219, 0.3616", "287.628, 545.273, 44.3086, 0.3136", "287.238, 546.346, 44.5715, 0.2542", "286.658, 547.213, 45.4686, 0.2288" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "361.182, 461.906, 17.2182, 0.4204", "361.772, 461.991, 17.6141, 0.4464", "362.87, 462.116, 17.986, 0.3858", "363.972, 462.375, 18.2768, 0.3438", "365.109, 462.491, 18.4459, 0.3814", "366.244, 462.495, 18.6027, 0.3484", "367.338, 462.211, 18.7398, 0.3278", "368.375, 461.739, 18.7359, 0.321", "369.435, 461.38, 18.5663, 0.386", "370.566, 461.538, 18.3801, 0.3584", "371.708, 461.589, 18.1645, 0.3402", "372.728, 461.387, 17.7392, 0.3746", "373.841, 461.177, 17.285, 0.3362" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "361.182, 461.906, 17.2182, 0.4204", "360.832, 462.165, 17.607, 0.6864", "360.238, 463.004, 18.6989, 0.5128", "359.678, 463.961, 19.1624, 0.4434", "359.105, 464.948, 19.6034, 0.539", "358.913, 466.068, 20.0332, 0.5432", "358.974, 467.178, 20.5053, 0.4766", "359.267, 468.278, 20.9443, 0.4852", "359.632, 469.35, 21.3751, 0.545", "360.185, 470.322, 21.8493, 0.4444", "360.343, 471.452, 22.306, 0.3682", "360.454, 472.57, 22.7991, 0.3794", "360.622, 473.592, 23.4086, 0.3448", "360.672, 474.681, 24.0514, 0.3202", "360.734, 475.79, 24.6775, 0.3128", "360.479, 476.868, 25.2781, 0.3412", "360.584, 478.005, 25.7244, 0.4184", "360.407, 479.135, 26.072, 0.4426", "360.48, 480.229, 26.4532, 0.3778", "360.596, 481.319, 26.8727, 0.3338", "360.123, 482.36, 27.2278, 0.3392" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "358.269, 450.527, 14.6007, 0.5792", "359.19, 450.116, 14.271, 0.447", "360.095, 449.459, 14.1707, 0.4404", "360.954, 449.141, 14.4281, 0.4144", "361.948, 448.695, 14.8176, 0.4332", "362.85, 448.009, 15.2123, 0.5992", "363.657, 447.24, 15.4571, 0.4992", "364.476, 446.453, 15.6173, 0.4628" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "358.269, 450.527, 14.6007, 0.5792", "358.383, 451.237, 15.6103, 0.4576", "358.815, 451.666, 16.9153, 0.4584" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "358.072, 454.854, 4.2426, 0.4926", "358.186, 453.935, 4.139, 0.2288", "358.033, 452.831, 4.0435, 0.2766", "357.92, 451.7, 4.0211, 0.2784", "358.496, 450.79, 3.9998, 0.2818", "359.103, 449.829, 3.9701, 0.288", "359.34, 448.724, 3.9229, 0.2994", "359.552, 447.643, 3.7661, 0.3216", "360.179, 446.747, 3.534, 0.3572", "360.913, 445.881, 3.3583, 0.449", "361.504, 444.927, 3.2794, 0.4954", "362.344, 444.168, 3.2311, 0.4958", "363.316, 443.575, 3.1426, 0.4548", "364.105, 442.857, 2.9084, 0.353", "364.249, 441.753, 2.6276, 0.2882", "364.812, 440.76, 2.3765, 0.2542", "365.278, 439.753, 2.0687, 0.2288", "365.279, 438.61, 1.68, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "358.072, 454.854, 4.2426, 0.4926", "359.068, 455.702, 4.4621, 0.4742", "360.116, 455.441, 4.7011, 0.3902", "361.12, 455.214, 4.6996, 0.352", "362.251, 455.192, 4.6238, 0.3962", "363.36, 455.16, 4.651, 0.377", "364.47, 454.968, 4.584, 0.3756" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "332.433, 423.565, 17.5796, 0.461", "332.5, 422.705, 18.023, 0.6622", "332.254, 421.606, 18.3723, 0.789", "331.768, 420.574, 18.6523, 0.8482", "331.077, 419.668, 18.8941, 0.895", "330.276, 418.857, 19.1332, 0.8298", "329.516, 418.031, 19.434, 0.7612", "328.849, 417.122, 19.7886, 0.6094", "328.396, 416.103, 20.1974, 0.6746", "328.146, 415.036, 20.6718, 0.7154", "327.905, 413.948, 21.1522, 0.7218", "327.588, 412.86, 21.575, 0.6124", "327.169, 411.815, 21.9483, 0.5412", "326.618, 410.825, 22.2596, 0.4558", "325.952, 409.901, 22.4564, 0.5294", "325.237, 409.028, 22.5176, 0.4542", "324.656, 408.058, 22.5154, 0.4276", "324.279, 406.984, 22.5417, 0.516", "324.08, 405.878, 22.6649, 0.47", "323.886, 404.762, 22.8728, 0.4892", "323.695, 403.635, 23.1222, 0.4744", "323.528, 402.504, 23.3913, 0.462", "323.138, 401.438, 23.679, 0.3666", "322.649, 400.517, 24.0995, 0.3134", "322.265, 399.615, 24.6578, 0.2994", "321.689, 398.764, 25.2641, 0.3204", "320.857, 398.027, 25.6651, 0.3612", "320.187, 397.176, 25.817, 0.4266", "319.6, 396.204, 25.8656, 0.598", "319.069, 395.191, 25.8899, 0.6718", "318.659, 394.126, 25.947, 0.6214", "318.27, 393.073, 26.1225, 0.5204", "317.746, 392.076, 26.4107, 0.5996", "317.167, 391.111, 26.7761, 0.597", "316.529, 390.188, 27.1744, 0.6316", "315.871, 389.278, 27.5717, 0.504", "315.238, 388.341, 27.9304, 0.5114", "314.665, 387.353, 28.1996, 0.4854", "314.152, 386.33, 28.3766, 0.6288", "313.654, 385.3, 28.4813, 0.6528", "313.164, 384.266, 28.5337, 0.7256", "312.612, 383.264, 28.5524, 0.7246", "311.9, 382.369, 28.5547, 0.6964", "311.122, 381.53, 28.553, 0.5422", "310.408, 380.636, 28.5502, 0.522", "309.723, 379.721, 28.5454, 0.5674", "309.0, 378.835, 28.539, 0.4796", "308.326, 377.909, 28.5331, 0.465", "307.699, 376.953, 28.5278, 0.4052", "307.003, 376.051, 28.5076, 0.4522", "306.346, 375.143, 28.4474, 0.4594" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "332.433, 423.565, 17.5796, 0.461", "332.555, 422.766, 17.9617, 0.4576", "332.981, 421.853, 17.7331, 0.3594", "333.896, 421.411, 17.597, 0.3002", "334.828, 420.997, 17.7158, 0.2748", "335.748, 420.354, 17.9362, 0.2752", "336.589, 419.596, 18.2389, 0.2756", "337.479, 418.906, 18.6089, 0.2766", "338.526, 418.511, 18.9708, 0.2784", "339.622, 418.526, 19.3629, 0.2816", "340.724, 418.567, 19.7735, 0.2876", "341.847, 418.432, 20.1442, 0.2986", "342.968, 418.22, 20.4543, 0.3204", "344.103, 418.151, 20.7101, 0.3538", "345.221, 418.204, 20.9611, 0.4488", "346.317, 418.484, 21.1525, 0.4652", "347.344, 418.979, 21.2379, 0.584", "348.365, 419.472, 21.2029, 0.604", "349.44, 419.847, 21.1333, 0.4696", "350.555, 419.974, 20.9683, 0.3674", "351.689, 420.085, 20.762, 0.378", "352.773, 420.41, 20.5244, 0.3422", "353.846, 420.797, 20.3004, 0.3154", "354.915, 421.16, 20.0504, 0.304", "355.838, 421.815, 19.8374, 0.324", "356.864, 422.305, 19.6752, 0.3918", "357.922, 422.683, 19.4917, 0.368", "358.88, 423.258, 19.298, 0.3638", "359.886, 423.782, 19.1421, 0.3894", "360.712, 424.552, 19.1072, 0.5046", "361.518, 425.339, 19.2132, 0.6176", "362.312, 426.103, 19.4715, 0.629", "363.228, 426.757, 19.7039, 0.4684", "364.129, 427.453, 19.9597, 0.3654", "364.899, 428.27, 20.2629, 0.3744", "365.723, 428.974, 20.631, 0.3356", "366.684, 429.438, 21.0447, 0.3032", "367.704, 429.913, 21.3907, 0.2804", "368.575, 430.509, 21.5033, 0.2854", "369.644, 430.431, 21.4481, 0.2942", "370.757, 430.276, 21.359, 0.3122", "371.832, 430.345, 21.3668, 0.339", "372.641, 430.973, 21.6394, 0.4202", "373.58, 431.336, 22.1424, 0.4166", "374.634, 431.489, 22.7689, 0.4732", "375.748, 431.638, 23.3717, 0.4996", "376.861, 431.824, 23.8897, 0.4722", "377.934, 432.164, 24.3039, 0.5626", "378.999, 432.565, 24.546, 0.5026", "380.089, 432.879, 24.6286, 0.5816", "381.19, 433.164, 24.6495, 0.4906", "382.31, 433.345, 24.582, 0.5584", "383.424, 433.559, 24.4659, 0.4532", "384.56, 433.676, 24.3751, 0.4628", "385.7, 433.724, 24.3273, 0.4012", "386.831, 433.837, 24.2925, 0.4452", "387.945, 433.925, 24.3072, 0.4454", "389.064, 433.736, 24.3011, 0.3836", "390.18, 433.788, 24.237, 0.34", "391.287, 434.011, 24.1719, 0.3742", "392.421, 434.033, 24.0663, 0.3352", "393.55, 434.099, 23.9456, 0.3026", "394.659, 434.119, 23.8675, 0.2794", "395.738, 434.379, 23.9264, 0.2834", "396.839, 434.543, 24.0052, 0.2908", "397.936, 434.72, 23.9904, 0.3056", "399.012, 435.042, 23.991, 0.3268", "400.093, 435.37, 24.0559, 0.398", "401.224, 435.499, 24.169, 0.374", "402.354, 435.54, 24.3416, 0.4", "403.489, 435.514, 24.5601, 0.3358", "404.63, 435.478, 24.7857, 0.3036", "405.773, 435.512, 24.9913, 0.2814", "406.916, 435.555, 25.1844, 0.2872", "408.06, 435.559, 25.3801, 0.2988", "409.185, 435.453, 25.6271, 0.3144", "410.105, 434.925, 25.9822, 0.374", "410.893, 434.246, 26.4821, 0.335", "411.908, 433.918, 26.998, 0.302", "413.027, 433.775, 27.4861, 0.2782", "414.074, 433.701, 28.0283, 0.2814", "415.13, 433.385, 28.4679, 0.287", "416.139, 433.091, 28.6468, 0.2988", "417.194, 432.999, 28.8604, 0.3142", "418.31, 432.833, 29.0713, 0.3734", "419.393, 432.473, 29.2788, 0.3338", "420.346, 431.935, 29.577, 0.3", "421.294, 431.461, 30.0048, 0.2746", "422.189, 430.769, 30.3976, 0.2746", "423.22, 430.3, 30.6606, 0.2746", "424.304, 429.932, 30.8644, 0.2746", "425.412, 429.69, 31.0761, 0.2746", "426.48, 429.468, 31.3606, 0.2746", "427.389, 428.892, 31.6952, 0.2746", "428.136, 428.047, 31.8942, 0.2746", "429.087, 427.418, 32.0256, 0.2746", "430.069, 426.856, 32.1681, 0.2746", "431.028, 426.264, 32.3137, 0.2746", "432.017, 425.725, 32.3767, 0.2746", "432.837, 425.187, 32.2476, 0.2746", "433.387, 424.329, 32.0891, 0.2746", "434.344, 423.944, 32.1566, 0.2746", "435.328, 423.783, 32.4811, 0.2746", "436.231, 423.232, 32.9658, 0.2746", "437.263, 422.782, 33.4802, 0.2748", "438.071, 422.656, 34.1905, 0.2748", "438.748, 422.603, 35.0907, 0.2752", "439.67, 422.239, 35.852, 0.2756", "440.417, 421.418, 36.3471, 0.2766", "441.296, 420.743, 36.6164, 0.2782", "442.355, 420.406, 36.652, 0.2814", "443.214, 419.944, 36.3961, 0.2872", "443.791, 419.078, 36.0212, 0.299", "444.49, 418.191, 35.7605, 0.3148", "445.458, 417.663, 35.7406, 0.3746", "446.52, 417.616, 35.9814, 0.336", "447.564, 417.852, 36.4249, 0.3038", "448.644, 417.816, 36.9779, 0.2818", "449.737, 417.749, 37.5449, 0.2878", "450.829, 417.944, 38.0394, 0.3002", "451.935, 418.214, 38.3774, 0.3168", "453.041, 418.423, 38.4782, 0.3784", "454.121, 418.71, 38.3776, 0.3432", "455.144, 419.183, 38.1606, 0.3172", "456.065, 419.853, 37.8986, 0.3076", "457.128, 420.059, 37.7698, 0.3304", "458.222, 419.853, 37.5606, 0.404", "459.349, 419.718, 37.3377, 0.3898", "460.457, 419.999, 37.1428, 0.4068", "461.125, 420.827, 36.3748, 0.4576" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "373.841, 461.177, 17.285, 0.3362", "374.805, 461.161, 17.6865, 0.2288", "375.899, 460.914, 17.7968, 0.2752", "376.925, 460.414, 17.8416, 0.2756", "377.978, 459.985, 17.9222, 0.2766", "379.032, 459.935, 17.9719, 0.2782", "379.968, 459.95, 17.8336, 0.2814", "380.609, 459.14, 17.7321, 0.287", "381.125, 458.302, 17.8888, 0.2988", "382.022, 457.781, 18.1945, 0.3142", "383.09, 457.46, 18.5405, 0.3734", "384.163, 457.076, 18.8266, 0.3338", "385.096, 456.508, 18.9408, 0.3", "386.093, 455.961, 18.988, 0.2746", "387.222, 455.882, 18.9946, 0.2746", "388.357, 455.83, 19.0415, 0.2748", "389.392, 455.406, 19.1689, 0.275", "390.499, 455.251, 19.2306, 0.2754", "391.621, 455.148, 19.3794, 0.2762", "392.76, 455.117, 19.5448, 0.2776", "393.345, 454.146, 19.6905, 0.2802", "393.896, 453.178, 19.8646, 0.285", "394.753, 452.444, 20.0421, 0.2938", "395.747, 451.923, 20.2356, 0.3112", "396.69, 451.375, 20.3487, 0.3382", "397.296, 450.428, 20.3395, 0.413", "397.97, 449.545, 20.2394, 0.4328", "398.864, 448.864, 20.1532, 0.3594", "399.948, 448.518, 20.1015, 0.3002", "401.081, 448.4, 20.092, 0.275", "402.213, 448.467, 20.1596, 0.2754", "403.329, 448.566, 20.3421, 0.2762", "404.445, 448.692, 20.5792, 0.2776", "405.534, 449.013, 20.7891, 0.2804", "406.613, 449.352, 20.932, 0.2852", "407.738, 449.55, 21.0433, 0.2944", "408.853, 449.753, 21.122, 0.311", "409.96, 449.777, 21.2451, 0.3442", "411.038, 449.756, 21.4658, 0.3942", "412.152, 449.84, 21.6612, 0.5418", "413.244, 450.178, 21.8107, 0.5498", "414.364, 450.394, 21.9101, 0.4808", "415.487, 450.586, 21.983, 0.5304", "416.588, 450.81, 22.084, 0.4486", "417.654, 450.614, 22.1777, 0.4532", "418.743, 450.309, 22.2179, 0.3896", "419.875, 450.175, 22.2409, 0.3926", "421.009, 450.028, 22.2711, 0.4986", "422.143, 449.935, 22.2947, 0.4366", "423.24, 449.746, 22.3934, 0.4314", "424.3, 449.376, 22.5966, 0.347", "425.387, 449.034, 22.832, 0.3254", "426.449, 448.614, 23.0831, 0.3162", "427.424, 448.035, 23.3701, 0.3774", "428.202, 447.258, 23.7409, 0.3412", "428.822, 446.353, 24.1818, 0.3136", "429.427, 445.401, 24.5579, 0.2994", "429.842, 444.353, 24.8519, 0.3228", "430.018, 443.238, 25.1826, 0.3536", "430.265, 442.23, 25.662, 0.4724", "430.599, 441.305, 26.2841, 0.3932", "430.78, 440.265, 26.9378, 0.3254", "430.861, 439.17, 27.5564, 0.2746", "430.779, 438.038, 28.0218, 0.2748", "430.587, 436.919, 28.275, 0.2748", "430.748, 435.801, 28.3623, 0.275", "431.019, 434.797, 28.229, 0.2756", "431.583, 433.824, 28.075, 0.2764", "432.057, 432.921, 28.182, 0.2778", "432.256, 431.902, 28.4976, 0.2806", "432.281, 430.771, 28.8504, 0.2858", "432.297, 429.628, 29.155, 0.2952", "432.315, 428.484, 29.3955, 0.3142", "432.44, 427.35, 29.5764, 0.3422", "432.7, 426.252, 29.7256, 0.4278", "432.948, 425.136, 29.7886, 0.4238", "433.138, 424.066, 29.687, 0.5198", "433.353, 422.952, 29.5529, 0.4238", "433.585, 421.837, 29.4944, 0.4322", "434.108, 420.827, 29.5546, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "373.841, 461.177, 17.285, 0.3362", "374.048, 461.022, 16.8117, 0.3042", "374.69, 460.243, 16.2333, 0.2826", "375.302, 459.3, 15.6952, 0.2892", "376.106, 458.504, 15.2603, 0.3026", "377.07, 457.895, 14.9344, 0.3214", "378.083, 457.393, 14.6296, 0.3868", "378.98, 456.939, 14.2265, 0.3598", "379.844, 456.272, 13.8653, 0.3428", "380.681, 455.534, 13.6878, 0.3794", "381.459, 454.706, 13.577, 0.345", "382.331, 453.972, 13.4956, 0.3208", "383.24, 453.411, 13.5939, 0.3126", "384.083, 452.667, 13.746, 0.347", "384.861, 451.886, 13.7471, 0.3992", "385.705, 451.164, 13.6155, 0.5528", "386.646, 450.52, 13.4828, 0.5624", "387.694, 450.119, 13.4419, 0.5414", "388.651, 449.529, 13.3412, 0.4634", "389.508, 448.781, 13.234, 0.509", "390.294, 447.95, 13.1782, 0.5836", "390.86, 447.021, 13.2522, 0.5418", "391.517, 446.143, 13.3906, 0.4246", "391.834, 445.183, 13.2766, 0.3994", "392.361, 444.309, 12.9742, 0.335", "393.287, 443.655, 12.6762, 0.302", "394.148, 442.924, 12.4944, 0.2784", "394.706, 441.933, 12.3038, 0.2816", "395.555, 441.177, 12.2249, 0.2874", "396.332, 440.359, 12.1541, 0.2994", "397.094, 439.508, 12.158, 0.3152", "397.839, 438.671, 12.1164, 0.3754", "398.819, 438.096, 12.1506, 0.3376", "399.795, 437.567, 12.3035, 0.3068", "400.677, 436.954, 12.5627, 0.2872", "401.478, 436.141, 12.7686, 0.299", "402.278, 435.344, 12.847, 0.3144", "403.172, 434.634, 12.8609, 0.374", "404.018, 433.887, 12.7906, 0.335", "404.615, 432.923, 12.6883, 0.302", "405.03, 431.859, 12.6312, 0.2784", "405.447, 430.797, 12.6056, 0.2818", "405.931, 429.765, 12.6525, 0.2878", "406.296, 428.7, 12.7992, 0.3", "406.541, 427.595, 13.006, 0.3166", "406.859, 426.52, 13.2504, 0.378", "407.464, 425.577, 13.4751, 0.3424", "408.346, 424.854, 13.6341, 0.316", "409.306, 424.231, 13.717, 0.3038", "410.237, 423.571, 13.7273, 0.3308", "411.076, 422.795, 13.6768, 0.3684", "411.879, 421.986, 13.5665, 0.4992", "412.758, 421.279, 13.3825, 0.4454", "413.597, 420.562, 13.1273, 0.4118", "414.325, 419.735, 12.8223, 0.4854", "415.132, 418.983, 12.5385, 0.4188", "416.02, 418.37, 12.4619, 0.3676", "416.855, 417.75, 12.6008, 0.3782", "417.57, 416.913, 12.7565, 0.3428", "418.151, 416.003, 12.7729, 0.3166", "418.896, 415.22, 12.7165, 0.3048", "419.835, 414.627, 12.7402, 0.3328", "420.823, 414.122, 12.8358, 0.372", "421.8, 413.549, 12.9394, 0.5072", "422.77, 412.962, 12.9887, 0.4526", "423.766, 412.418, 12.9774, 0.462", "424.723, 411.8, 12.9301, 0.3996", "425.57, 411.036, 12.8518, 0.4422", "426.38, 410.23, 12.7527, 0.4398", "427.257, 409.514, 12.6332, 0.3722", "428.113, 408.782, 12.5047, 0.3248", "428.807, 407.892, 12.4, 0.3154", "429.292, 406.866, 12.3728, 0.3756", "429.65, 405.821, 12.5012, 0.338", "430.195, 404.903, 12.7817, 0.3078", "430.964, 404.107, 13.046, 0.2888", "431.613, 403.202, 13.2855, 0.302", "432.065, 402.163, 13.5551, 0.32", "432.256, 401.053, 13.808, 0.3844", "432.276, 399.909, 14.027, 0.354", "432.462, 398.802, 14.2771, 0.3386", "432.812, 397.804, 14.6695, 0.3404", "433.228, 396.8, 15.0705, 0.4242", "433.62, 395.729, 15.4106, 0.4176", "433.91, 394.679, 15.7988, 0.5062", "434.069, 393.625, 16.2375, 0.409", "434.116, 392.536, 16.6518, 0.3542", "434.177, 391.41, 16.9394, 0.3302", "434.493, 390.333, 17.0388, 0.3668", "435.042, 389.381, 16.903, 0.498", "435.347, 388.34, 16.586, 0.4354", "435.448, 387.215, 16.1663, 0.4292", "435.572, 386.103, 15.6836, 0.3432", "435.772, 385.02, 15.1672, 0.3174", "436.093, 383.996, 14.6317, 0.3062", "436.496, 382.999, 14.1169, 0.3354", "436.929, 381.968, 13.7679, 0.3778", "437.531, 381.024, 13.6398, 0.5118", "438.207, 380.118, 13.6063, 0.492", "438.9, 379.226, 13.6997, 0.3848", "439.584, 378.375, 13.9728, 0.3", "440.241, 377.471, 14.2026, 0.2748", "440.916, 376.556, 14.4394, 0.275", "441.479, 375.623, 14.7703, 0.2752", "442.061, 374.685, 15.1537, 0.2758", "442.569, 373.676, 15.5082, 0.2768", "442.972, 372.608, 15.7754, 0.2796", "443.35, 371.528, 15.9683, 0.2796", "443.778, 370.467, 16.0857, 0.305", "444.685, 369.806, 16.1552, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "360.123, 482.36, 27.2278, 0.3392", "360.766, 481.952, 28.7344, 0.2288", "361.641, 482.66, 28.6709, 0.2754", "362.589, 483.178, 28.5558, 0.2762", "363.559, 483.74, 28.4556, 0.2776", "364.493, 484.307, 28.4738, 0.2802", "365.085, 485.278, 28.5653, 0.285", "365.543, 486.279, 28.7731, 0.2938", "366.151, 487.116, 29.1659, 0.3112", "366.853, 487.969, 29.6195, 0.3382", "367.462, 488.923, 30.0656, 0.413", "367.925, 489.939, 30.4609, 0.4328", "368.188, 491.046, 30.7479, 0.3592", "368.66, 492.049, 30.9778, 0.3", "369.312, 492.862, 31.3197, 0.2746", "369.782, 493.812, 31.7355, 0.2746", "370.033, 494.912, 32.146, 0.2744", "370.331, 496.01, 32.5231, 0.2744", "370.762, 497.068, 32.8538, 0.2742", "371.182, 498.131, 33.1458, 0.274", "371.492, 499.23, 33.4242, 0.2736", "371.719, 500.351, 33.7392, 0.2728", "372.211, 501.364, 34.172, 0.2712", "373.213, 501.713, 34.7018, 0.2684", "373.897, 501.229, 35.5272, 0.2626", "373.946, 501.033, 36.7259, 0.2542", "374.147, 500.299, 38.0562, 0.2288", "374.153, 499.557, 41.1827, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "360.123, 482.36, 27.2278, 0.3392", "359.224, 483.516, 27.5289, 0.385", "358.404, 484.309, 27.8085, 0.525", "357.532, 485.048, 28.0742, 0.5174", "356.739, 485.857, 28.3581, 0.4266", "356.124, 486.728, 28.7571, 0.4032", "355.59, 487.514, 29.3474, 0.342", "354.772, 488.086, 29.9376, 0.3148", "353.861, 488.669, 30.3167, 0.303", "353.041, 489.414, 30.5981, 0.322", "352.279, 490.242, 30.9308, 0.388", "351.481, 491.0, 31.3653, 0.362", "350.518, 491.514, 31.9043, 0.347", "349.462, 491.85, 32.5573, 0.387", "348.382, 492.084, 33.3214, 0.36", "347.318, 492.287, 34.1788, 0.3432", "346.292, 492.427, 35.1308, 0.3802", "345.304, 492.725, 36.1441, 0.3464", "344.665, 493.546, 37.1633, 0.3242", "344.21, 494.44, 38.2354, 0.314", "343.594, 495.209, 39.3431, 0.3734", "342.782, 495.81, 40.4412, 0.3338", "341.808, 496.32, 41.4282, 0.3", "340.809, 496.841, 42.2943, 0.2744", "339.894, 497.42, 43.1259, 0.2744", "338.951, 497.957, 43.9292, 0.2742", "337.942, 498.416, 44.6914, 0.274", "336.843, 498.64, 45.4087, 0.2736", "335.725, 498.673, 46.1154, 0.2728", "334.684, 498.696, 46.8989, 0.2712", "333.612, 498.616, 47.6882, 0.2684", "332.834, 498.244, 48.5808, 0.2626", "331.778, 498.491, 49.3648, 0.2542", "330.765, 499.021, 49.9456, 0.2288", "329.815, 499.644, 50.7732, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "364.476, 446.453, 15.6173, 0.4628", "365.156, 446.623, 15.7042, 0.358", "366.201, 447.015, 15.7933, 0.3456", "367.166, 447.43, 16.0707, 0.3548", "368.163, 447.702, 16.513, 0.4448", "369.28, 447.826, 16.9784, 0.4866", "370.394, 447.736, 17.4325, 0.4846", "371.482, 447.479, 17.8668, 0.4088", "372.579, 447.183, 18.1875, 0.3888", "373.693, 447.0, 18.3432, 0.4542", "374.818, 446.974, 18.4399, 0.5348", "375.931, 447.029, 18.6019, 0.4244", "377.018, 447.258, 18.7593, 0.3362", "378.081, 447.63, 18.8255, 0.2944", "379.172, 447.889, 18.8826, 0.3122", "380.3, 448.057, 19.0062, 0.34", "381.407, 448.033, 19.1951, 0.4162", "382.452, 447.694, 19.4897, 0.4388", "383.489, 447.353, 19.8773, 0.3704", "384.6, 447.257, 20.2616, 0.3204", "385.74, 447.359, 20.5764, 0.3134", "386.881, 447.415, 20.8216, 0.341", "388.024, 447.419, 21.0207, 0.4254", "389.153, 447.429, 21.2272, 0.4198", "390.278, 447.468, 21.4609, 0.5102", "391.415, 447.553, 21.6802, 0.4174", "392.537, 447.464, 21.8712, 0.365", "393.657, 447.367, 22.0518, 0.3734", "394.798, 447.445, 22.2317, 0.334", "395.934, 447.536, 22.3976, 0.3", "397.068, 447.573, 22.5805, 0.2748", "397.875, 448.065, 22.8502, 0.2748", "398.146, 448.916, 23.4195, 0.2752", "399.028, 449.45, 24.1121, 0.2756", "400.152, 449.414, 24.8129, 0.2766", "401.276, 449.467, 25.5671, 0.2782", "402.204, 450.039, 26.4153, 0.2814", "403.185, 450.435, 27.3804, 0.287", "404.23, 450.78, 28.3811, 0.2988", "404.542, 451.632, 29.5238, 0.3142", "404.087, 451.869, 30.9218, 0.3734", "404.031, 451.912, 32.5175, 0.334", "404.514, 452.01, 34.1202, 0.3", "405.343, 451.565, 35.6166, 0.2748", "406.302, 451.241, 36.8816, 0.275", "407.375, 451.283, 37.8792, 0.2752", "408.25, 450.86, 38.6442, 0.2758", "409.229, 450.338, 39.1952, 0.2768", "410.28, 449.905, 39.6136, 0.2788", "411.067, 449.118, 39.9479, 0.2826", "412.008, 448.506, 40.2217, 0.2892", "413.12, 448.48, 40.4208, 0.3028", "414.18, 448.812, 40.6692, 0.3218", "415.249, 448.88, 41.0197, 0.3876", "416.386, 448.837, 41.309, 0.3598", "417.513, 448.664, 41.519, 0.3504", "418.578, 448.426, 41.8236, 0.3574", "419.617, 447.954, 42.0672, 0.4794", "420.758, 447.917, 42.2408, 0.4062", "421.867, 447.955, 42.4956, 0.3506", "422.965, 447.997, 42.8344, 0.316" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "364.476, 446.453, 15.6173, 0.4628", "364.968, 445.141, 14.7923, 0.2756", "364.776, 444.061, 14.6592, 0.2766", "364.126, 443.135, 14.4784, 0.2782", "363.782, 442.101, 14.2372, 0.2814", "364.105, 441.064, 13.8807, 0.2874", "364.492, 440.139, 13.3217, 0.2982", "364.513, 439.178, 12.5969, 0.3194", "364.601, 438.079, 11.9255, 0.3532", "365.209, 437.148, 11.3897, 0.4416", "365.856, 436.213, 10.9085, 0.4808", "366.252, 435.271, 10.3391, 0.4736", "366.66, 434.274, 9.7466, 0.3892", "367.091, 433.22, 9.2162, 0.35", "367.439, 432.132, 8.7474, 0.393", "367.692, 431.049, 8.2268, 0.3698", "367.869, 429.964, 7.6661, 0.3686", "367.933, 428.864, 7.0942, 0.3924", "368.181, 427.791, 6.5039, 0.5388", "368.559, 426.75, 5.9056, 0.5426", "369.061, 425.738, 5.357, 0.4754", "369.803, 424.871, 4.913, 0.483", "370.662, 424.132, 4.5205, 0.541", "371.362, 423.315, 4.0854, 0.436", "371.877, 422.367, 3.6379, 0.3574", "372.369, 421.334, 3.3133, 0.3344", "372.845, 420.296, 3.0906, 0.3826", "373.13, 419.189, 2.9539, 0.4896", "373.366, 418.07, 2.8998, 0.6024", "373.611, 416.953, 2.9031, 0.539", "373.832, 415.833, 2.9111, 0.6016", "373.95, 414.707, 2.9285, 0.5302", "373.665, 413.601, 2.9584, 0.6198", "373.263, 412.53, 3.0037, 0.6246", "372.953, 411.429, 3.0694, 0.5012", "372.603, 410.346, 3.1723, 0.4578", "372.044, 409.368, 3.3392, 0.3906", "371.262, 408.554, 3.5528, 0.432", "370.488, 407.73, 3.7566, 0.3898", "370.027, 406.7, 3.9442, 0.4304", "369.805, 405.591, 4.1272, 0.387", "369.446, 404.515, 4.2429, 0.425", "368.954, 403.49, 4.2483, 0.3772", "368.623, 402.405, 4.1756, 0.4058", "368.534, 401.275, 4.0484, 0.3466", "368.518, 400.144, 3.8791, 0.3244", "368.344, 399.025, 3.7081, 0.3148", "368.026, 397.928, 3.6064, 0.3746", "367.623, 396.867, 3.6082, 0.336", "367.096, 395.857, 3.6805, 0.304", "366.539, 394.86, 3.7669, 0.2822", "365.864, 393.947, 3.877, 0.2888", "365.057, 393.141, 4.0317, 0.3004", "364.215, 392.382, 4.2159, 0.3246", "363.249, 391.795, 4.4309, 0.3568", "362.221, 391.305, 4.6361, 0.4782", "361.372, 390.597, 4.8154, 0.404", "360.964, 389.577, 5.0468, 0.3454", "360.703, 388.516, 5.3444, 0.3124", "360.17, 387.524, 5.6336, 0.3404", "359.542, 386.569, 5.8645, 0.417", "359.004, 385.562, 6.0367, 0.4402", "358.628, 384.487, 6.1582, 0.373", "358.232, 383.427, 6.2359, 0.3264", "357.542, 382.528, 6.2889, 0.3182", "356.741, 381.715, 6.3408, 0.3808", "355.983, 380.859, 6.4088, 0.3474", "355.222, 380.018, 6.5244, 0.3262", "354.622, 379.078, 6.6848, 0.318", "354.293, 377.991, 6.8354, 0.3808", "353.988, 376.9, 6.9651, 0.3474", "353.41, 375.923, 7.0584, 0.3262", "352.752, 374.993, 7.104, 0.3178", "352.168, 374.019, 7.0813, 0.3802", "351.493, 373.111, 7.0128, 0.3464", "350.808, 372.207, 6.9885, 0.3242", "350.238, 371.227, 7.012, 0.3142", "349.658, 370.243, 7.0312, 0.3734", "349.156, 369.227, 7.0296, 0.3338", "349.097, 368.127, 7.0025, 0.3", "349.421, 367.031, 6.9514, 0.2746", "349.61, 365.926, 6.8528, 0.2746", "349.529, 364.848, 6.6374, 0.2746", "349.542, 363.913, 6.2595, 0.2746", "349.033, 363.243, 5.8631, 0.2746", "347.988, 362.909, 5.6785, 0.2746", "347.234, 362.506, 5.8898, 0.2746", "346.848, 361.709, 6.4064, 0.2746", "346.769, 360.644, 7.0114, 0.2746", "346.249, 359.684, 7.4837, 0.2746", "345.726, 358.676, 7.8611, 0.2746", "345.091, 357.729, 8.118, 0.2746", "344.676, 356.668, 8.247, 0.2746", "344.207, 355.625, 8.2954, 0.2746", "343.664, 354.634, 8.267, 0.2746", "342.979, 353.73, 8.2209, 0.2746", "342.147, 352.965, 8.2671, 0.2748", "341.261, 352.264, 8.3997, 0.275", "340.406, 351.516, 8.587, 0.2752", "339.584, 350.746, 8.8303, 0.276", "338.817, 349.904, 9.0763, 0.277", "338.046, 349.06, 9.2738, 0.2792", "337.235, 348.253, 9.409, 0.283", "336.371, 347.506, 9.4866, 0.2904", "335.376, 346.971, 9.5028, 0.3038", "334.888, 345.956, 9.5221, 0.3294", "334.396, 344.967, 9.6968, 0.373", "333.398, 344.414, 9.9169, 0.4732", "332.41, 343.925, 10.2521, 0.565", "331.801, 343.015, 10.667, 0.5056", "331.15, 342.097, 11.0756, 0.3644", "330.468, 341.177, 11.3803, 0.2542", "329.886, 340.194, 11.7177, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "358.815, 451.666, 16.9153, 0.4584", "358.911, 451.092, 17.3573, 0.3598", "358.569, 450.1, 17.8247, 0.301", "358.288, 449.036, 18.2919, 0.2764", "358.572, 447.967, 18.7266, 0.278", "359.02, 446.922, 19.0774, 0.2808", "359.516, 445.9, 19.2765, 0.286", "360.096, 444.952, 19.3497, 0.2958", "360.859, 444.124, 19.4591, 0.3148", "361.403, 443.223, 19.7314, 0.344", "361.587, 442.131, 20.0731, 0.4294", "361.624, 440.991, 20.4027, 0.4344", "361.66, 439.847, 20.6973, 0.5024", "361.793, 438.711, 20.9596, 0.5716", "361.951, 437.579, 21.1889, 0.5182", "361.884, 436.441, 21.4224, 0.386", "361.657, 435.34, 21.7268, 0.3024", "361.748, 434.233, 22.1135, 0.2788", "362.383, 433.353, 22.5958, 0.2826", "363.082, 432.481, 23.0906, 0.2894", "363.956, 431.756, 23.4598, 0.3018", "364.976, 431.248, 23.7747, 0.3272", "365.958, 430.778, 24.1568, 0.3616", "366.788, 430.07, 24.5809, 0.487", "367.519, 429.192, 24.9481, 0.4206", "368.299, 428.357, 25.2594, 0.3766", "369.065, 427.507, 25.5435, 0.3666", "369.746, 426.599, 25.8363, 0.46", "370.495, 425.764, 26.1667, 0.5456", "371.326, 424.986, 26.4945, 0.4448", "372.21, 424.273, 26.8361, 0.3734", "372.85, 423.392, 27.2589, 0.3654", "373.098, 422.315, 27.7258, 0.4342", "373.376, 421.223, 28.1688, 0.6132", "373.907, 420.211, 28.5415, 0.696", "374.381, 419.173, 28.8576, 0.6846", "374.567, 418.073, 29.1575, 0.549", "374.208, 417.05, 29.5288, 0.396", "373.712, 416.066, 29.932, 0.3206", "373.246, 415.044, 30.2954, 0.3138", "373.244, 413.908, 30.5827, 0.343", "373.546, 412.809, 30.7846, 0.4218", "373.792, 411.716, 30.9061, 0.4488", "373.783, 410.609, 31.1097, 0.3904", "373.549, 409.497, 31.3362, 0.352", "373.516, 408.378, 31.6025, 0.3976", "373.507, 407.352, 32.0286, 0.3734", "373.459, 406.213, 32.4164, 0.3988", "373.268, 405.102, 32.8073, 0.3338", "372.88, 404.033, 33.1638, 0.3", "372.627, 402.933, 33.5003, 0.2746", "372.621, 401.794, 33.8055, 0.2746", "372.713, 400.668, 34.0939, 0.2746", "372.966, 399.563, 34.3697, 0.2746", "373.32, 398.488, 34.6254, 0.2746", "373.403, 397.355, 34.823, 0.2746", "373.248, 396.222, 34.9849, 0.2746", "372.97, 395.12, 35.1028, 0.2746", "372.471, 394.099, 35.2271, 0.2746", "371.937, 393.12, 35.4281, 0.2748", "371.374, 392.155, 35.6737, 0.275", "370.863, 391.141, 35.8834, 0.2752", "370.56, 390.042, 36.0279, 0.2758", "370.333, 388.928, 36.139, 0.277", "369.893, 387.893, 36.1656, 0.279", "369.205, 387.012, 36.0802, 0.2826", "368.379, 386.221, 35.9951, 0.2896", "367.627, 385.377, 35.908, 0.3022", "366.96, 384.458, 35.7902, 0.328", "366.225, 383.584, 35.6877, 0.363", "365.452, 382.743, 35.6185, 0.4894", "364.563, 382.067, 35.5505, 0.4262", "363.505, 381.823, 35.4964, 0.381", "362.793, 381.467, 35.6434, 0.4044", "362.598, 380.459, 35.9279, 0.3858", "362.301, 379.363, 36.1771, 0.423", "361.718, 378.427, 36.4652, 0.3734", "360.902, 377.663, 36.8001, 0.3988", "360.275, 376.747, 37.0474, 0.334", "359.742, 375.75, 37.2016, 0.3", "359.05, 374.854, 37.3915, 0.2748", "358.364, 374.018, 37.7356, 0.2748", "357.673, 373.319, 38.2701, 0.2752", "356.998, 372.599, 38.9374, 0.2756", "356.635, 371.62, 39.4192, 0.2766", "356.395, 370.513, 39.7757, 0.2782", "355.79, 369.621, 40.1556, 0.2814", "354.797, 369.124, 40.5023, 0.287", "353.927, 368.4, 40.7462, 0.2988", "353.106, 367.605, 40.9562, 0.3142", "352.645, 366.571, 41.2199, 0.3734", "352.369, 365.465, 41.5198, 0.3338", "351.912, 364.543, 41.9829, 0.3", "351.566, 363.722, 42.6516, 0.2746", "351.317, 362.664, 43.3171, 0.2746", "351.016, 361.562, 43.8376, 0.2746", "350.087, 360.915, 44.203, 0.2746", "348.978, 360.633, 44.4298, 0.2746", "347.867, 360.36, 44.5362, 0.2746", "346.947, 359.684, 44.5648, 0.2746", "346.089, 358.928, 44.5676, 0.2746", "345.387, 358.024, 44.5676, 0.2746", "345.025, 356.939, 44.5676, 0.2746", "344.765, 355.825, 44.5676, 0.2744", "344.645, 354.688, 44.5676, 0.2744", "344.685, 353.544, 44.5676, 0.2742", "344.718, 352.401, 44.5676, 0.274", "344.947, 351.28, 44.5676, 0.2736", "345.288, 350.188, 44.5676, 0.2728", "345.422, 349.052, 44.5676, 0.2712", "345.379, 347.909, 44.5676, 0.2684", "345.134, 346.791, 44.5676, 0.2626", "344.782, 345.703, 44.5676, 0.2542", "344.399, 344.625, 44.5676, 0.2288", "343.775, 343.666, 44.5676, 0.2288" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "358.815, 451.666, 16.9153, 0.4584", "358.558, 452.041, 17.8746, 0.2288", "357.998, 452.969, 18.9886, 0.3242", "357.579, 453.954, 19.4903, 0.3636", "357.223, 454.995, 20.0484, 0.4548", "356.803, 456.051, 20.553, 0.5358", "356.251, 456.99, 21.0406, 0.4266", "355.685, 457.727, 21.6303, 0.3398", "355.742, 458.869, 22.0808, 0.3024", "355.795, 460.007, 22.4543, 0.3212", "355.783, 461.151, 22.7503, 0.3862", "355.515, 462.257, 22.9548, 0.3588", "355.459, 463.391, 23.1748, 0.3408", "355.573, 464.518, 23.427, 0.3758", "355.641, 465.6, 23.8032, 0.3382", "355.588, 466.728, 24.1963, 0.3082", "355.317, 467.834, 24.4894, 0.2898", "355.203, 468.942, 24.8119, 0.3022", "354.998, 469.73, 25.3147, 0.328", "354.776, 470.845, 25.6608, 0.3634", "354.806, 471.948, 25.7604, 0.49", "355.029, 472.94, 25.6227, 0.4272", "355.204, 473.839, 25.2885, 0.3828", "355.179, 474.96, 25.0071, 0.4078", "355.051, 475.92, 25.1069, 0.3922", "354.924, 476.879, 25.5514, 0.4334", "354.888, 477.884, 26.2317, 0.3998", "354.887, 478.931, 27.0256, 0.4128", "354.589, 480.032, 27.7186, 0.5296", "354.079, 481.055, 28.2405, 0.525", "353.757, 482.154, 28.6062, 0.4464", "353.636, 483.291, 28.8803, 0.4112", "353.514, 484.428, 29.1172, 0.4966" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "364.47, 454.968, 4.584, 0.3756", "364.811, 454.385, 3.7534, 0.2288", "365.399, 453.475, 4.0216, 0.3144", "366.147, 452.656, 4.1741, 0.374", "367.062, 451.979, 4.2748, 0.335", "368.105, 451.523, 4.2919, 0.302", "369.228, 451.361, 4.209, 0.2782", "370.156, 450.89, 3.9231, 0.2814", "370.931, 450.134, 3.5145, 0.2872", "371.758, 449.484, 3.0153, 0.299", "372.782, 449.058, 2.6966, 0.3144", "373.777, 448.505, 2.4912, 0.3742", "374.872, 448.251, 2.3551, 0.3352", "375.98, 447.974, 2.3487, 0.3022", "377.109, 448.044, 2.4855, 0.2796", "378.176, 448.439, 2.7029, 0.2796", "379.096, 447.796, 2.9696, 0.305", "379.897, 447.124, 3.9491, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "364.47, 454.968, 4.584, 0.3756", "365.087, 455.43, 4.5032, 0.435", "366.155, 455.77, 4.5054, 0.4748", "367.272, 455.625, 4.5844, 0.4314", "368.391, 455.386, 4.6429, 0.4614", "369.526, 455.493, 4.6488, 0.4392", "370.592, 455.89, 4.5977, 0.5468", "371.633, 456.332, 4.4665, 0.4812", "372.691, 456.764, 4.3512, 0.5038", "373.708, 457.143, 4.1202, 0.5322" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "306.346, 375.143, 28.4474, 0.4594", "306.208, 374.773, 28.4648, 0.4034", "305.884, 373.704, 28.5863, 0.4074", "306.035, 372.63, 28.8873, 0.3496", "306.203, 371.557, 29.3087, 0.3304", "306.03, 370.44, 29.7324, 0.3256", "305.53, 369.417, 30.1176, 0.3946", "304.995, 368.439, 30.5248, 0.3742", "304.584, 367.39, 30.9036, 0.3706", "304.414, 366.285, 31.2693, 0.4254", "304.382, 365.149, 31.5857, 0.457", "304.237, 364.018, 31.8324, 0.399", "303.849, 362.942, 32.0272, 0.3992", "303.397, 361.891, 32.1838, 0.3344", "302.943, 360.843, 32.3308, 0.3008", "302.387, 359.854, 32.5083, 0.2762", "301.904, 358.862, 32.7718, 0.2776", "301.632, 357.789, 33.0887, 0.2804", "301.454, 356.673, 33.3796, 0.2854", "301.192, 355.569, 33.5434, 0.2944", "300.996, 354.471, 33.5742, 0.3124", "300.518, 353.439, 33.5773, 0.339", "299.78, 352.581, 33.6148, 0.4218", "298.938, 351.837, 33.7176, 0.413", "298.258, 350.932, 33.8363, 0.4978", "297.867, 349.859, 33.9399, 0.3932", "297.622, 348.745, 34.0074, 0.3254", "297.383, 347.636, 34.0164, 0.2746", "296.998, 346.566, 34.0276, 0.2746", "296.465, 345.561, 34.116, 0.2746", "295.932, 344.558, 34.2807, 0.2746", "295.402, 343.552, 34.5108, 0.2746", "294.896, 342.538, 34.7934, 0.2746", "294.418, 341.51, 35.1126, 0.2746", "293.944, 340.482, 35.4427, 0.2746", "293.478, 339.449, 35.7644, 0.2746", "293.061, 338.391, 36.0601, 0.2746", "292.699, 337.308, 36.3146, 0.2746", "292.339, 336.225, 36.5347, 0.2746", "291.969, 335.145, 36.7262, 0.2746", "291.547, 334.083, 36.8914, 0.2746", "291.051, 333.053, 37.0306, 0.2746", "290.54, 332.029, 37.1591, 0.2746", "290.042, 331.0, 37.2935, 0.2746", "289.632, 329.938, 37.464, 0.2748", "289.376, 328.838, 37.704, 0.275", "289.184, 327.732, 38.01, 0.2754", "288.984, 326.627, 38.3569, 0.276", "288.719, 325.53, 38.7066, 0.2774", "288.321, 324.461, 39.0107, 0.2796", "287.838, 323.424, 39.2482, 0.2842", "287.358, 322.385, 39.4344, 0.292", "286.892, 321.343, 39.5979, 0.3082", "286.476, 320.289, 39.7888, 0.3312", "286.106, 319.233, 40.035, 0.4064", "285.738, 318.176, 40.3136, 0.3898", "285.378, 317.104, 40.5745, 0.429", "285.044, 316.014, 40.7383, 0.3904", "284.734, 314.928, 40.7733, 0.4016", "284.422, 313.841, 40.7196, 0.4776", "284.11, 312.748, 40.6437, 0.5802", "283.798, 311.652, 40.6344, 0.4982", "283.489, 310.566, 40.733, 0.524", "283.164, 309.484, 40.9206, 0.3948", "282.75, 308.429, 41.1552, 0.3284", "282.174, 307.444, 41.3804, 0.28", "281.518, 306.507, 41.5674, 0.2848", "280.867, 305.567, 41.7194, 0.2932", "280.267, 304.596, 41.8589, 0.3104", "279.766, 303.575, 42.021, 0.3356", "279.324, 302.532, 42.2181, 0.414", "278.876, 301.49, 42.4376, 0.405", "278.411, 300.45, 42.6451, 0.4522", "277.913, 299.42, 42.7986, 0.458", "277.402, 298.401, 42.8952, 0.4084", "276.875, 297.387, 42.9775, 0.3804", "276.321, 296.392, 43.106, 0.4748", "275.751, 295.415, 43.3118, 0.398", "275.164, 294.448, 43.5845, 0.3342", "274.496, 293.541, 43.9127, 0.2908", "273.716, 292.731, 44.277, 0.3056", "272.892, 291.965, 44.6508, 0.3268", "272.069, 291.191, 45.0002, 0.398", "271.252, 290.395, 45.2754, 0.3742", "270.454, 289.576, 45.4591, 0.4004", "269.713, 288.707, 45.5868, 0.3366", "269.072, 287.763, 45.6977, 0.3052", "268.497, 286.779, 45.8088, 0.284", "267.988, 285.76, 45.9172, 0.2924", "267.616, 284.68, 46.0096, 0.307", "267.329, 283.572, 46.0782, 0.3368", "267.042, 282.465, 46.123, 0.3806", "266.751, 281.359, 46.1468, 0.517", "266.451, 280.255, 46.1558, 0.5016", "266.14, 279.153, 46.1577, 0.4024", "265.836, 278.052, 46.1577, 0.3324", "265.557, 276.942, 46.158, 0.3366", "265.295, 275.828, 46.158, 0.3802", "265.033, 274.714, 46.1583, 0.5162", "264.762, 273.604, 46.1586, 0.5002", "264.445, 272.504, 46.1591, 0.3996", "264.053, 271.43, 46.16, 0.3276", "263.629, 270.367, 46.1608, 0.3266", "263.202, 269.306, 46.1622, 0.3664", "262.761, 268.251, 46.1639, 0.4672", "262.279, 267.213, 46.1667, 0.5228", "261.768, 266.19, 46.1703, 0.5772", "261.255, 265.167, 46.1754, 0.4568", "260.754, 264.139, 46.1824, 0.3922", "260.294, 263.091, 46.1924, 0.4186", "259.868, 262.03, 46.2064, 0.4432", "259.443, 260.968, 46.2258, 0.3786", "259.026, 259.903, 46.2526, 0.3366", "258.638, 258.827, 46.291, 0.3382", "258.284, 257.739, 46.3448, 0.413", "257.943, 256.647, 46.4195, 0.4328", "257.598, 255.556, 46.5192, 0.3594", "257.203, 254.487, 46.6612, 0.3", "256.68, 253.49, 46.8824, 0.2746", "256.082, 252.551, 47.1862, 0.2746", "255.497, 251.599, 47.5325, 0.2746", "254.968, 250.6, 47.8618, 0.2746", "254.514, 249.551, 48.1208, 0.2746", "254.088, 248.489, 48.2966, 0.2746", "253.669, 247.424, 48.4, 0.2748", "253.287, 246.347, 48.4495, 0.2748", "252.982, 245.245, 48.4672, 0.2752", "252.72, 244.132, 48.4719, 0.2758", "252.458, 243.018, 48.4744, 0.2768", "252.176, 241.909, 48.4781, 0.2786", "251.817, 240.825, 48.4831, 0.282", "251.367, 239.773, 48.4904, 0.2882", "250.885, 238.736, 48.5002, 0.3008", "250.409, 237.696, 48.5139, 0.318", "249.964, 236.642, 48.5332, 0.3808", "249.569, 235.568, 48.5607, 0.3474", "249.201, 234.486, 48.5988, 0.3262", "248.833, 233.402, 48.6492, 0.3178", "248.448, 232.326, 48.7197, 0.3802", "248.012, 231.273, 48.8326, 0.3464", "247.542, 230.244, 48.991, 0.3242", "247.07, 229.213, 49.1747, 0.3142", "246.651, 228.161, 49.348, 0.3734", "246.389, 227.05, 49.4553, 0.334", "246.228, 225.921, 49.4746, 0.3", "246.057, 224.793, 49.4228, 0.2746", "245.827, 223.676, 49.3228, 0.2748", "245.492, 222.585, 49.2016, 0.2748", "245.104, 221.51, 49.0809, 0.275", "244.665, 220.458, 48.9787, 0.2754", "244.064, 219.489, 48.9082, 0.2762", "243.353, 218.594, 48.874, 0.2776", "242.625, 217.711, 48.8746, 0.2802", "241.971, 216.783, 48.9205, 0.2852", "241.552, 215.738, 49.0442, 0.2942", "241.292, 214.646, 49.2444, 0.3118", "241.044, 213.553, 49.4883, 0.3394", "240.807, 212.45, 49.7199, 0.415", "240.605, 211.332, 49.8473, 0.4366", "240.431, 210.227, 49.8352, 0.3664", "240.25, 209.123, 49.7246, 0.3132", "239.997, 208.023, 49.6079, 0.2988", "239.624, 206.952, 49.593, 0.3206", "239.208, 205.907, 49.7101, 0.3558", "238.791, 204.864, 49.9377, 0.4448", "238.339, 203.831, 50.2281, 0.494", "237.799, 202.827, 50.5114, 0.4622", "237.207, 201.847, 50.7466, 0.5428", "236.608, 200.874, 50.93, 0.4724", "236.02, 199.893, 51.0882, 0.4936", "235.466, 198.904, 51.2669, 0.4828", "234.938, 197.912, 51.4864, 0.4774", "234.411, 196.921, 51.7353, 0.396", "233.8, 195.975, 51.9604, 0.3638", "233.028, 195.139, 52.0842, 0.413", "232.199, 194.366, 52.0926, 0.433", "231.344, 193.617, 52.0209, 0.3596", "230.422, 192.949, 51.9201, 0.3006", "229.437, 192.368, 51.8375, 0.2756", "228.423, 191.843, 51.7997, 0.2766", "227.371, 191.395, 51.819, 0.2784", "226.29, 191.018, 51.8935, 0.2818", "225.203, 190.664, 52.0125, 0.2878", "224.117, 190.327, 52.1895, 0.3002", "223.069, 190.053, 52.486, 0.317", "222.072, 189.786, 52.9122, 0.3788", "221.063, 189.417, 53.3607, 0.3436", "220.044, 188.96, 53.6623, 0.3182", "219.267, 188.244, 53.7328, 0.308", "218.884, 187.203, 53.6376, 0.3384", "218.522, 186.129, 53.4626, 0.3836", "217.997, 185.116, 53.2745, 0.5226", "217.39, 184.147, 53.1118, 0.512", "216.763, 183.19, 52.9928, 0.4224", "216.135, 182.235, 52.9113, 0.3658", "215.51, 181.279, 52.8268, 0.417", "214.895, 180.328, 52.7041, 0.44", "214.283, 179.379, 52.547, 0.373", "213.675, 178.418, 52.4006, 0.3248", "213.086, 177.444, 52.3328, 0.3228", "212.512, 176.465, 52.3704, 0.3536", "211.942, 175.487, 52.4961, 0.4724", "211.42, 174.478, 52.6627, 0.3932", "210.972, 173.428, 52.8178, 0.3254", "210.558, 172.362, 52.934, 0.2746", "210.147, 171.293, 53.0043, 0.2748", "209.585, 170.308, 53.0348, 0.275", "208.869, 169.418, 53.0384, 0.2752", "208.122, 168.551, 53.0258, 0.2758", "207.427, 167.644, 53.0048, 0.2768", "206.826, 166.673, 52.9743, 0.2788", "206.277, 165.669, 52.9304, 0.2824", "205.736, 164.661, 52.8696, 0.289", "205.139, 163.687, 52.7887, 0.3024", "204.418, 162.804, 52.6842, 0.321", "203.673, 161.981, 52.5006, 0.386", "202.999, 161.13, 52.2267, 0.3582", "202.395, 160.186, 51.9658, 0.34", "201.938, 159.169, 51.8434, 0.3742", "201.591, 158.14, 51.8966, 0.3352", "201.067, 157.171, 52.0159, 0.3024", "200.39, 156.251, 52.1116, 0.2792", "199.686, 155.354, 52.1214, 0.2832", "198.974, 154.522, 51.9492, 0.2906", "198.223, 153.731, 51.6144, 0.3038", "197.506, 152.865, 51.2392, 0.3308", "196.771, 152.033, 50.841, 0.3682", "195.992, 151.239, 50.449, 0.5002", "195.286, 150.374, 50.2037, 0.4398", "194.772, 149.383, 50.1231, 0.4372", "194.431, 148.304, 50.1203, 0.3588", "194.231, 147.18, 50.1127, 0.341", "194.037, 146.068, 50.024, 0.3762", "193.818, 144.969, 49.8327, 0.339", "193.598, 143.868, 49.5536, 0.3096", "193.378, 142.769, 49.2229, 0.2924", "193.008, 141.702, 48.9258, 0.3074", "192.534, 140.661, 48.7091, 0.3374", "192.052, 139.623, 48.5708, 0.3816", "191.57, 138.586, 48.4938, 0.5188", "190.998, 137.598, 48.4576, 0.5046", "190.334, 136.667, 48.4434, 0.409", "189.648, 135.752, 48.4336, 0.3398", "188.961, 134.836, 48.421, 0.374", "188.182, 134.004, 48.403, 0.335", "187.314, 133.26, 48.3787, 0.302", "186.572, 132.403, 48.3445, 0.2782", "185.96, 131.438, 48.2947, 0.2814", "185.505, 130.393, 48.2241, 0.287", "185.129, 129.313, 48.1303, 0.2988" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "306.346, 375.143, 28.4474, 0.4594", "305.103, 374.802, 26.9422, 0.2288", "303.983, 374.65, 27.0064, 0.2746", "302.85, 374.583, 27.0553, 0.2746", "301.732, 374.607, 27.2092, 0.2746", "300.597, 374.716, 27.3742, 0.2746", "299.468, 374.897, 27.5146, 0.2746", "298.382, 375.243, 27.6662, 0.2746", "297.387, 375.788, 27.8582, 0.2746", "296.439, 376.416, 28.0574, 0.2746", "295.48, 377.035, 28.2461, 0.2746", "294.409, 377.432, 28.4206, 0.2746", "293.29, 377.658, 28.5737, 0.2746", "292.181, 377.924, 28.7339, 0.2746", "291.132, 378.321, 28.9405, 0.2746", "290.277, 379.06, 29.1494, 0.2746", "289.78, 380.089, 29.3034, 0.2746", "289.151, 381.043, 29.4092, 0.2746", "288.309, 381.817, 29.4714, 0.2746", "287.395, 382.506, 29.4932, 0.2746", "286.422, 383.108, 29.484, 0.2746", "285.506, 383.793, 29.456, 0.2746", "284.656, 384.558, 29.4137, 0.2746", "283.833, 385.353, 29.3558, 0.2746", "283.037, 386.174, 29.2858, 0.2746", "282.283, 387.032, 29.2085, 0.2746", "281.672, 387.914, 29.0024, 0.2746", "281.206, 388.833, 28.698, 0.2748", "280.352, 389.578, 28.5006, 0.275", "279.316, 390.019, 28.4914, 0.2752", "278.306, 390.418, 28.7034, 0.276", "277.221, 390.671, 29.0525, 0.277", "276.143, 390.996, 29.479, 0.2792", "275.093, 391.412, 29.9163, 0.2832", "274.098, 391.907, 30.3447, 0.2906", "273.161, 392.474, 30.7471, 0.3044", "272.249, 393.16, 31.0226, 0.3304", "271.339, 393.843, 31.1584, 0.3748", "270.328, 394.344, 31.1256, 0.4766", "269.294, 394.775, 30.9621, 0.5712", "268.236, 395.18, 30.7429, 0.5174", "267.296, 395.692, 30.4542, 0.3848", "266.657, 396.618, 30.3089, 0.3", "265.985, 397.524, 30.2576, 0.2746", "265.376, 398.492, 30.2134, 0.2746", "264.691, 399.398, 30.1414, 0.2746", "263.861, 400.147, 29.9824, 0.2746", "263.147, 401.011, 29.7592, 0.2746", "262.323, 401.752, 29.4773, 0.2746", "261.34, 402.324, 29.2757, 0.2746", "260.392, 402.914, 29.2132, 0.2746", "259.451, 403.548, 29.1452, 0.2746", "258.536, 404.22, 29.1038, 0.2746", "257.616, 404.878, 29.1617, 0.2746", "256.74, 405.598, 29.2639, 0.2746", "255.845, 406.3, 29.3166, 0.2746", "255.133, 407.106, 29.311, 0.2746", "254.682, 408.143, 29.3264, 0.2746", "253.993, 409.039, 29.4174, 0.2746", "253.095, 409.629, 29.6498, 0.2746", "252.275, 410.094, 30.1137, 0.2746", "251.898, 410.973, 30.6807, 0.2746", "251.674, 411.997, 31.2564, 0.2746", "251.371, 413.027, 31.752, 0.2746", "251.098, 414.105, 31.9696, 0.2746", "250.753, 415.048, 31.794, 0.2746", "250.194, 415.883, 31.3152, 0.2746", "249.529, 416.735, 30.7051, 0.2746", "249.159, 417.771, 30.1216, 0.2746", "248.834, 418.834, 29.5798, 0.2746", "248.287, 419.808, 29.1206, 0.2746", "247.446, 420.549, 28.7994, 0.2748", "246.522, 421.215, 28.6241, 0.2748", "245.608, 421.884, 28.5561, 0.2752", "244.684, 422.54, 28.462, 0.2756", "243.729, 423.16, 28.31, 0.2766", "242.729, 423.672, 28.1691, 0.2784", "241.699, 424.133, 28.0123, 0.2818", "241.05, 424.729, 27.575, 0.2878", "240.604, 425.602, 26.9077, 0.3002", "240.317, 426.54, 26.0722, 0.3166", "239.516, 427.179, 25.2677, 0.3782", "238.493, 427.689, 24.5482, 0.3426", "238.158, 428.497, 23.7329, 0.316", "237.825, 429.356, 22.8614, 0.3056", "237.382, 430.361, 22.112, 0.3266", "237.049, 431.449, 21.5705, 0.3976", "236.639, 432.509, 21.1242, 0.3734", "236.331, 433.599, 20.7413, 0.3988", "236.102, 434.707, 20.4176, 0.3338", "235.776, 435.668, 19.997, 0.3", "235.188, 436.533, 19.7719, 0.2746", "234.92, 437.617, 19.6304, 0.2746", "234.751, 438.746, 19.4688, 0.2746", "233.986, 439.549, 19.2115, 0.2746", "233.131, 439.933, 18.752, 0.2746", "232.929, 440.851, 18.1798, 0.2746", "233.296, 441.677, 17.5537, 0.2746", "232.487, 442.1, 17.0575, 0.2746", "231.77, 442.745, 17.0124, 0.2744", "231.252, 443.17, 17.4687, 0.2744", "230.597, 443.493, 18.2624, 0.2742", "229.913, 444.235, 19.1022, 0.274", "229.15, 445.058, 19.6687, 0.2736", "228.452, 445.803, 19.8338, 0.2728", "227.723, 446.634, 19.764, 0.2712", "226.957, 447.458, 19.571, 0.2684", "226.494, 448.494, 19.3664, 0.2626", "226.39, 449.632, 19.2592, 0.2542", "225.748, 450.547, 19.3539, 0.2288", "224.838, 450.593, 20.461, 0.2288" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "422.965, 447.997, 42.8344, 0.316", "424.008, 448.067, 43.1796, 0.377", "425.137, 448.041, 43.4874, 0.3408", "426.252, 447.821, 43.724, 0.3124", "427.362, 447.543, 43.8553, 0.2988", "428.489, 447.407, 43.853, 0.3142", "429.617, 447.388, 43.7357, 0.3736", "430.751, 447.466, 43.5753, 0.334", "431.883, 447.629, 43.4347, 0.3004", "433.018, 447.766, 43.3401, 0.2752", "434.157, 447.735, 43.276, 0.2756", "435.266, 447.539, 43.2012, 0.2766", "436.394, 447.41, 43.206, 0.2784", "437.459, 447.389, 43.3852, 0.2818", "438.58, 447.388, 43.6094, 0.2876", "439.722, 447.388, 43.7928, 0.2998", "440.863, 447.31, 43.9194, 0.316", "441.965, 447.018, 43.9729, 0.377", "443.046, 446.654, 43.9424, 0.3408", "444.143, 446.354, 43.8312, 0.3124", "445.252, 446.103, 43.6814, 0.2988", "446.384, 446.004, 43.5879, 0.3142", "447.512, 445.976, 43.5705, 0.3734", "448.631, 445.761, 43.5448, 0.3338", "449.698, 445.381, 43.4512, 0.3", "450.743, 444.984, 43.2718, 0.2746", "451.779, 444.598, 43.0189, 0.2746", "452.753, 444.017, 42.7896, 0.2746", "453.676, 443.344, 42.6367, 0.2746", "454.508, 442.561, 42.5888, 0.2746", "455.295, 441.734, 42.6404, 0.2746", "456.194, 441.154, 42.8702, 0.2746", "457.216, 440.739, 43.1861, 0.2746", "458.265, 440.338, 43.3678, 0.2746", "459.307, 439.952, 43.4104, 0.2746", "460.338, 439.461, 43.4274, 0.2746", "461.403, 439.082, 43.5084, 0.2746", "462.47, 438.805, 43.6814, 0.2746", "463.597, 438.656, 43.8752, 0.2746", "464.737, 438.575, 44.0518, 0.2746", "465.862, 438.364, 44.1932, 0.2746", "466.954, 438.027, 44.2859, 0.2746", "468.082, 437.834, 44.3318, 0.2746", "469.225, 437.796, 44.3475, 0.2746", "470.369, 437.777, 44.3551, 0.2746", "471.505, 437.904, 44.3643, 0.2746", "472.636, 438.087, 44.3786, 0.2746", "473.777, 438.153, 44.3979, 0.2746", "474.909, 437.992, 44.4209, 0.2746", "476.038, 437.803, 44.4436, 0.2746", "477.172, 437.772, 44.5144, 0.2744", "478.303, 437.771, 44.6233, 0.2744", "479.446, 437.726, 44.6886, 0.2742", "480.574, 437.642, 44.6558, 0.274", "481.699, 437.487, 44.5592, 0.2736", "482.784, 437.127, 44.4688, 0.2728", "483.859, 436.756, 44.3741, 0.2712", "484.904, 436.42, 44.2212, 0.2684", "486.047, 436.397, 44.1557, 0.2626", "487.16, 436.139, 44.1916, 0.2542", "488.197, 436.224, 44.4508, 0.2288", "489.058, 436.855, 45.4686, 0.2288" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "422.965, 447.997, 42.8344, 0.316", "423.389, 446.908, 44.6981, 0.2288", "423.756, 445.964, 46.9666, 0.4056", "424.287, 445.12, 47.9298, 0.5954", "424.988, 444.42, 49.0823, 0.492", "425.673, 443.774, 50.3866, 0.4496", "426.201, 443.43, 51.8745, 0.3338", "426.814, 443.66, 53.4391, 0.3", "427.849, 443.748, 54.8307, 0.2746", "428.931, 444.004, 55.9913, 0.2746", "429.877, 444.635, 56.903, 0.2746", "430.774, 445.299, 57.6635, 0.2746", "431.664, 445.92, 58.3414, 0.2744", "432.542, 446.496, 58.998, 0.2744", "433.481, 447.029, 59.6179, 0.2742", "434.444, 447.553, 60.177, 0.274", "435.446, 448.105, 60.557, 0.2736", "436.439, 448.662, 60.7298, 0.2728", "437.549, 448.76, 60.6936, 0.2712", "438.69, 448.76, 60.5752, 0.2684", "439.834, 448.76, 60.4512, 0.2626", "440.978, 448.76, 60.347, 0.2542", "442.122, 448.76, 60.2812, 0.2288", "443.266, 448.76, 60.2459, 0.2288" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "353.514, 484.428, 29.1172, 0.4966", "354.04, 484.524, 26.1943, 0.2288", "354.587, 484.622, 23.1683, 0.277", "355.135, 484.722, 21.8603, 0.2792", "355.682, 484.822, 20.3549, 0.283", "356.333, 485.053, 18.801, 0.2902", "357.151, 485.674, 17.4969, 0.3032", "358.002, 486.437, 16.5411, 0.33", "358.92, 487.102, 15.9308, 0.3664", "359.879, 487.714, 15.5088, 0.497", "360.712, 488.417, 15.0791, 0.4338", "361.43, 489.224, 14.5729, 0.4264", "362.2, 490.016, 13.9999, 0.3378", "362.99, 490.779, 13.3585, 0.3074", "363.272, 491.81, 12.7009, 0.288", "363.234, 492.938, 12.0802, 0.3004", "363.366, 494.055, 11.4872, 0.3172", "363.898, 495.044, 10.9172, 0.3792", "364.307, 496.067, 10.2971, 0.3448", "363.954, 497.122, 9.6842, 0.32", "363.701, 498.201, 9.0017, 0.3126", "363.616, 499.27, 8.2209, 0.3408", "363.534, 500.088, 7.2422, 0.4176", "363.154, 501.019, 6.3946, 0.4412", "363.116, 501.558, 5.3325, 0.3748", "362.346, 501.746, 4.3404, 0.33", "361.266, 501.968, 3.5668, 0.3248", "360.227, 502.431, 3.0245, 0.3942", "359.105, 502.338, 2.6706, 0.3672", "358.047, 502.022, 2.3989, 0.387", "357.946, 500.982, 2.1783, 0.3136", "357.318, 500.08, 2.0201, 0.2542", "356.634, 499.163, 1.792, 0.2288" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "353.514, 484.428, 29.1172, 0.4966", "353.546, 484.913, 29.4025, 0.609", "353.649, 486.0, 29.8166, 0.5834", "353.902, 487.058, 30.326, 0.5272", "354.353, 488.064, 30.8826, 0.4658", "354.873, 489.063, 31.4188, 0.3734", "355.308, 490.114, 31.8802, 0.3262", "355.361, 491.212, 32.2902, 0.3236", "355.048, 492.284, 32.7118, 0.3624", "354.888, 493.38, 33.1419, 0.4526", "354.934, 494.504, 33.5586, 0.5316", "355.094, 495.605, 33.9786, 0.4186", "355.273, 496.678, 34.4224, 0.3254", "355.305, 497.774, 34.795, 0.2746", "355.157, 498.858, 34.9398, 0.2746", "354.986, 499.946, 34.9308, 0.2746", "354.604, 500.988, 34.9294, 0.2746", "354.195, 501.975, 35.0599, 0.2746", "353.99, 503.052, 35.2204, 0.2746", "353.966, 504.181, 35.3242, 0.2746", "354.185, 505.291, 35.4346, 0.2748", "354.258, 506.368, 35.6504, 0.2748", "354.059, 507.461, 35.8896, 0.2752", "354.348, 508.503, 36.09, 0.2756", "354.479, 509.612, 36.2628, 0.2766", "354.37, 510.74, 36.4633, 0.2782", "354.336, 511.877, 36.6537, 0.2814", "354.463, 513.007, 36.8312, 0.287", "354.766, 514.104, 37.0076, 0.2988", "355.082, 515.201, 37.1476, 0.3142", "355.288, 516.321, 37.242, 0.3736", "355.412, 517.455, 37.3512, 0.334", "355.403, 518.564, 37.5547, 0.3002", "355.348, 519.672, 37.833, 0.2752", "355.22, 520.797, 38.117, 0.2756", "355.02, 521.922, 38.3589, 0.2766", "354.753, 523.03, 38.5294, 0.2782", "354.41, 524.102, 38.6058, 0.2814", "353.97, 525.152, 38.6705, 0.287", "353.444, 526.154, 38.8332, 0.2988", "352.938, 527.146, 39.1381, 0.3144", "352.427, 528.113, 39.5886, 0.3738", "351.733, 528.949, 40.147, 0.3348", "350.891, 529.662, 40.7504, 0.3016", "350.025, 530.376, 41.3322, 0.2776", "349.184, 531.131, 41.8648, 0.28", "348.39, 531.938, 42.3408, 0.2848", "347.762, 532.885, 42.7017, 0.2934", "347.609, 534.004, 43.0178, 0.3102", "347.832, 535.049, 43.4496, 0.3364", "348.037, 536.116, 43.958, 0.4096", "348.393, 537.194, 44.436, 0.4266", "348.753, 538.226, 44.9473, 0.3474", "348.549, 539.085, 45.5974, 0.2796", "348.302, 540.19, 46.0373, 0.2288", "348.355, 541.301, 46.2602, 0.2288" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "373.708, 457.143, 4.1202, 0.5322", "374.11, 457.734, 3.9486, 0.4198", "374.817, 458.63, 3.8385, 0.3278", "375.328, 459.646, 3.8167, 0.2788", "375.899, 460.637, 3.8205, 0.2826", "376.464, 461.628, 3.8369, 0.289", "376.818, 462.712, 3.8664, 0.3026", "376.95, 463.849, 3.8865, 0.3212", "377.12, 464.98, 3.8983, 0.3866", "377.355, 466.099, 3.9039, 0.3592", "377.38, 467.223, 3.9123, 0.3418", "377.026, 468.289, 3.9269, 0.3776", "377.209, 469.411, 3.9461, 0.3416", "377.685, 470.446, 3.9594, 0.3142", "378.203, 471.456, 3.9758, 0.302", "378.575, 472.535, 4.0566, 0.3202", "378.992, 473.574, 4.2637, 0.3848", "379.503, 474.526, 4.6257, 0.3548", "379.536, 475.585, 5.0908, 0.3386", "379.245, 476.647, 5.5192, 0.3478", "379.485, 477.669, 5.9058, 0.402", "380.047, 478.586, 6.4248, 0.5514", "380.615, 479.53, 6.9978, 0.591", "381.117, 480.51, 7.6092, 0.444", "381.725, 480.928, 8.3143, 0.3254", "382.713, 480.372, 9.0372, 0.2746", "383.523, 479.748, 9.8689, 0.2746", "384.206, 479.492, 10.9372, 0.2746", "385.096, 479.624, 12.1064, 0.2746", "385.907, 480.176, 13.2773, 0.2746", "386.645, 480.878, 14.4105, 0.2746", "387.634, 481.209, 15.4465, 0.2746", "388.751, 481.245, 16.3126, 0.2744", "389.875, 481.075, 16.9663, 0.2744", "390.969, 481.248, 17.4189, 0.2742", "391.941, 481.784, 17.9019, 0.274", "392.755, 482.034, 18.6253, 0.2736", "393.653, 481.967, 19.5191, 0.2728", "394.733, 482.199, 20.3945, 0.2712", "395.769, 482.577, 21.2326, 0.2684", "396.868, 482.8, 21.9734, 0.2626", "397.984, 482.897, 22.5906, 0.2542", "399.09, 482.738, 23.0897, 0.2288", "400.221, 482.647, 23.8711, 0.2288" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "373.708, 457.143, 4.1202, 0.5322", "374.52, 456.883, 2.4654, 0.2288", "375.543, 457.153, 2.2328, 0.2746", "376.378, 457.912, 2.1497, 0.2746", "377.282, 458.608, 2.0904, 0.2746", "377.761, 459.624, 2.0547, 0.2746", "377.892, 460.756, 2.0423, 0.2746", "378.025, 461.893, 2.0522, 0.2746", "378.165, 463.028, 2.0838, 0.2746", "378.276, 464.165, 2.1417, 0.2748", "378.328, 465.307, 2.2247, 0.275", "378.322, 466.451, 2.3119, 0.2752", "378.174, 467.585, 2.3971, 0.2758", "377.511, 468.494, 2.52, 0.277", "376.485, 468.959, 2.6907, 0.2792", "375.44, 469.423, 2.8354, 0.2828", "374.723, 470.313, 2.9413, 0.291", "374.398, 471.409, 3.0145, 0.2994", "373.974, 472.472, 3.0588, 0.3474", "373.974, 473.616, 3.0773, 0.2796", "373.974, 474.76, 3.08, 0.2288" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "185.129, 129.313, 48.1303, 0.2988", "184.585, 128.431, 48.4655, 0.2288", "183.986, 127.456, 48.6195, 0.2746", "183.387, 126.483, 48.6788, 0.2746", "182.787, 125.508, 48.7547, 0.2746", "182.499, 124.411, 48.8939, 0.2748", "182.277, 123.301, 49.0798, 0.2748" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "185.129, 129.313, 48.1303, 0.2988", "184.206, 128.707, 48.027, 0.3142", "183.246, 128.138, 47.8097, 0.3734", "182.232, 127.706, 47.4894, 0.3338", "181.302, 127.082, 47.1271, 0.3", "180.326, 126.49, 46.8219, 0.2746", "179.187, 126.384, 46.5724, 0.2746", "178.045, 126.331, 46.3666, 0.2746", "176.931, 126.078, 46.1776, 0.2746", "175.866, 125.688, 45.9544, 0.2746", "174.82, 125.226, 45.7145, 0.2746", "173.808, 124.697, 45.4717, 0.2746", "172.744, 124.325, 45.1388, 0.2746", "171.786, 123.781, 44.7037, 0.2746", "171.162, 122.851, 44.212, 0.2746", "170.538, 121.909, 43.7276, 0.2746", "169.696, 121.243, 43.1472, 0.2746", "168.964, 120.551, 42.4656, 0.2746", "168.304, 119.666, 41.8239, 0.2746", "167.577, 118.822, 41.2532, 0.2746", "166.759, 118.045, 40.78, 0.2746", "165.867, 117.336, 40.4345, 0.2746", "164.918, 116.703, 40.2483, 0.2746", "163.98, 116.083, 40.2279, 0.2746", "163.23, 115.26, 40.2892, 0.2746", "162.59, 114.37, 40.2898, 0.2746", "161.543, 114.043, 40.241, 0.2746", "160.407, 114.026, 40.2181, 0.2746", "159.272, 114.022, 40.2072, 0.2746", "158.136, 114.022, 40.1324, 0.2746", "157.013, 113.988, 39.9837, 0.2746", "155.909, 113.866, 39.7933, 0.2746", "154.827, 113.804, 39.5741, 0.2746", "153.73, 113.916, 39.391, 0.2746", "152.602, 113.931, 39.3655, 0.2746", "151.669, 113.734, 39.6724, 0.2746", "151.039, 113.59, 40.3925, 0.2746", "150.215, 113.564, 41.3146, 0.2746", "149.159, 113.487, 42.2058, 0.2746", "148.071, 113.212, 42.9117, 0.2746", "146.998, 112.818, 43.3672, 0.2746", "145.966, 112.357, 43.535, 0.2746", "144.947, 111.892, 43.4518, 0.2748", "143.89, 111.535, 43.2247, 0.2748", "142.804, 111.238, 42.957, 0.2752", "141.711, 110.919, 42.7504, 0.2758", "140.618, 110.58, 42.6488, 0.2768", "139.536, 110.211, 42.6507, 0.2786", "138.514, 109.705, 42.7493, 0.282", "137.599, 109.193, 43.043, 0.288", "136.761, 108.81, 43.5641, 0.3008", "136.006, 108.203, 43.9407, 0.3178", "135.096, 107.576, 44.1823, 0.3802", "134.03, 107.239, 44.4262, 0.3464", "132.901, 107.12, 44.6508, 0.3242", "131.761, 107.038, 44.8227, 0.3142", "130.624, 106.932, 44.989, 0.3736", "129.497, 106.798, 45.2138, 0.334", "128.369, 106.65, 45.4675, 0.3004", "127.247, 106.471, 45.7374, 0.2752", "126.121, 106.427, 46.0432, 0.2756", "125.028, 106.7, 46.2958, 0.2766", "123.904, 106.887, 46.5102, 0.2784", "122.813, 106.726, 46.8222, 0.2816", "121.732, 107.02, 47.1685, 0.2874", "120.686, 106.733, 47.6297, 0.2994", "119.745, 106.198, 48.2107, 0.3152", "118.753, 105.782, 48.881, 0.3754", "117.664, 105.761, 49.5846, 0.3376", "116.579, 105.729, 50.2785, 0.307", "115.561, 105.332, 50.9412, 0.2872", "114.522, 104.94, 51.5242, 0.299", "113.417, 104.647, 51.9422, 0.3146", "112.308, 104.368, 52.2312, 0.3744", "111.178, 104.185, 52.4336, 0.3358", "110.046, 104.021, 52.5885, 0.3036", "108.912, 103.874, 52.7383, 0.2814", "107.777, 103.747, 52.9192, 0.287", "106.645, 103.625, 53.1516, 0.2988", "105.551, 103.551, 53.5122, 0.3142", "104.455, 103.484, 53.965, 0.3734", "103.314, 103.472, 54.3945, 0.3338", "102.17, 103.472, 54.7803, 0.3", "101.034, 103.472, 55.1502, 0.2746", "99.9704, 103.472, 55.6212, 0.2746", "98.9052, 103.493, 56.149, 0.2746", "97.7874, 103.732, 56.5975, 0.2746", "96.6714, 103.98, 56.9862, 0.2746", "95.5322, 104.08, 57.3362, 0.2746", "94.3889, 104.08, 57.6705, 0.2746", "93.2584, 104.052, 58.06, 0.2746", "92.1858, 103.982, 58.6113, 0.2746", "91.0989, 103.952, 59.3012, 0.2746", "89.9853, 104.02, 60.0676, 0.2746", "88.8865, 104.115, 60.9017, 0.2746", "87.9325, 104.469, 61.8699, 0.2746", "86.9784, 104.824, 62.9233, 0.2746", "86.0245, 105.178, 64.024, 0.2744", "85.0705, 105.533, 65.1507, 0.2744", "84.1165, 105.887, 66.2805, 0.2742", "83.1379, 106.193, 67.3831, 0.274", "82.054, 105.974, 68.3634, 0.2736", "80.9763, 105.696, 69.244, 0.2728", "79.9693, 105.183, 70.0445, 0.2712", "78.9489, 104.712, 70.791, 0.2684", "77.8934, 104.428, 71.535, 0.2626", "76.9071, 104.104, 72.3198, 0.2542", "76.0662, 103.937, 73.2192, 0.2288", "75.0856, 103.472, 75.0232, 0.2288" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "182.277, 123.301, 49.0798, 0.2748", "181.781, 122.81, 50.0553, 0.2288", "180.77, 122.402, 50.6198, 0.2746", "179.656, 122.144, 50.8278, 0.2746", "178.567, 121.811, 51.0185, 0.2746", "177.559, 121.291, 51.2081, 0.2746", "176.622, 120.722, 51.5158, 0.2746", "175.651, 120.353, 51.9767, 0.2746", "174.553, 120.189, 52.4653, 0.2746", "173.432, 120.04, 52.9164, 0.2746", "172.458, 119.499, 53.328, 0.2746", "171.656, 118.736, 53.7606, 0.2746", "170.899, 117.962, 54.2172, 0.2746", "170.223, 117.056, 54.6314, 0.2746", "169.448, 116.238, 54.9744, 0.2746", "168.511, 115.602, 55.2594, 0.2746", "167.601, 114.947, 55.5607, 0.2746", "166.728, 114.235, 55.8281, 0.2746", "165.695, 113.829, 56.0375, 0.2746", "164.608, 113.658, 56.3273, 0.2746", "163.56, 113.641, 56.761, 0.2746", "162.498, 113.694, 57.2802, 0.2746", "161.471, 113.469, 57.8435, 0.2746", "160.444, 113.09, 58.3705, 0.2746", "159.346, 112.99, 58.7219, 0.2746", "158.216, 113.093, 58.858, 0.2746", "157.087, 113.197, 58.8266, 0.2746", "156.028, 113.439, 58.6328, 0.2746", "154.974, 113.786, 58.4228, 0.2746", "153.859, 113.991, 58.2932, 0.2746", "152.733, 114.184, 58.2408, 0.2746", "151.65, 114.54, 58.263, 0.2746", "150.582, 114.954, 58.3534, 0.2746", "149.501, 115.324, 58.5099, 0.2746", "148.401, 115.637, 58.7294, 0.2746", "147.275, 115.8, 59.0374, 0.2746", "146.139, 115.833, 59.4642, 0.2746", "145.015, 115.833, 60.0435, 0.2746", "143.949, 115.833, 60.8356, 0.2746", "142.908, 115.777, 61.8327, 0.2746", "141.902, 115.561, 62.9958, 0.2746", "141.075, 115.403, 64.3591, 0.2744", "140.373, 115.376, 65.8963, 0.2744", "140.046, 115.479, 67.5657, 0.2742", "140.321, 115.703, 69.2684, 0.274", "139.629, 115.984, 70.7372, 0.2736", "138.501, 116.175, 71.794, 0.2728", "137.369, 116.344, 72.5001, 0.2712", "136.304, 116.721, 72.9912, 0.2684", "135.732, 117.674, 73.3631, 0.2626", "135.172, 118.671, 73.5854, 0.2542", "134.404, 119.518, 73.7251, 0.2288", "133.689, 120.412, 73.8867, 0.2288" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "182.277, 123.301, 49.0798, 0.2748", "182.139, 123.025, 49.2674, 0.275", "181.663, 122.072, 49.5429, 0.2756", "181.814, 120.946, 49.7227, 0.2764", "182.16, 119.864, 49.7552, 0.2778", "182.794, 119.056, 49.5373, 0.2806", "183.381, 118.099, 49.2461, 0.2858", "183.84, 117.052, 48.9863, 0.2952", "184.237, 115.979, 48.7861, 0.3138", "184.632, 114.906, 48.6721, 0.343", "185.029, 113.832, 48.6419, 0.422", "185.472, 112.777, 48.6777, 0.449", "186.05, 111.79, 48.7365, 0.3908", "186.587, 110.802, 48.8684, 0.3528", "187.063, 109.85, 49.1142, 0.399" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "187.063, 109.85, 49.1142, 0.399", "187.818, 109.269, 49.3184, 0.376", "188.712, 108.565, 49.3875, 0.4036", "189.501, 107.918, 49.2075, 0.3426", "190.354, 107.162, 48.9916, 0.316", "191.092, 106.288, 48.7945, 0.3054", "191.818, 105.405, 48.6293, 0.3266", "192.544, 104.521, 48.5134, 0.3964", "193.272, 103.639, 48.4408, 0.3774", "193.851, 102.653, 48.3683, 0.3764", "194.428, 101.666, 48.2597, 0.4374", "195.006, 100.679, 48.1104, 0.473" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "187.063, 109.85, 49.1142, 0.399", "186.235, 109.957, 50.1547, 0.2288", "185.46, 109.391, 52.0484, 0.2746", "184.719, 108.79, 52.8702, 0.2746", "183.978, 108.189, 53.8266, 0.2746", "183.275, 107.462, 54.8136, 0.2748", "182.804, 106.449, 55.6326, 0.275", "182.537, 105.368, 56.1786, 0.2754", "182.437, 104.356, 56.7442, 0.276", "182.701, 103.255, 57.2188, 0.2774", "182.866, 102.145, 57.6761, 0.2796", "182.68, 101.038, 58.1417, 0.2842", "182.5, 99.9838, 58.69, 0.292", "182.762, 99.0109, 59.2942, 0.308", "182.769, 98.1639, 59.614, 0.3314", "182.874, 97.1495, 60.0463, 0.4052", "183.212, 96.1287, 60.4898, 0.3946", "183.263, 95.2807, 60.6774, 0.4032", "182.963, 94.292, 60.9202, 0.5118", "182.76, 93.1777, 61.1562, 0.492", "182.8, 92.1715, 61.5507, 0.3848", "182.663, 91.103, 61.9864, 0.3", "182.573, 90.0382, 62.2255, 0.2746", "182.358, 89.1782, 62.2247, 0.2746", "181.686, 88.2865, 62.2479, 0.2746", "181.353, 87.3689, 62.501, 0.2746", "181.686, 86.7523, 63.1677, 0.2746", "182.036, 86.0582, 64.1217, 0.2746", "182.023, 85.0772, 65.2056, 0.2746", "181.795, 84.124, 66.3286, 0.2746", "181.867, 83.2265, 67.3053, 0.2746", "182.497, 82.2828, 67.9876, 0.2746", "183.252, 81.4471, 68.4194, 0.2746", "184.223, 80.8576, 68.6596, 0.2746", "184.964, 80.0266, 68.7764, 0.2746", "185.462, 79.0005, 68.8181, 0.2746", "186.152, 78.1042, 68.8288, 0.2746", "187.131, 77.5401, 68.8344, 0.2746", "187.981, 76.7919, 68.8374, 0.2746", "188.427, 75.7536, 68.8422, 0.2746", "189.036, 74.7905, 68.8486, 0.2746", "190.005, 74.2027, 68.8576, 0.2746", "190.924, 73.5237, 68.8702, 0.2746", "191.648, 72.6403, 68.8878, 0.2744", "192.216, 71.6484, 68.9128, 0.2744", "192.748, 70.6355, 68.9464, 0.2742", "193.465, 69.7461, 68.9945, 0.274", "194.216, 68.8829, 69.0645, 0.2736", "194.809, 67.9062, 69.16, 0.2728", "195.255, 66.8528, 69.2877, 0.2712", "195.65, 65.7793, 69.44, 0.2684", "196.131, 64.8309, 69.7533, 0.2626", "196.913, 64.1537, 70.1994, 0.2542", "197.353, 63.0997, 70.5592, 0.2288", "197.717, 62.0156, 71.0828, 0.2288" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "195.006, 100.679, 48.1104, 0.473", "195.459, 100.073, 47.5798, 0.2288", "195.531, 99.0234, 47.1982, 0.3774", "195.567, 97.8824, 47.0582, 0.3414", "195.803, 96.7761, 46.9734, 0.3136", "196.284, 95.7458, 46.9521, 0.301", "196.797, 94.7341, 46.9972, 0.3184", "197.242, 93.691, 47.089, 0.3814", "197.663, 92.632, 47.173, 0.3484", "198.141, 91.6004, 47.1744, 0.328", "198.738, 90.6514, 47.07, 0.3214", "199.438, 89.7834, 46.8807, 0.3866", "200.186, 88.9403, 46.6645, 0.3594", "200.872, 88.0432, 46.5259, 0.342", "201.457, 87.0838, 46.5181, 0.378", "202.009, 86.1287, 46.6393, 0.3422", "202.654, 85.2328, 46.8359, 0.3154", "203.213, 84.3645, 46.8479, 0.304", "203.827, 83.4518, 46.7359, 0.324", "204.575, 82.6014, 46.5688, 0.3916", "205.45, 81.8745, 46.3865, 0.3688", "206.363, 81.1948, 46.27, 0.3594", "207.206, 80.4392, 46.2482, 0.41", "207.876, 79.522, 46.2826, 0.4022", "208.501, 78.5634, 46.3196, 0.4244", "209.159, 77.6294, 46.3263, 0.5162", "209.738, 76.6592, 46.258, 0.67", "210.401, 75.744, 46.1205, 0.5768", "211.188, 74.9783, 46.069, 0.4102", "211.608, 74.0278, 46.1362, 0.3", "212.122, 73.0206, 46.1566, 0.2746", "213.127, 72.5702, 45.9805, 0.2746", "214.093, 72.8258, 45.5322, 0.2746", "214.785, 72.5349, 44.7874, 0.2746", "215.152, 71.5152, 43.9844, 0.2746", "215.54, 70.4566, 43.2426, 0.2746", "215.901, 69.4121, 42.5799, 0.2746", "216.058, 68.3718, 41.9793, 0.2746", "216.135, 67.2752, 41.5974, 0.2746", "216.87, 66.424, 41.4302, 0.2746", "217.709, 65.7008, 41.3921, 0.2746", "218.118, 64.6772, 41.3431, 0.2746", "218.307, 63.5644, 41.3199, 0.2746", "218.691, 62.4867, 41.3479, 0.2746", "219.101, 61.4192, 41.3983, 0.2746", "219.369, 60.3995, 41.5526, 0.2746", "219.021, 59.4583, 41.8603, 0.2746", "218.793, 58.3876, 42.1112, 0.2746", "218.771, 57.2487, 42.2789, 0.2746", "218.796, 56.1055, 42.3982, 0.2746", "219.01, 54.9882, 42.4855, 0.2746", "219.48, 53.9526, 42.5502, 0.2746", "219.67, 52.8461, 42.6182, 0.2746", "219.688, 51.7025, 42.7255, 0.2746", "219.778, 50.5643, 42.891, 0.2746", "220.113, 49.4882, 43.1427, 0.2746", "220.427, 48.3993, 43.4624, 0.2746", "220.967, 47.444, 43.8771, 0.2746", "221.661, 46.6082, 44.3794, 0.2744", "221.953, 45.6234, 44.9655, 0.2744", "222.04, 44.4992, 45.4714, 0.2742", "222.15, 43.3618, 45.8329, 0.274", "222.276, 42.2322, 46.135, 0.2736", "222.476, 41.1074, 46.3333, 0.2728", "222.912, 40.072, 46.3826, 0.2712", "223.135, 38.9543, 46.4268, 0.2684", "223.325, 37.9888, 46.6721, 0.2626", "223.574, 37.0879, 47.0882, 0.2542", "223.802, 36.0408, 47.2399, 0.2288", "223.805, 35.0125, 46.8244, 0.2288" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "195.006, 100.679, 48.1104, 0.473", "195.361, 100.384, 47.9035, 0.4594", "196.22, 99.6665, 47.6034, 0.3614", "197.08, 98.9496, 47.2382, 0.304", "197.968, 98.2651, 46.8451, 0.282", "198.963, 97.7086, 46.4797, 0.2882", "199.993, 97.2108, 46.153, 0.3008", "201.025, 96.719, 45.8497, 0.3178", "202.062, 96.2391, 45.5459, 0.3804", "203.122, 95.8087, 45.2094, 0.3466", "204.186, 95.4745, 44.7902, 0.3248", "205.211, 95.3834, 44.1798, 0.3152", "206.128, 95.3264, 43.384, 0.3754", "206.885, 95.0582, 42.4427, 0.3376", "207.66, 94.437, 41.5456, 0.3068", "208.36, 93.5643, 40.8951, 0.287", "209.043, 92.6933, 40.5964, 0.2988", "209.899, 91.9563, 40.5583, 0.3142", "210.765, 91.2292, 40.7044, 0.3734", "211.631, 90.4985, 40.9534, 0.334", "212.489, 89.7489, 41.2051, 0.3", "213.335, 88.9793, 41.3888, 0.2746", "214.182, 88.2097, 41.5061, 0.2748", "215.03, 87.4423, 41.5814, 0.2748", "215.888, 86.6859, 41.6324, 0.2752", "216.758, 85.9435, 41.6777, 0.2756", "217.629, 85.2009, 41.734, 0.2766", "218.522, 84.4899, 41.8088, 0.2784", "219.514, 83.9313, 41.9045, 0.2816", "220.549, 83.4784, 42.047, 0.2874", "221.509, 82.936, 42.308, 0.2994", "221.905, 82.0237, 42.6208, 0.3152", "222.299, 80.9803, 42.8602, 0.3754", "223.121, 80.2323, 43.1186, 0.3376", "223.93, 79.6551, 43.5677, 0.3068", "224.939, 79.2858, 44.0905, 0.287", "226.044, 79.0224, 44.5043, 0.2988", "226.864, 78.2653, 44.9282, 0.3142", "227.328, 77.242, 45.3681, 0.3736", "228.054, 76.3702, 45.7764, 0.334", "228.946, 75.7338, 46.2193, 0.3002", "229.846, 75.0299, 46.6116, 0.2752", "230.739, 74.3156, 46.97, 0.2756", "231.603, 73.5729, 47.341, 0.2766", "232.445, 72.8167, 47.7526, 0.2782", "233.465, 72.4007, 48.2485, 0.2814", "234.512, 72.0751, 48.8141, 0.287", "235.513, 71.8195, 49.4911, 0.2988", "236.525, 71.5422, 50.2183, 0.3142", "237.562, 71.0655, 50.8018, 0.3734", "238.6, 70.5833, 51.2646, 0.3338", "239.712, 70.3268, 51.6589, 0.3", "240.817, 70.0456, 52.0187, 0.2746", "241.824, 69.5313, 52.355, 0.2746", "242.663, 69.2337, 52.8864, 0.2746", "243.672, 69.3438, 53.5139, 0.2746", "244.8, 69.4479, 54.0613, 0.2746", "245.697, 68.9196, 54.6221, 0.2746", "246.445, 68.1483, 55.2308, 0.2746", "247.444, 67.7208, 55.6713, 0.2744", "248.536, 67.4477, 56.0669, 0.2744", "249.525, 67.4626, 56.6054, 0.2742", "250.6, 67.3535, 57.1838, 0.274", "251.69, 67.0195, 57.6618, 0.2736", "252.79, 66.7286, 58.0779, 0.2728", "253.879, 66.4555, 58.4903, 0.2712", "254.991, 66.2111, 58.833, 0.2684", "256.107, 65.9852, 59.0358, 0.2626", "257.201, 66.1948, 59.2693, 0.2542", "258.324, 66.3616, 59.4896, 0.2288", "259.464, 66.4651, 59.7996, 0.2288" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_250",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_251",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_26", "dend_19", "dend_18", "dend_7", "dend_0", "apic_14", "apic_1", "dend_28", "dend_27", "dend_23", "dend_20", "dend_13", "dend_8", "dend_6", "dend_1", "apic_3", "apic_2", "dend_25", "dend_24", "dend_22", "dend_21", "dend_15", "dend_14", "dend_12", "dend_9", "dend_5", "dend_2", "apic_5", "apic_4", "dend_17", "dend_16", "dend_11", "dend_10", "dend_4", "dend_3", "apic_7", "apic_6", "apic_13", "apic_8", "apic_10", "apic_9", "apic_12", "apic_11" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_14", "apic_1", "apic_3", "apic_2", "apic_5", "apic_4", "apic_7", "apic_6", "apic_13", "apic_8", "apic_10", "apic_9", "apic_12", "apic_11" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_19", "dend_18", "dend_7", "dend_0", "dend_28", "dend_27", "dend_23", "dend_20", "dend_13", "dend_8", "dend_6", "dend_1", "dend_25", "dend_24", "dend_22", "dend_21", "dend_15", "dend_14", "dend_12", "dend_9", "dend_5", "dend_2", "dend_17", "dend_16", "dend_11", "dend_10", "dend_4", "dend_3" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10465",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "6.421253"
  }, {
    "group" : "apic",
    "value" : "6.421253"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "10.010537"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "2.407365E-6",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.18453504",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "4.5607165E-5",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.08301892",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.28087816",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.001540298",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.0694375E-4",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0049901297",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "3.370156E-4",
    "erev" : "-86.107635"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "8.4608793E-4",
    "erev" : "-86.107635"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "5.516749E-4",
    "erev" : "-86.107635"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "9.7054E-5",
    "erev" : "-86.107635"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "8.83661E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0012550304",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_485591806",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_485591806

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_14, id: apic_14, parent: apic_0
create apic_14
public apic_14
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: dend_7
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: apic_3, id: apic_3, parent: apic_1
create apic_3
public apic_3
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_5, id: apic_5, parent: apic_3
create apic_5
public apic_5
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: apic_13, id: apic_13, parent: apic_7
create apic_13
public apic_13
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: apic_10, id: apic_10, parent: apic_8
create apic_10
public apic_10
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_12, id: apic_12, parent: apic_10
create apic_12
public apic_12
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_250, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_250
// Group: {name=ModelViewParmSubset_251, groups=[], sections=[apic_0, dend_26, dend_19, dend_18, dend_7, dend_0, apic_14, apic_1, dend_28, dend_27, dend_23, dend_20, dend_13, dend_8, dend_6, dend_1, apic_3, apic_2, dend_25, dend_24, dend_22, dend_21, dend_15, dend_14, dend_12, dend_9, dend_5, dend_2, apic_5, apic_4, dend_17, dend_16, dend_11, dend_10, dend_4, dend_3, apic_7, apic_6, apic_13, apic_8, apic_10, apic_9, apic_12, apic_11]}
objref ModelViewParmSubset_251
// Group: {name=apic, groups=[], sections=[apic_0, apic_14, apic_1, apic_3, apic_2, apic_5, apic_4, apic_7, apic_6, apic_13, apic_8, apic_10, apic_9, apic_12, apic_11]}
objref apic
// Group: {name=dend, groups=[], sections=[dend_26, dend_19, dend_18, dend_7, dend_0, dend_28, dend_27, dend_23, dend_20, dend_13, dend_8, dend_6, dend_1, dend_25, dend_24, dend_22, dend_21, dend_15, dend_14, dend_12, dend_9, dend_5, dend_2, dend_17, dend_16, dend_11, dend_10, dend_4, dend_3]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_10465, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_10465
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, axon_1, axon_1, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_485591806
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5)
    connect apic_0(0), soma_0(0.5)
    connect dend_26(0), soma_0(0.5)
    connect dend_19(0), soma_0(0.5)
    connect dend_18(0), soma_0(0.5)
    connect dend_7(0), soma_0(0.5)
    connect dend_0(0), soma_0(0.5)
    connect axon_1(0), axon_0(1.0)
    connect apic_14(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_13(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect apic_3(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_5(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect apic_13(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect apic_10(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_12(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 343.309, 456.272, 10.6198, 12.584 ) }
    soma_0 { pt3dadd( 349.601, 456.272, 10.6198, 12.584 ) }
    soma_0 { pt3dadd( 355.893, 456.272, 10.6198, 12.584 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 349.601, 456.272, 10.6198, 1.0 ) }
    axon_0 { pt3dadd( 355.442, 470.088, 10.6198, 1.0 ) }
    axon_0 { pt3dadd( 361.284, 483.904, 10.6198, 1.0 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 6/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 345.91, 450.635, 11.8038, 1.8662 ) }
    apic_0 { pt3dadd( 345.496, 449.584, 12.1279, 0.6092 ) }
    apic_0 { pt3dadd( 344.989, 448.56, 12.3774, 0.5542 ) }
    apic_0 { pt3dadd( 344.5, 447.527, 12.5341, 0.6176 ) }
    apic_0 { pt3dadd( 344.089, 446.465, 12.5762, 0.6188 ) }
    apic_0 { pt3dadd( 343.647, 445.427, 12.502, 0.498 ) }
    apic_0 { pt3dadd( 343.112, 444.417, 12.4329, 0.4148 ) }
    apic_0 { pt3dadd( 342.5, 443.464, 12.4471, 0.4914 ) }
    apic_0 { pt3dadd( 341.74, 442.61, 12.5044, 0.4282 ) }
    apic_0 { pt3dadd( 340.827, 441.943, 12.5267, 0.3922 ) }
    apic_0 { pt3dadd( 339.962, 441.202, 12.5569, 0.389 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 17/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 344.323, 458.927, 12.2746, 0.2288 ) }
    dend_26 { pt3dadd( 343.231, 459.038, 12.8221, 0.3162 ) }
    dend_26 { pt3dadd( 342.118, 458.808, 12.9966, 0.3772 ) }
    dend_26 { pt3dadd( 341.052, 458.638, 13.3433, 0.341 ) }
    dend_26 { pt3dadd( 340.203, 458.179, 13.9225, 0.313 ) }
    dend_26 { pt3dadd( 339.189, 458.163, 14.6087, 0.2998 ) }
    dend_26 { pt3dadd( 338.259, 458.773, 15.2732, 0.316 ) }
    dend_26 { pt3dadd( 337.262, 459.246, 15.9601, 0.377 ) }
    dend_26 { pt3dadd( 336.242, 459.664, 16.6616, 0.3408 ) }
    dend_26 { pt3dadd( 335.683, 460.579, 17.3339, 0.3124 ) }
    dend_26 { pt3dadd( 335.195, 461.594, 17.9616, 0.2988 ) }
    dend_26 { pt3dadd( 334.733, 462.567, 18.6358, 0.3142 ) }
    dend_26 { pt3dadd( 334.269, 463.565, 19.3263, 0.3736 ) }
    dend_26 { pt3dadd( 333.474, 464.357, 19.9565, 0.3342 ) }
    dend_26 { pt3dadd( 332.475, 464.795, 20.5984, 0.3006 ) }
    dend_26 { pt3dadd( 331.48, 465.135, 21.2916, 0.2758 ) }
    dend_26 { pt3dadd( 330.697, 465.902, 21.936, 0.2768 ) }
    dend_26 { pt3dadd( 330.009, 466.64, 22.6049, 0.2786 ) }
    dend_26 { pt3dadd( 329.677, 467.635, 23.2254, 0.282 ) }
    dend_26 { pt3dadd( 329.228, 468.671, 23.6832, 0.2882 ) }
    dend_26 { pt3dadd( 328.35, 469.389, 23.9011, 0.3008 ) }
    dend_26 { pt3dadd( 327.364, 469.885, 23.8423, 0.3178 ) }
    dend_26 { pt3dadd( 326.376, 470.321, 23.557, 0.3804 ) }
    dend_26 { pt3dadd( 325.307, 470.701, 23.1967, 0.3466 ) }
    dend_26 { pt3dadd( 324.218, 471.049, 22.8572, 0.3248 ) }
    dend_26 { pt3dadd( 323.17, 471.495, 22.536, 0.3152 ) }
    dend_26 { pt3dadd( 322.154, 471.997, 22.2346, 0.3754 ) }
    dend_26 { pt3dadd( 321.175, 472.575, 21.9745, 0.3376 ) }
    dend_26 { pt3dadd( 320.228, 473.206, 21.7512, 0.307 ) }
    dend_26 { pt3dadd( 319.429, 474.0, 21.5229, 0.2874 ) }
    dend_26 { pt3dadd( 318.726, 474.895, 21.3254, 0.2994 ) }
    dend_26 { pt3dadd( 318.09, 475.832, 21.2636, 0.3154 ) }
    dend_26 { pt3dadd( 317.366, 476.703, 21.3059, 0.3758 ) }
    dend_26 { pt3dadd( 316.504, 477.452, 21.372, 0.3382 ) }
    dend_26 { pt3dadd( 315.59, 478.141, 21.4333, 0.3078 ) }
    dend_26 { pt3dadd( 314.658, 478.803, 21.4799, 0.289 ) }
    dend_26 { pt3dadd( 313.922, 479.676, 21.5005, 0.3024 ) }
    dend_26 { pt3dadd( 313.463, 480.723, 21.492, 0.321 ) }
    dend_26 { pt3dadd( 313.156, 481.822, 21.4502, 0.3858 ) }
    dend_26 { pt3dadd( 312.914, 482.926, 21.3641, 0.358 ) }
    dend_26 { pt3dadd( 312.655, 484.029, 21.2686, 0.3396 ) }
    dend_26 { pt3dadd( 312.415, 485.145, 21.233, 0.3734 ) }
    dend_26 { pt3dadd( 312.374, 486.276, 21.3174, 0.3338 ) }
    dend_26 { pt3dadd( 312.715, 487.343, 21.54, 0.3 ) }
    dend_26 { pt3dadd( 313.115, 488.4, 21.8462, 0.2746 ) }
    dend_26 { pt3dadd( 313.121, 489.463, 22.2448, 0.2746 ) }
    dend_26 { pt3dadd( 312.161, 490.043, 22.6559, 0.2746 ) }
    dend_26 { pt3dadd( 311.078, 490.353, 23.0703, 0.2746 ) }
    dend_26 { pt3dadd( 310.18, 490.892, 23.5187, 0.2746 ) }
    dend_26 { pt3dadd( 309.697, 491.903, 23.9322, 0.2746 ) }
    dend_26 { pt3dadd( 309.235, 492.86, 24.3088, 0.2746 ) }
    dend_26 { pt3dadd( 308.753, 493.672, 24.7186, 0.2746 ) }
    dend_26 { pt3dadd( 308.667, 494.763, 24.9417, 0.2746 ) }
    dend_26 { pt3dadd( 308.349, 495.781, 24.982, 0.2746 ) }
    dend_26 { pt3dadd( 307.924, 496.838, 25.0004, 0.2746 ) }
    dend_26 { pt3dadd( 307.519, 497.903, 25.0613, 0.2746 ) }
    dend_26 { pt3dadd( 306.829, 498.741, 25.2289, 0.2746 ) }
    dend_26 { pt3dadd( 305.923, 499.373, 25.5326, 0.2746 ) }
    dend_26 { pt3dadd( 305.136, 500.149, 25.9406, 0.2746 ) }
    dend_26 { pt3dadd( 304.433, 501.033, 26.391, 0.2746 ) }
    dend_26 { pt3dadd( 303.648, 501.84, 26.8471, 0.2746 ) }
    dend_26 { pt3dadd( 302.788, 502.572, 27.2895, 0.2746 ) }
    dend_26 { pt3dadd( 301.855, 503.216, 27.6881, 0.2746 ) }
    dend_26 { pt3dadd( 300.88, 503.802, 28.0487, 0.2746 ) }
    dend_26 { pt3dadd( 300.236, 504.662, 28.4208, 0.2746 ) }
    dend_26 { pt3dadd( 299.57, 505.545, 28.796, 0.2746 ) }
    dend_26 { pt3dadd( 298.556, 505.975, 29.101, 0.2746 ) }
    dend_26 { pt3dadd( 297.671, 506.556, 29.4328, 0.2748 ) }
    dend_26 { pt3dadd( 297.45, 507.648, 29.6934, 0.2748 ) }
    dend_26 { pt3dadd( 296.529, 508.275, 29.8052, 0.2752 ) }
    dend_26 { pt3dadd( 295.738, 509.029, 29.7276, 0.2756 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 88/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 354.892, 457.527, 16.2274, 0.2288 ) }
    dend_19 { pt3dadd( 356.017, 457.603, 15.9551, 0.313 ) }
    dend_19 { pt3dadd( 357.053, 457.774, 15.7728, 0.3416 ) }
    dend_19 { pt3dadd( 358.011, 457.951, 15.4714, 0.419 ) }
    dend_19 { pt3dadd( 358.844, 458.651, 15.399, 0.4438 ) }
    dend_19 { pt3dadd( 359.449, 459.367, 15.6786, 0.3798 ) }
    dend_19 { pt3dadd( 359.749, 460.23, 16.2347, 0.3388 ) }
    dend_19 { pt3dadd( 360.246, 461.253, 16.7705, 0.3422 ) }
    dend_19 { pt3dadd( 361.182, 461.906, 17.2182, 0.4204 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 97/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 346.484, 461.514, 8.3012, 0.2288 ) }
    dend_18 { pt3dadd( 345.942, 462.47, 7.576, 0.3074 ) }
    dend_18 { pt3dadd( 345.833, 463.596, 7.2906, 0.3302 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_18 { pt3dadd( 345.346, 464.62, 6.9844, 0.4028 ) }
    dend_18 { pt3dadd( 344.886, 465.632, 6.6154, 0.3904 ) }
    dend_18 { pt3dadd( 345.08, 466.734, 6.3594, 0.3942 ) }
    dend_18 { pt3dadd( 345.057, 467.848, 6.0506, 0.5014 ) }
    dend_18 { pt3dadd( 344.681, 468.86, 5.6645, 0.4418 ) }
    dend_18 { pt3dadd( 343.946, 469.729, 5.334, 0.4412 ) }
    dend_18 { pt3dadd( 343.294, 470.66, 5.1105, 0.3652 ) }
    dend_18 { pt3dadd( 342.572, 471.496, 4.8203, 0.3588 ) }
    dend_18 { pt3dadd( 341.642, 472.114, 4.4942, 0.3792 ) }
    dend_18 { pt3dadd( 340.608, 472.598, 4.2339, 0.4906 ) }
    dend_18 { pt3dadd( 339.611, 473.159, 4.0477, 0.5678 ) }
    dend_18 { pt3dadd( 338.717, 473.872, 3.9035, 0.6526 ) }
    dend_18 { pt3dadd( 337.711, 474.4, 3.7554, 0.6356 ) }
    dend_18 { pt3dadd( 336.633, 474.711, 3.5936, 0.5338 ) }
    dend_18 { pt3dadd( 335.71, 475.321, 3.6694, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 15/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 352.055, 452.113, 15.0413, 0.4576 ) }
    dend_7 { pt3dadd( 353.025, 451.711, 15.2034, 0.4514 ) }
    dend_7 { pt3dadd( 354.044, 451.215, 15.2752, 0.4622 ) }
    dend_7 { pt3dadd( 355.012, 450.658, 15.2072, 0.6178 ) }
    dend_7 { pt3dadd( 356.089, 450.444, 15.021, 0.7046 ) }
    dend_7 { pt3dadd( 357.196, 450.689, 14.8457, 0.7004 ) }
    dend_7 { pt3dadd( 358.269, 450.527, 14.6007, 0.5792 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 22/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 354.785, 455.658, 4.356, 0.2288 ) }
    dend_0 { pt3dadd( 355.919, 455.614, 4.2789, 0.5172 ) }
    dend_0 { pt3dadd( 357.017, 455.297, 4.2505, 0.472 ) }
    dend_0 { pt3dadd( 358.072, 454.854, 4.2426, 0.4926 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 26/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 361.284, 483.904, 10.6198, 1.0 ) }
    axon_1 { pt3dadd( 367.125, 497.72, 10.6198, 1.0 ) }
    axon_1 { pt3dadd( 372.966, 511.536, 10.6198, 1.0 ) }
    // Section: apic_14, id: apic_14, parent: apic_0 (entry count 29/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 339.962, 441.202, 12.5569, 0.389 ) }
    apic_14 { pt3dadd( 338.778, 440.844, 13.6441, 0.2288 ) }
    apic_14 { pt3dadd( 337.745, 441.093, 14.0071, 0.3148 ) }
    apic_14 { pt3dadd( 336.865, 441.813, 14.1041, 0.3748 ) }
    apic_14 { pt3dadd( 336.155, 442.663, 14.2281, 0.3364 ) }
    apic_14 { pt3dadd( 335.449, 443.465, 14.4421, 0.3048 ) }
    apic_14 { pt3dadd( 334.484, 443.97, 14.6457, 0.2836 ) }
    apic_14 { pt3dadd( 333.452, 444.428, 14.717, 0.291 ) }
    apic_14 { pt3dadd( 332.587, 445.065, 14.5583, 0.3062 ) }
    apic_14 { pt3dadd( 331.773, 445.78, 14.2274, 0.3276 ) }
    apic_14 { pt3dadd( 330.842, 446.416, 13.8427, 0.3996 ) }
    apic_14 { pt3dadd( 329.919, 447.083, 13.4594, 0.3772 ) }
    apic_14 { pt3dadd( 329.159, 447.845, 13.0138, 0.4058 ) }
    apic_14 { pt3dadd( 328.368, 448.58, 12.5351, 0.3464 ) }
    apic_14 { pt3dadd( 327.51, 449.317, 12.1508, 0.3244 ) }
    apic_14 { pt3dadd( 326.688, 450.111, 11.8574, 0.3144 ) }
    apic_14 { pt3dadd( 325.864, 450.904, 11.6171, 0.3742 ) }
    apic_14 { pt3dadd( 324.941, 451.571, 11.4291, 0.3352 ) }
    apic_14 { pt3dadd( 323.95, 452.142, 11.2835, 0.3024 ) }
    apic_14 { pt3dadd( 322.974, 452.735, 11.1382, 0.279 ) }
    apic_14 { pt3dadd( 321.996, 453.272, 10.9175, 0.2828 ) }
    apic_14 { pt3dadd( 320.952, 453.689, 10.6554, 0.2896 ) }
    apic_14 { pt3dadd( 320.013, 454.316, 10.4248, 0.3036 ) }
    apic_14 { pt3dadd( 319.627, 455.334, 10.2086, 0.3234 ) }
    apic_14 { pt3dadd( 318.978, 456.214, 9.9659, 0.3902 ) }
    apic_14 { pt3dadd( 318.027, 456.789, 9.8373, 0.3662 ) }
    apic_14 { pt3dadd( 317.235, 457.577, 9.7145, 0.3548 ) }
    apic_14 { pt3dadd( 316.533, 458.466, 9.5683, 0.4014 ) }
    apic_14 { pt3dadd( 315.905, 459.417, 9.4317, 0.3868 ) }
    apic_14 { pt3dadd( 315.353, 460.418, 9.3391, 0.3938 ) }
    apic_14 { pt3dadd( 314.836, 461.437, 9.288, 0.4694 ) }
    apic_14 { pt3dadd( 314.351, 462.473, 9.266, 0.5342 ) }
    apic_14 { pt3dadd( 313.908, 463.525, 9.3044, 0.5634 ) }
    apic_14 { pt3dadd( 313.565, 464.597, 9.4205, 0.6002 ) }
    apic_14 { pt3dadd( 313.417, 465.718, 9.4849, 0.5244 ) }
    apic_14 { pt3dadd( 312.921, 466.731, 9.5007, 0.3972 ) }
    apic_14 { pt3dadd( 312.169, 467.553, 9.5758, 0.3242 ) }
    apic_14 { pt3dadd( 311.312, 468.302, 9.5954, 0.3142 ) }
    apic_14 { pt3dadd( 310.588, 469.145, 9.4906, 0.3734 ) }
    apic_14 { pt3dadd( 309.779, 469.948, 9.3619, 0.3338 ) }
    apic_14 { pt3dadd( 308.734, 470.4, 9.2593, 0.3 ) }
    apic_14 { pt3dadd( 307.689, 470.868, 9.1786, 0.2746 ) }
    apic_14 { pt3dadd( 306.696, 471.434, 9.1142, 0.2746 ) }
    apic_14 { pt3dadd( 305.763, 472.096, 9.0777, 0.2746 ) }
    apic_14 { pt3dadd( 304.934, 472.884, 9.0626, 0.2746 ) }
    apic_14 { pt3dadd( 304.106, 473.673, 9.0498, 0.2746 ) }
    apic_14 { pt3dadd( 303.373, 474.552, 9.0323, 0.2748 ) }
    apic_14 { pt3dadd( 302.432, 475.2, 9.0083, 0.275 ) }
    apic_14 { pt3dadd( 301.303, 475.349, 8.9754, 0.2752 ) }
    apic_14 { pt3dadd( 300.457, 476.112, 8.923, 0.2758 ) }
    apic_14 { pt3dadd( 299.801, 477.05, 8.8551, 0.2768 ) }
    apic_14 { pt3dadd( 298.961, 477.826, 8.7705, 0.2796 ) }
    apic_14 { pt3dadd( 298.033, 478.489, 8.6513, 0.2796 ) }
    apic_14 { pt3dadd( 297.123, 479.172, 8.4949, 0.305 ) }
    apic_14 { pt3dadd( 296.274, 479.899, 7.957, 0.2288 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 84/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 339.962, 441.202, 12.5569, 0.389 ) }
    apic_1 { pt3dadd( 339.484, 440.133, 12.7162, 0.5324 ) }
    apic_1 { pt3dadd( 339.68, 439.06, 12.9499, 0.5314 ) }
    apic_1 { pt3dadd( 339.988, 437.972, 13.2335, 0.4522 ) }
    apic_1 { pt3dadd( 340.051, 436.847, 13.5473, 0.4514 ) }
    apic_1 { pt3dadd( 339.862, 435.728, 13.8617, 0.4272 ) }
    apic_1 { pt3dadd( 339.543, 434.637, 14.1532, 0.4938 ) }
    apic_1 { pt3dadd( 339.054, 433.635, 14.4488, 0.5324 ) }
    apic_1 { pt3dadd( 338.341, 432.752, 14.6815, 0.559 ) }
    apic_1 { pt3dadd( 337.657, 431.839, 14.8247, 0.598 ) }
    apic_1 { pt3dadd( 336.971, 430.962, 14.855, 0.4906 ) }
    apic_1 { pt3dadd( 336.246, 430.085, 14.8784, 0.4788 ) }
    apic_1 { pt3dadd( 335.409, 429.31, 14.9687, 0.4616 ) }
    apic_1 { pt3dadd( 334.61, 428.534, 15.1988, 0.4076 ) }
    apic_1 { pt3dadd( 333.982, 427.671, 15.6055, 0.4152 ) }
    apic_1 { pt3dadd( 333.375, 426.726, 16.0722, 0.3642 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    apic_1 { pt3dadd( 332.888, 425.698, 16.5406, 0.3558 ) }
    apic_1 { pt3dadd( 332.579, 424.646, 17.0512, 0.3798 ) }
    apic_1 { pt3dadd( 332.433, 423.565, 17.5796, 0.461 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 3/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 295.738, 509.029, 29.7276, 0.2756 ) }
    dend_28 { pt3dadd( 294.542, 509.172, 29.3356, 0.2288 ) }
    dend_28 { pt3dadd( 293.398, 509.173, 29.1514, 0.2746 ) }
    dend_28 { pt3dadd( 292.254, 509.168, 29.0777, 0.2746 ) }
    dend_28 { pt3dadd( 291.11, 509.168, 28.9716, 0.2746 ) }
    dend_28 { pt3dadd( 289.966, 509.168, 28.8249, 0.2746 ) }
    dend_28 { pt3dadd( 288.861, 509.401, 28.632, 0.2746 ) }
    dend_28 { pt3dadd( 287.799, 509.825, 28.3906, 0.2746 ) }
    dend_28 { pt3dadd( 286.993, 510.223, 27.9128, 0.2746 ) }
    dend_28 { pt3dadd( 286.753, 511.109, 27.2819, 0.2746 ) }
    dend_28 { pt3dadd( 286.638, 512.212, 26.6264, 0.2746 ) }
    dend_28 { pt3dadd( 286.317, 513.285, 25.9965, 0.2746 ) }
    dend_28 { pt3dadd( 285.659, 514.202, 25.4521, 0.2746 ) }
    dend_28 { pt3dadd( 285.346, 515.27, 24.9706, 0.2746 ) }
    dend_28 { pt3dadd( 285.046, 516.249, 24.4369, 0.2746 ) }
    dend_28 { pt3dadd( 284.323, 517.109, 24.0144, 0.2746 ) }
    dend_28 { pt3dadd( 283.467, 517.867, 23.6858, 0.2746 ) }
    dend_28 { pt3dadd( 282.495, 518.468, 23.4255, 0.2746 ) }
    dend_28 { pt3dadd( 281.413, 518.739, 23.135, 0.2748 ) }
    dend_28 { pt3dadd( 280.34, 518.812, 22.7701, 0.2748 ) }
    dend_28 { pt3dadd( 279.22, 518.612, 22.4956, 0.2752 ) }
    dend_28 { pt3dadd( 278.117, 518.336, 22.3062, 0.2756 ) }
    dend_28 { pt3dadd( 277.14, 517.745, 22.1363, 0.2766 ) }
    dend_28 { pt3dadd( 276.183, 517.118, 21.9522, 0.2784 ) }
    dend_28 { pt3dadd( 275.131, 516.789, 21.6575, 0.2816 ) }
    dend_28 { pt3dadd( 273.991, 516.744, 21.3454, 0.2876 ) }
    dend_28 { pt3dadd( 272.925, 517.148, 20.9959, 0.2984 ) }
    dend_28 { pt3dadd( 272.061, 517.777, 20.5127, 0.3198 ) }
    dend_28 { pt3dadd( 271.009, 517.937, 19.9497, 0.354 ) }
    dend_28 { pt3dadd( 269.927, 518.074, 19.3813, 0.4432 ) }
    dend_28 { pt3dadd( 268.787, 518.141, 18.9369, 0.483 ) }
    dend_28 { pt3dadd( 267.647, 518.207, 18.5961, 0.4802 ) }
    dend_28 { pt3dadd( 266.505, 518.279, 18.3739, 0.3898 ) }
    dend_28 { pt3dadd( 265.363, 518.351, 18.2553, 0.4068 ) }
    dend_28 { pt3dadd( 264.219, 518.365, 18.1874, 0.2288 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 38/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 295.738, 509.029, 29.7276, 0.2756 ) }
    dend_27 { pt3dadd( 295.681, 509.268, 29.633, 0.2766 ) }
    dend_27 { pt3dadd( 295.496, 510.383, 29.521, 0.2782 ) }
    dend_27 { pt3dadd( 295.438, 511.524, 29.458, 0.2814 ) }
    dend_27 { pt3dadd( 295.432, 512.668, 29.486, 0.287 ) }
    dend_27 { pt3dadd( 295.432, 513.812, 29.6131, 0.2988 ) }
    dend_27 { pt3dadd( 295.281, 514.859, 29.9244, 0.3142 ) }
    dend_27 { pt3dadd( 295.03, 515.828, 30.4598, 0.3734 ) }
    dend_27 { pt3dadd( 294.715, 516.857, 31.0702, 0.3338 ) }
    dend_27 { pt3dadd( 294.216, 517.87, 31.5916, 0.3 ) }
    dend_27 { pt3dadd( 294.175, 518.819, 32.1384, 0.2746 ) }
    dend_27 { pt3dadd( 294.316, 519.87, 32.7085, 0.2746 ) }
    dend_27 { pt3dadd( 294.077, 520.967, 33.2114, 0.2746 ) }
    dend_27 { pt3dadd( 293.603, 522.005, 33.6678, 0.2748 ) }
    dend_27 { pt3dadd( 292.877, 522.861, 34.1006, 0.2748 ) }
    dend_27 { pt3dadd( 291.952, 523.456, 34.6063, 0.2752 ) }
    dend_27 { pt3dadd( 291.617, 524.185, 35.322, 0.2756 ) }
    dend_27 { pt3dadd( 291.325, 524.935, 36.2146, 0.2766 ) }
    dend_27 { pt3dadd( 290.563, 525.71, 37.0185, 0.2782 ) }
    dend_27 { pt3dadd( 289.86, 526.611, 37.6457, 0.2814 ) }
    dend_27 { pt3dadd( 289.37, 527.635, 38.0764, 0.287 ) }
    dend_27 { pt3dadd( 289.127, 528.75, 38.3726, 0.2988 ) }
    dend_27 { pt3dadd( 289.077, 529.892, 38.5888, 0.3142 ) }
    dend_27 { pt3dadd( 288.921, 530.934, 38.9362, 0.3734 ) }
    dend_27 { pt3dadd( 288.656, 532.021, 39.3534, 0.334 ) }
    dend_27 { pt3dadd( 288.415, 533.074, 39.8807, 0.3002 ) }
    dend_27 { pt3dadd( 288.131, 534.176, 40.3094, 0.2748 ) }
    dend_27 { pt3dadd( 287.939, 535.283, 40.7641, 0.275 ) }
    dend_27 { pt3dadd( 287.685, 536.357, 41.2552, 0.2754 ) }
    dend_27 { pt3dadd( 287.425, 537.431, 41.7561, 0.2762 ) }
    dend_27 { pt3dadd( 287.477, 538.549, 42.245, 0.2776 ) }
    dend_27 { pt3dadd( 287.533, 539.677, 42.7006, 0.2804 ) }
    dend_27 { pt3dadd( 287.584, 540.82, 43.0716, 0.2852 ) }
    dend_27 { pt3dadd( 287.666, 541.961, 43.3885, 0.2954 ) }
    dend_27 { pt3dadd( 287.851, 543.077, 43.7052, 0.3078 ) }
    dend_27 { pt3dadd( 288.015, 544.198, 44.0219, 0.3616 ) }
    dend_27 { pt3dadd( 287.628, 545.273, 44.3086, 0.3136 ) }
    dend_27 { pt3dadd( 287.238, 546.346, 44.5715, 0.2542 ) }
    dend_27 { pt3dadd( 286.658, 547.213, 45.4686, 0.2288 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 77/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 361.182, 461.906, 17.2182, 0.4204 ) }
    dend_23 { pt3dadd( 361.772, 461.991, 17.6141, 0.4464 ) }
    dend_23 { pt3dadd( 362.87, 462.116, 17.986, 0.3858 ) }
    dend_23 { pt3dadd( 363.972, 462.375, 18.2768, 0.3438 ) }
    dend_23 { pt3dadd( 365.109, 462.491, 18.4459, 0.3814 ) }
    dend_23 { pt3dadd( 366.244, 462.495, 18.6027, 0.3484 ) }
    dend_23 { pt3dadd( 367.338, 462.211, 18.7398, 0.3278 ) }
    dend_23 { pt3dadd( 368.375, 461.739, 18.7359, 0.321 ) }
    dend_23 { pt3dadd( 369.435, 461.38, 18.5663, 0.386 ) }
    dend_23 { pt3dadd( 370.566, 461.538, 18.3801, 0.3584 ) }
    dend_23 { pt3dadd( 371.708, 461.589, 18.1645, 0.3402 ) }
    dend_23 { pt3dadd( 372.728, 461.387, 17.7392, 0.3746 ) }
    dend_23 { pt3dadd( 373.841, 461.177, 17.285, 0.3362 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 90/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 361.182, 461.906, 17.2182, 0.4204 ) }
    dend_20 { pt3dadd( 360.832, 462.165, 17.607, 0.6864 ) }
    dend_20 { pt3dadd( 360.238, 463.004, 18.6989, 0.5128 ) }
    dend_20 { pt3dadd( 359.678, 463.961, 19.1624, 0.4434 ) }
    dend_20 { pt3dadd( 359.105, 464.948, 19.6034, 0.539 ) }
    dend_20 { pt3dadd( 358.913, 466.068, 20.0332, 0.5432 ) }
    dend_20 { pt3dadd( 358.974, 467.178, 20.5053, 0.4766 ) }
    dend_20 { pt3dadd( 359.267, 468.278, 20.9443, 0.4852 ) }
    dend_20 { pt3dadd( 359.632, 469.35, 21.3751, 0.545 ) }
    dend_20 { pt3dadd( 360.185, 470.322, 21.8493, 0.4444 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_20 { pt3dadd( 360.343, 471.452, 22.306, 0.3682 ) }
    dend_20 { pt3dadd( 360.454, 472.57, 22.7991, 0.3794 ) }
    dend_20 { pt3dadd( 360.622, 473.592, 23.4086, 0.3448 ) }
    dend_20 { pt3dadd( 360.672, 474.681, 24.0514, 0.3202 ) }
    dend_20 { pt3dadd( 360.734, 475.79, 24.6775, 0.3128 ) }
    dend_20 { pt3dadd( 360.479, 476.868, 25.2781, 0.3412 ) }
    dend_20 { pt3dadd( 360.584, 478.005, 25.7244, 0.4184 ) }
    dend_20 { pt3dadd( 360.407, 479.135, 26.072, 0.4426 ) }
    dend_20 { pt3dadd( 360.48, 480.229, 26.4532, 0.3778 ) }
    dend_20 { pt3dadd( 360.596, 481.319, 26.8727, 0.3338 ) }
    dend_20 { pt3dadd( 360.123, 482.36, 27.2278, 0.3392 ) }
    // Section: dend_13, id: dend_13, parent: dend_7 (entry count 11/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 358.269, 450.527, 14.6007, 0.5792 ) }
    dend_13 { pt3dadd( 359.19, 450.116, 14.271, 0.447 ) }
    dend_13 { pt3dadd( 360.095, 449.459, 14.1707, 0.4404 ) }
    dend_13 { pt3dadd( 360.954, 449.141, 14.4281, 0.4144 ) }
    dend_13 { pt3dadd( 361.948, 448.695, 14.8176, 0.4332 ) }
    dend_13 { pt3dadd( 362.85, 448.009, 15.2123, 0.5992 ) }
    dend_13 { pt3dadd( 363.657, 447.24, 15.4571, 0.4992 ) }
    dend_13 { pt3dadd( 364.476, 446.453, 15.6173, 0.4628 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 19/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 358.269, 450.527, 14.6007, 0.5792 ) }
    dend_8 { pt3dadd( 358.383, 451.237, 15.6103, 0.4576 ) }
    dend_8 { pt3dadd( 358.815, 451.666, 16.9153, 0.4584 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 22/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 358.072, 454.854, 4.2426, 0.4926 ) }
    dend_6 { pt3dadd( 358.186, 453.935, 4.139, 0.2288 ) }
    dend_6 { pt3dadd( 358.033, 452.831, 4.0435, 0.2766 ) }
    dend_6 { pt3dadd( 357.92, 451.7, 4.0211, 0.2784 ) }
    dend_6 { pt3dadd( 358.496, 450.79, 3.9998, 0.2818 ) }
    dend_6 { pt3dadd( 359.103, 449.829, 3.9701, 0.288 ) }
    dend_6 { pt3dadd( 359.34, 448.724, 3.9229, 0.2994 ) }
    dend_6 { pt3dadd( 359.552, 447.643, 3.7661, 0.3216 ) }
    dend_6 { pt3dadd( 360.179, 446.747, 3.534, 0.3572 ) }
    dend_6 { pt3dadd( 360.913, 445.881, 3.3583, 0.449 ) }
    dend_6 { pt3dadd( 361.504, 444.927, 3.2794, 0.4954 ) }
    dend_6 { pt3dadd( 362.344, 444.168, 3.2311, 0.4958 ) }
    dend_6 { pt3dadd( 363.316, 443.575, 3.1426, 0.4548 ) }
    dend_6 { pt3dadd( 364.105, 442.857, 2.9084, 0.353 ) }
    dend_6 { pt3dadd( 364.249, 441.753, 2.6276, 0.2882 ) }
    dend_6 { pt3dadd( 364.812, 440.76, 2.3765, 0.2542 ) }
    dend_6 { pt3dadd( 365.278, 439.753, 2.0687, 0.2288 ) }
    dend_6 { pt3dadd( 365.279, 438.61, 1.68, 0.2288 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 358.072, 454.854, 4.2426, 0.4926 ) }
    dend_1 { pt3dadd( 359.068, 455.702, 4.4621, 0.4742 ) }
    dend_1 { pt3dadd( 360.116, 455.441, 4.7011, 0.3902 ) }
    dend_1 { pt3dadd( 361.12, 455.214, 4.6996, 0.352 ) }
    dend_1 { pt3dadd( 362.251, 455.192, 4.6238, 0.3962 ) }
    dend_1 { pt3dadd( 363.36, 455.16, 4.651, 0.377 ) }
    dend_1 { pt3dadd( 364.47, 454.968, 4.584, 0.3756 ) }
    // Section: apic_3, id: apic_3, parent: apic_1 (entry count 47/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 332.433, 423.565, 17.5796, 0.461 ) }
    apic_3 { pt3dadd( 332.5, 422.705, 18.023, 0.6622 ) }
    apic_3 { pt3dadd( 332.254, 421.606, 18.3723, 0.789 ) }
    apic_3 { pt3dadd( 331.768, 420.574, 18.6523, 0.8482 ) }
    apic_3 { pt3dadd( 331.077, 419.668, 18.8941, 0.895 ) }
    apic_3 { pt3dadd( 330.276, 418.857, 19.1332, 0.8298 ) }
    apic_3 { pt3dadd( 329.516, 418.031, 19.434, 0.7612 ) }
    apic_3 { pt3dadd( 328.849, 417.122, 19.7886, 0.6094 ) }
    apic_3 { pt3dadd( 328.396, 416.103, 20.1974, 0.6746 ) }
    apic_3 { pt3dadd( 328.146, 415.036, 20.6718, 0.7154 ) }
    apic_3 { pt3dadd( 327.905, 413.948, 21.1522, 0.7218 ) }
    apic_3 { pt3dadd( 327.588, 412.86, 21.575, 0.6124 ) }
    apic_3 { pt3dadd( 327.169, 411.815, 21.9483, 0.5412 ) }
    apic_3 { pt3dadd( 326.618, 410.825, 22.2596, 0.4558 ) }
    apic_3 { pt3dadd( 325.952, 409.901, 22.4564, 0.5294 ) }
    apic_3 { pt3dadd( 325.237, 409.028, 22.5176, 0.4542 ) }
    apic_3 { pt3dadd( 324.656, 408.058, 22.5154, 0.4276 ) }
    apic_3 { pt3dadd( 324.279, 406.984, 22.5417, 0.516 ) }
    apic_3 { pt3dadd( 324.08, 405.878, 22.6649, 0.47 ) }
    apic_3 { pt3dadd( 323.886, 404.762, 22.8728, 0.4892 ) }
    apic_3 { pt3dadd( 323.695, 403.635, 23.1222, 0.4744 ) }
    apic_3 { pt3dadd( 323.528, 402.504, 23.3913, 0.462 ) }
    apic_3 { pt3dadd( 323.138, 401.438, 23.679, 0.3666 ) }
    apic_3 { pt3dadd( 322.649, 400.517, 24.0995, 0.3134 ) }
    apic_3 { pt3dadd( 322.265, 399.615, 24.6578, 0.2994 ) }
    apic_3 { pt3dadd( 321.689, 398.764, 25.2641, 0.3204 ) }
    apic_3 { pt3dadd( 320.857, 398.027, 25.6651, 0.3612 ) }
    apic_3 { pt3dadd( 320.187, 397.176, 25.817, 0.4266 ) }
    apic_3 { pt3dadd( 319.6, 396.204, 25.8656, 0.598 ) }
    apic_3 { pt3dadd( 319.069, 395.191, 25.8899, 0.6718 ) }
    apic_3 { pt3dadd( 318.659, 394.126, 25.947, 0.6214 ) }
    apic_3 { pt3dadd( 318.27, 393.073, 26.1225, 0.5204 ) }
    apic_3 { pt3dadd( 317.746, 392.076, 26.4107, 0.5996 ) }
    apic_3 { pt3dadd( 317.167, 391.111, 26.7761, 0.597 ) }
    apic_3 { pt3dadd( 316.529, 390.188, 27.1744, 0.6316 ) }
    apic_3 { pt3dadd( 315.871, 389.278, 27.5717, 0.504 ) }
    apic_3 { pt3dadd( 315.238, 388.341, 27.9304, 0.5114 ) }
    apic_3 { pt3dadd( 314.665, 387.353, 28.1996, 0.4854 ) }
    apic_3 { pt3dadd( 314.152, 386.33, 28.3766, 0.6288 ) }
    apic_3 { pt3dadd( 313.654, 385.3, 28.4813, 0.6528 ) }
    apic_3 { pt3dadd( 313.164, 384.266, 28.5337, 0.7256 ) }
    apic_3 { pt3dadd( 312.612, 383.264, 28.5524, 0.7246 ) }
    apic_3 { pt3dadd( 311.9, 382.369, 28.5547, 0.6964 ) }
    apic_3 { pt3dadd( 311.122, 381.53, 28.553, 0.5422 ) }
    apic_3 { pt3dadd( 310.408, 380.636, 28.5502, 0.522 ) }
    apic_3 { pt3dadd( 309.723, 379.721, 28.5454, 0.5674 ) }
    apic_3 { pt3dadd( 309.0, 378.835, 28.539, 0.4796 ) }
    apic_3 { pt3dadd( 308.326, 377.909, 28.5331, 0.465 ) }
    apic_3 { pt3dadd( 307.699, 376.953, 28.5278, 0.4052 ) }
    apic_3 { pt3dadd( 307.003, 376.051, 28.5076, 0.4522 ) }
    apic_3 { pt3dadd( 306.346, 375.143, 28.4474, 0.4594 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 98/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 332.433, 423.565, 17.5796, 0.461 ) }
    apic_2 { pt3dadd( 332.555, 422.766, 17.9617, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    apic_2 { pt3dadd( 332.981, 421.853, 17.7331, 0.3594 ) }
    apic_2 { pt3dadd( 333.896, 421.411, 17.597, 0.3002 ) }
    apic_2 { pt3dadd( 334.828, 420.997, 17.7158, 0.2748 ) }
    apic_2 { pt3dadd( 335.748, 420.354, 17.9362, 0.2752 ) }
    apic_2 { pt3dadd( 336.589, 419.596, 18.2389, 0.2756 ) }
    apic_2 { pt3dadd( 337.479, 418.906, 18.6089, 0.2766 ) }
    apic_2 { pt3dadd( 338.526, 418.511, 18.9708, 0.2784 ) }
    apic_2 { pt3dadd( 339.622, 418.526, 19.3629, 0.2816 ) }
    apic_2 { pt3dadd( 340.724, 418.567, 19.7735, 0.2876 ) }
    apic_2 { pt3dadd( 341.847, 418.432, 20.1442, 0.2986 ) }
    apic_2 { pt3dadd( 342.968, 418.22, 20.4543, 0.3204 ) }
    apic_2 { pt3dadd( 344.103, 418.151, 20.7101, 0.3538 ) }
    apic_2 { pt3dadd( 345.221, 418.204, 20.9611, 0.4488 ) }
    apic_2 { pt3dadd( 346.317, 418.484, 21.1525, 0.4652 ) }
    apic_2 { pt3dadd( 347.344, 418.979, 21.2379, 0.584 ) }
    apic_2 { pt3dadd( 348.365, 419.472, 21.2029, 0.604 ) }
    apic_2 { pt3dadd( 349.44, 419.847, 21.1333, 0.4696 ) }
    apic_2 { pt3dadd( 350.555, 419.974, 20.9683, 0.3674 ) }
    apic_2 { pt3dadd( 351.689, 420.085, 20.762, 0.378 ) }
    apic_2 { pt3dadd( 352.773, 420.41, 20.5244, 0.3422 ) }
    apic_2 { pt3dadd( 353.846, 420.797, 20.3004, 0.3154 ) }
    apic_2 { pt3dadd( 354.915, 421.16, 20.0504, 0.304 ) }
    apic_2 { pt3dadd( 355.838, 421.815, 19.8374, 0.324 ) }
    apic_2 { pt3dadd( 356.864, 422.305, 19.6752, 0.3918 ) }
    apic_2 { pt3dadd( 357.922, 422.683, 19.4917, 0.368 ) }
    apic_2 { pt3dadd( 358.88, 423.258, 19.298, 0.3638 ) }
    apic_2 { pt3dadd( 359.886, 423.782, 19.1421, 0.3894 ) }
    apic_2 { pt3dadd( 360.712, 424.552, 19.1072, 0.5046 ) }
    apic_2 { pt3dadd( 361.518, 425.339, 19.2132, 0.6176 ) }
    apic_2 { pt3dadd( 362.312, 426.103, 19.4715, 0.629 ) }
    apic_2 { pt3dadd( 363.228, 426.757, 19.7039, 0.4684 ) }
    apic_2 { pt3dadd( 364.129, 427.453, 19.9597, 0.3654 ) }
    apic_2 { pt3dadd( 364.899, 428.27, 20.2629, 0.3744 ) }
    apic_2 { pt3dadd( 365.723, 428.974, 20.631, 0.3356 ) }
    apic_2 { pt3dadd( 366.684, 429.438, 21.0447, 0.3032 ) }
    apic_2 { pt3dadd( 367.704, 429.913, 21.3907, 0.2804 ) }
    apic_2 { pt3dadd( 368.575, 430.509, 21.5033, 0.2854 ) }
    apic_2 { pt3dadd( 369.644, 430.431, 21.4481, 0.2942 ) }
    apic_2 { pt3dadd( 370.757, 430.276, 21.359, 0.3122 ) }
    apic_2 { pt3dadd( 371.832, 430.345, 21.3668, 0.339 ) }
    apic_2 { pt3dadd( 372.641, 430.973, 21.6394, 0.4202 ) }
    apic_2 { pt3dadd( 373.58, 431.336, 22.1424, 0.4166 ) }
    apic_2 { pt3dadd( 374.634, 431.489, 22.7689, 0.4732 ) }
    apic_2 { pt3dadd( 375.748, 431.638, 23.3717, 0.4996 ) }
    apic_2 { pt3dadd( 376.861, 431.824, 23.8897, 0.4722 ) }
    apic_2 { pt3dadd( 377.934, 432.164, 24.3039, 0.5626 ) }
    apic_2 { pt3dadd( 378.999, 432.565, 24.546, 0.5026 ) }
    apic_2 { pt3dadd( 380.089, 432.879, 24.6286, 0.5816 ) }
    apic_2 { pt3dadd( 381.19, 433.164, 24.6495, 0.4906 ) }
    apic_2 { pt3dadd( 382.31, 433.345, 24.582, 0.5584 ) }
    apic_2 { pt3dadd( 383.424, 433.559, 24.4659, 0.4532 ) }
    apic_2 { pt3dadd( 384.56, 433.676, 24.3751, 0.4628 ) }
    apic_2 { pt3dadd( 385.7, 433.724, 24.3273, 0.4012 ) }
    apic_2 { pt3dadd( 386.831, 433.837, 24.2925, 0.4452 ) }
    apic_2 { pt3dadd( 387.945, 433.925, 24.3072, 0.4454 ) }
    apic_2 { pt3dadd( 389.064, 433.736, 24.3011, 0.3836 ) }
    apic_2 { pt3dadd( 390.18, 433.788, 24.237, 0.34 ) }
    apic_2 { pt3dadd( 391.287, 434.011, 24.1719, 0.3742 ) }
    apic_2 { pt3dadd( 392.421, 434.033, 24.0663, 0.3352 ) }
    apic_2 { pt3dadd( 393.55, 434.099, 23.9456, 0.3026 ) }
    apic_2 { pt3dadd( 394.659, 434.119, 23.8675, 0.2794 ) }
    apic_2 { pt3dadd( 395.738, 434.379, 23.9264, 0.2834 ) }
    apic_2 { pt3dadd( 396.839, 434.543, 24.0052, 0.2908 ) }
    apic_2 { pt3dadd( 397.936, 434.72, 23.9904, 0.3056 ) }
    apic_2 { pt3dadd( 399.012, 435.042, 23.991, 0.3268 ) }
    apic_2 { pt3dadd( 400.093, 435.37, 24.0559, 0.398 ) }
    apic_2 { pt3dadd( 401.224, 435.499, 24.169, 0.374 ) }
    apic_2 { pt3dadd( 402.354, 435.54, 24.3416, 0.4 ) }
    apic_2 { pt3dadd( 403.489, 435.514, 24.5601, 0.3358 ) }
    apic_2 { pt3dadd( 404.63, 435.478, 24.7857, 0.3036 ) }
    apic_2 { pt3dadd( 405.773, 435.512, 24.9913, 0.2814 ) }
    apic_2 { pt3dadd( 406.916, 435.555, 25.1844, 0.2872 ) }
    apic_2 { pt3dadd( 408.06, 435.559, 25.3801, 0.2988 ) }
    apic_2 { pt3dadd( 409.185, 435.453, 25.6271, 0.3144 ) }
    apic_2 { pt3dadd( 410.105, 434.925, 25.9822, 0.374 ) }
    apic_2 { pt3dadd( 410.893, 434.246, 26.4821, 0.335 ) }
    apic_2 { pt3dadd( 411.908, 433.918, 26.998, 0.302 ) }
    apic_2 { pt3dadd( 413.027, 433.775, 27.4861, 0.2782 ) }
    apic_2 { pt3dadd( 414.074, 433.701, 28.0283, 0.2814 ) }
    apic_2 { pt3dadd( 415.13, 433.385, 28.4679, 0.287 ) }
    apic_2 { pt3dadd( 416.139, 433.091, 28.6468, 0.2988 ) }
    apic_2 { pt3dadd( 417.194, 432.999, 28.8604, 0.3142 ) }
    apic_2 { pt3dadd( 418.31, 432.833, 29.0713, 0.3734 ) }
    apic_2 { pt3dadd( 419.393, 432.473, 29.2788, 0.3338 ) }
    apic_2 { pt3dadd( 420.346, 431.935, 29.577, 0.3 ) }
    apic_2 { pt3dadd( 421.294, 431.461, 30.0048, 0.2746 ) }
    apic_2 { pt3dadd( 422.189, 430.769, 30.3976, 0.2746 ) }
    apic_2 { pt3dadd( 423.22, 430.3, 30.6606, 0.2746 ) }
    apic_2 { pt3dadd( 424.304, 429.932, 30.8644, 0.2746 ) }
    apic_2 { pt3dadd( 425.412, 429.69, 31.0761, 0.2746 ) }
    apic_2 { pt3dadd( 426.48, 429.468, 31.3606, 0.2746 ) }
    apic_2 { pt3dadd( 427.389, 428.892, 31.6952, 0.2746 ) }
    apic_2 { pt3dadd( 428.136, 428.047, 31.8942, 0.2746 ) }
    apic_2 { pt3dadd( 429.087, 427.418, 32.0256, 0.2746 ) }
    apic_2 { pt3dadd( 430.069, 426.856, 32.1681, 0.2746 ) }
    apic_2 { pt3dadd( 431.028, 426.264, 32.3137, 0.2746 ) }
    apic_2 { pt3dadd( 432.017, 425.725, 32.3767, 0.2746 ) }
    apic_2 { pt3dadd( 432.837, 425.187, 32.2476, 0.2746 ) }
    apic_2 { pt3dadd( 433.387, 424.329, 32.0891, 0.2746 ) }
    apic_2 { pt3dadd( 434.344, 423.944, 32.1566, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    apic_2 { pt3dadd( 435.328, 423.783, 32.4811, 0.2746 ) }
    apic_2 { pt3dadd( 436.231, 423.232, 32.9658, 0.2746 ) }
    apic_2 { pt3dadd( 437.263, 422.782, 33.4802, 0.2748 ) }
    apic_2 { pt3dadd( 438.071, 422.656, 34.1905, 0.2748 ) }
    apic_2 { pt3dadd( 438.748, 422.603, 35.0907, 0.2752 ) }
    apic_2 { pt3dadd( 439.67, 422.239, 35.852, 0.2756 ) }
    apic_2 { pt3dadd( 440.417, 421.418, 36.3471, 0.2766 ) }
    apic_2 { pt3dadd( 441.296, 420.743, 36.6164, 0.2782 ) }
    apic_2 { pt3dadd( 442.355, 420.406, 36.652, 0.2814 ) }
    apic_2 { pt3dadd( 443.214, 419.944, 36.3961, 0.2872 ) }
    apic_2 { pt3dadd( 443.791, 419.078, 36.0212, 0.299 ) }
    apic_2 { pt3dadd( 444.49, 418.191, 35.7605, 0.3148 ) }
    apic_2 { pt3dadd( 445.458, 417.663, 35.7406, 0.3746 ) }
    apic_2 { pt3dadd( 446.52, 417.616, 35.9814, 0.336 ) }
    apic_2 { pt3dadd( 447.564, 417.852, 36.4249, 0.3038 ) }
    apic_2 { pt3dadd( 448.644, 417.816, 36.9779, 0.2818 ) }
    apic_2 { pt3dadd( 449.737, 417.749, 37.5449, 0.2878 ) }
    apic_2 { pt3dadd( 450.829, 417.944, 38.0394, 0.3002 ) }
    apic_2 { pt3dadd( 451.935, 418.214, 38.3774, 0.3168 ) }
    apic_2 { pt3dadd( 453.041, 418.423, 38.4782, 0.3784 ) }
    apic_2 { pt3dadd( 454.121, 418.71, 38.3776, 0.3432 ) }
    apic_2 { pt3dadd( 455.144, 419.183, 38.1606, 0.3172 ) }
    apic_2 { pt3dadd( 456.065, 419.853, 37.8986, 0.3076 ) }
    apic_2 { pt3dadd( 457.128, 420.059, 37.7698, 0.3304 ) }
    apic_2 { pt3dadd( 458.222, 419.853, 37.5606, 0.404 ) }
    apic_2 { pt3dadd( 459.349, 419.718, 37.3377, 0.3898 ) }
    apic_2 { pt3dadd( 460.457, 419.999, 37.1428, 0.4068 ) }
    apic_2 { pt3dadd( 461.125, 420.827, 36.3748, 0.4576 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 28/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 373.841, 461.177, 17.285, 0.3362 ) }
    dend_25 { pt3dadd( 374.805, 461.161, 17.6865, 0.2288 ) }
    dend_25 { pt3dadd( 375.899, 460.914, 17.7968, 0.2752 ) }
    dend_25 { pt3dadd( 376.925, 460.414, 17.8416, 0.2756 ) }
    dend_25 { pt3dadd( 377.978, 459.985, 17.9222, 0.2766 ) }
    dend_25 { pt3dadd( 379.032, 459.935, 17.9719, 0.2782 ) }
    dend_25 { pt3dadd( 379.968, 459.95, 17.8336, 0.2814 ) }
    dend_25 { pt3dadd( 380.609, 459.14, 17.7321, 0.287 ) }
    dend_25 { pt3dadd( 381.125, 458.302, 17.8888, 0.2988 ) }
    dend_25 { pt3dadd( 382.022, 457.781, 18.1945, 0.3142 ) }
    dend_25 { pt3dadd( 383.09, 457.46, 18.5405, 0.3734 ) }
    dend_25 { pt3dadd( 384.163, 457.076, 18.8266, 0.3338 ) }
    dend_25 { pt3dadd( 385.096, 456.508, 18.9408, 0.3 ) }
    dend_25 { pt3dadd( 386.093, 455.961, 18.988, 0.2746 ) }
    dend_25 { pt3dadd( 387.222, 455.882, 18.9946, 0.2746 ) }
    dend_25 { pt3dadd( 388.357, 455.83, 19.0415, 0.2748 ) }
    dend_25 { pt3dadd( 389.392, 455.406, 19.1689, 0.275 ) }
    dend_25 { pt3dadd( 390.499, 455.251, 19.2306, 0.2754 ) }
    dend_25 { pt3dadd( 391.621, 455.148, 19.3794, 0.2762 ) }
    dend_25 { pt3dadd( 392.76, 455.117, 19.5448, 0.2776 ) }
    dend_25 { pt3dadd( 393.345, 454.146, 19.6905, 0.2802 ) }
    dend_25 { pt3dadd( 393.896, 453.178, 19.8646, 0.285 ) }
    dend_25 { pt3dadd( 394.753, 452.444, 20.0421, 0.2938 ) }
    dend_25 { pt3dadd( 395.747, 451.923, 20.2356, 0.3112 ) }
    dend_25 { pt3dadd( 396.69, 451.375, 20.3487, 0.3382 ) }
    dend_25 { pt3dadd( 397.296, 450.428, 20.3395, 0.413 ) }
    dend_25 { pt3dadd( 397.97, 449.545, 20.2394, 0.4328 ) }
    dend_25 { pt3dadd( 398.864, 448.864, 20.1532, 0.3594 ) }
    dend_25 { pt3dadd( 399.948, 448.518, 20.1015, 0.3002 ) }
    dend_25 { pt3dadd( 401.081, 448.4, 20.092, 0.275 ) }
    dend_25 { pt3dadd( 402.213, 448.467, 20.1596, 0.2754 ) }
    dend_25 { pt3dadd( 403.329, 448.566, 20.3421, 0.2762 ) }
    dend_25 { pt3dadd( 404.445, 448.692, 20.5792, 0.2776 ) }
    dend_25 { pt3dadd( 405.534, 449.013, 20.7891, 0.2804 ) }
    dend_25 { pt3dadd( 406.613, 449.352, 20.932, 0.2852 ) }
    dend_25 { pt3dadd( 407.738, 449.55, 21.0433, 0.2944 ) }
    dend_25 { pt3dadd( 408.853, 449.753, 21.122, 0.311 ) }
    dend_25 { pt3dadd( 409.96, 449.777, 21.2451, 0.3442 ) }
    dend_25 { pt3dadd( 411.038, 449.756, 21.4658, 0.3942 ) }
    dend_25 { pt3dadd( 412.152, 449.84, 21.6612, 0.5418 ) }
    dend_25 { pt3dadd( 413.244, 450.178, 21.8107, 0.5498 ) }
    dend_25 { pt3dadd( 414.364, 450.394, 21.9101, 0.4808 ) }
    dend_25 { pt3dadd( 415.487, 450.586, 21.983, 0.5304 ) }
    dend_25 { pt3dadd( 416.588, 450.81, 22.084, 0.4486 ) }
    dend_25 { pt3dadd( 417.654, 450.614, 22.1777, 0.4532 ) }
    dend_25 { pt3dadd( 418.743, 450.309, 22.2179, 0.3896 ) }
    dend_25 { pt3dadd( 419.875, 450.175, 22.2409, 0.3926 ) }
    dend_25 { pt3dadd( 421.009, 450.028, 22.2711, 0.4986 ) }
    dend_25 { pt3dadd( 422.143, 449.935, 22.2947, 0.4366 ) }
    dend_25 { pt3dadd( 423.24, 449.746, 22.3934, 0.4314 ) }
    dend_25 { pt3dadd( 424.3, 449.376, 22.5966, 0.347 ) }
    dend_25 { pt3dadd( 425.387, 449.034, 22.832, 0.3254 ) }
    dend_25 { pt3dadd( 426.449, 448.614, 23.0831, 0.3162 ) }
    dend_25 { pt3dadd( 427.424, 448.035, 23.3701, 0.3774 ) }
    dend_25 { pt3dadd( 428.202, 447.258, 23.7409, 0.3412 ) }
    dend_25 { pt3dadd( 428.822, 446.353, 24.1818, 0.3136 ) }
    dend_25 { pt3dadd( 429.427, 445.401, 24.5579, 0.2994 ) }
    dend_25 { pt3dadd( 429.842, 444.353, 24.8519, 0.3228 ) }
    dend_25 { pt3dadd( 430.018, 443.238, 25.1826, 0.3536 ) }
    dend_25 { pt3dadd( 430.265, 442.23, 25.662, 0.4724 ) }
    dend_25 { pt3dadd( 430.599, 441.305, 26.2841, 0.3932 ) }
    dend_25 { pt3dadd( 430.78, 440.265, 26.9378, 0.3254 ) }
    dend_25 { pt3dadd( 430.861, 439.17, 27.5564, 0.2746 ) }
    dend_25 { pt3dadd( 430.779, 438.038, 28.0218, 0.2748 ) }
    dend_25 { pt3dadd( 430.587, 436.919, 28.275, 0.2748 ) }
    dend_25 { pt3dadd( 430.748, 435.801, 28.3623, 0.275 ) }
    dend_25 { pt3dadd( 431.019, 434.797, 28.229, 0.2756 ) }
    dend_25 { pt3dadd( 431.583, 433.824, 28.075, 0.2764 ) }
    dend_25 { pt3dadd( 432.057, 432.921, 28.182, 0.2778 ) }
    dend_25 { pt3dadd( 432.256, 431.902, 28.4976, 0.2806 ) }
    dend_25 { pt3dadd( 432.281, 430.771, 28.8504, 0.2858 ) }
    dend_25 { pt3dadd( 432.297, 429.628, 29.155, 0.2952 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_25 { pt3dadd( 432.315, 428.484, 29.3955, 0.3142 ) }
    dend_25 { pt3dadd( 432.44, 427.35, 29.5764, 0.3422 ) }
    dend_25 { pt3dadd( 432.7, 426.252, 29.7256, 0.4278 ) }
    dend_25 { pt3dadd( 432.948, 425.136, 29.7886, 0.4238 ) }
    dend_25 { pt3dadd( 433.138, 424.066, 29.687, 0.5198 ) }
    dend_25 { pt3dadd( 433.353, 422.952, 29.5529, 0.4238 ) }
    dend_25 { pt3dadd( 433.585, 421.837, 29.4944, 0.4322 ) }
    dend_25 { pt3dadd( 434.108, 420.827, 29.5546, 0.2288 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 8/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 373.841, 461.177, 17.285, 0.3362 ) }
    dend_24 { pt3dadd( 374.048, 461.022, 16.8117, 0.3042 ) }
    dend_24 { pt3dadd( 374.69, 460.243, 16.2333, 0.2826 ) }
    dend_24 { pt3dadd( 375.302, 459.3, 15.6952, 0.2892 ) }
    dend_24 { pt3dadd( 376.106, 458.504, 15.2603, 0.3026 ) }
    dend_24 { pt3dadd( 377.07, 457.895, 14.9344, 0.3214 ) }
    dend_24 { pt3dadd( 378.083, 457.393, 14.6296, 0.3868 ) }
    dend_24 { pt3dadd( 378.98, 456.939, 14.2265, 0.3598 ) }
    dend_24 { pt3dadd( 379.844, 456.272, 13.8653, 0.3428 ) }
    dend_24 { pt3dadd( 380.681, 455.534, 13.6878, 0.3794 ) }
    dend_24 { pt3dadd( 381.459, 454.706, 13.577, 0.345 ) }
    dend_24 { pt3dadd( 382.331, 453.972, 13.4956, 0.3208 ) }
    dend_24 { pt3dadd( 383.24, 453.411, 13.5939, 0.3126 ) }
    dend_24 { pt3dadd( 384.083, 452.667, 13.746, 0.347 ) }
    dend_24 { pt3dadd( 384.861, 451.886, 13.7471, 0.3992 ) }
    dend_24 { pt3dadd( 385.705, 451.164, 13.6155, 0.5528 ) }
    dend_24 { pt3dadd( 386.646, 450.52, 13.4828, 0.5624 ) }
    dend_24 { pt3dadd( 387.694, 450.119, 13.4419, 0.5414 ) }
    dend_24 { pt3dadd( 388.651, 449.529, 13.3412, 0.4634 ) }
    dend_24 { pt3dadd( 389.508, 448.781, 13.234, 0.509 ) }
    dend_24 { pt3dadd( 390.294, 447.95, 13.1782, 0.5836 ) }
    dend_24 { pt3dadd( 390.86, 447.021, 13.2522, 0.5418 ) }
    dend_24 { pt3dadd( 391.517, 446.143, 13.3906, 0.4246 ) }
    dend_24 { pt3dadd( 391.834, 445.183, 13.2766, 0.3994 ) }
    dend_24 { pt3dadd( 392.361, 444.309, 12.9742, 0.335 ) }
    dend_24 { pt3dadd( 393.287, 443.655, 12.6762, 0.302 ) }
    dend_24 { pt3dadd( 394.148, 442.924, 12.4944, 0.2784 ) }
    dend_24 { pt3dadd( 394.706, 441.933, 12.3038, 0.2816 ) }
    dend_24 { pt3dadd( 395.555, 441.177, 12.2249, 0.2874 ) }
    dend_24 { pt3dadd( 396.332, 440.359, 12.1541, 0.2994 ) }
    dend_24 { pt3dadd( 397.094, 439.508, 12.158, 0.3152 ) }
    dend_24 { pt3dadd( 397.839, 438.671, 12.1164, 0.3754 ) }
    dend_24 { pt3dadd( 398.819, 438.096, 12.1506, 0.3376 ) }
    dend_24 { pt3dadd( 399.795, 437.567, 12.3035, 0.3068 ) }
    dend_24 { pt3dadd( 400.677, 436.954, 12.5627, 0.2872 ) }
    dend_24 { pt3dadd( 401.478, 436.141, 12.7686, 0.299 ) }
    dend_24 { pt3dadd( 402.278, 435.344, 12.847, 0.3144 ) }
    dend_24 { pt3dadd( 403.172, 434.634, 12.8609, 0.374 ) }
    dend_24 { pt3dadd( 404.018, 433.887, 12.7906, 0.335 ) }
    dend_24 { pt3dadd( 404.615, 432.923, 12.6883, 0.302 ) }
    dend_24 { pt3dadd( 405.03, 431.859, 12.6312, 0.2784 ) }
    dend_24 { pt3dadd( 405.447, 430.797, 12.6056, 0.2818 ) }
    dend_24 { pt3dadd( 405.931, 429.765, 12.6525, 0.2878 ) }
    dend_24 { pt3dadd( 406.296, 428.7, 12.7992, 0.3 ) }
    dend_24 { pt3dadd( 406.541, 427.595, 13.006, 0.3166 ) }
    dend_24 { pt3dadd( 406.859, 426.52, 13.2504, 0.378 ) }
    dend_24 { pt3dadd( 407.464, 425.577, 13.4751, 0.3424 ) }
    dend_24 { pt3dadd( 408.346, 424.854, 13.6341, 0.316 ) }
    dend_24 { pt3dadd( 409.306, 424.231, 13.717, 0.3038 ) }
    dend_24 { pt3dadd( 410.237, 423.571, 13.7273, 0.3308 ) }
    dend_24 { pt3dadd( 411.076, 422.795, 13.6768, 0.3684 ) }
    dend_24 { pt3dadd( 411.879, 421.986, 13.5665, 0.4992 ) }
    dend_24 { pt3dadd( 412.758, 421.279, 13.3825, 0.4454 ) }
    dend_24 { pt3dadd( 413.597, 420.562, 13.1273, 0.4118 ) }
    dend_24 { pt3dadd( 414.325, 419.735, 12.8223, 0.4854 ) }
    dend_24 { pt3dadd( 415.132, 418.983, 12.5385, 0.4188 ) }
    dend_24 { pt3dadd( 416.02, 418.37, 12.4619, 0.3676 ) }
    dend_24 { pt3dadd( 416.855, 417.75, 12.6008, 0.3782 ) }
    dend_24 { pt3dadd( 417.57, 416.913, 12.7565, 0.3428 ) }
    dend_24 { pt3dadd( 418.151, 416.003, 12.7729, 0.3166 ) }
    dend_24 { pt3dadd( 418.896, 415.22, 12.7165, 0.3048 ) }
    dend_24 { pt3dadd( 419.835, 414.627, 12.7402, 0.3328 ) }
    dend_24 { pt3dadd( 420.823, 414.122, 12.8358, 0.372 ) }
    dend_24 { pt3dadd( 421.8, 413.549, 12.9394, 0.5072 ) }
    dend_24 { pt3dadd( 422.77, 412.962, 12.9887, 0.4526 ) }
    dend_24 { pt3dadd( 423.766, 412.418, 12.9774, 0.462 ) }
    dend_24 { pt3dadd( 424.723, 411.8, 12.9301, 0.3996 ) }
    dend_24 { pt3dadd( 425.57, 411.036, 12.8518, 0.4422 ) }
    dend_24 { pt3dadd( 426.38, 410.23, 12.7527, 0.4398 ) }
    dend_24 { pt3dadd( 427.257, 409.514, 12.6332, 0.3722 ) }
    dend_24 { pt3dadd( 428.113, 408.782, 12.5047, 0.3248 ) }
    dend_24 { pt3dadd( 428.807, 407.892, 12.4, 0.3154 ) }
    dend_24 { pt3dadd( 429.292, 406.866, 12.3728, 0.3756 ) }
    dend_24 { pt3dadd( 429.65, 405.821, 12.5012, 0.338 ) }
    dend_24 { pt3dadd( 430.195, 404.903, 12.7817, 0.3078 ) }
    dend_24 { pt3dadd( 430.964, 404.107, 13.046, 0.2888 ) }
    dend_24 { pt3dadd( 431.613, 403.202, 13.2855, 0.302 ) }
    dend_24 { pt3dadd( 432.065, 402.163, 13.5551, 0.32 ) }
    dend_24 { pt3dadd( 432.256, 401.053, 13.808, 0.3844 ) }
    dend_24 { pt3dadd( 432.276, 399.909, 14.027, 0.354 ) }
    dend_24 { pt3dadd( 432.462, 398.802, 14.2771, 0.3386 ) }
    dend_24 { pt3dadd( 432.812, 397.804, 14.6695, 0.3404 ) }
    dend_24 { pt3dadd( 433.228, 396.8, 15.0705, 0.4242 ) }
    dend_24 { pt3dadd( 433.62, 395.729, 15.4106, 0.4176 ) }
    dend_24 { pt3dadd( 433.91, 394.679, 15.7988, 0.5062 ) }
    dend_24 { pt3dadd( 434.069, 393.625, 16.2375, 0.409 ) }
    dend_24 { pt3dadd( 434.116, 392.536, 16.6518, 0.3542 ) }
    dend_24 { pt3dadd( 434.177, 391.41, 16.9394, 0.3302 ) }
    dend_24 { pt3dadd( 434.493, 390.333, 17.0388, 0.3668 ) }
    dend_24 { pt3dadd( 435.042, 389.381, 16.903, 0.498 ) }
    dend_24 { pt3dadd( 435.347, 388.34, 16.586, 0.4354 ) }
    dend_24 { pt3dadd( 435.448, 387.215, 16.1663, 0.4292 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_24 { pt3dadd( 435.572, 386.103, 15.6836, 0.3432 ) }
    dend_24 { pt3dadd( 435.772, 385.02, 15.1672, 0.3174 ) }
    dend_24 { pt3dadd( 436.093, 383.996, 14.6317, 0.3062 ) }
    dend_24 { pt3dadd( 436.496, 382.999, 14.1169, 0.3354 ) }
    dend_24 { pt3dadd( 436.929, 381.968, 13.7679, 0.3778 ) }
    dend_24 { pt3dadd( 437.531, 381.024, 13.6398, 0.5118 ) }
    dend_24 { pt3dadd( 438.207, 380.118, 13.6063, 0.492 ) }
    dend_24 { pt3dadd( 438.9, 379.226, 13.6997, 0.3848 ) }
    dend_24 { pt3dadd( 439.584, 378.375, 13.9728, 0.3 ) }
    dend_24 { pt3dadd( 440.241, 377.471, 14.2026, 0.2748 ) }
    dend_24 { pt3dadd( 440.916, 376.556, 14.4394, 0.275 ) }
    dend_24 { pt3dadd( 441.479, 375.623, 14.7703, 0.2752 ) }
    dend_24 { pt3dadd( 442.061, 374.685, 15.1537, 0.2758 ) }
    dend_24 { pt3dadd( 442.569, 373.676, 15.5082, 0.2768 ) }
    dend_24 { pt3dadd( 442.972, 372.608, 15.7754, 0.2796 ) }
    dend_24 { pt3dadd( 443.35, 371.528, 15.9683, 0.2796 ) }
    dend_24 { pt3dadd( 443.778, 370.467, 16.0857, 0.305 ) }
    dend_24 { pt3dadd( 444.685, 369.806, 16.1552, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 18/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 360.123, 482.36, 27.2278, 0.3392 ) }
    dend_22 { pt3dadd( 360.766, 481.952, 28.7344, 0.2288 ) }
    dend_22 { pt3dadd( 361.641, 482.66, 28.6709, 0.2754 ) }
    dend_22 { pt3dadd( 362.589, 483.178, 28.5558, 0.2762 ) }
    dend_22 { pt3dadd( 363.559, 483.74, 28.4556, 0.2776 ) }
    dend_22 { pt3dadd( 364.493, 484.307, 28.4738, 0.2802 ) }
    dend_22 { pt3dadd( 365.085, 485.278, 28.5653, 0.285 ) }
    dend_22 { pt3dadd( 365.543, 486.279, 28.7731, 0.2938 ) }
    dend_22 { pt3dadd( 366.151, 487.116, 29.1659, 0.3112 ) }
    dend_22 { pt3dadd( 366.853, 487.969, 29.6195, 0.3382 ) }
    dend_22 { pt3dadd( 367.462, 488.923, 30.0656, 0.413 ) }
    dend_22 { pt3dadd( 367.925, 489.939, 30.4609, 0.4328 ) }
    dend_22 { pt3dadd( 368.188, 491.046, 30.7479, 0.3592 ) }
    dend_22 { pt3dadd( 368.66, 492.049, 30.9778, 0.3 ) }
    dend_22 { pt3dadd( 369.312, 492.862, 31.3197, 0.2746 ) }
    dend_22 { pt3dadd( 369.782, 493.812, 31.7355, 0.2746 ) }
    dend_22 { pt3dadd( 370.033, 494.912, 32.146, 0.2744 ) }
    dend_22 { pt3dadd( 370.331, 496.01, 32.5231, 0.2744 ) }
    dend_22 { pt3dadd( 370.762, 497.068, 32.8538, 0.2742 ) }
    dend_22 { pt3dadd( 371.182, 498.131, 33.1458, 0.274 ) }
    dend_22 { pt3dadd( 371.492, 499.23, 33.4242, 0.2736 ) }
    dend_22 { pt3dadd( 371.719, 500.351, 33.7392, 0.2728 ) }
    dend_22 { pt3dadd( 372.211, 501.364, 34.172, 0.2712 ) }
    dend_22 { pt3dadd( 373.213, 501.713, 34.7018, 0.2684 ) }
    dend_22 { pt3dadd( 373.897, 501.229, 35.5272, 0.2626 ) }
    dend_22 { pt3dadd( 373.946, 501.033, 36.7259, 0.2542 ) }
    dend_22 { pt3dadd( 374.147, 500.299, 38.0562, 0.2288 ) }
    dend_22 { pt3dadd( 374.153, 499.557, 41.1827, 0.2288 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 46/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 360.123, 482.36, 27.2278, 0.3392 ) }
    dend_21 { pt3dadd( 359.224, 483.516, 27.5289, 0.385 ) }
    dend_21 { pt3dadd( 358.404, 484.309, 27.8085, 0.525 ) }
    dend_21 { pt3dadd( 357.532, 485.048, 28.0742, 0.5174 ) }
    dend_21 { pt3dadd( 356.739, 485.857, 28.3581, 0.4266 ) }
    dend_21 { pt3dadd( 356.124, 486.728, 28.7571, 0.4032 ) }
    dend_21 { pt3dadd( 355.59, 487.514, 29.3474, 0.342 ) }
    dend_21 { pt3dadd( 354.772, 488.086, 29.9376, 0.3148 ) }
    dend_21 { pt3dadd( 353.861, 488.669, 30.3167, 0.303 ) }
    dend_21 { pt3dadd( 353.041, 489.414, 30.5981, 0.322 ) }
    dend_21 { pt3dadd( 352.279, 490.242, 30.9308, 0.388 ) }
    dend_21 { pt3dadd( 351.481, 491.0, 31.3653, 0.362 ) }
    dend_21 { pt3dadd( 350.518, 491.514, 31.9043, 0.347 ) }
    dend_21 { pt3dadd( 349.462, 491.85, 32.5573, 0.387 ) }
    dend_21 { pt3dadd( 348.382, 492.084, 33.3214, 0.36 ) }
    dend_21 { pt3dadd( 347.318, 492.287, 34.1788, 0.3432 ) }
    dend_21 { pt3dadd( 346.292, 492.427, 35.1308, 0.3802 ) }
    dend_21 { pt3dadd( 345.304, 492.725, 36.1441, 0.3464 ) }
    dend_21 { pt3dadd( 344.665, 493.546, 37.1633, 0.3242 ) }
    dend_21 { pt3dadd( 344.21, 494.44, 38.2354, 0.314 ) }
    dend_21 { pt3dadd( 343.594, 495.209, 39.3431, 0.3734 ) }
    dend_21 { pt3dadd( 342.782, 495.81, 40.4412, 0.3338 ) }
    dend_21 { pt3dadd( 341.808, 496.32, 41.4282, 0.3 ) }
    dend_21 { pt3dadd( 340.809, 496.841, 42.2943, 0.2744 ) }
    dend_21 { pt3dadd( 339.894, 497.42, 43.1259, 0.2744 ) }
    dend_21 { pt3dadd( 338.951, 497.957, 43.9292, 0.2742 ) }
    dend_21 { pt3dadd( 337.942, 498.416, 44.6914, 0.274 ) }
    dend_21 { pt3dadd( 336.843, 498.64, 45.4087, 0.2736 ) }
    dend_21 { pt3dadd( 335.725, 498.673, 46.1154, 0.2728 ) }
    dend_21 { pt3dadd( 334.684, 498.696, 46.8989, 0.2712 ) }
    dend_21 { pt3dadd( 333.612, 498.616, 47.6882, 0.2684 ) }
    dend_21 { pt3dadd( 332.834, 498.244, 48.5808, 0.2626 ) }
    dend_21 { pt3dadd( 331.778, 498.491, 49.3648, 0.2542 ) }
    dend_21 { pt3dadd( 330.765, 499.021, 49.9456, 0.2288 ) }
    dend_21 { pt3dadd( 329.815, 499.644, 50.7732, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 81/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 364.476, 446.453, 15.6173, 0.4628 ) }
    dend_15 { pt3dadd( 365.156, 446.623, 15.7042, 0.358 ) }
    dend_15 { pt3dadd( 366.201, 447.015, 15.7933, 0.3456 ) }
    dend_15 { pt3dadd( 367.166, 447.43, 16.0707, 0.3548 ) }
    dend_15 { pt3dadd( 368.163, 447.702, 16.513, 0.4448 ) }
    dend_15 { pt3dadd( 369.28, 447.826, 16.9784, 0.4866 ) }
    dend_15 { pt3dadd( 370.394, 447.736, 17.4325, 0.4846 ) }
    dend_15 { pt3dadd( 371.482, 447.479, 17.8668, 0.4088 ) }
    dend_15 { pt3dadd( 372.579, 447.183, 18.1875, 0.3888 ) }
    dend_15 { pt3dadd( 373.693, 447.0, 18.3432, 0.4542 ) }
    dend_15 { pt3dadd( 374.818, 446.974, 18.4399, 0.5348 ) }
    dend_15 { pt3dadd( 375.931, 447.029, 18.6019, 0.4244 ) }
    dend_15 { pt3dadd( 377.018, 447.258, 18.7593, 0.3362 ) }
    dend_15 { pt3dadd( 378.081, 447.63, 18.8255, 0.2944 ) }
    dend_15 { pt3dadd( 379.172, 447.889, 18.8826, 0.3122 ) }
    dend_15 { pt3dadd( 380.3, 448.057, 19.0062, 0.34 ) }
    dend_15 { pt3dadd( 381.407, 448.033, 19.1951, 0.4162 ) }
    dend_15 { pt3dadd( 382.452, 447.694, 19.4897, 0.4388 ) }
    dend_15 { pt3dadd( 383.489, 447.353, 19.8773, 0.3704 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_15 { pt3dadd( 384.6, 447.257, 20.2616, 0.3204 ) }
    dend_15 { pt3dadd( 385.74, 447.359, 20.5764, 0.3134 ) }
    dend_15 { pt3dadd( 386.881, 447.415, 20.8216, 0.341 ) }
    dend_15 { pt3dadd( 388.024, 447.419, 21.0207, 0.4254 ) }
    dend_15 { pt3dadd( 389.153, 447.429, 21.2272, 0.4198 ) }
    dend_15 { pt3dadd( 390.278, 447.468, 21.4609, 0.5102 ) }
    dend_15 { pt3dadd( 391.415, 447.553, 21.6802, 0.4174 ) }
    dend_15 { pt3dadd( 392.537, 447.464, 21.8712, 0.365 ) }
    dend_15 { pt3dadd( 393.657, 447.367, 22.0518, 0.3734 ) }
    dend_15 { pt3dadd( 394.798, 447.445, 22.2317, 0.334 ) }
    dend_15 { pt3dadd( 395.934, 447.536, 22.3976, 0.3 ) }
    dend_15 { pt3dadd( 397.068, 447.573, 22.5805, 0.2748 ) }
    dend_15 { pt3dadd( 397.875, 448.065, 22.8502, 0.2748 ) }
    dend_15 { pt3dadd( 398.146, 448.916, 23.4195, 0.2752 ) }
    dend_15 { pt3dadd( 399.028, 449.45, 24.1121, 0.2756 ) }
    dend_15 { pt3dadd( 400.152, 449.414, 24.8129, 0.2766 ) }
    dend_15 { pt3dadd( 401.276, 449.467, 25.5671, 0.2782 ) }
    dend_15 { pt3dadd( 402.204, 450.039, 26.4153, 0.2814 ) }
    dend_15 { pt3dadd( 403.185, 450.435, 27.3804, 0.287 ) }
    dend_15 { pt3dadd( 404.23, 450.78, 28.3811, 0.2988 ) }
    dend_15 { pt3dadd( 404.542, 451.632, 29.5238, 0.3142 ) }
    dend_15 { pt3dadd( 404.087, 451.869, 30.9218, 0.3734 ) }
    dend_15 { pt3dadd( 404.031, 451.912, 32.5175, 0.334 ) }
    dend_15 { pt3dadd( 404.514, 452.01, 34.1202, 0.3 ) }
    dend_15 { pt3dadd( 405.343, 451.565, 35.6166, 0.2748 ) }
    dend_15 { pt3dadd( 406.302, 451.241, 36.8816, 0.275 ) }
    dend_15 { pt3dadd( 407.375, 451.283, 37.8792, 0.2752 ) }
    dend_15 { pt3dadd( 408.25, 450.86, 38.6442, 0.2758 ) }
    dend_15 { pt3dadd( 409.229, 450.338, 39.1952, 0.2768 ) }
    dend_15 { pt3dadd( 410.28, 449.905, 39.6136, 0.2788 ) }
    dend_15 { pt3dadd( 411.067, 449.118, 39.9479, 0.2826 ) }
    dend_15 { pt3dadd( 412.008, 448.506, 40.2217, 0.2892 ) }
    dend_15 { pt3dadd( 413.12, 448.48, 40.4208, 0.3028 ) }
    dend_15 { pt3dadd( 414.18, 448.812, 40.6692, 0.3218 ) }
    dend_15 { pt3dadd( 415.249, 448.88, 41.0197, 0.3876 ) }
    dend_15 { pt3dadd( 416.386, 448.837, 41.309, 0.3598 ) }
    dend_15 { pt3dadd( 417.513, 448.664, 41.519, 0.3504 ) }
    dend_15 { pt3dadd( 418.578, 448.426, 41.8236, 0.3574 ) }
    dend_15 { pt3dadd( 419.617, 447.954, 42.0672, 0.4794 ) }
    dend_15 { pt3dadd( 420.758, 447.917, 42.2408, 0.4062 ) }
    dend_15 { pt3dadd( 421.867, 447.955, 42.4956, 0.3506 ) }
    dend_15 { pt3dadd( 422.965, 447.997, 42.8344, 0.316 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 42/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 364.476, 446.453, 15.6173, 0.4628 ) }
    dend_14 { pt3dadd( 364.968, 445.141, 14.7923, 0.2756 ) }
    dend_14 { pt3dadd( 364.776, 444.061, 14.6592, 0.2766 ) }
    dend_14 { pt3dadd( 364.126, 443.135, 14.4784, 0.2782 ) }
    dend_14 { pt3dadd( 363.782, 442.101, 14.2372, 0.2814 ) }
    dend_14 { pt3dadd( 364.105, 441.064, 13.8807, 0.2874 ) }
    dend_14 { pt3dadd( 364.492, 440.139, 13.3217, 0.2982 ) }
    dend_14 { pt3dadd( 364.513, 439.178, 12.5969, 0.3194 ) }
    dend_14 { pt3dadd( 364.601, 438.079, 11.9255, 0.3532 ) }
    dend_14 { pt3dadd( 365.209, 437.148, 11.3897, 0.4416 ) }
    dend_14 { pt3dadd( 365.856, 436.213, 10.9085, 0.4808 ) }
    dend_14 { pt3dadd( 366.252, 435.271, 10.3391, 0.4736 ) }
    dend_14 { pt3dadd( 366.66, 434.274, 9.7466, 0.3892 ) }
    dend_14 { pt3dadd( 367.091, 433.22, 9.2162, 0.35 ) }
    dend_14 { pt3dadd( 367.439, 432.132, 8.7474, 0.393 ) }
    dend_14 { pt3dadd( 367.692, 431.049, 8.2268, 0.3698 ) }
    dend_14 { pt3dadd( 367.869, 429.964, 7.6661, 0.3686 ) }
    dend_14 { pt3dadd( 367.933, 428.864, 7.0942, 0.3924 ) }
    dend_14 { pt3dadd( 368.181, 427.791, 6.5039, 0.5388 ) }
    dend_14 { pt3dadd( 368.559, 426.75, 5.9056, 0.5426 ) }
    dend_14 { pt3dadd( 369.061, 425.738, 5.357, 0.4754 ) }
    dend_14 { pt3dadd( 369.803, 424.871, 4.913, 0.483 ) }
    dend_14 { pt3dadd( 370.662, 424.132, 4.5205, 0.541 ) }
    dend_14 { pt3dadd( 371.362, 423.315, 4.0854, 0.436 ) }
    dend_14 { pt3dadd( 371.877, 422.367, 3.6379, 0.3574 ) }
    dend_14 { pt3dadd( 372.369, 421.334, 3.3133, 0.3344 ) }
    dend_14 { pt3dadd( 372.845, 420.296, 3.0906, 0.3826 ) }
    dend_14 { pt3dadd( 373.13, 419.189, 2.9539, 0.4896 ) }
    dend_14 { pt3dadd( 373.366, 418.07, 2.8998, 0.6024 ) }
    dend_14 { pt3dadd( 373.611, 416.953, 2.9031, 0.539 ) }
    dend_14 { pt3dadd( 373.832, 415.833, 2.9111, 0.6016 ) }
    dend_14 { pt3dadd( 373.95, 414.707, 2.9285, 0.5302 ) }
    dend_14 { pt3dadd( 373.665, 413.601, 2.9584, 0.6198 ) }
    dend_14 { pt3dadd( 373.263, 412.53, 3.0037, 0.6246 ) }
    dend_14 { pt3dadd( 372.953, 411.429, 3.0694, 0.5012 ) }
    dend_14 { pt3dadd( 372.603, 410.346, 3.1723, 0.4578 ) }
    dend_14 { pt3dadd( 372.044, 409.368, 3.3392, 0.3906 ) }
    dend_14 { pt3dadd( 371.262, 408.554, 3.5528, 0.432 ) }
    dend_14 { pt3dadd( 370.488, 407.73, 3.7566, 0.3898 ) }
    dend_14 { pt3dadd( 370.027, 406.7, 3.9442, 0.4304 ) }
    dend_14 { pt3dadd( 369.805, 405.591, 4.1272, 0.387 ) }
    dend_14 { pt3dadd( 369.446, 404.515, 4.2429, 0.425 ) }
    dend_14 { pt3dadd( 368.954, 403.49, 4.2483, 0.3772 ) }
    dend_14 { pt3dadd( 368.623, 402.405, 4.1756, 0.4058 ) }
    dend_14 { pt3dadd( 368.534, 401.275, 4.0484, 0.3466 ) }
    dend_14 { pt3dadd( 368.518, 400.144, 3.8791, 0.3244 ) }
    dend_14 { pt3dadd( 368.344, 399.025, 3.7081, 0.3148 ) }
    dend_14 { pt3dadd( 368.026, 397.928, 3.6064, 0.3746 ) }
    dend_14 { pt3dadd( 367.623, 396.867, 3.6082, 0.336 ) }
    dend_14 { pt3dadd( 367.096, 395.857, 3.6805, 0.304 ) }
    dend_14 { pt3dadd( 366.539, 394.86, 3.7669, 0.2822 ) }
    dend_14 { pt3dadd( 365.864, 393.947, 3.877, 0.2888 ) }
    dend_14 { pt3dadd( 365.057, 393.141, 4.0317, 0.3004 ) }
    dend_14 { pt3dadd( 364.215, 392.382, 4.2159, 0.3246 ) }
    dend_14 { pt3dadd( 363.249, 391.795, 4.4309, 0.3568 ) }
    dend_14 { pt3dadd( 362.221, 391.305, 4.6361, 0.4782 ) }
    dend_14 { pt3dadd( 361.372, 390.597, 4.8154, 0.404 ) }
    dend_14 { pt3dadd( 360.964, 389.577, 5.0468, 0.3454 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( 360.703, 388.516, 5.3444, 0.3124 ) }
    dend_14 { pt3dadd( 360.17, 387.524, 5.6336, 0.3404 ) }
    dend_14 { pt3dadd( 359.542, 386.569, 5.8645, 0.417 ) }
    dend_14 { pt3dadd( 359.004, 385.562, 6.0367, 0.4402 ) }
    dend_14 { pt3dadd( 358.628, 384.487, 6.1582, 0.373 ) }
    dend_14 { pt3dadd( 358.232, 383.427, 6.2359, 0.3264 ) }
    dend_14 { pt3dadd( 357.542, 382.528, 6.2889, 0.3182 ) }
    dend_14 { pt3dadd( 356.741, 381.715, 6.3408, 0.3808 ) }
    dend_14 { pt3dadd( 355.983, 380.859, 6.4088, 0.3474 ) }
    dend_14 { pt3dadd( 355.222, 380.018, 6.5244, 0.3262 ) }
    dend_14 { pt3dadd( 354.622, 379.078, 6.6848, 0.318 ) }
    dend_14 { pt3dadd( 354.293, 377.991, 6.8354, 0.3808 ) }
    dend_14 { pt3dadd( 353.988, 376.9, 6.9651, 0.3474 ) }
    dend_14 { pt3dadd( 353.41, 375.923, 7.0584, 0.3262 ) }
    dend_14 { pt3dadd( 352.752, 374.993, 7.104, 0.3178 ) }
    dend_14 { pt3dadd( 352.168, 374.019, 7.0813, 0.3802 ) }
    dend_14 { pt3dadd( 351.493, 373.111, 7.0128, 0.3464 ) }
    dend_14 { pt3dadd( 350.808, 372.207, 6.9885, 0.3242 ) }
    dend_14 { pt3dadd( 350.238, 371.227, 7.012, 0.3142 ) }
    dend_14 { pt3dadd( 349.658, 370.243, 7.0312, 0.3734 ) }
    dend_14 { pt3dadd( 349.156, 369.227, 7.0296, 0.3338 ) }
    dend_14 { pt3dadd( 349.097, 368.127, 7.0025, 0.3 ) }
    dend_14 { pt3dadd( 349.421, 367.031, 6.9514, 0.2746 ) }
    dend_14 { pt3dadd( 349.61, 365.926, 6.8528, 0.2746 ) }
    dend_14 { pt3dadd( 349.529, 364.848, 6.6374, 0.2746 ) }
    dend_14 { pt3dadd( 349.542, 363.913, 6.2595, 0.2746 ) }
    dend_14 { pt3dadd( 349.033, 363.243, 5.8631, 0.2746 ) }
    dend_14 { pt3dadd( 347.988, 362.909, 5.6785, 0.2746 ) }
    dend_14 { pt3dadd( 347.234, 362.506, 5.8898, 0.2746 ) }
    dend_14 { pt3dadd( 346.848, 361.709, 6.4064, 0.2746 ) }
    dend_14 { pt3dadd( 346.769, 360.644, 7.0114, 0.2746 ) }
    dend_14 { pt3dadd( 346.249, 359.684, 7.4837, 0.2746 ) }
    dend_14 { pt3dadd( 345.726, 358.676, 7.8611, 0.2746 ) }
    dend_14 { pt3dadd( 345.091, 357.729, 8.118, 0.2746 ) }
    dend_14 { pt3dadd( 344.676, 356.668, 8.247, 0.2746 ) }
    dend_14 { pt3dadd( 344.207, 355.625, 8.2954, 0.2746 ) }
    dend_14 { pt3dadd( 343.664, 354.634, 8.267, 0.2746 ) }
    dend_14 { pt3dadd( 342.979, 353.73, 8.2209, 0.2746 ) }
    dend_14 { pt3dadd( 342.147, 352.965, 8.2671, 0.2748 ) }
    dend_14 { pt3dadd( 341.261, 352.264, 8.3997, 0.275 ) }
    dend_14 { pt3dadd( 340.406, 351.516, 8.587, 0.2752 ) }
    dend_14 { pt3dadd( 339.584, 350.746, 8.8303, 0.276 ) }
    dend_14 { pt3dadd( 338.817, 349.904, 9.0763, 0.277 ) }
    dend_14 { pt3dadd( 338.046, 349.06, 9.2738, 0.2792 ) }
    dend_14 { pt3dadd( 337.235, 348.253, 9.409, 0.283 ) }
    dend_14 { pt3dadd( 336.371, 347.506, 9.4866, 0.2904 ) }
    dend_14 { pt3dadd( 335.376, 346.971, 9.5028, 0.3038 ) }
    dend_14 { pt3dadd( 334.888, 345.956, 9.5221, 0.3294 ) }
    dend_14 { pt3dadd( 334.396, 344.967, 9.6968, 0.373 ) }
    dend_14 { pt3dadd( 333.398, 344.414, 9.9169, 0.4732 ) }
    dend_14 { pt3dadd( 332.41, 343.925, 10.2521, 0.565 ) }
    dend_14 { pt3dadd( 331.801, 343.015, 10.667, 0.5056 ) }
    dend_14 { pt3dadd( 331.15, 342.097, 11.0756, 0.3644 ) }
    dend_14 { pt3dadd( 330.468, 341.177, 11.3803, 0.2542 ) }
    dend_14 { pt3dadd( 329.886, 340.194, 11.7177, 0.2288 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 55/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 358.815, 451.666, 16.9153, 0.4584 ) }
    dend_12 { pt3dadd( 358.911, 451.092, 17.3573, 0.3598 ) }
    dend_12 { pt3dadd( 358.569, 450.1, 17.8247, 0.301 ) }
    dend_12 { pt3dadd( 358.288, 449.036, 18.2919, 0.2764 ) }
    dend_12 { pt3dadd( 358.572, 447.967, 18.7266, 0.278 ) }
    dend_12 { pt3dadd( 359.02, 446.922, 19.0774, 0.2808 ) }
    dend_12 { pt3dadd( 359.516, 445.9, 19.2765, 0.286 ) }
    dend_12 { pt3dadd( 360.096, 444.952, 19.3497, 0.2958 ) }
    dend_12 { pt3dadd( 360.859, 444.124, 19.4591, 0.3148 ) }
    dend_12 { pt3dadd( 361.403, 443.223, 19.7314, 0.344 ) }
    dend_12 { pt3dadd( 361.587, 442.131, 20.0731, 0.4294 ) }
    dend_12 { pt3dadd( 361.624, 440.991, 20.4027, 0.4344 ) }
    dend_12 { pt3dadd( 361.66, 439.847, 20.6973, 0.5024 ) }
    dend_12 { pt3dadd( 361.793, 438.711, 20.9596, 0.5716 ) }
    dend_12 { pt3dadd( 361.951, 437.579, 21.1889, 0.5182 ) }
    dend_12 { pt3dadd( 361.884, 436.441, 21.4224, 0.386 ) }
    dend_12 { pt3dadd( 361.657, 435.34, 21.7268, 0.3024 ) }
    dend_12 { pt3dadd( 361.748, 434.233, 22.1135, 0.2788 ) }
    dend_12 { pt3dadd( 362.383, 433.353, 22.5958, 0.2826 ) }
    dend_12 { pt3dadd( 363.082, 432.481, 23.0906, 0.2894 ) }
    dend_12 { pt3dadd( 363.956, 431.756, 23.4598, 0.3018 ) }
    dend_12 { pt3dadd( 364.976, 431.248, 23.7747, 0.3272 ) }
    dend_12 { pt3dadd( 365.958, 430.778, 24.1568, 0.3616 ) }
    dend_12 { pt3dadd( 366.788, 430.07, 24.5809, 0.487 ) }
    dend_12 { pt3dadd( 367.519, 429.192, 24.9481, 0.4206 ) }
    dend_12 { pt3dadd( 368.299, 428.357, 25.2594, 0.3766 ) }
    dend_12 { pt3dadd( 369.065, 427.507, 25.5435, 0.3666 ) }
    dend_12 { pt3dadd( 369.746, 426.599, 25.8363, 0.46 ) }
    dend_12 { pt3dadd( 370.495, 425.764, 26.1667, 0.5456 ) }
    dend_12 { pt3dadd( 371.326, 424.986, 26.4945, 0.4448 ) }
    dend_12 { pt3dadd( 372.21, 424.273, 26.8361, 0.3734 ) }
    dend_12 { pt3dadd( 372.85, 423.392, 27.2589, 0.3654 ) }
    dend_12 { pt3dadd( 373.098, 422.315, 27.7258, 0.4342 ) }
    dend_12 { pt3dadd( 373.376, 421.223, 28.1688, 0.6132 ) }
    dend_12 { pt3dadd( 373.907, 420.211, 28.5415, 0.696 ) }
    dend_12 { pt3dadd( 374.381, 419.173, 28.8576, 0.6846 ) }
    dend_12 { pt3dadd( 374.567, 418.073, 29.1575, 0.549 ) }
    dend_12 { pt3dadd( 374.208, 417.05, 29.5288, 0.396 ) }
    dend_12 { pt3dadd( 373.712, 416.066, 29.932, 0.3206 ) }
    dend_12 { pt3dadd( 373.246, 415.044, 30.2954, 0.3138 ) }
    dend_12 { pt3dadd( 373.244, 413.908, 30.5827, 0.343 ) }
    dend_12 { pt3dadd( 373.546, 412.809, 30.7846, 0.4218 ) }
    dend_12 { pt3dadd( 373.792, 411.716, 30.9061, 0.4488 ) }
    dend_12 { pt3dadd( 373.783, 410.609, 31.1097, 0.3904 ) }
    dend_12 { pt3dadd( 373.549, 409.497, 31.3362, 0.352 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_12 { pt3dadd( 373.516, 408.378, 31.6025, 0.3976 ) }
    dend_12 { pt3dadd( 373.507, 407.352, 32.0286, 0.3734 ) }
    dend_12 { pt3dadd( 373.459, 406.213, 32.4164, 0.3988 ) }
    dend_12 { pt3dadd( 373.268, 405.102, 32.8073, 0.3338 ) }
    dend_12 { pt3dadd( 372.88, 404.033, 33.1638, 0.3 ) }
    dend_12 { pt3dadd( 372.627, 402.933, 33.5003, 0.2746 ) }
    dend_12 { pt3dadd( 372.621, 401.794, 33.8055, 0.2746 ) }
    dend_12 { pt3dadd( 372.713, 400.668, 34.0939, 0.2746 ) }
    dend_12 { pt3dadd( 372.966, 399.563, 34.3697, 0.2746 ) }
    dend_12 { pt3dadd( 373.32, 398.488, 34.6254, 0.2746 ) }
    dend_12 { pt3dadd( 373.403, 397.355, 34.823, 0.2746 ) }
    dend_12 { pt3dadd( 373.248, 396.222, 34.9849, 0.2746 ) }
    dend_12 { pt3dadd( 372.97, 395.12, 35.1028, 0.2746 ) }
    dend_12 { pt3dadd( 372.471, 394.099, 35.2271, 0.2746 ) }
    dend_12 { pt3dadd( 371.937, 393.12, 35.4281, 0.2748 ) }
    dend_12 { pt3dadd( 371.374, 392.155, 35.6737, 0.275 ) }
    dend_12 { pt3dadd( 370.863, 391.141, 35.8834, 0.2752 ) }
    dend_12 { pt3dadd( 370.56, 390.042, 36.0279, 0.2758 ) }
    dend_12 { pt3dadd( 370.333, 388.928, 36.139, 0.277 ) }
    dend_12 { pt3dadd( 369.893, 387.893, 36.1656, 0.279 ) }
    dend_12 { pt3dadd( 369.205, 387.012, 36.0802, 0.2826 ) }
    dend_12 { pt3dadd( 368.379, 386.221, 35.9951, 0.2896 ) }
    dend_12 { pt3dadd( 367.627, 385.377, 35.908, 0.3022 ) }
    dend_12 { pt3dadd( 366.96, 384.458, 35.7902, 0.328 ) }
    dend_12 { pt3dadd( 366.225, 383.584, 35.6877, 0.363 ) }
    dend_12 { pt3dadd( 365.452, 382.743, 35.6185, 0.4894 ) }
    dend_12 { pt3dadd( 364.563, 382.067, 35.5505, 0.4262 ) }
    dend_12 { pt3dadd( 363.505, 381.823, 35.4964, 0.381 ) }
    dend_12 { pt3dadd( 362.793, 381.467, 35.6434, 0.4044 ) }
    dend_12 { pt3dadd( 362.598, 380.459, 35.9279, 0.3858 ) }
    dend_12 { pt3dadd( 362.301, 379.363, 36.1771, 0.423 ) }
    dend_12 { pt3dadd( 361.718, 378.427, 36.4652, 0.3734 ) }
    dend_12 { pt3dadd( 360.902, 377.663, 36.8001, 0.3988 ) }
    dend_12 { pt3dadd( 360.275, 376.747, 37.0474, 0.334 ) }
    dend_12 { pt3dadd( 359.742, 375.75, 37.2016, 0.3 ) }
    dend_12 { pt3dadd( 359.05, 374.854, 37.3915, 0.2748 ) }
    dend_12 { pt3dadd( 358.364, 374.018, 37.7356, 0.2748 ) }
    dend_12 { pt3dadd( 357.673, 373.319, 38.2701, 0.2752 ) }
    dend_12 { pt3dadd( 356.998, 372.599, 38.9374, 0.2756 ) }
    dend_12 { pt3dadd( 356.635, 371.62, 39.4192, 0.2766 ) }
    dend_12 { pt3dadd( 356.395, 370.513, 39.7757, 0.2782 ) }
    dend_12 { pt3dadd( 355.79, 369.621, 40.1556, 0.2814 ) }
    dend_12 { pt3dadd( 354.797, 369.124, 40.5023, 0.287 ) }
    dend_12 { pt3dadd( 353.927, 368.4, 40.7462, 0.2988 ) }
    dend_12 { pt3dadd( 353.106, 367.605, 40.9562, 0.3142 ) }
    dend_12 { pt3dadd( 352.645, 366.571, 41.2199, 0.3734 ) }
    dend_12 { pt3dadd( 352.369, 365.465, 41.5198, 0.3338 ) }
    dend_12 { pt3dadd( 351.912, 364.543, 41.9829, 0.3 ) }
    dend_12 { pt3dadd( 351.566, 363.722, 42.6516, 0.2746 ) }
    dend_12 { pt3dadd( 351.317, 362.664, 43.3171, 0.2746 ) }
    dend_12 { pt3dadd( 351.016, 361.562, 43.8376, 0.2746 ) }
    dend_12 { pt3dadd( 350.087, 360.915, 44.203, 0.2746 ) }
    dend_12 { pt3dadd( 348.978, 360.633, 44.4298, 0.2746 ) }
    dend_12 { pt3dadd( 347.867, 360.36, 44.5362, 0.2746 ) }
    dend_12 { pt3dadd( 346.947, 359.684, 44.5648, 0.2746 ) }
    dend_12 { pt3dadd( 346.089, 358.928, 44.5676, 0.2746 ) }
    dend_12 { pt3dadd( 345.387, 358.024, 44.5676, 0.2746 ) }
    dend_12 { pt3dadd( 345.025, 356.939, 44.5676, 0.2746 ) }
    dend_12 { pt3dadd( 344.765, 355.825, 44.5676, 0.2744 ) }
    dend_12 { pt3dadd( 344.645, 354.688, 44.5676, 0.2744 ) }
    dend_12 { pt3dadd( 344.685, 353.544, 44.5676, 0.2742 ) }
    dend_12 { pt3dadd( 344.718, 352.401, 44.5676, 0.274 ) }
    dend_12 { pt3dadd( 344.947, 351.28, 44.5676, 0.2736 ) }
    dend_12 { pt3dadd( 345.288, 350.188, 44.5676, 0.2728 ) }
    dend_12 { pt3dadd( 345.422, 349.052, 44.5676, 0.2712 ) }
    dend_12 { pt3dadd( 345.379, 347.909, 44.5676, 0.2684 ) }
    dend_12 { pt3dadd( 345.134, 346.791, 44.5676, 0.2626 ) }
    dend_12 { pt3dadd( 344.782, 345.703, 44.5676, 0.2542 ) }
    dend_12 { pt3dadd( 344.399, 344.625, 44.5676, 0.2288 ) }
    dend_12 { pt3dadd( 343.775, 343.666, 44.5676, 0.2288 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 70/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 358.815, 451.666, 16.9153, 0.4584 ) }
    dend_9 { pt3dadd( 358.558, 452.041, 17.8746, 0.2288 ) }
    dend_9 { pt3dadd( 357.998, 452.969, 18.9886, 0.3242 ) }
    dend_9 { pt3dadd( 357.579, 453.954, 19.4903, 0.3636 ) }
    dend_9 { pt3dadd( 357.223, 454.995, 20.0484, 0.4548 ) }
    dend_9 { pt3dadd( 356.803, 456.051, 20.553, 0.5358 ) }
    dend_9 { pt3dadd( 356.251, 456.99, 21.0406, 0.4266 ) }
    dend_9 { pt3dadd( 355.685, 457.727, 21.6303, 0.3398 ) }
    dend_9 { pt3dadd( 355.742, 458.869, 22.0808, 0.3024 ) }
    dend_9 { pt3dadd( 355.795, 460.007, 22.4543, 0.3212 ) }
    dend_9 { pt3dadd( 355.783, 461.151, 22.7503, 0.3862 ) }
    dend_9 { pt3dadd( 355.515, 462.257, 22.9548, 0.3588 ) }
    dend_9 { pt3dadd( 355.459, 463.391, 23.1748, 0.3408 ) }
    dend_9 { pt3dadd( 355.573, 464.518, 23.427, 0.3758 ) }
    dend_9 { pt3dadd( 355.641, 465.6, 23.8032, 0.3382 ) }
    dend_9 { pt3dadd( 355.588, 466.728, 24.1963, 0.3082 ) }
    dend_9 { pt3dadd( 355.317, 467.834, 24.4894, 0.2898 ) }
    dend_9 { pt3dadd( 355.203, 468.942, 24.8119, 0.3022 ) }
    dend_9 { pt3dadd( 354.998, 469.73, 25.3147, 0.328 ) }
    dend_9 { pt3dadd( 354.776, 470.845, 25.6608, 0.3634 ) }
    dend_9 { pt3dadd( 354.806, 471.948, 25.7604, 0.49 ) }
    dend_9 { pt3dadd( 355.029, 472.94, 25.6227, 0.4272 ) }
    dend_9 { pt3dadd( 355.204, 473.839, 25.2885, 0.3828 ) }
    dend_9 { pt3dadd( 355.179, 474.96, 25.0071, 0.4078 ) }
    dend_9 { pt3dadd( 355.051, 475.92, 25.1069, 0.3922 ) }
    dend_9 { pt3dadd( 354.924, 476.879, 25.5514, 0.4334 ) }
    dend_9 { pt3dadd( 354.888, 477.884, 26.2317, 0.3998 ) }
    dend_9 { pt3dadd( 354.887, 478.931, 27.0256, 0.4128 ) }
    dend_9 { pt3dadd( 354.589, 480.032, 27.7186, 0.5296 ) }
    dend_9 { pt3dadd( 354.079, 481.055, 28.2405, 0.525 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_9 { pt3dadd( 353.757, 482.154, 28.6062, 0.4464 ) }
    dend_9 { pt3dadd( 353.636, 483.291, 28.8803, 0.4112 ) }
    dend_9 { pt3dadd( 353.514, 484.428, 29.1172, 0.4966 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 3/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 364.47, 454.968, 4.584, 0.3756 ) }
    dend_5 { pt3dadd( 364.811, 454.385, 3.7534, 0.2288 ) }
    dend_5 { pt3dadd( 365.399, 453.475, 4.0216, 0.3144 ) }
    dend_5 { pt3dadd( 366.147, 452.656, 4.1741, 0.374 ) }
    dend_5 { pt3dadd( 367.062, 451.979, 4.2748, 0.335 ) }
    dend_5 { pt3dadd( 368.105, 451.523, 4.2919, 0.302 ) }
    dend_5 { pt3dadd( 369.228, 451.361, 4.209, 0.2782 ) }
    dend_5 { pt3dadd( 370.156, 450.89, 3.9231, 0.2814 ) }
    dend_5 { pt3dadd( 370.931, 450.134, 3.5145, 0.2872 ) }
    dend_5 { pt3dadd( 371.758, 449.484, 3.0153, 0.299 ) }
    dend_5 { pt3dadd( 372.782, 449.058, 2.6966, 0.3144 ) }
    dend_5 { pt3dadd( 373.777, 448.505, 2.4912, 0.3742 ) }
    dend_5 { pt3dadd( 374.872, 448.251, 2.3551, 0.3352 ) }
    dend_5 { pt3dadd( 375.98, 447.974, 2.3487, 0.3022 ) }
    dend_5 { pt3dadd( 377.109, 448.044, 2.4855, 0.2796 ) }
    dend_5 { pt3dadd( 378.176, 448.439, 2.7029, 0.2796 ) }
    dend_5 { pt3dadd( 379.096, 447.796, 2.9696, 0.305 ) }
    dend_5 { pt3dadd( 379.897, 447.124, 3.9491, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 21/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 364.47, 454.968, 4.584, 0.3756 ) }
    dend_2 { pt3dadd( 365.087, 455.43, 4.5032, 0.435 ) }
    dend_2 { pt3dadd( 366.155, 455.77, 4.5054, 0.4748 ) }
    dend_2 { pt3dadd( 367.272, 455.625, 4.5844, 0.4314 ) }
    dend_2 { pt3dadd( 368.391, 455.386, 4.6429, 0.4614 ) }
    dend_2 { pt3dadd( 369.526, 455.493, 4.6488, 0.4392 ) }
    dend_2 { pt3dadd( 370.592, 455.89, 4.5977, 0.5468 ) }
    dend_2 { pt3dadd( 371.633, 456.332, 4.4665, 0.4812 ) }
    dend_2 { pt3dadd( 372.691, 456.764, 4.3512, 0.5038 ) }
    dend_2 { pt3dadd( 373.708, 457.143, 4.1202, 0.5322 ) }
    // Section: apic_5, id: apic_5, parent: apic_3 (entry count 31/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 306.346, 375.143, 28.4474, 0.4594 ) }
    apic_5 { pt3dadd( 306.208, 374.773, 28.4648, 0.4034 ) }
    apic_5 { pt3dadd( 305.884, 373.704, 28.5863, 0.4074 ) }
    apic_5 { pt3dadd( 306.035, 372.63, 28.8873, 0.3496 ) }
    apic_5 { pt3dadd( 306.203, 371.557, 29.3087, 0.3304 ) }
    apic_5 { pt3dadd( 306.03, 370.44, 29.7324, 0.3256 ) }
    apic_5 { pt3dadd( 305.53, 369.417, 30.1176, 0.3946 ) }
    apic_5 { pt3dadd( 304.995, 368.439, 30.5248, 0.3742 ) }
    apic_5 { pt3dadd( 304.584, 367.39, 30.9036, 0.3706 ) }
    apic_5 { pt3dadd( 304.414, 366.285, 31.2693, 0.4254 ) }
    apic_5 { pt3dadd( 304.382, 365.149, 31.5857, 0.457 ) }
    apic_5 { pt3dadd( 304.237, 364.018, 31.8324, 0.399 ) }
    apic_5 { pt3dadd( 303.849, 362.942, 32.0272, 0.3992 ) }
    apic_5 { pt3dadd( 303.397, 361.891, 32.1838, 0.3344 ) }
    apic_5 { pt3dadd( 302.943, 360.843, 32.3308, 0.3008 ) }
    apic_5 { pt3dadd( 302.387, 359.854, 32.5083, 0.2762 ) }
    apic_5 { pt3dadd( 301.904, 358.862, 32.7718, 0.2776 ) }
    apic_5 { pt3dadd( 301.632, 357.789, 33.0887, 0.2804 ) }
    apic_5 { pt3dadd( 301.454, 356.673, 33.3796, 0.2854 ) }
    apic_5 { pt3dadd( 301.192, 355.569, 33.5434, 0.2944 ) }
    apic_5 { pt3dadd( 300.996, 354.471, 33.5742, 0.3124 ) }
    apic_5 { pt3dadd( 300.518, 353.439, 33.5773, 0.339 ) }
    apic_5 { pt3dadd( 299.78, 352.581, 33.6148, 0.4218 ) }
    apic_5 { pt3dadd( 298.938, 351.837, 33.7176, 0.413 ) }
    apic_5 { pt3dadd( 298.258, 350.932, 33.8363, 0.4978 ) }
    apic_5 { pt3dadd( 297.867, 349.859, 33.9399, 0.3932 ) }
    apic_5 { pt3dadd( 297.622, 348.745, 34.0074, 0.3254 ) }
    apic_5 { pt3dadd( 297.383, 347.636, 34.0164, 0.2746 ) }
    apic_5 { pt3dadd( 296.998, 346.566, 34.0276, 0.2746 ) }
    apic_5 { pt3dadd( 296.465, 345.561, 34.116, 0.2746 ) }
    apic_5 { pt3dadd( 295.932, 344.558, 34.2807, 0.2746 ) }
    apic_5 { pt3dadd( 295.402, 343.552, 34.5108, 0.2746 ) }
    apic_5 { pt3dadd( 294.896, 342.538, 34.7934, 0.2746 ) }
    apic_5 { pt3dadd( 294.418, 341.51, 35.1126, 0.2746 ) }
    apic_5 { pt3dadd( 293.944, 340.482, 35.4427, 0.2746 ) }
    apic_5 { pt3dadd( 293.478, 339.449, 35.7644, 0.2746 ) }
    apic_5 { pt3dadd( 293.061, 338.391, 36.0601, 0.2746 ) }
    apic_5 { pt3dadd( 292.699, 337.308, 36.3146, 0.2746 ) }
    apic_5 { pt3dadd( 292.339, 336.225, 36.5347, 0.2746 ) }
    apic_5 { pt3dadd( 291.969, 335.145, 36.7262, 0.2746 ) }
    apic_5 { pt3dadd( 291.547, 334.083, 36.8914, 0.2746 ) }
    apic_5 { pt3dadd( 291.051, 333.053, 37.0306, 0.2746 ) }
    apic_5 { pt3dadd( 290.54, 332.029, 37.1591, 0.2746 ) }
    apic_5 { pt3dadd( 290.042, 331.0, 37.2935, 0.2746 ) }
    apic_5 { pt3dadd( 289.632, 329.938, 37.464, 0.2748 ) }
    apic_5 { pt3dadd( 289.376, 328.838, 37.704, 0.275 ) }
    apic_5 { pt3dadd( 289.184, 327.732, 38.01, 0.2754 ) }
    apic_5 { pt3dadd( 288.984, 326.627, 38.3569, 0.276 ) }
    apic_5 { pt3dadd( 288.719, 325.53, 38.7066, 0.2774 ) }
    apic_5 { pt3dadd( 288.321, 324.461, 39.0107, 0.2796 ) }
    apic_5 { pt3dadd( 287.838, 323.424, 39.2482, 0.2842 ) }
    apic_5 { pt3dadd( 287.358, 322.385, 39.4344, 0.292 ) }
    apic_5 { pt3dadd( 286.892, 321.343, 39.5979, 0.3082 ) }
    apic_5 { pt3dadd( 286.476, 320.289, 39.7888, 0.3312 ) }
    apic_5 { pt3dadd( 286.106, 319.233, 40.035, 0.4064 ) }
    apic_5 { pt3dadd( 285.738, 318.176, 40.3136, 0.3898 ) }
    apic_5 { pt3dadd( 285.378, 317.104, 40.5745, 0.429 ) }
    apic_5 { pt3dadd( 285.044, 316.014, 40.7383, 0.3904 ) }
    apic_5 { pt3dadd( 284.734, 314.928, 40.7733, 0.4016 ) }
    apic_5 { pt3dadd( 284.422, 313.841, 40.7196, 0.4776 ) }
    apic_5 { pt3dadd( 284.11, 312.748, 40.6437, 0.5802 ) }
    apic_5 { pt3dadd( 283.798, 311.652, 40.6344, 0.4982 ) }
    apic_5 { pt3dadd( 283.489, 310.566, 40.733, 0.524 ) }
    apic_5 { pt3dadd( 283.164, 309.484, 40.9206, 0.3948 ) }
    apic_5 { pt3dadd( 282.75, 308.429, 41.1552, 0.3284 ) }
    apic_5 { pt3dadd( 282.174, 307.444, 41.3804, 0.28 ) }
    apic_5 { pt3dadd( 281.518, 306.507, 41.5674, 0.2848 ) }
    apic_5 { pt3dadd( 280.867, 305.567, 41.7194, 0.2932 ) }
    apic_5 { pt3dadd( 280.267, 304.596, 41.8589, 0.3104 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    apic_5 { pt3dadd( 279.766, 303.575, 42.021, 0.3356 ) }
    apic_5 { pt3dadd( 279.324, 302.532, 42.2181, 0.414 ) }
    apic_5 { pt3dadd( 278.876, 301.49, 42.4376, 0.405 ) }
    apic_5 { pt3dadd( 278.411, 300.45, 42.6451, 0.4522 ) }
    apic_5 { pt3dadd( 277.913, 299.42, 42.7986, 0.458 ) }
    apic_5 { pt3dadd( 277.402, 298.401, 42.8952, 0.4084 ) }
    apic_5 { pt3dadd( 276.875, 297.387, 42.9775, 0.3804 ) }
    apic_5 { pt3dadd( 276.321, 296.392, 43.106, 0.4748 ) }
    apic_5 { pt3dadd( 275.751, 295.415, 43.3118, 0.398 ) }
    apic_5 { pt3dadd( 275.164, 294.448, 43.5845, 0.3342 ) }
    apic_5 { pt3dadd( 274.496, 293.541, 43.9127, 0.2908 ) }
    apic_5 { pt3dadd( 273.716, 292.731, 44.277, 0.3056 ) }
    apic_5 { pt3dadd( 272.892, 291.965, 44.6508, 0.3268 ) }
    apic_5 { pt3dadd( 272.069, 291.191, 45.0002, 0.398 ) }
    apic_5 { pt3dadd( 271.252, 290.395, 45.2754, 0.3742 ) }
    apic_5 { pt3dadd( 270.454, 289.576, 45.4591, 0.4004 ) }
    apic_5 { pt3dadd( 269.713, 288.707, 45.5868, 0.3366 ) }
    apic_5 { pt3dadd( 269.072, 287.763, 45.6977, 0.3052 ) }
    apic_5 { pt3dadd( 268.497, 286.779, 45.8088, 0.284 ) }
    apic_5 { pt3dadd( 267.988, 285.76, 45.9172, 0.2924 ) }
    apic_5 { pt3dadd( 267.616, 284.68, 46.0096, 0.307 ) }
    apic_5 { pt3dadd( 267.329, 283.572, 46.0782, 0.3368 ) }
    apic_5 { pt3dadd( 267.042, 282.465, 46.123, 0.3806 ) }
    apic_5 { pt3dadd( 266.751, 281.359, 46.1468, 0.517 ) }
    apic_5 { pt3dadd( 266.451, 280.255, 46.1558, 0.5016 ) }
    apic_5 { pt3dadd( 266.14, 279.153, 46.1577, 0.4024 ) }
    apic_5 { pt3dadd( 265.836, 278.052, 46.1577, 0.3324 ) }
    apic_5 { pt3dadd( 265.557, 276.942, 46.158, 0.3366 ) }
    apic_5 { pt3dadd( 265.295, 275.828, 46.158, 0.3802 ) }
    apic_5 { pt3dadd( 265.033, 274.714, 46.1583, 0.5162 ) }
    apic_5 { pt3dadd( 264.762, 273.604, 46.1586, 0.5002 ) }
    apic_5 { pt3dadd( 264.445, 272.504, 46.1591, 0.3996 ) }
    apic_5 { pt3dadd( 264.053, 271.43, 46.16, 0.3276 ) }
    apic_5 { pt3dadd( 263.629, 270.367, 46.1608, 0.3266 ) }
    apic_5 { pt3dadd( 263.202, 269.306, 46.1622, 0.3664 ) }
    apic_5 { pt3dadd( 262.761, 268.251, 46.1639, 0.4672 ) }
    apic_5 { pt3dadd( 262.279, 267.213, 46.1667, 0.5228 ) }
    apic_5 { pt3dadd( 261.768, 266.19, 46.1703, 0.5772 ) }
    apic_5 { pt3dadd( 261.255, 265.167, 46.1754, 0.4568 ) }
    apic_5 { pt3dadd( 260.754, 264.139, 46.1824, 0.3922 ) }
    apic_5 { pt3dadd( 260.294, 263.091, 46.1924, 0.4186 ) }
    apic_5 { pt3dadd( 259.868, 262.03, 46.2064, 0.4432 ) }
    apic_5 { pt3dadd( 259.443, 260.968, 46.2258, 0.3786 ) }
    apic_5 { pt3dadd( 259.026, 259.903, 46.2526, 0.3366 ) }
    apic_5 { pt3dadd( 258.638, 258.827, 46.291, 0.3382 ) }
    apic_5 { pt3dadd( 258.284, 257.739, 46.3448, 0.413 ) }
    apic_5 { pt3dadd( 257.943, 256.647, 46.4195, 0.4328 ) }
    apic_5 { pt3dadd( 257.598, 255.556, 46.5192, 0.3594 ) }
    apic_5 { pt3dadd( 257.203, 254.487, 46.6612, 0.3 ) }
    apic_5 { pt3dadd( 256.68, 253.49, 46.8824, 0.2746 ) }
    apic_5 { pt3dadd( 256.082, 252.551, 47.1862, 0.2746 ) }
    apic_5 { pt3dadd( 255.497, 251.599, 47.5325, 0.2746 ) }
    apic_5 { pt3dadd( 254.968, 250.6, 47.8618, 0.2746 ) }
    apic_5 { pt3dadd( 254.514, 249.551, 48.1208, 0.2746 ) }
    apic_5 { pt3dadd( 254.088, 248.489, 48.2966, 0.2746 ) }
    apic_5 { pt3dadd( 253.669, 247.424, 48.4, 0.2748 ) }
    apic_5 { pt3dadd( 253.287, 246.347, 48.4495, 0.2748 ) }
    apic_5 { pt3dadd( 252.982, 245.245, 48.4672, 0.2752 ) }
    apic_5 { pt3dadd( 252.72, 244.132, 48.4719, 0.2758 ) }
    apic_5 { pt3dadd( 252.458, 243.018, 48.4744, 0.2768 ) }
    apic_5 { pt3dadd( 252.176, 241.909, 48.4781, 0.2786 ) }
    apic_5 { pt3dadd( 251.817, 240.825, 48.4831, 0.282 ) }
    apic_5 { pt3dadd( 251.367, 239.773, 48.4904, 0.2882 ) }
    apic_5 { pt3dadd( 250.885, 238.736, 48.5002, 0.3008 ) }
    apic_5 { pt3dadd( 250.409, 237.696, 48.5139, 0.318 ) }
    apic_5 { pt3dadd( 249.964, 236.642, 48.5332, 0.3808 ) }
    apic_5 { pt3dadd( 249.569, 235.568, 48.5607, 0.3474 ) }
    apic_5 { pt3dadd( 249.201, 234.486, 48.5988, 0.3262 ) }
    apic_5 { pt3dadd( 248.833, 233.402, 48.6492, 0.3178 ) }
    apic_5 { pt3dadd( 248.448, 232.326, 48.7197, 0.3802 ) }
    apic_5 { pt3dadd( 248.012, 231.273, 48.8326, 0.3464 ) }
    apic_5 { pt3dadd( 247.542, 230.244, 48.991, 0.3242 ) }
    apic_5 { pt3dadd( 247.07, 229.213, 49.1747, 0.3142 ) }
    apic_5 { pt3dadd( 246.651, 228.161, 49.348, 0.3734 ) }
    apic_5 { pt3dadd( 246.389, 227.05, 49.4553, 0.334 ) }
    apic_5 { pt3dadd( 246.228, 225.921, 49.4746, 0.3 ) }
    apic_5 { pt3dadd( 246.057, 224.793, 49.4228, 0.2746 ) }
    apic_5 { pt3dadd( 245.827, 223.676, 49.3228, 0.2748 ) }
    apic_5 { pt3dadd( 245.492, 222.585, 49.2016, 0.2748 ) }
    apic_5 { pt3dadd( 245.104, 221.51, 49.0809, 0.275 ) }
    apic_5 { pt3dadd( 244.665, 220.458, 48.9787, 0.2754 ) }
    apic_5 { pt3dadd( 244.064, 219.489, 48.9082, 0.2762 ) }
    apic_5 { pt3dadd( 243.353, 218.594, 48.874, 0.2776 ) }
    apic_5 { pt3dadd( 242.625, 217.711, 48.8746, 0.2802 ) }
    apic_5 { pt3dadd( 241.971, 216.783, 48.9205, 0.2852 ) }
    apic_5 { pt3dadd( 241.552, 215.738, 49.0442, 0.2942 ) }
    apic_5 { pt3dadd( 241.292, 214.646, 49.2444, 0.3118 ) }
    apic_5 { pt3dadd( 241.044, 213.553, 49.4883, 0.3394 ) }
    apic_5 { pt3dadd( 240.807, 212.45, 49.7199, 0.415 ) }
    apic_5 { pt3dadd( 240.605, 211.332, 49.8473, 0.4366 ) }
    apic_5 { pt3dadd( 240.431, 210.227, 49.8352, 0.3664 ) }
    apic_5 { pt3dadd( 240.25, 209.123, 49.7246, 0.3132 ) }
    apic_5 { pt3dadd( 239.997, 208.023, 49.6079, 0.2988 ) }
    apic_5 { pt3dadd( 239.624, 206.952, 49.593, 0.3206 ) }
    apic_5 { pt3dadd( 239.208, 205.907, 49.7101, 0.3558 ) }
    apic_5 { pt3dadd( 238.791, 204.864, 49.9377, 0.4448 ) }
    apic_5 { pt3dadd( 238.339, 203.831, 50.2281, 0.494 ) }
    apic_5 { pt3dadd( 237.799, 202.827, 50.5114, 0.4622 ) }
    apic_5 { pt3dadd( 237.207, 201.847, 50.7466, 0.5428 ) }
    apic_5 { pt3dadd( 236.608, 200.874, 50.93, 0.4724 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    apic_5 { pt3dadd( 236.02, 199.893, 51.0882, 0.4936 ) }
    apic_5 { pt3dadd( 235.466, 198.904, 51.2669, 0.4828 ) }
    apic_5 { pt3dadd( 234.938, 197.912, 51.4864, 0.4774 ) }
    apic_5 { pt3dadd( 234.411, 196.921, 51.7353, 0.396 ) }
    apic_5 { pt3dadd( 233.8, 195.975, 51.9604, 0.3638 ) }
    apic_5 { pt3dadd( 233.028, 195.139, 52.0842, 0.413 ) }
    apic_5 { pt3dadd( 232.199, 194.366, 52.0926, 0.433 ) }
    apic_5 { pt3dadd( 231.344, 193.617, 52.0209, 0.3596 ) }
    apic_5 { pt3dadd( 230.422, 192.949, 51.9201, 0.3006 ) }
    apic_5 { pt3dadd( 229.437, 192.368, 51.8375, 0.2756 ) }
    apic_5 { pt3dadd( 228.423, 191.843, 51.7997, 0.2766 ) }
    apic_5 { pt3dadd( 227.371, 191.395, 51.819, 0.2784 ) }
    apic_5 { pt3dadd( 226.29, 191.018, 51.8935, 0.2818 ) }
    apic_5 { pt3dadd( 225.203, 190.664, 52.0125, 0.2878 ) }
    apic_5 { pt3dadd( 224.117, 190.327, 52.1895, 0.3002 ) }
    apic_5 { pt3dadd( 223.069, 190.053, 52.486, 0.317 ) }
    apic_5 { pt3dadd( 222.072, 189.786, 52.9122, 0.3788 ) }
    apic_5 { pt3dadd( 221.063, 189.417, 53.3607, 0.3436 ) }
    apic_5 { pt3dadd( 220.044, 188.96, 53.6623, 0.3182 ) }
    apic_5 { pt3dadd( 219.267, 188.244, 53.7328, 0.308 ) }
    apic_5 { pt3dadd( 218.884, 187.203, 53.6376, 0.3384 ) }
    apic_5 { pt3dadd( 218.522, 186.129, 53.4626, 0.3836 ) }
    apic_5 { pt3dadd( 217.997, 185.116, 53.2745, 0.5226 ) }
    apic_5 { pt3dadd( 217.39, 184.147, 53.1118, 0.512 ) }
    apic_5 { pt3dadd( 216.763, 183.19, 52.9928, 0.4224 ) }
    apic_5 { pt3dadd( 216.135, 182.235, 52.9113, 0.3658 ) }
    apic_5 { pt3dadd( 215.51, 181.279, 52.8268, 0.417 ) }
    apic_5 { pt3dadd( 214.895, 180.328, 52.7041, 0.44 ) }
    apic_5 { pt3dadd( 214.283, 179.379, 52.547, 0.373 ) }
    apic_5 { pt3dadd( 213.675, 178.418, 52.4006, 0.3248 ) }
    apic_5 { pt3dadd( 213.086, 177.444, 52.3328, 0.3228 ) }
    apic_5 { pt3dadd( 212.512, 176.465, 52.3704, 0.3536 ) }
    apic_5 { pt3dadd( 211.942, 175.487, 52.4961, 0.4724 ) }
    apic_5 { pt3dadd( 211.42, 174.478, 52.6627, 0.3932 ) }
    apic_5 { pt3dadd( 210.972, 173.428, 52.8178, 0.3254 ) }
    apic_5 { pt3dadd( 210.558, 172.362, 52.934, 0.2746 ) }
    apic_5 { pt3dadd( 210.147, 171.293, 53.0043, 0.2748 ) }
    apic_5 { pt3dadd( 209.585, 170.308, 53.0348, 0.275 ) }
    apic_5 { pt3dadd( 208.869, 169.418, 53.0384, 0.2752 ) }
    apic_5 { pt3dadd( 208.122, 168.551, 53.0258, 0.2758 ) }
    apic_5 { pt3dadd( 207.427, 167.644, 53.0048, 0.2768 ) }
    apic_5 { pt3dadd( 206.826, 166.673, 52.9743, 0.2788 ) }
    apic_5 { pt3dadd( 206.277, 165.669, 52.9304, 0.2824 ) }
    apic_5 { pt3dadd( 205.736, 164.661, 52.8696, 0.289 ) }
    apic_5 { pt3dadd( 205.139, 163.687, 52.7887, 0.3024 ) }
    apic_5 { pt3dadd( 204.418, 162.804, 52.6842, 0.321 ) }
    apic_5 { pt3dadd( 203.673, 161.981, 52.5006, 0.386 ) }
    apic_5 { pt3dadd( 202.999, 161.13, 52.2267, 0.3582 ) }
    apic_5 { pt3dadd( 202.395, 160.186, 51.9658, 0.34 ) }
    apic_5 { pt3dadd( 201.938, 159.169, 51.8434, 0.3742 ) }
    apic_5 { pt3dadd( 201.591, 158.14, 51.8966, 0.3352 ) }
    apic_5 { pt3dadd( 201.067, 157.171, 52.0159, 0.3024 ) }
    apic_5 { pt3dadd( 200.39, 156.251, 52.1116, 0.2792 ) }
    apic_5 { pt3dadd( 199.686, 155.354, 52.1214, 0.2832 ) }
    apic_5 { pt3dadd( 198.974, 154.522, 51.9492, 0.2906 ) }
    apic_5 { pt3dadd( 198.223, 153.731, 51.6144, 0.3038 ) }
    apic_5 { pt3dadd( 197.506, 152.865, 51.2392, 0.3308 ) }
    apic_5 { pt3dadd( 196.771, 152.033, 50.841, 0.3682 ) }
    apic_5 { pt3dadd( 195.992, 151.239, 50.449, 0.5002 ) }
    apic_5 { pt3dadd( 195.286, 150.374, 50.2037, 0.4398 ) }
    apic_5 { pt3dadd( 194.772, 149.383, 50.1231, 0.4372 ) }
    apic_5 { pt3dadd( 194.431, 148.304, 50.1203, 0.3588 ) }
    apic_5 { pt3dadd( 194.231, 147.18, 50.1127, 0.341 ) }
    apic_5 { pt3dadd( 194.037, 146.068, 50.024, 0.3762 ) }
    apic_5 { pt3dadd( 193.818, 144.969, 49.8327, 0.339 ) }
    apic_5 { pt3dadd( 193.598, 143.868, 49.5536, 0.3096 ) }
    apic_5 { pt3dadd( 193.378, 142.769, 49.2229, 0.2924 ) }
    apic_5 { pt3dadd( 193.008, 141.702, 48.9258, 0.3074 ) }
    apic_5 { pt3dadd( 192.534, 140.661, 48.7091, 0.3374 ) }
    apic_5 { pt3dadd( 192.052, 139.623, 48.5708, 0.3816 ) }
    apic_5 { pt3dadd( 191.57, 138.586, 48.4938, 0.5188 ) }
    apic_5 { pt3dadd( 190.998, 137.598, 48.4576, 0.5046 ) }
    apic_5 { pt3dadd( 190.334, 136.667, 48.4434, 0.409 ) }
    apic_5 { pt3dadd( 189.648, 135.752, 48.4336, 0.3398 ) }
    apic_5 { pt3dadd( 188.961, 134.836, 48.421, 0.374 ) }
    apic_5 { pt3dadd( 188.182, 134.004, 48.403, 0.335 ) }
    apic_5 { pt3dadd( 187.314, 133.26, 48.3787, 0.302 ) }
    apic_5 { pt3dadd( 186.572, 132.403, 48.3445, 0.2782 ) }
    apic_5 { pt3dadd( 185.96, 131.438, 48.2947, 0.2814 ) }
    apic_5 { pt3dadd( 185.505, 130.393, 48.2241, 0.287 ) }
    apic_5 { pt3dadd( 185.129, 129.313, 48.1303, 0.2988 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 81/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 306.346, 375.143, 28.4474, 0.4594 ) }
    apic_4 { pt3dadd( 305.103, 374.802, 26.9422, 0.2288 ) }
    apic_4 { pt3dadd( 303.983, 374.65, 27.0064, 0.2746 ) }
    apic_4 { pt3dadd( 302.85, 374.583, 27.0553, 0.2746 ) }
    apic_4 { pt3dadd( 301.732, 374.607, 27.2092, 0.2746 ) }
    apic_4 { pt3dadd( 300.597, 374.716, 27.3742, 0.2746 ) }
    apic_4 { pt3dadd( 299.468, 374.897, 27.5146, 0.2746 ) }
    apic_4 { pt3dadd( 298.382, 375.243, 27.6662, 0.2746 ) }
    apic_4 { pt3dadd( 297.387, 375.788, 27.8582, 0.2746 ) }
    apic_4 { pt3dadd( 296.439, 376.416, 28.0574, 0.2746 ) }
    apic_4 { pt3dadd( 295.48, 377.035, 28.2461, 0.2746 ) }
    apic_4 { pt3dadd( 294.409, 377.432, 28.4206, 0.2746 ) }
    apic_4 { pt3dadd( 293.29, 377.658, 28.5737, 0.2746 ) }
    apic_4 { pt3dadd( 292.181, 377.924, 28.7339, 0.2746 ) }
    apic_4 { pt3dadd( 291.132, 378.321, 28.9405, 0.2746 ) }
    apic_4 { pt3dadd( 290.277, 379.06, 29.1494, 0.2746 ) }
    apic_4 { pt3dadd( 289.78, 380.089, 29.3034, 0.2746 ) }
    apic_4 { pt3dadd( 289.151, 381.043, 29.4092, 0.2746 ) }
    apic_4 { pt3dadd( 288.309, 381.817, 29.4714, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    apic_4 { pt3dadd( 287.395, 382.506, 29.4932, 0.2746 ) }
    apic_4 { pt3dadd( 286.422, 383.108, 29.484, 0.2746 ) }
    apic_4 { pt3dadd( 285.506, 383.793, 29.456, 0.2746 ) }
    apic_4 { pt3dadd( 284.656, 384.558, 29.4137, 0.2746 ) }
    apic_4 { pt3dadd( 283.833, 385.353, 29.3558, 0.2746 ) }
    apic_4 { pt3dadd( 283.037, 386.174, 29.2858, 0.2746 ) }
    apic_4 { pt3dadd( 282.283, 387.032, 29.2085, 0.2746 ) }
    apic_4 { pt3dadd( 281.672, 387.914, 29.0024, 0.2746 ) }
    apic_4 { pt3dadd( 281.206, 388.833, 28.698, 0.2748 ) }
    apic_4 { pt3dadd( 280.352, 389.578, 28.5006, 0.275 ) }
    apic_4 { pt3dadd( 279.316, 390.019, 28.4914, 0.2752 ) }
    apic_4 { pt3dadd( 278.306, 390.418, 28.7034, 0.276 ) }
    apic_4 { pt3dadd( 277.221, 390.671, 29.0525, 0.277 ) }
    apic_4 { pt3dadd( 276.143, 390.996, 29.479, 0.2792 ) }
    apic_4 { pt3dadd( 275.093, 391.412, 29.9163, 0.2832 ) }
    apic_4 { pt3dadd( 274.098, 391.907, 30.3447, 0.2906 ) }
    apic_4 { pt3dadd( 273.161, 392.474, 30.7471, 0.3044 ) }
    apic_4 { pt3dadd( 272.249, 393.16, 31.0226, 0.3304 ) }
    apic_4 { pt3dadd( 271.339, 393.843, 31.1584, 0.3748 ) }
    apic_4 { pt3dadd( 270.328, 394.344, 31.1256, 0.4766 ) }
    apic_4 { pt3dadd( 269.294, 394.775, 30.9621, 0.5712 ) }
    apic_4 { pt3dadd( 268.236, 395.18, 30.7429, 0.5174 ) }
    apic_4 { pt3dadd( 267.296, 395.692, 30.4542, 0.3848 ) }
    apic_4 { pt3dadd( 266.657, 396.618, 30.3089, 0.3 ) }
    apic_4 { pt3dadd( 265.985, 397.524, 30.2576, 0.2746 ) }
    apic_4 { pt3dadd( 265.376, 398.492, 30.2134, 0.2746 ) }
    apic_4 { pt3dadd( 264.691, 399.398, 30.1414, 0.2746 ) }
    apic_4 { pt3dadd( 263.861, 400.147, 29.9824, 0.2746 ) }
    apic_4 { pt3dadd( 263.147, 401.011, 29.7592, 0.2746 ) }
    apic_4 { pt3dadd( 262.323, 401.752, 29.4773, 0.2746 ) }
    apic_4 { pt3dadd( 261.34, 402.324, 29.2757, 0.2746 ) }
    apic_4 { pt3dadd( 260.392, 402.914, 29.2132, 0.2746 ) }
    apic_4 { pt3dadd( 259.451, 403.548, 29.1452, 0.2746 ) }
    apic_4 { pt3dadd( 258.536, 404.22, 29.1038, 0.2746 ) }
    apic_4 { pt3dadd( 257.616, 404.878, 29.1617, 0.2746 ) }
    apic_4 { pt3dadd( 256.74, 405.598, 29.2639, 0.2746 ) }
    apic_4 { pt3dadd( 255.845, 406.3, 29.3166, 0.2746 ) }
    apic_4 { pt3dadd( 255.133, 407.106, 29.311, 0.2746 ) }
    apic_4 { pt3dadd( 254.682, 408.143, 29.3264, 0.2746 ) }
    apic_4 { pt3dadd( 253.993, 409.039, 29.4174, 0.2746 ) }
    apic_4 { pt3dadd( 253.095, 409.629, 29.6498, 0.2746 ) }
    apic_4 { pt3dadd( 252.275, 410.094, 30.1137, 0.2746 ) }
    apic_4 { pt3dadd( 251.898, 410.973, 30.6807, 0.2746 ) }
    apic_4 { pt3dadd( 251.674, 411.997, 31.2564, 0.2746 ) }
    apic_4 { pt3dadd( 251.371, 413.027, 31.752, 0.2746 ) }
    apic_4 { pt3dadd( 251.098, 414.105, 31.9696, 0.2746 ) }
    apic_4 { pt3dadd( 250.753, 415.048, 31.794, 0.2746 ) }
    apic_4 { pt3dadd( 250.194, 415.883, 31.3152, 0.2746 ) }
    apic_4 { pt3dadd( 249.529, 416.735, 30.7051, 0.2746 ) }
    apic_4 { pt3dadd( 249.159, 417.771, 30.1216, 0.2746 ) }
    apic_4 { pt3dadd( 248.834, 418.834, 29.5798, 0.2746 ) }
    apic_4 { pt3dadd( 248.287, 419.808, 29.1206, 0.2746 ) }
    apic_4 { pt3dadd( 247.446, 420.549, 28.7994, 0.2748 ) }
    apic_4 { pt3dadd( 246.522, 421.215, 28.6241, 0.2748 ) }
    apic_4 { pt3dadd( 245.608, 421.884, 28.5561, 0.2752 ) }
    apic_4 { pt3dadd( 244.684, 422.54, 28.462, 0.2756 ) }
    apic_4 { pt3dadd( 243.729, 423.16, 28.31, 0.2766 ) }
    apic_4 { pt3dadd( 242.729, 423.672, 28.1691, 0.2784 ) }
    apic_4 { pt3dadd( 241.699, 424.133, 28.0123, 0.2818 ) }
    apic_4 { pt3dadd( 241.05, 424.729, 27.575, 0.2878 ) }
    apic_4 { pt3dadd( 240.604, 425.602, 26.9077, 0.3002 ) }
    apic_4 { pt3dadd( 240.317, 426.54, 26.0722, 0.3166 ) }
    apic_4 { pt3dadd( 239.516, 427.179, 25.2677, 0.3782 ) }
    apic_4 { pt3dadd( 238.493, 427.689, 24.5482, 0.3426 ) }
    apic_4 { pt3dadd( 238.158, 428.497, 23.7329, 0.316 ) }
    apic_4 { pt3dadd( 237.825, 429.356, 22.8614, 0.3056 ) }
    apic_4 { pt3dadd( 237.382, 430.361, 22.112, 0.3266 ) }
    apic_4 { pt3dadd( 237.049, 431.449, 21.5705, 0.3976 ) }
    apic_4 { pt3dadd( 236.639, 432.509, 21.1242, 0.3734 ) }
    apic_4 { pt3dadd( 236.331, 433.599, 20.7413, 0.3988 ) }
    apic_4 { pt3dadd( 236.102, 434.707, 20.4176, 0.3338 ) }
    apic_4 { pt3dadd( 235.776, 435.668, 19.997, 0.3 ) }
    apic_4 { pt3dadd( 235.188, 436.533, 19.7719, 0.2746 ) }
    apic_4 { pt3dadd( 234.92, 437.617, 19.6304, 0.2746 ) }
    apic_4 { pt3dadd( 234.751, 438.746, 19.4688, 0.2746 ) }
    apic_4 { pt3dadd( 233.986, 439.549, 19.2115, 0.2746 ) }
    apic_4 { pt3dadd( 233.131, 439.933, 18.752, 0.2746 ) }
    apic_4 { pt3dadd( 232.929, 440.851, 18.1798, 0.2746 ) }
    apic_4 { pt3dadd( 233.296, 441.677, 17.5537, 0.2746 ) }
    apic_4 { pt3dadd( 232.487, 442.1, 17.0575, 0.2746 ) }
    apic_4 { pt3dadd( 231.77, 442.745, 17.0124, 0.2744 ) }
    apic_4 { pt3dadd( 231.252, 443.17, 17.4687, 0.2744 ) }
    apic_4 { pt3dadd( 230.597, 443.493, 18.2624, 0.2742 ) }
    apic_4 { pt3dadd( 229.913, 444.235, 19.1022, 0.274 ) }
    apic_4 { pt3dadd( 229.15, 445.058, 19.6687, 0.2736 ) }
    apic_4 { pt3dadd( 228.452, 445.803, 19.8338, 0.2728 ) }
    apic_4 { pt3dadd( 227.723, 446.634, 19.764, 0.2712 ) }
    apic_4 { pt3dadd( 226.957, 447.458, 19.571, 0.2684 ) }
    apic_4 { pt3dadd( 226.494, 448.494, 19.3664, 0.2626 ) }
    apic_4 { pt3dadd( 226.39, 449.632, 19.2592, 0.2542 ) }
    apic_4 { pt3dadd( 225.748, 450.547, 19.3539, 0.2288 ) }
    apic_4 { pt3dadd( 224.838, 450.593, 20.461, 0.2288 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 92/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 422.965, 447.997, 42.8344, 0.316 ) }
    dend_17 { pt3dadd( 424.008, 448.067, 43.1796, 0.377 ) }
    dend_17 { pt3dadd( 425.137, 448.041, 43.4874, 0.3408 ) }
    dend_17 { pt3dadd( 426.252, 447.821, 43.724, 0.3124 ) }
    dend_17 { pt3dadd( 427.362, 447.543, 43.8553, 0.2988 ) }
    dend_17 { pt3dadd( 428.489, 447.407, 43.853, 0.3142 ) }
    dend_17 { pt3dadd( 429.617, 447.388, 43.7357, 0.3736 ) }
    dend_17 { pt3dadd( 430.751, 447.466, 43.5753, 0.334 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_17 { pt3dadd( 431.883, 447.629, 43.4347, 0.3004 ) }
    dend_17 { pt3dadd( 433.018, 447.766, 43.3401, 0.2752 ) }
    dend_17 { pt3dadd( 434.157, 447.735, 43.276, 0.2756 ) }
    dend_17 { pt3dadd( 435.266, 447.539, 43.2012, 0.2766 ) }
    dend_17 { pt3dadd( 436.394, 447.41, 43.206, 0.2784 ) }
    dend_17 { pt3dadd( 437.459, 447.389, 43.3852, 0.2818 ) }
    dend_17 { pt3dadd( 438.58, 447.388, 43.6094, 0.2876 ) }
    dend_17 { pt3dadd( 439.722, 447.388, 43.7928, 0.2998 ) }
    dend_17 { pt3dadd( 440.863, 447.31, 43.9194, 0.316 ) }
    dend_17 { pt3dadd( 441.965, 447.018, 43.9729, 0.377 ) }
    dend_17 { pt3dadd( 443.046, 446.654, 43.9424, 0.3408 ) }
    dend_17 { pt3dadd( 444.143, 446.354, 43.8312, 0.3124 ) }
    dend_17 { pt3dadd( 445.252, 446.103, 43.6814, 0.2988 ) }
    dend_17 { pt3dadd( 446.384, 446.004, 43.5879, 0.3142 ) }
    dend_17 { pt3dadd( 447.512, 445.976, 43.5705, 0.3734 ) }
    dend_17 { pt3dadd( 448.631, 445.761, 43.5448, 0.3338 ) }
    dend_17 { pt3dadd( 449.698, 445.381, 43.4512, 0.3 ) }
    dend_17 { pt3dadd( 450.743, 444.984, 43.2718, 0.2746 ) }
    dend_17 { pt3dadd( 451.779, 444.598, 43.0189, 0.2746 ) }
    dend_17 { pt3dadd( 452.753, 444.017, 42.7896, 0.2746 ) }
    dend_17 { pt3dadd( 453.676, 443.344, 42.6367, 0.2746 ) }
    dend_17 { pt3dadd( 454.508, 442.561, 42.5888, 0.2746 ) }
    dend_17 { pt3dadd( 455.295, 441.734, 42.6404, 0.2746 ) }
    dend_17 { pt3dadd( 456.194, 441.154, 42.8702, 0.2746 ) }
    dend_17 { pt3dadd( 457.216, 440.739, 43.1861, 0.2746 ) }
    dend_17 { pt3dadd( 458.265, 440.338, 43.3678, 0.2746 ) }
    dend_17 { pt3dadd( 459.307, 439.952, 43.4104, 0.2746 ) }
    dend_17 { pt3dadd( 460.338, 439.461, 43.4274, 0.2746 ) }
    dend_17 { pt3dadd( 461.403, 439.082, 43.5084, 0.2746 ) }
    dend_17 { pt3dadd( 462.47, 438.805, 43.6814, 0.2746 ) }
    dend_17 { pt3dadd( 463.597, 438.656, 43.8752, 0.2746 ) }
    dend_17 { pt3dadd( 464.737, 438.575, 44.0518, 0.2746 ) }
    dend_17 { pt3dadd( 465.862, 438.364, 44.1932, 0.2746 ) }
    dend_17 { pt3dadd( 466.954, 438.027, 44.2859, 0.2746 ) }
    dend_17 { pt3dadd( 468.082, 437.834, 44.3318, 0.2746 ) }
    dend_17 { pt3dadd( 469.225, 437.796, 44.3475, 0.2746 ) }
    dend_17 { pt3dadd( 470.369, 437.777, 44.3551, 0.2746 ) }
    dend_17 { pt3dadd( 471.505, 437.904, 44.3643, 0.2746 ) }
    dend_17 { pt3dadd( 472.636, 438.087, 44.3786, 0.2746 ) }
    dend_17 { pt3dadd( 473.777, 438.153, 44.3979, 0.2746 ) }
    dend_17 { pt3dadd( 474.909, 437.992, 44.4209, 0.2746 ) }
    dend_17 { pt3dadd( 476.038, 437.803, 44.4436, 0.2746 ) }
    dend_17 { pt3dadd( 477.172, 437.772, 44.5144, 0.2744 ) }
    dend_17 { pt3dadd( 478.303, 437.771, 44.6233, 0.2744 ) }
    dend_17 { pt3dadd( 479.446, 437.726, 44.6886, 0.2742 ) }
    dend_17 { pt3dadd( 480.574, 437.642, 44.6558, 0.274 ) }
    dend_17 { pt3dadd( 481.699, 437.487, 44.5592, 0.2736 ) }
    dend_17 { pt3dadd( 482.784, 437.127, 44.4688, 0.2728 ) }
    dend_17 { pt3dadd( 483.859, 436.756, 44.3741, 0.2712 ) }
    dend_17 { pt3dadd( 484.904, 436.42, 44.2212, 0.2684 ) }
    dend_17 { pt3dadd( 486.047, 436.397, 44.1557, 0.2626 ) }
    dend_17 { pt3dadd( 487.16, 436.139, 44.1916, 0.2542 ) }
    dend_17 { pt3dadd( 488.197, 436.224, 44.4508, 0.2288 ) }
    dend_17 { pt3dadd( 489.058, 436.855, 45.4686, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 54/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 422.965, 447.997, 42.8344, 0.316 ) }
    dend_16 { pt3dadd( 423.389, 446.908, 44.6981, 0.2288 ) }
    dend_16 { pt3dadd( 423.756, 445.964, 46.9666, 0.4056 ) }
    dend_16 { pt3dadd( 424.287, 445.12, 47.9298, 0.5954 ) }
    dend_16 { pt3dadd( 424.988, 444.42, 49.0823, 0.492 ) }
    dend_16 { pt3dadd( 425.673, 443.774, 50.3866, 0.4496 ) }
    dend_16 { pt3dadd( 426.201, 443.43, 51.8745, 0.3338 ) }
    dend_16 { pt3dadd( 426.814, 443.66, 53.4391, 0.3 ) }
    dend_16 { pt3dadd( 427.849, 443.748, 54.8307, 0.2746 ) }
    dend_16 { pt3dadd( 428.931, 444.004, 55.9913, 0.2746 ) }
    dend_16 { pt3dadd( 429.877, 444.635, 56.903, 0.2746 ) }
    dend_16 { pt3dadd( 430.774, 445.299, 57.6635, 0.2746 ) }
    dend_16 { pt3dadd( 431.664, 445.92, 58.3414, 0.2744 ) }
    dend_16 { pt3dadd( 432.542, 446.496, 58.998, 0.2744 ) }
    dend_16 { pt3dadd( 433.481, 447.029, 59.6179, 0.2742 ) }
    dend_16 { pt3dadd( 434.444, 447.553, 60.177, 0.274 ) }
    dend_16 { pt3dadd( 435.446, 448.105, 60.557, 0.2736 ) }
    dend_16 { pt3dadd( 436.439, 448.662, 60.7298, 0.2728 ) }
    dend_16 { pt3dadd( 437.549, 448.76, 60.6936, 0.2712 ) }
    dend_16 { pt3dadd( 438.69, 448.76, 60.5752, 0.2684 ) }
    dend_16 { pt3dadd( 439.834, 448.76, 60.4512, 0.2626 ) }
    dend_16 { pt3dadd( 440.978, 448.76, 60.347, 0.2542 ) }
    dend_16 { pt3dadd( 442.122, 448.76, 60.2812, 0.2288 ) }
    dend_16 { pt3dadd( 443.266, 448.76, 60.2459, 0.2288 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 78/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 353.514, 484.428, 29.1172, 0.4966 ) }
    dend_11 { pt3dadd( 354.04, 484.524, 26.1943, 0.2288 ) }
    dend_11 { pt3dadd( 354.587, 484.622, 23.1683, 0.277 ) }
    dend_11 { pt3dadd( 355.135, 484.722, 21.8603, 0.2792 ) }
    dend_11 { pt3dadd( 355.682, 484.822, 20.3549, 0.283 ) }
    dend_11 { pt3dadd( 356.333, 485.053, 18.801, 0.2902 ) }
    dend_11 { pt3dadd( 357.151, 485.674, 17.4969, 0.3032 ) }
    dend_11 { pt3dadd( 358.002, 486.437, 16.5411, 0.33 ) }
    dend_11 { pt3dadd( 358.92, 487.102, 15.9308, 0.3664 ) }
    dend_11 { pt3dadd( 359.879, 487.714, 15.5088, 0.497 ) }
    dend_11 { pt3dadd( 360.712, 488.417, 15.0791, 0.4338 ) }
    dend_11 { pt3dadd( 361.43, 489.224, 14.5729, 0.4264 ) }
    dend_11 { pt3dadd( 362.2, 490.016, 13.9999, 0.3378 ) }
    dend_11 { pt3dadd( 362.99, 490.779, 13.3585, 0.3074 ) }
    dend_11 { pt3dadd( 363.272, 491.81, 12.7009, 0.288 ) }
    dend_11 { pt3dadd( 363.234, 492.938, 12.0802, 0.3004 ) }
    dend_11 { pt3dadd( 363.366, 494.055, 11.4872, 0.3172 ) }
    dend_11 { pt3dadd( 363.898, 495.044, 10.9172, 0.3792 ) }
    dend_11 { pt3dadd( 364.307, 496.067, 10.2971, 0.3448 ) }
    dend_11 { pt3dadd( 363.954, 497.122, 9.6842, 0.32 ) }
    dend_11 { pt3dadd( 363.701, 498.201, 9.0017, 0.3126 ) }
    dend_11 { pt3dadd( 363.616, 499.27, 8.2209, 0.3408 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_11 { pt3dadd( 363.534, 500.088, 7.2422, 0.4176 ) }
    dend_11 { pt3dadd( 363.154, 501.019, 6.3946, 0.4412 ) }
    dend_11 { pt3dadd( 363.116, 501.558, 5.3325, 0.3748 ) }
    dend_11 { pt3dadd( 362.346, 501.746, 4.3404, 0.33 ) }
    dend_11 { pt3dadd( 361.266, 501.968, 3.5668, 0.3248 ) }
    dend_11 { pt3dadd( 360.227, 502.431, 3.0245, 0.3942 ) }
    dend_11 { pt3dadd( 359.105, 502.338, 2.6706, 0.3672 ) }
    dend_11 { pt3dadd( 358.047, 502.022, 2.3989, 0.387 ) }
    dend_11 { pt3dadd( 357.946, 500.982, 2.1783, 0.3136 ) }
    dend_11 { pt3dadd( 357.318, 500.08, 2.0201, 0.2542 ) }
    dend_11 { pt3dadd( 356.634, 499.163, 1.792, 0.2288 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 11/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 353.514, 484.428, 29.1172, 0.4966 ) }
    dend_10 { pt3dadd( 353.546, 484.913, 29.4025, 0.609 ) }
    dend_10 { pt3dadd( 353.649, 486.0, 29.8166, 0.5834 ) }
    dend_10 { pt3dadd( 353.902, 487.058, 30.326, 0.5272 ) }
    dend_10 { pt3dadd( 354.353, 488.064, 30.8826, 0.4658 ) }
    dend_10 { pt3dadd( 354.873, 489.063, 31.4188, 0.3734 ) }
    dend_10 { pt3dadd( 355.308, 490.114, 31.8802, 0.3262 ) }
    dend_10 { pt3dadd( 355.361, 491.212, 32.2902, 0.3236 ) }
    dend_10 { pt3dadd( 355.048, 492.284, 32.7118, 0.3624 ) }
    dend_10 { pt3dadd( 354.888, 493.38, 33.1419, 0.4526 ) }
    dend_10 { pt3dadd( 354.934, 494.504, 33.5586, 0.5316 ) }
    dend_10 { pt3dadd( 355.094, 495.605, 33.9786, 0.4186 ) }
    dend_10 { pt3dadd( 355.273, 496.678, 34.4224, 0.3254 ) }
    dend_10 { pt3dadd( 355.305, 497.774, 34.795, 0.2746 ) }
    dend_10 { pt3dadd( 355.157, 498.858, 34.9398, 0.2746 ) }
    dend_10 { pt3dadd( 354.986, 499.946, 34.9308, 0.2746 ) }
    dend_10 { pt3dadd( 354.604, 500.988, 34.9294, 0.2746 ) }
    dend_10 { pt3dadd( 354.195, 501.975, 35.0599, 0.2746 ) }
    dend_10 { pt3dadd( 353.99, 503.052, 35.2204, 0.2746 ) }
    dend_10 { pt3dadd( 353.966, 504.181, 35.3242, 0.2746 ) }
    dend_10 { pt3dadd( 354.185, 505.291, 35.4346, 0.2748 ) }
    dend_10 { pt3dadd( 354.258, 506.368, 35.6504, 0.2748 ) }
    dend_10 { pt3dadd( 354.059, 507.461, 35.8896, 0.2752 ) }
    dend_10 { pt3dadd( 354.348, 508.503, 36.09, 0.2756 ) }
    dend_10 { pt3dadd( 354.479, 509.612, 36.2628, 0.2766 ) }
    dend_10 { pt3dadd( 354.37, 510.74, 36.4633, 0.2782 ) }
    dend_10 { pt3dadd( 354.336, 511.877, 36.6537, 0.2814 ) }
    dend_10 { pt3dadd( 354.463, 513.007, 36.8312, 0.287 ) }
    dend_10 { pt3dadd( 354.766, 514.104, 37.0076, 0.2988 ) }
    dend_10 { pt3dadd( 355.082, 515.201, 37.1476, 0.3142 ) }
    dend_10 { pt3dadd( 355.288, 516.321, 37.242, 0.3736 ) }
    dend_10 { pt3dadd( 355.412, 517.455, 37.3512, 0.334 ) }
    dend_10 { pt3dadd( 355.403, 518.564, 37.5547, 0.3002 ) }
    dend_10 { pt3dadd( 355.348, 519.672, 37.833, 0.2752 ) }
    dend_10 { pt3dadd( 355.22, 520.797, 38.117, 0.2756 ) }
    dend_10 { pt3dadd( 355.02, 521.922, 38.3589, 0.2766 ) }
    dend_10 { pt3dadd( 354.753, 523.03, 38.5294, 0.2782 ) }
    dend_10 { pt3dadd( 354.41, 524.102, 38.6058, 0.2814 ) }
    dend_10 { pt3dadd( 353.97, 525.152, 38.6705, 0.287 ) }
    dend_10 { pt3dadd( 353.444, 526.154, 38.8332, 0.2988 ) }
    dend_10 { pt3dadd( 352.938, 527.146, 39.1381, 0.3144 ) }
    dend_10 { pt3dadd( 352.427, 528.113, 39.5886, 0.3738 ) }
    dend_10 { pt3dadd( 351.733, 528.949, 40.147, 0.3348 ) }
    dend_10 { pt3dadd( 350.891, 529.662, 40.7504, 0.3016 ) }
    dend_10 { pt3dadd( 350.025, 530.376, 41.3322, 0.2776 ) }
    dend_10 { pt3dadd( 349.184, 531.131, 41.8648, 0.28 ) }
    dend_10 { pt3dadd( 348.39, 531.938, 42.3408, 0.2848 ) }
    dend_10 { pt3dadd( 347.762, 532.885, 42.7017, 0.2934 ) }
    dend_10 { pt3dadd( 347.609, 534.004, 43.0178, 0.3102 ) }
    dend_10 { pt3dadd( 347.832, 535.049, 43.4496, 0.3364 ) }
    dend_10 { pt3dadd( 348.037, 536.116, 43.958, 0.4096 ) }
    dend_10 { pt3dadd( 348.393, 537.194, 44.436, 0.4266 ) }
    dend_10 { pt3dadd( 348.753, 538.226, 44.9473, 0.3474 ) }
    dend_10 { pt3dadd( 348.549, 539.085, 45.5974, 0.2796 ) }
    dend_10 { pt3dadd( 348.302, 540.19, 46.0373, 0.2288 ) }
    dend_10 { pt3dadd( 348.355, 541.301, 46.2602, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 67/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 373.708, 457.143, 4.1202, 0.5322 ) }
    dend_4 { pt3dadd( 374.11, 457.734, 3.9486, 0.4198 ) }
    dend_4 { pt3dadd( 374.817, 458.63, 3.8385, 0.3278 ) }
    dend_4 { pt3dadd( 375.328, 459.646, 3.8167, 0.2788 ) }
    dend_4 { pt3dadd( 375.899, 460.637, 3.8205, 0.2826 ) }
    dend_4 { pt3dadd( 376.464, 461.628, 3.8369, 0.289 ) }
    dend_4 { pt3dadd( 376.818, 462.712, 3.8664, 0.3026 ) }
    dend_4 { pt3dadd( 376.95, 463.849, 3.8865, 0.3212 ) }
    dend_4 { pt3dadd( 377.12, 464.98, 3.8983, 0.3866 ) }
    dend_4 { pt3dadd( 377.355, 466.099, 3.9039, 0.3592 ) }
    dend_4 { pt3dadd( 377.38, 467.223, 3.9123, 0.3418 ) }
    dend_4 { pt3dadd( 377.026, 468.289, 3.9269, 0.3776 ) }
    dend_4 { pt3dadd( 377.209, 469.411, 3.9461, 0.3416 ) }
    dend_4 { pt3dadd( 377.685, 470.446, 3.9594, 0.3142 ) }
    dend_4 { pt3dadd( 378.203, 471.456, 3.9758, 0.302 ) }
    dend_4 { pt3dadd( 378.575, 472.535, 4.0566, 0.3202 ) }
    dend_4 { pt3dadd( 378.992, 473.574, 4.2637, 0.3848 ) }
    dend_4 { pt3dadd( 379.503, 474.526, 4.6257, 0.3548 ) }
    dend_4 { pt3dadd( 379.536, 475.585, 5.0908, 0.3386 ) }
    dend_4 { pt3dadd( 379.245, 476.647, 5.5192, 0.3478 ) }
    dend_4 { pt3dadd( 379.485, 477.669, 5.9058, 0.402 ) }
    dend_4 { pt3dadd( 380.047, 478.586, 6.4248, 0.5514 ) }
    dend_4 { pt3dadd( 380.615, 479.53, 6.9978, 0.591 ) }
    dend_4 { pt3dadd( 381.117, 480.51, 7.6092, 0.444 ) }
    dend_4 { pt3dadd( 381.725, 480.928, 8.3143, 0.3254 ) }
    dend_4 { pt3dadd( 382.713, 480.372, 9.0372, 0.2746 ) }
    dend_4 { pt3dadd( 383.523, 479.748, 9.8689, 0.2746 ) }
    dend_4 { pt3dadd( 384.206, 479.492, 10.9372, 0.2746 ) }
    dend_4 { pt3dadd( 385.096, 479.624, 12.1064, 0.2746 ) }
    dend_4 { pt3dadd( 385.907, 480.176, 13.2773, 0.2746 ) }
    dend_4 { pt3dadd( 386.645, 480.878, 14.4105, 0.2746 ) }
    dend_4 { pt3dadd( 387.634, 481.209, 15.4465, 0.2746 ) }
    dend_4 { pt3dadd( 388.751, 481.245, 16.3126, 0.2744 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_4 { pt3dadd( 389.875, 481.075, 16.9663, 0.2744 ) }
    dend_4 { pt3dadd( 390.969, 481.248, 17.4189, 0.2742 ) }
    dend_4 { pt3dadd( 391.941, 481.784, 17.9019, 0.274 ) }
    dend_4 { pt3dadd( 392.755, 482.034, 18.6253, 0.2736 ) }
    dend_4 { pt3dadd( 393.653, 481.967, 19.5191, 0.2728 ) }
    dend_4 { pt3dadd( 394.733, 482.199, 20.3945, 0.2712 ) }
    dend_4 { pt3dadd( 395.769, 482.577, 21.2326, 0.2684 ) }
    dend_4 { pt3dadd( 396.868, 482.8, 21.9734, 0.2626 ) }
    dend_4 { pt3dadd( 397.984, 482.897, 22.5906, 0.2542 ) }
    dend_4 { pt3dadd( 399.09, 482.738, 23.0897, 0.2288 ) }
    dend_4 { pt3dadd( 400.221, 482.647, 23.8711, 0.2288 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 11/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 373.708, 457.143, 4.1202, 0.5322 ) }
    dend_3 { pt3dadd( 374.52, 456.883, 2.4654, 0.2288 ) }
    dend_3 { pt3dadd( 375.543, 457.153, 2.2328, 0.2746 ) }
    dend_3 { pt3dadd( 376.378, 457.912, 2.1497, 0.2746 ) }
    dend_3 { pt3dadd( 377.282, 458.608, 2.0904, 0.2746 ) }
    dend_3 { pt3dadd( 377.761, 459.624, 2.0547, 0.2746 ) }
    dend_3 { pt3dadd( 377.892, 460.756, 2.0423, 0.2746 ) }
    dend_3 { pt3dadd( 378.025, 461.893, 2.0522, 0.2746 ) }
    dend_3 { pt3dadd( 378.165, 463.028, 2.0838, 0.2746 ) }
    dend_3 { pt3dadd( 378.276, 464.165, 2.1417, 0.2748 ) }
    dend_3 { pt3dadd( 378.328, 465.307, 2.2247, 0.275 ) }
    dend_3 { pt3dadd( 378.322, 466.451, 2.3119, 0.2752 ) }
    dend_3 { pt3dadd( 378.174, 467.585, 2.3971, 0.2758 ) }
    dend_3 { pt3dadd( 377.511, 468.494, 2.52, 0.277 ) }
    dend_3 { pt3dadd( 376.485, 468.959, 2.6907, 0.2792 ) }
    dend_3 { pt3dadd( 375.44, 469.423, 2.8354, 0.2828 ) }
    dend_3 { pt3dadd( 374.723, 470.313, 2.9413, 0.291 ) }
    dend_3 { pt3dadd( 374.398, 471.409, 3.0145, 0.2994 ) }
    dend_3 { pt3dadd( 373.974, 472.472, 3.0588, 0.3474 ) }
    dend_3 { pt3dadd( 373.974, 473.616, 3.0773, 0.2796 ) }
    dend_3 { pt3dadd( 373.974, 474.76, 3.08, 0.2288 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 32/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 185.129, 129.313, 48.1303, 0.2988 ) }
    apic_7 { pt3dadd( 184.585, 128.431, 48.4655, 0.2288 ) }
    apic_7 { pt3dadd( 183.986, 127.456, 48.6195, 0.2746 ) }
    apic_7 { pt3dadd( 183.387, 126.483, 48.6788, 0.2746 ) }
    apic_7 { pt3dadd( 182.787, 125.508, 48.7547, 0.2746 ) }
    apic_7 { pt3dadd( 182.499, 124.411, 48.8939, 0.2748 ) }
    apic_7 { pt3dadd( 182.277, 123.301, 49.0798, 0.2748 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 39/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 185.129, 129.313, 48.1303, 0.2988 ) }
    apic_6 { pt3dadd( 184.206, 128.707, 48.027, 0.3142 ) }
    apic_6 { pt3dadd( 183.246, 128.138, 47.8097, 0.3734 ) }
    apic_6 { pt3dadd( 182.232, 127.706, 47.4894, 0.3338 ) }
    apic_6 { pt3dadd( 181.302, 127.082, 47.1271, 0.3 ) }
    apic_6 { pt3dadd( 180.326, 126.49, 46.8219, 0.2746 ) }
    apic_6 { pt3dadd( 179.187, 126.384, 46.5724, 0.2746 ) }
    apic_6 { pt3dadd( 178.045, 126.331, 46.3666, 0.2746 ) }
    apic_6 { pt3dadd( 176.931, 126.078, 46.1776, 0.2746 ) }
    apic_6 { pt3dadd( 175.866, 125.688, 45.9544, 0.2746 ) }
    apic_6 { pt3dadd( 174.82, 125.226, 45.7145, 0.2746 ) }
    apic_6 { pt3dadd( 173.808, 124.697, 45.4717, 0.2746 ) }
    apic_6 { pt3dadd( 172.744, 124.325, 45.1388, 0.2746 ) }
    apic_6 { pt3dadd( 171.786, 123.781, 44.7037, 0.2746 ) }
    apic_6 { pt3dadd( 171.162, 122.851, 44.212, 0.2746 ) }
    apic_6 { pt3dadd( 170.538, 121.909, 43.7276, 0.2746 ) }
    apic_6 { pt3dadd( 169.696, 121.243, 43.1472, 0.2746 ) }
    apic_6 { pt3dadd( 168.964, 120.551, 42.4656, 0.2746 ) }
    apic_6 { pt3dadd( 168.304, 119.666, 41.8239, 0.2746 ) }
    apic_6 { pt3dadd( 167.577, 118.822, 41.2532, 0.2746 ) }
    apic_6 { pt3dadd( 166.759, 118.045, 40.78, 0.2746 ) }
    apic_6 { pt3dadd( 165.867, 117.336, 40.4345, 0.2746 ) }
    apic_6 { pt3dadd( 164.918, 116.703, 40.2483, 0.2746 ) }
    apic_6 { pt3dadd( 163.98, 116.083, 40.2279, 0.2746 ) }
    apic_6 { pt3dadd( 163.23, 115.26, 40.2892, 0.2746 ) }
    apic_6 { pt3dadd( 162.59, 114.37, 40.2898, 0.2746 ) }
    apic_6 { pt3dadd( 161.543, 114.043, 40.241, 0.2746 ) }
    apic_6 { pt3dadd( 160.407, 114.026, 40.2181, 0.2746 ) }
    apic_6 { pt3dadd( 159.272, 114.022, 40.2072, 0.2746 ) }
    apic_6 { pt3dadd( 158.136, 114.022, 40.1324, 0.2746 ) }
    apic_6 { pt3dadd( 157.013, 113.988, 39.9837, 0.2746 ) }
    apic_6 { pt3dadd( 155.909, 113.866, 39.7933, 0.2746 ) }
    apic_6 { pt3dadd( 154.827, 113.804, 39.5741, 0.2746 ) }
    apic_6 { pt3dadd( 153.73, 113.916, 39.391, 0.2746 ) }
    apic_6 { pt3dadd( 152.602, 113.931, 39.3655, 0.2746 ) }
    apic_6 { pt3dadd( 151.669, 113.734, 39.6724, 0.2746 ) }
    apic_6 { pt3dadd( 151.039, 113.59, 40.3925, 0.2746 ) }
    apic_6 { pt3dadd( 150.215, 113.564, 41.3146, 0.2746 ) }
    apic_6 { pt3dadd( 149.159, 113.487, 42.2058, 0.2746 ) }
    apic_6 { pt3dadd( 148.071, 113.212, 42.9117, 0.2746 ) }
    apic_6 { pt3dadd( 146.998, 112.818, 43.3672, 0.2746 ) }
    apic_6 { pt3dadd( 145.966, 112.357, 43.535, 0.2746 ) }
    apic_6 { pt3dadd( 144.947, 111.892, 43.4518, 0.2748 ) }
    apic_6 { pt3dadd( 143.89, 111.535, 43.2247, 0.2748 ) }
    apic_6 { pt3dadd( 142.804, 111.238, 42.957, 0.2752 ) }
    apic_6 { pt3dadd( 141.711, 110.919, 42.7504, 0.2758 ) }
    apic_6 { pt3dadd( 140.618, 110.58, 42.6488, 0.2768 ) }
    apic_6 { pt3dadd( 139.536, 110.211, 42.6507, 0.2786 ) }
    apic_6 { pt3dadd( 138.514, 109.705, 42.7493, 0.282 ) }
    apic_6 { pt3dadd( 137.599, 109.193, 43.043, 0.288 ) }
    apic_6 { pt3dadd( 136.761, 108.81, 43.5641, 0.3008 ) }
    apic_6 { pt3dadd( 136.006, 108.203, 43.9407, 0.3178 ) }
    apic_6 { pt3dadd( 135.096, 107.576, 44.1823, 0.3802 ) }
    apic_6 { pt3dadd( 134.03, 107.239, 44.4262, 0.3464 ) }
    apic_6 { pt3dadd( 132.901, 107.12, 44.6508, 0.3242 ) }
    apic_6 { pt3dadd( 131.761, 107.038, 44.8227, 0.3142 ) }
    apic_6 { pt3dadd( 130.624, 106.932, 44.989, 0.3736 ) }
    apic_6 { pt3dadd( 129.497, 106.798, 45.2138, 0.334 ) }
    apic_6 { pt3dadd( 128.369, 106.65, 45.4675, 0.3004 ) }
    apic_6 { pt3dadd( 127.247, 106.471, 45.7374, 0.2752 ) }
    apic_6 { pt3dadd( 126.121, 106.427, 46.0432, 0.2756 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    apic_6 { pt3dadd( 125.028, 106.7, 46.2958, 0.2766 ) }
    apic_6 { pt3dadd( 123.904, 106.887, 46.5102, 0.2784 ) }
    apic_6 { pt3dadd( 122.813, 106.726, 46.8222, 0.2816 ) }
    apic_6 { pt3dadd( 121.732, 107.02, 47.1685, 0.2874 ) }
    apic_6 { pt3dadd( 120.686, 106.733, 47.6297, 0.2994 ) }
    apic_6 { pt3dadd( 119.745, 106.198, 48.2107, 0.3152 ) }
    apic_6 { pt3dadd( 118.753, 105.782, 48.881, 0.3754 ) }
    apic_6 { pt3dadd( 117.664, 105.761, 49.5846, 0.3376 ) }
    apic_6 { pt3dadd( 116.579, 105.729, 50.2785, 0.307 ) }
    apic_6 { pt3dadd( 115.561, 105.332, 50.9412, 0.2872 ) }
    apic_6 { pt3dadd( 114.522, 104.94, 51.5242, 0.299 ) }
    apic_6 { pt3dadd( 113.417, 104.647, 51.9422, 0.3146 ) }
    apic_6 { pt3dadd( 112.308, 104.368, 52.2312, 0.3744 ) }
    apic_6 { pt3dadd( 111.178, 104.185, 52.4336, 0.3358 ) }
    apic_6 { pt3dadd( 110.046, 104.021, 52.5885, 0.3036 ) }
    apic_6 { pt3dadd( 108.912, 103.874, 52.7383, 0.2814 ) }
    apic_6 { pt3dadd( 107.777, 103.747, 52.9192, 0.287 ) }
    apic_6 { pt3dadd( 106.645, 103.625, 53.1516, 0.2988 ) }
    apic_6 { pt3dadd( 105.551, 103.551, 53.5122, 0.3142 ) }
    apic_6 { pt3dadd( 104.455, 103.484, 53.965, 0.3734 ) }
    apic_6 { pt3dadd( 103.314, 103.472, 54.3945, 0.3338 ) }
    apic_6 { pt3dadd( 102.17, 103.472, 54.7803, 0.3 ) }
    apic_6 { pt3dadd( 101.034, 103.472, 55.1502, 0.2746 ) }
    apic_6 { pt3dadd( 99.9704, 103.472, 55.6212, 0.2746 ) }
    apic_6 { pt3dadd( 98.9052, 103.493, 56.149, 0.2746 ) }
    apic_6 { pt3dadd( 97.7874, 103.732, 56.5975, 0.2746 ) }
    apic_6 { pt3dadd( 96.6714, 103.98, 56.9862, 0.2746 ) }
    apic_6 { pt3dadd( 95.5322, 104.08, 57.3362, 0.2746 ) }
    apic_6 { pt3dadd( 94.3889, 104.08, 57.6705, 0.2746 ) }
    apic_6 { pt3dadd( 93.2584, 104.052, 58.06, 0.2746 ) }
    apic_6 { pt3dadd( 92.1858, 103.982, 58.6113, 0.2746 ) }
    apic_6 { pt3dadd( 91.0989, 103.952, 59.3012, 0.2746 ) }
    apic_6 { pt3dadd( 89.9853, 104.02, 60.0676, 0.2746 ) }
    apic_6 { pt3dadd( 88.8865, 104.115, 60.9017, 0.2746 ) }
    apic_6 { pt3dadd( 87.9325, 104.469, 61.8699, 0.2746 ) }
    apic_6 { pt3dadd( 86.9784, 104.824, 62.9233, 0.2746 ) }
    apic_6 { pt3dadd( 86.0245, 105.178, 64.024, 0.2744 ) }
    apic_6 { pt3dadd( 85.0705, 105.533, 65.1507, 0.2744 ) }
    apic_6 { pt3dadd( 84.1165, 105.887, 66.2805, 0.2742 ) }
    apic_6 { pt3dadd( 83.1379, 106.193, 67.3831, 0.274 ) }
    apic_6 { pt3dadd( 82.054, 105.974, 68.3634, 0.2736 ) }
    apic_6 { pt3dadd( 80.9763, 105.696, 69.244, 0.2728 ) }
    apic_6 { pt3dadd( 79.9693, 105.183, 70.0445, 0.2712 ) }
    apic_6 { pt3dadd( 78.9489, 104.712, 70.791, 0.2684 ) }
    apic_6 { pt3dadd( 77.8934, 104.428, 71.535, 0.2626 ) }
    apic_6 { pt3dadd( 76.9071, 104.104, 72.3198, 0.2542 ) }
    apic_6 { pt3dadd( 76.0662, 103.937, 73.2192, 0.2288 ) }
    apic_6 { pt3dadd( 75.0856, 103.472, 75.0232, 0.2288 ) }
    // Section: apic_13, id: apic_13, parent: apic_7 (entry count 48/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 182.277, 123.301, 49.0798, 0.2748 ) }
    apic_13 { pt3dadd( 181.781, 122.81, 50.0553, 0.2288 ) }
    apic_13 { pt3dadd( 180.77, 122.402, 50.6198, 0.2746 ) }
    apic_13 { pt3dadd( 179.656, 122.144, 50.8278, 0.2746 ) }
    apic_13 { pt3dadd( 178.567, 121.811, 51.0185, 0.2746 ) }
    apic_13 { pt3dadd( 177.559, 121.291, 51.2081, 0.2746 ) }
    apic_13 { pt3dadd( 176.622, 120.722, 51.5158, 0.2746 ) }
    apic_13 { pt3dadd( 175.651, 120.353, 51.9767, 0.2746 ) }
    apic_13 { pt3dadd( 174.553, 120.189, 52.4653, 0.2746 ) }
    apic_13 { pt3dadd( 173.432, 120.04, 52.9164, 0.2746 ) }
    apic_13 { pt3dadd( 172.458, 119.499, 53.328, 0.2746 ) }
    apic_13 { pt3dadd( 171.656, 118.736, 53.7606, 0.2746 ) }
    apic_13 { pt3dadd( 170.899, 117.962, 54.2172, 0.2746 ) }
    apic_13 { pt3dadd( 170.223, 117.056, 54.6314, 0.2746 ) }
    apic_13 { pt3dadd( 169.448, 116.238, 54.9744, 0.2746 ) }
    apic_13 { pt3dadd( 168.511, 115.602, 55.2594, 0.2746 ) }
    apic_13 { pt3dadd( 167.601, 114.947, 55.5607, 0.2746 ) }
    apic_13 { pt3dadd( 166.728, 114.235, 55.8281, 0.2746 ) }
    apic_13 { pt3dadd( 165.695, 113.829, 56.0375, 0.2746 ) }
    apic_13 { pt3dadd( 164.608, 113.658, 56.3273, 0.2746 ) }
    apic_13 { pt3dadd( 163.56, 113.641, 56.761, 0.2746 ) }
    apic_13 { pt3dadd( 162.498, 113.694, 57.2802, 0.2746 ) }
    apic_13 { pt3dadd( 161.471, 113.469, 57.8435, 0.2746 ) }
    apic_13 { pt3dadd( 160.444, 113.09, 58.3705, 0.2746 ) }
    apic_13 { pt3dadd( 159.346, 112.99, 58.7219, 0.2746 ) }
    apic_13 { pt3dadd( 158.216, 113.093, 58.858, 0.2746 ) }
    apic_13 { pt3dadd( 157.087, 113.197, 58.8266, 0.2746 ) }
    apic_13 { pt3dadd( 156.028, 113.439, 58.6328, 0.2746 ) }
    apic_13 { pt3dadd( 154.974, 113.786, 58.4228, 0.2746 ) }
    apic_13 { pt3dadd( 153.859, 113.991, 58.2932, 0.2746 ) }
    apic_13 { pt3dadd( 152.733, 114.184, 58.2408, 0.2746 ) }
    apic_13 { pt3dadd( 151.65, 114.54, 58.263, 0.2746 ) }
    apic_13 { pt3dadd( 150.582, 114.954, 58.3534, 0.2746 ) }
    apic_13 { pt3dadd( 149.501, 115.324, 58.5099, 0.2746 ) }
    apic_13 { pt3dadd( 148.401, 115.637, 58.7294, 0.2746 ) }
    apic_13 { pt3dadd( 147.275, 115.8, 59.0374, 0.2746 ) }
    apic_13 { pt3dadd( 146.139, 115.833, 59.4642, 0.2746 ) }
    apic_13 { pt3dadd( 145.015, 115.833, 60.0435, 0.2746 ) }
    apic_13 { pt3dadd( 143.949, 115.833, 60.8356, 0.2746 ) }
    apic_13 { pt3dadd( 142.908, 115.777, 61.8327, 0.2746 ) }
    apic_13 { pt3dadd( 141.902, 115.561, 62.9958, 0.2746 ) }
    apic_13 { pt3dadd( 141.075, 115.403, 64.3591, 0.2744 ) }
    apic_13 { pt3dadd( 140.373, 115.376, 65.8963, 0.2744 ) }
    apic_13 { pt3dadd( 140.046, 115.479, 67.5657, 0.2742 ) }
    apic_13 { pt3dadd( 140.321, 115.703, 69.2684, 0.274 ) }
    apic_13 { pt3dadd( 139.629, 115.984, 70.7372, 0.2736 ) }
    apic_13 { pt3dadd( 138.501, 116.175, 71.794, 0.2728 ) }
    apic_13 { pt3dadd( 137.369, 116.344, 72.5001, 0.2712 ) }
    apic_13 { pt3dadd( 136.304, 116.721, 72.9912, 0.2684 ) }
    apic_13 { pt3dadd( 135.732, 117.674, 73.3631, 0.2626 ) }
    apic_13 { pt3dadd( 135.172, 118.671, 73.5854, 0.2542 ) }
    apic_13 { pt3dadd( 134.404, 119.518, 73.7251, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_13 { pt3dadd( 133.689, 120.412, 73.8867, 0.2288 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 1/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 182.277, 123.301, 49.0798, 0.2748 ) }
    apic_8 { pt3dadd( 182.139, 123.025, 49.2674, 0.275 ) }
    apic_8 { pt3dadd( 181.663, 122.072, 49.5429, 0.2756 ) }
    apic_8 { pt3dadd( 181.814, 120.946, 49.7227, 0.2764 ) }
    apic_8 { pt3dadd( 182.16, 119.864, 49.7552, 0.2778 ) }
    apic_8 { pt3dadd( 182.794, 119.056, 49.5373, 0.2806 ) }
    apic_8 { pt3dadd( 183.381, 118.099, 49.2461, 0.2858 ) }
    apic_8 { pt3dadd( 183.84, 117.052, 48.9863, 0.2952 ) }
    apic_8 { pt3dadd( 184.237, 115.979, 48.7861, 0.3138 ) }
    apic_8 { pt3dadd( 184.632, 114.906, 48.6721, 0.343 ) }
    apic_8 { pt3dadd( 185.029, 113.832, 48.6419, 0.422 ) }
    apic_8 { pt3dadd( 185.472, 112.777, 48.6777, 0.449 ) }
    apic_8 { pt3dadd( 186.05, 111.79, 48.7365, 0.3908 ) }
    apic_8 { pt3dadd( 186.587, 110.802, 48.8684, 0.3528 ) }
    apic_8 { pt3dadd( 187.063, 109.85, 49.1142, 0.399 ) }
    // Section: apic_10, id: apic_10, parent: apic_8 (entry count 16/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 187.063, 109.85, 49.1142, 0.399 ) }
    apic_10 { pt3dadd( 187.818, 109.269, 49.3184, 0.376 ) }
    apic_10 { pt3dadd( 188.712, 108.565, 49.3875, 0.4036 ) }
    apic_10 { pt3dadd( 189.501, 107.918, 49.2075, 0.3426 ) }
    apic_10 { pt3dadd( 190.354, 107.162, 48.9916, 0.316 ) }
    apic_10 { pt3dadd( 191.092, 106.288, 48.7945, 0.3054 ) }
    apic_10 { pt3dadd( 191.818, 105.405, 48.6293, 0.3266 ) }
    apic_10 { pt3dadd( 192.544, 104.521, 48.5134, 0.3964 ) }
    apic_10 { pt3dadd( 193.272, 103.639, 48.4408, 0.3774 ) }
    apic_10 { pt3dadd( 193.851, 102.653, 48.3683, 0.3764 ) }
    apic_10 { pt3dadd( 194.428, 101.666, 48.2597, 0.4374 ) }
    apic_10 { pt3dadd( 195.006, 100.679, 48.1104, 0.473 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 28/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 187.063, 109.85, 49.1142, 0.399 ) }
    apic_9 { pt3dadd( 186.235, 109.957, 50.1547, 0.2288 ) }
    apic_9 { pt3dadd( 185.46, 109.391, 52.0484, 0.2746 ) }
    apic_9 { pt3dadd( 184.719, 108.79, 52.8702, 0.2746 ) }
    apic_9 { pt3dadd( 183.978, 108.189, 53.8266, 0.2746 ) }
    apic_9 { pt3dadd( 183.275, 107.462, 54.8136, 0.2748 ) }
    apic_9 { pt3dadd( 182.804, 106.449, 55.6326, 0.275 ) }
    apic_9 { pt3dadd( 182.537, 105.368, 56.1786, 0.2754 ) }
    apic_9 { pt3dadd( 182.437, 104.356, 56.7442, 0.276 ) }
    apic_9 { pt3dadd( 182.701, 103.255, 57.2188, 0.2774 ) }
    apic_9 { pt3dadd( 182.866, 102.145, 57.6761, 0.2796 ) }
    apic_9 { pt3dadd( 182.68, 101.038, 58.1417, 0.2842 ) }
    apic_9 { pt3dadd( 182.5, 99.9838, 58.69, 0.292 ) }
    apic_9 { pt3dadd( 182.762, 99.0109, 59.2942, 0.308 ) }
    apic_9 { pt3dadd( 182.769, 98.1639, 59.614, 0.3314 ) }
    apic_9 { pt3dadd( 182.874, 97.1495, 60.0463, 0.4052 ) }
    apic_9 { pt3dadd( 183.212, 96.1287, 60.4898, 0.3946 ) }
    apic_9 { pt3dadd( 183.263, 95.2807, 60.6774, 0.4032 ) }
    apic_9 { pt3dadd( 182.963, 94.292, 60.9202, 0.5118 ) }
    apic_9 { pt3dadd( 182.76, 93.1777, 61.1562, 0.492 ) }
    apic_9 { pt3dadd( 182.8, 92.1715, 61.5507, 0.3848 ) }
    apic_9 { pt3dadd( 182.663, 91.103, 61.9864, 0.3 ) }
    apic_9 { pt3dadd( 182.573, 90.0382, 62.2255, 0.2746 ) }
    apic_9 { pt3dadd( 182.358, 89.1782, 62.2247, 0.2746 ) }
    apic_9 { pt3dadd( 181.686, 88.2865, 62.2479, 0.2746 ) }
    apic_9 { pt3dadd( 181.353, 87.3689, 62.501, 0.2746 ) }
    apic_9 { pt3dadd( 181.686, 86.7523, 63.1677, 0.2746 ) }
    apic_9 { pt3dadd( 182.036, 86.0582, 64.1217, 0.2746 ) }
    apic_9 { pt3dadd( 182.023, 85.0772, 65.2056, 0.2746 ) }
    apic_9 { pt3dadd( 181.795, 84.124, 66.3286, 0.2746 ) }
    apic_9 { pt3dadd( 181.867, 83.2265, 67.3053, 0.2746 ) }
    apic_9 { pt3dadd( 182.497, 82.2828, 67.9876, 0.2746 ) }
    apic_9 { pt3dadd( 183.252, 81.4471, 68.4194, 0.2746 ) }
    apic_9 { pt3dadd( 184.223, 80.8576, 68.6596, 0.2746 ) }
    apic_9 { pt3dadd( 184.964, 80.0266, 68.7764, 0.2746 ) }
    apic_9 { pt3dadd( 185.462, 79.0005, 68.8181, 0.2746 ) }
    apic_9 { pt3dadd( 186.152, 78.1042, 68.8288, 0.2746 ) }
    apic_9 { pt3dadd( 187.131, 77.5401, 68.8344, 0.2746 ) }
    apic_9 { pt3dadd( 187.981, 76.7919, 68.8374, 0.2746 ) }
    apic_9 { pt3dadd( 188.427, 75.7536, 68.8422, 0.2746 ) }
    apic_9 { pt3dadd( 189.036, 74.7905, 68.8486, 0.2746 ) }
    apic_9 { pt3dadd( 190.005, 74.2027, 68.8576, 0.2746 ) }
    apic_9 { pt3dadd( 190.924, 73.5237, 68.8702, 0.2746 ) }
    apic_9 { pt3dadd( 191.648, 72.6403, 68.8878, 0.2744 ) }
    apic_9 { pt3dadd( 192.216, 71.6484, 68.9128, 0.2744 ) }
    apic_9 { pt3dadd( 192.748, 70.6355, 68.9464, 0.2742 ) }
    apic_9 { pt3dadd( 193.465, 69.7461, 68.9945, 0.274 ) }
    apic_9 { pt3dadd( 194.216, 68.8829, 69.0645, 0.2736 ) }
    apic_9 { pt3dadd( 194.809, 67.9062, 69.16, 0.2728 ) }
    apic_9 { pt3dadd( 195.255, 66.8528, 69.2877, 0.2712 ) }
    apic_9 { pt3dadd( 195.65, 65.7793, 69.44, 0.2684 ) }
    apic_9 { pt3dadd( 196.131, 64.8309, 69.7533, 0.2626 ) }
    apic_9 { pt3dadd( 196.913, 64.1537, 70.1994, 0.2542 ) }
    apic_9 { pt3dadd( 197.353, 63.0997, 70.5592, 0.2288 ) }
    apic_9 { pt3dadd( 197.717, 62.0156, 71.0828, 0.2288 ) }
    // Section: apic_12, id: apic_12, parent: apic_10 (entry count 83/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 195.006, 100.679, 48.1104, 0.473 ) }
    apic_12 { pt3dadd( 195.459, 100.073, 47.5798, 0.2288 ) }
    apic_12 { pt3dadd( 195.531, 99.0234, 47.1982, 0.3774 ) }
    apic_12 { pt3dadd( 195.567, 97.8824, 47.0582, 0.3414 ) }
    apic_12 { pt3dadd( 195.803, 96.7761, 46.9734, 0.3136 ) }
    apic_12 { pt3dadd( 196.284, 95.7458, 46.9521, 0.301 ) }
    apic_12 { pt3dadd( 196.797, 94.7341, 46.9972, 0.3184 ) }
    apic_12 { pt3dadd( 197.242, 93.691, 47.089, 0.3814 ) }
    apic_12 { pt3dadd( 197.663, 92.632, 47.173, 0.3484 ) }
    apic_12 { pt3dadd( 198.141, 91.6004, 47.1744, 0.328 ) }
    apic_12 { pt3dadd( 198.738, 90.6514, 47.07, 0.3214 ) }
    apic_12 { pt3dadd( 199.438, 89.7834, 46.8807, 0.3866 ) }
    apic_12 { pt3dadd( 200.186, 88.9403, 46.6645, 0.3594 ) }
    apic_12 { pt3dadd( 200.872, 88.0432, 46.5259, 0.342 ) }
    apic_12 { pt3dadd( 201.457, 87.0838, 46.5181, 0.378 ) }
    apic_12 { pt3dadd( 202.009, 86.1287, 46.6393, 0.3422 ) }
    apic_12 { pt3dadd( 202.654, 85.2328, 46.8359, 0.3154 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_12 { pt3dadd( 203.213, 84.3645, 46.8479, 0.304 ) }
    apic_12 { pt3dadd( 203.827, 83.4518, 46.7359, 0.324 ) }
    apic_12 { pt3dadd( 204.575, 82.6014, 46.5688, 0.3916 ) }
    apic_12 { pt3dadd( 205.45, 81.8745, 46.3865, 0.3688 ) }
    apic_12 { pt3dadd( 206.363, 81.1948, 46.27, 0.3594 ) }
    apic_12 { pt3dadd( 207.206, 80.4392, 46.2482, 0.41 ) }
    apic_12 { pt3dadd( 207.876, 79.522, 46.2826, 0.4022 ) }
    apic_12 { pt3dadd( 208.501, 78.5634, 46.3196, 0.4244 ) }
    apic_12 { pt3dadd( 209.159, 77.6294, 46.3263, 0.5162 ) }
    apic_12 { pt3dadd( 209.738, 76.6592, 46.258, 0.67 ) }
    apic_12 { pt3dadd( 210.401, 75.744, 46.1205, 0.5768 ) }
    apic_12 { pt3dadd( 211.188, 74.9783, 46.069, 0.4102 ) }
    apic_12 { pt3dadd( 211.608, 74.0278, 46.1362, 0.3 ) }
    apic_12 { pt3dadd( 212.122, 73.0206, 46.1566, 0.2746 ) }
    apic_12 { pt3dadd( 213.127, 72.5702, 45.9805, 0.2746 ) }
    apic_12 { pt3dadd( 214.093, 72.8258, 45.5322, 0.2746 ) }
    apic_12 { pt3dadd( 214.785, 72.5349, 44.7874, 0.2746 ) }
    apic_12 { pt3dadd( 215.152, 71.5152, 43.9844, 0.2746 ) }
    apic_12 { pt3dadd( 215.54, 70.4566, 43.2426, 0.2746 ) }
    apic_12 { pt3dadd( 215.901, 69.4121, 42.5799, 0.2746 ) }
    apic_12 { pt3dadd( 216.058, 68.3718, 41.9793, 0.2746 ) }
    apic_12 { pt3dadd( 216.135, 67.2752, 41.5974, 0.2746 ) }
    apic_12 { pt3dadd( 216.87, 66.424, 41.4302, 0.2746 ) }
    apic_12 { pt3dadd( 217.709, 65.7008, 41.3921, 0.2746 ) }
    apic_12 { pt3dadd( 218.118, 64.6772, 41.3431, 0.2746 ) }
    apic_12 { pt3dadd( 218.307, 63.5644, 41.3199, 0.2746 ) }
    apic_12 { pt3dadd( 218.691, 62.4867, 41.3479, 0.2746 ) }
    apic_12 { pt3dadd( 219.101, 61.4192, 41.3983, 0.2746 ) }
    apic_12 { pt3dadd( 219.369, 60.3995, 41.5526, 0.2746 ) }
    apic_12 { pt3dadd( 219.021, 59.4583, 41.8603, 0.2746 ) }
    apic_12 { pt3dadd( 218.793, 58.3876, 42.1112, 0.2746 ) }
    apic_12 { pt3dadd( 218.771, 57.2487, 42.2789, 0.2746 ) }
    apic_12 { pt3dadd( 218.796, 56.1055, 42.3982, 0.2746 ) }
    apic_12 { pt3dadd( 219.01, 54.9882, 42.4855, 0.2746 ) }
    apic_12 { pt3dadd( 219.48, 53.9526, 42.5502, 0.2746 ) }
    apic_12 { pt3dadd( 219.67, 52.8461, 42.6182, 0.2746 ) }
    apic_12 { pt3dadd( 219.688, 51.7025, 42.7255, 0.2746 ) }
    apic_12 { pt3dadd( 219.778, 50.5643, 42.891, 0.2746 ) }
    apic_12 { pt3dadd( 220.113, 49.4882, 43.1427, 0.2746 ) }
    apic_12 { pt3dadd( 220.427, 48.3993, 43.4624, 0.2746 ) }
    apic_12 { pt3dadd( 220.967, 47.444, 43.8771, 0.2746 ) }
    apic_12 { pt3dadd( 221.661, 46.6082, 44.3794, 0.2744 ) }
    apic_12 { pt3dadd( 221.953, 45.6234, 44.9655, 0.2744 ) }
    apic_12 { pt3dadd( 222.04, 44.4992, 45.4714, 0.2742 ) }
    apic_12 { pt3dadd( 222.15, 43.3618, 45.8329, 0.274 ) }
    apic_12 { pt3dadd( 222.276, 42.2322, 46.135, 0.2736 ) }
    apic_12 { pt3dadd( 222.476, 41.1074, 46.3333, 0.2728 ) }
    apic_12 { pt3dadd( 222.912, 40.072, 46.3826, 0.2712 ) }
    apic_12 { pt3dadd( 223.135, 38.9543, 46.4268, 0.2684 ) }
    apic_12 { pt3dadd( 223.325, 37.9888, 46.6721, 0.2626 ) }
    apic_12 { pt3dadd( 223.574, 37.0879, 47.0882, 0.2542 ) }
    apic_12 { pt3dadd( 223.802, 36.0408, 47.2399, 0.2288 ) }
    apic_12 { pt3dadd( 223.805, 35.0125, 46.8244, 0.2288 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 53/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 195.006, 100.679, 48.1104, 0.473 ) }
    apic_11 { pt3dadd( 195.361, 100.384, 47.9035, 0.4594 ) }
    apic_11 { pt3dadd( 196.22, 99.6665, 47.6034, 0.3614 ) }
    apic_11 { pt3dadd( 197.08, 98.9496, 47.2382, 0.304 ) }
    apic_11 { pt3dadd( 197.968, 98.2651, 46.8451, 0.282 ) }
    apic_11 { pt3dadd( 198.963, 97.7086, 46.4797, 0.2882 ) }
    apic_11 { pt3dadd( 199.993, 97.2108, 46.153, 0.3008 ) }
    apic_11 { pt3dadd( 201.025, 96.719, 45.8497, 0.3178 ) }
    apic_11 { pt3dadd( 202.062, 96.2391, 45.5459, 0.3804 ) }
    apic_11 { pt3dadd( 203.122, 95.8087, 45.2094, 0.3466 ) }
    apic_11 { pt3dadd( 204.186, 95.4745, 44.7902, 0.3248 ) }
    apic_11 { pt3dadd( 205.211, 95.3834, 44.1798, 0.3152 ) }
    apic_11 { pt3dadd( 206.128, 95.3264, 43.384, 0.3754 ) }
    apic_11 { pt3dadd( 206.885, 95.0582, 42.4427, 0.3376 ) }
    apic_11 { pt3dadd( 207.66, 94.437, 41.5456, 0.3068 ) }
    apic_11 { pt3dadd( 208.36, 93.5643, 40.8951, 0.287 ) }
    apic_11 { pt3dadd( 209.043, 92.6933, 40.5964, 0.2988 ) }
    apic_11 { pt3dadd( 209.899, 91.9563, 40.5583, 0.3142 ) }
    apic_11 { pt3dadd( 210.765, 91.2292, 40.7044, 0.3734 ) }
    apic_11 { pt3dadd( 211.631, 90.4985, 40.9534, 0.334 ) }
    apic_11 { pt3dadd( 212.489, 89.7489, 41.2051, 0.3 ) }
    apic_11 { pt3dadd( 213.335, 88.9793, 41.3888, 0.2746 ) }
    apic_11 { pt3dadd( 214.182, 88.2097, 41.5061, 0.2748 ) }
    apic_11 { pt3dadd( 215.03, 87.4423, 41.5814, 0.2748 ) }
    apic_11 { pt3dadd( 215.888, 86.6859, 41.6324, 0.2752 ) }
    apic_11 { pt3dadd( 216.758, 85.9435, 41.6777, 0.2756 ) }
    apic_11 { pt3dadd( 217.629, 85.2009, 41.734, 0.2766 ) }
    apic_11 { pt3dadd( 218.522, 84.4899, 41.8088, 0.2784 ) }
    apic_11 { pt3dadd( 219.514, 83.9313, 41.9045, 0.2816 ) }
    apic_11 { pt3dadd( 220.549, 83.4784, 42.047, 0.2874 ) }
    apic_11 { pt3dadd( 221.509, 82.936, 42.308, 0.2994 ) }
    apic_11 { pt3dadd( 221.905, 82.0237, 42.6208, 0.3152 ) }
    apic_11 { pt3dadd( 222.299, 80.9803, 42.8602, 0.3754 ) }
    apic_11 { pt3dadd( 223.121, 80.2323, 43.1186, 0.3376 ) }
    apic_11 { pt3dadd( 223.93, 79.6551, 43.5677, 0.3068 ) }
    apic_11 { pt3dadd( 224.939, 79.2858, 44.0905, 0.287 ) }
    apic_11 { pt3dadd( 226.044, 79.0224, 44.5043, 0.2988 ) }
    apic_11 { pt3dadd( 226.864, 78.2653, 44.9282, 0.3142 ) }
    apic_11 { pt3dadd( 227.328, 77.242, 45.3681, 0.3736 ) }
    apic_11 { pt3dadd( 228.054, 76.3702, 45.7764, 0.334 ) }
    apic_11 { pt3dadd( 228.946, 75.7338, 46.2193, 0.3002 ) }
    apic_11 { pt3dadd( 229.846, 75.0299, 46.6116, 0.2752 ) }
    apic_11 { pt3dadd( 230.739, 74.3156, 46.97, 0.2756 ) }
    apic_11 { pt3dadd( 231.603, 73.5729, 47.341, 0.2766 ) }
    apic_11 { pt3dadd( 232.445, 72.8167, 47.7526, 0.2782 ) }
    apic_11 { pt3dadd( 233.465, 72.4007, 48.2485, 0.2814 ) }
    apic_11 { pt3dadd( 234.512, 72.0751, 48.8141, 0.287 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_11 { pt3dadd( 235.513, 71.8195, 49.4911, 0.2988 ) }
    apic_11 { pt3dadd( 236.525, 71.5422, 50.2183, 0.3142 ) }
    apic_11 { pt3dadd( 237.562, 71.0655, 50.8018, 0.3734 ) }
    apic_11 { pt3dadd( 238.6, 70.5833, 51.2646, 0.3338 ) }
    apic_11 { pt3dadd( 239.712, 70.3268, 51.6589, 0.3 ) }
    apic_11 { pt3dadd( 240.817, 70.0456, 52.0187, 0.2746 ) }
    apic_11 { pt3dadd( 241.824, 69.5313, 52.355, 0.2746 ) }
    apic_11 { pt3dadd( 242.663, 69.2337, 52.8864, 0.2746 ) }
    apic_11 { pt3dadd( 243.672, 69.3438, 53.5139, 0.2746 ) }
    apic_11 { pt3dadd( 244.8, 69.4479, 54.0613, 0.2746 ) }
    apic_11 { pt3dadd( 245.697, 68.9196, 54.6221, 0.2746 ) }
    apic_11 { pt3dadd( 246.445, 68.1483, 55.2308, 0.2746 ) }
    apic_11 { pt3dadd( 247.444, 67.7208, 55.6713, 0.2744 ) }
    apic_11 { pt3dadd( 248.536, 67.4477, 56.0669, 0.2744 ) }
    apic_11 { pt3dadd( 249.525, 67.4626, 56.6054, 0.2742 ) }
    apic_11 { pt3dadd( 250.6, 67.3535, 57.1838, 0.274 ) }
    apic_11 { pt3dadd( 251.69, 67.0195, 57.6618, 0.2736 ) }
    apic_11 { pt3dadd( 252.79, 66.7286, 58.0779, 0.2728 ) }
    apic_11 { pt3dadd( 253.879, 66.4555, 58.4903, 0.2712 ) }
    apic_11 { pt3dadd( 254.991, 66.2111, 58.833, 0.2684 ) }
    apic_11 { pt3dadd( 256.107, 65.9852, 59.0358, 0.2626 ) }
    apic_11 { pt3dadd( 257.201, 66.1948, 59.2693, 0.2542 ) }
    apic_11 { pt3dadd( 258.324, 66.3616, 59.4896, 0.2288 ) }
    apic_11 { pt3dadd( 259.464, 66.4651, 59.7996, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_250, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_250 = new SectionList()
    soma_0 ModelViewParmSubset_250.append()
    axon_0 ModelViewParmSubset_250.append()
    axon_1 ModelViewParmSubset_250.append()

    // Group: {name=ModelViewParmSubset_251, groups=[], sections=[apic_0, dend_26, dend_19, dend_18, dend_7, dend_0, apic_14, apic_1, dend_28, dend_27, dend_23, dend_20, dend_13, dend_8, dend_6, dend_1, apic_3, apic_2, dend_25, dend_24, dend_22, dend_21, dend_15, dend_14, dend_12, dend_9, dend_5, dend_2, apic_5, apic_4, dend_17, dend_16, dend_11, dend_10, dend_4, dend_3, apic_7, apic_6, apic_13, apic_8, apic_10, apic_9, apic_12, apic_11]}
    ModelViewParmSubset_251 = new SectionList()
    apic_0 ModelViewParmSubset_251.append()
    dend_26 ModelViewParmSubset_251.append()
    dend_19 ModelViewParmSubset_251.append()
    dend_18 ModelViewParmSubset_251.append()
    dend_7 ModelViewParmSubset_251.append()
    dend_0 ModelViewParmSubset_251.append()
    apic_14 ModelViewParmSubset_251.append()
    apic_1 ModelViewParmSubset_251.append()
    dend_28 ModelViewParmSubset_251.append()
    dend_27 ModelViewParmSubset_251.append()
    dend_23 ModelViewParmSubset_251.append()
    dend_20 ModelViewParmSubset_251.append()
    dend_13 ModelViewParmSubset_251.append()
    dend_8 ModelViewParmSubset_251.append()
    dend_6 ModelViewParmSubset_251.append()
    dend_1 ModelViewParmSubset_251.append()
    apic_3 ModelViewParmSubset_251.append()
    apic_2 ModelViewParmSubset_251.append()
    dend_25 ModelViewParmSubset_251.append()
    dend_24 ModelViewParmSubset_251.append()
    dend_22 ModelViewParmSubset_251.append()
    dend_21 ModelViewParmSubset_251.append()
    dend_15 ModelViewParmSubset_251.append()
    dend_14 ModelViewParmSubset_251.append()
    dend_12 ModelViewParmSubset_251.append()
    dend_9 ModelViewParmSubset_251.append()
    dend_5 ModelViewParmSubset_251.append()
    dend_2 ModelViewParmSubset_251.append()
    apic_5 ModelViewParmSubset_251.append()
    apic_4 ModelViewParmSubset_251.append()
    dend_17 ModelViewParmSubset_251.append()
    dend_16 ModelViewParmSubset_251.append()
    dend_11 ModelViewParmSubset_251.append()
    dend_10 ModelViewParmSubset_251.append()
    dend_4 ModelViewParmSubset_251.append()
    dend_3 ModelViewParmSubset_251.append()
    apic_7 ModelViewParmSubset_251.append()
    apic_6 ModelViewParmSubset_251.append()
    apic_13 ModelViewParmSubset_251.append()
    apic_8 ModelViewParmSubset_251.append()
    apic_10 ModelViewParmSubset_251.append()
    apic_9 ModelViewParmSubset_251.append()
    apic_12 ModelViewParmSubset_251.append()
    apic_11 ModelViewParmSubset_251.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_14, apic_1, apic_3, apic_2, apic_5, apic_4, apic_7, apic_6, apic_13, apic_8, apic_10, apic_9, apic_12, apic_11]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_14 apic.append()
    apic_1 apic.append()
    apic_3 apic.append()
    apic_2 apic.append()
    apic_5 apic.append()
    apic_4 apic.append()
    apic_7 apic.append()
    apic_6 apic.append()
    apic_13 apic.append()
    apic_8 apic.append()
    apic_10 apic.append()
    apic_9 apic.append()
    apic_12 apic.append()
    apic_11 apic.append()

    // Group: {name=dend, groups=[], sections=[dend_26, dend_19, dend_18, dend_7, dend_0, dend_28, dend_27, dend_23, dend_20, dend_13, dend_8, dend_6, dend_1, dend_25, dend_24, dend_22, dend_21, dend_15, dend_14, dend_12, dend_9, dend_5, dend_2, dend_17, dend_16, dend_11, dend_10, dend_4, dend_3]}
    dend = new SectionList()
    dend_26 dend.append()
    dend_19 dend.append()
    dend_18 dend.append()
    dend_7 dend.append()
    dend_0 dend.append()
    dend_28 dend.append()
    dend_27 dend.append()
    dend_23 dend.append()
    dend_20 dend.append()
    dend_13 dend.append()
    dend_8 dend.append()
    dend_6 dend.append()
    dend_1 dend.append()
    dend_25 dend.append()
    dend_24 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_12 dend.append()
    dend_9 dend.append()
    dend_5 dend.append()
    dend_2 dend.append()
    dend_17 dend.append()
    dend_16 dend.append()
    dend_11 dend.append()
    dend_10 dend.append()
    dend_4 dend.append()
    dend_3 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_10465, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_10465 = new SectionList()
    soma_0 OneSecGrp_SectionRef_10465.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, axon_1, axon_1, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    apic_2 all.append()
    apic_2 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_6 all.append()
    apic_6 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_12 all.append()
    apic_12 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 6.421253  // units: uF/cm2
    forsec apic cm = 6.421253  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 10.010537  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 2.407365E-6  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.18453504  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 4.5607165E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.08301892  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.28087816  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.001540298  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 2.0694375E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.0049901297  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 3.370156E-4  // units: S cm-2
        e_pas_nml2 = -86.107635  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 8.4608793E-4  // units: S cm-2
        e_pas_nml2 = -86.107635  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 5.516749E-4  // units: S cm-2
        e_pas_nml2 = -86.107635  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 9.7054E-5  // units: S cm-2
        e_pas_nml2 = -86.107635  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 8.83661E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0012550304  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_485591806
    forsec soma {
        insert CaDynamics_485591806
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_26 nseg = 5
    apic_14 nseg = 3
    dend_28 nseg = 3
    dend_27 nseg = 3
    apic_3 nseg = 3
    apic_2 nseg = 7
    dend_25 nseg = 5
    dend_24 nseg = 7
    dend_21 nseg = 3
    dend_15 nseg = 3
    dend_14 nseg = 7
    dend_12 nseg = 7
    apic_5 nseg = 15
    apic_4 nseg = 7
    dend_17 nseg = 3
    dend_11 nseg = 3
    dend_10 nseg = 3
    dend_4 nseg = 3
    apic_6 nseg = 7
    apic_13 nseg = 3
    apic_9 nseg = 3
    apic_12 nseg = 3
    apic_11 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_485591806


