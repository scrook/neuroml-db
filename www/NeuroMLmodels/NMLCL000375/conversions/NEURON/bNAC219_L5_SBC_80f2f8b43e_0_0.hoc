// Cell: bNAC219_L5_SBC_80f2f8b43e_0_0
/*
{
  "id" : "bNAC219_L5_SBC_80f2f8b43e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.23899, -15.0556, -0.519658, 3.66989", "-1.17536, -13.7023, -0.469772, 6.06288", "-1.11173, -12.349, -0.419887, 7.06144", "-1.0481, -10.9958, -0.370002, 7.9923", "-0.984469, -9.64252, -0.320117, 9.33711", "-0.920839, -8.28926, -0.270232, 10.6845", "-0.85721, -6.936, -0.220347, 11.7558", "-0.793581, -5.58274, -0.170462, 12.5063", "-0.729952, -4.22947, -0.120577, 13.1759", "-0.666322, -2.87621, -0.0706922, 13.3814", "-0.602693, -1.52295, -0.0208072, 13.1588", "-0.539064, -0.169689, 0.0290779, 13.1475", "-0.475434, 1.18357, 0.0789629, 12.911", "-0.411805, 2.53683, 0.128848, 12.361", "-0.348176, 3.8901, 0.178733, 11.3572", "-0.284546, 5.24336, 0.228618, 10.1252", "-0.220917, 6.59662, 0.278503, 9.00977", "-0.157288, 7.94988, 0.328388, 8.0324", "-0.0936586, 9.30314, 0.378273, 7.2911", "-0.0300293, 10.6564, 0.428158, 4.83974", "0.0336, 12.0097, 0.478043, 3.67414" ]
  }, {
    "name" : "dend_106",
    "id" : "dend_106",
    "points3d" : [ "3.4463, 9.94914, 0.091561, 1.47", "3.4463, 9.94914, 0.091561, 1.47", "3.80177, 10.5741, 0.193989, 0.81", "4.19355, 11.4298, 0.325194, 0.59", "4.53323, 12.2676, 0.449154, 0.88", "4.74962, 12.8741, 0.554971, 1.11", "4.98821, 13.6448, 0.727059, 1.33", "5.00481, 13.7173, 0.75136, 1.33", "5.15804, 14.6686, 1.09808, 1.11", "5.16571, 14.7393, 1.12673, 1.11", "5.25124, 15.5441, 1.49229, 1.25", "5.38198, 16.6147, 2.00562, 1.55", "5.58017, 18.0373, 2.80749, 1.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001888841101
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-2.0737, -15.1354, -0.098439, 4.79", "-2.0737, -15.1354, -0.098439, 4.79", "-2.06032, -17.3176, 0.39946, 3.83", "-1.97458, -19.8175, 0.976184, 3.32", "-1.90325, -21.897, 1.45591, 2.65", "-1.82884, -24.0662, 1.95635, 2.95", "-1.76355, -25.9697, 2.39549, 3.39", "-1.6593, -27.9739, 2.87982, 3.76", "-1.59485, -28.6232, 3.0556, 3.76" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001888841101
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.0537, 11.9756, 1.47156, 3.02", "-1.12031, 12.506, 1.74225, 3.02", "-1.18696, 13.1718, 2.04514, 3.02", "-1.27934, 14.0946, 2.46494, 2.95", "-1.36654, 14.9657, 2.86124, 2.8", "-1.45756, 15.8749, 3.27487, 2.8", "-1.53241, 16.6226, 3.61501, 3.24", "-1.66549, 18.0642, 4.31678, 3.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001888841101
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.0336, 12.0097, 0.478043, 0.514021", "0.73811, 26.9931, 0.478043, 0.514021", "1.44262, 41.9766, 0.478043, 0.514021" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_110",
    "id" : "dend_110",
    "points3d" : [ "5.58017, 18.0373, 2.80749, 0.66", "5.29006, 19.9175, -0.757699, 0.66", "5.36853, 20.5452, -1.77366, 0.29", "5.43061, 20.6343, -1.82974, 0.29", "6.17273, 21.2731, -1.35965, 0.29", "6.62238, 21.7415, -1.08016, 0.59", "6.76623, 21.9015, -0.990172, 0.59", "7.30204, 22.5073, -0.625938, 0.59", "8.67044, 23.9303, 0.17271, 0.29", "9.48049, 24.7244, 0.550775, 0.88", "10.2454, 25.4277, 0.830804, 1.11", "10.3173, 25.4909, 0.851474, 1.11", "11.9945, 26.8905, 1.03406, 0.37", "13.4012, 28.0163, 0.986574, 0.37", "14.6175, 28.9667, 0.740748, 0.88", "15.6304, 29.7436, 0.45305, 0.88", "15.7851, 29.8694, 0.397716, 0.88", "17.7687, 31.6271, -0.455599, 0.29", "17.8402, 31.7008, -0.494302, 0.29", "19.0353, 33.2382, -1.29065, 0.88", "19.0845, 33.3133, -1.32737, 0.88", "20.0822, 34.9547, -2.09203, 0.88", "20.214, 35.158, -2.18794, 0.88", "20.9191, 36.1633, -2.67016, 1.03", "21.8366, 37.3015, -3.29365, 0.29", "21.9088, 37.3799, -3.34198, 0.29", "22.613, 38.0888, -3.79387, 0.29", "23.6065, 38.9799, -4.40684, 0.88", "24.5061, 39.7707, -4.91196, 0.29", "24.5763, 39.8302, -4.94749, 0.29", "25.3927, 40.6042, -5.23297, 0.44", "25.8852, 41.1582, -5.35878, 0.59", "25.943, 41.2385, -5.3646, 0.59", "26.6156, 42.4089, -5.31212, 0.44", "26.6623, 42.4885, -5.30471, 0.44", "27.3839, 43.6845, -5.18647, 0.96", "27.6557, 44.0845, -5.15121, 1.11", "28.4419, 45.0272, -5.1258, 0.81", "29.8334, 46.3585, -5.18461, 0.29", "30.8511, 47.1264, -5.28363, 0.29", "30.9412, 47.1852, -5.30065, 0.29", "31.9867, 47.7794, -5.56582, 0.59", "33.5072, 48.5982, -6.02381, 0.37", "34.604, 49.1664, -6.40551, 1.11", "35.4311, 49.5841, -6.72371, 1.33", "37.2478, 50.7857, -7.47904, 0.22", "37.3442, 50.8738, -7.51884, 0.22", "38.1328, 51.8411, -7.82433, 1.03", "38.3484, 52.1531, -7.89166, 1.11", "38.4029, 52.236, -7.9061, 1.11", "39.5744, 53.7579, -8.0371, 0.22", "40.7614, 55.0651, -8.01427, 1.11", "41.4558, 55.77, -7.97424, 0.88", "42.6133, 56.8747, -7.82062, 0.22", "42.6822, 56.941, -7.80929, 0.22", "44.4378, 58.576, -7.4839, 0.22", "44.7354, 58.8267, -7.42351, 0.22", "46.2515, 60.0872, -7.08824, 0.88", "47.1273, 60.8292, -6.89434, 1.03", "48.1888, 61.7567, -6.66506, 0.66", "49.3639, 62.8097, -6.44385, 0.22", "49.874, 63.2838, -6.37171, 0.22", "49.9594, 63.3508, -6.35879, 0.22", "50.7638, 63.8416, -6.23977, 0.37", "50.8397, 63.8813, -6.23032, 0.37", "51.8451, 64.3433, -6.05398, 1.11", "52.5526, 64.6751, -5.90972, 1.47", "53.6108, 65.1862, -5.65692, 0.88", "53.6898, 65.2245, -5.63647, 0.88", "55.4232, 66.0833, -5.15973, 0.22", "56.6709, 66.7056, -4.81345, 0.59", "57.3901, 67.0639, -4.60966, 0.74", "58.7616, 67.8394, -4.26738, 0.22", "58.8463, 67.8966, -4.25451, 0.22", "59.2733, 68.2248, -4.2171, 0.74", "59.6542, 68.5649, -4.22452, 0.74", "59.7316, 68.6422, -4.23572, 0.74", "60.8784, 69.8903, -4.4635, 0.22", "62.0796, 71.1803, -4.76744, 1.03", "62.4896, 71.6013, -4.88277, 1.4", "63.3421, 72.4685, -5.13592, 1.77", "65.3295, 74.4189, -5.74865, 0.22", "66.2582, 75.3103, -5.99127, 0.22", "67.5578, 76.5282, -6.27774, 0.22", "68.8242, 77.6324, -6.45458, 1.33", "69.4332, 78.1279, -6.50023, 1.55", "70.9487, 79.2281, -6.51111, 0.29", "72.401, 80.1362, -6.34763, 1.33", "72.7306, 80.3316, -6.2815, 1.47", "75.0918, 81.7324, -5.58677, 0.29", "75.996, 82.2767, -5.26681, 1.03", "76.7054, 82.6979, -5.0077, 0.81", "78.1726, 83.5901, -4.46765, 0.22", "78.9445, 84.0536, -4.23751, 0.22", "79.0412, 84.1129, -4.21703, 0.22", "80.0293, 84.7968, -4.13508, 0.81", "80.4311, 85.0803, -4.14368, 0.96", "81.1535, 85.6459, -4.23978, 0.59", "82.1279, 86.4279, -4.48648, 0.15", "83.5222, 87.5292, -4.84857, 1.33", "84.4171, 88.2552, -5.08552, 0.22", "84.4924, 88.3146, -5.1049, 0.22", "85.2012, 88.8681, -5.24274, 0.22", "86.1721, 89.5854, -5.36112, 0.66", "86.843, 90.0645, -5.34001, 0.81", "86.9918, 90.177, -5.31526, 0.81", "87.9086, 90.9083, -5.13622, 0.52", "88.7938, 91.7087, -4.94694, 1.33", "89.3038, 92.1999, -4.84049, 1.55", "90.7873, 93.6852, -4.55137, 0.22", "91.686, 94.5906, -4.39856, 0.37", "92.2886, 95.1935, -4.31265, 0.96", "92.9331, 95.8144, -4.21131, 1.33", "94.5752, 97.2979, -3.95911, 0.22", "95.8022, 98.2864, -3.72789, 0.22", "96.628, 98.8454, -3.56193, 0.88", "97.2218, 99.1774, -3.42897, 0.96", "99.0479, 100.086, -2.9842, 0.22", "99.1321, 100.124, -2.96241, 0.22", "100.639, 100.795, -2.51838, 1.4", "101.405, 101.145, -2.28844, 1.99", "102.81, 101.767, -1.89101, 0.29", "102.897, 101.804, -1.87055, 0.29", "103.645, 102.122, -1.76386, 0.22", "103.734, 102.16, -1.75492, 0.22", "104.456, 102.505, -1.75993, 0.29", "104.54, 102.552, -1.76352, 0.29", "105.038, 102.876, -1.80104, 0.88", "105.529, 103.207, -1.84202, 1.18", "105.899, 103.469, -1.87537, 1.18", "107.221, 104.423, -1.9981, 0.22", "107.719, 104.766, -2.04138, 0.66", "108.196, 105.075, -2.0778, 0.66", "108.274, 105.121, -2.08275, 0.66", "108.808, 105.423, -2.10904, 0.66", "108.901, 105.472, -2.11191, 0.66", "110.219, 106.084, -2.1156, 0.22", "110.765, 106.295, -2.11716, 0.74", "111.446, 106.53, -2.14041, 1.11", "111.89, 106.67, -2.16343, 0.88", "111.988, 106.699, -2.16976, 0.88", "113.662, 107.195, -2.29393, 0.22", "115.078, 107.665, -2.4432, 0.22", "116.028, 108.0, -2.56039, 0.88", "116.609, 108.213, -2.64777, 1.11", "116.716, 108.254, -2.66572, 1.11", "117.61, 108.626, -2.82847, 0.44", "119.522, 109.521, -3.20348, 0.22", "119.608, 109.56, -3.22267, 0.22", "120.861, 110.081, -3.49227, 1.11", "121.042, 110.149, -3.53171, 1.11", "121.859, 110.413, -3.70071, 1.69", "122.614, 110.612, -3.88036, 1.69", "125.183, 111.153, -4.4988, 0.22", "126.237, 111.386, -4.73856, 0.88", "126.75, 111.503, -4.84952, 1.4", "127.765, 111.742, -5.06808, 1.18", "129.158, 112.108, -5.36, 0.59", "130.85, 112.664, -5.68068, 0.29", "133.161, 113.719, -6.04343, 0.22", "133.504, 113.927, -6.09497, 0.59", "133.568, 113.977, -6.10339, 0.59", "134.463, 114.87, -6.14362, 0.74", "135.17, 115.74, -6.09212, 0.22", "135.813, 116.687, -6.00819, 0.22", "136.527, 117.744, -5.83461, 1.11", "136.819, 118.146, -5.75198, 1.4", "137.929, 119.564, -5.41427, 0.22", "138.342, 120.048, -5.28102, 0.96", "138.883, 120.621, -5.10392, 1.25", "140.256, 121.925, -4.66532, 0.29", "140.875, 122.479, -4.50243, 0.81", "141.349, 122.882, -4.41966, 0.81", "141.516, 123.023, -4.40651, 0.81", "142.31, 123.728, -4.37827, 0.37", "142.976, 124.338, -4.37877, 0.29", "144.015, 125.286, -4.39185, 0.15", "144.968, 126.182, -4.31642, 1.03", "145.502, 126.69, -4.2449, 1.62", "148.143, 128.977, -3.67552, 0.15", "149.46, 130.028, -3.31261, 0.44", "150.509, 130.829, -2.96526, 0.37", "152.584, 132.313, -2.0991, 1.62", "152.915, 132.532, -1.94321, 1.77", "155.328, 133.93, -0.72324, 0.22", "155.869, 134.173, -0.436689, 0.66", "156.906, 134.569, 0.0992418, 0.59", "158.759, 135.122, 0.975275, 0.37", "158.846, 135.143, 1.01, 0.37", "159.509, 135.32, 1.26549, 0.29", "160.723, 135.739, 1.68781, 0.44", "160.8, 135.767, 1.7146, 0.44", "162.007, 136.234, 2.18274, 0.59", "163.108, 136.878, 2.76748, 0.22", "163.182, 136.937, 2.82276, 0.22", "163.796, 137.638, 3.45404, 0.22", "163.835, 137.697, 3.49593, 0.22", "164.625, 138.981, 4.3048, 0.59", "165.388, 140.279, 5.02875, 0.81", "165.448, 140.361, 5.08583, 0.81", "165.968, 140.887, 5.5228, 0.81", "167.524, 141.775, 7.04867, 0.22", "167.578, 141.791, 7.10525, 0.22", "168.049, 141.805, 7.65147, 0.59", "169.654, 141.673, 9.52496, 0.81", "170.213, 141.57, 10.2398, 0.96", "172.252, 140.845, 13.2233, 0.37", "172.351, 140.788, 13.3926, 0.37", "173.289, 140.199, 15.1064, 0.66" ],
    "parent" : "dend_106",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_107",
    "id" : "dend_107",
    "points3d" : [ "5.58017, 18.0373, 2.80749, 0.88", "6.30544, 18.687, 3.21751, 0.88", "7.6201, 19.7439, 3.83879, 0.66", "8.66657, 20.5369, 4.25466, 0.66", "9.99854, 21.4895, 4.71195, 0.66", "10.8442, 22.0542, 4.93391, 0.66", "11.9221, 22.7559, 5.1531, 0.88", "11.9903, 22.7954, 5.15853, 0.88", "12.8115, 23.2561, 5.1171, 1.47", "13.3445, 23.5759, 5.04951, 1.47", "14.4305, 24.3166, 4.89108, 1.03", "15.2458, 24.9353, 4.7846, 0.88", "15.8712, 25.4664, 4.72399, 1.03", "16.9186, 26.4435, 4.66183, 1.03", "17.9169, 27.5004, 4.6888, 0.88", "18.5562, 28.2944, 4.76964, 0.74", "19.0266, 28.946, 4.93164, 0.88", "19.7307, 29.93, 5.30232, 1.4", "20.1875, 30.5583, 5.63112, 1.33", "20.845, 31.4553, 6.19494, 0.88", "21.2283, 31.9583, 6.54949, 0.59", "22.1716, 33.127, 7.35616, 0.52", "22.7079, 33.7261, 7.70049, 0.52", "23.474, 34.52, 8.05186, 0.81", "24.2524, 35.3128, 8.3138, 1.03", "24.7758, 35.839, 8.41293, 1.33", "25.5113, 36.6246, 8.4263, 1.33", "26.4214, 37.7548, 8.25025, 0.81", "26.9018, 38.4374, 8.08911, 0.81", "26.9401, 38.5018, 8.07324, 0.81", "27.1947, 38.9914, 8.02426, 0.88", "27.8116, 40.3337, 8.08464, 0.74", "28.1396, 41.0846, 8.25454, 0.59", "28.451, 41.7555, 8.52847, 0.59", "29.1115, 42.991, 9.2998, 1.03", "30.1203, 44.4954, 10.6281, 1.03", "30.1568, 44.5429, 10.6802, 1.03", "30.458, 44.8819, 11.1295, 1.18", "30.8871, 45.292, 11.7085, 1.33", "31.7045, 45.9637, 12.6564, 1.47", "32.5435, 46.5612, 13.407, 1.11", "33.1391, 47.0273, 13.8024, 1.11", "33.3306, 47.2019, 13.9096, 1.11", "33.7918, 47.7305, 14.0824, 1.4", "34.0235, 48.0507, 14.1242, 1.62", "34.0684, 48.1178, 14.1232, 1.62", "34.4893, 48.8447, 14.0817, 1.18", "35.0407, 49.866, 14.0867, 0.81", "35.5527, 50.8725, 14.1309, 0.66", "36.1072, 51.9989, 14.2166, 0.59", "36.1363, 52.0595, 14.2228, 0.59", "36.8049, 53.513, 14.4079, 1.03", "37.2693, 54.6381, 14.6111, 0.88", "37.3244, 54.7769, 14.644, 0.88", "37.604, 55.5014, 14.8417, 1.03", "37.6293, 55.572, 14.8593, 1.03", "37.9197, 56.392, 15.0685, 0.96", "38.3799, 57.6671, 15.4197, 1.25" ],
    "parent" : "dend_106",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-1.59485, -28.6232, 3.0556, 2.58", "-1.03057, -30.1996, 2.92222, 2.58", "-0.821209, -30.967, 2.80159, 2.58", "-0.468636, -32.6795, 2.44633, 1.99", "-0.193026, -34.503, 1.96631, 1.99", "-0.0174846, -36.0635, 1.5074, 1.84", "0.119541, -37.7425, 0.983553, 1.84", "0.172729, -39.9992, 0.197515, 1.84", "0.139535, -41.7027, -0.438414, 1.92", "0.00365896, -43.9271, -1.32119, 1.92", "-0.291803, -46.5715, -2.38466, 1.92", "-0.532677, -48.467, -3.10964, 2.5", "-0.719087, -50.4274, -3.7572, 2.95", "-0.759793, -51.1541, -3.96106, 3.24", "-0.799088, -53.0844, -4.43836, 2.58", "-0.712703, -55.4394, -4.85951, 1.99", "-0.418404, -57.658, -5.09307, 1.99", "0.211752, -61.1054, -5.32792, 1.92", "0.384555, -61.8215, -5.34796, 1.92", "0.60302, -62.54, -5.34728, 2.36", "1.48922, -64.7164, -5.20731, 1.99", "2.57204, -66.6091, -4.92267, 1.99" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-1.59485, -28.6232, 3.0556, 1.25", "-3.50085, -30.2373, 2.70442, 1.25", "-4.63343, -31.1893, 2.46569, 0.88", "-5.96779, -32.2946, 2.15927, 0.88", "-6.92523, -33.0779, 1.89605, 1.11", "-7.58317, -33.6044, 1.6968, 1.47", "-7.9495, -33.8966, 1.57858, 1.47", "-8.36072, -34.2298, 1.39734, 1.77", "-8.9972, -34.761, 1.07953, 1.62", "-9.81661, -35.4588, 0.647431, 1.47", "-10.4649, -36.0013, 0.319071, 1.62", "-11.0134, -36.4501, 0.0686231, 1.62", "-11.4499, -36.8017, -0.117953, 1.33", "-12.5971, -37.7183, -0.577174, 1.33", "-13.5138, -38.4903, -0.926384, 1.25", "-14.4657, -39.3305, -1.26257, 1.25", "-15.8591, -40.5984, -1.74312, 1.25", "-16.8406, -41.497, -2.03043, 1.03", "-17.4809, -42.1027, -2.18832, 0.88", "-18.4825, -43.1245, -2.34035, 0.88", "-19.1086, -43.8447, -2.37119, 1.11", "-19.1585, -43.9075, -2.36648, 1.11", "-20.139, -45.2206, -2.13996, 1.11", "-20.786, -46.093, -1.89664, 1.62", "-21.7345, -47.3282, -1.46877, 1.77", "-22.7278, -48.5022, -1.04033, 1.92", "-23.5239, -49.3883, -0.767662, 1.55", "-23.5748, -49.4418, -0.757946, 1.55", "-24.8308, -50.6439, -0.812763, 0.66", "-25.6212, -51.2678, -1.08995, 0.66", "-26.652, -51.9379, -1.7644, 1.25", "-27.521, -52.4643, -2.4716, 1.55", "-28.423, -53.0257, -3.26344, 1.4", "-29.2249, -53.5695, -3.96902, 1.18", "-30.0844, -54.2484, -4.70312, 0.96", "-30.8615, -55.0249, -5.25705, 0.96", "-31.582, -55.9639, -5.5726, 1.03", "-32.0774, -56.7751, -5.65407, 1.4", "-32.6251, -57.9299, -5.58113, 1.4", "-33.256, -59.6736, -5.32345, 1.33", "-33.5849, -60.8528, -5.10121, 1.4", "-33.887, -62.3437, -4.80637, 1.62", "-34.054, -63.4585, -4.59602, 1.47", "-34.2785, -65.1982, -4.31105, 1.25", "-34.456, -66.6297, -4.11819, 1.4", "-34.5903, -67.4563, -4.05196, 1.4", "-34.8925, -68.7338, -4.01434, 1.4", "-35.4158, -70.2782, -4.10702, 0.88", "-35.9407, -71.3403, -4.25503, 0.66", "-36.3742, -71.9501, -4.42172, 0.96", "-37.2492, -72.8571, -4.78179, 1.25", "-37.897, -73.4126, -5.05549, 1.33", "-38.8163, -74.1415, -5.44423, 1.4", "-39.3998, -74.6568, -5.68988, 1.11", "-40.0303, -75.368, -5.94279, 1.11", "-40.6364, -76.2346, -6.1445, 1.11", "-41.3772, -77.4411, -6.37352, 1.11", "-42.207, -78.9679, -6.59374, 1.11", "-43.1695, -80.9853, -6.77335, 1.11", "-43.8467, -82.6156, -6.86197, 1.11", "-44.3531, -84.0258, -6.87583, 2.14" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-1.66549, 18.0642, 4.31678, 0.96", "-1.6254, 18.9525, 3.19479, 0.96", "-1.63478, 19.8702, 2.22056, 0.96", "-1.70356, 21.2445, 0.922837, 1.18", "-1.77409, 22.0475, 0.227075, 1.18", "-1.86709, 22.8785, -0.452397, 0.9", "-1.97642, 23.6094, -0.996903, 0.9", "-2.20739, 24.4503, -1.54985, 0.81", "-2.31857, 24.7876, -1.68838, 0.81", "-2.44006, 25.1516, -1.75348, 0.81", "-2.45779, 25.2104, -1.75696, 0.81", "-2.69823, 26.1884, -1.7414, 0.81", "-2.7125, 26.2849, -1.73962, 0.81", "-2.70912, 27.0997, -1.72975, 0.74", "-2.67746, 27.3411, -1.72903, 0.74", "-2.49939, 28.2322, -1.80108, 0.96", "-2.3054, 29.0097, -1.90919, 0.96", "-2.10401, 29.6681, -2.01583, 0.81", "-1.76486, 30.7061, -2.20365, 0.59", "-1.50975, 31.4023, -2.35459, 0.96", "-1.01583, 32.647, -2.67455, 0.96", "-0.989953, 32.7066, -2.69529, 0.96" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.66549, 18.0642, 4.31678, 2.73", "-2.98517, 19.4143, 5.31499, 2.73", "-4.06268, 20.5529, 6.08988, 2.43", "-5.45904, 22.0675, 6.99953, 2.5", "-6.55333, 23.2778, 7.65512, 1.47", "-8.21795, 25.1419, 8.5609, 1.42", "-9.28026, 26.3672, 9.09462, 1.42", "-10.0583, 27.3329, 9.42239, 1.42", "-11.0663, 28.6259, 9.76189, 1.42", "-12.1974, 30.1163, 10.0202, 1.42", "-13.0447, 31.2698, 10.1778, 1.62", "-14.2306, 32.8865, 10.2757, 2.06", "-15.0538, 34.0409, 10.3232, 2.28", "-16.2698, 35.7769, 10.3968, 2.28", "-17.2195, 37.1775, 10.4434, 2.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.44262, 41.9766, 0.478043, 0.514021", "2.14713, 56.96, 0.478043, 0.514021", "2.85164, 71.9435, 0.478043, 0.514021" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_109",
    "id" : "dend_109",
    "points3d" : [ "38.3799, 57.6671, 15.4197, 0.59", "39.4308, 58.0811, 16.155, 0.59", "41.1512, 58.837, 17.2339, 0.59", "41.1992, 58.8547, 17.2623, 0.59", "42.3901, 59.1383, 17.8438, 1.03", "42.4415, 59.148, 17.8693, 1.03", "43.5867, 59.3436, 18.4449, 0.44", "44.2777, 59.4396, 18.767, 0.74", "45.7439, 59.6564, 19.4999, 0.44", "47.132, 59.9115, 20.5052, 0.37", "48.2349, 60.1559, 21.6442, 0.37", "48.2813, 60.1648, 21.7067, 0.37", "48.7058, 60.2293, 22.4311, 0.37", "49.4248, 60.3349, 23.7997, 0.59", "50.2212, 60.5984, 25.6688, 0.59", "50.2401, 60.609, 25.7231, 0.59", "50.9248, 61.0028, 27.6622, 0.96", "51.0712, 61.0968, 28.0515, 0.96", "51.6234, 61.4501, 29.3445, 0.22", "51.9776, 61.7374, 29.9102, 0.44", "52.4244, 62.151, 30.415, 0.37", "52.4655, 62.1996, 30.4633, 0.37", "52.752, 62.6203, 30.9432, 0.37", "52.7816, 62.6598, 31.0057, 0.37", "53.0017, 62.9158, 31.5622, 0.37", "53.5836, 63.6209, 33.0768, 0.52", "53.6094, 63.6484, 33.1344, 0.52", "54.4204, 64.4841, 34.9843, 0.22", "54.5832, 64.6454, 35.3719, 0.52", "54.7311, 64.81, 35.7657, 0.81", "55.3679, 65.7259, 37.9089, 0.29", "55.538, 66.1844, 38.7236, 0.29" ],
    "parent" : "dend_107",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_108",
    "id" : "dend_108",
    "points3d" : [ "38.3799, 57.6671, 15.4197, 0.37", "39.0435, 59.1158, 16.6579, 0.37", "39.2846, 59.5447, 17.1076, 0.74", "40.503, 61.7463, 19.7325, 0.59", "40.9846, 62.6269, 20.8482, 1.11", "41.4759, 63.5813, 22.0711, 1.11", "41.7591, 64.1578, 22.8132, 1.25", "42.7222, 65.9859, 25.4374, 0.52", "43.1055, 66.742, 26.5193, 0.52", "43.1308, 66.8017, 26.5938, 0.52", "43.3307, 67.2856, 27.1706, 0.52", "43.3578, 67.3527, 27.2272, 0.52", "43.6253, 68.0439, 27.5313, 0.52", "43.6553, 68.1316, 27.5373, 0.52", "44.0971, 69.4812, 27.6672, 0.74", "44.4802, 70.8854, 27.8722, 1.03", "44.6964, 71.8408, 28.0555, 0.52", "44.6878, 71.9492, 28.1043, 0.52", "44.4438, 72.6289, 28.5716, 0.52", "43.8149, 73.9469, 29.7457, 0.52", "43.2886, 74.9712, 30.7677, 0.52", "43.2594, 75.0431, 30.835, 0.52", "42.8341, 76.6387, 32.2031, 0.81", "42.763, 77.0972, 32.5342, 1.11", "42.6948, 78.1306, 33.137, 0.59", "42.6739, 79.1997, 33.6464, 0.44", "42.646, 80.3829, 34.1841, 0.44", "42.6364, 80.4654, 34.226, 0.44", "42.4951, 81.0227, 34.541, 0.44", "42.2531, 81.6334, 34.9211, 0.44", "41.9069, 82.2809, 35.3456, 0.66", "41.5188, 82.8935, 35.7824, 1.03", "40.8419, 83.9253, 36.5376, 1.33", "40.7924, 84.006, 36.593, 1.33", "40.4673, 84.5741, 37.0012, 0.81", "40.1263, 85.2071, 37.4483, 0.52", "39.7869, 85.9568, 38.0639, 0.44", "39.7484, 86.0599, 38.1547, 0.44", "39.6317, 86.4801, 38.508, 0.52", "39.4516, 87.5949, 39.5268, 0.74", "39.4444, 88.121, 40.0516, 1.33", "39.5658, 89.7607, 41.6902, 1.03", "39.6742, 90.5955, 42.5246, 0.74", "39.7669, 91.3745, 43.2764, 0.66", "39.9304, 92.7109, 44.5362, 0.44", "40.0763, 93.9177, 45.6044, 0.44", "40.1365, 94.7442, 46.3011, 0.29", "40.1349, 94.8332, 46.3753, 0.29", "40.0263, 95.7072, 47.1715, 0.29", "39.8484, 96.4263, 47.8458, 0.74", "39.7987, 96.558, 47.9642, 0.74", "39.4959, 97.2505, 48.6577, 0.74", "38.8457, 98.7152, 50.3029, 0.29", "38.5043, 99.4994, 51.1771, 0.29", "38.4476, 99.6364, 51.3302, 0.29", "38.1481, 100.358, 52.0935, 0.59", "37.7623, 101.314, 53.0828, 0.74", "37.6498, 101.596, 53.36, 0.81", "37.2668, 102.609, 54.1252, 0.37", "37.2375, 102.69, 54.186, 0.37", "37.0557, 103.258, 54.6567, 0.44", "37.0387, 103.322, 54.7114, 0.44", "36.9603, 103.715, 55.1392, 0.44", "36.9052, 104.153, 55.7035, 0.29", "36.8333, 105.031, 56.9285, 0.88", "36.7753, 105.985, 58.1936, 1.33", "36.7755, 106.043, 58.2644, 1.33", "36.8509, 107.448, 59.8585, 0.74", "36.9846, 108.674, 61.1426, 0.88", "37.0528, 109.115, 61.5529, 1.03", "37.2532, 110.137, 62.264, 0.29", "37.4627, 111.293, 62.8614, 0.22", "37.4823, 111.385, 62.8977, 0.22", "37.5971, 111.851, 62.9978, 0.22", "37.6567, 112.043, 63.0165, 0.22", "38.1545, 113.557, 63.1254, 0.22", "38.185, 113.645, 63.1274, 0.22", "38.4866, 114.569, 63.134, 0.22", "38.5175, 114.657, 63.1328, 0.22", "39.1005, 116.144, 63.0542, 0.22" ],
    "parent" : "dend_107",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "2.57204, -66.6091, -4.92267, 1.92", "3.08165, -66.7859, -5.28633, 1.92", "3.76101, -67.0215, -5.77111, 2.28" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "2.57204, -66.6091, -4.92267, 0.88", "4.08782, -69.287, -3.51138, 0.88", "4.47334, -70.2642, -3.0815, 0.74", "4.64438, -70.9674, -2.82018, 0.88", "4.69874, -71.5114, -2.62225, 1.03", "4.71246, -72.2908, -2.34243, 0.74", "4.70879, -72.3522, -2.3201, 0.74", "4.33481, -73.3582, -2.08157, 0.74", "4.08314, -73.9073, -1.91906, 1.18", "3.69806, -74.673, -1.6639, 1.03", "3.67396, -74.7183, -1.64735, 1.03", "3.27437, -75.473, -1.354, 0.81", "2.92309, -76.1605, -1.08321, 1.25", "2.64368, -76.7842, -0.829118, 1.47" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-44.3531, -84.0258, -6.87583, 0.74", "-44.878, -84.7086, -6.966, 0.74", "-45.2836, -85.194, -7.02547, 0.74", "-45.8235, -85.7928, -7.09021, 0.66", "-46.3634, -86.3465, -7.15081, 0.88", "-46.6406, -86.6089, -7.18234, 1.03", "-46.9865, -86.9183, -7.21327, 0.88", "-47.2571, -87.1301, -7.22771, 0.74", "-47.6108, -87.3685, -7.23421, 0.74", "-48.0884, -87.6508, -7.23176, 0.74", "-48.443, -87.8308, -7.19334, 0.74", "-49.031, -88.0966, -7.10542, 0.52", "-49.3308, -88.2179, -7.05974, 0.52", "-50.2526, -88.5722, -6.92713, 0.88", "-50.6065, -88.7059, -6.89782, 1.33", "-51.7265, -89.1662, -6.92328, 0.52", "-52.1846, -89.3848, -6.98918, 0.52", "-52.6236, -89.6303, -7.12376, 0.52", "-53.0136, -89.8868, -7.29296, 0.52", "-53.5338, -90.3057, -7.60773, 0.88", "-54.0696, -90.8387, -8.03183, 1.18", "-54.3481, -91.1838, -8.31876, 1.18", "-54.6597, -91.6213, -8.63906, 1.4", "-54.915, -92.0093, -8.88892, 1.4", "-55.2759, -92.578, -9.19787, 1.4", "-55.7474, -93.2951, -9.48408, 1.03", "-56.1064, -93.7933, -9.6286, 0.44", "-56.5361, -94.3278, -9.70679, 0.37", "-56.7623, -94.5799, -9.70087, 0.37", "-57.105, -94.9306, -9.63673, 0.66", "-57.6621, -95.4281, -9.45754, 1.03", "-57.9311, -95.6404, -9.35126, 1.25", "-58.624, -96.161, -9.09697, 0.81", "-58.8319, -96.3252, -9.03818, 0.81", "-59.0888, -96.5442, -8.97886, 0.29", "-59.4186, -96.8761, -8.93246, 0.29", "-59.6924, -97.2263, -8.93211, 0.59", "-59.9932, -97.6632, -8.95878, 0.74", "-60.204, -97.9895, -9.00473, 0.96", "-60.3368, -98.1934, -9.03701, 1.11", "-60.6606, -98.6597, -9.12279, 0.74", "-60.9556, -99.075, -9.20372, 0.59", "-61.1533, -99.3434, -9.25929, 0.66", "-61.4089, -99.6814, -9.33063, 0.74", "-61.6801, -100.051, -9.40378, 0.37", "-62.1045, -100.685, -9.49623, 0.29", "-62.1272, -100.724, -9.49988, 0.29", "-62.3667, -101.232, -9.48258, 0.29", "-62.5209, -101.643, -9.43282, 0.88", "-62.6739, -102.096, -9.35687, 1.4", "-62.888, -102.692, -9.22852, 1.55", "-63.0972, -103.201, -9.11262, 1.55", "-63.5274, -104.058, -8.92352, 0.74", "-63.8242, -104.533, -8.81985, 0.52", "-64.2589, -105.057, -8.70913, 0.52", "-64.8228, -105.55, -8.62655, 0.52", "-65.3311, -105.886, -8.60112, 0.74", "-65.6865, -106.074, -8.59695, 0.96", "-65.9875, -106.214, -8.61004, 0.81", "-66.4777, -106.446, -8.62211, 0.37", "-66.8193, -106.642, -8.60149, 0.29", "-67.1834, -106.936, -8.54139, 0.29", "-67.592, -107.348, -8.42923, 0.66", "-67.8731, -107.675, -8.32247, 0.96", "-68.161, -108.031, -8.20056, 1.47", "-68.626, -108.6, -7.97815, 1.25", "-69.1507, -109.184, -7.7218, 0.74", "-69.1886, -109.22, -7.70511, 0.74", "-69.7082, -109.637, -7.51644, 0.74", "-70.0506, -109.858, -7.40528, 0.74", "-70.6874, -110.174, -7.25146, 0.74", "-71.0315, -110.316, -7.19622, 0.88", "-71.3317, -110.435, -7.18264, 0.88", "-71.7096, -110.597, -7.20739, 0.88", "-72.1886, -110.826, -7.32164, 0.59", "-72.7132, -111.134, -7.51003, 0.29", "-72.8534, -111.235, -7.58191, 0.29", "-73.7251, -111.891, -7.95066, 0.29", "-73.7584, -111.917, -7.95921, 0.29", "-74.057, -112.133, -7.97007, 0.29", "-74.6093, -112.499, -7.91138, 1.4", "-74.648, -112.521, -7.90123, 1.4", "-75.4749, -112.942, -7.61891, 1.11", "-75.9972, -113.186, -7.40975, 1.55", "-76.539, -113.446, -7.20634, 1.62", "-76.8616, -113.604, -7.08878, 1.62", "-77.5565, -113.965, -6.87368, 0.81", "-78.0359, -114.237, -6.75969, 0.88", "-78.2344, -114.369, -6.73252, 0.88", "-78.8374, -114.816, -6.70663, 0.37", "-78.8763, -114.85, -6.70952, 0.37", "-79.4177, -115.386, -6.79701, 0.37", "-79.6714, -115.664, -6.86528, 0.96", "-79.9843, -116.025, -6.96723, 1.33", "-80.4228, -116.554, -7.13678, 0.74", "-80.8428, -117.063, -7.32364, 0.59", "-81.1499, -117.412, -7.45859, 0.96", "-81.3054, -117.569, -7.51443, 0.96", "-81.3477, -117.604, -7.5201, 0.96", "-81.8556, -117.93, -7.45575, 0.29", "-82.1609, -118.107, -7.35928, 0.29", "-82.5166, -118.304, -7.20096, 0.29", "-83.0627, -118.634, -6.92238, 0.81", "-83.7522, -119.119, -6.5497, 1.25", "-84.1871, -119.459, -6.30252, 1.62", "-84.4542, -119.691, -6.1394, 1.62", "-84.4889, -119.729, -6.11947, 1.62", "-84.9776, -120.398, -5.88934, 0.44", "-85.2442, -120.859, -5.81085, 0.74", "-85.267, -120.907, -5.80854, 0.74", "-85.3488, -121.097, -5.8082, 0.74", "-85.6509, -121.83, -5.81754, 0.29", "-85.6697, -121.876, -5.81796, 0.29", "-85.8422, -122.326, -5.82541, 1.33", "-85.9649, -122.603, -5.82377, 1.62", "-86.1027, -122.849, -5.79775, 1.62", "-86.126, -122.877, -5.78873, 1.62", "-86.6581, -123.267, -5.51149, 0.59", "-86.6946, -123.285, -5.49146, 0.59", "-87.1031, -123.419, -5.27688, 0.44", "-87.8, -123.564, -4.91486, 0.52", "-88.549, -123.631, -4.55787, 0.74", "-89.14, -123.626, -4.3137, 0.88", "-89.4778, -123.591, -4.19892, 0.88", "-89.9191, -123.53, -4.07713, 0.66", "-90.4803, -123.442, -3.96592, 1.03", "-91.094, -123.362, -3.891, 0.52", "-91.5833, -123.331, -3.85607, 0.44", "-92.0104, -123.342, -3.82811, 0.44", "-92.8659, -123.442, -3.74305, 0.96", "-93.3255, -123.525, -3.67527, 1.18", "-94.0524, -123.697, -3.54814, 0.81", "-94.6126, -123.845, -3.41371, 0.81", "-95.147, -123.974, -3.26209, 1.4", "-95.7562, -124.088, -3.07797, 1.4", "-96.4611, -124.152, -2.87327, 0.29", "-96.5049, -124.15, -2.8613, 0.29", "-97.0115, -124.045, -2.75513, 0.29", "-97.5053, -123.861, -2.68794, 0.88", "-97.8924, -123.668, -2.67876, 0.59", "-98.2589, -123.469, -2.71474, 0.88", "-98.5025, -123.349, -2.76046, 0.88", "-98.7754, -123.247, -2.82081, 0.74", "-99.2089, -123.148, -2.93094, 0.74", "-99.5352, -123.119, -3.0134, 0.44", "-100.046, -123.116, -3.10793, 0.29", "-100.337, -123.122, -3.14892, 0.29", "-100.962, -123.144, -3.21687, 0.29", "-101.37, -123.148, -3.25033, 1.11", "-101.801, -123.132, -3.27629, 1.33", "-102.753, -123.054, -3.3262, 0.37", "-103.124, -123.025, -3.33786, 0.37", "-103.166, -123.022, -3.33923, 0.37", "-103.672, -122.996, -3.37256, 0.37", "-104.096, -122.989, -3.45443, 0.37", "-104.608, -122.996, -3.57726, 0.44", "-105.32, -123.083, -3.80547, 1.33", "-105.779, -123.174, -3.95671, 1.55", "-106.258, -123.298, -4.12079, 1.11", "-107.049, -123.587, -4.41233, 0.59" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-44.3531, -84.0258, -6.87583, 0.88", "-43.9263, -86.6843, -7.43951, 0.88", "-43.6363, -88.5677, -7.90315, 0.88", "-43.3184, -90.6017, -8.50928, 0.88", "-43.0525, -92.8082, -9.23292, 1.25", "-42.8875, -95.1774, -9.9654, 0.66", "-42.8454, -97.2634, -10.5835, 0.66", "-42.857, -97.3827, -10.6229, 0.66", "-43.3091, -99.3489, -11.2859, 0.52", "-43.9253, -100.807, -11.72, 0.52", "-44.9751, -102.627, -12.0947, 0.88", "-45.4676, -103.383, -12.1889, 0.88", "-45.9923, -104.276, -12.3079, 0.88", "-46.4474, -105.218, -12.5025, 0.52", "-47.0414, -106.725, -12.9961, 0.52", "-47.3951, -108.053, -13.7348, 0.74", "-47.6885, -109.501, -14.7514, 1.18", "-48.0012, -111.18, -15.9513, 1.18", "-48.3005, -112.899, -17.1625, 0.96", "-48.6531, -115.152, -18.6985, 1.33", "-49.0606, -118.165, -20.6307, 0.96", "-49.2948, -120.166, -21.7971, 0.52", "-49.6033, -123.398, -23.3743, 0.52", "-49.724, -125.058, -24.0076, 1.33", "-49.8035, -126.677, -24.4492, 1.69", "-49.9245, -128.725, -24.778, 1.69", "-50.0353, -130.0, -24.8538, 1.33", "-50.2427, -131.812, -24.9104, 0.74", "-50.4797, -132.998, -24.9469, 0.37", "-50.8767, -134.112, -24.9914, 0.29", "-51.7049, -135.528, -25.0805, 0.29", "-52.179, -136.106, -25.1297, 0.96", "-53.0025, -136.885, -25.2111, 0.96", "-53.8628, -137.503, -25.2887, 0.96", "-53.9637, -137.564, -25.2968, 0.96", "-54.5375, -137.886, -25.3363, 0.96" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-0.989953, 32.7066, -2.69529, 0.52", "-0.76791, 32.5525, -3.74491, 0.52", "-0.399666, 32.3569, -5.42103, 0.52", "0.207408, 32.1173, -7.82165, 0.66", "1.19094, 31.8662, -11.1681, 0.88", "2.43949, 31.6988, -14.9287, 0.66", "3.16536, 31.6944, -16.9172, 0.29", "3.19468, 31.6992, -16.9901, 0.29", "3.6955, 31.8776, -18.0077, 0.29", "4.30162, 32.217, -18.9408, 0.88", "4.89856, 32.5825, -19.6247, 1.11", "6.40158, 33.4093, -21.0397, 0.29", "7.19038, 33.85, -21.8101, 0.22", "7.24453, 33.8795, -21.8702, 0.22", "7.91808, 34.2608, -22.7002, 1.25", "9.59142, 35.1575, -24.9671, 0.22", "10.0934, 35.421, -25.6844, 0.22", "10.7231, 35.7502, -26.5926, 0.66", "11.9216, 36.3973, -28.4331, 1.25", "12.2618, 36.5837, -28.9543, 1.55", "13.6055, 37.2899, -31.0702, 1.25", "14.7269, 37.9046, -32.931, 0.29", "14.9734, 38.0398, -33.3452, 0.59", "15.7479, 38.4625, -34.6005, 0.22", "16.4123, 38.8109, -35.5915, 1.69", "18.2503, 39.7065, -38.4115, 0.74", "19.1871, 40.2058, -39.8578, 0.37", "19.6527, 40.4645, -40.5833, 0.22", "19.9529, 40.6339, -41.0449, 0.66", "21.0085, 41.2391, -42.6253, 1.69", "23.2716, 42.5843, -46.13, 0.59", "24.1116, 43.1053, -47.4413, 1.55", "25.6234, 44.0519, -49.8285, 0.74", "25.9481, 44.261, -50.3576, 1.11", "25.9918, 44.2903, -50.432, 1.11", "27.5114, 45.2018, -52.9934, 0.22", "27.551, 45.2234, -53.0542, 0.22", "27.9683, 45.4173, -53.7552, 0.52", "28.8534, 45.8181, -55.3154, 1.18", "30.0842, 46.3767, -57.4669, 1.03", "31.11, 46.8289, -59.4915, 0.29", "31.7279, 47.0916, -60.7904, 1.25", "33.5323, 47.9113, -64.7606, 1.33", "33.6254, 47.9573, -64.979, 1.33", "33.91, 48.132, -65.742, 1.33", "36.0541, 49.8286, -72.0273, 0.74", "36.0793, 49.8532, -72.1111, 0.74", "36.4838, 50.2677, -73.4781, 0.29", "36.6247, 50.424, -73.9336, 0.88", "37.8351, 51.7932, -77.7624, 0.29", "38.2257, 52.2009, -78.9058, 1.47", "39.7147, 53.6359, -82.7482, 0.44", "40.0417, 53.9129, -83.5449, 1.03", "40.9751, 54.5872, -85.6974, 0.52", "42.1409, 55.2854, -88.0654, 1.55", "43.6294, 55.9941, -90.5591, 0.44", "43.7103, 56.0251, -90.6894, 0.44", "44.1558, 56.1591, -91.4073, 0.44", "44.264, 56.195, -91.665, 0.44", "44.5106, 56.2959, -92.5976, 0.59", "44.9408, 56.6172, -94.8056, 0.96", "45.3398, 57.1771, -98.3185, 1.25", "45.639, 57.8319, -101.848, 1.11", "46.1499, 59.1698, -108.303, 0.74", "46.5389, 60.3216, -113.314, 0.96", "46.7189, 60.9096, -115.687, 1.11", "47.1746, 62.5661, -121.749, 1.99", "47.7608, 64.5362, -128.163, 0.81", "48.13, 65.5555, -131.096, 0.29", "48.4197, 66.1395, -132.581, 1.03", "48.8755, 66.9203, -134.398, 1.25", "49.3631, 67.6477, -136.039, 0.88", "49.8417, 68.312, -137.188, 0.29", "50.1185, 68.7222, -137.784, 0.66", "50.6628, 69.6355, -139.059, 0.52", "50.6865, 69.6696, -139.113, 0.52", "51.2785, 70.3754, -140.476, 0.81", "51.315, 70.4129, -140.558, 0.81", "52.157, 71.2368, -142.432, 0.81", "53.4755, 72.3862, -145.273, 0.37", "54.5504, 73.2211, -147.447, 1.18", "55.8152, 74.1408, -149.931, 0.29", "56.2098, 74.3976, -150.663, 0.96", "56.3867, 74.5062, -150.972, 0.96", "57.4136, 74.9972, -152.711, 0.37", "57.6579, 75.1077, -153.098, 0.88", "57.7004, 75.1324, -153.171, 0.88", "58.1031, 75.3853, -153.843, 1.11", "58.1495, 75.4135, -153.917, 1.11", "60.5348, 76.8556, -157.424, 0.29", "61.0863, 77.1959, -158.21, 0.96", "62.1342, 77.8377, -159.638, 0.37", "62.9805, 78.392, -160.769, 0.29", "63.7191, 78.9295, -161.721, 0.52", "64.7053, 79.7388, -162.884, 0.66", "65.9919, 80.9489, -164.192, 1.03", "66.4295, 81.3673, -164.652, 1.03", "68.0072, 82.8442, -166.254, 0.29", "68.6548, 83.4671, -166.961, 0.29", "69.1926, 84.0192, -167.544, 0.59", "69.4935, 84.3316, -167.834, 0.88", "70.9419, 85.7839, -169.043, 0.29", "71.3173, 86.1668, -169.366, 0.96", "71.3772, 86.2275, -169.414, 0.96", "72.1506, 87.0006, -170.035, 0.29", "72.7758, 87.6389, -170.527, 1.18", "73.0326, 87.9159, -170.712, 1.55", "74.2111, 89.2886, -171.533, 0.29", "74.7046, 89.8474, -171.895, 0.29", "75.1327, 90.2771, -172.196, 0.74", "75.2118, 90.3454, -172.247, 0.74", "75.7028, 90.7223, -172.527, 0.74", "77.1011, 91.5759, -173.361, 0.22", "77.5958, 91.7907, -173.636, 0.22", "78.2868, 92.071, -174.054, 1.03", "78.9669, 92.3495, -174.471, 1.25", "79.0325, 92.3777, -174.51, 1.25", "81.1964, 93.3164, -175.727, 0.29", "81.9629, 93.6424, -176.149, 0.29", "83.2563, 94.1789, -176.872, 0.29", "83.9237, 94.453, -177.269, 0.29", "84.4528, 94.6933, -177.589, 0.81", "85.1649, 95.0564, -178.043, 1.11", "86.8711, 95.9817, -179.112, 0.22", "87.5339, 96.3249, -179.54, 1.11", "89.0391, 97.0564, -180.565, 0.22", "89.978, 97.5114, -181.25, 0.22", "91.3433, 98.1834, -182.263, 0.44", "92.1673, 98.6055, -182.855, 1.11", "92.8626, 98.9521, -183.311, 1.25", "94.9698, 99.8901, -184.553, 0.22", "96.0867, 100.345, -185.098, 0.88", "96.8271, 100.594, -185.406, 0.88", "97.9683, 100.929, -185.804, 0.22", "98.646, 101.109, -186.022, 0.88", "100.004, 101.419, -186.393, 0.22", "101.31, 101.581, -186.674, 0.22", "102.349, 101.659, -186.912, 0.22", "103.371, 101.737, -187.188, 0.88", "103.908, 101.785, -187.351, 1.11", "103.976, 101.793, -187.373, 1.11", "105.629, 102.012, -187.971, 0.22", "105.793, 102.032, -188.032, 0.22", "106.95, 102.247, -188.449, 0.22", "107.827, 102.409, -188.747, 0.22", "107.904, 102.42, -188.772, 0.22", "108.77, 102.524, -189.026, 1.03", "108.853, 102.529, -189.047, 1.03", "109.658, 102.558, -189.23, 1.03", "111.352, 102.59, -189.594, 0.22", "112.337, 102.629, -189.792, 0.22", "113.26, 102.697, -189.959, 1.4", "114.323, 102.81, -190.125, 1.47", "115.906, 103.078, -190.349, 0.22", "116.392, 103.19, -190.406, 0.59", "116.572, 103.24, -190.419, 0.59", "117.181, 103.429, -190.462, 0.81", "117.291, 103.467, -190.479, 0.81", "118.316, 103.77, -190.697, 0.15", "118.725, 103.857, -190.798, 0.15", "119.449, 103.942, -191.009, 0.74", "119.603, 103.946, -191.056, 0.74", "121.678, 103.831, -191.68, 0.22", "123.107, 103.697, -192.131, 0.22", "123.176, 103.689, -192.152, 0.22", "124.205, 103.572, -192.474, 1.25", "125.056, 103.491, -192.686, 1.25", "126.208, 103.368, -192.895, 0.37", "127.97, 103.119, -192.954, 0.22", "128.851, 102.997, -192.902, 0.37", "129.039, 102.969, -192.877, 0.37", "130.734, 102.741, -192.523, 0.88", "131.354, 102.667, -192.364, 0.88", "133.231, 102.372, -191.82, 0.22", "134.049, 102.197, -191.592, 0.74", "134.643, 102.048, -191.487, 0.96", "135.265, 101.875, -191.435, 0.96", "136.292, 101.563, -191.45, 0.22", "137.684, 101.157, -191.552, 0.22", "139.586, 100.621, -191.836, 0.22", "140.839, 100.277, -192.007, 0.74", "141.339, 100.138, -192.067, 1.03", "141.45, 100.11, -192.079, 1.03", "141.925, 100.018, -192.117, 1.25", "142.101, 100.009, -192.136, 1.25", "143.852, 100.072, -192.35, 0.22", "144.835, 100.134, -192.469, 0.15", "145.5, 100.156, -192.553, 0.88", "146.258, 100.158, -192.653, 1.11", "148.244, 100.123, -192.93, 0.22", "149.035, 100.103, -193.065, 0.81", "149.576, 100.091, -193.178, 0.81", "151.092, 100.051, -193.492, 0.29", "151.332, 100.038, -193.549, 0.29", "152.214, 99.9607, -193.802, 0.29", "153.258, 99.8434, -194.33, 0.96", "153.925, 99.7678, -194.814, 0.59", "153.982, 99.7617, -194.863, 0.59", "154.924, 99.6296, -195.79, 0.59", "155.736, 99.4714, -196.62, 1.33", "157.976, 98.9055, -198.998, 0.22", "158.423, 98.7716, -199.48, 1.11", "158.881, 98.6215, -199.977, 1.33", "160.374, 98.1073, -201.56, 0.22", "160.807, 97.9437, -201.983, 0.66", "161.034, 97.8537, -202.186, 0.81", "161.113, 97.8186, -202.242, 0.81", "161.925, 97.4459, -202.798, 0.22", "161.983, 97.4186, -202.84, 0.22", "162.782, 97.0557, -203.298, 0.22", "169.319, 100.811, -211.712, 0.22" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-0.989953, 32.7066, -2.69529, 0.96", "-1.24886, 33.4726, -3.00979, 0.96", "-1.53307, 34.1184, -3.46656, 0.96", "-1.88394, 34.7899, -3.99321, 0.81", "-2.19365, 35.3291, -4.45802, 0.52", "-2.71676, 36.2335, -5.2268, 0.52", "-3.95017, 38.6564, -7.18727, 0.96", "-4.42131, 39.7742, -8.11415, 0.96", "-4.67347, 40.5024, -8.70819, 0.96", "-4.96851, 41.5245, -9.50168, 0.52", "-5.15038, 42.2638, -10.0014, 0.44", "-5.4354, 43.568, -10.6153, 0.44", "-5.58709, 44.6383, -10.7984, 0.37", "-5.67544, 45.4661, -10.8783, 0.66", "-5.75813, 46.0239, -10.9151, 1.03", "-5.96545, 46.7677, -10.9587, 1.4", "-6.25417, 47.3341, -11.0283, 1.33", "-6.91742, 48.3075, -11.1739, 0.96", "-6.95436, 48.3558, -11.1835, 0.96", "-7.37882, 48.8906, -11.3062, 0.96", "-7.90164, 49.5619, -11.4757, 0.81", "-8.67576, 50.5924, -11.7463, 1.18", "-9.28213, 51.4616, -11.9436, 1.47" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-17.2195, 37.1775, 10.4434, 0.74", "-18.1315, 36.8719, 10.7567, 0.74", "-18.709, 36.6827, 10.9993, 0.88", "-19.1059, 36.5585, 11.1777, 0.96", "-19.7211, 36.3757, 11.457, 0.96", "-20.1715, 36.2491, 11.6742, 0.81", "-20.6153, 36.1339, 11.8925, 0.74", "-21.1661, 36.0157, 12.1818, 0.74", "-21.5904, 35.9493, 12.4154, 0.59", "-22.0231, 35.8953, 12.6534, 0.88", "-22.4047, 35.8537, 12.8629, 0.81", "-22.7519, 35.8207, 13.038, 0.81", "-23.2017, 35.7844, 13.2473, 1.33", "-23.585, 35.7535, 13.4062, 1.33", "-24.0456, 35.7134, 13.5946, 0.81", "-24.549, 35.6633, 13.7885, 0.81", "-25.0953, 35.6011, 13.9568, 0.81", "-25.6549, 35.5266, 14.0973, 0.81", "-25.7007, 35.5201, 14.1076, 0.81", "-26.014, 35.4768, 14.1647, 0.74", "-26.5083, 35.4189, 14.2355, 0.66", "-27.2267, 35.3288, 14.2928, 0.96", "-27.8115, 35.2451, 14.3174, 0.96" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-17.2195, 37.1775, 10.4434, 1.33", "-18.2008, 38.072, 11.2012, 1.33", "-18.683, 38.5266, 11.564, 1.33", "-19.3142, 39.18, 12.0023, 1.69", "-19.7083, 39.5932, 12.2488, 1.84", "-20.466, 40.3784, 12.7213, 1.55", "-21.3003, 41.234, 13.2319, 1.18", "-21.8464, 41.7943, 13.5622, 1.18", "-22.6414, 42.6224, 14.0492, 1.25", "-23.1152, 43.1282, 14.3295, 1.25", "-23.7611, 43.8189, 14.6964, 1.55", "-23.9968, 44.0622, 14.8032, 1.92", "-24.7919, 44.8406, 15.1461, 2.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "3.76101, -67.0215, -5.77111, 1.18", "4.32841, -67.214, -5.22886, 1.18", "5.22771, -67.5287, -4.34192, 0.96", "6.32611, -67.9143, -3.24652, 0.96", "8.10483, -68.5247, -1.44428, 0.96", "9.44522, -68.9754, -0.0775538, 0.74", "10.6396, -69.3331, 1.09569, 0.66", "11.0428, -69.4578, 1.51363, 0.96", "11.0968, -69.4747, 1.56905, 0.96", "11.9676, -69.712, 2.35578, 0.96", "12.0385, -69.7292, 2.39674, 0.96", "13.252, -70.0322, 2.80891, 0.74", "13.4075, -70.0854, 2.84412, 0.74", "14.7962, -70.7224, 3.09464, 0.74", "15.5258, -71.1337, 3.21485, 0.81", "16.0397, -71.4683, 3.28801, 1.18", "17.3561, -72.3844, 3.47727, 1.03", "18.2127, -73.044, 3.60251, 1.11", "19.6559, -74.1853, 3.81687, 0.74", "20.521, -74.9178, 3.94939, 1.11", "21.2434, -75.5494, 4.06139, 1.92" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "3.76101, -67.0215, -5.77111, 1.03", "3.89756, -68.0079, -5.55151, 1.03", "3.93016, -69.0227, -5.37477, 0.88", "3.92443, -69.9346, -5.2416, 1.18", "3.89251, -70.8985, -5.11709, 1.25", "3.86061, -71.6547, -5.02286, 1.25", "3.79205, -72.9882, -4.87068, 0.88", "3.62019, -75.0196, -4.65672, 0.88", "3.5248, -76.0553, -4.56711, 1.03", "3.47399, -76.8517, -4.53675, 1.03", "3.44023, -77.9963, -4.53434, 0.88", "3.46552, -78.6875, -4.54999, 0.88", "3.56068, -79.2914, -4.58281, 0.88", "3.86232, -80.1807, -4.66018, 0.88", "4.2447, -80.919, -4.74467, 1.33", "4.28042, -80.9674, -4.75112, 1.33", "4.83276, -81.5643, -4.83517, 1.55", "5.4959, -82.2224, -4.92121, 1.77", "5.95799, -82.6791, -4.97614, 1.99", "6.34653, -83.063, -5.01747, 1.99", "7.31686, -84.0364, -5.10343, 1.47", "8.28376, -85.0252, -5.19345, 1.33", "9.1392, -85.9342, -5.28055, 1.33", "9.74919, -86.61, -5.35177, 1.69", "10.1205, -87.0372, -5.3976, 1.69" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "2.64368, -76.7842, -0.829118, 0.96", "2.96669, -77.3965, -0.0664821, 0.96", "3.3688, -78.5515, 1.27161, 0.52", "3.43986, -78.8717, 1.5893, 0.81", "3.52803, -79.8939, 2.45748, 0.74", "3.51338, -80.8183, 3.14063, 1.11", "3.46115, -81.8025, 3.77945, 0.74", "3.39552, -82.532, 4.18592, 0.52", "3.27524, -83.4946, 4.58789, 0.52", "3.15175, -84.572, 4.98503, 0.52", "3.09703, -85.3722, 5.20799, 0.37", "3.09739, -86.1313, 5.39715, 0.52", "3.17785, -87.2952, 5.67832, 0.81", "3.26309, -87.8693, 5.86285, 1.11", "3.3681, -88.4307, 6.10835, 0.44", "3.5137, -89.1491, 6.52409, 0.37", "3.51933, -89.7101, 6.99394, 0.74", "3.37714, -89.9102, 7.25922, 0.74", "2.81927, -90.2375, 7.81278, 0.74", "2.24945, -90.5052, 8.25342, 0.59", "1.77714, -90.7383, 8.5628, 0.59", "1.39942, -90.9648, 8.79478, 0.88", "1.02072, -91.2744, 9.00947, 0.96", "0.726979, -91.6465, 9.19638, 0.81", "0.358629, -92.3307, 9.45236, 0.52", "0.10917, -93.008, 9.71167, 0.52", "-0.0924497, -93.6826, 10.0095, 0.88", "-0.156773, -93.944, 10.1505, 1.03", "-0.339487, -94.8434, 10.7612, 0.52", "-0.392399, -95.1379, 10.9965, 0.52", "-0.50788, -95.814, 11.6403, 0.81", "-0.654665, -96.5108, 12.4261, 0.81", "-0.851076, -97.1701, 13.2554, 0.44", "-1.06434, -97.6785, 13.9385, 0.81", "-1.07848, -97.7027, 13.9729, 0.81", "-1.46475, -98.2547, 14.7244, 0.52", "-1.71413, -98.574, 15.1387, 0.59", "-2.03824, -98.9378, 15.5733, 0.59", "-2.47557, -99.3349, 15.9721, 0.81", "-2.81285, -99.6109, 16.1912, 0.96", "-3.13396, -99.8602, 16.3597, 1.11" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "2.64368, -76.7842, -0.829118, 0.74", "2.47145, -79.0456, -0.861923, 0.74", "2.69684, -81.0145, -0.744262, 0.59", "2.71946, -81.079, -0.727796, 0.59", "3.37059, -82.3787, -0.216884, 0.59", "3.49756, -82.6828, -0.119127, 0.59", "3.94228, -83.9075, 0.166894, 0.59", "4.27736, -84.754, 0.343561, 0.88", "5.01371, -86.5887, 0.580249, 0.88", "5.749, -88.4853, 0.674563, 0.66", "7.13371, -92.2542, 0.611333, 1.25", "7.77775, -94.0469, 0.491856, 0.81", "8.29896, -95.5594, 0.287278, 0.74", "8.87524, -97.3172, -0.0637146, 0.74", "9.19937, -98.3738, -0.374179, 0.74", "9.22529, -98.4601, -0.405621, 0.74", "9.4643, -99.2052, -0.696797, 1.03", "9.72883, -100.374, -1.02308, 0.37", "9.79699, -101.542, -1.23307, 0.37", "9.72871, -102.028, -1.25325, 0.81", "9.5117, -102.829, -1.20684, 0.81", "9.22, -103.707, -1.10645, 0.81", "8.90934, -104.582, -0.952289, 0.66", "8.89105, -104.642, -0.938637, 0.66", "8.72144, -105.481, -0.770768, 0.66", "8.62246, -106.549, -0.621427, 0.59", "8.62097, -107.374, -0.549814, 0.81", "8.7287, -108.509, -0.446169, 0.88", "8.92363, -109.748, -0.333515, 1.18", "9.11543, -110.638, -0.266705, 1.33", "9.44979, -111.797, -0.211717, 0.59", "9.74872, -112.662, -0.195303, 0.81", "10.3084, -114.079, -0.222732, 0.44", "10.8323, -115.31, -0.292559, 0.37", "11.3398, -116.452, -0.483837, 0.37", "11.6623, -117.206, -0.696531, 0.88", "11.957, -117.986, -0.984477, 1.11", "12.2149, -118.912, -1.37972, 1.11", "12.2241, -118.979, -1.40992, 1.11", "12.227, -120.979, -2.19581, 0.66", "12.0279, -122.428, -2.62134, 0.59", "11.8009, -123.434, -2.80056, 0.59", "11.4951, -124.532, -2.8826, 0.59", "11.1573, -125.623, -2.86834, 1.18", "10.9558, -126.3, -2.80584, 1.33", "10.704, -127.171, -2.62403, 1.33", "10.4607, -128.196, -2.3999, 0.74", "10.3335, -129.054, -2.29635, 0.59", "10.3298, -129.134, -2.29586, 0.59", "10.3673, -130.011, -2.38852, 0.44", "10.3742, -130.083, -2.40746, 0.44", "10.4878, -131.13, -2.8106, 0.81", "10.536, -132.217, -3.31216, 1.11", "10.5351, -132.459, -3.41193, 1.11", "10.5322, -132.536, -3.4363, 1.11", "10.4318, -133.728, -3.70808, 0.37", "10.3222, -134.574, -3.83614, 0.37", "10.1314, -135.79, -3.87868, 0.74", "9.96475, -136.769, -3.82946, 1.18", "9.77528, -137.767, -3.738, 1.18", "9.62221, -138.531, -3.63853, 1.03", "9.50446, -139.387, -3.44545, 0.59", "9.41435, -140.609, -3.108, 0.59", "9.41725, -140.689, -3.07997, 0.59", "9.60152, -141.915, -2.63361, 0.29", "9.62356, -141.977, -2.60814, 0.29", "10.5549, -143.734, -1.90301, 0.29", "10.5929, -143.799, -1.87783, 0.29", "11.1482, -144.759, -1.5541, 0.96", "11.5468, -145.526, -1.31281, 0.96", "12.1083, -146.794, -0.931287, 0.29", "12.3306, -147.636, -0.689503, 0.29", "12.4049, -148.76, -0.402635, 0.29", "12.3719, -149.438, -0.217723, 0.52", "12.2357, -150.198, 0.0266807, 0.52", "12.0031, -151.058, 0.348318, 0.29", "11.6861, -152.038, 0.761059, 0.29", "11.5805, -152.386, 0.927532, 1.18", "11.455, -152.984, 1.20646, 1.33", "11.3301, -153.924, 1.60034, 1.33", "11.2616, -154.871, 1.92429, 1.11", "11.2155, -155.91, 2.19711, 0.52", "11.2146, -155.998, 2.21311, 0.52", "11.2772, -157.304, 2.42032, 0.29", "11.3515, -158.049, 2.51563, 0.88", "11.4345, -158.788, 2.59098, 0.88", "11.512, -159.374, 2.65178, 0.66", "11.5898, -160.142, 2.74484, 0.44", "11.5954, -161.304, 2.98487, 0.29", "11.5814, -161.39, 3.00663, 0.29", "11.3459, -162.049, 3.06063, 0.29", "11.3034, -162.149, 3.0516, 0.29", "11.0511, -162.808, 2.95681, 0.29", "10.7402, -163.781, 2.77766, 0.88", "10.4781, -164.96, 2.53091, 1.03", "10.2717, -166.84, 2.14227, 0.37", "10.2761, -167.954, 1.99772, 0.37", "10.3557, -169.021, 1.92644, 1.11", "10.4892, -169.956, 1.92681, 1.11", "10.7177, -171.142, 2.02682, 1.03", "10.9308, -172.085, 2.18971, 1.03", "11.3786, -174.021, 2.6434, 0.29", "11.5068, -174.754, 2.81433, 0.29", "11.5918, -175.475, 2.97121, 0.74", "11.6261, -176.141, 3.12531, 1.03", "11.5971, -177.04, 3.36483, 1.33", "11.4735, -177.922, 3.62067, 1.03", "11.2204, -178.825, 3.88491, 0.29", "11.1896, -178.902, 3.91814, 0.29", "10.7703, -179.648, 4.36044, 0.29", "10.2984, -180.286, 4.8781, 0.88", "9.87549, -180.697, 5.3383, 0.88", "9.42065, -181.054, 5.84762, 0.88", "8.87535, -181.466, 6.47242, 0.96", "8.58866, -181.689, 6.80302, 0.96", "8.52472, -181.746, 6.88018, 0.96", "8.07104, -182.311, 7.43914, 0.29", "7.81334, -182.878, 7.81528, 0.29", "7.67922, -183.565, 8.07374, 0.29", "7.6757, -183.638, 8.09046, 0.29", "7.74034, -184.428, 8.23491, 0.96", "7.83444, -185.033, 8.32448, 0.96", "8.01297, -185.737, 8.45116, 0.44", "8.28305, -186.71, 8.64315, 0.37", "8.50801, -187.566, 8.83292, 1.25", "8.76181, -188.74, 9.07886, 1.47", "8.88947, -189.588, 9.23285, 1.18", "9.05453, -191.207, 9.49436, 0.74", "9.08756, -192.169, 9.6319, 0.37", "9.01071, -193.378, 9.7563, 0.29", "8.7835, -194.562, 9.7882, 0.29", "8.46423, -195.554, 9.75029, 1.03", "8.4295, -195.636, 9.74351, 1.03", "8.1233, -196.241, 9.64366, 1.25", "7.71307, -197.003, 9.50955, 1.18", "7.26294, -197.831, 9.38167, 0.88", "7.00109, -198.354, 9.36138, 0.66", "6.63228, -199.162, 9.40743, 0.37", "6.19814, -200.196, 9.56782, 0.29", "6.14327, -200.343, 9.60241, 0.29", "5.81372, -201.328, 9.98592, 0.29", "5.46715, -202.4, 10.5266, 0.88", "5.28483, -202.975, 10.8553, 1.33", "4.94788, -204.0, 11.5019, 1.55", "4.83798, -204.326, 11.7235, 1.84", "4.38465, -205.72, 12.6198, 0.44", "4.19315, -206.309, 12.9811, 0.81", "3.88842, -207.281, 13.4978, 0.37", "3.70463, -207.929, 13.8164, 0.29", "3.6898, -207.997, 13.843, 0.29", "3.66631, -208.82, 14.1033, 0.29", "3.68597, -208.891, 14.1148, 0.29", "3.90091, -209.378, 14.1793, 0.52", "3.97828, -209.522, 14.194, 0.52", "4.40176, -210.296, 14.2783, 0.37", "5.01564, -211.599, 14.4373, 0.29", "5.22973, -212.22, 14.4671, 0.74", "5.38807, -212.847, 14.4675, 0.81", "5.47712, -213.487, 14.4487, 0.52", "5.48478, -214.012, 14.4261, 1.03", "5.40115, -214.947, 14.3715, 1.25", "5.12486, -216.523, 14.2189, 0.29", "5.10542, -216.605, 14.2128, 0.29", "4.82048, -217.543, 14.1787, 0.29", "4.33566, -218.964, 14.303, 0.29", "4.30692, -219.048, 14.3209, 0.29", "4.14413, -219.552, 14.4968, 1.11", "3.98656, -220.066, 14.7058, 1.33", "3.80304, -220.689, 14.9483, 1.33", "3.36903, -222.216, 15.5097, 0.52", "3.0524, -223.395, 15.8526, 0.29", "2.76785, -224.635, 16.1303, 0.29", "2.62214, -225.745, 16.3173, 1.11", "2.59718, -226.509, 16.3918, 1.47", "2.65359, -227.331, 16.403, 1.11", "2.86404, -228.661, 16.2928, 0.44", "3.17559, -229.655, 16.1604, 0.44", "3.92246, -231.232, 15.8848, 0.44", "4.35742, -231.907, 15.7539, 0.96", "4.75985, -232.449, 15.6404, 1.18", "4.81358, -232.519, 15.6281, 1.18", "5.30978, -233.179, 15.5531, 0.29", "5.34248, -233.252, 15.548, 0.29", "5.43782, -234.006, 15.5476, 0.29", "5.47251, -234.711, 15.5804, 0.22", "5.49356, -235.879, 15.6552, 0.22", "5.50904, -236.224, 15.6696, 0.74", "5.60475, -237.326, 15.7387, 0.59", "5.72125, -237.98, 15.7645, 1.11", "5.8992, -238.61, 15.7669, 1.33", "5.93061, -238.684, 15.7627, 1.33", "6.57055, -239.728, 15.6605, 0.74", "7.37851, -240.744, 15.5173, 0.29", "8.2333, -241.603, 15.3476, 0.29", "8.713, -242.005, 15.2684, 0.66", "9.22058, -242.382, 15.1903, 0.37", "10.1059, -243.007, 15.0518, 0.29", "10.9067, -243.539, 14.9339, 0.88", "11.4388, -243.891, 14.8529, 1.25", "12.506, -244.66, 14.7105, 0.96", "13.2932, -245.302, 14.6095, 0.74", "13.9214, -245.914, 14.5241, 0.52", "14.632, -246.76, 14.4071, 0.29", "14.6888, -246.844, 14.4003, 0.29", "15.101, -247.663, 14.3638, 0.29", "15.1518, -247.826, 14.3612, 0.29", "15.3487, -248.929, 14.4075, 0.66", "15.4198, -249.682, 14.4981, 0.96", "15.4561, -250.66, 14.656, 0.52", "15.4831, -251.459, 14.8017, 0.52", "15.4928, -251.902, 14.8952, 0.52", "15.4973, -251.981, 14.9108, 0.52", "15.6747, -253.351, 15.1396, 0.22", "15.811, -254.035, 15.2219, 1.18", "16.0388, -254.764, 15.3087, 1.47", "16.5751, -256.112, 15.5287, 0.22", "16.8916, -256.845, 15.6666, 0.22", "17.248, -257.716, 15.8579, 1.03", "17.4098, -258.162, 15.9737, 1.03", "17.8917, -259.867, 16.5529, 0.37", "18.0831, -260.975, 16.9892, 0.29", "18.111, -261.751, 17.3243, 0.29", "17.9717, -262.654, 17.6962, 0.96", "17.7261, -263.478, 17.9794, 0.96", "17.3573, -264.466, 18.2149, 0.29", "17.0776, -265.169, 18.277, 0.29", "16.9104, -265.726, 18.2657, 0.52", "16.6984, -266.881, 18.1757, 0.44", "16.6388, -267.823, 18.0554, 0.37", "16.6553, -268.676, 17.9226, 0.37", "16.7347, -269.809, 17.7451, 0.37", "16.8186, -270.968, 17.5658, 1.18", "16.8371, -271.444, 17.4974, 1.18", "16.8093, -272.033, 17.4157, 1.18", "16.8013, -272.111, 17.4046, 1.11", "16.6519, -272.945, 17.2878, 0.66", "16.316, -274.129, 17.1298, 0.52", "15.8154, -275.475, 16.9322, 0.37", "15.3206, -276.659, 16.7425, 0.88" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-107.049, -123.587, -4.41233, 0.22", "-108.156, -123.86, -4.36448, 0.22", "-108.75, -124.024, -4.34529, 0.22", "-109.257, -124.163, -4.34215, 0.22", "-109.632, -124.25, -4.32553, 0.59", "-110.103, -124.365, -4.29312, 0.59", "-111.182, -124.63, -4.13502, 0.29", "-111.865, -124.814, -4.02348, 0.52", "-112.241, -124.919, -3.94848, 0.74", "-113.628, -125.268, -3.68443, 0.96", "-114.243, -125.396, -3.58964, 1.03", "-116.343, -125.717, -3.28045, 0.29", "-116.967, -125.777, -3.20693, 0.29", "-117.202, -125.784, -3.18679, 0.29", "-118.256, -125.792, -3.11772, 0.44", "-119.135, -125.748, -3.11807, 0.44", "-120.297, -125.579, -3.18934, 1.47", "-120.944, -125.395, -3.31116, 2.21", "-121.552, -125.179, -3.40798, 2.58" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-107.049, -123.587, -4.41233, 0.29", "-107.646, -121.667, -5.17938, 0.29", "-108.263, -119.633, -5.9341, 0.29", "-108.288, -119.519, -5.96843, 0.29", "-108.357, -118.87, -6.13995, 0.29", "-108.392, -118.542, -6.22668, 0.29", "-108.514, -117.392, -6.53051, 0.29", "-108.515, -117.216, -6.55583, 0.29", "-108.388, -115.553, -6.78337, 0.29", "-108.204, -114.111, -6.96727, 0.29" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-54.5375, -137.886, -25.3363, 0.96", "-53.6686, -139.741, -28.3453, 0.96", "-53.5046, -140.151, -28.9669, 0.96", "-53.1579, -141.126, -30.3883, 0.88", "-52.92, -141.834, -31.378, 1.11", "-52.3641, -143.569, -33.6976, 0.59", "-52.0964, -144.456, -34.8211, 0.22", "-52.0016, -144.935, -35.3485, 1.4", "-51.7154, -146.529, -37.0257, 0.22", "-51.6507, -146.989, -37.4624, 0.88", "-51.5937, -147.333, -37.7588, 0.88", "-51.4232, -148.462, -38.591, 0.15", "-51.3506, -149.383, -39.2085, 1.33", "-51.3517, -149.78, -39.4501, 1.55", "-51.4872, -151.429, -40.2755, 0.15", "-51.4934, -151.481, -40.2993, 0.15", "-51.5792, -152.128, -40.5492, 0.22", "-51.7406, -153.497, -40.9511, 0.22", "-51.7868, -154.125, -41.0807, 0.22", "-51.8031, -154.743, -41.18, 1.18", "-51.7965, -155.245, -41.2361, 1.47", "-51.7383, -156.058, -41.3265, 1.25", "-51.5204, -157.394, -41.5005, 0.22", "-51.3419, -158.285, -41.6498, 1.4", "-51.2227, -159.03, -41.8151, 1.55", "-51.1585, -159.652, -41.9828, 1.11", "-51.1568, -159.726, -42.0052, 1.11", "-51.2227, -160.76, -42.3222, 0.22", "-51.3447, -161.722, -42.5812, 0.22", "-51.4064, -162.227, -42.7111, 0.22", "-51.4829, -162.917, -42.8647, 1.18", "-51.5452, -163.55, -43.0141, 1.4", "-51.6112, -164.239, -43.1784, 0.22", "-51.701, -165.22, -43.4019, 0.22", "-51.7841, -166.301, -43.6917, 1.33", "-51.8158, -166.603, -43.7935, 1.47", "-52.0265, -168.032, -44.3705, 0.22", "-52.1403, -168.603, -44.6365, 0.37", "-52.223, -168.895, -44.7893, 0.37", "-52.525, -169.725, -45.2923, 0.22", "-52.8421, -170.488, -45.7767, 0.96", "-52.9568, -170.775, -45.9509, 1.11", "-53.088, -171.107, -46.1366, 1.33", "-53.2866, -171.605, -46.4032, 0.88", "-53.7742, -172.873, -47.0852, 0.22", "-54.0174, -173.519, -47.4295, 0.22", "-54.2558, -174.156, -47.7672, 0.22", "-54.7511, -175.451, -48.4651, 1.18", "-55.003, -176.101, -48.817, 1.69", "-55.3046, -176.895, -49.2482, 1.62", "-55.768, -178.135, -49.884, 0.22", "-55.8742, -178.461, -50.0492, 1.11", "-55.9821, -178.85, -50.2438, 1.11", "-55.9948, -178.92, -50.2757, 1.11", "-56.1244, -179.982, -50.7166, 0.22", "-56.1789, -180.463, -50.8821, 0.29", "-56.2079, -181.247, -51.1868, 0.22", "-56.2093, -181.296, -51.2167, 0.22", "-56.2221, -181.705, -51.5273, 1.18", "-56.2244, -181.755, -51.5705, 1.18", "-56.2463, -182.123, -51.913, 1.25", "-56.277, -182.999, -52.7428, 0.59", "-56.2944, -184.079, -53.7661, 0.15", "-56.2969, -184.416, -54.0585, 0.15", "-56.2923, -185.03, -54.5491, 1.11", "-56.2932, -185.308, -54.7536, 1.4", "-56.3308, -186.343, -55.4328, 0.22", "-56.3371, -186.4, -55.4626, 0.22", "-56.414, -186.995, -55.725, 0.22", "-56.5364, -187.91, -56.1141, 1.03", "-56.6015, -188.4, -56.3016, 1.25", "-56.7541, -189.563, -56.7052, 0.22", "-56.8768, -190.483, -56.9733, 0.22", "-56.97, -191.264, -57.1881, 0.96", "-57.0219, -191.747, -57.3097, 1.18", "-57.0957, -192.439, -57.4982, 0.59", "-57.1431, -193.165, -57.7039, 0.22", "-57.1672, -193.751, -57.8765, 0.22", "-57.1879, -194.449, -58.1112, 1.18", "-57.201, -194.731, -58.2122, 1.4", "-57.3049, -196.258, -58.7907, 0.29", "-57.363, -197.05, -59.1, 0.29", "-57.3678, -197.127, -59.1298, 0.29", "-57.4448, -198.298, -59.5694, 0.15", "-57.529, -199.174, -59.868, 0.59", "-57.5884, -199.657, -60.0197, 0.74", "-57.5977, -199.719, -60.0368, 0.74", "-57.8352, -200.741, -60.3598, 1.18", "-57.9523, -201.129, -60.493, 1.62", "-58.2456, -201.905, -60.7825, 1.77", "-58.6187, -202.792, -61.1413, 0.22", "-58.9243, -203.521, -61.4469, 0.22", "-59.232, -204.335, -61.8018, 0.22", "-59.4396, -204.971, -62.0826, 0.22", "-59.4529, -205.022, -62.1051, 0.22", "-59.5748, -205.622, -62.3561, 1.47", "-59.7196, -206.46, -62.69, 1.55", "-59.8961, -207.793, -63.1907, 0.22", "-59.954, -208.383, -63.3975, 0.22", "-60.0171, -208.963, -63.5803, 0.96", "-60.1028, -209.601, -63.7649, 0.96", "-60.2855, -210.708, -64.0569, 0.15", "-60.2999, -210.775, -64.0724, 0.15", "-60.5297, -211.707, -64.2189, 0.15", "-60.7153, -212.443, -64.3087, 1.25", "-60.7899, -212.754, -64.3355, 1.4", "-60.8038, -212.831, -64.3395, 1.4", "-60.8685, -213.281, -64.3459, 1.4", "-60.9758, -214.465, -64.3802, 0.22", "-60.9779, -214.53, -64.3825, 0.22", "-60.978, -215.13, -64.453, 0.22", "-60.9493, -216.239, -64.6611, 0.22", "-60.9462, -216.307, -64.6767, 0.22", "-60.9116, -217.049, -64.8742, 1.11", "-60.8849, -217.49, -65.0185, 1.11", "-60.7775, -218.959, -65.5488, 0.22", "-60.6917, -219.801, -65.8845, 1.18", "-60.6853, -219.854, -65.9062, 1.18", "-60.5766, -220.54, -66.1863, 1.47", "-60.3932, -221.453, -66.5453, 1.25", "-60.0477, -222.883, -67.0868, 0.15", "-59.7915, -223.762, -67.3864, 1.4", "-59.6286, -224.216, -67.5314, 1.4", "-59.0151, -225.641, -67.9789, 0.22", "-58.7218, -226.206, -68.1441, 0.52", "-58.6914, -226.261, -68.157, 0.52", "-58.5105, -226.575, -68.2121, 0.52", "-57.9722, -227.584, -68.3487, 0.22", "-57.7313, -228.074, -68.4084, 0.96", "-57.5586, -228.466, -68.4443, 1.11", "-57.19, -229.446, -68.5353, 0.22", "-57.016, -230.015, -68.5495, 0.29", "-56.9357, -230.444, -68.5373, 0.29", "-56.8569, -231.371, -68.4602, 0.81", "-56.8541, -231.441, -68.4508, 0.81", "-56.8454, -231.958, -68.3672, 1.11", "-56.8266, -233.11, -68.1555, 0.22", "-56.8164, -234.12, -67.9706, 0.22", "-56.8111, -234.327, -67.9305, 0.66", "-56.7516, -235.57, -67.6793, 0.22", "-56.743, -235.647, -67.6654, 0.22", "-56.5806, -236.591, -67.5232, 1.11", "-56.4178, -237.178, -67.476, 1.4", "-56.2018, -237.77, -67.4451, 0.88", "-55.8974, -238.524, -67.4334, 0.22", "-55.6201, -239.174, -67.4642, 0.22", "-55.5711, -239.278, -67.4746, 0.22", "-55.0729, -240.187, -67.5937, 1.18", "-54.8633, -240.527, -67.6437, 1.18", "-54.5384, -241.007, -67.713, 0.81", "-53.8822, -241.742, -67.8864, 0.52", "-53.0028, -242.578, -68.1262, 0.22", "-52.4841, -243.021, -68.2911, 0.22", "-52.0449, -243.355, -68.4349, 1.11", "-51.6973, -243.593, -68.5707, 1.11", "-50.0121, -244.629, -69.3089, 0.22", "-49.792, -244.756, -69.4087, 0.22", "-48.5401, -245.487, -69.9986, 1.47", "-48.1396, -245.732, -70.1958, 1.77", "-46.8451, -246.565, -70.8026, 1.4", "-45.8538, -247.257, -71.2203, 0.22", "-45.4982, -247.53, -71.3427, 0.66", "-45.2226, -247.764, -71.444, 0.81", "-44.0369, -248.871, -71.885, 0.22", "-43.4909, -249.468, -72.1185, 0.22", "-42.9192, -250.228, -72.3871, 1.11", "-42.7688, -250.477, -72.4811, 1.11", "-41.9134, -252.228, -73.1793, 0.22", "-41.8876, -252.295, -73.2071, 0.22", "-41.747, -252.82, -73.4289, 0.22", "-41.7143, -252.976, -73.497, 0.22", "-41.5883, -253.793, -73.8791, 0.96", "-41.4874, -254.494, -74.2086, 1.33", "-41.3688, -255.493, -74.6341, 1.84", "-41.3526, -255.608, -74.6808, 1.84", "-41.2538, -256.139, -74.8936, 1.84", "-40.9053, -257.996, -75.5857, 0.22", "-40.8952, -258.05, -75.6053, 0.22", "-40.7695, -258.753, -75.8528, 0.66", "-40.6936, -259.223, -76.0002, 0.66", "-40.5241, -260.343, -76.3196, 0.15", "-40.3645, -261.385, -76.534, 0.15", "-40.3519, -261.462, -76.5388, 0.15", "-40.239, -262.103, -76.5464, 0.74", "-40.2259, -262.172, -76.5443, 0.74", "-40.1531, -262.526, -76.5146, 0.74", "-39.903, -263.604, -76.3424, 0.15", "-39.7355, -264.134, -76.2394, 0.74", "-39.555, -264.582, -76.1353, 0.74", "-39.152, -265.349, -75.9142, 0.22", "-38.8709, -265.811, -75.7669, 1.03", "-38.827, -265.872, -75.7495, 1.03", "-38.46, -266.321, -75.644, 1.33", "-38.0652, -266.763, -75.5628, 1.33", "-37.3209, -267.511, -75.4468, 0.15", "-37.0631, -267.744, -75.4149, 0.44", "-36.3036, -268.446, -75.3405, 0.22", "-36.2588, -268.491, -75.3358, 0.22", "-35.8032, -268.997, -75.2844, 0.88", "-35.6486, -269.19, -75.2607, 0.88", "-35.5995, -269.262, -75.2458, 0.88", "-35.0651, -270.235, -74.9921, 0.22", "-34.7362, -270.981, -74.7783, 0.22", "-34.5594, -271.438, -74.6524, 0.96", "-34.3457, -272.01, -74.4858, 0.96", "-33.9437, -273.107, -74.1709, 0.22", "-33.688, -273.831, -73.9502, 0.22", "-33.3876, -274.725, -73.6615, 0.88", "-33.1999, -275.288, -73.4659, 0.88", "-32.8653, -276.29, -73.0996, 0.22", "-32.8432, -276.36, -73.0728, 0.22", "-32.6535, -277.039, -72.8136, 0.22", "-32.6386, -277.101, -72.7905, 0.22", "-32.5381, -277.651, -72.609, 1.03", "-32.4688, -278.053, -72.5164, 1.03", "-32.3009, -279.028, -72.3537, 0.29", "-32.1403, -279.817, -72.256, 0.29", "-31.9427, -280.668, -72.1925, 0.22", "-31.674, -281.784, -72.1356, 0.22", "-31.3926, -282.929, -72.1191, 1.03", "-31.3267, -283.199, -72.1217, 1.03", "-31.0064, -284.534, -72.1652, 0.22", "-30.8267, -285.315, -72.1941, 0.81", "-30.7422, -285.769, -72.2145, 1.03", "-30.6403, -286.551, -72.2609, 0.22", "-30.5863, -287.212, -72.2915, 0.52", "-30.5547, -287.813, -72.329, 0.22", "-30.543, -288.333, -72.3633, 0.74", "-30.5413, -288.686, -72.3833, 0.74", "-30.5294, -289.795, -72.442, 0.22", "-30.5235, -290.399, -72.4657, 0.22", "-30.5155, -290.806, -72.4954, 0.66", "-29.001, -300.166, -74.4762, 0.66" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-54.5375, -137.886, -25.3363, 0.37", "-54.2107, -138.338, -25.3087, 0.37", "-53.6975, -139.172, -25.2859, 0.37", "-53.6706, -139.226, -25.2856, 0.37", "-53.3414, -140.106, -25.2968, 0.37", "-53.324, -140.172, -25.2996, 0.37", "-53.1959, -140.893, -25.3431, 0.37", "-53.1067, -141.679, -25.4365, 1.03", "-53.0684, -142.327, -25.5572, 1.18", "-53.0273, -143.076, -25.7435, 0.81", "-52.9984, -143.843, -25.9686, 0.29", "-52.954, -144.555, -26.2043, 0.74", "-52.8755, -145.57, -26.5733, 1.18", "-52.7837, -146.491, -26.9207, 0.88", "-52.6645, -147.591, -27.3095, 0.59", "-52.6543, -147.677, -27.3379, 0.59", "-52.5672, -148.69, -27.6421, 0.66", "-52.5798, -149.516, -27.8593, 0.44", "-52.7179, -150.392, -28.0263, 0.37", "-52.9282, -151.113, -28.1186, 0.29", "-52.9771, -151.236, -28.14, 0.29", "-53.24, -151.859, -28.2644, 0.29", "-53.6747, -152.842, -28.4545, 1.55", "-53.8406, -153.243, -28.5121, 1.84", "-53.9363, -153.517, -28.541, 1.84", "-54.3666, -155.005, -28.6577, 0.37", "-54.5723, -155.814, -28.718, 0.37", "-54.7526, -156.631, -28.8038, 0.74", "-54.9965, -157.62, -28.9447, 0.74", "-55.2458, -158.452, -29.0916, 0.29", "-55.5439, -159.272, -29.2741, 0.29", "-55.9169, -160.139, -29.5, 1.33", "-56.3733, -161.082, -29.7945, 1.69", "-56.9091, -162.146, -30.1568, 0.66", "-57.2214, -162.761, -30.3772, 0.88", "-57.6576, -163.634, -30.6584, 0.29", "-57.9792, -164.3, -30.8524, 0.96", "-58.3967, -165.174, -31.0755, 1.55", "-58.6873, -165.768, -31.2187, 0.74", "-58.9771, -166.349, -31.3736, 0.29", "-59.2781, -166.905, -31.5428, 0.44", "-59.6155, -167.469, -31.7313, 0.66", "-60.0871, -168.158, -32.0009, 0.29", "-60.3551, -168.519, -32.1753, 0.22", "-60.6468, -168.902, -32.3737, 0.22", "-61.0452, -169.432, -32.6494, 1.03", "-61.4078, -169.914, -32.8923, 1.4", "-61.8165, -170.483, -33.149, 1.55", "-62.341, -171.219, -33.4641, 1.11", "-62.8885, -171.965, -33.7813, 0.22", "-62.9238, -172.009, -33.8004, 0.22", "-63.392, -172.497, -34.0293, 0.22", "-63.5733, -172.676, -34.1141, 0.74", "-64.0224, -173.111, -34.326, 0.88", "-64.325, -173.434, -34.4803, 0.88", "-64.6565, -173.867, -34.6775, 0.52", "-65.0758, -174.538, -34.9245, 0.22", "-65.4726, -175.291, -35.1578, 1.77", "-65.8254, -176.046, -35.3557, 1.77", "-66.2736, -177.118, -35.5919, 0.37", "-66.6137, -177.981, -35.7484, 0.29", "-67.0256, -179.056, -35.8937, 0.22", "-67.2269, -179.559, -35.9336, 1.11", "-67.472, -180.097, -35.963, 1.4", "-67.6615, -180.46, -35.9799, 1.47", "-67.8894, -180.836, -36.007, 1.62", "-68.284, -181.421, -36.1085, 1.62", "-68.806, -182.164, -36.3167, 1.25", "-69.2959, -182.863, -36.5317, 0.29", "-69.6624, -183.38, -36.7035, 0.22", "-69.9173, -183.74, -36.8396, 0.22", "-70.2391, -184.208, -37.0248, 0.66", "-70.5638, -184.658, -37.2094, 0.96", "-70.7965, -184.996, -37.3416, 0.96", "-70.8272, -185.049, -37.3605, 0.96", "-71.1853, -185.778, -37.6243, 0.52", "-71.4672, -186.44, -37.8524, 0.29", "-71.7867, -187.295, -38.0839, 0.22", "-71.9416, -187.743, -38.1978, 0.22", "-72.3031, -188.807, -38.4578, 0.96", "-72.5199, -189.448, -38.606, 1.55", "-72.7396, -190.035, -38.732, 1.25", "-73.1204, -191.014, -38.9205, 0.22", "-73.3987, -191.775, -39.0328, 0.59", "-73.5023, -192.041, -39.0591, 0.88", "-73.5568, -192.175, -39.0646, 0.88", "-73.8614, -193.051, -39.0385, 0.22", "-74.08, -193.815, -38.9966, 0.22", "-74.2213, -194.454, -38.9564, 0.22", "-74.2968, -194.847, -38.909, 0.66", "-74.3933, -195.329, -38.8228, 0.74", "-74.5951, -196.213, -38.6377, 0.22", "-74.8069, -197.03, -38.4494, 1.25", "-75.0013, -197.553, -38.3314, 1.77", "-75.2633, -198.112, -38.2232, 1.77", "-75.8898, -199.292, -38.0388, 0.29", "-76.0805, -199.635, -37.9983, 0.59", "-76.2174, -199.864, -37.9868, 0.59", "-76.6239, -200.556, -37.9515, 0.22", "-77.0161, -201.255, -37.9319, 0.59", "-77.1969, -201.634, -37.9064, 0.81", "-77.4583, -202.339, -37.8265, 0.22", "-77.476, -202.4, -37.815, 0.22", "-77.6606, -203.223, -37.6101, 1.33", "-77.7459, -203.664, -37.4783, 1.62", "-78.0082, -204.935, -37.0746, 0.22", "-78.1422, -205.489, -36.92, 0.22", "-78.1597, -205.558, -36.9064, 0.22", "-78.234, -205.881, -36.868, 0.88", "-78.3905, -206.679, -36.851, 1.03", "-78.4978, -207.353, -36.8794, 1.03", "-78.564, -207.874, -36.9365, 0.81", "-78.64, -208.688, -37.0209, 0.22", "-78.6726, -209.284, -37.0898, 0.22", "-78.6955, -209.846, -37.1595, 1.03", "-78.7219, -210.606, -37.2441, 1.25", "-78.7711, -211.366, -37.3228, 1.11", "-78.8898, -212.15, -37.3705, 0.74", "-79.0533, -212.829, -37.3822, 0.37", "-79.3299, -213.692, -37.3704, 0.22", "-79.5503, -214.263, -37.3426, 0.88", "-79.7051, -214.627, -37.311, 0.88", "-80.1092, -215.659, -37.1467, 0.15", "-80.285, -216.157, -37.0375, 0.15", "-80.3042, -216.217, -37.0227, 0.15", "-80.3969, -216.527, -36.9473, 0.96", "-80.5426, -216.995, -36.8146, 1.11", "-80.8703, -218.118, -36.4768, 0.22", "-81.0866, -218.989, -36.2155, 1.25", "-81.2293, -219.54, -36.0264, 1.47", "-81.5734, -220.756, -35.5908, 0.44", "-81.885, -221.678, -35.2582, 0.44", "-82.1476, -222.324, -35.0203, 0.22", "-82.3962, -222.867, -34.8182, 0.22", "-82.6706, -223.484, -34.5861, 0.44", "-82.9414, -224.165, -34.3273, 0.44", "-83.2027, -224.89, -34.0805, 0.44", "-83.4479, -225.636, -33.8677, 1.25", "-83.4647, -225.694, -33.8512, 1.25", "-83.5338, -226.037, -33.765, 1.25", "-83.6142, -227.306, -33.495, 0.22", "-83.5866, -227.729, -33.4105, 0.96", "-83.5188, -228.159, -33.3381, 0.96", "-83.3622, -229.047, -33.2333, 0.22", "-83.2081, -229.9, -33.1506, 1.11", "-83.1086, -230.416, -33.1111, 1.4", "-82.9885, -231.0, -33.081, 1.4", "-82.8258, -231.72, -33.0321, 0.29", "-82.6373, -232.511, -32.9225, 0.22", "-82.4715, -233.231, -32.7782, 0.22", "-82.4583, -233.296, -32.7612, 0.22", "-82.4167, -233.664, -32.6299, 0.88", "-82.3977, -234.094, -32.443, 0.88", "-82.3804, -235.228, -31.9068, 0.22", "-82.3771, -235.645, -31.7114, 0.59", "-82.3978, -235.88, -31.6144, 0.74", "-82.5422, -236.844, -31.273, 0.22", "-82.6285, -237.279, -31.1495, 0.22", "-82.7663, -237.875, -31.023, 1.03", "-82.8557, -238.292, -30.9572, 1.18", "-83.049, -239.39, -30.7948, 0.22", "-83.107, -239.753, -30.7273, 0.22", "-83.1812, -240.172, -30.6337, 0.88", "-83.2849, -240.643, -30.4508, 1.11", "-83.481, -241.461, -30.0379, 0.37", "-83.621, -242.05, -29.6965, 0.22", "-83.8799, -243.18, -28.9958, 0.88", "-84.0004, -243.737, -28.5985, 1.18", "-84.3234, -245.211, -27.4397, 0.22", "-84.3342, -245.263, -27.396, 0.22", "-84.394, -245.579, -27.1157, 0.59", "-84.4831, -246.083, -26.6, 1.11", "-84.6792, -247.587, -25.0304, 0.22", "-84.6825, -247.625, -24.9904, 0.22", "-84.6943, -247.766, -24.8418, 0.59", "-84.7087, -247.928, -24.6572, 0.59", "-84.812, -249.081, -23.0844, 0.29" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-9.28213, 51.4616, -11.9436, 0.37", "-9.22531, 52.6498, -11.8618, 0.37", "-9.05317, 53.879, -11.8185, 0.66", "-8.94428, 54.3614, -11.8093, 0.81", "-8.91968, 54.4784, -11.8108, 0.81", "-8.70277, 55.5661, -11.8425, 0.22", "-8.4883, 56.653, -11.8834, 0.96", "-8.33734, 57.273, -11.929, 0.96", "-8.0547, 58.4121, -12.0393, 0.22", "-7.90206, 59.2211, -12.112, 0.22", "-7.89571, 59.2934, -12.1177, 0.22", "-7.94764, 60.4886, -12.2399, 0.52", "-8.0027, 60.9222, -12.291, 0.52", "-8.1054, 61.4703, -12.3698, 0.52", "-8.28954, 62.3401, -12.5521, 0.66", "-8.40619, 62.955, -12.6927, 0.66", "-8.58425, 63.9088, -12.932, 0.96", "-8.71515, 64.5972, -13.1203, 0.66", "-8.87991, 65.5884, -13.3914, 0.66", "-9.01185, 66.6534, -13.6712, 0.29", "-9.10765, 67.7792, -13.9361, 1.03", "-9.11952, 68.157, -13.9939, 1.03", "-9.11871, 68.6601, -14.025, 1.03", "-9.10473, 69.1922, -14.0004, 0.37", "-9.06596, 69.7966, -13.9194, 0.37", "-8.99079, 70.634, -13.7514, 0.37", "-8.79442, 72.114, -13.3629, 0.22", "-8.62997, 73.0765, -13.0868, 1.33", "-8.43925, 74.1629, -12.7756, 1.55", "-8.30438, 74.9713, -12.5472, 1.55", "-8.20288, 75.8231, -12.32, 1.47", "-8.07915, 77.3812, -11.9877, 0.81", "-8.00167, 78.9045, -11.7501, 0.22", "-7.95153, 80.5384, -11.578, 0.37", "-7.94083, 81.097, -11.5504, 0.37", "-7.92406, 82.5195, -11.4917, 1.11", "-7.90277, 84.0845, -11.4531, 0.22", "-7.87419, 84.8707, -11.4399, 0.59", "-7.80215, 85.4806, -11.4013, 0.59", "-7.68278, 85.9459, -11.3391, 0.59", "-7.29556, 87.0556, -11.1273, 0.29", "-7.07469, 87.5562, -10.9828, 0.96", "-6.64054, 88.4455, -10.656, 1.25", "-6.3792, 88.9722, -10.4654, 0.52", "-5.97512, 89.8068, -10.1836, 0.22", "-5.69145, 90.4552, -9.98912, 0.59", "-5.36158, 91.2613, -9.80393, 0.37", "-4.88349, 92.5417, -9.57517, 0.29", "-4.57281, 93.4574, -9.45953, 0.66", "-4.28065, 94.3597, -9.43287, 0.74", "-4.08157, 94.9757, -9.477, 1.47", "-3.82396, 95.7777, -9.60709, 1.33", "-3.585, 96.5606, -9.81316, 1.18", "-3.56418, 96.626, -9.83493, 1.18", "-2.97484, 98.0587, -10.3757, 0.29", "-2.74957, 98.4717, -10.5361, 0.44", "-2.51551, 98.8271, -10.6425, 0.44", "-2.4775, 98.883, -10.6515, 0.44", "-1.9959, 99.6061, -10.6479, 0.44", "-1.66669, 100.14, -10.5723, 0.59", "-1.38916, 100.615, -10.4493, 0.37", "-1.01952, 101.237, -10.2923, 0.22", "-0.676874, 101.827, -10.1561, 0.22", "-0.188205, 102.757, -9.96366, 0.96", "0.136625, 103.504, -9.83313, 1.11", "0.420336, 104.302, -9.7234, 0.88", "0.734375, 105.378, -9.61737, 0.22", "1.01455, 106.505, -9.5239, 0.22", "1.17123, 107.196, -9.44396, 0.22", "1.32665, 107.991, -9.3346, 0.22", "1.48087, 108.933, -9.17587, 1.11", "1.59957, 109.819, -9.00611, 1.62", "1.74481, 111.082, -8.74323, 0.29", "1.8559, 111.859, -8.5689, 0.37", "2.01873, 112.653, -8.38702, 0.37", "2.22715, 113.545, -8.17434, 0.29", "2.33942, 114.032, -8.06647, 0.88", "2.47619, 114.672, -7.92864, 1.11", "2.5716, 115.172, -7.8312, 1.11", "2.71031, 115.986, -7.67854, 0.88", "2.95279, 117.47, -7.37594, 0.22", "3.13678, 118.552, -7.1398, 0.22", "3.31436, 119.567, -6.91067, 0.88", "3.40806, 120.103, -6.78624, 1.11", "3.42143, 120.187, -6.76734, 1.11", "3.48991, 120.695, -6.66441, 1.11", "3.49719, 120.777, -6.65776, 1.11", "3.50983, 121.448, -6.66266, 1.03", "3.51033, 121.551, -6.66237, 1.03", "3.5155, 122.331, -6.59441, 0.88", "3.51583, 123.083, -6.52486, 0.29", "3.49894, 124.482, -6.38467, 0.22", "3.48022, 125.51, -6.27175, 1.25", "3.44903, 126.887, -6.09616, 1.55", "3.43329, 127.991, -5.92946, 1.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-9.28213, 51.4616, -11.9436, 0.29", "-10.3409, 52.2263, -12.6881, 0.29", "-11.0643, 52.7581, -13.1828, 1.03", "-12.1074, 53.5639, -13.8787, 0.22", "-12.5145, 53.8883, -14.1324, 0.66", "-12.814, 54.1326, -14.31, 0.81", "-13.6313, 54.8139, -14.7451, 0.37", "-13.8553, 55.0254, -14.8394, 0.74", "-14.1117, 55.2684, -14.9133, 0.96", "-14.4721, 55.6045, -14.9816, 0.44", "-15.5015, 56.5562, -15.1426, 1.2", "-16.108, 57.1457, -15.2175, 0.88", "-16.665, 57.7261, -15.254, 1.25", "-17.0533, 58.1529, -15.2767, 1.25", "-17.7421, 58.9468, -15.3035, 0.59", "-18.268, 59.5994, -15.3335, 0.22", "-18.4831, 59.8884, -15.3374, 0.22", "-18.8508, 60.3922, -15.3535, 0.96", "-19.123, 60.7601, -15.3615, 1.47", "-19.3549, 61.0719, -15.3594, 1.62", "-19.8453, 61.6739, -15.3069, 1.03", "-20.292, 62.1033, -15.2431, 0.29", "-20.6718, 62.4124, -15.1722, 0.22", "-21.1038, 62.715, -15.0753, 0.22", "-21.1569, 62.7499, -15.0617, 0.22", "-21.6989, 63.0914, -14.9009, 0.22", "-22.1088, 63.3449, -14.7613, 0.22", "-22.6791, 63.6668, -14.5766, 0.22", "-23.3876, 64.0359, -14.3611, 1.11", "-23.634, 64.1589, -14.2889, 1.4", "-24.2353, 64.4512, -14.1172, 0.74", "-24.7612, 64.6879, -13.9871, 0.22", "-25.2738, 64.8781, -13.8787, 0.22", "-25.5746, 64.9625, -13.8214, 0.22", "-26.0827, 65.0718, -13.7752, 0.74", "-26.3981, 65.1297, -13.7652, 0.88", "-27.393, 65.2969, -13.8024, 0.22", "-27.9878, 65.3938, -13.8427, 0.59", "-28.4034, 65.4531, -13.937, 1.03", "-29.7035, 65.5954, -14.3419, 0.22", "-30.0389, 65.6173, -14.4641, 0.22", "-30.6762, 65.6474, -14.7172, 0.81", "-31.2302, 65.6652, -14.9489, 1.47", "-33.506, 65.7235, -15.922, 0.29", "-33.7842, 65.7283, -16.0404, 0.29", "-34.3046, 65.7357, -16.2403, 0.22", "-35.2902, 65.7708, -16.5818, 0.96", "-35.6002, 65.7916, -16.6689, 1.33", "-36.3638, 65.8887, -16.8104, 0.22", "-36.4232, 65.9005, -16.8105, 0.22", "-37.0074, 66.0296, -16.8188, 0.22", "-37.7232, 66.2076, -16.8209, 0.52", "-37.9756, 66.2732, -16.8267, 0.52", "-38.7015, 66.4454, -16.8787, 0.15", "-38.9902, 66.5032, -16.9034, 0.15", "-39.7558, 66.6198, -16.9658, 0.88", "-40.3244, 66.6836, -17.0167, 1.11", "-41.504, 66.7975, -17.1132, 0.22", "-42.345, 66.8641, -17.235, 1.11", "-42.7277, 66.8937, -17.3033, 1.33", "-43.7824, 66.988, -17.5182, 0.22", "-44.4118, 67.0562, -17.6518, 1.03", "-44.754, 67.1072, -17.7273, 1.03", "-46.3221, 67.4641, -18.1004, 0.22", "-46.7835, 67.6152, -18.2308, 0.22", "-47.1857, 67.7801, -18.3586, 0.74", "-47.5362, 67.96, -18.4734, 1.18", "-48.01, 68.237, -18.5923, 0.96", "-48.7722, 68.7398, -18.7022, 0.22", "-48.8132, 68.7704, -18.7011, 0.22", "-49.3585, 69.1845, -18.6722, 0.22", "-49.8792, 69.5733, -18.6251, 0.88", "-50.1408, 69.7617, -18.5955, 1.18", "-50.4334, 69.9638, -18.5791, 1.33", "-51.382, 70.6107, -18.5725, 0.22", "-51.8586, 70.9228, -18.6215, 0.96", "-52.1228, 71.0946, -18.6915, 1.25", "-52.1651, 71.1225, -18.708, 1.25", "-53.3617, 71.9521, -19.2586, 0.22", "-54.0301, 72.4321, -19.6096, 1.55", "-54.491, 72.8006, -19.8871, 1.33", "-55.354, 73.5668, -20.4385, 0.37", "-55.9038, 74.1302, -20.7962, 1.11", "-56.2018, 74.4884, -20.9876, 1.55", "-56.2337, 74.5379, -21.0081, 1.55", "-56.6555, 75.3515, -21.2916, 0.22", "-57.0078, 76.1286, -21.5061, 0.52", "-57.2496, 76.6551, -21.6274, 0.22", "-57.6079, 77.3721, -21.7702, 1.47", "-57.8967, 77.8873, -21.8688, 1.47", "-58.7467, 79.2934, -22.1028, 0.22", "-59.0489, 79.7575, -22.1677, 0.88", "-59.8727, 80.9651, -22.3016, 0.22", "-60.5353, 81.91, -22.3857, 1.4", "-61.0008, 82.565, -22.4217, 1.55", "-61.5114, 83.2509, -22.4921, 0.22", "-61.6637, 83.4485, -22.5172, 0.22", "-62.0034, 83.8792, -22.5924, 0.22", "-62.7763, 84.8199, -22.8364, 1.11", "-63.0622, 85.1463, -22.9506, 1.25", "-64.0969, 86.3022, -23.3965, 0.22", "-64.6883, 86.9444, -23.6682, 0.96", "-65.0991, 87.4143, -23.8527, 0.96", "-65.8142, 88.2871, -24.1336, 0.22", "-65.8448, 88.3275, -24.1441, 0.59", "-66.1967, 88.8573, -24.2393, 0.59", "-66.4199, 89.2664, -24.2705, 0.59", "-66.8565, 90.2067, -24.3396, 0.22", "-67.2543, 91.1465, -24.3853, 0.22", "-67.5967, 91.944, -24.3838, 0.96", "-67.7744, 92.3003, -24.3803, 1.4", "-68.2122, 92.9977, -24.4254, 0.88", "-68.6209, 93.5467, -24.4984, 0.22", "-68.8867, 93.8609, -24.5633, 0.88", "-69.3535, 94.3576, -24.6882, 1.11", "-69.8193, 94.8098, -24.8062, 1.11", "-71.0337, 95.9203, -25.1745, 0.22", "-71.0708, 95.9537, -25.1864, 0.22", "-71.4884, 96.3364, -25.359, 0.22", "-71.8306, 96.6795, -25.5422, 0.22", "-71.941, 96.8045, -25.6079, 0.22", "-72.3486, 97.304, -25.8627, 1.03", "-72.9329, 98.0022, -26.1734, 1.25", "-73.6759, 98.8537, -26.5599, 0.22", "-74.1305, 99.3595, -26.8098, 0.22", "-74.619, 99.9195, -27.0809, 1.11", "-74.9937, 100.347, -27.271, 1.03", "-75.8119, 101.302, -27.6711, 0.22", "-76.004, 101.53, -27.7625, 0.81", "-76.6484, 102.337, -28.0129, 0.22", "-77.0653, 102.884, -28.1563, 1.03", "-77.3595, 103.305, -28.2555, 1.4", "-78.517, 105.174, -28.6095, 0.22", "-78.5775, 105.29, -28.6271, 0.22", "-79.0257, 106.248, -28.7343, 0.22", "-79.3503, 107.059, -28.7873, 0.81", "-79.5659, 107.709, -28.8171, 0.96", "-79.742, 108.381, -28.8279, 0.37", "-79.9723, 109.56, -28.7779, 0.22", "-79.9809, 109.61, -28.7758, 0.22", "-80.0994, 110.401, -28.7189, 0.22", "-80.2029, 111.065, -28.6485, 0.96", "-80.2718, 111.457, -28.5941, 1.11", "-80.382, 112.016, -28.4996, 0.81", "-80.6005, 113.001, -28.3223, 0.22", "-80.8243, 113.909, -28.1653, 0.88", "-80.9281, 114.286, -28.1011, 1.11", "-81.0483, 114.739, -28.0334, 1.11", "-81.5721, 116.807, -27.772, 0.22", "-81.9189, 118.227, -27.6468, 1.0", "-82.1208, 119.07, -27.6034, 0.22", "-82.3168, 119.9, -27.5896, 0.96", "-82.5332, 120.876, -27.5918, 0.22", "-82.7082, 121.733, -27.6146, 0.52", "-82.863, 122.535, -27.7169, 0.22", "-82.8756, 122.599, -27.7335, 0.22", "-82.9722, 123.036, -27.8883, 0.88", "-83.1125, 123.514, -28.0931, 1.11", "-83.29, 123.904, -28.3571, 1.25", "-83.8144, 124.844, -29.2335, 0.37", "-84.1989, 125.497, -29.9051, 0.44", "-84.3429, 125.738, -30.1897, 0.66", "-84.5318, 126.051, -30.5992, 0.66", "-85.3718, 127.466, -32.6569, 1.11", "-85.8898, 128.44, -34.1715, 0.22", "-85.9917, 128.654, -34.5431, 0.81", "-86.3451, 129.599, -36.2688, 0.22", "-86.3737, 129.704, -36.466, 0.74", "-86.5163, 130.517, -38.0141, 0.22", "-86.5542, 130.95, -38.8329, 1.33", "-86.6358, 132.315, -41.4232, 0.22", "-86.6615, 132.677, -42.1168, 0.22", "-86.6906, 133.25, -43.1793, 0.22", "-86.6915, 133.271, -43.2195, 0.22", "-86.695, 133.608, -43.8699, 0.96", "-86.6978, 133.795, -44.2293, 0.96", "-86.6377, 134.746, -45.957, 0.22", "-86.6271, 134.866, -46.1937, 0.52", "-86.5913, 135.045, -46.5632, 0.52", "-86.4137, 135.532, -47.6186, 0.52", "-86.1974, 135.869, -48.3854, 0.22", "-86.1704, 135.897, -48.4519, 0.22", "-85.7885, 136.192, -49.1097, 1.03", "-85.759, 136.208, -49.1579, 1.03", "-85.3296, 136.373, -49.8028, 0.22", "-85.0156, 136.478, -50.2407, 1.11", "-84.7682, 136.586, -50.6266, 1.11", "-84.7521, 136.6, -50.6722, 1.11", "-84.5897, 137.044, -52.1037, 0.22", "-84.6082, 137.216, -52.6829, 0.96", "-84.8972, 137.541, -53.8972, 0.22", "-85.1728, 137.734, -54.6108, 1.18", "-86.1948, 138.318, -56.703, 0.96", "-86.7892, 138.626, -57.7314, 0.29", "-86.9937, 138.73, -58.0219, 0.66", "-88.2803, 139.415, -59.6553, 0.22", "-88.7622, 139.673, -60.212, 1.11", "-88.7997, 139.698, -60.2529, 1.11", "-89.0586, 139.954, -60.5024, 1.47", "-89.9018, 141.161, -61.2183, 0.22", "-90.3559, 141.999, -61.4914, 0.22", "-90.3736, 142.042, -61.493, 0.22", "-90.676, 142.805, -61.3713, 1.25", "-90.9395, 143.407, -61.1571, 1.25", "-91.4421, 144.491, -60.5275, 0.22", "-91.6435, 144.928, -60.1853, 0.44", "-91.7078, 145.063, -60.065, 0.44", "-92.0275, 145.73, -59.4418, 0.22", "-92.2717, 146.234, -58.9312, 0.22", "-92.7948, 147.199, -58.0341, 0.44", "-97.011, 153.019, -60.833, 0.44" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-27.8115, 35.2451, 14.3174, 0.44", "-30.8833, 34.5803, 13.5209, 0.44", "-31.799, 34.3174, 13.3786, 0.52", "-32.7825, 34.04, 13.2917, 0.52", "-33.4357, 33.8923, 13.2546, 0.66", "-34.267, 33.7851, 13.2243, 0.37", "-35.0417, 33.7425, 13.2069, 0.29", "-35.5522, 33.7762, 13.3209, 0.29", "-36.2136, 33.9453, 13.4131, 0.66", "-36.934, 34.2209, 13.4508, 0.44", "-37.8498, 34.6464, 13.44, 0.44", "-38.0212, 34.7107, 13.4083, 0.44", "-38.6741, 34.756, 13.1035, 0.44", "-39.4855, 34.6388, 12.324, 0.37", "-39.9425, 34.5409, 11.6816, 0.37", "-39.9838, 34.5316, 11.62, 0.37", "-41.1713, 34.2575, 9.93093, 0.96", "-42.1033, 34.02, 8.59094, 1.18", "-43.6437, 33.7024, 6.5609, 0.37", "-44.4292, 33.6882, 5.76254, 0.37", "-45.5317, 33.8737, 4.83123, 0.37", "-46.498, 34.1482, 3.98466, 0.37", "-47.0751, 34.4029, 3.4583, 0.37", "-48.4502, 35.193, 2.161, 0.88", "-50.3339, 36.4573, 0.432197, 1.25", "-52.1788, 37.9005, -1.40692, 1.03", "-53.9182, 39.5401, -3.35826, 0.44", "-54.687, 40.3308, -4.28995, 0.44", "-55.3637, 41.1045, -5.16386, 0.44", "-55.8244, 41.741, -5.86609, 0.29", "-56.3342, 42.5932, -6.73532, 1.11", "-56.6209, 43.1375, -7.2354, 1.47", "-57.7092, 45.1751, -8.97793, 0.29", "-58.2847, 46.1447, -9.91964, 0.59", "-58.6439, 46.765, -10.5914, 1.11", "-58.9493, 47.3126, -11.2104, 0.81", "-59.6706, 48.715, -12.7537, 0.29", "-60.0113, 49.4012, -13.4498, 0.52", "-60.4379, 50.3218, -14.2007, 0.29", "-60.524, 50.4724, -14.3128, 0.29", "-60.8464, 51.0476, -14.6859, 0.29", "-61.1761, 51.6567, -15.0979, 0.29", "-61.6725, 52.5637, -15.8208, 0.96", "-61.8483, 52.9258, -16.1529, 1.33", "-62.0585, 53.3714, -16.5888, 1.33", "-62.5142, 54.3115, -17.5407, 0.74", "-63.1148, 55.4957, -18.7401, 0.88", "-63.9005, 56.819, -20.0353, 1.25", "-64.1976, 57.2479, -20.4316, 1.4", "-65.0657, 58.3434, -21.3642, 0.52", "-65.4625, 58.8192, -21.7162, 0.22", "-66.0507, 59.5251, -22.1445, 0.22", "-66.7923, 60.4812, -22.6033, 0.9", "-67.2794, 61.1567, -22.9137, 0.81", "-68.3657, 62.7561, -23.7323, 0.22", "-69.1902, 64.0955, -24.4466, 1.55", "-69.3481, 64.3729, -24.6184, 1.77", "-69.8136, 65.2812, -25.2356, 0.81", "-70.3459, 66.4772, -26.1212, 0.22", "-70.6143, 67.1607, -26.6279, 0.52", "-70.892, 67.9484, -27.195, 0.22", "-71.4299, 69.5562, -28.3523, 1.25", "-71.5308, 69.8607, -28.5667, 1.47", "-72.0937, 71.5987, -29.7434, 0.22", "-72.3441, 72.3829, -30.2246, 0.22", "-72.3759, 72.4749, -30.2777, 0.22", "-72.5858, 73.0725, -30.6107, 0.22", "-72.898, 73.9818, -31.0707, 1.11", "-72.9272, 74.059, -31.1109, 1.11", "-73.1636, 74.6357, -31.3966, 1.55", "-73.5238, 75.5231, -31.8885, 0.66", "-73.6009, 75.7266, -32.0042, 0.66", "-73.9864, 76.8609, -32.8436, 0.22", "-74.0076, 76.9272, -32.8953, 0.22", "-74.2141, 77.526, -33.342, 0.22", "-74.5276, 78.3688, -33.9455, 0.96", "-74.6622, 78.6905, -34.1668, 1.25", "-75.8506, 81.1302, -35.7559, 0.29", "-76.3053, 81.9072, -36.2624, 0.29", "-77.0775, 82.9635, -36.9897, 0.22", "-77.4341, 83.3467, -37.2629, 0.22", "-78.1721, 83.9479, -37.6929, 0.88", "-78.6922, 84.2925, -37.9327, 1.11", "-79.6035, 84.7929, -38.2966, 1.11", "-80.6401, 85.3785, -38.7912, 0.22", "-81.1501, 85.6827, -39.0665, 0.22", "-82.3934, 86.5012, -39.7908, 1.77", "-82.8071, 86.823, -40.0363, 2.14", "-84.4449, 88.3078, -41.0412, 0.29", "-85.0728, 88.9966, -41.4038, 0.52", "-85.1797, 89.1425, -41.4637, 0.59", "-85.2798, 89.3047, -41.5164, 0.59", "-85.7739, 90.1861, -41.7503, 0.29", "-85.8192, 90.2541, -41.7641, 0.29", "-86.4739, 91.0583, -41.8271, 1.18", "-86.873, 91.4532, -41.8696, 1.33", "-87.3627, 91.9404, -41.9734, 0.74", "-88.242, 92.7973, -42.2343, 0.29", "-88.873, 93.4075, -42.4883, 0.74", "-88.9371, 93.4752, -42.5176, 0.74", "-89.2814, 93.8863, -42.6961, 0.59", "-89.9973, 94.9004, -43.1028, 0.22", "-90.0438, 94.9761, -43.1316, 0.22", "-90.2529, 95.3344, -43.2119, 0.22", "-90.5864, 95.8873, -43.3067, 0.66", "-90.9981, 96.5089, -43.3693, 0.96", "-91.0531, 96.5839, -43.3736, 0.96", "-91.8291, 97.6229, -43.3924, 0.22", "-92.6971, 98.8654, -43.4273, 1.47", "-92.9681, 99.2712, -43.4406, 1.77", "-93.4754, 100.072, -43.4703, 0.74", "-93.879, 100.782, -43.4927, 0.29", "-94.4452, 101.889, -43.5093, 0.22", "-94.7919, 102.614, -43.5032, 0.52", "-95.0148, 103.043, -43.5037, 0.52", "-95.076, 103.149, -43.4889, 0.52", "-95.6999, 104.071, -43.2333, 0.22", "-96.4159, 104.964, -42.8146, 1.47", "-97.0542, 105.627, -42.4049, 1.11", "-97.7704, 106.301, -41.9209, 0.88", "-99.1286, 107.518, -40.9742, 0.22", "-99.7098, 108.008, -40.5582, 0.22", "-100.805, 108.834, -39.7298, 1.33", "-101.471, 109.309, -39.179, 1.69", "-101.52, 109.345, -39.1343, 1.69" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-27.8115, 35.2451, 14.3174, 0.44", "-28.3528, 35.483, 14.5395, 0.44", "-28.9062, 35.6945, 14.7454, 0.29", "-28.9658, 35.7136, 14.7735, 0.29", "-29.4629, 35.8511, 15.019, 0.29", "-29.811, 35.929, 15.2091, 0.29", "-30.3223, 36.0224, 15.498, 0.81", "-30.6645, 36.0719, 15.7144, 0.66", "-31.3503, 36.0948, 16.1544, 0.44", "-31.6655, 36.0744, 16.3372, 0.29", "-32.2074, 35.9819, 16.6161, 0.59", "-32.3808, 35.9402, 16.7014, 0.59", "-32.9364, 35.7817, 16.9189, 0.29", "-33.4829, 35.6212, 17.0596, 0.29", "-34.1074, 35.4429, 17.1329, 0.66", "-34.5346, 35.3312, 17.1516, 0.96", "-34.5977, 35.3171, 17.1491, 0.96", "-35.4439, 35.1726, 17.0817, 0.37", "-36.0163, 35.1139, 17.0308, 0.37", "-36.2855, 35.1094, 17.0164, 0.66", "-36.4063, 35.1175, 17.026, 0.66", "-36.6296, 35.1385, 17.0765, 0.66", "-36.9647, 35.1632, 17.1948, 0.66", "-37.4839, 35.1833, 17.4406, 0.29", "-37.5393, 35.1825, 17.4666, 0.29", "-38.0915, 35.1616, 17.7025, 0.29", "-38.5544, 35.1285, 17.8741, 0.29", "-39.0369, 35.0759, 18.0284, 0.81", "-39.5672, 35.0025, 18.1664, 0.88", "-39.9178, 34.9445, 18.2331, 0.66", "-40.4443, 34.8419, 18.3358, 0.29", "-40.9453, 34.7437, 18.4307, 0.66", "-41.3037, 34.6817, 18.5129, 0.88", "-41.8464, 34.6078, 18.6699, 1.03", "-42.5053, 34.5598, 18.912, 1.03", "-43.3609, 34.5644, 19.2756, 0.37", "-43.6906, 34.5867, 19.4297, 0.37", "-44.1289, 34.6447, 19.6494, 0.37", "-44.6421, 34.732, 19.9157, 0.29", "-45.1895, 34.8327, 20.203, 0.29", "-45.712, 34.9197, 20.4266, 0.29", "-46.2097, 34.9619, 20.5541, 0.88", "-46.2775, 34.9589, 20.5629, 0.88", "-46.5921, 34.912, 20.5711, 1.11", "-47.0307, 34.8185, 20.5556, 1.11", "-47.8749, 34.6144, 20.4868, 0.59", "-48.4192, 34.4825, 20.4401, 0.29", "-48.8694, 34.3856, 20.4067, 0.29", "-49.4481, 34.2816, 20.3643, 0.59", "-49.8771, 34.2266, 20.3397, 0.96", "-50.2825, 34.1853, 20.3279, 0.96", "-50.6232, 34.1561, 20.3332, 0.81", "-51.0927, 34.1112, 20.3317, 0.59", "-51.4699, 34.0662, 20.3167, 0.29", "-52.2273, 33.958, 20.2741, 0.22", "-52.8746, 33.8528, 20.2373, 0.74", "-53.3446, 33.7769, 20.2021, 1.33", "-53.8856, 33.7002, 20.1515, 1.33", "-54.6051, 33.6243, 20.0653, 0.59", "-55.2851, 33.5865, 19.9804, 0.29", "-55.6887, 33.5953, 19.9237, 0.29", "-56.1855, 33.6544, 19.8546, 0.59", "-56.7088, 33.759, 19.7933, 0.74", "-57.2602, 33.91, 19.7564, 0.96", "-58.0159, 34.1467, 19.7429, 1.25", "-58.5403, 34.2907, 19.7505, 0.37", "-58.8533, 34.3498, 19.7693, 0.44", "-59.4631, 34.4062, 19.8365, 0.44", "-59.9612, 34.3985, 19.9184, 0.44", "-60.4259, 34.3347, 20.0156, 1.25", "-61.0924, 34.1654, 20.178, 1.25", "-61.7674, 33.9353, 20.357, 1.33", "-62.3364, 33.7111, 20.5134, 0.74", "-63.1674, 33.3653, 20.7447, 0.29", "-64.1243, 32.9785, 21.0055, 0.96", "-64.6756, 32.79, 21.145, 0.29", "-65.0551, 32.699, 21.2311, 0.29", "-65.4113, 32.6491, 21.2942, 1.03", "-65.9847, 32.6376, 21.3611, 1.4", "-66.4596, 32.6877, 21.3848, 1.47", "-67.1887, 32.8368, 21.3805, 0.44", "-67.7027, 32.9478, 21.3627, 0.44", "-68.3923, 33.0672, 21.3267, 0.74", "-68.8221, 33.1122, 21.305, 0.74", "-69.4454, 33.1314, 21.2791, 0.59", "-70.0903, 33.1019, 21.2639, 0.52", "-70.88, 33.0062, 21.2792, 0.37", "-71.5862, 32.8691, 21.3095, 0.74", "-72.1644, 32.7277, 21.3505, 1.18", "-72.6179, 32.6008, 21.3929, 1.03", "-73.0498, 32.4699, 21.4444, 0.44", "-73.7163, 32.2514, 21.5724, 0.29", "-74.3602, 32.0492, 21.7244, 0.88", "-74.7918, 31.9249, 21.8422, 1.18", "-75.423, 31.749, 22.0185, 0.74", "-75.4894, 31.7313, 22.042, 0.74", "-76.1988, 31.5488, 22.349, 0.44", "-76.8366, 31.408, 22.6574, 0.37", "-77.2161, 31.3534, 22.8615, 1.11", "-77.6946, 31.3216, 23.1405, 1.47", "-78.5849, 31.3578, 23.6795, 0.96", "-79.2028, 31.4351, 24.0345, 0.37", "-79.5889, 31.5073, 24.2507, 0.37", "-80.1177, 31.6102, 24.5486, 0.37", "-80.6457, 31.7137, 24.8347, 0.29", "-81.2016, 31.8089, 25.0987, 0.29", "-81.9373, 31.8981, 25.3724, 0.74", "-82.4708, 31.9252, 25.5445, 0.29", "-83.0722, 31.9044, 25.7179, 0.22", "-83.5418, 31.8601, 25.8369, 0.88", "-84.3298, 31.7665, 26.0125, 0.96", "-84.9383, 31.7086, 26.1385, 0.96", "-85.5433, 31.7082, 26.2523, 1.18", "-86.0826, 31.7528, 26.3628, 0.88", "-86.647, 31.8372, 26.4947, 0.29", "-87.3791, 31.9736, 26.6825, 0.29", "-87.9511, 32.1002, 26.8489, 0.29", "-88.5257, 32.2331, 27.0306, 0.29", "-89.4424, 32.4325, 27.3273, 0.22", "-89.7644, 32.4804, 27.4294, 1.18", "-89.83, 32.4851, 27.4486, 1.18", "-90.3009, 32.4874, 27.5777, 1.18", "-90.7744, 32.4645, 27.7098, 1.18", "-91.5855, 32.401, 27.9233, 1.18", "-92.1854, 32.3589, 28.0861, 1.11", "-92.7654, 32.3253, 28.3009, 1.33", "-92.8147, 32.3238, 28.3222, 1.33", "-93.5238, 32.3228, 28.6676, 0.59", "-94.0533, 32.3359, 28.9607, 0.52", "-94.9048, 32.3642, 29.4633, 1.18", "-95.7393, 32.392, 29.9618, 0.22", "-96.2449, 32.3963, 30.244, 0.66", "-96.5228, 32.3954, 30.3858, 0.66", "-97.1887, 32.3903, 30.6849, 0.22", "-97.8386, 32.3936, 30.9399, 0.59", "-98.0877, 32.3952, 31.0189, 0.59", "-98.8845, 32.3772, 31.2227, 0.22", "-98.9395, 32.3741, 31.2369, 0.22", "-99.1597, 32.3556, 31.2916, 0.22", "-99.5948, 32.287, 31.3873, 0.22", "-100.176, 32.1704, 31.524, 0.22", "-100.607, 32.0568, 31.628, 1.03", "-100.954, 31.9438, 31.7247, 1.47", "-101.312, 31.8184, 31.8258, 1.47", "-102.227, 31.4991, 32.1068, 0.22", "-102.279, 31.4827, 32.1231, 0.22", "-102.748, 31.3538, 32.2682, 0.22", "-103.554, 31.168, 32.5248, 0.59", "-104.114, 31.0611, 32.7068, 1.03", "-104.89, 30.9436, 32.958, 1.4", "-105.461, 30.8759, 33.1473, 1.69", "-106.026, 30.8075, 33.3332, 1.11", "-106.745, 30.718, 33.5612, 0.52", "-106.854, 30.7047, 33.5971, 0.52", "-107.424, 30.6507, 33.7993, 0.44", "-108.248, 30.6019, 34.1506, 0.37", "-108.303, 30.6013, 34.1777, 0.37", "-108.742, 30.6161, 34.4056, 0.66", "-109.579, 30.6633, 34.8487, 0.66", "-110.258, 30.6974, 35.1981, 0.66", "-111.052, 30.7312, 35.6011, 0.22", "-111.533, 30.748, 35.8348, 0.22", "-112.142, 30.7361, 36.1131, 0.66", "-112.509, 30.7044, 36.2629, 0.81", "-112.912, 30.6212, 36.3936, 0.59", "-113.526, 30.4432, 36.5908, 0.22", "-113.582, 30.4273, 36.6101, 0.22", "-114.1, 30.3003, 36.8207, 0.66", "-114.602, 30.2268, 37.0416, 0.81", "-114.994, 30.2087, 37.2158, 0.96", "-116.119, 30.2994, 37.6984, 0.29", "-116.753, 30.4342, 37.9852, 1.03", "-117.146, 30.5479, 38.1646, 1.47", "-117.768, 30.7813, 38.4458, 1.99", "-118.199, 30.947, 38.6342, 1.84", "-118.816, 31.1699, 38.8942, 1.11", "-119.6, 31.4189, 39.1923, 0.52", "-120.233, 31.5697, 39.4197, 0.29", "-120.709, 31.6393, 39.6576, 0.22", "-121.262, 31.6632, 39.9935, 0.22", "-121.839, 31.6463, 40.3881, 0.22", "-122.048, 31.6307, 40.5369, 1.11", "-122.352, 31.6064, 40.7483, 1.11", "-123.65, 31.5221, 41.6776, 0.37", "-124.122, 31.4967, 42.0227, 0.37", "-124.618, 31.4866, 42.3696, 0.37", "-125.104, 31.4772, 42.6812, 0.37", "-125.376, 31.4717, 42.8404, 0.66", "-125.76, 31.4705, 43.0316, 0.66", "-126.584, 31.512, 43.3455, 0.29", "-127.035, 31.5588, 43.526, 0.22", "-127.386, 31.6214, 43.6635, 0.59", "-127.677, 31.7075, 43.7858, 0.81", "-127.99, 31.8285, 43.9139, 0.52", "-128.457, 32.0318, 44.1014, 0.44", "-128.734, 32.1411, 44.2024, 0.44", "-129.197, 32.284, 44.3673, 0.37", "-129.885, 32.4037, 44.5984, 0.29", "-130.408, 32.4417, 44.7737, 0.29", "-131.122, 32.4402, 45.0089, 0.88", "-131.775, 32.3984, 45.2083, 1.18", "-132.475, 32.3713, 45.4104, 0.81", "-133.21, 32.3228, 45.5801, 0.66", "-133.754, 32.2775, 45.6719, 0.52", "-133.815, 32.2735, 45.6797, 0.52", "-134.521, 32.2373, 45.7422, 0.29", "-135.806, 32.1928, 45.8483, 1.33", "-136.837, 32.144, 45.9573, 0.29", "-137.562, 32.1074, 46.0437, 0.81", "-138.109, 32.0685, 46.1142, 1.4", "-138.58, 32.0249, 46.1883, 1.4", "-139.018, 31.9709, 46.2745, 1.03", "-139.979, 31.8388, 46.5117, 0.37", "-140.07, 31.8376, 46.5393, 0.37", "-140.586, 31.8665, 46.6928, 0.37", "-140.662, 31.8731, 46.713, 0.37", "-141.007, 31.9056, 46.7927, 0.29", "-141.601, 31.9548, 46.9214, 0.29", "-142.313, 32.0038, 47.0676, 0.66", "-142.867, 32.0186, 47.1963, 0.96", "-143.653, 31.9852, 47.404, 1.18", "-144.293, 31.9119, 47.5865, 1.47", "-144.878, 31.806, 47.7646, 1.47", "-145.801, 31.5649, 48.061, 1.47", "-146.886, 31.2224, 48.454, 0.29", "-147.463, 31.0126, 48.6973, 0.22", "-147.901, 30.8627, 48.9592, 0.22", "-147.953, 30.8464, 48.9954, 0.22", "-148.287, 30.7555, 49.2649, 0.44", "-148.971, 30.6081, 49.8642, 0.37", "-149.949, 30.4772, 50.7141, 1.69", "-151.279, 30.3992, 51.8043, 1.11", "-152.039, 30.3897, 52.3874, 0.29", "-152.676, 30.4015, 52.8283, 1.25", "-153.131, 30.4237, 53.113, 1.4", "-153.612, 30.4611, 53.3656, 0.81", "-154.055, 30.5152, 53.5539, 0.44", "-154.731, 30.5853, 53.7265, 0.44", "-155.407, 30.6958, 53.8838, 0.37", "-155.484, 30.7086, 53.8965, 0.37", "-156.092, 30.8244, 54.0074, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-24.7919, 44.8406, 15.1461, 0.66", "-24.1441, 45.853, 15.7413, 0.66", "-23.7398, 46.2369, 16.1504, 0.66", "-22.9566, 46.8549, 16.9727, 0.52", "-22.3051, 47.2758, 17.6116, 0.96", "-21.9801, 47.4639, 17.9134, 0.96", "-20.9376, 48.0165, 18.7928, 0.81", "-19.7283, 48.4775, 19.7048, 0.59", "-19.6793, 48.4928, 19.738, 0.59", "-18.917, 48.7142, 20.183, 0.52", "-18.6585, 48.805, 20.3119, 0.52", "-17.8323, 49.2283, 20.6577, 0.44", "-17.1517, 49.7262, 20.843, 0.44", "-17.0845, 49.791, 20.8551, 0.44", "-16.6756, 50.2555, 20.952, 0.44", "-16.6124, 50.3428, 20.9713, 0.44", "-15.9795, 51.3225, 21.2183, 0.44", "-15.7669, 51.7055, 21.3197, 0.88", "-15.4971, 52.2548, 21.4829, 0.88", "-15.1532, 53.016, 21.719, 1.03", "-14.9513, 53.4949, 21.8751, 1.03", "-14.6143, 54.3282, 22.2202, 0.37", "-14.3704, 54.8802, 22.5014, 0.37", "-13.9618, 55.6291, 22.9969, 0.37", "-13.5346, 56.2034, 23.4939, 0.37", "-13.4969, 56.2345, 23.5316, 0.37", "-12.4309, 56.6957, 24.4873, 0.66", "-11.7422, 56.8257, 25.0517, 0.59", "-10.9468, 56.8882, 25.7322, 0.52", "-10.3477, 56.9133, 26.2516, 0.52", "-9.89896, 56.9727, 26.7078, 0.52", "-9.29195, 57.1692, 27.398, 0.52", "-9.25935, 57.1908, 27.4452, 0.52", "-8.59912, 57.8744, 28.5944, 0.88", "-8.36224, 58.1927, 29.0572, 1.11", "-7.73378, 59.1602, 30.3456, 0.81", "-7.50909, 59.5199, 30.7811, 0.88", "-6.83611, 60.4958, 31.8774, 0.59", "-6.37883, 61.0436, 32.4587, 0.59", "-6.33089, 61.0878, 32.5025, 0.59", "-5.93933, 61.3547, 32.7765, 0.74", "-5.45097, 61.5788, 33.0231, 0.74", "-4.40341, 61.9198, 33.4755, 0.59", "-3.61658, 62.0946, 33.7445, 0.59", "-2.70203, 62.223, 34.0399, 0.66", "-2.03313, 62.2868, 34.2397, 0.66", "-1.13374, 62.3502, 34.4971, 1.03", "-0.810057, 62.3759, 34.6018, 0.81", "-0.0515614, 62.462, 34.8775, 0.66", "0.811107, 62.6366, 35.2559, 0.66", "1.67482, 62.9397, 35.7389, 0.52", "2.58705, 63.4153, 36.3706, 1.03", "3.3939, 64.0091, 37.0246, 0.74", "3.77558, 64.3582, 37.3797, 0.66", "4.20285, 64.8785, 37.8651, 0.88", "4.65957, 65.5209, 38.4129, 0.74", "4.6992, 65.5711, 38.4591, 0.74", "5.15449, 65.9298, 38.8888, 0.59", "5.20861, 65.9486, 38.9261, 0.59", "5.908, 66.0345, 39.3585, 0.52", "6.78555, 66.0244, 39.8543, 0.44", "7.91597, 65.9928, 40.427, 0.44", "8.93888, 66.0138, 40.9191, 0.37", "9.56015, 66.0699, 41.1996, 0.74", "9.62609, 66.0841, 41.2285, 0.74", "10.2468, 66.2954, 41.4827, 0.81", "11.0102, 66.7504, 41.7819, 0.52", "11.6157, 67.2416, 41.9995, 0.52", "12.2802, 67.8848, 42.2494, 0.44", "12.814, 68.4119, 42.4568, 0.88", "12.8631, 68.457, 42.4768, 0.88", "13.3302, 68.8329, 42.6663, 0.88", "14.0414, 69.3262, 42.9823, 0.44", "14.5064, 69.6199, 43.1907, 0.96", "15.0533, 69.9771, 43.4414, 0.96", "15.6565, 70.3987, 43.7161, 0.66", "16.3144, 70.9035, 44.0238, 0.44", "17.2002, 71.6866, 44.4365, 0.29", "17.7161, 72.2172, 44.6688, 0.29", "18.4388, 73.0111, 45.006, 0.29", "18.7639, 73.416, 45.1615, 0.66", "19.1064, 73.9091, 45.316, 0.96", "19.5715, 74.7074, 45.5168, 0.96", "19.777, 75.1142, 45.5643, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-24.7919, 44.8406, 15.1461, 1.11", "-25.9109, 44.626, 16.6407, 1.11", "-26.6698, 44.6, 17.6456, 0.81", "-27.5163, 44.6491, 18.7641, 0.96", "-29.1724, 45.1007, 21.2119, 1.25", "-29.2068, 45.1186, 21.274, 1.25", "-29.5973, 45.4522, 22.2013, 0.59", "-29.8804, 45.9406, 23.2568, 0.59", "-29.8888, 45.9716, 23.3112, 0.59", "-29.966, 47.3779, 25.1874, 0.88", "-29.865, 48.396, 26.2206, 1.33", "-29.7101, 49.2272, 27.1129, 1.62" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "21.2434, -75.5494, 4.06139, 0.59", "23.0944, -75.35, 3.82709, 0.59", "23.8955, -75.3678, 3.60387, 0.81", "23.986, -75.3777, 3.57268, 0.81", "25.368, -75.642, 3.07106, 0.96", "26.7798, -76.049, 2.52819, 0.81", "28.1475, -76.5539, 2.00476, 1.11", "30.2188, -77.5892, 1.12365, 0.74", "31.13, -78.1324, 0.77145, 1.03", "31.972, -78.6654, 0.526628, 1.03", "33.0584, -79.4387, 0.33377, 0.29", "33.9311, -80.0938, 0.276306, 0.66", "34.6406, -80.6315, 0.278065, 1.03", "35.9732, -81.6205, 0.322493, 0.96", "37.8374, -82.9556, 0.361039, 0.96", "39.0918, -83.8268, 0.365876, 0.44", "40.239, -84.6313, 0.360551, 0.44", "41.9961, -85.9162, 0.309892, 0.88", "43.6983, -87.2174, 0.224686, 1.03", "43.7771, -87.2792, 0.219331, 1.03", "44.8139, -88.0549, 0.150668, 1.11", "46.2061, -88.9157, 0.112559, 0.74", "47.2495, -89.4534, 0.144728, 0.29", "47.8542, -89.6981, 0.215478, 0.88", "48.8878, -90.0179, 0.345767, 0.81", "50.2447, -90.3697, 0.420124, 0.59", "51.6426, -90.6721, 0.413458, 0.59", "51.7301, -90.6863, 0.401482, 0.59", "52.6878, -90.8282, 0.18807, 0.59", "53.9971, -91.0095, -0.184451, 0.37", "55.5683, -91.21, -0.729775, 1.25", "56.5293, -91.3145, -1.08587, 1.62", "58.9057, -91.5382, -1.97331, 0.66", "59.9191, -91.6248, -2.31757, 0.37", "60.4749, -91.6654, -2.46375, 0.37", "60.9686, -91.7176, -2.51883, 0.29", "62.0591, -91.8981, -2.4432, 1.03", "62.4955, -92.0232, -2.33357, 1.03", "63.0686, -92.2775, -2.08082, 1.25", "64.0775, -92.7813, -1.6076, 1.03", "65.181, -93.3281, -1.09636, 0.29", "65.9575, -93.6636, -0.768986, 0.29", "67.1611, -94.0975, -0.395519, 0.74", "68.028, -94.3455, -0.190108, 1.03", "68.9517, -94.5617, -0.134706, 1.03", "70.1867, -94.822, -0.226231, 1.18", "71.9173, -95.1576, -0.549221, 0.29", "73.6479, -95.4688, -0.997739, 1.03", "74.4004, -95.5928, -1.2394, 1.33", "77.3173, -96.0579, -2.28805, 0.44", "78.3766, -96.2311, -2.70402, 0.44", "79.9512, -96.4575, -3.33701, 0.37", "81.0113, -96.5602, -3.72358, 1.03", "81.1002, -96.5618, -3.74699, 1.03", "81.488, -96.5429, -3.80337, 1.03", "81.7585, -96.5225, -3.80181, 1.03", "83.1408, -96.5697, -3.93343, 0.59", "84.1471, -96.8006, -4.11738, 0.37", "84.2761, -96.8495, -4.1505, 0.37", "85.0968, -97.1839, -4.34426, 0.37", "86.7509, -97.864, -4.67029, 0.37", "88.253, -98.4598, -4.90587, 0.37", "89.0894, -98.7455, -4.99364, 1.11", "90.1943, -99.0311, -5.05473, 0.88", "91.709, -99.3311, -5.06034, 0.74", "93.1232, -99.5254, -5.01243, 0.74", "94.1537, -99.6197, -4.92497, 0.66", "95.7307, -99.7396, -4.75532, 0.88", "97.1962, -99.8791, -4.64158, 0.29", "98.3151, -99.9934, -4.66433, 0.29", "99.0148, -100.073, -4.75931, 0.96", "100.213, -100.206, -5.04335, 1.33", "100.418, -100.225, -5.10711, 1.33", "101.753, -100.331, -5.60902, 1.99", "103.999, -100.317, -6.51191, 0.52", "104.667, -100.243, -6.78161, 0.52", "105.164, -100.142, -6.97547, 0.52", "106.09, -99.8542, -7.30822, 0.81", "106.458, -99.7141, -7.41445, 0.81", "107.154, -99.3925, -7.54404, 0.81", "107.783, -99.1021, -7.5817, 0.81", "108.939, -98.6624, -7.64318, 0.66", "109.944, -98.4038, -7.70268, 0.44", "110.062, -98.3852, -7.70753, 0.44", "111.782, -98.2317, -7.73772, 1.18", "112.79, -98.2375, -7.72863, 1.55", "114.628, -98.3518, -7.75125, 0.66", "116.059, -98.5059, -7.77617, 0.37", "117.315, -98.6945, -7.85197, 0.37", "117.952, -98.7991, -7.90835, 1.33", "119.125, -99.022, -8.04205, 1.55", "120.917, -99.349, -8.3179, 0.81", "121.006, -99.3626, -8.33501, 0.81", "122.38, -99.4935, -8.63918, 0.37", "123.628, -99.5836, -8.93467, 0.66", "123.717, -99.5884, -8.9555, 0.66", "124.437, -99.612, -9.08658, 1.03", "124.535, -99.6215, -9.10016, 1.03", "125.483, -99.7646, -9.26539, 1.18", "125.581, -99.7845, -9.28668, 1.18", "127.123, -100.204, -9.65883, 1.03", "128.21, -100.585, -9.96958, 0.37", "129.622, -101.166, -10.4014, 0.66", "130.848, -101.716, -10.7859, 0.96", "132.325, -102.397, -11.2532, 0.88", "133.372, -102.878, -11.561, 0.66", "135.515, -103.821, -12.1613, 0.29", "136.254, -104.108, -12.3608, 0.66", "136.427, -104.163, -12.4034, 0.66", "137.603, -104.465, -12.6694, 0.96", "138.435, -104.63, -12.8189, 0.96", "139.911, -104.803, -13.1145, 0.52", "140.889, -104.868, -13.3062, 0.52", "142.338, -104.938, -13.6062, 1.55", "143.052, -104.972, -13.7565, 1.77", "144.723, -105.038, -14.0946, 0.81", "147.059, -105.081, -14.5059, 0.74", "147.202, -105.08, -14.5249, 0.74", "148.144, -105.006, -14.7096, 1.25", "148.319, -104.975, -14.7491, 1.25", "149.233, -104.774, -15.0178, 1.25", "150.298, -104.514, -15.3733, 0.96", "150.383, -104.498, -15.4042, 0.96", "153.059, -104.308, -16.6962, 0.29", "153.668, -104.313, -17.0182, 0.29", "155.177, -104.387, -17.8437, 0.88", "155.684, -104.42, -18.1212, 1.33", "157.463, -104.561, -19.0689, 1.18", "159.897, -104.715, -20.2352, 0.59", "161.151, -104.762, -20.7374, 0.37", "161.508, -104.759, -20.8646, 0.37", "162.678, -104.736, -21.2326, 0.37", "162.852, -104.731, -21.2819, 0.37", "164.463, -104.67, -21.6217, 1.84", "166.813, -104.602, -21.9731, 0.88", "167.958, -104.596, -22.1454, 0.59", "169.873, -104.689, -22.398, 0.88", "169.979, -104.701, -22.4115, 0.88", "170.846, -104.83, -22.5313, 0.74", "171.856, -104.992, -22.771, 0.22", "173.037, -105.108, -23.1374, 0.22", "173.959, -105.134, -23.4772, 0.22", "175.443, -105.079, -24.1376, 1.33", "177.04, -104.986, -24.8832, 1.4", "180.04, -104.774, -26.3983, 0.29", "181.388, -104.668, -27.1186, 1.77", "182.706, -104.548, -27.8511, 2.36", "185.375, -104.217, -29.3555, 0.44", "186.845, -104.005, -30.1534, 0.37", "188.864, -103.738, -31.1984, 0.37", "188.933, -103.733, -31.231, 0.37", "190.474, -103.74, -31.9636, 0.81", "190.573, -103.751, -32.0062, 0.81", "191.532, -103.983, -32.3345, 0.81", "193.364, -104.601, -32.8743, 0.29", "194.142, -104.878, -33.0025, 0.29", "195.533, -105.336, -33.1498, 1.55", "196.47, -105.642, -33.1906, 2.14", "197.447, -105.876, -33.1871, 2.36", "198.474, -106.057, -33.1362, 1.62", "200.588, -106.319, -32.9238, 0.22", "201.559, -106.409, -32.8128, 0.96", "202.553, -106.502, -32.6893, 0.96", "205.312, -106.838, -32.3604, 0.22", "206.411, -107.012, -32.2338, 1.11", "207.377, -107.226, -32.1235, 1.77", "207.946, -107.389, -32.0263, 1.77", "209.604, -107.923, -31.483, 0.29", "210.607, -108.275, -31.0284, 0.29", "210.746, -108.332, -30.9479, 0.29", "211.567, -108.662, -30.407, 0.29", "213.54, -109.476, -29.0007, 1.25", "215.813, -110.392, -27.3011, 0.22", "216.47, -110.637, -26.7943, 0.59", "216.576, -110.673, -26.7172, 0.59", "217.05, -110.82, -26.4104, 0.59", "218.065, -111.13, -25.8891, 0.22", "218.874, -111.423, -25.6288, 0.22", "219.9, -111.809, -25.4271, 1.18", "220.776, -112.138, -25.255, 1.55", "221.324, -112.353, -25.1488, 1.55", "223.026, -113.05, -24.8224, 0.15", "223.79, -113.387, -24.6785, 0.66", "224.278, -113.619, -24.6412, 0.66", "224.366, -113.665, -24.6417, 0.66", "225.869, -114.513, -24.7237, 0.22", "226.831, -115.073, -24.8296, 0.88", "227.804, -115.644, -24.9763, 1.18", "230.078, -116.975, -25.3921, 0.22", "231.531, -117.849, -25.7188, 0.22", "232.055, -118.169, -25.8508, 0.22", "233.022, -118.737, -26.1079, 1.4", "233.881, -119.213, -26.3327, 1.77", "236.044, -120.349, -26.8434, 0.22", "237.176, -120.901, -27.0036, 0.74", "237.546, -121.052, -27.0411, 0.74", "239.321, -121.739, -27.1951, 0.22", "240.369, -122.113, -27.2511, 1.11", "240.936, -122.291, -27.264, 1.4", "243.188, -122.888, -27.1298, 0.22", "244.647, -123.25, -26.9627, 1.92" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "21.2434, -75.5494, 4.06139, 0.74", "23.4184, -77.2765, 4.43204, 0.74", "24.6033, -78.1817, 4.56508, 0.74", "24.66, -78.2282, 4.57216, 0.74", "25.4727, -78.9611, 4.67925, 0.52", "26.3902, -79.8326, 4.80292, 0.81", "27.1451, -80.6234, 4.90659, 0.37", "27.9535, -81.5312, 4.92763, 0.74", "28.5462, -82.2955, 4.98952, 0.96", "29.0072, -82.908, 5.10869, 1.18", "29.0505, -82.9661, 5.12567, 1.18", "29.73, -83.8606, 5.46185, 0.81", "30.5553, -84.8025, 5.85306, 0.81", "31.4394, -85.609, 6.22572, 0.81", "32.7667, -86.5341, 6.71121, 0.59", "33.3806, -86.8589, 6.90694, 0.81", "33.4462, -86.8853, 6.92438, 0.81", "34.5786, -87.1719, 7.15186, 1.03", "34.6591, -87.186, 7.16153, 1.03", "35.9024, -87.3809, 7.22552, 0.59", "36.7526, -87.5405, 7.22939, 0.88", "37.7295, -87.7515, 7.2836, 0.59", "38.8725, -88.0281, 7.38692, 0.44", "40.0608, -88.3582, 7.53209, 0.44", "41.1969, -88.7116, 7.69649, 0.59", "42.2143, -89.0689, 7.87508, 0.96", "43.3698, -89.5673, 8.14054, 1.18", "43.445, -89.6076, 8.16102, 1.18", "43.955, -89.9347, 8.31535, 1.18", "44.7748, -90.5142, 8.57651, 0.44", "44.8261, -90.5517, 8.59331, 0.44", "46.2222, -91.5556, 8.99495, 0.44", "47.1886, -92.2205, 9.22236, 0.44", "47.7731, -92.598, 9.35896, 0.81", "47.8781, -92.6602, 9.38273, 0.81", "48.861, -93.1816, 9.59257, 0.81", "48.9637, -93.2283, 9.60445, 0.81", "49.7585, -93.5182, 9.57129, 0.81", "50.6137, -93.7817, 9.42354, 1.18", "51.2944, -93.9744, 9.22605, 1.4", "51.3924, -93.9985, 9.19192, 1.4", "52.8319, -94.2974, 8.63337, 0.96", "53.8745, -94.48, 8.24138, 0.96", "55.0268, -94.6798, 7.85882, 0.44", "56.0232, -94.8628, 7.58999, 0.44", "57.2652, -95.1404, 7.37751, 0.44", "58.119, -95.3846, 7.31995, 0.52", "59.0039, -95.7095, 7.36191, 1.47", "60.1755, -96.2487, 7.5199, 0.88", "61.2077, -96.8653, 7.68708, 0.59", "62.2091, -97.6222, 7.81716, 0.29", "62.8734, -98.2324, 7.8574, 0.29", "63.3351, -98.7143, 7.85041, 0.96", "63.8345, -99.2959, 7.80415, 1.25", "64.782, -100.497, 7.6345, 0.66", "65.6198, -101.637, 7.45084, 0.66", "66.1612, -102.381, 7.33799, 1.33", "66.7821, -103.244, 7.24728, 0.59", "67.3068, -103.996, 7.20691, 0.52", "68.002, -104.998, 7.18089, 0.52", "68.7893, -106.088, 7.1916, 0.52", "69.5956, -107.15, 7.21211, 0.88", "70.175, -107.823, 7.21474, 1.25", "70.8711, -108.498, 7.20189, 1.25", "71.7094, -109.169, 7.17766, 0.59", "72.4775, -109.674, 7.15024, 0.29", "72.5347, -109.706, 7.14788, 0.29", "73.5121, -110.21, 7.05416, 0.29", "74.4676, -110.676, 6.95259, 0.74", "75.3084, -111.048, 6.86457, 1.03", "75.7258, -111.23, 6.8274, 1.03", "76.4102, -111.54, 6.76605, 1.18", "77.4226, -112.025, 6.66912, 0.37", "78.3981, -112.521, 6.56632, 0.29", "79.1975, -112.903, 6.47355, 0.29", "80.4623, -113.516, 6.32398, 0.29", "80.5266, -113.55, 6.31771, 0.29", "81.6867, -114.228, 6.24117, 1.33", "81.7527, -114.271, 6.2398, 1.33", "82.2928, -114.681, 6.23498, 1.69", "83.0935, -115.356, 6.23611, 1.11", "84.046, -116.2, 6.24781, 0.59", "85.1321, -117.165, 6.23955, 0.37", "85.8357, -117.796, 6.19606, 1.11", "86.5945, -118.475, 6.11263, 1.11", "86.6497, -118.523, 6.1039, 1.11", "87.3551, -119.119, 5.95678, 0.88", "88.2166, -119.813, 5.73332, 0.88", "89.1621, -120.474, 5.45793, 0.59", "89.2354, -120.518, 5.43595, 0.59", "90.0594, -120.888, 5.21688, 0.37", "90.4287, -121.013, 5.13561, 0.37", "91.0223, -121.127, 5.04455, 0.37", "91.8467, -121.211, 4.99453, 0.74", "92.0186, -121.231, 4.99319, 0.74", "92.9406, -121.368, 4.9867, 0.74", "93.0922, -121.404, 4.98182, 0.74", "93.6837, -121.677, 4.94729, 0.74", "94.4361, -122.314, 4.88056, 0.29", "94.9958, -123.003, 4.81472, 0.29", "95.0371, -123.065, 4.80937, 0.29", "95.5671, -123.943, 4.73832, 0.52", "96.1181, -124.786, 4.6722, 0.59", "96.6609, -125.525, 4.61535, 0.37", "96.7235, -125.588, 4.60944, 0.37", "97.5004, -126.144, 4.55192, 0.37", "98.1209, -126.513, 4.51816, 0.74", "98.942, -126.915, 4.48766, 1.03", "99.5467, -127.193, 4.46413, 1.25", "100.548, -127.672, 4.42576, 0.52", "101.466, -128.159, 4.35588, 0.29", "102.442, -128.774, 4.24847, 0.66", "102.516, -128.832, 4.23444, 0.66", "103.281, -129.562, 4.04296, 0.96", "103.795, -130.144, 3.8587, 1.33", "104.436, -130.997, 3.56566, 1.4", "104.963, -131.778, 3.27776, 0.74", "105.909, -133.294, 2.69365, 0.37", "106.543, -134.432, 2.23798, 0.37", "107.081, -135.566, 1.76488, 0.37", "107.278, -136.087, 1.55692, 1.03", "107.42, -136.525, 1.40134, 1.03", "107.444, -136.604, 1.37399, 1.03", "107.751, -137.664, 1.06755, 0.37", "107.808, -137.825, 1.02404, 0.37", "108.191, -138.512, 0.88914, 0.37", "108.844, -139.306, 0.745023, 0.22", "109.262, -139.69, 0.613914, 0.88", "109.554, -139.95, 0.510496, 1.33", "109.605, -139.995, 0.491905, 1.33", "110.043, -140.437, 0.306087, 1.47", "110.639, -141.16, 0.00505486, 0.81", "111.527, -142.549, -0.541861, 0.22", "111.957, -143.402, -0.83397, 0.22", "112.118, -143.842, -0.951247, 0.96", "112.347, -144.681, -1.12195, 1.18", "112.467, -145.289, -1.20536, 0.88", "112.482, -145.369, -1.21074, 0.88", "112.691, -146.23, -1.19458, 0.66", "113.053, -147.201, -1.17767, 0.52", "113.299, -147.708, -1.16941, 0.44", "113.725, -148.414, -1.15877, 0.37", "114.19, -149.093, -1.1491, 0.22", "114.555, -149.589, -1.14229, 0.22", "114.973, -150.108, -1.13554, 0.96", "115.381, -150.603, -1.12919, 1.25", "115.911, -151.226, -1.12137, 1.25", "116.388, -151.785, -1.11438, 1.25", "116.868, -152.334, -1.10762, 0.96", "117.41, -152.966, -1.09973, 0.29", "117.597, -153.188, -1.09693, 0.29", "118.276, -154.073, -1.08506, 0.29", "118.362, -154.214, -1.08295, 0.29", "118.764, -155.129, -1.10905, 0.29", "119.07, -156.117, -1.16718, 0.59", "119.219, -156.765, -1.2186, 1.11", "119.376, -157.634, -1.29897, 1.11", "119.517, -158.653, -1.40476, 0.66", "119.655, -159.626, -1.51764, 0.29", "119.668, -159.696, -1.52743, 0.29", "120.018, -160.411, -1.60876, 0.29", "120.071, -160.462, -1.60952, 0.29", "120.667, -160.87, -1.56411, 0.29", "120.733, -160.913, -1.55572, 0.29", "121.515, -161.485, -1.41921, 0.29", "122.227, -162.093, -1.29318, 0.66", "122.639, -162.525, -1.22008, 0.88", "123.184, -163.214, -1.12494, 0.37", "123.712, -164.013, -1.02913, 0.66", "124.097, -164.646, -0.96246, 1.18", "124.346, -165.056, -0.936934, 1.4", "124.924, -165.972, -0.91971, 1.03", "125.422, -166.716, -0.913365, 0.66", "125.849, -167.307, -0.914972, 0.52", "126.338, -167.948, -0.923721, 0.44", "127.182, -169.041, -0.948654, 0.29", "127.23, -169.103, -0.950662, 0.29", "127.561, -169.557, -0.983094, 0.29", "127.978, -170.272, -1.04758, 0.88", "128.219, -170.803, -1.11698, 1.4", "128.447, -171.427, -1.20302, 1.47", "128.493, -171.566, -1.22085, 1.47", "128.991, -173.034, -1.4122, 0.29", "129.414, -174.248, -1.57107, 0.29", "129.852, -175.421, -1.66714, 0.29", "130.236, -176.323, -1.69515, 0.29", "130.666, -177.213, -1.67882, 1.18", "131.041, -177.927, -1.62885, 1.62", "131.377, -178.498, -1.56881, 1.62", "132.107, -179.743, -1.42617, 0.44", "132.753, -180.909, -1.33819, 0.22", "133.023, -181.409, -1.33437, 0.59", "133.353, -182.016, -1.37043, 0.74", "133.956, -183.044, -1.50223, 0.29", "134.622, -184.119, -1.7233, 0.29", "135.352, -185.213, -1.99188, 0.29", "135.741, -185.725, -2.08669, 0.66", "136.166, -186.261, -2.13948, 0.88", "136.769, -186.954, -2.13032, 1.18", "136.823, -187.018, -2.12024, 1.18", "137.593, -188.08, -1.88263, 0.66", "137.995, -188.972, -1.6674, 0.22", "138.225, -189.816, -1.51919, 0.22", "138.298, -190.221, -1.46862, 0.88", "138.435, -191.146, -1.39588, 0.88", "138.61, -192.355, -1.3474, 0.59", "138.831, -193.568, -1.35645, 0.74", "139.01, -194.265, -1.36548, 1.25", "139.299, -195.032, -1.37613, 1.25", "139.889, -196.287, -1.39389, 0.22", "139.954, -196.388, -1.39528, 0.22", "140.8, -197.472, -1.40945, 0.22", "141.348, -198.088, -1.41453, 1.18", "142.026, -198.802, -1.41386, 1.55", "142.094, -198.868, -1.41406, 1.55", "142.964, -199.629, -1.51834, 0.59", "143.798, -200.3, -1.69099, 0.29", "144.326, -200.69, -1.83968, 1.11", "144.396, -200.739, -1.86213, 1.11", "145.035, -201.218, -2.0269, 0.74", "146.553, -202.471, -2.30685, 0.22", "147.188, -203.034, -2.38276, 0.22", "147.846, -203.645, -2.41047, 0.96", "148.314, -204.12, -2.3944, 0.96", "149.553, -205.508, -2.24833, 0.22", "150.098, -206.2, -2.0796, 0.22", "150.324, -206.512, -1.94283, 0.81", "150.735, -207.106, -1.65381, 1.03", "151.035, -207.545, -1.38657, 0.74", "151.076, -207.603, -1.34903, 0.74", "151.949, -208.73, -0.633657, 0.22", "152.55, -209.483, -0.138169, 1.11", "153.058, -210.086, 0.25272, 1.55", "154.15, -211.336, 1.05238, 0.88", "154.936, -212.147, 1.54701, 0.29", "156.003, -213.148, 2.10073, 0.29", "156.069, -213.202, 2.12427, 0.29", "156.815, -213.712, 2.27928, 0.44", "156.879, -213.746, 2.28636, 0.44", "157.898, -214.179, 2.28515, 0.44", "157.98, -214.209, 2.28495, 0.44", "158.628, -214.429, 2.283, 0.74", "159.586, -214.786, 2.2808, 1.25", "160.36, -215.109, 2.27978, 1.47", "161.192, -215.52, 2.28003, 1.55", "161.732, -215.833, 2.28116, 1.55", "162.622, -216.367, 2.2834, 0.74", "163.294, -216.806, 2.27548, 0.81", "163.752, -217.133, 2.25581, 0.81", "164.591, -217.77, 2.19875, 0.29", "165.746, -218.668, 2.09575, 0.29", "166.252, -219.068, 2.04162, 0.66", "167.084, -219.773, 2.00035, 0.29", "167.691, -220.297, 2.00594, 1.33", "167.767, -220.369, 2.0117, 1.33", "168.305, -220.958, 2.13083, 1.55", "168.358, -221.028, 2.14917, 1.55", "169.359, -222.489, 2.56008, 0.22", "169.669, -222.963, 2.70605, 0.74", "170.013, -223.501, 2.86874, 1.03", "170.986, -225.041, 3.29801, 0.22", "171.567, -225.983, 3.54573, 1.25", "171.877, -226.471, 3.65678, 1.62", "171.922, -226.538, 3.66601, 1.62", "172.365, -227.166, 3.7534, 0.88", "172.414, -227.235, 3.7616, 0.88" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "10.1205, -87.0372, -5.3976, 0.52", "9.54641, -88.898, -6.62104, 0.52", "9.13463, -90.0586, -7.31727, 0.74", "8.89965, -90.7474, -7.69154, 0.74", "8.88001, -90.8027, -7.71883, 0.74", "8.60215, -91.5434, -8.05061, 1.18", "8.58338, -91.5913, -8.07014, 1.18", "8.25509, -92.283, -8.2511, 0.74", "7.89153, -93.0833, -8.41936, 0.44", "7.59671, -93.7522, -8.56058, 0.44", "7.30507, -94.4227, -8.71223, 1.11", "7.04867, -95.0797, -8.85601, 1.25", "6.86225, -95.5985, -8.9654, 0.81", "6.63333, -96.3075, -9.11112, 0.74", "6.408, -97.1395, -9.27072, 0.52", "6.13184, -98.7197, -9.56085, 0.44", "5.99174, -100.07, -9.80166, 0.44", "5.9853, -100.582, -9.88712, 0.44", "6.03163, -101.102, -9.95283, 1.03", "6.21154, -101.958, -10.0166, 1.25", "6.51012, -102.808, -10.0234, 1.47", "6.54003, -102.867, -10.0192, 1.47", "6.97553, -103.602, -9.95801, 1.11", "7.43285, -104.397, -9.90014, 0.88", "7.69522, -104.94, -9.89753, 0.66", "7.71877, -105.01, -9.90361, 0.66", "7.82725, -105.593, -10.0186, 0.44", "7.88196, -106.374, -10.2834, 0.29", "7.85424, -106.828, -10.4873, 0.37", "7.69183, -107.837, -11.0103, 0.37", "7.56906, -108.377, -11.3024, 0.88", "7.35809, -109.137, -11.7036, 1.25", "7.05001, -110.154, -12.1934, 0.66", "6.86616, -110.747, -12.4471, 0.37", "6.65934, -111.542, -12.7256, 0.37", "6.64912, -111.598, -12.7393, 0.37", "6.51056, -112.738, -12.9362, 0.66", "6.46745, -113.825, -13.0182, 0.52", "6.47089, -113.887, -13.0181, 0.52", "6.60999, -114.795, -12.992, 1.11", "6.86437, -115.842, -12.9248, 1.11", "6.8819, -115.906, -12.9222, 1.11", "7.16815, -116.897, -12.9092, 1.11", "7.34795, -117.662, -12.9362, 0.96", "7.4464, -118.386, -13.0264, 0.96", "7.42714, -119.601, -13.3107, 0.29", "7.26211, -120.404, -13.5977, 0.29", "7.06712, -120.919, -13.8269, 0.96", "6.73662, -121.503, -14.1262, 1.11", "6.1092, -122.457, -14.6186, 1.25", "5.68072, -123.06, -14.9262, 1.03", "5.22255, -123.707, -15.2519, 0.81", "4.79854, -124.461, -15.6035, 0.37", "4.43528, -125.473, -16.0601, 0.37", "4.3072, -126.392, -16.4468, 0.44", "4.31604, -126.594, -16.5236, 0.44", "4.45717, -127.273, -16.7767, 0.81", "4.9425, -128.525, -17.3177, 1.03", "5.3526, -129.384, -17.7401, 1.77", "5.63955, -129.993, -18.0561, 1.47", "5.67201, -130.059, -18.0919, 1.47", "5.93011, -130.622, -18.3937, 1.11", "6.59741, -132.256, -19.2372, 0.74", "6.86919, -133.18, -19.6993, 0.74", "7.06294, -134.07, -20.1863, 0.88" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "10.1205, -87.0372, -5.3976, 0.81", "10.7555, -88.5885, -5.38678, 0.81", "11.1298, -89.7077, -5.38244, 1.11", "11.4694, -90.9353, -5.37641, 1.11", "11.6529, -91.7804, -5.37074, 1.25", "11.8437, -93.0959, -5.29157, 0.88", "11.9318, -93.9924, -5.16776, 0.74", "11.8993, -95.0214, -4.90906, 0.88", "11.7294, -96.0864, -4.43134, 0.96", "11.5147, -96.8374, -3.97107, 0.59", "11.0562, -98.2077, -3.01435, 0.74", "10.728, -99.2479, -2.23127, 0.96", "10.5328, -99.986, -1.70131, 0.96", "10.3076, -101.1, -0.976173, 0.96", "10.0974, -102.411, -0.294787, 1.11", "9.96619, -103.502, 0.0693434, 1.18", "9.85518, -104.983, 0.284793, 1.4", "9.76932, -106.479, 0.315185, 0.74", "9.75092, -107.352, 0.257296, 0.66", "9.78249, -108.557, 0.0929768, 0.66", "9.87818, -109.781, -0.103785, 0.66", "9.98436, -110.703, -0.265916, 1.11", "10.1608, -111.6, -0.390252, 1.18", "10.4155, -112.393, -0.386686, 0.96", "10.7596, -113.251, -0.207733, 0.81", "11.1293, -114.054, 0.112978, 0.59", "11.506, -114.882, 0.548563, 0.59", "11.9672, -116.073, 1.32932, 1.18", "12.2665, -117.131, 2.04424, 0.96", "12.4143, -118.192, 2.62888, 0.88", "12.4179, -118.249, 2.65552, 0.88", "12.4538, -119.277, 3.03888, 0.96", "12.5165, -120.875, 3.4718, 0.96", "12.6227, -122.644, 3.74223, 0.74", "12.9633, -125.764, 3.86154, 0.74", "13.0487, -126.297, 3.83953, 0.74", "13.2919, -127.423, 3.72882, 0.74", "13.6255, -128.567, 3.53766, 1.11", "14.0157, -129.59, 3.28004, 1.4", "14.8093, -131.15, 2.78933, 0.66", "15.2772, -131.883, 2.52255, 1.11", "15.6957, -132.509, 2.29714, 1.25", "16.1321, -133.128, 2.08763, 1.25", "16.6606, -133.824, 1.91698, 0.96", "17.3816, -134.718, 1.76803, 0.59", "18.0352, -135.487, 1.74645, 0.74", "18.4698, -135.998, 1.77223, 1.03", "18.9977, -136.611, 1.8457, 0.66", "20.0539, -137.805, 2.07204, 0.37", "20.1002, -137.855, 2.0866, 0.37", "21.0801, -138.827, 2.48725, 0.88", "21.6746, -139.451, 2.75827, 1.25", "21.8264, -139.627, 2.83233, 1.25", "22.215, -140.166, 3.02828, 1.25", "22.8594, -141.396, 3.36224, 1.33", "23.3692, -142.639, 3.6329, 0.66", "23.7019, -143.871, 3.7803, 0.37", "23.7681, -144.484, 3.80639, 0.37", "23.736, -145.471, 3.76854, 0.74", "23.57, -146.809, 3.63538, 0.88", "23.5532, -146.889, 3.62191, 0.88", "23.3278, -147.935, 3.43876, 0.66", "23.1938, -149.041, 3.27103, 0.52", "23.1808, -150.081, 3.1511, 0.52", "23.3969, -151.307, 3.14923, 0.88", "23.4278, -151.386, 3.15881, 0.88", "23.973, -152.458, 3.38642, 1.18", "24.3707, -153.088, 3.5731, 1.4", "24.4396, -153.19, 3.60673, 1.4", "25.0756, -154.24, 3.92896, 0.74", "25.4545, -155.093, 4.13343, 0.29", "25.4771, -155.17, 4.14605, 0.29", "25.6184, -156.098, 4.22967, 0.29", "25.6743, -156.911, 4.27703, 0.59", "25.6997, -157.827, 4.3014, 0.81", "25.6915, -158.662, 4.29839, 0.81", "25.6762, -159.815, 4.29458, 1.11", "25.6779, -160.701, 4.29046, 1.11", "25.688, -161.874, 4.28429, 1.11", "25.7455, -163.268, 4.2729, 0.81", "25.8134, -164.162, 4.26284, 1.4", "25.906, -165.139, 4.25019, 1.84", "25.9902, -165.934, 4.23911, 2.21" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-3.13396, -99.8602, 16.3597, 0.29", "-2.9613, -101.053, 16.3589, 0.29", "-2.69487, -102.021, 16.4845, 0.29", "-2.39898, -102.827, 16.6591, 0.29", "-1.88182, -103.655, 16.9663, 0.59", "-1.25832, -104.348, 17.3875, 0.59", "-0.511465, -105.029, 17.9544, 0.52", "0.500002, -105.798, 18.7351, 0.44", "0.554835, -105.841, 18.7799, 0.44", "1.61371, -106.771, 19.773, 0.37", "2.59197, -107.807, 20.9306, 0.52", "3.4353, -108.897, 22.1317, 0.52", "4.00412, -109.922, 23.1763, 0.74", "4.31688, -110.76, 23.9895, 0.74", "4.58801, -111.839, 25.044, 0.74", "4.75396, -113.071, 26.2303, 0.74", "4.75859, -113.12, 26.2798, 0.74", "4.78611, -113.893, 27.1216, 0.74", "4.92053, -114.772, 28.2341, 0.37", "5.05628, -114.918, 28.3894, 0.37", "5.97954, -115.462, 28.6667, 0.37", "6.85765, -116.056, 28.9666, 0.37", "6.92722, -116.11, 28.9956, 0.37", "7.57217, -116.699, 29.5217, 0.59", "8.34233, -117.544, 30.5081, 0.37", "8.99731, -118.356, 31.6211, 0.37", "9.70852, -119.363, 33.0855, 0.66", "9.96741, -119.741, 33.6603, 0.81", "11.1976, -121.468, 36.3425, 0.52", "11.5103, -121.935, 37.1554, 0.74", "11.5312, -121.968, 37.2211, 0.74", "11.7771, -122.292, 37.9099, 0.52", "12.208, -122.639, 38.6643, 0.52", "12.5512, -122.872, 39.0944, 0.81" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-3.13396, -99.8602, 16.3597, 0.29", "-3.56761, -100.947, 16.5298, 0.29", "-3.83596, -101.806, 16.6671, 0.29", "-3.97486, -102.525, 16.9173, 0.29", "-4.08323, -103.413, 17.3246, 0.66", "-4.04544, -104.229, 18.1583, 0.22", "-3.92619, -104.577, 18.6654, 0.37", "-3.9023, -104.614, 18.7329, 0.37", "-3.29424, -105.501, 20.3387, 0.29", "-3.26779, -105.542, 20.4101, 0.29", "-2.43626, -107.034, 22.8495, 0.29", "-2.15161, -107.783, 23.9772, 0.29", "-1.95022, -108.998, 25.5402, 0.29", "-1.89706, -110.055, 26.7223, 0.29", "-1.92704, -110.703, 27.3233, 0.29", "-2.04694, -111.887, 28.3966, 0.29", "-2.26247, -113.288, 29.5725, 0.66", "-2.57715, -114.925, 31.0426, 0.37", "-2.59008, -114.987, 31.1025, 0.37", "-2.69812, -115.509, 31.6698, 0.52", "-2.98245, -117.022, 33.4237, 0.59", "-3.06438, -117.531, 34.0079, 0.22", "-3.05546, -117.957, 34.5229, 0.66" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "15.3206, -276.659, 16.7425, 0.29", "15.0616, -277.859, 16.8984, 0.29", "14.8054, -278.991, 17.0144, 0.29", "14.5514, -280.22, 17.1123, 0.29", "14.384, -281.172, 17.1553, 0.29", "14.2781, -281.958, 17.1974, 1.03", "14.1931, -282.798, 17.2432, 1.33", "14.1925, -283.477, 17.2879, 1.33", "14.2443, -284.146, 17.3413, 1.18", "14.4061, -285.507, 17.4529, 0.29", "14.5659, -286.311, 17.5552, 0.59", "14.6667, -286.72, 17.6195, 0.59", "14.9633, -287.854, 17.8147, 0.22", "15.1419, -288.704, 17.9685, 0.22", "15.1491, -288.786, 17.9836, 0.22", "15.1142, -289.368, 18.0831, 1.03", "14.979, -290.026, 18.1442, 1.25", "14.746, -290.73, 18.1912, 1.03", "14.3807, -291.671, 18.2204, 0.37", "13.9907, -292.706, 18.2803, 0.37", "13.6038, -293.793, 18.3592, 0.37", "13.2007, -295.042, 18.4594, 0.22", "12.9224, -296.037, 18.5421, 0.22", "12.7503, -296.965, 18.6532, 0.22", "12.7494, -298.1, 18.8724, 1.18", "12.7661, -298.183, 18.8957, 1.18", "12.9885, -298.825, 19.1322, 1.33", "13.0529, -298.986, 19.1988, 1.25", "13.4781, -300.141, 19.6067, 0.59", "13.7023, -301.15, 19.8558, 0.22", "13.8015, -302.043, 19.9863, 0.22", "13.8299, -302.749, 20.0455, 0.96", "13.7928, -303.605, 20.07, 1.25", "13.7308, -304.596, 20.0751, 0.59", "13.6358, -305.911, 20.0142, 0.37", "13.6307, -305.994, 20.0089, 0.37", "13.6632, -306.856, 19.959, 0.37", "13.7676, -307.532, 19.9646, 1.25", "14.0643, -308.749, 20.1331, 0.52", "14.2837, -309.56, 20.3509, 0.52", "14.3012, -309.632, 20.3776, 0.52", "14.4145, -310.592, 20.7783, 0.52", "14.3876, -311.744, 21.3261, 0.29", "14.2597, -312.665, 21.7679, 0.29", "14.0984, -313.333, 22.0669, 0.44", "13.8937, -314.055, 22.3721, 0.37", "13.6239, -315.012, 22.7405, 0.29", "13.3707, -315.997, 23.0537, 0.74", "13.2782, -316.702, 23.1898, 1.18", "13.2967, -317.47, 23.2643, 1.25", "13.4134, -318.32, 23.3111, 1.4", "13.5414, -318.941, 23.3263, 1.33", "13.809, -320.058, 23.3346, 0.29", "14.1174, -321.352, 23.329, 0.29", "14.317, -322.35, 23.3082, 0.29", "14.4038, -322.884, 23.2879, 0.88", "14.4626, -323.598, 23.207, 1.11", "14.4634, -324.407, 23.0801, 0.96", "14.4589, -324.485, 23.0658, 0.96", "14.3798, -325.524, 22.9341, 0.44", "14.3767, -325.603, 22.9275, 0.44", "14.3478, -326.984, 22.8766, 0.29", "14.3257, -328.111, 22.9069, 0.29", "14.2906, -328.988, 22.9895, 0.29", "14.2244, -330.206, 23.2503, 0.29", "14.1861, -330.837, 23.4447, 0.22", "14.1304, -331.44, 23.6501, 1.03", "14.0402, -332.126, 23.8217, 1.4", "13.9685, -332.545, 23.8579, 1.4", "13.7226, -334.065, 23.6816, 0.29", "13.6302, -334.788, 23.4874, 0.44", "13.5599, -335.592, 23.2099, 0.44", "13.4464, -337.761, 22.3665, 1.03", "13.4101, -338.691, 21.9741, 1.03", "13.3529, -340.155, 21.3302, 0.52", "13.2938, -341.187, 20.8679, 0.29", "13.2892, -341.251, 20.8428, 0.29", "13.2285, -342.326, 20.5166, 0.44", "13.2331, -342.822, 20.418, 0.81", "13.2953, -343.558, 20.3127, 1.11", "13.4551, -344.519, 20.2559, 0.66", "13.8124, -346.021, 20.2145, 0.37", "14.1164, -347.191, 20.1964, 0.37", "14.4599, -348.497, 20.1742, 0.37", "14.7551, -349.707, 20.1164, 0.29", "14.9602, -350.608, 20.0532, 1.11", "15.1381, -351.577, 19.9547, 1.55", "15.2895, -352.856, 19.8033, 1.25", "15.3281, -353.954, 19.6171, 0.74", "15.2836, -355.185, 19.3517, 0.29", "15.2405, -355.973, 19.131, 0.29", "15.2446, -356.979, 18.8408, 0.29", "15.2801, -357.506, 18.6972, 0.29", "15.3957, -358.161, 18.5495, 0.29", "15.5473, -358.713, 18.4514, 0.96", "15.7468, -359.324, 18.3831, 0.96", "16.344, -361.029, 18.2457, 0.15", "16.3704, -361.098, 18.2424, 0.15", "16.6447, -361.794, 18.2116, 0.15", "16.6763, -361.875, 18.2076, 0.15", "16.9216, -362.556, 18.1579, 0.15", "17.1046, -363.218, 18.1046, 0.88", "17.2355, -363.83, 18.0723, 1.25", "17.3093, -364.228, 18.0662, 1.55", "17.4197, -365.045, 18.1072, 0.74", "17.5381, -366.196, 18.2084, 0.22", "17.5975, -367.159, 18.3419, 0.22", "17.6144, -367.91, 18.4711, 0.66", "17.622, -368.819, 18.6726, 0.88", "17.5708, -370.429, 19.0921, 0.22", "17.5178, -371.037, 19.2709, 0.74", "17.3517, -372.323, 19.6757, 0.96", "17.2156, -373.135, 19.9231, 1.25", "16.9783, -374.127, 20.1778, 1.25", "16.6138, -375.316, 20.4568, 0.22", "16.2237, -376.379, 20.6494, 0.22", "16.1944, -376.461, 20.6589, 0.22", "16.0167, -377.008, 20.6584, 0.74", "15.693, -378.339, 20.5355, 0.22", "15.6839, -378.425, 20.5191, 0.22", "15.7354, -378.973, 20.3919, 0.29", "15.9774, -380.062, 20.1369, 0.29", "16.1985, -380.854, 19.9762, 0.29", "16.392, -381.475, 19.8762, 1.18", "16.6035, -382.22, 19.7838, 1.62", "16.6719, -382.617, 19.7256, 1.62", "16.7227, -383.427, 19.6226, 0.96", "16.7005, -384.36, 19.5484, 0.29", "16.6466, -385.206, 19.501, 0.22", "16.5534, -386.201, 19.4442, 1.25", "16.3748, -387.693, 19.363, 1.25", "16.2425, -388.589, 19.3193, 1.25", "15.983, -390.051, 19.2572, 0.22", "15.7897, -391.086, 19.2203, 1.47" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "15.3206, -276.659, 16.7425, 0.29", "15.2362, -274.412, 17.3058, 0.29", "15.1953, -273.34, 17.5358, 0.29", "15.1945, -273.262, 17.5474, 0.29", "15.3611, -272.049, 17.6258, 0.29", "15.3987, -271.776, 17.6435, 0.29", "15.5387, -270.757, 17.7095, 0.29", "15.5758, -270.563, 17.6969, 0.29", "16.0164, -268.959, 17.549, 0.29", "16.6821, -266.899, 17.3275, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-121.552, -125.179, -3.40798, 0.29", "-122.695, -125.272, -3.5366, 0.29", "-123.193, -125.332, -3.59223, 0.59", "-123.736, -125.424, -3.65553, 0.52", "-124.422, -125.568, -3.7321, 0.52", "-124.907, -125.694, -3.7865, 0.29", "-125.449, -125.848, -3.84597, 1.47", "-125.699, -125.941, -3.86433, 1.69", "-126.019, -126.083, -3.8731, 1.47", "-126.406, -126.301, -3.87803, 1.18", "-126.85, -126.612, -3.88565, 0.59", "-126.879, -126.635, -3.88498, 0.59", "-127.379, -127.059, -3.86271, 0.59", "-127.737, -127.347, -3.85647, 1.25", "-128.034, -127.57, -3.86054, 0.88", "-128.636, -128.001, -3.88732, 0.37", "-128.986, -128.231, -3.91063, 1.11", "-129.575, -128.585, -3.97299, 0.22", "-129.967, -128.809, -4.03664, 0.22", "-130.195, -128.939, -4.08188, 0.22", "-130.225, -128.957, -4.08954, 0.22", "-130.553, -129.165, -4.18445, 0.81", "-130.8, -129.343, -4.25347, 1.11", "-131.344, -129.833, -4.38549, 0.29", "-131.713, -130.217, -4.46988, 1.18", "-131.898, -130.41, -4.50599, 1.62", "-132.018, -130.533, -4.52753, 1.62", "-132.048, -130.561, -4.53178, 1.62", "-132.362, -130.807, -4.56556, 1.03", "-132.985, -131.173, -4.63165, 0.29", "-133.478, -131.353, -4.71271, 0.22", "-133.513, -131.36, -4.72107, 0.22", "-134.045, -131.379, -4.87838, 1.47", "-134.252, -131.369, -4.94744, 1.69", "-134.708, -131.306, -5.12095, 1.69", "-135.481, -131.157, -5.45457, 0.29", "-135.926, -131.083, -5.68595, 0.29", "-136.41, -131.019, -5.96568, 0.22", "-136.629, -131.001, -6.10737, 0.66", "-136.892, -131.002, -6.28232, 0.74", "-137.167, -131.025, -6.453, 0.74", "-137.7, -131.119, -6.76808, 0.29", "-137.899, -131.161, -6.87972, 0.74", "-138.183, -131.223, -7.04594, 0.74", "-138.668, -131.318, -7.3174, 0.22", "-139.229, -131.417, -7.60465, 0.22", "-139.477, -131.451, -7.71268, 1.18", "-139.95, -131.496, -7.85827, 1.62" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-121.552, -125.179, -3.40798, 0.29", "-121.935, -124.017, -3.70587, 0.29", "-122.122, -123.483, -3.85478, 0.37", "-122.209, -123.173, -3.96756, 0.37", "-122.556, -121.818, -4.38284, 0.22", "-122.585, -121.698, -4.41616, 0.22", "-122.802, -120.763, -4.66354, 0.59", "-122.849, -120.573, -4.71278, 0.59", "-123.125, -119.328, -5.01753, 0.22", "-123.411, -117.843, -5.37775, 0.22", "-123.456, -117.505, -5.46388, 0.59", "-123.502, -117.084, -5.55173, 0.59" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "3.43329, 127.991, -5.92946, 0.81", "4.70493, 129.299, -5.55847, 0.81", "5.63019, 130.292, -5.25386, 0.15", "5.68358, 130.345, -5.2322, 0.15", "6.45056, 131.081, -4.81961, 0.96", "7.00253, 131.6, -4.48586, 1.25", "8.28099, 132.787, -3.66645, 0.29", "8.90131, 133.357, -3.20913, 0.29", "9.96423, 134.265, -2.40519, 0.22", "11.123, 135.165, -1.57525, 0.96", "11.6266, 135.51, -1.22884, 0.96", "11.7053, 135.555, -1.17744, 0.96", "12.5136, 135.94, -0.709226, 0.29", "13.2423, 136.238, -0.335013, 0.22", "14.4166, 136.674, 0.306781, 0.22", "15.2468, 136.966, 0.770274, 0.96", "16.4473, 137.415, 1.52211, 0.22", "16.884, 137.591, 1.82592, 0.96", "17.3561, 137.806, 2.20156, 1.4", "19.1879, 138.859, 3.86529, 0.52", "19.781, 139.317, 4.47949, 0.22", "20.232, 139.747, 4.95627, 0.22", "20.278, 139.794, 4.99778, 0.22", "20.6819, 140.122, 5.33523, 0.22", "21.2301, 140.562, 5.87755, 0.96", "21.3744, 140.679, 6.01528, 0.96", "21.4801, 140.762, 6.11768, 0.96", "22.3646, 141.353, 6.90663, 0.22", "23.6607, 142.144, 7.97704, 1.11", "25.0874, 143.003, 9.23581, 0.22", "25.5863, 143.315, 9.69739, 0.52", "26.3157, 143.783, 10.376, 0.66", "27.4493, 144.507, 11.3962, 0.22", "28.1366, 144.927, 11.9633, 1.03", "29.4427, 145.594, 12.8545, 0.52", "30.5762, 146.025, 13.5202, 0.29", "31.7311, 146.357, 14.1853, 1.11", "32.315, 146.499, 14.5248, 1.4", "33.6958, 146.806, 15.2745, 0.22", "34.3584, 146.932, 15.6038, 0.59", "34.8723, 147.014, 15.8063, 0.59", "35.8094, 147.148, 16.1408, 0.22", "36.9363, 147.319, 16.5215, 0.22", "37.6059, 147.42, 16.7548, 0.74", "37.902, 147.467, 16.8567, 0.74", "39.1056, 147.678, 17.2335, 0.22", "39.5543, 147.753, 17.3486, 0.59", "39.7824, 147.784, 17.3904, 0.59", "41.1618, 147.906, 17.5619, 0.22", "41.3888, 147.92, 17.5888, 0.22", "42.5365, 147.985, 17.709, 0.22", "43.3895, 148.04, 17.7795, 0.22", "44.1304, 148.117, 17.836, 0.88", "45.034, 148.257, 17.8894, 0.96" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "3.43329, 127.991, -5.92946, 0.29", "3.70385, 128.867, -6.13692, 0.29", "4.048, 129.838, -6.3613, 0.29", "4.56846, 131.238, -6.71326, 0.22", "4.80484, 131.907, -6.88484, 0.88", "5.27183, 133.315, -7.24474, 0.22", "5.51269, 134.093, -7.4376, 0.22", "5.53234, 134.155, -7.45258, 0.22", "5.76803, 135.009, -7.65821, 0.22", "5.86591, 135.715, -7.8263, 0.88", "5.87536, 136.064, -7.90459, 1.25", "5.81904, 136.611, -8.0016, 0.88", "5.73819, 137.132, -8.09436, 0.29", "5.66611, 137.721, -8.17364, 0.22", "5.65562, 138.474, -8.21472, 1.25", "5.6632, 138.566, -8.21578, 1.25", "5.71937, 138.999, -8.20938, 1.25", "5.82691, 139.747, -8.19374, 0.88", "6.04007, 141.037, -8.15133, 0.22", "6.2756, 142.32, -8.08826, 0.22", "6.37243, 142.83, -8.05489, 0.96", "6.44923, 143.21, -8.02797, 0.96", "6.69829, 144.343, -7.95626, 0.22", "6.71318, 144.409, -7.95253, 0.22", "6.89604, 145.273, -7.91249, 0.88", "7.00524, 145.856, -7.89331, 0.81", "7.16054, 146.645, -7.864, 1.11", "7.38621, 147.795, -7.84757, 0.29", "7.57705, 148.751, -7.84561, 0.22", "7.65518, 149.15, -7.85044, 0.96", "7.771, 149.711, -7.86154, 1.25", "7.90261, 150.306, -7.87463, 1.25", "8.21324, 151.372, -7.8913, 0.29", "8.53884, 152.117, -7.87187, 0.22", "8.81908, 152.625, -7.84301, 0.88", "9.17239, 153.171, -7.79288, 1.03", "9.24084, 153.265, -7.78046, 1.03", "9.95769, 154.226, -7.61725, 0.22", "10.3756, 154.862, -7.52081, 0.22", "10.7816, 155.68, -7.45312, 0.59", "10.8047, 155.743, -7.45073, 0.59", "10.9423, 156.229, -7.44439, 0.88", "11.1232, 157.074, -7.44367, 1.33", "11.3427, 158.701, -7.46693, 0.22", "11.4262, 159.413, -7.48044, 0.96", "11.5129, 159.906, -7.46888, 1.11", "11.5573, 160.095, -7.4551, 1.11", "11.7839, 160.788, -7.3557, 0.81", "11.8353, 160.904, -7.32809, 0.81", "12.172, 161.524, -7.11248, 0.22", "12.6612, 162.352, -6.8118, 0.29", "12.9507, 162.834, -6.63588, 0.29", "13.1646, 163.222, -6.50539, 0.29", "13.3864, 163.712, -6.40012, 0.29", "13.5289, 164.149, -6.35496, 0.96", "13.6222, 164.52, -6.35656, 1.18", "13.6367, 164.583, -6.35972, 1.18", "13.7613, 165.092, -6.39139, 1.18", "14.1921, 166.619, -6.47667, 0.22", "14.4788, 167.536, -6.51438, 0.22", "14.8589, 168.692, -6.54032, 0.96", "15.0803, 169.305, -6.53471, 1.33", "15.106, 169.367, -6.53118, 1.33", "15.3516, 169.887, -6.47735, 1.33", "15.7212, 170.629, -6.3618, 1.03", "16.1315, 171.435, -6.21697, 0.88", "16.6906, 172.614, -5.96814, 0.22", "17.186, 173.715, -5.74202, 0.22", "17.2082, 173.765, -5.73183, 0.22", "17.4624, 174.432, -5.62127, 1.03", "17.6556, 175.063, -5.51444, 1.25", "17.8863, 176.162, -5.3336, 0.22", "17.9376, 176.71, -5.25268, 0.22", "17.9383, 176.763, -5.24594, 0.22", "17.8935, 178.262, -5.02827, 0.37", "17.8161, 179.33, -4.86362, 0.22", "17.7367, 180.097, -4.74173, 0.88", "17.6761, 180.596, -4.65894, 1.25", "17.5999, 181.223, -4.54411, 0.96", "17.4708, 182.414, -4.32883, 0.22", "17.4289, 182.97, -4.22471, 0.66", "17.404, 183.208, -4.20518, 0.66", "17.3805, 183.33, -4.20558, 0.66", "17.2504, 183.846, -4.25506, 0.22", "17.1043, 184.355, -4.37803, 0.22", "17.092, 184.402, -4.39804, 0.22", "16.9742, 185.034, -4.67677, 0.22", "16.891, 185.682, -4.96401, 1.03", "16.8845, 186.282, -5.20779, 1.18", "16.9714, 186.919, -5.44883, 1.18", "17.2494, 188.028, -5.80974, 0.22", "17.4422, 188.603, -5.98673, 0.22", "17.4767, 188.692, -6.01104, 0.22", "17.8066, 189.568, -6.26464, 0.22", "17.9751, 190.175, -6.43197, 1.03", "18.0731, 190.678, -6.56017, 1.25", "18.1801, 191.586, -6.77413, 1.11", "18.2394, 192.382, -6.95338, 0.74", "18.3218, 193.635, -7.20454, 0.22", "18.3691, 194.749, -7.40758, 0.22", "18.3763, 194.865, -7.42288, 0.22", "18.4655, 195.509, -7.48926, 0.22", "18.6149, 196.198, -7.52265, 0.88", "18.773, 196.699, -7.53257, 1.33", "18.7964, 196.758, -7.53145, 1.33", "18.8691, 196.933, -7.53432, 1.33", "19.4812, 198.53, -7.61194, 0.22", "19.7219, 199.285, -7.68228, 0.22", "19.8281, 199.706, -7.73566, 0.81", "19.8947, 200.131, -7.78446, 0.81", "19.9491, 201.044, -7.8615, 0.22", "19.9444, 201.112, -7.86225, 0.22", "19.8153, 201.683, -7.8052, 0.22", "19.7978, 201.747, -7.79648, 0.22", "19.5593, 202.663, -7.65022, 0.74", "19.3715, 203.429, -7.50633, 1.33", "19.233, 204.102, -7.35878, 1.33", "19.1405, 204.678, -7.23776, 0.88", "19.0307, 205.642, -7.04222, 0.44", "18.9773, 206.236, -6.9427, 0.59", "18.9736, 206.318, -6.93705, 0.59", "18.9518, 206.737, -6.94433, 0.59", "18.9048, 207.259, -7.00913, 0.37", "18.8939, 207.317, -7.02056, 0.37", "18.7378, 207.794, -7.15245, 0.37", "18.4441, 208.515, -7.36812, 0.37", "18.2091, 209.102, -7.53497, 1.18", "18.0392, 209.523, -7.65251, 1.62", "17.8169, 210.117, -7.80339, 0.88", "17.5608, 210.868, -7.96696, 0.22", "17.3558, 211.605, -8.08188, 0.22", "17.1982, 212.259, -8.14087, 0.81", "17.1851, 212.321, -8.14585, 0.81", "17.1087, 212.785, -8.17525, 1.11", "17.1005, 212.857, -8.17852, 1.11", "17.0167, 213.907, -8.21282, 0.22", "16.8889, 214.939, -8.26288, 1.25", "16.7576, 215.574, -8.31049, 1.62" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-101.52, 109.345, -39.1343, 0.22", "-102.746, 109.164, -38.0753, 0.22", "-102.796, 109.152, -38.0315, 0.22", "-103.116, 109.049, -37.7627, 0.22", "-104.053, 108.708, -37.0044, 1.03", "-104.573, 108.501, -36.6055, 1.25", "-105.738, 108.025, -35.8072, 0.22", "-105.963, 107.92, -35.6855, 0.74", "-106.559, 107.646, -35.3977, 0.22", "-107.071, 107.414, -35.1802, 0.88", "-107.592, 107.194, -35.0004, 1.03", "-108.548, 106.815, -34.7297, 0.22", "-109.227, 106.554, -34.6017, 0.22", "-109.81, 106.309, -34.4843, 0.74", "-110.023, 106.207, -34.4385, 1.33", "-110.078, 106.176, -34.4273, 1.33", "-110.356, 105.998, -34.3682, 1.33", "-110.849, 105.601, -34.1997, 0.88", "-111.446, 105.058, -33.9403, 0.29", "-112.261, 104.218, -33.5356, 0.22", "-112.633, 103.793, -33.3342, 0.88", "-112.95, 103.348, -33.1009, 1.03", "-113.558, 102.331, -32.528, 0.22", "-113.579, 102.288, -32.5025, 0.22", "-113.807, 101.696, -32.1016, 1.25", "-113.933, 101.267, -31.7526, 1.47", "-114.325, 100.016, -30.6016, 0.22", "-114.342, 99.9698, -30.5528, 0.22", "-114.49, 99.6753, -30.206, 0.74", "-115.103, 98.7351, -28.9621, 0.22", "-115.786, 97.9307, -27.7318, 1.11", "-116.067, 97.6777, -27.3035, 1.33", "-116.643, 97.2842, -26.5698, 0.88", "-117.397, 96.8659, -25.7696, 0.22", "-117.874, 96.6668, -25.3694, 1.11", "-118.175, 96.5718, -25.19, 1.25", "-118.668, 96.4332, -24.9594, 0.96", "-118.714, 96.4175, -24.9379, 0.96", "-119.835, 96.0332, -24.4601, 0.22", "-120.774, 95.7158, -24.0388, 0.66", "-121.12, 95.599, -23.8738, 0.96", "-121.506, 95.4601, -23.6795, 0.81", "-122.312, 95.153, -23.2542, 0.22", "-122.878, 94.9159, -22.9477, 0.52", "-123.14, 94.7619, -22.7944, 0.66", "-123.789, 94.2767, -22.4227, 0.22", "-124.231, 93.8828, -22.143, 0.74", "-124.279, 93.8329, -22.11, 0.74", "-124.451, 93.6371, -21.9929, 0.88", "-125.348, 92.5276, -21.3399, 0.22", "-125.61, 92.1938, -21.1528, 0.96", "-126.078, 91.5918, -20.8293, 0.22", "-126.111, 91.5542, -20.8076, 0.22", "-126.538, 91.1382, -20.5406, 0.44", "-126.851, 90.894, -20.3615, 0.44", "-127.54, 90.5332, -20.0294, 0.22", "-127.585, 90.5145, -20.0071, 0.22", "-128.061, 90.307, -19.7706, 0.22", "-128.497, 90.1109, -19.5059, 0.81", "-128.74, 90.0007, -19.3135, 1.18", "-129.086, 89.827, -18.9785, 0.74", "-129.842, 89.3563, -18.022, 0.22", "-130.18, 89.0803, -17.5122, 0.22", "-130.678, 88.577, -16.628, 0.22", "-131.173, 87.9881, -15.5931, 0.88", "-131.635, 87.398, -14.486, 1.11", "-132.147, 86.7038, -13.1339, 0.22", "-132.351, 86.4171, -12.5518, 0.74", "-132.368, 86.396, -12.5055, 0.74", "-132.714, 86.0023, -11.5886, 1.03", "-133.358, 85.4337, -10.0904, 0.29", "-133.462, 85.3641, -9.88495, 0.66", "-133.489, 85.3502, -9.83692, 0.66", "-133.75, 85.2382, -9.39742, 0.81", "-134.174, 85.0649, -8.58373, 1.03", "-134.947, 84.7014, -6.9655, 0.22", "-135.178, 84.5688, -6.43254, 0.22", "-135.812, 84.1027, -4.82001, 0.88", "-136.025, 83.9229, -4.26115, 1.18", "-137.022, 83.017, -1.62041, 0.29", "-137.237, 82.8255, -1.0873, 0.88", "-137.398, 82.6942, -0.729293, 1.11", "-137.931, 82.2519, 0.409247, 0.22", "-138.184, 82.0252, 0.867554, 0.66", "-138.449, 81.7813, 1.30319, 0.96", "-139.047, 81.2988, 2.21425, 0.22", "-139.412, 81.0522, 2.79188, 0.22", "-140.155, 80.5928, 4.01976, 0.81", "-140.59, 80.3227, 4.78873, 0.81", "-140.615, 80.3054, 4.837, 0.81", "-141.481, 79.5825, 6.69463, 0.37", "-141.791, 79.268, 7.39639, 0.88", "-141.874, 79.1607, 7.61631, 1.11", "-142.301, 78.5121, 8.796, 0.29", "-142.319, 78.4805, 8.84955, 0.29", "-142.664, 77.8602, 9.87005, 0.29", "-142.883, 77.4693, 10.4646, 0.52", "-143.345, 76.6621, 11.7929, 0.29", "-143.506, 76.4066, 12.2361, 0.81", "-143.609, 76.2524, 12.5125, 0.96", "-144.011, 75.7355, 13.5184, 0.29", "-144.175, 75.5696, 13.8784, 0.29", "-144.208, 75.5434, 13.9425, 0.29", "-144.785, 75.1484, 14.9027, 0.22", "-144.962, 74.9896, 15.2347, 1.03", "-145.532, 74.3181, 16.4307, 0.29", "-145.627, 74.146, 16.6656, 0.96", "-145.661, 74.0603, 16.7725, 0.96", "-145.699, 73.8158, 17.061, 1.18", "-145.67, 72.9954, 17.9668, 0.15", "-145.653, 72.949, 18.01, 0.15", "-145.322, 72.5429, 18.2758, 0.15", "-145.261, 72.478, 18.3176, 0.15", "-144.347, 71.6052, 18.8648, 0.15" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-101.52, 109.345, -39.1343, 0.29", "-102.555, 111.248, -39.9368, 0.29", "-103.015, 112.091, -40.2705, 0.22", "-103.872, 113.685, -40.8772, 0.52", "-104.426, 114.77, -41.2723, 0.22", "-104.465, 114.847, -41.2988, 0.22", "-104.974, 115.838, -41.6107, 0.52", "-105.05, 116.0, -41.6423, 0.52", "-105.132, 116.161, -41.671, 0.52", "-105.525, 116.755, -41.81, 0.22", "-106.065, 117.495, -42.0006, 0.81", "-106.458, 118.005, -42.145, 1.18", "-106.785, 118.472, -42.2828, 0.96", "-106.825, 118.532, -42.3042, 0.96", "-107.791, 120.01, -42.9309, 0.22", "-108.457, 121.036, -43.4096, 0.22", "-108.992, 122.016, -43.9548, 0.44", "-109.669, 123.175, -44.6852, 0.22", "-110.354, 124.46, -45.5447, 0.22", "-110.897, 125.594, -46.3133, 1.03", "-111.055, 125.992, -46.5821, 1.4", "-111.809, 127.933, -47.9639, 1.18", "-112.543, 129.735, -49.2726, 0.22", "-113.165, 131.169, -50.3045, 0.22", "-113.363, 131.675, -50.6215, 0.22", "-113.639, 132.479, -51.0765, 0.74", "-113.864, 133.153, -51.4282, 0.74", "-114.08, 133.792, -51.704, 0.74", "-114.42, 134.955, -52.1576, 0.22", "-114.797, 135.929, -52.5167, 0.22", "-115.175, 136.881, -52.8399, 1.25", "-115.312, 137.228, -52.9469, 1.47", "-115.522, 137.913, -53.1322, 0.74", "-115.725, 138.791, -53.3177, 0.22", "-115.745, 138.879, -53.3307, 0.22", "-115.96, 139.879, -53.4691, 0.37", "-115.976, 139.969, -53.4816, 0.37", "-116.137, 141.11, -53.6717, 0.22", "-116.217, 141.808, -53.8072, 0.96", "-116.378, 142.978, -54.0881, 0.22", "-116.407, 143.083, -54.1202, 0.22", "-116.688, 143.689, -54.3261, 0.22", "-116.775, 143.83, -54.3756, 0.22", "-117.184, 144.295, -54.5668, 0.22", "-118.267, 145.275, -55.0124, 0.81", "-119.423, 146.187, -55.4369, 0.22", "-120.187, 146.747, -55.6853, 0.88", "-120.339, 146.854, -55.7274, 1.03", "-121.426, 147.621, -56.0047, 0.22", "-122.109, 148.111, -56.1536, 0.29", "-122.712, 148.554, -56.2476, 0.29", "-123.262, 149.033, -56.3264, 0.29", "-124.076, 149.834, -56.462, 0.37", "-124.935, 150.762, -56.6044, 1.03", "-125.57, 151.532, -56.7048, 1.47", "-126.051, 152.14, -56.7896, 1.33", "-126.652, 152.874, -56.9421, 0.22", "-127.236, 153.555, -57.1489, 0.22", "-127.72, 154.115, -57.377, 0.96", "-127.765, 154.169, -57.4032, 0.96", "-128.006, 154.462, -57.5699, 0.96", "-128.832, 155.497, -58.1877, 0.22", "-129.377, 156.133, -58.5655, 0.74", "-129.945, 156.803, -58.9392, 0.22", "-130.365, 157.324, -59.1996, 0.22", "-130.411, 157.383, -59.2253, 0.22", "-130.806, 157.925, -59.4104, 1.03", "-131.542, 159.004, -59.6104, 0.22", "-132.061, 159.764, -59.6897, 0.37", "-132.398, 160.202, -59.7156, 0.22", "-132.48, 160.3, -59.7182, 0.22", "-133.075, 160.984, -59.7537, 0.22", "-133.61, 161.571, -59.797, 0.66", "-133.884, 161.862, -59.8326, 0.96", "-134.53, 162.48, -59.9468, 0.22", "-135.029, 162.891, -60.0327, 0.22", "-135.932, 163.546, -60.1742, 0.81", "-136.005, 163.59, -60.1862, 0.81", "-136.662, 163.942, -60.299, 0.59", "-137.294, 164.283, -60.3989, 0.59", "-137.873, 164.669, -60.4854, 0.88", "-138.332, 164.991, -60.5434, 0.52", "-139.085, 165.583, -60.6093, 0.22", "-139.146, 165.635, -60.6132, 0.22", "-139.663, 166.106, -60.6309, 0.22", "-140.695, 167.13, -60.6738, 1.33", "-141.081, 167.546, -60.6922, 0.96", "-141.631, 168.172, -60.7117, 0.22", "-142.155, 168.792, -60.7106, 0.22", "-142.588, 169.287, -60.7032, 0.22", "-143.145, 169.901, -60.6826, 0.52", "-143.233, 169.998, -60.6871, 0.52", "-143.541, 170.387, -60.7386, 0.88", "-143.817, 170.777, -60.82, 1.11", "-143.858, 170.833, -60.8392, 1.11", "-144.346, 171.452, -61.1117, 0.88", "-145.263, 172.487, -61.6569, 0.22", "-145.845, 173.086, -62.0045, 1.25", "-146.121, 173.343, -62.1636, 0.96", "-147.258, 174.342, -62.7972, 0.22", "-147.305, 174.382, -62.823, 0.22", "-147.828, 174.834, -63.0968, 0.22", "-147.903, 174.901, -63.1294, 0.22", "-148.406, 175.34, -63.3351, 0.88", "-148.679, 175.588, -63.4312, 0.88", "-149.343, 176.253, -63.6404, 0.22", "-150.059, 177.002, -63.8727, 0.88", "-150.407, 177.407, -63.9798, 0.88", "-151.3, 178.501, -64.2494, 0.15", "-151.921, 179.269, -64.4261, 0.66", "-151.972, 179.331, -64.4384, 0.66", "-152.271, 179.685, -64.4934, 0.59", "-152.923, 180.4, -64.59, 0.22", "-152.976, 180.456, -64.6012, 0.22", "-153.415, 180.904, -64.698, 0.22", "-153.473, 180.954, -64.7134, 0.22", "-153.921, 181.314, -64.8498, 0.66", "-154.471, 181.716, -65.0241, 0.74", "-155.509, 182.522, -65.2854, 0.15", "-155.633, 182.637, -65.304, 0.15", "-155.996, 183.0, -65.3356, 0.15", "-156.611, 183.678, -65.3626, 0.88", "-156.847, 183.98, -65.3664, 1.18", "-157.626, 185.143, -65.4423, 0.22", "-158.171, 186.055, -65.5177, 0.22", "-158.652, 186.915, -65.6287, 0.22", "-159.043, 187.658, -65.755, 0.96", "-159.356, 188.279, -65.8818, 1.18", "-160.019, 189.58, -66.2242, 0.22", "-160.33, 190.131, -66.4238, 0.37", "-160.369, 190.198, -66.4482, 0.37", "-160.488, 190.383, -66.5116, 0.37", "-160.975, 191.012, -66.7172, 0.22", "-161.17, 191.226, -66.7786, 0.22", "-161.779, 191.855, -66.9141, 0.66", "-162.06, 192.141, -66.9776, 0.96", "-162.724, 192.879, -67.1514, 1.03", "-162.985, 193.174, -67.2529, 1.25", "-163.681, 193.964, -67.5812, 0.22", "-164.156, 194.493, -67.8653, 0.59", "-164.829, 195.254, -68.3197, 0.22", "-165.243, 195.717, -68.6194, 0.22", "-166.235, 196.828, -69.3928, 1.18", "-166.533, 197.175, -69.6481, 1.18", "-167.631, 198.538, -70.6649, 0.22", "-168.099, 199.134, -71.0618, 0.44", "-168.188, 199.249, -71.1189, 0.44", "-168.233, 199.307, -71.1373, 0.44", "-168.943, 200.298, -71.2693, 0.22", "-169.49, 201.051, -71.2947, 0.22", "-170.222, 201.998, -71.1844, 0.22", "-171.073, 203.049, -71.0307, 1.25", "-171.432, 203.48, -70.9565, 1.18", "-171.869, 203.976, -70.8487, 0.74", "-172.399, 204.522, -70.673, 0.22", "-173.001, 205.106, -70.4749, 0.52", "-180.732, 212.351, -74.0, 0.52" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-156.092, 30.8244, 54.0074, 0.22", "-157.383, 30.6985, 54.2354, 0.22", "-158.096, 30.6297, 54.3701, 0.22", "-159.214, 30.5075, 54.5899, 1.11", "-159.53, 30.4796, 54.6331, 1.55", "-160.912, 30.3427, 54.7773, 0.22", "-161.484, 30.2739, 54.8432, 0.66", "-161.571, 30.2626, 54.8549, 0.66", "-162.104, 30.2069, 54.937, 0.66", "-163.454, 30.1146, 55.2521, 0.22", "-164.221, 30.1004, 55.4763, 0.22", "-165.284, 30.1309, 55.8334, 0.74", "-165.888, 30.1666, 56.0561, 0.96", "-166.786, 30.2282, 56.4028, 0.96", "-167.973, 30.2897, 56.8854, 0.37", "-168.798, 30.2884, 57.2362, 0.22", "-169.409, 30.2675, 57.465, 0.22", "-170.316, 30.2101, 57.7378, 0.88", "-171.177, 30.1336, 57.953, 1.33", "-172.24, 30.0442, 58.1527, 0.74", "-173.215, 29.9699, 58.2954, 0.22", "-174.139, 29.8976, 58.43, 0.22", "-175.517, 29.7802, 58.6311, 0.66", "-176.163, 29.726, 58.7249, 1.25", "-177.367, 29.645, 58.8968, 1.55", "-179.333, 29.5418, 59.1384, 0.15", "-180.28, 29.4959, 59.2517, 1.25", "-181.469, 29.4084, 59.3925, 0.81", "-182.381, 29.2981, 59.4998, 0.66", "-183.272, 29.152, 59.6026, 0.88", "-183.979, 28.9981, 59.6774, 1.03" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-156.092, 30.8244, 54.0074, 0.22", "-155.956, 31.4802, 54.2683, 0.22", "-155.948, 31.5401, 54.2903, 0.22", "-155.868, 32.2475, 54.5411, 0.66", "-155.862, 32.3026, 54.5568, 0.66", "-155.735, 33.165, 54.7784, 0.22", "-155.722, 33.2441, 54.7977, 0.22", "-155.527, 33.9791, 54.9498, 0.29", "-155.508, 34.0482, 54.9624, 0.29", "-155.182, 35.1145, 55.1091, 0.22", "-155.025, 35.6111, 55.1777, 0.22", "-155.005, 35.6683, 55.1865, 0.22", "-154.669, 36.4547, 55.2933, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "19.777, 75.1142, 45.5643, 0.52", "21.2664, 74.8323, 45.5612, 0.52", "22.0845, 74.709, 45.579, 0.74", "22.7514, 74.6312, 45.6183, 0.74", "22.8178, 74.6238, 45.6279, 0.74", "23.4306, 74.5659, 45.7564, 0.74", "24.1208, 74.5263, 45.9224, 0.59", "24.1807, 74.5274, 45.9413, 0.59", "25.0983, 74.5588, 46.2354, 0.44", "26.458, 74.599, 46.6637, 0.22", "27.0834, 74.5991, 46.8468, 1.18", "27.7485, 74.583, 47.0321, 1.18", "29.0011, 74.5294, 47.3597, 0.44", "29.7712, 74.4776, 47.5565, 0.44", "30.8533, 74.3897, 47.8396, 0.37", "31.5934, 74.3174, 48.0279, 0.66", "31.6635, 74.3085, 48.0465, 0.66", "32.2697, 74.2304, 48.2901, 0.66", "33.1907, 74.169, 48.8208, 0.29", "33.704, 74.1946, 49.198, 0.88", "33.8707, 74.2269, 49.3388, 0.88", "33.9775, 74.2586, 49.429, 0.88", "35.3717, 74.7722, 50.5269, 0.29", "35.8438, 74.9694, 50.8696, 0.29", "36.5239, 75.2532, 51.2891, 1.25", "36.9873, 75.4371, 51.5286, 1.55", "37.7612, 75.7377, 51.8978, 0.88", "38.2638, 75.9231, 52.1014, 0.66", "39.1214, 76.2104, 52.3283, 0.44", "39.987, 76.4847, 52.5579, 0.44", "40.574, 76.6588, 52.7089, 0.81" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "19.777, 75.1142, 45.5643, 0.44", "19.8018, 75.9738, 46.186, 0.44", "19.8764, 77.1, 47.067, 0.44", "19.963, 77.8475, 47.6762, 0.44", "19.9699, 77.8936, 47.7122, 0.44", "20.0582, 78.4041, 48.1, 1.18", "20.345, 79.6755, 49.0045, 0.81", "20.3675, 79.7268, 49.0474, 0.81", "20.4613, 79.943, 49.2369, 0.37", "20.6598, 80.4378, 49.703, 0.37", "20.677, 80.489, 49.7484, 0.37", "20.8539, 81.0972, 50.2644, 0.37", "21.2056, 82.3652, 51.1487, 0.37", "21.5309, 83.2364, 51.7488, 0.29", "21.5642, 83.2965, 51.7878, 0.29", "22.0946, 83.8281, 52.0842, 0.29", "22.1451, 83.8623, 52.0944, 0.29", "22.7809, 84.2079, 52.1121, 0.29", "23.6437, 84.7162, 52.0552, 0.29", "24.5554, 85.1893, 51.9801, 0.29", "25.2052, 85.508, 51.9246, 0.29", "26.2594, 85.9824, 51.829, 0.29", "26.4431, 86.0723, 51.8119, 0.29", "27.5596, 86.7476, 51.7044, 1.47" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-29.7101, 49.2272, 27.1129, 0.59", "-28.9478, 49.7409, 27.3987, 0.59", "-28.1347, 50.4178, 27.6348, 0.52", "-28.0152, 50.5454, 27.669, 0.52", "-27.4034, 51.456, 27.8651, 0.81", "-27.3614, 51.5435, 27.8823, 0.81", "-27.2405, 52.1588, 28.0087, 1.03", "-27.5214, 53.0442, 28.372, 0.96", "-27.8341, 53.6018, 28.6382, 0.66", "-28.3097, 54.2867, 28.9901, 0.59", "-28.8119, 54.8632, 29.3207, 0.59", "-29.7582, 55.6993, 29.9703, 0.59", "-31.1601, 56.7109, 30.9586, 0.37", "-31.6163, 57.0183, 31.3218, 0.37", "-31.6703, 57.0565, 31.3728, 0.37", "-32.3824, 57.6224, 32.1898, 0.37", "-33.2505, 58.5357, 33.4771, 0.37", "-33.2748, 58.5793, 33.529, 0.37", "-33.4649, 59.638, 34.4323, 0.44", "-33.4502, 60.2894, 34.8554, 0.44", "-33.4411, 60.3987, 34.9145, 0.44", "-33.3576, 61.1789, 35.3119, 0.44", "-33.2643, 62.5844, 35.9704, 0.44", "-33.3045, 63.6442, 36.4836, 0.59", "-33.3936, 64.1135, 36.729, 0.59", "-33.7198, 65.0169, 37.3281, 0.59", "-34.1382, 65.926, 38.1733, 0.81", "-34.3101, 66.2666, 38.6513, 0.81", "-34.3326, 66.3157, 38.7504, 0.81", "-34.3398, 66.709, 39.7061, 1.03", "-34.169, 67.17, 40.8984, 0.74", "-33.7687, 67.7855, 42.4623, 0.66", "-33.2278, 68.4139, 44.0367, 0.66", "-32.9622, 68.7213, 44.7761, 0.59", "-32.4439, 69.6154, 46.4362, 0.59", "-32.3498, 69.8972, 46.7834, 0.44", "-32.2865, 70.4655, 47.1805, 0.59", "-32.2907, 70.5329, 47.2098, 0.59", "-32.3667, 71.5179, 47.5224, 0.37", "-32.446, 73.4467, 48.1883, 0.37", "-32.4504, 74.6961, 48.6391, 0.37", "-32.375, 75.5386, 48.9811, 0.29", "-32.3636, 75.6118, 49.0165, 0.29", "-32.1101, 76.9516, 49.7243, 0.29", "-31.7382, 78.438, 50.5372, 0.88", "-31.7195, 78.5104, 50.5782, 0.88", "-31.6599, 78.8955, 50.802, 0.88", "-31.6355, 80.0772, 51.4645, 0.66", "-31.7212, 80.8426, 51.8555, 0.52", "-31.983, 81.8517, 52.3173, 0.44", "-32.2461, 82.5728, 52.5811, 0.44", "-32.2754, 82.6344, 52.6079, 0.44", "-32.8458, 83.3631, 53.0479, 0.37", "-33.2832, 83.4132, 53.3778, 0.37", "-33.4066, 83.3998, 53.4854, 0.37", "-34.1313, 83.2866, 54.2352, 0.37", "-34.8453, 83.2668, 55.0668, 0.59", "-35.4755, 83.3992, 55.8999, 0.59", "-36.1698, 83.841, 57.0928, 1.03", "-36.3827, 84.6116, 57.9572, 0.29", "-36.3553, 85.6016, 58.6872, 0.22", "-36.2027, 86.9553, 59.4761, 0.29", "-36.1212, 87.7026, 59.8342, 0.29", "-36.0163, 88.7128, 60.2537, 0.29", "-35.9233, 89.5202, 60.5079, 0.29", "-35.9025, 89.6608, 60.5484, 0.29", "-35.88, 90.6502, 60.7005, 0.29", "-35.1894, 89.4222, 60.8888, 0.29", "-35.1418, 89.3489, 60.902, 0.29", "-34.4262, 88.525, 61.0008, 0.22", "-33.5403, 87.8446, 61.0294, 0.88", "-33.057, 87.4924, 61.0353, 1.03", "-31.8198, 86.6393, 61.0292, 0.22", "-31.7505, 86.5985, 61.0272, 0.22", "-30.5915, 86.0093, 60.9561, 0.22", "-29.52, 85.6636, 60.8091, 0.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-29.7101, 49.2272, 27.1129, 0.74", "-30.4791, 47.7251, 29.7118, 0.74", "-30.8325, 47.4358, 30.2575, 0.52", "-31.2999, 47.216, 30.7083, 0.37", "-32.257, 46.8832, 31.4331, 0.37", "-33.2267, 46.6297, 32.0192, 0.37", "-33.9791, 46.4896, 32.3702, 0.37", "-35.0653, 46.3893, 32.7327, 0.59", "-35.7075, 46.3503, 33.0231, 0.37", "-35.7868, 46.3451, 33.0728, 0.37", "-36.4077, 46.2758, 33.6158, 0.37", "-37.3346, 46.1489, 34.9308, 0.74", "-37.93, 46.0409, 36.2536, 0.74", "-38.3889, 45.966, 38.1841, 0.29", "-38.5075, 45.9842, 39.6002, 0.59", "-38.4181, 46.0299, 40.789, 0.44", "-38.0085, 46.1107, 42.6806, 0.44", "-37.9777, 46.1154, 42.7628, 0.44", "-37.4094, 46.1555, 43.9933, 0.44", "-37.3795, 46.1469, 44.0631, 0.44", "-37.1553, 45.5895, 45.4166, 0.44", "-37.2294, 45.1603, 46.2917, 0.37", "-37.2574, 45.1065, 46.409, 0.37", "-37.7272, 44.5965, 47.6768, 0.66", "-38.3008, 44.1773, 48.9309, 0.66", "-38.3298, 44.1608, 48.9874, 0.66", "-39.1827, 43.7961, 50.4632, 0.59", "-39.9746, 43.5233, 51.7093, 0.29", "-40.7197, 43.347, 52.6942, 0.29", "-41.8923, 43.2298, 53.9647, 0.44", "-42.6415, 43.2565, 54.6201, 0.29", "-43.0357, 43.3114, 54.9027, 0.29", "-43.7397, 43.5264, 55.3469, 0.29", "-44.6398, 43.9511, 55.8637, 0.74", "-44.98, 44.1993, 56.0448, 1.03", "-45.8861, 45.09, 56.4065, 0.29", "-46.443, 45.7839, 56.6654, 0.29", "-47.4539, 47.3017, 57.285, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_105",
    "id" : "dend_105",
    "points3d" : [ "244.647, -123.25, -26.9627, 0.44", "245.691, -122.996, -24.5649, 0.44", "246.156, -122.863, -23.53, 0.29", "246.72, -122.684, -22.3384, 0.29", "247.235, -122.513, -21.2917, 0.88", "247.7, -122.331, -20.3909, 0.15", "247.888, -122.235, -20.0291, 0.81", "247.92, -122.21, -19.9782, 0.81", "248.125, -121.992, -19.6427, 1.03", "248.15, -121.958, -19.6077, 1.03", "248.797, -121.204, -18.8753, 0.22", "249.299, -120.712, -18.37, 0.22", "249.721, -120.356, -17.9789, 0.88", "249.761, -120.326, -17.9436, 0.88", "250.274, -119.973, -17.5174, 1.18", "251.696, -119.151, -16.4387, 0.22", "252.169, -118.94, -16.1209, 1.25", "253.027, -118.638, -15.5801, 0.22", "253.216, -118.578, -15.465, 0.37", "253.273, -118.561, -15.4317, 0.37", "254.102, -118.404, -14.9715, 0.15", "254.598, -118.369, -14.7422, 1.03", "254.647, -118.371, -14.7141, 1.03", "255.014, -118.42, -14.4723, 1.25", "255.058, -118.429, -14.4385, 1.25", "256.319, -118.81, -13.3692, 0.22", "256.806, -119.022, -12.9298, 0.22", "257.951, -119.604, -11.8715, 0.22", "258.022, -119.641, -11.81, 0.22", "258.462, -119.896, -11.4373, 1.18", "258.829, -120.097, -11.1303, 0.96", "259.386, -120.372, -10.666, 0.66", "259.57, -120.419, -10.5126, 0.66", "260.257, -120.354, -10.062, 0.29", "260.306, -120.34, -10.0282, 0.29", "260.824, -120.1, -9.6575, 0.22", "261.109, -119.93, -9.43064, 0.44", "261.828, -119.447, -8.82814, 0.22", "261.906, -119.401, -8.75458, 0.22", "262.388, -119.141, -8.25264, 0.88", "262.838, -118.921, -7.77884, 0.88", "262.881, -118.901, -7.73248, 0.88", "263.317, -118.688, -7.24481, 0.88", "264.196, -118.146, -6.24988, 0.22", "264.231, -118.123, -6.21084, 0.22", "264.529, -117.909, -5.89154, 0.88", "264.815, -117.701, -5.61487, 1.11", "264.86, -117.666, -5.5757, 1.11", "265.678, -117.007, -4.95161, 0.22", "266.251, -116.574, -4.6896, 0.22", "266.801, -116.168, -4.51481, 0.22", "267.381, -115.751, -4.38024, 0.88", "267.835, -115.4, -4.31241, 1.11", "268.268, -115.031, -4.28014, 1.11", "269.69, -113.732, -4.24718, 0.29", "270.365, -113.103, -4.22544, 0.22", "270.414, -113.06, -4.22278, 0.22", "271.129, -112.487, -4.13427, 0.88", "271.177, -112.452, -4.12442, 0.88", "272.193, -111.767, -3.77239, 0.22", "272.854, -111.315, -3.53765, 0.22", "273.218, -111.073, -3.43158, 0.74", "274.094, -110.485, -3.21519, 0.22", "274.147, -110.45, -3.20395, 0.22", "274.877, -109.925, -3.0847, 1.11", "276.745, -108.506, -2.88503, 0.22", "276.79, -108.471, -2.88082, 0.22", "277.513, -107.95, -2.81787, 0.96", "277.562, -107.92, -2.81457, 0.96", "278.067, -107.687, -2.8065, 1.11", "278.918, -107.414, -2.81024, 0.29", "279.037, -107.39, -2.80778, 0.29", "279.558, -107.289, -2.81406, 0.15", "280.421, -107.132, -2.85871, 1.18", "282.11, -106.786, -2.93426, 0.22", "282.526, -106.692, -2.95674, 0.74", "282.589, -106.673, -2.95667, 0.74", "283.004, -106.532, -2.90867, 0.88", "283.111, -106.489, -2.88394, 0.88", "283.703, -106.201, -2.68173, 0.88", "283.807, -106.148, -2.63735, 0.88", "284.75, -105.605, -2.28515, 0.22", "285.569, -105.088, -2.00317, 0.22", "285.686, -105.01, -1.96556, 0.22", "286.571, -104.448, -1.70621, 1.11", "286.731, -104.348, -1.65998, 1.11", "287.825, -103.681, -1.33326, 0.22", "287.879, -103.652, -1.31202, 0.22", "288.237, -103.45, -1.12726, 0.59", "288.903, -103.1, -0.724597, 0.22", "289.299, -102.903, -0.444277, 1.03", "289.624, -102.742, -0.199761, 1.03", "290.898, -102.124, 0.829913, 0.22", "291.351, -101.867, 1.18026, 0.22", "291.392, -101.838, 1.20846, 0.22", "291.714, -101.557, 1.40492, 0.74", "291.758, -101.519, 1.42811, 0.74", "291.983, -101.317, 1.53856, 0.74", "292.737, -100.666, 1.84319, 0.22", "293.35, -100.2, 2.08807, 0.96", "293.733, -99.9059, 2.22517, 1.25", "294.646, -99.1805, 2.61014, 0.29", "294.691, -99.1439, 2.63163, 0.29", "295.051, -98.8692, 2.79828, 0.37", "295.1, -98.8327, 2.82165, 0.37", "296.129, -98.033, 3.29694, 0.22", "296.877, -97.412, 3.61073, 0.81", "296.927, -97.3712, 3.62916, 0.81", "298.387, -96.2707, 4.11228, 0.22", "298.71, -96.0394, 4.21186, 0.88", "299.742, -95.3799, 4.34984, 0.22", "299.95, -95.261, 4.35063, 0.44", "300.909, -94.7303, 4.23944, 0.22", "301.779, -94.2806, 4.03326, 0.88", "301.836, -94.2539, 4.01426, 0.88", "304.085, -93.2988, 3.1554, 0.22", "304.553, -93.118, 2.94202, 0.88", "304.601, -93.0994, 2.91969, 0.88", "306.179, -92.4876, 2.20192, 0.22", "306.788, -92.2546, 1.95474, 1.03", "306.838, -92.2361, 1.93715, 1.03", "309.091, -91.329, 1.37453, 0.22", "309.646, -91.0832, 1.24705, 0.74", "311.082, -90.367, 0.987195, 0.22", "311.483, -90.1323, 0.942811, 0.74", "311.534, -90.0978, 0.938736, 0.74", "312.87, -89.0039, 0.93399, 0.22", "312.908, -88.9612, 0.939474, 0.22", "313.253, -88.4884, 0.997468, 0.66", "313.37, -88.2972, 1.02497, 0.66", "314.033, -87.1716, 1.16265, 0.22", "314.307, -86.689, 1.21555, 0.52", "314.71, -85.9085, 1.27992, 0.22", "314.93, -85.4561, 1.30766, 0.81", "321.373, -81.8043, 5.51503, 0.81" ],
    "parent" : "dend_103",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "244.647, -123.25, -26.9627, 0.81", "245.638, -124.083, -27.3008, 0.81", "246.806, -124.956, -27.5739, 0.22", "247.735, -125.549, -27.7098, 0.22", "247.795, -125.584, -27.7158, 0.22", "248.577, -126.017, -27.7745, 0.81", "249.321, -126.419, -27.8149, 1.18", "250.104, -126.763, -27.8043, 1.33", "251.42, -127.301, -27.7159, 0.22", "251.839, -127.477, -27.695, 0.66", "251.918, -127.51, -27.6914, 0.66", "252.484, -127.774, -27.6687, 0.66", "252.551, -127.808, -27.6713, 0.66", "253.485, -128.388, -27.7911, 0.22", "253.544, -128.432, -27.8026, 0.22", "253.869, -128.696, -27.8823, 0.22", "254.324, -129.108, -27.9994, 0.22", "254.993, -129.781, -28.1786, 1.03", "255.044, -129.837, -28.202, 1.03", "255.428, -130.304, -28.4557, 1.03", "256.138, -131.228, -29.0267, 0.15", "256.621, -131.904, -29.465, 1.11", "256.909, -132.319, -29.7459, 1.4", "257.972, -133.885, -30.8073, 0.44", "258.278, -134.332, -31.13, 0.44", "258.667, -134.91, -31.5826, 0.22", "259.019, -135.468, -32.0213, 1.03", "259.052, -135.521, -32.0662, 1.03", "259.241, -135.857, -32.3483, 1.03", "259.838, -137.04, -33.2418, 0.22", "259.87, -137.09, -33.3001, 0.22", "260.343, -137.7, -34.2188, 0.22", "260.949, -138.39, -35.3843, 1.47", "261.206, -138.63, -35.8378, 1.4", "261.238, -138.654, -35.889, 1.4", "263.118, -139.579, -38.6462, 0.22", "263.593, -139.754, -39.2993, 1.25", "263.905, -139.832, -39.6884, 1.25", "265.211, -140.084, -41.233, 0.22", "265.579, -140.146, -41.6494, 0.59", "267.872, -140.569, -44.3254, 1.4", "267.912, -140.578, -44.375, 1.4", "268.283, -140.673, -44.9338, 1.4", "269.9, -141.189, -47.886, 0.29", "270.133, -141.296, -48.3886, 0.66", "270.706, -141.698, -49.9503, 0.22", "270.97, -141.986, -50.9388, 1.4", "271.86, -143.362, -55.5741, 1.03", "272.117, -144.029, -57.7812, 0.52", "272.149, -144.499, -59.2939, 0.96", "272.037, -145.102, -61.3752, 0.22", "271.842, -145.441, -62.6334, 0.22", "271.644, -145.588, -63.2496, 0.66", "271.608, -145.594, -63.2939, 0.66", "271.091, -145.529, -63.7201, 0.66", "270.057, -145.154, -64.4125, 0.22", "269.689, -144.965, -64.6496, 0.81", "269.135, -144.673, -65.0346, 0.81", "268.36, -144.315, -65.5947, 0.22", "267.682, -144.052, -66.0809, 0.88", "267.248, -143.945, -66.4246, 1.11", "266.181, -143.867, -67.382, 0.22", "265.863, -143.9, -67.7054, 0.44", "265.336, -144.057, -68.2733, 0.22", "264.965, -144.188, -68.7061, 0.74", "264.02, -144.535, -69.9124, 0.22", "263.526, -144.69, -70.5266, 1.03", "263.049, -144.844, -71.2144, 0.74", "262.503, -145.01, -72.1051, 0.66", "261.553, -145.274, -73.7322, 0.15", "261.503, -145.286, -73.8183, 0.15", "260.985, -145.389, -74.7762, 1.18", "259.733, -145.659, -77.2975, 0.22", "259.682, -145.672, -77.4109, 0.22", "259.379, -145.772, -78.1202, 0.22", "259.143, -145.88, -78.6124, 1.11", "258.106, -146.384, -80.5145, 0.22", "258.072, -146.403, -80.5716, 0.22", "257.763, -146.563, -80.9588, 0.88", "257.429, -146.755, -81.3705, 1.11", "256.596, -147.318, -82.3734, 0.15", "255.967, -147.822, -83.0301, 0.15", "255.451, -148.316, -83.4532, 1.11", "255.148, -148.696, -83.7097, 1.11", "255.111, -148.758, -83.7425, 1.11", "254.784, -149.466, -84.0718, 0.81", "254.504, -150.239, -84.3993, 0.22", "254.35, -150.704, -84.5972, 0.59", "253.893, -152.056, -85.1996, 0.22", "253.621, -152.866, -85.5923, 0.22", "253.312, -153.763, -86.0654, 0.59", "253.143, -154.225, -86.3316, 0.44", "253.12, -154.282, -86.3683, 0.44", "252.923, -154.688, -86.6522, 0.22", "252.889, -154.744, -86.6939, 0.22", "252.598, -155.191, -87.0143, 0.44", "251.905, -156.225, -87.6091, 0.15", "251.873, -156.273, -87.6346, 0.15", "251.519, -156.832, -87.9334, 0.81", "251.694, -161.179, -96.6437, 0.81" ],
    "parent" : "dend_103",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "172.414, -227.235, 3.7616, 0.52", "173.425, -229.244, 5.56764, 0.52", "173.665, -229.73, 5.96425, 0.88", "173.886, -230.137, 6.27933, 0.52", "173.91, -230.172, 6.30539, 0.52", "174.28, -230.681, 6.65478, 0.37", "174.993, -231.709, 7.30312, 0.22", "175.288, -232.147, 7.49579, 1.47", "175.526, -232.546, 7.69421, 1.47", "176.015, -233.572, 8.21348, 0.22", "176.28, -234.271, 8.56925, 0.37", "176.514, -234.975, 8.92507, 0.81", "176.625, -235.4, 9.12299, 1.25", "176.828, -236.508, 9.66686, 0.66", "176.932, -237.708, 10.2699, 0.22", "176.903, -238.762, 10.8232, 0.81" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "172.414, -227.235, 3.7616, 0.29", "173.78, -227.589, 3.99465, 0.29", "175.102, -228.034, 4.34542, 0.29", "175.184, -228.066, 4.37038, 0.29", "175.839, -228.337, 4.58517, 0.96", "176.489, -228.63, 4.80506, 0.96", "176.581, -228.676, 4.83536, 0.96", "177.954, -229.502, 5.36748, 0.22", "178.291, -229.747, 5.49906, 0.81", "178.354, -229.795, 5.52289, 0.81", "178.742, -230.129, 5.65971, 0.81", "179.348, -230.672, 5.85752, 0.81", "181.507, -232.64, 6.51363, 0.15", "182.518, -233.558, 6.79436, 0.15", "182.591, -233.624, 6.81465, 0.15", "183.702, -234.636, 7.12504, 0.15", "183.783, -234.71, 7.14814, 0.15", "186.34, -237.116, 7.88573, 0.15" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "7.06294, -134.07, -20.1863, 0.29", "7.39611, -135.964, -20.4485, 0.29", "7.49728, -136.535, -20.5109, 0.74", "7.58604, -136.991, -20.5546, 0.74", "7.86761, -138.137, -20.704, 0.22", "8.18532, -139.231, -20.8676, 0.22", "8.46593, -140.274, -21.069, 0.81", "8.63997, -140.874, -21.1988, 1.11", "8.85282, -141.464, -21.3682, 0.88", "9.39882, -142.7, -21.7914, 0.22", "9.59935, -143.09, -21.9481, 0.66", "10.4497, -144.534, -22.6285, 0.22", "11.3407, -145.894, -23.3416, 1.55", "12.3552, -147.185, -24.1656, 0.22", "12.7715, -147.646, -24.507, 0.22", "12.8222, -147.694, -24.5453, 0.22", "13.5177, -148.243, -25.0608, 0.81", "13.8012, -148.422, -25.2522, 0.81", "15.078, -149.207, -26.2276, 0.22", "15.1369, -149.252, -26.2841, 0.22", "16.0267, -150.079, -27.1596, 0.22", "16.703, -150.76, -27.8299, 0.22", "17.1245, -151.211, -28.2372, 1.55", "17.8523, -152.018, -28.962, 1.69", "18.9842, -153.301, -30.1254, 0.22", "19.8241, -154.213, -31.0034, 0.22", "20.7065, -155.118, -31.911, 1.03", "21.0249, -155.418, -32.2204, 1.77", "21.9198, -156.17, -33.0334, 1.77", "23.9446, -157.565, -34.7885, 0.22", "24.0741, -157.634, -34.9011, 0.66", "24.8993, -158.002, -35.6428, 0.22", "25.6307, -158.298, -36.2955, 1.47", "26.2849, -158.524, -36.8653, 1.84", "28.0226, -159.036, -38.1929, 0.44", "29.1332, -159.307, -38.9202, 0.88", "29.5985, -159.431, -39.1954, 0.74", "29.7538, -159.478, -39.2684, 0.74", "30.6365, -159.79, -39.5572, 0.52", "32.4223, -160.507, -39.9282, 0.22", "32.993, -160.761, -39.9734, 0.96", "33.4043, -160.947, -39.9892, 0.96", "35.1999, -161.761, -40.0719, 0.22", "35.8831, -162.082, -40.1094, 0.22", "36.5344, -162.401, -40.129, 0.81", "36.8315, -162.548, -40.121, 0.81", "37.7996, -163.043, -40.0645, 0.22", "38.4694, -163.396, -39.9879, 1.55", "38.7797, -163.565, -39.933, 1.55", "40.4608, -164.459, -39.6172, 0.22", "41.3503, -164.952, -39.4535, 0.88", "41.783, -165.199, -39.3813, 1.11", "41.8539, -165.241, -39.3706, 1.11", "42.4839, -165.639, -39.2967, 0.74", "43.5815, -166.353, -39.2419, 0.22", "44.3686, -166.907, -39.2897, 0.22", "45.0937, -167.392, -39.3698, 0.81", "45.1582, -167.433, -39.3769, 0.81", "45.6406, -167.729, -39.4302, 1.18", "46.4199, -168.185, -39.4866, 0.37", "47.7309, -168.872, -39.5494, 0.22", "48.5236, -169.253, -39.578, 0.22", "49.0886, -169.516, -39.5951, 0.88", "49.7415, -169.809, -39.6115, 1.03", "51.4512, -170.493, -39.5881, 0.22", "52.7211, -170.975, -39.5296, 0.22", "53.281, -171.18, -39.4927, 1.25", "53.7639, -171.362, -39.4398, 1.55", "54.6525, -171.695, -39.3147, 0.52", "56.6305, -172.464, -39.0102, 0.22", "56.7006, -172.494, -38.9981, 0.22", "57.9791, -173.07, -38.7458, 0.22", "58.7994, -173.465, -38.5917, 0.96", "59.2532, -173.702, -38.5126, 0.96", "60.6955, -174.52, -38.2929, 0.22", "61.2254, -174.824, -38.2421, 0.52", "61.6897, -175.073, -38.2115, 0.52", "62.7534, -175.626, -38.1493, 0.22", "63.4552, -175.985, -38.1303, 1.11", "63.5218, -176.015, -38.1252, 1.11", "64.4676, -176.344, -38.0216, 0.22", "65.2614, -176.578, -37.9284, 0.22", "65.9492, -176.759, -37.7906, 1.11", "66.3996, -176.849, -37.6698, 1.33", "67.9527, -177.11, -37.1918, 0.22", "68.6681, -177.226, -36.9526, 0.88", "68.7398, -177.238, -36.9245, 0.88", "70.2902, -177.528, -36.3082, 0.22", "70.6951, -177.615, -36.1606, 0.96", "70.7614, -177.633, -36.1367, 0.96", "71.2347, -177.787, -35.9836, 0.96", "72.4744, -178.232, -35.634, 0.15", "73.4736, -178.579, -35.43, 0.15", "74.2827, -178.85, -35.3442, 0.15", "74.7293, -178.996, -35.3045, 0.81", "75.3385, -179.187, -35.2621, 1.03", "75.7712, -179.324, -35.2154, 1.25", "76.9152, -179.681, -35.0741, 0.22", "77.8906, -179.947, -34.9224, 0.22", "78.513, -180.119, -34.8107, 0.88", "79.1681, -180.301, -34.686, 1.03", "80.8345, -180.783, -34.3447, 0.22", "80.899, -180.801, -34.3308, 0.22", "82.0286, -181.139, -34.03, 0.22", "82.1093, -181.162, -34.0059, 0.22", "82.8234, -181.31, -33.8116, 0.52", "83.1611, -181.349, -33.726, 0.74", "83.341, -181.367, -33.6921, 0.74", "84.5377, -181.551, -33.4385, 0.22", "84.6063, -181.567, -33.4218, 0.22", "85.4814, -181.841, -33.1491, 0.22", "86.1157, -182.096, -32.9231, 0.81", "86.7299, -182.406, -32.7059, 1.03", "86.9343, -182.509, -32.6368, 1.03", "87.292, -182.688, -32.5267, 1.03", "88.5449, -183.283, -32.1339, 0.22", "89.0493, -183.507, -31.9819, 0.88", "89.5115, -183.674, -31.8579, 0.88", "90.9075, -184.068, -31.5369, 0.29", "91.1322, -184.135, -31.4966, 0.44", "91.5059, -184.277, -31.4549, 0.44", "92.2297, -184.62, -31.4356, 0.22", "92.5644, -184.814, -31.4333, 0.96", "93.0029, -185.153, -31.4052, 0.96", "93.9322, -186.074, -31.3176, 0.29", "94.6975, -186.913, -31.2189, 0.29", "95.0045, -187.288, -31.1673, 1.11", "95.3901, -187.809, -31.0879, 1.55", "96.4705, -189.353, -30.8039, 0.29", "96.9747, -190.094, -30.6563, 0.52", "97.29, -190.548, -30.5628, 0.88", "98.0591, -191.62, -30.3554, 0.22", "98.3254, -191.994, -30.295, 0.96", "99.1498, -193.136, -30.1543, 0.29", "99.7611, -193.949, -30.1018, 0.29", "100.183, -194.501, -30.1036, 0.29", "100.924, -195.477, -30.2027, 0.22", "101.307, -195.975, -30.3115, 0.88", "101.606, -196.364, -30.4327, 1.33", "101.646, -196.418, -30.4557, 1.33", "102.49, -197.547, -31.0017, 0.22", "102.875, -198.045, -31.2919, 0.81", "103.278, -198.459, -31.6638, 0.81", "103.381, -198.549, -31.761, 0.81", "103.955, -199.028, -32.3709, 0.81", "103.993, -199.06, -32.4135, 0.81", "104.535, -199.493, -33.0241, 0.81", "105.712, -200.328, -34.4609, 0.22", "106.076, -200.571, -34.9417, 0.44", "107.086, -201.118, -36.2077, 0.96", "107.31, -201.217, -36.4686, 1.11", "107.474, -201.275, -36.6389, 1.11", "108.962, -201.698, -38.062, 0.22", "109.014, -201.706, -38.1053, 0.22", "110.208, -201.717, -39.0052, 0.66", "110.879, -201.626, -39.3986, 0.66", "110.942, -201.615, -39.4332, 0.66", "120.019, -207.559, -40.9538, 0.66" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "7.06294, -134.07, -20.1863, 0.59", "6.43689, -135.334, -19.911, 0.59", "6.09634, -136.155, -19.7588, 0.37", "6.06718, -136.235, -19.7435, 0.37", "5.59092, -137.819, -19.4626, 0.81", "5.28414, -138.924, -19.2882, 1.18", "5.04018, -139.839, -19.1852, 1.33", "4.83796, -140.774, -19.0985, 1.03", "4.6052, -141.907, -19.06, 0.66", "4.44114, -142.768, -19.0759, 0.44", "4.18016, -144.411, -19.2058, 0.29", "4.06558, -145.43, -19.3369, 0.96", "4.02999, -146.109, -19.4562, 1.11", "4.04165, -147.7, -19.8013, 0.37", "4.13853, -148.898, -20.0791, 0.29", "4.28779, -149.827, -20.2845, 1.11", "4.60659, -151.057, -20.5453, 1.47", "4.90906, -151.98, -20.7198, 1.69", "5.20749, -152.859, -20.9563, 1.25", "5.6058, -154.155, -21.3799, 0.66", "5.80566, -155.189, -21.7772, 0.52", "5.89648, -156.196, -22.2079, 0.29", "5.87591, -156.586, -22.3936, 0.29", "5.40883, -158.962, -23.7048, 0.88", "5.09187, -159.856, -24.2504, 1.11", "4.67103, -160.69, -24.7783, 1.18", "4.60384, -160.8, -24.8407, 1.18", "4.06361, -161.62, -25.2352, 1.11", "4.01093, -161.704, -25.2654, 1.11", "3.55583, -162.524, -25.4241, 1.11", "3.1635, -163.297, -25.5512, 0.66", "2.5082, -164.721, -25.7214, 0.29", "2.46873, -164.818, -25.7301, 0.29", "2.15657, -165.713, -25.7679, 0.88", "1.89541, -166.602, -25.7885, 1.11", "1.55905, -168.147, -25.7986, 0.66", "1.3558, -169.458, -25.7808, 0.37", "1.29718, -170.522, -25.7541, 0.29", "1.34363, -171.271, -25.7954, 0.66", "1.5019, -171.949, -25.8971, 0.66", "1.84066, -172.747, -26.2955, 0.66", "1.88086, -172.821, -26.3507, 0.66", "2.44383, -173.722, -27.1625, 0.96", "3.38127, -175.049, -28.5363, 1.62", "4.06206, -175.948, -29.5542, 1.99", "6.08995, -178.46, -32.6025, 0.66", "6.13221, -178.51, -32.6665, 0.66", "6.70593, -179.162, -33.5046, 0.66", "7.5944, -180.13, -34.7213, 0.66", "7.63659, -180.175, -34.7728, 0.66", "8.46104, -181.05, -35.5778, 0.29", "8.52695, -181.122, -35.6113, 0.29", "9.13727, -181.935, -35.8654, 0.66", "9.7331, -183.007, -36.0169, 0.66", "9.77399, -183.104, -36.0184, 0.66", "10.2836, -184.569, -36.0264, 0.52", "10.304, -184.645, -36.0255, 0.52", "10.6515, -186.253, -36.1233, 1.4", "10.8529, -187.524, -36.2707, 1.92", "10.9288, -188.08, -36.3731, 1.99", "11.1435, -189.746, -36.7774, 0.96", "11.2757, -190.907, -37.1501, 0.81", "11.4515, -192.346, -37.6673, 0.81", "11.5972, -193.363, -38.0801, 0.52", "11.7539, -194.362, -38.5324, 0.44", "11.7768, -194.502, -38.5967, 0.44", "11.9381, -195.434, -38.9881, 1.11", "12.0634, -196.145, -39.2411, 1.11", "12.1953, -196.959, -39.4413, 0.74", "12.3354, -198.231, -39.6744, 0.44", "12.3828, -199.047, -39.7661, 0.44", "12.4512, -199.951, -39.8363, 1.11", "12.5447, -200.704, -39.8747, 1.18", "12.7053, -201.684, -39.9447, 1.11", "12.9593, -202.94, -40.0497, 0.52", "13.1465, -203.685, -40.1558, 0.29", "13.5402, -205.013, -40.4434, 0.29", "13.9157, -206.159, -40.762, 0.29", "14.2857, -207.271, -41.1438, 0.96", "14.5574, -208.12, -41.4662, 1.47", "14.9729, -209.762, -42.0726, 1.4", "14.9865, -209.85, -42.1009, 1.4", "15.0547, -210.99, -42.3967, 1.03", "15.0946, -212.612, -42.8338, 0.52", "15.1358, -213.931, -43.1807, 0.37", "15.2036, -215.619, -43.6371, 0.29", "15.2638, -216.968, -43.993, 1.25", "15.3183, -217.876, -44.2424, 1.47", "15.5241, -220.271, -44.9056, 0.44", "15.6198, -221.106, -45.1199, 0.44", "15.7815, -222.244, -45.412, 1.25", "15.8891, -222.88, -45.568, 1.4", "16.0996, -224.061, -45.8269, 1.11", "16.3687, -225.612, -46.0887, 0.37", "16.636, -227.194, -46.2538, 0.37", "16.8542, -228.395, -46.3731, 0.37", "17.0482, -229.367, -46.4608, 0.37", "17.3957, -230.877, -46.5933, 1.33", "17.5818, -231.539, -46.6549, 1.77", "17.8082, -232.18, -46.7188, 1.99", "18.3368, -233.41, -46.8478, 1.62", "18.9246, -234.638, -46.9756, 0.81", "19.5225, -235.829, -47.0919, 0.29", "20.1252, -237.054, -47.1944, 0.37", "20.6066, -238.125, -47.2781, 0.66", "20.9367, -239.016, -47.3386, 0.29", "21.1668, -239.922, -47.4008, 0.29", "21.2569, -240.609, -47.4483, 0.59", "21.2127, -241.303, -47.4921, 0.74", "20.9285, -242.345, -47.6061, 0.52", "20.3853, -243.483, -47.767, 1.18", "19.803, -244.426, -47.9244, 1.55", "19.7532, -244.495, -47.9377, 1.55", "19.0976, -245.361, -48.1209, 1.25", "17.9709, -246.807, -48.4579, 0.37", "17.1449, -247.884, -48.7213, 0.22", "16.864, -248.253, -48.8107, 0.22", "16.6125, -248.654, -48.8888, 0.81", "16.3572, -249.252, -48.9398, 1.03", "16.3387, -249.346, -48.9368, 1.03", "16.2762, -250.304, -48.8105, 0.29", "16.2731, -250.39, -48.7955, 0.29", "16.1591, -251.707, -48.527, 0.29", "15.9234, -253.163, -48.1961, 1.03", "15.7612, -253.795, -48.0486, 1.18", "15.4794, -254.713, -47.8439, 1.18", "15.0858, -255.88, -47.5986, 1.03", "14.8031, -256.723, -47.4436, 0.66", "14.5145, -257.628, -47.3561, 0.29", "14.188, -259.015, -47.3807, 0.22", "14.0653, -259.936, -47.4618, 0.88", "14.0243, -260.608, -47.5573, 1.25", "14.0085, -261.381, -47.6999, 1.18", "13.9965, -263.112, -48.0297, 0.29", "13.9534, -264.585, -48.3052, 0.29", "13.8616, -265.671, -48.497, 0.88", "13.6582, -266.77, -48.6589, 1.11", "13.5082, -267.245, -48.7056, 1.11", "13.0444, -268.245, -48.7378, 0.29", "12.5781, -269.081, -48.695, 0.29", "12.3291, -269.517, -48.6697, 0.88", "12.0481, -270.068, -48.6391, 1.18", "11.5582, -271.179, -48.5896, 1.18", "11.1931, -272.235, -48.5582, 0.96", "10.865, -273.656, -48.5523, 0.29", "10.7822, -274.672, -48.5814, 0.88", "10.8196, -275.346, -48.6203, 1.25", "10.8376, -275.438, -48.634, 1.25", "11.0682, -276.153, -48.8059, 1.25", "11.4723, -277.196, -49.1152, 0.59", "11.9314, -278.316, -49.495, 0.37", "12.2594, -279.142, -49.7777, 0.37", "12.8171, -280.684, -50.332, 0.88", "13.1981, -281.853, -50.7472, 1.18", "13.4613, -282.859, -51.0855, 1.18", "13.4795, -282.955, -51.1126, 1.18", "13.562, -283.949, -51.3251, 1.18", "13.5599, -285.242, -51.4807, 1.25", "13.4464, -286.64, -51.4959, 0.29", "13.2824, -287.863, -51.4483, 0.22", "13.1037, -289.08, -51.3656, 1.18", "12.977, -290.168, -51.328, 1.18", "12.8935, -291.247, -51.327, 0.96", "12.8377, -292.689, -51.3618, 0.29", "12.8476, -293.435, -51.4005, 0.29", "12.9363, -294.312, -51.4828, 0.44", "13.3874, -296.529, -51.7914, 0.44", "13.7315, -297.743, -52.0505, 0.44", "13.7584, -297.827, -52.0727, 0.44", "14.0774, -298.878, -52.4166, 1.11", "14.2945, -299.777, -52.727, 1.33", "14.4256, -300.883, -53.2148, 1.11", "14.3674, -302.544, -54.0115, 0.29", "14.2153, -303.665, -54.5944, 0.29", "13.9584, -305.058, -55.2958, 1.03", "13.7963, -305.799, -55.6689, 1.18", "13.1512, -308.485, -56.9189, 0.37", "12.7923, -309.99, -57.4939, 0.29", "12.6617, -310.724, -57.6433, 0.22", "12.5457, -312.088, -57.6956, 1.33", "12.5712, -312.946, -57.5629, 1.11", "12.6811, -313.871, -57.2951, 0.59", "12.9142, -315.114, -56.7864, 0.44", "13.2619, -316.67, -56.1971, 0.29", "13.3466, -317.17, -56.0328, 0.81", "13.3973, -317.821, -55.8628, 0.81", "13.3851, -318.531, -55.802, 0.74", "13.3125, -319.818, -55.9799, 0.29", "13.2897, -320.571, -56.235, 0.96", "13.347, -321.388, -56.638, 1.11", "13.5154, -322.399, -57.2221, 1.11", "14.2081, -324.803, -58.903, 0.44", "14.5825, -325.77, -59.6789, 1.11", "14.9312, -326.541, -60.3357, 1.18", "15.3766, -327.472, -61.1021, 1.18", "15.4061, -327.532, -61.1474, 1.18", "16.0452, -328.965, -62.0339, 0.44", "16.441, -330.04, -62.4805, 0.29", "16.6777, -330.921, -62.805, 0.29", "16.877, -331.953, -63.1617, 1.11", "17.0251, -332.871, -63.4683, 1.4", "17.1887, -333.724, -63.7171, 1.11", "17.2104, -333.825, -63.7402, 1.11", "17.5509, -335.013, -64.0062, 0.66", "17.7867, -335.635, -64.1562, 0.52", "18.2496, -336.566, -64.3965, 0.29", "18.7865, -337.395, -64.6971, 0.29", "18.8323, -337.454, -64.7281, 0.29", "19.2095, -337.866, -65.0266, 1.03", "19.677, -338.316, -65.4263, 1.4", "20.294, -338.877, -65.9753, 1.47", "21.4491, -339.947, -67.0305, 1.25", "22.5264, -340.975, -68.0638, 0.52", "23.4527, -342.101, -69.0534, 0.37", "23.5069, -342.183, -69.1179, 0.37", "23.8978, -343.057, -69.8671, 0.44", "24.1648, -343.877, -70.609, 0.44", "24.1826, -343.944, -70.6708, 0.44", "24.7493, -346.04, -72.7185, 1.47", "24.8388, -346.432, -73.1092, 1.69", "25.5043, -349.363, -76.2672, 0.59", "25.6877, -350.163, -77.2493, 0.29", "25.8737, -350.859, -78.2252, 1.25", "26.0433, -351.34, -78.989, 1.55" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "25.9902, -165.934, 4.23911, 0.44", "27.9894, -166.62, 3.76889, 0.44", "28.9317, -166.914, 3.52223, 0.59", "29.0228, -166.94, 3.49316, 0.59", "29.664, -167.152, 3.2726, 0.59", "30.6293, -167.556, 2.93024, 0.59", "30.6922, -167.588, 2.90769, 0.59", "31.4874, -168.122, 2.61952, 0.44", "32.2727, -168.839, 2.38553, 0.29", "33.0489, -169.734, 2.20831, 0.29", "33.595, -170.512, 2.12293, 0.59", "33.9726, -171.151, 2.0914, 0.81", "34.5565, -172.202, 2.07849, 0.37", "35.0404, -173.133, 2.09821, 1.25", "35.4373, -173.908, 2.13023, 1.62", "35.7992, -174.545, 2.14351, 1.47", "36.3528, -175.409, 2.11101, 0.96", "36.7746, -176.06, 2.0164, 0.74", "37.4018, -177.067, 1.7337, 0.59", "37.4601, -177.17, 1.69661, 0.59", "37.9629, -178.14, 1.3182, 0.59", "38.5222, -179.323, 0.831656, 0.44", "39.1345, -180.758, 0.231069, 0.44", "39.6981, -182.168, -0.347472, 0.44", "39.931, -182.751, -0.571998, 0.96", "40.1412, -183.237, -0.743613, 0.96", "40.2171, -183.4, -0.795227, 0.96", "40.7018, -184.17, -0.94487, 0.66", "41.4429, -184.951, -0.925097, 0.52", "42.1353, -185.497, -0.741008, 1.18", "42.7297, -185.887, -0.546356, 1.4", "42.812, -185.937, -0.519108, 1.4", "44.1542, -186.767, -0.109409, 0.96", "45.2113, -187.451, 0.213571, 0.74", "46.4671, -188.361, 0.587802, 1.11", "47.4453, -189.162, 0.824278, 0.59", "48.5463, -190.197, 1.0157, 0.52", "49.796, -191.56, 1.04841, 0.52", "50.2983, -192.191, 0.985282, 1.18", "50.9058, -193.011, 0.831802, 1.47", "51.6054, -193.982, 0.592054, 1.11", "52.2014, -194.805, 0.402188, 0.66", "53.271, -196.218, 0.0865694, 0.52", "54.0711, -197.192, -0.128747, 0.52", "54.9092, -198.137, -0.321698, 0.81", "55.8202, -199.115, -0.4783, 1.4", "56.5278, -199.882, -0.555016, 1.25", "56.9613, -200.355, -0.582797, 1.25", "57.4595, -200.92, -0.632838, 0.96", "58.0911, -201.672, -0.72756, 0.44", "58.7289, -202.446, -0.829648, 0.29", "59.3816, -203.221, -0.950918, 0.29", "59.4456, -203.284, -0.958821, 0.29", "60.8287, -204.432, -1.02653, 0.29", "62.047, -205.317, -1.02354, 0.74", "62.4467, -205.571, -1.00858, 1.03", "62.9975, -205.882, -0.971884, 1.03", "64.7005, -206.784, -0.807827, 0.22", "65.6639, -207.309, -0.707641, 0.22", "65.7347, -207.352, -0.707673, 0.22", "66.2032, -207.749, -0.883621, 0.88", "66.6737, -208.272, -1.20278, 1.11", "66.7371, -208.361, -1.26542, 1.11", "67.1665, -209.091, -1.84081, 1.11", "68.1621, -210.863, -3.09901, 0.22", "68.8182, -212.052, -3.86159, 0.22", "69.1042, -212.558, -4.13697, 1.03", "69.5213, -213.232, -4.43597, 1.18", "69.5663, -213.294, -4.45623, 1.18", "70.6339, -214.567, -4.63465, 0.52", "70.7308, -214.654, -4.62718, 0.52", "71.7682, -215.334, -4.54359, 0.88", "72.4636, -215.692, -4.5303, 1.18", "73.1296, -215.965, -4.5627, 1.33", "73.1969, -215.988, -4.56982, 1.33", "74.2691, -216.34, -4.7535, 1.11", "75.388, -216.753, -4.96383, 0.66", "76.0087, -217.027, -5.09719, 0.74", "76.9339, -217.547, -5.29067, 0.29", "77.0143, -217.605, -5.30527, 0.29", "77.8136, -218.34, -5.42011, 0.29", "78.133, -218.715, -5.45208, 1.18", "78.6373, -219.382, -5.48871, 1.4", "79.0675, -219.97, -5.51365, 1.4", "79.7314, -220.836, -5.54972, 0.88", "80.4702, -221.654, -5.60465, 0.37", "80.5475, -221.718, -5.61112, 0.37", "81.5291, -222.346, -5.70654, 0.37", "81.6165, -222.392, -5.71612, 0.37", "82.0994, -222.633, -5.77699, 0.81", "82.8299, -222.979, -5.88244, 0.66", "83.9016, -223.527, -6.03666, 0.37", "84.746, -224.004, -6.15324, 0.37", "85.7035, -224.618, -6.27794, 1.18", "86.4665, -225.174, -6.37565, 1.4", "86.5278, -225.225, -6.38343, 1.4", "87.275, -225.927, -6.48709, 1.47", "87.3437, -225.999, -6.50177, 1.47", "88.0738, -226.773, -6.65545, 1.03", "88.4016, -227.12, -6.72482, 0.81", "88.5938, -227.323, -6.76477, 0.81", "89.2227, -227.993, -6.89482, 0.66", "89.9826, -228.796, -6.97397, 0.37", "90.7435, -229.598, -6.99059, 0.29", "91.0594, -229.922, -6.97346, 0.59", "91.4558, -230.29, -6.93084, 0.59", "91.5383, -230.357, -6.91904, 0.59", "92.7806, -231.139, -6.72054, 0.22", "93.0821, -231.265, -6.65538, 0.22", "93.3894, -231.338, -6.60528, 0.22", "93.9547, -231.404, -6.54194, 1.25", "94.8083, -231.466, -6.49105, 1.55", "95.5786, -231.536, -6.47971, 1.55", "97.0941, -231.732, -6.52577, 0.59", "98.1914, -231.967, -6.55939, 0.29", "99.2996, -232.339, -6.58085, 0.29", "100.25, -232.809, -6.59709, 0.29", "100.999, -233.318, -6.61942, 0.29", "101.655, -233.856, -6.6441, 0.66", "102.18, -234.324, -6.68625, 0.37", "102.862, -234.937, -6.69951, 0.29", "103.51, -235.484, -6.68783, 0.44", "104.294, -236.059, -6.66609, 0.44", "105.365, -236.744, -6.6491, 0.29", "106.424, -237.386, -6.62298, 0.29", "107.412, -238.01, -6.59721, 0.96", "107.481, -238.058, -6.59859, 0.96", "108.255, -238.703, -6.63252, 1.47", "108.878, -239.306, -6.69064, 1.62", "109.732, -240.185, -6.8392, 1.25", "110.382, -240.826, -6.98694, 0.66", "111.242, -241.546, -7.22932, 0.29", "111.308, -241.592, -7.24857, 0.29", "112.198, -242.066, -7.50954, 0.29", "113.168, -242.498, -7.79216, 0.74", "113.851, -242.784, -7.98839, 1.4", "114.634, -243.117, -8.19068, 1.62", "115.701, -243.621, -8.43262, 0.81", "116.633, -244.147, -8.64222, 0.37", "117.786, -244.971, -8.91494, 0.37", "118.753, -245.842, -9.15549, 0.37", "119.122, -246.239, -9.25163, 0.74", "119.564, -246.818, -9.37355, 0.37", "120.062, -247.604, -9.55248, 0.37", "120.523, -248.454, -9.76132, 1.18", "120.809, -249.028, -9.91298, 1.4", "120.856, -249.118, -9.92185, 1.4", "121.209, -249.761, -9.90566, 1.18", "121.896, -250.963, -9.76079, 1.03", "122.457, -251.912, -9.57344, 0.81", "123.052, -252.889, -9.26238, 1.11", "124.621, -255.469, -8.28783, 0.29", "124.912, -255.946, -8.09209, 0.81", "124.957, -256.018, -8.05892, 0.81", "125.496, -256.896, -7.62539, 0.81", "126.438, -258.327, -6.93949, 0.44", "126.936, -259.048, -6.65774, 0.81", "127.362, -259.636, -6.52133, 0.96", "127.469, -259.779, -6.49164, 0.96", "127.983, -260.451, -6.37267, 0.96", "128.781, -261.476, -6.22631, 0.96", "129.337, -262.199, -6.17844, 1.25", "129.392, -262.271, -6.1741, 1.25", "130.062, -263.163, -6.12938, 0.96", "130.913, -264.336, -6.09571, 0.52", "130.964, -264.411, -6.09672, 0.52", "131.449, -265.184, -6.14703, 0.52", "131.932, -265.99, -6.2072, 1.03", "131.98, -266.073, -6.2171, 1.03", "132.295, -266.619, -6.30664, 1.03", "132.912, -267.667, -6.52382, 0.29", "133.361, -268.401, -6.68699, 0.29", "133.805, -269.083, -6.85279, 0.88", "134.514, -270.072, -7.11909, 0.29", "134.993, -270.68, -7.29751, 0.96", "135.479, -271.257, -7.48084, 1.18", "135.614, -271.399, -7.53139, 1.18", "136.082, -271.817, -7.7037, 1.18", "136.683, -272.272, -7.90926, 1.18", "136.788, -272.337, -7.93576, 1.18" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "25.9902, -165.934, 4.23911, 0.44", "25.9935, -167.847, 4.56927, 0.44", "26.0816, -168.878, 4.72358, 0.44", "26.2663, -170.128, 4.92302, 0.74", "26.4101, -171.115, 5.08609, 1.11", "26.581, -172.515, 5.32352, 0.74", "26.6805, -173.72, 5.53349, 0.52", "26.7748, -174.916, 5.7744, 0.52", "26.7713, -176.17, 6.0602, 0.37", "26.6084, -176.937, 6.26388, 0.37", "26.2759, -177.522, 6.47882, 1.11", "25.7174, -178.126, 6.74276, 1.4", "24.8729, -178.907, 7.18185, 1.47", "24.3026, -179.436, 7.5337, 1.47", "23.59, -180.124, 8.03391, 1.03", "22.8026, -181.117, 8.78564, 0.52", "22.2411, -182.179, 9.58677, 0.29", "21.919, -183.471, 10.5087, 0.37", "21.9458, -184.673, 11.2759, 0.37", "21.9638, -184.744, 11.315, 0.37", "22.5522, -186.112, 11.9265, 1.11", "22.914, -186.797, 12.1524, 1.47", "23.2783, -187.47, 12.3076, 1.47", "23.602, -188.203, 12.3861, 1.25", "23.92, -189.3, 12.4325, 0.66", "24.0961, -190.273, 12.4497, 0.52", "24.1046, -191.1, 12.4455, 0.81", "23.9639, -191.906, 12.4352, 0.81", "23.634, -192.959, 12.4214, 0.74", "23.1737, -194.093, 12.4134, 0.59", "23.1335, -194.176, 12.4129, 0.59", "22.6438, -195.164, 12.4052, 0.44", "22.1046, -196.472, 12.4379, 0.29", "21.8871, -197.175, 12.4786, 0.29", "21.8063, -198.163, 12.5754, 1.03", "21.8255, -198.256, 12.5894, 1.03", "22.0499, -198.806, 12.6794, 1.25", "22.9155, -200.19, 12.9498, 0.74", "22.9809, -200.277, 12.9684, 0.66", "23.8315, -201.364, 13.1999, 0.66", "24.3503, -202.036, 13.326, 1.03", "24.8386, -202.745, 13.4104, 0.66", "25.3173, -203.557, 13.4511, 0.44", "25.621, -204.181, 13.4335, 0.37", "25.6569, -204.276, 13.4261, 0.37", "25.9007, -205.222, 13.37, 0.37", "26.1241, -206.298, 13.3584, 1.18", "26.2504, -206.977, 13.4131, 1.18", "26.2633, -207.056, 13.4239, 1.18", "26.5075, -208.638, 13.7221, 0.44", "26.6956, -209.952, 14.0177, 0.96", "26.8292, -211.215, 14.3475, 1.33", "26.9233, -212.497, 14.6845, 0.59", "26.9543, -213.312, 14.8727, 0.44", "26.9548, -214.102, 15.0359, 0.74", "26.9309, -214.672, 15.1362, 0.74", "26.8447, -215.587, 15.2224, 0.59", "26.7195, -216.753, 15.3171, 1.18", "26.6832, -217.551, 15.3835, 1.18", "26.7715, -218.589, 15.5623, 0.59", "26.8675, -219.079, 15.6829, 0.37", "26.891, -219.164, 15.7113, 0.37", "27.2846, -220.432, 16.2155, 0.66", "27.5252, -221.308, 16.604, 0.66", "27.8108, -222.605, 17.2463, 0.44", "27.895, -223.324, 17.6239, 1.03", "27.9067, -224.342, 18.1608, 1.03", "27.8309, -225.232, 18.5995, 0.74", "27.6676, -226.169, 19.0161, 1.03", "27.4269, -227.308, 19.4792, 1.03", "27.2223, -228.474, 19.8659, 0.29", "27.1497, -229.344, 20.1111, 0.29", "27.1675, -230.419, 20.3421, 1.03", "27.2668, -231.13, 20.4511, 1.25", "27.4583, -231.991, 20.5312, 0.96", "27.8507, -233.424, 20.5757, 0.59", "28.114, -234.306, 20.5899, 1.03", "28.2569, -234.821, 20.6161, 1.33", "28.4784, -235.914, 20.7776, 0.22", "28.5173, -236.527, 20.9411, 0.22", "28.5097, -236.598, 20.9693, 0.22", "28.2599, -237.641, 21.5705, 0.22", "28.0626, -238.625, 22.1955, 0.22", "28.0249, -239.779, 22.8917, 1.03", "28.1042, -240.399, 23.2451, 1.4", "28.132, -240.493, 23.2851, 1.4", "28.4567, -241.4, 23.5748, 0.81", "28.8104, -242.256, 23.7736, 0.29", "29.2867, -243.366, 23.9386, 0.29", "29.317, -243.439, 23.9455, 0.29", "29.7977, -244.649, 24.0469, 0.29", "30.1614, -245.626, 24.0989, 1.11", "30.3634, -246.23, 24.1102, 1.47", "30.3847, -246.298, 24.1115, 1.47", "30.6406, -247.046, 24.1126, 1.62", "30.6664, -247.113, 24.1112, 1.62", "31.1141, -248.144, 24.0654, 1.62", "31.1434, -248.209, 24.0611, 1.62", "31.6092, -249.241, 23.9928, 0.88", "31.9862, -250.085, 23.9402, 0.59", "32.4255, -251.092, 23.8781, 0.52", "32.7373, -251.819, 23.8327, 1.11", "33.0661, -252.615, 23.7903, 1.11" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "12.5512, -122.872, 39.0944, 0.29", "12.8228, -123.86, 39.2139, 0.29", "13.0077, -124.683, 39.3784, 0.29", "13.1516, -125.391, 39.649, 0.29", "13.163, -125.451, 39.6788, 0.29", "13.2383, -125.903, 40.0041, 0.29", "13.305, -126.727, 40.7183, 0.59", "13.2937, -127.029, 41.0948, 0.59", "13.158, -127.556, 41.9826, 0.81", "13.1439, -127.588, 42.0451, 0.81", "12.877, -128.071, 43.0234, 0.22", "12.6495, -128.391, 43.6638, 0.22", "12.6247, -128.42, 43.7225, 0.22", "12.4145, -128.676, 44.1972, 0.22", "12.0677, -129.088, 44.7813, 0.22", "12.0341, -129.13, 44.8335, 0.22", "11.6618, -129.599, 45.2424, 0.52" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "12.5512, -122.872, 39.0944, 0.22", "13.4437, -122.441, 39.0839, 0.22", "13.522, -122.403, 39.083, 0.22", "14.1883, -122.081, 39.0752, 0.22", "15.0998, -121.641, 39.0644, 0.22", "15.2397, -121.574, 39.0628, 0.22", "16.8705, -120.787, 39.0436, 0.22" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "15.7897, -391.086, 19.2203, 0.22", "15.411, -392.474, 19.7375, 0.22", "15.2692, -393.124, 19.9468, 0.59", "15.2178, -393.462, 20.036, 0.81", "15.0459, -394.721, 20.3266, 0.22", "14.9422, -395.538, 20.5006, 0.22", "14.8628, -396.264, 20.6377, 1.11", "14.8535, -396.844, 20.7121, 1.33", "14.8527, -397.727, 20.7933, 1.03", "14.8469, -398.367, 20.8266, 0.29", "14.8472, -398.44, 20.8264, 0.29", "14.9634, -399.327, 20.8407, 0.22", "15.0886, -399.81, 20.8602, 0.52", "15.1538, -399.967, 20.8775, 0.52", "15.1914, -400.034, 20.8876, 0.52", "15.6368, -400.584, 20.9585, 0.22", "16.2499, -401.155, 21.0031, 0.59", "16.5753, -401.417, 20.982, 0.59", "17.4035, -402.088, 20.8642, 0.22", "17.9733, -402.569, 20.7228, 0.88", "18.9615, -403.428, 20.3917, 0.15", "19.6878, -404.09, 20.0763, 0.15", "20.9395, -405.235, 19.4434, 0.15", "21.5694, -405.812, 19.0992, 0.44", "22.2305, -406.391, 18.7093, 1.18", "22.6429, -406.754, 18.4806, 1.55", "23.5409, -407.622, 18.0211, 0.29", "24.0565, -408.11, 17.8333, 0.52", "24.1094, -408.155, 17.824, 0.52", "24.582, -408.533, 17.7963, 0.52", "25.4333, -409.272, 17.8528, 0.22", "25.9554, -409.817, 17.9234, 0.22", "26.5577, -410.566, 18.0506, 0.66", "26.8665, -411.022, 18.1204, 0.66", "26.913, -411.1, 18.1291, 0.66", "27.421, -412.11, 18.195, 0.15", "27.8153, -413.0, 18.1823, 0.37", "27.8736, -413.142, 18.1756, 0.37", "27.9554, -413.367, 18.1513, 0.37", "28.2202, -414.107, 18.0726, 0.15", "28.2997, -414.327, 18.049, 0.44", "28.481, -414.756, 17.9947, 0.44" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "15.7897, -391.086, 19.2203, 0.22", "16.8638, -391.313, 17.9061, 0.22", "17.6084, -391.471, 16.995, 0.22", "18.2854, -391.614, 16.1667, 0.37", "19.1344, -391.794, 15.1279, 0.15", "19.3801, -391.846, 14.8272, 0.44", "19.7558, -391.925, 14.3675, 0.44" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-139.95, -131.496, -7.85827, 0.22", "-141.461, -130.175, -8.56331, 0.22", "-141.57, -130.121, -8.62527, 0.22", "-142.103, -129.862, -8.92577, 0.88", "-142.185, -129.822, -8.97239, 0.88", "-142.662, -129.589, -9.24178, 0.88", "-143.381, -129.238, -9.64805, 0.66", "-144.594, -129.004, -10.6015, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-139.95, -131.496, -7.85827, 0.22", "-141.699, -131.694, -7.5296, 0.22", "-142.879, -131.827, -7.30781, 0.22", "-142.972, -131.838, -7.29039, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "45.034, 148.257, 17.8894, 0.22", "45.5847, 148.071, 17.8588, 0.22", "45.8574, 147.997, 17.8322, 0.22", "45.8791, 147.993, 17.8315, 0.22", "46.4428, 147.912, 17.8316, 0.22", "46.4725, 147.911, 17.8322, 0.22", "46.8056, 147.917, 17.8596, 0.22", "46.9743, 147.932, 17.8821, 0.74", "47.3267, 147.985, 17.9584, 0.59", "47.355, 147.991, 17.9648, 0.59", "47.8125, 148.097, 18.0635, 0.22", "48.2304, 148.168, 18.1708, 0.81", "48.4827, 148.199, 18.2438, 0.96", "48.9092, 148.24, 18.3683, 0.81", "49.38, 148.275, 18.4922, 0.22", "49.5938, 148.285, 18.5467, 0.59", "50.1372, 148.283, 18.6752, 1.03", "50.164, 148.282, 18.6808, 1.03", "50.2515, 148.281, 18.6996, 1.03", "50.7232, 148.254, 18.7695, 0.22", "50.9101, 148.238, 18.8021, 0.52", "51.0765, 148.222, 18.8256, 0.52" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "45.034, 148.257, 17.8894, 0.22", "45.1312, 150.239, 18.9007, 0.22", "45.1565, 151.243, 19.3877, 0.74", "45.176, 152.828, 20.0998, 0.22", "45.1819, 153.51, 20.3923, 0.22", "45.197, 155.051, 21.0127, 0.22", "45.2157, 156.204, 21.4259, 0.22", "45.2137, 156.299, 21.4469, 0.22", "45.2234, 157.155, 21.5483, 0.59", "45.2304, 157.245, 21.5388, 0.59", "45.2999, 157.694, 21.4376, 0.44", "45.4799, 158.563, 21.1691, 0.15", "45.676, 159.501, 20.9239, 0.22", "45.7995, 160.222, 20.7703, 0.59", "46.1426, 162.317, 20.5124, 0.22", "46.1572, 162.415, 20.5075, 0.22", "46.3469, 163.74, 20.5211, 0.22", "46.5466, 165.032, 20.6415, 0.29", "46.68, 165.845, 20.7649, 0.29", "47.0503, 168.039, 21.2087, 0.22", "47.2424, 168.863, 21.4148, 0.52", "47.2707, 168.964, 21.4397, 0.52", "47.9503, 170.965, 21.8805, 0.22", "48.2535, 171.73, 22.0495, 0.88", "48.4526, 172.16, 22.1884, 0.74", "49.29, 173.672, 22.8649, 0.22", "49.7088, 174.342, 23.2822, 0.29", "50.2021, 175.054, 23.8078, 0.29", "51.0005, 176.103, 24.7274, 0.88", "52.0232, 177.411, 25.9254, 0.66", "52.9965, 178.644, 27.0863, 0.29", "54.2876, 180.198, 28.6143, 0.52", "54.6754, 180.618, 29.0391, 0.44", "55.6342, 181.593, 30.004, 0.22", "56.3797, 182.311, 30.6314, 0.29", "56.4474, 182.377, 30.6784, 0.29", "57.1777, 183.101, 31.1364, 0.29", "57.8758, 183.746, 31.4621, 0.44", "58.5454, 184.426, 31.7697, 0.44", "58.6023, 184.49, 31.7935, 0.44", "59.4018, 185.681, 32.1834, 0.22", "59.4505, 185.773, 32.2081, 0.22", "59.7828, 186.577, 32.3815, 0.22", "60.3111, 188.211, 32.6305, 0.22", "60.4916, 188.9, 32.7158, 0.59", "60.8989, 191.013, 32.7805, 0.22", "61.0641, 192.378, 32.7141, 0.22", "61.0858, 193.349, 32.6614, 0.22", "60.9906, 194.626, 32.5751, 0.88", "60.9179, 195.033, 32.5387, 0.88", "60.2472, 197.45, 32.3118, 0.22", "60.0297, 197.984, 32.2567, 0.37", "58.9785, 199.982, 32.1079, 0.15", "58.9091, 200.101, 32.1051, 0.15", "58.5965, 200.667, 32.1571, 0.37", "58.2257, 201.372, 32.2816, 0.37", "58.1899, 201.452, 32.3027, 0.37", "57.9288, 202.196, 32.4672, 0.29", "57.6818, 203.419, 32.6675, 0.29", "57.4826, 205.1, 32.9186, 0.22", "57.4696, 205.298, 32.9447, 0.22", "57.4234, 206.796, 33.1239, 0.22", "57.4247, 206.923, 33.1371, 0.22", "57.4996, 208.203, 33.2469, 0.22", "57.5991, 209.305, 33.3102, 0.29", "57.7561, 210.728, 33.3337, 0.29", "57.7665, 210.818, 33.3352, 0.29", "57.8452, 211.828, 33.3677, 0.22", "57.8517, 211.937, 33.3726, 0.22", "57.8981, 212.793, 33.4201, 0.29", "57.9111, 212.938, 33.4238, 0.29", "58.0351, 214.131, 33.4243, 0.59", "58.1431, 215.804, 33.3209, 0.22", "58.1763, 216.871, 33.2075, 0.59", "58.1901, 217.544, 33.1172, 0.59", "58.2194, 219.229, 32.8408, 0.22", "58.2332, 219.893, 32.7138, 0.44", "58.2717, 221.381, 32.3612, 0.22", "58.3079, 222.079, 32.1494, 0.22", "58.3471, 222.465, 32.0334, 0.59", "58.3656, 222.574, 32.0028, 0.59", "58.486, 222.99, 31.9081, 0.59", "58.5406, 223.113, 31.8848, 0.59", "59.3027, 224.57, 31.6807, 0.22", "60.0095, 225.946, 31.4904, 0.37", "60.0482, 226.026, 31.48, 0.37", "60.2468, 226.519, 31.4444, 0.37", "60.7486, 227.973, 31.4068, 0.22", "61.0121, 228.811, 31.4317, 0.22", "61.1845, 229.409, 31.5018, 0.52", "61.2718, 229.827, 31.5678, 0.52", "61.4858, 231.439, 31.8408, 0.22", "61.4963, 231.578, 31.8649, 0.22", "61.5651, 233.364, 32.2363, 0.22", "61.6313, 235.308, 32.6631, 0.22", "61.6669, 236.695, 32.9689, 0.22", "61.6887, 238.705, 33.4019, 0.22", "61.6925, 240.423, 33.7515, 0.88", "61.6646, 241.853, 34.0436, 0.44", "61.6166, 242.906, 34.2564, 0.22", "61.5958, 243.442, 34.3566, 0.37", "61.6081, 244.061, 34.4614, 0.37", "61.7027, 245.534, 34.6954, 0.22", "61.7105, 245.631, 34.7068, 0.22", "61.8068, 246.553, 34.7589, 0.22", "61.835, 246.757, 34.7693, 0.22", "62.0525, 248.104, 34.8468, 0.22", "62.0648, 248.194, 34.852, 0.22", "62.1582, 249.035, 34.8995, 0.22", "62.2545, 250.359, 34.9786, 0.52", "62.3263, 251.975, 35.0834, 0.22", "62.3743, 254.033, 35.2221, 0.22", "62.3746, 256.334, 35.3831, 0.22", "62.3674, 256.624, 35.4033, 0.22", "62.2845, 258.353, 35.5122, 0.22", "62.2662, 258.602, 35.5264, 0.22", "62.1458, 260.046, 35.5958, 0.22", "62.1385, 260.258, 35.5984, 0.22", "62.1712, 261.905, 35.6427, 0.22", "62.313, 264.763, 35.7489, 0.22", "62.3322, 265.065, 35.7646, 0.22", "62.4276, 266.54, 35.8578, 0.96", "62.6106, 269.477, 36.0782, 0.22", "62.7308, 272.255, 36.4178, 0.22", "62.7279, 272.419, 36.4518, 0.22", "62.5836, 274.153, 36.9725, 0.74", "62.5695, 274.244, 37.0054, 0.74", "62.4112, 274.851, 37.2807, 0.74", "61.7276, 276.55, 38.2202, 0.66", "60.8362, 278.406, 39.2681, 0.15", "60.7909, 278.495, 39.316, 0.15", "60.09, 279.764, 39.9912, 0.15", "60.051, 279.831, 40.0243, 0.15", "59.6697, 280.466, 40.2813, 0.15", "59.5684, 280.631, 40.3216, 0.15", "59.1177, 281.321, 40.4578, 0.15", "59.06, 281.403, 40.4785, 0.15", "58.1737, 282.563, 40.8304, 0.37", "57.4045, 283.55, 41.1412, 0.15", "56.7572, 284.346, 41.4308, 0.66", "56.4596, 284.7, 41.5865, 0.81", "55.3954, 285.919, 42.2452, 0.15", "55.3373, 285.992, 42.2901, 0.15", "54.9037, 286.579, 42.682, 0.37", "54.173, 287.719, 43.4864, 0.15", "53.3559, 289.299, 44.5767, 0.44", "52.9045, 290.407, 45.3431, 0.81", "52.3436, 292.222, 46.5825, 0.22", "52.3254, 292.305, 46.6388, 0.22", "52.1983, 293.425, 47.369, 0.22", "52.1795, 294.354, 47.9178, 0.22", "52.2435, 295.977, 48.7854, 0.81", "52.2559, 296.258, 48.9256, 0.81", "52.2263, 297.446, 49.5728, 0.22", "52.1567, 298.17, 49.9896, 0.22", "52.0241, 298.746, 50.3611, 0.52", "51.9611, 298.907, 50.4998, 0.66", "51.9324, 298.958, 50.5526, 0.66", "51.4052, 299.716, 51.4688, 0.52", "51.0055, 300.238, 52.1695, 0.22", "50.6691, 300.755, 52.7964, 0.59", "49.8646, 302.535, 54.4559, 0.15", "49.6777, 303.141, 54.9178, 0.15", "49.6472, 303.272, 55.0044, 0.15", "49.4539, 304.323, 55.5933, 0.15", "49.1963, 306.105, 56.4868, 0.15", "48.8862, 308.161, 57.3433, 0.15", "48.6384, 309.757, 57.8634, 0.15", "48.6192, 309.848, 57.8919, 0.15", "48.3687, 310.631, 58.1291, 0.15", "48.2253, 310.901, 58.2167, 0.15", "47.2628, 312.029, 58.6517, 0.29", "47.1691, 312.107, 58.6816, 0.29", "46.5616, 312.528, 58.9635, 0.29", "45.8815, 312.982, 59.3602, 0.29", "44.964, 313.589, 59.9483, 0.22", "44.5121, 313.875, 60.2583, 0.52", "43.9762, 314.211, 60.6439, 0.74", "41.0344, 315.965, 62.7461, 0.15", "40.9724, 316.0, 62.79, 0.15", "39.8858, 316.576, 63.5052, 0.15", "39.0928, 316.971, 63.9867, 0.37", "38.4597, 317.239, 64.3248, 0.37", "38.1521, 317.323, 64.4471, 0.37", "37.4654, 317.404, 64.6381, 0.29", "36.4341, 317.423, 64.9551, 0.29", "35.3241, 317.296, 65.3056, 0.15", "33.8915, 317.022, 65.7538, 0.15", "32.1216, 316.52, 66.3036, 0.22", "30.4287, 315.964, 66.7867, 0.22", "29.6575, 315.693, 67.0149, 0.22", "28.4259, 315.248, 67.3743, 0.22", "28.3211, 315.218, 67.4128, 0.22", "27.3204, 315.076, 67.9919, 0.22", "26.654, 315.079, 68.4579, 0.44", "25.3756, 315.271, 69.3937, 0.22", "24.7328, 315.512, 69.9599, 0.66", "22.9608, 316.332, 71.6511, 0.22", "21.6371, 317.012, 72.9815, 0.29", "20.8917, 317.461, 73.803, 0.22", "20.0633, 317.985, 74.7862, 0.44", "18.9523, 318.811, 76.1268, 0.22" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "16.7576, 215.574, -8.31049, 0.66", "16.4687, 216.338, -9.43868, 0.66", "16.2212, 217.181, -10.4862, 0.29", "16.1901, 217.318, -10.6226, 0.29", "15.9619, 218.52, -11.6414, 0.66", "15.8122, 219.318, -12.1993, 0.66", "15.6725, 220.052, -12.6596, 0.29", "15.633, 220.234, -12.7417, 0.29", "15.5294, 220.774, -12.9171, 0.29", "15.5153, 220.861, -12.9442, 0.29", "15.3869, 221.842, -13.222, 0.29", "15.3727, 221.929, -13.2492, 0.29", "15.1393, 223.331, -13.6919, 1.03", "14.9665, 224.106, -13.8208, 1.25", "14.7637, 224.844, -13.867, 1.47", "14.6006, 225.344, -13.8712, 1.47", "14.1852, 226.345, -13.7996, 1.47", "14.1475, 226.42, -13.79, 1.47", "12.9195, 228.367, -13.4934, 0.22", "12.4008, 229.027, -13.4069, 0.44", "12.0055, 229.477, -13.3621, 0.44", "11.3953, 230.123, -13.3426, 0.22", "11.3429, 230.176, -13.3466, 0.22", "10.5569, 231.035, -13.5253, 0.81", "9.75945, 231.975, -13.8566, 0.22", "9.28256, 232.595, -14.0653, 1.03", "8.90526, 233.141, -14.2443, 1.18", "8.11602, 234.451, -14.6661, 0.22", "7.59671, 235.39, -14.9392, 0.22", "7.31052, 235.981, -15.0888, 0.81", "7.00598, 236.677, -15.2635, 1.03", "6.95535, 236.811, -15.2869, 1.03", "6.77276, 237.414, -15.358, 1.03", "6.51869, 238.403, -15.4549, 0.66", "6.29298, 239.26, -15.5517, 0.52", "5.85641, 240.626, -15.6662, 0.22", "5.58357, 241.407, -15.7191, 0.59", "4.97098, 243.164, -15.8011, 0.22", "4.77163, 243.737, -15.8191, 0.81", "4.41236, 244.805, -15.8329, 1.03", "3.68641, 247.031, -15.7257, 0.22", "3.48767, 247.728, -15.6348, 0.88", "3.26882, 248.615, -15.446, 1.11", "3.23832, 248.804, -15.3791, 1.11", "3.19595, 249.343, -15.1494, 1.11", "3.20016, 250.704, -14.5128, 0.22", "3.26916, 251.649, -14.101, 0.74", "3.2957, 252.077, -13.9266, 0.74", "3.42466, 253.589, -13.3129, 0.22", "3.46884, 254.059, -13.1176, 0.88", "3.52619, 254.629, -12.8834, 1.03", "3.59241, 255.467, -12.601, 0.52", "3.63934, 256.44, -12.3241, 0.22", "3.71543, 257.499, -12.0219, 0.22", "3.83707, 258.647, -11.6979, 1.25", "3.84862, 258.745, -11.6714, 1.25", "4.02237, 260.115, -11.3268, 0.22", "4.16056, 261.135, -11.0979, 0.22", "4.2997, 262.146, -10.9043, 0.22", "4.42792, 263.069, -10.7569, 0.22", "4.54114, 263.855, -10.6543, 0.96", "4.69609, 264.885, -10.5233, 1.11", "4.96527, 266.59, -10.3073, 0.22", "5.12116, 267.582, -10.2255, 1.11", "5.13604, 267.689, -10.2221, 1.11", "5.35171, 269.332, -10.2194, 0.22", "5.46024, 270.431, -10.271, 1.03", "5.48832, 270.85, -10.3171, 1.03", "5.52289, 272.437, -10.6125, 0.22", "5.51493, 273.285, -10.8091, 0.22", "5.50978, 273.451, -10.8505, 0.22", "5.49102, 274.818, -11.1934, 0.22", "5.49036, 274.913, -11.2145, 0.22", "5.50943, 275.371, -11.2805, 0.22", "5.51683, 275.451, -11.2837, 0.22", "5.68076, 276.231, -11.2164, 0.52", "6.01883, 277.438, -11.0088, 0.22", "6.21605, 278.051, -10.8678, 0.81", "6.3796, 278.605, -10.746, 0.81", "6.48611, 278.984, -10.6718, 0.81", "6.89789, 280.613, -10.402, 0.22", "6.99857, 281.145, -10.33, 0.74", "7.10094, 281.898, -10.241, 1.03", "7.18168, 282.812, -10.1711, 1.18", "7.23889, 283.927, -10.1223, 1.11", "7.25226, 284.512, -10.1096, 0.81", "7.24519, 286.418, -10.104, 0.29", "7.24328, 287.647, -10.088, 0.81", "7.24839, 289.246, -10.0851, 0.22", "7.24813, 289.45, -10.0881, 0.22", "7.21564, 290.586, -10.1475, 0.22", "7.17719, 291.131, -10.2167, 0.22", "7.08387, 291.874, -10.391, 0.22", "6.79291, 293.365, -10.8792, 1.11", "6.58598, 294.164, -11.2025, 1.62", "6.25866, 295.042, -11.6229, 1.47", "5.64992, 296.261, -12.3217, 0.37", "5.20461, 296.974, -12.797, 0.66", "4.80693, 297.509, -13.1703, 0.66", "4.13445, 298.344, -13.6864, 0.29", "3.27672, 299.394, -14.259, 1.18", "2.79922, 300.016, -14.5331, 0.74", "2.20714, 300.886, -14.8068, 0.29", "1.61912, 301.827, -15.0053, 0.29", "0.846788, 303.289, -15.1849, 0.22", "0.817066, 303.36, -15.1902, 0.22", "0.541703, 304.201, -15.2593, 0.74", "0.367721, 304.848, -15.3342, 1.03", "0.214299, 305.516, -15.4436, 1.18", "0.010272, 306.54, -15.6898, 0.22", "-0.177426, 307.781, -16.0356, 0.22", "-0.275309, 308.601, -16.2514, 0.22", "-0.355087, 309.507, -16.4766, 0.88", "-0.360131, 309.596, -16.4991, 0.88", "-0.3743, 310.504, -16.7266, 0.88", "-0.434781, 312.312, -17.165, 0.22", "-0.466304, 313.039, -17.3125, 0.74", "-0.473519, 313.141, -17.3295, 0.74", "-0.532776, 313.682, -17.4093, 0.96", "-0.562147, 313.872, -17.4408, 0.96", "-0.864184, 315.351, -17.7071, 0.15", "-1.04865, 316.064, -17.8177, 0.29", "-1.15673, 316.516, -17.8747, 0.29", "-1.28875, 317.099, -17.9405, 0.22", "-1.45171, 317.958, -18.005, 0.59", "-4.02555, 329.707, -22.2031, 0.59" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "16.7576, 215.574, -8.31049, 0.22", "17.1596, 217.227, -7.17283, 0.22", "17.1755, 217.293, -7.13211, 0.22", "17.3439, 217.972, -6.72934, 0.96", "17.5925, 218.97, -6.16657, 0.22", "17.7626, 219.613, -5.82449, 0.66", "17.9633, 220.358, -5.45108, 0.22", "18.1392, 220.85, -5.21858, 0.52", "18.1643, 220.932, -5.17976, 0.52", "18.2464, 221.289, -5.02403, 0.52", "18.3984, 222.097, -4.69535, 0.22", "18.4594, 222.508, -4.52216, 0.59", "18.4818, 222.9, -4.33165, 0.59", "18.4397, 224.287, -3.66175, 0.22", "18.3605, 224.928, -3.40898, 0.96", "18.3559, 225.003, -3.38089, 0.96", "18.3431, 225.374, -3.24591, 0.96", "18.3617, 226.555, -2.82793, 0.66", "18.4193, 227.554, -2.49191, 0.22", "18.5434, 228.921, -2.0757, 0.22", "18.8621, 231.413, -1.28207, 0.22", "18.8887, 231.575, -1.23, 0.22", "19.0407, 232.22, -1.01895, 0.59", "19.069, 232.295, -0.99448, 0.59", "21.6854, 242.527, 2.1831, 0.59" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-183.979, 28.9981, 59.6774, 0.22", "-185.115, 28.9589, 60.4634, 0.22", "-185.511, 28.9573, 60.7171, 0.22", "-186.006, 28.9848, 61.1131, 0.66", "-186.22, 28.9956, 61.2938, 0.88", "-186.456, 29.0048, 61.5743, 0.59", "-186.493, 29.0033, 61.6296, 0.59", "-186.901, 28.9591, 62.4027, 0.29", "-187.267, 28.8247, 63.5113, 1.33", "-187.307, 28.7569, 63.8131, 1.33", "-187.199, 28.2281, 65.3462, 0.37", "-187.01, 27.91, 65.9871, 0.37", "-186.988, 27.8788, 66.032, 0.29", "-186.602, 27.3833, 66.5451, 0.29", "-186.165, 26.8538, 66.9798, 0.37", "-185.727, 26.3349, 67.3419, 0.37", "-185.495, 26.0457, 67.479, 0.29", "-184.969, 25.3651, 67.8077, 0.22", "-184.757, 25.0704, 67.9535, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-183.979, 28.9981, 59.6774, 0.22", "-184.718, 28.3224, 59.9455, 0.22", "-185.295, 27.857, 60.1428, 0.22", "-185.34, 27.8275, 60.1564, 0.22", "-185.906, 27.5425, 60.3225, 0.22", "-186.53, 27.3209, 60.4885, 0.37", "-186.696, 27.2888, 60.5333, 0.37", "-187.073, 27.3064, 60.6361, 0.37", "-187.621, 27.3911, 60.7815, 0.22", "-188.086, 27.4792, 60.9177, 0.29", "-188.571, 27.5917, 61.0701, 0.29", "-189.26, 27.7516, 61.2925, 0.22", "-189.757, 27.8486, 61.4547, 0.52", "-190.128, 27.9048, 61.575, 0.59", "-190.598, 27.9482, 61.7262, 0.29", "-191.061, 27.9431, 61.8666, 0.22", "-191.29, 27.917, 61.9349, 0.59", "-191.712, 27.8391, 62.0457, 0.22", "-192.132, 27.7743, 62.1389, 0.59", "-192.189, 27.7668, 62.1498, 0.59", "-192.799, 27.6915, 62.2487, 0.52", "-193.102, 27.6475, 62.2989, 0.81", "-193.154, 27.6392, 62.3081, 0.81", "-194.012, 27.4736, 62.4679, 0.29", "-194.084, 27.4606, 62.4811, 0.29", "-194.326, 27.4377, 62.5324, 0.52", "-194.71, 27.459, 62.6022, 0.88", "-194.762, 27.4721, 62.6108, 0.88", "-195.204, 27.6471, 62.6812, 1.25", "-195.619, 27.9017, 62.747, 1.4", "-196.623, 28.5739, 62.8994, 0.22", "-197.174, 29.0011, 62.9792, 0.22", "-198.003, 29.7721, 63.0829, 0.29", "-198.041, 29.8129, 63.0868, 0.29", "-198.296, 30.2012, 63.1034, 0.15" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "40.574, 76.6588, 52.7089, 0.22", "41.143, 77.38, 52.2306, 0.22", "41.4839, 77.8121, 51.9441, 0.22", "42.4995, 79.0995, 51.0904, 0.22", "42.5415, 79.1527, 51.0551, 0.22" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "40.574, 76.6588, 52.7089, 0.29", "41.8656, 76.1883, 52.9223, 0.29", "42.9328, 75.8609, 53.0697, 0.37", "43.0455, 75.831, 53.0851, 0.37", "43.6414, 75.6951, 53.1698, 0.52", "44.4001, 75.5518, 53.192, 0.44", "44.4811, 75.5382, 53.192, 0.44", "45.3868, 75.4217, 53.1815, 0.44", "46.1163, 75.3268, 53.1581, 0.74", "46.7019, 75.2321, 53.1515, 0.96", "48.4848, 74.893, 53.1591, 0.22", "49.5359, 74.6848, 53.2024, 0.22", "50.5053, 74.5236, 53.2617, 0.44", "50.6128, 74.511, 53.2719, 0.44", "51.3313, 74.4718, 53.3812, 0.44", "51.3999, 74.4738, 53.3976, 0.44", "52.1972, 74.5981, 53.7084, 0.29", "53.053, 74.8274, 54.008, 0.59", "53.6104, 75.006, 54.1714, 0.81", "54.1933, 75.1826, 54.3171, 0.81", "54.4936, 75.2624, 54.3818, 0.81", "54.601, 75.2822, 54.3964, 0.81", "55.5405, 75.4023, 54.4674, 0.37", "56.0967, 75.4515, 54.4962, 0.81", "56.6123, 75.4805, 54.5119, 1.03", "57.2069, 75.506, 54.5273, 0.88", "58.5128, 75.5652, 54.5638, 0.22", "59.307, 75.6151, 54.5931, 0.22", "60.1499, 75.694, 54.6444, 0.22" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-47.4539, 47.3017, 57.285, 0.29", "-47.3955, 47.0345, 57.7132, 0.29", "-47.4389, 46.9293, 57.8231, 0.29", "-47.7096, 46.5743, 58.0304, 0.29", "-47.7511, 46.5304, 58.0674, 0.29", "-48.3608, 46.0606, 58.5744, 0.29", "-48.6111, 45.905, 58.8993, 0.29", "-48.902, 45.7345, 59.2522, 0.29", "-49.2528, 45.5591, 59.6553, 0.29", "-49.7457, 45.3532, 60.1898, 1.18", "-49.9844, 45.2718, 60.457, 1.18", "-50.8674, 45.1568, 61.5021, 1.4" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-47.4539, 47.3017, 57.285, 0.29", "-48.1595, 46.7873, 57.4675, 0.29", "-48.6954, 46.3965, 57.6061, 0.29", "-49.3718, 45.9034, 57.7811, 0.22", "-49.7959, 45.5942, 57.8908, 0.59", "-49.9819, 45.4586, 57.9389, 0.59" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "176.903, -238.762, 10.8232, 0.52", "177.435, -239.396, 10.8583, 0.52", "178.02, -240.172, 10.963, 0.52", "178.452, -240.773, 11.0638, 0.74", "179.01, -241.524, 11.1909, 0.15", "179.072, -241.604, 11.2036, 0.15", "179.8, -242.569, 11.3191, 0.15", "180.405, -243.46, 11.3807, 1.4", "180.631, -243.802, 11.3935, 1.4", "181.366, -244.908, 11.3991, 0.29", "181.965, -245.708, 11.379, 0.29", "182.574, -246.427, 11.3594, 0.22", "183.119, -246.979, 11.3342, 0.96", "183.485, -247.311, 11.3037, 1.25", "183.852, -247.617, 11.2779, 1.25", "185.038, -248.548, 11.2662, 0.22", "185.565, -248.948, 11.2906, 1.03", "186.06, -249.311, 11.3392, 1.33", "186.904, -249.949, 11.447, 0.22", "187.605, -250.553, 11.5859, 0.22", "188.23, -251.173, 11.7534, 0.88", "188.552, -251.533, 11.8575, 1.03", "188.634, -251.632, 11.886, 1.03", "188.904, -251.989, 12.0017, 1.03", "189.568, -252.964, 12.3494, 0.29", "189.605, -253.023, 12.3685, 0.29", "190.151, -253.861, 12.5841, 0.29", "190.498, -254.353, 12.7112, 0.22", "190.821, -254.781, 12.8145, 0.74", "191.125, -255.126, 12.9206, 0.74", "191.686, -255.699, 13.1149, 0.22", "192.238, -256.177, 13.3162, 0.81", "192.771, -256.579, 13.5157, 0.81", "193.106, -256.801, 13.6332, 0.81", "194.332, -257.567, 14.028, 0.22", "194.387, -257.6, 14.041, 0.22", "195.235, -258.051, 14.1652, 0.22", "195.94, -258.418, 14.219, 1.11", "196.349, -258.631, 14.1994, 1.33", "196.873, -258.898, 14.1216, 1.25", "197.906, -259.446, 13.8122, 0.22", "198.852, -259.954, 13.4661, 0.22", "198.9, -259.982, 13.4422, 0.22", "199.63, -260.434, 13.0113, 0.22", "199.668, -260.463, 12.986, 0.22", "200.115, -260.905, 12.6647, 0.52", "200.211, -261.026, 12.5869, 0.52", "200.835, -262.002, 12.0333, 0.29", "201.184, -262.571, 11.7324, 0.29", "201.55, -263.222, 11.4411, 1.62", "201.807, -263.676, 11.2574, 1.62" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "176.903, -238.762, 10.8232, 0.22", "175.816, -239.967, 10.7197, 0.22", "175.113, -240.747, 10.6528, 0.22", "173.747, -242.26, 10.5228, 0.22", "173.067, -243.014, 10.458, 0.22", "172.632, -243.496, 10.4166, 0.22", "171.813, -244.404, 10.3387, 0.22" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "26.0433, -351.34, -78.989, 0.22", "25.8802, -353.065, -78.8693, 0.22", "25.7623, -353.77, -78.7642, 0.74", "25.6417, -354.374, -78.6558, 0.96", "25.4735, -355.232, -78.4983, 0.59", "25.2055, -356.722, -78.2298, 0.22", "25.0316, -357.754, -78.0466, 0.22", "24.7719, -359.391, -77.7563, 0.22", "24.7551, -359.492, -77.7411, 0.22", "24.5806, -360.563, -77.6175, 0.22", "24.4948, -361.02, -77.5848, 0.52", "24.4756, -361.116, -77.5846, 0.52", "24.2025, -362.526, -77.6343, 0.22", "23.99, -363.344, -77.6727, 0.81", "23.8371, -363.796, -77.6806, 1.03", "23.5364, -364.488, -77.6707, 0.74", "22.9649, -365.733, -77.6704, 0.22", "22.6415, -366.47, -77.6743, 0.52", "22.0757, -367.777, -77.6763, 0.22", "21.8456, -368.378, -77.6898, 0.96", "21.6507, -369.025, -77.7188, 1.11", "21.2595, -370.847, -77.8438, 0.22", "21.1405, -371.817, -77.9394, 1.03", "21.1388, -371.91, -77.948, 1.03", "21.2034, -372.771, -78.016, 1.25", "21.3164, -373.898, -78.0683, 0.88", "21.3323, -374.272, -78.0654, 0.74", "21.3283, -374.401, -78.0558, 0.74", "21.2332, -375.58, -77.9579, 0.22", "21.1009, -376.764, -77.8573, 0.22", "21.0626, -377.042, -77.8335, 0.22", "20.8328, -378.53, -77.5894, 0.22", "20.6678, -379.721, -77.3538, 0.22", "20.5293, -381.023, -77.0857, 1.18", "20.4699, -381.825, -76.9202, 1.4", "20.4612, -382.476, -76.7576, 1.4", "20.5889, -384.837, -76.0264, 0.22", "20.7538, -386.077, -75.5049, 0.22", "20.9258, -387.164, -74.9465, 0.52", "20.9795, -387.504, -74.7487, 0.52", "21.2458, -389.161, -73.6709, 0.22", "21.4613, -390.491, -72.7219, 0.96", "21.7791, -392.197, -71.4358, 0.22", "21.7918, -392.27, -71.3745, 0.22", "21.9208, -393.165, -70.5789, 0.22", "22.0511, -394.182, -69.776, 0.22", "22.0591, -394.26, -69.7338, 0.22", "22.1515, -395.068, -69.5211, 1.4", "22.1683, -395.176, -69.5115, 1.4", "22.2937, -395.722, -69.4525, 1.4", "22.8497, -397.094, -69.0888, 0.22", "23.3557, -398.121, -68.6231, 0.22", "23.5967, -398.597, -68.3322, 0.52", "23.6386, -398.677, -68.2728, 0.52", "24.2608, -399.868, -67.2342, 1.4", "25.2011, -401.703, -65.4857, 0.59", "25.6684, -402.713, -64.4455, 0.22", "26.0767, -403.753, -63.2349, 0.22", "26.1057, -403.846, -63.1215, 0.22", "26.4167, -405.343, -61.2841, 1.18", "26.5265, -406.624, -59.7122, 0.22", "26.4516, -407.744, -58.4235, 0.88", "26.1722, -409.502, -56.4011, 0.22", "26.0864, -409.816, -56.0414, 1.03", "25.92, -410.256, -55.5689, 1.03", "25.8886, -410.317, -55.5103, 1.03", "25.2864, -411.341, -54.6412, 0.22", "24.8707, -412.081, -54.1442, 0.22", "24.0983, -413.441, -53.4175, 1.11", "23.8805, -413.793, -53.2374, 1.11", "22.8694, -415.32, -52.5103, 0.22", "22.4498, -415.882, -52.2611, 0.88", "21.9884, -416.406, -52.031, 0.96", "21.249, -417.209, -51.7106, 0.96", "20.2138, -418.381, -51.3407, 0.22", "19.5547, -419.274, -51.0502, 0.22", "19.022, -420.106, -50.7816, 0.22", "18.2672, -421.695, -50.2536, 0.96", "18.0416, -422.463, -49.9933, 1.25", "17.9217, -423.344, -49.6956, 1.18", "17.9262, -425.643, -48.8339, 0.22", "17.9415, -425.83, -48.7599, 0.22", "18.1395, -427.043, -48.225, 0.22", "18.3522, -428.208, -47.6868, 0.88", "18.4138, -428.654, -47.4679, 0.88", "18.5895, -430.485, -46.538, 0.22", "18.5942, -430.572, -46.4953, 0.22", "18.6464, -432.611, -45.4826, 0.22", "18.5966, -433.508, -45.0456, 1.25", "18.5066, -434.107, -44.7809, 1.25", "18.4887, -434.19, -44.7514, 1.25", "18.3306, -434.751, -44.6264, 1.25", "18.1572, -435.386, -44.5378, 0.66", "17.7237, -436.785, -44.4971, 0.15", "17.7004, -436.868, -44.4951, 0.15", "17.4481, -437.802, -44.474, 0.15", "17.4084, -437.982, -44.4689, 0.15", "17.2241, -439.005, -44.4376, 0.15", "17.0637, -440.114, -44.4038, 0.15", "16.9226, -441.318, -44.3657, 0.96", "16.8564, -442.01, -44.3446, 1.18", "16.7411, -443.552, -44.2407, 0.22", "16.6868, -444.544, -44.1507, 0.22", "16.6663, -445.535, -43.9942, 0.88", "16.698, -447.041, -43.6881, 0.22", "16.7242, -447.693, -43.5309, 0.22", "16.7961, -449.387, -43.0644, 0.96", "16.8427, -450.05, -42.8617, 1.25", "17.1119, -452.416, -42.0766, 0.22", "17.1271, -452.503, -42.0373, 0.22", "17.2331, -453.023, -41.7761, 0.22", "17.2482, -453.097, -41.7367, 0.22", "17.4753, -453.955, -41.2571, 0.22", "17.6102, -454.369, -40.9894, 0.88", "18.6901, -456.619, -39.265, 0.22" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "26.0433, -351.34, -78.989, 0.29", "26.5142, -352.012, -80.0515, 0.29", "27.2689, -353.085, -81.4686, 0.59", "27.5799, -353.538, -81.9995, 1.11", "27.8542, -353.93, -82.4284, 1.33", "28.1803, -354.362, -82.9065, 1.33", "28.2096, -354.398, -82.9458, 1.33", "28.5835, -354.868, -83.342, 0.88", "29.3495, -355.762, -83.9765, 0.37", "29.5206, -355.974, -84.1388, 0.37", "29.8749, -356.46, -84.4905, 0.37", "30.3901, -357.196, -84.9782, 0.88", "30.6076, -357.526, -85.1691, 1.62", "30.7786, -357.802, -85.3128, 1.62", "31.3459, -358.764, -85.7188, 0.37", "31.6639, -359.313, -85.9439, 0.29", "31.9566, -359.85, -86.1464, 0.96", "32.2535, -360.416, -86.3714, 0.96", "32.4496, -360.834, -86.602, 1.33", "32.6043, -361.187, -86.8335, 1.11", "32.935, -361.993, -87.4029, 0.37", "33.084, -362.543, -87.8828, 1.11", "33.1563, -363.048, -88.3615, 1.11", "33.2267, -364.6, -89.8914, 0.66", "33.2259, -364.639, -89.9299, 0.66", "33.1689, -365.294, -90.5496, 0.88", "32.9337, -366.8, -91.9302, 0.29", "32.8811, -367.095, -92.2008, 1.25", "32.8369, -367.398, -92.4516, 1.55", "32.8095, -367.796, -92.7454, 1.25", "32.8368, -368.445, -93.2342, 0.88", "32.8458, -368.487, -93.2672, 0.88", "33.3003, -369.411, -93.9936, 0.37", "33.603, -369.871, -94.4072, 0.37", "34.0616, -370.434, -94.9718, 1.33", "34.3883, -370.767, -95.3301, 1.47", "34.9762, -371.266, -95.8573, 0.52", "35.3999, -371.593, -96.2039, 0.22", "35.5637, -371.703, -96.3145, 0.22", "35.9062, -371.91, -96.5308, 1.18", "36.271, -372.119, -96.7395, 1.47", "36.8832, -372.459, -97.109, 1.62", "37.8885, -372.979, -97.6932, 0.74", "38.5701, -373.323, -98.1016, 0.22", "38.9846, -373.535, -98.4295, 0.22", "39.0242, -373.558, -98.4691, 0.22", "39.3985, -373.797, -98.8994, 1.25", "39.7861, -374.089, -99.3931, 1.47", "39.8223, -374.12, -99.4403, 1.47", "41.0229, -375.316, -101.132, 0.22", "41.4516, -375.786, -101.726, 0.22", "41.8662, -376.252, -102.23, 0.22", "42.1778, -376.625, -102.568, 0.81", "42.3905, -376.888, -102.772, 1.03", "42.4606, -376.97, -102.822, 1.03", "42.8494, -377.366, -102.939, 1.03", "43.4004, -377.859, -103.078, 0.59", "43.4422, -377.892, -103.089, 0.59", "44.2338, -378.396, -103.297, 0.22", "44.2814, -378.419, -103.31, 0.22", "44.9386, -378.59, -103.519, 0.22", "44.9854, -378.598, -103.535, 0.22", "45.5832, -378.685, -103.739, 0.96", "45.8496, -378.725, -103.824, 1.33", "46.372, -378.812, -103.972, 1.33", "47.421, -379.043, -104.262, 0.22", "48.2392, -379.253, -104.483, 0.22", "48.8415, -379.43, -104.637, 0.29", "48.883, -379.444, -104.647, 0.29", "49.5303, -379.689, -104.787, 0.29", "50.2017, -379.988, -104.912, 0.29", "50.5319, -380.143, -104.959, 1.03", "50.8951, -380.317, -105.011, 1.25", "51.4403, -380.58, -105.11, 0.96", "52.0499, -380.892, -105.239, 0.29", "52.8882, -381.347, -105.458, 0.29", "53.5132, -381.714, -105.643, 0.88", "53.9287, -381.984, -105.776, 1.18", "54.4505, -382.343, -105.95, 1.11", "55.133, -382.814, -106.18, 0.44", "55.6295, -383.173, -106.347, 0.66", "56.0397, -383.481, -106.487, 0.81", "56.5855, -383.933, -106.661, 0.52", "57.0836, -384.375, -106.799, 0.22", "57.3485, -384.633, -106.851, 0.52", "57.7677, -385.059, -106.938, 0.22", "57.8442, -385.139, -106.958, 0.22", "58.1857, -385.493, -107.076, 0.22", "58.2955, -385.612, -107.119, 0.22", "58.813, -386.252, -107.34, 0.22", "59.1936, -386.72, -107.499, 1.33", "59.6901, -387.305, -107.695, 1.47", "60.0301, -387.714, -107.826, 1.47", "60.6492, -388.476, -108.06, 0.22", "61.2316, -389.191, -108.286, 0.22", "61.647, -389.699, -108.444, 0.22", "62.0761, -390.212, -108.589, 0.88", "62.2633, -390.423, -108.647, 1.18", "62.3785, -390.538, -108.695, 1.18", "63.0766, -391.148, -109.053, 0.22", "63.3949, -391.412, -109.237, 0.96", "63.8166, -391.78, -109.511, 1.25", "63.8647, -391.822, -109.544, 1.25", "64.8922, -392.717, -110.268, 0.22", "64.9382, -392.758, -110.301, 0.22", "65.2308, -393.033, -110.517, 0.22", "65.2642, -393.062, -110.541, 0.22", "65.6687, -393.383, -110.8, 0.59", "65.7574, -393.454, -110.867, 0.59", "65.8836, -393.565, -110.969, 0.59", "65.9129, -393.592, -110.995, 0.59", "66.2145, -393.925, -111.323, 0.15", "66.4427, -394.208, -111.598, 1.33", "67.1674, -395.155, -112.525, 1.25", "67.4583, -395.55, -112.887, 0.88", "67.4863, -395.59, -112.923, 0.88", "67.9335, -396.391, -113.666, 0.22", "67.9692, -396.469, -113.74, 0.22", "68.272, -397.16, -114.434, 0.88", "68.6093, -397.893, -115.165, 0.22", "68.8214, -398.292, -115.605, 1.18", "69.416, -399.163, -116.803, 0.74", "69.4352, -399.186, -116.841, 0.74", "69.9013, -399.638, -117.743, 0.59", "70.2663, -399.895, -118.414, 1.03", "70.676, -400.066, -119.074, 1.03", "71.7199, -400.308, -120.454, 0.22", "71.7567, -400.311, -120.493, 0.22", "71.9421, -400.312, -120.684, 0.44", "72.1526, -400.299, -120.886, 0.44", "72.3833, -400.296, -121.091, 0.44", "72.4227, -400.307, -121.12, 0.44", "72.9573, -400.542, -121.441, 0.22", "73.0072, -400.56, -121.477, 0.22", "73.5996, -400.732, -121.928, 1.03", "73.9446, -400.81, -122.192, 1.4", "75.2117, -401.024, -123.155, 0.22", "75.4011, -401.045, -123.293, 0.66", "76.4769, -401.114, -124.047, 0.22", "76.8134, -401.112, -124.269, 0.88", "77.1971, -401.085, -124.492, 1.03", "77.2732, -401.078, -124.529, 1.03", "77.6121, -401.052, -124.663, 1.03", "77.6613, -401.052, -124.684, 1.03", "78.4147, -401.132, -125.005, 0.29", "79.1395, -401.297, -125.501, 0.29", "79.179, -401.31, -125.535, 0.29", "80.0926, -401.641, -126.384, 0.29", "80.5283, -401.805, -126.81, 0.88", "81.0409, -401.999, -127.32, 1.18", "82.5094, -402.597, -128.868, 0.22", "82.7922, -402.719, -129.162, 0.81", "83.4017, -402.994, -129.742, 0.59", "83.715, -403.16, -129.992, 0.81", "84.0848, -403.345, -130.218, 1.18", "84.1364, -403.369, -130.239, 1.18", "84.6274, -403.574, -130.336, 0.81", "84.6693, -403.597, -130.352, 0.81", "85.2381, -404.026, -130.671, 0.22", "85.5014, -404.234, -130.885, 0.44", "85.6158, -404.319, -130.988, 0.44", "86.208, -404.736, -131.549, 0.29", "86.8019, -405.161, -132.186, 1.33", "87.0651, -405.354, -132.478, 1.47", "87.9608, -406.015, -133.519, 0.29", "88.2904, -406.269, -133.921, 0.29", "88.3194, -406.292, -133.956, 0.29", "89.2568, -406.982, -135.035, 1.25", "89.5766, -407.21, -135.398, 1.25", "89.6193, -407.24, -135.446, 1.25", "90.1261, -407.593, -136.016, 1.03", "90.4143, -407.804, -136.367, 0.66", "91.2345, -408.391, -137.336, 0.29", "91.2738, -408.417, -137.379, 0.29", "91.7305, -408.729, -137.851, 0.29", "92.3193, -409.133, -138.398, 0.22", "92.878, -409.52, -138.858, 0.81", "93.2919, -409.815, -139.179, 0.88", "93.8926, -410.242, -139.572, 0.74", "94.5304, -410.661, -139.927, 0.22", "94.9209, -410.87, -140.087, 0.88", "95.2069, -410.987, -140.165, 1.11", "95.2573, -411.003, -140.175, 1.11", "95.7327, -411.127, -140.256, 0.88", "96.7162, -411.342, -140.385, 0.29", "98.0105, -411.599, -140.529, 0.29", "98.0935, -411.614, -140.539, 0.29", "98.4786, -411.668, -140.596, 0.52", "99.1304, -411.741, -140.706, 0.22", "99.6652, -411.79, -140.807, 1.03", "100.23, -411.833, -140.924, 1.11", "101.495, -411.968, -141.197, 0.22", "102.443, -412.088, -141.42, 0.22", "102.732, -412.127, -141.494, 1.03", "102.943, -412.16, -141.55, 1.03", "102.999, -412.17, -141.57, 1.03", "104.018, -412.425, -142.062, 0.22", "104.686, -412.657, -142.459, 0.74", "104.729, -412.674, -142.487, 0.74", "105.202, -412.865, -142.848, 0.74", "106.212, -413.265, -143.668, 0.22", "106.869, -413.514, -144.225, 1.33", "107.212, -413.646, -144.519, 1.33", "107.253, -413.664, -144.55, 1.33", "108.482, -414.258, -145.426, 0.22", "108.787, -414.418, -145.627, 0.81", "109.052, -414.56, -145.768, 0.81", "109.731, -414.943, -146.116, 0.22", "110.518, -415.44, -146.559, 0.22", "110.934, -415.73, -146.799, 0.74", "110.985, -415.766, -146.817, 0.74", "111.192, -415.898, -146.86, 0.74", "112.313, -416.56, -146.97, 0.22", "112.96, -416.9, -146.837, 0.88", "113.301, -417.068, -146.676, 1.18", "115.105, -417.918, -145.592, 0.22", "115.394, -418.048, -145.393, 0.88", "115.507, -418.094, -145.304, 0.88", "116.949, -418.653, -144.055, 0.22", "117.691, -418.942, -143.397, 0.88", "117.847, -419.004, -143.27, 0.88", "117.899, -419.026, -143.234, 0.88", "118.677, -419.343, -142.768, 0.22", "119.306, -419.564, -142.485, 0.22", "119.371, -419.58, -142.467, 0.22", "120.253, -419.775, -142.237, 0.74", "120.355, -419.798, -142.213, 0.74", "120.919, -419.912, -142.076, 0.96", "121.393, -419.99, -141.963, 1.11", "122.979, -420.129, -141.56, 0.22", "123.402, -420.149, -141.45, 0.52", "124.379, -420.127, -141.203, 0.22", "125.009, -420.075, -141.043, 0.74", "125.381, -420.011, -140.957, 0.74", "126.389, -419.778, -140.717, 0.22", "126.488, -419.747, -140.695, 0.22", "127.263, -419.453, -140.515, 0.22", "127.362, -419.411, -140.491, 0.22", "128.225, -419.068, -140.3, 0.96", "129.536, -418.616, -140.015, 0.22", "129.648, -418.584, -139.993, 0.22", "130.264, -418.422, -139.884, 1.25", "130.312, -418.411, -139.877, 1.25", "131.042, -418.22, -139.787, 0.37", "131.528, -418.076, -139.752, 0.29", "132.006, -417.949, -139.741, 0.66", "132.53, -417.848, -139.718, 0.81", "132.796, -417.831, -139.698, 0.81", "133.282, -417.844, -139.622, 0.81", "133.334, -417.848, -139.608, 0.81", "134.55, -417.983, -139.185, 0.15", "135.051, -418.042, -138.993, 0.37", "136.088, -418.188, -138.542, 0.22", "137.169, -418.356, -138.037, 1.03", "137.855, -418.467, -137.689, 0.81", "137.902, -418.475, -137.664, 0.81", "138.719, -418.621, -137.218, 0.22", "139.697, -418.821, -136.716, 0.22", "139.737, -418.83, -136.698, 0.22", "140.325, -418.961, -136.51, 1.11", "140.905, -419.101, -136.369, 1.4", "140.956, -419.111, -136.355, 1.4", "141.99, -419.27, -136.042, 0.29", "142.092, -419.266, -136.01, 0.29", "142.688, -419.162, -135.765, 0.22", "142.74, -419.147, -135.74, 0.22", "143.752, -418.736, -135.217, 0.22", "143.789, -418.719, -135.197, 0.22", "144.341, -418.421, -134.894, 1.18", "145.503, -417.814, -134.328, 0.22", "145.562, -417.784, -134.302, 0.22", "146.113, -417.539, -134.118, 0.22", "146.159, -417.521, -134.109, 0.22", "146.792, -417.322, -134.024, 0.74", "147.272, -417.224, -134.003, 0.96", "147.325, -417.216, -134.004, 0.96", "148.471, -417.119, -134.025, 0.22", "148.524, -417.119, -134.027, 0.22", "149.299, -417.119, -134.068, 0.22", "149.778, -417.116, -134.101, 0.74", "149.832, -417.114, -134.106, 0.74", "150.295, -417.053, -134.162, 0.74", "151.378, -416.779, -134.346, 0.22", "151.88, -416.619, -134.439, 0.37", "152.127, -416.518, -134.492, 0.37", "152.172, -416.497, -134.502, 0.37", "152.795, -416.191, -134.643, 0.22", "152.954, -416.101, -134.648, 0.37", "153.05, -416.043, -134.64, 0.37", "153.26, -415.924, -134.581, 0.29", "153.685, -415.641, -134.39, 0.22", "153.953, -415.443, -134.242, 0.66", "154.958, -414.654, -133.629, 0.22", "155.316, -414.355, -133.404, 0.66", "155.898, -413.82, -132.991, 0.96", "156.949, -412.781, -132.073, 0.22", "156.985, -412.745, -132.039, 0.22", "157.334, -412.377, -131.693, 0.22", "157.394, -412.32, -131.622, 0.22", "158.388, -411.426, -130.333, 0.88", "159.326, -410.616, -129.088, 0.22", "159.562, -410.425, -128.748, 1.25", "159.589, -410.404, -128.707, 1.25", "161.103, -409.232, -126.246, 0.22", "161.406, -409.014, -125.733, 0.74", "167.751, -412.173, -128.203, 0.74" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "136.788, -272.337, -7.93576, 0.37", "137.672, -272.834, -7.91828, 0.37", "138.338, -273.236, -7.89912, 0.29", "139.192, -273.8, -7.94148, 0.59", "139.492, -274.016, -8.00249, 0.96", "139.874, -274.321, -8.12973, 1.25", "140.428, -274.817, -8.35465, 1.25", "140.895, -275.313, -8.59825, 1.03", "141.496, -276.082, -8.98428, 0.29", "142.121, -277.015, -9.45642, 0.29", "142.562, -277.742, -9.82919, 0.88", "142.883, -278.324, -10.1312, 0.81", "143.23, -278.948, -10.4629, 0.81", "143.556, -279.482, -10.7391, 1.25", "143.904, -279.98, -10.9725, 1.62", "144.39, -280.628, -11.2396, 1.62", "144.434, -280.679, -11.263, 1.62", "145.286, -281.516, -11.7308, 0.29", "145.725, -281.871, -11.9775, 0.96", "146.035, -282.071, -12.1465, 1.25" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "136.788, -272.337, -7.93576, 0.22", "136.123, -273.42, -7.75071, 0.22", "136.085, -273.488, -7.73751, 0.22", "135.487, -274.619, -7.49799, 0.22", "135.345, -274.908, -7.48235, 0.52", "134.849, -275.96, -7.50091, 0.15", "134.824, -276.026, -7.50642, 0.15", "134.597, -276.896, -7.64738, 0.15", "134.584, -276.964, -7.66377, 0.15", "134.209, -278.942, -8.39302, 0.15", "134.196, -278.999, -8.41792, 0.15", "133.874, -280.309, -9.07461, 0.15", "133.861, -280.362, -9.10205, 0.15", "133.553, -281.549, -9.77588, 0.29", "133.17, -282.912, -10.5311, 0.22", "132.993, -283.421, -10.7847, 0.44" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "33.0661, -252.615, 23.7903, 0.22", "34.1731, -254.059, 23.2371, 0.22", "34.9346, -254.955, 22.8833, 0.37", "35.3831, -255.44, 22.6844, 0.37", "36.2785, -256.257, 22.3171, 0.22", "36.3354, -256.29, 22.2962, 0.22", "36.9628, -256.472, 22.0852, 0.37", "37.0379, -256.443, 22.0674, 0.37", "37.218, -256.341, 22.0195, 0.37", "38.1737, -255.72, 21.7462, 0.22", "39.1057, -255.024, 21.4636, 0.22", "39.1544, -254.989, 21.4484, 0.22", "40.1846, -254.279, 21.112, 0.22", "40.6587, -253.98, 20.9535, 0.37", "40.717, -253.95, 20.9329, 0.37" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "33.0661, -252.615, 23.7903, 0.22", "32.2509, -253.523, 23.601, 0.22", "32.2144, -253.582, 23.5914, 0.22", "31.8134, -254.527, 23.4663, 0.37", "31.6707, -255.064, 23.4037, 0.37", "31.5332, -255.922, 23.3702, 0.22", "31.4783, -256.745, 23.4312, 0.81", "31.525, -257.501, 23.5988, 0.81", "31.6138, -258.176, 23.748, 0.66", "31.771, -258.842, 23.8735, 0.52", "32.0643, -259.73, 24.0003, 0.66", "32.5431, -260.936, 24.1387, 0.29", "33.1236, -262.214, 24.2378, 1.18", "33.7414, -263.463, 24.2849, 0.81", "34.571, -264.971, 24.2661, 0.44", "35.239, -266.072, 24.189, 0.44", "35.5257, -266.503, 24.1277, 1.55", "36.0763, -267.311, 23.9814, 1.84", "36.4918, -267.946, 23.872, 1.62", "37.1105, -268.989, 23.7543, 0.81", "37.5746, -269.936, 23.6731, 0.52", "38.0537, -271.117, 23.5872, 0.44", "38.4489, -272.285, 23.4799, 0.66", "38.764, -273.557, 23.3526, 0.52", "38.8367, -274.035, 23.2825, 0.66", "38.9259, -275.215, 23.0609, 0.44", "38.9434, -276.239, 22.8298, 1.33", "38.9308, -277.451, 22.509, 0.59", "38.9388, -278.343, 22.2462, 0.22", "39.0309, -279.79, 21.886, 0.22", "39.1503, -280.546, 21.7852, 0.22", "39.1723, -280.636, 21.7853, 0.22", "39.4413, -281.434, 21.9065, 1.03", "39.754, -282.214, 22.0783, 1.4", "40.4009, -283.711, 22.4295, 0.88", "40.8526, -284.831, 22.6703, 0.22", "40.8813, -284.92, 22.681, 0.22", "41.0553, -285.551, 22.701, 0.22", "41.3363, -286.817, 22.64, 1.33", "41.4563, -287.366, 22.581, 1.69", "41.7473, -288.486, 22.3989, 1.33", "42.0781, -289.442, 22.2835, 0.52", "42.5216, -290.481, 22.3075, 0.29", "42.5546, -290.551, 22.3184, 0.29", "43.1657, -291.758, 22.6515, 1.03", "43.5548, -292.538, 22.9227, 1.18", "43.9649, -293.415, 23.2968, 1.4", "44.5869, -294.99, 24.0206, 0.29", "44.7322, -295.599, 24.2886, 0.22", "44.737, -295.678, 24.3181, 0.22", "44.6684, -296.363, 24.5151, 0.96", "44.5981, -296.881, 24.6246, 1.33", "44.5143, -297.461, 24.7025, 1.33", "44.3991, -298.592, 24.7881, 0.81", "44.3708, -299.941, 24.8835, 0.29", "44.4665, -300.918, 24.9862, 0.29", "44.7289, -302.183, 25.1518, 0.96", "44.7526, -302.263, 25.1641, 0.96", "44.9357, -302.777, 25.2621, 1.4", "45.2031, -303.408, 25.4108, 1.4", "45.8823, -305.065, 25.8703, 0.37", "46.0307, -305.557, 26.0272, 0.74", "46.0365, -305.639, 26.0513, 0.74", "45.944, -306.509, 26.2129, 0.29", "45.813, -307.034, 26.2557, 0.74", "45.5251, -307.834, 26.2501, 1.11", "45.3122, -308.373, 26.1902, 0.96", "44.9047, -309.92, 25.9555, 0.29", "44.7704, -311.057, 25.7513, 0.59", "44.7976, -311.671, 25.6303, 0.81", "44.8183, -311.797, 25.6077, 0.81", "45.0626, -312.759, 25.4951, 0.37", "45.5171, -314.152, 25.4885, 0.88", "45.8185, -314.91, 25.6069, 1.18", "46.2985, -316.083, 25.9259, 1.18", "46.6716, -316.939, 26.2621, 1.25", "47.1443, -317.873, 26.7947, 0.96", "47.8224, -319.026, 27.665, 0.44", "48.6101, -320.104, 28.6859, 0.37", "48.6624, -320.16, 28.7471, 0.37", "49.4034, -320.806, 29.529, 0.52", "50.5818, -321.765, 30.6427, 0.29", "50.9225, -322.049, 30.9378, 0.66", "51.34, -322.453, 31.2622, 0.66", "51.9162, -323.332, 31.7614, 0.22", "52.1135, -323.844, 31.9922, 0.96", "52.327, -324.972, 32.3833, 0.22", "52.4092, -326.044, 32.7127, 1.03", "52.4219, -326.553, 32.8845, 1.03", "52.3702, -328.269, 33.5141, 0.29", "52.3066, -328.901, 33.7659, 0.22", "52.2643, -329.22, 33.9072, 0.22", "52.1877, -330.066, 34.3259, 0.22", "52.2017, -330.228, 34.3923, 0.22", "52.7437, -330.041, 34.3092, 0.22", "52.8202, -330.016, 34.2977, 0.22" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-142.972, -131.838, -7.29039, 0.22", "-143.369, -131.872, -7.66074, 0.22", "-143.869, -131.876, -8.204, 0.22", "-144.429, -131.88, -8.81141, 0.66", "-144.784, -131.883, -9.19734, 0.66", "-145.25, -131.886, -9.70301, 0.88", "-145.675, -131.89, -10.1639, 1.11", "-146.257, -131.856, -10.8539, 1.4" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-142.972, -131.838, -7.29039, 0.29", "-143.782, -131.3, -7.88749, 0.29", "-144.485, -130.834, -8.40593, 0.22", "-145.119, -130.412, -8.87406, 0.22" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "51.0765, 148.222, 18.8256, 0.22", "53.4501, 148.556, 19.6509, 0.22", "54.6681, 148.727, 20.0745, 0.22", "55.1807, 148.799, 20.2527, 0.52" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "51.0765, 148.222, 18.8256, 0.22", "52.2821, 147.932, 18.5345, 0.22", "52.8235, 147.802, 18.4037, 0.44", "52.8956, 147.784, 18.3863, 0.44", "53.6057, 147.613, 18.2148, 0.29" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "18.9523, 318.811, 76.1268, 0.22", "18.283, 318.958, 76.9209, 0.22", "17.752, 319.079, 77.549, 0.22", "17.0619, 319.249, 78.3693, 0.22", "16.9386, 319.281, 78.5169, 0.22", "16.1681, 319.524, 79.4302, 0.22", "15.3234, 319.915, 80.4418, 0.22", "15.2812, 319.944, 80.4931, 0.22", "14.8853, 320.332, 80.9828, 0.59", "14.841, 320.391, 81.0334, 0.59", "14.5666, 320.886, 81.3393, 0.37", "14.0547, 322.073, 81.8647, 0.22", "13.9534, 322.296, 81.9441, 0.22", "13.6173, 322.845, 82.1112, 0.22", "13.4737, 323.034, 82.1571, 0.22", "13.0873, 323.491, 82.2473, 0.22", "12.4807, 324.13, 82.3076, 0.29", "11.6984, 324.761, 82.3211, 0.29", "10.7795, 325.427, 82.3161, 0.22", "10.6844, 325.486, 82.3127, 0.22", "9.76859, 326.078, 82.2317, 0.22", "9.36024, 326.418, 82.1415, 0.29" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "18.9523, 318.811, 76.1268, 0.15", "19.7368, 318.742, 76.1749, 0.15", "20.3919, 318.684, 76.2151, 0.29" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "201.807, -263.676, 11.2574, 0.22", "200.691, -263.379, 10.8008, 0.22", "199.652, -262.939, 10.3667, 0.22", "198.896, -262.544, 10.0486, 0.22", "198.81, -262.499, 10.0125, 0.22", "198.29, -262.228, 9.79378, 0.22", "197.303, -261.711, 9.37816, 0.44", "197.215, -261.627, 9.34796, 0.44", "197.174, -261.566, 9.33696, 0.44" ],
    "parent" : "dend_100",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "201.807, -263.676, 11.2574, 0.22", "202.758, -265.262, 12.9507, 0.22", "203.215, -265.936, 13.8673, 0.22", "203.976, -266.739, 15.2766, 1.18", "204.461, -267.133, 16.1181, 1.18", "204.506, -267.164, 16.1936, 1.18", "205.953, -268.001, 18.4145, 0.29", "206.667, -268.23, 19.4644, 0.22", "207.616, -268.392, 20.7696, 0.22", "208.004, -268.395, 21.2295, 0.22", "208.057, -268.384, 21.286, 0.22", "208.878, -268.165, 22.0675, 0.22", "209.865, -267.765, 22.7361, 0.22", "209.94, -267.733, 22.7818, 0.22", "210.633, -267.391, 23.202, 0.22", "212.247, -266.363, 24.1716, 0.22" ],
    "parent" : "dend_100",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "18.6901, -456.619, -39.265, 0.66", "18.294, -457.179, -38.4432, 0.66", "18.0564, -457.594, -37.8497, 0.15", "18.0193, -457.664, -37.7608, 0.29", "17.6879, -458.32, -37.0101, 0.59", "17.5403, -458.608, -36.7063, 0.88", "17.2338, -459.431, -35.8357, 0.59", "17.2292, -459.467, -35.7993, 0.59", "17.221, -459.956, -35.3172, 0.22", "17.2276, -460.185, -35.0866, 0.59", "17.2421, -460.404, -34.8587, 0.52", "17.327, -461.771, -33.4092, 0.22", "17.339, -462.583, -32.5965, 1.18", "17.342, -462.772, -32.406, 1.18", "17.3881, -463.925, -31.2588, 0.22", "17.4102, -464.513, -30.6015, 0.66", "17.4086, -464.765, -30.2985, 0.44", "17.3296, -465.337, -29.5612, 0.22", "17.1544, -466.034, -28.5686, 0.59", "17.069, -466.297, -28.1595, 0.81", "16.4462, -467.802, -25.6862, 0.66", "16.1633, -468.416, -24.6748, 0.22", "15.8567, -469.045, -23.6301, 0.88", "15.5326, -469.618, -22.6824, 0.22", "15.2864, -469.97, -22.1289, 0.22", "15.0193, -470.304, -21.6417, 0.74", "14.819, -470.55, -21.3688, 0.88", "14.1786, -471.41, -20.4436, 0.22", "13.9055, -471.864, -19.9908, 0.22", "13.8374, -471.991, -19.873, 0.22", "13.7091, -472.256, -19.6378, 0.22", "13.3974, -472.957, -19.01, 0.88", "13.0479, -473.825, -18.2738, 0.52", "12.765, -474.633, -17.6296, 0.22", "12.6741, -474.95, -17.3738, 0.29", "12.574, -475.342, -17.0649, 0.22", "12.4622, -475.831, -16.6939, 0.81", "12.3589, -476.211, -16.4515, 0.88" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "18.6901, -456.619, -39.265, 0.29", "19.8603, -457.479, -38.7882, 0.29", "19.9437, -457.54, -38.7542, 0.29", "21.2964, -458.534, -38.2031, 0.29", "22.2333, -459.222, -37.8213, 0.44", "32.8249, -466.529, -32.5135, 0.44" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "146.035, -282.071, -12.1465, 0.29", "146.064, -283.004, -11.9213, 0.29", "146.025, -283.509, -11.8045, 0.22", "145.952, -284.164, -11.6586, 0.96", "145.89, -284.582, -11.5944, 1.18", "145.783, -285.241, -11.5623, 1.03", "145.677, -285.951, -11.5731, 0.29", "145.521, -286.834, -11.6469, 0.29", "145.457, -287.403, -11.7479, 0.52", "145.422, -288.455, -12.0223, 0.37", "145.458, -289.515, -12.3661, 0.22", "145.518, -290.118, -12.5827, 1.33", "145.582, -290.464, -12.7024, 1.69", "145.877, -291.63, -13.1252, 0.29", "146.033, -292.137, -13.304, 0.29", "146.056, -292.194, -13.3195, 0.29", "146.404, -292.982, -13.4499, 0.29", "146.797, -293.904, -13.5606, 1.55" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "146.035, -282.071, -12.1465, 0.22", "147.387, -282.173, -11.5514, 0.22", "148.407, -282.35, -11.1245, 0.22", "148.474, -282.368, -11.1006, 0.22", "149.049, -282.549, -10.9719, 0.44", "149.138, -282.581, -10.9696, 0.44", "149.957, -282.889, -11.011, 0.22", "150.034, -282.92, -11.0321, 0.22", "150.503, -283.068, -11.2255, 0.22", "151.347, -283.265, -11.6686, 0.59", "152.691, -283.524, -12.4304, 0.22", "152.774, -283.537, -12.4801, 0.22", "153.987, -283.673, -13.2654, 0.29", "154.63, -283.734, -13.696, 0.29", "155.717, -283.782, -14.4773, 0.22" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "52.8202, -330.016, 34.2977, 1.03", "53.4875, -330.888, 34.9268, 1.03", "54.4857, -332.278, 35.9331, 1.03", "55.3755, -333.55, 36.8033, 0.96", "56.2324, -334.799, 37.6093, 0.59", "56.7382, -335.546, 38.058, 0.59", "57.7157, -336.994, 38.8891, 0.44", "58.5755, -338.245, 39.5328, 0.29", "59.1129, -339.009, 39.8436, 0.29", "59.4432, -339.477, 39.9972, 1.11", "59.9328, -340.157, 40.1893, 1.47", "59.9904, -340.234, 40.2072, 1.47", "61.0682, -341.48, 40.26, 1.11", "62.0277, -342.434, 40.1836, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "52.8202, -330.016, 34.2977, 0.22", "53.5085, -330.438, 33.845, 0.22", "53.9231, -330.659, 33.5846, 0.22", "53.963, -330.681, 33.5595, 0.22", "54.7311, -331.091, 33.077, 0.22", "55.4375, -331.469, 32.6334, 0.22", "56.0409, -331.791, 32.2543, 0.22", "56.4241, -332.0, 32.0361, 0.44" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-146.257, -131.856, -10.8539, 0.22", "-145.7, -131.108, -11.3065, 0.22", "-145.671, -131.07, -11.3294, 0.22", "-145.187, -130.419, -11.723, 0.22" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-146.257, -131.856, -10.8539, 0.29", "-146.837, -132.438, -11.7798, 0.29", "-147.38, -133.069, -12.6426, 0.29", "-147.4, -133.105, -12.7082, 0.29", "-147.53, -133.498, -13.5524, 0.29", "-147.535, -133.568, -13.7754, 0.29", "-147.494, -133.696, -14.3863, 0.29", "-147.433, -133.71, -14.5726, 0.29", "-146.534, -133.447, -16.3177, 0.22", "-146.493, -133.431, -16.3843, 0.22", "-145.919, -133.151, -17.1879, 0.22", "-145.849, -133.109, -17.282, 0.22" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "146.797, -293.904, -13.5606, 1.62", "147.867, -294.433, -14.1888, 1.62", "148.828, -294.936, -14.6363, 1.62", "148.889, -294.971, -14.6597, 1.62", "150.116, -295.764, -14.9264, 0.59", "151.086, -296.442, -14.9877, 0.44", "152.046, -297.177, -14.9573, 0.29", "153.054, -298.094, -14.7944, 0.66", "153.641, -298.68, -14.6141, 0.66", "154.736, -299.851, -14.1514, 0.22", "155.672, -300.968, -13.6367, 0.59", "156.101, -301.522, -13.3543, 1.47", "156.55, -302.122, -13.043, 1.47", "156.605, -302.195, -13.014, 1.47", "157.307, -303.065, -12.7559, 1.47", "158.06, -304.086, -12.6049, 0.59" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "146.797, -293.904, -13.5606, 0.15", "145.773, -294.344, -13.1781, 0.15", "145.69, -294.379, -13.1471, 0.15", "144.781, -294.707, -12.8118, 0.15", "144.032, -294.933, -12.4967, 0.15", "143.914, -294.956, -12.4363, 0.15", "143.171, -295.103, -12.0549, 0.15", "143.116, -295.11, -12.0252, 0.15", "142.226, -295.215, -11.5278, 0.15", "141.114, -295.327, -10.8487, 0.15", "139.793, -295.356, -9.98953, 0.15" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "62.0277, -342.434, 40.1836, 0.37", "61.7249, -343.342, 40.9027, 0.37", "61.5429, -343.905, 41.2797, 0.52", "61.42, -344.303, 41.5058, 0.66", "61.1752, -345.148, 41.934, 0.29", "61.0456, -345.638, 42.1564, 0.59", "60.9449, -346.068, 42.326, 0.52", "60.7947, -346.808, 42.5518, 0.37", "60.6904, -347.51, 42.7384, 0.66", "60.6442, -347.89, 42.8378, 0.96", "60.5739, -348.383, 42.9737, 0.52", "60.4325, -349.29, 43.2531, 0.52", "60.2979, -350.154, 43.508, 1.03", "60.2291, -350.66, 43.646, 1.18", "60.1032, -351.806, 43.9237, 0.66", "59.9695, -352.921, 44.1943, 0.96", "59.9598, -352.993, 44.2118, 0.96", "59.8056, -354.083, 44.4469, 0.29", "59.7207, -354.715, 44.5237, 0.29", "59.708, -355.125, 44.5227, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "62.0277, -342.434, 40.1836, 0.52", "62.7876, -342.916, 40.1858, 0.52", "63.2686, -343.22, 40.1872, 0.52", "64.0554, -343.719, 40.1894, 0.22", "65.1736, -344.427, 40.1926, 0.22", "65.6652, -344.739, 40.194, 0.22" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "158.06, -304.086, -12.6049, 0.29", "159.247, -303.837, -13.0781, 0.29", "159.423, -303.841, -13.1249, 0.29", "160.359, -303.975, -13.3043, 0.22", "160.465, -303.995, -13.3229, 0.22", "162.006, -304.361, -13.6374, 0.22", "163.12, -304.672, -13.9002, 0.22", "164.397, -305.104, -14.2, 0.44", "165.665, -305.583, -14.4998, 0.22", "165.793, -305.632, -14.5127, 0.22", "166.852, -306.005, -14.5037, 0.22", "167.387, -306.193, -14.4788, 0.96", "167.486, -306.221, -14.4719, 0.96", "168.363, -306.45, -14.4007, 1.25", "171.467, -307.104, -14.1599, 0.29", "173.251, -307.365, -14.0552, 0.66", "174.178, -307.409, -14.0085, 0.22", "174.953, -307.429, -13.9691, 0.59", "175.046, -307.43, -13.9667, 0.59", "177.119, -307.305, -14.0779, 0.22", "178.008, -307.053, -14.4105, 0.22", "178.953, -306.58, -14.8952, 0.22" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "158.06, -304.086, -12.6049, 0.22", "158.731, -305.402, -13.432, 0.22", "158.772, -305.521, -13.5148, 0.22", "159.002, -306.475, -14.0938, 0.22", "159.014, -306.545, -14.1287, 0.22", "159.185, -307.608, -14.6579, 0.22", "159.306, -308.352, -15.0281, 0.22", "159.378, -309.608, -15.638, 0.22", "159.378, -310.691, -16.1801, 0.22", "159.222, -311.401, -16.4945, 0.22" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "59.708, -355.125, 44.5227, 0.22", "59.4289, -355.859, 44.7979, 0.22", "59.2673, -356.283, 44.9572, 1.03", "59.0218, -356.929, 45.1992, 0.22", "58.8721, -357.322, 45.3468, 0.96", "58.7643, -357.605, 45.453, 1.33", "58.5174, -358.254, 45.6965, 0.59" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "59.708, -355.125, 44.5227, 0.22", "60.0903, -355.618, 44.0812, 0.22", "60.1533, -355.701, 44.0035, 0.44", "60.3891, -355.967, 43.749, 0.44", "60.9106, -356.515, 43.2216, 0.22", "61.0216, -356.601, 43.1247, 0.22", "61.9678, -357.188, 42.3677, 0.22", "62.0246, -357.221, 42.3214, 0.22", "62.7459, -357.585, 41.7526, 0.22", "62.8365, -357.62, 41.6862, 0.22", "63.962, -357.876, 40.9983, 0.22", "64.1964, -357.902, 40.8728, 0.22" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "58.5174, -358.254, 45.6965, 0.29", "58.8227, -358.886, 46.2057, 0.29", "59.1179, -359.528, 46.7596, 0.66", "59.2784, -359.924, 47.0962, 0.81", "59.2948, -359.969, 47.1302, 0.81", "59.5861, -360.76, 47.6685, 0.44", "59.843, -361.454, 48.1046, 1.11", "60.0742, -362.065, 48.4612, 0.88", "60.3984, -362.922, 48.8928, 0.29", "60.7051, -363.647, 49.2054, 0.29", "60.9796, -364.139, 49.3767, 0.29", "61.0805, -364.296, 49.4136, 0.29", "61.4546, -364.787, 49.4675, 0.22", "61.4865, -364.821, 49.4661, 0.22", "61.9114, -365.126, 49.4007, 0.22", "62.8126, -365.542, 49.2972, 0.22" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "58.5174, -358.254, 45.6965, 0.22", "57.2002, -358.472, 46.0019, 0.22", "56.4085, -358.66, 46.1127, 0.22", "55.6574, -358.88, 46.1678, 0.22", "55.5118, -358.929, 46.172, 0.22", "54.9262, -359.153, 46.1566, 0.22", "53.8786, -359.501, 46.1907, 0.22", "54.3216, -359.911, 45.6417, 0.22", "54.3703, -359.954, 45.5851, 0.22", "55.0698, -360.501, 44.8493, 0.22", "55.1038, -360.524, 44.8186, 0.22", "55.7854, -360.903, 44.3145, 0.22", "56.2544, -361.088, 44.0718, 0.37", "56.3112, -361.102, 44.0441, 0.37" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_106", "dend_37", "dend_0", "dend_110", "dend_107", "dend_53", "dend_38", "dend_22", "dend_1", "dend_109", "dend_108", "dend_65", "dend_54", "dend_42", "dend_39", "dend_36", "dend_23", "dend_13", "dend_2", "dend_95", "dend_66", "dend_60", "dend_55", "dend_44", "dend_43", "dend_41", "dend_40", "dend_25", "dend_24", "dend_19", "dend_14", "dend_8", "dend_3", "dend_103", "dend_96", "dend_88", "dend_67", "dend_62", "dend_61", "dend_57", "dend_56", "dend_46", "dend_45", "dend_29", "dend_26", "dend_21", "dend_20", "dend_16", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_105", "dend_104", "dend_98", "dend_97", "dend_94", "dend_89", "dend_79", "dend_68", "dend_64", "dend_63", "dend_59", "dend_58", "dend_52", "dend_47", "dend_33", "dend_30", "dend_28", "dend_27", "dend_18", "dend_17", "dend_12", "dend_11", "dend_6", "dend_5", "dend_100", "dend_99", "dend_91", "dend_90", "dend_81", "dend_80", "dend_78", "dend_69", "dend_49", "dend_48", "dend_35", "dend_34", "dend_32", "dend_31", "dend_102", "dend_101", "dend_93", "dend_92", "dend_83", "dend_82", "dend_71", "dend_70", "dend_51", "dend_50", "dend_85", "dend_84", "dend_73", "dend_72", "dend_87", "dend_86", "dend_75", "dend_74", "dend_77", "dend_76" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_106", "dend_37", "dend_0", "dend_110", "dend_107", "dend_53", "dend_38", "dend_22", "dend_1", "dend_109", "dend_108", "dend_65", "dend_54", "dend_42", "dend_39", "dend_36", "dend_23", "dend_13", "dend_2", "dend_95", "dend_66", "dend_60", "dend_55", "dend_44", "dend_43", "dend_41", "dend_40", "dend_25", "dend_24", "dend_19", "dend_14", "dend_8", "dend_3", "dend_103", "dend_96", "dend_88", "dend_67", "dend_62", "dend_61", "dend_57", "dend_56", "dend_46", "dend_45", "dend_29", "dend_26", "dend_21", "dend_20", "dend_16", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_105", "dend_104", "dend_98", "dend_97", "dend_94", "dend_89", "dend_79", "dend_68", "dend_64", "dend_63", "dend_59", "dend_58", "dend_52", "dend_47", "dend_33", "dend_30", "dend_28", "dend_27", "dend_18", "dend_17", "dend_12", "dend_11", "dend_6", "dend_5", "dend_100", "dend_99", "dend_91", "dend_90", "dend_81", "dend_80", "dend_78", "dend_69", "dend_49", "dend_48", "dend_35", "dend_34", "dend_32", "dend_31", "dend_102", "dend_101", "dend_93", "dend_92", "dend_83", "dend_82", "dend_71", "dend_70", "dend_51", "dend_50", "dend_85", "dend_84", "dend_73", "dend_72", "dend_87", "dend_86", "dend_75", "dend_74", "dend_77", "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_110" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_107" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_108" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_105" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_106" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_109" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_110",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_111",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_112",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_114",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_109",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_113",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104", "dend_105", "dend_106", "dend_107", "dend_108", "dend_109", "dend_110" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_65", "dend_65", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L5_SBC_80f2f8b43e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_106, id: dend_106, parent: soma_0
create dend_106
public dend_106
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_110, id: dend_110, parent: dend_106
create dend_110
public dend_110
// Section: dend_107, id: dend_107, parent: dend_106
create dend_107
public dend_107
// Section: dend_53, id: dend_53, parent: dend_37
create dend_53
public dend_53
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_22, id: dend_22, parent: dend_0
create dend_22
public dend_22
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_109, id: dend_109, parent: dend_107
create dend_109
public dend_109
// Section: dend_108, id: dend_108, parent: dend_107
create dend_108
public dend_108
// Section: dend_65, id: dend_65, parent: dend_53
create dend_65
public dend_65
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_22
create dend_36
public dend_36
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_13, id: dend_13, parent: dend_1
create dend_13
public dend_13
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_95, id: dend_95, parent: dend_65
create dend_95
public dend_95
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_60, id: dend_60, parent: dend_54
create dend_60
public dend_60
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_103, id: dend_103, parent: dend_95
create dend_103
public dend_103
// Section: dend_96, id: dend_96, parent: dend_95
create dend_96
public dend_96
// Section: dend_88, id: dend_88, parent: dend_66
create dend_88
public dend_88
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_105, id: dend_105, parent: dend_103
create dend_105
public dend_105
// Section: dend_104, id: dend_104, parent: dend_103
create dend_104
public dend_104
// Section: dend_98, id: dend_98, parent: dend_96
create dend_98
public dend_98
// Section: dend_97, id: dend_97, parent: dend_96
create dend_97
public dend_97
// Section: dend_94, id: dend_94, parent: dend_88
create dend_94
public dend_94
// Section: dend_89, id: dend_89, parent: dend_88
create dend_89
public dend_89
// Section: dend_79, id: dend_79, parent: dend_67
create dend_79
public dend_79
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_52, id: dend_52, parent: dend_46
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_100, id: dend_100, parent: dend_98
create dend_100
public dend_100
// Section: dend_99, id: dend_99, parent: dend_98
create dend_99
public dend_99
// Section: dend_91, id: dend_91, parent: dend_89
create dend_91
public dend_91
// Section: dend_90, id: dend_90, parent: dend_89
create dend_90
public dend_90
// Section: dend_81, id: dend_81, parent: dend_79
create dend_81
public dend_81
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_78, id: dend_78, parent: dend_68
create dend_78
public dend_78
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_102, id: dend_102, parent: dend_100
create dend_102
public dend_102
// Section: dend_101, id: dend_101, parent: dend_100
create dend_101
public dend_101
// Section: dend_93, id: dend_93, parent: dend_91
create dend_93
public dend_93
// Section: dend_92, id: dend_92, parent: dend_91
create dend_92
public dend_92
// Section: dend_83, id: dend_83, parent: dend_81
create dend_83
public dend_83
// Section: dend_82, id: dend_82, parent: dend_81
create dend_82
public dend_82
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_85, id: dend_85, parent: dend_83
create dend_85
public dend_85
// Section: dend_84, id: dend_84, parent: dend_83
create dend_84
public dend_84
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_106, dend_37, dend_0, dend_110, dend_107, dend_53, dend_38, dend_22, dend_1, dend_109, dend_108, dend_65, dend_54, dend_42, dend_39, dend_36, dend_23, dend_13, dend_2, dend_95, dend_66, dend_60, dend_55, dend_44, dend_43, dend_41, dend_40, dend_25, dend_24, dend_19, dend_14, dend_8, dend_3, dend_103, dend_96, dend_88, dend_67, dend_62, dend_61, dend_57, dend_56, dend_46, dend_45, dend_29, dend_26, dend_21, dend_20, dend_16, dend_15, dend_10, dend_9, dend_7, dend_4, dend_105, dend_104, dend_98, dend_97, dend_94, dend_89, dend_79, dend_68, dend_64, dend_63, dend_59, dend_58, dend_52, dend_47, dend_33, dend_30, dend_28, dend_27, dend_18, dend_17, dend_12, dend_11, dend_6, dend_5, dend_100, dend_99, dend_91, dend_90, dend_81, dend_80, dend_78, dend_69, dend_49, dend_48, dend_35, dend_34, dend_32, dend_31, dend_102, dend_101, dend_93, dend_92, dend_83, dend_82, dend_71, dend_70, dend_51, dend_50, dend_85, dend_84, dend_73, dend_72, dend_87, dend_86, dend_75, dend_74, dend_77, dend_76]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_106, dend_37, dend_0, dend_110, dend_107, dend_53, dend_38, dend_22, dend_1, dend_109, dend_108, dend_65, dend_54, dend_42, dend_39, dend_36, dend_23, dend_13, dend_2, dend_95, dend_66, dend_60, dend_55, dend_44, dend_43, dend_41, dend_40, dend_25, dend_24, dend_19, dend_14, dend_8, dend_3, dend_103, dend_96, dend_88, dend_67, dend_62, dend_61, dend_57, dend_56, dend_46, dend_45, dend_29, dend_26, dend_21, dend_20, dend_16, dend_15, dend_10, dend_9, dend_7, dend_4, dend_105, dend_104, dend_98, dend_97, dend_94, dend_89, dend_79, dend_68, dend_64, dend_63, dend_59, dend_58, dend_52, dend_47, dend_33, dend_30, dend_28, dend_27, dend_18, dend_17, dend_12, dend_11, dend_6, dend_5, dend_100, dend_99, dend_91, dend_90, dend_81, dend_80, dend_78, dend_69, dend_49, dend_48, dend_35, dend_34, dend_32, dend_31, dend_102, dend_101, dend_93, dend_92, dend_83, dend_82, dend_71, dend_70, dend_51, dend_50, dend_85, dend_84, dend_73, dend_72, dend_87, dend_86, dend_75, dend_74, dend_77, dend_76]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_110]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_107]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_108]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_105]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_106]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_109]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_110
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_107
// Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_111
// Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_112
// Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_114
// Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_109
// Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_113
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_97
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_65, dend_65, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_92, dend_92, dend_92, dend_92, dend_92, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_106(0), soma_0(0.4500001888841101)
    connect dend_37(0), soma_0(0.4500001888841101)
    connect dend_0(0), soma_0(0.4500001888841101)
    connect axon_0(0), soma_0(1.0)
    connect dend_110(0), dend_106(1.0)
    connect dend_107(0), dend_106(1.0)
    connect dend_53(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_22(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_109(0), dend_107(1.0)
    connect dend_108(0), dend_107(1.0)
    connect dend_65(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_36(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_13(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_95(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_60(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_103(0), dend_95(1.0)
    connect dend_96(0), dend_95(1.0)
    connect dend_88(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_105(0), dend_103(1.0)
    connect dend_104(0), dend_103(1.0)
    connect dend_98(0), dend_96(1.0)
    connect dend_97(0), dend_96(1.0)
    connect dend_94(0), dend_88(1.0)
    connect dend_89(0), dend_88(1.0)
    connect dend_79(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_52(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_100(0), dend_98(1.0)
    connect dend_99(0), dend_98(1.0)
    connect dend_91(0), dend_89(1.0)
    connect dend_90(0), dend_89(1.0)
    connect dend_81(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_78(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_102(0), dend_100(1.0)
    connect dend_101(0), dend_100(1.0)
    connect dend_93(0), dend_91(1.0)
    connect dend_92(0), dend_91(1.0)
    connect dend_83(0), dend_81(1.0)
    connect dend_82(0), dend_81(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_85(0), dend_83(1.0)
    connect dend_84(0), dend_83(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.23899, -15.0556, -0.519658, 3.66989 ) }
    soma_0 { pt3dadd( -1.17536, -13.7023, -0.469772, 6.06288 ) }
    soma_0 { pt3dadd( -1.11173, -12.349, -0.419887, 7.06144 ) }
    soma_0 { pt3dadd( -1.0481, -10.9958, -0.370002, 7.9923 ) }
    soma_0 { pt3dadd( -0.984469, -9.64252, -0.320117, 9.33711 ) }
    soma_0 { pt3dadd( -0.920839, -8.28926, -0.270232, 10.6845 ) }
    soma_0 { pt3dadd( -0.85721, -6.936, -0.220347, 11.7558 ) }
    soma_0 { pt3dadd( -0.793581, -5.58274, -0.170462, 12.5063 ) }
    soma_0 { pt3dadd( -0.729952, -4.22947, -0.120577, 13.1759 ) }
    soma_0 { pt3dadd( -0.666322, -2.87621, -0.0706922, 13.3814 ) }
    soma_0 { pt3dadd( -0.602693, -1.52295, -0.0208072, 13.1588 ) }
    soma_0 { pt3dadd( -0.539064, -0.169689, 0.0290779, 13.1475 ) }
    soma_0 { pt3dadd( -0.475434, 1.18357, 0.0789629, 12.911 ) }
    soma_0 { pt3dadd( -0.411805, 2.53683, 0.128848, 12.361 ) }
    soma_0 { pt3dadd( -0.348176, 3.8901, 0.178733, 11.3572 ) }
    soma_0 { pt3dadd( -0.284546, 5.24336, 0.228618, 10.1252 ) }
    soma_0 { pt3dadd( -0.220917, 6.59662, 0.278503, 9.00977 ) }
    soma_0 { pt3dadd( -0.157288, 7.94988, 0.328388, 8.0324 ) }
    soma_0 { pt3dadd( -0.0936586, 9.30314, 0.378273, 7.2911 ) }
    soma_0 { pt3dadd( -0.0300293, 10.6564, 0.428158, 4.83974 ) }
    soma_0 { pt3dadd( 0.0336, 12.0097, 0.478043, 3.67414 ) }
    // Section: dend_106, id: dend_106, parent: soma_0 (entry count 21/100)
    dend_106 { pt3dclear() }
    dend_106 { pt3dadd( 3.4463, 9.94914, 0.091561, 1.47 ) }
    dend_106 { pt3dadd( 3.4463, 9.94914, 0.091561, 1.47 ) }
    dend_106 { pt3dadd( 3.80177, 10.5741, 0.193989, 0.81 ) }
    dend_106 { pt3dadd( 4.19355, 11.4298, 0.325194, 0.59 ) }
    dend_106 { pt3dadd( 4.53323, 12.2676, 0.449154, 0.88 ) }
    dend_106 { pt3dadd( 4.74962, 12.8741, 0.554971, 1.11 ) }
    dend_106 { pt3dadd( 4.98821, 13.6448, 0.727059, 1.33 ) }
    dend_106 { pt3dadd( 5.00481, 13.7173, 0.75136, 1.33 ) }
    dend_106 { pt3dadd( 5.15804, 14.6686, 1.09808, 1.11 ) }
    dend_106 { pt3dadd( 5.16571, 14.7393, 1.12673, 1.11 ) }
    dend_106 { pt3dadd( 5.25124, 15.5441, 1.49229, 1.25 ) }
    dend_106 { pt3dadd( 5.38198, 16.6147, 2.00562, 1.55 ) }
    dend_106 { pt3dadd( 5.58017, 18.0373, 2.80749, 1.55 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 34/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -2.0737, -15.1354, -0.098439, 4.79 ) }
    dend_37 { pt3dadd( -2.0737, -15.1354, -0.098439, 4.79 ) }
    dend_37 { pt3dadd( -2.06032, -17.3176, 0.39946, 3.83 ) }
    dend_37 { pt3dadd( -1.97458, -19.8175, 0.976184, 3.32 ) }
    dend_37 { pt3dadd( -1.90325, -21.897, 1.45591, 2.65 ) }
    dend_37 { pt3dadd( -1.82884, -24.0662, 1.95635, 2.95 ) }
    dend_37 { pt3dadd( -1.76355, -25.9697, 2.39549, 3.39 ) }
    dend_37 { pt3dadd( -1.6593, -27.9739, 2.87982, 3.76 ) }
    dend_37 { pt3dadd( -1.59485, -28.6232, 3.0556, 3.76 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 43/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.0537, 11.9756, 1.47156, 3.02 ) }
    dend_0 { pt3dadd( -1.12031, 12.506, 1.74225, 3.02 ) }
    dend_0 { pt3dadd( -1.18696, 13.1718, 2.04514, 3.02 ) }
    dend_0 { pt3dadd( -1.27934, 14.0946, 2.46494, 2.95 ) }
    dend_0 { pt3dadd( -1.36654, 14.9657, 2.86124, 2.8 ) }
    dend_0 { pt3dadd( -1.45756, 15.8749, 3.27487, 2.8 ) }
    dend_0 { pt3dadd( -1.53241, 16.6226, 3.61501, 3.24 ) }
    dend_0 { pt3dadd( -1.66549, 18.0642, 4.31678, 3.24 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 51/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.0336, 12.0097, 0.478043, 0.514021 ) }
    axon_0 { pt3dadd( 0.73811, 26.9931, 0.478043, 0.514021 ) }
    axon_0 { pt3dadd( 1.44262, 41.9766, 0.478043, 0.514021 ) }
    // Section: dend_110, id: dend_110, parent: dend_106 (entry count 54/100)
    dend_110 { pt3dclear() }
    dend_110 { pt3dadd( 5.58017, 18.0373, 2.80749, 0.66 ) }
    dend_110 { pt3dadd( 5.29006, 19.9175, -0.757699, 0.66 ) }
    dend_110 { pt3dadd( 5.36853, 20.5452, -1.77366, 0.29 ) }
    dend_110 { pt3dadd( 5.43061, 20.6343, -1.82974, 0.29 ) }
    dend_110 { pt3dadd( 6.17273, 21.2731, -1.35965, 0.29 ) }
    dend_110 { pt3dadd( 6.62238, 21.7415, -1.08016, 0.59 ) }
    dend_110 { pt3dadd( 6.76623, 21.9015, -0.990172, 0.59 ) }
    dend_110 { pt3dadd( 7.30204, 22.5073, -0.625938, 0.59 ) }
    dend_110 { pt3dadd( 8.67044, 23.9303, 0.17271, 0.29 ) }
    dend_110 { pt3dadd( 9.48049, 24.7244, 0.550775, 0.88 ) }
    dend_110 { pt3dadd( 10.2454, 25.4277, 0.830804, 1.11 ) }
    dend_110 { pt3dadd( 10.3173, 25.4909, 0.851474, 1.11 ) }
    dend_110 { pt3dadd( 11.9945, 26.8905, 1.03406, 0.37 ) }
    dend_110 { pt3dadd( 13.4012, 28.0163, 0.986574, 0.37 ) }
    dend_110 { pt3dadd( 14.6175, 28.9667, 0.740748, 0.88 ) }
    dend_110 { pt3dadd( 15.6304, 29.7436, 0.45305, 0.88 ) }
    dend_110 { pt3dadd( 15.7851, 29.8694, 0.397716, 0.88 ) }
    dend_110 { pt3dadd( 17.7687, 31.6271, -0.455599, 0.29 ) }
    dend_110 { pt3dadd( 17.8402, 31.7008, -0.494302, 0.29 ) }
    dend_110 { pt3dadd( 19.0353, 33.2382, -1.29065, 0.88 ) }
    dend_110 { pt3dadd( 19.0845, 33.3133, -1.32737, 0.88 ) }
    dend_110 { pt3dadd( 20.0822, 34.9547, -2.09203, 0.88 ) }
    dend_110 { pt3dadd( 20.214, 35.158, -2.18794, 0.88 ) }
    dend_110 { pt3dadd( 20.9191, 36.1633, -2.67016, 1.03 ) }
    dend_110 { pt3dadd( 21.8366, 37.3015, -3.29365, 0.29 ) }
    dend_110 { pt3dadd( 21.9088, 37.3799, -3.34198, 0.29 ) }
    dend_110 { pt3dadd( 22.613, 38.0888, -3.79387, 0.29 ) }
    dend_110 { pt3dadd( 23.6065, 38.9799, -4.40684, 0.88 ) }
    dend_110 { pt3dadd( 24.5061, 39.7707, -4.91196, 0.29 ) }
    dend_110 { pt3dadd( 24.5763, 39.8302, -4.94749, 0.29 ) }
    dend_110 { pt3dadd( 25.3927, 40.6042, -5.23297, 0.44 ) }
    dend_110 { pt3dadd( 25.8852, 41.1582, -5.35878, 0.59 ) }
    dend_110 { pt3dadd( 25.943, 41.2385, -5.3646, 0.59 ) }
    dend_110 { pt3dadd( 26.6156, 42.4089, -5.31212, 0.44 ) }
    dend_110 { pt3dadd( 26.6623, 42.4885, -5.30471, 0.44 ) }
    dend_110 { pt3dadd( 27.3839, 43.6845, -5.18647, 0.96 ) }
    dend_110 { pt3dadd( 27.6557, 44.0845, -5.15121, 1.11 ) }
    dend_110 { pt3dadd( 28.4419, 45.0272, -5.1258, 0.81 ) }
    dend_110 { pt3dadd( 29.8334, 46.3585, -5.18461, 0.29 ) }
    dend_110 { pt3dadd( 30.8511, 47.1264, -5.28363, 0.29 ) }
    dend_110 { pt3dadd( 30.9412, 47.1852, -5.30065, 0.29 ) }
    dend_110 { pt3dadd( 31.9867, 47.7794, -5.56582, 0.59 ) }
    dend_110 { pt3dadd( 33.5072, 48.5982, -6.02381, 0.37 ) }
    dend_110 { pt3dadd( 34.604, 49.1664, -6.40551, 1.11 ) }
    dend_110 { pt3dadd( 35.4311, 49.5841, -6.72371, 1.33 ) }
    dend_110 { pt3dadd( 37.2478, 50.7857, -7.47904, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_110 { pt3dadd( 37.3442, 50.8738, -7.51884, 0.22 ) }
    dend_110 { pt3dadd( 38.1328, 51.8411, -7.82433, 1.03 ) }
    dend_110 { pt3dadd( 38.3484, 52.1531, -7.89166, 1.11 ) }
    dend_110 { pt3dadd( 38.4029, 52.236, -7.9061, 1.11 ) }
    dend_110 { pt3dadd( 39.5744, 53.7579, -8.0371, 0.22 ) }
    dend_110 { pt3dadd( 40.7614, 55.0651, -8.01427, 1.11 ) }
    dend_110 { pt3dadd( 41.4558, 55.77, -7.97424, 0.88 ) }
    dend_110 { pt3dadd( 42.6133, 56.8747, -7.82062, 0.22 ) }
    dend_110 { pt3dadd( 42.6822, 56.941, -7.80929, 0.22 ) }
    dend_110 { pt3dadd( 44.4378, 58.576, -7.4839, 0.22 ) }
    dend_110 { pt3dadd( 44.7354, 58.8267, -7.42351, 0.22 ) }
    dend_110 { pt3dadd( 46.2515, 60.0872, -7.08824, 0.88 ) }
    dend_110 { pt3dadd( 47.1273, 60.8292, -6.89434, 1.03 ) }
    dend_110 { pt3dadd( 48.1888, 61.7567, -6.66506, 0.66 ) }
    dend_110 { pt3dadd( 49.3639, 62.8097, -6.44385, 0.22 ) }
    dend_110 { pt3dadd( 49.874, 63.2838, -6.37171, 0.22 ) }
    dend_110 { pt3dadd( 49.9594, 63.3508, -6.35879, 0.22 ) }
    dend_110 { pt3dadd( 50.7638, 63.8416, -6.23977, 0.37 ) }
    dend_110 { pt3dadd( 50.8397, 63.8813, -6.23032, 0.37 ) }
    dend_110 { pt3dadd( 51.8451, 64.3433, -6.05398, 1.11 ) }
    dend_110 { pt3dadd( 52.5526, 64.6751, -5.90972, 1.47 ) }
    dend_110 { pt3dadd( 53.6108, 65.1862, -5.65692, 0.88 ) }
    dend_110 { pt3dadd( 53.6898, 65.2245, -5.63647, 0.88 ) }
    dend_110 { pt3dadd( 55.4232, 66.0833, -5.15973, 0.22 ) }
    dend_110 { pt3dadd( 56.6709, 66.7056, -4.81345, 0.59 ) }
    dend_110 { pt3dadd( 57.3901, 67.0639, -4.60966, 0.74 ) }
    dend_110 { pt3dadd( 58.7616, 67.8394, -4.26738, 0.22 ) }
    dend_110 { pt3dadd( 58.8463, 67.8966, -4.25451, 0.22 ) }
    dend_110 { pt3dadd( 59.2733, 68.2248, -4.2171, 0.74 ) }
    dend_110 { pt3dadd( 59.6542, 68.5649, -4.22452, 0.74 ) }
    dend_110 { pt3dadd( 59.7316, 68.6422, -4.23572, 0.74 ) }
    dend_110 { pt3dadd( 60.8784, 69.8903, -4.4635, 0.22 ) }
    dend_110 { pt3dadd( 62.0796, 71.1803, -4.76744, 1.03 ) }
    dend_110 { pt3dadd( 62.4896, 71.6013, -4.88277, 1.4 ) }
    dend_110 { pt3dadd( 63.3421, 72.4685, -5.13592, 1.77 ) }
    dend_110 { pt3dadd( 65.3295, 74.4189, -5.74865, 0.22 ) }
    dend_110 { pt3dadd( 66.2582, 75.3103, -5.99127, 0.22 ) }
    dend_110 { pt3dadd( 67.5578, 76.5282, -6.27774, 0.22 ) }
    dend_110 { pt3dadd( 68.8242, 77.6324, -6.45458, 1.33 ) }
    dend_110 { pt3dadd( 69.4332, 78.1279, -6.50023, 1.55 ) }
    dend_110 { pt3dadd( 70.9487, 79.2281, -6.51111, 0.29 ) }
    dend_110 { pt3dadd( 72.401, 80.1362, -6.34763, 1.33 ) }
    dend_110 { pt3dadd( 72.7306, 80.3316, -6.2815, 1.47 ) }
    dend_110 { pt3dadd( 75.0918, 81.7324, -5.58677, 0.29 ) }
    dend_110 { pt3dadd( 75.996, 82.2767, -5.26681, 1.03 ) }
    dend_110 { pt3dadd( 76.7054, 82.6979, -5.0077, 0.81 ) }
    dend_110 { pt3dadd( 78.1726, 83.5901, -4.46765, 0.22 ) }
    dend_110 { pt3dadd( 78.9445, 84.0536, -4.23751, 0.22 ) }
    dend_110 { pt3dadd( 79.0412, 84.1129, -4.21703, 0.22 ) }
    dend_110 { pt3dadd( 80.0293, 84.7968, -4.13508, 0.81 ) }
    dend_110 { pt3dadd( 80.4311, 85.0803, -4.14368, 0.96 ) }
    dend_110 { pt3dadd( 81.1535, 85.6459, -4.23978, 0.59 ) }
    dend_110 { pt3dadd( 82.1279, 86.4279, -4.48648, 0.15 ) }
    dend_110 { pt3dadd( 83.5222, 87.5292, -4.84857, 1.33 ) }
    dend_110 { pt3dadd( 84.4171, 88.2552, -5.08552, 0.22 ) }
    dend_110 { pt3dadd( 84.4924, 88.3146, -5.1049, 0.22 ) }
    dend_110 { pt3dadd( 85.2012, 88.8681, -5.24274, 0.22 ) }
    dend_110 { pt3dadd( 86.1721, 89.5854, -5.36112, 0.66 ) }
    dend_110 { pt3dadd( 86.843, 90.0645, -5.34001, 0.81 ) }
    dend_110 { pt3dadd( 86.9918, 90.177, -5.31526, 0.81 ) }
    dend_110 { pt3dadd( 87.9086, 90.9083, -5.13622, 0.52 ) }
    dend_110 { pt3dadd( 88.7938, 91.7087, -4.94694, 1.33 ) }
    dend_110 { pt3dadd( 89.3038, 92.1999, -4.84049, 1.55 ) }
    dend_110 { pt3dadd( 90.7873, 93.6852, -4.55137, 0.22 ) }
    dend_110 { pt3dadd( 91.686, 94.5906, -4.39856, 0.37 ) }
    dend_110 { pt3dadd( 92.2886, 95.1935, -4.31265, 0.96 ) }
    dend_110 { pt3dadd( 92.9331, 95.8144, -4.21131, 1.33 ) }
    dend_110 { pt3dadd( 94.5752, 97.2979, -3.95911, 0.22 ) }
    dend_110 { pt3dadd( 95.8022, 98.2864, -3.72789, 0.22 ) }
    dend_110 { pt3dadd( 96.628, 98.8454, -3.56193, 0.88 ) }
    dend_110 { pt3dadd( 97.2218, 99.1774, -3.42897, 0.96 ) }
    dend_110 { pt3dadd( 99.0479, 100.086, -2.9842, 0.22 ) }
    dend_110 { pt3dadd( 99.1321, 100.124, -2.96241, 0.22 ) }
    dend_110 { pt3dadd( 100.639, 100.795, -2.51838, 1.4 ) }
    dend_110 { pt3dadd( 101.405, 101.145, -2.28844, 1.99 ) }
    dend_110 { pt3dadd( 102.81, 101.767, -1.89101, 0.29 ) }
    dend_110 { pt3dadd( 102.897, 101.804, -1.87055, 0.29 ) }
    dend_110 { pt3dadd( 103.645, 102.122, -1.76386, 0.22 ) }
    dend_110 { pt3dadd( 103.734, 102.16, -1.75492, 0.22 ) }
    dend_110 { pt3dadd( 104.456, 102.505, -1.75993, 0.29 ) }
    dend_110 { pt3dadd( 104.54, 102.552, -1.76352, 0.29 ) }
    dend_110 { pt3dadd( 105.038, 102.876, -1.80104, 0.88 ) }
    dend_110 { pt3dadd( 105.529, 103.207, -1.84202, 1.18 ) }
    dend_110 { pt3dadd( 105.899, 103.469, -1.87537, 1.18 ) }
    dend_110 { pt3dadd( 107.221, 104.423, -1.9981, 0.22 ) }
    dend_110 { pt3dadd( 107.719, 104.766, -2.04138, 0.66 ) }
    dend_110 { pt3dadd( 108.196, 105.075, -2.0778, 0.66 ) }
    dend_110 { pt3dadd( 108.274, 105.121, -2.08275, 0.66 ) }
    dend_110 { pt3dadd( 108.808, 105.423, -2.10904, 0.66 ) }
    dend_110 { pt3dadd( 108.901, 105.472, -2.11191, 0.66 ) }
    dend_110 { pt3dadd( 110.219, 106.084, -2.1156, 0.22 ) }
    dend_110 { pt3dadd( 110.765, 106.295, -2.11716, 0.74 ) }
    dend_110 { pt3dadd( 111.446, 106.53, -2.14041, 1.11 ) }
    dend_110 { pt3dadd( 111.89, 106.67, -2.16343, 0.88 ) }
    dend_110 { pt3dadd( 111.988, 106.699, -2.16976, 0.88 ) }
    dend_110 { pt3dadd( 113.662, 107.195, -2.29393, 0.22 ) }
    dend_110 { pt3dadd( 115.078, 107.665, -2.4432, 0.22 ) }
    dend_110 { pt3dadd( 116.028, 108.0, -2.56039, 0.88 ) }
    dend_110 { pt3dadd( 116.609, 108.213, -2.64777, 1.11 ) }
    dend_110 { pt3dadd( 116.716, 108.254, -2.66572, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_110 { pt3dadd( 117.61, 108.626, -2.82847, 0.44 ) }
    dend_110 { pt3dadd( 119.522, 109.521, -3.20348, 0.22 ) }
    dend_110 { pt3dadd( 119.608, 109.56, -3.22267, 0.22 ) }
    dend_110 { pt3dadd( 120.861, 110.081, -3.49227, 1.11 ) }
    dend_110 { pt3dadd( 121.042, 110.149, -3.53171, 1.11 ) }
    dend_110 { pt3dadd( 121.859, 110.413, -3.70071, 1.69 ) }
    dend_110 { pt3dadd( 122.614, 110.612, -3.88036, 1.69 ) }
    dend_110 { pt3dadd( 125.183, 111.153, -4.4988, 0.22 ) }
    dend_110 { pt3dadd( 126.237, 111.386, -4.73856, 0.88 ) }
    dend_110 { pt3dadd( 126.75, 111.503, -4.84952, 1.4 ) }
    dend_110 { pt3dadd( 127.765, 111.742, -5.06808, 1.18 ) }
    dend_110 { pt3dadd( 129.158, 112.108, -5.36, 0.59 ) }
    dend_110 { pt3dadd( 130.85, 112.664, -5.68068, 0.29 ) }
    dend_110 { pt3dadd( 133.161, 113.719, -6.04343, 0.22 ) }
    dend_110 { pt3dadd( 133.504, 113.927, -6.09497, 0.59 ) }
    dend_110 { pt3dadd( 133.568, 113.977, -6.10339, 0.59 ) }
    dend_110 { pt3dadd( 134.463, 114.87, -6.14362, 0.74 ) }
    dend_110 { pt3dadd( 135.17, 115.74, -6.09212, 0.22 ) }
    dend_110 { pt3dadd( 135.813, 116.687, -6.00819, 0.22 ) }
    dend_110 { pt3dadd( 136.527, 117.744, -5.83461, 1.11 ) }
    dend_110 { pt3dadd( 136.819, 118.146, -5.75198, 1.4 ) }
    dend_110 { pt3dadd( 137.929, 119.564, -5.41427, 0.22 ) }
    dend_110 { pt3dadd( 138.342, 120.048, -5.28102, 0.96 ) }
    dend_110 { pt3dadd( 138.883, 120.621, -5.10392, 1.25 ) }
    dend_110 { pt3dadd( 140.256, 121.925, -4.66532, 0.29 ) }
    dend_110 { pt3dadd( 140.875, 122.479, -4.50243, 0.81 ) }
    dend_110 { pt3dadd( 141.349, 122.882, -4.41966, 0.81 ) }
    dend_110 { pt3dadd( 141.516, 123.023, -4.40651, 0.81 ) }
    dend_110 { pt3dadd( 142.31, 123.728, -4.37827, 0.37 ) }
    dend_110 { pt3dadd( 142.976, 124.338, -4.37877, 0.29 ) }
    dend_110 { pt3dadd( 144.015, 125.286, -4.39185, 0.15 ) }
    dend_110 { pt3dadd( 144.968, 126.182, -4.31642, 1.03 ) }
    dend_110 { pt3dadd( 145.502, 126.69, -4.2449, 1.62 ) }
    dend_110 { pt3dadd( 148.143, 128.977, -3.67552, 0.15 ) }
    dend_110 { pt3dadd( 149.46, 130.028, -3.31261, 0.44 ) }
    dend_110 { pt3dadd( 150.509, 130.829, -2.96526, 0.37 ) }
    dend_110 { pt3dadd( 152.584, 132.313, -2.0991, 1.62 ) }
    dend_110 { pt3dadd( 152.915, 132.532, -1.94321, 1.77 ) }
    dend_110 { pt3dadd( 155.328, 133.93, -0.72324, 0.22 ) }
    dend_110 { pt3dadd( 155.869, 134.173, -0.436689, 0.66 ) }
    dend_110 { pt3dadd( 156.906, 134.569, 0.0992418, 0.59 ) }
    dend_110 { pt3dadd( 158.759, 135.122, 0.975275, 0.37 ) }
    dend_110 { pt3dadd( 158.846, 135.143, 1.01, 0.37 ) }
    dend_110 { pt3dadd( 159.509, 135.32, 1.26549, 0.29 ) }
    dend_110 { pt3dadd( 160.723, 135.739, 1.68781, 0.44 ) }
    dend_110 { pt3dadd( 160.8, 135.767, 1.7146, 0.44 ) }
    dend_110 { pt3dadd( 162.007, 136.234, 2.18274, 0.59 ) }
    dend_110 { pt3dadd( 163.108, 136.878, 2.76748, 0.22 ) }
    dend_110 { pt3dadd( 163.182, 136.937, 2.82276, 0.22 ) }
    dend_110 { pt3dadd( 163.796, 137.638, 3.45404, 0.22 ) }
    dend_110 { pt3dadd( 163.835, 137.697, 3.49593, 0.22 ) }
    dend_110 { pt3dadd( 164.625, 138.981, 4.3048, 0.59 ) }
    dend_110 { pt3dadd( 165.388, 140.279, 5.02875, 0.81 ) }
    dend_110 { pt3dadd( 165.448, 140.361, 5.08583, 0.81 ) }
    dend_110 { pt3dadd( 165.968, 140.887, 5.5228, 0.81 ) }
    dend_110 { pt3dadd( 167.524, 141.775, 7.04867, 0.22 ) }
    dend_110 { pt3dadd( 167.578, 141.791, 7.10525, 0.22 ) }
    dend_110 { pt3dadd( 168.049, 141.805, 7.65147, 0.59 ) }
    dend_110 { pt3dadd( 169.654, 141.673, 9.52496, 0.81 ) }
    dend_110 { pt3dadd( 170.213, 141.57, 10.2398, 0.96 ) }
    dend_110 { pt3dadd( 172.252, 140.845, 13.2233, 0.37 ) }
    dend_110 { pt3dadd( 172.351, 140.788, 13.3926, 0.37 ) }
    dend_110 { pt3dadd( 173.289, 140.199, 15.1064, 0.66 ) }
    // Section: dend_107, id: dend_107, parent: dend_106 (entry count 63/100)
    dend_107 { pt3dclear() }
    dend_107 { pt3dadd( 5.58017, 18.0373, 2.80749, 0.88 ) }
    dend_107 { pt3dadd( 6.30544, 18.687, 3.21751, 0.88 ) }
    dend_107 { pt3dadd( 7.6201, 19.7439, 3.83879, 0.66 ) }
    dend_107 { pt3dadd( 8.66657, 20.5369, 4.25466, 0.66 ) }
    dend_107 { pt3dadd( 9.99854, 21.4895, 4.71195, 0.66 ) }
    dend_107 { pt3dadd( 10.8442, 22.0542, 4.93391, 0.66 ) }
    dend_107 { pt3dadd( 11.9221, 22.7559, 5.1531, 0.88 ) }
    dend_107 { pt3dadd( 11.9903, 22.7954, 5.15853, 0.88 ) }
    dend_107 { pt3dadd( 12.8115, 23.2561, 5.1171, 1.47 ) }
    dend_107 { pt3dadd( 13.3445, 23.5759, 5.04951, 1.47 ) }
    dend_107 { pt3dadd( 14.4305, 24.3166, 4.89108, 1.03 ) }
    dend_107 { pt3dadd( 15.2458, 24.9353, 4.7846, 0.88 ) }
    dend_107 { pt3dadd( 15.8712, 25.4664, 4.72399, 1.03 ) }
    dend_107 { pt3dadd( 16.9186, 26.4435, 4.66183, 1.03 ) }
    dend_107 { pt3dadd( 17.9169, 27.5004, 4.6888, 0.88 ) }
    dend_107 { pt3dadd( 18.5562, 28.2944, 4.76964, 0.74 ) }
    dend_107 { pt3dadd( 19.0266, 28.946, 4.93164, 0.88 ) }
    dend_107 { pt3dadd( 19.7307, 29.93, 5.30232, 1.4 ) }
    dend_107 { pt3dadd( 20.1875, 30.5583, 5.63112, 1.33 ) }
    dend_107 { pt3dadd( 20.845, 31.4553, 6.19494, 0.88 ) }
    dend_107 { pt3dadd( 21.2283, 31.9583, 6.54949, 0.59 ) }
    dend_107 { pt3dadd( 22.1716, 33.127, 7.35616, 0.52 ) }
    dend_107 { pt3dadd( 22.7079, 33.7261, 7.70049, 0.52 ) }
    dend_107 { pt3dadd( 23.474, 34.52, 8.05186, 0.81 ) }
    dend_107 { pt3dadd( 24.2524, 35.3128, 8.3138, 1.03 ) }
    dend_107 { pt3dadd( 24.7758, 35.839, 8.41293, 1.33 ) }
    dend_107 { pt3dadd( 25.5113, 36.6246, 8.4263, 1.33 ) }
    dend_107 { pt3dadd( 26.4214, 37.7548, 8.25025, 0.81 ) }
    dend_107 { pt3dadd( 26.9018, 38.4374, 8.08911, 0.81 ) }
    dend_107 { pt3dadd( 26.9401, 38.5018, 8.07324, 0.81 ) }
    dend_107 { pt3dadd( 27.1947, 38.9914, 8.02426, 0.88 ) }
    dend_107 { pt3dadd( 27.8116, 40.3337, 8.08464, 0.74 ) }
    dend_107 { pt3dadd( 28.1396, 41.0846, 8.25454, 0.59 ) }
    dend_107 { pt3dadd( 28.451, 41.7555, 8.52847, 0.59 ) }
    dend_107 { pt3dadd( 29.1115, 42.991, 9.2998, 1.03 ) }
    dend_107 { pt3dadd( 30.1203, 44.4954, 10.6281, 1.03 ) }
    dend_107 { pt3dadd( 30.1568, 44.5429, 10.6802, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_107 { pt3dadd( 30.458, 44.8819, 11.1295, 1.18 ) }
    dend_107 { pt3dadd( 30.8871, 45.292, 11.7085, 1.33 ) }
    dend_107 { pt3dadd( 31.7045, 45.9637, 12.6564, 1.47 ) }
    dend_107 { pt3dadd( 32.5435, 46.5612, 13.407, 1.11 ) }
    dend_107 { pt3dadd( 33.1391, 47.0273, 13.8024, 1.11 ) }
    dend_107 { pt3dadd( 33.3306, 47.2019, 13.9096, 1.11 ) }
    dend_107 { pt3dadd( 33.7918, 47.7305, 14.0824, 1.4 ) }
    dend_107 { pt3dadd( 34.0235, 48.0507, 14.1242, 1.62 ) }
    dend_107 { pt3dadd( 34.0684, 48.1178, 14.1232, 1.62 ) }
    dend_107 { pt3dadd( 34.4893, 48.8447, 14.0817, 1.18 ) }
    dend_107 { pt3dadd( 35.0407, 49.866, 14.0867, 0.81 ) }
    dend_107 { pt3dadd( 35.5527, 50.8725, 14.1309, 0.66 ) }
    dend_107 { pt3dadd( 36.1072, 51.9989, 14.2166, 0.59 ) }
    dend_107 { pt3dadd( 36.1363, 52.0595, 14.2228, 0.59 ) }
    dend_107 { pt3dadd( 36.8049, 53.513, 14.4079, 1.03 ) }
    dend_107 { pt3dadd( 37.2693, 54.6381, 14.6111, 0.88 ) }
    dend_107 { pt3dadd( 37.3244, 54.7769, 14.644, 0.88 ) }
    dend_107 { pt3dadd( 37.604, 55.5014, 14.8417, 1.03 ) }
    dend_107 { pt3dadd( 37.6293, 55.572, 14.8593, 1.03 ) }
    dend_107 { pt3dadd( 37.9197, 56.392, 15.0685, 0.96 ) }
    dend_107 { pt3dadd( 38.3799, 57.6671, 15.4197, 1.25 ) }
    // Section: dend_53, id: dend_53, parent: dend_37 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -1.59485, -28.6232, 3.0556, 2.58 ) }
    dend_53 { pt3dadd( -1.03057, -30.1996, 2.92222, 2.58 ) }
    dend_53 { pt3dadd( -0.821209, -30.967, 2.80159, 2.58 ) }
    dend_53 { pt3dadd( -0.468636, -32.6795, 2.44633, 1.99 ) }
    dend_53 { pt3dadd( -0.193026, -34.503, 1.96631, 1.99 ) }
    dend_53 { pt3dadd( -0.0174846, -36.0635, 1.5074, 1.84 ) }
    dend_53 { pt3dadd( 0.119541, -37.7425, 0.983553, 1.84 ) }
    dend_53 { pt3dadd( 0.172729, -39.9992, 0.197515, 1.84 ) }
    dend_53 { pt3dadd( 0.139535, -41.7027, -0.438414, 1.92 ) }
    dend_53 { pt3dadd( 0.00365896, -43.9271, -1.32119, 1.92 ) }
    dend_53 { pt3dadd( -0.291803, -46.5715, -2.38466, 1.92 ) }
    dend_53 { pt3dadd( -0.532677, -48.467, -3.10964, 2.5 ) }
    dend_53 { pt3dadd( -0.719087, -50.4274, -3.7572, 2.95 ) }
    dend_53 { pt3dadd( -0.759793, -51.1541, -3.96106, 3.24 ) }
    dend_53 { pt3dadd( -0.799088, -53.0844, -4.43836, 2.58 ) }
    dend_53 { pt3dadd( -0.712703, -55.4394, -4.85951, 1.99 ) }
    dend_53 { pt3dadd( -0.418404, -57.658, -5.09307, 1.99 ) }
    dend_53 { pt3dadd( 0.211752, -61.1054, -5.32792, 1.92 ) }
    dend_53 { pt3dadd( 0.384555, -61.8215, -5.34796, 1.92 ) }
    dend_53 { pt3dadd( 0.60302, -62.54, -5.34728, 2.36 ) }
    dend_53 { pt3dadd( 1.48922, -64.7164, -5.20731, 1.99 ) }
    dend_53 { pt3dadd( 2.57204, -66.6091, -4.92267, 1.99 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 43/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -1.59485, -28.6232, 3.0556, 1.25 ) }
    dend_38 { pt3dadd( -3.50085, -30.2373, 2.70442, 1.25 ) }
    dend_38 { pt3dadd( -4.63343, -31.1893, 2.46569, 0.88 ) }
    dend_38 { pt3dadd( -5.96779, -32.2946, 2.15927, 0.88 ) }
    dend_38 { pt3dadd( -6.92523, -33.0779, 1.89605, 1.11 ) }
    dend_38 { pt3dadd( -7.58317, -33.6044, 1.6968, 1.47 ) }
    dend_38 { pt3dadd( -7.9495, -33.8966, 1.57858, 1.47 ) }
    dend_38 { pt3dadd( -8.36072, -34.2298, 1.39734, 1.77 ) }
    dend_38 { pt3dadd( -8.9972, -34.761, 1.07953, 1.62 ) }
    dend_38 { pt3dadd( -9.81661, -35.4588, 0.647431, 1.47 ) }
    dend_38 { pt3dadd( -10.4649, -36.0013, 0.319071, 1.62 ) }
    dend_38 { pt3dadd( -11.0134, -36.4501, 0.0686231, 1.62 ) }
    dend_38 { pt3dadd( -11.4499, -36.8017, -0.117953, 1.33 ) }
    dend_38 { pt3dadd( -12.5971, -37.7183, -0.577174, 1.33 ) }
    dend_38 { pt3dadd( -13.5138, -38.4903, -0.926384, 1.25 ) }
    dend_38 { pt3dadd( -14.4657, -39.3305, -1.26257, 1.25 ) }
    dend_38 { pt3dadd( -15.8591, -40.5984, -1.74312, 1.25 ) }
    dend_38 { pt3dadd( -16.8406, -41.497, -2.03043, 1.03 ) }
    dend_38 { pt3dadd( -17.4809, -42.1027, -2.18832, 0.88 ) }
    dend_38 { pt3dadd( -18.4825, -43.1245, -2.34035, 0.88 ) }
    dend_38 { pt3dadd( -19.1086, -43.8447, -2.37119, 1.11 ) }
    dend_38 { pt3dadd( -19.1585, -43.9075, -2.36648, 1.11 ) }
    dend_38 { pt3dadd( -20.139, -45.2206, -2.13996, 1.11 ) }
    dend_38 { pt3dadd( -20.786, -46.093, -1.89664, 1.62 ) }
    dend_38 { pt3dadd( -21.7345, -47.3282, -1.46877, 1.77 ) }
    dend_38 { pt3dadd( -22.7278, -48.5022, -1.04033, 1.92 ) }
    dend_38 { pt3dadd( -23.5239, -49.3883, -0.767662, 1.55 ) }
    dend_38 { pt3dadd( -23.5748, -49.4418, -0.757946, 1.55 ) }
    dend_38 { pt3dadd( -24.8308, -50.6439, -0.812763, 0.66 ) }
    dend_38 { pt3dadd( -25.6212, -51.2678, -1.08995, 0.66 ) }
    dend_38 { pt3dadd( -26.652, -51.9379, -1.7644, 1.25 ) }
    dend_38 { pt3dadd( -27.521, -52.4643, -2.4716, 1.55 ) }
    dend_38 { pt3dadd( -28.423, -53.0257, -3.26344, 1.4 ) }
    dend_38 { pt3dadd( -29.2249, -53.5695, -3.96902, 1.18 ) }
    dend_38 { pt3dadd( -30.0844, -54.2484, -4.70312, 0.96 ) }
    dend_38 { pt3dadd( -30.8615, -55.0249, -5.25705, 0.96 ) }
    dend_38 { pt3dadd( -31.582, -55.9639, -5.5726, 1.03 ) }
    dend_38 { pt3dadd( -32.0774, -56.7751, -5.65407, 1.4 ) }
    dend_38 { pt3dadd( -32.6251, -57.9299, -5.58113, 1.4 ) }
    dend_38 { pt3dadd( -33.256, -59.6736, -5.32345, 1.33 ) }
    dend_38 { pt3dadd( -33.5849, -60.8528, -5.10121, 1.4 ) }
    dend_38 { pt3dadd( -33.887, -62.3437, -4.80637, 1.62 ) }
    dend_38 { pt3dadd( -34.054, -63.4585, -4.59602, 1.47 ) }
    dend_38 { pt3dadd( -34.2785, -65.1982, -4.31105, 1.25 ) }
    dend_38 { pt3dadd( -34.456, -66.6297, -4.11819, 1.4 ) }
    dend_38 { pt3dadd( -34.5903, -67.4563, -4.05196, 1.4 ) }
    dend_38 { pt3dadd( -34.8925, -68.7338, -4.01434, 1.4 ) }
    dend_38 { pt3dadd( -35.4158, -70.2782, -4.10702, 0.88 ) }
    dend_38 { pt3dadd( -35.9407, -71.3403, -4.25503, 0.66 ) }
    dend_38 { pt3dadd( -36.3742, -71.9501, -4.42172, 0.96 ) }
    dend_38 { pt3dadd( -37.2492, -72.8571, -4.78179, 1.25 ) }
    dend_38 { pt3dadd( -37.897, -73.4126, -5.05549, 1.33 ) }
    dend_38 { pt3dadd( -38.8163, -74.1415, -5.44423, 1.4 ) }
    dend_38 { pt3dadd( -39.3998, -74.6568, -5.68988, 1.11 ) }
    dend_38 { pt3dadd( -40.0303, -75.368, -5.94279, 1.11 ) }
    dend_38 { pt3dadd( -40.6364, -76.2346, -6.1445, 1.11 ) }
    dend_38 { pt3dadd( -41.3772, -77.4411, -6.37352, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_38 { pt3dadd( -42.207, -78.9679, -6.59374, 1.11 ) }
    dend_38 { pt3dadd( -43.1695, -80.9853, -6.77335, 1.11 ) }
    dend_38 { pt3dadd( -43.8467, -82.6156, -6.86197, 1.11 ) }
    dend_38 { pt3dadd( -44.3531, -84.0258, -6.87583, 2.14 ) }
    // Section: dend_22, id: dend_22, parent: dend_0 (entry count 4/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -1.66549, 18.0642, 4.31678, 0.96 ) }
    dend_22 { pt3dadd( -1.6254, 18.9525, 3.19479, 0.96 ) }
    dend_22 { pt3dadd( -1.63478, 19.8702, 2.22056, 0.96 ) }
    dend_22 { pt3dadd( -1.70356, 21.2445, 0.922837, 1.18 ) }
    dend_22 { pt3dadd( -1.77409, 22.0475, 0.227075, 1.18 ) }
    dend_22 { pt3dadd( -1.86709, 22.8785, -0.452397, 0.9 ) }
    dend_22 { pt3dadd( -1.97642, 23.6094, -0.996903, 0.9 ) }
    dend_22 { pt3dadd( -2.20739, 24.4503, -1.54985, 0.81 ) }
    dend_22 { pt3dadd( -2.31857, 24.7876, -1.68838, 0.81 ) }
    dend_22 { pt3dadd( -2.44006, 25.1516, -1.75348, 0.81 ) }
    dend_22 { pt3dadd( -2.45779, 25.2104, -1.75696, 0.81 ) }
    dend_22 { pt3dadd( -2.69823, 26.1884, -1.7414, 0.81 ) }
    dend_22 { pt3dadd( -2.7125, 26.2849, -1.73962, 0.81 ) }
    dend_22 { pt3dadd( -2.70912, 27.0997, -1.72975, 0.74 ) }
    dend_22 { pt3dadd( -2.67746, 27.3411, -1.72903, 0.74 ) }
    dend_22 { pt3dadd( -2.49939, 28.2322, -1.80108, 0.96 ) }
    dend_22 { pt3dadd( -2.3054, 29.0097, -1.90919, 0.96 ) }
    dend_22 { pt3dadd( -2.10401, 29.6681, -2.01583, 0.81 ) }
    dend_22 { pt3dadd( -1.76486, 30.7061, -2.20365, 0.59 ) }
    dend_22 { pt3dadd( -1.50975, 31.4023, -2.35459, 0.96 ) }
    dend_22 { pt3dadd( -1.01583, 32.647, -2.67455, 0.96 ) }
    dend_22 { pt3dadd( -0.989953, 32.7066, -2.69529, 0.96 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 26/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.66549, 18.0642, 4.31678, 2.73 ) }
    dend_1 { pt3dadd( -2.98517, 19.4143, 5.31499, 2.73 ) }
    dend_1 { pt3dadd( -4.06268, 20.5529, 6.08988, 2.43 ) }
    dend_1 { pt3dadd( -5.45904, 22.0675, 6.99953, 2.5 ) }
    dend_1 { pt3dadd( -6.55333, 23.2778, 7.65512, 1.47 ) }
    dend_1 { pt3dadd( -8.21795, 25.1419, 8.5609, 1.42 ) }
    dend_1 { pt3dadd( -9.28026, 26.3672, 9.09462, 1.42 ) }
    dend_1 { pt3dadd( -10.0583, 27.3329, 9.42239, 1.42 ) }
    dend_1 { pt3dadd( -11.0663, 28.6259, 9.76189, 1.42 ) }
    dend_1 { pt3dadd( -12.1974, 30.1163, 10.0202, 1.42 ) }
    dend_1 { pt3dadd( -13.0447, 31.2698, 10.1778, 1.62 ) }
    dend_1 { pt3dadd( -14.2306, 32.8865, 10.2757, 2.06 ) }
    dend_1 { pt3dadd( -15.0538, 34.0409, 10.3232, 2.28 ) }
    dend_1 { pt3dadd( -16.2698, 35.7769, 10.3968, 2.28 ) }
    dend_1 { pt3dadd( -17.2195, 37.1775, 10.4434, 2.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 41/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.44262, 41.9766, 0.478043, 0.514021 ) }
    axon_1 { pt3dadd( 2.14713, 56.96, 0.478043, 0.514021 ) }
    axon_1 { pt3dadd( 2.85164, 71.9435, 0.478043, 0.514021 ) }
    // Section: dend_109, id: dend_109, parent: dend_107 (entry count 44/100)
    dend_109 { pt3dclear() }
    dend_109 { pt3dadd( 38.3799, 57.6671, 15.4197, 0.59 ) }
    dend_109 { pt3dadd( 39.4308, 58.0811, 16.155, 0.59 ) }
    dend_109 { pt3dadd( 41.1512, 58.837, 17.2339, 0.59 ) }
    dend_109 { pt3dadd( 41.1992, 58.8547, 17.2623, 0.59 ) }
    dend_109 { pt3dadd( 42.3901, 59.1383, 17.8438, 1.03 ) }
    dend_109 { pt3dadd( 42.4415, 59.148, 17.8693, 1.03 ) }
    dend_109 { pt3dadd( 43.5867, 59.3436, 18.4449, 0.44 ) }
    dend_109 { pt3dadd( 44.2777, 59.4396, 18.767, 0.74 ) }
    dend_109 { pt3dadd( 45.7439, 59.6564, 19.4999, 0.44 ) }
    dend_109 { pt3dadd( 47.132, 59.9115, 20.5052, 0.37 ) }
    dend_109 { pt3dadd( 48.2349, 60.1559, 21.6442, 0.37 ) }
    dend_109 { pt3dadd( 48.2813, 60.1648, 21.7067, 0.37 ) }
    dend_109 { pt3dadd( 48.7058, 60.2293, 22.4311, 0.37 ) }
    dend_109 { pt3dadd( 49.4248, 60.3349, 23.7997, 0.59 ) }
    dend_109 { pt3dadd( 50.2212, 60.5984, 25.6688, 0.59 ) }
    dend_109 { pt3dadd( 50.2401, 60.609, 25.7231, 0.59 ) }
    dend_109 { pt3dadd( 50.9248, 61.0028, 27.6622, 0.96 ) }
    dend_109 { pt3dadd( 51.0712, 61.0968, 28.0515, 0.96 ) }
    dend_109 { pt3dadd( 51.6234, 61.4501, 29.3445, 0.22 ) }
    dend_109 { pt3dadd( 51.9776, 61.7374, 29.9102, 0.44 ) }
    dend_109 { pt3dadd( 52.4244, 62.151, 30.415, 0.37 ) }
    dend_109 { pt3dadd( 52.4655, 62.1996, 30.4633, 0.37 ) }
    dend_109 { pt3dadd( 52.752, 62.6203, 30.9432, 0.37 ) }
    dend_109 { pt3dadd( 52.7816, 62.6598, 31.0057, 0.37 ) }
    dend_109 { pt3dadd( 53.0017, 62.9158, 31.5622, 0.37 ) }
    dend_109 { pt3dadd( 53.5836, 63.6209, 33.0768, 0.52 ) }
    dend_109 { pt3dadd( 53.6094, 63.6484, 33.1344, 0.52 ) }
    dend_109 { pt3dadd( 54.4204, 64.4841, 34.9843, 0.22 ) }
    dend_109 { pt3dadd( 54.5832, 64.6454, 35.3719, 0.52 ) }
    dend_109 { pt3dadd( 54.7311, 64.81, 35.7657, 0.81 ) }
    dend_109 { pt3dadd( 55.3679, 65.7259, 37.9089, 0.29 ) }
    dend_109 { pt3dadd( 55.538, 66.1844, 38.7236, 0.29 ) }
    // Section: dend_108, id: dend_108, parent: dend_107 (entry count 76/100)
    dend_108 { pt3dclear() }
    dend_108 { pt3dadd( 38.3799, 57.6671, 15.4197, 0.37 ) }
    dend_108 { pt3dadd( 39.0435, 59.1158, 16.6579, 0.37 ) }
    dend_108 { pt3dadd( 39.2846, 59.5447, 17.1076, 0.74 ) }
    dend_108 { pt3dadd( 40.503, 61.7463, 19.7325, 0.59 ) }
    dend_108 { pt3dadd( 40.9846, 62.6269, 20.8482, 1.11 ) }
    dend_108 { pt3dadd( 41.4759, 63.5813, 22.0711, 1.11 ) }
    dend_108 { pt3dadd( 41.7591, 64.1578, 22.8132, 1.25 ) }
    dend_108 { pt3dadd( 42.7222, 65.9859, 25.4374, 0.52 ) }
    dend_108 { pt3dadd( 43.1055, 66.742, 26.5193, 0.52 ) }
    dend_108 { pt3dadd( 43.1308, 66.8017, 26.5938, 0.52 ) }
    dend_108 { pt3dadd( 43.3307, 67.2856, 27.1706, 0.52 ) }
    dend_108 { pt3dadd( 43.3578, 67.3527, 27.2272, 0.52 ) }
    dend_108 { pt3dadd( 43.6253, 68.0439, 27.5313, 0.52 ) }
    dend_108 { pt3dadd( 43.6553, 68.1316, 27.5373, 0.52 ) }
    dend_108 { pt3dadd( 44.0971, 69.4812, 27.6672, 0.74 ) }
    dend_108 { pt3dadd( 44.4802, 70.8854, 27.8722, 1.03 ) }
    dend_108 { pt3dadd( 44.6964, 71.8408, 28.0555, 0.52 ) }
    dend_108 { pt3dadd( 44.6878, 71.9492, 28.1043, 0.52 ) }
    dend_108 { pt3dadd( 44.4438, 72.6289, 28.5716, 0.52 ) }
    dend_108 { pt3dadd( 43.8149, 73.9469, 29.7457, 0.52 ) }
    dend_108 { pt3dadd( 43.2886, 74.9712, 30.7677, 0.52 ) }
    dend_108 { pt3dadd( 43.2594, 75.0431, 30.835, 0.52 ) }
    dend_108 { pt3dadd( 42.8341, 76.6387, 32.2031, 0.81 ) }
    dend_108 { pt3dadd( 42.763, 77.0972, 32.5342, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_108 { pt3dadd( 42.6948, 78.1306, 33.137, 0.59 ) }
    dend_108 { pt3dadd( 42.6739, 79.1997, 33.6464, 0.44 ) }
    dend_108 { pt3dadd( 42.646, 80.3829, 34.1841, 0.44 ) }
    dend_108 { pt3dadd( 42.6364, 80.4654, 34.226, 0.44 ) }
    dend_108 { pt3dadd( 42.4951, 81.0227, 34.541, 0.44 ) }
    dend_108 { pt3dadd( 42.2531, 81.6334, 34.9211, 0.44 ) }
    dend_108 { pt3dadd( 41.9069, 82.2809, 35.3456, 0.66 ) }
    dend_108 { pt3dadd( 41.5188, 82.8935, 35.7824, 1.03 ) }
    dend_108 { pt3dadd( 40.8419, 83.9253, 36.5376, 1.33 ) }
    dend_108 { pt3dadd( 40.7924, 84.006, 36.593, 1.33 ) }
    dend_108 { pt3dadd( 40.4673, 84.5741, 37.0012, 0.81 ) }
    dend_108 { pt3dadd( 40.1263, 85.2071, 37.4483, 0.52 ) }
    dend_108 { pt3dadd( 39.7869, 85.9568, 38.0639, 0.44 ) }
    dend_108 { pt3dadd( 39.7484, 86.0599, 38.1547, 0.44 ) }
    dend_108 { pt3dadd( 39.6317, 86.4801, 38.508, 0.52 ) }
    dend_108 { pt3dadd( 39.4516, 87.5949, 39.5268, 0.74 ) }
    dend_108 { pt3dadd( 39.4444, 88.121, 40.0516, 1.33 ) }
    dend_108 { pt3dadd( 39.5658, 89.7607, 41.6902, 1.03 ) }
    dend_108 { pt3dadd( 39.6742, 90.5955, 42.5246, 0.74 ) }
    dend_108 { pt3dadd( 39.7669, 91.3745, 43.2764, 0.66 ) }
    dend_108 { pt3dadd( 39.9304, 92.7109, 44.5362, 0.44 ) }
    dend_108 { pt3dadd( 40.0763, 93.9177, 45.6044, 0.44 ) }
    dend_108 { pt3dadd( 40.1365, 94.7442, 46.3011, 0.29 ) }
    dend_108 { pt3dadd( 40.1349, 94.8332, 46.3753, 0.29 ) }
    dend_108 { pt3dadd( 40.0263, 95.7072, 47.1715, 0.29 ) }
    dend_108 { pt3dadd( 39.8484, 96.4263, 47.8458, 0.74 ) }
    dend_108 { pt3dadd( 39.7987, 96.558, 47.9642, 0.74 ) }
    dend_108 { pt3dadd( 39.4959, 97.2505, 48.6577, 0.74 ) }
    dend_108 { pt3dadd( 38.8457, 98.7152, 50.3029, 0.29 ) }
    dend_108 { pt3dadd( 38.5043, 99.4994, 51.1771, 0.29 ) }
    dend_108 { pt3dadd( 38.4476, 99.6364, 51.3302, 0.29 ) }
    dend_108 { pt3dadd( 38.1481, 100.358, 52.0935, 0.59 ) }
    dend_108 { pt3dadd( 37.7623, 101.314, 53.0828, 0.74 ) }
    dend_108 { pt3dadd( 37.6498, 101.596, 53.36, 0.81 ) }
    dend_108 { pt3dadd( 37.2668, 102.609, 54.1252, 0.37 ) }
    dend_108 { pt3dadd( 37.2375, 102.69, 54.186, 0.37 ) }
    dend_108 { pt3dadd( 37.0557, 103.258, 54.6567, 0.44 ) }
    dend_108 { pt3dadd( 37.0387, 103.322, 54.7114, 0.44 ) }
    dend_108 { pt3dadd( 36.9603, 103.715, 55.1392, 0.44 ) }
    dend_108 { pt3dadd( 36.9052, 104.153, 55.7035, 0.29 ) }
    dend_108 { pt3dadd( 36.8333, 105.031, 56.9285, 0.88 ) }
    dend_108 { pt3dadd( 36.7753, 105.985, 58.1936, 1.33 ) }
    dend_108 { pt3dadd( 36.7755, 106.043, 58.2644, 1.33 ) }
    dend_108 { pt3dadd( 36.8509, 107.448, 59.8585, 0.74 ) }
    dend_108 { pt3dadd( 36.9846, 108.674, 61.1426, 0.88 ) }
    dend_108 { pt3dadd( 37.0528, 109.115, 61.5529, 1.03 ) }
    dend_108 { pt3dadd( 37.2532, 110.137, 62.264, 0.29 ) }
    dend_108 { pt3dadd( 37.4627, 111.293, 62.8614, 0.22 ) }
    dend_108 { pt3dadd( 37.4823, 111.385, 62.8977, 0.22 ) }
    dend_108 { pt3dadd( 37.5971, 111.851, 62.9978, 0.22 ) }
    dend_108 { pt3dadd( 37.6567, 112.043, 63.0165, 0.22 ) }
    dend_108 { pt3dadd( 38.1545, 113.557, 63.1254, 0.22 ) }
    dend_108 { pt3dadd( 38.185, 113.645, 63.1274, 0.22 ) }
    dend_108 { pt3dadd( 38.4866, 114.569, 63.134, 0.22 ) }
    dend_108 { pt3dadd( 38.5175, 114.657, 63.1328, 0.22 ) }
    dend_108 { pt3dadd( 39.1005, 116.144, 63.0542, 0.22 ) }
    // Section: dend_65, id: dend_65, parent: dend_53 (entry count 56/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 2.57204, -66.6091, -4.92267, 1.92 ) }
    dend_65 { pt3dadd( 3.08165, -66.7859, -5.28633, 1.92 ) }
    dend_65 { pt3dadd( 3.76101, -67.0215, -5.77111, 2.28 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 59/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 2.57204, -66.6091, -4.92267, 0.88 ) }
    dend_54 { pt3dadd( 4.08782, -69.287, -3.51138, 0.88 ) }
    dend_54 { pt3dadd( 4.47334, -70.2642, -3.0815, 0.74 ) }
    dend_54 { pt3dadd( 4.64438, -70.9674, -2.82018, 0.88 ) }
    dend_54 { pt3dadd( 4.69874, -71.5114, -2.62225, 1.03 ) }
    dend_54 { pt3dadd( 4.71246, -72.2908, -2.34243, 0.74 ) }
    dend_54 { pt3dadd( 4.70879, -72.3522, -2.3201, 0.74 ) }
    dend_54 { pt3dadd( 4.33481, -73.3582, -2.08157, 0.74 ) }
    dend_54 { pt3dadd( 4.08314, -73.9073, -1.91906, 1.18 ) }
    dend_54 { pt3dadd( 3.69806, -74.673, -1.6639, 1.03 ) }
    dend_54 { pt3dadd( 3.67396, -74.7183, -1.64735, 1.03 ) }
    dend_54 { pt3dadd( 3.27437, -75.473, -1.354, 0.81 ) }
    dend_54 { pt3dadd( 2.92309, -76.1605, -1.08321, 1.25 ) }
    dend_54 { pt3dadd( 2.64368, -76.7842, -0.829118, 1.47 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 73/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -44.3531, -84.0258, -6.87583, 0.74 ) }
    dend_42 { pt3dadd( -44.878, -84.7086, -6.966, 0.74 ) }
    dend_42 { pt3dadd( -45.2836, -85.194, -7.02547, 0.74 ) }
    dend_42 { pt3dadd( -45.8235, -85.7928, -7.09021, 0.66 ) }
    dend_42 { pt3dadd( -46.3634, -86.3465, -7.15081, 0.88 ) }
    dend_42 { pt3dadd( -46.6406, -86.6089, -7.18234, 1.03 ) }
    dend_42 { pt3dadd( -46.9865, -86.9183, -7.21327, 0.88 ) }
    dend_42 { pt3dadd( -47.2571, -87.1301, -7.22771, 0.74 ) }
    dend_42 { pt3dadd( -47.6108, -87.3685, -7.23421, 0.74 ) }
    dend_42 { pt3dadd( -48.0884, -87.6508, -7.23176, 0.74 ) }
    dend_42 { pt3dadd( -48.443, -87.8308, -7.19334, 0.74 ) }
    dend_42 { pt3dadd( -49.031, -88.0966, -7.10542, 0.52 ) }
    dend_42 { pt3dadd( -49.3308, -88.2179, -7.05974, 0.52 ) }
    dend_42 { pt3dadd( -50.2526, -88.5722, -6.92713, 0.88 ) }
    dend_42 { pt3dadd( -50.6065, -88.7059, -6.89782, 1.33 ) }
    dend_42 { pt3dadd( -51.7265, -89.1662, -6.92328, 0.52 ) }
    dend_42 { pt3dadd( -52.1846, -89.3848, -6.98918, 0.52 ) }
    dend_42 { pt3dadd( -52.6236, -89.6303, -7.12376, 0.52 ) }
    dend_42 { pt3dadd( -53.0136, -89.8868, -7.29296, 0.52 ) }
    dend_42 { pt3dadd( -53.5338, -90.3057, -7.60773, 0.88 ) }
    dend_42 { pt3dadd( -54.0696, -90.8387, -8.03183, 1.18 ) }
    dend_42 { pt3dadd( -54.3481, -91.1838, -8.31876, 1.18 ) }
    dend_42 { pt3dadd( -54.6597, -91.6213, -8.63906, 1.4 ) }
    dend_42 { pt3dadd( -54.915, -92.0093, -8.88892, 1.4 ) }
    dend_42 { pt3dadd( -55.2759, -92.578, -9.19787, 1.4 ) }
    dend_42 { pt3dadd( -55.7474, -93.2951, -9.48408, 1.03 ) }
    dend_42 { pt3dadd( -56.1064, -93.7933, -9.6286, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_42 { pt3dadd( -56.5361, -94.3278, -9.70679, 0.37 ) }
    dend_42 { pt3dadd( -56.7623, -94.5799, -9.70087, 0.37 ) }
    dend_42 { pt3dadd( -57.105, -94.9306, -9.63673, 0.66 ) }
    dend_42 { pt3dadd( -57.6621, -95.4281, -9.45754, 1.03 ) }
    dend_42 { pt3dadd( -57.9311, -95.6404, -9.35126, 1.25 ) }
    dend_42 { pt3dadd( -58.624, -96.161, -9.09697, 0.81 ) }
    dend_42 { pt3dadd( -58.8319, -96.3252, -9.03818, 0.81 ) }
    dend_42 { pt3dadd( -59.0888, -96.5442, -8.97886, 0.29 ) }
    dend_42 { pt3dadd( -59.4186, -96.8761, -8.93246, 0.29 ) }
    dend_42 { pt3dadd( -59.6924, -97.2263, -8.93211, 0.59 ) }
    dend_42 { pt3dadd( -59.9932, -97.6632, -8.95878, 0.74 ) }
    dend_42 { pt3dadd( -60.204, -97.9895, -9.00473, 0.96 ) }
    dend_42 { pt3dadd( -60.3368, -98.1934, -9.03701, 1.11 ) }
    dend_42 { pt3dadd( -60.6606, -98.6597, -9.12279, 0.74 ) }
    dend_42 { pt3dadd( -60.9556, -99.075, -9.20372, 0.59 ) }
    dend_42 { pt3dadd( -61.1533, -99.3434, -9.25929, 0.66 ) }
    dend_42 { pt3dadd( -61.4089, -99.6814, -9.33063, 0.74 ) }
    dend_42 { pt3dadd( -61.6801, -100.051, -9.40378, 0.37 ) }
    dend_42 { pt3dadd( -62.1045, -100.685, -9.49623, 0.29 ) }
    dend_42 { pt3dadd( -62.1272, -100.724, -9.49988, 0.29 ) }
    dend_42 { pt3dadd( -62.3667, -101.232, -9.48258, 0.29 ) }
    dend_42 { pt3dadd( -62.5209, -101.643, -9.43282, 0.88 ) }
    dend_42 { pt3dadd( -62.6739, -102.096, -9.35687, 1.4 ) }
    dend_42 { pt3dadd( -62.888, -102.692, -9.22852, 1.55 ) }
    dend_42 { pt3dadd( -63.0972, -103.201, -9.11262, 1.55 ) }
    dend_42 { pt3dadd( -63.5274, -104.058, -8.92352, 0.74 ) }
    dend_42 { pt3dadd( -63.8242, -104.533, -8.81985, 0.52 ) }
    dend_42 { pt3dadd( -64.2589, -105.057, -8.70913, 0.52 ) }
    dend_42 { pt3dadd( -64.8228, -105.55, -8.62655, 0.52 ) }
    dend_42 { pt3dadd( -65.3311, -105.886, -8.60112, 0.74 ) }
    dend_42 { pt3dadd( -65.6865, -106.074, -8.59695, 0.96 ) }
    dend_42 { pt3dadd( -65.9875, -106.214, -8.61004, 0.81 ) }
    dend_42 { pt3dadd( -66.4777, -106.446, -8.62211, 0.37 ) }
    dend_42 { pt3dadd( -66.8193, -106.642, -8.60149, 0.29 ) }
    dend_42 { pt3dadd( -67.1834, -106.936, -8.54139, 0.29 ) }
    dend_42 { pt3dadd( -67.592, -107.348, -8.42923, 0.66 ) }
    dend_42 { pt3dadd( -67.8731, -107.675, -8.32247, 0.96 ) }
    dend_42 { pt3dadd( -68.161, -108.031, -8.20056, 1.47 ) }
    dend_42 { pt3dadd( -68.626, -108.6, -7.97815, 1.25 ) }
    dend_42 { pt3dadd( -69.1507, -109.184, -7.7218, 0.74 ) }
    dend_42 { pt3dadd( -69.1886, -109.22, -7.70511, 0.74 ) }
    dend_42 { pt3dadd( -69.7082, -109.637, -7.51644, 0.74 ) }
    dend_42 { pt3dadd( -70.0506, -109.858, -7.40528, 0.74 ) }
    dend_42 { pt3dadd( -70.6874, -110.174, -7.25146, 0.74 ) }
    dend_42 { pt3dadd( -71.0315, -110.316, -7.19622, 0.88 ) }
    dend_42 { pt3dadd( -71.3317, -110.435, -7.18264, 0.88 ) }
    dend_42 { pt3dadd( -71.7096, -110.597, -7.20739, 0.88 ) }
    dend_42 { pt3dadd( -72.1886, -110.826, -7.32164, 0.59 ) }
    dend_42 { pt3dadd( -72.7132, -111.134, -7.51003, 0.29 ) }
    dend_42 { pt3dadd( -72.8534, -111.235, -7.58191, 0.29 ) }
    dend_42 { pt3dadd( -73.7251, -111.891, -7.95066, 0.29 ) }
    dend_42 { pt3dadd( -73.7584, -111.917, -7.95921, 0.29 ) }
    dend_42 { pt3dadd( -74.057, -112.133, -7.97007, 0.29 ) }
    dend_42 { pt3dadd( -74.6093, -112.499, -7.91138, 1.4 ) }
    dend_42 { pt3dadd( -74.648, -112.521, -7.90123, 1.4 ) }
    dend_42 { pt3dadd( -75.4749, -112.942, -7.61891, 1.11 ) }
    dend_42 { pt3dadd( -75.9972, -113.186, -7.40975, 1.55 ) }
    dend_42 { pt3dadd( -76.539, -113.446, -7.20634, 1.62 ) }
    dend_42 { pt3dadd( -76.8616, -113.604, -7.08878, 1.62 ) }
    dend_42 { pt3dadd( -77.5565, -113.965, -6.87368, 0.81 ) }
    dend_42 { pt3dadd( -78.0359, -114.237, -6.75969, 0.88 ) }
    dend_42 { pt3dadd( -78.2344, -114.369, -6.73252, 0.88 ) }
    dend_42 { pt3dadd( -78.8374, -114.816, -6.70663, 0.37 ) }
    dend_42 { pt3dadd( -78.8763, -114.85, -6.70952, 0.37 ) }
    dend_42 { pt3dadd( -79.4177, -115.386, -6.79701, 0.37 ) }
    dend_42 { pt3dadd( -79.6714, -115.664, -6.86528, 0.96 ) }
    dend_42 { pt3dadd( -79.9843, -116.025, -6.96723, 1.33 ) }
    dend_42 { pt3dadd( -80.4228, -116.554, -7.13678, 0.74 ) }
    dend_42 { pt3dadd( -80.8428, -117.063, -7.32364, 0.59 ) }
    dend_42 { pt3dadd( -81.1499, -117.412, -7.45859, 0.96 ) }
    dend_42 { pt3dadd( -81.3054, -117.569, -7.51443, 0.96 ) }
    dend_42 { pt3dadd( -81.3477, -117.604, -7.5201, 0.96 ) }
    dend_42 { pt3dadd( -81.8556, -117.93, -7.45575, 0.29 ) }
    dend_42 { pt3dadd( -82.1609, -118.107, -7.35928, 0.29 ) }
    dend_42 { pt3dadd( -82.5166, -118.304, -7.20096, 0.29 ) }
    dend_42 { pt3dadd( -83.0627, -118.634, -6.92238, 0.81 ) }
    dend_42 { pt3dadd( -83.7522, -119.119, -6.5497, 1.25 ) }
    dend_42 { pt3dadd( -84.1871, -119.459, -6.30252, 1.62 ) }
    dend_42 { pt3dadd( -84.4542, -119.691, -6.1394, 1.62 ) }
    dend_42 { pt3dadd( -84.4889, -119.729, -6.11947, 1.62 ) }
    dend_42 { pt3dadd( -84.9776, -120.398, -5.88934, 0.44 ) }
    dend_42 { pt3dadd( -85.2442, -120.859, -5.81085, 0.74 ) }
    dend_42 { pt3dadd( -85.267, -120.907, -5.80854, 0.74 ) }
    dend_42 { pt3dadd( -85.3488, -121.097, -5.8082, 0.74 ) }
    dend_42 { pt3dadd( -85.6509, -121.83, -5.81754, 0.29 ) }
    dend_42 { pt3dadd( -85.6697, -121.876, -5.81796, 0.29 ) }
    dend_42 { pt3dadd( -85.8422, -122.326, -5.82541, 1.33 ) }
    dend_42 { pt3dadd( -85.9649, -122.603, -5.82377, 1.62 ) }
    dend_42 { pt3dadd( -86.1027, -122.849, -5.79775, 1.62 ) }
    dend_42 { pt3dadd( -86.126, -122.877, -5.78873, 1.62 ) }
    dend_42 { pt3dadd( -86.6581, -123.267, -5.51149, 0.59 ) }
    dend_42 { pt3dadd( -86.6946, -123.285, -5.49146, 0.59 ) }
    dend_42 { pt3dadd( -87.1031, -123.419, -5.27688, 0.44 ) }
    dend_42 { pt3dadd( -87.8, -123.564, -4.91486, 0.52 ) }
    dend_42 { pt3dadd( -88.549, -123.631, -4.55787, 0.74 ) }
    dend_42 { pt3dadd( -89.14, -123.626, -4.3137, 0.88 ) }
    dend_42 { pt3dadd( -89.4778, -123.591, -4.19892, 0.88 ) }
    dend_42 { pt3dadd( -89.9191, -123.53, -4.07713, 0.66 ) }
    dend_42 { pt3dadd( -90.4803, -123.442, -3.96592, 1.03 ) }
    dend_42 { pt3dadd( -91.094, -123.362, -3.891, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_42 { pt3dadd( -91.5833, -123.331, -3.85607, 0.44 ) }
    dend_42 { pt3dadd( -92.0104, -123.342, -3.82811, 0.44 ) }
    dend_42 { pt3dadd( -92.8659, -123.442, -3.74305, 0.96 ) }
    dend_42 { pt3dadd( -93.3255, -123.525, -3.67527, 1.18 ) }
    dend_42 { pt3dadd( -94.0524, -123.697, -3.54814, 0.81 ) }
    dend_42 { pt3dadd( -94.6126, -123.845, -3.41371, 0.81 ) }
    dend_42 { pt3dadd( -95.147, -123.974, -3.26209, 1.4 ) }
    dend_42 { pt3dadd( -95.7562, -124.088, -3.07797, 1.4 ) }
    dend_42 { pt3dadd( -96.4611, -124.152, -2.87327, 0.29 ) }
    dend_42 { pt3dadd( -96.5049, -124.15, -2.8613, 0.29 ) }
    dend_42 { pt3dadd( -97.0115, -124.045, -2.75513, 0.29 ) }
    dend_42 { pt3dadd( -97.5053, -123.861, -2.68794, 0.88 ) }
    dend_42 { pt3dadd( -97.8924, -123.668, -2.67876, 0.59 ) }
    dend_42 { pt3dadd( -98.2589, -123.469, -2.71474, 0.88 ) }
    dend_42 { pt3dadd( -98.5025, -123.349, -2.76046, 0.88 ) }
    dend_42 { pt3dadd( -98.7754, -123.247, -2.82081, 0.74 ) }
    dend_42 { pt3dadd( -99.2089, -123.148, -2.93094, 0.74 ) }
    dend_42 { pt3dadd( -99.5352, -123.119, -3.0134, 0.44 ) }
    dend_42 { pt3dadd( -100.046, -123.116, -3.10793, 0.29 ) }
    dend_42 { pt3dadd( -100.337, -123.122, -3.14892, 0.29 ) }
    dend_42 { pt3dadd( -100.962, -123.144, -3.21687, 0.29 ) }
    dend_42 { pt3dadd( -101.37, -123.148, -3.25033, 1.11 ) }
    dend_42 { pt3dadd( -101.801, -123.132, -3.27629, 1.33 ) }
    dend_42 { pt3dadd( -102.753, -123.054, -3.3262, 0.37 ) }
    dend_42 { pt3dadd( -103.124, -123.025, -3.33786, 0.37 ) }
    dend_42 { pt3dadd( -103.166, -123.022, -3.33923, 0.37 ) }
    dend_42 { pt3dadd( -103.672, -122.996, -3.37256, 0.37 ) }
    dend_42 { pt3dadd( -104.096, -122.989, -3.45443, 0.37 ) }
    dend_42 { pt3dadd( -104.608, -122.996, -3.57726, 0.44 ) }
    dend_42 { pt3dadd( -105.32, -123.083, -3.80547, 1.33 ) }
    dend_42 { pt3dadd( -105.779, -123.174, -3.95671, 1.55 ) }
    dend_42 { pt3dadd( -106.258, -123.298, -4.12079, 1.11 ) }
    dend_42 { pt3dadd( -107.049, -123.587, -4.41233, 0.59 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 33/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -44.3531, -84.0258, -6.87583, 0.88 ) }
    dend_39 { pt3dadd( -43.9263, -86.6843, -7.43951, 0.88 ) }
    dend_39 { pt3dadd( -43.6363, -88.5677, -7.90315, 0.88 ) }
    dend_39 { pt3dadd( -43.3184, -90.6017, -8.50928, 0.88 ) }
    dend_39 { pt3dadd( -43.0525, -92.8082, -9.23292, 1.25 ) }
    dend_39 { pt3dadd( -42.8875, -95.1774, -9.9654, 0.66 ) }
    dend_39 { pt3dadd( -42.8454, -97.2634, -10.5835, 0.66 ) }
    dend_39 { pt3dadd( -42.857, -97.3827, -10.6229, 0.66 ) }
    dend_39 { pt3dadd( -43.3091, -99.3489, -11.2859, 0.52 ) }
    dend_39 { pt3dadd( -43.9253, -100.807, -11.72, 0.52 ) }
    dend_39 { pt3dadd( -44.9751, -102.627, -12.0947, 0.88 ) }
    dend_39 { pt3dadd( -45.4676, -103.383, -12.1889, 0.88 ) }
    dend_39 { pt3dadd( -45.9923, -104.276, -12.3079, 0.88 ) }
    dend_39 { pt3dadd( -46.4474, -105.218, -12.5025, 0.52 ) }
    dend_39 { pt3dadd( -47.0414, -106.725, -12.9961, 0.52 ) }
    dend_39 { pt3dadd( -47.3951, -108.053, -13.7348, 0.74 ) }
    dend_39 { pt3dadd( -47.6885, -109.501, -14.7514, 1.18 ) }
    dend_39 { pt3dadd( -48.0012, -111.18, -15.9513, 1.18 ) }
    dend_39 { pt3dadd( -48.3005, -112.899, -17.1625, 0.96 ) }
    dend_39 { pt3dadd( -48.6531, -115.152, -18.6985, 1.33 ) }
    dend_39 { pt3dadd( -49.0606, -118.165, -20.6307, 0.96 ) }
    dend_39 { pt3dadd( -49.2948, -120.166, -21.7971, 0.52 ) }
    dend_39 { pt3dadd( -49.6033, -123.398, -23.3743, 0.52 ) }
    dend_39 { pt3dadd( -49.724, -125.058, -24.0076, 1.33 ) }
    dend_39 { pt3dadd( -49.8035, -126.677, -24.4492, 1.69 ) }
    dend_39 { pt3dadd( -49.9245, -128.725, -24.778, 1.69 ) }
    dend_39 { pt3dadd( -50.0353, -130.0, -24.8538, 1.33 ) }
    dend_39 { pt3dadd( -50.2427, -131.812, -24.9104, 0.74 ) }
    dend_39 { pt3dadd( -50.4797, -132.998, -24.9469, 0.37 ) }
    dend_39 { pt3dadd( -50.8767, -134.112, -24.9914, 0.29 ) }
    dend_39 { pt3dadd( -51.7049, -135.528, -25.0805, 0.29 ) }
    dend_39 { pt3dadd( -52.179, -136.106, -25.1297, 0.96 ) }
    dend_39 { pt3dadd( -53.0025, -136.885, -25.2111, 0.96 ) }
    dend_39 { pt3dadd( -53.8628, -137.503, -25.2887, 0.96 ) }
    dend_39 { pt3dadd( -53.9637, -137.564, -25.2968, 0.96 ) }
    dend_39 { pt3dadd( -54.5375, -137.886, -25.3363, 0.96 ) }
    // Section: dend_36, id: dend_36, parent: dend_22 (entry count 69/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -0.989953, 32.7066, -2.69529, 0.52 ) }
    dend_36 { pt3dadd( -0.76791, 32.5525, -3.74491, 0.52 ) }
    dend_36 { pt3dadd( -0.399666, 32.3569, -5.42103, 0.52 ) }
    dend_36 { pt3dadd( 0.207408, 32.1173, -7.82165, 0.66 ) }
    dend_36 { pt3dadd( 1.19094, 31.8662, -11.1681, 0.88 ) }
    dend_36 { pt3dadd( 2.43949, 31.6988, -14.9287, 0.66 ) }
    dend_36 { pt3dadd( 3.16536, 31.6944, -16.9172, 0.29 ) }
    dend_36 { pt3dadd( 3.19468, 31.6992, -16.9901, 0.29 ) }
    dend_36 { pt3dadd( 3.6955, 31.8776, -18.0077, 0.29 ) }
    dend_36 { pt3dadd( 4.30162, 32.217, -18.9408, 0.88 ) }
    dend_36 { pt3dadd( 4.89856, 32.5825, -19.6247, 1.11 ) }
    dend_36 { pt3dadd( 6.40158, 33.4093, -21.0397, 0.29 ) }
    dend_36 { pt3dadd( 7.19038, 33.85, -21.8101, 0.22 ) }
    dend_36 { pt3dadd( 7.24453, 33.8795, -21.8702, 0.22 ) }
    dend_36 { pt3dadd( 7.91808, 34.2608, -22.7002, 1.25 ) }
    dend_36 { pt3dadd( 9.59142, 35.1575, -24.9671, 0.22 ) }
    dend_36 { pt3dadd( 10.0934, 35.421, -25.6844, 0.22 ) }
    dend_36 { pt3dadd( 10.7231, 35.7502, -26.5926, 0.66 ) }
    dend_36 { pt3dadd( 11.9216, 36.3973, -28.4331, 1.25 ) }
    dend_36 { pt3dadd( 12.2618, 36.5837, -28.9543, 1.55 ) }
    dend_36 { pt3dadd( 13.6055, 37.2899, -31.0702, 1.25 ) }
    dend_36 { pt3dadd( 14.7269, 37.9046, -32.931, 0.29 ) }
    dend_36 { pt3dadd( 14.9734, 38.0398, -33.3452, 0.59 ) }
    dend_36 { pt3dadd( 15.7479, 38.4625, -34.6005, 0.22 ) }
    dend_36 { pt3dadd( 16.4123, 38.8109, -35.5915, 1.69 ) }
    dend_36 { pt3dadd( 18.2503, 39.7065, -38.4115, 0.74 ) }
    dend_36 { pt3dadd( 19.1871, 40.2058, -39.8578, 0.37 ) }
    dend_36 { pt3dadd( 19.6527, 40.4645, -40.5833, 0.22 ) }
    dend_36 { pt3dadd( 19.9529, 40.6339, -41.0449, 0.66 ) }
    dend_36 { pt3dadd( 21.0085, 41.2391, -42.6253, 1.69 ) }
    dend_36 { pt3dadd( 23.2716, 42.5843, -46.13, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_36 { pt3dadd( 24.1116, 43.1053, -47.4413, 1.55 ) }
    dend_36 { pt3dadd( 25.6234, 44.0519, -49.8285, 0.74 ) }
    dend_36 { pt3dadd( 25.9481, 44.261, -50.3576, 1.11 ) }
    dend_36 { pt3dadd( 25.9918, 44.2903, -50.432, 1.11 ) }
    dend_36 { pt3dadd( 27.5114, 45.2018, -52.9934, 0.22 ) }
    dend_36 { pt3dadd( 27.551, 45.2234, -53.0542, 0.22 ) }
    dend_36 { pt3dadd( 27.9683, 45.4173, -53.7552, 0.52 ) }
    dend_36 { pt3dadd( 28.8534, 45.8181, -55.3154, 1.18 ) }
    dend_36 { pt3dadd( 30.0842, 46.3767, -57.4669, 1.03 ) }
    dend_36 { pt3dadd( 31.11, 46.8289, -59.4915, 0.29 ) }
    dend_36 { pt3dadd( 31.7279, 47.0916, -60.7904, 1.25 ) }
    dend_36 { pt3dadd( 33.5323, 47.9113, -64.7606, 1.33 ) }
    dend_36 { pt3dadd( 33.6254, 47.9573, -64.979, 1.33 ) }
    dend_36 { pt3dadd( 33.91, 48.132, -65.742, 1.33 ) }
    dend_36 { pt3dadd( 36.0541, 49.8286, -72.0273, 0.74 ) }
    dend_36 { pt3dadd( 36.0793, 49.8532, -72.1111, 0.74 ) }
    dend_36 { pt3dadd( 36.4838, 50.2677, -73.4781, 0.29 ) }
    dend_36 { pt3dadd( 36.6247, 50.424, -73.9336, 0.88 ) }
    dend_36 { pt3dadd( 37.8351, 51.7932, -77.7624, 0.29 ) }
    dend_36 { pt3dadd( 38.2257, 52.2009, -78.9058, 1.47 ) }
    dend_36 { pt3dadd( 39.7147, 53.6359, -82.7482, 0.44 ) }
    dend_36 { pt3dadd( 40.0417, 53.9129, -83.5449, 1.03 ) }
    dend_36 { pt3dadd( 40.9751, 54.5872, -85.6974, 0.52 ) }
    dend_36 { pt3dadd( 42.1409, 55.2854, -88.0654, 1.55 ) }
    dend_36 { pt3dadd( 43.6294, 55.9941, -90.5591, 0.44 ) }
    dend_36 { pt3dadd( 43.7103, 56.0251, -90.6894, 0.44 ) }
    dend_36 { pt3dadd( 44.1558, 56.1591, -91.4073, 0.44 ) }
    dend_36 { pt3dadd( 44.264, 56.195, -91.665, 0.44 ) }
    dend_36 { pt3dadd( 44.5106, 56.2959, -92.5976, 0.59 ) }
    dend_36 { pt3dadd( 44.9408, 56.6172, -94.8056, 0.96 ) }
    dend_36 { pt3dadd( 45.3398, 57.1771, -98.3185, 1.25 ) }
    dend_36 { pt3dadd( 45.639, 57.8319, -101.848, 1.11 ) }
    dend_36 { pt3dadd( 46.1499, 59.1698, -108.303, 0.74 ) }
    dend_36 { pt3dadd( 46.5389, 60.3216, -113.314, 0.96 ) }
    dend_36 { pt3dadd( 46.7189, 60.9096, -115.687, 1.11 ) }
    dend_36 { pt3dadd( 47.1746, 62.5661, -121.749, 1.99 ) }
    dend_36 { pt3dadd( 47.7608, 64.5362, -128.163, 0.81 ) }
    dend_36 { pt3dadd( 48.13, 65.5555, -131.096, 0.29 ) }
    dend_36 { pt3dadd( 48.4197, 66.1395, -132.581, 1.03 ) }
    dend_36 { pt3dadd( 48.8755, 66.9203, -134.398, 1.25 ) }
    dend_36 { pt3dadd( 49.3631, 67.6477, -136.039, 0.88 ) }
    dend_36 { pt3dadd( 49.8417, 68.312, -137.188, 0.29 ) }
    dend_36 { pt3dadd( 50.1185, 68.7222, -137.784, 0.66 ) }
    dend_36 { pt3dadd( 50.6628, 69.6355, -139.059, 0.52 ) }
    dend_36 { pt3dadd( 50.6865, 69.6696, -139.113, 0.52 ) }
    dend_36 { pt3dadd( 51.2785, 70.3754, -140.476, 0.81 ) }
    dend_36 { pt3dadd( 51.315, 70.4129, -140.558, 0.81 ) }
    dend_36 { pt3dadd( 52.157, 71.2368, -142.432, 0.81 ) }
    dend_36 { pt3dadd( 53.4755, 72.3862, -145.273, 0.37 ) }
    dend_36 { pt3dadd( 54.5504, 73.2211, -147.447, 1.18 ) }
    dend_36 { pt3dadd( 55.8152, 74.1408, -149.931, 0.29 ) }
    dend_36 { pt3dadd( 56.2098, 74.3976, -150.663, 0.96 ) }
    dend_36 { pt3dadd( 56.3867, 74.5062, -150.972, 0.96 ) }
    dend_36 { pt3dadd( 57.4136, 74.9972, -152.711, 0.37 ) }
    dend_36 { pt3dadd( 57.6579, 75.1077, -153.098, 0.88 ) }
    dend_36 { pt3dadd( 57.7004, 75.1324, -153.171, 0.88 ) }
    dend_36 { pt3dadd( 58.1031, 75.3853, -153.843, 1.11 ) }
    dend_36 { pt3dadd( 58.1495, 75.4135, -153.917, 1.11 ) }
    dend_36 { pt3dadd( 60.5348, 76.8556, -157.424, 0.29 ) }
    dend_36 { pt3dadd( 61.0863, 77.1959, -158.21, 0.96 ) }
    dend_36 { pt3dadd( 62.1342, 77.8377, -159.638, 0.37 ) }
    dend_36 { pt3dadd( 62.9805, 78.392, -160.769, 0.29 ) }
    dend_36 { pt3dadd( 63.7191, 78.9295, -161.721, 0.52 ) }
    dend_36 { pt3dadd( 64.7053, 79.7388, -162.884, 0.66 ) }
    dend_36 { pt3dadd( 65.9919, 80.9489, -164.192, 1.03 ) }
    dend_36 { pt3dadd( 66.4295, 81.3673, -164.652, 1.03 ) }
    dend_36 { pt3dadd( 68.0072, 82.8442, -166.254, 0.29 ) }
    dend_36 { pt3dadd( 68.6548, 83.4671, -166.961, 0.29 ) }
    dend_36 { pt3dadd( 69.1926, 84.0192, -167.544, 0.59 ) }
    dend_36 { pt3dadd( 69.4935, 84.3316, -167.834, 0.88 ) }
    dend_36 { pt3dadd( 70.9419, 85.7839, -169.043, 0.29 ) }
    dend_36 { pt3dadd( 71.3173, 86.1668, -169.366, 0.96 ) }
    dend_36 { pt3dadd( 71.3772, 86.2275, -169.414, 0.96 ) }
    dend_36 { pt3dadd( 72.1506, 87.0006, -170.035, 0.29 ) }
    dend_36 { pt3dadd( 72.7758, 87.6389, -170.527, 1.18 ) }
    dend_36 { pt3dadd( 73.0326, 87.9159, -170.712, 1.55 ) }
    dend_36 { pt3dadd( 74.2111, 89.2886, -171.533, 0.29 ) }
    dend_36 { pt3dadd( 74.7046, 89.8474, -171.895, 0.29 ) }
    dend_36 { pt3dadd( 75.1327, 90.2771, -172.196, 0.74 ) }
    dend_36 { pt3dadd( 75.2118, 90.3454, -172.247, 0.74 ) }
    dend_36 { pt3dadd( 75.7028, 90.7223, -172.527, 0.74 ) }
    dend_36 { pt3dadd( 77.1011, 91.5759, -173.361, 0.22 ) }
    dend_36 { pt3dadd( 77.5958, 91.7907, -173.636, 0.22 ) }
    dend_36 { pt3dadd( 78.2868, 92.071, -174.054, 1.03 ) }
    dend_36 { pt3dadd( 78.9669, 92.3495, -174.471, 1.25 ) }
    dend_36 { pt3dadd( 79.0325, 92.3777, -174.51, 1.25 ) }
    dend_36 { pt3dadd( 81.1964, 93.3164, -175.727, 0.29 ) }
    dend_36 { pt3dadd( 81.9629, 93.6424, -176.149, 0.29 ) }
    dend_36 { pt3dadd( 83.2563, 94.1789, -176.872, 0.29 ) }
    dend_36 { pt3dadd( 83.9237, 94.453, -177.269, 0.29 ) }
    dend_36 { pt3dadd( 84.4528, 94.6933, -177.589, 0.81 ) }
    dend_36 { pt3dadd( 85.1649, 95.0564, -178.043, 1.11 ) }
    dend_36 { pt3dadd( 86.8711, 95.9817, -179.112, 0.22 ) }
    dend_36 { pt3dadd( 87.5339, 96.3249, -179.54, 1.11 ) }
    dend_36 { pt3dadd( 89.0391, 97.0564, -180.565, 0.22 ) }
    dend_36 { pt3dadd( 89.978, 97.5114, -181.25, 0.22 ) }
    dend_36 { pt3dadd( 91.3433, 98.1834, -182.263, 0.44 ) }
    dend_36 { pt3dadd( 92.1673, 98.6055, -182.855, 1.11 ) }
    dend_36 { pt3dadd( 92.8626, 98.9521, -183.311, 1.25 ) }
    dend_36 { pt3dadd( 94.9698, 99.8901, -184.553, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_36 { pt3dadd( 96.0867, 100.345, -185.098, 0.88 ) }
    dend_36 { pt3dadd( 96.8271, 100.594, -185.406, 0.88 ) }
    dend_36 { pt3dadd( 97.9683, 100.929, -185.804, 0.22 ) }
    dend_36 { pt3dadd( 98.646, 101.109, -186.022, 0.88 ) }
    dend_36 { pt3dadd( 100.004, 101.419, -186.393, 0.22 ) }
    dend_36 { pt3dadd( 101.31, 101.581, -186.674, 0.22 ) }
    dend_36 { pt3dadd( 102.349, 101.659, -186.912, 0.22 ) }
    dend_36 { pt3dadd( 103.371, 101.737, -187.188, 0.88 ) }
    dend_36 { pt3dadd( 103.908, 101.785, -187.351, 1.11 ) }
    dend_36 { pt3dadd( 103.976, 101.793, -187.373, 1.11 ) }
    dend_36 { pt3dadd( 105.629, 102.012, -187.971, 0.22 ) }
    dend_36 { pt3dadd( 105.793, 102.032, -188.032, 0.22 ) }
    dend_36 { pt3dadd( 106.95, 102.247, -188.449, 0.22 ) }
    dend_36 { pt3dadd( 107.827, 102.409, -188.747, 0.22 ) }
    dend_36 { pt3dadd( 107.904, 102.42, -188.772, 0.22 ) }
    dend_36 { pt3dadd( 108.77, 102.524, -189.026, 1.03 ) }
    dend_36 { pt3dadd( 108.853, 102.529, -189.047, 1.03 ) }
    dend_36 { pt3dadd( 109.658, 102.558, -189.23, 1.03 ) }
    dend_36 { pt3dadd( 111.352, 102.59, -189.594, 0.22 ) }
    dend_36 { pt3dadd( 112.337, 102.629, -189.792, 0.22 ) }
    dend_36 { pt3dadd( 113.26, 102.697, -189.959, 1.4 ) }
    dend_36 { pt3dadd( 114.323, 102.81, -190.125, 1.47 ) }
    dend_36 { pt3dadd( 115.906, 103.078, -190.349, 0.22 ) }
    dend_36 { pt3dadd( 116.392, 103.19, -190.406, 0.59 ) }
    dend_36 { pt3dadd( 116.572, 103.24, -190.419, 0.59 ) }
    dend_36 { pt3dadd( 117.181, 103.429, -190.462, 0.81 ) }
    dend_36 { pt3dadd( 117.291, 103.467, -190.479, 0.81 ) }
    dend_36 { pt3dadd( 118.316, 103.77, -190.697, 0.15 ) }
    dend_36 { pt3dadd( 118.725, 103.857, -190.798, 0.15 ) }
    dend_36 { pt3dadd( 119.449, 103.942, -191.009, 0.74 ) }
    dend_36 { pt3dadd( 119.603, 103.946, -191.056, 0.74 ) }
    dend_36 { pt3dadd( 121.678, 103.831, -191.68, 0.22 ) }
    dend_36 { pt3dadd( 123.107, 103.697, -192.131, 0.22 ) }
    dend_36 { pt3dadd( 123.176, 103.689, -192.152, 0.22 ) }
    dend_36 { pt3dadd( 124.205, 103.572, -192.474, 1.25 ) }
    dend_36 { pt3dadd( 125.056, 103.491, -192.686, 1.25 ) }
    dend_36 { pt3dadd( 126.208, 103.368, -192.895, 0.37 ) }
    dend_36 { pt3dadd( 127.97, 103.119, -192.954, 0.22 ) }
    dend_36 { pt3dadd( 128.851, 102.997, -192.902, 0.37 ) }
    dend_36 { pt3dadd( 129.039, 102.969, -192.877, 0.37 ) }
    dend_36 { pt3dadd( 130.734, 102.741, -192.523, 0.88 ) }
    dend_36 { pt3dadd( 131.354, 102.667, -192.364, 0.88 ) }
    dend_36 { pt3dadd( 133.231, 102.372, -191.82, 0.22 ) }
    dend_36 { pt3dadd( 134.049, 102.197, -191.592, 0.74 ) }
    dend_36 { pt3dadd( 134.643, 102.048, -191.487, 0.96 ) }
    dend_36 { pt3dadd( 135.265, 101.875, -191.435, 0.96 ) }
    dend_36 { pt3dadd( 136.292, 101.563, -191.45, 0.22 ) }
    dend_36 { pt3dadd( 137.684, 101.157, -191.552, 0.22 ) }
    dend_36 { pt3dadd( 139.586, 100.621, -191.836, 0.22 ) }
    dend_36 { pt3dadd( 140.839, 100.277, -192.007, 0.74 ) }
    dend_36 { pt3dadd( 141.339, 100.138, -192.067, 1.03 ) }
    dend_36 { pt3dadd( 141.45, 100.11, -192.079, 1.03 ) }
    dend_36 { pt3dadd( 141.925, 100.018, -192.117, 1.25 ) }
    dend_36 { pt3dadd( 142.101, 100.009, -192.136, 1.25 ) }
    dend_36 { pt3dadd( 143.852, 100.072, -192.35, 0.22 ) }
    dend_36 { pt3dadd( 144.835, 100.134, -192.469, 0.15 ) }
    dend_36 { pt3dadd( 145.5, 100.156, -192.553, 0.88 ) }
    dend_36 { pt3dadd( 146.258, 100.158, -192.653, 1.11 ) }
    dend_36 { pt3dadd( 148.244, 100.123, -192.93, 0.22 ) }
    dend_36 { pt3dadd( 149.035, 100.103, -193.065, 0.81 ) }
    dend_36 { pt3dadd( 149.576, 100.091, -193.178, 0.81 ) }
    dend_36 { pt3dadd( 151.092, 100.051, -193.492, 0.29 ) }
    dend_36 { pt3dadd( 151.332, 100.038, -193.549, 0.29 ) }
    dend_36 { pt3dadd( 152.214, 99.9607, -193.802, 0.29 ) }
    dend_36 { pt3dadd( 153.258, 99.8434, -194.33, 0.96 ) }
    dend_36 { pt3dadd( 153.925, 99.7678, -194.814, 0.59 ) }
    dend_36 { pt3dadd( 153.982, 99.7617, -194.863, 0.59 ) }
    dend_36 { pt3dadd( 154.924, 99.6296, -195.79, 0.59 ) }
    dend_36 { pt3dadd( 155.736, 99.4714, -196.62, 1.33 ) }
    dend_36 { pt3dadd( 157.976, 98.9055, -198.998, 0.22 ) }
    dend_36 { pt3dadd( 158.423, 98.7716, -199.48, 1.11 ) }
    dend_36 { pt3dadd( 158.881, 98.6215, -199.977, 1.33 ) }
    dend_36 { pt3dadd( 160.374, 98.1073, -201.56, 0.22 ) }
    dend_36 { pt3dadd( 160.807, 97.9437, -201.983, 0.66 ) }
    dend_36 { pt3dadd( 161.034, 97.8537, -202.186, 0.81 ) }
    dend_36 { pt3dadd( 161.113, 97.8186, -202.242, 0.81 ) }
    dend_36 { pt3dadd( 161.925, 97.4459, -202.798, 0.22 ) }
    dend_36 { pt3dadd( 161.983, 97.4186, -202.84, 0.22 ) }
    dend_36 { pt3dadd( 162.782, 97.0557, -203.298, 0.22 ) }
    dend_36 { pt3dadd( 169.319, 100.811, -211.712, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 80/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -0.989953, 32.7066, -2.69529, 0.96 ) }
    dend_23 { pt3dadd( -1.24886, 33.4726, -3.00979, 0.96 ) }
    dend_23 { pt3dadd( -1.53307, 34.1184, -3.46656, 0.96 ) }
    dend_23 { pt3dadd( -1.88394, 34.7899, -3.99321, 0.81 ) }
    dend_23 { pt3dadd( -2.19365, 35.3291, -4.45802, 0.52 ) }
    dend_23 { pt3dadd( -2.71676, 36.2335, -5.2268, 0.52 ) }
    dend_23 { pt3dadd( -3.95017, 38.6564, -7.18727, 0.96 ) }
    dend_23 { pt3dadd( -4.42131, 39.7742, -8.11415, 0.96 ) }
    dend_23 { pt3dadd( -4.67347, 40.5024, -8.70819, 0.96 ) }
    dend_23 { pt3dadd( -4.96851, 41.5245, -9.50168, 0.52 ) }
    dend_23 { pt3dadd( -5.15038, 42.2638, -10.0014, 0.44 ) }
    dend_23 { pt3dadd( -5.4354, 43.568, -10.6153, 0.44 ) }
    dend_23 { pt3dadd( -5.58709, 44.6383, -10.7984, 0.37 ) }
    dend_23 { pt3dadd( -5.67544, 45.4661, -10.8783, 0.66 ) }
    dend_23 { pt3dadd( -5.75813, 46.0239, -10.9151, 1.03 ) }
    dend_23 { pt3dadd( -5.96545, 46.7677, -10.9587, 1.4 ) }
    dend_23 { pt3dadd( -6.25417, 47.3341, -11.0283, 1.33 ) }
    dend_23 { pt3dadd( -6.91742, 48.3075, -11.1739, 0.96 ) }
    dend_23 { pt3dadd( -6.95436, 48.3558, -11.1835, 0.96 ) }
    dend_23 { pt3dadd( -7.37882, 48.8906, -11.3062, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_23 { pt3dadd( -7.90164, 49.5619, -11.4757, 0.81 ) }
    dend_23 { pt3dadd( -8.67576, 50.5924, -11.7463, 1.18 ) }
    dend_23 { pt3dadd( -9.28213, 51.4616, -11.9436, 1.47 ) }
    // Section: dend_13, id: dend_13, parent: dend_1 (entry count 3/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -17.2195, 37.1775, 10.4434, 0.74 ) }
    dend_13 { pt3dadd( -18.1315, 36.8719, 10.7567, 0.74 ) }
    dend_13 { pt3dadd( -18.709, 36.6827, 10.9993, 0.88 ) }
    dend_13 { pt3dadd( -19.1059, 36.5585, 11.1777, 0.96 ) }
    dend_13 { pt3dadd( -19.7211, 36.3757, 11.457, 0.96 ) }
    dend_13 { pt3dadd( -20.1715, 36.2491, 11.6742, 0.81 ) }
    dend_13 { pt3dadd( -20.6153, 36.1339, 11.8925, 0.74 ) }
    dend_13 { pt3dadd( -21.1661, 36.0157, 12.1818, 0.74 ) }
    dend_13 { pt3dadd( -21.5904, 35.9493, 12.4154, 0.59 ) }
    dend_13 { pt3dadd( -22.0231, 35.8953, 12.6534, 0.88 ) }
    dend_13 { pt3dadd( -22.4047, 35.8537, 12.8629, 0.81 ) }
    dend_13 { pt3dadd( -22.7519, 35.8207, 13.038, 0.81 ) }
    dend_13 { pt3dadd( -23.2017, 35.7844, 13.2473, 1.33 ) }
    dend_13 { pt3dadd( -23.585, 35.7535, 13.4062, 1.33 ) }
    dend_13 { pt3dadd( -24.0456, 35.7134, 13.5946, 0.81 ) }
    dend_13 { pt3dadd( -24.549, 35.6633, 13.7885, 0.81 ) }
    dend_13 { pt3dadd( -25.0953, 35.6011, 13.9568, 0.81 ) }
    dend_13 { pt3dadd( -25.6549, 35.5266, 14.0973, 0.81 ) }
    dend_13 { pt3dadd( -25.7007, 35.5201, 14.1076, 0.81 ) }
    dend_13 { pt3dadd( -26.014, 35.4768, 14.1647, 0.74 ) }
    dend_13 { pt3dadd( -26.5083, 35.4189, 14.2355, 0.66 ) }
    dend_13 { pt3dadd( -27.2267, 35.3288, 14.2928, 0.96 ) }
    dend_13 { pt3dadd( -27.8115, 35.2451, 14.3174, 0.96 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 26/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -17.2195, 37.1775, 10.4434, 1.33 ) }
    dend_2 { pt3dadd( -18.2008, 38.072, 11.2012, 1.33 ) }
    dend_2 { pt3dadd( -18.683, 38.5266, 11.564, 1.33 ) }
    dend_2 { pt3dadd( -19.3142, 39.18, 12.0023, 1.69 ) }
    dend_2 { pt3dadd( -19.7083, 39.5932, 12.2488, 1.84 ) }
    dend_2 { pt3dadd( -20.466, 40.3784, 12.7213, 1.55 ) }
    dend_2 { pt3dadd( -21.3003, 41.234, 13.2319, 1.18 ) }
    dend_2 { pt3dadd( -21.8464, 41.7943, 13.5622, 1.18 ) }
    dend_2 { pt3dadd( -22.6414, 42.6224, 14.0492, 1.25 ) }
    dend_2 { pt3dadd( -23.1152, 43.1282, 14.3295, 1.25 ) }
    dend_2 { pt3dadd( -23.7611, 43.8189, 14.6964, 1.55 ) }
    dend_2 { pt3dadd( -23.9968, 44.0622, 14.8032, 1.92 ) }
    dend_2 { pt3dadd( -24.7919, 44.8406, 15.1461, 2.28 ) }
    // Section: dend_95, id: dend_95, parent: dend_65 (entry count 39/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( 3.76101, -67.0215, -5.77111, 1.18 ) }
    dend_95 { pt3dadd( 4.32841, -67.214, -5.22886, 1.18 ) }
    dend_95 { pt3dadd( 5.22771, -67.5287, -4.34192, 0.96 ) }
    dend_95 { pt3dadd( 6.32611, -67.9143, -3.24652, 0.96 ) }
    dend_95 { pt3dadd( 8.10483, -68.5247, -1.44428, 0.96 ) }
    dend_95 { pt3dadd( 9.44522, -68.9754, -0.0775538, 0.74 ) }
    dend_95 { pt3dadd( 10.6396, -69.3331, 1.09569, 0.66 ) }
    dend_95 { pt3dadd( 11.0428, -69.4578, 1.51363, 0.96 ) }
    dend_95 { pt3dadd( 11.0968, -69.4747, 1.56905, 0.96 ) }
    dend_95 { pt3dadd( 11.9676, -69.712, 2.35578, 0.96 ) }
    dend_95 { pt3dadd( 12.0385, -69.7292, 2.39674, 0.96 ) }
    dend_95 { pt3dadd( 13.252, -70.0322, 2.80891, 0.74 ) }
    dend_95 { pt3dadd( 13.4075, -70.0854, 2.84412, 0.74 ) }
    dend_95 { pt3dadd( 14.7962, -70.7224, 3.09464, 0.74 ) }
    dend_95 { pt3dadd( 15.5258, -71.1337, 3.21485, 0.81 ) }
    dend_95 { pt3dadd( 16.0397, -71.4683, 3.28801, 1.18 ) }
    dend_95 { pt3dadd( 17.3561, -72.3844, 3.47727, 1.03 ) }
    dend_95 { pt3dadd( 18.2127, -73.044, 3.60251, 1.11 ) }
    dend_95 { pt3dadd( 19.6559, -74.1853, 3.81687, 0.74 ) }
    dend_95 { pt3dadd( 20.521, -74.9178, 3.94939, 1.11 ) }
    dend_95 { pt3dadd( 21.2434, -75.5494, 4.06139, 1.92 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 60/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 3.76101, -67.0215, -5.77111, 1.03 ) }
    dend_66 { pt3dadd( 3.89756, -68.0079, -5.55151, 1.03 ) }
    dend_66 { pt3dadd( 3.93016, -69.0227, -5.37477, 0.88 ) }
    dend_66 { pt3dadd( 3.92443, -69.9346, -5.2416, 1.18 ) }
    dend_66 { pt3dadd( 3.89251, -70.8985, -5.11709, 1.25 ) }
    dend_66 { pt3dadd( 3.86061, -71.6547, -5.02286, 1.25 ) }
    dend_66 { pt3dadd( 3.79205, -72.9882, -4.87068, 0.88 ) }
    dend_66 { pt3dadd( 3.62019, -75.0196, -4.65672, 0.88 ) }
    dend_66 { pt3dadd( 3.5248, -76.0553, -4.56711, 1.03 ) }
    dend_66 { pt3dadd( 3.47399, -76.8517, -4.53675, 1.03 ) }
    dend_66 { pt3dadd( 3.44023, -77.9963, -4.53434, 0.88 ) }
    dend_66 { pt3dadd( 3.46552, -78.6875, -4.54999, 0.88 ) }
    dend_66 { pt3dadd( 3.56068, -79.2914, -4.58281, 0.88 ) }
    dend_66 { pt3dadd( 3.86232, -80.1807, -4.66018, 0.88 ) }
    dend_66 { pt3dadd( 4.2447, -80.919, -4.74467, 1.33 ) }
    dend_66 { pt3dadd( 4.28042, -80.9674, -4.75112, 1.33 ) }
    dend_66 { pt3dadd( 4.83276, -81.5643, -4.83517, 1.55 ) }
    dend_66 { pt3dadd( 5.4959, -82.2224, -4.92121, 1.77 ) }
    dend_66 { pt3dadd( 5.95799, -82.6791, -4.97614, 1.99 ) }
    dend_66 { pt3dadd( 6.34653, -83.063, -5.01747, 1.99 ) }
    dend_66 { pt3dadd( 7.31686, -84.0364, -5.10343, 1.47 ) }
    dend_66 { pt3dadd( 8.28376, -85.0252, -5.19345, 1.33 ) }
    dend_66 { pt3dadd( 9.1392, -85.9342, -5.28055, 1.33 ) }
    dend_66 { pt3dadd( 9.74919, -86.61, -5.35177, 1.69 ) }
    dend_66 { pt3dadd( 10.1205, -87.0372, -5.3976, 1.69 ) }
    // Section: dend_60, id: dend_60, parent: dend_54 (entry count 85/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 2.64368, -76.7842, -0.829118, 0.96 ) }
    dend_60 { pt3dadd( 2.96669, -77.3965, -0.0664821, 0.96 ) }
    dend_60 { pt3dadd( 3.3688, -78.5515, 1.27161, 0.52 ) }
    dend_60 { pt3dadd( 3.43986, -78.8717, 1.5893, 0.81 ) }
    dend_60 { pt3dadd( 3.52803, -79.8939, 2.45748, 0.74 ) }
    dend_60 { pt3dadd( 3.51338, -80.8183, 3.14063, 1.11 ) }
    dend_60 { pt3dadd( 3.46115, -81.8025, 3.77945, 0.74 ) }
    dend_60 { pt3dadd( 3.39552, -82.532, 4.18592, 0.52 ) }
    dend_60 { pt3dadd( 3.27524, -83.4946, 4.58789, 0.52 ) }
    dend_60 { pt3dadd( 3.15175, -84.572, 4.98503, 0.52 ) }
    dend_60 { pt3dadd( 3.09703, -85.3722, 5.20799, 0.37 ) }
    dend_60 { pt3dadd( 3.09739, -86.1313, 5.39715, 0.52 ) }
    dend_60 { pt3dadd( 3.17785, -87.2952, 5.67832, 0.81 ) }
    dend_60 { pt3dadd( 3.26309, -87.8693, 5.86285, 1.11 ) }
    dend_60 { pt3dadd( 3.3681, -88.4307, 6.10835, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_60 { pt3dadd( 3.5137, -89.1491, 6.52409, 0.37 ) }
    dend_60 { pt3dadd( 3.51933, -89.7101, 6.99394, 0.74 ) }
    dend_60 { pt3dadd( 3.37714, -89.9102, 7.25922, 0.74 ) }
    dend_60 { pt3dadd( 2.81927, -90.2375, 7.81278, 0.74 ) }
    dend_60 { pt3dadd( 2.24945, -90.5052, 8.25342, 0.59 ) }
    dend_60 { pt3dadd( 1.77714, -90.7383, 8.5628, 0.59 ) }
    dend_60 { pt3dadd( 1.39942, -90.9648, 8.79478, 0.88 ) }
    dend_60 { pt3dadd( 1.02072, -91.2744, 9.00947, 0.96 ) }
    dend_60 { pt3dadd( 0.726979, -91.6465, 9.19638, 0.81 ) }
    dend_60 { pt3dadd( 0.358629, -92.3307, 9.45236, 0.52 ) }
    dend_60 { pt3dadd( 0.10917, -93.008, 9.71167, 0.52 ) }
    dend_60 { pt3dadd( -0.0924497, -93.6826, 10.0095, 0.88 ) }
    dend_60 { pt3dadd( -0.156773, -93.944, 10.1505, 1.03 ) }
    dend_60 { pt3dadd( -0.339487, -94.8434, 10.7612, 0.52 ) }
    dend_60 { pt3dadd( -0.392399, -95.1379, 10.9965, 0.52 ) }
    dend_60 { pt3dadd( -0.50788, -95.814, 11.6403, 0.81 ) }
    dend_60 { pt3dadd( -0.654665, -96.5108, 12.4261, 0.81 ) }
    dend_60 { pt3dadd( -0.851076, -97.1701, 13.2554, 0.44 ) }
    dend_60 { pt3dadd( -1.06434, -97.6785, 13.9385, 0.81 ) }
    dend_60 { pt3dadd( -1.07848, -97.7027, 13.9729, 0.81 ) }
    dend_60 { pt3dadd( -1.46475, -98.2547, 14.7244, 0.52 ) }
    dend_60 { pt3dadd( -1.71413, -98.574, 15.1387, 0.59 ) }
    dend_60 { pt3dadd( -2.03824, -98.9378, 15.5733, 0.59 ) }
    dend_60 { pt3dadd( -2.47557, -99.3349, 15.9721, 0.81 ) }
    dend_60 { pt3dadd( -2.81285, -99.6109, 16.1912, 0.96 ) }
    dend_60 { pt3dadd( -3.13396, -99.8602, 16.3597, 1.11 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 26/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 2.64368, -76.7842, -0.829118, 0.74 ) }
    dend_55 { pt3dadd( 2.47145, -79.0456, -0.861923, 0.74 ) }
    dend_55 { pt3dadd( 2.69684, -81.0145, -0.744262, 0.59 ) }
    dend_55 { pt3dadd( 2.71946, -81.079, -0.727796, 0.59 ) }
    dend_55 { pt3dadd( 3.37059, -82.3787, -0.216884, 0.59 ) }
    dend_55 { pt3dadd( 3.49756, -82.6828, -0.119127, 0.59 ) }
    dend_55 { pt3dadd( 3.94228, -83.9075, 0.166894, 0.59 ) }
    dend_55 { pt3dadd( 4.27736, -84.754, 0.343561, 0.88 ) }
    dend_55 { pt3dadd( 5.01371, -86.5887, 0.580249, 0.88 ) }
    dend_55 { pt3dadd( 5.749, -88.4853, 0.674563, 0.66 ) }
    dend_55 { pt3dadd( 7.13371, -92.2542, 0.611333, 1.25 ) }
    dend_55 { pt3dadd( 7.77775, -94.0469, 0.491856, 0.81 ) }
    dend_55 { pt3dadd( 8.29896, -95.5594, 0.287278, 0.74 ) }
    dend_55 { pt3dadd( 8.87524, -97.3172, -0.0637146, 0.74 ) }
    dend_55 { pt3dadd( 9.19937, -98.3738, -0.374179, 0.74 ) }
    dend_55 { pt3dadd( 9.22529, -98.4601, -0.405621, 0.74 ) }
    dend_55 { pt3dadd( 9.4643, -99.2052, -0.696797, 1.03 ) }
    dend_55 { pt3dadd( 9.72883, -100.374, -1.02308, 0.37 ) }
    dend_55 { pt3dadd( 9.79699, -101.542, -1.23307, 0.37 ) }
    dend_55 { pt3dadd( 9.72871, -102.028, -1.25325, 0.81 ) }
    dend_55 { pt3dadd( 9.5117, -102.829, -1.20684, 0.81 ) }
    dend_55 { pt3dadd( 9.22, -103.707, -1.10645, 0.81 ) }
    dend_55 { pt3dadd( 8.90934, -104.582, -0.952289, 0.66 ) }
    dend_55 { pt3dadd( 8.89105, -104.642, -0.938637, 0.66 ) }
    dend_55 { pt3dadd( 8.72144, -105.481, -0.770768, 0.66 ) }
    dend_55 { pt3dadd( 8.62246, -106.549, -0.621427, 0.59 ) }
    dend_55 { pt3dadd( 8.62097, -107.374, -0.549814, 0.81 ) }
    dend_55 { pt3dadd( 8.7287, -108.509, -0.446169, 0.88 ) }
    dend_55 { pt3dadd( 8.92363, -109.748, -0.333515, 1.18 ) }
    dend_55 { pt3dadd( 9.11543, -110.638, -0.266705, 1.33 ) }
    dend_55 { pt3dadd( 9.44979, -111.797, -0.211717, 0.59 ) }
    dend_55 { pt3dadd( 9.74872, -112.662, -0.195303, 0.81 ) }
    dend_55 { pt3dadd( 10.3084, -114.079, -0.222732, 0.44 ) }
    dend_55 { pt3dadd( 10.8323, -115.31, -0.292559, 0.37 ) }
    dend_55 { pt3dadd( 11.3398, -116.452, -0.483837, 0.37 ) }
    dend_55 { pt3dadd( 11.6623, -117.206, -0.696531, 0.88 ) }
    dend_55 { pt3dadd( 11.957, -117.986, -0.984477, 1.11 ) }
    dend_55 { pt3dadd( 12.2149, -118.912, -1.37972, 1.11 ) }
    dend_55 { pt3dadd( 12.2241, -118.979, -1.40992, 1.11 ) }
    dend_55 { pt3dadd( 12.227, -120.979, -2.19581, 0.66 ) }
    dend_55 { pt3dadd( 12.0279, -122.428, -2.62134, 0.59 ) }
    dend_55 { pt3dadd( 11.8009, -123.434, -2.80056, 0.59 ) }
    dend_55 { pt3dadd( 11.4951, -124.532, -2.8826, 0.59 ) }
    dend_55 { pt3dadd( 11.1573, -125.623, -2.86834, 1.18 ) }
    dend_55 { pt3dadd( 10.9558, -126.3, -2.80584, 1.33 ) }
    dend_55 { pt3dadd( 10.704, -127.171, -2.62403, 1.33 ) }
    dend_55 { pt3dadd( 10.4607, -128.196, -2.3999, 0.74 ) }
    dend_55 { pt3dadd( 10.3335, -129.054, -2.29635, 0.59 ) }
    dend_55 { pt3dadd( 10.3298, -129.134, -2.29586, 0.59 ) }
    dend_55 { pt3dadd( 10.3673, -130.011, -2.38852, 0.44 ) }
    dend_55 { pt3dadd( 10.3742, -130.083, -2.40746, 0.44 ) }
    dend_55 { pt3dadd( 10.4878, -131.13, -2.8106, 0.81 ) }
    dend_55 { pt3dadd( 10.536, -132.217, -3.31216, 1.11 ) }
    dend_55 { pt3dadd( 10.5351, -132.459, -3.41193, 1.11 ) }
    dend_55 { pt3dadd( 10.5322, -132.536, -3.4363, 1.11 ) }
    dend_55 { pt3dadd( 10.4318, -133.728, -3.70808, 0.37 ) }
    dend_55 { pt3dadd( 10.3222, -134.574, -3.83614, 0.37 ) }
    dend_55 { pt3dadd( 10.1314, -135.79, -3.87868, 0.74 ) }
    dend_55 { pt3dadd( 9.96475, -136.769, -3.82946, 1.18 ) }
    dend_55 { pt3dadd( 9.77528, -137.767, -3.738, 1.18 ) }
    dend_55 { pt3dadd( 9.62221, -138.531, -3.63853, 1.03 ) }
    dend_55 { pt3dadd( 9.50446, -139.387, -3.44545, 0.59 ) }
    dend_55 { pt3dadd( 9.41435, -140.609, -3.108, 0.59 ) }
    dend_55 { pt3dadd( 9.41725, -140.689, -3.07997, 0.59 ) }
    dend_55 { pt3dadd( 9.60152, -141.915, -2.63361, 0.29 ) }
    dend_55 { pt3dadd( 9.62356, -141.977, -2.60814, 0.29 ) }
    dend_55 { pt3dadd( 10.5549, -143.734, -1.90301, 0.29 ) }
    dend_55 { pt3dadd( 10.5929, -143.799, -1.87783, 0.29 ) }
    dend_55 { pt3dadd( 11.1482, -144.759, -1.5541, 0.96 ) }
    dend_55 { pt3dadd( 11.5468, -145.526, -1.31281, 0.96 ) }
    dend_55 { pt3dadd( 12.1083, -146.794, -0.931287, 0.29 ) }
    dend_55 { pt3dadd( 12.3306, -147.636, -0.689503, 0.29 ) }
    dend_55 { pt3dadd( 12.4049, -148.76, -0.402635, 0.29 ) }
    dend_55 { pt3dadd( 12.3719, -149.438, -0.217723, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_55 { pt3dadd( 12.2357, -150.198, 0.0266807, 0.52 ) }
    dend_55 { pt3dadd( 12.0031, -151.058, 0.348318, 0.29 ) }
    dend_55 { pt3dadd( 11.6861, -152.038, 0.761059, 0.29 ) }
    dend_55 { pt3dadd( 11.5805, -152.386, 0.927532, 1.18 ) }
    dend_55 { pt3dadd( 11.455, -152.984, 1.20646, 1.33 ) }
    dend_55 { pt3dadd( 11.3301, -153.924, 1.60034, 1.33 ) }
    dend_55 { pt3dadd( 11.2616, -154.871, 1.92429, 1.11 ) }
    dend_55 { pt3dadd( 11.2155, -155.91, 2.19711, 0.52 ) }
    dend_55 { pt3dadd( 11.2146, -155.998, 2.21311, 0.52 ) }
    dend_55 { pt3dadd( 11.2772, -157.304, 2.42032, 0.29 ) }
    dend_55 { pt3dadd( 11.3515, -158.049, 2.51563, 0.88 ) }
    dend_55 { pt3dadd( 11.4345, -158.788, 2.59098, 0.88 ) }
    dend_55 { pt3dadd( 11.512, -159.374, 2.65178, 0.66 ) }
    dend_55 { pt3dadd( 11.5898, -160.142, 2.74484, 0.44 ) }
    dend_55 { pt3dadd( 11.5954, -161.304, 2.98487, 0.29 ) }
    dend_55 { pt3dadd( 11.5814, -161.39, 3.00663, 0.29 ) }
    dend_55 { pt3dadd( 11.3459, -162.049, 3.06063, 0.29 ) }
    dend_55 { pt3dadd( 11.3034, -162.149, 3.0516, 0.29 ) }
    dend_55 { pt3dadd( 11.0511, -162.808, 2.95681, 0.29 ) }
    dend_55 { pt3dadd( 10.7402, -163.781, 2.77766, 0.88 ) }
    dend_55 { pt3dadd( 10.4781, -164.96, 2.53091, 1.03 ) }
    dend_55 { pt3dadd( 10.2717, -166.84, 2.14227, 0.37 ) }
    dend_55 { pt3dadd( 10.2761, -167.954, 1.99772, 0.37 ) }
    dend_55 { pt3dadd( 10.3557, -169.021, 1.92644, 1.11 ) }
    dend_55 { pt3dadd( 10.4892, -169.956, 1.92681, 1.11 ) }
    dend_55 { pt3dadd( 10.7177, -171.142, 2.02682, 1.03 ) }
    dend_55 { pt3dadd( 10.9308, -172.085, 2.18971, 1.03 ) }
    dend_55 { pt3dadd( 11.3786, -174.021, 2.6434, 0.29 ) }
    dend_55 { pt3dadd( 11.5068, -174.754, 2.81433, 0.29 ) }
    dend_55 { pt3dadd( 11.5918, -175.475, 2.97121, 0.74 ) }
    dend_55 { pt3dadd( 11.6261, -176.141, 3.12531, 1.03 ) }
    dend_55 { pt3dadd( 11.5971, -177.04, 3.36483, 1.33 ) }
    dend_55 { pt3dadd( 11.4735, -177.922, 3.62067, 1.03 ) }
    dend_55 { pt3dadd( 11.2204, -178.825, 3.88491, 0.29 ) }
    dend_55 { pt3dadd( 11.1896, -178.902, 3.91814, 0.29 ) }
    dend_55 { pt3dadd( 10.7703, -179.648, 4.36044, 0.29 ) }
    dend_55 { pt3dadd( 10.2984, -180.286, 4.8781, 0.88 ) }
    dend_55 { pt3dadd( 9.87549, -180.697, 5.3383, 0.88 ) }
    dend_55 { pt3dadd( 9.42065, -181.054, 5.84762, 0.88 ) }
    dend_55 { pt3dadd( 8.87535, -181.466, 6.47242, 0.96 ) }
    dend_55 { pt3dadd( 8.58866, -181.689, 6.80302, 0.96 ) }
    dend_55 { pt3dadd( 8.52472, -181.746, 6.88018, 0.96 ) }
    dend_55 { pt3dadd( 8.07104, -182.311, 7.43914, 0.29 ) }
    dend_55 { pt3dadd( 7.81334, -182.878, 7.81528, 0.29 ) }
    dend_55 { pt3dadd( 7.67922, -183.565, 8.07374, 0.29 ) }
    dend_55 { pt3dadd( 7.6757, -183.638, 8.09046, 0.29 ) }
    dend_55 { pt3dadd( 7.74034, -184.428, 8.23491, 0.96 ) }
    dend_55 { pt3dadd( 7.83444, -185.033, 8.32448, 0.96 ) }
    dend_55 { pt3dadd( 8.01297, -185.737, 8.45116, 0.44 ) }
    dend_55 { pt3dadd( 8.28305, -186.71, 8.64315, 0.37 ) }
    dend_55 { pt3dadd( 8.50801, -187.566, 8.83292, 1.25 ) }
    dend_55 { pt3dadd( 8.76181, -188.74, 9.07886, 1.47 ) }
    dend_55 { pt3dadd( 8.88947, -189.588, 9.23285, 1.18 ) }
    dend_55 { pt3dadd( 9.05453, -191.207, 9.49436, 0.74 ) }
    dend_55 { pt3dadd( 9.08756, -192.169, 9.6319, 0.37 ) }
    dend_55 { pt3dadd( 9.01071, -193.378, 9.7563, 0.29 ) }
    dend_55 { pt3dadd( 8.7835, -194.562, 9.7882, 0.29 ) }
    dend_55 { pt3dadd( 8.46423, -195.554, 9.75029, 1.03 ) }
    dend_55 { pt3dadd( 8.4295, -195.636, 9.74351, 1.03 ) }
    dend_55 { pt3dadd( 8.1233, -196.241, 9.64366, 1.25 ) }
    dend_55 { pt3dadd( 7.71307, -197.003, 9.50955, 1.18 ) }
    dend_55 { pt3dadd( 7.26294, -197.831, 9.38167, 0.88 ) }
    dend_55 { pt3dadd( 7.00109, -198.354, 9.36138, 0.66 ) }
    dend_55 { pt3dadd( 6.63228, -199.162, 9.40743, 0.37 ) }
    dend_55 { pt3dadd( 6.19814, -200.196, 9.56782, 0.29 ) }
    dend_55 { pt3dadd( 6.14327, -200.343, 9.60241, 0.29 ) }
    dend_55 { pt3dadd( 5.81372, -201.328, 9.98592, 0.29 ) }
    dend_55 { pt3dadd( 5.46715, -202.4, 10.5266, 0.88 ) }
    dend_55 { pt3dadd( 5.28483, -202.975, 10.8553, 1.33 ) }
    dend_55 { pt3dadd( 4.94788, -204.0, 11.5019, 1.55 ) }
    dend_55 { pt3dadd( 4.83798, -204.326, 11.7235, 1.84 ) }
    dend_55 { pt3dadd( 4.38465, -205.72, 12.6198, 0.44 ) }
    dend_55 { pt3dadd( 4.19315, -206.309, 12.9811, 0.81 ) }
    dend_55 { pt3dadd( 3.88842, -207.281, 13.4978, 0.37 ) }
    dend_55 { pt3dadd( 3.70463, -207.929, 13.8164, 0.29 ) }
    dend_55 { pt3dadd( 3.6898, -207.997, 13.843, 0.29 ) }
    dend_55 { pt3dadd( 3.66631, -208.82, 14.1033, 0.29 ) }
    dend_55 { pt3dadd( 3.68597, -208.891, 14.1148, 0.29 ) }
    dend_55 { pt3dadd( 3.90091, -209.378, 14.1793, 0.52 ) }
    dend_55 { pt3dadd( 3.97828, -209.522, 14.194, 0.52 ) }
    dend_55 { pt3dadd( 4.40176, -210.296, 14.2783, 0.37 ) }
    dend_55 { pt3dadd( 5.01564, -211.599, 14.4373, 0.29 ) }
    dend_55 { pt3dadd( 5.22973, -212.22, 14.4671, 0.74 ) }
    dend_55 { pt3dadd( 5.38807, -212.847, 14.4675, 0.81 ) }
    dend_55 { pt3dadd( 5.47712, -213.487, 14.4487, 0.52 ) }
    dend_55 { pt3dadd( 5.48478, -214.012, 14.4261, 1.03 ) }
    dend_55 { pt3dadd( 5.40115, -214.947, 14.3715, 1.25 ) }
    dend_55 { pt3dadd( 5.12486, -216.523, 14.2189, 0.29 ) }
    dend_55 { pt3dadd( 5.10542, -216.605, 14.2128, 0.29 ) }
    dend_55 { pt3dadd( 4.82048, -217.543, 14.1787, 0.29 ) }
    dend_55 { pt3dadd( 4.33566, -218.964, 14.303, 0.29 ) }
    dend_55 { pt3dadd( 4.30692, -219.048, 14.3209, 0.29 ) }
    dend_55 { pt3dadd( 4.14413, -219.552, 14.4968, 1.11 ) }
    dend_55 { pt3dadd( 3.98656, -220.066, 14.7058, 1.33 ) }
    dend_55 { pt3dadd( 3.80304, -220.689, 14.9483, 1.33 ) }
    dend_55 { pt3dadd( 3.36903, -222.216, 15.5097, 0.52 ) }
    dend_55 { pt3dadd( 3.0524, -223.395, 15.8526, 0.29 ) }
    dend_55 { pt3dadd( 2.76785, -224.635, 16.1303, 0.29 ) }
    dend_55 { pt3dadd( 2.62214, -225.745, 16.3173, 1.11 ) }
    dend_55 { pt3dadd( 2.59718, -226.509, 16.3918, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_55 { pt3dadd( 2.65359, -227.331, 16.403, 1.11 ) }
    dend_55 { pt3dadd( 2.86404, -228.661, 16.2928, 0.44 ) }
    dend_55 { pt3dadd( 3.17559, -229.655, 16.1604, 0.44 ) }
    dend_55 { pt3dadd( 3.92246, -231.232, 15.8848, 0.44 ) }
    dend_55 { pt3dadd( 4.35742, -231.907, 15.7539, 0.96 ) }
    dend_55 { pt3dadd( 4.75985, -232.449, 15.6404, 1.18 ) }
    dend_55 { pt3dadd( 4.81358, -232.519, 15.6281, 1.18 ) }
    dend_55 { pt3dadd( 5.30978, -233.179, 15.5531, 0.29 ) }
    dend_55 { pt3dadd( 5.34248, -233.252, 15.548, 0.29 ) }
    dend_55 { pt3dadd( 5.43782, -234.006, 15.5476, 0.29 ) }
    dend_55 { pt3dadd( 5.47251, -234.711, 15.5804, 0.22 ) }
    dend_55 { pt3dadd( 5.49356, -235.879, 15.6552, 0.22 ) }
    dend_55 { pt3dadd( 5.50904, -236.224, 15.6696, 0.74 ) }
    dend_55 { pt3dadd( 5.60475, -237.326, 15.7387, 0.59 ) }
    dend_55 { pt3dadd( 5.72125, -237.98, 15.7645, 1.11 ) }
    dend_55 { pt3dadd( 5.8992, -238.61, 15.7669, 1.33 ) }
    dend_55 { pt3dadd( 5.93061, -238.684, 15.7627, 1.33 ) }
    dend_55 { pt3dadd( 6.57055, -239.728, 15.6605, 0.74 ) }
    dend_55 { pt3dadd( 7.37851, -240.744, 15.5173, 0.29 ) }
    dend_55 { pt3dadd( 8.2333, -241.603, 15.3476, 0.29 ) }
    dend_55 { pt3dadd( 8.713, -242.005, 15.2684, 0.66 ) }
    dend_55 { pt3dadd( 9.22058, -242.382, 15.1903, 0.37 ) }
    dend_55 { pt3dadd( 10.1059, -243.007, 15.0518, 0.29 ) }
    dend_55 { pt3dadd( 10.9067, -243.539, 14.9339, 0.88 ) }
    dend_55 { pt3dadd( 11.4388, -243.891, 14.8529, 1.25 ) }
    dend_55 { pt3dadd( 12.506, -244.66, 14.7105, 0.96 ) }
    dend_55 { pt3dadd( 13.2932, -245.302, 14.6095, 0.74 ) }
    dend_55 { pt3dadd( 13.9214, -245.914, 14.5241, 0.52 ) }
    dend_55 { pt3dadd( 14.632, -246.76, 14.4071, 0.29 ) }
    dend_55 { pt3dadd( 14.6888, -246.844, 14.4003, 0.29 ) }
    dend_55 { pt3dadd( 15.101, -247.663, 14.3638, 0.29 ) }
    dend_55 { pt3dadd( 15.1518, -247.826, 14.3612, 0.29 ) }
    dend_55 { pt3dadd( 15.3487, -248.929, 14.4075, 0.66 ) }
    dend_55 { pt3dadd( 15.4198, -249.682, 14.4981, 0.96 ) }
    dend_55 { pt3dadd( 15.4561, -250.66, 14.656, 0.52 ) }
    dend_55 { pt3dadd( 15.4831, -251.459, 14.8017, 0.52 ) }
    dend_55 { pt3dadd( 15.4928, -251.902, 14.8952, 0.52 ) }
    dend_55 { pt3dadd( 15.4973, -251.981, 14.9108, 0.52 ) }
    dend_55 { pt3dadd( 15.6747, -253.351, 15.1396, 0.22 ) }
    dend_55 { pt3dadd( 15.811, -254.035, 15.2219, 1.18 ) }
    dend_55 { pt3dadd( 16.0388, -254.764, 15.3087, 1.47 ) }
    dend_55 { pt3dadd( 16.5751, -256.112, 15.5287, 0.22 ) }
    dend_55 { pt3dadd( 16.8916, -256.845, 15.6666, 0.22 ) }
    dend_55 { pt3dadd( 17.248, -257.716, 15.8579, 1.03 ) }
    dend_55 { pt3dadd( 17.4098, -258.162, 15.9737, 1.03 ) }
    dend_55 { pt3dadd( 17.8917, -259.867, 16.5529, 0.37 ) }
    dend_55 { pt3dadd( 18.0831, -260.975, 16.9892, 0.29 ) }
    dend_55 { pt3dadd( 18.111, -261.751, 17.3243, 0.29 ) }
    dend_55 { pt3dadd( 17.9717, -262.654, 17.6962, 0.96 ) }
    dend_55 { pt3dadd( 17.7261, -263.478, 17.9794, 0.96 ) }
    dend_55 { pt3dadd( 17.3573, -264.466, 18.2149, 0.29 ) }
    dend_55 { pt3dadd( 17.0776, -265.169, 18.277, 0.29 ) }
    dend_55 { pt3dadd( 16.9104, -265.726, 18.2657, 0.52 ) }
    dend_55 { pt3dadd( 16.6984, -266.881, 18.1757, 0.44 ) }
    dend_55 { pt3dadd( 16.6388, -267.823, 18.0554, 0.37 ) }
    dend_55 { pt3dadd( 16.6553, -268.676, 17.9226, 0.37 ) }
    dend_55 { pt3dadd( 16.7347, -269.809, 17.7451, 0.37 ) }
    dend_55 { pt3dadd( 16.8186, -270.968, 17.5658, 1.18 ) }
    dend_55 { pt3dadd( 16.8371, -271.444, 17.4974, 1.18 ) }
    dend_55 { pt3dadd( 16.8093, -272.033, 17.4157, 1.18 ) }
    dend_55 { pt3dadd( 16.8013, -272.111, 17.4046, 1.11 ) }
    dend_55 { pt3dadd( 16.6519, -272.945, 17.2878, 0.66 ) }
    dend_55 { pt3dadd( 16.316, -274.129, 17.1298, 0.52 ) }
    dend_55 { pt3dadd( 15.8154, -275.475, 16.9322, 0.37 ) }
    dend_55 { pt3dadd( 15.3206, -276.659, 16.7425, 0.88 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 65/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -107.049, -123.587, -4.41233, 0.22 ) }
    dend_44 { pt3dadd( -108.156, -123.86, -4.36448, 0.22 ) }
    dend_44 { pt3dadd( -108.75, -124.024, -4.34529, 0.22 ) }
    dend_44 { pt3dadd( -109.257, -124.163, -4.34215, 0.22 ) }
    dend_44 { pt3dadd( -109.632, -124.25, -4.32553, 0.59 ) }
    dend_44 { pt3dadd( -110.103, -124.365, -4.29312, 0.59 ) }
    dend_44 { pt3dadd( -111.182, -124.63, -4.13502, 0.29 ) }
    dend_44 { pt3dadd( -111.865, -124.814, -4.02348, 0.52 ) }
    dend_44 { pt3dadd( -112.241, -124.919, -3.94848, 0.74 ) }
    dend_44 { pt3dadd( -113.628, -125.268, -3.68443, 0.96 ) }
    dend_44 { pt3dadd( -114.243, -125.396, -3.58964, 1.03 ) }
    dend_44 { pt3dadd( -116.343, -125.717, -3.28045, 0.29 ) }
    dend_44 { pt3dadd( -116.967, -125.777, -3.20693, 0.29 ) }
    dend_44 { pt3dadd( -117.202, -125.784, -3.18679, 0.29 ) }
    dend_44 { pt3dadd( -118.256, -125.792, -3.11772, 0.44 ) }
    dend_44 { pt3dadd( -119.135, -125.748, -3.11807, 0.44 ) }
    dend_44 { pt3dadd( -120.297, -125.579, -3.18934, 1.47 ) }
    dend_44 { pt3dadd( -120.944, -125.395, -3.31116, 2.21 ) }
    dend_44 { pt3dadd( -121.552, -125.179, -3.40798, 2.58 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 84/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -107.049, -123.587, -4.41233, 0.29 ) }
    dend_43 { pt3dadd( -107.646, -121.667, -5.17938, 0.29 ) }
    dend_43 { pt3dadd( -108.263, -119.633, -5.9341, 0.29 ) }
    dend_43 { pt3dadd( -108.288, -119.519, -5.96843, 0.29 ) }
    dend_43 { pt3dadd( -108.357, -118.87, -6.13995, 0.29 ) }
    dend_43 { pt3dadd( -108.392, -118.542, -6.22668, 0.29 ) }
    dend_43 { pt3dadd( -108.514, -117.392, -6.53051, 0.29 ) }
    dend_43 { pt3dadd( -108.515, -117.216, -6.55583, 0.29 ) }
    dend_43 { pt3dadd( -108.388, -115.553, -6.78337, 0.29 ) }
    dend_43 { pt3dadd( -108.204, -114.111, -6.96727, 0.29 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 94/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -54.5375, -137.886, -25.3363, 0.96 ) }
    dend_41 { pt3dadd( -53.6686, -139.741, -28.3453, 0.96 ) }
    dend_41 { pt3dadd( -53.5046, -140.151, -28.9669, 0.96 ) }
    dend_41 { pt3dadd( -53.1579, -141.126, -30.3883, 0.88 ) }
    dend_41 { pt3dadd( -52.92, -141.834, -31.378, 1.11 ) }
    dend_41 { pt3dadd( -52.3641, -143.569, -33.6976, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_41 { pt3dadd( -52.0964, -144.456, -34.8211, 0.22 ) }
    dend_41 { pt3dadd( -52.0016, -144.935, -35.3485, 1.4 ) }
    dend_41 { pt3dadd( -51.7154, -146.529, -37.0257, 0.22 ) }
    dend_41 { pt3dadd( -51.6507, -146.989, -37.4624, 0.88 ) }
    dend_41 { pt3dadd( -51.5937, -147.333, -37.7588, 0.88 ) }
    dend_41 { pt3dadd( -51.4232, -148.462, -38.591, 0.15 ) }
    dend_41 { pt3dadd( -51.3506, -149.383, -39.2085, 1.33 ) }
    dend_41 { pt3dadd( -51.3517, -149.78, -39.4501, 1.55 ) }
    dend_41 { pt3dadd( -51.4872, -151.429, -40.2755, 0.15 ) }
    dend_41 { pt3dadd( -51.4934, -151.481, -40.2993, 0.15 ) }
    dend_41 { pt3dadd( -51.5792, -152.128, -40.5492, 0.22 ) }
    dend_41 { pt3dadd( -51.7406, -153.497, -40.9511, 0.22 ) }
    dend_41 { pt3dadd( -51.7868, -154.125, -41.0807, 0.22 ) }
    dend_41 { pt3dadd( -51.8031, -154.743, -41.18, 1.18 ) }
    dend_41 { pt3dadd( -51.7965, -155.245, -41.2361, 1.47 ) }
    dend_41 { pt3dadd( -51.7383, -156.058, -41.3265, 1.25 ) }
    dend_41 { pt3dadd( -51.5204, -157.394, -41.5005, 0.22 ) }
    dend_41 { pt3dadd( -51.3419, -158.285, -41.6498, 1.4 ) }
    dend_41 { pt3dadd( -51.2227, -159.03, -41.8151, 1.55 ) }
    dend_41 { pt3dadd( -51.1585, -159.652, -41.9828, 1.11 ) }
    dend_41 { pt3dadd( -51.1568, -159.726, -42.0052, 1.11 ) }
    dend_41 { pt3dadd( -51.2227, -160.76, -42.3222, 0.22 ) }
    dend_41 { pt3dadd( -51.3447, -161.722, -42.5812, 0.22 ) }
    dend_41 { pt3dadd( -51.4064, -162.227, -42.7111, 0.22 ) }
    dend_41 { pt3dadd( -51.4829, -162.917, -42.8647, 1.18 ) }
    dend_41 { pt3dadd( -51.5452, -163.55, -43.0141, 1.4 ) }
    dend_41 { pt3dadd( -51.6112, -164.239, -43.1784, 0.22 ) }
    dend_41 { pt3dadd( -51.701, -165.22, -43.4019, 0.22 ) }
    dend_41 { pt3dadd( -51.7841, -166.301, -43.6917, 1.33 ) }
    dend_41 { pt3dadd( -51.8158, -166.603, -43.7935, 1.47 ) }
    dend_41 { pt3dadd( -52.0265, -168.032, -44.3705, 0.22 ) }
    dend_41 { pt3dadd( -52.1403, -168.603, -44.6365, 0.37 ) }
    dend_41 { pt3dadd( -52.223, -168.895, -44.7893, 0.37 ) }
    dend_41 { pt3dadd( -52.525, -169.725, -45.2923, 0.22 ) }
    dend_41 { pt3dadd( -52.8421, -170.488, -45.7767, 0.96 ) }
    dend_41 { pt3dadd( -52.9568, -170.775, -45.9509, 1.11 ) }
    dend_41 { pt3dadd( -53.088, -171.107, -46.1366, 1.33 ) }
    dend_41 { pt3dadd( -53.2866, -171.605, -46.4032, 0.88 ) }
    dend_41 { pt3dadd( -53.7742, -172.873, -47.0852, 0.22 ) }
    dend_41 { pt3dadd( -54.0174, -173.519, -47.4295, 0.22 ) }
    dend_41 { pt3dadd( -54.2558, -174.156, -47.7672, 0.22 ) }
    dend_41 { pt3dadd( -54.7511, -175.451, -48.4651, 1.18 ) }
    dend_41 { pt3dadd( -55.003, -176.101, -48.817, 1.69 ) }
    dend_41 { pt3dadd( -55.3046, -176.895, -49.2482, 1.62 ) }
    dend_41 { pt3dadd( -55.768, -178.135, -49.884, 0.22 ) }
    dend_41 { pt3dadd( -55.8742, -178.461, -50.0492, 1.11 ) }
    dend_41 { pt3dadd( -55.9821, -178.85, -50.2438, 1.11 ) }
    dend_41 { pt3dadd( -55.9948, -178.92, -50.2757, 1.11 ) }
    dend_41 { pt3dadd( -56.1244, -179.982, -50.7166, 0.22 ) }
    dend_41 { pt3dadd( -56.1789, -180.463, -50.8821, 0.29 ) }
    dend_41 { pt3dadd( -56.2079, -181.247, -51.1868, 0.22 ) }
    dend_41 { pt3dadd( -56.2093, -181.296, -51.2167, 0.22 ) }
    dend_41 { pt3dadd( -56.2221, -181.705, -51.5273, 1.18 ) }
    dend_41 { pt3dadd( -56.2244, -181.755, -51.5705, 1.18 ) }
    dend_41 { pt3dadd( -56.2463, -182.123, -51.913, 1.25 ) }
    dend_41 { pt3dadd( -56.277, -182.999, -52.7428, 0.59 ) }
    dend_41 { pt3dadd( -56.2944, -184.079, -53.7661, 0.15 ) }
    dend_41 { pt3dadd( -56.2969, -184.416, -54.0585, 0.15 ) }
    dend_41 { pt3dadd( -56.2923, -185.03, -54.5491, 1.11 ) }
    dend_41 { pt3dadd( -56.2932, -185.308, -54.7536, 1.4 ) }
    dend_41 { pt3dadd( -56.3308, -186.343, -55.4328, 0.22 ) }
    dend_41 { pt3dadd( -56.3371, -186.4, -55.4626, 0.22 ) }
    dend_41 { pt3dadd( -56.414, -186.995, -55.725, 0.22 ) }
    dend_41 { pt3dadd( -56.5364, -187.91, -56.1141, 1.03 ) }
    dend_41 { pt3dadd( -56.6015, -188.4, -56.3016, 1.25 ) }
    dend_41 { pt3dadd( -56.7541, -189.563, -56.7052, 0.22 ) }
    dend_41 { pt3dadd( -56.8768, -190.483, -56.9733, 0.22 ) }
    dend_41 { pt3dadd( -56.97, -191.264, -57.1881, 0.96 ) }
    dend_41 { pt3dadd( -57.0219, -191.747, -57.3097, 1.18 ) }
    dend_41 { pt3dadd( -57.0957, -192.439, -57.4982, 0.59 ) }
    dend_41 { pt3dadd( -57.1431, -193.165, -57.7039, 0.22 ) }
    dend_41 { pt3dadd( -57.1672, -193.751, -57.8765, 0.22 ) }
    dend_41 { pt3dadd( -57.1879, -194.449, -58.1112, 1.18 ) }
    dend_41 { pt3dadd( -57.201, -194.731, -58.2122, 1.4 ) }
    dend_41 { pt3dadd( -57.3049, -196.258, -58.7907, 0.29 ) }
    dend_41 { pt3dadd( -57.363, -197.05, -59.1, 0.29 ) }
    dend_41 { pt3dadd( -57.3678, -197.127, -59.1298, 0.29 ) }
    dend_41 { pt3dadd( -57.4448, -198.298, -59.5694, 0.15 ) }
    dend_41 { pt3dadd( -57.529, -199.174, -59.868, 0.59 ) }
    dend_41 { pt3dadd( -57.5884, -199.657, -60.0197, 0.74 ) }
    dend_41 { pt3dadd( -57.5977, -199.719, -60.0368, 0.74 ) }
    dend_41 { pt3dadd( -57.8352, -200.741, -60.3598, 1.18 ) }
    dend_41 { pt3dadd( -57.9523, -201.129, -60.493, 1.62 ) }
    dend_41 { pt3dadd( -58.2456, -201.905, -60.7825, 1.77 ) }
    dend_41 { pt3dadd( -58.6187, -202.792, -61.1413, 0.22 ) }
    dend_41 { pt3dadd( -58.9243, -203.521, -61.4469, 0.22 ) }
    dend_41 { pt3dadd( -59.232, -204.335, -61.8018, 0.22 ) }
    dend_41 { pt3dadd( -59.4396, -204.971, -62.0826, 0.22 ) }
    dend_41 { pt3dadd( -59.4529, -205.022, -62.1051, 0.22 ) }
    dend_41 { pt3dadd( -59.5748, -205.622, -62.3561, 1.47 ) }
    dend_41 { pt3dadd( -59.7196, -206.46, -62.69, 1.55 ) }
    dend_41 { pt3dadd( -59.8961, -207.793, -63.1907, 0.22 ) }
    dend_41 { pt3dadd( -59.954, -208.383, -63.3975, 0.22 ) }
    dend_41 { pt3dadd( -60.0171, -208.963, -63.5803, 0.96 ) }
    dend_41 { pt3dadd( -60.1028, -209.601, -63.7649, 0.96 ) }
    dend_41 { pt3dadd( -60.2855, -210.708, -64.0569, 0.15 ) }
    dend_41 { pt3dadd( -60.2999, -210.775, -64.0724, 0.15 ) }
    dend_41 { pt3dadd( -60.5297, -211.707, -64.2189, 0.15 ) }
    dend_41 { pt3dadd( -60.7153, -212.443, -64.3087, 1.25 ) }
    dend_41 { pt3dadd( -60.7899, -212.754, -64.3355, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_41 { pt3dadd( -60.8038, -212.831, -64.3395, 1.4 ) }
    dend_41 { pt3dadd( -60.8685, -213.281, -64.3459, 1.4 ) }
    dend_41 { pt3dadd( -60.9758, -214.465, -64.3802, 0.22 ) }
    dend_41 { pt3dadd( -60.9779, -214.53, -64.3825, 0.22 ) }
    dend_41 { pt3dadd( -60.978, -215.13, -64.453, 0.22 ) }
    dend_41 { pt3dadd( -60.9493, -216.239, -64.6611, 0.22 ) }
    dend_41 { pt3dadd( -60.9462, -216.307, -64.6767, 0.22 ) }
    dend_41 { pt3dadd( -60.9116, -217.049, -64.8742, 1.11 ) }
    dend_41 { pt3dadd( -60.8849, -217.49, -65.0185, 1.11 ) }
    dend_41 { pt3dadd( -60.7775, -218.959, -65.5488, 0.22 ) }
    dend_41 { pt3dadd( -60.6917, -219.801, -65.8845, 1.18 ) }
    dend_41 { pt3dadd( -60.6853, -219.854, -65.9062, 1.18 ) }
    dend_41 { pt3dadd( -60.5766, -220.54, -66.1863, 1.47 ) }
    dend_41 { pt3dadd( -60.3932, -221.453, -66.5453, 1.25 ) }
    dend_41 { pt3dadd( -60.0477, -222.883, -67.0868, 0.15 ) }
    dend_41 { pt3dadd( -59.7915, -223.762, -67.3864, 1.4 ) }
    dend_41 { pt3dadd( -59.6286, -224.216, -67.5314, 1.4 ) }
    dend_41 { pt3dadd( -59.0151, -225.641, -67.9789, 0.22 ) }
    dend_41 { pt3dadd( -58.7218, -226.206, -68.1441, 0.52 ) }
    dend_41 { pt3dadd( -58.6914, -226.261, -68.157, 0.52 ) }
    dend_41 { pt3dadd( -58.5105, -226.575, -68.2121, 0.52 ) }
    dend_41 { pt3dadd( -57.9722, -227.584, -68.3487, 0.22 ) }
    dend_41 { pt3dadd( -57.7313, -228.074, -68.4084, 0.96 ) }
    dend_41 { pt3dadd( -57.5586, -228.466, -68.4443, 1.11 ) }
    dend_41 { pt3dadd( -57.19, -229.446, -68.5353, 0.22 ) }
    dend_41 { pt3dadd( -57.016, -230.015, -68.5495, 0.29 ) }
    dend_41 { pt3dadd( -56.9357, -230.444, -68.5373, 0.29 ) }
    dend_41 { pt3dadd( -56.8569, -231.371, -68.4602, 0.81 ) }
    dend_41 { pt3dadd( -56.8541, -231.441, -68.4508, 0.81 ) }
    dend_41 { pt3dadd( -56.8454, -231.958, -68.3672, 1.11 ) }
    dend_41 { pt3dadd( -56.8266, -233.11, -68.1555, 0.22 ) }
    dend_41 { pt3dadd( -56.8164, -234.12, -67.9706, 0.22 ) }
    dend_41 { pt3dadd( -56.8111, -234.327, -67.9305, 0.66 ) }
    dend_41 { pt3dadd( -56.7516, -235.57, -67.6793, 0.22 ) }
    dend_41 { pt3dadd( -56.743, -235.647, -67.6654, 0.22 ) }
    dend_41 { pt3dadd( -56.5806, -236.591, -67.5232, 1.11 ) }
    dend_41 { pt3dadd( -56.4178, -237.178, -67.476, 1.4 ) }
    dend_41 { pt3dadd( -56.2018, -237.77, -67.4451, 0.88 ) }
    dend_41 { pt3dadd( -55.8974, -238.524, -67.4334, 0.22 ) }
    dend_41 { pt3dadd( -55.6201, -239.174, -67.4642, 0.22 ) }
    dend_41 { pt3dadd( -55.5711, -239.278, -67.4746, 0.22 ) }
    dend_41 { pt3dadd( -55.0729, -240.187, -67.5937, 1.18 ) }
    dend_41 { pt3dadd( -54.8633, -240.527, -67.6437, 1.18 ) }
    dend_41 { pt3dadd( -54.5384, -241.007, -67.713, 0.81 ) }
    dend_41 { pt3dadd( -53.8822, -241.742, -67.8864, 0.52 ) }
    dend_41 { pt3dadd( -53.0028, -242.578, -68.1262, 0.22 ) }
    dend_41 { pt3dadd( -52.4841, -243.021, -68.2911, 0.22 ) }
    dend_41 { pt3dadd( -52.0449, -243.355, -68.4349, 1.11 ) }
    dend_41 { pt3dadd( -51.6973, -243.593, -68.5707, 1.11 ) }
    dend_41 { pt3dadd( -50.0121, -244.629, -69.3089, 0.22 ) }
    dend_41 { pt3dadd( -49.792, -244.756, -69.4087, 0.22 ) }
    dend_41 { pt3dadd( -48.5401, -245.487, -69.9986, 1.47 ) }
    dend_41 { pt3dadd( -48.1396, -245.732, -70.1958, 1.77 ) }
    dend_41 { pt3dadd( -46.8451, -246.565, -70.8026, 1.4 ) }
    dend_41 { pt3dadd( -45.8538, -247.257, -71.2203, 0.22 ) }
    dend_41 { pt3dadd( -45.4982, -247.53, -71.3427, 0.66 ) }
    dend_41 { pt3dadd( -45.2226, -247.764, -71.444, 0.81 ) }
    dend_41 { pt3dadd( -44.0369, -248.871, -71.885, 0.22 ) }
    dend_41 { pt3dadd( -43.4909, -249.468, -72.1185, 0.22 ) }
    dend_41 { pt3dadd( -42.9192, -250.228, -72.3871, 1.11 ) }
    dend_41 { pt3dadd( -42.7688, -250.477, -72.4811, 1.11 ) }
    dend_41 { pt3dadd( -41.9134, -252.228, -73.1793, 0.22 ) }
    dend_41 { pt3dadd( -41.8876, -252.295, -73.2071, 0.22 ) }
    dend_41 { pt3dadd( -41.747, -252.82, -73.4289, 0.22 ) }
    dend_41 { pt3dadd( -41.7143, -252.976, -73.497, 0.22 ) }
    dend_41 { pt3dadd( -41.5883, -253.793, -73.8791, 0.96 ) }
    dend_41 { pt3dadd( -41.4874, -254.494, -74.2086, 1.33 ) }
    dend_41 { pt3dadd( -41.3688, -255.493, -74.6341, 1.84 ) }
    dend_41 { pt3dadd( -41.3526, -255.608, -74.6808, 1.84 ) }
    dend_41 { pt3dadd( -41.2538, -256.139, -74.8936, 1.84 ) }
    dend_41 { pt3dadd( -40.9053, -257.996, -75.5857, 0.22 ) }
    dend_41 { pt3dadd( -40.8952, -258.05, -75.6053, 0.22 ) }
    dend_41 { pt3dadd( -40.7695, -258.753, -75.8528, 0.66 ) }
    dend_41 { pt3dadd( -40.6936, -259.223, -76.0002, 0.66 ) }
    dend_41 { pt3dadd( -40.5241, -260.343, -76.3196, 0.15 ) }
    dend_41 { pt3dadd( -40.3645, -261.385, -76.534, 0.15 ) }
    dend_41 { pt3dadd( -40.3519, -261.462, -76.5388, 0.15 ) }
    dend_41 { pt3dadd( -40.239, -262.103, -76.5464, 0.74 ) }
    dend_41 { pt3dadd( -40.2259, -262.172, -76.5443, 0.74 ) }
    dend_41 { pt3dadd( -40.1531, -262.526, -76.5146, 0.74 ) }
    dend_41 { pt3dadd( -39.903, -263.604, -76.3424, 0.15 ) }
    dend_41 { pt3dadd( -39.7355, -264.134, -76.2394, 0.74 ) }
    dend_41 { pt3dadd( -39.555, -264.582, -76.1353, 0.74 ) }
    dend_41 { pt3dadd( -39.152, -265.349, -75.9142, 0.22 ) }
    dend_41 { pt3dadd( -38.8709, -265.811, -75.7669, 1.03 ) }
    dend_41 { pt3dadd( -38.827, -265.872, -75.7495, 1.03 ) }
    dend_41 { pt3dadd( -38.46, -266.321, -75.644, 1.33 ) }
    dend_41 { pt3dadd( -38.0652, -266.763, -75.5628, 1.33 ) }
    dend_41 { pt3dadd( -37.3209, -267.511, -75.4468, 0.15 ) }
    dend_41 { pt3dadd( -37.0631, -267.744, -75.4149, 0.44 ) }
    dend_41 { pt3dadd( -36.3036, -268.446, -75.3405, 0.22 ) }
    dend_41 { pt3dadd( -36.2588, -268.491, -75.3358, 0.22 ) }
    dend_41 { pt3dadd( -35.8032, -268.997, -75.2844, 0.88 ) }
    dend_41 { pt3dadd( -35.6486, -269.19, -75.2607, 0.88 ) }
    dend_41 { pt3dadd( -35.5995, -269.262, -75.2458, 0.88 ) }
    dend_41 { pt3dadd( -35.0651, -270.235, -74.9921, 0.22 ) }
    dend_41 { pt3dadd( -34.7362, -270.981, -74.7783, 0.22 ) }
    dend_41 { pt3dadd( -34.5594, -271.438, -74.6524, 0.96 ) }
    dend_41 { pt3dadd( -34.3457, -272.01, -74.4858, 0.96 ) }
    dend_41 { pt3dadd( -33.9437, -273.107, -74.1709, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_41 { pt3dadd( -33.688, -273.831, -73.9502, 0.22 ) }
    dend_41 { pt3dadd( -33.3876, -274.725, -73.6615, 0.88 ) }
    dend_41 { pt3dadd( -33.1999, -275.288, -73.4659, 0.88 ) }
    dend_41 { pt3dadd( -32.8653, -276.29, -73.0996, 0.22 ) }
    dend_41 { pt3dadd( -32.8432, -276.36, -73.0728, 0.22 ) }
    dend_41 { pt3dadd( -32.6535, -277.039, -72.8136, 0.22 ) }
    dend_41 { pt3dadd( -32.6386, -277.101, -72.7905, 0.22 ) }
    dend_41 { pt3dadd( -32.5381, -277.651, -72.609, 1.03 ) }
    dend_41 { pt3dadd( -32.4688, -278.053, -72.5164, 1.03 ) }
    dend_41 { pt3dadd( -32.3009, -279.028, -72.3537, 0.29 ) }
    dend_41 { pt3dadd( -32.1403, -279.817, -72.256, 0.29 ) }
    dend_41 { pt3dadd( -31.9427, -280.668, -72.1925, 0.22 ) }
    dend_41 { pt3dadd( -31.674, -281.784, -72.1356, 0.22 ) }
    dend_41 { pt3dadd( -31.3926, -282.929, -72.1191, 1.03 ) }
    dend_41 { pt3dadd( -31.3267, -283.199, -72.1217, 1.03 ) }
    dend_41 { pt3dadd( -31.0064, -284.534, -72.1652, 0.22 ) }
    dend_41 { pt3dadd( -30.8267, -285.315, -72.1941, 0.81 ) }
    dend_41 { pt3dadd( -30.7422, -285.769, -72.2145, 1.03 ) }
    dend_41 { pt3dadd( -30.6403, -286.551, -72.2609, 0.22 ) }
    dend_41 { pt3dadd( -30.5863, -287.212, -72.2915, 0.52 ) }
    dend_41 { pt3dadd( -30.5547, -287.813, -72.329, 0.22 ) }
    dend_41 { pt3dadd( -30.543, -288.333, -72.3633, 0.74 ) }
    dend_41 { pt3dadd( -30.5413, -288.686, -72.3833, 0.74 ) }
    dend_41 { pt3dadd( -30.5294, -289.795, -72.442, 0.22 ) }
    dend_41 { pt3dadd( -30.5235, -290.399, -72.4657, 0.22 ) }
    dend_41 { pt3dadd( -30.5155, -290.806, -72.4954, 0.66 ) }
    dend_41 { pt3dadd( -29.001, -300.166, -74.4762, 0.66 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 27/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -54.5375, -137.886, -25.3363, 0.37 ) }
    dend_40 { pt3dadd( -54.2107, -138.338, -25.3087, 0.37 ) }
    dend_40 { pt3dadd( -53.6975, -139.172, -25.2859, 0.37 ) }
    dend_40 { pt3dadd( -53.6706, -139.226, -25.2856, 0.37 ) }
    dend_40 { pt3dadd( -53.3414, -140.106, -25.2968, 0.37 ) }
    dend_40 { pt3dadd( -53.324, -140.172, -25.2996, 0.37 ) }
    dend_40 { pt3dadd( -53.1959, -140.893, -25.3431, 0.37 ) }
    dend_40 { pt3dadd( -53.1067, -141.679, -25.4365, 1.03 ) }
    dend_40 { pt3dadd( -53.0684, -142.327, -25.5572, 1.18 ) }
    dend_40 { pt3dadd( -53.0273, -143.076, -25.7435, 0.81 ) }
    dend_40 { pt3dadd( -52.9984, -143.843, -25.9686, 0.29 ) }
    dend_40 { pt3dadd( -52.954, -144.555, -26.2043, 0.74 ) }
    dend_40 { pt3dadd( -52.8755, -145.57, -26.5733, 1.18 ) }
    dend_40 { pt3dadd( -52.7837, -146.491, -26.9207, 0.88 ) }
    dend_40 { pt3dadd( -52.6645, -147.591, -27.3095, 0.59 ) }
    dend_40 { pt3dadd( -52.6543, -147.677, -27.3379, 0.59 ) }
    dend_40 { pt3dadd( -52.5672, -148.69, -27.6421, 0.66 ) }
    dend_40 { pt3dadd( -52.5798, -149.516, -27.8593, 0.44 ) }
    dend_40 { pt3dadd( -52.7179, -150.392, -28.0263, 0.37 ) }
    dend_40 { pt3dadd( -52.9282, -151.113, -28.1186, 0.29 ) }
    dend_40 { pt3dadd( -52.9771, -151.236, -28.14, 0.29 ) }
    dend_40 { pt3dadd( -53.24, -151.859, -28.2644, 0.29 ) }
    dend_40 { pt3dadd( -53.6747, -152.842, -28.4545, 1.55 ) }
    dend_40 { pt3dadd( -53.8406, -153.243, -28.5121, 1.84 ) }
    dend_40 { pt3dadd( -53.9363, -153.517, -28.541, 1.84 ) }
    dend_40 { pt3dadd( -54.3666, -155.005, -28.6577, 0.37 ) }
    dend_40 { pt3dadd( -54.5723, -155.814, -28.718, 0.37 ) }
    dend_40 { pt3dadd( -54.7526, -156.631, -28.8038, 0.74 ) }
    dend_40 { pt3dadd( -54.9965, -157.62, -28.9447, 0.74 ) }
    dend_40 { pt3dadd( -55.2458, -158.452, -29.0916, 0.29 ) }
    dend_40 { pt3dadd( -55.5439, -159.272, -29.2741, 0.29 ) }
    dend_40 { pt3dadd( -55.9169, -160.139, -29.5, 1.33 ) }
    dend_40 { pt3dadd( -56.3733, -161.082, -29.7945, 1.69 ) }
    dend_40 { pt3dadd( -56.9091, -162.146, -30.1568, 0.66 ) }
    dend_40 { pt3dadd( -57.2214, -162.761, -30.3772, 0.88 ) }
    dend_40 { pt3dadd( -57.6576, -163.634, -30.6584, 0.29 ) }
    dend_40 { pt3dadd( -57.9792, -164.3, -30.8524, 0.96 ) }
    dend_40 { pt3dadd( -58.3967, -165.174, -31.0755, 1.55 ) }
    dend_40 { pt3dadd( -58.6873, -165.768, -31.2187, 0.74 ) }
    dend_40 { pt3dadd( -58.9771, -166.349, -31.3736, 0.29 ) }
    dend_40 { pt3dadd( -59.2781, -166.905, -31.5428, 0.44 ) }
    dend_40 { pt3dadd( -59.6155, -167.469, -31.7313, 0.66 ) }
    dend_40 { pt3dadd( -60.0871, -168.158, -32.0009, 0.29 ) }
    dend_40 { pt3dadd( -60.3551, -168.519, -32.1753, 0.22 ) }
    dend_40 { pt3dadd( -60.6468, -168.902, -32.3737, 0.22 ) }
    dend_40 { pt3dadd( -61.0452, -169.432, -32.6494, 1.03 ) }
    dend_40 { pt3dadd( -61.4078, -169.914, -32.8923, 1.4 ) }
    dend_40 { pt3dadd( -61.8165, -170.483, -33.149, 1.55 ) }
    dend_40 { pt3dadd( -62.341, -171.219, -33.4641, 1.11 ) }
    dend_40 { pt3dadd( -62.8885, -171.965, -33.7813, 0.22 ) }
    dend_40 { pt3dadd( -62.9238, -172.009, -33.8004, 0.22 ) }
    dend_40 { pt3dadd( -63.392, -172.497, -34.0293, 0.22 ) }
    dend_40 { pt3dadd( -63.5733, -172.676, -34.1141, 0.74 ) }
    dend_40 { pt3dadd( -64.0224, -173.111, -34.326, 0.88 ) }
    dend_40 { pt3dadd( -64.325, -173.434, -34.4803, 0.88 ) }
    dend_40 { pt3dadd( -64.6565, -173.867, -34.6775, 0.52 ) }
    dend_40 { pt3dadd( -65.0758, -174.538, -34.9245, 0.22 ) }
    dend_40 { pt3dadd( -65.4726, -175.291, -35.1578, 1.77 ) }
    dend_40 { pt3dadd( -65.8254, -176.046, -35.3557, 1.77 ) }
    dend_40 { pt3dadd( -66.2736, -177.118, -35.5919, 0.37 ) }
    dend_40 { pt3dadd( -66.6137, -177.981, -35.7484, 0.29 ) }
    dend_40 { pt3dadd( -67.0256, -179.056, -35.8937, 0.22 ) }
    dend_40 { pt3dadd( -67.2269, -179.559, -35.9336, 1.11 ) }
    dend_40 { pt3dadd( -67.472, -180.097, -35.963, 1.4 ) }
    dend_40 { pt3dadd( -67.6615, -180.46, -35.9799, 1.47 ) }
    dend_40 { pt3dadd( -67.8894, -180.836, -36.007, 1.62 ) }
    dend_40 { pt3dadd( -68.284, -181.421, -36.1085, 1.62 ) }
    dend_40 { pt3dadd( -68.806, -182.164, -36.3167, 1.25 ) }
    dend_40 { pt3dadd( -69.2959, -182.863, -36.5317, 0.29 ) }
    dend_40 { pt3dadd( -69.6624, -183.38, -36.7035, 0.22 ) }
    dend_40 { pt3dadd( -69.9173, -183.74, -36.8396, 0.22 ) }
    dend_40 { pt3dadd( -70.2391, -184.208, -37.0248, 0.66 ) }
    dend_40 { pt3dadd( -70.5638, -184.658, -37.2094, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_40 { pt3dadd( -70.7965, -184.996, -37.3416, 0.96 ) }
    dend_40 { pt3dadd( -70.8272, -185.049, -37.3605, 0.96 ) }
    dend_40 { pt3dadd( -71.1853, -185.778, -37.6243, 0.52 ) }
    dend_40 { pt3dadd( -71.4672, -186.44, -37.8524, 0.29 ) }
    dend_40 { pt3dadd( -71.7867, -187.295, -38.0839, 0.22 ) }
    dend_40 { pt3dadd( -71.9416, -187.743, -38.1978, 0.22 ) }
    dend_40 { pt3dadd( -72.3031, -188.807, -38.4578, 0.96 ) }
    dend_40 { pt3dadd( -72.5199, -189.448, -38.606, 1.55 ) }
    dend_40 { pt3dadd( -72.7396, -190.035, -38.732, 1.25 ) }
    dend_40 { pt3dadd( -73.1204, -191.014, -38.9205, 0.22 ) }
    dend_40 { pt3dadd( -73.3987, -191.775, -39.0328, 0.59 ) }
    dend_40 { pt3dadd( -73.5023, -192.041, -39.0591, 0.88 ) }
    dend_40 { pt3dadd( -73.5568, -192.175, -39.0646, 0.88 ) }
    dend_40 { pt3dadd( -73.8614, -193.051, -39.0385, 0.22 ) }
    dend_40 { pt3dadd( -74.08, -193.815, -38.9966, 0.22 ) }
    dend_40 { pt3dadd( -74.2213, -194.454, -38.9564, 0.22 ) }
    dend_40 { pt3dadd( -74.2968, -194.847, -38.909, 0.66 ) }
    dend_40 { pt3dadd( -74.3933, -195.329, -38.8228, 0.74 ) }
    dend_40 { pt3dadd( -74.5951, -196.213, -38.6377, 0.22 ) }
    dend_40 { pt3dadd( -74.8069, -197.03, -38.4494, 1.25 ) }
    dend_40 { pt3dadd( -75.0013, -197.553, -38.3314, 1.77 ) }
    dend_40 { pt3dadd( -75.2633, -198.112, -38.2232, 1.77 ) }
    dend_40 { pt3dadd( -75.8898, -199.292, -38.0388, 0.29 ) }
    dend_40 { pt3dadd( -76.0805, -199.635, -37.9983, 0.59 ) }
    dend_40 { pt3dadd( -76.2174, -199.864, -37.9868, 0.59 ) }
    dend_40 { pt3dadd( -76.6239, -200.556, -37.9515, 0.22 ) }
    dend_40 { pt3dadd( -77.0161, -201.255, -37.9319, 0.59 ) }
    dend_40 { pt3dadd( -77.1969, -201.634, -37.9064, 0.81 ) }
    dend_40 { pt3dadd( -77.4583, -202.339, -37.8265, 0.22 ) }
    dend_40 { pt3dadd( -77.476, -202.4, -37.815, 0.22 ) }
    dend_40 { pt3dadd( -77.6606, -203.223, -37.6101, 1.33 ) }
    dend_40 { pt3dadd( -77.7459, -203.664, -37.4783, 1.62 ) }
    dend_40 { pt3dadd( -78.0082, -204.935, -37.0746, 0.22 ) }
    dend_40 { pt3dadd( -78.1422, -205.489, -36.92, 0.22 ) }
    dend_40 { pt3dadd( -78.1597, -205.558, -36.9064, 0.22 ) }
    dend_40 { pt3dadd( -78.234, -205.881, -36.868, 0.88 ) }
    dend_40 { pt3dadd( -78.3905, -206.679, -36.851, 1.03 ) }
    dend_40 { pt3dadd( -78.4978, -207.353, -36.8794, 1.03 ) }
    dend_40 { pt3dadd( -78.564, -207.874, -36.9365, 0.81 ) }
    dend_40 { pt3dadd( -78.64, -208.688, -37.0209, 0.22 ) }
    dend_40 { pt3dadd( -78.6726, -209.284, -37.0898, 0.22 ) }
    dend_40 { pt3dadd( -78.6955, -209.846, -37.1595, 1.03 ) }
    dend_40 { pt3dadd( -78.7219, -210.606, -37.2441, 1.25 ) }
    dend_40 { pt3dadd( -78.7711, -211.366, -37.3228, 1.11 ) }
    dend_40 { pt3dadd( -78.8898, -212.15, -37.3705, 0.74 ) }
    dend_40 { pt3dadd( -79.0533, -212.829, -37.3822, 0.37 ) }
    dend_40 { pt3dadd( -79.3299, -213.692, -37.3704, 0.22 ) }
    dend_40 { pt3dadd( -79.5503, -214.263, -37.3426, 0.88 ) }
    dend_40 { pt3dadd( -79.7051, -214.627, -37.311, 0.88 ) }
    dend_40 { pt3dadd( -80.1092, -215.659, -37.1467, 0.15 ) }
    dend_40 { pt3dadd( -80.285, -216.157, -37.0375, 0.15 ) }
    dend_40 { pt3dadd( -80.3042, -216.217, -37.0227, 0.15 ) }
    dend_40 { pt3dadd( -80.3969, -216.527, -36.9473, 0.96 ) }
    dend_40 { pt3dadd( -80.5426, -216.995, -36.8146, 1.11 ) }
    dend_40 { pt3dadd( -80.8703, -218.118, -36.4768, 0.22 ) }
    dend_40 { pt3dadd( -81.0866, -218.989, -36.2155, 1.25 ) }
    dend_40 { pt3dadd( -81.2293, -219.54, -36.0264, 1.47 ) }
    dend_40 { pt3dadd( -81.5734, -220.756, -35.5908, 0.44 ) }
    dend_40 { pt3dadd( -81.885, -221.678, -35.2582, 0.44 ) }
    dend_40 { pt3dadd( -82.1476, -222.324, -35.0203, 0.22 ) }
    dend_40 { pt3dadd( -82.3962, -222.867, -34.8182, 0.22 ) }
    dend_40 { pt3dadd( -82.6706, -223.484, -34.5861, 0.44 ) }
    dend_40 { pt3dadd( -82.9414, -224.165, -34.3273, 0.44 ) }
    dend_40 { pt3dadd( -83.2027, -224.89, -34.0805, 0.44 ) }
    dend_40 { pt3dadd( -83.4479, -225.636, -33.8677, 1.25 ) }
    dend_40 { pt3dadd( -83.4647, -225.694, -33.8512, 1.25 ) }
    dend_40 { pt3dadd( -83.5338, -226.037, -33.765, 1.25 ) }
    dend_40 { pt3dadd( -83.6142, -227.306, -33.495, 0.22 ) }
    dend_40 { pt3dadd( -83.5866, -227.729, -33.4105, 0.96 ) }
    dend_40 { pt3dadd( -83.5188, -228.159, -33.3381, 0.96 ) }
    dend_40 { pt3dadd( -83.3622, -229.047, -33.2333, 0.22 ) }
    dend_40 { pt3dadd( -83.2081, -229.9, -33.1506, 1.11 ) }
    dend_40 { pt3dadd( -83.1086, -230.416, -33.1111, 1.4 ) }
    dend_40 { pt3dadd( -82.9885, -231.0, -33.081, 1.4 ) }
    dend_40 { pt3dadd( -82.8258, -231.72, -33.0321, 0.29 ) }
    dend_40 { pt3dadd( -82.6373, -232.511, -32.9225, 0.22 ) }
    dend_40 { pt3dadd( -82.4715, -233.231, -32.7782, 0.22 ) }
    dend_40 { pt3dadd( -82.4583, -233.296, -32.7612, 0.22 ) }
    dend_40 { pt3dadd( -82.4167, -233.664, -32.6299, 0.88 ) }
    dend_40 { pt3dadd( -82.3977, -234.094, -32.443, 0.88 ) }
    dend_40 { pt3dadd( -82.3804, -235.228, -31.9068, 0.22 ) }
    dend_40 { pt3dadd( -82.3771, -235.645, -31.7114, 0.59 ) }
    dend_40 { pt3dadd( -82.3978, -235.88, -31.6144, 0.74 ) }
    dend_40 { pt3dadd( -82.5422, -236.844, -31.273, 0.22 ) }
    dend_40 { pt3dadd( -82.6285, -237.279, -31.1495, 0.22 ) }
    dend_40 { pt3dadd( -82.7663, -237.875, -31.023, 1.03 ) }
    dend_40 { pt3dadd( -82.8557, -238.292, -30.9572, 1.18 ) }
    dend_40 { pt3dadd( -83.049, -239.39, -30.7948, 0.22 ) }
    dend_40 { pt3dadd( -83.107, -239.753, -30.7273, 0.22 ) }
    dend_40 { pt3dadd( -83.1812, -240.172, -30.6337, 0.88 ) }
    dend_40 { pt3dadd( -83.2849, -240.643, -30.4508, 1.11 ) }
    dend_40 { pt3dadd( -83.481, -241.461, -30.0379, 0.37 ) }
    dend_40 { pt3dadd( -83.621, -242.05, -29.6965, 0.22 ) }
    dend_40 { pt3dadd( -83.8799, -243.18, -28.9958, 0.88 ) }
    dend_40 { pt3dadd( -84.0004, -243.737, -28.5985, 1.18 ) }
    dend_40 { pt3dadd( -84.3234, -245.211, -27.4397, 0.22 ) }
    dend_40 { pt3dadd( -84.3342, -245.263, -27.396, 0.22 ) }
    dend_40 { pt3dadd( -84.394, -245.579, -27.1157, 0.59 ) }
    dend_40 { pt3dadd( -84.4831, -246.083, -26.6, 1.11 ) }
    dend_40 { pt3dadd( -84.6792, -247.587, -25.0304, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_40 { pt3dadd( -84.6825, -247.625, -24.9904, 0.22 ) }
    dend_40 { pt3dadd( -84.6943, -247.766, -24.8418, 0.59 ) }
    dend_40 { pt3dadd( -84.7087, -247.928, -24.6572, 0.59 ) }
    dend_40 { pt3dadd( -84.812, -249.081, -23.0844, 0.29 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 4/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -9.28213, 51.4616, -11.9436, 0.37 ) }
    dend_25 { pt3dadd( -9.22531, 52.6498, -11.8618, 0.37 ) }
    dend_25 { pt3dadd( -9.05317, 53.879, -11.8185, 0.66 ) }
    dend_25 { pt3dadd( -8.94428, 54.3614, -11.8093, 0.81 ) }
    dend_25 { pt3dadd( -8.91968, 54.4784, -11.8108, 0.81 ) }
    dend_25 { pt3dadd( -8.70277, 55.5661, -11.8425, 0.22 ) }
    dend_25 { pt3dadd( -8.4883, 56.653, -11.8834, 0.96 ) }
    dend_25 { pt3dadd( -8.33734, 57.273, -11.929, 0.96 ) }
    dend_25 { pt3dadd( -8.0547, 58.4121, -12.0393, 0.22 ) }
    dend_25 { pt3dadd( -7.90206, 59.2211, -12.112, 0.22 ) }
    dend_25 { pt3dadd( -7.89571, 59.2934, -12.1177, 0.22 ) }
    dend_25 { pt3dadd( -7.94764, 60.4886, -12.2399, 0.52 ) }
    dend_25 { pt3dadd( -8.0027, 60.9222, -12.291, 0.52 ) }
    dend_25 { pt3dadd( -8.1054, 61.4703, -12.3698, 0.52 ) }
    dend_25 { pt3dadd( -8.28954, 62.3401, -12.5521, 0.66 ) }
    dend_25 { pt3dadd( -8.40619, 62.955, -12.6927, 0.66 ) }
    dend_25 { pt3dadd( -8.58425, 63.9088, -12.932, 0.96 ) }
    dend_25 { pt3dadd( -8.71515, 64.5972, -13.1203, 0.66 ) }
    dend_25 { pt3dadd( -8.87991, 65.5884, -13.3914, 0.66 ) }
    dend_25 { pt3dadd( -9.01185, 66.6534, -13.6712, 0.29 ) }
    dend_25 { pt3dadd( -9.10765, 67.7792, -13.9361, 1.03 ) }
    dend_25 { pt3dadd( -9.11952, 68.157, -13.9939, 1.03 ) }
    dend_25 { pt3dadd( -9.11871, 68.6601, -14.025, 1.03 ) }
    dend_25 { pt3dadd( -9.10473, 69.1922, -14.0004, 0.37 ) }
    dend_25 { pt3dadd( -9.06596, 69.7966, -13.9194, 0.37 ) }
    dend_25 { pt3dadd( -8.99079, 70.634, -13.7514, 0.37 ) }
    dend_25 { pt3dadd( -8.79442, 72.114, -13.3629, 0.22 ) }
    dend_25 { pt3dadd( -8.62997, 73.0765, -13.0868, 1.33 ) }
    dend_25 { pt3dadd( -8.43925, 74.1629, -12.7756, 1.55 ) }
    dend_25 { pt3dadd( -8.30438, 74.9713, -12.5472, 1.55 ) }
    dend_25 { pt3dadd( -8.20288, 75.8231, -12.32, 1.47 ) }
    dend_25 { pt3dadd( -8.07915, 77.3812, -11.9877, 0.81 ) }
    dend_25 { pt3dadd( -8.00167, 78.9045, -11.7501, 0.22 ) }
    dend_25 { pt3dadd( -7.95153, 80.5384, -11.578, 0.37 ) }
    dend_25 { pt3dadd( -7.94083, 81.097, -11.5504, 0.37 ) }
    dend_25 { pt3dadd( -7.92406, 82.5195, -11.4917, 1.11 ) }
    dend_25 { pt3dadd( -7.90277, 84.0845, -11.4531, 0.22 ) }
    dend_25 { pt3dadd( -7.87419, 84.8707, -11.4399, 0.59 ) }
    dend_25 { pt3dadd( -7.80215, 85.4806, -11.4013, 0.59 ) }
    dend_25 { pt3dadd( -7.68278, 85.9459, -11.3391, 0.59 ) }
    dend_25 { pt3dadd( -7.29556, 87.0556, -11.1273, 0.29 ) }
    dend_25 { pt3dadd( -7.07469, 87.5562, -10.9828, 0.96 ) }
    dend_25 { pt3dadd( -6.64054, 88.4455, -10.656, 1.25 ) }
    dend_25 { pt3dadd( -6.3792, 88.9722, -10.4654, 0.52 ) }
    dend_25 { pt3dadd( -5.97512, 89.8068, -10.1836, 0.22 ) }
    dend_25 { pt3dadd( -5.69145, 90.4552, -9.98912, 0.59 ) }
    dend_25 { pt3dadd( -5.36158, 91.2613, -9.80393, 0.37 ) }
    dend_25 { pt3dadd( -4.88349, 92.5417, -9.57517, 0.29 ) }
    dend_25 { pt3dadd( -4.57281, 93.4574, -9.45953, 0.66 ) }
    dend_25 { pt3dadd( -4.28065, 94.3597, -9.43287, 0.74 ) }
    dend_25 { pt3dadd( -4.08157, 94.9757, -9.477, 1.47 ) }
    dend_25 { pt3dadd( -3.82396, 95.7777, -9.60709, 1.33 ) }
    dend_25 { pt3dadd( -3.585, 96.5606, -9.81316, 1.18 ) }
    dend_25 { pt3dadd( -3.56418, 96.626, -9.83493, 1.18 ) }
    dend_25 { pt3dadd( -2.97484, 98.0587, -10.3757, 0.29 ) }
    dend_25 { pt3dadd( -2.74957, 98.4717, -10.5361, 0.44 ) }
    dend_25 { pt3dadd( -2.51551, 98.8271, -10.6425, 0.44 ) }
    dend_25 { pt3dadd( -2.4775, 98.883, -10.6515, 0.44 ) }
    dend_25 { pt3dadd( -1.9959, 99.6061, -10.6479, 0.44 ) }
    dend_25 { pt3dadd( -1.66669, 100.14, -10.5723, 0.59 ) }
    dend_25 { pt3dadd( -1.38916, 100.615, -10.4493, 0.37 ) }
    dend_25 { pt3dadd( -1.01952, 101.237, -10.2923, 0.22 ) }
    dend_25 { pt3dadd( -0.676874, 101.827, -10.1561, 0.22 ) }
    dend_25 { pt3dadd( -0.188205, 102.757, -9.96366, 0.96 ) }
    dend_25 { pt3dadd( 0.136625, 103.504, -9.83313, 1.11 ) }
    dend_25 { pt3dadd( 0.420336, 104.302, -9.7234, 0.88 ) }
    dend_25 { pt3dadd( 0.734375, 105.378, -9.61737, 0.22 ) }
    dend_25 { pt3dadd( 1.01455, 106.505, -9.5239, 0.22 ) }
    dend_25 { pt3dadd( 1.17123, 107.196, -9.44396, 0.22 ) }
    dend_25 { pt3dadd( 1.32665, 107.991, -9.3346, 0.22 ) }
    dend_25 { pt3dadd( 1.48087, 108.933, -9.17587, 1.11 ) }
    dend_25 { pt3dadd( 1.59957, 109.819, -9.00611, 1.62 ) }
    dend_25 { pt3dadd( 1.74481, 111.082, -8.74323, 0.29 ) }
    dend_25 { pt3dadd( 1.8559, 111.859, -8.5689, 0.37 ) }
    dend_25 { pt3dadd( 2.01873, 112.653, -8.38702, 0.37 ) }
    dend_25 { pt3dadd( 2.22715, 113.545, -8.17434, 0.29 ) }
    dend_25 { pt3dadd( 2.33942, 114.032, -8.06647, 0.88 ) }
    dend_25 { pt3dadd( 2.47619, 114.672, -7.92864, 1.11 ) }
    dend_25 { pt3dadd( 2.5716, 115.172, -7.8312, 1.11 ) }
    dend_25 { pt3dadd( 2.71031, 115.986, -7.67854, 0.88 ) }
    dend_25 { pt3dadd( 2.95279, 117.47, -7.37594, 0.22 ) }
    dend_25 { pt3dadd( 3.13678, 118.552, -7.1398, 0.22 ) }
    dend_25 { pt3dadd( 3.31436, 119.567, -6.91067, 0.88 ) }
    dend_25 { pt3dadd( 3.40806, 120.103, -6.78624, 1.11 ) }
    dend_25 { pt3dadd( 3.42143, 120.187, -6.76734, 1.11 ) }
    dend_25 { pt3dadd( 3.48991, 120.695, -6.66441, 1.11 ) }
    dend_25 { pt3dadd( 3.49719, 120.777, -6.65776, 1.11 ) }
    dend_25 { pt3dadd( 3.50983, 121.448, -6.66266, 1.03 ) }
    dend_25 { pt3dadd( 3.51033, 121.551, -6.66237, 1.03 ) }
    dend_25 { pt3dadd( 3.5155, 122.331, -6.59441, 0.88 ) }
    dend_25 { pt3dadd( 3.51583, 123.083, -6.52486, 0.29 ) }
    dend_25 { pt3dadd( 3.49894, 124.482, -6.38467, 0.22 ) }
    dend_25 { pt3dadd( 3.48022, 125.51, -6.27175, 1.25 ) }
    dend_25 { pt3dadd( 3.44903, 126.887, -6.09616, 1.55 ) }
    dend_25 { pt3dadd( 3.43329, 127.991, -5.92946, 1.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 99/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -9.28213, 51.4616, -11.9436, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_24 { pt3dadd( -10.3409, 52.2263, -12.6881, 0.29 ) }
    dend_24 { pt3dadd( -11.0643, 52.7581, -13.1828, 1.03 ) }
    dend_24 { pt3dadd( -12.1074, 53.5639, -13.8787, 0.22 ) }
    dend_24 { pt3dadd( -12.5145, 53.8883, -14.1324, 0.66 ) }
    dend_24 { pt3dadd( -12.814, 54.1326, -14.31, 0.81 ) }
    dend_24 { pt3dadd( -13.6313, 54.8139, -14.7451, 0.37 ) }
    dend_24 { pt3dadd( -13.8553, 55.0254, -14.8394, 0.74 ) }
    dend_24 { pt3dadd( -14.1117, 55.2684, -14.9133, 0.96 ) }
    dend_24 { pt3dadd( -14.4721, 55.6045, -14.9816, 0.44 ) }
    dend_24 { pt3dadd( -15.5015, 56.5562, -15.1426, 1.2 ) }
    dend_24 { pt3dadd( -16.108, 57.1457, -15.2175, 0.88 ) }
    dend_24 { pt3dadd( -16.665, 57.7261, -15.254, 1.25 ) }
    dend_24 { pt3dadd( -17.0533, 58.1529, -15.2767, 1.25 ) }
    dend_24 { pt3dadd( -17.7421, 58.9468, -15.3035, 0.59 ) }
    dend_24 { pt3dadd( -18.268, 59.5994, -15.3335, 0.22 ) }
    dend_24 { pt3dadd( -18.4831, 59.8884, -15.3374, 0.22 ) }
    dend_24 { pt3dadd( -18.8508, 60.3922, -15.3535, 0.96 ) }
    dend_24 { pt3dadd( -19.123, 60.7601, -15.3615, 1.47 ) }
    dend_24 { pt3dadd( -19.3549, 61.0719, -15.3594, 1.62 ) }
    dend_24 { pt3dadd( -19.8453, 61.6739, -15.3069, 1.03 ) }
    dend_24 { pt3dadd( -20.292, 62.1033, -15.2431, 0.29 ) }
    dend_24 { pt3dadd( -20.6718, 62.4124, -15.1722, 0.22 ) }
    dend_24 { pt3dadd( -21.1038, 62.715, -15.0753, 0.22 ) }
    dend_24 { pt3dadd( -21.1569, 62.7499, -15.0617, 0.22 ) }
    dend_24 { pt3dadd( -21.6989, 63.0914, -14.9009, 0.22 ) }
    dend_24 { pt3dadd( -22.1088, 63.3449, -14.7613, 0.22 ) }
    dend_24 { pt3dadd( -22.6791, 63.6668, -14.5766, 0.22 ) }
    dend_24 { pt3dadd( -23.3876, 64.0359, -14.3611, 1.11 ) }
    dend_24 { pt3dadd( -23.634, 64.1589, -14.2889, 1.4 ) }
    dend_24 { pt3dadd( -24.2353, 64.4512, -14.1172, 0.74 ) }
    dend_24 { pt3dadd( -24.7612, 64.6879, -13.9871, 0.22 ) }
    dend_24 { pt3dadd( -25.2738, 64.8781, -13.8787, 0.22 ) }
    dend_24 { pt3dadd( -25.5746, 64.9625, -13.8214, 0.22 ) }
    dend_24 { pt3dadd( -26.0827, 65.0718, -13.7752, 0.74 ) }
    dend_24 { pt3dadd( -26.3981, 65.1297, -13.7652, 0.88 ) }
    dend_24 { pt3dadd( -27.393, 65.2969, -13.8024, 0.22 ) }
    dend_24 { pt3dadd( -27.9878, 65.3938, -13.8427, 0.59 ) }
    dend_24 { pt3dadd( -28.4034, 65.4531, -13.937, 1.03 ) }
    dend_24 { pt3dadd( -29.7035, 65.5954, -14.3419, 0.22 ) }
    dend_24 { pt3dadd( -30.0389, 65.6173, -14.4641, 0.22 ) }
    dend_24 { pt3dadd( -30.6762, 65.6474, -14.7172, 0.81 ) }
    dend_24 { pt3dadd( -31.2302, 65.6652, -14.9489, 1.47 ) }
    dend_24 { pt3dadd( -33.506, 65.7235, -15.922, 0.29 ) }
    dend_24 { pt3dadd( -33.7842, 65.7283, -16.0404, 0.29 ) }
    dend_24 { pt3dadd( -34.3046, 65.7357, -16.2403, 0.22 ) }
    dend_24 { pt3dadd( -35.2902, 65.7708, -16.5818, 0.96 ) }
    dend_24 { pt3dadd( -35.6002, 65.7916, -16.6689, 1.33 ) }
    dend_24 { pt3dadd( -36.3638, 65.8887, -16.8104, 0.22 ) }
    dend_24 { pt3dadd( -36.4232, 65.9005, -16.8105, 0.22 ) }
    dend_24 { pt3dadd( -37.0074, 66.0296, -16.8188, 0.22 ) }
    dend_24 { pt3dadd( -37.7232, 66.2076, -16.8209, 0.52 ) }
    dend_24 { pt3dadd( -37.9756, 66.2732, -16.8267, 0.52 ) }
    dend_24 { pt3dadd( -38.7015, 66.4454, -16.8787, 0.15 ) }
    dend_24 { pt3dadd( -38.9902, 66.5032, -16.9034, 0.15 ) }
    dend_24 { pt3dadd( -39.7558, 66.6198, -16.9658, 0.88 ) }
    dend_24 { pt3dadd( -40.3244, 66.6836, -17.0167, 1.11 ) }
    dend_24 { pt3dadd( -41.504, 66.7975, -17.1132, 0.22 ) }
    dend_24 { pt3dadd( -42.345, 66.8641, -17.235, 1.11 ) }
    dend_24 { pt3dadd( -42.7277, 66.8937, -17.3033, 1.33 ) }
    dend_24 { pt3dadd( -43.7824, 66.988, -17.5182, 0.22 ) }
    dend_24 { pt3dadd( -44.4118, 67.0562, -17.6518, 1.03 ) }
    dend_24 { pt3dadd( -44.754, 67.1072, -17.7273, 1.03 ) }
    dend_24 { pt3dadd( -46.3221, 67.4641, -18.1004, 0.22 ) }
    dend_24 { pt3dadd( -46.7835, 67.6152, -18.2308, 0.22 ) }
    dend_24 { pt3dadd( -47.1857, 67.7801, -18.3586, 0.74 ) }
    dend_24 { pt3dadd( -47.5362, 67.96, -18.4734, 1.18 ) }
    dend_24 { pt3dadd( -48.01, 68.237, -18.5923, 0.96 ) }
    dend_24 { pt3dadd( -48.7722, 68.7398, -18.7022, 0.22 ) }
    dend_24 { pt3dadd( -48.8132, 68.7704, -18.7011, 0.22 ) }
    dend_24 { pt3dadd( -49.3585, 69.1845, -18.6722, 0.22 ) }
    dend_24 { pt3dadd( -49.8792, 69.5733, -18.6251, 0.88 ) }
    dend_24 { pt3dadd( -50.1408, 69.7617, -18.5955, 1.18 ) }
    dend_24 { pt3dadd( -50.4334, 69.9638, -18.5791, 1.33 ) }
    dend_24 { pt3dadd( -51.382, 70.6107, -18.5725, 0.22 ) }
    dend_24 { pt3dadd( -51.8586, 70.9228, -18.6215, 0.96 ) }
    dend_24 { pt3dadd( -52.1228, 71.0946, -18.6915, 1.25 ) }
    dend_24 { pt3dadd( -52.1651, 71.1225, -18.708, 1.25 ) }
    dend_24 { pt3dadd( -53.3617, 71.9521, -19.2586, 0.22 ) }
    dend_24 { pt3dadd( -54.0301, 72.4321, -19.6096, 1.55 ) }
    dend_24 { pt3dadd( -54.491, 72.8006, -19.8871, 1.33 ) }
    dend_24 { pt3dadd( -55.354, 73.5668, -20.4385, 0.37 ) }
    dend_24 { pt3dadd( -55.9038, 74.1302, -20.7962, 1.11 ) }
    dend_24 { pt3dadd( -56.2018, 74.4884, -20.9876, 1.55 ) }
    dend_24 { pt3dadd( -56.2337, 74.5379, -21.0081, 1.55 ) }
    dend_24 { pt3dadd( -56.6555, 75.3515, -21.2916, 0.22 ) }
    dend_24 { pt3dadd( -57.0078, 76.1286, -21.5061, 0.52 ) }
    dend_24 { pt3dadd( -57.2496, 76.6551, -21.6274, 0.22 ) }
    dend_24 { pt3dadd( -57.6079, 77.3721, -21.7702, 1.47 ) }
    dend_24 { pt3dadd( -57.8967, 77.8873, -21.8688, 1.47 ) }
    dend_24 { pt3dadd( -58.7467, 79.2934, -22.1028, 0.22 ) }
    dend_24 { pt3dadd( -59.0489, 79.7575, -22.1677, 0.88 ) }
    dend_24 { pt3dadd( -59.8727, 80.9651, -22.3016, 0.22 ) }
    dend_24 { pt3dadd( -60.5353, 81.91, -22.3857, 1.4 ) }
    dend_24 { pt3dadd( -61.0008, 82.565, -22.4217, 1.55 ) }
    dend_24 { pt3dadd( -61.5114, 83.2509, -22.4921, 0.22 ) }
    dend_24 { pt3dadd( -61.6637, 83.4485, -22.5172, 0.22 ) }
    dend_24 { pt3dadd( -62.0034, 83.8792, -22.5924, 0.22 ) }
    dend_24 { pt3dadd( -62.7763, 84.8199, -22.8364, 1.11 ) }
    dend_24 { pt3dadd( -63.0622, 85.1463, -22.9506, 1.25 ) }
    dend_24 { pt3dadd( -64.0969, 86.3022, -23.3965, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_24 { pt3dadd( -64.6883, 86.9444, -23.6682, 0.96 ) }
    dend_24 { pt3dadd( -65.0991, 87.4143, -23.8527, 0.96 ) }
    dend_24 { pt3dadd( -65.8142, 88.2871, -24.1336, 0.22 ) }
    dend_24 { pt3dadd( -65.8448, 88.3275, -24.1441, 0.59 ) }
    dend_24 { pt3dadd( -66.1967, 88.8573, -24.2393, 0.59 ) }
    dend_24 { pt3dadd( -66.4199, 89.2664, -24.2705, 0.59 ) }
    dend_24 { pt3dadd( -66.8565, 90.2067, -24.3396, 0.22 ) }
    dend_24 { pt3dadd( -67.2543, 91.1465, -24.3853, 0.22 ) }
    dend_24 { pt3dadd( -67.5967, 91.944, -24.3838, 0.96 ) }
    dend_24 { pt3dadd( -67.7744, 92.3003, -24.3803, 1.4 ) }
    dend_24 { pt3dadd( -68.2122, 92.9977, -24.4254, 0.88 ) }
    dend_24 { pt3dadd( -68.6209, 93.5467, -24.4984, 0.22 ) }
    dend_24 { pt3dadd( -68.8867, 93.8609, -24.5633, 0.88 ) }
    dend_24 { pt3dadd( -69.3535, 94.3576, -24.6882, 1.11 ) }
    dend_24 { pt3dadd( -69.8193, 94.8098, -24.8062, 1.11 ) }
    dend_24 { pt3dadd( -71.0337, 95.9203, -25.1745, 0.22 ) }
    dend_24 { pt3dadd( -71.0708, 95.9537, -25.1864, 0.22 ) }
    dend_24 { pt3dadd( -71.4884, 96.3364, -25.359, 0.22 ) }
    dend_24 { pt3dadd( -71.8306, 96.6795, -25.5422, 0.22 ) }
    dend_24 { pt3dadd( -71.941, 96.8045, -25.6079, 0.22 ) }
    dend_24 { pt3dadd( -72.3486, 97.304, -25.8627, 1.03 ) }
    dend_24 { pt3dadd( -72.9329, 98.0022, -26.1734, 1.25 ) }
    dend_24 { pt3dadd( -73.6759, 98.8537, -26.5599, 0.22 ) }
    dend_24 { pt3dadd( -74.1305, 99.3595, -26.8098, 0.22 ) }
    dend_24 { pt3dadd( -74.619, 99.9195, -27.0809, 1.11 ) }
    dend_24 { pt3dadd( -74.9937, 100.347, -27.271, 1.03 ) }
    dend_24 { pt3dadd( -75.8119, 101.302, -27.6711, 0.22 ) }
    dend_24 { pt3dadd( -76.004, 101.53, -27.7625, 0.81 ) }
    dend_24 { pt3dadd( -76.6484, 102.337, -28.0129, 0.22 ) }
    dend_24 { pt3dadd( -77.0653, 102.884, -28.1563, 1.03 ) }
    dend_24 { pt3dadd( -77.3595, 103.305, -28.2555, 1.4 ) }
    dend_24 { pt3dadd( -78.517, 105.174, -28.6095, 0.22 ) }
    dend_24 { pt3dadd( -78.5775, 105.29, -28.6271, 0.22 ) }
    dend_24 { pt3dadd( -79.0257, 106.248, -28.7343, 0.22 ) }
    dend_24 { pt3dadd( -79.3503, 107.059, -28.7873, 0.81 ) }
    dend_24 { pt3dadd( -79.5659, 107.709, -28.8171, 0.96 ) }
    dend_24 { pt3dadd( -79.742, 108.381, -28.8279, 0.37 ) }
    dend_24 { pt3dadd( -79.9723, 109.56, -28.7779, 0.22 ) }
    dend_24 { pt3dadd( -79.9809, 109.61, -28.7758, 0.22 ) }
    dend_24 { pt3dadd( -80.0994, 110.401, -28.7189, 0.22 ) }
    dend_24 { pt3dadd( -80.2029, 111.065, -28.6485, 0.96 ) }
    dend_24 { pt3dadd( -80.2718, 111.457, -28.5941, 1.11 ) }
    dend_24 { pt3dadd( -80.382, 112.016, -28.4996, 0.81 ) }
    dend_24 { pt3dadd( -80.6005, 113.001, -28.3223, 0.22 ) }
    dend_24 { pt3dadd( -80.8243, 113.909, -28.1653, 0.88 ) }
    dend_24 { pt3dadd( -80.9281, 114.286, -28.1011, 1.11 ) }
    dend_24 { pt3dadd( -81.0483, 114.739, -28.0334, 1.11 ) }
    dend_24 { pt3dadd( -81.5721, 116.807, -27.772, 0.22 ) }
    dend_24 { pt3dadd( -81.9189, 118.227, -27.6468, 1.0 ) }
    dend_24 { pt3dadd( -82.1208, 119.07, -27.6034, 0.22 ) }
    dend_24 { pt3dadd( -82.3168, 119.9, -27.5896, 0.96 ) }
    dend_24 { pt3dadd( -82.5332, 120.876, -27.5918, 0.22 ) }
    dend_24 { pt3dadd( -82.7082, 121.733, -27.6146, 0.52 ) }
    dend_24 { pt3dadd( -82.863, 122.535, -27.7169, 0.22 ) }
    dend_24 { pt3dadd( -82.8756, 122.599, -27.7335, 0.22 ) }
    dend_24 { pt3dadd( -82.9722, 123.036, -27.8883, 0.88 ) }
    dend_24 { pt3dadd( -83.1125, 123.514, -28.0931, 1.11 ) }
    dend_24 { pt3dadd( -83.29, 123.904, -28.3571, 1.25 ) }
    dend_24 { pt3dadd( -83.8144, 124.844, -29.2335, 0.37 ) }
    dend_24 { pt3dadd( -84.1989, 125.497, -29.9051, 0.44 ) }
    dend_24 { pt3dadd( -84.3429, 125.738, -30.1897, 0.66 ) }
    dend_24 { pt3dadd( -84.5318, 126.051, -30.5992, 0.66 ) }
    dend_24 { pt3dadd( -85.3718, 127.466, -32.6569, 1.11 ) }
    dend_24 { pt3dadd( -85.8898, 128.44, -34.1715, 0.22 ) }
    dend_24 { pt3dadd( -85.9917, 128.654, -34.5431, 0.81 ) }
    dend_24 { pt3dadd( -86.3451, 129.599, -36.2688, 0.22 ) }
    dend_24 { pt3dadd( -86.3737, 129.704, -36.466, 0.74 ) }
    dend_24 { pt3dadd( -86.5163, 130.517, -38.0141, 0.22 ) }
    dend_24 { pt3dadd( -86.5542, 130.95, -38.8329, 1.33 ) }
    dend_24 { pt3dadd( -86.6358, 132.315, -41.4232, 0.22 ) }
    dend_24 { pt3dadd( -86.6615, 132.677, -42.1168, 0.22 ) }
    dend_24 { pt3dadd( -86.6906, 133.25, -43.1793, 0.22 ) }
    dend_24 { pt3dadd( -86.6915, 133.271, -43.2195, 0.22 ) }
    dend_24 { pt3dadd( -86.695, 133.608, -43.8699, 0.96 ) }
    dend_24 { pt3dadd( -86.6978, 133.795, -44.2293, 0.96 ) }
    dend_24 { pt3dadd( -86.6377, 134.746, -45.957, 0.22 ) }
    dend_24 { pt3dadd( -86.6271, 134.866, -46.1937, 0.52 ) }
    dend_24 { pt3dadd( -86.5913, 135.045, -46.5632, 0.52 ) }
    dend_24 { pt3dadd( -86.4137, 135.532, -47.6186, 0.52 ) }
    dend_24 { pt3dadd( -86.1974, 135.869, -48.3854, 0.22 ) }
    dend_24 { pt3dadd( -86.1704, 135.897, -48.4519, 0.22 ) }
    dend_24 { pt3dadd( -85.7885, 136.192, -49.1097, 1.03 ) }
    dend_24 { pt3dadd( -85.759, 136.208, -49.1579, 1.03 ) }
    dend_24 { pt3dadd( -85.3296, 136.373, -49.8028, 0.22 ) }
    dend_24 { pt3dadd( -85.0156, 136.478, -50.2407, 1.11 ) }
    dend_24 { pt3dadd( -84.7682, 136.586, -50.6266, 1.11 ) }
    dend_24 { pt3dadd( -84.7521, 136.6, -50.6722, 1.11 ) }
    dend_24 { pt3dadd( -84.5897, 137.044, -52.1037, 0.22 ) }
    dend_24 { pt3dadd( -84.6082, 137.216, -52.6829, 0.96 ) }
    dend_24 { pt3dadd( -84.8972, 137.541, -53.8972, 0.22 ) }
    dend_24 { pt3dadd( -85.1728, 137.734, -54.6108, 1.18 ) }
    dend_24 { pt3dadd( -86.1948, 138.318, -56.703, 0.96 ) }
    dend_24 { pt3dadd( -86.7892, 138.626, -57.7314, 0.29 ) }
    dend_24 { pt3dadd( -86.9937, 138.73, -58.0219, 0.66 ) }
    dend_24 { pt3dadd( -88.2803, 139.415, -59.6553, 0.22 ) }
    dend_24 { pt3dadd( -88.7622, 139.673, -60.212, 1.11 ) }
    dend_24 { pt3dadd( -88.7997, 139.698, -60.2529, 1.11 ) }
    dend_24 { pt3dadd( -89.0586, 139.954, -60.5024, 1.47 ) }
    dend_24 { pt3dadd( -89.9018, 141.161, -61.2183, 0.22 ) }
    dend_24 { pt3dadd( -90.3559, 141.999, -61.4914, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_24 { pt3dadd( -90.3736, 142.042, -61.493, 0.22 ) }
    dend_24 { pt3dadd( -90.676, 142.805, -61.3713, 1.25 ) }
    dend_24 { pt3dadd( -90.9395, 143.407, -61.1571, 1.25 ) }
    dend_24 { pt3dadd( -91.4421, 144.491, -60.5275, 0.22 ) }
    dend_24 { pt3dadd( -91.6435, 144.928, -60.1853, 0.44 ) }
    dend_24 { pt3dadd( -91.7078, 145.063, -60.065, 0.44 ) }
    dend_24 { pt3dadd( -92.0275, 145.73, -59.4418, 0.22 ) }
    dend_24 { pt3dadd( -92.2717, 146.234, -58.9312, 0.22 ) }
    dend_24 { pt3dadd( -92.7948, 147.199, -58.0341, 0.44 ) }
    dend_24 { pt3dadd( -97.011, 153.019, -60.833, 0.44 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 10/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -27.8115, 35.2451, 14.3174, 0.44 ) }
    dend_19 { pt3dadd( -30.8833, 34.5803, 13.5209, 0.44 ) }
    dend_19 { pt3dadd( -31.799, 34.3174, 13.3786, 0.52 ) }
    dend_19 { pt3dadd( -32.7825, 34.04, 13.2917, 0.52 ) }
    dend_19 { pt3dadd( -33.4357, 33.8923, 13.2546, 0.66 ) }
    dend_19 { pt3dadd( -34.267, 33.7851, 13.2243, 0.37 ) }
    dend_19 { pt3dadd( -35.0417, 33.7425, 13.2069, 0.29 ) }
    dend_19 { pt3dadd( -35.5522, 33.7762, 13.3209, 0.29 ) }
    dend_19 { pt3dadd( -36.2136, 33.9453, 13.4131, 0.66 ) }
    dend_19 { pt3dadd( -36.934, 34.2209, 13.4508, 0.44 ) }
    dend_19 { pt3dadd( -37.8498, 34.6464, 13.44, 0.44 ) }
    dend_19 { pt3dadd( -38.0212, 34.7107, 13.4083, 0.44 ) }
    dend_19 { pt3dadd( -38.6741, 34.756, 13.1035, 0.44 ) }
    dend_19 { pt3dadd( -39.4855, 34.6388, 12.324, 0.37 ) }
    dend_19 { pt3dadd( -39.9425, 34.5409, 11.6816, 0.37 ) }
    dend_19 { pt3dadd( -39.9838, 34.5316, 11.62, 0.37 ) }
    dend_19 { pt3dadd( -41.1713, 34.2575, 9.93093, 0.96 ) }
    dend_19 { pt3dadd( -42.1033, 34.02, 8.59094, 1.18 ) }
    dend_19 { pt3dadd( -43.6437, 33.7024, 6.5609, 0.37 ) }
    dend_19 { pt3dadd( -44.4292, 33.6882, 5.76254, 0.37 ) }
    dend_19 { pt3dadd( -45.5317, 33.8737, 4.83123, 0.37 ) }
    dend_19 { pt3dadd( -46.498, 34.1482, 3.98466, 0.37 ) }
    dend_19 { pt3dadd( -47.0751, 34.4029, 3.4583, 0.37 ) }
    dend_19 { pt3dadd( -48.4502, 35.193, 2.161, 0.88 ) }
    dend_19 { pt3dadd( -50.3339, 36.4573, 0.432197, 1.25 ) }
    dend_19 { pt3dadd( -52.1788, 37.9005, -1.40692, 1.03 ) }
    dend_19 { pt3dadd( -53.9182, 39.5401, -3.35826, 0.44 ) }
    dend_19 { pt3dadd( -54.687, 40.3308, -4.28995, 0.44 ) }
    dend_19 { pt3dadd( -55.3637, 41.1045, -5.16386, 0.44 ) }
    dend_19 { pt3dadd( -55.8244, 41.741, -5.86609, 0.29 ) }
    dend_19 { pt3dadd( -56.3342, 42.5932, -6.73532, 1.11 ) }
    dend_19 { pt3dadd( -56.6209, 43.1375, -7.2354, 1.47 ) }
    dend_19 { pt3dadd( -57.7092, 45.1751, -8.97793, 0.29 ) }
    dend_19 { pt3dadd( -58.2847, 46.1447, -9.91964, 0.59 ) }
    dend_19 { pt3dadd( -58.6439, 46.765, -10.5914, 1.11 ) }
    dend_19 { pt3dadd( -58.9493, 47.3126, -11.2104, 0.81 ) }
    dend_19 { pt3dadd( -59.6706, 48.715, -12.7537, 0.29 ) }
    dend_19 { pt3dadd( -60.0113, 49.4012, -13.4498, 0.52 ) }
    dend_19 { pt3dadd( -60.4379, 50.3218, -14.2007, 0.29 ) }
    dend_19 { pt3dadd( -60.524, 50.4724, -14.3128, 0.29 ) }
    dend_19 { pt3dadd( -60.8464, 51.0476, -14.6859, 0.29 ) }
    dend_19 { pt3dadd( -61.1761, 51.6567, -15.0979, 0.29 ) }
    dend_19 { pt3dadd( -61.6725, 52.5637, -15.8208, 0.96 ) }
    dend_19 { pt3dadd( -61.8483, 52.9258, -16.1529, 1.33 ) }
    dend_19 { pt3dadd( -62.0585, 53.3714, -16.5888, 1.33 ) }
    dend_19 { pt3dadd( -62.5142, 54.3115, -17.5407, 0.74 ) }
    dend_19 { pt3dadd( -63.1148, 55.4957, -18.7401, 0.88 ) }
    dend_19 { pt3dadd( -63.9005, 56.819, -20.0353, 1.25 ) }
    dend_19 { pt3dadd( -64.1976, 57.2479, -20.4316, 1.4 ) }
    dend_19 { pt3dadd( -65.0657, 58.3434, -21.3642, 0.52 ) }
    dend_19 { pt3dadd( -65.4625, 58.8192, -21.7162, 0.22 ) }
    dend_19 { pt3dadd( -66.0507, 59.5251, -22.1445, 0.22 ) }
    dend_19 { pt3dadd( -66.7923, 60.4812, -22.6033, 0.9 ) }
    dend_19 { pt3dadd( -67.2794, 61.1567, -22.9137, 0.81 ) }
    dend_19 { pt3dadd( -68.3657, 62.7561, -23.7323, 0.22 ) }
    dend_19 { pt3dadd( -69.1902, 64.0955, -24.4466, 1.55 ) }
    dend_19 { pt3dadd( -69.3481, 64.3729, -24.6184, 1.77 ) }
    dend_19 { pt3dadd( -69.8136, 65.2812, -25.2356, 0.81 ) }
    dend_19 { pt3dadd( -70.3459, 66.4772, -26.1212, 0.22 ) }
    dend_19 { pt3dadd( -70.6143, 67.1607, -26.6279, 0.52 ) }
    dend_19 { pt3dadd( -70.892, 67.9484, -27.195, 0.22 ) }
    dend_19 { pt3dadd( -71.4299, 69.5562, -28.3523, 1.25 ) }
    dend_19 { pt3dadd( -71.5308, 69.8607, -28.5667, 1.47 ) }
    dend_19 { pt3dadd( -72.0937, 71.5987, -29.7434, 0.22 ) }
    dend_19 { pt3dadd( -72.3441, 72.3829, -30.2246, 0.22 ) }
    dend_19 { pt3dadd( -72.3759, 72.4749, -30.2777, 0.22 ) }
    dend_19 { pt3dadd( -72.5858, 73.0725, -30.6107, 0.22 ) }
    dend_19 { pt3dadd( -72.898, 73.9818, -31.0707, 1.11 ) }
    dend_19 { pt3dadd( -72.9272, 74.059, -31.1109, 1.11 ) }
    dend_19 { pt3dadd( -73.1636, 74.6357, -31.3966, 1.55 ) }
    dend_19 { pt3dadd( -73.5238, 75.5231, -31.8885, 0.66 ) }
    dend_19 { pt3dadd( -73.6009, 75.7266, -32.0042, 0.66 ) }
    dend_19 { pt3dadd( -73.9864, 76.8609, -32.8436, 0.22 ) }
    dend_19 { pt3dadd( -74.0076, 76.9272, -32.8953, 0.22 ) }
    dend_19 { pt3dadd( -74.2141, 77.526, -33.342, 0.22 ) }
    dend_19 { pt3dadd( -74.5276, 78.3688, -33.9455, 0.96 ) }
    dend_19 { pt3dadd( -74.6622, 78.6905, -34.1668, 1.25 ) }
    dend_19 { pt3dadd( -75.8506, 81.1302, -35.7559, 0.29 ) }
    dend_19 { pt3dadd( -76.3053, 81.9072, -36.2624, 0.29 ) }
    dend_19 { pt3dadd( -77.0775, 82.9635, -36.9897, 0.22 ) }
    dend_19 { pt3dadd( -77.4341, 83.3467, -37.2629, 0.22 ) }
    dend_19 { pt3dadd( -78.1721, 83.9479, -37.6929, 0.88 ) }
    dend_19 { pt3dadd( -78.6922, 84.2925, -37.9327, 1.11 ) }
    dend_19 { pt3dadd( -79.6035, 84.7929, -38.2966, 1.11 ) }
    dend_19 { pt3dadd( -80.6401, 85.3785, -38.7912, 0.22 ) }
    dend_19 { pt3dadd( -81.1501, 85.6827, -39.0665, 0.22 ) }
    dend_19 { pt3dadd( -82.3934, 86.5012, -39.7908, 1.77 ) }
    dend_19 { pt3dadd( -82.8071, 86.823, -40.0363, 2.14 ) }
    dend_19 { pt3dadd( -84.4449, 88.3078, -41.0412, 0.29 ) }
    dend_19 { pt3dadd( -85.0728, 88.9966, -41.4038, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_19 { pt3dadd( -85.1797, 89.1425, -41.4637, 0.59 ) }
    dend_19 { pt3dadd( -85.2798, 89.3047, -41.5164, 0.59 ) }
    dend_19 { pt3dadd( -85.7739, 90.1861, -41.7503, 0.29 ) }
    dend_19 { pt3dadd( -85.8192, 90.2541, -41.7641, 0.29 ) }
    dend_19 { pt3dadd( -86.4739, 91.0583, -41.8271, 1.18 ) }
    dend_19 { pt3dadd( -86.873, 91.4532, -41.8696, 1.33 ) }
    dend_19 { pt3dadd( -87.3627, 91.9404, -41.9734, 0.74 ) }
    dend_19 { pt3dadd( -88.242, 92.7973, -42.2343, 0.29 ) }
    dend_19 { pt3dadd( -88.873, 93.4075, -42.4883, 0.74 ) }
    dend_19 { pt3dadd( -88.9371, 93.4752, -42.5176, 0.74 ) }
    dend_19 { pt3dadd( -89.2814, 93.8863, -42.6961, 0.59 ) }
    dend_19 { pt3dadd( -89.9973, 94.9004, -43.1028, 0.22 ) }
    dend_19 { pt3dadd( -90.0438, 94.9761, -43.1316, 0.22 ) }
    dend_19 { pt3dadd( -90.2529, 95.3344, -43.2119, 0.22 ) }
    dend_19 { pt3dadd( -90.5864, 95.8873, -43.3067, 0.66 ) }
    dend_19 { pt3dadd( -90.9981, 96.5089, -43.3693, 0.96 ) }
    dend_19 { pt3dadd( -91.0531, 96.5839, -43.3736, 0.96 ) }
    dend_19 { pt3dadd( -91.8291, 97.6229, -43.3924, 0.22 ) }
    dend_19 { pt3dadd( -92.6971, 98.8654, -43.4273, 1.47 ) }
    dend_19 { pt3dadd( -92.9681, 99.2712, -43.4406, 1.77 ) }
    dend_19 { pt3dadd( -93.4754, 100.072, -43.4703, 0.74 ) }
    dend_19 { pt3dadd( -93.879, 100.782, -43.4927, 0.29 ) }
    dend_19 { pt3dadd( -94.4452, 101.889, -43.5093, 0.22 ) }
    dend_19 { pt3dadd( -94.7919, 102.614, -43.5032, 0.52 ) }
    dend_19 { pt3dadd( -95.0148, 103.043, -43.5037, 0.52 ) }
    dend_19 { pt3dadd( -95.076, 103.149, -43.4889, 0.52 ) }
    dend_19 { pt3dadd( -95.6999, 104.071, -43.2333, 0.22 ) }
    dend_19 { pt3dadd( -96.4159, 104.964, -42.8146, 1.47 ) }
    dend_19 { pt3dadd( -97.0542, 105.627, -42.4049, 1.11 ) }
    dend_19 { pt3dadd( -97.7704, 106.301, -41.9209, 0.88 ) }
    dend_19 { pt3dadd( -99.1286, 107.518, -40.9742, 0.22 ) }
    dend_19 { pt3dadd( -99.7098, 108.008, -40.5582, 0.22 ) }
    dend_19 { pt3dadd( -100.805, 108.834, -39.7298, 1.33 ) }
    dend_19 { pt3dadd( -101.471, 109.309, -39.179, 1.69 ) }
    dend_19 { pt3dadd( -101.52, 109.345, -39.1343, 1.69 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 35/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -27.8115, 35.2451, 14.3174, 0.44 ) }
    dend_14 { pt3dadd( -28.3528, 35.483, 14.5395, 0.44 ) }
    dend_14 { pt3dadd( -28.9062, 35.6945, 14.7454, 0.29 ) }
    dend_14 { pt3dadd( -28.9658, 35.7136, 14.7735, 0.29 ) }
    dend_14 { pt3dadd( -29.4629, 35.8511, 15.019, 0.29 ) }
    dend_14 { pt3dadd( -29.811, 35.929, 15.2091, 0.29 ) }
    dend_14 { pt3dadd( -30.3223, 36.0224, 15.498, 0.81 ) }
    dend_14 { pt3dadd( -30.6645, 36.0719, 15.7144, 0.66 ) }
    dend_14 { pt3dadd( -31.3503, 36.0948, 16.1544, 0.44 ) }
    dend_14 { pt3dadd( -31.6655, 36.0744, 16.3372, 0.29 ) }
    dend_14 { pt3dadd( -32.2074, 35.9819, 16.6161, 0.59 ) }
    dend_14 { pt3dadd( -32.3808, 35.9402, 16.7014, 0.59 ) }
    dend_14 { pt3dadd( -32.9364, 35.7817, 16.9189, 0.29 ) }
    dend_14 { pt3dadd( -33.4829, 35.6212, 17.0596, 0.29 ) }
    dend_14 { pt3dadd( -34.1074, 35.4429, 17.1329, 0.66 ) }
    dend_14 { pt3dadd( -34.5346, 35.3312, 17.1516, 0.96 ) }
    dend_14 { pt3dadd( -34.5977, 35.3171, 17.1491, 0.96 ) }
    dend_14 { pt3dadd( -35.4439, 35.1726, 17.0817, 0.37 ) }
    dend_14 { pt3dadd( -36.0163, 35.1139, 17.0308, 0.37 ) }
    dend_14 { pt3dadd( -36.2855, 35.1094, 17.0164, 0.66 ) }
    dend_14 { pt3dadd( -36.4063, 35.1175, 17.026, 0.66 ) }
    dend_14 { pt3dadd( -36.6296, 35.1385, 17.0765, 0.66 ) }
    dend_14 { pt3dadd( -36.9647, 35.1632, 17.1948, 0.66 ) }
    dend_14 { pt3dadd( -37.4839, 35.1833, 17.4406, 0.29 ) }
    dend_14 { pt3dadd( -37.5393, 35.1825, 17.4666, 0.29 ) }
    dend_14 { pt3dadd( -38.0915, 35.1616, 17.7025, 0.29 ) }
    dend_14 { pt3dadd( -38.5544, 35.1285, 17.8741, 0.29 ) }
    dend_14 { pt3dadd( -39.0369, 35.0759, 18.0284, 0.81 ) }
    dend_14 { pt3dadd( -39.5672, 35.0025, 18.1664, 0.88 ) }
    dend_14 { pt3dadd( -39.9178, 34.9445, 18.2331, 0.66 ) }
    dend_14 { pt3dadd( -40.4443, 34.8419, 18.3358, 0.29 ) }
    dend_14 { pt3dadd( -40.9453, 34.7437, 18.4307, 0.66 ) }
    dend_14 { pt3dadd( -41.3037, 34.6817, 18.5129, 0.88 ) }
    dend_14 { pt3dadd( -41.8464, 34.6078, 18.6699, 1.03 ) }
    dend_14 { pt3dadd( -42.5053, 34.5598, 18.912, 1.03 ) }
    dend_14 { pt3dadd( -43.3609, 34.5644, 19.2756, 0.37 ) }
    dend_14 { pt3dadd( -43.6906, 34.5867, 19.4297, 0.37 ) }
    dend_14 { pt3dadd( -44.1289, 34.6447, 19.6494, 0.37 ) }
    dend_14 { pt3dadd( -44.6421, 34.732, 19.9157, 0.29 ) }
    dend_14 { pt3dadd( -45.1895, 34.8327, 20.203, 0.29 ) }
    dend_14 { pt3dadd( -45.712, 34.9197, 20.4266, 0.29 ) }
    dend_14 { pt3dadd( -46.2097, 34.9619, 20.5541, 0.88 ) }
    dend_14 { pt3dadd( -46.2775, 34.9589, 20.5629, 0.88 ) }
    dend_14 { pt3dadd( -46.5921, 34.912, 20.5711, 1.11 ) }
    dend_14 { pt3dadd( -47.0307, 34.8185, 20.5556, 1.11 ) }
    dend_14 { pt3dadd( -47.8749, 34.6144, 20.4868, 0.59 ) }
    dend_14 { pt3dadd( -48.4192, 34.4825, 20.4401, 0.29 ) }
    dend_14 { pt3dadd( -48.8694, 34.3856, 20.4067, 0.29 ) }
    dend_14 { pt3dadd( -49.4481, 34.2816, 20.3643, 0.59 ) }
    dend_14 { pt3dadd( -49.8771, 34.2266, 20.3397, 0.96 ) }
    dend_14 { pt3dadd( -50.2825, 34.1853, 20.3279, 0.96 ) }
    dend_14 { pt3dadd( -50.6232, 34.1561, 20.3332, 0.81 ) }
    dend_14 { pt3dadd( -51.0927, 34.1112, 20.3317, 0.59 ) }
    dend_14 { pt3dadd( -51.4699, 34.0662, 20.3167, 0.29 ) }
    dend_14 { pt3dadd( -52.2273, 33.958, 20.2741, 0.22 ) }
    dend_14 { pt3dadd( -52.8746, 33.8528, 20.2373, 0.74 ) }
    dend_14 { pt3dadd( -53.3446, 33.7769, 20.2021, 1.33 ) }
    dend_14 { pt3dadd( -53.8856, 33.7002, 20.1515, 1.33 ) }
    dend_14 { pt3dadd( -54.6051, 33.6243, 20.0653, 0.59 ) }
    dend_14 { pt3dadd( -55.2851, 33.5865, 19.9804, 0.29 ) }
    dend_14 { pt3dadd( -55.6887, 33.5953, 19.9237, 0.29 ) }
    dend_14 { pt3dadd( -56.1855, 33.6544, 19.8546, 0.59 ) }
    dend_14 { pt3dadd( -56.7088, 33.759, 19.7933, 0.74 ) }
    dend_14 { pt3dadd( -57.2602, 33.91, 19.7564, 0.96 ) }
    dend_14 { pt3dadd( -58.0159, 34.1467, 19.7429, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_14 { pt3dadd( -58.5403, 34.2907, 19.7505, 0.37 ) }
    dend_14 { pt3dadd( -58.8533, 34.3498, 19.7693, 0.44 ) }
    dend_14 { pt3dadd( -59.4631, 34.4062, 19.8365, 0.44 ) }
    dend_14 { pt3dadd( -59.9612, 34.3985, 19.9184, 0.44 ) }
    dend_14 { pt3dadd( -60.4259, 34.3347, 20.0156, 1.25 ) }
    dend_14 { pt3dadd( -61.0924, 34.1654, 20.178, 1.25 ) }
    dend_14 { pt3dadd( -61.7674, 33.9353, 20.357, 1.33 ) }
    dend_14 { pt3dadd( -62.3364, 33.7111, 20.5134, 0.74 ) }
    dend_14 { pt3dadd( -63.1674, 33.3653, 20.7447, 0.29 ) }
    dend_14 { pt3dadd( -64.1243, 32.9785, 21.0055, 0.96 ) }
    dend_14 { pt3dadd( -64.6756, 32.79, 21.145, 0.29 ) }
    dend_14 { pt3dadd( -65.0551, 32.699, 21.2311, 0.29 ) }
    dend_14 { pt3dadd( -65.4113, 32.6491, 21.2942, 1.03 ) }
    dend_14 { pt3dadd( -65.9847, 32.6376, 21.3611, 1.4 ) }
    dend_14 { pt3dadd( -66.4596, 32.6877, 21.3848, 1.47 ) }
    dend_14 { pt3dadd( -67.1887, 32.8368, 21.3805, 0.44 ) }
    dend_14 { pt3dadd( -67.7027, 32.9478, 21.3627, 0.44 ) }
    dend_14 { pt3dadd( -68.3923, 33.0672, 21.3267, 0.74 ) }
    dend_14 { pt3dadd( -68.8221, 33.1122, 21.305, 0.74 ) }
    dend_14 { pt3dadd( -69.4454, 33.1314, 21.2791, 0.59 ) }
    dend_14 { pt3dadd( -70.0903, 33.1019, 21.2639, 0.52 ) }
    dend_14 { pt3dadd( -70.88, 33.0062, 21.2792, 0.37 ) }
    dend_14 { pt3dadd( -71.5862, 32.8691, 21.3095, 0.74 ) }
    dend_14 { pt3dadd( -72.1644, 32.7277, 21.3505, 1.18 ) }
    dend_14 { pt3dadd( -72.6179, 32.6008, 21.3929, 1.03 ) }
    dend_14 { pt3dadd( -73.0498, 32.4699, 21.4444, 0.44 ) }
    dend_14 { pt3dadd( -73.7163, 32.2514, 21.5724, 0.29 ) }
    dend_14 { pt3dadd( -74.3602, 32.0492, 21.7244, 0.88 ) }
    dend_14 { pt3dadd( -74.7918, 31.9249, 21.8422, 1.18 ) }
    dend_14 { pt3dadd( -75.423, 31.749, 22.0185, 0.74 ) }
    dend_14 { pt3dadd( -75.4894, 31.7313, 22.042, 0.74 ) }
    dend_14 { pt3dadd( -76.1988, 31.5488, 22.349, 0.44 ) }
    dend_14 { pt3dadd( -76.8366, 31.408, 22.6574, 0.37 ) }
    dend_14 { pt3dadd( -77.2161, 31.3534, 22.8615, 1.11 ) }
    dend_14 { pt3dadd( -77.6946, 31.3216, 23.1405, 1.47 ) }
    dend_14 { pt3dadd( -78.5849, 31.3578, 23.6795, 0.96 ) }
    dend_14 { pt3dadd( -79.2028, 31.4351, 24.0345, 0.37 ) }
    dend_14 { pt3dadd( -79.5889, 31.5073, 24.2507, 0.37 ) }
    dend_14 { pt3dadd( -80.1177, 31.6102, 24.5486, 0.37 ) }
    dend_14 { pt3dadd( -80.6457, 31.7137, 24.8347, 0.29 ) }
    dend_14 { pt3dadd( -81.2016, 31.8089, 25.0987, 0.29 ) }
    dend_14 { pt3dadd( -81.9373, 31.8981, 25.3724, 0.74 ) }
    dend_14 { pt3dadd( -82.4708, 31.9252, 25.5445, 0.29 ) }
    dend_14 { pt3dadd( -83.0722, 31.9044, 25.7179, 0.22 ) }
    dend_14 { pt3dadd( -83.5418, 31.8601, 25.8369, 0.88 ) }
    dend_14 { pt3dadd( -84.3298, 31.7665, 26.0125, 0.96 ) }
    dend_14 { pt3dadd( -84.9383, 31.7086, 26.1385, 0.96 ) }
    dend_14 { pt3dadd( -85.5433, 31.7082, 26.2523, 1.18 ) }
    dend_14 { pt3dadd( -86.0826, 31.7528, 26.3628, 0.88 ) }
    dend_14 { pt3dadd( -86.647, 31.8372, 26.4947, 0.29 ) }
    dend_14 { pt3dadd( -87.3791, 31.9736, 26.6825, 0.29 ) }
    dend_14 { pt3dadd( -87.9511, 32.1002, 26.8489, 0.29 ) }
    dend_14 { pt3dadd( -88.5257, 32.2331, 27.0306, 0.29 ) }
    dend_14 { pt3dadd( -89.4424, 32.4325, 27.3273, 0.22 ) }
    dend_14 { pt3dadd( -89.7644, 32.4804, 27.4294, 1.18 ) }
    dend_14 { pt3dadd( -89.83, 32.4851, 27.4486, 1.18 ) }
    dend_14 { pt3dadd( -90.3009, 32.4874, 27.5777, 1.18 ) }
    dend_14 { pt3dadd( -90.7744, 32.4645, 27.7098, 1.18 ) }
    dend_14 { pt3dadd( -91.5855, 32.401, 27.9233, 1.18 ) }
    dend_14 { pt3dadd( -92.1854, 32.3589, 28.0861, 1.11 ) }
    dend_14 { pt3dadd( -92.7654, 32.3253, 28.3009, 1.33 ) }
    dend_14 { pt3dadd( -92.8147, 32.3238, 28.3222, 1.33 ) }
    dend_14 { pt3dadd( -93.5238, 32.3228, 28.6676, 0.59 ) }
    dend_14 { pt3dadd( -94.0533, 32.3359, 28.9607, 0.52 ) }
    dend_14 { pt3dadd( -94.9048, 32.3642, 29.4633, 1.18 ) }
    dend_14 { pt3dadd( -95.7393, 32.392, 29.9618, 0.22 ) }
    dend_14 { pt3dadd( -96.2449, 32.3963, 30.244, 0.66 ) }
    dend_14 { pt3dadd( -96.5228, 32.3954, 30.3858, 0.66 ) }
    dend_14 { pt3dadd( -97.1887, 32.3903, 30.6849, 0.22 ) }
    dend_14 { pt3dadd( -97.8386, 32.3936, 30.9399, 0.59 ) }
    dend_14 { pt3dadd( -98.0877, 32.3952, 31.0189, 0.59 ) }
    dend_14 { pt3dadd( -98.8845, 32.3772, 31.2227, 0.22 ) }
    dend_14 { pt3dadd( -98.9395, 32.3741, 31.2369, 0.22 ) }
    dend_14 { pt3dadd( -99.1597, 32.3556, 31.2916, 0.22 ) }
    dend_14 { pt3dadd( -99.5948, 32.287, 31.3873, 0.22 ) }
    dend_14 { pt3dadd( -100.176, 32.1704, 31.524, 0.22 ) }
    dend_14 { pt3dadd( -100.607, 32.0568, 31.628, 1.03 ) }
    dend_14 { pt3dadd( -100.954, 31.9438, 31.7247, 1.47 ) }
    dend_14 { pt3dadd( -101.312, 31.8184, 31.8258, 1.47 ) }
    dend_14 { pt3dadd( -102.227, 31.4991, 32.1068, 0.22 ) }
    dend_14 { pt3dadd( -102.279, 31.4827, 32.1231, 0.22 ) }
    dend_14 { pt3dadd( -102.748, 31.3538, 32.2682, 0.22 ) }
    dend_14 { pt3dadd( -103.554, 31.168, 32.5248, 0.59 ) }
    dend_14 { pt3dadd( -104.114, 31.0611, 32.7068, 1.03 ) }
    dend_14 { pt3dadd( -104.89, 30.9436, 32.958, 1.4 ) }
    dend_14 { pt3dadd( -105.461, 30.8759, 33.1473, 1.69 ) }
    dend_14 { pt3dadd( -106.026, 30.8075, 33.3332, 1.11 ) }
    dend_14 { pt3dadd( -106.745, 30.718, 33.5612, 0.52 ) }
    dend_14 { pt3dadd( -106.854, 30.7047, 33.5971, 0.52 ) }
    dend_14 { pt3dadd( -107.424, 30.6507, 33.7993, 0.44 ) }
    dend_14 { pt3dadd( -108.248, 30.6019, 34.1506, 0.37 ) }
    dend_14 { pt3dadd( -108.303, 30.6013, 34.1777, 0.37 ) }
    dend_14 { pt3dadd( -108.742, 30.6161, 34.4056, 0.66 ) }
    dend_14 { pt3dadd( -109.579, 30.6633, 34.8487, 0.66 ) }
    dend_14 { pt3dadd( -110.258, 30.6974, 35.1981, 0.66 ) }
    dend_14 { pt3dadd( -111.052, 30.7312, 35.6011, 0.22 ) }
    dend_14 { pt3dadd( -111.533, 30.748, 35.8348, 0.22 ) }
    dend_14 { pt3dadd( -112.142, 30.7361, 36.1131, 0.66 ) }
    dend_14 { pt3dadd( -112.509, 30.7044, 36.2629, 0.81 ) }
    dend_14 { pt3dadd( -112.912, 30.6212, 36.3936, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_14 { pt3dadd( -113.526, 30.4432, 36.5908, 0.22 ) }
    dend_14 { pt3dadd( -113.582, 30.4273, 36.6101, 0.22 ) }
    dend_14 { pt3dadd( -114.1, 30.3003, 36.8207, 0.66 ) }
    dend_14 { pt3dadd( -114.602, 30.2268, 37.0416, 0.81 ) }
    dend_14 { pt3dadd( -114.994, 30.2087, 37.2158, 0.96 ) }
    dend_14 { pt3dadd( -116.119, 30.2994, 37.6984, 0.29 ) }
    dend_14 { pt3dadd( -116.753, 30.4342, 37.9852, 1.03 ) }
    dend_14 { pt3dadd( -117.146, 30.5479, 38.1646, 1.47 ) }
    dend_14 { pt3dadd( -117.768, 30.7813, 38.4458, 1.99 ) }
    dend_14 { pt3dadd( -118.199, 30.947, 38.6342, 1.84 ) }
    dend_14 { pt3dadd( -118.816, 31.1699, 38.8942, 1.11 ) }
    dend_14 { pt3dadd( -119.6, 31.4189, 39.1923, 0.52 ) }
    dend_14 { pt3dadd( -120.233, 31.5697, 39.4197, 0.29 ) }
    dend_14 { pt3dadd( -120.709, 31.6393, 39.6576, 0.22 ) }
    dend_14 { pt3dadd( -121.262, 31.6632, 39.9935, 0.22 ) }
    dend_14 { pt3dadd( -121.839, 31.6463, 40.3881, 0.22 ) }
    dend_14 { pt3dadd( -122.048, 31.6307, 40.5369, 1.11 ) }
    dend_14 { pt3dadd( -122.352, 31.6064, 40.7483, 1.11 ) }
    dend_14 { pt3dadd( -123.65, 31.5221, 41.6776, 0.37 ) }
    dend_14 { pt3dadd( -124.122, 31.4967, 42.0227, 0.37 ) }
    dend_14 { pt3dadd( -124.618, 31.4866, 42.3696, 0.37 ) }
    dend_14 { pt3dadd( -125.104, 31.4772, 42.6812, 0.37 ) }
    dend_14 { pt3dadd( -125.376, 31.4717, 42.8404, 0.66 ) }
    dend_14 { pt3dadd( -125.76, 31.4705, 43.0316, 0.66 ) }
    dend_14 { pt3dadd( -126.584, 31.512, 43.3455, 0.29 ) }
    dend_14 { pt3dadd( -127.035, 31.5588, 43.526, 0.22 ) }
    dend_14 { pt3dadd( -127.386, 31.6214, 43.6635, 0.59 ) }
    dend_14 { pt3dadd( -127.677, 31.7075, 43.7858, 0.81 ) }
    dend_14 { pt3dadd( -127.99, 31.8285, 43.9139, 0.52 ) }
    dend_14 { pt3dadd( -128.457, 32.0318, 44.1014, 0.44 ) }
    dend_14 { pt3dadd( -128.734, 32.1411, 44.2024, 0.44 ) }
    dend_14 { pt3dadd( -129.197, 32.284, 44.3673, 0.37 ) }
    dend_14 { pt3dadd( -129.885, 32.4037, 44.5984, 0.29 ) }
    dend_14 { pt3dadd( -130.408, 32.4417, 44.7737, 0.29 ) }
    dend_14 { pt3dadd( -131.122, 32.4402, 45.0089, 0.88 ) }
    dend_14 { pt3dadd( -131.775, 32.3984, 45.2083, 1.18 ) }
    dend_14 { pt3dadd( -132.475, 32.3713, 45.4104, 0.81 ) }
    dend_14 { pt3dadd( -133.21, 32.3228, 45.5801, 0.66 ) }
    dend_14 { pt3dadd( -133.754, 32.2775, 45.6719, 0.52 ) }
    dend_14 { pt3dadd( -133.815, 32.2735, 45.6797, 0.52 ) }
    dend_14 { pt3dadd( -134.521, 32.2373, 45.7422, 0.29 ) }
    dend_14 { pt3dadd( -135.806, 32.1928, 45.8483, 1.33 ) }
    dend_14 { pt3dadd( -136.837, 32.144, 45.9573, 0.29 ) }
    dend_14 { pt3dadd( -137.562, 32.1074, 46.0437, 0.81 ) }
    dend_14 { pt3dadd( -138.109, 32.0685, 46.1142, 1.4 ) }
    dend_14 { pt3dadd( -138.58, 32.0249, 46.1883, 1.4 ) }
    dend_14 { pt3dadd( -139.018, 31.9709, 46.2745, 1.03 ) }
    dend_14 { pt3dadd( -139.979, 31.8388, 46.5117, 0.37 ) }
    dend_14 { pt3dadd( -140.07, 31.8376, 46.5393, 0.37 ) }
    dend_14 { pt3dadd( -140.586, 31.8665, 46.6928, 0.37 ) }
    dend_14 { pt3dadd( -140.662, 31.8731, 46.713, 0.37 ) }
    dend_14 { pt3dadd( -141.007, 31.9056, 46.7927, 0.29 ) }
    dend_14 { pt3dadd( -141.601, 31.9548, 46.9214, 0.29 ) }
    dend_14 { pt3dadd( -142.313, 32.0038, 47.0676, 0.66 ) }
    dend_14 { pt3dadd( -142.867, 32.0186, 47.1963, 0.96 ) }
    dend_14 { pt3dadd( -143.653, 31.9852, 47.404, 1.18 ) }
    dend_14 { pt3dadd( -144.293, 31.9119, 47.5865, 1.47 ) }
    dend_14 { pt3dadd( -144.878, 31.806, 47.7646, 1.47 ) }
    dend_14 { pt3dadd( -145.801, 31.5649, 48.061, 1.47 ) }
    dend_14 { pt3dadd( -146.886, 31.2224, 48.454, 0.29 ) }
    dend_14 { pt3dadd( -147.463, 31.0126, 48.6973, 0.22 ) }
    dend_14 { pt3dadd( -147.901, 30.8627, 48.9592, 0.22 ) }
    dend_14 { pt3dadd( -147.953, 30.8464, 48.9954, 0.22 ) }
    dend_14 { pt3dadd( -148.287, 30.7555, 49.2649, 0.44 ) }
    dend_14 { pt3dadd( -148.971, 30.6081, 49.8642, 0.37 ) }
    dend_14 { pt3dadd( -149.949, 30.4772, 50.7141, 1.69 ) }
    dend_14 { pt3dadd( -151.279, 30.3992, 51.8043, 1.11 ) }
    dend_14 { pt3dadd( -152.039, 30.3897, 52.3874, 0.29 ) }
    dend_14 { pt3dadd( -152.676, 30.4015, 52.8283, 1.25 ) }
    dend_14 { pt3dadd( -153.131, 30.4237, 53.113, 1.4 ) }
    dend_14 { pt3dadd( -153.612, 30.4611, 53.3656, 0.81 ) }
    dend_14 { pt3dadd( -154.055, 30.5152, 53.5539, 0.44 ) }
    dend_14 { pt3dadd( -154.731, 30.5853, 53.7265, 0.44 ) }
    dend_14 { pt3dadd( -155.407, 30.6958, 53.8838, 0.37 ) }
    dend_14 { pt3dadd( -155.484, 30.7086, 53.8965, 0.37 ) }
    dend_14 { pt3dadd( -156.092, 30.8244, 54.0074, 0.29 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 76/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -24.7919, 44.8406, 15.1461, 0.66 ) }
    dend_8 { pt3dadd( -24.1441, 45.853, 15.7413, 0.66 ) }
    dend_8 { pt3dadd( -23.7398, 46.2369, 16.1504, 0.66 ) }
    dend_8 { pt3dadd( -22.9566, 46.8549, 16.9727, 0.52 ) }
    dend_8 { pt3dadd( -22.3051, 47.2758, 17.6116, 0.96 ) }
    dend_8 { pt3dadd( -21.9801, 47.4639, 17.9134, 0.96 ) }
    dend_8 { pt3dadd( -20.9376, 48.0165, 18.7928, 0.81 ) }
    dend_8 { pt3dadd( -19.7283, 48.4775, 19.7048, 0.59 ) }
    dend_8 { pt3dadd( -19.6793, 48.4928, 19.738, 0.59 ) }
    dend_8 { pt3dadd( -18.917, 48.7142, 20.183, 0.52 ) }
    dend_8 { pt3dadd( -18.6585, 48.805, 20.3119, 0.52 ) }
    dend_8 { pt3dadd( -17.8323, 49.2283, 20.6577, 0.44 ) }
    dend_8 { pt3dadd( -17.1517, 49.7262, 20.843, 0.44 ) }
    dend_8 { pt3dadd( -17.0845, 49.791, 20.8551, 0.44 ) }
    dend_8 { pt3dadd( -16.6756, 50.2555, 20.952, 0.44 ) }
    dend_8 { pt3dadd( -16.6124, 50.3428, 20.9713, 0.44 ) }
    dend_8 { pt3dadd( -15.9795, 51.3225, 21.2183, 0.44 ) }
    dend_8 { pt3dadd( -15.7669, 51.7055, 21.3197, 0.88 ) }
    dend_8 { pt3dadd( -15.4971, 52.2548, 21.4829, 0.88 ) }
    dend_8 { pt3dadd( -15.1532, 53.016, 21.719, 1.03 ) }
    dend_8 { pt3dadd( -14.9513, 53.4949, 21.8751, 1.03 ) }
    dend_8 { pt3dadd( -14.6143, 54.3282, 22.2202, 0.37 ) }
    dend_8 { pt3dadd( -14.3704, 54.8802, 22.5014, 0.37 ) }
    dend_8 { pt3dadd( -13.9618, 55.6291, 22.9969, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_8 { pt3dadd( -13.5346, 56.2034, 23.4939, 0.37 ) }
    dend_8 { pt3dadd( -13.4969, 56.2345, 23.5316, 0.37 ) }
    dend_8 { pt3dadd( -12.4309, 56.6957, 24.4873, 0.66 ) }
    dend_8 { pt3dadd( -11.7422, 56.8257, 25.0517, 0.59 ) }
    dend_8 { pt3dadd( -10.9468, 56.8882, 25.7322, 0.52 ) }
    dend_8 { pt3dadd( -10.3477, 56.9133, 26.2516, 0.52 ) }
    dend_8 { pt3dadd( -9.89896, 56.9727, 26.7078, 0.52 ) }
    dend_8 { pt3dadd( -9.29195, 57.1692, 27.398, 0.52 ) }
    dend_8 { pt3dadd( -9.25935, 57.1908, 27.4452, 0.52 ) }
    dend_8 { pt3dadd( -8.59912, 57.8744, 28.5944, 0.88 ) }
    dend_8 { pt3dadd( -8.36224, 58.1927, 29.0572, 1.11 ) }
    dend_8 { pt3dadd( -7.73378, 59.1602, 30.3456, 0.81 ) }
    dend_8 { pt3dadd( -7.50909, 59.5199, 30.7811, 0.88 ) }
    dend_8 { pt3dadd( -6.83611, 60.4958, 31.8774, 0.59 ) }
    dend_8 { pt3dadd( -6.37883, 61.0436, 32.4587, 0.59 ) }
    dend_8 { pt3dadd( -6.33089, 61.0878, 32.5025, 0.59 ) }
    dend_8 { pt3dadd( -5.93933, 61.3547, 32.7765, 0.74 ) }
    dend_8 { pt3dadd( -5.45097, 61.5788, 33.0231, 0.74 ) }
    dend_8 { pt3dadd( -4.40341, 61.9198, 33.4755, 0.59 ) }
    dend_8 { pt3dadd( -3.61658, 62.0946, 33.7445, 0.59 ) }
    dend_8 { pt3dadd( -2.70203, 62.223, 34.0399, 0.66 ) }
    dend_8 { pt3dadd( -2.03313, 62.2868, 34.2397, 0.66 ) }
    dend_8 { pt3dadd( -1.13374, 62.3502, 34.4971, 1.03 ) }
    dend_8 { pt3dadd( -0.810057, 62.3759, 34.6018, 0.81 ) }
    dend_8 { pt3dadd( -0.0515614, 62.462, 34.8775, 0.66 ) }
    dend_8 { pt3dadd( 0.811107, 62.6366, 35.2559, 0.66 ) }
    dend_8 { pt3dadd( 1.67482, 62.9397, 35.7389, 0.52 ) }
    dend_8 { pt3dadd( 2.58705, 63.4153, 36.3706, 1.03 ) }
    dend_8 { pt3dadd( 3.3939, 64.0091, 37.0246, 0.74 ) }
    dend_8 { pt3dadd( 3.77558, 64.3582, 37.3797, 0.66 ) }
    dend_8 { pt3dadd( 4.20285, 64.8785, 37.8651, 0.88 ) }
    dend_8 { pt3dadd( 4.65957, 65.5209, 38.4129, 0.74 ) }
    dend_8 { pt3dadd( 4.6992, 65.5711, 38.4591, 0.74 ) }
    dend_8 { pt3dadd( 5.15449, 65.9298, 38.8888, 0.59 ) }
    dend_8 { pt3dadd( 5.20861, 65.9486, 38.9261, 0.59 ) }
    dend_8 { pt3dadd( 5.908, 66.0345, 39.3585, 0.52 ) }
    dend_8 { pt3dadd( 6.78555, 66.0244, 39.8543, 0.44 ) }
    dend_8 { pt3dadd( 7.91597, 65.9928, 40.427, 0.44 ) }
    dend_8 { pt3dadd( 8.93888, 66.0138, 40.9191, 0.37 ) }
    dend_8 { pt3dadd( 9.56015, 66.0699, 41.1996, 0.74 ) }
    dend_8 { pt3dadd( 9.62609, 66.0841, 41.2285, 0.74 ) }
    dend_8 { pt3dadd( 10.2468, 66.2954, 41.4827, 0.81 ) }
    dend_8 { pt3dadd( 11.0102, 66.7504, 41.7819, 0.52 ) }
    dend_8 { pt3dadd( 11.6157, 67.2416, 41.9995, 0.52 ) }
    dend_8 { pt3dadd( 12.2802, 67.8848, 42.2494, 0.44 ) }
    dend_8 { pt3dadd( 12.814, 68.4119, 42.4568, 0.88 ) }
    dend_8 { pt3dadd( 12.8631, 68.457, 42.4768, 0.88 ) }
    dend_8 { pt3dadd( 13.3302, 68.8329, 42.6663, 0.88 ) }
    dend_8 { pt3dadd( 14.0414, 69.3262, 42.9823, 0.44 ) }
    dend_8 { pt3dadd( 14.5064, 69.6199, 43.1907, 0.96 ) }
    dend_8 { pt3dadd( 15.0533, 69.9771, 43.4414, 0.96 ) }
    dend_8 { pt3dadd( 15.6565, 70.3987, 43.7161, 0.66 ) }
    dend_8 { pt3dadd( 16.3144, 70.9035, 44.0238, 0.44 ) }
    dend_8 { pt3dadd( 17.2002, 71.6866, 44.4365, 0.29 ) }
    dend_8 { pt3dadd( 17.7161, 72.2172, 44.6688, 0.29 ) }
    dend_8 { pt3dadd( 18.4388, 73.0111, 45.006, 0.29 ) }
    dend_8 { pt3dadd( 18.7639, 73.416, 45.1615, 0.66 ) }
    dend_8 { pt3dadd( 19.1064, 73.9091, 45.316, 0.96 ) }
    dend_8 { pt3dadd( 19.5715, 74.7074, 45.5168, 0.96 ) }
    dend_8 { pt3dadd( 19.777, 75.1142, 45.5643, 1.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 60/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -24.7919, 44.8406, 15.1461, 1.11 ) }
    dend_3 { pt3dadd( -25.9109, 44.626, 16.6407, 1.11 ) }
    dend_3 { pt3dadd( -26.6698, 44.6, 17.6456, 0.81 ) }
    dend_3 { pt3dadd( -27.5163, 44.6491, 18.7641, 0.96 ) }
    dend_3 { pt3dadd( -29.1724, 45.1007, 21.2119, 1.25 ) }
    dend_3 { pt3dadd( -29.2068, 45.1186, 21.274, 1.25 ) }
    dend_3 { pt3dadd( -29.5973, 45.4522, 22.2013, 0.59 ) }
    dend_3 { pt3dadd( -29.8804, 45.9406, 23.2568, 0.59 ) }
    dend_3 { pt3dadd( -29.8888, 45.9716, 23.3112, 0.59 ) }
    dend_3 { pt3dadd( -29.966, 47.3779, 25.1874, 0.88 ) }
    dend_3 { pt3dadd( -29.865, 48.396, 26.2206, 1.33 ) }
    dend_3 { pt3dadd( -29.7101, 49.2272, 27.1129, 1.62 ) }
    // Section: dend_103, id: dend_103, parent: dend_95 (entry count 72/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( 21.2434, -75.5494, 4.06139, 0.59 ) }
    dend_103 { pt3dadd( 23.0944, -75.35, 3.82709, 0.59 ) }
    dend_103 { pt3dadd( 23.8955, -75.3678, 3.60387, 0.81 ) }
    dend_103 { pt3dadd( 23.986, -75.3777, 3.57268, 0.81 ) }
    dend_103 { pt3dadd( 25.368, -75.642, 3.07106, 0.96 ) }
    dend_103 { pt3dadd( 26.7798, -76.049, 2.52819, 0.81 ) }
    dend_103 { pt3dadd( 28.1475, -76.5539, 2.00476, 1.11 ) }
    dend_103 { pt3dadd( 30.2188, -77.5892, 1.12365, 0.74 ) }
    dend_103 { pt3dadd( 31.13, -78.1324, 0.77145, 1.03 ) }
    dend_103 { pt3dadd( 31.972, -78.6654, 0.526628, 1.03 ) }
    dend_103 { pt3dadd( 33.0584, -79.4387, 0.33377, 0.29 ) }
    dend_103 { pt3dadd( 33.9311, -80.0938, 0.276306, 0.66 ) }
    dend_103 { pt3dadd( 34.6406, -80.6315, 0.278065, 1.03 ) }
    dend_103 { pt3dadd( 35.9732, -81.6205, 0.322493, 0.96 ) }
    dend_103 { pt3dadd( 37.8374, -82.9556, 0.361039, 0.96 ) }
    dend_103 { pt3dadd( 39.0918, -83.8268, 0.365876, 0.44 ) }
    dend_103 { pt3dadd( 40.239, -84.6313, 0.360551, 0.44 ) }
    dend_103 { pt3dadd( 41.9961, -85.9162, 0.309892, 0.88 ) }
    dend_103 { pt3dadd( 43.6983, -87.2174, 0.224686, 1.03 ) }
    dend_103 { pt3dadd( 43.7771, -87.2792, 0.219331, 1.03 ) }
    dend_103 { pt3dadd( 44.8139, -88.0549, 0.150668, 1.11 ) }
    dend_103 { pt3dadd( 46.2061, -88.9157, 0.112559, 0.74 ) }
    dend_103 { pt3dadd( 47.2495, -89.4534, 0.144728, 0.29 ) }
    dend_103 { pt3dadd( 47.8542, -89.6981, 0.215478, 0.88 ) }
    dend_103 { pt3dadd( 48.8878, -90.0179, 0.345767, 0.81 ) }
    dend_103 { pt3dadd( 50.2447, -90.3697, 0.420124, 0.59 ) }
    dend_103 { pt3dadd( 51.6426, -90.6721, 0.413458, 0.59 ) }
    dend_103 { pt3dadd( 51.7301, -90.6863, 0.401482, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_103 { pt3dadd( 52.6878, -90.8282, 0.18807, 0.59 ) }
    dend_103 { pt3dadd( 53.9971, -91.0095, -0.184451, 0.37 ) }
    dend_103 { pt3dadd( 55.5683, -91.21, -0.729775, 1.25 ) }
    dend_103 { pt3dadd( 56.5293, -91.3145, -1.08587, 1.62 ) }
    dend_103 { pt3dadd( 58.9057, -91.5382, -1.97331, 0.66 ) }
    dend_103 { pt3dadd( 59.9191, -91.6248, -2.31757, 0.37 ) }
    dend_103 { pt3dadd( 60.4749, -91.6654, -2.46375, 0.37 ) }
    dend_103 { pt3dadd( 60.9686, -91.7176, -2.51883, 0.29 ) }
    dend_103 { pt3dadd( 62.0591, -91.8981, -2.4432, 1.03 ) }
    dend_103 { pt3dadd( 62.4955, -92.0232, -2.33357, 1.03 ) }
    dend_103 { pt3dadd( 63.0686, -92.2775, -2.08082, 1.25 ) }
    dend_103 { pt3dadd( 64.0775, -92.7813, -1.6076, 1.03 ) }
    dend_103 { pt3dadd( 65.181, -93.3281, -1.09636, 0.29 ) }
    dend_103 { pt3dadd( 65.9575, -93.6636, -0.768986, 0.29 ) }
    dend_103 { pt3dadd( 67.1611, -94.0975, -0.395519, 0.74 ) }
    dend_103 { pt3dadd( 68.028, -94.3455, -0.190108, 1.03 ) }
    dend_103 { pt3dadd( 68.9517, -94.5617, -0.134706, 1.03 ) }
    dend_103 { pt3dadd( 70.1867, -94.822, -0.226231, 1.18 ) }
    dend_103 { pt3dadd( 71.9173, -95.1576, -0.549221, 0.29 ) }
    dend_103 { pt3dadd( 73.6479, -95.4688, -0.997739, 1.03 ) }
    dend_103 { pt3dadd( 74.4004, -95.5928, -1.2394, 1.33 ) }
    dend_103 { pt3dadd( 77.3173, -96.0579, -2.28805, 0.44 ) }
    dend_103 { pt3dadd( 78.3766, -96.2311, -2.70402, 0.44 ) }
    dend_103 { pt3dadd( 79.9512, -96.4575, -3.33701, 0.37 ) }
    dend_103 { pt3dadd( 81.0113, -96.5602, -3.72358, 1.03 ) }
    dend_103 { pt3dadd( 81.1002, -96.5618, -3.74699, 1.03 ) }
    dend_103 { pt3dadd( 81.488, -96.5429, -3.80337, 1.03 ) }
    dend_103 { pt3dadd( 81.7585, -96.5225, -3.80181, 1.03 ) }
    dend_103 { pt3dadd( 83.1408, -96.5697, -3.93343, 0.59 ) }
    dend_103 { pt3dadd( 84.1471, -96.8006, -4.11738, 0.37 ) }
    dend_103 { pt3dadd( 84.2761, -96.8495, -4.1505, 0.37 ) }
    dend_103 { pt3dadd( 85.0968, -97.1839, -4.34426, 0.37 ) }
    dend_103 { pt3dadd( 86.7509, -97.864, -4.67029, 0.37 ) }
    dend_103 { pt3dadd( 88.253, -98.4598, -4.90587, 0.37 ) }
    dend_103 { pt3dadd( 89.0894, -98.7455, -4.99364, 1.11 ) }
    dend_103 { pt3dadd( 90.1943, -99.0311, -5.05473, 0.88 ) }
    dend_103 { pt3dadd( 91.709, -99.3311, -5.06034, 0.74 ) }
    dend_103 { pt3dadd( 93.1232, -99.5254, -5.01243, 0.74 ) }
    dend_103 { pt3dadd( 94.1537, -99.6197, -4.92497, 0.66 ) }
    dend_103 { pt3dadd( 95.7307, -99.7396, -4.75532, 0.88 ) }
    dend_103 { pt3dadd( 97.1962, -99.8791, -4.64158, 0.29 ) }
    dend_103 { pt3dadd( 98.3151, -99.9934, -4.66433, 0.29 ) }
    dend_103 { pt3dadd( 99.0148, -100.073, -4.75931, 0.96 ) }
    dend_103 { pt3dadd( 100.213, -100.206, -5.04335, 1.33 ) }
    dend_103 { pt3dadd( 100.418, -100.225, -5.10711, 1.33 ) }
    dend_103 { pt3dadd( 101.753, -100.331, -5.60902, 1.99 ) }
    dend_103 { pt3dadd( 103.999, -100.317, -6.51191, 0.52 ) }
    dend_103 { pt3dadd( 104.667, -100.243, -6.78161, 0.52 ) }
    dend_103 { pt3dadd( 105.164, -100.142, -6.97547, 0.52 ) }
    dend_103 { pt3dadd( 106.09, -99.8542, -7.30822, 0.81 ) }
    dend_103 { pt3dadd( 106.458, -99.7141, -7.41445, 0.81 ) }
    dend_103 { pt3dadd( 107.154, -99.3925, -7.54404, 0.81 ) }
    dend_103 { pt3dadd( 107.783, -99.1021, -7.5817, 0.81 ) }
    dend_103 { pt3dadd( 108.939, -98.6624, -7.64318, 0.66 ) }
    dend_103 { pt3dadd( 109.944, -98.4038, -7.70268, 0.44 ) }
    dend_103 { pt3dadd( 110.062, -98.3852, -7.70753, 0.44 ) }
    dend_103 { pt3dadd( 111.782, -98.2317, -7.73772, 1.18 ) }
    dend_103 { pt3dadd( 112.79, -98.2375, -7.72863, 1.55 ) }
    dend_103 { pt3dadd( 114.628, -98.3518, -7.75125, 0.66 ) }
    dend_103 { pt3dadd( 116.059, -98.5059, -7.77617, 0.37 ) }
    dend_103 { pt3dadd( 117.315, -98.6945, -7.85197, 0.37 ) }
    dend_103 { pt3dadd( 117.952, -98.7991, -7.90835, 1.33 ) }
    dend_103 { pt3dadd( 119.125, -99.022, -8.04205, 1.55 ) }
    dend_103 { pt3dadd( 120.917, -99.349, -8.3179, 0.81 ) }
    dend_103 { pt3dadd( 121.006, -99.3626, -8.33501, 0.81 ) }
    dend_103 { pt3dadd( 122.38, -99.4935, -8.63918, 0.37 ) }
    dend_103 { pt3dadd( 123.628, -99.5836, -8.93467, 0.66 ) }
    dend_103 { pt3dadd( 123.717, -99.5884, -8.9555, 0.66 ) }
    dend_103 { pt3dadd( 124.437, -99.612, -9.08658, 1.03 ) }
    dend_103 { pt3dadd( 124.535, -99.6215, -9.10016, 1.03 ) }
    dend_103 { pt3dadd( 125.483, -99.7646, -9.26539, 1.18 ) }
    dend_103 { pt3dadd( 125.581, -99.7845, -9.28668, 1.18 ) }
    dend_103 { pt3dadd( 127.123, -100.204, -9.65883, 1.03 ) }
    dend_103 { pt3dadd( 128.21, -100.585, -9.96958, 0.37 ) }
    dend_103 { pt3dadd( 129.622, -101.166, -10.4014, 0.66 ) }
    dend_103 { pt3dadd( 130.848, -101.716, -10.7859, 0.96 ) }
    dend_103 { pt3dadd( 132.325, -102.397, -11.2532, 0.88 ) }
    dend_103 { pt3dadd( 133.372, -102.878, -11.561, 0.66 ) }
    dend_103 { pt3dadd( 135.515, -103.821, -12.1613, 0.29 ) }
    dend_103 { pt3dadd( 136.254, -104.108, -12.3608, 0.66 ) }
    dend_103 { pt3dadd( 136.427, -104.163, -12.4034, 0.66 ) }
    dend_103 { pt3dadd( 137.603, -104.465, -12.6694, 0.96 ) }
    dend_103 { pt3dadd( 138.435, -104.63, -12.8189, 0.96 ) }
    dend_103 { pt3dadd( 139.911, -104.803, -13.1145, 0.52 ) }
    dend_103 { pt3dadd( 140.889, -104.868, -13.3062, 0.52 ) }
    dend_103 { pt3dadd( 142.338, -104.938, -13.6062, 1.55 ) }
    dend_103 { pt3dadd( 143.052, -104.972, -13.7565, 1.77 ) }
    dend_103 { pt3dadd( 144.723, -105.038, -14.0946, 0.81 ) }
    dend_103 { pt3dadd( 147.059, -105.081, -14.5059, 0.74 ) }
    dend_103 { pt3dadd( 147.202, -105.08, -14.5249, 0.74 ) }
    dend_103 { pt3dadd( 148.144, -105.006, -14.7096, 1.25 ) }
    dend_103 { pt3dadd( 148.319, -104.975, -14.7491, 1.25 ) }
    dend_103 { pt3dadd( 149.233, -104.774, -15.0178, 1.25 ) }
    dend_103 { pt3dadd( 150.298, -104.514, -15.3733, 0.96 ) }
    dend_103 { pt3dadd( 150.383, -104.498, -15.4042, 0.96 ) }
    dend_103 { pt3dadd( 153.059, -104.308, -16.6962, 0.29 ) }
    dend_103 { pt3dadd( 153.668, -104.313, -17.0182, 0.29 ) }
    dend_103 { pt3dadd( 155.177, -104.387, -17.8437, 0.88 ) }
    dend_103 { pt3dadd( 155.684, -104.42, -18.1212, 1.33 ) }
    dend_103 { pt3dadd( 157.463, -104.561, -19.0689, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_103 { pt3dadd( 159.897, -104.715, -20.2352, 0.59 ) }
    dend_103 { pt3dadd( 161.151, -104.762, -20.7374, 0.37 ) }
    dend_103 { pt3dadd( 161.508, -104.759, -20.8646, 0.37 ) }
    dend_103 { pt3dadd( 162.678, -104.736, -21.2326, 0.37 ) }
    dend_103 { pt3dadd( 162.852, -104.731, -21.2819, 0.37 ) }
    dend_103 { pt3dadd( 164.463, -104.67, -21.6217, 1.84 ) }
    dend_103 { pt3dadd( 166.813, -104.602, -21.9731, 0.88 ) }
    dend_103 { pt3dadd( 167.958, -104.596, -22.1454, 0.59 ) }
    dend_103 { pt3dadd( 169.873, -104.689, -22.398, 0.88 ) }
    dend_103 { pt3dadd( 169.979, -104.701, -22.4115, 0.88 ) }
    dend_103 { pt3dadd( 170.846, -104.83, -22.5313, 0.74 ) }
    dend_103 { pt3dadd( 171.856, -104.992, -22.771, 0.22 ) }
    dend_103 { pt3dadd( 173.037, -105.108, -23.1374, 0.22 ) }
    dend_103 { pt3dadd( 173.959, -105.134, -23.4772, 0.22 ) }
    dend_103 { pt3dadd( 175.443, -105.079, -24.1376, 1.33 ) }
    dend_103 { pt3dadd( 177.04, -104.986, -24.8832, 1.4 ) }
    dend_103 { pt3dadd( 180.04, -104.774, -26.3983, 0.29 ) }
    dend_103 { pt3dadd( 181.388, -104.668, -27.1186, 1.77 ) }
    dend_103 { pt3dadd( 182.706, -104.548, -27.8511, 2.36 ) }
    dend_103 { pt3dadd( 185.375, -104.217, -29.3555, 0.44 ) }
    dend_103 { pt3dadd( 186.845, -104.005, -30.1534, 0.37 ) }
    dend_103 { pt3dadd( 188.864, -103.738, -31.1984, 0.37 ) }
    dend_103 { pt3dadd( 188.933, -103.733, -31.231, 0.37 ) }
    dend_103 { pt3dadd( 190.474, -103.74, -31.9636, 0.81 ) }
    dend_103 { pt3dadd( 190.573, -103.751, -32.0062, 0.81 ) }
    dend_103 { pt3dadd( 191.532, -103.983, -32.3345, 0.81 ) }
    dend_103 { pt3dadd( 193.364, -104.601, -32.8743, 0.29 ) }
    dend_103 { pt3dadd( 194.142, -104.878, -33.0025, 0.29 ) }
    dend_103 { pt3dadd( 195.533, -105.336, -33.1498, 1.55 ) }
    dend_103 { pt3dadd( 196.47, -105.642, -33.1906, 2.14 ) }
    dend_103 { pt3dadd( 197.447, -105.876, -33.1871, 2.36 ) }
    dend_103 { pt3dadd( 198.474, -106.057, -33.1362, 1.62 ) }
    dend_103 { pt3dadd( 200.588, -106.319, -32.9238, 0.22 ) }
    dend_103 { pt3dadd( 201.559, -106.409, -32.8128, 0.96 ) }
    dend_103 { pt3dadd( 202.553, -106.502, -32.6893, 0.96 ) }
    dend_103 { pt3dadd( 205.312, -106.838, -32.3604, 0.22 ) }
    dend_103 { pt3dadd( 206.411, -107.012, -32.2338, 1.11 ) }
    dend_103 { pt3dadd( 207.377, -107.226, -32.1235, 1.77 ) }
    dend_103 { pt3dadd( 207.946, -107.389, -32.0263, 1.77 ) }
    dend_103 { pt3dadd( 209.604, -107.923, -31.483, 0.29 ) }
    dend_103 { pt3dadd( 210.607, -108.275, -31.0284, 0.29 ) }
    dend_103 { pt3dadd( 210.746, -108.332, -30.9479, 0.29 ) }
    dend_103 { pt3dadd( 211.567, -108.662, -30.407, 0.29 ) }
    dend_103 { pt3dadd( 213.54, -109.476, -29.0007, 1.25 ) }
    dend_103 { pt3dadd( 215.813, -110.392, -27.3011, 0.22 ) }
    dend_103 { pt3dadd( 216.47, -110.637, -26.7943, 0.59 ) }
    dend_103 { pt3dadd( 216.576, -110.673, -26.7172, 0.59 ) }
    dend_103 { pt3dadd( 217.05, -110.82, -26.4104, 0.59 ) }
    dend_103 { pt3dadd( 218.065, -111.13, -25.8891, 0.22 ) }
    dend_103 { pt3dadd( 218.874, -111.423, -25.6288, 0.22 ) }
    dend_103 { pt3dadd( 219.9, -111.809, -25.4271, 1.18 ) }
    dend_103 { pt3dadd( 220.776, -112.138, -25.255, 1.55 ) }
    dend_103 { pt3dadd( 221.324, -112.353, -25.1488, 1.55 ) }
    dend_103 { pt3dadd( 223.026, -113.05, -24.8224, 0.15 ) }
    dend_103 { pt3dadd( 223.79, -113.387, -24.6785, 0.66 ) }
    dend_103 { pt3dadd( 224.278, -113.619, -24.6412, 0.66 ) }
    dend_103 { pt3dadd( 224.366, -113.665, -24.6417, 0.66 ) }
    dend_103 { pt3dadd( 225.869, -114.513, -24.7237, 0.22 ) }
    dend_103 { pt3dadd( 226.831, -115.073, -24.8296, 0.88 ) }
    dend_103 { pt3dadd( 227.804, -115.644, -24.9763, 1.18 ) }
    dend_103 { pt3dadd( 230.078, -116.975, -25.3921, 0.22 ) }
    dend_103 { pt3dadd( 231.531, -117.849, -25.7188, 0.22 ) }
    dend_103 { pt3dadd( 232.055, -118.169, -25.8508, 0.22 ) }
    dend_103 { pt3dadd( 233.022, -118.737, -26.1079, 1.4 ) }
    dend_103 { pt3dadd( 233.881, -119.213, -26.3327, 1.77 ) }
    dend_103 { pt3dadd( 236.044, -120.349, -26.8434, 0.22 ) }
    dend_103 { pt3dadd( 237.176, -120.901, -27.0036, 0.74 ) }
    dend_103 { pt3dadd( 237.546, -121.052, -27.0411, 0.74 ) }
    dend_103 { pt3dadd( 239.321, -121.739, -27.1951, 0.22 ) }
    dend_103 { pt3dadd( 240.369, -122.113, -27.2511, 1.11 ) }
    dend_103 { pt3dadd( 240.936, -122.291, -27.264, 1.4 ) }
    dend_103 { pt3dadd( 243.188, -122.888, -27.1298, 0.22 ) }
    dend_103 { pt3dadd( 244.647, -123.25, -26.9627, 1.92 ) }
    // Section: dend_96, id: dend_96, parent: dend_95 (entry count 73/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( 21.2434, -75.5494, 4.06139, 0.74 ) }
    dend_96 { pt3dadd( 23.4184, -77.2765, 4.43204, 0.74 ) }
    dend_96 { pt3dadd( 24.6033, -78.1817, 4.56508, 0.74 ) }
    dend_96 { pt3dadd( 24.66, -78.2282, 4.57216, 0.74 ) }
    dend_96 { pt3dadd( 25.4727, -78.9611, 4.67925, 0.52 ) }
    dend_96 { pt3dadd( 26.3902, -79.8326, 4.80292, 0.81 ) }
    dend_96 { pt3dadd( 27.1451, -80.6234, 4.90659, 0.37 ) }
    dend_96 { pt3dadd( 27.9535, -81.5312, 4.92763, 0.74 ) }
    dend_96 { pt3dadd( 28.5462, -82.2955, 4.98952, 0.96 ) }
    dend_96 { pt3dadd( 29.0072, -82.908, 5.10869, 1.18 ) }
    dend_96 { pt3dadd( 29.0505, -82.9661, 5.12567, 1.18 ) }
    dend_96 { pt3dadd( 29.73, -83.8606, 5.46185, 0.81 ) }
    dend_96 { pt3dadd( 30.5553, -84.8025, 5.85306, 0.81 ) }
    dend_96 { pt3dadd( 31.4394, -85.609, 6.22572, 0.81 ) }
    dend_96 { pt3dadd( 32.7667, -86.5341, 6.71121, 0.59 ) }
    dend_96 { pt3dadd( 33.3806, -86.8589, 6.90694, 0.81 ) }
    dend_96 { pt3dadd( 33.4462, -86.8853, 6.92438, 0.81 ) }
    dend_96 { pt3dadd( 34.5786, -87.1719, 7.15186, 1.03 ) }
    dend_96 { pt3dadd( 34.6591, -87.186, 7.16153, 1.03 ) }
    dend_96 { pt3dadd( 35.9024, -87.3809, 7.22552, 0.59 ) }
    dend_96 { pt3dadd( 36.7526, -87.5405, 7.22939, 0.88 ) }
    dend_96 { pt3dadd( 37.7295, -87.7515, 7.2836, 0.59 ) }
    dend_96 { pt3dadd( 38.8725, -88.0281, 7.38692, 0.44 ) }
    dend_96 { pt3dadd( 40.0608, -88.3582, 7.53209, 0.44 ) }
    dend_96 { pt3dadd( 41.1969, -88.7116, 7.69649, 0.59 ) }
    dend_96 { pt3dadd( 42.2143, -89.0689, 7.87508, 0.96 ) }
    dend_96 { pt3dadd( 43.3698, -89.5673, 8.14054, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_96 { pt3dadd( 43.445, -89.6076, 8.16102, 1.18 ) }
    dend_96 { pt3dadd( 43.955, -89.9347, 8.31535, 1.18 ) }
    dend_96 { pt3dadd( 44.7748, -90.5142, 8.57651, 0.44 ) }
    dend_96 { pt3dadd( 44.8261, -90.5517, 8.59331, 0.44 ) }
    dend_96 { pt3dadd( 46.2222, -91.5556, 8.99495, 0.44 ) }
    dend_96 { pt3dadd( 47.1886, -92.2205, 9.22236, 0.44 ) }
    dend_96 { pt3dadd( 47.7731, -92.598, 9.35896, 0.81 ) }
    dend_96 { pt3dadd( 47.8781, -92.6602, 9.38273, 0.81 ) }
    dend_96 { pt3dadd( 48.861, -93.1816, 9.59257, 0.81 ) }
    dend_96 { pt3dadd( 48.9637, -93.2283, 9.60445, 0.81 ) }
    dend_96 { pt3dadd( 49.7585, -93.5182, 9.57129, 0.81 ) }
    dend_96 { pt3dadd( 50.6137, -93.7817, 9.42354, 1.18 ) }
    dend_96 { pt3dadd( 51.2944, -93.9744, 9.22605, 1.4 ) }
    dend_96 { pt3dadd( 51.3924, -93.9985, 9.19192, 1.4 ) }
    dend_96 { pt3dadd( 52.8319, -94.2974, 8.63337, 0.96 ) }
    dend_96 { pt3dadd( 53.8745, -94.48, 8.24138, 0.96 ) }
    dend_96 { pt3dadd( 55.0268, -94.6798, 7.85882, 0.44 ) }
    dend_96 { pt3dadd( 56.0232, -94.8628, 7.58999, 0.44 ) }
    dend_96 { pt3dadd( 57.2652, -95.1404, 7.37751, 0.44 ) }
    dend_96 { pt3dadd( 58.119, -95.3846, 7.31995, 0.52 ) }
    dend_96 { pt3dadd( 59.0039, -95.7095, 7.36191, 1.47 ) }
    dend_96 { pt3dadd( 60.1755, -96.2487, 7.5199, 0.88 ) }
    dend_96 { pt3dadd( 61.2077, -96.8653, 7.68708, 0.59 ) }
    dend_96 { pt3dadd( 62.2091, -97.6222, 7.81716, 0.29 ) }
    dend_96 { pt3dadd( 62.8734, -98.2324, 7.8574, 0.29 ) }
    dend_96 { pt3dadd( 63.3351, -98.7143, 7.85041, 0.96 ) }
    dend_96 { pt3dadd( 63.8345, -99.2959, 7.80415, 1.25 ) }
    dend_96 { pt3dadd( 64.782, -100.497, 7.6345, 0.66 ) }
    dend_96 { pt3dadd( 65.6198, -101.637, 7.45084, 0.66 ) }
    dend_96 { pt3dadd( 66.1612, -102.381, 7.33799, 1.33 ) }
    dend_96 { pt3dadd( 66.7821, -103.244, 7.24728, 0.59 ) }
    dend_96 { pt3dadd( 67.3068, -103.996, 7.20691, 0.52 ) }
    dend_96 { pt3dadd( 68.002, -104.998, 7.18089, 0.52 ) }
    dend_96 { pt3dadd( 68.7893, -106.088, 7.1916, 0.52 ) }
    dend_96 { pt3dadd( 69.5956, -107.15, 7.21211, 0.88 ) }
    dend_96 { pt3dadd( 70.175, -107.823, 7.21474, 1.25 ) }
    dend_96 { pt3dadd( 70.8711, -108.498, 7.20189, 1.25 ) }
    dend_96 { pt3dadd( 71.7094, -109.169, 7.17766, 0.59 ) }
    dend_96 { pt3dadd( 72.4775, -109.674, 7.15024, 0.29 ) }
    dend_96 { pt3dadd( 72.5347, -109.706, 7.14788, 0.29 ) }
    dend_96 { pt3dadd( 73.5121, -110.21, 7.05416, 0.29 ) }
    dend_96 { pt3dadd( 74.4676, -110.676, 6.95259, 0.74 ) }
    dend_96 { pt3dadd( 75.3084, -111.048, 6.86457, 1.03 ) }
    dend_96 { pt3dadd( 75.7258, -111.23, 6.8274, 1.03 ) }
    dend_96 { pt3dadd( 76.4102, -111.54, 6.76605, 1.18 ) }
    dend_96 { pt3dadd( 77.4226, -112.025, 6.66912, 0.37 ) }
    dend_96 { pt3dadd( 78.3981, -112.521, 6.56632, 0.29 ) }
    dend_96 { pt3dadd( 79.1975, -112.903, 6.47355, 0.29 ) }
    dend_96 { pt3dadd( 80.4623, -113.516, 6.32398, 0.29 ) }
    dend_96 { pt3dadd( 80.5266, -113.55, 6.31771, 0.29 ) }
    dend_96 { pt3dadd( 81.6867, -114.228, 6.24117, 1.33 ) }
    dend_96 { pt3dadd( 81.7527, -114.271, 6.2398, 1.33 ) }
    dend_96 { pt3dadd( 82.2928, -114.681, 6.23498, 1.69 ) }
    dend_96 { pt3dadd( 83.0935, -115.356, 6.23611, 1.11 ) }
    dend_96 { pt3dadd( 84.046, -116.2, 6.24781, 0.59 ) }
    dend_96 { pt3dadd( 85.1321, -117.165, 6.23955, 0.37 ) }
    dend_96 { pt3dadd( 85.8357, -117.796, 6.19606, 1.11 ) }
    dend_96 { pt3dadd( 86.5945, -118.475, 6.11263, 1.11 ) }
    dend_96 { pt3dadd( 86.6497, -118.523, 6.1039, 1.11 ) }
    dend_96 { pt3dadd( 87.3551, -119.119, 5.95678, 0.88 ) }
    dend_96 { pt3dadd( 88.2166, -119.813, 5.73332, 0.88 ) }
    dend_96 { pt3dadd( 89.1621, -120.474, 5.45793, 0.59 ) }
    dend_96 { pt3dadd( 89.2354, -120.518, 5.43595, 0.59 ) }
    dend_96 { pt3dadd( 90.0594, -120.888, 5.21688, 0.37 ) }
    dend_96 { pt3dadd( 90.4287, -121.013, 5.13561, 0.37 ) }
    dend_96 { pt3dadd( 91.0223, -121.127, 5.04455, 0.37 ) }
    dend_96 { pt3dadd( 91.8467, -121.211, 4.99453, 0.74 ) }
    dend_96 { pt3dadd( 92.0186, -121.231, 4.99319, 0.74 ) }
    dend_96 { pt3dadd( 92.9406, -121.368, 4.9867, 0.74 ) }
    dend_96 { pt3dadd( 93.0922, -121.404, 4.98182, 0.74 ) }
    dend_96 { pt3dadd( 93.6837, -121.677, 4.94729, 0.74 ) }
    dend_96 { pt3dadd( 94.4361, -122.314, 4.88056, 0.29 ) }
    dend_96 { pt3dadd( 94.9958, -123.003, 4.81472, 0.29 ) }
    dend_96 { pt3dadd( 95.0371, -123.065, 4.80937, 0.29 ) }
    dend_96 { pt3dadd( 95.5671, -123.943, 4.73832, 0.52 ) }
    dend_96 { pt3dadd( 96.1181, -124.786, 4.6722, 0.59 ) }
    dend_96 { pt3dadd( 96.6609, -125.525, 4.61535, 0.37 ) }
    dend_96 { pt3dadd( 96.7235, -125.588, 4.60944, 0.37 ) }
    dend_96 { pt3dadd( 97.5004, -126.144, 4.55192, 0.37 ) }
    dend_96 { pt3dadd( 98.1209, -126.513, 4.51816, 0.74 ) }
    dend_96 { pt3dadd( 98.942, -126.915, 4.48766, 1.03 ) }
    dend_96 { pt3dadd( 99.5467, -127.193, 4.46413, 1.25 ) }
    dend_96 { pt3dadd( 100.548, -127.672, 4.42576, 0.52 ) }
    dend_96 { pt3dadd( 101.466, -128.159, 4.35588, 0.29 ) }
    dend_96 { pt3dadd( 102.442, -128.774, 4.24847, 0.66 ) }
    dend_96 { pt3dadd( 102.516, -128.832, 4.23444, 0.66 ) }
    dend_96 { pt3dadd( 103.281, -129.562, 4.04296, 0.96 ) }
    dend_96 { pt3dadd( 103.795, -130.144, 3.8587, 1.33 ) }
    dend_96 { pt3dadd( 104.436, -130.997, 3.56566, 1.4 ) }
    dend_96 { pt3dadd( 104.963, -131.778, 3.27776, 0.74 ) }
    dend_96 { pt3dadd( 105.909, -133.294, 2.69365, 0.37 ) }
    dend_96 { pt3dadd( 106.543, -134.432, 2.23798, 0.37 ) }
    dend_96 { pt3dadd( 107.081, -135.566, 1.76488, 0.37 ) }
    dend_96 { pt3dadd( 107.278, -136.087, 1.55692, 1.03 ) }
    dend_96 { pt3dadd( 107.42, -136.525, 1.40134, 1.03 ) }
    dend_96 { pt3dadd( 107.444, -136.604, 1.37399, 1.03 ) }
    dend_96 { pt3dadd( 107.751, -137.664, 1.06755, 0.37 ) }
    dend_96 { pt3dadd( 107.808, -137.825, 1.02404, 0.37 ) }
    dend_96 { pt3dadd( 108.191, -138.512, 0.88914, 0.37 ) }
    dend_96 { pt3dadd( 108.844, -139.306, 0.745023, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_96 { pt3dadd( 109.262, -139.69, 0.613914, 0.88 ) }
    dend_96 { pt3dadd( 109.554, -139.95, 0.510496, 1.33 ) }
    dend_96 { pt3dadd( 109.605, -139.995, 0.491905, 1.33 ) }
    dend_96 { pt3dadd( 110.043, -140.437, 0.306087, 1.47 ) }
    dend_96 { pt3dadd( 110.639, -141.16, 0.00505486, 0.81 ) }
    dend_96 { pt3dadd( 111.527, -142.549, -0.541861, 0.22 ) }
    dend_96 { pt3dadd( 111.957, -143.402, -0.83397, 0.22 ) }
    dend_96 { pt3dadd( 112.118, -143.842, -0.951247, 0.96 ) }
    dend_96 { pt3dadd( 112.347, -144.681, -1.12195, 1.18 ) }
    dend_96 { pt3dadd( 112.467, -145.289, -1.20536, 0.88 ) }
    dend_96 { pt3dadd( 112.482, -145.369, -1.21074, 0.88 ) }
    dend_96 { pt3dadd( 112.691, -146.23, -1.19458, 0.66 ) }
    dend_96 { pt3dadd( 113.053, -147.201, -1.17767, 0.52 ) }
    dend_96 { pt3dadd( 113.299, -147.708, -1.16941, 0.44 ) }
    dend_96 { pt3dadd( 113.725, -148.414, -1.15877, 0.37 ) }
    dend_96 { pt3dadd( 114.19, -149.093, -1.1491, 0.22 ) }
    dend_96 { pt3dadd( 114.555, -149.589, -1.14229, 0.22 ) }
    dend_96 { pt3dadd( 114.973, -150.108, -1.13554, 0.96 ) }
    dend_96 { pt3dadd( 115.381, -150.603, -1.12919, 1.25 ) }
    dend_96 { pt3dadd( 115.911, -151.226, -1.12137, 1.25 ) }
    dend_96 { pt3dadd( 116.388, -151.785, -1.11438, 1.25 ) }
    dend_96 { pt3dadd( 116.868, -152.334, -1.10762, 0.96 ) }
    dend_96 { pt3dadd( 117.41, -152.966, -1.09973, 0.29 ) }
    dend_96 { pt3dadd( 117.597, -153.188, -1.09693, 0.29 ) }
    dend_96 { pt3dadd( 118.276, -154.073, -1.08506, 0.29 ) }
    dend_96 { pt3dadd( 118.362, -154.214, -1.08295, 0.29 ) }
    dend_96 { pt3dadd( 118.764, -155.129, -1.10905, 0.29 ) }
    dend_96 { pt3dadd( 119.07, -156.117, -1.16718, 0.59 ) }
    dend_96 { pt3dadd( 119.219, -156.765, -1.2186, 1.11 ) }
    dend_96 { pt3dadd( 119.376, -157.634, -1.29897, 1.11 ) }
    dend_96 { pt3dadd( 119.517, -158.653, -1.40476, 0.66 ) }
    dend_96 { pt3dadd( 119.655, -159.626, -1.51764, 0.29 ) }
    dend_96 { pt3dadd( 119.668, -159.696, -1.52743, 0.29 ) }
    dend_96 { pt3dadd( 120.018, -160.411, -1.60876, 0.29 ) }
    dend_96 { pt3dadd( 120.071, -160.462, -1.60952, 0.29 ) }
    dend_96 { pt3dadd( 120.667, -160.87, -1.56411, 0.29 ) }
    dend_96 { pt3dadd( 120.733, -160.913, -1.55572, 0.29 ) }
    dend_96 { pt3dadd( 121.515, -161.485, -1.41921, 0.29 ) }
    dend_96 { pt3dadd( 122.227, -162.093, -1.29318, 0.66 ) }
    dend_96 { pt3dadd( 122.639, -162.525, -1.22008, 0.88 ) }
    dend_96 { pt3dadd( 123.184, -163.214, -1.12494, 0.37 ) }
    dend_96 { pt3dadd( 123.712, -164.013, -1.02913, 0.66 ) }
    dend_96 { pt3dadd( 124.097, -164.646, -0.96246, 1.18 ) }
    dend_96 { pt3dadd( 124.346, -165.056, -0.936934, 1.4 ) }
    dend_96 { pt3dadd( 124.924, -165.972, -0.91971, 1.03 ) }
    dend_96 { pt3dadd( 125.422, -166.716, -0.913365, 0.66 ) }
    dend_96 { pt3dadd( 125.849, -167.307, -0.914972, 0.52 ) }
    dend_96 { pt3dadd( 126.338, -167.948, -0.923721, 0.44 ) }
    dend_96 { pt3dadd( 127.182, -169.041, -0.948654, 0.29 ) }
    dend_96 { pt3dadd( 127.23, -169.103, -0.950662, 0.29 ) }
    dend_96 { pt3dadd( 127.561, -169.557, -0.983094, 0.29 ) }
    dend_96 { pt3dadd( 127.978, -170.272, -1.04758, 0.88 ) }
    dend_96 { pt3dadd( 128.219, -170.803, -1.11698, 1.4 ) }
    dend_96 { pt3dadd( 128.447, -171.427, -1.20302, 1.47 ) }
    dend_96 { pt3dadd( 128.493, -171.566, -1.22085, 1.47 ) }
    dend_96 { pt3dadd( 128.991, -173.034, -1.4122, 0.29 ) }
    dend_96 { pt3dadd( 129.414, -174.248, -1.57107, 0.29 ) }
    dend_96 { pt3dadd( 129.852, -175.421, -1.66714, 0.29 ) }
    dend_96 { pt3dadd( 130.236, -176.323, -1.69515, 0.29 ) }
    dend_96 { pt3dadd( 130.666, -177.213, -1.67882, 1.18 ) }
    dend_96 { pt3dadd( 131.041, -177.927, -1.62885, 1.62 ) }
    dend_96 { pt3dadd( 131.377, -178.498, -1.56881, 1.62 ) }
    dend_96 { pt3dadd( 132.107, -179.743, -1.42617, 0.44 ) }
    dend_96 { pt3dadd( 132.753, -180.909, -1.33819, 0.22 ) }
    dend_96 { pt3dadd( 133.023, -181.409, -1.33437, 0.59 ) }
    dend_96 { pt3dadd( 133.353, -182.016, -1.37043, 0.74 ) }
    dend_96 { pt3dadd( 133.956, -183.044, -1.50223, 0.29 ) }
    dend_96 { pt3dadd( 134.622, -184.119, -1.7233, 0.29 ) }
    dend_96 { pt3dadd( 135.352, -185.213, -1.99188, 0.29 ) }
    dend_96 { pt3dadd( 135.741, -185.725, -2.08669, 0.66 ) }
    dend_96 { pt3dadd( 136.166, -186.261, -2.13948, 0.88 ) }
    dend_96 { pt3dadd( 136.769, -186.954, -2.13032, 1.18 ) }
    dend_96 { pt3dadd( 136.823, -187.018, -2.12024, 1.18 ) }
    dend_96 { pt3dadd( 137.593, -188.08, -1.88263, 0.66 ) }
    dend_96 { pt3dadd( 137.995, -188.972, -1.6674, 0.22 ) }
    dend_96 { pt3dadd( 138.225, -189.816, -1.51919, 0.22 ) }
    dend_96 { pt3dadd( 138.298, -190.221, -1.46862, 0.88 ) }
    dend_96 { pt3dadd( 138.435, -191.146, -1.39588, 0.88 ) }
    dend_96 { pt3dadd( 138.61, -192.355, -1.3474, 0.59 ) }
    dend_96 { pt3dadd( 138.831, -193.568, -1.35645, 0.74 ) }
    dend_96 { pt3dadd( 139.01, -194.265, -1.36548, 1.25 ) }
    dend_96 { pt3dadd( 139.299, -195.032, -1.37613, 1.25 ) }
    dend_96 { pt3dadd( 139.889, -196.287, -1.39389, 0.22 ) }
    dend_96 { pt3dadd( 139.954, -196.388, -1.39528, 0.22 ) }
    dend_96 { pt3dadd( 140.8, -197.472, -1.40945, 0.22 ) }
    dend_96 { pt3dadd( 141.348, -198.088, -1.41453, 1.18 ) }
    dend_96 { pt3dadd( 142.026, -198.802, -1.41386, 1.55 ) }
    dend_96 { pt3dadd( 142.094, -198.868, -1.41406, 1.55 ) }
    dend_96 { pt3dadd( 142.964, -199.629, -1.51834, 0.59 ) }
    dend_96 { pt3dadd( 143.798, -200.3, -1.69099, 0.29 ) }
    dend_96 { pt3dadd( 144.326, -200.69, -1.83968, 1.11 ) }
    dend_96 { pt3dadd( 144.396, -200.739, -1.86213, 1.11 ) }
    dend_96 { pt3dadd( 145.035, -201.218, -2.0269, 0.74 ) }
    dend_96 { pt3dadd( 146.553, -202.471, -2.30685, 0.22 ) }
    dend_96 { pt3dadd( 147.188, -203.034, -2.38276, 0.22 ) }
    dend_96 { pt3dadd( 147.846, -203.645, -2.41047, 0.96 ) }
    dend_96 { pt3dadd( 148.314, -204.12, -2.3944, 0.96 ) }
    dend_96 { pt3dadd( 149.553, -205.508, -2.24833, 0.22 ) }
    dend_96 { pt3dadd( 150.098, -206.2, -2.0796, 0.22 ) }
    dend_96 { pt3dadd( 150.324, -206.512, -1.94283, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_96 { pt3dadd( 150.735, -207.106, -1.65381, 1.03 ) }
    dend_96 { pt3dadd( 151.035, -207.545, -1.38657, 0.74 ) }
    dend_96 { pt3dadd( 151.076, -207.603, -1.34903, 0.74 ) }
    dend_96 { pt3dadd( 151.949, -208.73, -0.633657, 0.22 ) }
    dend_96 { pt3dadd( 152.55, -209.483, -0.138169, 1.11 ) }
    dend_96 { pt3dadd( 153.058, -210.086, 0.25272, 1.55 ) }
    dend_96 { pt3dadd( 154.15, -211.336, 1.05238, 0.88 ) }
    dend_96 { pt3dadd( 154.936, -212.147, 1.54701, 0.29 ) }
    dend_96 { pt3dadd( 156.003, -213.148, 2.10073, 0.29 ) }
    dend_96 { pt3dadd( 156.069, -213.202, 2.12427, 0.29 ) }
    dend_96 { pt3dadd( 156.815, -213.712, 2.27928, 0.44 ) }
    dend_96 { pt3dadd( 156.879, -213.746, 2.28636, 0.44 ) }
    dend_96 { pt3dadd( 157.898, -214.179, 2.28515, 0.44 ) }
    dend_96 { pt3dadd( 157.98, -214.209, 2.28495, 0.44 ) }
    dend_96 { pt3dadd( 158.628, -214.429, 2.283, 0.74 ) }
    dend_96 { pt3dadd( 159.586, -214.786, 2.2808, 1.25 ) }
    dend_96 { pt3dadd( 160.36, -215.109, 2.27978, 1.47 ) }
    dend_96 { pt3dadd( 161.192, -215.52, 2.28003, 1.55 ) }
    dend_96 { pt3dadd( 161.732, -215.833, 2.28116, 1.55 ) }
    dend_96 { pt3dadd( 162.622, -216.367, 2.2834, 0.74 ) }
    dend_96 { pt3dadd( 163.294, -216.806, 2.27548, 0.81 ) }
    dend_96 { pt3dadd( 163.752, -217.133, 2.25581, 0.81 ) }
    dend_96 { pt3dadd( 164.591, -217.77, 2.19875, 0.29 ) }
    dend_96 { pt3dadd( 165.746, -218.668, 2.09575, 0.29 ) }
    dend_96 { pt3dadd( 166.252, -219.068, 2.04162, 0.66 ) }
    dend_96 { pt3dadd( 167.084, -219.773, 2.00035, 0.29 ) }
    dend_96 { pt3dadd( 167.691, -220.297, 2.00594, 1.33 ) }
    dend_96 { pt3dadd( 167.767, -220.369, 2.0117, 1.33 ) }
    dend_96 { pt3dadd( 168.305, -220.958, 2.13083, 1.55 ) }
    dend_96 { pt3dadd( 168.358, -221.028, 2.14917, 1.55 ) }
    dend_96 { pt3dadd( 169.359, -222.489, 2.56008, 0.22 ) }
    dend_96 { pt3dadd( 169.669, -222.963, 2.70605, 0.74 ) }
    dend_96 { pt3dadd( 170.013, -223.501, 2.86874, 1.03 ) }
    dend_96 { pt3dadd( 170.986, -225.041, 3.29801, 0.22 ) }
    dend_96 { pt3dadd( 171.567, -225.983, 3.54573, 1.25 ) }
    dend_96 { pt3dadd( 171.877, -226.471, 3.65678, 1.62 ) }
    dend_96 { pt3dadd( 171.922, -226.538, 3.66601, 1.62 ) }
    dend_96 { pt3dadd( 172.365, -227.166, 3.7534, 0.88 ) }
    dend_96 { pt3dadd( 172.414, -227.235, 3.7616, 0.88 ) }
    // Section: dend_88, id: dend_88, parent: dend_66 (entry count 39/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( 10.1205, -87.0372, -5.3976, 0.52 ) }
    dend_88 { pt3dadd( 9.54641, -88.898, -6.62104, 0.52 ) }
    dend_88 { pt3dadd( 9.13463, -90.0586, -7.31727, 0.74 ) }
    dend_88 { pt3dadd( 8.89965, -90.7474, -7.69154, 0.74 ) }
    dend_88 { pt3dadd( 8.88001, -90.8027, -7.71883, 0.74 ) }
    dend_88 { pt3dadd( 8.60215, -91.5434, -8.05061, 1.18 ) }
    dend_88 { pt3dadd( 8.58338, -91.5913, -8.07014, 1.18 ) }
    dend_88 { pt3dadd( 8.25509, -92.283, -8.2511, 0.74 ) }
    dend_88 { pt3dadd( 7.89153, -93.0833, -8.41936, 0.44 ) }
    dend_88 { pt3dadd( 7.59671, -93.7522, -8.56058, 0.44 ) }
    dend_88 { pt3dadd( 7.30507, -94.4227, -8.71223, 1.11 ) }
    dend_88 { pt3dadd( 7.04867, -95.0797, -8.85601, 1.25 ) }
    dend_88 { pt3dadd( 6.86225, -95.5985, -8.9654, 0.81 ) }
    dend_88 { pt3dadd( 6.63333, -96.3075, -9.11112, 0.74 ) }
    dend_88 { pt3dadd( 6.408, -97.1395, -9.27072, 0.52 ) }
    dend_88 { pt3dadd( 6.13184, -98.7197, -9.56085, 0.44 ) }
    dend_88 { pt3dadd( 5.99174, -100.07, -9.80166, 0.44 ) }
    dend_88 { pt3dadd( 5.9853, -100.582, -9.88712, 0.44 ) }
    dend_88 { pt3dadd( 6.03163, -101.102, -9.95283, 1.03 ) }
    dend_88 { pt3dadd( 6.21154, -101.958, -10.0166, 1.25 ) }
    dend_88 { pt3dadd( 6.51012, -102.808, -10.0234, 1.47 ) }
    dend_88 { pt3dadd( 6.54003, -102.867, -10.0192, 1.47 ) }
    dend_88 { pt3dadd( 6.97553, -103.602, -9.95801, 1.11 ) }
    dend_88 { pt3dadd( 7.43285, -104.397, -9.90014, 0.88 ) }
    dend_88 { pt3dadd( 7.69522, -104.94, -9.89753, 0.66 ) }
    dend_88 { pt3dadd( 7.71877, -105.01, -9.90361, 0.66 ) }
    dend_88 { pt3dadd( 7.82725, -105.593, -10.0186, 0.44 ) }
    dend_88 { pt3dadd( 7.88196, -106.374, -10.2834, 0.29 ) }
    dend_88 { pt3dadd( 7.85424, -106.828, -10.4873, 0.37 ) }
    dend_88 { pt3dadd( 7.69183, -107.837, -11.0103, 0.37 ) }
    dend_88 { pt3dadd( 7.56906, -108.377, -11.3024, 0.88 ) }
    dend_88 { pt3dadd( 7.35809, -109.137, -11.7036, 1.25 ) }
    dend_88 { pt3dadd( 7.05001, -110.154, -12.1934, 0.66 ) }
    dend_88 { pt3dadd( 6.86616, -110.747, -12.4471, 0.37 ) }
    dend_88 { pt3dadd( 6.65934, -111.542, -12.7256, 0.37 ) }
    dend_88 { pt3dadd( 6.64912, -111.598, -12.7393, 0.37 ) }
    dend_88 { pt3dadd( 6.51056, -112.738, -12.9362, 0.66 ) }
    dend_88 { pt3dadd( 6.46745, -113.825, -13.0182, 0.52 ) }
    dend_88 { pt3dadd( 6.47089, -113.887, -13.0181, 0.52 ) }
    dend_88 { pt3dadd( 6.60999, -114.795, -12.992, 1.11 ) }
    dend_88 { pt3dadd( 6.86437, -115.842, -12.9248, 1.11 ) }
    dend_88 { pt3dadd( 6.8819, -115.906, -12.9222, 1.11 ) }
    dend_88 { pt3dadd( 7.16815, -116.897, -12.9092, 1.11 ) }
    dend_88 { pt3dadd( 7.34795, -117.662, -12.9362, 0.96 ) }
    dend_88 { pt3dadd( 7.4464, -118.386, -13.0264, 0.96 ) }
    dend_88 { pt3dadd( 7.42714, -119.601, -13.3107, 0.29 ) }
    dend_88 { pt3dadd( 7.26211, -120.404, -13.5977, 0.29 ) }
    dend_88 { pt3dadd( 7.06712, -120.919, -13.8269, 0.96 ) }
    dend_88 { pt3dadd( 6.73662, -121.503, -14.1262, 1.11 ) }
    dend_88 { pt3dadd( 6.1092, -122.457, -14.6186, 1.25 ) }
    dend_88 { pt3dadd( 5.68072, -123.06, -14.9262, 1.03 ) }
    dend_88 { pt3dadd( 5.22255, -123.707, -15.2519, 0.81 ) }
    dend_88 { pt3dadd( 4.79854, -124.461, -15.6035, 0.37 ) }
    dend_88 { pt3dadd( 4.43528, -125.473, -16.0601, 0.37 ) }
    dend_88 { pt3dadd( 4.3072, -126.392, -16.4468, 0.44 ) }
    dend_88 { pt3dadd( 4.31604, -126.594, -16.5236, 0.44 ) }
    dend_88 { pt3dadd( 4.45717, -127.273, -16.7767, 0.81 ) }
    dend_88 { pt3dadd( 4.9425, -128.525, -17.3177, 1.03 ) }
    dend_88 { pt3dadd( 5.3526, -129.384, -17.7401, 1.77 ) }
    dend_88 { pt3dadd( 5.63955, -129.993, -18.0561, 1.47 ) }
    dend_88 { pt3dadd( 5.67201, -130.059, -18.0919, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_88 { pt3dadd( 5.93011, -130.622, -18.3937, 1.11 ) }
    dend_88 { pt3dadd( 6.59741, -132.256, -19.2372, 0.74 ) }
    dend_88 { pt3dadd( 6.86919, -133.18, -19.6993, 0.74 ) }
    dend_88 { pt3dadd( 7.06294, -134.07, -20.1863, 0.88 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 4/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 10.1205, -87.0372, -5.3976, 0.81 ) }
    dend_67 { pt3dadd( 10.7555, -88.5885, -5.38678, 0.81 ) }
    dend_67 { pt3dadd( 11.1298, -89.7077, -5.38244, 1.11 ) }
    dend_67 { pt3dadd( 11.4694, -90.9353, -5.37641, 1.11 ) }
    dend_67 { pt3dadd( 11.6529, -91.7804, -5.37074, 1.25 ) }
    dend_67 { pt3dadd( 11.8437, -93.0959, -5.29157, 0.88 ) }
    dend_67 { pt3dadd( 11.9318, -93.9924, -5.16776, 0.74 ) }
    dend_67 { pt3dadd( 11.8993, -95.0214, -4.90906, 0.88 ) }
    dend_67 { pt3dadd( 11.7294, -96.0864, -4.43134, 0.96 ) }
    dend_67 { pt3dadd( 11.5147, -96.8374, -3.97107, 0.59 ) }
    dend_67 { pt3dadd( 11.0562, -98.2077, -3.01435, 0.74 ) }
    dend_67 { pt3dadd( 10.728, -99.2479, -2.23127, 0.96 ) }
    dend_67 { pt3dadd( 10.5328, -99.986, -1.70131, 0.96 ) }
    dend_67 { pt3dadd( 10.3076, -101.1, -0.976173, 0.96 ) }
    dend_67 { pt3dadd( 10.0974, -102.411, -0.294787, 1.11 ) }
    dend_67 { pt3dadd( 9.96619, -103.502, 0.0693434, 1.18 ) }
    dend_67 { pt3dadd( 9.85518, -104.983, 0.284793, 1.4 ) }
    dend_67 { pt3dadd( 9.76932, -106.479, 0.315185, 0.74 ) }
    dend_67 { pt3dadd( 9.75092, -107.352, 0.257296, 0.66 ) }
    dend_67 { pt3dadd( 9.78249, -108.557, 0.0929768, 0.66 ) }
    dend_67 { pt3dadd( 9.87818, -109.781, -0.103785, 0.66 ) }
    dend_67 { pt3dadd( 9.98436, -110.703, -0.265916, 1.11 ) }
    dend_67 { pt3dadd( 10.1608, -111.6, -0.390252, 1.18 ) }
    dend_67 { pt3dadd( 10.4155, -112.393, -0.386686, 0.96 ) }
    dend_67 { pt3dadd( 10.7596, -113.251, -0.207733, 0.81 ) }
    dend_67 { pt3dadd( 11.1293, -114.054, 0.112978, 0.59 ) }
    dend_67 { pt3dadd( 11.506, -114.882, 0.548563, 0.59 ) }
    dend_67 { pt3dadd( 11.9672, -116.073, 1.32932, 1.18 ) }
    dend_67 { pt3dadd( 12.2665, -117.131, 2.04424, 0.96 ) }
    dend_67 { pt3dadd( 12.4143, -118.192, 2.62888, 0.88 ) }
    dend_67 { pt3dadd( 12.4179, -118.249, 2.65552, 0.88 ) }
    dend_67 { pt3dadd( 12.4538, -119.277, 3.03888, 0.96 ) }
    dend_67 { pt3dadd( 12.5165, -120.875, 3.4718, 0.96 ) }
    dend_67 { pt3dadd( 12.6227, -122.644, 3.74223, 0.74 ) }
    dend_67 { pt3dadd( 12.9633, -125.764, 3.86154, 0.74 ) }
    dend_67 { pt3dadd( 13.0487, -126.297, 3.83953, 0.74 ) }
    dend_67 { pt3dadd( 13.2919, -127.423, 3.72882, 0.74 ) }
    dend_67 { pt3dadd( 13.6255, -128.567, 3.53766, 1.11 ) }
    dend_67 { pt3dadd( 14.0157, -129.59, 3.28004, 1.4 ) }
    dend_67 { pt3dadd( 14.8093, -131.15, 2.78933, 0.66 ) }
    dend_67 { pt3dadd( 15.2772, -131.883, 2.52255, 1.11 ) }
    dend_67 { pt3dadd( 15.6957, -132.509, 2.29714, 1.25 ) }
    dend_67 { pt3dadd( 16.1321, -133.128, 2.08763, 1.25 ) }
    dend_67 { pt3dadd( 16.6606, -133.824, 1.91698, 0.96 ) }
    dend_67 { pt3dadd( 17.3816, -134.718, 1.76803, 0.59 ) }
    dend_67 { pt3dadd( 18.0352, -135.487, 1.74645, 0.74 ) }
    dend_67 { pt3dadd( 18.4698, -135.998, 1.77223, 1.03 ) }
    dend_67 { pt3dadd( 18.9977, -136.611, 1.8457, 0.66 ) }
    dend_67 { pt3dadd( 20.0539, -137.805, 2.07204, 0.37 ) }
    dend_67 { pt3dadd( 20.1002, -137.855, 2.0866, 0.37 ) }
    dend_67 { pt3dadd( 21.0801, -138.827, 2.48725, 0.88 ) }
    dend_67 { pt3dadd( 21.6746, -139.451, 2.75827, 1.25 ) }
    dend_67 { pt3dadd( 21.8264, -139.627, 2.83233, 1.25 ) }
    dend_67 { pt3dadd( 22.215, -140.166, 3.02828, 1.25 ) }
    dend_67 { pt3dadd( 22.8594, -141.396, 3.36224, 1.33 ) }
    dend_67 { pt3dadd( 23.3692, -142.639, 3.6329, 0.66 ) }
    dend_67 { pt3dadd( 23.7019, -143.871, 3.7803, 0.37 ) }
    dend_67 { pt3dadd( 23.7681, -144.484, 3.80639, 0.37 ) }
    dend_67 { pt3dadd( 23.736, -145.471, 3.76854, 0.74 ) }
    dend_67 { pt3dadd( 23.57, -146.809, 3.63538, 0.88 ) }
    dend_67 { pt3dadd( 23.5532, -146.889, 3.62191, 0.88 ) }
    dend_67 { pt3dadd( 23.3278, -147.935, 3.43876, 0.66 ) }
    dend_67 { pt3dadd( 23.1938, -149.041, 3.27103, 0.52 ) }
    dend_67 { pt3dadd( 23.1808, -150.081, 3.1511, 0.52 ) }
    dend_67 { pt3dadd( 23.3969, -151.307, 3.14923, 0.88 ) }
    dend_67 { pt3dadd( 23.4278, -151.386, 3.15881, 0.88 ) }
    dend_67 { pt3dadd( 23.973, -152.458, 3.38642, 1.18 ) }
    dend_67 { pt3dadd( 24.3707, -153.088, 3.5731, 1.4 ) }
    dend_67 { pt3dadd( 24.4396, -153.19, 3.60673, 1.4 ) }
    dend_67 { pt3dadd( 25.0756, -154.24, 3.92896, 0.74 ) }
    dend_67 { pt3dadd( 25.4545, -155.093, 4.13343, 0.29 ) }
    dend_67 { pt3dadd( 25.4771, -155.17, 4.14605, 0.29 ) }
    dend_67 { pt3dadd( 25.6184, -156.098, 4.22967, 0.29 ) }
    dend_67 { pt3dadd( 25.6743, -156.911, 4.27703, 0.59 ) }
    dend_67 { pt3dadd( 25.6997, -157.827, 4.3014, 0.81 ) }
    dend_67 { pt3dadd( 25.6915, -158.662, 4.29839, 0.81 ) }
    dend_67 { pt3dadd( 25.6762, -159.815, 4.29458, 1.11 ) }
    dend_67 { pt3dadd( 25.6779, -160.701, 4.29046, 1.11 ) }
    dend_67 { pt3dadd( 25.688, -161.874, 4.28429, 1.11 ) }
    dend_67 { pt3dadd( 25.7455, -163.268, 4.2729, 0.81 ) }
    dend_67 { pt3dadd( 25.8134, -164.162, 4.26284, 1.4 ) }
    dend_67 { pt3dadd( 25.906, -165.139, 4.25019, 1.84 ) }
    dend_67 { pt3dadd( 25.9902, -165.934, 4.23911, 2.21 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 87/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -3.13396, -99.8602, 16.3597, 0.29 ) }
    dend_62 { pt3dadd( -2.9613, -101.053, 16.3589, 0.29 ) }
    dend_62 { pt3dadd( -2.69487, -102.021, 16.4845, 0.29 ) }
    dend_62 { pt3dadd( -2.39898, -102.827, 16.6591, 0.29 ) }
    dend_62 { pt3dadd( -1.88182, -103.655, 16.9663, 0.59 ) }
    dend_62 { pt3dadd( -1.25832, -104.348, 17.3875, 0.59 ) }
    dend_62 { pt3dadd( -0.511465, -105.029, 17.9544, 0.52 ) }
    dend_62 { pt3dadd( 0.500002, -105.798, 18.7351, 0.44 ) }
    dend_62 { pt3dadd( 0.554835, -105.841, 18.7799, 0.44 ) }
    dend_62 { pt3dadd( 1.61371, -106.771, 19.773, 0.37 ) }
    dend_62 { pt3dadd( 2.59197, -107.807, 20.9306, 0.52 ) }
    dend_62 { pt3dadd( 3.4353, -108.897, 22.1317, 0.52 ) }
    dend_62 { pt3dadd( 4.00412, -109.922, 23.1763, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_62 { pt3dadd( 4.31688, -110.76, 23.9895, 0.74 ) }
    dend_62 { pt3dadd( 4.58801, -111.839, 25.044, 0.74 ) }
    dend_62 { pt3dadd( 4.75396, -113.071, 26.2303, 0.74 ) }
    dend_62 { pt3dadd( 4.75859, -113.12, 26.2798, 0.74 ) }
    dend_62 { pt3dadd( 4.78611, -113.893, 27.1216, 0.74 ) }
    dend_62 { pt3dadd( 4.92053, -114.772, 28.2341, 0.37 ) }
    dend_62 { pt3dadd( 5.05628, -114.918, 28.3894, 0.37 ) }
    dend_62 { pt3dadd( 5.97954, -115.462, 28.6667, 0.37 ) }
    dend_62 { pt3dadd( 6.85765, -116.056, 28.9666, 0.37 ) }
    dend_62 { pt3dadd( 6.92722, -116.11, 28.9956, 0.37 ) }
    dend_62 { pt3dadd( 7.57217, -116.699, 29.5217, 0.59 ) }
    dend_62 { pt3dadd( 8.34233, -117.544, 30.5081, 0.37 ) }
    dend_62 { pt3dadd( 8.99731, -118.356, 31.6211, 0.37 ) }
    dend_62 { pt3dadd( 9.70852, -119.363, 33.0855, 0.66 ) }
    dend_62 { pt3dadd( 9.96741, -119.741, 33.6603, 0.81 ) }
    dend_62 { pt3dadd( 11.1976, -121.468, 36.3425, 0.52 ) }
    dend_62 { pt3dadd( 11.5103, -121.935, 37.1554, 0.74 ) }
    dend_62 { pt3dadd( 11.5312, -121.968, 37.2211, 0.74 ) }
    dend_62 { pt3dadd( 11.7771, -122.292, 37.9099, 0.52 ) }
    dend_62 { pt3dadd( 12.208, -122.639, 38.6643, 0.52 ) }
    dend_62 { pt3dadd( 12.5512, -122.872, 39.0944, 0.81 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 21/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -3.13396, -99.8602, 16.3597, 0.29 ) }
    dend_61 { pt3dadd( -3.56761, -100.947, 16.5298, 0.29 ) }
    dend_61 { pt3dadd( -3.83596, -101.806, 16.6671, 0.29 ) }
    dend_61 { pt3dadd( -3.97486, -102.525, 16.9173, 0.29 ) }
    dend_61 { pt3dadd( -4.08323, -103.413, 17.3246, 0.66 ) }
    dend_61 { pt3dadd( -4.04544, -104.229, 18.1583, 0.22 ) }
    dend_61 { pt3dadd( -3.92619, -104.577, 18.6654, 0.37 ) }
    dend_61 { pt3dadd( -3.9023, -104.614, 18.7329, 0.37 ) }
    dend_61 { pt3dadd( -3.29424, -105.501, 20.3387, 0.29 ) }
    dend_61 { pt3dadd( -3.26779, -105.542, 20.4101, 0.29 ) }
    dend_61 { pt3dadd( -2.43626, -107.034, 22.8495, 0.29 ) }
    dend_61 { pt3dadd( -2.15161, -107.783, 23.9772, 0.29 ) }
    dend_61 { pt3dadd( -1.95022, -108.998, 25.5402, 0.29 ) }
    dend_61 { pt3dadd( -1.89706, -110.055, 26.7223, 0.29 ) }
    dend_61 { pt3dadd( -1.92704, -110.703, 27.3233, 0.29 ) }
    dend_61 { pt3dadd( -2.04694, -111.887, 28.3966, 0.29 ) }
    dend_61 { pt3dadd( -2.26247, -113.288, 29.5725, 0.66 ) }
    dend_61 { pt3dadd( -2.57715, -114.925, 31.0426, 0.37 ) }
    dend_61 { pt3dadd( -2.59008, -114.987, 31.1025, 0.37 ) }
    dend_61 { pt3dadd( -2.69812, -115.509, 31.6698, 0.52 ) }
    dend_61 { pt3dadd( -2.98245, -117.022, 33.4237, 0.59 ) }
    dend_61 { pt3dadd( -3.06438, -117.531, 34.0079, 0.22 ) }
    dend_61 { pt3dadd( -3.05546, -117.957, 34.5229, 0.66 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 44/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 15.3206, -276.659, 16.7425, 0.29 ) }
    dend_57 { pt3dadd( 15.0616, -277.859, 16.8984, 0.29 ) }
    dend_57 { pt3dadd( 14.8054, -278.991, 17.0144, 0.29 ) }
    dend_57 { pt3dadd( 14.5514, -280.22, 17.1123, 0.29 ) }
    dend_57 { pt3dadd( 14.384, -281.172, 17.1553, 0.29 ) }
    dend_57 { pt3dadd( 14.2781, -281.958, 17.1974, 1.03 ) }
    dend_57 { pt3dadd( 14.1931, -282.798, 17.2432, 1.33 ) }
    dend_57 { pt3dadd( 14.1925, -283.477, 17.2879, 1.33 ) }
    dend_57 { pt3dadd( 14.2443, -284.146, 17.3413, 1.18 ) }
    dend_57 { pt3dadd( 14.4061, -285.507, 17.4529, 0.29 ) }
    dend_57 { pt3dadd( 14.5659, -286.311, 17.5552, 0.59 ) }
    dend_57 { pt3dadd( 14.6667, -286.72, 17.6195, 0.59 ) }
    dend_57 { pt3dadd( 14.9633, -287.854, 17.8147, 0.22 ) }
    dend_57 { pt3dadd( 15.1419, -288.704, 17.9685, 0.22 ) }
    dend_57 { pt3dadd( 15.1491, -288.786, 17.9836, 0.22 ) }
    dend_57 { pt3dadd( 15.1142, -289.368, 18.0831, 1.03 ) }
    dend_57 { pt3dadd( 14.979, -290.026, 18.1442, 1.25 ) }
    dend_57 { pt3dadd( 14.746, -290.73, 18.1912, 1.03 ) }
    dend_57 { pt3dadd( 14.3807, -291.671, 18.2204, 0.37 ) }
    dend_57 { pt3dadd( 13.9907, -292.706, 18.2803, 0.37 ) }
    dend_57 { pt3dadd( 13.6038, -293.793, 18.3592, 0.37 ) }
    dend_57 { pt3dadd( 13.2007, -295.042, 18.4594, 0.22 ) }
    dend_57 { pt3dadd( 12.9224, -296.037, 18.5421, 0.22 ) }
    dend_57 { pt3dadd( 12.7503, -296.965, 18.6532, 0.22 ) }
    dend_57 { pt3dadd( 12.7494, -298.1, 18.8724, 1.18 ) }
    dend_57 { pt3dadd( 12.7661, -298.183, 18.8957, 1.18 ) }
    dend_57 { pt3dadd( 12.9885, -298.825, 19.1322, 1.33 ) }
    dend_57 { pt3dadd( 13.0529, -298.986, 19.1988, 1.25 ) }
    dend_57 { pt3dadd( 13.4781, -300.141, 19.6067, 0.59 ) }
    dend_57 { pt3dadd( 13.7023, -301.15, 19.8558, 0.22 ) }
    dend_57 { pt3dadd( 13.8015, -302.043, 19.9863, 0.22 ) }
    dend_57 { pt3dadd( 13.8299, -302.749, 20.0455, 0.96 ) }
    dend_57 { pt3dadd( 13.7928, -303.605, 20.07, 1.25 ) }
    dend_57 { pt3dadd( 13.7308, -304.596, 20.0751, 0.59 ) }
    dend_57 { pt3dadd( 13.6358, -305.911, 20.0142, 0.37 ) }
    dend_57 { pt3dadd( 13.6307, -305.994, 20.0089, 0.37 ) }
    dend_57 { pt3dadd( 13.6632, -306.856, 19.959, 0.37 ) }
    dend_57 { pt3dadd( 13.7676, -307.532, 19.9646, 1.25 ) }
    dend_57 { pt3dadd( 14.0643, -308.749, 20.1331, 0.52 ) }
    dend_57 { pt3dadd( 14.2837, -309.56, 20.3509, 0.52 ) }
    dend_57 { pt3dadd( 14.3012, -309.632, 20.3776, 0.52 ) }
    dend_57 { pt3dadd( 14.4145, -310.592, 20.7783, 0.52 ) }
    dend_57 { pt3dadd( 14.3876, -311.744, 21.3261, 0.29 ) }
    dend_57 { pt3dadd( 14.2597, -312.665, 21.7679, 0.29 ) }
    dend_57 { pt3dadd( 14.0984, -313.333, 22.0669, 0.44 ) }
    dend_57 { pt3dadd( 13.8937, -314.055, 22.3721, 0.37 ) }
    dend_57 { pt3dadd( 13.6239, -315.012, 22.7405, 0.29 ) }
    dend_57 { pt3dadd( 13.3707, -315.997, 23.0537, 0.74 ) }
    dend_57 { pt3dadd( 13.2782, -316.702, 23.1898, 1.18 ) }
    dend_57 { pt3dadd( 13.2967, -317.47, 23.2643, 1.25 ) }
    dend_57 { pt3dadd( 13.4134, -318.32, 23.3111, 1.4 ) }
    dend_57 { pt3dadd( 13.5414, -318.941, 23.3263, 1.33 ) }
    dend_57 { pt3dadd( 13.809, -320.058, 23.3346, 0.29 ) }
    dend_57 { pt3dadd( 14.1174, -321.352, 23.329, 0.29 ) }
    dend_57 { pt3dadd( 14.317, -322.35, 23.3082, 0.29 ) }
    dend_57 { pt3dadd( 14.4038, -322.884, 23.2879, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_57 { pt3dadd( 14.4626, -323.598, 23.207, 1.11 ) }
    dend_57 { pt3dadd( 14.4634, -324.407, 23.0801, 0.96 ) }
    dend_57 { pt3dadd( 14.4589, -324.485, 23.0658, 0.96 ) }
    dend_57 { pt3dadd( 14.3798, -325.524, 22.9341, 0.44 ) }
    dend_57 { pt3dadd( 14.3767, -325.603, 22.9275, 0.44 ) }
    dend_57 { pt3dadd( 14.3478, -326.984, 22.8766, 0.29 ) }
    dend_57 { pt3dadd( 14.3257, -328.111, 22.9069, 0.29 ) }
    dend_57 { pt3dadd( 14.2906, -328.988, 22.9895, 0.29 ) }
    dend_57 { pt3dadd( 14.2244, -330.206, 23.2503, 0.29 ) }
    dend_57 { pt3dadd( 14.1861, -330.837, 23.4447, 0.22 ) }
    dend_57 { pt3dadd( 14.1304, -331.44, 23.6501, 1.03 ) }
    dend_57 { pt3dadd( 14.0402, -332.126, 23.8217, 1.4 ) }
    dend_57 { pt3dadd( 13.9685, -332.545, 23.8579, 1.4 ) }
    dend_57 { pt3dadd( 13.7226, -334.065, 23.6816, 0.29 ) }
    dend_57 { pt3dadd( 13.6302, -334.788, 23.4874, 0.44 ) }
    dend_57 { pt3dadd( 13.5599, -335.592, 23.2099, 0.44 ) }
    dend_57 { pt3dadd( 13.4464, -337.761, 22.3665, 1.03 ) }
    dend_57 { pt3dadd( 13.4101, -338.691, 21.9741, 1.03 ) }
    dend_57 { pt3dadd( 13.3529, -340.155, 21.3302, 0.52 ) }
    dend_57 { pt3dadd( 13.2938, -341.187, 20.8679, 0.29 ) }
    dend_57 { pt3dadd( 13.2892, -341.251, 20.8428, 0.29 ) }
    dend_57 { pt3dadd( 13.2285, -342.326, 20.5166, 0.44 ) }
    dend_57 { pt3dadd( 13.2331, -342.822, 20.418, 0.81 ) }
    dend_57 { pt3dadd( 13.2953, -343.558, 20.3127, 1.11 ) }
    dend_57 { pt3dadd( 13.4551, -344.519, 20.2559, 0.66 ) }
    dend_57 { pt3dadd( 13.8124, -346.021, 20.2145, 0.37 ) }
    dend_57 { pt3dadd( 14.1164, -347.191, 20.1964, 0.37 ) }
    dend_57 { pt3dadd( 14.4599, -348.497, 20.1742, 0.37 ) }
    dend_57 { pt3dadd( 14.7551, -349.707, 20.1164, 0.29 ) }
    dend_57 { pt3dadd( 14.9602, -350.608, 20.0532, 1.11 ) }
    dend_57 { pt3dadd( 15.1381, -351.577, 19.9547, 1.55 ) }
    dend_57 { pt3dadd( 15.2895, -352.856, 19.8033, 1.25 ) }
    dend_57 { pt3dadd( 15.3281, -353.954, 19.6171, 0.74 ) }
    dend_57 { pt3dadd( 15.2836, -355.185, 19.3517, 0.29 ) }
    dend_57 { pt3dadd( 15.2405, -355.973, 19.131, 0.29 ) }
    dend_57 { pt3dadd( 15.2446, -356.979, 18.8408, 0.29 ) }
    dend_57 { pt3dadd( 15.2801, -357.506, 18.6972, 0.29 ) }
    dend_57 { pt3dadd( 15.3957, -358.161, 18.5495, 0.29 ) }
    dend_57 { pt3dadd( 15.5473, -358.713, 18.4514, 0.96 ) }
    dend_57 { pt3dadd( 15.7468, -359.324, 18.3831, 0.96 ) }
    dend_57 { pt3dadd( 16.344, -361.029, 18.2457, 0.15 ) }
    dend_57 { pt3dadd( 16.3704, -361.098, 18.2424, 0.15 ) }
    dend_57 { pt3dadd( 16.6447, -361.794, 18.2116, 0.15 ) }
    dend_57 { pt3dadd( 16.6763, -361.875, 18.2076, 0.15 ) }
    dend_57 { pt3dadd( 16.9216, -362.556, 18.1579, 0.15 ) }
    dend_57 { pt3dadd( 17.1046, -363.218, 18.1046, 0.88 ) }
    dend_57 { pt3dadd( 17.2355, -363.83, 18.0723, 1.25 ) }
    dend_57 { pt3dadd( 17.3093, -364.228, 18.0662, 1.55 ) }
    dend_57 { pt3dadd( 17.4197, -365.045, 18.1072, 0.74 ) }
    dend_57 { pt3dadd( 17.5381, -366.196, 18.2084, 0.22 ) }
    dend_57 { pt3dadd( 17.5975, -367.159, 18.3419, 0.22 ) }
    dend_57 { pt3dadd( 17.6144, -367.91, 18.4711, 0.66 ) }
    dend_57 { pt3dadd( 17.622, -368.819, 18.6726, 0.88 ) }
    dend_57 { pt3dadd( 17.5708, -370.429, 19.0921, 0.22 ) }
    dend_57 { pt3dadd( 17.5178, -371.037, 19.2709, 0.74 ) }
    dend_57 { pt3dadd( 17.3517, -372.323, 19.6757, 0.96 ) }
    dend_57 { pt3dadd( 17.2156, -373.135, 19.9231, 1.25 ) }
    dend_57 { pt3dadd( 16.9783, -374.127, 20.1778, 1.25 ) }
    dend_57 { pt3dadd( 16.6138, -375.316, 20.4568, 0.22 ) }
    dend_57 { pt3dadd( 16.2237, -376.379, 20.6494, 0.22 ) }
    dend_57 { pt3dadd( 16.1944, -376.461, 20.6589, 0.22 ) }
    dend_57 { pt3dadd( 16.0167, -377.008, 20.6584, 0.74 ) }
    dend_57 { pt3dadd( 15.693, -378.339, 20.5355, 0.22 ) }
    dend_57 { pt3dadd( 15.6839, -378.425, 20.5191, 0.22 ) }
    dend_57 { pt3dadd( 15.7354, -378.973, 20.3919, 0.29 ) }
    dend_57 { pt3dadd( 15.9774, -380.062, 20.1369, 0.29 ) }
    dend_57 { pt3dadd( 16.1985, -380.854, 19.9762, 0.29 ) }
    dend_57 { pt3dadd( 16.392, -381.475, 19.8762, 1.18 ) }
    dend_57 { pt3dadd( 16.6035, -382.22, 19.7838, 1.62 ) }
    dend_57 { pt3dadd( 16.6719, -382.617, 19.7256, 1.62 ) }
    dend_57 { pt3dadd( 16.7227, -383.427, 19.6226, 0.96 ) }
    dend_57 { pt3dadd( 16.7005, -384.36, 19.5484, 0.29 ) }
    dend_57 { pt3dadd( 16.6466, -385.206, 19.501, 0.22 ) }
    dend_57 { pt3dadd( 16.5534, -386.201, 19.4442, 1.25 ) }
    dend_57 { pt3dadd( 16.3748, -387.693, 19.363, 1.25 ) }
    dend_57 { pt3dadd( 16.2425, -388.589, 19.3193, 1.25 ) }
    dend_57 { pt3dadd( 15.983, -390.051, 19.2572, 0.22 ) }
    dend_57 { pt3dadd( 15.7897, -391.086, 19.2203, 1.47 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 78/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 15.3206, -276.659, 16.7425, 0.29 ) }
    dend_56 { pt3dadd( 15.2362, -274.412, 17.3058, 0.29 ) }
    dend_56 { pt3dadd( 15.1953, -273.34, 17.5358, 0.29 ) }
    dend_56 { pt3dadd( 15.1945, -273.262, 17.5474, 0.29 ) }
    dend_56 { pt3dadd( 15.3611, -272.049, 17.6258, 0.29 ) }
    dend_56 { pt3dadd( 15.3987, -271.776, 17.6435, 0.29 ) }
    dend_56 { pt3dadd( 15.5387, -270.757, 17.7095, 0.29 ) }
    dend_56 { pt3dadd( 15.5758, -270.563, 17.6969, 0.29 ) }
    dend_56 { pt3dadd( 16.0164, -268.959, 17.549, 0.29 ) }
    dend_56 { pt3dadd( 16.6821, -266.899, 17.3275, 0.29 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 88/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -121.552, -125.179, -3.40798, 0.29 ) }
    dend_46 { pt3dadd( -122.695, -125.272, -3.5366, 0.29 ) }
    dend_46 { pt3dadd( -123.193, -125.332, -3.59223, 0.59 ) }
    dend_46 { pt3dadd( -123.736, -125.424, -3.65553, 0.52 ) }
    dend_46 { pt3dadd( -124.422, -125.568, -3.7321, 0.52 ) }
    dend_46 { pt3dadd( -124.907, -125.694, -3.7865, 0.29 ) }
    dend_46 { pt3dadd( -125.449, -125.848, -3.84597, 1.47 ) }
    dend_46 { pt3dadd( -125.699, -125.941, -3.86433, 1.69 ) }
    dend_46 { pt3dadd( -126.019, -126.083, -3.8731, 1.47 ) }
    dend_46 { pt3dadd( -126.406, -126.301, -3.87803, 1.18 ) }
    dend_46 { pt3dadd( -126.85, -126.612, -3.88565, 0.59 ) }
    dend_46 { pt3dadd( -126.879, -126.635, -3.88498, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_46 { pt3dadd( -127.379, -127.059, -3.86271, 0.59 ) }
    dend_46 { pt3dadd( -127.737, -127.347, -3.85647, 1.25 ) }
    dend_46 { pt3dadd( -128.034, -127.57, -3.86054, 0.88 ) }
    dend_46 { pt3dadd( -128.636, -128.001, -3.88732, 0.37 ) }
    dend_46 { pt3dadd( -128.986, -128.231, -3.91063, 1.11 ) }
    dend_46 { pt3dadd( -129.575, -128.585, -3.97299, 0.22 ) }
    dend_46 { pt3dadd( -129.967, -128.809, -4.03664, 0.22 ) }
    dend_46 { pt3dadd( -130.195, -128.939, -4.08188, 0.22 ) }
    dend_46 { pt3dadd( -130.225, -128.957, -4.08954, 0.22 ) }
    dend_46 { pt3dadd( -130.553, -129.165, -4.18445, 0.81 ) }
    dend_46 { pt3dadd( -130.8, -129.343, -4.25347, 1.11 ) }
    dend_46 { pt3dadd( -131.344, -129.833, -4.38549, 0.29 ) }
    dend_46 { pt3dadd( -131.713, -130.217, -4.46988, 1.18 ) }
    dend_46 { pt3dadd( -131.898, -130.41, -4.50599, 1.62 ) }
    dend_46 { pt3dadd( -132.018, -130.533, -4.52753, 1.62 ) }
    dend_46 { pt3dadd( -132.048, -130.561, -4.53178, 1.62 ) }
    dend_46 { pt3dadd( -132.362, -130.807, -4.56556, 1.03 ) }
    dend_46 { pt3dadd( -132.985, -131.173, -4.63165, 0.29 ) }
    dend_46 { pt3dadd( -133.478, -131.353, -4.71271, 0.22 ) }
    dend_46 { pt3dadd( -133.513, -131.36, -4.72107, 0.22 ) }
    dend_46 { pt3dadd( -134.045, -131.379, -4.87838, 1.47 ) }
    dend_46 { pt3dadd( -134.252, -131.369, -4.94744, 1.69 ) }
    dend_46 { pt3dadd( -134.708, -131.306, -5.12095, 1.69 ) }
    dend_46 { pt3dadd( -135.481, -131.157, -5.45457, 0.29 ) }
    dend_46 { pt3dadd( -135.926, -131.083, -5.68595, 0.29 ) }
    dend_46 { pt3dadd( -136.41, -131.019, -5.96568, 0.22 ) }
    dend_46 { pt3dadd( -136.629, -131.001, -6.10737, 0.66 ) }
    dend_46 { pt3dadd( -136.892, -131.002, -6.28232, 0.74 ) }
    dend_46 { pt3dadd( -137.167, -131.025, -6.453, 0.74 ) }
    dend_46 { pt3dadd( -137.7, -131.119, -6.76808, 0.29 ) }
    dend_46 { pt3dadd( -137.899, -131.161, -6.87972, 0.74 ) }
    dend_46 { pt3dadd( -138.183, -131.223, -7.04594, 0.74 ) }
    dend_46 { pt3dadd( -138.668, -131.318, -7.3174, 0.22 ) }
    dend_46 { pt3dadd( -139.229, -131.417, -7.60465, 0.22 ) }
    dend_46 { pt3dadd( -139.477, -131.451, -7.71268, 1.18 ) }
    dend_46 { pt3dadd( -139.95, -131.496, -7.85827, 1.62 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 36/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -121.552, -125.179, -3.40798, 0.29 ) }
    dend_45 { pt3dadd( -121.935, -124.017, -3.70587, 0.29 ) }
    dend_45 { pt3dadd( -122.122, -123.483, -3.85478, 0.37 ) }
    dend_45 { pt3dadd( -122.209, -123.173, -3.96756, 0.37 ) }
    dend_45 { pt3dadd( -122.556, -121.818, -4.38284, 0.22 ) }
    dend_45 { pt3dadd( -122.585, -121.698, -4.41616, 0.22 ) }
    dend_45 { pt3dadd( -122.802, -120.763, -4.66354, 0.59 ) }
    dend_45 { pt3dadd( -122.849, -120.573, -4.71278, 0.59 ) }
    dend_45 { pt3dadd( -123.125, -119.328, -5.01753, 0.22 ) }
    dend_45 { pt3dadd( -123.411, -117.843, -5.37775, 0.22 ) }
    dend_45 { pt3dadd( -123.456, -117.505, -5.46388, 0.59 ) }
    dend_45 { pt3dadd( -123.502, -117.084, -5.55173, 0.59 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 48/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 3.43329, 127.991, -5.92946, 0.81 ) }
    dend_29 { pt3dadd( 4.70493, 129.299, -5.55847, 0.81 ) }
    dend_29 { pt3dadd( 5.63019, 130.292, -5.25386, 0.15 ) }
    dend_29 { pt3dadd( 5.68358, 130.345, -5.2322, 0.15 ) }
    dend_29 { pt3dadd( 6.45056, 131.081, -4.81961, 0.96 ) }
    dend_29 { pt3dadd( 7.00253, 131.6, -4.48586, 1.25 ) }
    dend_29 { pt3dadd( 8.28099, 132.787, -3.66645, 0.29 ) }
    dend_29 { pt3dadd( 8.90131, 133.357, -3.20913, 0.29 ) }
    dend_29 { pt3dadd( 9.96423, 134.265, -2.40519, 0.22 ) }
    dend_29 { pt3dadd( 11.123, 135.165, -1.57525, 0.96 ) }
    dend_29 { pt3dadd( 11.6266, 135.51, -1.22884, 0.96 ) }
    dend_29 { pt3dadd( 11.7053, 135.555, -1.17744, 0.96 ) }
    dend_29 { pt3dadd( 12.5136, 135.94, -0.709226, 0.29 ) }
    dend_29 { pt3dadd( 13.2423, 136.238, -0.335013, 0.22 ) }
    dend_29 { pt3dadd( 14.4166, 136.674, 0.306781, 0.22 ) }
    dend_29 { pt3dadd( 15.2468, 136.966, 0.770274, 0.96 ) }
    dend_29 { pt3dadd( 16.4473, 137.415, 1.52211, 0.22 ) }
    dend_29 { pt3dadd( 16.884, 137.591, 1.82592, 0.96 ) }
    dend_29 { pt3dadd( 17.3561, 137.806, 2.20156, 1.4 ) }
    dend_29 { pt3dadd( 19.1879, 138.859, 3.86529, 0.52 ) }
    dend_29 { pt3dadd( 19.781, 139.317, 4.47949, 0.22 ) }
    dend_29 { pt3dadd( 20.232, 139.747, 4.95627, 0.22 ) }
    dend_29 { pt3dadd( 20.278, 139.794, 4.99778, 0.22 ) }
    dend_29 { pt3dadd( 20.6819, 140.122, 5.33523, 0.22 ) }
    dend_29 { pt3dadd( 21.2301, 140.562, 5.87755, 0.96 ) }
    dend_29 { pt3dadd( 21.3744, 140.679, 6.01528, 0.96 ) }
    dend_29 { pt3dadd( 21.4801, 140.762, 6.11768, 0.96 ) }
    dend_29 { pt3dadd( 22.3646, 141.353, 6.90663, 0.22 ) }
    dend_29 { pt3dadd( 23.6607, 142.144, 7.97704, 1.11 ) }
    dend_29 { pt3dadd( 25.0874, 143.003, 9.23581, 0.22 ) }
    dend_29 { pt3dadd( 25.5863, 143.315, 9.69739, 0.52 ) }
    dend_29 { pt3dadd( 26.3157, 143.783, 10.376, 0.66 ) }
    dend_29 { pt3dadd( 27.4493, 144.507, 11.3962, 0.22 ) }
    dend_29 { pt3dadd( 28.1366, 144.927, 11.9633, 1.03 ) }
    dend_29 { pt3dadd( 29.4427, 145.594, 12.8545, 0.52 ) }
    dend_29 { pt3dadd( 30.5762, 146.025, 13.5202, 0.29 ) }
    dend_29 { pt3dadd( 31.7311, 146.357, 14.1853, 1.11 ) }
    dend_29 { pt3dadd( 32.315, 146.499, 14.5248, 1.4 ) }
    dend_29 { pt3dadd( 33.6958, 146.806, 15.2745, 0.22 ) }
    dend_29 { pt3dadd( 34.3584, 146.932, 15.6038, 0.59 ) }
    dend_29 { pt3dadd( 34.8723, 147.014, 15.8063, 0.59 ) }
    dend_29 { pt3dadd( 35.8094, 147.148, 16.1408, 0.22 ) }
    dend_29 { pt3dadd( 36.9363, 147.319, 16.5215, 0.22 ) }
    dend_29 { pt3dadd( 37.6059, 147.42, 16.7548, 0.74 ) }
    dend_29 { pt3dadd( 37.902, 147.467, 16.8567, 0.74 ) }
    dend_29 { pt3dadd( 39.1056, 147.678, 17.2335, 0.22 ) }
    dend_29 { pt3dadd( 39.5543, 147.753, 17.3486, 0.59 ) }
    dend_29 { pt3dadd( 39.7824, 147.784, 17.3904, 0.59 ) }
    dend_29 { pt3dadd( 41.1618, 147.906, 17.5619, 0.22 ) }
    dend_29 { pt3dadd( 41.3888, 147.92, 17.5888, 0.22 ) }
    dend_29 { pt3dadd( 42.5365, 147.985, 17.709, 0.22 ) }
    dend_29 { pt3dadd( 43.3895, 148.04, 17.7795, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_29 { pt3dadd( 44.1304, 148.117, 17.836, 0.88 ) }
    dend_29 { pt3dadd( 45.034, 148.257, 17.8894, 0.96 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 2/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 3.43329, 127.991, -5.92946, 0.29 ) }
    dend_26 { pt3dadd( 3.70385, 128.867, -6.13692, 0.29 ) }
    dend_26 { pt3dadd( 4.048, 129.838, -6.3613, 0.29 ) }
    dend_26 { pt3dadd( 4.56846, 131.238, -6.71326, 0.22 ) }
    dend_26 { pt3dadd( 4.80484, 131.907, -6.88484, 0.88 ) }
    dend_26 { pt3dadd( 5.27183, 133.315, -7.24474, 0.22 ) }
    dend_26 { pt3dadd( 5.51269, 134.093, -7.4376, 0.22 ) }
    dend_26 { pt3dadd( 5.53234, 134.155, -7.45258, 0.22 ) }
    dend_26 { pt3dadd( 5.76803, 135.009, -7.65821, 0.22 ) }
    dend_26 { pt3dadd( 5.86591, 135.715, -7.8263, 0.88 ) }
    dend_26 { pt3dadd( 5.87536, 136.064, -7.90459, 1.25 ) }
    dend_26 { pt3dadd( 5.81904, 136.611, -8.0016, 0.88 ) }
    dend_26 { pt3dadd( 5.73819, 137.132, -8.09436, 0.29 ) }
    dend_26 { pt3dadd( 5.66611, 137.721, -8.17364, 0.22 ) }
    dend_26 { pt3dadd( 5.65562, 138.474, -8.21472, 1.25 ) }
    dend_26 { pt3dadd( 5.6632, 138.566, -8.21578, 1.25 ) }
    dend_26 { pt3dadd( 5.71937, 138.999, -8.20938, 1.25 ) }
    dend_26 { pt3dadd( 5.82691, 139.747, -8.19374, 0.88 ) }
    dend_26 { pt3dadd( 6.04007, 141.037, -8.15133, 0.22 ) }
    dend_26 { pt3dadd( 6.2756, 142.32, -8.08826, 0.22 ) }
    dend_26 { pt3dadd( 6.37243, 142.83, -8.05489, 0.96 ) }
    dend_26 { pt3dadd( 6.44923, 143.21, -8.02797, 0.96 ) }
    dend_26 { pt3dadd( 6.69829, 144.343, -7.95626, 0.22 ) }
    dend_26 { pt3dadd( 6.71318, 144.409, -7.95253, 0.22 ) }
    dend_26 { pt3dadd( 6.89604, 145.273, -7.91249, 0.88 ) }
    dend_26 { pt3dadd( 7.00524, 145.856, -7.89331, 0.81 ) }
    dend_26 { pt3dadd( 7.16054, 146.645, -7.864, 1.11 ) }
    dend_26 { pt3dadd( 7.38621, 147.795, -7.84757, 0.29 ) }
    dend_26 { pt3dadd( 7.57705, 148.751, -7.84561, 0.22 ) }
    dend_26 { pt3dadd( 7.65518, 149.15, -7.85044, 0.96 ) }
    dend_26 { pt3dadd( 7.771, 149.711, -7.86154, 1.25 ) }
    dend_26 { pt3dadd( 7.90261, 150.306, -7.87463, 1.25 ) }
    dend_26 { pt3dadd( 8.21324, 151.372, -7.8913, 0.29 ) }
    dend_26 { pt3dadd( 8.53884, 152.117, -7.87187, 0.22 ) }
    dend_26 { pt3dadd( 8.81908, 152.625, -7.84301, 0.88 ) }
    dend_26 { pt3dadd( 9.17239, 153.171, -7.79288, 1.03 ) }
    dend_26 { pt3dadd( 9.24084, 153.265, -7.78046, 1.03 ) }
    dend_26 { pt3dadd( 9.95769, 154.226, -7.61725, 0.22 ) }
    dend_26 { pt3dadd( 10.3756, 154.862, -7.52081, 0.22 ) }
    dend_26 { pt3dadd( 10.7816, 155.68, -7.45312, 0.59 ) }
    dend_26 { pt3dadd( 10.8047, 155.743, -7.45073, 0.59 ) }
    dend_26 { pt3dadd( 10.9423, 156.229, -7.44439, 0.88 ) }
    dend_26 { pt3dadd( 11.1232, 157.074, -7.44367, 1.33 ) }
    dend_26 { pt3dadd( 11.3427, 158.701, -7.46693, 0.22 ) }
    dend_26 { pt3dadd( 11.4262, 159.413, -7.48044, 0.96 ) }
    dend_26 { pt3dadd( 11.5129, 159.906, -7.46888, 1.11 ) }
    dend_26 { pt3dadd( 11.5573, 160.095, -7.4551, 1.11 ) }
    dend_26 { pt3dadd( 11.7839, 160.788, -7.3557, 0.81 ) }
    dend_26 { pt3dadd( 11.8353, 160.904, -7.32809, 0.81 ) }
    dend_26 { pt3dadd( 12.172, 161.524, -7.11248, 0.22 ) }
    dend_26 { pt3dadd( 12.6612, 162.352, -6.8118, 0.29 ) }
    dend_26 { pt3dadd( 12.9507, 162.834, -6.63588, 0.29 ) }
    dend_26 { pt3dadd( 13.1646, 163.222, -6.50539, 0.29 ) }
    dend_26 { pt3dadd( 13.3864, 163.712, -6.40012, 0.29 ) }
    dend_26 { pt3dadd( 13.5289, 164.149, -6.35496, 0.96 ) }
    dend_26 { pt3dadd( 13.6222, 164.52, -6.35656, 1.18 ) }
    dend_26 { pt3dadd( 13.6367, 164.583, -6.35972, 1.18 ) }
    dend_26 { pt3dadd( 13.7613, 165.092, -6.39139, 1.18 ) }
    dend_26 { pt3dadd( 14.1921, 166.619, -6.47667, 0.22 ) }
    dend_26 { pt3dadd( 14.4788, 167.536, -6.51438, 0.22 ) }
    dend_26 { pt3dadd( 14.8589, 168.692, -6.54032, 0.96 ) }
    dend_26 { pt3dadd( 15.0803, 169.305, -6.53471, 1.33 ) }
    dend_26 { pt3dadd( 15.106, 169.367, -6.53118, 1.33 ) }
    dend_26 { pt3dadd( 15.3516, 169.887, -6.47735, 1.33 ) }
    dend_26 { pt3dadd( 15.7212, 170.629, -6.3618, 1.03 ) }
    dend_26 { pt3dadd( 16.1315, 171.435, -6.21697, 0.88 ) }
    dend_26 { pt3dadd( 16.6906, 172.614, -5.96814, 0.22 ) }
    dend_26 { pt3dadd( 17.186, 173.715, -5.74202, 0.22 ) }
    dend_26 { pt3dadd( 17.2082, 173.765, -5.73183, 0.22 ) }
    dend_26 { pt3dadd( 17.4624, 174.432, -5.62127, 1.03 ) }
    dend_26 { pt3dadd( 17.6556, 175.063, -5.51444, 1.25 ) }
    dend_26 { pt3dadd( 17.8863, 176.162, -5.3336, 0.22 ) }
    dend_26 { pt3dadd( 17.9376, 176.71, -5.25268, 0.22 ) }
    dend_26 { pt3dadd( 17.9383, 176.763, -5.24594, 0.22 ) }
    dend_26 { pt3dadd( 17.8935, 178.262, -5.02827, 0.37 ) }
    dend_26 { pt3dadd( 17.8161, 179.33, -4.86362, 0.22 ) }
    dend_26 { pt3dadd( 17.7367, 180.097, -4.74173, 0.88 ) }
    dend_26 { pt3dadd( 17.6761, 180.596, -4.65894, 1.25 ) }
    dend_26 { pt3dadd( 17.5999, 181.223, -4.54411, 0.96 ) }
    dend_26 { pt3dadd( 17.4708, 182.414, -4.32883, 0.22 ) }
    dend_26 { pt3dadd( 17.4289, 182.97, -4.22471, 0.66 ) }
    dend_26 { pt3dadd( 17.404, 183.208, -4.20518, 0.66 ) }
    dend_26 { pt3dadd( 17.3805, 183.33, -4.20558, 0.66 ) }
    dend_26 { pt3dadd( 17.2504, 183.846, -4.25506, 0.22 ) }
    dend_26 { pt3dadd( 17.1043, 184.355, -4.37803, 0.22 ) }
    dend_26 { pt3dadd( 17.092, 184.402, -4.39804, 0.22 ) }
    dend_26 { pt3dadd( 16.9742, 185.034, -4.67677, 0.22 ) }
    dend_26 { pt3dadd( 16.891, 185.682, -4.96401, 1.03 ) }
    dend_26 { pt3dadd( 16.8845, 186.282, -5.20779, 1.18 ) }
    dend_26 { pt3dadd( 16.9714, 186.919, -5.44883, 1.18 ) }
    dend_26 { pt3dadd( 17.2494, 188.028, -5.80974, 0.22 ) }
    dend_26 { pt3dadd( 17.4422, 188.603, -5.98673, 0.22 ) }
    dend_26 { pt3dadd( 17.4767, 188.692, -6.01104, 0.22 ) }
    dend_26 { pt3dadd( 17.8066, 189.568, -6.26464, 0.22 ) }
    dend_26 { pt3dadd( 17.9751, 190.175, -6.43197, 1.03 ) }
    dend_26 { pt3dadd( 18.0731, 190.678, -6.56017, 1.25 ) }
    dend_26 { pt3dadd( 18.1801, 191.586, -6.77413, 1.11 ) }
    dend_26 { pt3dadd( 18.2394, 192.382, -6.95338, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_26 { pt3dadd( 18.3218, 193.635, -7.20454, 0.22 ) }
    dend_26 { pt3dadd( 18.3691, 194.749, -7.40758, 0.22 ) }
    dend_26 { pt3dadd( 18.3763, 194.865, -7.42288, 0.22 ) }
    dend_26 { pt3dadd( 18.4655, 195.509, -7.48926, 0.22 ) }
    dend_26 { pt3dadd( 18.6149, 196.198, -7.52265, 0.88 ) }
    dend_26 { pt3dadd( 18.773, 196.699, -7.53257, 1.33 ) }
    dend_26 { pt3dadd( 18.7964, 196.758, -7.53145, 1.33 ) }
    dend_26 { pt3dadd( 18.8691, 196.933, -7.53432, 1.33 ) }
    dend_26 { pt3dadd( 19.4812, 198.53, -7.61194, 0.22 ) }
    dend_26 { pt3dadd( 19.7219, 199.285, -7.68228, 0.22 ) }
    dend_26 { pt3dadd( 19.8281, 199.706, -7.73566, 0.81 ) }
    dend_26 { pt3dadd( 19.8947, 200.131, -7.78446, 0.81 ) }
    dend_26 { pt3dadd( 19.9491, 201.044, -7.8615, 0.22 ) }
    dend_26 { pt3dadd( 19.9444, 201.112, -7.86225, 0.22 ) }
    dend_26 { pt3dadd( 19.8153, 201.683, -7.8052, 0.22 ) }
    dend_26 { pt3dadd( 19.7978, 201.747, -7.79648, 0.22 ) }
    dend_26 { pt3dadd( 19.5593, 202.663, -7.65022, 0.74 ) }
    dend_26 { pt3dadd( 19.3715, 203.429, -7.50633, 1.33 ) }
    dend_26 { pt3dadd( 19.233, 204.102, -7.35878, 1.33 ) }
    dend_26 { pt3dadd( 19.1405, 204.678, -7.23776, 0.88 ) }
    dend_26 { pt3dadd( 19.0307, 205.642, -7.04222, 0.44 ) }
    dend_26 { pt3dadd( 18.9773, 206.236, -6.9427, 0.59 ) }
    dend_26 { pt3dadd( 18.9736, 206.318, -6.93705, 0.59 ) }
    dend_26 { pt3dadd( 18.9518, 206.737, -6.94433, 0.59 ) }
    dend_26 { pt3dadd( 18.9048, 207.259, -7.00913, 0.37 ) }
    dend_26 { pt3dadd( 18.8939, 207.317, -7.02056, 0.37 ) }
    dend_26 { pt3dadd( 18.7378, 207.794, -7.15245, 0.37 ) }
    dend_26 { pt3dadd( 18.4441, 208.515, -7.36812, 0.37 ) }
    dend_26 { pt3dadd( 18.2091, 209.102, -7.53497, 1.18 ) }
    dend_26 { pt3dadd( 18.0392, 209.523, -7.65251, 1.62 ) }
    dend_26 { pt3dadd( 17.8169, 210.117, -7.80339, 0.88 ) }
    dend_26 { pt3dadd( 17.5608, 210.868, -7.96696, 0.22 ) }
    dend_26 { pt3dadd( 17.3558, 211.605, -8.08188, 0.22 ) }
    dend_26 { pt3dadd( 17.1982, 212.259, -8.14087, 0.81 ) }
    dend_26 { pt3dadd( 17.1851, 212.321, -8.14585, 0.81 ) }
    dend_26 { pt3dadd( 17.1087, 212.785, -8.17525, 1.11 ) }
    dend_26 { pt3dadd( 17.1005, 212.857, -8.17852, 1.11 ) }
    dend_26 { pt3dadd( 17.0167, 213.907, -8.21282, 0.22 ) }
    dend_26 { pt3dadd( 16.8889, 214.939, -8.26288, 1.25 ) }
    dend_26 { pt3dadd( 16.7576, 215.574, -8.31049, 1.62 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 40/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -101.52, 109.345, -39.1343, 0.22 ) }
    dend_21 { pt3dadd( -102.746, 109.164, -38.0753, 0.22 ) }
    dend_21 { pt3dadd( -102.796, 109.152, -38.0315, 0.22 ) }
    dend_21 { pt3dadd( -103.116, 109.049, -37.7627, 0.22 ) }
    dend_21 { pt3dadd( -104.053, 108.708, -37.0044, 1.03 ) }
    dend_21 { pt3dadd( -104.573, 108.501, -36.6055, 1.25 ) }
    dend_21 { pt3dadd( -105.738, 108.025, -35.8072, 0.22 ) }
    dend_21 { pt3dadd( -105.963, 107.92, -35.6855, 0.74 ) }
    dend_21 { pt3dadd( -106.559, 107.646, -35.3977, 0.22 ) }
    dend_21 { pt3dadd( -107.071, 107.414, -35.1802, 0.88 ) }
    dend_21 { pt3dadd( -107.592, 107.194, -35.0004, 1.03 ) }
    dend_21 { pt3dadd( -108.548, 106.815, -34.7297, 0.22 ) }
    dend_21 { pt3dadd( -109.227, 106.554, -34.6017, 0.22 ) }
    dend_21 { pt3dadd( -109.81, 106.309, -34.4843, 0.74 ) }
    dend_21 { pt3dadd( -110.023, 106.207, -34.4385, 1.33 ) }
    dend_21 { pt3dadd( -110.078, 106.176, -34.4273, 1.33 ) }
    dend_21 { pt3dadd( -110.356, 105.998, -34.3682, 1.33 ) }
    dend_21 { pt3dadd( -110.849, 105.601, -34.1997, 0.88 ) }
    dend_21 { pt3dadd( -111.446, 105.058, -33.9403, 0.29 ) }
    dend_21 { pt3dadd( -112.261, 104.218, -33.5356, 0.22 ) }
    dend_21 { pt3dadd( -112.633, 103.793, -33.3342, 0.88 ) }
    dend_21 { pt3dadd( -112.95, 103.348, -33.1009, 1.03 ) }
    dend_21 { pt3dadd( -113.558, 102.331, -32.528, 0.22 ) }
    dend_21 { pt3dadd( -113.579, 102.288, -32.5025, 0.22 ) }
    dend_21 { pt3dadd( -113.807, 101.696, -32.1016, 1.25 ) }
    dend_21 { pt3dadd( -113.933, 101.267, -31.7526, 1.47 ) }
    dend_21 { pt3dadd( -114.325, 100.016, -30.6016, 0.22 ) }
    dend_21 { pt3dadd( -114.342, 99.9698, -30.5528, 0.22 ) }
    dend_21 { pt3dadd( -114.49, 99.6753, -30.206, 0.74 ) }
    dend_21 { pt3dadd( -115.103, 98.7351, -28.9621, 0.22 ) }
    dend_21 { pt3dadd( -115.786, 97.9307, -27.7318, 1.11 ) }
    dend_21 { pt3dadd( -116.067, 97.6777, -27.3035, 1.33 ) }
    dend_21 { pt3dadd( -116.643, 97.2842, -26.5698, 0.88 ) }
    dend_21 { pt3dadd( -117.397, 96.8659, -25.7696, 0.22 ) }
    dend_21 { pt3dadd( -117.874, 96.6668, -25.3694, 1.11 ) }
    dend_21 { pt3dadd( -118.175, 96.5718, -25.19, 1.25 ) }
    dend_21 { pt3dadd( -118.668, 96.4332, -24.9594, 0.96 ) }
    dend_21 { pt3dadd( -118.714, 96.4175, -24.9379, 0.96 ) }
    dend_21 { pt3dadd( -119.835, 96.0332, -24.4601, 0.22 ) }
    dend_21 { pt3dadd( -120.774, 95.7158, -24.0388, 0.66 ) }
    dend_21 { pt3dadd( -121.12, 95.599, -23.8738, 0.96 ) }
    dend_21 { pt3dadd( -121.506, 95.4601, -23.6795, 0.81 ) }
    dend_21 { pt3dadd( -122.312, 95.153, -23.2542, 0.22 ) }
    dend_21 { pt3dadd( -122.878, 94.9159, -22.9477, 0.52 ) }
    dend_21 { pt3dadd( -123.14, 94.7619, -22.7944, 0.66 ) }
    dend_21 { pt3dadd( -123.789, 94.2767, -22.4227, 0.22 ) }
    dend_21 { pt3dadd( -124.231, 93.8828, -22.143, 0.74 ) }
    dend_21 { pt3dadd( -124.279, 93.8329, -22.11, 0.74 ) }
    dend_21 { pt3dadd( -124.451, 93.6371, -21.9929, 0.88 ) }
    dend_21 { pt3dadd( -125.348, 92.5276, -21.3399, 0.22 ) }
    dend_21 { pt3dadd( -125.61, 92.1938, -21.1528, 0.96 ) }
    dend_21 { pt3dadd( -126.078, 91.5918, -20.8293, 0.22 ) }
    dend_21 { pt3dadd( -126.111, 91.5542, -20.8076, 0.22 ) }
    dend_21 { pt3dadd( -126.538, 91.1382, -20.5406, 0.44 ) }
    dend_21 { pt3dadd( -126.851, 90.894, -20.3615, 0.44 ) }
    dend_21 { pt3dadd( -127.54, 90.5332, -20.0294, 0.22 ) }
    dend_21 { pt3dadd( -127.585, 90.5145, -20.0071, 0.22 ) }
    dend_21 { pt3dadd( -128.061, 90.307, -19.7706, 0.22 ) }
    dend_21 { pt3dadd( -128.497, 90.1109, -19.5059, 0.81 ) }
    dend_21 { pt3dadd( -128.74, 90.0007, -19.3135, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_21 { pt3dadd( -129.086, 89.827, -18.9785, 0.74 ) }
    dend_21 { pt3dadd( -129.842, 89.3563, -18.022, 0.22 ) }
    dend_21 { pt3dadd( -130.18, 89.0803, -17.5122, 0.22 ) }
    dend_21 { pt3dadd( -130.678, 88.577, -16.628, 0.22 ) }
    dend_21 { pt3dadd( -131.173, 87.9881, -15.5931, 0.88 ) }
    dend_21 { pt3dadd( -131.635, 87.398, -14.486, 1.11 ) }
    dend_21 { pt3dadd( -132.147, 86.7038, -13.1339, 0.22 ) }
    dend_21 { pt3dadd( -132.351, 86.4171, -12.5518, 0.74 ) }
    dend_21 { pt3dadd( -132.368, 86.396, -12.5055, 0.74 ) }
    dend_21 { pt3dadd( -132.714, 86.0023, -11.5886, 1.03 ) }
    dend_21 { pt3dadd( -133.358, 85.4337, -10.0904, 0.29 ) }
    dend_21 { pt3dadd( -133.462, 85.3641, -9.88495, 0.66 ) }
    dend_21 { pt3dadd( -133.489, 85.3502, -9.83692, 0.66 ) }
    dend_21 { pt3dadd( -133.75, 85.2382, -9.39742, 0.81 ) }
    dend_21 { pt3dadd( -134.174, 85.0649, -8.58373, 1.03 ) }
    dend_21 { pt3dadd( -134.947, 84.7014, -6.9655, 0.22 ) }
    dend_21 { pt3dadd( -135.178, 84.5688, -6.43254, 0.22 ) }
    dend_21 { pt3dadd( -135.812, 84.1027, -4.82001, 0.88 ) }
    dend_21 { pt3dadd( -136.025, 83.9229, -4.26115, 1.18 ) }
    dend_21 { pt3dadd( -137.022, 83.017, -1.62041, 0.29 ) }
    dend_21 { pt3dadd( -137.237, 82.8255, -1.0873, 0.88 ) }
    dend_21 { pt3dadd( -137.398, 82.6942, -0.729293, 1.11 ) }
    dend_21 { pt3dadd( -137.931, 82.2519, 0.409247, 0.22 ) }
    dend_21 { pt3dadd( -138.184, 82.0252, 0.867554, 0.66 ) }
    dend_21 { pt3dadd( -138.449, 81.7813, 1.30319, 0.96 ) }
    dend_21 { pt3dadd( -139.047, 81.2988, 2.21425, 0.22 ) }
    dend_21 { pt3dadd( -139.412, 81.0522, 2.79188, 0.22 ) }
    dend_21 { pt3dadd( -140.155, 80.5928, 4.01976, 0.81 ) }
    dend_21 { pt3dadd( -140.59, 80.3227, 4.78873, 0.81 ) }
    dend_21 { pt3dadd( -140.615, 80.3054, 4.837, 0.81 ) }
    dend_21 { pt3dadd( -141.481, 79.5825, 6.69463, 0.37 ) }
    dend_21 { pt3dadd( -141.791, 79.268, 7.39639, 0.88 ) }
    dend_21 { pt3dadd( -141.874, 79.1607, 7.61631, 1.11 ) }
    dend_21 { pt3dadd( -142.301, 78.5121, 8.796, 0.29 ) }
    dend_21 { pt3dadd( -142.319, 78.4805, 8.84955, 0.29 ) }
    dend_21 { pt3dadd( -142.664, 77.8602, 9.87005, 0.29 ) }
    dend_21 { pt3dadd( -142.883, 77.4693, 10.4646, 0.52 ) }
    dend_21 { pt3dadd( -143.345, 76.6621, 11.7929, 0.29 ) }
    dend_21 { pt3dadd( -143.506, 76.4066, 12.2361, 0.81 ) }
    dend_21 { pt3dadd( -143.609, 76.2524, 12.5125, 0.96 ) }
    dend_21 { pt3dadd( -144.011, 75.7355, 13.5184, 0.29 ) }
    dend_21 { pt3dadd( -144.175, 75.5696, 13.8784, 0.29 ) }
    dend_21 { pt3dadd( -144.208, 75.5434, 13.9425, 0.29 ) }
    dend_21 { pt3dadd( -144.785, 75.1484, 14.9027, 0.22 ) }
    dend_21 { pt3dadd( -144.962, 74.9896, 15.2347, 1.03 ) }
    dend_21 { pt3dadd( -145.532, 74.3181, 16.4307, 0.29 ) }
    dend_21 { pt3dadd( -145.627, 74.146, 16.6656, 0.96 ) }
    dend_21 { pt3dadd( -145.661, 74.0603, 16.7725, 0.96 ) }
    dend_21 { pt3dadd( -145.699, 73.8158, 17.061, 1.18 ) }
    dend_21 { pt3dadd( -145.67, 72.9954, 17.9668, 0.15 ) }
    dend_21 { pt3dadd( -145.653, 72.949, 18.01, 0.15 ) }
    dend_21 { pt3dadd( -145.322, 72.5429, 18.2758, 0.15 ) }
    dend_21 { pt3dadd( -145.261, 72.478, 18.3176, 0.15 ) }
    dend_21 { pt3dadd( -144.347, 71.6052, 18.8648, 0.15 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 54/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -101.52, 109.345, -39.1343, 0.29 ) }
    dend_20 { pt3dadd( -102.555, 111.248, -39.9368, 0.29 ) }
    dend_20 { pt3dadd( -103.015, 112.091, -40.2705, 0.22 ) }
    dend_20 { pt3dadd( -103.872, 113.685, -40.8772, 0.52 ) }
    dend_20 { pt3dadd( -104.426, 114.77, -41.2723, 0.22 ) }
    dend_20 { pt3dadd( -104.465, 114.847, -41.2988, 0.22 ) }
    dend_20 { pt3dadd( -104.974, 115.838, -41.6107, 0.52 ) }
    dend_20 { pt3dadd( -105.05, 116.0, -41.6423, 0.52 ) }
    dend_20 { pt3dadd( -105.132, 116.161, -41.671, 0.52 ) }
    dend_20 { pt3dadd( -105.525, 116.755, -41.81, 0.22 ) }
    dend_20 { pt3dadd( -106.065, 117.495, -42.0006, 0.81 ) }
    dend_20 { pt3dadd( -106.458, 118.005, -42.145, 1.18 ) }
    dend_20 { pt3dadd( -106.785, 118.472, -42.2828, 0.96 ) }
    dend_20 { pt3dadd( -106.825, 118.532, -42.3042, 0.96 ) }
    dend_20 { pt3dadd( -107.791, 120.01, -42.9309, 0.22 ) }
    dend_20 { pt3dadd( -108.457, 121.036, -43.4096, 0.22 ) }
    dend_20 { pt3dadd( -108.992, 122.016, -43.9548, 0.44 ) }
    dend_20 { pt3dadd( -109.669, 123.175, -44.6852, 0.22 ) }
    dend_20 { pt3dadd( -110.354, 124.46, -45.5447, 0.22 ) }
    dend_20 { pt3dadd( -110.897, 125.594, -46.3133, 1.03 ) }
    dend_20 { pt3dadd( -111.055, 125.992, -46.5821, 1.4 ) }
    dend_20 { pt3dadd( -111.809, 127.933, -47.9639, 1.18 ) }
    dend_20 { pt3dadd( -112.543, 129.735, -49.2726, 0.22 ) }
    dend_20 { pt3dadd( -113.165, 131.169, -50.3045, 0.22 ) }
    dend_20 { pt3dadd( -113.363, 131.675, -50.6215, 0.22 ) }
    dend_20 { pt3dadd( -113.639, 132.479, -51.0765, 0.74 ) }
    dend_20 { pt3dadd( -113.864, 133.153, -51.4282, 0.74 ) }
    dend_20 { pt3dadd( -114.08, 133.792, -51.704, 0.74 ) }
    dend_20 { pt3dadd( -114.42, 134.955, -52.1576, 0.22 ) }
    dend_20 { pt3dadd( -114.797, 135.929, -52.5167, 0.22 ) }
    dend_20 { pt3dadd( -115.175, 136.881, -52.8399, 1.25 ) }
    dend_20 { pt3dadd( -115.312, 137.228, -52.9469, 1.47 ) }
    dend_20 { pt3dadd( -115.522, 137.913, -53.1322, 0.74 ) }
    dend_20 { pt3dadd( -115.725, 138.791, -53.3177, 0.22 ) }
    dend_20 { pt3dadd( -115.745, 138.879, -53.3307, 0.22 ) }
    dend_20 { pt3dadd( -115.96, 139.879, -53.4691, 0.37 ) }
    dend_20 { pt3dadd( -115.976, 139.969, -53.4816, 0.37 ) }
    dend_20 { pt3dadd( -116.137, 141.11, -53.6717, 0.22 ) }
    dend_20 { pt3dadd( -116.217, 141.808, -53.8072, 0.96 ) }
    dend_20 { pt3dadd( -116.378, 142.978, -54.0881, 0.22 ) }
    dend_20 { pt3dadd( -116.407, 143.083, -54.1202, 0.22 ) }
    dend_20 { pt3dadd( -116.688, 143.689, -54.3261, 0.22 ) }
    dend_20 { pt3dadd( -116.775, 143.83, -54.3756, 0.22 ) }
    dend_20 { pt3dadd( -117.184, 144.295, -54.5668, 0.22 ) }
    dend_20 { pt3dadd( -118.267, 145.275, -55.0124, 0.81 ) }
    dend_20 { pt3dadd( -119.423, 146.187, -55.4369, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_20 { pt3dadd( -120.187, 146.747, -55.6853, 0.88 ) }
    dend_20 { pt3dadd( -120.339, 146.854, -55.7274, 1.03 ) }
    dend_20 { pt3dadd( -121.426, 147.621, -56.0047, 0.22 ) }
    dend_20 { pt3dadd( -122.109, 148.111, -56.1536, 0.29 ) }
    dend_20 { pt3dadd( -122.712, 148.554, -56.2476, 0.29 ) }
    dend_20 { pt3dadd( -123.262, 149.033, -56.3264, 0.29 ) }
    dend_20 { pt3dadd( -124.076, 149.834, -56.462, 0.37 ) }
    dend_20 { pt3dadd( -124.935, 150.762, -56.6044, 1.03 ) }
    dend_20 { pt3dadd( -125.57, 151.532, -56.7048, 1.47 ) }
    dend_20 { pt3dadd( -126.051, 152.14, -56.7896, 1.33 ) }
    dend_20 { pt3dadd( -126.652, 152.874, -56.9421, 0.22 ) }
    dend_20 { pt3dadd( -127.236, 153.555, -57.1489, 0.22 ) }
    dend_20 { pt3dadd( -127.72, 154.115, -57.377, 0.96 ) }
    dend_20 { pt3dadd( -127.765, 154.169, -57.4032, 0.96 ) }
    dend_20 { pt3dadd( -128.006, 154.462, -57.5699, 0.96 ) }
    dend_20 { pt3dadd( -128.832, 155.497, -58.1877, 0.22 ) }
    dend_20 { pt3dadd( -129.377, 156.133, -58.5655, 0.74 ) }
    dend_20 { pt3dadd( -129.945, 156.803, -58.9392, 0.22 ) }
    dend_20 { pt3dadd( -130.365, 157.324, -59.1996, 0.22 ) }
    dend_20 { pt3dadd( -130.411, 157.383, -59.2253, 0.22 ) }
    dend_20 { pt3dadd( -130.806, 157.925, -59.4104, 1.03 ) }
    dend_20 { pt3dadd( -131.542, 159.004, -59.6104, 0.22 ) }
    dend_20 { pt3dadd( -132.061, 159.764, -59.6897, 0.37 ) }
    dend_20 { pt3dadd( -132.398, 160.202, -59.7156, 0.22 ) }
    dend_20 { pt3dadd( -132.48, 160.3, -59.7182, 0.22 ) }
    dend_20 { pt3dadd( -133.075, 160.984, -59.7537, 0.22 ) }
    dend_20 { pt3dadd( -133.61, 161.571, -59.797, 0.66 ) }
    dend_20 { pt3dadd( -133.884, 161.862, -59.8326, 0.96 ) }
    dend_20 { pt3dadd( -134.53, 162.48, -59.9468, 0.22 ) }
    dend_20 { pt3dadd( -135.029, 162.891, -60.0327, 0.22 ) }
    dend_20 { pt3dadd( -135.932, 163.546, -60.1742, 0.81 ) }
    dend_20 { pt3dadd( -136.005, 163.59, -60.1862, 0.81 ) }
    dend_20 { pt3dadd( -136.662, 163.942, -60.299, 0.59 ) }
    dend_20 { pt3dadd( -137.294, 164.283, -60.3989, 0.59 ) }
    dend_20 { pt3dadd( -137.873, 164.669, -60.4854, 0.88 ) }
    dend_20 { pt3dadd( -138.332, 164.991, -60.5434, 0.52 ) }
    dend_20 { pt3dadd( -139.085, 165.583, -60.6093, 0.22 ) }
    dend_20 { pt3dadd( -139.146, 165.635, -60.6132, 0.22 ) }
    dend_20 { pt3dadd( -139.663, 166.106, -60.6309, 0.22 ) }
    dend_20 { pt3dadd( -140.695, 167.13, -60.6738, 1.33 ) }
    dend_20 { pt3dadd( -141.081, 167.546, -60.6922, 0.96 ) }
    dend_20 { pt3dadd( -141.631, 168.172, -60.7117, 0.22 ) }
    dend_20 { pt3dadd( -142.155, 168.792, -60.7106, 0.22 ) }
    dend_20 { pt3dadd( -142.588, 169.287, -60.7032, 0.22 ) }
    dend_20 { pt3dadd( -143.145, 169.901, -60.6826, 0.52 ) }
    dend_20 { pt3dadd( -143.233, 169.998, -60.6871, 0.52 ) }
    dend_20 { pt3dadd( -143.541, 170.387, -60.7386, 0.88 ) }
    dend_20 { pt3dadd( -143.817, 170.777, -60.82, 1.11 ) }
    dend_20 { pt3dadd( -143.858, 170.833, -60.8392, 1.11 ) }
    dend_20 { pt3dadd( -144.346, 171.452, -61.1117, 0.88 ) }
    dend_20 { pt3dadd( -145.263, 172.487, -61.6569, 0.22 ) }
    dend_20 { pt3dadd( -145.845, 173.086, -62.0045, 1.25 ) }
    dend_20 { pt3dadd( -146.121, 173.343, -62.1636, 0.96 ) }
    dend_20 { pt3dadd( -147.258, 174.342, -62.7972, 0.22 ) }
    dend_20 { pt3dadd( -147.305, 174.382, -62.823, 0.22 ) }
    dend_20 { pt3dadd( -147.828, 174.834, -63.0968, 0.22 ) }
    dend_20 { pt3dadd( -147.903, 174.901, -63.1294, 0.22 ) }
    dend_20 { pt3dadd( -148.406, 175.34, -63.3351, 0.88 ) }
    dend_20 { pt3dadd( -148.679, 175.588, -63.4312, 0.88 ) }
    dend_20 { pt3dadd( -149.343, 176.253, -63.6404, 0.22 ) }
    dend_20 { pt3dadd( -150.059, 177.002, -63.8727, 0.88 ) }
    dend_20 { pt3dadd( -150.407, 177.407, -63.9798, 0.88 ) }
    dend_20 { pt3dadd( -151.3, 178.501, -64.2494, 0.15 ) }
    dend_20 { pt3dadd( -151.921, 179.269, -64.4261, 0.66 ) }
    dend_20 { pt3dadd( -151.972, 179.331, -64.4384, 0.66 ) }
    dend_20 { pt3dadd( -152.271, 179.685, -64.4934, 0.59 ) }
    dend_20 { pt3dadd( -152.923, 180.4, -64.59, 0.22 ) }
    dend_20 { pt3dadd( -152.976, 180.456, -64.6012, 0.22 ) }
    dend_20 { pt3dadd( -153.415, 180.904, -64.698, 0.22 ) }
    dend_20 { pt3dadd( -153.473, 180.954, -64.7134, 0.22 ) }
    dend_20 { pt3dadd( -153.921, 181.314, -64.8498, 0.66 ) }
    dend_20 { pt3dadd( -154.471, 181.716, -65.0241, 0.74 ) }
    dend_20 { pt3dadd( -155.509, 182.522, -65.2854, 0.15 ) }
    dend_20 { pt3dadd( -155.633, 182.637, -65.304, 0.15 ) }
    dend_20 { pt3dadd( -155.996, 183.0, -65.3356, 0.15 ) }
    dend_20 { pt3dadd( -156.611, 183.678, -65.3626, 0.88 ) }
    dend_20 { pt3dadd( -156.847, 183.98, -65.3664, 1.18 ) }
    dend_20 { pt3dadd( -157.626, 185.143, -65.4423, 0.22 ) }
    dend_20 { pt3dadd( -158.171, 186.055, -65.5177, 0.22 ) }
    dend_20 { pt3dadd( -158.652, 186.915, -65.6287, 0.22 ) }
    dend_20 { pt3dadd( -159.043, 187.658, -65.755, 0.96 ) }
    dend_20 { pt3dadd( -159.356, 188.279, -65.8818, 1.18 ) }
    dend_20 { pt3dadd( -160.019, 189.58, -66.2242, 0.22 ) }
    dend_20 { pt3dadd( -160.33, 190.131, -66.4238, 0.37 ) }
    dend_20 { pt3dadd( -160.369, 190.198, -66.4482, 0.37 ) }
    dend_20 { pt3dadd( -160.488, 190.383, -66.5116, 0.37 ) }
    dend_20 { pt3dadd( -160.975, 191.012, -66.7172, 0.22 ) }
    dend_20 { pt3dadd( -161.17, 191.226, -66.7786, 0.22 ) }
    dend_20 { pt3dadd( -161.779, 191.855, -66.9141, 0.66 ) }
    dend_20 { pt3dadd( -162.06, 192.141, -66.9776, 0.96 ) }
    dend_20 { pt3dadd( -162.724, 192.879, -67.1514, 1.03 ) }
    dend_20 { pt3dadd( -162.985, 193.174, -67.2529, 1.25 ) }
    dend_20 { pt3dadd( -163.681, 193.964, -67.5812, 0.22 ) }
    dend_20 { pt3dadd( -164.156, 194.493, -67.8653, 0.59 ) }
    dend_20 { pt3dadd( -164.829, 195.254, -68.3197, 0.22 ) }
    dend_20 { pt3dadd( -165.243, 195.717, -68.6194, 0.22 ) }
    dend_20 { pt3dadd( -166.235, 196.828, -69.3928, 1.18 ) }
    dend_20 { pt3dadd( -166.533, 197.175, -69.6481, 1.18 ) }
    dend_20 { pt3dadd( -167.631, 198.538, -70.6649, 0.22 ) }
    dend_20 { pt3dadd( -168.099, 199.134, -71.0618, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_20 { pt3dadd( -168.188, 199.249, -71.1189, 0.44 ) }
    dend_20 { pt3dadd( -168.233, 199.307, -71.1373, 0.44 ) }
    dend_20 { pt3dadd( -168.943, 200.298, -71.2693, 0.22 ) }
    dend_20 { pt3dadd( -169.49, 201.051, -71.2947, 0.22 ) }
    dend_20 { pt3dadd( -170.222, 201.998, -71.1844, 0.22 ) }
    dend_20 { pt3dadd( -171.073, 203.049, -71.0307, 1.25 ) }
    dend_20 { pt3dadd( -171.432, 203.48, -70.9565, 1.18 ) }
    dend_20 { pt3dadd( -171.869, 203.976, -70.8487, 0.74 ) }
    dend_20 { pt3dadd( -172.399, 204.522, -70.673, 0.22 ) }
    dend_20 { pt3dadd( -173.001, 205.106, -70.4749, 0.52 ) }
    dend_20 { pt3dadd( -180.732, 212.351, -74.0, 0.52 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 11/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -156.092, 30.8244, 54.0074, 0.22 ) }
    dend_16 { pt3dadd( -157.383, 30.6985, 54.2354, 0.22 ) }
    dend_16 { pt3dadd( -158.096, 30.6297, 54.3701, 0.22 ) }
    dend_16 { pt3dadd( -159.214, 30.5075, 54.5899, 1.11 ) }
    dend_16 { pt3dadd( -159.53, 30.4796, 54.6331, 1.55 ) }
    dend_16 { pt3dadd( -160.912, 30.3427, 54.7773, 0.22 ) }
    dend_16 { pt3dadd( -161.484, 30.2739, 54.8432, 0.66 ) }
    dend_16 { pt3dadd( -161.571, 30.2626, 54.8549, 0.66 ) }
    dend_16 { pt3dadd( -162.104, 30.2069, 54.937, 0.66 ) }
    dend_16 { pt3dadd( -163.454, 30.1146, 55.2521, 0.22 ) }
    dend_16 { pt3dadd( -164.221, 30.1004, 55.4763, 0.22 ) }
    dend_16 { pt3dadd( -165.284, 30.1309, 55.8334, 0.74 ) }
    dend_16 { pt3dadd( -165.888, 30.1666, 56.0561, 0.96 ) }
    dend_16 { pt3dadd( -166.786, 30.2282, 56.4028, 0.96 ) }
    dend_16 { pt3dadd( -167.973, 30.2897, 56.8854, 0.37 ) }
    dend_16 { pt3dadd( -168.798, 30.2884, 57.2362, 0.22 ) }
    dend_16 { pt3dadd( -169.409, 30.2675, 57.465, 0.22 ) }
    dend_16 { pt3dadd( -170.316, 30.2101, 57.7378, 0.88 ) }
    dend_16 { pt3dadd( -171.177, 30.1336, 57.953, 1.33 ) }
    dend_16 { pt3dadd( -172.24, 30.0442, 58.1527, 0.74 ) }
    dend_16 { pt3dadd( -173.215, 29.9699, 58.2954, 0.22 ) }
    dend_16 { pt3dadd( -174.139, 29.8976, 58.43, 0.22 ) }
    dend_16 { pt3dadd( -175.517, 29.7802, 58.6311, 0.66 ) }
    dend_16 { pt3dadd( -176.163, 29.726, 58.7249, 1.25 ) }
    dend_16 { pt3dadd( -177.367, 29.645, 58.8968, 1.55 ) }
    dend_16 { pt3dadd( -179.333, 29.5418, 59.1384, 0.15 ) }
    dend_16 { pt3dadd( -180.28, 29.4959, 59.2517, 1.25 ) }
    dend_16 { pt3dadd( -181.469, 29.4084, 59.3925, 0.81 ) }
    dend_16 { pt3dadd( -182.381, 29.2981, 59.4998, 0.66 ) }
    dend_16 { pt3dadd( -183.272, 29.152, 59.6026, 0.88 ) }
    dend_16 { pt3dadd( -183.979, 28.9981, 59.6774, 1.03 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 42/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -156.092, 30.8244, 54.0074, 0.22 ) }
    dend_15 { pt3dadd( -155.956, 31.4802, 54.2683, 0.22 ) }
    dend_15 { pt3dadd( -155.948, 31.5401, 54.2903, 0.22 ) }
    dend_15 { pt3dadd( -155.868, 32.2475, 54.5411, 0.66 ) }
    dend_15 { pt3dadd( -155.862, 32.3026, 54.5568, 0.66 ) }
    dend_15 { pt3dadd( -155.735, 33.165, 54.7784, 0.22 ) }
    dend_15 { pt3dadd( -155.722, 33.2441, 54.7977, 0.22 ) }
    dend_15 { pt3dadd( -155.527, 33.9791, 54.9498, 0.29 ) }
    dend_15 { pt3dadd( -155.508, 34.0482, 54.9624, 0.29 ) }
    dend_15 { pt3dadd( -155.182, 35.1145, 55.1091, 0.22 ) }
    dend_15 { pt3dadd( -155.025, 35.6111, 55.1777, 0.22 ) }
    dend_15 { pt3dadd( -155.005, 35.6683, 55.1865, 0.22 ) }
    dend_15 { pt3dadd( -154.669, 36.4547, 55.2933, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 55/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 19.777, 75.1142, 45.5643, 0.52 ) }
    dend_10 { pt3dadd( 21.2664, 74.8323, 45.5612, 0.52 ) }
    dend_10 { pt3dadd( 22.0845, 74.709, 45.579, 0.74 ) }
    dend_10 { pt3dadd( 22.7514, 74.6312, 45.6183, 0.74 ) }
    dend_10 { pt3dadd( 22.8178, 74.6238, 45.6279, 0.74 ) }
    dend_10 { pt3dadd( 23.4306, 74.5659, 45.7564, 0.74 ) }
    dend_10 { pt3dadd( 24.1208, 74.5263, 45.9224, 0.59 ) }
    dend_10 { pt3dadd( 24.1807, 74.5274, 45.9413, 0.59 ) }
    dend_10 { pt3dadd( 25.0983, 74.5588, 46.2354, 0.44 ) }
    dend_10 { pt3dadd( 26.458, 74.599, 46.6637, 0.22 ) }
    dend_10 { pt3dadd( 27.0834, 74.5991, 46.8468, 1.18 ) }
    dend_10 { pt3dadd( 27.7485, 74.583, 47.0321, 1.18 ) }
    dend_10 { pt3dadd( 29.0011, 74.5294, 47.3597, 0.44 ) }
    dend_10 { pt3dadd( 29.7712, 74.4776, 47.5565, 0.44 ) }
    dend_10 { pt3dadd( 30.8533, 74.3897, 47.8396, 0.37 ) }
    dend_10 { pt3dadd( 31.5934, 74.3174, 48.0279, 0.66 ) }
    dend_10 { pt3dadd( 31.6635, 74.3085, 48.0465, 0.66 ) }
    dend_10 { pt3dadd( 32.2697, 74.2304, 48.2901, 0.66 ) }
    dend_10 { pt3dadd( 33.1907, 74.169, 48.8208, 0.29 ) }
    dend_10 { pt3dadd( 33.704, 74.1946, 49.198, 0.88 ) }
    dend_10 { pt3dadd( 33.8707, 74.2269, 49.3388, 0.88 ) }
    dend_10 { pt3dadd( 33.9775, 74.2586, 49.429, 0.88 ) }
    dend_10 { pt3dadd( 35.3717, 74.7722, 50.5269, 0.29 ) }
    dend_10 { pt3dadd( 35.8438, 74.9694, 50.8696, 0.29 ) }
    dend_10 { pt3dadd( 36.5239, 75.2532, 51.2891, 1.25 ) }
    dend_10 { pt3dadd( 36.9873, 75.4371, 51.5286, 1.55 ) }
    dend_10 { pt3dadd( 37.7612, 75.7377, 51.8978, 0.88 ) }
    dend_10 { pt3dadd( 38.2638, 75.9231, 52.1014, 0.66 ) }
    dend_10 { pt3dadd( 39.1214, 76.2104, 52.3283, 0.44 ) }
    dend_10 { pt3dadd( 39.987, 76.4847, 52.5579, 0.44 ) }
    dend_10 { pt3dadd( 40.574, 76.6588, 52.7089, 0.81 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 86/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 19.777, 75.1142, 45.5643, 0.44 ) }
    dend_9 { pt3dadd( 19.8018, 75.9738, 46.186, 0.44 ) }
    dend_9 { pt3dadd( 19.8764, 77.1, 47.067, 0.44 ) }
    dend_9 { pt3dadd( 19.963, 77.8475, 47.6762, 0.44 ) }
    dend_9 { pt3dadd( 19.9699, 77.8936, 47.7122, 0.44 ) }
    dend_9 { pt3dadd( 20.0582, 78.4041, 48.1, 1.18 ) }
    dend_9 { pt3dadd( 20.345, 79.6755, 49.0045, 0.81 ) }
    dend_9 { pt3dadd( 20.3675, 79.7268, 49.0474, 0.81 ) }
    dend_9 { pt3dadd( 20.4613, 79.943, 49.2369, 0.37 ) }
    dend_9 { pt3dadd( 20.6598, 80.4378, 49.703, 0.37 ) }
    dend_9 { pt3dadd( 20.677, 80.489, 49.7484, 0.37 ) }
    dend_9 { pt3dadd( 20.8539, 81.0972, 50.2644, 0.37 ) }
    dend_9 { pt3dadd( 21.2056, 82.3652, 51.1487, 0.37 ) }
    dend_9 { pt3dadd( 21.5309, 83.2364, 51.7488, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_9 { pt3dadd( 21.5642, 83.2965, 51.7878, 0.29 ) }
    dend_9 { pt3dadd( 22.0946, 83.8281, 52.0842, 0.29 ) }
    dend_9 { pt3dadd( 22.1451, 83.8623, 52.0944, 0.29 ) }
    dend_9 { pt3dadd( 22.7809, 84.2079, 52.1121, 0.29 ) }
    dend_9 { pt3dadd( 23.6437, 84.7162, 52.0552, 0.29 ) }
    dend_9 { pt3dadd( 24.5554, 85.1893, 51.9801, 0.29 ) }
    dend_9 { pt3dadd( 25.2052, 85.508, 51.9246, 0.29 ) }
    dend_9 { pt3dadd( 26.2594, 85.9824, 51.829, 0.29 ) }
    dend_9 { pt3dadd( 26.4431, 86.0723, 51.8119, 0.29 ) }
    dend_9 { pt3dadd( 27.5596, 86.7476, 51.7044, 1.47 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 10/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -29.7101, 49.2272, 27.1129, 0.59 ) }
    dend_7 { pt3dadd( -28.9478, 49.7409, 27.3987, 0.59 ) }
    dend_7 { pt3dadd( -28.1347, 50.4178, 27.6348, 0.52 ) }
    dend_7 { pt3dadd( -28.0152, 50.5454, 27.669, 0.52 ) }
    dend_7 { pt3dadd( -27.4034, 51.456, 27.8651, 0.81 ) }
    dend_7 { pt3dadd( -27.3614, 51.5435, 27.8823, 0.81 ) }
    dend_7 { pt3dadd( -27.2405, 52.1588, 28.0087, 1.03 ) }
    dend_7 { pt3dadd( -27.5214, 53.0442, 28.372, 0.96 ) }
    dend_7 { pt3dadd( -27.8341, 53.6018, 28.6382, 0.66 ) }
    dend_7 { pt3dadd( -28.3097, 54.2867, 28.9901, 0.59 ) }
    dend_7 { pt3dadd( -28.8119, 54.8632, 29.3207, 0.59 ) }
    dend_7 { pt3dadd( -29.7582, 55.6993, 29.9703, 0.59 ) }
    dend_7 { pt3dadd( -31.1601, 56.7109, 30.9586, 0.37 ) }
    dend_7 { pt3dadd( -31.6163, 57.0183, 31.3218, 0.37 ) }
    dend_7 { pt3dadd( -31.6703, 57.0565, 31.3728, 0.37 ) }
    dend_7 { pt3dadd( -32.3824, 57.6224, 32.1898, 0.37 ) }
    dend_7 { pt3dadd( -33.2505, 58.5357, 33.4771, 0.37 ) }
    dend_7 { pt3dadd( -33.2748, 58.5793, 33.529, 0.37 ) }
    dend_7 { pt3dadd( -33.4649, 59.638, 34.4323, 0.44 ) }
    dend_7 { pt3dadd( -33.4502, 60.2894, 34.8554, 0.44 ) }
    dend_7 { pt3dadd( -33.4411, 60.3987, 34.9145, 0.44 ) }
    dend_7 { pt3dadd( -33.3576, 61.1789, 35.3119, 0.44 ) }
    dend_7 { pt3dadd( -33.2643, 62.5844, 35.9704, 0.44 ) }
    dend_7 { pt3dadd( -33.3045, 63.6442, 36.4836, 0.59 ) }
    dend_7 { pt3dadd( -33.3936, 64.1135, 36.729, 0.59 ) }
    dend_7 { pt3dadd( -33.7198, 65.0169, 37.3281, 0.59 ) }
    dend_7 { pt3dadd( -34.1382, 65.926, 38.1733, 0.81 ) }
    dend_7 { pt3dadd( -34.3101, 66.2666, 38.6513, 0.81 ) }
    dend_7 { pt3dadd( -34.3326, 66.3157, 38.7504, 0.81 ) }
    dend_7 { pt3dadd( -34.3398, 66.709, 39.7061, 1.03 ) }
    dend_7 { pt3dadd( -34.169, 67.17, 40.8984, 0.74 ) }
    dend_7 { pt3dadd( -33.7687, 67.7855, 42.4623, 0.66 ) }
    dend_7 { pt3dadd( -33.2278, 68.4139, 44.0367, 0.66 ) }
    dend_7 { pt3dadd( -32.9622, 68.7213, 44.7761, 0.59 ) }
    dend_7 { pt3dadd( -32.4439, 69.6154, 46.4362, 0.59 ) }
    dend_7 { pt3dadd( -32.3498, 69.8972, 46.7834, 0.44 ) }
    dend_7 { pt3dadd( -32.2865, 70.4655, 47.1805, 0.59 ) }
    dend_7 { pt3dadd( -32.2907, 70.5329, 47.2098, 0.59 ) }
    dend_7 { pt3dadd( -32.3667, 71.5179, 47.5224, 0.37 ) }
    dend_7 { pt3dadd( -32.446, 73.4467, 48.1883, 0.37 ) }
    dend_7 { pt3dadd( -32.4504, 74.6961, 48.6391, 0.37 ) }
    dend_7 { pt3dadd( -32.375, 75.5386, 48.9811, 0.29 ) }
    dend_7 { pt3dadd( -32.3636, 75.6118, 49.0165, 0.29 ) }
    dend_7 { pt3dadd( -32.1101, 76.9516, 49.7243, 0.29 ) }
    dend_7 { pt3dadd( -31.7382, 78.438, 50.5372, 0.88 ) }
    dend_7 { pt3dadd( -31.7195, 78.5104, 50.5782, 0.88 ) }
    dend_7 { pt3dadd( -31.6599, 78.8955, 50.802, 0.88 ) }
    dend_7 { pt3dadd( -31.6355, 80.0772, 51.4645, 0.66 ) }
    dend_7 { pt3dadd( -31.7212, 80.8426, 51.8555, 0.52 ) }
    dend_7 { pt3dadd( -31.983, 81.8517, 52.3173, 0.44 ) }
    dend_7 { pt3dadd( -32.2461, 82.5728, 52.5811, 0.44 ) }
    dend_7 { pt3dadd( -32.2754, 82.6344, 52.6079, 0.44 ) }
    dend_7 { pt3dadd( -32.8458, 83.3631, 53.0479, 0.37 ) }
    dend_7 { pt3dadd( -33.2832, 83.4132, 53.3778, 0.37 ) }
    dend_7 { pt3dadd( -33.4066, 83.3998, 53.4854, 0.37 ) }
    dend_7 { pt3dadd( -34.1313, 83.2866, 54.2352, 0.37 ) }
    dend_7 { pt3dadd( -34.8453, 83.2668, 55.0668, 0.59 ) }
    dend_7 { pt3dadd( -35.4755, 83.3992, 55.8999, 0.59 ) }
    dend_7 { pt3dadd( -36.1698, 83.841, 57.0928, 1.03 ) }
    dend_7 { pt3dadd( -36.3827, 84.6116, 57.9572, 0.29 ) }
    dend_7 { pt3dadd( -36.3553, 85.6016, 58.6872, 0.22 ) }
    dend_7 { pt3dadd( -36.2027, 86.9553, 59.4761, 0.29 ) }
    dend_7 { pt3dadd( -36.1212, 87.7026, 59.8342, 0.29 ) }
    dend_7 { pt3dadd( -36.0163, 88.7128, 60.2537, 0.29 ) }
    dend_7 { pt3dadd( -35.9233, 89.5202, 60.5079, 0.29 ) }
    dend_7 { pt3dadd( -35.9025, 89.6608, 60.5484, 0.29 ) }
    dend_7 { pt3dadd( -35.88, 90.6502, 60.7005, 0.29 ) }
    dend_7 { pt3dadd( -35.1894, 89.4222, 60.8888, 0.29 ) }
    dend_7 { pt3dadd( -35.1418, 89.3489, 60.902, 0.29 ) }
    dend_7 { pt3dadd( -34.4262, 88.525, 61.0008, 0.22 ) }
    dend_7 { pt3dadd( -33.5403, 87.8446, 61.0294, 0.88 ) }
    dend_7 { pt3dadd( -33.057, 87.4924, 61.0353, 1.03 ) }
    dend_7 { pt3dadd( -31.8198, 86.6393, 61.0292, 0.22 ) }
    dend_7 { pt3dadd( -31.7505, 86.5985, 61.0272, 0.22 ) }
    dend_7 { pt3dadd( -30.5915, 86.0093, 60.9561, 0.22 ) }
    dend_7 { pt3dadd( -29.52, 85.6636, 60.8091, 0.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 86/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -29.7101, 49.2272, 27.1129, 0.74 ) }
    dend_4 { pt3dadd( -30.4791, 47.7251, 29.7118, 0.74 ) }
    dend_4 { pt3dadd( -30.8325, 47.4358, 30.2575, 0.52 ) }
    dend_4 { pt3dadd( -31.2999, 47.216, 30.7083, 0.37 ) }
    dend_4 { pt3dadd( -32.257, 46.8832, 31.4331, 0.37 ) }
    dend_4 { pt3dadd( -33.2267, 46.6297, 32.0192, 0.37 ) }
    dend_4 { pt3dadd( -33.9791, 46.4896, 32.3702, 0.37 ) }
    dend_4 { pt3dadd( -35.0653, 46.3893, 32.7327, 0.59 ) }
    dend_4 { pt3dadd( -35.7075, 46.3503, 33.0231, 0.37 ) }
    dend_4 { pt3dadd( -35.7868, 46.3451, 33.0728, 0.37 ) }
    dend_4 { pt3dadd( -36.4077, 46.2758, 33.6158, 0.37 ) }
    dend_4 { pt3dadd( -37.3346, 46.1489, 34.9308, 0.74 ) }
    dend_4 { pt3dadd( -37.93, 46.0409, 36.2536, 0.74 ) }
    dend_4 { pt3dadd( -38.3889, 45.966, 38.1841, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_4 { pt3dadd( -38.5075, 45.9842, 39.6002, 0.59 ) }
    dend_4 { pt3dadd( -38.4181, 46.0299, 40.789, 0.44 ) }
    dend_4 { pt3dadd( -38.0085, 46.1107, 42.6806, 0.44 ) }
    dend_4 { pt3dadd( -37.9777, 46.1154, 42.7628, 0.44 ) }
    dend_4 { pt3dadd( -37.4094, 46.1555, 43.9933, 0.44 ) }
    dend_4 { pt3dadd( -37.3795, 46.1469, 44.0631, 0.44 ) }
    dend_4 { pt3dadd( -37.1553, 45.5895, 45.4166, 0.44 ) }
    dend_4 { pt3dadd( -37.2294, 45.1603, 46.2917, 0.37 ) }
    dend_4 { pt3dadd( -37.2574, 45.1065, 46.409, 0.37 ) }
    dend_4 { pt3dadd( -37.7272, 44.5965, 47.6768, 0.66 ) }
    dend_4 { pt3dadd( -38.3008, 44.1773, 48.9309, 0.66 ) }
    dend_4 { pt3dadd( -38.3298, 44.1608, 48.9874, 0.66 ) }
    dend_4 { pt3dadd( -39.1827, 43.7961, 50.4632, 0.59 ) }
    dend_4 { pt3dadd( -39.9746, 43.5233, 51.7093, 0.29 ) }
    dend_4 { pt3dadd( -40.7197, 43.347, 52.6942, 0.29 ) }
    dend_4 { pt3dadd( -41.8923, 43.2298, 53.9647, 0.44 ) }
    dend_4 { pt3dadd( -42.6415, 43.2565, 54.6201, 0.29 ) }
    dend_4 { pt3dadd( -43.0357, 43.3114, 54.9027, 0.29 ) }
    dend_4 { pt3dadd( -43.7397, 43.5264, 55.3469, 0.29 ) }
    dend_4 { pt3dadd( -44.6398, 43.9511, 55.8637, 0.74 ) }
    dend_4 { pt3dadd( -44.98, 44.1993, 56.0448, 1.03 ) }
    dend_4 { pt3dadd( -45.8861, 45.09, 56.4065, 0.29 ) }
    dend_4 { pt3dadd( -46.443, 45.7839, 56.6654, 0.29 ) }
    dend_4 { pt3dadd( -47.4539, 47.3017, 57.285, 0.81 ) }
    // Section: dend_105, id: dend_105, parent: dend_103 (entry count 24/100)
    dend_105 { pt3dclear() }
    dend_105 { pt3dadd( 244.647, -123.25, -26.9627, 0.44 ) }
    dend_105 { pt3dadd( 245.691, -122.996, -24.5649, 0.44 ) }
    dend_105 { pt3dadd( 246.156, -122.863, -23.53, 0.29 ) }
    dend_105 { pt3dadd( 246.72, -122.684, -22.3384, 0.29 ) }
    dend_105 { pt3dadd( 247.235, -122.513, -21.2917, 0.88 ) }
    dend_105 { pt3dadd( 247.7, -122.331, -20.3909, 0.15 ) }
    dend_105 { pt3dadd( 247.888, -122.235, -20.0291, 0.81 ) }
    dend_105 { pt3dadd( 247.92, -122.21, -19.9782, 0.81 ) }
    dend_105 { pt3dadd( 248.125, -121.992, -19.6427, 1.03 ) }
    dend_105 { pt3dadd( 248.15, -121.958, -19.6077, 1.03 ) }
    dend_105 { pt3dadd( 248.797, -121.204, -18.8753, 0.22 ) }
    dend_105 { pt3dadd( 249.299, -120.712, -18.37, 0.22 ) }
    dend_105 { pt3dadd( 249.721, -120.356, -17.9789, 0.88 ) }
    dend_105 { pt3dadd( 249.761, -120.326, -17.9436, 0.88 ) }
    dend_105 { pt3dadd( 250.274, -119.973, -17.5174, 1.18 ) }
    dend_105 { pt3dadd( 251.696, -119.151, -16.4387, 0.22 ) }
    dend_105 { pt3dadd( 252.169, -118.94, -16.1209, 1.25 ) }
    dend_105 { pt3dadd( 253.027, -118.638, -15.5801, 0.22 ) }
    dend_105 { pt3dadd( 253.216, -118.578, -15.465, 0.37 ) }
    dend_105 { pt3dadd( 253.273, -118.561, -15.4317, 0.37 ) }
    dend_105 { pt3dadd( 254.102, -118.404, -14.9715, 0.15 ) }
    dend_105 { pt3dadd( 254.598, -118.369, -14.7422, 1.03 ) }
    dend_105 { pt3dadd( 254.647, -118.371, -14.7141, 1.03 ) }
    dend_105 { pt3dadd( 255.014, -118.42, -14.4723, 1.25 ) }
    dend_105 { pt3dadd( 255.058, -118.429, -14.4385, 1.25 ) }
    dend_105 { pt3dadd( 256.319, -118.81, -13.3692, 0.22 ) }
    dend_105 { pt3dadd( 256.806, -119.022, -12.9298, 0.22 ) }
    dend_105 { pt3dadd( 257.951, -119.604, -11.8715, 0.22 ) }
    dend_105 { pt3dadd( 258.022, -119.641, -11.81, 0.22 ) }
    dend_105 { pt3dadd( 258.462, -119.896, -11.4373, 1.18 ) }
    dend_105 { pt3dadd( 258.829, -120.097, -11.1303, 0.96 ) }
    dend_105 { pt3dadd( 259.386, -120.372, -10.666, 0.66 ) }
    dend_105 { pt3dadd( 259.57, -120.419, -10.5126, 0.66 ) }
    dend_105 { pt3dadd( 260.257, -120.354, -10.062, 0.29 ) }
    dend_105 { pt3dadd( 260.306, -120.34, -10.0282, 0.29 ) }
    dend_105 { pt3dadd( 260.824, -120.1, -9.6575, 0.22 ) }
    dend_105 { pt3dadd( 261.109, -119.93, -9.43064, 0.44 ) }
    dend_105 { pt3dadd( 261.828, -119.447, -8.82814, 0.22 ) }
    dend_105 { pt3dadd( 261.906, -119.401, -8.75458, 0.22 ) }
    dend_105 { pt3dadd( 262.388, -119.141, -8.25264, 0.88 ) }
    dend_105 { pt3dadd( 262.838, -118.921, -7.77884, 0.88 ) }
    dend_105 { pt3dadd( 262.881, -118.901, -7.73248, 0.88 ) }
    dend_105 { pt3dadd( 263.317, -118.688, -7.24481, 0.88 ) }
    dend_105 { pt3dadd( 264.196, -118.146, -6.24988, 0.22 ) }
    dend_105 { pt3dadd( 264.231, -118.123, -6.21084, 0.22 ) }
    dend_105 { pt3dadd( 264.529, -117.909, -5.89154, 0.88 ) }
    dend_105 { pt3dadd( 264.815, -117.701, -5.61487, 1.11 ) }
    dend_105 { pt3dadd( 264.86, -117.666, -5.5757, 1.11 ) }
    dend_105 { pt3dadd( 265.678, -117.007, -4.95161, 0.22 ) }
    dend_105 { pt3dadd( 266.251, -116.574, -4.6896, 0.22 ) }
    dend_105 { pt3dadd( 266.801, -116.168, -4.51481, 0.22 ) }
    dend_105 { pt3dadd( 267.381, -115.751, -4.38024, 0.88 ) }
    dend_105 { pt3dadd( 267.835, -115.4, -4.31241, 1.11 ) }
    dend_105 { pt3dadd( 268.268, -115.031, -4.28014, 1.11 ) }
    dend_105 { pt3dadd( 269.69, -113.732, -4.24718, 0.29 ) }
    dend_105 { pt3dadd( 270.365, -113.103, -4.22544, 0.22 ) }
    dend_105 { pt3dadd( 270.414, -113.06, -4.22278, 0.22 ) }
    dend_105 { pt3dadd( 271.129, -112.487, -4.13427, 0.88 ) }
    dend_105 { pt3dadd( 271.177, -112.452, -4.12442, 0.88 ) }
    dend_105 { pt3dadd( 272.193, -111.767, -3.77239, 0.22 ) }
    dend_105 { pt3dadd( 272.854, -111.315, -3.53765, 0.22 ) }
    dend_105 { pt3dadd( 273.218, -111.073, -3.43158, 0.74 ) }
    dend_105 { pt3dadd( 274.094, -110.485, -3.21519, 0.22 ) }
    dend_105 { pt3dadd( 274.147, -110.45, -3.20395, 0.22 ) }
    dend_105 { pt3dadd( 274.877, -109.925, -3.0847, 1.11 ) }
    dend_105 { pt3dadd( 276.745, -108.506, -2.88503, 0.22 ) }
    dend_105 { pt3dadd( 276.79, -108.471, -2.88082, 0.22 ) }
    dend_105 { pt3dadd( 277.513, -107.95, -2.81787, 0.96 ) }
    dend_105 { pt3dadd( 277.562, -107.92, -2.81457, 0.96 ) }
    dend_105 { pt3dadd( 278.067, -107.687, -2.8065, 1.11 ) }
    dend_105 { pt3dadd( 278.918, -107.414, -2.81024, 0.29 ) }
    dend_105 { pt3dadd( 279.037, -107.39, -2.80778, 0.29 ) }
    dend_105 { pt3dadd( 279.558, -107.289, -2.81406, 0.15 ) }
    dend_105 { pt3dadd( 280.421, -107.132, -2.85871, 1.18 ) }
    dend_105 { pt3dadd( 282.11, -106.786, -2.93426, 0.22 ) }
    dend_105 { pt3dadd( 282.526, -106.692, -2.95674, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_105 { pt3dadd( 282.589, -106.673, -2.95667, 0.74 ) }
    dend_105 { pt3dadd( 283.004, -106.532, -2.90867, 0.88 ) }
    dend_105 { pt3dadd( 283.111, -106.489, -2.88394, 0.88 ) }
    dend_105 { pt3dadd( 283.703, -106.201, -2.68173, 0.88 ) }
    dend_105 { pt3dadd( 283.807, -106.148, -2.63735, 0.88 ) }
    dend_105 { pt3dadd( 284.75, -105.605, -2.28515, 0.22 ) }
    dend_105 { pt3dadd( 285.569, -105.088, -2.00317, 0.22 ) }
    dend_105 { pt3dadd( 285.686, -105.01, -1.96556, 0.22 ) }
    dend_105 { pt3dadd( 286.571, -104.448, -1.70621, 1.11 ) }
    dend_105 { pt3dadd( 286.731, -104.348, -1.65998, 1.11 ) }
    dend_105 { pt3dadd( 287.825, -103.681, -1.33326, 0.22 ) }
    dend_105 { pt3dadd( 287.879, -103.652, -1.31202, 0.22 ) }
    dend_105 { pt3dadd( 288.237, -103.45, -1.12726, 0.59 ) }
    dend_105 { pt3dadd( 288.903, -103.1, -0.724597, 0.22 ) }
    dend_105 { pt3dadd( 289.299, -102.903, -0.444277, 1.03 ) }
    dend_105 { pt3dadd( 289.624, -102.742, -0.199761, 1.03 ) }
    dend_105 { pt3dadd( 290.898, -102.124, 0.829913, 0.22 ) }
    dend_105 { pt3dadd( 291.351, -101.867, 1.18026, 0.22 ) }
    dend_105 { pt3dadd( 291.392, -101.838, 1.20846, 0.22 ) }
    dend_105 { pt3dadd( 291.714, -101.557, 1.40492, 0.74 ) }
    dend_105 { pt3dadd( 291.758, -101.519, 1.42811, 0.74 ) }
    dend_105 { pt3dadd( 291.983, -101.317, 1.53856, 0.74 ) }
    dend_105 { pt3dadd( 292.737, -100.666, 1.84319, 0.22 ) }
    dend_105 { pt3dadd( 293.35, -100.2, 2.08807, 0.96 ) }
    dend_105 { pt3dadd( 293.733, -99.9059, 2.22517, 1.25 ) }
    dend_105 { pt3dadd( 294.646, -99.1805, 2.61014, 0.29 ) }
    dend_105 { pt3dadd( 294.691, -99.1439, 2.63163, 0.29 ) }
    dend_105 { pt3dadd( 295.051, -98.8692, 2.79828, 0.37 ) }
    dend_105 { pt3dadd( 295.1, -98.8327, 2.82165, 0.37 ) }
    dend_105 { pt3dadd( 296.129, -98.033, 3.29694, 0.22 ) }
    dend_105 { pt3dadd( 296.877, -97.412, 3.61073, 0.81 ) }
    dend_105 { pt3dadd( 296.927, -97.3712, 3.62916, 0.81 ) }
    dend_105 { pt3dadd( 298.387, -96.2707, 4.11228, 0.22 ) }
    dend_105 { pt3dadd( 298.71, -96.0394, 4.21186, 0.88 ) }
    dend_105 { pt3dadd( 299.742, -95.3799, 4.34984, 0.22 ) }
    dend_105 { pt3dadd( 299.95, -95.261, 4.35063, 0.44 ) }
    dend_105 { pt3dadd( 300.909, -94.7303, 4.23944, 0.22 ) }
    dend_105 { pt3dadd( 301.779, -94.2806, 4.03326, 0.88 ) }
    dend_105 { pt3dadd( 301.836, -94.2539, 4.01426, 0.88 ) }
    dend_105 { pt3dadd( 304.085, -93.2988, 3.1554, 0.22 ) }
    dend_105 { pt3dadd( 304.553, -93.118, 2.94202, 0.88 ) }
    dend_105 { pt3dadd( 304.601, -93.0994, 2.91969, 0.88 ) }
    dend_105 { pt3dadd( 306.179, -92.4876, 2.20192, 0.22 ) }
    dend_105 { pt3dadd( 306.788, -92.2546, 1.95474, 1.03 ) }
    dend_105 { pt3dadd( 306.838, -92.2361, 1.93715, 1.03 ) }
    dend_105 { pt3dadd( 309.091, -91.329, 1.37453, 0.22 ) }
    dend_105 { pt3dadd( 309.646, -91.0832, 1.24705, 0.74 ) }
    dend_105 { pt3dadd( 311.082, -90.367, 0.987195, 0.22 ) }
    dend_105 { pt3dadd( 311.483, -90.1323, 0.942811, 0.74 ) }
    dend_105 { pt3dadd( 311.534, -90.0978, 0.938736, 0.74 ) }
    dend_105 { pt3dadd( 312.87, -89.0039, 0.93399, 0.22 ) }
    dend_105 { pt3dadd( 312.908, -88.9612, 0.939474, 0.22 ) }
    dend_105 { pt3dadd( 313.253, -88.4884, 0.997468, 0.66 ) }
    dend_105 { pt3dadd( 313.37, -88.2972, 1.02497, 0.66 ) }
    dend_105 { pt3dadd( 314.033, -87.1716, 1.16265, 0.22 ) }
    dend_105 { pt3dadd( 314.307, -86.689, 1.21555, 0.52 ) }
    dend_105 { pt3dadd( 314.71, -85.9085, 1.27992, 0.22 ) }
    dend_105 { pt3dadd( 314.93, -85.4561, 1.30766, 0.81 ) }
    dend_105 { pt3dadd( 321.373, -81.8043, 5.51503, 0.81 ) }
    // Section: dend_104, id: dend_104, parent: dend_103 (entry count 59/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( 244.647, -123.25, -26.9627, 0.81 ) }
    dend_104 { pt3dadd( 245.638, -124.083, -27.3008, 0.81 ) }
    dend_104 { pt3dadd( 246.806, -124.956, -27.5739, 0.22 ) }
    dend_104 { pt3dadd( 247.735, -125.549, -27.7098, 0.22 ) }
    dend_104 { pt3dadd( 247.795, -125.584, -27.7158, 0.22 ) }
    dend_104 { pt3dadd( 248.577, -126.017, -27.7745, 0.81 ) }
    dend_104 { pt3dadd( 249.321, -126.419, -27.8149, 1.18 ) }
    dend_104 { pt3dadd( 250.104, -126.763, -27.8043, 1.33 ) }
    dend_104 { pt3dadd( 251.42, -127.301, -27.7159, 0.22 ) }
    dend_104 { pt3dadd( 251.839, -127.477, -27.695, 0.66 ) }
    dend_104 { pt3dadd( 251.918, -127.51, -27.6914, 0.66 ) }
    dend_104 { pt3dadd( 252.484, -127.774, -27.6687, 0.66 ) }
    dend_104 { pt3dadd( 252.551, -127.808, -27.6713, 0.66 ) }
    dend_104 { pt3dadd( 253.485, -128.388, -27.7911, 0.22 ) }
    dend_104 { pt3dadd( 253.544, -128.432, -27.8026, 0.22 ) }
    dend_104 { pt3dadd( 253.869, -128.696, -27.8823, 0.22 ) }
    dend_104 { pt3dadd( 254.324, -129.108, -27.9994, 0.22 ) }
    dend_104 { pt3dadd( 254.993, -129.781, -28.1786, 1.03 ) }
    dend_104 { pt3dadd( 255.044, -129.837, -28.202, 1.03 ) }
    dend_104 { pt3dadd( 255.428, -130.304, -28.4557, 1.03 ) }
    dend_104 { pt3dadd( 256.138, -131.228, -29.0267, 0.15 ) }
    dend_104 { pt3dadd( 256.621, -131.904, -29.465, 1.11 ) }
    dend_104 { pt3dadd( 256.909, -132.319, -29.7459, 1.4 ) }
    dend_104 { pt3dadd( 257.972, -133.885, -30.8073, 0.44 ) }
    dend_104 { pt3dadd( 258.278, -134.332, -31.13, 0.44 ) }
    dend_104 { pt3dadd( 258.667, -134.91, -31.5826, 0.22 ) }
    dend_104 { pt3dadd( 259.019, -135.468, -32.0213, 1.03 ) }
    dend_104 { pt3dadd( 259.052, -135.521, -32.0662, 1.03 ) }
    dend_104 { pt3dadd( 259.241, -135.857, -32.3483, 1.03 ) }
    dend_104 { pt3dadd( 259.838, -137.04, -33.2418, 0.22 ) }
    dend_104 { pt3dadd( 259.87, -137.09, -33.3001, 0.22 ) }
    dend_104 { pt3dadd( 260.343, -137.7, -34.2188, 0.22 ) }
    dend_104 { pt3dadd( 260.949, -138.39, -35.3843, 1.47 ) }
    dend_104 { pt3dadd( 261.206, -138.63, -35.8378, 1.4 ) }
    dend_104 { pt3dadd( 261.238, -138.654, -35.889, 1.4 ) }
    dend_104 { pt3dadd( 263.118, -139.579, -38.6462, 0.22 ) }
    dend_104 { pt3dadd( 263.593, -139.754, -39.2993, 1.25 ) }
    dend_104 { pt3dadd( 263.905, -139.832, -39.6884, 1.25 ) }
    dend_104 { pt3dadd( 265.211, -140.084, -41.233, 0.22 ) }
    dend_104 { pt3dadd( 265.579, -140.146, -41.6494, 0.59 ) }
    dend_104 { pt3dadd( 267.872, -140.569, -44.3254, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_104 { pt3dadd( 267.912, -140.578, -44.375, 1.4 ) }
    dend_104 { pt3dadd( 268.283, -140.673, -44.9338, 1.4 ) }
    dend_104 { pt3dadd( 269.9, -141.189, -47.886, 0.29 ) }
    dend_104 { pt3dadd( 270.133, -141.296, -48.3886, 0.66 ) }
    dend_104 { pt3dadd( 270.706, -141.698, -49.9503, 0.22 ) }
    dend_104 { pt3dadd( 270.97, -141.986, -50.9388, 1.4 ) }
    dend_104 { pt3dadd( 271.86, -143.362, -55.5741, 1.03 ) }
    dend_104 { pt3dadd( 272.117, -144.029, -57.7812, 0.52 ) }
    dend_104 { pt3dadd( 272.149, -144.499, -59.2939, 0.96 ) }
    dend_104 { pt3dadd( 272.037, -145.102, -61.3752, 0.22 ) }
    dend_104 { pt3dadd( 271.842, -145.441, -62.6334, 0.22 ) }
    dend_104 { pt3dadd( 271.644, -145.588, -63.2496, 0.66 ) }
    dend_104 { pt3dadd( 271.608, -145.594, -63.2939, 0.66 ) }
    dend_104 { pt3dadd( 271.091, -145.529, -63.7201, 0.66 ) }
    dend_104 { pt3dadd( 270.057, -145.154, -64.4125, 0.22 ) }
    dend_104 { pt3dadd( 269.689, -144.965, -64.6496, 0.81 ) }
    dend_104 { pt3dadd( 269.135, -144.673, -65.0346, 0.81 ) }
    dend_104 { pt3dadd( 268.36, -144.315, -65.5947, 0.22 ) }
    dend_104 { pt3dadd( 267.682, -144.052, -66.0809, 0.88 ) }
    dend_104 { pt3dadd( 267.248, -143.945, -66.4246, 1.11 ) }
    dend_104 { pt3dadd( 266.181, -143.867, -67.382, 0.22 ) }
    dend_104 { pt3dadd( 265.863, -143.9, -67.7054, 0.44 ) }
    dend_104 { pt3dadd( 265.336, -144.057, -68.2733, 0.22 ) }
    dend_104 { pt3dadd( 264.965, -144.188, -68.7061, 0.74 ) }
    dend_104 { pt3dadd( 264.02, -144.535, -69.9124, 0.22 ) }
    dend_104 { pt3dadd( 263.526, -144.69, -70.5266, 1.03 ) }
    dend_104 { pt3dadd( 263.049, -144.844, -71.2144, 0.74 ) }
    dend_104 { pt3dadd( 262.503, -145.01, -72.1051, 0.66 ) }
    dend_104 { pt3dadd( 261.553, -145.274, -73.7322, 0.15 ) }
    dend_104 { pt3dadd( 261.503, -145.286, -73.8183, 0.15 ) }
    dend_104 { pt3dadd( 260.985, -145.389, -74.7762, 1.18 ) }
    dend_104 { pt3dadd( 259.733, -145.659, -77.2975, 0.22 ) }
    dend_104 { pt3dadd( 259.682, -145.672, -77.4109, 0.22 ) }
    dend_104 { pt3dadd( 259.379, -145.772, -78.1202, 0.22 ) }
    dend_104 { pt3dadd( 259.143, -145.88, -78.6124, 1.11 ) }
    dend_104 { pt3dadd( 258.106, -146.384, -80.5145, 0.22 ) }
    dend_104 { pt3dadd( 258.072, -146.403, -80.5716, 0.22 ) }
    dend_104 { pt3dadd( 257.763, -146.563, -80.9588, 0.88 ) }
    dend_104 { pt3dadd( 257.429, -146.755, -81.3705, 1.11 ) }
    dend_104 { pt3dadd( 256.596, -147.318, -82.3734, 0.15 ) }
    dend_104 { pt3dadd( 255.967, -147.822, -83.0301, 0.15 ) }
    dend_104 { pt3dadd( 255.451, -148.316, -83.4532, 1.11 ) }
    dend_104 { pt3dadd( 255.148, -148.696, -83.7097, 1.11 ) }
    dend_104 { pt3dadd( 255.111, -148.758, -83.7425, 1.11 ) }
    dend_104 { pt3dadd( 254.784, -149.466, -84.0718, 0.81 ) }
    dend_104 { pt3dadd( 254.504, -150.239, -84.3993, 0.22 ) }
    dend_104 { pt3dadd( 254.35, -150.704, -84.5972, 0.59 ) }
    dend_104 { pt3dadd( 253.893, -152.056, -85.1996, 0.22 ) }
    dend_104 { pt3dadd( 253.621, -152.866, -85.5923, 0.22 ) }
    dend_104 { pt3dadd( 253.312, -153.763, -86.0654, 0.59 ) }
    dend_104 { pt3dadd( 253.143, -154.225, -86.3316, 0.44 ) }
    dend_104 { pt3dadd( 253.12, -154.282, -86.3683, 0.44 ) }
    dend_104 { pt3dadd( 252.923, -154.688, -86.6522, 0.22 ) }
    dend_104 { pt3dadd( 252.889, -154.744, -86.6939, 0.22 ) }
    dend_104 { pt3dadd( 252.598, -155.191, -87.0143, 0.44 ) }
    dend_104 { pt3dadd( 251.905, -156.225, -87.6091, 0.15 ) }
    dend_104 { pt3dadd( 251.873, -156.273, -87.6346, 0.15 ) }
    dend_104 { pt3dadd( 251.519, -156.832, -87.9334, 0.81 ) }
    dend_104 { pt3dadd( 251.694, -161.179, -96.6437, 0.81 ) }
    // Section: dend_98, id: dend_98, parent: dend_96 (entry count 59/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( 172.414, -227.235, 3.7616, 0.52 ) }
    dend_98 { pt3dadd( 173.425, -229.244, 5.56764, 0.52 ) }
    dend_98 { pt3dadd( 173.665, -229.73, 5.96425, 0.88 ) }
    dend_98 { pt3dadd( 173.886, -230.137, 6.27933, 0.52 ) }
    dend_98 { pt3dadd( 173.91, -230.172, 6.30539, 0.52 ) }
    dend_98 { pt3dadd( 174.28, -230.681, 6.65478, 0.37 ) }
    dend_98 { pt3dadd( 174.993, -231.709, 7.30312, 0.22 ) }
    dend_98 { pt3dadd( 175.288, -232.147, 7.49579, 1.47 ) }
    dend_98 { pt3dadd( 175.526, -232.546, 7.69421, 1.47 ) }
    dend_98 { pt3dadd( 176.015, -233.572, 8.21348, 0.22 ) }
    dend_98 { pt3dadd( 176.28, -234.271, 8.56925, 0.37 ) }
    dend_98 { pt3dadd( 176.514, -234.975, 8.92507, 0.81 ) }
    dend_98 { pt3dadd( 176.625, -235.4, 9.12299, 1.25 ) }
    dend_98 { pt3dadd( 176.828, -236.508, 9.66686, 0.66 ) }
    dend_98 { pt3dadd( 176.932, -237.708, 10.2699, 0.22 ) }
    dend_98 { pt3dadd( 176.903, -238.762, 10.8232, 0.81 ) }
    // Section: dend_97, id: dend_97, parent: dend_96 (entry count 75/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( 172.414, -227.235, 3.7616, 0.29 ) }
    dend_97 { pt3dadd( 173.78, -227.589, 3.99465, 0.29 ) }
    dend_97 { pt3dadd( 175.102, -228.034, 4.34542, 0.29 ) }
    dend_97 { pt3dadd( 175.184, -228.066, 4.37038, 0.29 ) }
    dend_97 { pt3dadd( 175.839, -228.337, 4.58517, 0.96 ) }
    dend_97 { pt3dadd( 176.489, -228.63, 4.80506, 0.96 ) }
    dend_97 { pt3dadd( 176.581, -228.676, 4.83536, 0.96 ) }
    dend_97 { pt3dadd( 177.954, -229.502, 5.36748, 0.22 ) }
    dend_97 { pt3dadd( 178.291, -229.747, 5.49906, 0.81 ) }
    dend_97 { pt3dadd( 178.354, -229.795, 5.52289, 0.81 ) }
    dend_97 { pt3dadd( 178.742, -230.129, 5.65971, 0.81 ) }
    dend_97 { pt3dadd( 179.348, -230.672, 5.85752, 0.81 ) }
    dend_97 { pt3dadd( 181.507, -232.64, 6.51363, 0.15 ) }
    dend_97 { pt3dadd( 182.518, -233.558, 6.79436, 0.15 ) }
    dend_97 { pt3dadd( 182.591, -233.624, 6.81465, 0.15 ) }
    dend_97 { pt3dadd( 183.702, -234.636, 7.12504, 0.15 ) }
    dend_97 { pt3dadd( 183.783, -234.71, 7.14814, 0.15 ) }
    dend_97 { pt3dadd( 186.34, -237.116, 7.88573, 0.15 ) }
    // Section: dend_94, id: dend_94, parent: dend_88 (entry count 93/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( 7.06294, -134.07, -20.1863, 0.29 ) }
    dend_94 { pt3dadd( 7.39611, -135.964, -20.4485, 0.29 ) }
    dend_94 { pt3dadd( 7.49728, -136.535, -20.5109, 0.74 ) }
    dend_94 { pt3dadd( 7.58604, -136.991, -20.5546, 0.74 ) }
    dend_94 { pt3dadd( 7.86761, -138.137, -20.704, 0.22 ) }
    dend_94 { pt3dadd( 8.18532, -139.231, -20.8676, 0.22 ) }
    dend_94 { pt3dadd( 8.46593, -140.274, -21.069, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_94 { pt3dadd( 8.63997, -140.874, -21.1988, 1.11 ) }
    dend_94 { pt3dadd( 8.85282, -141.464, -21.3682, 0.88 ) }
    dend_94 { pt3dadd( 9.39882, -142.7, -21.7914, 0.22 ) }
    dend_94 { pt3dadd( 9.59935, -143.09, -21.9481, 0.66 ) }
    dend_94 { pt3dadd( 10.4497, -144.534, -22.6285, 0.22 ) }
    dend_94 { pt3dadd( 11.3407, -145.894, -23.3416, 1.55 ) }
    dend_94 { pt3dadd( 12.3552, -147.185, -24.1656, 0.22 ) }
    dend_94 { pt3dadd( 12.7715, -147.646, -24.507, 0.22 ) }
    dend_94 { pt3dadd( 12.8222, -147.694, -24.5453, 0.22 ) }
    dend_94 { pt3dadd( 13.5177, -148.243, -25.0608, 0.81 ) }
    dend_94 { pt3dadd( 13.8012, -148.422, -25.2522, 0.81 ) }
    dend_94 { pt3dadd( 15.078, -149.207, -26.2276, 0.22 ) }
    dend_94 { pt3dadd( 15.1369, -149.252, -26.2841, 0.22 ) }
    dend_94 { pt3dadd( 16.0267, -150.079, -27.1596, 0.22 ) }
    dend_94 { pt3dadd( 16.703, -150.76, -27.8299, 0.22 ) }
    dend_94 { pt3dadd( 17.1245, -151.211, -28.2372, 1.55 ) }
    dend_94 { pt3dadd( 17.8523, -152.018, -28.962, 1.69 ) }
    dend_94 { pt3dadd( 18.9842, -153.301, -30.1254, 0.22 ) }
    dend_94 { pt3dadd( 19.8241, -154.213, -31.0034, 0.22 ) }
    dend_94 { pt3dadd( 20.7065, -155.118, -31.911, 1.03 ) }
    dend_94 { pt3dadd( 21.0249, -155.418, -32.2204, 1.77 ) }
    dend_94 { pt3dadd( 21.9198, -156.17, -33.0334, 1.77 ) }
    dend_94 { pt3dadd( 23.9446, -157.565, -34.7885, 0.22 ) }
    dend_94 { pt3dadd( 24.0741, -157.634, -34.9011, 0.66 ) }
    dend_94 { pt3dadd( 24.8993, -158.002, -35.6428, 0.22 ) }
    dend_94 { pt3dadd( 25.6307, -158.298, -36.2955, 1.47 ) }
    dend_94 { pt3dadd( 26.2849, -158.524, -36.8653, 1.84 ) }
    dend_94 { pt3dadd( 28.0226, -159.036, -38.1929, 0.44 ) }
    dend_94 { pt3dadd( 29.1332, -159.307, -38.9202, 0.88 ) }
    dend_94 { pt3dadd( 29.5985, -159.431, -39.1954, 0.74 ) }
    dend_94 { pt3dadd( 29.7538, -159.478, -39.2684, 0.74 ) }
    dend_94 { pt3dadd( 30.6365, -159.79, -39.5572, 0.52 ) }
    dend_94 { pt3dadd( 32.4223, -160.507, -39.9282, 0.22 ) }
    dend_94 { pt3dadd( 32.993, -160.761, -39.9734, 0.96 ) }
    dend_94 { pt3dadd( 33.4043, -160.947, -39.9892, 0.96 ) }
    dend_94 { pt3dadd( 35.1999, -161.761, -40.0719, 0.22 ) }
    dend_94 { pt3dadd( 35.8831, -162.082, -40.1094, 0.22 ) }
    dend_94 { pt3dadd( 36.5344, -162.401, -40.129, 0.81 ) }
    dend_94 { pt3dadd( 36.8315, -162.548, -40.121, 0.81 ) }
    dend_94 { pt3dadd( 37.7996, -163.043, -40.0645, 0.22 ) }
    dend_94 { pt3dadd( 38.4694, -163.396, -39.9879, 1.55 ) }
    dend_94 { pt3dadd( 38.7797, -163.565, -39.933, 1.55 ) }
    dend_94 { pt3dadd( 40.4608, -164.459, -39.6172, 0.22 ) }
    dend_94 { pt3dadd( 41.3503, -164.952, -39.4535, 0.88 ) }
    dend_94 { pt3dadd( 41.783, -165.199, -39.3813, 1.11 ) }
    dend_94 { pt3dadd( 41.8539, -165.241, -39.3706, 1.11 ) }
    dend_94 { pt3dadd( 42.4839, -165.639, -39.2967, 0.74 ) }
    dend_94 { pt3dadd( 43.5815, -166.353, -39.2419, 0.22 ) }
    dend_94 { pt3dadd( 44.3686, -166.907, -39.2897, 0.22 ) }
    dend_94 { pt3dadd( 45.0937, -167.392, -39.3698, 0.81 ) }
    dend_94 { pt3dadd( 45.1582, -167.433, -39.3769, 0.81 ) }
    dend_94 { pt3dadd( 45.6406, -167.729, -39.4302, 1.18 ) }
    dend_94 { pt3dadd( 46.4199, -168.185, -39.4866, 0.37 ) }
    dend_94 { pt3dadd( 47.7309, -168.872, -39.5494, 0.22 ) }
    dend_94 { pt3dadd( 48.5236, -169.253, -39.578, 0.22 ) }
    dend_94 { pt3dadd( 49.0886, -169.516, -39.5951, 0.88 ) }
    dend_94 { pt3dadd( 49.7415, -169.809, -39.6115, 1.03 ) }
    dend_94 { pt3dadd( 51.4512, -170.493, -39.5881, 0.22 ) }
    dend_94 { pt3dadd( 52.7211, -170.975, -39.5296, 0.22 ) }
    dend_94 { pt3dadd( 53.281, -171.18, -39.4927, 1.25 ) }
    dend_94 { pt3dadd( 53.7639, -171.362, -39.4398, 1.55 ) }
    dend_94 { pt3dadd( 54.6525, -171.695, -39.3147, 0.52 ) }
    dend_94 { pt3dadd( 56.6305, -172.464, -39.0102, 0.22 ) }
    dend_94 { pt3dadd( 56.7006, -172.494, -38.9981, 0.22 ) }
    dend_94 { pt3dadd( 57.9791, -173.07, -38.7458, 0.22 ) }
    dend_94 { pt3dadd( 58.7994, -173.465, -38.5917, 0.96 ) }
    dend_94 { pt3dadd( 59.2532, -173.702, -38.5126, 0.96 ) }
    dend_94 { pt3dadd( 60.6955, -174.52, -38.2929, 0.22 ) }
    dend_94 { pt3dadd( 61.2254, -174.824, -38.2421, 0.52 ) }
    dend_94 { pt3dadd( 61.6897, -175.073, -38.2115, 0.52 ) }
    dend_94 { pt3dadd( 62.7534, -175.626, -38.1493, 0.22 ) }
    dend_94 { pt3dadd( 63.4552, -175.985, -38.1303, 1.11 ) }
    dend_94 { pt3dadd( 63.5218, -176.015, -38.1252, 1.11 ) }
    dend_94 { pt3dadd( 64.4676, -176.344, -38.0216, 0.22 ) }
    dend_94 { pt3dadd( 65.2614, -176.578, -37.9284, 0.22 ) }
    dend_94 { pt3dadd( 65.9492, -176.759, -37.7906, 1.11 ) }
    dend_94 { pt3dadd( 66.3996, -176.849, -37.6698, 1.33 ) }
    dend_94 { pt3dadd( 67.9527, -177.11, -37.1918, 0.22 ) }
    dend_94 { pt3dadd( 68.6681, -177.226, -36.9526, 0.88 ) }
    dend_94 { pt3dadd( 68.7398, -177.238, -36.9245, 0.88 ) }
    dend_94 { pt3dadd( 70.2902, -177.528, -36.3082, 0.22 ) }
    dend_94 { pt3dadd( 70.6951, -177.615, -36.1606, 0.96 ) }
    dend_94 { pt3dadd( 70.7614, -177.633, -36.1367, 0.96 ) }
    dend_94 { pt3dadd( 71.2347, -177.787, -35.9836, 0.96 ) }
    dend_94 { pt3dadd( 72.4744, -178.232, -35.634, 0.15 ) }
    dend_94 { pt3dadd( 73.4736, -178.579, -35.43, 0.15 ) }
    dend_94 { pt3dadd( 74.2827, -178.85, -35.3442, 0.15 ) }
    dend_94 { pt3dadd( 74.7293, -178.996, -35.3045, 0.81 ) }
    dend_94 { pt3dadd( 75.3385, -179.187, -35.2621, 1.03 ) }
    dend_94 { pt3dadd( 75.7712, -179.324, -35.2154, 1.25 ) }
    dend_94 { pt3dadd( 76.9152, -179.681, -35.0741, 0.22 ) }
    dend_94 { pt3dadd( 77.8906, -179.947, -34.9224, 0.22 ) }
    dend_94 { pt3dadd( 78.513, -180.119, -34.8107, 0.88 ) }
    dend_94 { pt3dadd( 79.1681, -180.301, -34.686, 1.03 ) }
    dend_94 { pt3dadd( 80.8345, -180.783, -34.3447, 0.22 ) }
    dend_94 { pt3dadd( 80.899, -180.801, -34.3308, 0.22 ) }
    dend_94 { pt3dadd( 82.0286, -181.139, -34.03, 0.22 ) }
    dend_94 { pt3dadd( 82.1093, -181.162, -34.0059, 0.22 ) }
    dend_94 { pt3dadd( 82.8234, -181.31, -33.8116, 0.52 ) }
    dend_94 { pt3dadd( 83.1611, -181.349, -33.726, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_94 { pt3dadd( 83.341, -181.367, -33.6921, 0.74 ) }
    dend_94 { pt3dadd( 84.5377, -181.551, -33.4385, 0.22 ) }
    dend_94 { pt3dadd( 84.6063, -181.567, -33.4218, 0.22 ) }
    dend_94 { pt3dadd( 85.4814, -181.841, -33.1491, 0.22 ) }
    dend_94 { pt3dadd( 86.1157, -182.096, -32.9231, 0.81 ) }
    dend_94 { pt3dadd( 86.7299, -182.406, -32.7059, 1.03 ) }
    dend_94 { pt3dadd( 86.9343, -182.509, -32.6368, 1.03 ) }
    dend_94 { pt3dadd( 87.292, -182.688, -32.5267, 1.03 ) }
    dend_94 { pt3dadd( 88.5449, -183.283, -32.1339, 0.22 ) }
    dend_94 { pt3dadd( 89.0493, -183.507, -31.9819, 0.88 ) }
    dend_94 { pt3dadd( 89.5115, -183.674, -31.8579, 0.88 ) }
    dend_94 { pt3dadd( 90.9075, -184.068, -31.5369, 0.29 ) }
    dend_94 { pt3dadd( 91.1322, -184.135, -31.4966, 0.44 ) }
    dend_94 { pt3dadd( 91.5059, -184.277, -31.4549, 0.44 ) }
    dend_94 { pt3dadd( 92.2297, -184.62, -31.4356, 0.22 ) }
    dend_94 { pt3dadd( 92.5644, -184.814, -31.4333, 0.96 ) }
    dend_94 { pt3dadd( 93.0029, -185.153, -31.4052, 0.96 ) }
    dend_94 { pt3dadd( 93.9322, -186.074, -31.3176, 0.29 ) }
    dend_94 { pt3dadd( 94.6975, -186.913, -31.2189, 0.29 ) }
    dend_94 { pt3dadd( 95.0045, -187.288, -31.1673, 1.11 ) }
    dend_94 { pt3dadd( 95.3901, -187.809, -31.0879, 1.55 ) }
    dend_94 { pt3dadd( 96.4705, -189.353, -30.8039, 0.29 ) }
    dend_94 { pt3dadd( 96.9747, -190.094, -30.6563, 0.52 ) }
    dend_94 { pt3dadd( 97.29, -190.548, -30.5628, 0.88 ) }
    dend_94 { pt3dadd( 98.0591, -191.62, -30.3554, 0.22 ) }
    dend_94 { pt3dadd( 98.3254, -191.994, -30.295, 0.96 ) }
    dend_94 { pt3dadd( 99.1498, -193.136, -30.1543, 0.29 ) }
    dend_94 { pt3dadd( 99.7611, -193.949, -30.1018, 0.29 ) }
    dend_94 { pt3dadd( 100.183, -194.501, -30.1036, 0.29 ) }
    dend_94 { pt3dadd( 100.924, -195.477, -30.2027, 0.22 ) }
    dend_94 { pt3dadd( 101.307, -195.975, -30.3115, 0.88 ) }
    dend_94 { pt3dadd( 101.606, -196.364, -30.4327, 1.33 ) }
    dend_94 { pt3dadd( 101.646, -196.418, -30.4557, 1.33 ) }
    dend_94 { pt3dadd( 102.49, -197.547, -31.0017, 0.22 ) }
    dend_94 { pt3dadd( 102.875, -198.045, -31.2919, 0.81 ) }
    dend_94 { pt3dadd( 103.278, -198.459, -31.6638, 0.81 ) }
    dend_94 { pt3dadd( 103.381, -198.549, -31.761, 0.81 ) }
    dend_94 { pt3dadd( 103.955, -199.028, -32.3709, 0.81 ) }
    dend_94 { pt3dadd( 103.993, -199.06, -32.4135, 0.81 ) }
    dend_94 { pt3dadd( 104.535, -199.493, -33.0241, 0.81 ) }
    dend_94 { pt3dadd( 105.712, -200.328, -34.4609, 0.22 ) }
    dend_94 { pt3dadd( 106.076, -200.571, -34.9417, 0.44 ) }
    dend_94 { pt3dadd( 107.086, -201.118, -36.2077, 0.96 ) }
    dend_94 { pt3dadd( 107.31, -201.217, -36.4686, 1.11 ) }
    dend_94 { pt3dadd( 107.474, -201.275, -36.6389, 1.11 ) }
    dend_94 { pt3dadd( 108.962, -201.698, -38.062, 0.22 ) }
    dend_94 { pt3dadd( 109.014, -201.706, -38.1053, 0.22 ) }
    dend_94 { pt3dadd( 110.208, -201.717, -39.0052, 0.66 ) }
    dend_94 { pt3dadd( 110.879, -201.626, -39.3986, 0.66 ) }
    dend_94 { pt3dadd( 110.942, -201.615, -39.4332, 0.66 ) }
    dend_94 { pt3dadd( 120.019, -207.559, -40.9538, 0.66 ) }
    // Section: dend_89, id: dend_89, parent: dend_88 (entry count 51/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( 7.06294, -134.07, -20.1863, 0.59 ) }
    dend_89 { pt3dadd( 6.43689, -135.334, -19.911, 0.59 ) }
    dend_89 { pt3dadd( 6.09634, -136.155, -19.7588, 0.37 ) }
    dend_89 { pt3dadd( 6.06718, -136.235, -19.7435, 0.37 ) }
    dend_89 { pt3dadd( 5.59092, -137.819, -19.4626, 0.81 ) }
    dend_89 { pt3dadd( 5.28414, -138.924, -19.2882, 1.18 ) }
    dend_89 { pt3dadd( 5.04018, -139.839, -19.1852, 1.33 ) }
    dend_89 { pt3dadd( 4.83796, -140.774, -19.0985, 1.03 ) }
    dend_89 { pt3dadd( 4.6052, -141.907, -19.06, 0.66 ) }
    dend_89 { pt3dadd( 4.44114, -142.768, -19.0759, 0.44 ) }
    dend_89 { pt3dadd( 4.18016, -144.411, -19.2058, 0.29 ) }
    dend_89 { pt3dadd( 4.06558, -145.43, -19.3369, 0.96 ) }
    dend_89 { pt3dadd( 4.02999, -146.109, -19.4562, 1.11 ) }
    dend_89 { pt3dadd( 4.04165, -147.7, -19.8013, 0.37 ) }
    dend_89 { pt3dadd( 4.13853, -148.898, -20.0791, 0.29 ) }
    dend_89 { pt3dadd( 4.28779, -149.827, -20.2845, 1.11 ) }
    dend_89 { pt3dadd( 4.60659, -151.057, -20.5453, 1.47 ) }
    dend_89 { pt3dadd( 4.90906, -151.98, -20.7198, 1.69 ) }
    dend_89 { pt3dadd( 5.20749, -152.859, -20.9563, 1.25 ) }
    dend_89 { pt3dadd( 5.6058, -154.155, -21.3799, 0.66 ) }
    dend_89 { pt3dadd( 5.80566, -155.189, -21.7772, 0.52 ) }
    dend_89 { pt3dadd( 5.89648, -156.196, -22.2079, 0.29 ) }
    dend_89 { pt3dadd( 5.87591, -156.586, -22.3936, 0.29 ) }
    dend_89 { pt3dadd( 5.40883, -158.962, -23.7048, 0.88 ) }
    dend_89 { pt3dadd( 5.09187, -159.856, -24.2504, 1.11 ) }
    dend_89 { pt3dadd( 4.67103, -160.69, -24.7783, 1.18 ) }
    dend_89 { pt3dadd( 4.60384, -160.8, -24.8407, 1.18 ) }
    dend_89 { pt3dadd( 4.06361, -161.62, -25.2352, 1.11 ) }
    dend_89 { pt3dadd( 4.01093, -161.704, -25.2654, 1.11 ) }
    dend_89 { pt3dadd( 3.55583, -162.524, -25.4241, 1.11 ) }
    dend_89 { pt3dadd( 3.1635, -163.297, -25.5512, 0.66 ) }
    dend_89 { pt3dadd( 2.5082, -164.721, -25.7214, 0.29 ) }
    dend_89 { pt3dadd( 2.46873, -164.818, -25.7301, 0.29 ) }
    dend_89 { pt3dadd( 2.15657, -165.713, -25.7679, 0.88 ) }
    dend_89 { pt3dadd( 1.89541, -166.602, -25.7885, 1.11 ) }
    dend_89 { pt3dadd( 1.55905, -168.147, -25.7986, 0.66 ) }
    dend_89 { pt3dadd( 1.3558, -169.458, -25.7808, 0.37 ) }
    dend_89 { pt3dadd( 1.29718, -170.522, -25.7541, 0.29 ) }
    dend_89 { pt3dadd( 1.34363, -171.271, -25.7954, 0.66 ) }
    dend_89 { pt3dadd( 1.5019, -171.949, -25.8971, 0.66 ) }
    dend_89 { pt3dadd( 1.84066, -172.747, -26.2955, 0.66 ) }
    dend_89 { pt3dadd( 1.88086, -172.821, -26.3507, 0.66 ) }
    dend_89 { pt3dadd( 2.44383, -173.722, -27.1625, 0.96 ) }
    dend_89 { pt3dadd( 3.38127, -175.049, -28.5363, 1.62 ) }
    dend_89 { pt3dadd( 4.06206, -175.948, -29.5542, 1.99 ) }
    dend_89 { pt3dadd( 6.08995, -178.46, -32.6025, 0.66 ) }
    dend_89 { pt3dadd( 6.13221, -178.51, -32.6665, 0.66 ) }
    dend_89 { pt3dadd( 6.70593, -179.162, -33.5046, 0.66 ) }
    dend_89 { pt3dadd( 7.5944, -180.13, -34.7213, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_89 { pt3dadd( 7.63659, -180.175, -34.7728, 0.66 ) }
    dend_89 { pt3dadd( 8.46104, -181.05, -35.5778, 0.29 ) }
    dend_89 { pt3dadd( 8.52695, -181.122, -35.6113, 0.29 ) }
    dend_89 { pt3dadd( 9.13727, -181.935, -35.8654, 0.66 ) }
    dend_89 { pt3dadd( 9.7331, -183.007, -36.0169, 0.66 ) }
    dend_89 { pt3dadd( 9.77399, -183.104, -36.0184, 0.66 ) }
    dend_89 { pt3dadd( 10.2836, -184.569, -36.0264, 0.52 ) }
    dend_89 { pt3dadd( 10.304, -184.645, -36.0255, 0.52 ) }
    dend_89 { pt3dadd( 10.6515, -186.253, -36.1233, 1.4 ) }
    dend_89 { pt3dadd( 10.8529, -187.524, -36.2707, 1.92 ) }
    dend_89 { pt3dadd( 10.9288, -188.08, -36.3731, 1.99 ) }
    dend_89 { pt3dadd( 11.1435, -189.746, -36.7774, 0.96 ) }
    dend_89 { pt3dadd( 11.2757, -190.907, -37.1501, 0.81 ) }
    dend_89 { pt3dadd( 11.4515, -192.346, -37.6673, 0.81 ) }
    dend_89 { pt3dadd( 11.5972, -193.363, -38.0801, 0.52 ) }
    dend_89 { pt3dadd( 11.7539, -194.362, -38.5324, 0.44 ) }
    dend_89 { pt3dadd( 11.7768, -194.502, -38.5967, 0.44 ) }
    dend_89 { pt3dadd( 11.9381, -195.434, -38.9881, 1.11 ) }
    dend_89 { pt3dadd( 12.0634, -196.145, -39.2411, 1.11 ) }
    dend_89 { pt3dadd( 12.1953, -196.959, -39.4413, 0.74 ) }
    dend_89 { pt3dadd( 12.3354, -198.231, -39.6744, 0.44 ) }
    dend_89 { pt3dadd( 12.3828, -199.047, -39.7661, 0.44 ) }
    dend_89 { pt3dadd( 12.4512, -199.951, -39.8363, 1.11 ) }
    dend_89 { pt3dadd( 12.5447, -200.704, -39.8747, 1.18 ) }
    dend_89 { pt3dadd( 12.7053, -201.684, -39.9447, 1.11 ) }
    dend_89 { pt3dadd( 12.9593, -202.94, -40.0497, 0.52 ) }
    dend_89 { pt3dadd( 13.1465, -203.685, -40.1558, 0.29 ) }
    dend_89 { pt3dadd( 13.5402, -205.013, -40.4434, 0.29 ) }
    dend_89 { pt3dadd( 13.9157, -206.159, -40.762, 0.29 ) }
    dend_89 { pt3dadd( 14.2857, -207.271, -41.1438, 0.96 ) }
    dend_89 { pt3dadd( 14.5574, -208.12, -41.4662, 1.47 ) }
    dend_89 { pt3dadd( 14.9729, -209.762, -42.0726, 1.4 ) }
    dend_89 { pt3dadd( 14.9865, -209.85, -42.1009, 1.4 ) }
    dend_89 { pt3dadd( 15.0547, -210.99, -42.3967, 1.03 ) }
    dend_89 { pt3dadd( 15.0946, -212.612, -42.8338, 0.52 ) }
    dend_89 { pt3dadd( 15.1358, -213.931, -43.1807, 0.37 ) }
    dend_89 { pt3dadd( 15.2036, -215.619, -43.6371, 0.29 ) }
    dend_89 { pt3dadd( 15.2638, -216.968, -43.993, 1.25 ) }
    dend_89 { pt3dadd( 15.3183, -217.876, -44.2424, 1.47 ) }
    dend_89 { pt3dadd( 15.5241, -220.271, -44.9056, 0.44 ) }
    dend_89 { pt3dadd( 15.6198, -221.106, -45.1199, 0.44 ) }
    dend_89 { pt3dadd( 15.7815, -222.244, -45.412, 1.25 ) }
    dend_89 { pt3dadd( 15.8891, -222.88, -45.568, 1.4 ) }
    dend_89 { pt3dadd( 16.0996, -224.061, -45.8269, 1.11 ) }
    dend_89 { pt3dadd( 16.3687, -225.612, -46.0887, 0.37 ) }
    dend_89 { pt3dadd( 16.636, -227.194, -46.2538, 0.37 ) }
    dend_89 { pt3dadd( 16.8542, -228.395, -46.3731, 0.37 ) }
    dend_89 { pt3dadd( 17.0482, -229.367, -46.4608, 0.37 ) }
    dend_89 { pt3dadd( 17.3957, -230.877, -46.5933, 1.33 ) }
    dend_89 { pt3dadd( 17.5818, -231.539, -46.6549, 1.77 ) }
    dend_89 { pt3dadd( 17.8082, -232.18, -46.7188, 1.99 ) }
    dend_89 { pt3dadd( 18.3368, -233.41, -46.8478, 1.62 ) }
    dend_89 { pt3dadd( 18.9246, -234.638, -46.9756, 0.81 ) }
    dend_89 { pt3dadd( 19.5225, -235.829, -47.0919, 0.29 ) }
    dend_89 { pt3dadd( 20.1252, -237.054, -47.1944, 0.37 ) }
    dend_89 { pt3dadd( 20.6066, -238.125, -47.2781, 0.66 ) }
    dend_89 { pt3dadd( 20.9367, -239.016, -47.3386, 0.29 ) }
    dend_89 { pt3dadd( 21.1668, -239.922, -47.4008, 0.29 ) }
    dend_89 { pt3dadd( 21.2569, -240.609, -47.4483, 0.59 ) }
    dend_89 { pt3dadd( 21.2127, -241.303, -47.4921, 0.74 ) }
    dend_89 { pt3dadd( 20.9285, -242.345, -47.6061, 0.52 ) }
    dend_89 { pt3dadd( 20.3853, -243.483, -47.767, 1.18 ) }
    dend_89 { pt3dadd( 19.803, -244.426, -47.9244, 1.55 ) }
    dend_89 { pt3dadd( 19.7532, -244.495, -47.9377, 1.55 ) }
    dend_89 { pt3dadd( 19.0976, -245.361, -48.1209, 1.25 ) }
    dend_89 { pt3dadd( 17.9709, -246.807, -48.4579, 0.37 ) }
    dend_89 { pt3dadd( 17.1449, -247.884, -48.7213, 0.22 ) }
    dend_89 { pt3dadd( 16.864, -248.253, -48.8107, 0.22 ) }
    dend_89 { pt3dadd( 16.6125, -248.654, -48.8888, 0.81 ) }
    dend_89 { pt3dadd( 16.3572, -249.252, -48.9398, 1.03 ) }
    dend_89 { pt3dadd( 16.3387, -249.346, -48.9368, 1.03 ) }
    dend_89 { pt3dadd( 16.2762, -250.304, -48.8105, 0.29 ) }
    dend_89 { pt3dadd( 16.2731, -250.39, -48.7955, 0.29 ) }
    dend_89 { pt3dadd( 16.1591, -251.707, -48.527, 0.29 ) }
    dend_89 { pt3dadd( 15.9234, -253.163, -48.1961, 1.03 ) }
    dend_89 { pt3dadd( 15.7612, -253.795, -48.0486, 1.18 ) }
    dend_89 { pt3dadd( 15.4794, -254.713, -47.8439, 1.18 ) }
    dend_89 { pt3dadd( 15.0858, -255.88, -47.5986, 1.03 ) }
    dend_89 { pt3dadd( 14.8031, -256.723, -47.4436, 0.66 ) }
    dend_89 { pt3dadd( 14.5145, -257.628, -47.3561, 0.29 ) }
    dend_89 { pt3dadd( 14.188, -259.015, -47.3807, 0.22 ) }
    dend_89 { pt3dadd( 14.0653, -259.936, -47.4618, 0.88 ) }
    dend_89 { pt3dadd( 14.0243, -260.608, -47.5573, 1.25 ) }
    dend_89 { pt3dadd( 14.0085, -261.381, -47.6999, 1.18 ) }
    dend_89 { pt3dadd( 13.9965, -263.112, -48.0297, 0.29 ) }
    dend_89 { pt3dadd( 13.9534, -264.585, -48.3052, 0.29 ) }
    dend_89 { pt3dadd( 13.8616, -265.671, -48.497, 0.88 ) }
    dend_89 { pt3dadd( 13.6582, -266.77, -48.6589, 1.11 ) }
    dend_89 { pt3dadd( 13.5082, -267.245, -48.7056, 1.11 ) }
    dend_89 { pt3dadd( 13.0444, -268.245, -48.7378, 0.29 ) }
    dend_89 { pt3dadd( 12.5781, -269.081, -48.695, 0.29 ) }
    dend_89 { pt3dadd( 12.3291, -269.517, -48.6697, 0.88 ) }
    dend_89 { pt3dadd( 12.0481, -270.068, -48.6391, 1.18 ) }
    dend_89 { pt3dadd( 11.5582, -271.179, -48.5896, 1.18 ) }
    dend_89 { pt3dadd( 11.1931, -272.235, -48.5582, 0.96 ) }
    dend_89 { pt3dadd( 10.865, -273.656, -48.5523, 0.29 ) }
    dend_89 { pt3dadd( 10.7822, -274.672, -48.5814, 0.88 ) }
    dend_89 { pt3dadd( 10.8196, -275.346, -48.6203, 1.25 ) }
    dend_89 { pt3dadd( 10.8376, -275.438, -48.634, 1.25 ) }
    dend_89 { pt3dadd( 11.0682, -276.153, -48.8059, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_89 { pt3dadd( 11.4723, -277.196, -49.1152, 0.59 ) }
    dend_89 { pt3dadd( 11.9314, -278.316, -49.495, 0.37 ) }
    dend_89 { pt3dadd( 12.2594, -279.142, -49.7777, 0.37 ) }
    dend_89 { pt3dadd( 12.8171, -280.684, -50.332, 0.88 ) }
    dend_89 { pt3dadd( 13.1981, -281.853, -50.7472, 1.18 ) }
    dend_89 { pt3dadd( 13.4613, -282.859, -51.0855, 1.18 ) }
    dend_89 { pt3dadd( 13.4795, -282.955, -51.1126, 1.18 ) }
    dend_89 { pt3dadd( 13.562, -283.949, -51.3251, 1.18 ) }
    dend_89 { pt3dadd( 13.5599, -285.242, -51.4807, 1.25 ) }
    dend_89 { pt3dadd( 13.4464, -286.64, -51.4959, 0.29 ) }
    dend_89 { pt3dadd( 13.2824, -287.863, -51.4483, 0.22 ) }
    dend_89 { pt3dadd( 13.1037, -289.08, -51.3656, 1.18 ) }
    dend_89 { pt3dadd( 12.977, -290.168, -51.328, 1.18 ) }
    dend_89 { pt3dadd( 12.8935, -291.247, -51.327, 0.96 ) }
    dend_89 { pt3dadd( 12.8377, -292.689, -51.3618, 0.29 ) }
    dend_89 { pt3dadd( 12.8476, -293.435, -51.4005, 0.29 ) }
    dend_89 { pt3dadd( 12.9363, -294.312, -51.4828, 0.44 ) }
    dend_89 { pt3dadd( 13.3874, -296.529, -51.7914, 0.44 ) }
    dend_89 { pt3dadd( 13.7315, -297.743, -52.0505, 0.44 ) }
    dend_89 { pt3dadd( 13.7584, -297.827, -52.0727, 0.44 ) }
    dend_89 { pt3dadd( 14.0774, -298.878, -52.4166, 1.11 ) }
    dend_89 { pt3dadd( 14.2945, -299.777, -52.727, 1.33 ) }
    dend_89 { pt3dadd( 14.4256, -300.883, -53.2148, 1.11 ) }
    dend_89 { pt3dadd( 14.3674, -302.544, -54.0115, 0.29 ) }
    dend_89 { pt3dadd( 14.2153, -303.665, -54.5944, 0.29 ) }
    dend_89 { pt3dadd( 13.9584, -305.058, -55.2958, 1.03 ) }
    dend_89 { pt3dadd( 13.7963, -305.799, -55.6689, 1.18 ) }
    dend_89 { pt3dadd( 13.1512, -308.485, -56.9189, 0.37 ) }
    dend_89 { pt3dadd( 12.7923, -309.99, -57.4939, 0.29 ) }
    dend_89 { pt3dadd( 12.6617, -310.724, -57.6433, 0.22 ) }
    dend_89 { pt3dadd( 12.5457, -312.088, -57.6956, 1.33 ) }
    dend_89 { pt3dadd( 12.5712, -312.946, -57.5629, 1.11 ) }
    dend_89 { pt3dadd( 12.6811, -313.871, -57.2951, 0.59 ) }
    dend_89 { pt3dadd( 12.9142, -315.114, -56.7864, 0.44 ) }
    dend_89 { pt3dadd( 13.2619, -316.67, -56.1971, 0.29 ) }
    dend_89 { pt3dadd( 13.3466, -317.17, -56.0328, 0.81 ) }
    dend_89 { pt3dadd( 13.3973, -317.821, -55.8628, 0.81 ) }
    dend_89 { pt3dadd( 13.3851, -318.531, -55.802, 0.74 ) }
    dend_89 { pt3dadd( 13.3125, -319.818, -55.9799, 0.29 ) }
    dend_89 { pt3dadd( 13.2897, -320.571, -56.235, 0.96 ) }
    dend_89 { pt3dadd( 13.347, -321.388, -56.638, 1.11 ) }
    dend_89 { pt3dadd( 13.5154, -322.399, -57.2221, 1.11 ) }
    dend_89 { pt3dadd( 14.2081, -324.803, -58.903, 0.44 ) }
    dend_89 { pt3dadd( 14.5825, -325.77, -59.6789, 1.11 ) }
    dend_89 { pt3dadd( 14.9312, -326.541, -60.3357, 1.18 ) }
    dend_89 { pt3dadd( 15.3766, -327.472, -61.1021, 1.18 ) }
    dend_89 { pt3dadd( 15.4061, -327.532, -61.1474, 1.18 ) }
    dend_89 { pt3dadd( 16.0452, -328.965, -62.0339, 0.44 ) }
    dend_89 { pt3dadd( 16.441, -330.04, -62.4805, 0.29 ) }
    dend_89 { pt3dadd( 16.6777, -330.921, -62.805, 0.29 ) }
    dend_89 { pt3dadd( 16.877, -331.953, -63.1617, 1.11 ) }
    dend_89 { pt3dadd( 17.0251, -332.871, -63.4683, 1.4 ) }
    dend_89 { pt3dadd( 17.1887, -333.724, -63.7171, 1.11 ) }
    dend_89 { pt3dadd( 17.2104, -333.825, -63.7402, 1.11 ) }
    dend_89 { pt3dadd( 17.5509, -335.013, -64.0062, 0.66 ) }
    dend_89 { pt3dadd( 17.7867, -335.635, -64.1562, 0.52 ) }
    dend_89 { pt3dadd( 18.2496, -336.566, -64.3965, 0.29 ) }
    dend_89 { pt3dadd( 18.7865, -337.395, -64.6971, 0.29 ) }
    dend_89 { pt3dadd( 18.8323, -337.454, -64.7281, 0.29 ) }
    dend_89 { pt3dadd( 19.2095, -337.866, -65.0266, 1.03 ) }
    dend_89 { pt3dadd( 19.677, -338.316, -65.4263, 1.4 ) }
    dend_89 { pt3dadd( 20.294, -338.877, -65.9753, 1.47 ) }
    dend_89 { pt3dadd( 21.4491, -339.947, -67.0305, 1.25 ) }
    dend_89 { pt3dadd( 22.5264, -340.975, -68.0638, 0.52 ) }
    dend_89 { pt3dadd( 23.4527, -342.101, -69.0534, 0.37 ) }
    dend_89 { pt3dadd( 23.5069, -342.183, -69.1179, 0.37 ) }
    dend_89 { pt3dadd( 23.8978, -343.057, -69.8671, 0.44 ) }
    dend_89 { pt3dadd( 24.1648, -343.877, -70.609, 0.44 ) }
    dend_89 { pt3dadd( 24.1826, -343.944, -70.6708, 0.44 ) }
    dend_89 { pt3dadd( 24.7493, -346.04, -72.7185, 1.47 ) }
    dend_89 { pt3dadd( 24.8388, -346.432, -73.1092, 1.69 ) }
    dend_89 { pt3dadd( 25.5043, -349.363, -76.2672, 0.59 ) }
    dend_89 { pt3dadd( 25.6877, -350.163, -77.2493, 0.29 ) }
    dend_89 { pt3dadd( 25.8737, -350.859, -78.2252, 1.25 ) }
    dend_89 { pt3dadd( 26.0433, -351.34, -78.989, 1.55 ) }
    // Section: dend_79, id: dend_79, parent: dend_67 (entry count 75/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 25.9902, -165.934, 4.23911, 0.44 ) }
    dend_79 { pt3dadd( 27.9894, -166.62, 3.76889, 0.44 ) }
    dend_79 { pt3dadd( 28.9317, -166.914, 3.52223, 0.59 ) }
    dend_79 { pt3dadd( 29.0228, -166.94, 3.49316, 0.59 ) }
    dend_79 { pt3dadd( 29.664, -167.152, 3.2726, 0.59 ) }
    dend_79 { pt3dadd( 30.6293, -167.556, 2.93024, 0.59 ) }
    dend_79 { pt3dadd( 30.6922, -167.588, 2.90769, 0.59 ) }
    dend_79 { pt3dadd( 31.4874, -168.122, 2.61952, 0.44 ) }
    dend_79 { pt3dadd( 32.2727, -168.839, 2.38553, 0.29 ) }
    dend_79 { pt3dadd( 33.0489, -169.734, 2.20831, 0.29 ) }
    dend_79 { pt3dadd( 33.595, -170.512, 2.12293, 0.59 ) }
    dend_79 { pt3dadd( 33.9726, -171.151, 2.0914, 0.81 ) }
    dend_79 { pt3dadd( 34.5565, -172.202, 2.07849, 0.37 ) }
    dend_79 { pt3dadd( 35.0404, -173.133, 2.09821, 1.25 ) }
    dend_79 { pt3dadd( 35.4373, -173.908, 2.13023, 1.62 ) }
    dend_79 { pt3dadd( 35.7992, -174.545, 2.14351, 1.47 ) }
    dend_79 { pt3dadd( 36.3528, -175.409, 2.11101, 0.96 ) }
    dend_79 { pt3dadd( 36.7746, -176.06, 2.0164, 0.74 ) }
    dend_79 { pt3dadd( 37.4018, -177.067, 1.7337, 0.59 ) }
    dend_79 { pt3dadd( 37.4601, -177.17, 1.69661, 0.59 ) }
    dend_79 { pt3dadd( 37.9629, -178.14, 1.3182, 0.59 ) }
    dend_79 { pt3dadd( 38.5222, -179.323, 0.831656, 0.44 ) }
    dend_79 { pt3dadd( 39.1345, -180.758, 0.231069, 0.44 ) }
    dend_79 { pt3dadd( 39.6981, -182.168, -0.347472, 0.44 ) }
    dend_79 { pt3dadd( 39.931, -182.751, -0.571998, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_79 { pt3dadd( 40.1412, -183.237, -0.743613, 0.96 ) }
    dend_79 { pt3dadd( 40.2171, -183.4, -0.795227, 0.96 ) }
    dend_79 { pt3dadd( 40.7018, -184.17, -0.94487, 0.66 ) }
    dend_79 { pt3dadd( 41.4429, -184.951, -0.925097, 0.52 ) }
    dend_79 { pt3dadd( 42.1353, -185.497, -0.741008, 1.18 ) }
    dend_79 { pt3dadd( 42.7297, -185.887, -0.546356, 1.4 ) }
    dend_79 { pt3dadd( 42.812, -185.937, -0.519108, 1.4 ) }
    dend_79 { pt3dadd( 44.1542, -186.767, -0.109409, 0.96 ) }
    dend_79 { pt3dadd( 45.2113, -187.451, 0.213571, 0.74 ) }
    dend_79 { pt3dadd( 46.4671, -188.361, 0.587802, 1.11 ) }
    dend_79 { pt3dadd( 47.4453, -189.162, 0.824278, 0.59 ) }
    dend_79 { pt3dadd( 48.5463, -190.197, 1.0157, 0.52 ) }
    dend_79 { pt3dadd( 49.796, -191.56, 1.04841, 0.52 ) }
    dend_79 { pt3dadd( 50.2983, -192.191, 0.985282, 1.18 ) }
    dend_79 { pt3dadd( 50.9058, -193.011, 0.831802, 1.47 ) }
    dend_79 { pt3dadd( 51.6054, -193.982, 0.592054, 1.11 ) }
    dend_79 { pt3dadd( 52.2014, -194.805, 0.402188, 0.66 ) }
    dend_79 { pt3dadd( 53.271, -196.218, 0.0865694, 0.52 ) }
    dend_79 { pt3dadd( 54.0711, -197.192, -0.128747, 0.52 ) }
    dend_79 { pt3dadd( 54.9092, -198.137, -0.321698, 0.81 ) }
    dend_79 { pt3dadd( 55.8202, -199.115, -0.4783, 1.4 ) }
    dend_79 { pt3dadd( 56.5278, -199.882, -0.555016, 1.25 ) }
    dend_79 { pt3dadd( 56.9613, -200.355, -0.582797, 1.25 ) }
    dend_79 { pt3dadd( 57.4595, -200.92, -0.632838, 0.96 ) }
    dend_79 { pt3dadd( 58.0911, -201.672, -0.72756, 0.44 ) }
    dend_79 { pt3dadd( 58.7289, -202.446, -0.829648, 0.29 ) }
    dend_79 { pt3dadd( 59.3816, -203.221, -0.950918, 0.29 ) }
    dend_79 { pt3dadd( 59.4456, -203.284, -0.958821, 0.29 ) }
    dend_79 { pt3dadd( 60.8287, -204.432, -1.02653, 0.29 ) }
    dend_79 { pt3dadd( 62.047, -205.317, -1.02354, 0.74 ) }
    dend_79 { pt3dadd( 62.4467, -205.571, -1.00858, 1.03 ) }
    dend_79 { pt3dadd( 62.9975, -205.882, -0.971884, 1.03 ) }
    dend_79 { pt3dadd( 64.7005, -206.784, -0.807827, 0.22 ) }
    dend_79 { pt3dadd( 65.6639, -207.309, -0.707641, 0.22 ) }
    dend_79 { pt3dadd( 65.7347, -207.352, -0.707673, 0.22 ) }
    dend_79 { pt3dadd( 66.2032, -207.749, -0.883621, 0.88 ) }
    dend_79 { pt3dadd( 66.6737, -208.272, -1.20278, 1.11 ) }
    dend_79 { pt3dadd( 66.7371, -208.361, -1.26542, 1.11 ) }
    dend_79 { pt3dadd( 67.1665, -209.091, -1.84081, 1.11 ) }
    dend_79 { pt3dadd( 68.1621, -210.863, -3.09901, 0.22 ) }
    dend_79 { pt3dadd( 68.8182, -212.052, -3.86159, 0.22 ) }
    dend_79 { pt3dadd( 69.1042, -212.558, -4.13697, 1.03 ) }
    dend_79 { pt3dadd( 69.5213, -213.232, -4.43597, 1.18 ) }
    dend_79 { pt3dadd( 69.5663, -213.294, -4.45623, 1.18 ) }
    dend_79 { pt3dadd( 70.6339, -214.567, -4.63465, 0.52 ) }
    dend_79 { pt3dadd( 70.7308, -214.654, -4.62718, 0.52 ) }
    dend_79 { pt3dadd( 71.7682, -215.334, -4.54359, 0.88 ) }
    dend_79 { pt3dadd( 72.4636, -215.692, -4.5303, 1.18 ) }
    dend_79 { pt3dadd( 73.1296, -215.965, -4.5627, 1.33 ) }
    dend_79 { pt3dadd( 73.1969, -215.988, -4.56982, 1.33 ) }
    dend_79 { pt3dadd( 74.2691, -216.34, -4.7535, 1.11 ) }
    dend_79 { pt3dadd( 75.388, -216.753, -4.96383, 0.66 ) }
    dend_79 { pt3dadd( 76.0087, -217.027, -5.09719, 0.74 ) }
    dend_79 { pt3dadd( 76.9339, -217.547, -5.29067, 0.29 ) }
    dend_79 { pt3dadd( 77.0143, -217.605, -5.30527, 0.29 ) }
    dend_79 { pt3dadd( 77.8136, -218.34, -5.42011, 0.29 ) }
    dend_79 { pt3dadd( 78.133, -218.715, -5.45208, 1.18 ) }
    dend_79 { pt3dadd( 78.6373, -219.382, -5.48871, 1.4 ) }
    dend_79 { pt3dadd( 79.0675, -219.97, -5.51365, 1.4 ) }
    dend_79 { pt3dadd( 79.7314, -220.836, -5.54972, 0.88 ) }
    dend_79 { pt3dadd( 80.4702, -221.654, -5.60465, 0.37 ) }
    dend_79 { pt3dadd( 80.5475, -221.718, -5.61112, 0.37 ) }
    dend_79 { pt3dadd( 81.5291, -222.346, -5.70654, 0.37 ) }
    dend_79 { pt3dadd( 81.6165, -222.392, -5.71612, 0.37 ) }
    dend_79 { pt3dadd( 82.0994, -222.633, -5.77699, 0.81 ) }
    dend_79 { pt3dadd( 82.8299, -222.979, -5.88244, 0.66 ) }
    dend_79 { pt3dadd( 83.9016, -223.527, -6.03666, 0.37 ) }
    dend_79 { pt3dadd( 84.746, -224.004, -6.15324, 0.37 ) }
    dend_79 { pt3dadd( 85.7035, -224.618, -6.27794, 1.18 ) }
    dend_79 { pt3dadd( 86.4665, -225.174, -6.37565, 1.4 ) }
    dend_79 { pt3dadd( 86.5278, -225.225, -6.38343, 1.4 ) }
    dend_79 { pt3dadd( 87.275, -225.927, -6.48709, 1.47 ) }
    dend_79 { pt3dadd( 87.3437, -225.999, -6.50177, 1.47 ) }
    dend_79 { pt3dadd( 88.0738, -226.773, -6.65545, 1.03 ) }
    dend_79 { pt3dadd( 88.4016, -227.12, -6.72482, 0.81 ) }
    dend_79 { pt3dadd( 88.5938, -227.323, -6.76477, 0.81 ) }
    dend_79 { pt3dadd( 89.2227, -227.993, -6.89482, 0.66 ) }
    dend_79 { pt3dadd( 89.9826, -228.796, -6.97397, 0.37 ) }
    dend_79 { pt3dadd( 90.7435, -229.598, -6.99059, 0.29 ) }
    dend_79 { pt3dadd( 91.0594, -229.922, -6.97346, 0.59 ) }
    dend_79 { pt3dadd( 91.4558, -230.29, -6.93084, 0.59 ) }
    dend_79 { pt3dadd( 91.5383, -230.357, -6.91904, 0.59 ) }
    dend_79 { pt3dadd( 92.7806, -231.139, -6.72054, 0.22 ) }
    dend_79 { pt3dadd( 93.0821, -231.265, -6.65538, 0.22 ) }
    dend_79 { pt3dadd( 93.3894, -231.338, -6.60528, 0.22 ) }
    dend_79 { pt3dadd( 93.9547, -231.404, -6.54194, 1.25 ) }
    dend_79 { pt3dadd( 94.8083, -231.466, -6.49105, 1.55 ) }
    dend_79 { pt3dadd( 95.5786, -231.536, -6.47971, 1.55 ) }
    dend_79 { pt3dadd( 97.0941, -231.732, -6.52577, 0.59 ) }
    dend_79 { pt3dadd( 98.1914, -231.967, -6.55939, 0.29 ) }
    dend_79 { pt3dadd( 99.2996, -232.339, -6.58085, 0.29 ) }
    dend_79 { pt3dadd( 100.25, -232.809, -6.59709, 0.29 ) }
    dend_79 { pt3dadd( 100.999, -233.318, -6.61942, 0.29 ) }
    dend_79 { pt3dadd( 101.655, -233.856, -6.6441, 0.66 ) }
    dend_79 { pt3dadd( 102.18, -234.324, -6.68625, 0.37 ) }
    dend_79 { pt3dadd( 102.862, -234.937, -6.69951, 0.29 ) }
    dend_79 { pt3dadd( 103.51, -235.484, -6.68783, 0.44 ) }
    dend_79 { pt3dadd( 104.294, -236.059, -6.66609, 0.44 ) }
    dend_79 { pt3dadd( 105.365, -236.744, -6.6491, 0.29 ) }
    dend_79 { pt3dadd( 106.424, -237.386, -6.62298, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_79 { pt3dadd( 107.412, -238.01, -6.59721, 0.96 ) }
    dend_79 { pt3dadd( 107.481, -238.058, -6.59859, 0.96 ) }
    dend_79 { pt3dadd( 108.255, -238.703, -6.63252, 1.47 ) }
    dend_79 { pt3dadd( 108.878, -239.306, -6.69064, 1.62 ) }
    dend_79 { pt3dadd( 109.732, -240.185, -6.8392, 1.25 ) }
    dend_79 { pt3dadd( 110.382, -240.826, -6.98694, 0.66 ) }
    dend_79 { pt3dadd( 111.242, -241.546, -7.22932, 0.29 ) }
    dend_79 { pt3dadd( 111.308, -241.592, -7.24857, 0.29 ) }
    dend_79 { pt3dadd( 112.198, -242.066, -7.50954, 0.29 ) }
    dend_79 { pt3dadd( 113.168, -242.498, -7.79216, 0.74 ) }
    dend_79 { pt3dadd( 113.851, -242.784, -7.98839, 1.4 ) }
    dend_79 { pt3dadd( 114.634, -243.117, -8.19068, 1.62 ) }
    dend_79 { pt3dadd( 115.701, -243.621, -8.43262, 0.81 ) }
    dend_79 { pt3dadd( 116.633, -244.147, -8.64222, 0.37 ) }
    dend_79 { pt3dadd( 117.786, -244.971, -8.91494, 0.37 ) }
    dend_79 { pt3dadd( 118.753, -245.842, -9.15549, 0.37 ) }
    dend_79 { pt3dadd( 119.122, -246.239, -9.25163, 0.74 ) }
    dend_79 { pt3dadd( 119.564, -246.818, -9.37355, 0.37 ) }
    dend_79 { pt3dadd( 120.062, -247.604, -9.55248, 0.37 ) }
    dend_79 { pt3dadd( 120.523, -248.454, -9.76132, 1.18 ) }
    dend_79 { pt3dadd( 120.809, -249.028, -9.91298, 1.4 ) }
    dend_79 { pt3dadd( 120.856, -249.118, -9.92185, 1.4 ) }
    dend_79 { pt3dadd( 121.209, -249.761, -9.90566, 1.18 ) }
    dend_79 { pt3dadd( 121.896, -250.963, -9.76079, 1.03 ) }
    dend_79 { pt3dadd( 122.457, -251.912, -9.57344, 0.81 ) }
    dend_79 { pt3dadd( 123.052, -252.889, -9.26238, 1.11 ) }
    dend_79 { pt3dadd( 124.621, -255.469, -8.28783, 0.29 ) }
    dend_79 { pt3dadd( 124.912, -255.946, -8.09209, 0.81 ) }
    dend_79 { pt3dadd( 124.957, -256.018, -8.05892, 0.81 ) }
    dend_79 { pt3dadd( 125.496, -256.896, -7.62539, 0.81 ) }
    dend_79 { pt3dadd( 126.438, -258.327, -6.93949, 0.44 ) }
    dend_79 { pt3dadd( 126.936, -259.048, -6.65774, 0.81 ) }
    dend_79 { pt3dadd( 127.362, -259.636, -6.52133, 0.96 ) }
    dend_79 { pt3dadd( 127.469, -259.779, -6.49164, 0.96 ) }
    dend_79 { pt3dadd( 127.983, -260.451, -6.37267, 0.96 ) }
    dend_79 { pt3dadd( 128.781, -261.476, -6.22631, 0.96 ) }
    dend_79 { pt3dadd( 129.337, -262.199, -6.17844, 1.25 ) }
    dend_79 { pt3dadd( 129.392, -262.271, -6.1741, 1.25 ) }
    dend_79 { pt3dadd( 130.062, -263.163, -6.12938, 0.96 ) }
    dend_79 { pt3dadd( 130.913, -264.336, -6.09571, 0.52 ) }
    dend_79 { pt3dadd( 130.964, -264.411, -6.09672, 0.52 ) }
    dend_79 { pt3dadd( 131.449, -265.184, -6.14703, 0.52 ) }
    dend_79 { pt3dadd( 131.932, -265.99, -6.2072, 1.03 ) }
    dend_79 { pt3dadd( 131.98, -266.073, -6.2171, 1.03 ) }
    dend_79 { pt3dadd( 132.295, -266.619, -6.30664, 1.03 ) }
    dend_79 { pt3dadd( 132.912, -267.667, -6.52382, 0.29 ) }
    dend_79 { pt3dadd( 133.361, -268.401, -6.68699, 0.29 ) }
    dend_79 { pt3dadd( 133.805, -269.083, -6.85279, 0.88 ) }
    dend_79 { pt3dadd( 134.514, -270.072, -7.11909, 0.29 ) }
    dend_79 { pt3dadd( 134.993, -270.68, -7.29751, 0.96 ) }
    dend_79 { pt3dadd( 135.479, -271.257, -7.48084, 1.18 ) }
    dend_79 { pt3dadd( 135.614, -271.399, -7.53139, 1.18 ) }
    dend_79 { pt3dadd( 136.082, -271.817, -7.7037, 1.18 ) }
    dend_79 { pt3dadd( 136.683, -272.272, -7.90926, 1.18 ) }
    dend_79 { pt3dadd( 136.788, -272.337, -7.93576, 1.18 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 55/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 25.9902, -165.934, 4.23911, 0.44 ) }
    dend_68 { pt3dadd( 25.9935, -167.847, 4.56927, 0.44 ) }
    dend_68 { pt3dadd( 26.0816, -168.878, 4.72358, 0.44 ) }
    dend_68 { pt3dadd( 26.2663, -170.128, 4.92302, 0.74 ) }
    dend_68 { pt3dadd( 26.4101, -171.115, 5.08609, 1.11 ) }
    dend_68 { pt3dadd( 26.581, -172.515, 5.32352, 0.74 ) }
    dend_68 { pt3dadd( 26.6805, -173.72, 5.53349, 0.52 ) }
    dend_68 { pt3dadd( 26.7748, -174.916, 5.7744, 0.52 ) }
    dend_68 { pt3dadd( 26.7713, -176.17, 6.0602, 0.37 ) }
    dend_68 { pt3dadd( 26.6084, -176.937, 6.26388, 0.37 ) }
    dend_68 { pt3dadd( 26.2759, -177.522, 6.47882, 1.11 ) }
    dend_68 { pt3dadd( 25.7174, -178.126, 6.74276, 1.4 ) }
    dend_68 { pt3dadd( 24.8729, -178.907, 7.18185, 1.47 ) }
    dend_68 { pt3dadd( 24.3026, -179.436, 7.5337, 1.47 ) }
    dend_68 { pt3dadd( 23.59, -180.124, 8.03391, 1.03 ) }
    dend_68 { pt3dadd( 22.8026, -181.117, 8.78564, 0.52 ) }
    dend_68 { pt3dadd( 22.2411, -182.179, 9.58677, 0.29 ) }
    dend_68 { pt3dadd( 21.919, -183.471, 10.5087, 0.37 ) }
    dend_68 { pt3dadd( 21.9458, -184.673, 11.2759, 0.37 ) }
    dend_68 { pt3dadd( 21.9638, -184.744, 11.315, 0.37 ) }
    dend_68 { pt3dadd( 22.5522, -186.112, 11.9265, 1.11 ) }
    dend_68 { pt3dadd( 22.914, -186.797, 12.1524, 1.47 ) }
    dend_68 { pt3dadd( 23.2783, -187.47, 12.3076, 1.47 ) }
    dend_68 { pt3dadd( 23.602, -188.203, 12.3861, 1.25 ) }
    dend_68 { pt3dadd( 23.92, -189.3, 12.4325, 0.66 ) }
    dend_68 { pt3dadd( 24.0961, -190.273, 12.4497, 0.52 ) }
    dend_68 { pt3dadd( 24.1046, -191.1, 12.4455, 0.81 ) }
    dend_68 { pt3dadd( 23.9639, -191.906, 12.4352, 0.81 ) }
    dend_68 { pt3dadd( 23.634, -192.959, 12.4214, 0.74 ) }
    dend_68 { pt3dadd( 23.1737, -194.093, 12.4134, 0.59 ) }
    dend_68 { pt3dadd( 23.1335, -194.176, 12.4129, 0.59 ) }
    dend_68 { pt3dadd( 22.6438, -195.164, 12.4052, 0.44 ) }
    dend_68 { pt3dadd( 22.1046, -196.472, 12.4379, 0.29 ) }
    dend_68 { pt3dadd( 21.8871, -197.175, 12.4786, 0.29 ) }
    dend_68 { pt3dadd( 21.8063, -198.163, 12.5754, 1.03 ) }
    dend_68 { pt3dadd( 21.8255, -198.256, 12.5894, 1.03 ) }
    dend_68 { pt3dadd( 22.0499, -198.806, 12.6794, 1.25 ) }
    dend_68 { pt3dadd( 22.9155, -200.19, 12.9498, 0.74 ) }
    dend_68 { pt3dadd( 22.9809, -200.277, 12.9684, 0.66 ) }
    dend_68 { pt3dadd( 23.8315, -201.364, 13.1999, 0.66 ) }
    dend_68 { pt3dadd( 24.3503, -202.036, 13.326, 1.03 ) }
    dend_68 { pt3dadd( 24.8386, -202.745, 13.4104, 0.66 ) }
    dend_68 { pt3dadd( 25.3173, -203.557, 13.4511, 0.44 ) }
    dend_68 { pt3dadd( 25.621, -204.181, 13.4335, 0.37 ) }
    dend_68 { pt3dadd( 25.6569, -204.276, 13.4261, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_68 { pt3dadd( 25.9007, -205.222, 13.37, 0.37 ) }
    dend_68 { pt3dadd( 26.1241, -206.298, 13.3584, 1.18 ) }
    dend_68 { pt3dadd( 26.2504, -206.977, 13.4131, 1.18 ) }
    dend_68 { pt3dadd( 26.2633, -207.056, 13.4239, 1.18 ) }
    dend_68 { pt3dadd( 26.5075, -208.638, 13.7221, 0.44 ) }
    dend_68 { pt3dadd( 26.6956, -209.952, 14.0177, 0.96 ) }
    dend_68 { pt3dadd( 26.8292, -211.215, 14.3475, 1.33 ) }
    dend_68 { pt3dadd( 26.9233, -212.497, 14.6845, 0.59 ) }
    dend_68 { pt3dadd( 26.9543, -213.312, 14.8727, 0.44 ) }
    dend_68 { pt3dadd( 26.9548, -214.102, 15.0359, 0.74 ) }
    dend_68 { pt3dadd( 26.9309, -214.672, 15.1362, 0.74 ) }
    dend_68 { pt3dadd( 26.8447, -215.587, 15.2224, 0.59 ) }
    dend_68 { pt3dadd( 26.7195, -216.753, 15.3171, 1.18 ) }
    dend_68 { pt3dadd( 26.6832, -217.551, 15.3835, 1.18 ) }
    dend_68 { pt3dadd( 26.7715, -218.589, 15.5623, 0.59 ) }
    dend_68 { pt3dadd( 26.8675, -219.079, 15.6829, 0.37 ) }
    dend_68 { pt3dadd( 26.891, -219.164, 15.7113, 0.37 ) }
    dend_68 { pt3dadd( 27.2846, -220.432, 16.2155, 0.66 ) }
    dend_68 { pt3dadd( 27.5252, -221.308, 16.604, 0.66 ) }
    dend_68 { pt3dadd( 27.8108, -222.605, 17.2463, 0.44 ) }
    dend_68 { pt3dadd( 27.895, -223.324, 17.6239, 1.03 ) }
    dend_68 { pt3dadd( 27.9067, -224.342, 18.1608, 1.03 ) }
    dend_68 { pt3dadd( 27.8309, -225.232, 18.5995, 0.74 ) }
    dend_68 { pt3dadd( 27.6676, -226.169, 19.0161, 1.03 ) }
    dend_68 { pt3dadd( 27.4269, -227.308, 19.4792, 1.03 ) }
    dend_68 { pt3dadd( 27.2223, -228.474, 19.8659, 0.29 ) }
    dend_68 { pt3dadd( 27.1497, -229.344, 20.1111, 0.29 ) }
    dend_68 { pt3dadd( 27.1675, -230.419, 20.3421, 1.03 ) }
    dend_68 { pt3dadd( 27.2668, -231.13, 20.4511, 1.25 ) }
    dend_68 { pt3dadd( 27.4583, -231.991, 20.5312, 0.96 ) }
    dend_68 { pt3dadd( 27.8507, -233.424, 20.5757, 0.59 ) }
    dend_68 { pt3dadd( 28.114, -234.306, 20.5899, 1.03 ) }
    dend_68 { pt3dadd( 28.2569, -234.821, 20.6161, 1.33 ) }
    dend_68 { pt3dadd( 28.4784, -235.914, 20.7776, 0.22 ) }
    dend_68 { pt3dadd( 28.5173, -236.527, 20.9411, 0.22 ) }
    dend_68 { pt3dadd( 28.5097, -236.598, 20.9693, 0.22 ) }
    dend_68 { pt3dadd( 28.2599, -237.641, 21.5705, 0.22 ) }
    dend_68 { pt3dadd( 28.0626, -238.625, 22.1955, 0.22 ) }
    dend_68 { pt3dadd( 28.0249, -239.779, 22.8917, 1.03 ) }
    dend_68 { pt3dadd( 28.1042, -240.399, 23.2451, 1.4 ) }
    dend_68 { pt3dadd( 28.132, -240.493, 23.2851, 1.4 ) }
    dend_68 { pt3dadd( 28.4567, -241.4, 23.5748, 0.81 ) }
    dend_68 { pt3dadd( 28.8104, -242.256, 23.7736, 0.29 ) }
    dend_68 { pt3dadd( 29.2867, -243.366, 23.9386, 0.29 ) }
    dend_68 { pt3dadd( 29.317, -243.439, 23.9455, 0.29 ) }
    dend_68 { pt3dadd( 29.7977, -244.649, 24.0469, 0.29 ) }
    dend_68 { pt3dadd( 30.1614, -245.626, 24.0989, 1.11 ) }
    dend_68 { pt3dadd( 30.3634, -246.23, 24.1102, 1.47 ) }
    dend_68 { pt3dadd( 30.3847, -246.298, 24.1115, 1.47 ) }
    dend_68 { pt3dadd( 30.6406, -247.046, 24.1126, 1.62 ) }
    dend_68 { pt3dadd( 30.6664, -247.113, 24.1112, 1.62 ) }
    dend_68 { pt3dadd( 31.1141, -248.144, 24.0654, 1.62 ) }
    dend_68 { pt3dadd( 31.1434, -248.209, 24.0611, 1.62 ) }
    dend_68 { pt3dadd( 31.6092, -249.241, 23.9928, 0.88 ) }
    dend_68 { pt3dadd( 31.9862, -250.085, 23.9402, 0.59 ) }
    dend_68 { pt3dadd( 32.4255, -251.092, 23.8781, 0.52 ) }
    dend_68 { pt3dadd( 32.7373, -251.819, 23.8327, 1.11 ) }
    dend_68 { pt3dadd( 33.0661, -252.615, 23.7903, 1.11 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 58/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 12.5512, -122.872, 39.0944, 0.29 ) }
    dend_64 { pt3dadd( 12.8228, -123.86, 39.2139, 0.29 ) }
    dend_64 { pt3dadd( 13.0077, -124.683, 39.3784, 0.29 ) }
    dend_64 { pt3dadd( 13.1516, -125.391, 39.649, 0.29 ) }
    dend_64 { pt3dadd( 13.163, -125.451, 39.6788, 0.29 ) }
    dend_64 { pt3dadd( 13.2383, -125.903, 40.0041, 0.29 ) }
    dend_64 { pt3dadd( 13.305, -126.727, 40.7183, 0.59 ) }
    dend_64 { pt3dadd( 13.2937, -127.029, 41.0948, 0.59 ) }
    dend_64 { pt3dadd( 13.158, -127.556, 41.9826, 0.81 ) }
    dend_64 { pt3dadd( 13.1439, -127.588, 42.0451, 0.81 ) }
    dend_64 { pt3dadd( 12.877, -128.071, 43.0234, 0.22 ) }
    dend_64 { pt3dadd( 12.6495, -128.391, 43.6638, 0.22 ) }
    dend_64 { pt3dadd( 12.6247, -128.42, 43.7225, 0.22 ) }
    dend_64 { pt3dadd( 12.4145, -128.676, 44.1972, 0.22 ) }
    dend_64 { pt3dadd( 12.0677, -129.088, 44.7813, 0.22 ) }
    dend_64 { pt3dadd( 12.0341, -129.13, 44.8335, 0.22 ) }
    dend_64 { pt3dadd( 11.6618, -129.599, 45.2424, 0.52 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 75/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 12.5512, -122.872, 39.0944, 0.22 ) }
    dend_63 { pt3dadd( 13.4437, -122.441, 39.0839, 0.22 ) }
    dend_63 { pt3dadd( 13.522, -122.403, 39.083, 0.22 ) }
    dend_63 { pt3dadd( 14.1883, -122.081, 39.0752, 0.22 ) }
    dend_63 { pt3dadd( 15.0998, -121.641, 39.0644, 0.22 ) }
    dend_63 { pt3dadd( 15.2397, -121.574, 39.0628, 0.22 ) }
    dend_63 { pt3dadd( 16.8705, -120.787, 39.0436, 0.22 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 82/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 15.7897, -391.086, 19.2203, 0.22 ) }
    dend_59 { pt3dadd( 15.411, -392.474, 19.7375, 0.22 ) }
    dend_59 { pt3dadd( 15.2692, -393.124, 19.9468, 0.59 ) }
    dend_59 { pt3dadd( 15.2178, -393.462, 20.036, 0.81 ) }
    dend_59 { pt3dadd( 15.0459, -394.721, 20.3266, 0.22 ) }
    dend_59 { pt3dadd( 14.9422, -395.538, 20.5006, 0.22 ) }
    dend_59 { pt3dadd( 14.8628, -396.264, 20.6377, 1.11 ) }
    dend_59 { pt3dadd( 14.8535, -396.844, 20.7121, 1.33 ) }
    dend_59 { pt3dadd( 14.8527, -397.727, 20.7933, 1.03 ) }
    dend_59 { pt3dadd( 14.8469, -398.367, 20.8266, 0.29 ) }
    dend_59 { pt3dadd( 14.8472, -398.44, 20.8264, 0.29 ) }
    dend_59 { pt3dadd( 14.9634, -399.327, 20.8407, 0.22 ) }
    dend_59 { pt3dadd( 15.0886, -399.81, 20.8602, 0.52 ) }
    dend_59 { pt3dadd( 15.1538, -399.967, 20.8775, 0.52 ) }
    dend_59 { pt3dadd( 15.1914, -400.034, 20.8876, 0.52 ) }
    dend_59 { pt3dadd( 15.6368, -400.584, 20.9585, 0.22 ) }
    dend_59 { pt3dadd( 16.2499, -401.155, 21.0031, 0.59 ) }
    dend_59 { pt3dadd( 16.5753, -401.417, 20.982, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_50()
}

proc basic_shape_50() {
    dend_59 { pt3dadd( 17.4035, -402.088, 20.8642, 0.22 ) }
    dend_59 { pt3dadd( 17.9733, -402.569, 20.7228, 0.88 ) }
    dend_59 { pt3dadd( 18.9615, -403.428, 20.3917, 0.15 ) }
    dend_59 { pt3dadd( 19.6878, -404.09, 20.0763, 0.15 ) }
    dend_59 { pt3dadd( 20.9395, -405.235, 19.4434, 0.15 ) }
    dend_59 { pt3dadd( 21.5694, -405.812, 19.0992, 0.44 ) }
    dend_59 { pt3dadd( 22.2305, -406.391, 18.7093, 1.18 ) }
    dend_59 { pt3dadd( 22.6429, -406.754, 18.4806, 1.55 ) }
    dend_59 { pt3dadd( 23.5409, -407.622, 18.0211, 0.29 ) }
    dend_59 { pt3dadd( 24.0565, -408.11, 17.8333, 0.52 ) }
    dend_59 { pt3dadd( 24.1094, -408.155, 17.824, 0.52 ) }
    dend_59 { pt3dadd( 24.582, -408.533, 17.7963, 0.52 ) }
    dend_59 { pt3dadd( 25.4333, -409.272, 17.8528, 0.22 ) }
    dend_59 { pt3dadd( 25.9554, -409.817, 17.9234, 0.22 ) }
    dend_59 { pt3dadd( 26.5577, -410.566, 18.0506, 0.66 ) }
    dend_59 { pt3dadd( 26.8665, -411.022, 18.1204, 0.66 ) }
    dend_59 { pt3dadd( 26.913, -411.1, 18.1291, 0.66 ) }
    dend_59 { pt3dadd( 27.421, -412.11, 18.195, 0.15 ) }
    dend_59 { pt3dadd( 27.8153, -413.0, 18.1823, 0.37 ) }
    dend_59 { pt3dadd( 27.8736, -413.142, 18.1756, 0.37 ) }
    dend_59 { pt3dadd( 27.9554, -413.367, 18.1513, 0.37 ) }
    dend_59 { pt3dadd( 28.2202, -414.107, 18.0726, 0.15 ) }
    dend_59 { pt3dadd( 28.2997, -414.327, 18.049, 0.44 ) }
    dend_59 { pt3dadd( 28.481, -414.756, 17.9947, 0.44 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 24/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 15.7897, -391.086, 19.2203, 0.22 ) }
    dend_58 { pt3dadd( 16.8638, -391.313, 17.9061, 0.22 ) }
    dend_58 { pt3dadd( 17.6084, -391.471, 16.995, 0.22 ) }
    dend_58 { pt3dadd( 18.2854, -391.614, 16.1667, 0.37 ) }
    dend_58 { pt3dadd( 19.1344, -391.794, 15.1279, 0.15 ) }
    dend_58 { pt3dadd( 19.3801, -391.846, 14.8272, 0.44 ) }
    dend_58 { pt3dadd( 19.7558, -391.925, 14.3675, 0.44 ) }
    // Section: dend_52, id: dend_52, parent: dend_46 (entry count 31/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -139.95, -131.496, -7.85827, 0.22 ) }
    dend_52 { pt3dadd( -141.461, -130.175, -8.56331, 0.22 ) }
    dend_52 { pt3dadd( -141.57, -130.121, -8.62527, 0.22 ) }
    dend_52 { pt3dadd( -142.103, -129.862, -8.92577, 0.88 ) }
    dend_52 { pt3dadd( -142.185, -129.822, -8.97239, 0.88 ) }
    dend_52 { pt3dadd( -142.662, -129.589, -9.24178, 0.88 ) }
    dend_52 { pt3dadd( -143.381, -129.238, -9.64805, 0.66 ) }
    dend_52 { pt3dadd( -144.594, -129.004, -10.6015, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 39/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -139.95, -131.496, -7.85827, 0.22 ) }
    dend_47 { pt3dadd( -141.699, -131.694, -7.5296, 0.22 ) }
    dend_47 { pt3dadd( -142.879, -131.827, -7.30781, 0.22 ) }
    dend_47 { pt3dadd( -142.972, -131.838, -7.29039, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 43/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 45.034, 148.257, 17.8894, 0.22 ) }
    dend_33 { pt3dadd( 45.5847, 148.071, 17.8588, 0.22 ) }
    dend_33 { pt3dadd( 45.8574, 147.997, 17.8322, 0.22 ) }
    dend_33 { pt3dadd( 45.8791, 147.993, 17.8315, 0.22 ) }
    dend_33 { pt3dadd( 46.4428, 147.912, 17.8316, 0.22 ) }
    dend_33 { pt3dadd( 46.4725, 147.911, 17.8322, 0.22 ) }
    dend_33 { pt3dadd( 46.8056, 147.917, 17.8596, 0.22 ) }
    dend_33 { pt3dadd( 46.9743, 147.932, 17.8821, 0.74 ) }
    dend_33 { pt3dadd( 47.3267, 147.985, 17.9584, 0.59 ) }
    dend_33 { pt3dadd( 47.355, 147.991, 17.9648, 0.59 ) }
    dend_33 { pt3dadd( 47.8125, 148.097, 18.0635, 0.22 ) }
    dend_33 { pt3dadd( 48.2304, 148.168, 18.1708, 0.81 ) }
    dend_33 { pt3dadd( 48.4827, 148.199, 18.2438, 0.96 ) }
    dend_33 { pt3dadd( 48.9092, 148.24, 18.3683, 0.81 ) }
    dend_33 { pt3dadd( 49.38, 148.275, 18.4922, 0.22 ) }
    dend_33 { pt3dadd( 49.5938, 148.285, 18.5467, 0.59 ) }
    dend_33 { pt3dadd( 50.1372, 148.283, 18.6752, 1.03 ) }
    dend_33 { pt3dadd( 50.164, 148.282, 18.6808, 1.03 ) }
    dend_33 { pt3dadd( 50.2515, 148.281, 18.6996, 1.03 ) }
    dend_33 { pt3dadd( 50.7232, 148.254, 18.7695, 0.22 ) }
    dend_33 { pt3dadd( 50.9101, 148.238, 18.8021, 0.52 ) }
    dend_33 { pt3dadd( 51.0765, 148.222, 18.8256, 0.52 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 65/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 45.034, 148.257, 17.8894, 0.22 ) }
    dend_30 { pt3dadd( 45.1312, 150.239, 18.9007, 0.22 ) }
    dend_30 { pt3dadd( 45.1565, 151.243, 19.3877, 0.74 ) }
    dend_30 { pt3dadd( 45.176, 152.828, 20.0998, 0.22 ) }
    dend_30 { pt3dadd( 45.1819, 153.51, 20.3923, 0.22 ) }
    dend_30 { pt3dadd( 45.197, 155.051, 21.0127, 0.22 ) }
    dend_30 { pt3dadd( 45.2157, 156.204, 21.4259, 0.22 ) }
    dend_30 { pt3dadd( 45.2137, 156.299, 21.4469, 0.22 ) }
    dend_30 { pt3dadd( 45.2234, 157.155, 21.5483, 0.59 ) }
    dend_30 { pt3dadd( 45.2304, 157.245, 21.5388, 0.59 ) }
    dend_30 { pt3dadd( 45.2999, 157.694, 21.4376, 0.44 ) }
    dend_30 { pt3dadd( 45.4799, 158.563, 21.1691, 0.15 ) }
    dend_30 { pt3dadd( 45.676, 159.501, 20.9239, 0.22 ) }
    dend_30 { pt3dadd( 45.7995, 160.222, 20.7703, 0.59 ) }
    dend_30 { pt3dadd( 46.1426, 162.317, 20.5124, 0.22 ) }
    dend_30 { pt3dadd( 46.1572, 162.415, 20.5075, 0.22 ) }
    dend_30 { pt3dadd( 46.3469, 163.74, 20.5211, 0.22 ) }
    dend_30 { pt3dadd( 46.5466, 165.032, 20.6415, 0.29 ) }
    dend_30 { pt3dadd( 46.68, 165.845, 20.7649, 0.29 ) }
    dend_30 { pt3dadd( 47.0503, 168.039, 21.2087, 0.22 ) }
    dend_30 { pt3dadd( 47.2424, 168.863, 21.4148, 0.52 ) }
    dend_30 { pt3dadd( 47.2707, 168.964, 21.4397, 0.52 ) }
    dend_30 { pt3dadd( 47.9503, 170.965, 21.8805, 0.22 ) }
    dend_30 { pt3dadd( 48.2535, 171.73, 22.0495, 0.88 ) }
    dend_30 { pt3dadd( 48.4526, 172.16, 22.1884, 0.74 ) }
    dend_30 { pt3dadd( 49.29, 173.672, 22.8649, 0.22 ) }
    dend_30 { pt3dadd( 49.7088, 174.342, 23.2822, 0.29 ) }
    dend_30 { pt3dadd( 50.2021, 175.054, 23.8078, 0.29 ) }
    dend_30 { pt3dadd( 51.0005, 176.103, 24.7274, 0.88 ) }
    dend_30 { pt3dadd( 52.0232, 177.411, 25.9254, 0.66 ) }
    dend_30 { pt3dadd( 52.9965, 178.644, 27.0863, 0.29 ) }
    dend_30 { pt3dadd( 54.2876, 180.198, 28.6143, 0.52 ) }
    dend_30 { pt3dadd( 54.6754, 180.618, 29.0391, 0.44 ) }
    dend_30 { pt3dadd( 55.6342, 181.593, 30.004, 0.22 ) }
    dend_30 { pt3dadd( 56.3797, 182.311, 30.6314, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_51()
}

proc basic_shape_51() {
    dend_30 { pt3dadd( 56.4474, 182.377, 30.6784, 0.29 ) }
    dend_30 { pt3dadd( 57.1777, 183.101, 31.1364, 0.29 ) }
    dend_30 { pt3dadd( 57.8758, 183.746, 31.4621, 0.44 ) }
    dend_30 { pt3dadd( 58.5454, 184.426, 31.7697, 0.44 ) }
    dend_30 { pt3dadd( 58.6023, 184.49, 31.7935, 0.44 ) }
    dend_30 { pt3dadd( 59.4018, 185.681, 32.1834, 0.22 ) }
    dend_30 { pt3dadd( 59.4505, 185.773, 32.2081, 0.22 ) }
    dend_30 { pt3dadd( 59.7828, 186.577, 32.3815, 0.22 ) }
    dend_30 { pt3dadd( 60.3111, 188.211, 32.6305, 0.22 ) }
    dend_30 { pt3dadd( 60.4916, 188.9, 32.7158, 0.59 ) }
    dend_30 { pt3dadd( 60.8989, 191.013, 32.7805, 0.22 ) }
    dend_30 { pt3dadd( 61.0641, 192.378, 32.7141, 0.22 ) }
    dend_30 { pt3dadd( 61.0858, 193.349, 32.6614, 0.22 ) }
    dend_30 { pt3dadd( 60.9906, 194.626, 32.5751, 0.88 ) }
    dend_30 { pt3dadd( 60.9179, 195.033, 32.5387, 0.88 ) }
    dend_30 { pt3dadd( 60.2472, 197.45, 32.3118, 0.22 ) }
    dend_30 { pt3dadd( 60.0297, 197.984, 32.2567, 0.37 ) }
    dend_30 { pt3dadd( 58.9785, 199.982, 32.1079, 0.15 ) }
    dend_30 { pt3dadd( 58.9091, 200.101, 32.1051, 0.15 ) }
    dend_30 { pt3dadd( 58.5965, 200.667, 32.1571, 0.37 ) }
    dend_30 { pt3dadd( 58.2257, 201.372, 32.2816, 0.37 ) }
    dend_30 { pt3dadd( 58.1899, 201.452, 32.3027, 0.37 ) }
    dend_30 { pt3dadd( 57.9288, 202.196, 32.4672, 0.29 ) }
    dend_30 { pt3dadd( 57.6818, 203.419, 32.6675, 0.29 ) }
    dend_30 { pt3dadd( 57.4826, 205.1, 32.9186, 0.22 ) }
    dend_30 { pt3dadd( 57.4696, 205.298, 32.9447, 0.22 ) }
    dend_30 { pt3dadd( 57.4234, 206.796, 33.1239, 0.22 ) }
    dend_30 { pt3dadd( 57.4247, 206.923, 33.1371, 0.22 ) }
    dend_30 { pt3dadd( 57.4996, 208.203, 33.2469, 0.22 ) }
    dend_30 { pt3dadd( 57.5991, 209.305, 33.3102, 0.29 ) }
    dend_30 { pt3dadd( 57.7561, 210.728, 33.3337, 0.29 ) }
    dend_30 { pt3dadd( 57.7665, 210.818, 33.3352, 0.29 ) }
    dend_30 { pt3dadd( 57.8452, 211.828, 33.3677, 0.22 ) }
    dend_30 { pt3dadd( 57.8517, 211.937, 33.3726, 0.22 ) }
    dend_30 { pt3dadd( 57.8981, 212.793, 33.4201, 0.29 ) }
    dend_30 { pt3dadd( 57.9111, 212.938, 33.4238, 0.29 ) }
    dend_30 { pt3dadd( 58.0351, 214.131, 33.4243, 0.59 ) }
    dend_30 { pt3dadd( 58.1431, 215.804, 33.3209, 0.22 ) }
    dend_30 { pt3dadd( 58.1763, 216.871, 33.2075, 0.59 ) }
    dend_30 { pt3dadd( 58.1901, 217.544, 33.1172, 0.59 ) }
    dend_30 { pt3dadd( 58.2194, 219.229, 32.8408, 0.22 ) }
    dend_30 { pt3dadd( 58.2332, 219.893, 32.7138, 0.44 ) }
    dend_30 { pt3dadd( 58.2717, 221.381, 32.3612, 0.22 ) }
    dend_30 { pt3dadd( 58.3079, 222.079, 32.1494, 0.22 ) }
    dend_30 { pt3dadd( 58.3471, 222.465, 32.0334, 0.59 ) }
    dend_30 { pt3dadd( 58.3656, 222.574, 32.0028, 0.59 ) }
    dend_30 { pt3dadd( 58.486, 222.99, 31.9081, 0.59 ) }
    dend_30 { pt3dadd( 58.5406, 223.113, 31.8848, 0.59 ) }
    dend_30 { pt3dadd( 59.3027, 224.57, 31.6807, 0.22 ) }
    dend_30 { pt3dadd( 60.0095, 225.946, 31.4904, 0.37 ) }
    dend_30 { pt3dadd( 60.0482, 226.026, 31.48, 0.37 ) }
    dend_30 { pt3dadd( 60.2468, 226.519, 31.4444, 0.37 ) }
    dend_30 { pt3dadd( 60.7486, 227.973, 31.4068, 0.22 ) }
    dend_30 { pt3dadd( 61.0121, 228.811, 31.4317, 0.22 ) }
    dend_30 { pt3dadd( 61.1845, 229.409, 31.5018, 0.52 ) }
    dend_30 { pt3dadd( 61.2718, 229.827, 31.5678, 0.52 ) }
    dend_30 { pt3dadd( 61.4858, 231.439, 31.8408, 0.22 ) }
    dend_30 { pt3dadd( 61.4963, 231.578, 31.8649, 0.22 ) }
    dend_30 { pt3dadd( 61.5651, 233.364, 32.2363, 0.22 ) }
    dend_30 { pt3dadd( 61.6313, 235.308, 32.6631, 0.22 ) }
    dend_30 { pt3dadd( 61.6669, 236.695, 32.9689, 0.22 ) }
    dend_30 { pt3dadd( 61.6887, 238.705, 33.4019, 0.22 ) }
    dend_30 { pt3dadd( 61.6925, 240.423, 33.7515, 0.88 ) }
    dend_30 { pt3dadd( 61.6646, 241.853, 34.0436, 0.44 ) }
    dend_30 { pt3dadd( 61.6166, 242.906, 34.2564, 0.22 ) }
    dend_30 { pt3dadd( 61.5958, 243.442, 34.3566, 0.37 ) }
    dend_30 { pt3dadd( 61.6081, 244.061, 34.4614, 0.37 ) }
    dend_30 { pt3dadd( 61.7027, 245.534, 34.6954, 0.22 ) }
    dend_30 { pt3dadd( 61.7105, 245.631, 34.7068, 0.22 ) }
    dend_30 { pt3dadd( 61.8068, 246.553, 34.7589, 0.22 ) }
    dend_30 { pt3dadd( 61.835, 246.757, 34.7693, 0.22 ) }
    dend_30 { pt3dadd( 62.0525, 248.104, 34.8468, 0.22 ) }
    dend_30 { pt3dadd( 62.0648, 248.194, 34.852, 0.22 ) }
    dend_30 { pt3dadd( 62.1582, 249.035, 34.8995, 0.22 ) }
    dend_30 { pt3dadd( 62.2545, 250.359, 34.9786, 0.52 ) }
    dend_30 { pt3dadd( 62.3263, 251.975, 35.0834, 0.22 ) }
    dend_30 { pt3dadd( 62.3743, 254.033, 35.2221, 0.22 ) }
    dend_30 { pt3dadd( 62.3746, 256.334, 35.3831, 0.22 ) }
    dend_30 { pt3dadd( 62.3674, 256.624, 35.4033, 0.22 ) }
    dend_30 { pt3dadd( 62.2845, 258.353, 35.5122, 0.22 ) }
    dend_30 { pt3dadd( 62.2662, 258.602, 35.5264, 0.22 ) }
    dend_30 { pt3dadd( 62.1458, 260.046, 35.5958, 0.22 ) }
    dend_30 { pt3dadd( 62.1385, 260.258, 35.5984, 0.22 ) }
    dend_30 { pt3dadd( 62.1712, 261.905, 35.6427, 0.22 ) }
    dend_30 { pt3dadd( 62.313, 264.763, 35.7489, 0.22 ) }
    dend_30 { pt3dadd( 62.3322, 265.065, 35.7646, 0.22 ) }
    dend_30 { pt3dadd( 62.4276, 266.54, 35.8578, 0.96 ) }
    dend_30 { pt3dadd( 62.6106, 269.477, 36.0782, 0.22 ) }
    dend_30 { pt3dadd( 62.7308, 272.255, 36.4178, 0.22 ) }
    dend_30 { pt3dadd( 62.7279, 272.419, 36.4518, 0.22 ) }
    dend_30 { pt3dadd( 62.5836, 274.153, 36.9725, 0.74 ) }
    dend_30 { pt3dadd( 62.5695, 274.244, 37.0054, 0.74 ) }
    dend_30 { pt3dadd( 62.4112, 274.851, 37.2807, 0.74 ) }
    dend_30 { pt3dadd( 61.7276, 276.55, 38.2202, 0.66 ) }
    dend_30 { pt3dadd( 60.8362, 278.406, 39.2681, 0.15 ) }
    dend_30 { pt3dadd( 60.7909, 278.495, 39.316, 0.15 ) }
    dend_30 { pt3dadd( 60.09, 279.764, 39.9912, 0.15 ) }
    dend_30 { pt3dadd( 60.051, 279.831, 40.0243, 0.15 ) }
    dend_30 { pt3dadd( 59.6697, 280.466, 40.2813, 0.15 ) }
    dend_30 { pt3dadd( 59.5684, 280.631, 40.3216, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_52()
}

proc basic_shape_52() {
    dend_30 { pt3dadd( 59.1177, 281.321, 40.4578, 0.15 ) }
    dend_30 { pt3dadd( 59.06, 281.403, 40.4785, 0.15 ) }
    dend_30 { pt3dadd( 58.1737, 282.563, 40.8304, 0.37 ) }
    dend_30 { pt3dadd( 57.4045, 283.55, 41.1412, 0.15 ) }
    dend_30 { pt3dadd( 56.7572, 284.346, 41.4308, 0.66 ) }
    dend_30 { pt3dadd( 56.4596, 284.7, 41.5865, 0.81 ) }
    dend_30 { pt3dadd( 55.3954, 285.919, 42.2452, 0.15 ) }
    dend_30 { pt3dadd( 55.3373, 285.992, 42.2901, 0.15 ) }
    dend_30 { pt3dadd( 54.9037, 286.579, 42.682, 0.37 ) }
    dend_30 { pt3dadd( 54.173, 287.719, 43.4864, 0.15 ) }
    dend_30 { pt3dadd( 53.3559, 289.299, 44.5767, 0.44 ) }
    dend_30 { pt3dadd( 52.9045, 290.407, 45.3431, 0.81 ) }
    dend_30 { pt3dadd( 52.3436, 292.222, 46.5825, 0.22 ) }
    dend_30 { pt3dadd( 52.3254, 292.305, 46.6388, 0.22 ) }
    dend_30 { pt3dadd( 52.1983, 293.425, 47.369, 0.22 ) }
    dend_30 { pt3dadd( 52.1795, 294.354, 47.9178, 0.22 ) }
    dend_30 { pt3dadd( 52.2435, 295.977, 48.7854, 0.81 ) }
    dend_30 { pt3dadd( 52.2559, 296.258, 48.9256, 0.81 ) }
    dend_30 { pt3dadd( 52.2263, 297.446, 49.5728, 0.22 ) }
    dend_30 { pt3dadd( 52.1567, 298.17, 49.9896, 0.22 ) }
    dend_30 { pt3dadd( 52.0241, 298.746, 50.3611, 0.52 ) }
    dend_30 { pt3dadd( 51.9611, 298.907, 50.4998, 0.66 ) }
    dend_30 { pt3dadd( 51.9324, 298.958, 50.5526, 0.66 ) }
    dend_30 { pt3dadd( 51.4052, 299.716, 51.4688, 0.52 ) }
    dend_30 { pt3dadd( 51.0055, 300.238, 52.1695, 0.22 ) }
    dend_30 { pt3dadd( 50.6691, 300.755, 52.7964, 0.59 ) }
    dend_30 { pt3dadd( 49.8646, 302.535, 54.4559, 0.15 ) }
    dend_30 { pt3dadd( 49.6777, 303.141, 54.9178, 0.15 ) }
    dend_30 { pt3dadd( 49.6472, 303.272, 55.0044, 0.15 ) }
    dend_30 { pt3dadd( 49.4539, 304.323, 55.5933, 0.15 ) }
    dend_30 { pt3dadd( 49.1963, 306.105, 56.4868, 0.15 ) }
    dend_30 { pt3dadd( 48.8862, 308.161, 57.3433, 0.15 ) }
    dend_30 { pt3dadd( 48.6384, 309.757, 57.8634, 0.15 ) }
    dend_30 { pt3dadd( 48.6192, 309.848, 57.8919, 0.15 ) }
    dend_30 { pt3dadd( 48.3687, 310.631, 58.1291, 0.15 ) }
    dend_30 { pt3dadd( 48.2253, 310.901, 58.2167, 0.15 ) }
    dend_30 { pt3dadd( 47.2628, 312.029, 58.6517, 0.29 ) }
    dend_30 { pt3dadd( 47.1691, 312.107, 58.6816, 0.29 ) }
    dend_30 { pt3dadd( 46.5616, 312.528, 58.9635, 0.29 ) }
    dend_30 { pt3dadd( 45.8815, 312.982, 59.3602, 0.29 ) }
    dend_30 { pt3dadd( 44.964, 313.589, 59.9483, 0.22 ) }
    dend_30 { pt3dadd( 44.5121, 313.875, 60.2583, 0.52 ) }
    dend_30 { pt3dadd( 43.9762, 314.211, 60.6439, 0.74 ) }
    dend_30 { pt3dadd( 41.0344, 315.965, 62.7461, 0.15 ) }
    dend_30 { pt3dadd( 40.9724, 316.0, 62.79, 0.15 ) }
    dend_30 { pt3dadd( 39.8858, 316.576, 63.5052, 0.15 ) }
    dend_30 { pt3dadd( 39.0928, 316.971, 63.9867, 0.37 ) }
    dend_30 { pt3dadd( 38.4597, 317.239, 64.3248, 0.37 ) }
    dend_30 { pt3dadd( 38.1521, 317.323, 64.4471, 0.37 ) }
    dend_30 { pt3dadd( 37.4654, 317.404, 64.6381, 0.29 ) }
    dend_30 { pt3dadd( 36.4341, 317.423, 64.9551, 0.29 ) }
    dend_30 { pt3dadd( 35.3241, 317.296, 65.3056, 0.15 ) }
    dend_30 { pt3dadd( 33.8915, 317.022, 65.7538, 0.15 ) }
    dend_30 { pt3dadd( 32.1216, 316.52, 66.3036, 0.22 ) }
    dend_30 { pt3dadd( 30.4287, 315.964, 66.7867, 0.22 ) }
    dend_30 { pt3dadd( 29.6575, 315.693, 67.0149, 0.22 ) }
    dend_30 { pt3dadd( 28.4259, 315.248, 67.3743, 0.22 ) }
    dend_30 { pt3dadd( 28.3211, 315.218, 67.4128, 0.22 ) }
    dend_30 { pt3dadd( 27.3204, 315.076, 67.9919, 0.22 ) }
    dend_30 { pt3dadd( 26.654, 315.079, 68.4579, 0.44 ) }
    dend_30 { pt3dadd( 25.3756, 315.271, 69.3937, 0.22 ) }
    dend_30 { pt3dadd( 24.7328, 315.512, 69.9599, 0.66 ) }
    dend_30 { pt3dadd( 22.9608, 316.332, 71.6511, 0.22 ) }
    dend_30 { pt3dadd( 21.6371, 317.012, 72.9815, 0.29 ) }
    dend_30 { pt3dadd( 20.8917, 317.461, 73.803, 0.22 ) }
    dend_30 { pt3dadd( 20.0633, 317.985, 74.7862, 0.44 ) }
    dend_30 { pt3dadd( 18.9523, 318.811, 76.1268, 0.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 67/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 16.7576, 215.574, -8.31049, 0.66 ) }
    dend_28 { pt3dadd( 16.4687, 216.338, -9.43868, 0.66 ) }
    dend_28 { pt3dadd( 16.2212, 217.181, -10.4862, 0.29 ) }
    dend_28 { pt3dadd( 16.1901, 217.318, -10.6226, 0.29 ) }
    dend_28 { pt3dadd( 15.9619, 218.52, -11.6414, 0.66 ) }
    dend_28 { pt3dadd( 15.8122, 219.318, -12.1993, 0.66 ) }
    dend_28 { pt3dadd( 15.6725, 220.052, -12.6596, 0.29 ) }
    dend_28 { pt3dadd( 15.633, 220.234, -12.7417, 0.29 ) }
    dend_28 { pt3dadd( 15.5294, 220.774, -12.9171, 0.29 ) }
    dend_28 { pt3dadd( 15.5153, 220.861, -12.9442, 0.29 ) }
    dend_28 { pt3dadd( 15.3869, 221.842, -13.222, 0.29 ) }
    dend_28 { pt3dadd( 15.3727, 221.929, -13.2492, 0.29 ) }
    dend_28 { pt3dadd( 15.1393, 223.331, -13.6919, 1.03 ) }
    dend_28 { pt3dadd( 14.9665, 224.106, -13.8208, 1.25 ) }
    dend_28 { pt3dadd( 14.7637, 224.844, -13.867, 1.47 ) }
    dend_28 { pt3dadd( 14.6006, 225.344, -13.8712, 1.47 ) }
    dend_28 { pt3dadd( 14.1852, 226.345, -13.7996, 1.47 ) }
    dend_28 { pt3dadd( 14.1475, 226.42, -13.79, 1.47 ) }
    dend_28 { pt3dadd( 12.9195, 228.367, -13.4934, 0.22 ) }
    dend_28 { pt3dadd( 12.4008, 229.027, -13.4069, 0.44 ) }
    dend_28 { pt3dadd( 12.0055, 229.477, -13.3621, 0.44 ) }
    dend_28 { pt3dadd( 11.3953, 230.123, -13.3426, 0.22 ) }
    dend_28 { pt3dadd( 11.3429, 230.176, -13.3466, 0.22 ) }
    dend_28 { pt3dadd( 10.5569, 231.035, -13.5253, 0.81 ) }
    dend_28 { pt3dadd( 9.75945, 231.975, -13.8566, 0.22 ) }
    dend_28 { pt3dadd( 9.28256, 232.595, -14.0653, 1.03 ) }
    dend_28 { pt3dadd( 8.90526, 233.141, -14.2443, 1.18 ) }
    dend_28 { pt3dadd( 8.11602, 234.451, -14.6661, 0.22 ) }
    dend_28 { pt3dadd( 7.59671, 235.39, -14.9392, 0.22 ) }
    dend_28 { pt3dadd( 7.31052, 235.981, -15.0888, 0.81 ) }
    dend_28 { pt3dadd( 7.00598, 236.677, -15.2635, 1.03 ) }
    dend_28 { pt3dadd( 6.95535, 236.811, -15.2869, 1.03 ) }
    dend_28 { pt3dadd( 6.77276, 237.414, -15.358, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_53()
}

proc basic_shape_53() {
    dend_28 { pt3dadd( 6.51869, 238.403, -15.4549, 0.66 ) }
    dend_28 { pt3dadd( 6.29298, 239.26, -15.5517, 0.52 ) }
    dend_28 { pt3dadd( 5.85641, 240.626, -15.6662, 0.22 ) }
    dend_28 { pt3dadd( 5.58357, 241.407, -15.7191, 0.59 ) }
    dend_28 { pt3dadd( 4.97098, 243.164, -15.8011, 0.22 ) }
    dend_28 { pt3dadd( 4.77163, 243.737, -15.8191, 0.81 ) }
    dend_28 { pt3dadd( 4.41236, 244.805, -15.8329, 1.03 ) }
    dend_28 { pt3dadd( 3.68641, 247.031, -15.7257, 0.22 ) }
    dend_28 { pt3dadd( 3.48767, 247.728, -15.6348, 0.88 ) }
    dend_28 { pt3dadd( 3.26882, 248.615, -15.446, 1.11 ) }
    dend_28 { pt3dadd( 3.23832, 248.804, -15.3791, 1.11 ) }
    dend_28 { pt3dadd( 3.19595, 249.343, -15.1494, 1.11 ) }
    dend_28 { pt3dadd( 3.20016, 250.704, -14.5128, 0.22 ) }
    dend_28 { pt3dadd( 3.26916, 251.649, -14.101, 0.74 ) }
    dend_28 { pt3dadd( 3.2957, 252.077, -13.9266, 0.74 ) }
    dend_28 { pt3dadd( 3.42466, 253.589, -13.3129, 0.22 ) }
    dend_28 { pt3dadd( 3.46884, 254.059, -13.1176, 0.88 ) }
    dend_28 { pt3dadd( 3.52619, 254.629, -12.8834, 1.03 ) }
    dend_28 { pt3dadd( 3.59241, 255.467, -12.601, 0.52 ) }
    dend_28 { pt3dadd( 3.63934, 256.44, -12.3241, 0.22 ) }
    dend_28 { pt3dadd( 3.71543, 257.499, -12.0219, 0.22 ) }
    dend_28 { pt3dadd( 3.83707, 258.647, -11.6979, 1.25 ) }
    dend_28 { pt3dadd( 3.84862, 258.745, -11.6714, 1.25 ) }
    dend_28 { pt3dadd( 4.02237, 260.115, -11.3268, 0.22 ) }
    dend_28 { pt3dadd( 4.16056, 261.135, -11.0979, 0.22 ) }
    dend_28 { pt3dadd( 4.2997, 262.146, -10.9043, 0.22 ) }
    dend_28 { pt3dadd( 4.42792, 263.069, -10.7569, 0.22 ) }
    dend_28 { pt3dadd( 4.54114, 263.855, -10.6543, 0.96 ) }
    dend_28 { pt3dadd( 4.69609, 264.885, -10.5233, 1.11 ) }
    dend_28 { pt3dadd( 4.96527, 266.59, -10.3073, 0.22 ) }
    dend_28 { pt3dadd( 5.12116, 267.582, -10.2255, 1.11 ) }
    dend_28 { pt3dadd( 5.13604, 267.689, -10.2221, 1.11 ) }
    dend_28 { pt3dadd( 5.35171, 269.332, -10.2194, 0.22 ) }
    dend_28 { pt3dadd( 5.46024, 270.431, -10.271, 1.03 ) }
    dend_28 { pt3dadd( 5.48832, 270.85, -10.3171, 1.03 ) }
    dend_28 { pt3dadd( 5.52289, 272.437, -10.6125, 0.22 ) }
    dend_28 { pt3dadd( 5.51493, 273.285, -10.8091, 0.22 ) }
    dend_28 { pt3dadd( 5.50978, 273.451, -10.8505, 0.22 ) }
    dend_28 { pt3dadd( 5.49102, 274.818, -11.1934, 0.22 ) }
    dend_28 { pt3dadd( 5.49036, 274.913, -11.2145, 0.22 ) }
    dend_28 { pt3dadd( 5.50943, 275.371, -11.2805, 0.22 ) }
    dend_28 { pt3dadd( 5.51683, 275.451, -11.2837, 0.22 ) }
    dend_28 { pt3dadd( 5.68076, 276.231, -11.2164, 0.52 ) }
    dend_28 { pt3dadd( 6.01883, 277.438, -11.0088, 0.22 ) }
    dend_28 { pt3dadd( 6.21605, 278.051, -10.8678, 0.81 ) }
    dend_28 { pt3dadd( 6.3796, 278.605, -10.746, 0.81 ) }
    dend_28 { pt3dadd( 6.48611, 278.984, -10.6718, 0.81 ) }
    dend_28 { pt3dadd( 6.89789, 280.613, -10.402, 0.22 ) }
    dend_28 { pt3dadd( 6.99857, 281.145, -10.33, 0.74 ) }
    dend_28 { pt3dadd( 7.10094, 281.898, -10.241, 1.03 ) }
    dend_28 { pt3dadd( 7.18168, 282.812, -10.1711, 1.18 ) }
    dend_28 { pt3dadd( 7.23889, 283.927, -10.1223, 1.11 ) }
    dend_28 { pt3dadd( 7.25226, 284.512, -10.1096, 0.81 ) }
    dend_28 { pt3dadd( 7.24519, 286.418, -10.104, 0.29 ) }
    dend_28 { pt3dadd( 7.24328, 287.647, -10.088, 0.81 ) }
    dend_28 { pt3dadd( 7.24839, 289.246, -10.0851, 0.22 ) }
    dend_28 { pt3dadd( 7.24813, 289.45, -10.0881, 0.22 ) }
    dend_28 { pt3dadd( 7.21564, 290.586, -10.1475, 0.22 ) }
    dend_28 { pt3dadd( 7.17719, 291.131, -10.2167, 0.22 ) }
    dend_28 { pt3dadd( 7.08387, 291.874, -10.391, 0.22 ) }
    dend_28 { pt3dadd( 6.79291, 293.365, -10.8792, 1.11 ) }
    dend_28 { pt3dadd( 6.58598, 294.164, -11.2025, 1.62 ) }
    dend_28 { pt3dadd( 6.25866, 295.042, -11.6229, 1.47 ) }
    dend_28 { pt3dadd( 5.64992, 296.261, -12.3217, 0.37 ) }
    dend_28 { pt3dadd( 5.20461, 296.974, -12.797, 0.66 ) }
    dend_28 { pt3dadd( 4.80693, 297.509, -13.1703, 0.66 ) }
    dend_28 { pt3dadd( 4.13445, 298.344, -13.6864, 0.29 ) }
    dend_28 { pt3dadd( 3.27672, 299.394, -14.259, 1.18 ) }
    dend_28 { pt3dadd( 2.79922, 300.016, -14.5331, 0.74 ) }
    dend_28 { pt3dadd( 2.20714, 300.886, -14.8068, 0.29 ) }
    dend_28 { pt3dadd( 1.61912, 301.827, -15.0053, 0.29 ) }
    dend_28 { pt3dadd( 0.846788, 303.289, -15.1849, 0.22 ) }
    dend_28 { pt3dadd( 0.817066, 303.36, -15.1902, 0.22 ) }
    dend_28 { pt3dadd( 0.541703, 304.201, -15.2593, 0.74 ) }
    dend_28 { pt3dadd( 0.367721, 304.848, -15.3342, 1.03 ) }
    dend_28 { pt3dadd( 0.214299, 305.516, -15.4436, 1.18 ) }
    dend_28 { pt3dadd( 0.010272, 306.54, -15.6898, 0.22 ) }
    dend_28 { pt3dadd( -0.177426, 307.781, -16.0356, 0.22 ) }
    dend_28 { pt3dadd( -0.275309, 308.601, -16.2514, 0.22 ) }
    dend_28 { pt3dadd( -0.355087, 309.507, -16.4766, 0.88 ) }
    dend_28 { pt3dadd( -0.360131, 309.596, -16.4991, 0.88 ) }
    dend_28 { pt3dadd( -0.3743, 310.504, -16.7266, 0.88 ) }
    dend_28 { pt3dadd( -0.434781, 312.312, -17.165, 0.22 ) }
    dend_28 { pt3dadd( -0.466304, 313.039, -17.3125, 0.74 ) }
    dend_28 { pt3dadd( -0.473519, 313.141, -17.3295, 0.74 ) }
    dend_28 { pt3dadd( -0.532776, 313.682, -17.4093, 0.96 ) }
    dend_28 { pt3dadd( -0.562147, 313.872, -17.4408, 0.96 ) }
    dend_28 { pt3dadd( -0.864184, 315.351, -17.7071, 0.15 ) }
    dend_28 { pt3dadd( -1.04865, 316.064, -17.8177, 0.29 ) }
    dend_28 { pt3dadd( -1.15673, 316.516, -17.8747, 0.29 ) }
    dend_28 { pt3dadd( -1.28875, 317.099, -17.9405, 0.22 ) }
    dend_28 { pt3dadd( -1.45171, 317.958, -18.005, 0.59 ) }
    dend_28 { pt3dadd( -4.02555, 329.707, -22.2031, 0.59 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 93/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 16.7576, 215.574, -8.31049, 0.22 ) }
    dend_27 { pt3dadd( 17.1596, 217.227, -7.17283, 0.22 ) }
    dend_27 { pt3dadd( 17.1755, 217.293, -7.13211, 0.22 ) }
    dend_27 { pt3dadd( 17.3439, 217.972, -6.72934, 0.96 ) }
    dend_27 { pt3dadd( 17.5925, 218.97, -6.16657, 0.22 ) }
    dend_27 { pt3dadd( 17.7626, 219.613, -5.82449, 0.66 ) }
    dend_27 { pt3dadd( 17.9633, 220.358, -5.45108, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_54()
}

proc basic_shape_54() {
    dend_27 { pt3dadd( 18.1392, 220.85, -5.21858, 0.52 ) }
    dend_27 { pt3dadd( 18.1643, 220.932, -5.17976, 0.52 ) }
    dend_27 { pt3dadd( 18.2464, 221.289, -5.02403, 0.52 ) }
    dend_27 { pt3dadd( 18.3984, 222.097, -4.69535, 0.22 ) }
    dend_27 { pt3dadd( 18.4594, 222.508, -4.52216, 0.59 ) }
    dend_27 { pt3dadd( 18.4818, 222.9, -4.33165, 0.59 ) }
    dend_27 { pt3dadd( 18.4397, 224.287, -3.66175, 0.22 ) }
    dend_27 { pt3dadd( 18.3605, 224.928, -3.40898, 0.96 ) }
    dend_27 { pt3dadd( 18.3559, 225.003, -3.38089, 0.96 ) }
    dend_27 { pt3dadd( 18.3431, 225.374, -3.24591, 0.96 ) }
    dend_27 { pt3dadd( 18.3617, 226.555, -2.82793, 0.66 ) }
    dend_27 { pt3dadd( 18.4193, 227.554, -2.49191, 0.22 ) }
    dend_27 { pt3dadd( 18.5434, 228.921, -2.0757, 0.22 ) }
    dend_27 { pt3dadd( 18.8621, 231.413, -1.28207, 0.22 ) }
    dend_27 { pt3dadd( 18.8887, 231.575, -1.23, 0.22 ) }
    dend_27 { pt3dadd( 19.0407, 232.22, -1.01895, 0.59 ) }
    dend_27 { pt3dadd( 19.069, 232.295, -0.99448, 0.59 ) }
    dend_27 { pt3dadd( 21.6854, 242.527, 2.1831, 0.59 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 18/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -183.979, 28.9981, 59.6774, 0.22 ) }
    dend_18 { pt3dadd( -185.115, 28.9589, 60.4634, 0.22 ) }
    dend_18 { pt3dadd( -185.511, 28.9573, 60.7171, 0.22 ) }
    dend_18 { pt3dadd( -186.006, 28.9848, 61.1131, 0.66 ) }
    dend_18 { pt3dadd( -186.22, 28.9956, 61.2938, 0.88 ) }
    dend_18 { pt3dadd( -186.456, 29.0048, 61.5743, 0.59 ) }
    dend_18 { pt3dadd( -186.493, 29.0033, 61.6296, 0.59 ) }
    dend_18 { pt3dadd( -186.901, 28.9591, 62.4027, 0.29 ) }
    dend_18 { pt3dadd( -187.267, 28.8247, 63.5113, 1.33 ) }
    dend_18 { pt3dadd( -187.307, 28.7569, 63.8131, 1.33 ) }
    dend_18 { pt3dadd( -187.199, 28.2281, 65.3462, 0.37 ) }
    dend_18 { pt3dadd( -187.01, 27.91, 65.9871, 0.37 ) }
    dend_18 { pt3dadd( -186.988, 27.8788, 66.032, 0.29 ) }
    dend_18 { pt3dadd( -186.602, 27.3833, 66.5451, 0.29 ) }
    dend_18 { pt3dadd( -186.165, 26.8538, 66.9798, 0.37 ) }
    dend_18 { pt3dadd( -185.727, 26.3349, 67.3419, 0.37 ) }
    dend_18 { pt3dadd( -185.495, 26.0457, 67.479, 0.29 ) }
    dend_18 { pt3dadd( -184.969, 25.3651, 67.8077, 0.22 ) }
    dend_18 { pt3dadd( -184.757, 25.0704, 67.9535, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 37/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -183.979, 28.9981, 59.6774, 0.22 ) }
    dend_17 { pt3dadd( -184.718, 28.3224, 59.9455, 0.22 ) }
    dend_17 { pt3dadd( -185.295, 27.857, 60.1428, 0.22 ) }
    dend_17 { pt3dadd( -185.34, 27.8275, 60.1564, 0.22 ) }
    dend_17 { pt3dadd( -185.906, 27.5425, 60.3225, 0.22 ) }
    dend_17 { pt3dadd( -186.53, 27.3209, 60.4885, 0.37 ) }
    dend_17 { pt3dadd( -186.696, 27.2888, 60.5333, 0.37 ) }
    dend_17 { pt3dadd( -187.073, 27.3064, 60.6361, 0.37 ) }
    dend_17 { pt3dadd( -187.621, 27.3911, 60.7815, 0.22 ) }
    dend_17 { pt3dadd( -188.086, 27.4792, 60.9177, 0.29 ) }
    dend_17 { pt3dadd( -188.571, 27.5917, 61.0701, 0.29 ) }
    dend_17 { pt3dadd( -189.26, 27.7516, 61.2925, 0.22 ) }
    dend_17 { pt3dadd( -189.757, 27.8486, 61.4547, 0.52 ) }
    dend_17 { pt3dadd( -190.128, 27.9048, 61.575, 0.59 ) }
    dend_17 { pt3dadd( -190.598, 27.9482, 61.7262, 0.29 ) }
    dend_17 { pt3dadd( -191.061, 27.9431, 61.8666, 0.22 ) }
    dend_17 { pt3dadd( -191.29, 27.917, 61.9349, 0.59 ) }
    dend_17 { pt3dadd( -191.712, 27.8391, 62.0457, 0.22 ) }
    dend_17 { pt3dadd( -192.132, 27.7743, 62.1389, 0.59 ) }
    dend_17 { pt3dadd( -192.189, 27.7668, 62.1498, 0.59 ) }
    dend_17 { pt3dadd( -192.799, 27.6915, 62.2487, 0.52 ) }
    dend_17 { pt3dadd( -193.102, 27.6475, 62.2989, 0.81 ) }
    dend_17 { pt3dadd( -193.154, 27.6392, 62.3081, 0.81 ) }
    dend_17 { pt3dadd( -194.012, 27.4736, 62.4679, 0.29 ) }
    dend_17 { pt3dadd( -194.084, 27.4606, 62.4811, 0.29 ) }
    dend_17 { pt3dadd( -194.326, 27.4377, 62.5324, 0.52 ) }
    dend_17 { pt3dadd( -194.71, 27.459, 62.6022, 0.88 ) }
    dend_17 { pt3dadd( -194.762, 27.4721, 62.6108, 0.88 ) }
    dend_17 { pt3dadd( -195.204, 27.6471, 62.6812, 1.25 ) }
    dend_17 { pt3dadd( -195.619, 27.9017, 62.747, 1.4 ) }
    dend_17 { pt3dadd( -196.623, 28.5739, 62.8994, 0.22 ) }
    dend_17 { pt3dadd( -197.174, 29.0011, 62.9792, 0.22 ) }
    dend_17 { pt3dadd( -198.003, 29.7721, 63.0829, 0.29 ) }
    dend_17 { pt3dadd( -198.041, 29.8129, 63.0868, 0.29 ) }
    dend_17 { pt3dadd( -198.296, 30.2012, 63.1034, 0.15 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 72/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 40.574, 76.6588, 52.7089, 0.22 ) }
    dend_12 { pt3dadd( 41.143, 77.38, 52.2306, 0.22 ) }
    dend_12 { pt3dadd( 41.4839, 77.8121, 51.9441, 0.22 ) }
    dend_12 { pt3dadd( 42.4995, 79.0995, 51.0904, 0.22 ) }
    dend_12 { pt3dadd( 42.5415, 79.1527, 51.0551, 0.22 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 77/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 40.574, 76.6588, 52.7089, 0.29 ) }
    dend_11 { pt3dadd( 41.8656, 76.1883, 52.9223, 0.29 ) }
    dend_11 { pt3dadd( 42.9328, 75.8609, 53.0697, 0.37 ) }
    dend_11 { pt3dadd( 43.0455, 75.831, 53.0851, 0.37 ) }
    dend_11 { pt3dadd( 43.6414, 75.6951, 53.1698, 0.52 ) }
    dend_11 { pt3dadd( 44.4001, 75.5518, 53.192, 0.44 ) }
    dend_11 { pt3dadd( 44.4811, 75.5382, 53.192, 0.44 ) }
    dend_11 { pt3dadd( 45.3868, 75.4217, 53.1815, 0.44 ) }
    dend_11 { pt3dadd( 46.1163, 75.3268, 53.1581, 0.74 ) }
    dend_11 { pt3dadd( 46.7019, 75.2321, 53.1515, 0.96 ) }
    dend_11 { pt3dadd( 48.4848, 74.893, 53.1591, 0.22 ) }
    dend_11 { pt3dadd( 49.5359, 74.6848, 53.2024, 0.22 ) }
    dend_11 { pt3dadd( 50.5053, 74.5236, 53.2617, 0.44 ) }
    dend_11 { pt3dadd( 50.6128, 74.511, 53.2719, 0.44 ) }
    dend_11 { pt3dadd( 51.3313, 74.4718, 53.3812, 0.44 ) }
    dend_11 { pt3dadd( 51.3999, 74.4738, 53.3976, 0.44 ) }
    dend_11 { pt3dadd( 52.1972, 74.5981, 53.7084, 0.29 ) }
    dend_11 { pt3dadd( 53.053, 74.8274, 54.008, 0.59 ) }
    dend_11 { pt3dadd( 53.6104, 75.006, 54.1714, 0.81 ) }
    dend_11 { pt3dadd( 54.1933, 75.1826, 54.3171, 0.81 ) }
    dend_11 { pt3dadd( 54.4936, 75.2624, 54.3818, 0.81 ) }
    dend_11 { pt3dadd( 54.601, 75.2822, 54.3964, 0.81 ) }
    dend_11 { pt3dadd( 55.5405, 75.4023, 54.4674, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_55()
}

proc basic_shape_55() {
    dend_11 { pt3dadd( 56.0967, 75.4515, 54.4962, 0.81 ) }
    dend_11 { pt3dadd( 56.6123, 75.4805, 54.5119, 1.03 ) }
    dend_11 { pt3dadd( 57.2069, 75.506, 54.5273, 0.88 ) }
    dend_11 { pt3dadd( 58.5128, 75.5652, 54.5638, 0.22 ) }
    dend_11 { pt3dadd( 59.307, 75.6151, 54.5931, 0.22 ) }
    dend_11 { pt3dadd( 60.1499, 75.694, 54.6444, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 6/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -47.4539, 47.3017, 57.285, 0.29 ) }
    dend_6 { pt3dadd( -47.3955, 47.0345, 57.7132, 0.29 ) }
    dend_6 { pt3dadd( -47.4389, 46.9293, 57.8231, 0.29 ) }
    dend_6 { pt3dadd( -47.7096, 46.5743, 58.0304, 0.29 ) }
    dend_6 { pt3dadd( -47.7511, 46.5304, 58.0674, 0.29 ) }
    dend_6 { pt3dadd( -48.3608, 46.0606, 58.5744, 0.29 ) }
    dend_6 { pt3dadd( -48.6111, 45.905, 58.8993, 0.29 ) }
    dend_6 { pt3dadd( -48.902, 45.7345, 59.2522, 0.29 ) }
    dend_6 { pt3dadd( -49.2528, 45.5591, 59.6553, 0.29 ) }
    dend_6 { pt3dadd( -49.7457, 45.3532, 60.1898, 1.18 ) }
    dend_6 { pt3dadd( -49.9844, 45.2718, 60.457, 1.18 ) }
    dend_6 { pt3dadd( -50.8674, 45.1568, 61.5021, 1.4 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 18/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -47.4539, 47.3017, 57.285, 0.29 ) }
    dend_5 { pt3dadd( -48.1595, 46.7873, 57.4675, 0.29 ) }
    dend_5 { pt3dadd( -48.6954, 46.3965, 57.6061, 0.29 ) }
    dend_5 { pt3dadd( -49.3718, 45.9034, 57.7811, 0.22 ) }
    dend_5 { pt3dadd( -49.7959, 45.5942, 57.8908, 0.59 ) }
    dend_5 { pt3dadd( -49.9819, 45.4586, 57.9389, 0.59 ) }
    // Section: dend_100, id: dend_100, parent: dend_98 (entry count 24/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( 176.903, -238.762, 10.8232, 0.52 ) }
    dend_100 { pt3dadd( 177.435, -239.396, 10.8583, 0.52 ) }
    dend_100 { pt3dadd( 178.02, -240.172, 10.963, 0.52 ) }
    dend_100 { pt3dadd( 178.452, -240.773, 11.0638, 0.74 ) }
    dend_100 { pt3dadd( 179.01, -241.524, 11.1909, 0.15 ) }
    dend_100 { pt3dadd( 179.072, -241.604, 11.2036, 0.15 ) }
    dend_100 { pt3dadd( 179.8, -242.569, 11.3191, 0.15 ) }
    dend_100 { pt3dadd( 180.405, -243.46, 11.3807, 1.4 ) }
    dend_100 { pt3dadd( 180.631, -243.802, 11.3935, 1.4 ) }
    dend_100 { pt3dadd( 181.366, -244.908, 11.3991, 0.29 ) }
    dend_100 { pt3dadd( 181.965, -245.708, 11.379, 0.29 ) }
    dend_100 { pt3dadd( 182.574, -246.427, 11.3594, 0.22 ) }
    dend_100 { pt3dadd( 183.119, -246.979, 11.3342, 0.96 ) }
    dend_100 { pt3dadd( 183.485, -247.311, 11.3037, 1.25 ) }
    dend_100 { pt3dadd( 183.852, -247.617, 11.2779, 1.25 ) }
    dend_100 { pt3dadd( 185.038, -248.548, 11.2662, 0.22 ) }
    dend_100 { pt3dadd( 185.565, -248.948, 11.2906, 1.03 ) }
    dend_100 { pt3dadd( 186.06, -249.311, 11.3392, 1.33 ) }
    dend_100 { pt3dadd( 186.904, -249.949, 11.447, 0.22 ) }
    dend_100 { pt3dadd( 187.605, -250.553, 11.5859, 0.22 ) }
    dend_100 { pt3dadd( 188.23, -251.173, 11.7534, 0.88 ) }
    dend_100 { pt3dadd( 188.552, -251.533, 11.8575, 1.03 ) }
    dend_100 { pt3dadd( 188.634, -251.632, 11.886, 1.03 ) }
    dend_100 { pt3dadd( 188.904, -251.989, 12.0017, 1.03 ) }
    dend_100 { pt3dadd( 189.568, -252.964, 12.3494, 0.29 ) }
    dend_100 { pt3dadd( 189.605, -253.023, 12.3685, 0.29 ) }
    dend_100 { pt3dadd( 190.151, -253.861, 12.5841, 0.29 ) }
    dend_100 { pt3dadd( 190.498, -254.353, 12.7112, 0.22 ) }
    dend_100 { pt3dadd( 190.821, -254.781, 12.8145, 0.74 ) }
    dend_100 { pt3dadd( 191.125, -255.126, 12.9206, 0.74 ) }
    dend_100 { pt3dadd( 191.686, -255.699, 13.1149, 0.22 ) }
    dend_100 { pt3dadd( 192.238, -256.177, 13.3162, 0.81 ) }
    dend_100 { pt3dadd( 192.771, -256.579, 13.5157, 0.81 ) }
    dend_100 { pt3dadd( 193.106, -256.801, 13.6332, 0.81 ) }
    dend_100 { pt3dadd( 194.332, -257.567, 14.028, 0.22 ) }
    dend_100 { pt3dadd( 194.387, -257.6, 14.041, 0.22 ) }
    dend_100 { pt3dadd( 195.235, -258.051, 14.1652, 0.22 ) }
    dend_100 { pt3dadd( 195.94, -258.418, 14.219, 1.11 ) }
    dend_100 { pt3dadd( 196.349, -258.631, 14.1994, 1.33 ) }
    dend_100 { pt3dadd( 196.873, -258.898, 14.1216, 1.25 ) }
    dend_100 { pt3dadd( 197.906, -259.446, 13.8122, 0.22 ) }
    dend_100 { pt3dadd( 198.852, -259.954, 13.4661, 0.22 ) }
    dend_100 { pt3dadd( 198.9, -259.982, 13.4422, 0.22 ) }
    dend_100 { pt3dadd( 199.63, -260.434, 13.0113, 0.22 ) }
    dend_100 { pt3dadd( 199.668, -260.463, 12.986, 0.22 ) }
    dend_100 { pt3dadd( 200.115, -260.905, 12.6647, 0.52 ) }
    dend_100 { pt3dadd( 200.211, -261.026, 12.5869, 0.52 ) }
    dend_100 { pt3dadd( 200.835, -262.002, 12.0333, 0.29 ) }
    dend_100 { pt3dadd( 201.184, -262.571, 11.7324, 0.29 ) }
    dend_100 { pt3dadd( 201.55, -263.222, 11.4411, 1.62 ) }
    dend_100 { pt3dadd( 201.807, -263.676, 11.2574, 1.62 ) }
    // Section: dend_99, id: dend_99, parent: dend_98 (entry count 75/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( 176.903, -238.762, 10.8232, 0.22 ) }
    dend_99 { pt3dadd( 175.816, -239.967, 10.7197, 0.22 ) }
    dend_99 { pt3dadd( 175.113, -240.747, 10.6528, 0.22 ) }
    dend_99 { pt3dadd( 173.747, -242.26, 10.5228, 0.22 ) }
    dend_99 { pt3dadd( 173.067, -243.014, 10.458, 0.22 ) }
    dend_99 { pt3dadd( 172.632, -243.496, 10.4166, 0.22 ) }
    dend_99 { pt3dadd( 171.813, -244.404, 10.3387, 0.22 ) }
    // Section: dend_91, id: dend_91, parent: dend_89 (entry count 82/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( 26.0433, -351.34, -78.989, 0.22 ) }
    dend_91 { pt3dadd( 25.8802, -353.065, -78.8693, 0.22 ) }
    dend_91 { pt3dadd( 25.7623, -353.77, -78.7642, 0.74 ) }
    dend_91 { pt3dadd( 25.6417, -354.374, -78.6558, 0.96 ) }
    dend_91 { pt3dadd( 25.4735, -355.232, -78.4983, 0.59 ) }
    dend_91 { pt3dadd( 25.2055, -356.722, -78.2298, 0.22 ) }
    dend_91 { pt3dadd( 25.0316, -357.754, -78.0466, 0.22 ) }
    dend_91 { pt3dadd( 24.7719, -359.391, -77.7563, 0.22 ) }
    dend_91 { pt3dadd( 24.7551, -359.492, -77.7411, 0.22 ) }
    dend_91 { pt3dadd( 24.5806, -360.563, -77.6175, 0.22 ) }
    dend_91 { pt3dadd( 24.4948, -361.02, -77.5848, 0.52 ) }
    dend_91 { pt3dadd( 24.4756, -361.116, -77.5846, 0.52 ) }
    dend_91 { pt3dadd( 24.2025, -362.526, -77.6343, 0.22 ) }
    dend_91 { pt3dadd( 23.99, -363.344, -77.6727, 0.81 ) }
    dend_91 { pt3dadd( 23.8371, -363.796, -77.6806, 1.03 ) }
    dend_91 { pt3dadd( 23.5364, -364.488, -77.6707, 0.74 ) }
    dend_91 { pt3dadd( 22.9649, -365.733, -77.6704, 0.22 ) }
    dend_91 { pt3dadd( 22.6415, -366.47, -77.6743, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_56()
}

proc basic_shape_56() {
    dend_91 { pt3dadd( 22.0757, -367.777, -77.6763, 0.22 ) }
    dend_91 { pt3dadd( 21.8456, -368.378, -77.6898, 0.96 ) }
    dend_91 { pt3dadd( 21.6507, -369.025, -77.7188, 1.11 ) }
    dend_91 { pt3dadd( 21.2595, -370.847, -77.8438, 0.22 ) }
    dend_91 { pt3dadd( 21.1405, -371.817, -77.9394, 1.03 ) }
    dend_91 { pt3dadd( 21.1388, -371.91, -77.948, 1.03 ) }
    dend_91 { pt3dadd( 21.2034, -372.771, -78.016, 1.25 ) }
    dend_91 { pt3dadd( 21.3164, -373.898, -78.0683, 0.88 ) }
    dend_91 { pt3dadd( 21.3323, -374.272, -78.0654, 0.74 ) }
    dend_91 { pt3dadd( 21.3283, -374.401, -78.0558, 0.74 ) }
    dend_91 { pt3dadd( 21.2332, -375.58, -77.9579, 0.22 ) }
    dend_91 { pt3dadd( 21.1009, -376.764, -77.8573, 0.22 ) }
    dend_91 { pt3dadd( 21.0626, -377.042, -77.8335, 0.22 ) }
    dend_91 { pt3dadd( 20.8328, -378.53, -77.5894, 0.22 ) }
    dend_91 { pt3dadd( 20.6678, -379.721, -77.3538, 0.22 ) }
    dend_91 { pt3dadd( 20.5293, -381.023, -77.0857, 1.18 ) }
    dend_91 { pt3dadd( 20.4699, -381.825, -76.9202, 1.4 ) }
    dend_91 { pt3dadd( 20.4612, -382.476, -76.7576, 1.4 ) }
    dend_91 { pt3dadd( 20.5889, -384.837, -76.0264, 0.22 ) }
    dend_91 { pt3dadd( 20.7538, -386.077, -75.5049, 0.22 ) }
    dend_91 { pt3dadd( 20.9258, -387.164, -74.9465, 0.52 ) }
    dend_91 { pt3dadd( 20.9795, -387.504, -74.7487, 0.52 ) }
    dend_91 { pt3dadd( 21.2458, -389.161, -73.6709, 0.22 ) }
    dend_91 { pt3dadd( 21.4613, -390.491, -72.7219, 0.96 ) }
    dend_91 { pt3dadd( 21.7791, -392.197, -71.4358, 0.22 ) }
    dend_91 { pt3dadd( 21.7918, -392.27, -71.3745, 0.22 ) }
    dend_91 { pt3dadd( 21.9208, -393.165, -70.5789, 0.22 ) }
    dend_91 { pt3dadd( 22.0511, -394.182, -69.776, 0.22 ) }
    dend_91 { pt3dadd( 22.0591, -394.26, -69.7338, 0.22 ) }
    dend_91 { pt3dadd( 22.1515, -395.068, -69.5211, 1.4 ) }
    dend_91 { pt3dadd( 22.1683, -395.176, -69.5115, 1.4 ) }
    dend_91 { pt3dadd( 22.2937, -395.722, -69.4525, 1.4 ) }
    dend_91 { pt3dadd( 22.8497, -397.094, -69.0888, 0.22 ) }
    dend_91 { pt3dadd( 23.3557, -398.121, -68.6231, 0.22 ) }
    dend_91 { pt3dadd( 23.5967, -398.597, -68.3322, 0.52 ) }
    dend_91 { pt3dadd( 23.6386, -398.677, -68.2728, 0.52 ) }
    dend_91 { pt3dadd( 24.2608, -399.868, -67.2342, 1.4 ) }
    dend_91 { pt3dadd( 25.2011, -401.703, -65.4857, 0.59 ) }
    dend_91 { pt3dadd( 25.6684, -402.713, -64.4455, 0.22 ) }
    dend_91 { pt3dadd( 26.0767, -403.753, -63.2349, 0.22 ) }
    dend_91 { pt3dadd( 26.1057, -403.846, -63.1215, 0.22 ) }
    dend_91 { pt3dadd( 26.4167, -405.343, -61.2841, 1.18 ) }
    dend_91 { pt3dadd( 26.5265, -406.624, -59.7122, 0.22 ) }
    dend_91 { pt3dadd( 26.4516, -407.744, -58.4235, 0.88 ) }
    dend_91 { pt3dadd( 26.1722, -409.502, -56.4011, 0.22 ) }
    dend_91 { pt3dadd( 26.0864, -409.816, -56.0414, 1.03 ) }
    dend_91 { pt3dadd( 25.92, -410.256, -55.5689, 1.03 ) }
    dend_91 { pt3dadd( 25.8886, -410.317, -55.5103, 1.03 ) }
    dend_91 { pt3dadd( 25.2864, -411.341, -54.6412, 0.22 ) }
    dend_91 { pt3dadd( 24.8707, -412.081, -54.1442, 0.22 ) }
    dend_91 { pt3dadd( 24.0983, -413.441, -53.4175, 1.11 ) }
    dend_91 { pt3dadd( 23.8805, -413.793, -53.2374, 1.11 ) }
    dend_91 { pt3dadd( 22.8694, -415.32, -52.5103, 0.22 ) }
    dend_91 { pt3dadd( 22.4498, -415.882, -52.2611, 0.88 ) }
    dend_91 { pt3dadd( 21.9884, -416.406, -52.031, 0.96 ) }
    dend_91 { pt3dadd( 21.249, -417.209, -51.7106, 0.96 ) }
    dend_91 { pt3dadd( 20.2138, -418.381, -51.3407, 0.22 ) }
    dend_91 { pt3dadd( 19.5547, -419.274, -51.0502, 0.22 ) }
    dend_91 { pt3dadd( 19.022, -420.106, -50.7816, 0.22 ) }
    dend_91 { pt3dadd( 18.2672, -421.695, -50.2536, 0.96 ) }
    dend_91 { pt3dadd( 18.0416, -422.463, -49.9933, 1.25 ) }
    dend_91 { pt3dadd( 17.9217, -423.344, -49.6956, 1.18 ) }
    dend_91 { pt3dadd( 17.9262, -425.643, -48.8339, 0.22 ) }
    dend_91 { pt3dadd( 17.9415, -425.83, -48.7599, 0.22 ) }
    dend_91 { pt3dadd( 18.1395, -427.043, -48.225, 0.22 ) }
    dend_91 { pt3dadd( 18.3522, -428.208, -47.6868, 0.88 ) }
    dend_91 { pt3dadd( 18.4138, -428.654, -47.4679, 0.88 ) }
    dend_91 { pt3dadd( 18.5895, -430.485, -46.538, 0.22 ) }
    dend_91 { pt3dadd( 18.5942, -430.572, -46.4953, 0.22 ) }
    dend_91 { pt3dadd( 18.6464, -432.611, -45.4826, 0.22 ) }
    dend_91 { pt3dadd( 18.5966, -433.508, -45.0456, 1.25 ) }
    dend_91 { pt3dadd( 18.5066, -434.107, -44.7809, 1.25 ) }
    dend_91 { pt3dadd( 18.4887, -434.19, -44.7514, 1.25 ) }
    dend_91 { pt3dadd( 18.3306, -434.751, -44.6264, 1.25 ) }
    dend_91 { pt3dadd( 18.1572, -435.386, -44.5378, 0.66 ) }
    dend_91 { pt3dadd( 17.7237, -436.785, -44.4971, 0.15 ) }
    dend_91 { pt3dadd( 17.7004, -436.868, -44.4951, 0.15 ) }
    dend_91 { pt3dadd( 17.4481, -437.802, -44.474, 0.15 ) }
    dend_91 { pt3dadd( 17.4084, -437.982, -44.4689, 0.15 ) }
    dend_91 { pt3dadd( 17.2241, -439.005, -44.4376, 0.15 ) }
    dend_91 { pt3dadd( 17.0637, -440.114, -44.4038, 0.15 ) }
    dend_91 { pt3dadd( 16.9226, -441.318, -44.3657, 0.96 ) }
    dend_91 { pt3dadd( 16.8564, -442.01, -44.3446, 1.18 ) }
    dend_91 { pt3dadd( 16.7411, -443.552, -44.2407, 0.22 ) }
    dend_91 { pt3dadd( 16.6868, -444.544, -44.1507, 0.22 ) }
    dend_91 { pt3dadd( 16.6663, -445.535, -43.9942, 0.88 ) }
    dend_91 { pt3dadd( 16.698, -447.041, -43.6881, 0.22 ) }
    dend_91 { pt3dadd( 16.7242, -447.693, -43.5309, 0.22 ) }
    dend_91 { pt3dadd( 16.7961, -449.387, -43.0644, 0.96 ) }
    dend_91 { pt3dadd( 16.8427, -450.05, -42.8617, 1.25 ) }
    dend_91 { pt3dadd( 17.1119, -452.416, -42.0766, 0.22 ) }
    dend_91 { pt3dadd( 17.1271, -452.503, -42.0373, 0.22 ) }
    dend_91 { pt3dadd( 17.2331, -453.023, -41.7761, 0.22 ) }
    dend_91 { pt3dadd( 17.2482, -453.097, -41.7367, 0.22 ) }
    dend_91 { pt3dadd( 17.4753, -453.955, -41.2571, 0.22 ) }
    dend_91 { pt3dadd( 17.6102, -454.369, -40.9894, 0.88 ) }
    dend_91 { pt3dadd( 18.6901, -456.619, -39.265, 0.22 ) }
    // Section: dend_90, id: dend_90, parent: dend_89 (entry count 97/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( 26.0433, -351.34, -78.989, 0.29 ) }
    dend_90 { pt3dadd( 26.5142, -352.012, -80.0515, 0.29 ) }
    dend_90 { pt3dadd( 27.2689, -353.085, -81.4686, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_57()
}

proc basic_shape_57() {
    dend_90 { pt3dadd( 27.5799, -353.538, -81.9995, 1.11 ) }
    dend_90 { pt3dadd( 27.8542, -353.93, -82.4284, 1.33 ) }
    dend_90 { pt3dadd( 28.1803, -354.362, -82.9065, 1.33 ) }
    dend_90 { pt3dadd( 28.2096, -354.398, -82.9458, 1.33 ) }
    dend_90 { pt3dadd( 28.5835, -354.868, -83.342, 0.88 ) }
    dend_90 { pt3dadd( 29.3495, -355.762, -83.9765, 0.37 ) }
    dend_90 { pt3dadd( 29.5206, -355.974, -84.1388, 0.37 ) }
    dend_90 { pt3dadd( 29.8749, -356.46, -84.4905, 0.37 ) }
    dend_90 { pt3dadd( 30.3901, -357.196, -84.9782, 0.88 ) }
    dend_90 { pt3dadd( 30.6076, -357.526, -85.1691, 1.62 ) }
    dend_90 { pt3dadd( 30.7786, -357.802, -85.3128, 1.62 ) }
    dend_90 { pt3dadd( 31.3459, -358.764, -85.7188, 0.37 ) }
    dend_90 { pt3dadd( 31.6639, -359.313, -85.9439, 0.29 ) }
    dend_90 { pt3dadd( 31.9566, -359.85, -86.1464, 0.96 ) }
    dend_90 { pt3dadd( 32.2535, -360.416, -86.3714, 0.96 ) }
    dend_90 { pt3dadd( 32.4496, -360.834, -86.602, 1.33 ) }
    dend_90 { pt3dadd( 32.6043, -361.187, -86.8335, 1.11 ) }
    dend_90 { pt3dadd( 32.935, -361.993, -87.4029, 0.37 ) }
    dend_90 { pt3dadd( 33.084, -362.543, -87.8828, 1.11 ) }
    dend_90 { pt3dadd( 33.1563, -363.048, -88.3615, 1.11 ) }
    dend_90 { pt3dadd( 33.2267, -364.6, -89.8914, 0.66 ) }
    dend_90 { pt3dadd( 33.2259, -364.639, -89.9299, 0.66 ) }
    dend_90 { pt3dadd( 33.1689, -365.294, -90.5496, 0.88 ) }
    dend_90 { pt3dadd( 32.9337, -366.8, -91.9302, 0.29 ) }
    dend_90 { pt3dadd( 32.8811, -367.095, -92.2008, 1.25 ) }
    dend_90 { pt3dadd( 32.8369, -367.398, -92.4516, 1.55 ) }
    dend_90 { pt3dadd( 32.8095, -367.796, -92.7454, 1.25 ) }
    dend_90 { pt3dadd( 32.8368, -368.445, -93.2342, 0.88 ) }
    dend_90 { pt3dadd( 32.8458, -368.487, -93.2672, 0.88 ) }
    dend_90 { pt3dadd( 33.3003, -369.411, -93.9936, 0.37 ) }
    dend_90 { pt3dadd( 33.603, -369.871, -94.4072, 0.37 ) }
    dend_90 { pt3dadd( 34.0616, -370.434, -94.9718, 1.33 ) }
    dend_90 { pt3dadd( 34.3883, -370.767, -95.3301, 1.47 ) }
    dend_90 { pt3dadd( 34.9762, -371.266, -95.8573, 0.52 ) }
    dend_90 { pt3dadd( 35.3999, -371.593, -96.2039, 0.22 ) }
    dend_90 { pt3dadd( 35.5637, -371.703, -96.3145, 0.22 ) }
    dend_90 { pt3dadd( 35.9062, -371.91, -96.5308, 1.18 ) }
    dend_90 { pt3dadd( 36.271, -372.119, -96.7395, 1.47 ) }
    dend_90 { pt3dadd( 36.8832, -372.459, -97.109, 1.62 ) }
    dend_90 { pt3dadd( 37.8885, -372.979, -97.6932, 0.74 ) }
    dend_90 { pt3dadd( 38.5701, -373.323, -98.1016, 0.22 ) }
    dend_90 { pt3dadd( 38.9846, -373.535, -98.4295, 0.22 ) }
    dend_90 { pt3dadd( 39.0242, -373.558, -98.4691, 0.22 ) }
    dend_90 { pt3dadd( 39.3985, -373.797, -98.8994, 1.25 ) }
    dend_90 { pt3dadd( 39.7861, -374.089, -99.3931, 1.47 ) }
    dend_90 { pt3dadd( 39.8223, -374.12, -99.4403, 1.47 ) }
    dend_90 { pt3dadd( 41.0229, -375.316, -101.132, 0.22 ) }
    dend_90 { pt3dadd( 41.4516, -375.786, -101.726, 0.22 ) }
    dend_90 { pt3dadd( 41.8662, -376.252, -102.23, 0.22 ) }
    dend_90 { pt3dadd( 42.1778, -376.625, -102.568, 0.81 ) }
    dend_90 { pt3dadd( 42.3905, -376.888, -102.772, 1.03 ) }
    dend_90 { pt3dadd( 42.4606, -376.97, -102.822, 1.03 ) }
    dend_90 { pt3dadd( 42.8494, -377.366, -102.939, 1.03 ) }
    dend_90 { pt3dadd( 43.4004, -377.859, -103.078, 0.59 ) }
    dend_90 { pt3dadd( 43.4422, -377.892, -103.089, 0.59 ) }
    dend_90 { pt3dadd( 44.2338, -378.396, -103.297, 0.22 ) }
    dend_90 { pt3dadd( 44.2814, -378.419, -103.31, 0.22 ) }
    dend_90 { pt3dadd( 44.9386, -378.59, -103.519, 0.22 ) }
    dend_90 { pt3dadd( 44.9854, -378.598, -103.535, 0.22 ) }
    dend_90 { pt3dadd( 45.5832, -378.685, -103.739, 0.96 ) }
    dend_90 { pt3dadd( 45.8496, -378.725, -103.824, 1.33 ) }
    dend_90 { pt3dadd( 46.372, -378.812, -103.972, 1.33 ) }
    dend_90 { pt3dadd( 47.421, -379.043, -104.262, 0.22 ) }
    dend_90 { pt3dadd( 48.2392, -379.253, -104.483, 0.22 ) }
    dend_90 { pt3dadd( 48.8415, -379.43, -104.637, 0.29 ) }
    dend_90 { pt3dadd( 48.883, -379.444, -104.647, 0.29 ) }
    dend_90 { pt3dadd( 49.5303, -379.689, -104.787, 0.29 ) }
    dend_90 { pt3dadd( 50.2017, -379.988, -104.912, 0.29 ) }
    dend_90 { pt3dadd( 50.5319, -380.143, -104.959, 1.03 ) }
    dend_90 { pt3dadd( 50.8951, -380.317, -105.011, 1.25 ) }
    dend_90 { pt3dadd( 51.4403, -380.58, -105.11, 0.96 ) }
    dend_90 { pt3dadd( 52.0499, -380.892, -105.239, 0.29 ) }
    dend_90 { pt3dadd( 52.8882, -381.347, -105.458, 0.29 ) }
    dend_90 { pt3dadd( 53.5132, -381.714, -105.643, 0.88 ) }
    dend_90 { pt3dadd( 53.9287, -381.984, -105.776, 1.18 ) }
    dend_90 { pt3dadd( 54.4505, -382.343, -105.95, 1.11 ) }
    dend_90 { pt3dadd( 55.133, -382.814, -106.18, 0.44 ) }
    dend_90 { pt3dadd( 55.6295, -383.173, -106.347, 0.66 ) }
    dend_90 { pt3dadd( 56.0397, -383.481, -106.487, 0.81 ) }
    dend_90 { pt3dadd( 56.5855, -383.933, -106.661, 0.52 ) }
    dend_90 { pt3dadd( 57.0836, -384.375, -106.799, 0.22 ) }
    dend_90 { pt3dadd( 57.3485, -384.633, -106.851, 0.52 ) }
    dend_90 { pt3dadd( 57.7677, -385.059, -106.938, 0.22 ) }
    dend_90 { pt3dadd( 57.8442, -385.139, -106.958, 0.22 ) }
    dend_90 { pt3dadd( 58.1857, -385.493, -107.076, 0.22 ) }
    dend_90 { pt3dadd( 58.2955, -385.612, -107.119, 0.22 ) }
    dend_90 { pt3dadd( 58.813, -386.252, -107.34, 0.22 ) }
    dend_90 { pt3dadd( 59.1936, -386.72, -107.499, 1.33 ) }
    dend_90 { pt3dadd( 59.6901, -387.305, -107.695, 1.47 ) }
    dend_90 { pt3dadd( 60.0301, -387.714, -107.826, 1.47 ) }
    dend_90 { pt3dadd( 60.6492, -388.476, -108.06, 0.22 ) }
    dend_90 { pt3dadd( 61.2316, -389.191, -108.286, 0.22 ) }
    dend_90 { pt3dadd( 61.647, -389.699, -108.444, 0.22 ) }
    dend_90 { pt3dadd( 62.0761, -390.212, -108.589, 0.88 ) }
    dend_90 { pt3dadd( 62.2633, -390.423, -108.647, 1.18 ) }
    dend_90 { pt3dadd( 62.3785, -390.538, -108.695, 1.18 ) }
    dend_90 { pt3dadd( 63.0766, -391.148, -109.053, 0.22 ) }
    dend_90 { pt3dadd( 63.3949, -391.412, -109.237, 0.96 ) }
    dend_90 { pt3dadd( 63.8166, -391.78, -109.511, 1.25 ) }
    dend_90 { pt3dadd( 63.8647, -391.822, -109.544, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_58()
}

proc basic_shape_58() {
    dend_90 { pt3dadd( 64.8922, -392.717, -110.268, 0.22 ) }
    dend_90 { pt3dadd( 64.9382, -392.758, -110.301, 0.22 ) }
    dend_90 { pt3dadd( 65.2308, -393.033, -110.517, 0.22 ) }
    dend_90 { pt3dadd( 65.2642, -393.062, -110.541, 0.22 ) }
    dend_90 { pt3dadd( 65.6687, -393.383, -110.8, 0.59 ) }
    dend_90 { pt3dadd( 65.7574, -393.454, -110.867, 0.59 ) }
    dend_90 { pt3dadd( 65.8836, -393.565, -110.969, 0.59 ) }
    dend_90 { pt3dadd( 65.9129, -393.592, -110.995, 0.59 ) }
    dend_90 { pt3dadd( 66.2145, -393.925, -111.323, 0.15 ) }
    dend_90 { pt3dadd( 66.4427, -394.208, -111.598, 1.33 ) }
    dend_90 { pt3dadd( 67.1674, -395.155, -112.525, 1.25 ) }
    dend_90 { pt3dadd( 67.4583, -395.55, -112.887, 0.88 ) }
    dend_90 { pt3dadd( 67.4863, -395.59, -112.923, 0.88 ) }
    dend_90 { pt3dadd( 67.9335, -396.391, -113.666, 0.22 ) }
    dend_90 { pt3dadd( 67.9692, -396.469, -113.74, 0.22 ) }
    dend_90 { pt3dadd( 68.272, -397.16, -114.434, 0.88 ) }
    dend_90 { pt3dadd( 68.6093, -397.893, -115.165, 0.22 ) }
    dend_90 { pt3dadd( 68.8214, -398.292, -115.605, 1.18 ) }
    dend_90 { pt3dadd( 69.416, -399.163, -116.803, 0.74 ) }
    dend_90 { pt3dadd( 69.4352, -399.186, -116.841, 0.74 ) }
    dend_90 { pt3dadd( 69.9013, -399.638, -117.743, 0.59 ) }
    dend_90 { pt3dadd( 70.2663, -399.895, -118.414, 1.03 ) }
    dend_90 { pt3dadd( 70.676, -400.066, -119.074, 1.03 ) }
    dend_90 { pt3dadd( 71.7199, -400.308, -120.454, 0.22 ) }
    dend_90 { pt3dadd( 71.7567, -400.311, -120.493, 0.22 ) }
    dend_90 { pt3dadd( 71.9421, -400.312, -120.684, 0.44 ) }
    dend_90 { pt3dadd( 72.1526, -400.299, -120.886, 0.44 ) }
    dend_90 { pt3dadd( 72.3833, -400.296, -121.091, 0.44 ) }
    dend_90 { pt3dadd( 72.4227, -400.307, -121.12, 0.44 ) }
    dend_90 { pt3dadd( 72.9573, -400.542, -121.441, 0.22 ) }
    dend_90 { pt3dadd( 73.0072, -400.56, -121.477, 0.22 ) }
    dend_90 { pt3dadd( 73.5996, -400.732, -121.928, 1.03 ) }
    dend_90 { pt3dadd( 73.9446, -400.81, -122.192, 1.4 ) }
    dend_90 { pt3dadd( 75.2117, -401.024, -123.155, 0.22 ) }
    dend_90 { pt3dadd( 75.4011, -401.045, -123.293, 0.66 ) }
    dend_90 { pt3dadd( 76.4769, -401.114, -124.047, 0.22 ) }
    dend_90 { pt3dadd( 76.8134, -401.112, -124.269, 0.88 ) }
    dend_90 { pt3dadd( 77.1971, -401.085, -124.492, 1.03 ) }
    dend_90 { pt3dadd( 77.2732, -401.078, -124.529, 1.03 ) }
    dend_90 { pt3dadd( 77.6121, -401.052, -124.663, 1.03 ) }
    dend_90 { pt3dadd( 77.6613, -401.052, -124.684, 1.03 ) }
    dend_90 { pt3dadd( 78.4147, -401.132, -125.005, 0.29 ) }
    dend_90 { pt3dadd( 79.1395, -401.297, -125.501, 0.29 ) }
    dend_90 { pt3dadd( 79.179, -401.31, -125.535, 0.29 ) }
    dend_90 { pt3dadd( 80.0926, -401.641, -126.384, 0.29 ) }
    dend_90 { pt3dadd( 80.5283, -401.805, -126.81, 0.88 ) }
    dend_90 { pt3dadd( 81.0409, -401.999, -127.32, 1.18 ) }
    dend_90 { pt3dadd( 82.5094, -402.597, -128.868, 0.22 ) }
    dend_90 { pt3dadd( 82.7922, -402.719, -129.162, 0.81 ) }
    dend_90 { pt3dadd( 83.4017, -402.994, -129.742, 0.59 ) }
    dend_90 { pt3dadd( 83.715, -403.16, -129.992, 0.81 ) }
    dend_90 { pt3dadd( 84.0848, -403.345, -130.218, 1.18 ) }
    dend_90 { pt3dadd( 84.1364, -403.369, -130.239, 1.18 ) }
    dend_90 { pt3dadd( 84.6274, -403.574, -130.336, 0.81 ) }
    dend_90 { pt3dadd( 84.6693, -403.597, -130.352, 0.81 ) }
    dend_90 { pt3dadd( 85.2381, -404.026, -130.671, 0.22 ) }
    dend_90 { pt3dadd( 85.5014, -404.234, -130.885, 0.44 ) }
    dend_90 { pt3dadd( 85.6158, -404.319, -130.988, 0.44 ) }
    dend_90 { pt3dadd( 86.208, -404.736, -131.549, 0.29 ) }
    dend_90 { pt3dadd( 86.8019, -405.161, -132.186, 1.33 ) }
    dend_90 { pt3dadd( 87.0651, -405.354, -132.478, 1.47 ) }
    dend_90 { pt3dadd( 87.9608, -406.015, -133.519, 0.29 ) }
    dend_90 { pt3dadd( 88.2904, -406.269, -133.921, 0.29 ) }
    dend_90 { pt3dadd( 88.3194, -406.292, -133.956, 0.29 ) }
    dend_90 { pt3dadd( 89.2568, -406.982, -135.035, 1.25 ) }
    dend_90 { pt3dadd( 89.5766, -407.21, -135.398, 1.25 ) }
    dend_90 { pt3dadd( 89.6193, -407.24, -135.446, 1.25 ) }
    dend_90 { pt3dadd( 90.1261, -407.593, -136.016, 1.03 ) }
    dend_90 { pt3dadd( 90.4143, -407.804, -136.367, 0.66 ) }
    dend_90 { pt3dadd( 91.2345, -408.391, -137.336, 0.29 ) }
    dend_90 { pt3dadd( 91.2738, -408.417, -137.379, 0.29 ) }
    dend_90 { pt3dadd( 91.7305, -408.729, -137.851, 0.29 ) }
    dend_90 { pt3dadd( 92.3193, -409.133, -138.398, 0.22 ) }
    dend_90 { pt3dadd( 92.878, -409.52, -138.858, 0.81 ) }
    dend_90 { pt3dadd( 93.2919, -409.815, -139.179, 0.88 ) }
    dend_90 { pt3dadd( 93.8926, -410.242, -139.572, 0.74 ) }
    dend_90 { pt3dadd( 94.5304, -410.661, -139.927, 0.22 ) }
    dend_90 { pt3dadd( 94.9209, -410.87, -140.087, 0.88 ) }
    dend_90 { pt3dadd( 95.2069, -410.987, -140.165, 1.11 ) }
    dend_90 { pt3dadd( 95.2573, -411.003, -140.175, 1.11 ) }
    dend_90 { pt3dadd( 95.7327, -411.127, -140.256, 0.88 ) }
    dend_90 { pt3dadd( 96.7162, -411.342, -140.385, 0.29 ) }
    dend_90 { pt3dadd( 98.0105, -411.599, -140.529, 0.29 ) }
    dend_90 { pt3dadd( 98.0935, -411.614, -140.539, 0.29 ) }
    dend_90 { pt3dadd( 98.4786, -411.668, -140.596, 0.52 ) }
    dend_90 { pt3dadd( 99.1304, -411.741, -140.706, 0.22 ) }
    dend_90 { pt3dadd( 99.6652, -411.79, -140.807, 1.03 ) }
    dend_90 { pt3dadd( 100.23, -411.833, -140.924, 1.11 ) }
    dend_90 { pt3dadd( 101.495, -411.968, -141.197, 0.22 ) }
    dend_90 { pt3dadd( 102.443, -412.088, -141.42, 0.22 ) }
    dend_90 { pt3dadd( 102.732, -412.127, -141.494, 1.03 ) }
    dend_90 { pt3dadd( 102.943, -412.16, -141.55, 1.03 ) }
    dend_90 { pt3dadd( 102.999, -412.17, -141.57, 1.03 ) }
    dend_90 { pt3dadd( 104.018, -412.425, -142.062, 0.22 ) }
    dend_90 { pt3dadd( 104.686, -412.657, -142.459, 0.74 ) }
    dend_90 { pt3dadd( 104.729, -412.674, -142.487, 0.74 ) }
    dend_90 { pt3dadd( 105.202, -412.865, -142.848, 0.74 ) }
    dend_90 { pt3dadd( 106.212, -413.265, -143.668, 0.22 ) }
    dend_90 { pt3dadd( 106.869, -413.514, -144.225, 1.33 ) }
    dend_90 { pt3dadd( 107.212, -413.646, -144.519, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_59()
}

proc basic_shape_59() {
    dend_90 { pt3dadd( 107.253, -413.664, -144.55, 1.33 ) }
    dend_90 { pt3dadd( 108.482, -414.258, -145.426, 0.22 ) }
    dend_90 { pt3dadd( 108.787, -414.418, -145.627, 0.81 ) }
    dend_90 { pt3dadd( 109.052, -414.56, -145.768, 0.81 ) }
    dend_90 { pt3dadd( 109.731, -414.943, -146.116, 0.22 ) }
    dend_90 { pt3dadd( 110.518, -415.44, -146.559, 0.22 ) }
    dend_90 { pt3dadd( 110.934, -415.73, -146.799, 0.74 ) }
    dend_90 { pt3dadd( 110.985, -415.766, -146.817, 0.74 ) }
    dend_90 { pt3dadd( 111.192, -415.898, -146.86, 0.74 ) }
    dend_90 { pt3dadd( 112.313, -416.56, -146.97, 0.22 ) }
    dend_90 { pt3dadd( 112.96, -416.9, -146.837, 0.88 ) }
    dend_90 { pt3dadd( 113.301, -417.068, -146.676, 1.18 ) }
    dend_90 { pt3dadd( 115.105, -417.918, -145.592, 0.22 ) }
    dend_90 { pt3dadd( 115.394, -418.048, -145.393, 0.88 ) }
    dend_90 { pt3dadd( 115.507, -418.094, -145.304, 0.88 ) }
    dend_90 { pt3dadd( 116.949, -418.653, -144.055, 0.22 ) }
    dend_90 { pt3dadd( 117.691, -418.942, -143.397, 0.88 ) }
    dend_90 { pt3dadd( 117.847, -419.004, -143.27, 0.88 ) }
    dend_90 { pt3dadd( 117.899, -419.026, -143.234, 0.88 ) }
    dend_90 { pt3dadd( 118.677, -419.343, -142.768, 0.22 ) }
    dend_90 { pt3dadd( 119.306, -419.564, -142.485, 0.22 ) }
    dend_90 { pt3dadd( 119.371, -419.58, -142.467, 0.22 ) }
    dend_90 { pt3dadd( 120.253, -419.775, -142.237, 0.74 ) }
    dend_90 { pt3dadd( 120.355, -419.798, -142.213, 0.74 ) }
    dend_90 { pt3dadd( 120.919, -419.912, -142.076, 0.96 ) }
    dend_90 { pt3dadd( 121.393, -419.99, -141.963, 1.11 ) }
    dend_90 { pt3dadd( 122.979, -420.129, -141.56, 0.22 ) }
    dend_90 { pt3dadd( 123.402, -420.149, -141.45, 0.52 ) }
    dend_90 { pt3dadd( 124.379, -420.127, -141.203, 0.22 ) }
    dend_90 { pt3dadd( 125.009, -420.075, -141.043, 0.74 ) }
    dend_90 { pt3dadd( 125.381, -420.011, -140.957, 0.74 ) }
    dend_90 { pt3dadd( 126.389, -419.778, -140.717, 0.22 ) }
    dend_90 { pt3dadd( 126.488, -419.747, -140.695, 0.22 ) }
    dend_90 { pt3dadd( 127.263, -419.453, -140.515, 0.22 ) }
    dend_90 { pt3dadd( 127.362, -419.411, -140.491, 0.22 ) }
    dend_90 { pt3dadd( 128.225, -419.068, -140.3, 0.96 ) }
    dend_90 { pt3dadd( 129.536, -418.616, -140.015, 0.22 ) }
    dend_90 { pt3dadd( 129.648, -418.584, -139.993, 0.22 ) }
    dend_90 { pt3dadd( 130.264, -418.422, -139.884, 1.25 ) }
    dend_90 { pt3dadd( 130.312, -418.411, -139.877, 1.25 ) }
    dend_90 { pt3dadd( 131.042, -418.22, -139.787, 0.37 ) }
    dend_90 { pt3dadd( 131.528, -418.076, -139.752, 0.29 ) }
    dend_90 { pt3dadd( 132.006, -417.949, -139.741, 0.66 ) }
    dend_90 { pt3dadd( 132.53, -417.848, -139.718, 0.81 ) }
    dend_90 { pt3dadd( 132.796, -417.831, -139.698, 0.81 ) }
    dend_90 { pt3dadd( 133.282, -417.844, -139.622, 0.81 ) }
    dend_90 { pt3dadd( 133.334, -417.848, -139.608, 0.81 ) }
    dend_90 { pt3dadd( 134.55, -417.983, -139.185, 0.15 ) }
    dend_90 { pt3dadd( 135.051, -418.042, -138.993, 0.37 ) }
    dend_90 { pt3dadd( 136.088, -418.188, -138.542, 0.22 ) }
    dend_90 { pt3dadd( 137.169, -418.356, -138.037, 1.03 ) }
    dend_90 { pt3dadd( 137.855, -418.467, -137.689, 0.81 ) }
    dend_90 { pt3dadd( 137.902, -418.475, -137.664, 0.81 ) }
    dend_90 { pt3dadd( 138.719, -418.621, -137.218, 0.22 ) }
    dend_90 { pt3dadd( 139.697, -418.821, -136.716, 0.22 ) }
    dend_90 { pt3dadd( 139.737, -418.83, -136.698, 0.22 ) }
    dend_90 { pt3dadd( 140.325, -418.961, -136.51, 1.11 ) }
    dend_90 { pt3dadd( 140.905, -419.101, -136.369, 1.4 ) }
    dend_90 { pt3dadd( 140.956, -419.111, -136.355, 1.4 ) }
    dend_90 { pt3dadd( 141.99, -419.27, -136.042, 0.29 ) }
    dend_90 { pt3dadd( 142.092, -419.266, -136.01, 0.29 ) }
    dend_90 { pt3dadd( 142.688, -419.162, -135.765, 0.22 ) }
    dend_90 { pt3dadd( 142.74, -419.147, -135.74, 0.22 ) }
    dend_90 { pt3dadd( 143.752, -418.736, -135.217, 0.22 ) }
    dend_90 { pt3dadd( 143.789, -418.719, -135.197, 0.22 ) }
    dend_90 { pt3dadd( 144.341, -418.421, -134.894, 1.18 ) }
    dend_90 { pt3dadd( 145.503, -417.814, -134.328, 0.22 ) }
    dend_90 { pt3dadd( 145.562, -417.784, -134.302, 0.22 ) }
    dend_90 { pt3dadd( 146.113, -417.539, -134.118, 0.22 ) }
    dend_90 { pt3dadd( 146.159, -417.521, -134.109, 0.22 ) }
    dend_90 { pt3dadd( 146.792, -417.322, -134.024, 0.74 ) }
    dend_90 { pt3dadd( 147.272, -417.224, -134.003, 0.96 ) }
    dend_90 { pt3dadd( 147.325, -417.216, -134.004, 0.96 ) }
    dend_90 { pt3dadd( 148.471, -417.119, -134.025, 0.22 ) }
    dend_90 { pt3dadd( 148.524, -417.119, -134.027, 0.22 ) }
    dend_90 { pt3dadd( 149.299, -417.119, -134.068, 0.22 ) }
    dend_90 { pt3dadd( 149.778, -417.116, -134.101, 0.74 ) }
    dend_90 { pt3dadd( 149.832, -417.114, -134.106, 0.74 ) }
    dend_90 { pt3dadd( 150.295, -417.053, -134.162, 0.74 ) }
    dend_90 { pt3dadd( 151.378, -416.779, -134.346, 0.22 ) }
    dend_90 { pt3dadd( 151.88, -416.619, -134.439, 0.37 ) }
    dend_90 { pt3dadd( 152.127, -416.518, -134.492, 0.37 ) }
    dend_90 { pt3dadd( 152.172, -416.497, -134.502, 0.37 ) }
    dend_90 { pt3dadd( 152.795, -416.191, -134.643, 0.22 ) }
    dend_90 { pt3dadd( 152.954, -416.101, -134.648, 0.37 ) }
    dend_90 { pt3dadd( 153.05, -416.043, -134.64, 0.37 ) }
    dend_90 { pt3dadd( 153.26, -415.924, -134.581, 0.29 ) }
    dend_90 { pt3dadd( 153.685, -415.641, -134.39, 0.22 ) }
    dend_90 { pt3dadd( 153.953, -415.443, -134.242, 0.66 ) }
    dend_90 { pt3dadd( 154.958, -414.654, -133.629, 0.22 ) }
    dend_90 { pt3dadd( 155.316, -414.355, -133.404, 0.66 ) }
    dend_90 { pt3dadd( 155.898, -413.82, -132.991, 0.96 ) }
    dend_90 { pt3dadd( 156.949, -412.781, -132.073, 0.22 ) }
    dend_90 { pt3dadd( 156.985, -412.745, -132.039, 0.22 ) }
    dend_90 { pt3dadd( 157.334, -412.377, -131.693, 0.22 ) }
    dend_90 { pt3dadd( 157.394, -412.32, -131.622, 0.22 ) }
    dend_90 { pt3dadd( 158.388, -411.426, -130.333, 0.88 ) }
    dend_90 { pt3dadd( 159.326, -410.616, -129.088, 0.22 ) }
    dend_90 { pt3dadd( 159.562, -410.425, -128.748, 1.25 ) }
    dend_90 { pt3dadd( 159.589, -410.404, -128.707, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_60()
}

proc basic_shape_60() {
    dend_90 { pt3dadd( 161.103, -409.232, -126.246, 0.22 ) }
    dend_90 { pt3dadd( 161.406, -409.014, -125.733, 0.74 ) }
    dend_90 { pt3dadd( 167.751, -412.173, -128.203, 0.74 ) }
    // Section: dend_81, id: dend_81, parent: dend_79 (entry count 3/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 136.788, -272.337, -7.93576, 0.37 ) }
    dend_81 { pt3dadd( 137.672, -272.834, -7.91828, 0.37 ) }
    dend_81 { pt3dadd( 138.338, -273.236, -7.89912, 0.29 ) }
    dend_81 { pt3dadd( 139.192, -273.8, -7.94148, 0.59 ) }
    dend_81 { pt3dadd( 139.492, -274.016, -8.00249, 0.96 ) }
    dend_81 { pt3dadd( 139.874, -274.321, -8.12973, 1.25 ) }
    dend_81 { pt3dadd( 140.428, -274.817, -8.35465, 1.25 ) }
    dend_81 { pt3dadd( 140.895, -275.313, -8.59825, 1.03 ) }
    dend_81 { pt3dadd( 141.496, -276.082, -8.98428, 0.29 ) }
    dend_81 { pt3dadd( 142.121, -277.015, -9.45642, 0.29 ) }
    dend_81 { pt3dadd( 142.562, -277.742, -9.82919, 0.88 ) }
    dend_81 { pt3dadd( 142.883, -278.324, -10.1312, 0.81 ) }
    dend_81 { pt3dadd( 143.23, -278.948, -10.4629, 0.81 ) }
    dend_81 { pt3dadd( 143.556, -279.482, -10.7391, 1.25 ) }
    dend_81 { pt3dadd( 143.904, -279.98, -10.9725, 1.62 ) }
    dend_81 { pt3dadd( 144.39, -280.628, -11.2396, 1.62 ) }
    dend_81 { pt3dadd( 144.434, -280.679, -11.263, 1.62 ) }
    dend_81 { pt3dadd( 145.286, -281.516, -11.7308, 0.29 ) }
    dend_81 { pt3dadd( 145.725, -281.871, -11.9775, 0.96 ) }
    dend_81 { pt3dadd( 146.035, -282.071, -12.1465, 1.25 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 23/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 136.788, -272.337, -7.93576, 0.22 ) }
    dend_80 { pt3dadd( 136.123, -273.42, -7.75071, 0.22 ) }
    dend_80 { pt3dadd( 136.085, -273.488, -7.73751, 0.22 ) }
    dend_80 { pt3dadd( 135.487, -274.619, -7.49799, 0.22 ) }
    dend_80 { pt3dadd( 135.345, -274.908, -7.48235, 0.52 ) }
    dend_80 { pt3dadd( 134.849, -275.96, -7.50091, 0.15 ) }
    dend_80 { pt3dadd( 134.824, -276.026, -7.50642, 0.15 ) }
    dend_80 { pt3dadd( 134.597, -276.896, -7.64738, 0.15 ) }
    dend_80 { pt3dadd( 134.584, -276.964, -7.66377, 0.15 ) }
    dend_80 { pt3dadd( 134.209, -278.942, -8.39302, 0.15 ) }
    dend_80 { pt3dadd( 134.196, -278.999, -8.41792, 0.15 ) }
    dend_80 { pt3dadd( 133.874, -280.309, -9.07461, 0.15 ) }
    dend_80 { pt3dadd( 133.861, -280.362, -9.10205, 0.15 ) }
    dend_80 { pt3dadd( 133.553, -281.549, -9.77588, 0.29 ) }
    dend_80 { pt3dadd( 133.17, -282.912, -10.5311, 0.22 ) }
    dend_80 { pt3dadd( 132.993, -283.421, -10.7847, 0.44 ) }
    // Section: dend_78, id: dend_78, parent: dend_68 (entry count 39/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 33.0661, -252.615, 23.7903, 0.22 ) }
    dend_78 { pt3dadd( 34.1731, -254.059, 23.2371, 0.22 ) }
    dend_78 { pt3dadd( 34.9346, -254.955, 22.8833, 0.37 ) }
    dend_78 { pt3dadd( 35.3831, -255.44, 22.6844, 0.37 ) }
    dend_78 { pt3dadd( 36.2785, -256.257, 22.3171, 0.22 ) }
    dend_78 { pt3dadd( 36.3354, -256.29, 22.2962, 0.22 ) }
    dend_78 { pt3dadd( 36.9628, -256.472, 22.0852, 0.37 ) }
    dend_78 { pt3dadd( 37.0379, -256.443, 22.0674, 0.37 ) }
    dend_78 { pt3dadd( 37.218, -256.341, 22.0195, 0.37 ) }
    dend_78 { pt3dadd( 38.1737, -255.72, 21.7462, 0.22 ) }
    dend_78 { pt3dadd( 39.1057, -255.024, 21.4636, 0.22 ) }
    dend_78 { pt3dadd( 39.1544, -254.989, 21.4484, 0.22 ) }
    dend_78 { pt3dadd( 40.1846, -254.279, 21.112, 0.22 ) }
    dend_78 { pt3dadd( 40.6587, -253.98, 20.9535, 0.37 ) }
    dend_78 { pt3dadd( 40.717, -253.95, 20.9329, 0.37 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 54/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 33.0661, -252.615, 23.7903, 0.22 ) }
    dend_69 { pt3dadd( 32.2509, -253.523, 23.601, 0.22 ) }
    dend_69 { pt3dadd( 32.2144, -253.582, 23.5914, 0.22 ) }
    dend_69 { pt3dadd( 31.8134, -254.527, 23.4663, 0.37 ) }
    dend_69 { pt3dadd( 31.6707, -255.064, 23.4037, 0.37 ) }
    dend_69 { pt3dadd( 31.5332, -255.922, 23.3702, 0.22 ) }
    dend_69 { pt3dadd( 31.4783, -256.745, 23.4312, 0.81 ) }
    dend_69 { pt3dadd( 31.525, -257.501, 23.5988, 0.81 ) }
    dend_69 { pt3dadd( 31.6138, -258.176, 23.748, 0.66 ) }
    dend_69 { pt3dadd( 31.771, -258.842, 23.8735, 0.52 ) }
    dend_69 { pt3dadd( 32.0643, -259.73, 24.0003, 0.66 ) }
    dend_69 { pt3dadd( 32.5431, -260.936, 24.1387, 0.29 ) }
    dend_69 { pt3dadd( 33.1236, -262.214, 24.2378, 1.18 ) }
    dend_69 { pt3dadd( 33.7414, -263.463, 24.2849, 0.81 ) }
    dend_69 { pt3dadd( 34.571, -264.971, 24.2661, 0.44 ) }
    dend_69 { pt3dadd( 35.239, -266.072, 24.189, 0.44 ) }
    dend_69 { pt3dadd( 35.5257, -266.503, 24.1277, 1.55 ) }
    dend_69 { pt3dadd( 36.0763, -267.311, 23.9814, 1.84 ) }
    dend_69 { pt3dadd( 36.4918, -267.946, 23.872, 1.62 ) }
    dend_69 { pt3dadd( 37.1105, -268.989, 23.7543, 0.81 ) }
    dend_69 { pt3dadd( 37.5746, -269.936, 23.6731, 0.52 ) }
    dend_69 { pt3dadd( 38.0537, -271.117, 23.5872, 0.44 ) }
    dend_69 { pt3dadd( 38.4489, -272.285, 23.4799, 0.66 ) }
    dend_69 { pt3dadd( 38.764, -273.557, 23.3526, 0.52 ) }
    dend_69 { pt3dadd( 38.8367, -274.035, 23.2825, 0.66 ) }
    dend_69 { pt3dadd( 38.9259, -275.215, 23.0609, 0.44 ) }
    dend_69 { pt3dadd( 38.9434, -276.239, 22.8298, 1.33 ) }
    dend_69 { pt3dadd( 38.9308, -277.451, 22.509, 0.59 ) }
    dend_69 { pt3dadd( 38.9388, -278.343, 22.2462, 0.22 ) }
    dend_69 { pt3dadd( 39.0309, -279.79, 21.886, 0.22 ) }
    dend_69 { pt3dadd( 39.1503, -280.546, 21.7852, 0.22 ) }
    dend_69 { pt3dadd( 39.1723, -280.636, 21.7853, 0.22 ) }
    dend_69 { pt3dadd( 39.4413, -281.434, 21.9065, 1.03 ) }
    dend_69 { pt3dadd( 39.754, -282.214, 22.0783, 1.4 ) }
    dend_69 { pt3dadd( 40.4009, -283.711, 22.4295, 0.88 ) }
    dend_69 { pt3dadd( 40.8526, -284.831, 22.6703, 0.22 ) }
    dend_69 { pt3dadd( 40.8813, -284.92, 22.681, 0.22 ) }
    dend_69 { pt3dadd( 41.0553, -285.551, 22.701, 0.22 ) }
    dend_69 { pt3dadd( 41.3363, -286.817, 22.64, 1.33 ) }
    dend_69 { pt3dadd( 41.4563, -287.366, 22.581, 1.69 ) }
    dend_69 { pt3dadd( 41.7473, -288.486, 22.3989, 1.33 ) }
    dend_69 { pt3dadd( 42.0781, -289.442, 22.2835, 0.52 ) }
    dend_69 { pt3dadd( 42.5216, -290.481, 22.3075, 0.29 ) }
    dend_69 { pt3dadd( 42.5546, -290.551, 22.3184, 0.29 ) }
    dend_69 { pt3dadd( 43.1657, -291.758, 22.6515, 1.03 ) }
    dend_69 { pt3dadd( 43.5548, -292.538, 22.9227, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_61()
}

proc basic_shape_61() {
    dend_69 { pt3dadd( 43.9649, -293.415, 23.2968, 1.4 ) }
    dend_69 { pt3dadd( 44.5869, -294.99, 24.0206, 0.29 ) }
    dend_69 { pt3dadd( 44.7322, -295.599, 24.2886, 0.22 ) }
    dend_69 { pt3dadd( 44.737, -295.678, 24.3181, 0.22 ) }
    dend_69 { pt3dadd( 44.6684, -296.363, 24.5151, 0.96 ) }
    dend_69 { pt3dadd( 44.5981, -296.881, 24.6246, 1.33 ) }
    dend_69 { pt3dadd( 44.5143, -297.461, 24.7025, 1.33 ) }
    dend_69 { pt3dadd( 44.3991, -298.592, 24.7881, 0.81 ) }
    dend_69 { pt3dadd( 44.3708, -299.941, 24.8835, 0.29 ) }
    dend_69 { pt3dadd( 44.4665, -300.918, 24.9862, 0.29 ) }
    dend_69 { pt3dadd( 44.7289, -302.183, 25.1518, 0.96 ) }
    dend_69 { pt3dadd( 44.7526, -302.263, 25.1641, 0.96 ) }
    dend_69 { pt3dadd( 44.9357, -302.777, 25.2621, 1.4 ) }
    dend_69 { pt3dadd( 45.2031, -303.408, 25.4108, 1.4 ) }
    dend_69 { pt3dadd( 45.8823, -305.065, 25.8703, 0.37 ) }
    dend_69 { pt3dadd( 46.0307, -305.557, 26.0272, 0.74 ) }
    dend_69 { pt3dadd( 46.0365, -305.639, 26.0513, 0.74 ) }
    dend_69 { pt3dadd( 45.944, -306.509, 26.2129, 0.29 ) }
    dend_69 { pt3dadd( 45.813, -307.034, 26.2557, 0.74 ) }
    dend_69 { pt3dadd( 45.5251, -307.834, 26.2501, 1.11 ) }
    dend_69 { pt3dadd( 45.3122, -308.373, 26.1902, 0.96 ) }
    dend_69 { pt3dadd( 44.9047, -309.92, 25.9555, 0.29 ) }
    dend_69 { pt3dadd( 44.7704, -311.057, 25.7513, 0.59 ) }
    dend_69 { pt3dadd( 44.7976, -311.671, 25.6303, 0.81 ) }
    dend_69 { pt3dadd( 44.8183, -311.797, 25.6077, 0.81 ) }
    dend_69 { pt3dadd( 45.0626, -312.759, 25.4951, 0.37 ) }
    dend_69 { pt3dadd( 45.5171, -314.152, 25.4885, 0.88 ) }
    dend_69 { pt3dadd( 45.8185, -314.91, 25.6069, 1.18 ) }
    dend_69 { pt3dadd( 46.2985, -316.083, 25.9259, 1.18 ) }
    dend_69 { pt3dadd( 46.6716, -316.939, 26.2621, 1.25 ) }
    dend_69 { pt3dadd( 47.1443, -317.873, 26.7947, 0.96 ) }
    dend_69 { pt3dadd( 47.8224, -319.026, 27.665, 0.44 ) }
    dend_69 { pt3dadd( 48.6101, -320.104, 28.6859, 0.37 ) }
    dend_69 { pt3dadd( 48.6624, -320.16, 28.7471, 0.37 ) }
    dend_69 { pt3dadd( 49.4034, -320.806, 29.529, 0.52 ) }
    dend_69 { pt3dadd( 50.5818, -321.765, 30.6427, 0.29 ) }
    dend_69 { pt3dadd( 50.9225, -322.049, 30.9378, 0.66 ) }
    dend_69 { pt3dadd( 51.34, -322.453, 31.2622, 0.66 ) }
    dend_69 { pt3dadd( 51.9162, -323.332, 31.7614, 0.22 ) }
    dend_69 { pt3dadd( 52.1135, -323.844, 31.9922, 0.96 ) }
    dend_69 { pt3dadd( 52.327, -324.972, 32.3833, 0.22 ) }
    dend_69 { pt3dadd( 52.4092, -326.044, 32.7127, 1.03 ) }
    dend_69 { pt3dadd( 52.4219, -326.553, 32.8845, 1.03 ) }
    dend_69 { pt3dadd( 52.3702, -328.269, 33.5141, 0.29 ) }
    dend_69 { pt3dadd( 52.3066, -328.901, 33.7659, 0.22 ) }
    dend_69 { pt3dadd( 52.2643, -329.22, 33.9072, 0.22 ) }
    dend_69 { pt3dadd( 52.1877, -330.066, 34.3259, 0.22 ) }
    dend_69 { pt3dadd( 52.2017, -330.228, 34.3923, 0.22 ) }
    dend_69 { pt3dadd( 52.7437, -330.041, 34.3092, 0.22 ) }
    dend_69 { pt3dadd( 52.8202, -330.016, 34.2977, 0.22 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 50/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -142.972, -131.838, -7.29039, 0.22 ) }
    dend_49 { pt3dadd( -143.369, -131.872, -7.66074, 0.22 ) }
    dend_49 { pt3dadd( -143.869, -131.876, -8.204, 0.22 ) }
    dend_49 { pt3dadd( -144.429, -131.88, -8.81141, 0.66 ) }
    dend_49 { pt3dadd( -144.784, -131.883, -9.19734, 0.66 ) }
    dend_49 { pt3dadd( -145.25, -131.886, -9.70301, 0.88 ) }
    dend_49 { pt3dadd( -145.675, -131.89, -10.1639, 1.11 ) }
    dend_49 { pt3dadd( -146.257, -131.856, -10.8539, 1.4 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 58/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -142.972, -131.838, -7.29039, 0.29 ) }
    dend_48 { pt3dadd( -143.782, -131.3, -7.88749, 0.29 ) }
    dend_48 { pt3dadd( -144.485, -130.834, -8.40593, 0.22 ) }
    dend_48 { pt3dadd( -145.119, -130.412, -8.87406, 0.22 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 62/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 51.0765, 148.222, 18.8256, 0.22 ) }
    dend_35 { pt3dadd( 53.4501, 148.556, 19.6509, 0.22 ) }
    dend_35 { pt3dadd( 54.6681, 148.727, 20.0745, 0.22 ) }
    dend_35 { pt3dadd( 55.1807, 148.799, 20.2527, 0.52 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 66/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 51.0765, 148.222, 18.8256, 0.22 ) }
    dend_34 { pt3dadd( 52.2821, 147.932, 18.5345, 0.22 ) }
    dend_34 { pt3dadd( 52.8235, 147.802, 18.4037, 0.44 ) }
    dend_34 { pt3dadd( 52.8956, 147.784, 18.3863, 0.44 ) }
    dend_34 { pt3dadd( 53.6057, 147.613, 18.2148, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 71/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 18.9523, 318.811, 76.1268, 0.22 ) }
    dend_32 { pt3dadd( 18.283, 318.958, 76.9209, 0.22 ) }
    dend_32 { pt3dadd( 17.752, 319.079, 77.549, 0.22 ) }
    dend_32 { pt3dadd( 17.0619, 319.249, 78.3693, 0.22 ) }
    dend_32 { pt3dadd( 16.9386, 319.281, 78.5169, 0.22 ) }
    dend_32 { pt3dadd( 16.1681, 319.524, 79.4302, 0.22 ) }
    dend_32 { pt3dadd( 15.3234, 319.915, 80.4418, 0.22 ) }
    dend_32 { pt3dadd( 15.2812, 319.944, 80.4931, 0.22 ) }
    dend_32 { pt3dadd( 14.8853, 320.332, 80.9828, 0.59 ) }
    dend_32 { pt3dadd( 14.841, 320.391, 81.0334, 0.59 ) }
    dend_32 { pt3dadd( 14.5666, 320.886, 81.3393, 0.37 ) }
    dend_32 { pt3dadd( 14.0547, 322.073, 81.8647, 0.22 ) }
    dend_32 { pt3dadd( 13.9534, 322.296, 81.9441, 0.22 ) }
    dend_32 { pt3dadd( 13.6173, 322.845, 82.1112, 0.22 ) }
    dend_32 { pt3dadd( 13.4737, 323.034, 82.1571, 0.22 ) }
    dend_32 { pt3dadd( 13.0873, 323.491, 82.2473, 0.22 ) }
    dend_32 { pt3dadd( 12.4807, 324.13, 82.3076, 0.29 ) }
    dend_32 { pt3dadd( 11.6984, 324.761, 82.3211, 0.29 ) }
    dend_32 { pt3dadd( 10.7795, 325.427, 82.3161, 0.22 ) }
    dend_32 { pt3dadd( 10.6844, 325.486, 82.3127, 0.22 ) }
    dend_32 { pt3dadd( 9.76859, 326.078, 82.2317, 0.22 ) }
    dend_32 { pt3dadd( 9.36024, 326.418, 82.1415, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 93/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 18.9523, 318.811, 76.1268, 0.15 ) }
    dend_31 { pt3dadd( 19.7368, 318.742, 76.1749, 0.15 ) }
    dend_31 { pt3dadd( 20.3919, 318.684, 76.2151, 0.29 ) }
    // Section: dend_102, id: dend_102, parent: dend_100 (entry count 96/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( 201.807, -263.676, 11.2574, 0.22 ) }
    dend_102 { pt3dadd( 200.691, -263.379, 10.8008, 0.22 ) }
    dend_102 { pt3dadd( 199.652, -262.939, 10.3667, 0.22 ) }
    dend_102 { pt3dadd( 198.896, -262.544, 10.0486, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_62()
}

proc basic_shape_62() {
    dend_102 { pt3dadd( 198.81, -262.499, 10.0125, 0.22 ) }
    dend_102 { pt3dadd( 198.29, -262.228, 9.79378, 0.22 ) }
    dend_102 { pt3dadd( 197.303, -261.711, 9.37816, 0.44 ) }
    dend_102 { pt3dadd( 197.215, -261.627, 9.34796, 0.44 ) }
    dend_102 { pt3dadd( 197.174, -261.566, 9.33696, 0.44 ) }
    // Section: dend_101, id: dend_101, parent: dend_100 (entry count 5/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( 201.807, -263.676, 11.2574, 0.22 ) }
    dend_101 { pt3dadd( 202.758, -265.262, 12.9507, 0.22 ) }
    dend_101 { pt3dadd( 203.215, -265.936, 13.8673, 0.22 ) }
    dend_101 { pt3dadd( 203.976, -266.739, 15.2766, 1.18 ) }
    dend_101 { pt3dadd( 204.461, -267.133, 16.1181, 1.18 ) }
    dend_101 { pt3dadd( 204.506, -267.164, 16.1936, 1.18 ) }
    dend_101 { pt3dadd( 205.953, -268.001, 18.4145, 0.29 ) }
    dend_101 { pt3dadd( 206.667, -268.23, 19.4644, 0.22 ) }
    dend_101 { pt3dadd( 207.616, -268.392, 20.7696, 0.22 ) }
    dend_101 { pt3dadd( 208.004, -268.395, 21.2295, 0.22 ) }
    dend_101 { pt3dadd( 208.057, -268.384, 21.286, 0.22 ) }
    dend_101 { pt3dadd( 208.878, -268.165, 22.0675, 0.22 ) }
    dend_101 { pt3dadd( 209.865, -267.765, 22.7361, 0.22 ) }
    dend_101 { pt3dadd( 209.94, -267.733, 22.7818, 0.22 ) }
    dend_101 { pt3dadd( 210.633, -267.391, 23.202, 0.22 ) }
    dend_101 { pt3dadd( 212.247, -266.363, 24.1716, 0.22 ) }
    // Section: dend_93, id: dend_93, parent: dend_91 (entry count 21/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( 18.6901, -456.619, -39.265, 0.66 ) }
    dend_93 { pt3dadd( 18.294, -457.179, -38.4432, 0.66 ) }
    dend_93 { pt3dadd( 18.0564, -457.594, -37.8497, 0.15 ) }
    dend_93 { pt3dadd( 18.0193, -457.664, -37.7608, 0.29 ) }
    dend_93 { pt3dadd( 17.6879, -458.32, -37.0101, 0.59 ) }
    dend_93 { pt3dadd( 17.5403, -458.608, -36.7063, 0.88 ) }
    dend_93 { pt3dadd( 17.2338, -459.431, -35.8357, 0.59 ) }
    dend_93 { pt3dadd( 17.2292, -459.467, -35.7993, 0.59 ) }
    dend_93 { pt3dadd( 17.221, -459.956, -35.3172, 0.22 ) }
    dend_93 { pt3dadd( 17.2276, -460.185, -35.0866, 0.59 ) }
    dend_93 { pt3dadd( 17.2421, -460.404, -34.8587, 0.52 ) }
    dend_93 { pt3dadd( 17.327, -461.771, -33.4092, 0.22 ) }
    dend_93 { pt3dadd( 17.339, -462.583, -32.5965, 1.18 ) }
    dend_93 { pt3dadd( 17.342, -462.772, -32.406, 1.18 ) }
    dend_93 { pt3dadd( 17.3881, -463.925, -31.2588, 0.22 ) }
    dend_93 { pt3dadd( 17.4102, -464.513, -30.6015, 0.66 ) }
    dend_93 { pt3dadd( 17.4086, -464.765, -30.2985, 0.44 ) }
    dend_93 { pt3dadd( 17.3296, -465.337, -29.5612, 0.22 ) }
    dend_93 { pt3dadd( 17.1544, -466.034, -28.5686, 0.59 ) }
    dend_93 { pt3dadd( 17.069, -466.297, -28.1595, 0.81 ) }
    dend_93 { pt3dadd( 16.4462, -467.802, -25.6862, 0.66 ) }
    dend_93 { pt3dadd( 16.1633, -468.416, -24.6748, 0.22 ) }
    dend_93 { pt3dadd( 15.8567, -469.045, -23.6301, 0.88 ) }
    dend_93 { pt3dadd( 15.5326, -469.618, -22.6824, 0.22 ) }
    dend_93 { pt3dadd( 15.2864, -469.97, -22.1289, 0.22 ) }
    dend_93 { pt3dadd( 15.0193, -470.304, -21.6417, 0.74 ) }
    dend_93 { pt3dadd( 14.819, -470.55, -21.3688, 0.88 ) }
    dend_93 { pt3dadd( 14.1786, -471.41, -20.4436, 0.22 ) }
    dend_93 { pt3dadd( 13.9055, -471.864, -19.9908, 0.22 ) }
    dend_93 { pt3dadd( 13.8374, -471.991, -19.873, 0.22 ) }
    dend_93 { pt3dadd( 13.7091, -472.256, -19.6378, 0.22 ) }
    dend_93 { pt3dadd( 13.3974, -472.957, -19.01, 0.88 ) }
    dend_93 { pt3dadd( 13.0479, -473.825, -18.2738, 0.52 ) }
    dend_93 { pt3dadd( 12.765, -474.633, -17.6296, 0.22 ) }
    dend_93 { pt3dadd( 12.6741, -474.95, -17.3738, 0.29 ) }
    dend_93 { pt3dadd( 12.574, -475.342, -17.0649, 0.22 ) }
    dend_93 { pt3dadd( 12.4622, -475.831, -16.6939, 0.81 ) }
    dend_93 { pt3dadd( 12.3589, -476.211, -16.4515, 0.88 ) }
    // Section: dend_92, id: dend_92, parent: dend_91 (entry count 59/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( 18.6901, -456.619, -39.265, 0.29 ) }
    dend_92 { pt3dadd( 19.8603, -457.479, -38.7882, 0.29 ) }
    dend_92 { pt3dadd( 19.9437, -457.54, -38.7542, 0.29 ) }
    dend_92 { pt3dadd( 21.2964, -458.534, -38.2031, 0.29 ) }
    dend_92 { pt3dadd( 22.2333, -459.222, -37.8213, 0.44 ) }
    dend_92 { pt3dadd( 32.8249, -466.529, -32.5135, 0.44 ) }
    // Section: dend_83, id: dend_83, parent: dend_81 (entry count 65/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 146.035, -282.071, -12.1465, 0.29 ) }
    dend_83 { pt3dadd( 146.064, -283.004, -11.9213, 0.29 ) }
    dend_83 { pt3dadd( 146.025, -283.509, -11.8045, 0.22 ) }
    dend_83 { pt3dadd( 145.952, -284.164, -11.6586, 0.96 ) }
    dend_83 { pt3dadd( 145.89, -284.582, -11.5944, 1.18 ) }
    dend_83 { pt3dadd( 145.783, -285.241, -11.5623, 1.03 ) }
    dend_83 { pt3dadd( 145.677, -285.951, -11.5731, 0.29 ) }
    dend_83 { pt3dadd( 145.521, -286.834, -11.6469, 0.29 ) }
    dend_83 { pt3dadd( 145.457, -287.403, -11.7479, 0.52 ) }
    dend_83 { pt3dadd( 145.422, -288.455, -12.0223, 0.37 ) }
    dend_83 { pt3dadd( 145.458, -289.515, -12.3661, 0.22 ) }
    dend_83 { pt3dadd( 145.518, -290.118, -12.5827, 1.33 ) }
    dend_83 { pt3dadd( 145.582, -290.464, -12.7024, 1.69 ) }
    dend_83 { pt3dadd( 145.877, -291.63, -13.1252, 0.29 ) }
    dend_83 { pt3dadd( 146.033, -292.137, -13.304, 0.29 ) }
    dend_83 { pt3dadd( 146.056, -292.194, -13.3195, 0.29 ) }
    dend_83 { pt3dadd( 146.404, -292.982, -13.4499, 0.29 ) }
    dend_83 { pt3dadd( 146.797, -293.904, -13.5606, 1.55 ) }
    // Section: dend_82, id: dend_82, parent: dend_81 (entry count 83/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 146.035, -282.071, -12.1465, 0.22 ) }
    dend_82 { pt3dadd( 147.387, -282.173, -11.5514, 0.22 ) }
    dend_82 { pt3dadd( 148.407, -282.35, -11.1245, 0.22 ) }
    dend_82 { pt3dadd( 148.474, -282.368, -11.1006, 0.22 ) }
    dend_82 { pt3dadd( 149.049, -282.549, -10.9719, 0.44 ) }
    dend_82 { pt3dadd( 149.138, -282.581, -10.9696, 0.44 ) }
    dend_82 { pt3dadd( 149.957, -282.889, -11.011, 0.22 ) }
    dend_82 { pt3dadd( 150.034, -282.92, -11.0321, 0.22 ) }
    dend_82 { pt3dadd( 150.503, -283.068, -11.2255, 0.22 ) }
    dend_82 { pt3dadd( 151.347, -283.265, -11.6686, 0.59 ) }
    dend_82 { pt3dadd( 152.691, -283.524, -12.4304, 0.22 ) }
    dend_82 { pt3dadd( 152.774, -283.537, -12.4801, 0.22 ) }
    dend_82 { pt3dadd( 153.987, -283.673, -13.2654, 0.29 ) }
    dend_82 { pt3dadd( 154.63, -283.734, -13.696, 0.29 ) }
    dend_82 { pt3dadd( 155.717, -283.782, -14.4773, 0.22 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 98/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 52.8202, -330.016, 34.2977, 1.03 ) }
    dend_71 { pt3dadd( 53.4875, -330.888, 34.9268, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_63()
}

proc basic_shape_63() {
    dend_71 { pt3dadd( 54.4857, -332.278, 35.9331, 1.03 ) }
    dend_71 { pt3dadd( 55.3755, -333.55, 36.8033, 0.96 ) }
    dend_71 { pt3dadd( 56.2324, -334.799, 37.6093, 0.59 ) }
    dend_71 { pt3dadd( 56.7382, -335.546, 38.058, 0.59 ) }
    dend_71 { pt3dadd( 57.7157, -336.994, 38.8891, 0.44 ) }
    dend_71 { pt3dadd( 58.5755, -338.245, 39.5328, 0.29 ) }
    dend_71 { pt3dadd( 59.1129, -339.009, 39.8436, 0.29 ) }
    dend_71 { pt3dadd( 59.4432, -339.477, 39.9972, 1.11 ) }
    dend_71 { pt3dadd( 59.9328, -340.157, 40.1893, 1.47 ) }
    dend_71 { pt3dadd( 59.9904, -340.234, 40.2072, 1.47 ) }
    dend_71 { pt3dadd( 61.0682, -341.48, 40.26, 1.11 ) }
    dend_71 { pt3dadd( 62.0277, -342.434, 40.1836, 0.29 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 12/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 52.8202, -330.016, 34.2977, 0.22 ) }
    dend_70 { pt3dadd( 53.5085, -330.438, 33.845, 0.22 ) }
    dend_70 { pt3dadd( 53.9231, -330.659, 33.5846, 0.22 ) }
    dend_70 { pt3dadd( 53.963, -330.681, 33.5595, 0.22 ) }
    dend_70 { pt3dadd( 54.7311, -331.091, 33.077, 0.22 ) }
    dend_70 { pt3dadd( 55.4375, -331.469, 32.6334, 0.22 ) }
    dend_70 { pt3dadd( 56.0409, -331.791, 32.2543, 0.22 ) }
    dend_70 { pt3dadd( 56.4241, -332.0, 32.0361, 0.44 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 20/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -146.257, -131.856, -10.8539, 0.22 ) }
    dend_51 { pt3dadd( -145.7, -131.108, -11.3065, 0.22 ) }
    dend_51 { pt3dadd( -145.671, -131.07, -11.3294, 0.22 ) }
    dend_51 { pt3dadd( -145.187, -130.419, -11.723, 0.22 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 24/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -146.257, -131.856, -10.8539, 0.29 ) }
    dend_50 { pt3dadd( -146.837, -132.438, -11.7798, 0.29 ) }
    dend_50 { pt3dadd( -147.38, -133.069, -12.6426, 0.29 ) }
    dend_50 { pt3dadd( -147.4, -133.105, -12.7082, 0.29 ) }
    dend_50 { pt3dadd( -147.53, -133.498, -13.5524, 0.29 ) }
    dend_50 { pt3dadd( -147.535, -133.568, -13.7754, 0.29 ) }
    dend_50 { pt3dadd( -147.494, -133.696, -14.3863, 0.29 ) }
    dend_50 { pt3dadd( -147.433, -133.71, -14.5726, 0.29 ) }
    dend_50 { pt3dadd( -146.534, -133.447, -16.3177, 0.22 ) }
    dend_50 { pt3dadd( -146.493, -133.431, -16.3843, 0.22 ) }
    dend_50 { pt3dadd( -145.919, -133.151, -17.1879, 0.22 ) }
    dend_50 { pt3dadd( -145.849, -133.109, -17.282, 0.22 ) }
    // Section: dend_85, id: dend_85, parent: dend_83 (entry count 36/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( 146.797, -293.904, -13.5606, 1.62 ) }
    dend_85 { pt3dadd( 147.867, -294.433, -14.1888, 1.62 ) }
    dend_85 { pt3dadd( 148.828, -294.936, -14.6363, 1.62 ) }
    dend_85 { pt3dadd( 148.889, -294.971, -14.6597, 1.62 ) }
    dend_85 { pt3dadd( 150.116, -295.764, -14.9264, 0.59 ) }
    dend_85 { pt3dadd( 151.086, -296.442, -14.9877, 0.44 ) }
    dend_85 { pt3dadd( 152.046, -297.177, -14.9573, 0.29 ) }
    dend_85 { pt3dadd( 153.054, -298.094, -14.7944, 0.66 ) }
    dend_85 { pt3dadd( 153.641, -298.68, -14.6141, 0.66 ) }
    dend_85 { pt3dadd( 154.736, -299.851, -14.1514, 0.22 ) }
    dend_85 { pt3dadd( 155.672, -300.968, -13.6367, 0.59 ) }
    dend_85 { pt3dadd( 156.101, -301.522, -13.3543, 1.47 ) }
    dend_85 { pt3dadd( 156.55, -302.122, -13.043, 1.47 ) }
    dend_85 { pt3dadd( 156.605, -302.195, -13.014, 1.47 ) }
    dend_85 { pt3dadd( 157.307, -303.065, -12.7559, 1.47 ) }
    dend_85 { pt3dadd( 158.06, -304.086, -12.6049, 0.59 ) }
    // Section: dend_84, id: dend_84, parent: dend_83 (entry count 52/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 146.797, -293.904, -13.5606, 0.15 ) }
    dend_84 { pt3dadd( 145.773, -294.344, -13.1781, 0.15 ) }
    dend_84 { pt3dadd( 145.69, -294.379, -13.1471, 0.15 ) }
    dend_84 { pt3dadd( 144.781, -294.707, -12.8118, 0.15 ) }
    dend_84 { pt3dadd( 144.032, -294.933, -12.4967, 0.15 ) }
    dend_84 { pt3dadd( 143.914, -294.956, -12.4363, 0.15 ) }
    dend_84 { pt3dadd( 143.171, -295.103, -12.0549, 0.15 ) }
    dend_84 { pt3dadd( 143.116, -295.11, -12.0252, 0.15 ) }
    dend_84 { pt3dadd( 142.226, -295.215, -11.5278, 0.15 ) }
    dend_84 { pt3dadd( 141.114, -295.327, -10.8487, 0.15 ) }
    dend_84 { pt3dadd( 139.793, -295.356, -9.98953, 0.15 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 63/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 62.0277, -342.434, 40.1836, 0.37 ) }
    dend_73 { pt3dadd( 61.7249, -343.342, 40.9027, 0.37 ) }
    dend_73 { pt3dadd( 61.5429, -343.905, 41.2797, 0.52 ) }
    dend_73 { pt3dadd( 61.42, -344.303, 41.5058, 0.66 ) }
    dend_73 { pt3dadd( 61.1752, -345.148, 41.934, 0.29 ) }
    dend_73 { pt3dadd( 61.0456, -345.638, 42.1564, 0.59 ) }
    dend_73 { pt3dadd( 60.9449, -346.068, 42.326, 0.52 ) }
    dend_73 { pt3dadd( 60.7947, -346.808, 42.5518, 0.37 ) }
    dend_73 { pt3dadd( 60.6904, -347.51, 42.7384, 0.66 ) }
    dend_73 { pt3dadd( 60.6442, -347.89, 42.8378, 0.96 ) }
    dend_73 { pt3dadd( 60.5739, -348.383, 42.9737, 0.52 ) }
    dend_73 { pt3dadd( 60.4325, -349.29, 43.2531, 0.52 ) }
    dend_73 { pt3dadd( 60.2979, -350.154, 43.508, 1.03 ) }
    dend_73 { pt3dadd( 60.2291, -350.66, 43.646, 1.18 ) }
    dend_73 { pt3dadd( 60.1032, -351.806, 43.9237, 0.66 ) }
    dend_73 { pt3dadd( 59.9695, -352.921, 44.1943, 0.96 ) }
    dend_73 { pt3dadd( 59.9598, -352.993, 44.2118, 0.96 ) }
    dend_73 { pt3dadd( 59.8056, -354.083, 44.4469, 0.29 ) }
    dend_73 { pt3dadd( 59.7207, -354.715, 44.5237, 0.29 ) }
    dend_73 { pt3dadd( 59.708, -355.125, 44.5227, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 83/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 62.0277, -342.434, 40.1836, 0.52 ) }
    dend_72 { pt3dadd( 62.7876, -342.916, 40.1858, 0.52 ) }
    dend_72 { pt3dadd( 63.2686, -343.22, 40.1872, 0.52 ) }
    dend_72 { pt3dadd( 64.0554, -343.719, 40.1894, 0.22 ) }
    dend_72 { pt3dadd( 65.1736, -344.427, 40.1926, 0.22 ) }
    dend_72 { pt3dadd( 65.6652, -344.739, 40.194, 0.22 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 89/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( 158.06, -304.086, -12.6049, 0.29 ) }
    dend_87 { pt3dadd( 159.247, -303.837, -13.0781, 0.29 ) }
    dend_87 { pt3dadd( 159.423, -303.841, -13.1249, 0.29 ) }
    dend_87 { pt3dadd( 160.359, -303.975, -13.3043, 0.22 ) }
    dend_87 { pt3dadd( 160.465, -303.995, -13.3229, 0.22 ) }
    dend_87 { pt3dadd( 162.006, -304.361, -13.6374, 0.22 ) }
    dend_87 { pt3dadd( 163.12, -304.672, -13.9002, 0.22 ) }
    dend_87 { pt3dadd( 164.397, -305.104, -14.2, 0.44 ) }
    dend_87 { pt3dadd( 165.665, -305.583, -14.4998, 0.22 ) }
    dend_87 { pt3dadd( 165.793, -305.632, -14.5127, 0.22 ) }
    dend_87 { pt3dadd( 166.852, -306.005, -14.5037, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_64()
}

proc basic_shape_64() {
    dend_87 { pt3dadd( 167.387, -306.193, -14.4788, 0.96 ) }
    dend_87 { pt3dadd( 167.486, -306.221, -14.4719, 0.96 ) }
    dend_87 { pt3dadd( 168.363, -306.45, -14.4007, 1.25 ) }
    dend_87 { pt3dadd( 171.467, -307.104, -14.1599, 0.29 ) }
    dend_87 { pt3dadd( 173.251, -307.365, -14.0552, 0.66 ) }
    dend_87 { pt3dadd( 174.178, -307.409, -14.0085, 0.22 ) }
    dend_87 { pt3dadd( 174.953, -307.429, -13.9691, 0.59 ) }
    dend_87 { pt3dadd( 175.046, -307.43, -13.9667, 0.59 ) }
    dend_87 { pt3dadd( 177.119, -307.305, -14.0779, 0.22 ) }
    dend_87 { pt3dadd( 178.008, -307.053, -14.4105, 0.22 ) }
    dend_87 { pt3dadd( 178.953, -306.58, -14.8952, 0.22 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 11/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( 158.06, -304.086, -12.6049, 0.22 ) }
    dend_86 { pt3dadd( 158.731, -305.402, -13.432, 0.22 ) }
    dend_86 { pt3dadd( 158.772, -305.521, -13.5148, 0.22 ) }
    dend_86 { pt3dadd( 159.002, -306.475, -14.0938, 0.22 ) }
    dend_86 { pt3dadd( 159.014, -306.545, -14.1287, 0.22 ) }
    dend_86 { pt3dadd( 159.185, -307.608, -14.6579, 0.22 ) }
    dend_86 { pt3dadd( 159.306, -308.352, -15.0281, 0.22 ) }
    dend_86 { pt3dadd( 159.378, -309.608, -15.638, 0.22 ) }
    dend_86 { pt3dadd( 159.378, -310.691, -16.1801, 0.22 ) }
    dend_86 { pt3dadd( 159.222, -311.401, -16.4945, 0.22 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 21/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 59.708, -355.125, 44.5227, 0.22 ) }
    dend_75 { pt3dadd( 59.4289, -355.859, 44.7979, 0.22 ) }
    dend_75 { pt3dadd( 59.2673, -356.283, 44.9572, 1.03 ) }
    dend_75 { pt3dadd( 59.0218, -356.929, 45.1992, 0.22 ) }
    dend_75 { pt3dadd( 58.8721, -357.322, 45.3468, 0.96 ) }
    dend_75 { pt3dadd( 58.7643, -357.605, 45.453, 1.33 ) }
    dend_75 { pt3dadd( 58.5174, -358.254, 45.6965, 0.59 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 28/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 59.708, -355.125, 44.5227, 0.22 ) }
    dend_74 { pt3dadd( 60.0903, -355.618, 44.0812, 0.22 ) }
    dend_74 { pt3dadd( 60.1533, -355.701, 44.0035, 0.44 ) }
    dend_74 { pt3dadd( 60.3891, -355.967, 43.749, 0.44 ) }
    dend_74 { pt3dadd( 60.9106, -356.515, 43.2216, 0.22 ) }
    dend_74 { pt3dadd( 61.0216, -356.601, 43.1247, 0.22 ) }
    dend_74 { pt3dadd( 61.9678, -357.188, 42.3677, 0.22 ) }
    dend_74 { pt3dadd( 62.0246, -357.221, 42.3214, 0.22 ) }
    dend_74 { pt3dadd( 62.7459, -357.585, 41.7526, 0.22 ) }
    dend_74 { pt3dadd( 62.8365, -357.62, 41.6862, 0.22 ) }
    dend_74 { pt3dadd( 63.962, -357.876, 40.9983, 0.22 ) }
    dend_74 { pt3dadd( 64.1964, -357.902, 40.8728, 0.22 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 40/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 58.5174, -358.254, 45.6965, 0.29 ) }
    dend_77 { pt3dadd( 58.8227, -358.886, 46.2057, 0.29 ) }
    dend_77 { pt3dadd( 59.1179, -359.528, 46.7596, 0.66 ) }
    dend_77 { pt3dadd( 59.2784, -359.924, 47.0962, 0.81 ) }
    dend_77 { pt3dadd( 59.2948, -359.969, 47.1302, 0.81 ) }
    dend_77 { pt3dadd( 59.5861, -360.76, 47.6685, 0.44 ) }
    dend_77 { pt3dadd( 59.843, -361.454, 48.1046, 1.11 ) }
    dend_77 { pt3dadd( 60.0742, -362.065, 48.4612, 0.88 ) }
    dend_77 { pt3dadd( 60.3984, -362.922, 48.8928, 0.29 ) }
    dend_77 { pt3dadd( 60.7051, -363.647, 49.2054, 0.29 ) }
    dend_77 { pt3dadd( 60.9796, -364.139, 49.3767, 0.29 ) }
    dend_77 { pt3dadd( 61.0805, -364.296, 49.4136, 0.29 ) }
    dend_77 { pt3dadd( 61.4546, -364.787, 49.4675, 0.22 ) }
    dend_77 { pt3dadd( 61.4865, -364.821, 49.4661, 0.22 ) }
    dend_77 { pt3dadd( 61.9114, -365.126, 49.4007, 0.22 ) }
    dend_77 { pt3dadd( 62.8126, -365.542, 49.2972, 0.22 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 56/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 58.5174, -358.254, 45.6965, 0.22 ) }
    dend_76 { pt3dadd( 57.2002, -358.472, 46.0019, 0.22 ) }
    dend_76 { pt3dadd( 56.4085, -358.66, 46.1127, 0.22 ) }
    dend_76 { pt3dadd( 55.6574, -358.88, 46.1678, 0.22 ) }
    dend_76 { pt3dadd( 55.5118, -358.929, 46.172, 0.22 ) }
    dend_76 { pt3dadd( 54.9262, -359.153, 46.1566, 0.22 ) }
    dend_76 { pt3dadd( 53.8786, -359.501, 46.1907, 0.22 ) }
    dend_76 { pt3dadd( 54.3216, -359.911, 45.6417, 0.22 ) }
    dend_76 { pt3dadd( 54.3703, -359.954, 45.5851, 0.22 ) }
    dend_76 { pt3dadd( 55.0698, -360.501, 44.8493, 0.22 ) }
    dend_76 { pt3dadd( 55.1038, -360.524, 44.8186, 0.22 ) }
    dend_76 { pt3dadd( 55.7854, -360.903, 44.3145, 0.22 ) }
    dend_76 { pt3dadd( 56.2544, -361.088, 44.0718, 0.37 ) }
    dend_76 { pt3dadd( 56.3112, -361.102, 44.0441, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_106, dend_37, dend_0, dend_110, dend_107, dend_53, dend_38, dend_22, dend_1, dend_109, dend_108, dend_65, dend_54, dend_42, dend_39, dend_36, dend_23, dend_13, dend_2, dend_95, dend_66, dend_60, dend_55, dend_44, dend_43, dend_41, dend_40, dend_25, dend_24, dend_19, dend_14, dend_8, dend_3, dend_103, dend_96, dend_88, dend_67, dend_62, dend_61, dend_57, dend_56, dend_46, dend_45, dend_29, dend_26, dend_21, dend_20, dend_16, dend_15, dend_10, dend_9, dend_7, dend_4, dend_105, dend_104, dend_98, dend_97, dend_94, dend_89, dend_79, dend_68, dend_64, dend_63, dend_59, dend_58, dend_52, dend_47, dend_33, dend_30, dend_28, dend_27, dend_18, dend_17, dend_12, dend_11, dend_6, dend_5, dend_100, dend_99, dend_91, dend_90, dend_81, dend_80, dend_78, dend_69, dend_49, dend_48, dend_35, dend_34, dend_32, dend_31, dend_102, dend_101, dend_93, dend_92, dend_83, dend_82, dend_71, dend_70, dend_51, dend_50, dend_85, dend_84, dend_73, dend_72, dend_87, dend_86, dend_75, dend_74, dend_77, dend_76]}
    ModelViewParmSubset_2 = new SectionList()
    dend_106 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_110 ModelViewParmSubset_2.append()
    dend_107 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_109 ModelViewParmSubset_2.append()
    dend_108 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_105 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_106, dend_37, dend_0, dend_110, dend_107, dend_53, dend_38, dend_22, dend_1, dend_109, dend_108, dend_65, dend_54, dend_42, dend_39, dend_36, dend_23, dend_13, dend_2, dend_95, dend_66, dend_60, dend_55, dend_44, dend_43, dend_41, dend_40, dend_25, dend_24, dend_19, dend_14, dend_8, dend_3, dend_103, dend_96, dend_88, dend_67, dend_62, dend_61, dend_57, dend_56, dend_46, dend_45, dend_29, dend_26, dend_21, dend_20, dend_16, dend_15, dend_10, dend_9, dend_7, dend_4, dend_105, dend_104, dend_98, dend_97, dend_94, dend_89, dend_79, dend_68, dend_64, dend_63, dend_59, dend_58, dend_52, dend_47, dend_33, dend_30, dend_28, dend_27, dend_18, dend_17, dend_12, dend_11, dend_6, dend_5, dend_100, dend_99, dend_91, dend_90, dend_81, dend_80, dend_78, dend_69, dend_49, dend_48, dend_35, dend_34, dend_32, dend_31, dend_102, dend_101, dend_93, dend_92, dend_83, dend_82, dend_71, dend_70, dend_51, dend_50, dend_85, dend_84, dend_73, dend_72, dend_87, dend_86, dend_75, dend_74, dend_77, dend_76]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_106 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_110 ModelViewParmSubset_4.append()
    dend_107 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_109 ModelViewParmSubset_4.append()
    dend_108 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_105 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_78 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_110]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_110 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_107]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_107 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_53 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_38 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_108]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_108 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_42 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_39 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_36 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_55 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_41 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_40 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_25 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_24 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_19 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_14 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_8 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_103 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_96 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_88 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_67 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_57 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_29 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_26 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_21 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_20 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_7 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_4 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_105]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_105 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_104 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_94 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_89 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_79 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_68 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_30 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_28 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_91 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_90 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_69 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_106]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_106 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_37 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_22 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_13 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_23 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_65 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_3 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_54 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_66 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_95 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_109]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_109 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_60 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_5 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_6 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_61 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_10 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_62 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_12 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_63 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_64 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_11 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_43 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_44 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_33 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_15 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_34 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_35 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_45 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_46 OneSecGrp_SectionRef_45.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_47 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_16 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_52 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_48 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_49 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_51 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_50 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_18 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_17 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_27 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_78 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_56 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_98 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_97 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_99 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_80 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_81 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_82 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_70 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_83 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_100 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_84 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_102 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_71 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_72 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_85 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_101 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_110 = new SectionList()
    dend_86 OneSecGrp_SectionRef_110.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_73 OneSecGrp_SectionRef_107.append()

    // Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_111 = new SectionList()
    dend_75 OneSecGrp_SectionRef_111.append()

    // Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_112 = new SectionList()
    dend_74 OneSecGrp_SectionRef_112.append()

    // Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_114 = new SectionList()
    dend_76 OneSecGrp_SectionRef_114.append()

    // Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_109 = new SectionList()
    dend_87 OneSecGrp_SectionRef_109.append()

    // Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_113 = new SectionList()
    dend_77 OneSecGrp_SectionRef_113.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_31 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_58 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_32 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_59 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_92 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_93 OneSecGrp_SectionRef_97.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()
    dend_105 basal.append()
    dend_106 basal.append()
    dend_107 basal.append()
    dend_108 basal.append()
    dend_109 basal.append()
    dend_110 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_65, dend_65, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_92, dend_92, dend_92, dend_92, dend_92, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_67 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_55()
}

proc subsets_55() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_56()
}

proc subsets_56() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_57()
}

proc subsets_57() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_58()
}

proc subsets_58() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_100 all.append()
    dend_100 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_59()
}

proc subsets_59() {
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_60()
}

proc subsets_60() {
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_61()
}

proc subsets_61() {
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_62()
}

proc subsets_62() {
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_63()
}

proc subsets_63() {
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_64()
}

proc subsets_64() {
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_65()
}

proc subsets_65() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_66()
}

proc subsets_66() {
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_67()
}

proc subsets_67() {
    dend_85 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_68()
}

proc subsets_68() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_110 nseg = 11
    dend_107 nseg = 3
    dend_53 nseg = 3
    dend_38 nseg = 3
    dend_108 nseg = 5
    dend_42 nseg = 5
    dend_39 nseg = 3
    dend_36 nseg = 15
    dend_55 nseg = 11
    dend_41 nseg = 9
    dend_40 nseg = 7
    dend_25 nseg = 5
    dend_24 nseg = 9
    dend_19 nseg = 7
    dend_14 nseg = 7
    dend_8 nseg = 3
    dend_103 nseg = 13
    dend_96 nseg = 11
    dend_88 nseg = 3
    dend_67 nseg = 5
    dend_57 nseg = 5
    dend_29 nseg = 3
    dend_26 nseg = 5
    dend_21 nseg = 5
    dend_20 nseg = 7
    dend_7 nseg = 3
    dend_4 nseg = 3
    dend_105 nseg = 5
    dend_104 nseg = 5
    dend_94 nseg = 7
    dend_89 nseg = 13
    dend_79 nseg = 9
    dend_68 nseg = 5
    dend_30 nseg = 11
    dend_28 nseg = 7
    dend_91 nseg = 7
    dend_90 nseg = 11
    dend_69 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L5_SBC_80f2f8b43e_0_0


