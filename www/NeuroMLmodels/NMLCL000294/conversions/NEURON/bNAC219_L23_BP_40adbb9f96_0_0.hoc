// Cell: bNAC219_L23_BP_40adbb9f96_0_0
/*
{
  "id" : "bNAC219_L23_BP_40adbb9f96_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.559629, -8.92861, -0.706689, 1.8952", "-0.520561, -8.09769, -0.641537, 3.08207", "-0.481493, -7.26678, -0.576385, 4.07229", "-0.442425, -6.43586, -0.511233, 5.06251", "-0.403357, -5.60495, -0.446081, 6.03705", "-0.364289, -4.77403, -0.380929, 6.87153", "-0.325221, -3.94312, -0.315777, 7.33623", "-0.286154, -3.1122, -0.250625, 7.77277", "-0.247086, -2.28129, -0.185472, 8.20481", "-0.208018, -1.45038, -0.12032, 8.51332", "-0.16895, -0.619461, -0.0551684, 8.81943", "-0.129882, 0.211453, 0.00998366, 9.1018", "-0.0908139, 1.04237, 0.0751357, 8.76619", "-0.051746, 1.87328, 0.140288, 8.18075", "-0.0126781, 2.7042, 0.20544, 7.29107", "0.0263898, 3.53511, 0.270592, 6.47013", "0.0654577, 4.36603, 0.335744, 5.69271", "0.104526, 5.19694, 0.400896, 4.78435", "0.143594, 6.02786, 0.466048, 3.7615", "0.182661, 6.85877, 0.5312, 2.16282", "0.221729, 7.68968, 0.596352, 1.49642" ]
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.0529134, -9.15542, 10.7418, 1.66", "-0.616135, -11.413, 12.5667, 1.66", "-1.22404, -13.8496, 14.5365, 1.66", "-2.26804, -18.0341, 17.9192, 1.39", "-6.42003, -34.6762, 31.3724, 1.11", "-7.14838, -37.5956, 33.7324, 1.11", "-8.07086, -41.2931, 36.7213, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.617087, 8.05433, -0.778182, 1.39", "0.629148, 14.7824, 2.08589, 0.83", "0.633119, 16.9977, 3.02894, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.221729, 7.68968, 0.596352, 0.55", "0.92622, 22.6731, 0.596352, 0.55", "1.63071, 37.6566, 0.596352, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-8.07086, -41.2931, 36.7213, 0.83", "-10.1933, -45.4701, 35.3112, 0.83", "-10.6986, -46.4647, 34.9754, 0.83", "-11.9886, -49.0035, 34.1183, 0.83", "-12.5669, -50.1416, 33.7341, 0.83", "-13.8105, -52.5891, 32.9078, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-8.07086, -41.2931, 36.7213, 0.83", "-8.09379, -43.3509, 37.0428, 0.83", "-8.11516, -45.2146, 37.3061, 0.83", "-8.22173, -47.6563, 37.6198, 0.83", "-8.36939, -53.2377, 38.1909, 0.83", "-8.43152, -57.8442, 38.5936, 0.55", "-8.53985, -65.6583, 39.1087, 0.55", "-8.48606, -69.544, 39.3979, 0.83", "-8.3245, -73.9873, 39.7335, 0.55", "-7.84788, -81.2441, 40.4932, 0.55", "-7.66991, -83.3162, 40.7349, 0.55", "-7.16969, -88.9348, 41.4214, 0.55", "-6.51447, -96.018, 42.4628, 0.55", "-6.12682, -100.259, 43.1338, 0.55", "-5.66375, -105.906, 44.0793, 0.55", "-5.17986, -116.074, 45.8926, 0.55", "-5.07703, -121.444, 46.8308, 0.55", "-5.08685, -125.452, 47.4759, 0.55", "-5.26023, -128.234, 47.8088, 0.55", "-5.5383, -130.671, 48.0515, 0.55", "-6.30333, -135.557, 48.6453, 0.55", "-6.7416, -138.002, 48.9633, 0.55", "-7.4288, -141.734, 49.6053, 0.55", "-8.36536, -146.73, 50.5481, 0.55", "-9.80229, -153.939, 52.0185, 0.55", "-11.0547, -160.426, 53.4373, 0.55", "-12.1985, -166.084, 54.7939, 0.83", "-13.3046, -171.482, 56.2784, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.633119, 16.9977, 3.02894, 0.83", "1.79033, 26.2187, -1.25897, 0.83", "2.14907, 28.6462, -2.28538, 0.83", "2.59298, 31.6212, -3.57279, 0.83", "2.9803, 34.0778, -4.55919, 0.83", "3.60173, 38.0064, -6.05275, 0.83", "4.45525, 43.1424, -7.88258, 0.83", "4.96651, 46.7993, -8.89879, 0.83", "5.5682, 50.7532, -10.0583, 0.83", "6.27214, 54.8078, -11.3939, 0.55", "6.49659, 56.0917, -11.8242, 0.55", "6.85006, 58.29, -12.581, 0.55", "7.63236, 62.8776, -14.0674, 0.55", "8.15963, 66.2081, -15.1128, 0.55", "9.54388, 74.551, -17.7081, 0.55", "10.165, 78.3168, -19.0426, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.633119, 16.9977, 3.02894, 0.83", "1.89384, 20.2373, 3.47315, 0.83", "2.89305, 22.7859, 3.93211, 0.83", "4.46941, 26.7942, 4.82336, 0.83", "5.97893, 30.6531, 5.73564, 0.83", "7.65463, 35.5213, 6.82091, 0.83", "8.85338, 39.1903, 7.56688, 0.83", "9.68695, 41.9546, 8.19516, 0.83", "10.5106, 44.9833, 8.82339, 0.83", "10.6792, 45.8038, 8.97915, 0.83", "12.3009, 55.2351, 10.383, 0.83", "12.5302, 57.2349, 10.6048, 0.83", "12.7349, 59.9512, 10.8111, 0.83", "12.8596, 62.2998, 10.9628, 0.83", "12.942, 65.0186, 11.1295, 0.83", "13.0676, 68.4555, 11.3264, 0.83", "13.1181, 71.987, 11.572, 0.83", "13.1766, 74.0085, 11.6931, 0.83", "13.3322, 77.1445, 11.8276, 0.83", "13.449, 80.2225, 11.9951, 0.83", "13.593, 83.4636, 12.1094, 0.83", "13.8082, 87.6993, 12.295, 0.83", "14.0264, 90.4665, 12.5146, 0.83", "14.1501, 91.9947, 12.686, 0.83", "14.3168, 93.7194, 12.9688, 0.83", "14.6531, 96.2709, 13.508, 0.83", "15.1616, 99.9985, 14.5851, 0.55", "15.9681, 104.891, 16.1426, 0.55", "16.1625, 106.321, 16.6635, 0.55", "16.5505, 109.329, 17.7525, 0.55", "16.6755, 110.587, 18.2132, 0.55", "16.8757, 112.941, 19.0952, 0.55", "17.0497, 115.401, 19.8967, 0.55", "17.3006, 118.995, 20.805, 0.55", "17.4499, 121.364, 21.3702, 0.55", "17.5133, 123.515, 21.8513, 0.55", "17.6437, 126.212, 22.4018, 0.55", "17.877, 129.04, 22.8366, 0.55", "18.3203, 132.909, 23.4079, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.63071, 37.6566, 0.596352, 0.55", "2.3352, 52.64, 0.596352, 0.55", "3.03969, 67.6235, 0.596352, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-13.8105, -52.5891, 32.9078, 0.83", "-16.5827, -59.2762, 35.8148, 0.83", "-18.769, -64.5722, 37.859, 0.83", "-21.3952, -70.9562, 40.0399, 0.83", "-23.5828, -76.228, 41.6624, 0.83", "-24.9122, -79.4318, 42.6485, 0.83", "-26.4972, -83.2517, 43.8242, 0.83", "-27.5461, -86.0243, 44.4691, 0.83", "-28.7403, -89.1874, 45.0628, 0.83", "-30.204, -93.2289, 45.2054, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-13.8105, -52.5891, 32.9078, 0.55", "-13.9006, -52.2781, 41.4305, 0.55", "-13.7348, -51.8698, 50.5511, 0.55", "-13.6505, -51.6624, 55.1842, 0.55", "-13.5444, -51.4011, 61.0197, 0.28", "-13.5269, -51.3579, 61.9837, 0.83", "-13.4349, -51.1315, 67.0409, 0.28", "-13.3938, -51.0347, 67.9026, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "10.165, 78.3168, -19.0426, 0.55", "11.2433, 81.8167, -19.3235, 0.55", "12.3882, 85.514, -19.7244, 0.55", "13.1944, 88.1128, -19.9801, 0.55", "14.4451, 92.0062, -20.3417, 0.83", "15.3361, 94.7734, -20.5821, 0.55", "16.1934, 97.3488, -20.7944, 0.55", "16.9978, 99.7574, -20.9218, 1.11", "18.4228, 103.936, -21.2729, 0.55", "18.8603, 105.34, -21.4187, 0.55", "19.4044, 107.114, -21.6237, 1.11", "20.068, 109.317, -21.8949, 0.55", "20.4738, 110.762, -22.0733, 1.11", "21.669, 115.179, -22.5712, 0.55", "22.2144, 117.522, -23.0004, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "10.165, 78.3168, -19.0426, 0.28", "10.6549, 80.9398, -21.695, 0.28", "10.7426, 81.3305, -22.0785, 0.55", "11.5602, 84.779, -25.3132, 0.28", "12.4297, 87.9802, -28.4912, 1.11", "12.9424, 89.6366, -30.2301, 0.28", "12.9424, 89.6366, -30.2301, 0.55", "13.7673, 91.6215, -31.8797, 0.28", "14.1437, 92.373, -32.4149, 1.11", "16.3404, 95.6246, -33.666, 0.55", "18.3525, 98.1065, -33.7029, 0.28", "21.7206, 101.952, -33.1768, 1.11", "24.6941, 105.192, -32.3025, 0.28", "24.7685, 105.266, -32.262, 0.55", "26.9973, 107.353, -30.6188, 0.28", "27.1986, 107.535, -30.4138, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-30.204, -93.2289, 45.2054, 0.83", "-30.2607, -96.485, 46.823, 0.83", "-30.3963, -99.081, 48.2797, 0.83", "-30.4314, -100.29, 48.982, 0.83", "-30.4874, -100.98, 49.4378, 0.83", "-30.7071, -102.869, 50.7065, 0.83", "-30.8077, -103.997, 51.3779, 0.83", "-30.8857, -106.159, 52.4673, 0.83", "-30.8844, -107.648, 53.253, 0.83", "-30.7258, -110.181, 54.5661, 0.83", "-30.541, -111.483, 55.1893, 0.83", "-29.8741, -114.707, 56.4679, 0.83", "-29.215, -117.608, 57.4251, 0.83", "-28.6351, -120.04, 57.9993, 0.83", "-28.2704, -121.82, 58.3335, 0.83", "-28.1967, -122.181, 58.3882, 0.83", "-27.8961, -124.255, 58.7633, 0.28", "-27.8672, -124.805, 58.8822, 0.83", "-27.862, -126.244, 59.1161, 0.28", "-27.866, -128.809, 59.4826, 0.28", "-27.881, -129.359, 59.5769, 0.28", "-27.9234, -131.107, 59.8941, 0.83", "-27.9361, -132.645, 60.2086, 0.28", "-27.9465, -133.876, 60.4789, 0.83", "-27.9307, -134.852, 60.735, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-30.204, -93.2289, 45.2054, 0.55", "-32.966, -100.204, 42.8535, 0.55", "-34.2647, -103.183, 41.9171, 0.55", "-37.1784, -109.488, 40.0723, 0.55", "-38.5013, -112.179, 39.3331, 0.55", "-39.8935, -114.788, 38.6627, 0.28", "-40.5156, -115.954, 38.3632, 0.55", "-42.2253, -118.625, 37.8218, 0.28", "-43.3722, -120.356, 37.5115, 0.55", "-44.8633, -122.349, 37.3178, 0.28", "-47.2326, -125.339, 36.9899, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "axon_0", "axon_0", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_BP_40adbb9f96_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_5(0), soma_0(0.44999997245508955)
    connect dend_0(0), soma_0(0.44999997245508955)
    connect axon_0(0), soma_0(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.559629, -8.92861, -0.706689, 1.8952 ) }
    soma_0 { pt3dadd( -0.520561, -8.09769, -0.641537, 3.08207 ) }
    soma_0 { pt3dadd( -0.481493, -7.26678, -0.576385, 4.07229 ) }
    soma_0 { pt3dadd( -0.442425, -6.43586, -0.511233, 5.06251 ) }
    soma_0 { pt3dadd( -0.403357, -5.60495, -0.446081, 6.03705 ) }
    soma_0 { pt3dadd( -0.364289, -4.77403, -0.380929, 6.87153 ) }
    soma_0 { pt3dadd( -0.325221, -3.94312, -0.315777, 7.33623 ) }
    soma_0 { pt3dadd( -0.286154, -3.1122, -0.250625, 7.77277 ) }
    soma_0 { pt3dadd( -0.247086, -2.28129, -0.185472, 8.20481 ) }
    soma_0 { pt3dadd( -0.208018, -1.45038, -0.12032, 8.51332 ) }
    soma_0 { pt3dadd( -0.16895, -0.619461, -0.0551684, 8.81943 ) }
    soma_0 { pt3dadd( -0.129882, 0.211453, 0.00998366, 9.1018 ) }
    soma_0 { pt3dadd( -0.0908139, 1.04237, 0.0751357, 8.76619 ) }
    soma_0 { pt3dadd( -0.051746, 1.87328, 0.140288, 8.18075 ) }
    soma_0 { pt3dadd( -0.0126781, 2.7042, 0.20544, 7.29107 ) }
    soma_0 { pt3dadd( 0.0263898, 3.53511, 0.270592, 6.47013 ) }
    soma_0 { pt3dadd( 0.0654577, 4.36603, 0.335744, 5.69271 ) }
    soma_0 { pt3dadd( 0.104526, 5.19694, 0.400896, 4.78435 ) }
    soma_0 { pt3dadd( 0.143594, 6.02786, 0.466048, 3.7615 ) }
    soma_0 { pt3dadd( 0.182661, 6.85877, 0.5312, 2.16282 ) }
    soma_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 1.49642 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.0529134, -9.15542, 10.7418, 1.66 ) }
    dend_5 { pt3dadd( -0.616135, -11.413, 12.5667, 1.66 ) }
    dend_5 { pt3dadd( -1.22404, -13.8496, 14.5365, 1.66 ) }
    dend_5 { pt3dadd( -2.26804, -18.0341, 17.9192, 1.39 ) }
    dend_5 { pt3dadd( -6.42003, -34.6762, 31.3724, 1.11 ) }
    dend_5 { pt3dadd( -7.14838, -37.5956, 33.7324, 1.11 ) }
    dend_5 { pt3dadd( -8.07086, -41.2931, 36.7213, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.617087, 8.05433, -0.778182, 1.39 ) }
    dend_0 { pt3dadd( 0.629148, 14.7824, 2.08589, 0.83 ) }
    dend_0 { pt3dadd( 0.633119, 16.9977, 3.02894, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 0.92622, 22.6731, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 34/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -8.07086, -41.2931, 36.7213, 0.83 ) }
    dend_7 { pt3dadd( -10.1933, -45.4701, 35.3112, 0.83 ) }
    dend_7 { pt3dadd( -10.6986, -46.4647, 34.9754, 0.83 ) }
    dend_7 { pt3dadd( -11.9886, -49.0035, 34.1183, 0.83 ) }
    dend_7 { pt3dadd( -12.5669, -50.1416, 33.7341, 0.83 ) }
    dend_7 { pt3dadd( -13.8105, -52.5891, 32.9078, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -8.07086, -41.2931, 36.7213, 0.83 ) }
    dend_6 { pt3dadd( -8.09379, -43.3509, 37.0428, 0.83 ) }
    dend_6 { pt3dadd( -8.11516, -45.2146, 37.3061, 0.83 ) }
    dend_6 { pt3dadd( -8.22173, -47.6563, 37.6198, 0.83 ) }
    dend_6 { pt3dadd( -8.36939, -53.2377, 38.1909, 0.83 ) }
    dend_6 { pt3dadd( -8.43152, -57.8442, 38.5936, 0.55 ) }
    dend_6 { pt3dadd( -8.53985, -65.6583, 39.1087, 0.55 ) }
    dend_6 { pt3dadd( -8.48606, -69.544, 39.3979, 0.83 ) }
    dend_6 { pt3dadd( -8.3245, -73.9873, 39.7335, 0.55 ) }
    dend_6 { pt3dadd( -7.84788, -81.2441, 40.4932, 0.55 ) }
    dend_6 { pt3dadd( -7.66991, -83.3162, 40.7349, 0.55 ) }
    dend_6 { pt3dadd( -7.16969, -88.9348, 41.4214, 0.55 ) }
    dend_6 { pt3dadd( -6.51447, -96.018, 42.4628, 0.55 ) }
    dend_6 { pt3dadd( -6.12682, -100.259, 43.1338, 0.55 ) }
    dend_6 { pt3dadd( -5.66375, -105.906, 44.0793, 0.55 ) }
    dend_6 { pt3dadd( -5.17986, -116.074, 45.8926, 0.55 ) }
    dend_6 { pt3dadd( -5.07703, -121.444, 46.8308, 0.55 ) }
    dend_6 { pt3dadd( -5.08685, -125.452, 47.4759, 0.55 ) }
    dend_6 { pt3dadd( -5.26023, -128.234, 47.8088, 0.55 ) }
    dend_6 { pt3dadd( -5.5383, -130.671, 48.0515, 0.55 ) }
    dend_6 { pt3dadd( -6.30333, -135.557, 48.6453, 0.55 ) }
    dend_6 { pt3dadd( -6.7416, -138.002, 48.9633, 0.55 ) }
    dend_6 { pt3dadd( -7.4288, -141.734, 49.6053, 0.55 ) }
    dend_6 { pt3dadd( -8.36536, -146.73, 50.5481, 0.55 ) }
    dend_6 { pt3dadd( -9.80229, -153.939, 52.0185, 0.55 ) }
    dend_6 { pt3dadd( -11.0547, -160.426, 53.4373, 0.55 ) }
    dend_6 { pt3dadd( -12.1985, -166.084, 54.7939, 0.83 ) }
    dend_6 { pt3dadd( -13.3046, -171.482, 56.2784, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.633119, 16.9977, 3.02894, 0.83 ) }
    dend_2 { pt3dadd( 1.79033, 26.2187, -1.25897, 0.83 ) }
    dend_2 { pt3dadd( 2.14907, 28.6462, -2.28538, 0.83 ) }
    dend_2 { pt3dadd( 2.59298, 31.6212, -3.57279, 0.83 ) }
    dend_2 { pt3dadd( 2.9803, 34.0778, -4.55919, 0.83 ) }
    dend_2 { pt3dadd( 3.60173, 38.0064, -6.05275, 0.83 ) }
    dend_2 { pt3dadd( 4.45525, 43.1424, -7.88258, 0.83 ) }
    dend_2 { pt3dadd( 4.96651, 46.7993, -8.89879, 0.83 ) }
    dend_2 { pt3dadd( 5.5682, 50.7532, -10.0583, 0.83 ) }
    dend_2 { pt3dadd( 6.27214, 54.8078, -11.3939, 0.55 ) }
    dend_2 { pt3dadd( 6.49659, 56.0917, -11.8242, 0.55 ) }
    dend_2 { pt3dadd( 6.85006, 58.29, -12.581, 0.55 ) }
    dend_2 { pt3dadd( 7.63236, 62.8776, -14.0674, 0.55 ) }
    dend_2 { pt3dadd( 8.15963, 66.2081, -15.1128, 0.55 ) }
    dend_2 { pt3dadd( 9.54388, 74.551, -17.7081, 0.55 ) }
    dend_2 { pt3dadd( 10.165, 78.3168, -19.0426, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 84/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.633119, 16.9977, 3.02894, 0.83 ) }
    dend_1 { pt3dadd( 1.89384, 20.2373, 3.47315, 0.83 ) }
    dend_1 { pt3dadd( 2.89305, 22.7859, 3.93211, 0.83 ) }
    dend_1 { pt3dadd( 4.46941, 26.7942, 4.82336, 0.83 ) }
    dend_1 { pt3dadd( 5.97893, 30.6531, 5.73564, 0.83 ) }
    dend_1 { pt3dadd( 7.65463, 35.5213, 6.82091, 0.83 ) }
    dend_1 { pt3dadd( 8.85338, 39.1903, 7.56688, 0.83 ) }
    dend_1 { pt3dadd( 9.68695, 41.9546, 8.19516, 0.83 ) }
    dend_1 { pt3dadd( 10.5106, 44.9833, 8.82339, 0.83 ) }
    dend_1 { pt3dadd( 10.6792, 45.8038, 8.97915, 0.83 ) }
    dend_1 { pt3dadd( 12.3009, 55.2351, 10.383, 0.83 ) }
    dend_1 { pt3dadd( 12.5302, 57.2349, 10.6048, 0.83 ) }
    dend_1 { pt3dadd( 12.7349, 59.9512, 10.8111, 0.83 ) }
    dend_1 { pt3dadd( 12.8596, 62.2998, 10.9628, 0.83 ) }
    dend_1 { pt3dadd( 12.942, 65.0186, 11.1295, 0.83 ) }
    dend_1 { pt3dadd( 13.0676, 68.4555, 11.3264, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 13.1181, 71.987, 11.572, 0.83 ) }
    dend_1 { pt3dadd( 13.1766, 74.0085, 11.6931, 0.83 ) }
    dend_1 { pt3dadd( 13.3322, 77.1445, 11.8276, 0.83 ) }
    dend_1 { pt3dadd( 13.449, 80.2225, 11.9951, 0.83 ) }
    dend_1 { pt3dadd( 13.593, 83.4636, 12.1094, 0.83 ) }
    dend_1 { pt3dadd( 13.8082, 87.6993, 12.295, 0.83 ) }
    dend_1 { pt3dadd( 14.0264, 90.4665, 12.5146, 0.83 ) }
    dend_1 { pt3dadd( 14.1501, 91.9947, 12.686, 0.83 ) }
    dend_1 { pt3dadd( 14.3168, 93.7194, 12.9688, 0.83 ) }
    dend_1 { pt3dadd( 14.6531, 96.2709, 13.508, 0.83 ) }
    dend_1 { pt3dadd( 15.1616, 99.9985, 14.5851, 0.55 ) }
    dend_1 { pt3dadd( 15.9681, 104.891, 16.1426, 0.55 ) }
    dend_1 { pt3dadd( 16.1625, 106.321, 16.6635, 0.55 ) }
    dend_1 { pt3dadd( 16.5505, 109.329, 17.7525, 0.55 ) }
    dend_1 { pt3dadd( 16.6755, 110.587, 18.2132, 0.55 ) }
    dend_1 { pt3dadd( 16.8757, 112.941, 19.0952, 0.55 ) }
    dend_1 { pt3dadd( 17.0497, 115.401, 19.8967, 0.55 ) }
    dend_1 { pt3dadd( 17.3006, 118.995, 20.805, 0.55 ) }
    dend_1 { pt3dadd( 17.4499, 121.364, 21.3702, 0.55 ) }
    dend_1 { pt3dadd( 17.5133, 123.515, 21.8513, 0.55 ) }
    dend_1 { pt3dadd( 17.6437, 126.212, 22.4018, 0.55 ) }
    dend_1 { pt3dadd( 17.877, 129.04, 22.8366, 0.55 ) }
    dend_1 { pt3dadd( 18.3203, 132.909, 23.4079, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 23/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 2.3352, 52.64, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 3.03969, 67.6235, 0.596352, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -13.8105, -52.5891, 32.9078, 0.83 ) }
    dend_9 { pt3dadd( -16.5827, -59.2762, 35.8148, 0.83 ) }
    dend_9 { pt3dadd( -18.769, -64.5722, 37.859, 0.83 ) }
    dend_9 { pt3dadd( -21.3952, -70.9562, 40.0399, 0.83 ) }
    dend_9 { pt3dadd( -23.5828, -76.228, 41.6624, 0.83 ) }
    dend_9 { pt3dadd( -24.9122, -79.4318, 42.6485, 0.83 ) }
    dend_9 { pt3dadd( -26.4972, -83.2517, 43.8242, 0.83 ) }
    dend_9 { pt3dadd( -27.5461, -86.0243, 44.4691, 0.83 ) }
    dend_9 { pt3dadd( -28.7403, -89.1874, 45.0628, 0.83 ) }
    dend_9 { pt3dadd( -30.204, -93.2289, 45.2054, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -13.8105, -52.5891, 32.9078, 0.55 ) }
    dend_8 { pt3dadd( -13.9006, -52.2781, 41.4305, 0.55 ) }
    dend_8 { pt3dadd( -13.7348, -51.8698, 50.5511, 0.55 ) }
    dend_8 { pt3dadd( -13.6505, -51.6624, 55.1842, 0.55 ) }
    dend_8 { pt3dadd( -13.5444, -51.4011, 61.0197, 0.28 ) }
    dend_8 { pt3dadd( -13.5269, -51.3579, 61.9837, 0.83 ) }
    dend_8 { pt3dadd( -13.4349, -51.1315, 67.0409, 0.28 ) }
    dend_8 { pt3dadd( -13.3938, -51.0347, 67.9026, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 44/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 10.165, 78.3168, -19.0426, 0.55 ) }
    dend_4 { pt3dadd( 11.2433, 81.8167, -19.3235, 0.55 ) }
    dend_4 { pt3dadd( 12.3882, 85.514, -19.7244, 0.55 ) }
    dend_4 { pt3dadd( 13.1944, 88.1128, -19.9801, 0.55 ) }
    dend_4 { pt3dadd( 14.4451, 92.0062, -20.3417, 0.83 ) }
    dend_4 { pt3dadd( 15.3361, 94.7734, -20.5821, 0.55 ) }
    dend_4 { pt3dadd( 16.1934, 97.3488, -20.7944, 0.55 ) }
    dend_4 { pt3dadd( 16.9978, 99.7574, -20.9218, 1.11 ) }
    dend_4 { pt3dadd( 18.4228, 103.936, -21.2729, 0.55 ) }
    dend_4 { pt3dadd( 18.8603, 105.34, -21.4187, 0.55 ) }
    dend_4 { pt3dadd( 19.4044, 107.114, -21.6237, 1.11 ) }
    dend_4 { pt3dadd( 20.068, 109.317, -21.8949, 0.55 ) }
    dend_4 { pt3dadd( 20.4738, 110.762, -22.0733, 1.11 ) }
    dend_4 { pt3dadd( 21.669, 115.179, -22.5712, 0.55 ) }
    dend_4 { pt3dadd( 22.2144, 117.522, -23.0004, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 10.165, 78.3168, -19.0426, 0.28 ) }
    dend_3 { pt3dadd( 10.6549, 80.9398, -21.695, 0.28 ) }
    dend_3 { pt3dadd( 10.7426, 81.3305, -22.0785, 0.55 ) }
    dend_3 { pt3dadd( 11.5602, 84.779, -25.3132, 0.28 ) }
    dend_3 { pt3dadd( 12.4297, 87.9802, -28.4912, 1.11 ) }
    dend_3 { pt3dadd( 12.9424, 89.6366, -30.2301, 0.28 ) }
    dend_3 { pt3dadd( 12.9424, 89.6366, -30.2301, 0.55 ) }
    dend_3 { pt3dadd( 13.7673, 91.6215, -31.8797, 0.28 ) }
    dend_3 { pt3dadd( 14.1437, 92.373, -32.4149, 1.11 ) }
    dend_3 { pt3dadd( 16.3404, 95.6246, -33.666, 0.55 ) }
    dend_3 { pt3dadd( 18.3525, 98.1065, -33.7029, 0.28 ) }
    dend_3 { pt3dadd( 21.7206, 101.952, -33.1768, 1.11 ) }
    dend_3 { pt3dadd( 24.6941, 105.192, -32.3025, 0.28 ) }
    dend_3 { pt3dadd( 24.7685, 105.266, -32.262, 0.55 ) }
    dend_3 { pt3dadd( 26.9973, 107.353, -30.6188, 0.28 ) }
    dend_3 { pt3dadd( 27.1986, 107.535, -30.4138, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -30.204, -93.2289, 45.2054, 0.83 ) }
    dend_11 { pt3dadd( -30.2607, -96.485, 46.823, 0.83 ) }
    dend_11 { pt3dadd( -30.3963, -99.081, 48.2797, 0.83 ) }
    dend_11 { pt3dadd( -30.4314, -100.29, 48.982, 0.83 ) }
    dend_11 { pt3dadd( -30.4874, -100.98, 49.4378, 0.83 ) }
    dend_11 { pt3dadd( -30.7071, -102.869, 50.7065, 0.83 ) }
    dend_11 { pt3dadd( -30.8077, -103.997, 51.3779, 0.83 ) }
    dend_11 { pt3dadd( -30.8857, -106.159, 52.4673, 0.83 ) }
    dend_11 { pt3dadd( -30.8844, -107.648, 53.253, 0.83 ) }
    dend_11 { pt3dadd( -30.7258, -110.181, 54.5661, 0.83 ) }
    dend_11 { pt3dadd( -30.541, -111.483, 55.1893, 0.83 ) }
    dend_11 { pt3dadd( -29.8741, -114.707, 56.4679, 0.83 ) }
    dend_11 { pt3dadd( -29.215, -117.608, 57.4251, 0.83 ) }
    dend_11 { pt3dadd( -28.6351, -120.04, 57.9993, 0.83 ) }
    dend_11 { pt3dadd( -28.2704, -121.82, 58.3335, 0.83 ) }
    dend_11 { pt3dadd( -28.1967, -122.181, 58.3882, 0.83 ) }
    dend_11 { pt3dadd( -27.8961, -124.255, 58.7633, 0.28 ) }
    dend_11 { pt3dadd( -27.8672, -124.805, 58.8822, 0.83 ) }
    dend_11 { pt3dadd( -27.862, -126.244, 59.1161, 0.28 ) }
    dend_11 { pt3dadd( -27.866, -128.809, 59.4826, 0.28 ) }
    dend_11 { pt3dadd( -27.881, -129.359, 59.5769, 0.28 ) }
    dend_11 { pt3dadd( -27.9234, -131.107, 59.8941, 0.83 ) }
    dend_11 { pt3dadd( -27.9361, -132.645, 60.2086, 0.28 ) }
    dend_11 { pt3dadd( -27.9465, -133.876, 60.4789, 0.83 ) }
    dend_11 { pt3dadd( -27.9307, -134.852, 60.735, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 0/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -30.204, -93.2289, 45.2054, 0.55 ) }
    dend_10 { pt3dadd( -32.966, -100.204, 42.8535, 0.55 ) }
    dend_10 { pt3dadd( -34.2647, -103.183, 41.9171, 0.55 ) }
    dend_10 { pt3dadd( -37.1784, -109.488, 40.0723, 0.55 ) }
    dend_10 { pt3dadd( -38.5013, -112.179, 39.3331, 0.55 ) }
    dend_10 { pt3dadd( -39.8935, -114.788, 38.6627, 0.28 ) }
    dend_10 { pt3dadd( -40.5156, -115.954, 38.3632, 0.55 ) }
    dend_10 { pt3dadd( -42.2253, -118.625, 37.8218, 0.28 ) }
    dend_10 { pt3dadd( -43.3722, -120.356, 37.5115, 0.55 ) }
    dend_10 { pt3dadd( -44.8633, -122.349, 37.3178, 0.28 ) }
    dend_10 { pt3dadd( -47.2326, -125.339, 36.9899, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_5 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_9 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_4 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_3 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_11 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_7 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_5 nseg = 3
    dend_6 nseg = 7
    dend_2 nseg = 3
    dend_1 nseg = 7
    dend_9 nseg = 3
    dend_4 nseg = 3
    dend_3 nseg = 3
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_BP_40adbb9f96_0_0


