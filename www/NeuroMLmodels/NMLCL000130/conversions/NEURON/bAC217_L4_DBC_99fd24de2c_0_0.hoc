// Cell: bAC217_L4_DBC_99fd24de2c_0_0
/*
{
  "id" : "bAC217_L4_DBC_99fd24de2c_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.29752, -10.9202, 0.0, 2.7473", "-3.02947, -9.86122, 0.0, 4.90547", "-2.76143, -8.80223, 0.0, 7.1195", "-2.49339, -7.74324, 0.0, 9.06693", "-2.22534, -6.68425, 0.0, 10.5477", "-1.9573, -5.62526, 0.0, 11.7638", "-1.68926, -4.56627, 0.0, 12.6703", "-1.42121, -3.50728, 0.0, 13.5724", "-1.15317, -2.44829, 0.0, 13.9606", "-0.885125, -1.3893, 0.0, 14.249", "-0.617082, -0.330312, 0.0, 14.4914", "-0.349039, 0.728678, 0.0, 14.572", "-0.0809953, 1.78767, 0.0, 14.5168", "0.187048, 2.84666, 0.0, 14.1167", "0.455092, 3.90565, 0.0, 13.6161", "0.723135, 4.96464, 0.0, 12.8986", "0.991178, 6.02363, 0.0, 12.0703", "1.25922, 7.08262, 0.0, 10.8368", "1.52727, 8.14161, 0.0, 9.27498", "1.79531, 9.2006, 0.0, 7.02436", "2.06335, 10.2596, 0.0, 4.05122" ]
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "0.851454, 10.3756, 1.7, 1.62", "0.851454, 10.3756, 1.7, 1.62", "0.752109, 12.5171, 1.63555, 0.96", "0.666967, 14.3525, 1.5803, 1.25", "0.548177, 16.9131, 1.50323, 1.55", "0.437001, 19.3097, 1.4311, 1.84", "0.324955, 21.725, 1.35841, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-2.23855, -9.6529, -9.03, 1.18", "-1.85484, -9.75169, -9.09742, 1.18", "-0.907417, -10.102, -9.27897, 1.18", "0.685098, -10.8822, -9.63029, 1.03", "1.50156, -11.3501, -9.8282, 0.96", "2.20708, -11.669, -9.97182, 0.81", "1.4098, -11.8751, -9.98566, 0.74", "0.826499, -12.2767, -10.1044, 0.74", "0.053575, -12.804, -10.3095, 0.96", "-0.890999, -13.3972, -10.5926, 1.18", "-2.25581, -14.1681, -11.0439, 0.88", "-3.40238, -14.7547, -11.4754, 0.96", "-4.59912, -15.3156, -11.9421, 1.25", "-5.43254, -15.6901, -12.2926, 1.99", "-6.24956, -16.0601, -12.6781, 2.95", "-7.04316, -16.4554, -13.1328, 3.54", "-7.71306, -16.8406, -13.6237, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-1.90855, -11.9489, 1.23, 0.81", "-1.75595, -12.8156, 1.19583, 0.81", "-1.50533, -13.8768, 1.15414, 0.96", "-1.21118, -14.9366, 1.11446, 1.18", "-0.894014, -15.9627, 1.07832, 1.18", "-0.515844, -17.1001, 1.07434, 0.81", "-0.273513, -17.7951, 1.09652, 1.03", "0.095524, -18.7688, 1.19393, 1.47", "0.352775, -19.4662, 1.31949, 2.06", "0.554119, -20.0951, 1.48092, 2.14", "0.823236, -21.2644, 1.86198, 1.33", "0.981, -22.7617, 2.4245, 0.96", "0.9276, -24.095, 2.95802, 0.96", "0.723681, -25.0476, 3.34927, 1.18", "0.476627, -25.7517, 3.64288, 1.99", "0.081616, -26.6209, 3.99964, 2.88", "-0.440855, -27.6081, 4.37986, 3.02", "-1.17308, -28.9347, 4.84891, 1.77", "-2.17356, -30.8898, 5.44899, 0.81", "-2.66742, -32.0294, 5.75825, 0.81", "-2.93449, -32.8398, 5.94845, 0.81", "-3.14674, -33.8245, 6.15608, 0.81", "-3.27245, -34.8979, 6.37833, 0.81", "-3.30054, -35.7994, 6.55901, 1.03", "-3.28462, -36.6896, 6.72685, 1.25", "-3.20845, -38.3491, 7.02516, 0.81", "-3.14225, -39.6718, 7.27426, 1.03", "-3.10894, -40.7279, 7.494, 1.62", "-3.1226, -41.599, 7.70013, 2.73", "-3.21019, -42.8273, 8.02424, 4.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.51145, 6.49085, 5.69, 0.59", "7.38033, 6.97736, 5.50849, 0.44", "8.22699, 7.50592, 5.58671, 0.44", "8.93498, 7.97079, 5.8438, 0.44", "9.6933, 8.46644, 6.26601, 0.37", "10.2594, 8.81847, 6.64637, 1.03", "11.149, 9.34344, 7.32837, 1.33", "12.0883, 9.87502, 8.2645, 1.47", "12.7328, 10.2082, 9.04065, 1.25", "13.4343, 10.4818, 9.99847, 0.29", "13.8858, 10.5644, 10.662, 0.22", "14.2337, 10.5541, 11.1465, 0.22", "14.456, 10.4748, 11.4005, 0.22", "14.7209, 10.3491, 11.6717, 0.22", "15.1341, 10.1628, 12.0746, 1.03", "16.0112, 9.83502, 12.9556, 2.21", "16.4971, 9.75312, 13.4513, 3.02", "18.0329, 9.90802, 15.053, 0.29", "18.7394, 10.1928, 15.8314, 0.29", "19.137, 10.467, 16.2827, 0.44", "19.5237, 10.8415, 16.7413, 0.66", "20.1196, 11.5874, 17.4727, 1.11", "20.6661, 12.3633, 18.1732, 0.52", "21.1008, 13.0412, 18.6886, 0.22", "21.3792, 13.3425, 18.9737, 0.22", "21.6525, 13.4388, 19.2297, 0.22", "21.9189, 13.3332, 19.4578, 0.22", "22.5292, 12.9302, 19.9531, 0.66", "23.1462, 12.4863, 20.427, 1.7", "23.7582, 12.0481, 20.9145, 2.21", "24.3359, 11.6809, 21.4198, 1.7", "25.1317, 11.3334, 22.23, 0.29", "25.8635, 11.2268, 23.1509, 0.22", "26.1611, 11.3113, 23.6334, 0.22", "26.4582, 11.6152, 24.3893, 0.22", "26.622, 12.0616, 25.2173, 0.96", "26.699, 12.863, 26.5164, 0.74", "26.6573, 13.434, 27.4208, 0.74", "26.5972, 13.75, 27.9589, 0.74", "26.5345, 14.1752, 28.8433, 0.74", "26.5606, 14.4173, 29.4282, 0.74", "26.6224, 14.4771, 29.6331, 0.74", "27.0684, 14.6026, 30.2972, 0.74", "27.537, 14.6987, 30.8266, 1.18", "28.3613, 14.8474, 31.6776, 0.44", "29.1126, 14.986, 32.3734, 1.25", "30.155, 15.2051, 33.2796, 2.73", "31.2688, 15.4795, 34.2309, 3.54", "31.8927, 15.6578, 34.7439, 2.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.64855, 7.1161, 5.52, 0.88", "-5.12676, 7.72359, 5.74818, 0.74", "-5.89934, 8.59694, 6.18886, 0.22", "-6.41768, 9.12798, 6.51068, 0.22", "-7.10793, 9.77412, 6.92935, 0.44", "-7.6856, 10.2609, 7.26073, 0.44", "-8.44726, 10.8056, 7.67372, 0.22", "-9.26424, 11.2432, 8.10518, 0.22", "-9.68709, 11.4151, 8.31301, 0.22", "-10.2829, 11.6089, 8.58004, 0.96", "-11.2211, 11.8516, 8.99732, 1.47", "-12.9218, 12.223, 9.82114, 0.15", "-13.6801, 12.3863, 10.1745, 0.15", "-14.2107, 12.5316, 10.385, 0.15", "-14.9979, 12.769, 10.6708, 0.88", "-16.3898, 13.2199, 11.1606, 0.37", "-17.8773, 13.7377, 11.6776, 1.55", "-19.0664, 14.1915, 12.0896, 2.95", "-22.0997, 15.4152, 13.1266, 0.07", "-22.6657, 15.6424, 13.3148, 0.88", "-23.8353, 16.1139, 13.6677, 0.07", "-24.919, 16.5593, 13.9145, 0.22", "-25.663, 16.8671, 14.0528, 0.22", "-27.3168, 17.5214, 14.333, 0.15", "-27.831, 17.7032, 14.4101, 0.96", "-28.5662, 17.9509, 14.4815, 1.84", "-31.1788, 18.774, 14.5733, 0.15", "-31.7589, 18.9294, 14.5691, 0.66", "-32.6796, 19.1402, 14.5421, 1.18", "-34.9229, 19.5765, 14.4421, 0.15", "-35.7586, 19.7068, 14.3863, 1.33", "-36.8777, 19.8383, 14.2953, 2.51", "-40.0402, 20.0818, 13.991, 0.15", "-40.5499, 20.1096, 13.9193, 0.52", "-41.4765, 20.1389, 13.7425, 0.81", "-42.9193, 20.1607, 13.3884, 0.15", "-43.6488, 20.1669, 13.1983, 0.15", "-44.2023, 20.1758, 13.0379, 0.66", "-45.8848, 20.2344, 12.4945, 1.84", "-47.5406, 20.3465, 11.9886, 0.22", "-48.3856, 20.4284, 11.7584, 0.37", "-48.7522, 20.474, 11.6709, 0.88", "-50.1344, 20.6626, 11.4158, 0.15", "-50.8961, 20.783, 11.3132, 0.15", "-51.7356, 20.9348, 11.2562, 0.74", "-54.2427, 21.4131, 11.2662, 0.07", "-54.7168, 21.5109, 11.2906, 0.52", "-56.3443, 21.8866, 11.4469, 0.15", "-57.1163, 22.0829, 11.5581, 0.96", "-58.0844, 22.3452, 11.7311, 1.92", "-60.1676, 23.013, 12.1657, 0.15", "-61.0309, 23.3427, 12.3632, 0.22", "-62.0504, 23.7718, 12.5779, 0.07", "-62.7155, 24.1014, 12.7015, 1.03", "-63.4004, 24.4709, 12.8176, 1.77", "-65.4538, 25.6633, 13.1161, 0.07", "-66.2857, 26.1866, 13.2217, 0.07", "-66.8595, 26.5428, 13.306, 0.74", "-68.4201, 27.5184, 13.5504, 0.07", "-68.9024, 27.8157, 13.6273, 0.52", "-70.2293, 28.5272, 13.8538, 0.07", "-71.0575, 28.8749, 14.0036, 0.22", "-71.9794, 29.1526, 14.1595, 0.15", "-72.3657, 29.2156, 14.2133, 0.96", "-73.3139, 29.2484, 14.312, 1.92", "-75.2555, 29.1809, 14.4561, 0.07", "-76.2039, 29.0887, 14.4831, 0.29", "-77.2373, 28.9998, 14.4632, 0.07", "-78.2351, 28.9765, 14.4049, 0.07", "-78.6233, 28.9926, 14.3793, 0.07", "-78.9897, 29.0267, 14.3486, 0.44", "-79.7571, 29.1463, 14.2638, 0.74", "-81.6459, 29.4685, 14.0433, 0.07", "-83.1451, 29.7267, 13.8753, 0.15", "-84.1868, 29.8999, 13.7596, 0.96", "-85.4783, 30.0559, 13.6232, 0.07", "-86.5226, 30.1327, 13.5138, 0.59", "-87.5321, 30.1418, 13.411, 0.15", "-88.0137, 30.1109, 13.3611, 0.74", "-88.7441, 30.0267, 13.2816, 1.18", "-91.0204, 29.7183, 12.9473, 0.15", "-91.7707, 29.6208, 12.819, 0.81", "-92.9012, 29.4809, 12.5932, 0.15", "-93.5629, 29.4031, 12.4458, 0.22", "-95.2662, 29.2074, 12.0332, 0.07", "-96.3203, 29.0872, 11.7597, 1.03", "-97.0559, 29.017, 11.5552, 1.84", "-99.4966, 28.8678, 10.8907, 0.07", "-99.9838, 28.8637, 10.7628, 0.22", "-102.27, 28.9674, 10.2187, 0.07", "-102.565, 28.9914, 10.1569, 0.66", "-103.227, 29.0559, 10.0567, 1.25", "-104.343, 29.1884, 9.91063, 0.15", "-105.242, 29.3378, 9.81649, 0.74", "-106.723, 29.57, 9.71486, 0.07", "-107.722, 29.7173, 9.6803, 0.07", "-108.75, 29.8505, 9.65789, 0.07", "-108.955, 29.8786, 9.66185, 0.07", "-109.795, 30.0184, 9.71236, 0.74", "-111.413, 30.3179, 9.91276, 0.07", "-111.864, 30.4244, 9.99777, 1.11", "-112.821, 30.6739, 10.2274, 1.62", "-114.567, 31.0342, 10.7041, 0.07", "-115.482, 31.1823, 10.9699, 0.81", "-116.939, 31.3536, 11.408, 0.15", "-118.129, 31.4283, 11.7893, 0.15", "-119.38, 31.4357, 12.1997, 1.11", "-122.206, 31.2841, 13.124, 0.15", "-122.857, 31.2159, 13.3267, 1.03", "-124.049, 31.06, 13.6831, 1.84", "-126.086, 30.7477, 14.2326, 0.22", "-126.454, 30.6818, 14.3305, 0.22", "-127.201, 30.5453, 14.5326, 0.07", "-127.749, 30.4487, 14.6905, 0.59", "-128.897, 30.2359, 15.0488, 0.07", "-129.65, 30.081, 15.2898, 0.29", "-130.409, 29.891, 15.5276, 0.07", "-131.282, 29.631, 15.8003, 0.37", "-132.526, 29.2103, 16.1848, 0.07", "-133.43, 28.8602, 16.4591, 0.66", "-134.434, 28.3536, 16.7153, 0.07", "-135.348, 27.8001, 16.9122, 0.96", "-136.917, 26.6484, 17.1656, 0.07", "-137.765, 25.8552, 17.2323, 0.07", "-138.323, 25.1817, 17.2122, 1.03", "-139.81, 22.7341, 16.9762, 0.15", "-140.196, 21.9268, 16.8554, 0.15", "-140.601, 20.8725, 16.6574, 1.11", "-141.143, 19.1094, 16.2847, 0.15", "-141.552, 17.5984, 15.9447, 1.84", "-142.312, 14.6458, 15.2643, 0.15", "-142.474, 13.9955, 15.1168, 0.59", "-142.753, 12.9859, 14.9187, 1.03", "-143.463, 10.7778, 14.5967, 0.15", "-143.739, 10.0519, 14.5639, 0.52", "-144.329, 8.67611, 14.6161, 0.15", "-144.694, 7.85951, 14.7242, 0.66", "-145.235, 6.58846, 15.0018, 0.15", "-145.787, 5.12598, 15.4276, 1.62", "-146.434, 2.98993, 16.1788, 0.07", "-146.612, 2.19068, 16.4626, 0.29", "-146.821, 0.720463, 16.9383, 0.07", "-146.871, -0.0805597, 17.1444, 0.96", "-146.883, -1.35233, 17.3009, 2.21", "-146.86, -2.4547, 17.3122, 1.33", "-146.85, -3.99182, 17.1698, 0.07", "-146.89, -5.35459, 16.9582, 0.07", "-146.965, -6.38315, 16.7416, 1.03", "-147.183, -8.82398, 16.1655, 0.07", "-147.277, -9.60555, 15.9636, 0.88", "-147.551, -11.4907, 15.4532, 0.07", "-147.654, -12.1758, 15.2625, 0.66", "-147.724, -12.6443, 15.1396, 1.25", "-147.959, -14.1063, 14.7857, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.06335, 10.2596, 0.0, 0.615564", "5.74396, 24.801, 0.0, 0.615564", "9.42458, 39.3425, 0.0, 0.615564" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "0.324955, 21.725, 1.35841, 0.37", "1.21826, 22.9244, 2.34053, 0.37", "1.49583, 23.2597, 2.66051, 0.37", "1.9926, 23.9066, 3.323, 0.37", "2.5473, 24.867, 4.24126, 0.22", "2.65328, 25.2321, 4.56882, 0.22", "2.57113, 25.6655, 4.94524, 0.22", "2.35142, 25.9262, 5.19279, 0.22", "1.93344, 26.3419, 5.54819, 0.22", "1.20584, 27.0356, 6.14576, 0.22", "0.743226, 27.4822, 6.54329, 0.22", "-0.00408947, 28.3052, 7.26768, 0.66", "-0.729859, 29.2783, 8.13246, 1.03", "-1.53492, 30.5085, 9.299, 0.22", "-2.04275, 31.3604, 10.2041, 0.22", "-2.36032, 31.9598, 10.945, 0.88", "-2.65501, 32.5756, 11.8173, 1.47", "-3.07174, 33.5409, 13.4146, 0.15", "-3.34783, 34.3115, 14.7388, 0.15", "-3.58971, 35.1027, 16.0454, 0.15", "-3.8709, 35.8709, 17.1643, 0.15", "-4.24447, 36.6378, 18.2041, 0.15", "-4.8566, 37.5528, 19.3363, 0.15", "-6.04833, 38.9605, 20.7669, 0.96", "-6.80235, 39.7551, 21.4451, 2.06", "-8.14165, 41.0289, 22.3116, 0.22", "-8.6929, 41.5498, 22.6064, 0.22", "-9.23399, 42.0208, 22.8617, 0.22", "-10.0817, 42.6651, 23.2794, 0.22", "-11.073, 43.307, 23.8973, 0.22", "-11.7144, 43.7107, 24.3405, 1.33", "-12.6595, 44.5067, 25.2072, 2.95" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "0.324955, 21.725, 1.35841, 1.25", "-0.243439, 23.0267, 1.34151, 1.25", "-0.910734, 24.7103, 1.42279, 0.81", "-1.37594, 26.1496, 1.60435, 0.81", "-1.71467, 27.5396, 1.86121, 1.11", "-1.91593, 28.8334, 2.15852, 1.4", "-1.96893, 29.9406, 2.45075, 0.59", "-1.80712, 30.9983, 2.86532, 0.59", "-1.32694, 32.246, 3.4872, 0.52", "-0.894936, 32.9956, 3.89951, 0.59", "-0.385458, 33.7513, 4.3386, 0.59", "0.289015, 34.7449, 4.93552, 0.44", "0.646279, 35.3584, 5.30508, 0.44", "0.748198, 35.7071, 5.48866, 0.44", "0.726453, 36.3299, 5.80583, 0.52", "0.521304, 37.2704, 6.34498, 0.66", "0.279643, 38.0443, 6.82701, 0.29", "0.087198, 38.6131, 7.21777, 0.29", "-0.110837, 39.3453, 7.71762, 0.37", "-0.309059, 40.2954, 8.34256, 0.88", "-0.488051, 41.278, 8.97503, 1.62", "-0.6219, 42.1861, 9.53949, 2.43", "-0.732835, 43.2161, 10.1587, 2.43", "-0.852974, 44.9356, 11.1509, 0.22", "-0.876548, 45.7467, 11.6024, 0.52", "-0.880438, 46.5661, 12.0144, 0.22", "-0.874858, 47.0011, 12.1957, 0.22", "-0.85888, 47.5595, 12.3867, 0.22", "-0.840333, 48.2393, 12.5497, 0.22", "-0.83515, 48.6935, 12.6312, 0.22", "-0.839209, 48.9916, 12.6734, 0.22", "-0.911788, 50.0544, 12.7632, 0.37", "-1.02329, 50.9581, 12.7947, 0.37", "-1.16741, 51.8208, 12.7864, 0.52", "-1.32424, 52.6932, 12.7524, 0.96", "-1.49902, 53.7379, 12.6684, 0.96", "-1.72147, 55.3347, 12.4444, 0.44", "-1.79521, 56.3757, 12.2256, 0.44", "-1.84574, 57.4563, 11.9505, 1.47", "-1.8897, 58.5838, 11.6282, 2.8", "-1.93353, 59.6253, 11.2977, 3.61", "-1.98757, 60.7054, 10.9133, 3.02", "-2.12482, 63.2335, 9.90469, 0.22", "-2.181, 64.0055, 9.57256, 0.29", "-2.21484, 64.4254, 9.38828, 0.29", "-2.29919, 65.2448, 9.01333, 0.22", "-2.42502, 66.2273, 8.562, 0.52", "-2.55281, 67.0451, 8.18343, 1.33", "-2.75145, 68.0697, 7.64023, 2.43", "-2.84264, 69.0192, 7.11548, 2.43" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-7.71306, -16.8406, -13.6237, 0.44", "-9.59399, -17.8513, -14.9588, 0.44", "-9.69396, -18.2701, -15.2828, 0.44", "-9.75672, -18.7174, -15.6349, 0.44", "-9.85848, -19.1925, -16.0297, 0.44", "-10.0318, -19.7329, -16.5209, 0.59", "-10.3332, -20.457, -17.2679, 0.74", "-10.5155, -20.9589, -17.8433, 1.11", "-10.7653, -21.5057, -18.5823, 1.47", "-11.0634, -21.9854, -19.379, 1.47", "-11.5585, -22.5311, -20.5527, 0.59", "-11.9771, -22.7965, -21.444, 0.52", "-12.2965, -22.86, -22.0681, 0.52", "-12.6717, -22.8233, -22.7161, 0.44", "-13.1097, -22.6993, -23.3123, 0.44", "-13.3526, -22.6156, -23.5829, 0.44", "-13.9881, -22.4211, -24.1445, 0.96", "-14.6038, -22.263, -24.6241, 0.96", "-15.3434, -22.1202, -25.147, 1.4", "-16.3075, -21.9922, -25.7824, 2.36", "-17.1046, -21.9297, -26.2799, 3.32", "-18.0386, -21.8762, -26.8769, 3.61" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-7.71306, -16.8406, -13.6237, 0.29", "-7.46673, -18.1918, -14.1459, 0.29", "-7.35632, -18.6522, -14.3348, 0.29", "-7.21022, -19.2545, -14.5972, 0.29", "-7.09959, -19.7557, -14.8415, 0.81", "-6.99166, -20.2934, -15.1289, 1.11", "-6.86228, -21.0655, -15.5953, 0.22", "-6.74377, -21.624, -16.0146, 0.22", "-6.7131, -21.9425, -16.3015, 0.22", "-6.71983, -22.3747, -16.7469, 0.22", "-6.71498, -22.6162, -16.9379, 0.37", "-6.68472, -23.0832, -17.2563, 0.37", "-6.64141, -23.465, -17.4756, 0.81", "-6.55698, -24.02, -17.7379, 1.7", "-6.43718, -24.7982, -18.0819, 2.29", "-6.1658, -26.496, -18.7756, 0.29", "-6.06681, -27.0745, -18.9853, 0.96", "-5.99288, -27.463, -19.1079, 0.96", "-5.79354, -28.3648, -19.3649, 0.15", "-5.63708, -28.9397, -19.4944, 0.15", "-5.51834, -29.3266, -19.5659, 0.59", "-5.24139, -30.0692, -19.67, 0.29", "-5.04261, -30.5432, -19.7108, 1.4", "-4.72388, -31.2523, -19.7485, 2.73", "-3.93994, -32.8934, -19.7757, 0.15", "-3.81716, -33.1442, -19.7752, 0.74", "-3.59214, -33.5988, -19.785, 0.74", "-3.22934, -34.2948, -19.8195, 0.15", "-2.89553, -34.9221, -19.8605, 0.15", "-2.61319, -35.4685, -19.9059, 0.15", "-2.36911, -35.9557, -19.9728, 1.25", "-2.03605, -36.6867, -20.1157, 0.22", "-1.85463, -37.188, -20.2493, 0.22", "-1.7969, -37.4478, -20.331, 0.22", "-1.77175, -37.8251, -20.4425, 0.22", "-1.79033, -38.5152, -20.6254, 0.44", "-1.844, -39.1669, -20.7791, 1.62", "-1.91195, -39.8662, -20.9313, 3.02", "-1.98338, -40.7121, -21.1062, 3.02", "-2.09932, -42.6043, -21.4987, 0.29", "-2.12233, -43.2994, -21.6367, 0.81", "-2.1242, -43.9044, -21.7449, 1.03", "-2.10619, -44.5331, -21.8534, 0.37", "-2.07968, -45.0205, -21.9235, 1.18", "-1.98825, -46.0035, -22.0462, 0.22", "-1.92634, -46.3782, -22.0829, 0.74", "-1.85454, -46.6853, -22.0999, 0.74", "-1.75498, -47.0133, -22.0986, 0.15", "-1.46419, -47.9015, -22.0357, 0.44", "-1.37449, -48.1226, -22.009, 0.44", "-1.05715, -48.7989, -21.9106, 0.22", "-0.868822, -49.1965, -21.865, 1.11", "-0.730272, -49.5337, -21.8378, 1.62", "-0.527092, -50.0974, -21.8076, 1.62", "-0.155904, -51.3936, -21.8066, 0.22", "-0.0397357, -52.0512, -21.8128, 0.96", "-0.0252974, -52.7341, -21.8249, 1.18", "-0.165241, -53.9433, -21.8726, 0.15", "-0.239081, -54.3489, -21.8941, 0.22", "-0.513777, -55.2845, -21.9685, 0.07", "-0.727682, -55.6956, -22.0215, 0.22", "-1.30386, -56.5043, -22.1479, 0.07", "-1.5666, -56.7738, -22.2008, 0.15", "-1.10173, -63.9731, -24.0192, 0.15", "-1.69328, -71.217, -25.6168, 0.15", "-0.70559, -78.459, -27.0168, 0.15", "0.870114, -85.4738, -28.8985, 0.15", "2.455, -92.2352, -31.5135, 0.15" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-3.21019, -42.8273, 8.02424, 1.99", "-3.67149, -44.6105, 7.99602, 1.99", "-4.21646, -47.082, 7.96671, 0.59", "-4.47935, -48.4929, 7.95377, 0.59", "-4.72978, -50.1856, 7.95926, 0.59", "-4.81598, -51.0152, 7.96935, 1.11", "-4.90327, -52.5255, 8.01769, 2.58", "-4.86619, -53.2677, 8.05583, 2.88", "-4.78266, -53.9099, 8.10697, 2.65", "-4.65511, -54.8937, 8.22247, 1.55", "-4.49049, -56.2773, 8.43613, 0.74", "-4.38271, -57.5961, 8.65719, 0.44", "-4.35095, -58.7503, 8.86017, 0.29", "-4.37948, -59.6435, 9.02699, 0.29", "-4.47599, -60.7824, 9.2609, 0.29", "-4.50619, -61.143, 9.33811, 0.29", "-4.56964, -61.8086, 9.48552, 0.44", "-4.64606, -62.4673, 9.62156, 1.11", "-4.73364, -63.2118, 9.78498, 2.36", "-4.88075, -64.7608, 10.1219, 2.73", "-5.0536, -67.6481, 10.7475, 0.44", "-5.07906, -68.2169, 10.8823, 0.44", "-5.12283, -69.3143, 11.1625, 0.59", "-5.15494, -70.3702, 11.4501, 0.29", "-5.17028, -71.0308, 11.6342, 0.29", "-5.14717, -71.6468, 11.7981, 0.29", "-5.07411, -72.2861, 11.9944, 0.29", "-4.96878, -72.7802, 12.1677, 0.88", "-4.75812, -73.4724, 12.436, 1.84", "-4.51481, -74.1324, 12.7033, 2.14", "-3.78294, -76.0174, 13.5173, 0.44", "-3.46396, -76.8614, 13.892, 0.66", "-3.08583, -77.8621, 14.3734, 0.29", "-2.94502, -78.2211, 14.5742, 0.29", "-2.8068, -78.5933, 14.8258, 0.29", "-2.74202, -78.8307, 15.0265, 0.29", "-2.77483, -79.0823, 15.2527, 0.29", "-2.94101, -79.632, 15.5152, 0.29", "-3.06707, -80.0508, 15.6365, 0.29", "-3.198, -80.5495, 15.7499, 0.29", "-3.39216, -81.3462, 15.9038, 1.18", "-3.5674, -82.1631, 16.0742, 2.43", "-3.73545, -83.1107, 16.291, 2.88", "-3.93561, -84.5772, 16.6609, 1.55", "-4.09903, -86.4416, 17.2091, 0.52", "-4.15199, -87.622, 17.6184, 0.29", "-4.17162, -88.5643, 17.9925, 0.29", "-4.1661, -89.3318, 18.3291, 0.66", "-4.14607, -89.9546, 18.619, 0.96", "-4.09631, -90.7741, 18.9673, 0.22", "-4.04501, -91.5483, 19.2, 0.22", "-4.00381, -92.3796, 19.3242, 0.29", "-3.96638, -93.1401, 19.3569, 0.59", "-3.92109, -94.351, 19.3452, 1.33", "-3.88067, -95.7142, 19.2918, 2.21", "-3.84541, -96.8009, 19.2312, 3.24", "-3.74894, -98.7106, 19.1139, 1.77", "-3.64816, -100.306, 19.0299, 0.44", "-3.57585, -101.434, 18.983, 0.37", "-3.50648, -102.71, 18.9483, 0.37", "-3.46916, -103.54, 18.9422, 0.88", "-3.46102, -103.919, 18.9421, 1.77", "-3.48536, -105.131, 18.9368, 3.1", "-3.64748, -107.008, 18.9196, 1.33", "-3.85595, -108.293, 18.9017, 0.74", "-4.22775, -109.793, 18.8734, 0.22", "-4.42437, -110.404, 18.8593, 0.22", "-4.59056, -110.844, 18.849, 0.52", "-5.06423, -111.89, 18.825, 0.81", "-5.65407, -113.021, 18.8401, 0.29", "-5.83336, -113.363, 18.854, 0.37", "-6.21532, -114.173, 18.9008, 0.37", "-6.58615, -115.146, 19.0384, 0.44", "-6.92892, -116.266, 19.282, 0.81", "-7.23286, -117.599, 19.6592, 0.81", "-7.4097, -118.641, 20.0011, 0.81", "-7.62613, -119.974, 20.475, 0.37", "-7.89357, -121.582, 21.1196, 0.37", "-8.02032, -122.394, 21.4923, 1.18", "-8.10512, -123.179, 21.907, 2.8", "-8.13096, -123.848, 22.3009, 3.32" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-3.21019, -42.8273, 8.02424, 0.66", "-1.51034, -44.3559, 9.47845, 0.66", "-0.409948, -45.4982, 10.4215, 0.44", "0.349742, -46.4188, 11.0714, 0.88", "0.857739, -47.1385, 11.5068, 0.44", "1.26788, -47.8131, 11.8459, 0.22", "1.65635, -48.5759, 12.1668, 0.22", "1.88478, -49.3943, 12.3391, 0.22", "2.02333, -50.1596, 12.4534, 0.22", "2.08324, -50.8523, 12.5527, 0.59", "2.11378, -51.8665, 12.7408, 1.7", "2.10258, -53.203, 13.0326, 1.47", "2.04925, -55.5137, 13.6139, 0.44", "2.0453, -56.7499, 13.9615, 0.29", "2.04478, -57.536, 14.1912, 0.22", "2.06072, -58.4209, 14.4408, 0.22", "2.08421, -59.0458, 14.6209, 0.96", "2.17341, -60.2509, 14.9469, 2.51", "2.32918, -61.5914, 15.3142, 3.39", "2.53642, -62.8574, 15.6448, 3.1", "2.90588, -64.5477, 16.1216, 1.03", "3.31172, -66.1635, 16.6049, 0.29", "3.62935, -67.3117, 16.9946, 0.22", "3.84763, -68.0541, 17.2758, 0.22", "3.96891, -68.4771, 17.4521, 0.22", "4.15159, -69.0933, 17.7254, 0.29", "4.34937, -69.7798, 18.015, 0.22", "4.56625, -70.6147, 18.2377, 0.29", "4.67469, -71.0544, 18.3155, 0.81", "4.99817, -72.3562, 18.4556, 1.55", "5.26615, -73.4226, 18.5261, 2.29", "5.5141, -74.3626, 18.5653, 2.06", "6.0869, -76.3349, 18.6636, 0.22", "6.30606, -76.9895, 18.7289, 0.22", "6.48795, -77.4615, 18.8146, 0.22", "6.57918, -77.6697, 18.8745, 0.22", "6.87901, -78.3081, 19.1314, 0.81", "7.33141, -79.2526, 19.5789, 1.84", "7.75206, -80.2141, 20.0879, 2.8", "8.14944, -81.3388, 20.7049, 1.77", "8.42976, -82.3834, 21.2581, 0.81", "8.71914, -83.7354, 21.9591, 0.22", "8.86575, -84.5181, 22.3506, 0.29", "8.97863, -85.2937, 22.726, 0.29", "9.07544, -86.6737, 23.369, 0.59", "9.06101, -87.9441, 23.962, 1.47", "8.99917, -88.5912, 24.2768, 1.92" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "31.8927, 15.6578, 34.7439, 0.22", "32.8035, 16.0507, 36.0631, 0.22", "33.4178, 16.3158, 36.953, 0.22", "34.2775, 16.6866, 38.1982, 1.47", "34.6128, 16.8313, 38.6839, 1.25" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "31.8927, 15.6578, 34.7439, 0.29", "33.2898, 14.7043, 35.881, 0.29", "34.1147, 14.0363, 36.5512, 0.15", "34.4532, 13.761, 36.8041, 0.22", "35.1365, 13.2122, 37.2774, 0.22", "35.9469, 12.5386, 37.8388, 0.22", "36.5818, 12.021, 38.2498, 0.22", "37.4528, 11.2816, 38.774, 0.22", "38.3188, 10.5408, 39.2603, 0.22", "39.2279, 9.81102, 39.7218, 0.22", "40.3675, 9.00046, 40.2, 0.15", "41.4219, 8.33616, 40.5513, 0.15", "41.9467, 8.04035, 40.6986, 0.15", "42.5857, 7.67786, 40.8573, 0.66", "43.2284, 7.30156, 40.9972, 1.25", "44.2867, 6.69144, 41.1842, 0.15", "44.8243, 6.3902, 41.265, 0.15", "45.7128, 5.89809, 41.3813, 0.88", "46.9398, 5.23163, 41.5205, 0.15", "47.4529, 4.96256, 41.5689, 0.44", "48.1232, 4.61403, 41.6411, 1.18", "49.4948, 3.9042, 41.8197, 0.07", "50.507, 3.41156, 41.9659, 0.07", "51.2984, 3.02945, 42.1113, 1.47", "51.7562, 2.82175, 42.2154, 1.47", "53.2412, 2.13134, 42.6037, 0.15", "53.8785, 1.81102, 42.8127, 1.11", "54.3948, 1.52446, 43.0176, 1.47", "55.9643, 0.568869, 43.742, 0.07", "56.7877, -0.00626802, 44.1663, 0.15", "57.3689, -0.463663, 44.4949, 0.22", "58.1587, -1.15593, 45.0098, 0.07", "58.6135, -1.5725, 45.3391, 1.18", "59.1427, -2.05151, 45.7419, 1.77", "60.3577, -3.13072, 46.6764, 0.07", "61.0591, -3.64302, 47.145, 0.15", "62.3573, -4.35247, 47.9014, 0.74", "63.3975, -4.73201, 48.4123, 0.15", "64.0663, -4.85645, 48.6932, 0.81", "64.7625, -4.8804, 48.9439, 2.14", "67.3025, -4.5946, 49.7015, 0.15", "68.1944, -4.39088, 49.946, 0.15", "68.9077, -4.15757, 50.1374, 0.37", "70.2051, -3.63125, 50.5487, 0.07", "70.7174, -3.38623, 50.7638, 0.88", "71.1713, -3.12068, 51.0071, 1.25", "72.3121, -2.251, 51.8791, 0.07", "72.8532, -1.75756, 52.4115, 1.11", "73.2981, -1.27585, 52.9827, 1.55", "73.8647, -0.63422, 53.9009, 0.07", "74.1248, -0.349186, 54.3831, 0.74", "74.5879, 0.162125, 55.3714, 0.15", "74.9476, 0.574037, 56.2409, 0.81", "75.333, 1.00168, 57.2098, 1.25", "75.9596, 1.63609, 58.7986, 0.22", "76.2305, 1.87369, 59.4947, 0.22", "76.3802, 1.96659, 59.8537, 0.22", "76.7407, 2.09316, 60.6136, 0.15", "77.1052, 2.15282, 61.3226, 0.81", "77.948, 2.13528, 62.7498, 0.22", "78.6497, 2.06277, 63.8091, 0.22", "79.2809, 1.93125, 64.6416, 1.62", "79.9993, 1.72172, 65.4998, 0.15", "80.5371, 1.53742, 66.0822, 0.96", "81.9037, 1.06757, 67.3397, 0.07", "82.8064, 0.777363, 68.0716, 0.59", "84.0208, 0.449045, 69.0117, 0.07", "84.8988, 0.256318, 69.695, 0.07", "85.4547, 0.15388, 70.1284, 1.25", "87.1797, -0.055047, 71.4325, 0.07", "88.0811, -0.093601, 72.0654, 0.81", "89.5211, -0.043553, 73.0362, 0.07", "89.9667, 0.021072, 73.3374, 0.07", "90.5154, 0.154317, 73.7142, 1.03", "91.6692, 0.498941, 74.5261, 0.07", "92.7339, 0.929253, 75.2946, 0.07", "93.8834, 1.46397, 76.0847, 0.07", "94.5986, 1.86231, 76.5476, 0.66", "95.0962, 2.15715, 76.8798, 1.03" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.42458, 39.3425, 0.0, 0.181554", "13.1052, 53.8839, 0.0, 0.181554", "16.7858, 68.4253, 0.0, 0.181554" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-12.6595, 44.5067, 25.2072, 0.22", "-14.4424, 45.1327, 26.0269, 0.22", "-15.11, 45.4782, 26.3462, 0.22", "-15.6416, 45.8771, 26.6884, 0.15", "-16.0926, 46.2862, 27.061, 0.15", "-16.4001, 46.5998, 27.3221, 0.15", "-16.9074, 47.2438, 27.8296, 0.66", "-17.3064, 47.833, 28.273, 0.22", "-17.9481, 48.7424, 28.9718, 0.22", "-18.456, 49.45, 29.529, 1.62", "-19.0783, 50.3079, 30.245, 3.1", "-20.7489, 52.4576, 32.1485, 0.29", "-21.4444, 53.2699, 32.9164, 0.22", "-21.773, 53.6268, 33.2515, 0.22", "-21.8618, 53.7232, 33.3368, 0.22", "-22.2471, 54.1392, 33.7092, 0.22", "-22.6734, 54.5672, 34.1384, 0.22", "-23.3198, 55.072, 34.6901, 0.22", "-23.9774, 55.6591, 35.2786, 0.88", "-24.3292, 56.0008, 35.5835, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-12.6595, 44.5067, 25.2072, 0.22", "-10.4844, 45.2271, 26.324, 0.22", "-9.47686, 45.5608, 26.8414, 0.37", "-8.60156, 45.8506, 27.2908, 0.88" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-2.84264, 69.0192, 7.11548, 0.15", "-3.61919, 70.9844, 7.08147, 0.15", "-4.02533, 72.0229, 7.11428, 0.81", "-4.34247, 72.8195, 7.10645, 1.18", "-5.00835, 74.47, 7.05934, 0.22", "-5.34929, 75.3671, 7.02586, 0.81", "-5.5506, 75.9443, 7.01818, 0.81", "-5.9031, 77.2085, 7.10168, 0.07", "-6.20477, 78.5625, 7.2183, 0.07", "-6.32817, 79.2775, 7.27759, 0.96", "-6.4842, 80.3936, 7.35108, 1.92", "-6.70753, 81.8968, 7.46925, 0.22", "-6.80984, 82.7001, 7.56118, 0.22", "-6.88775, 83.4275, 7.67011, 0.22", "-6.95453, 84.1113, 7.80799, 0.81", "-7.04692, 84.9313, 7.97752, 1.11", "-7.3165, 86.7189, 8.32989, 0.15", "-7.54306, 88.0403, 8.54403, 0.15", "-7.64337, 88.6038, 8.62407, 0.74", "-7.81186, 89.7677, 8.77496, 1.92", "-7.86839, 90.3115, 8.83534, 2.88", "-7.94599, 91.5008, 8.97513, 1.84", "-7.9933, 93.3623, 9.212, 0.22", "-8.00731, 94.5732, 9.37033, 0.59", "-7.99624, 95.3948, 9.47405, 0.59", "-7.95678, 96.4519, 9.58506, 0.22", "-7.88504, 97.629, 9.67483, 0.22", "-7.82283, 98.495, 9.69979, 0.22", "-7.82129, 99.395, 9.65783, 0.15", "-7.92931, 100.528, 9.50573, 0.15", "-8.09037, 101.426, 9.30268, 0.88", "-8.35333, 102.575, 8.95027, 1.77", "-8.57287, 103.429, 8.64778, 1.77", "-9.10279, 105.107, 8.03524, 0.15", "-9.39767, 105.925, 7.74507, 0.37", "-9.67676, 106.67, 7.50912, 0.96", "-10.0062, 107.574, 7.29802, 1.77", "-10.5034, 109.048, 7.07863, 0.29", "-10.9388, 110.568, 6.95818, 0.15", "-11.0229, 110.971, 6.94956, 0.52", "-11.2057, 111.855, 6.95613, 1.18", "-11.5241, 113.32, 7.00781, 0.15", "-11.7182, 114.212, 7.0556, 0.15", "-11.86, 115.012, 7.12017, 1.03", "-12.0124, 116.549, 7.30353, 2.8" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-2.84264, 69.0192, 7.11548, 0.22", "-2.53867, 70.0543, 7.62474, 0.22", "-2.25953, 71.0466, 8.13255, 0.22", "-2.04086, 71.8088, 8.51846, 0.96", "-1.86291, 72.366, 8.79581, 1.18", "-1.50338, 73.3538, 9.26696, 0.15", "-1.25088, 73.9468, 9.5479, 0.15", "-1.04456, 74.3548, 9.72396, 0.15", "-0.804981, 74.8193, 9.88414, 0.15", "-0.562361, 75.3551, 10.009, 0.15", "-0.307559, 75.9915, 10.0943, 1.33", "-0.00529385, 76.8193, 10.1254, 2.73", "0.224878, 77.5889, 10.1159, 3.1", "0.68444, 79.8076, 10.0026, 0.22", "0.822239, 80.8095, 9.9299, 0.15", "0.878348, 81.5013, 9.87135, 0.52", "0.91017, 82.142, 9.81195, 0.74", "0.94943, 83.4584, 9.6801, 0.22", "0.97384, 84.228, 9.61577, 1.18", "1.00861, 84.9238, 9.58356, 2.58", "1.13587, 86.6446, 9.59315, 0.22", "1.19652, 87.361, 9.61951, 0.22", "1.25773, 88.1134, 9.6597, 0.81", "1.34937, 89.3387, 9.73984, 2.51", "1.47018, 91.4457, 9.89778, 0.22", "1.48703, 92.3456, 9.9704, 0.29", "1.44787, 93.3419, 10.0531, 0.15", "1.36659, 94.3531, 10.1328, 0.15", "1.26462, 95.1489, 10.1902, 1.03", "1.13155, 95.833, 10.2315, 1.99", "0.90891, 96.5854, 10.2626, 1.99", "0.285608, 98.2602, 10.3015, 0.15", "-0.0200898, 98.9478, 10.3053, 0.15", "-0.315511, 99.5409, 10.29, 0.15", "-0.561392, 99.98, 10.2655, 0.44", "-1.28967, 101.104, 10.174, 0.15", "-1.91286, 101.935, 10.0852, 1.47", "-2.4896, 102.578, 10.0027, 2.51", "-3.47567, 103.567, 9.8719, 0.37", "-4.03299, 104.086, 9.795, 0.22", "-4.54097, 104.511, 9.72012, 0.07", "-5.03123, 104.865, 9.65872, 0.29", "-5.96378, 105.443, 9.57466, 0.07", "-6.75984, 105.906, 9.52333, 0.44", "-7.8699, 106.51, 9.46566, 0.07", "-8.784, 107.002, 9.40477, 0.15", "-9.39519, 107.323, 9.32019, 0.74", "-10.2071, 107.731, 9.19487, 1.84", "-11.4929, 108.326, 8.97111, 0.15", "-12.1931, 108.632, 8.83787, 0.59", "-12.7511, 108.865, 8.7233, 0.29", "-13.9832, 109.408, 8.399, 1.03" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-18.0386, -21.8762, -26.8769, 1.47", "-18.9998, -21.9962, -27.3246, 1.47", "-19.9635, -22.2149, -27.9232, 0.52", "-20.4119, -22.3753, -28.2561, 0.52", "-20.8426, -22.5294, -28.5758, 1.11", "-21.3192, -22.6998, -28.9296, 2.21", "-21.7577, -22.8567, -29.255, 1.11", "-22.4692, -23.2509, -29.9259, 0.44", "-22.8683, -23.5915, -30.3889, 1.47", "-28.4479, -25.0542, -32.9528, 1.47" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-18.0386, -21.8762, -26.8769, 0.22", "-18.2, -23.661, -27.3497, 0.22", "-18.264, -24.2496, -27.5179, 0.22", "-18.346, -24.9594, -27.7146, 0.96", "-18.452, -25.9888, -28.0192, 0.22", "-18.5045, -26.6965, -28.2497, 0.22", "-18.5459, -27.2529, -28.4309, 0.81", "-18.5888, -27.8281, -28.6368, 1.92", "-18.6365, -28.5192, -28.8812, 0.81", "-18.6719, -29.3992, -29.23, 0.15", "-18.6692, -30.0669, -29.5325, 0.66", "-18.5076, -37.3051, -33.0394, 0.66", "-19.5013, -44.9573, -35.4205, 0.66", "-20.536, -52.3446, -38.4785, 0.66", "-22.7356, -59.7629, -40.7916, 0.66", "-25.5878, -66.8794, -43.3031, 0.66", "-27.281, -74.6944, -44.5545, 0.66", "-28.4475, -82.712, -44.3481, 0.66", "-30.3281, -90.4862, -43.0404, 0.66" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-8.13096, -123.848, 22.3009, 0.37", "-6.99317, -125.424, 23.261, 0.37", "-6.43484, -126.474, 23.8396, 0.22", "-6.19457, -127.099, 24.164, 0.22", "-5.97563, -127.875, 24.5514, 0.22", "-5.81746, -128.588, 24.8854, 0.29", "-5.67526, -129.494, 25.2552, 0.29", "-5.69795, -130.275, 25.495, 0.22", "-5.77284, -131.031, 25.6968, 0.81", "-5.85895, -131.755, 25.885, 1.77", "-5.94182, -132.493, 26.0703, 2.43", "-6.03963, -133.964, 26.4087, 0.96", "-6.10895, -136.024, 26.8742, 0.22", "-6.1465, -136.83, 27.0482, 1.18", "-6.22229, -137.745, 27.2327, 1.7", "-6.26923, -138.134, 27.3077, 1.7", "-6.4822, -139.399, 27.5693, 0.74", "-6.72927, -140.625, 27.8326, 0.29", "-6.97825, -141.788, 28.067, 0.29", "-7.1489, -142.666, 28.259, 0.29", "-7.30759, -143.384, 28.4145, 0.66", "-7.50359, -144.199, 28.6026, 1.47", "-7.68971, -144.925, 28.7895, 2.73", "-7.81489, -145.596, 28.9759, 2.88", "-7.87665, -147.31, 29.5415, 1.84" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-8.13096, -123.848, 22.3009, 0.22", "-10.3167, -124.947, 22.2422, 0.22", "-11.4598, -125.547, 22.1687, 0.22", "-11.9681, -125.864, 22.1188, 0.22", "-12.3512, -126.133, 22.074, 0.22", "-12.949, -126.58, 22.0161, 0.29", "-13.4043, -126.921, 21.9747, 0.96", "-14.3496, -127.663, 21.8216, 1.84", "-15.6811, -128.735, 21.5245, 0.22", "-16.4706, -129.356, 21.3311, 0.22", "-17.3475, -129.971, 21.1026, 0.96", "-18.4262, -130.587, 20.8264, 0.22", "-19.4991, -130.981, 20.5422, 0.22", "-19.9228, -131.057, 20.427, 0.22", "-20.8351, -131.107, 20.1889, 0.22", "-21.9425, -131.148, 19.9155, 0.29", "-22.7145, -131.208, 19.7367, 1.25", "-24.0937, -131.398, 19.4735, 2.88", "-24.6756, -131.501, 19.3812, 2.73", "-27.0206, -132.087, 19.006, 0.29", "-27.9334, -132.404, 18.8582, 0.66", "-29.145, -132.903, 18.6549, 0.29", "-29.8553, -133.21, 18.514, 0.22", "-30.7935, -133.604, 18.3143, 0.22", "-31.7589, -133.961, 18.0793, 0.22", "-33.2507, -134.417, 17.6632, 0.22", "-33.9113, -134.548, 17.4467, 0.37", "-35.0448, -134.713, 17.0458, 0.37", "-36.0833, -134.822, 16.6502, 0.66", "-36.7682, -134.867, 16.3743, 1.62", "-37.5664, -134.818, 16.0275, 2.51", "-38.9409, -134.547, 15.377, 2.73" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "8.99917, -88.5912, 24.2768, 3.24", "9.12435, -89.401, 24.3383, 3.24", "9.24937, -90.0987, 24.3906, 3.24", "9.53394, -91.5219, 24.4969, 0.22", "9.7312, -92.4293, 24.5642, 0.29", "9.84283, -92.913, 24.5998, 0.22", "9.98622, -93.5004, 24.6427, 0.22", "10.088, -93.8665, 24.6628, 0.22", "10.1711, -94.1422, 24.6792, 0.22", "10.307, -94.5841, 24.7063, 0.74", "10.3891, -94.8893, 24.7235, 0.74", "10.4758, -95.4148, 24.7588, 0.22", "10.512, -95.879, 24.7997, 0.22", "10.5587, -96.5243, 24.8538, 0.22", "10.5987, -96.947, 24.8687, 0.22", "10.6726, -97.5371, 24.8701, 0.22", "10.7815, -98.1471, 24.8588, 1.33", "10.9593, -98.9344, 24.8255, 3.02", "11.2543, -99.9412, 24.7643, 0.88", "11.5767, -100.901, 24.7129, 0.22", "11.7492, -101.386, 24.6928, 0.22", "11.9878, -102.042, 24.6762, 0.22", "12.1263, -102.443, 24.678, 1.18", "12.3739, -103.239, 24.7326, 2.06", "12.6604, -104.357, 24.9131, 0.22", "12.75, -104.887, 25.0466, 0.52", "12.7977, -105.342, 25.182, 0.52", "12.8611, -106.205, 25.4717, 0.22", "12.8845, -106.582, 25.6113, 0.22", "12.926, -107.427, 25.948, 1.99", "13.0205, -108.866, 26.5334, 0.29", "13.048, -109.333, 26.7209, 0.22", "13.0928, -110.122, 27.0284, 0.22", "13.1212, -110.523, 27.1729, 1.03", "13.158, -110.995, 27.3304, 2.14", "13.1994, -111.441, 27.4706, 2.06", "13.3092, -112.55, 27.8062, 0.22", "13.3429, -113.042, 27.9468, 0.66", "13.386, -114.071, 28.2233, 0.22", "13.4082, -114.735, 28.3889, 0.22", "13.4274, -115.171, 28.4806, 0.66", "13.4652, -115.824, 28.5991, 0.22", "13.5102, -116.413, 28.691, 1.55", "13.5472, -116.899, 28.7586, 2.8", "13.5874, -117.389, 28.8157, 2.58", "13.7712, -119.036, 28.9546, 0.22", "13.8152, -119.548, 28.9972, 0.22", "13.8449, -119.99, 29.0268, 0.59", "13.8683, -120.387, 29.056, 0.29", "13.8916, -120.9, 29.0952, 1.03", "13.9154, -121.516, 29.136, 2.06", "13.9323, -122.759, 29.1934, 0.15", "13.9395, -123.072, 29.2003, 0.15", "13.9711, -123.764, 29.1997, 0.29", "13.9985, -124.233, 29.1957, 0.15", "14.034, -124.769, 29.1875, 0.15", "14.0726, -125.223, 29.1887, 0.96", "14.1257, -125.695, 29.1904, 2.06", "14.1855, -126.343, 29.2153, 2.14", "14.2828, -127.874, 29.3145, 0.22", "14.292, -128.368, 29.3734, 0.22", "14.2842, -129.051, 29.4884, 0.22", "14.2779, -129.252, 29.5317, 0.59", "14.2493, -129.752, 29.6567, 1.4", "14.215, -130.276, 29.8003, 0.66", "14.1508, -131.351, 30.1197, 0.22", "14.1035, -131.877, 30.2599, 0.22", "14.0612, -132.273, 30.3512, 0.22", "14.0203, -132.705, 30.4444, 1.03", "13.9804, -133.356, 30.5704, 2.21", "13.9441, -134.74, 30.8275, 0.15", "13.9579, -135.571, 30.9639, 0.15", "13.9683, -135.911, 31.0181, 0.81", "13.9857, -136.397, 31.0927, 1.33", "14.0107, -137.124, 31.2039, 0.22", "14.0344, -137.855, 31.311, 0.22", "14.0526, -138.308, 31.3729, 0.88", "14.0691, -138.708, 31.4346, 0.66", "14.1015, -139.609, 31.5974, 0.15", "14.1289, -140.271, 31.7302, 0.15", "14.1449, -140.519, 31.7846, 0.74", "14.1932, -141.018, 31.8967, 1.18", "14.3226, -142.023, 32.137, 0.22", "14.427, -142.602, 32.2917, 0.22", "14.5194, -142.962, 32.3897, 0.22", "14.6317, -143.326, 32.492, 0.22", "14.7825, -143.78, 32.6161, 0.22", "14.9437, -144.283, 32.7449, 1.33", "15.1138, -144.867, 32.8824, 2.21", "15.3804, -145.909, 33.1043, 0.15", "15.5002, -146.335, 33.2018, 0.29", "15.5656, -146.542, 33.2517, 0.29", "15.7985, -147.194, 33.4232, 0.15", "15.8658, -147.386, 33.4739, 0.15", "16.0005, -147.812, 33.5772, 0.66", "16.2178, -148.567, 33.7723, 0.15", "16.2975, -148.866, 33.8436, 0.15", "16.3605, -149.083, 33.9028, 0.15", "16.5184, -149.583, 34.0624, 0.15", "16.6133, -149.902, 34.1683, 0.37", "16.7366, -150.363, 34.3175, 1.03", "16.8601, -150.856, 34.4754, 0.22", "17.0472, -151.549, 34.6989, 0.22", "17.2224, -152.14, 34.8872, 1.4", "17.3871, -152.656, 35.0442, 2.14", "17.5614, -153.216, 35.2084, 1.4", "17.8597, -154.281, 35.4944, 0.22", "17.9407, -154.616, 35.5753, 0.81", "18.0233, -155.041, 35.6645, 1.55", "18.1574, -155.866, 35.8264, 0.29", "18.2545, -156.593, 35.9673, 0.22", "18.3073, -157.088, 36.0574, 0.22", "18.3383, -157.592, 36.1318, 0.29", "18.3555, -158.167, 36.2171, 0.15", "18.3618, -158.606, 36.2809, 0.96", "18.3649, -158.91, 36.3215, 1.47", "18.378, -159.364, 36.3706, 1.47", "18.4329, -160.16, 36.4537, 0.22", "18.5202, -160.941, 36.539, 0.22", "18.5887, -161.378, 36.5838, 0.88", "18.7053, -161.963, 36.6439, 0.88", "18.9186, -162.874, 36.7449, 0.15", "19.0961, -163.49, 36.82, 0.15", "19.245, -163.934, 36.8761, 0.81", "19.4967, -164.642, 36.9885, 0.15", "19.6578, -165.099, 37.0789, 0.81", "19.8449, -165.647, 37.2045, 0.52", "19.9939, -166.141, 37.3279, 1.62", "20.1146, -166.654, 37.4612, 1.62", "20.2995, -167.703, 37.716, 0.22", "20.378, -168.29, 37.847, 0.22", "20.4146, -168.64, 37.9107, 0.74", "20.447, -169.034, 37.9689, 0.29", "20.4795, -169.603, 38.0443, 1.47", "20.5048, -169.999, 38.0923, 1.47", "20.5617, -170.932, 38.1798, 0.15", "20.6052, -171.385, 38.2451, 0.52", "20.6878, -172.017, 38.3585, 0.15", "20.7634, -172.492, 38.4557, 0.15", "20.8079, -172.756, 38.5136, 0.66", "20.8915, -173.239, 38.6257, 1.47", "21.0826, -174.311, 38.8806, 0.22", "21.193, -174.897, 39.0099, 0.15", "21.27, -175.28, 39.0776, 0.15", "21.3678, -175.768, 39.1551, 0.74", "21.5028, -176.505, 39.2595, 0.15", "21.5914, -176.993, 39.3218, 0.15", "21.7133, -177.782, 39.4071, 0.22", "21.7859, -178.305, 39.4705, 1.18", "21.865, -178.916, 39.5526, 1.7", "22.0326, -180.189, 39.7442, 0.22", "22.0996, -180.683, 39.8234, 0.22", "22.1689, -181.146, 39.9031, 0.15", "22.2738, -181.81, 40.03, 0.15", "22.3218, -182.191, 40.1108, 0.44", "22.4273, -183.242, 40.3381, 0.15", "22.4476, -183.578, 40.4194, 0.88", "22.4585, -184.052, 40.538, 1.7", "22.4598, -184.581, 40.6686, 1.4", "22.4363, -185.811, 40.9528, 0.15", "22.4296, -186.06, 41.0067, 0.22", "22.3962, -186.932, 41.1827, 0.07", "22.3836, -187.376, 41.2646, 1.33", "22.3757, -187.767, 41.3307, 1.33", "22.3877, -188.484, 41.445, 0.07", "22.4306, -189.009, 41.5157, 0.15", "22.4737, -189.36, 41.5582, 0.15", "22.5318, -189.714, 41.5955, 0.22", "22.649, -190.387, 41.6653, 0.07", "22.6892, -190.633, 41.6902, 0.66", "22.7467, -191.031, 41.7265, 0.29", "22.8722, -191.966, 41.8011, 0.15", "22.9089, -192.208, 41.8216, 0.22", "22.984, -192.702, 41.8688, 0.07", "23.0497, -193.143, 41.9188, 0.74", "23.1385, -193.834, 42.0133, 0.15", "23.1746, -194.173, 42.0661, 0.59", "23.2467, -195.087, 42.2129, 0.15", "23.2728, -195.474, 42.2841, 0.29", "23.2993, -195.959, 42.3712, 0.15", "23.3137, -196.349, 42.4393, 0.88", "23.319, -196.689, 42.495, 1.92", "23.3168, -198.167, 42.7186, 0.22", "23.3096, -198.926, 42.8208, 1.7", "23.2974, -200.595, 43.0255, 0.15", "23.2871, -201.302, 43.1015, 0.15", "23.2758, -201.744, 43.1452, 0.81", "23.2416, -202.74, 43.2323, 0.22", "23.2231, -203.306, 43.2728, 1.25", "23.2159, -203.615, 43.2914, 1.84", "23.1994, -205.011, 43.393, 0.15", "23.2027, -205.371, 43.4211, 0.29", "23.2288, -206.013, 43.491, 0.07", "23.2509, -206.409, 43.5433, 0.15", "23.311, -207.35, 43.6876, 0.15", "23.3311, -207.602, 43.7307, 0.52", "23.3663, -207.96, 43.7984, 1.4", "23.4281, -208.992, 44.0136, 0.07", "23.4442, -209.727, 44.1764, 0.15", "23.4327, -210.066, 44.2595, 0.74", "23.4092, -210.408, 44.3478, 1.92", "23.3654, -210.929, 44.4988, 1.92", "23.2422, -212.285, 44.9312, 0.15", "23.2004, -212.76, 45.1092, 0.59", "23.1608, -213.535, 45.4564, 0.07", "23.1573, -213.715, 45.5472, 0.15", "23.1684, -214.312, 45.8743, 0.15", "23.1923, -214.729, 46.1114, 0.37", "23.2518, -215.248, 46.4012, 0.96", "23.3394, -215.723, 46.6375, 1.47", "23.5413, -216.546, 47.0156, 0.15", "23.6672, -217.012, 47.2119, 0.15", "23.7692, -217.371, 47.3436, 1.11", "23.8759, -217.741, 47.4623, 1.7", "24.1828, -218.859, 47.751, 0.15", "24.2876, -219.255, 47.8396, 0.81", "24.4147, -219.723, 47.9308, 1.03", "24.7541, -220.842, 48.1455, 0.15", "24.8955, -221.262, 48.2302, 0.22", "25.0843, -221.818, 48.3371, 0.07", "25.2018, -222.191, 48.4013, 0.88", "25.3343, -222.632, 48.4771, 1.62", "25.6549, -223.668, 48.6735, 0.15", "25.8316, -224.176, 48.7748, 1.33", "26.1848, -225.135, 48.9775, 0.07", "26.2857, -225.427, 49.0436, 0.22", "26.564, -226.36, 49.2688, 0.07", "26.6592, -226.725, 49.3683, 0.96", "26.8748, -227.694, 49.6521, 0.15", "26.9727, -228.13, 49.7901, 1.11", "27.293, -229.458, 50.2395, 0.15", "27.4421, -230.038, 50.4277, 1.11", "27.5799, -230.564, 50.5852, 1.47", "27.8864, -231.82, 50.9299, 0.15", "27.9958, -232.267, 51.038, 0.88", "28.1392, -232.81, 51.1426, 1.33", "28.4701, -234.028, 51.2878, 0.15", "28.6325, -234.674, 51.3154, 0.96", "28.8934, -235.909, 51.2772, 0.15", "28.963, -236.413, 51.2313, 0.15", "28.9984, -236.954, 51.1737, 0.74", "28.9708, -237.777, 51.0771, 0.44", "28.8998, -238.339, 51.0066, 1.11", "28.8159, -238.765, 50.9551, 1.7", "28.4433, -240.288, 50.7956, 0.15", "28.2234, -241.071, 50.7335, 1.33", "27.9943, -241.818, 50.6984, 0.15", "27.9004, -242.111, 50.6969, 0.74", "27.7848, -242.468, 50.7137, 1.4", "27.6353, -242.936, 50.752, 0.74" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "8.99917, -88.5912, 24.2768, 1.03", "7.38805, -89.5686, 27.938, 1.03", "7.0691, -89.7301, 28.7125, 1.03", "6.79413, -89.8513, 29.4355, 1.03", "6.54245, -89.9682, 30.1399, 1.03", "6.37697, -90.055, 30.6714, 1.03", "6.18462, -90.1772, 31.4001, 1.03", "6.20562, -90.2288, 31.8848, 0.88", "6.2193, -90.292, 32.3132, 0.88", "6.18052, -90.4625, 32.9015, 0.44", "6.08192, -90.7979, 33.4861, 0.59", "5.98484, -91.0864, 33.8926, 0.22", "5.72602, -91.6555, 34.8606, 0.22", "5.50438, -92.0285, 35.6513, 0.44", "5.36893, -92.1867, 36.1337, 1.4", "5.13476, -92.354, 37.0249, 2.14", "4.86081, -92.4288, 38.3417, 0.59", "4.60678, -92.3181, 40.3554, 0.59", "4.60886, -92.2109, 41.0308, 0.44", "4.73424, -91.9304, 42.1771, 0.81", "4.89795, -91.6322, 43.1007, 1.99", "5.25707, -91.1027, 44.4067, 0.22", "5.48355, -90.8409, 44.9876, 1.03", "5.88042, -90.4777, 45.7792, 0.22", "6.3459, -90.1102, 46.6599, 0.96", "6.65762, -89.8859, 47.2309, 1.92", "7.30053, -89.413, 48.6394, 0.22", "7.52155, -89.2154, 49.2593, 0.22", "7.63545, -89.097, 49.6316, 0.22", "7.81911, -88.8837, 50.2902, 1.11", "8.05221, -88.6007, 51.1288, 2.58", "8.49425, -88.0025, 52.7616, 1.11", "8.69397, -87.6914, 53.5425, 0.44", "8.86777, -87.4246, 54.2499, 0.44", "8.96429, -87.2809, 54.6937, 0.22", "9.05033, -87.1826, 55.0898, 0.22", "9.13789, -87.1186, 55.4822, 0.22", "9.2752, -87.0698, 56.1581, 1.4", "9.416, -87.1021, 57.4461, 0.37", "9.37831, -87.2146, 58.5417, 0.29", "9.25594, -87.3895, 59.4116, 0.29", "9.21973, -87.4423, 59.5817, 0.29", "9.0396, -87.7242, 60.1569, 0.29", "8.83052, -88.0695, 60.6785, 0.29", "8.49877, -88.6897, 61.439, 0.59", "8.25693, -89.1902, 61.9563, 1.84", "8.03283, -89.6638, 62.398, 2.06", "7.53997, -90.7584, 63.3401, 0.52", "7.26384, -91.4187, 63.8351, 0.22", "7.01425, -92.0305, 64.2372, 0.22", "6.83986, -92.4344, 64.4577, 0.22", "6.67739, -92.7051, 64.5844, 0.52", "6.38205, -93.0526, 64.7243, 0.81", "5.50393, -93.7488, 64.9822, 0.22", "4.84628, -94.1215, 65.1375, 1.47", "4.39035, -94.3161, 65.2408, 1.92", "3.34261, -94.6545, 65.4926, 0.44", "2.83456, -94.7682, 65.6194, 0.22", "2.23315, -94.8167, 65.7732, 0.81", "1.24969, -94.774, 66.035, 0.22", "0.740423, -94.7297, 66.1743, 0.22", "0.476009, -94.7096, 66.2541, 0.22", "-0.0190835, -94.7023, 66.4157, 0.59", "-1.05065, -94.7579, 66.7817, 0.37", "-1.70268, -94.8296, 67.0368, 0.37", "-2.24284, -94.8955, 67.2986, 0.37", "-2.64904, -94.9519, 67.5563, 0.37", "-3.11328, -95.0739, 67.9577, 0.37", "-3.40243, -95.2331, 68.3092, 0.37", "-3.62538, -95.4158, 68.6398, 0.37", "-3.92067, -95.6221, 69.0709, 0.37", "-4.35538, -95.7385, 69.4459, 0.37", "-4.93228, -95.8532, 69.6487, 0.37", "-5.58116, -95.9609, 69.7172, 0.37", "-6.18311, -96.0173, 69.6903, 0.37", "-6.49096, -96.0254, 69.6391, 0.37", "-7.71274, -95.9352, 69.3572, 0.29", "-8.93561, -95.659, 69.0269, 0.22", "-9.32027, -95.5386, 68.9148, 0.22", "-10.111, -95.2637, 68.7057, 0.15", "-10.68, -95.077, 68.5853, 0.59", "-11.2245, -94.9074, 68.486, 0.29", "-11.7254, -94.7795, 68.4199, 0.88", "-12.5645, -94.6227, 68.359, 0.96", "-13.7516, -94.5072, 68.2651, 0.22", "-14.449, -94.499, 68.2022, 1.33", "-14.9035, -94.5229, 68.1538, 1.4", "-15.9707, -94.6569, 68.0051, 0.15", "-16.2557, -94.7193, 67.971, 0.15", "-16.64, -94.8278, 67.9362, 0.15", "-16.9211, -94.9332, 67.9128, 0.15", "-17.1094, -95.0049, 67.9016, 0.81", "-17.4101, -95.0837, 67.8925, 0.81", "-18.4588, -95.2468, 67.8898, 0.22", "-19.0513, -95.2764, 67.8811, 0.22", "-19.6217, -95.268, 67.8636, 1.11", "-20.1721, -95.2216, 67.8346, 1.62", "-21.3803, -95.0244, 67.727, 0.22", "-22.0706, -94.8387, 67.632, 1.11", "-22.9583, -94.5065, 67.445, 0.22", "-23.5578, -94.2601, 67.2861, 0.22", "-23.8468, -94.1307, 67.1971, 1.03", "-24.3894, -93.8711, 67.0008, 1.03", "-25.1008, -93.5062, 66.6981, 0.22", "-25.7925, -93.1125, 66.3723, 0.52", "-26.5489, -92.6355, 66.0072, 0.15", "-26.8224, -92.4376, 65.8716, 0.15", "-27.0306, -92.273, 65.7833, 0.52", "-27.3324, -92.0137, 65.6699, 1.18", "-28.2264, -91.1785, 65.3699, 0.22", "-28.6374, -90.6994, 65.221, 1.03", "-28.8652, -90.3696, 65.1257, 1.99", "-29.6562, -89.0072, 64.7442, 0.29", "-29.8344, -88.6168, 64.63, 0.96", "-30.0399, -88.0067, 64.4421, 1.7", "-30.2884, -86.7112, 64.0407, 0.22", "-30.3333, -86.0817, 63.832, 0.22", "-30.3069, -85.5514, 63.6432, 0.96", "-30.1314, -84.6216, 63.3046, 0.07", "-29.9816, -84.0532, 63.1007, 0.74", "-29.7143, -83.2923, 62.84, 0.22", "-29.3886, -82.5315, 62.624, 0.22", "-29.0043, -81.8565, 62.5312, 0.66", "-28.3988, -81.0001, 62.5423, 0.07", "-27.9859, -80.5146, 62.6313, 0.22", "-27.4325, -79.9371, 62.8388, 0.07", "-26.8819, -79.4127, 63.0927, 1.11", "-25.4393, -78.1364, 63.9215, 0.07", "-25.117, -77.8704, 64.1419, 0.07", "-24.8937, -77.6996, 64.3201, 0.29", "-24.3203, -77.2644, 64.8472, 0.07" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "34.6128, 16.8313, 38.6839, 0.22", "34.9214, 17.3629, 39.431, 0.22", "35.2334, 17.7703, 40.1078, 0.22", "35.5141, 18.0659, 40.6629, 0.52", "35.9208, 18.4437, 41.3976, 1.7", "36.3068, 18.7159, 41.9895, 2.06", "37.1398, 19.1922, 43.1859, 0.52", "37.7676, 19.5004, 44.0506, 0.66", "38.3404, 19.7581, 44.7962, 2.14", "38.6802, 19.9108, 45.2271, 2.65", "39.8783, 20.4805, 46.7198, 0.29", "40.4101, 20.7366, 47.4295, 0.22", "40.991, 21.0089, 48.2452, 0.22", "41.4375, 21.1984, 48.9114, 1.25", "42.0926, 21.4504, 49.9399, 0.15", "42.7065, 21.6761, 50.9226, 0.81", "43.4563, 21.96, 52.0264, 1.4", "43.9966, 22.1462, 52.7039, 2.21", "45.3855, 22.5402, 54.1806, 0.22", "46.0589, 22.6984, 54.7903, 0.88", "46.6855, 22.8266, 55.2697, 1.18", "48.0023, 23.1128, 56.0863, 0.22", "48.6048, 23.2702, 56.3765, 0.59", "49.1644, 23.4361, 56.5887, 1.11", "50.0768, 23.7129, 56.8619, 0.15", "50.4401, 23.8226, 56.9794, 0.15", "50.7729, 23.9415, 57.1224, 0.15", "51.075, 24.0707, 57.3041, 0.37", "51.4978, 24.3037, 57.6398, 0.66", "52.4589, 24.9059, 58.5266, 0.15", "53.1288, 25.3484, 59.2339, 1.62", "53.8082, 25.78, 60.0067, 0.29", "54.5209, 26.2046, 60.8753, 1.18", "55.4993, 26.7192, 62.1376, 0.22", "56.1559, 27.0086, 63.0142, 0.52", "56.9701, 27.2858, 64.0976, 1.25", "57.6097, 27.4469, 64.9578, 2.14", "58.689, 27.5852, 66.4167, 0.59", "59.3723, 27.604, 67.3457, 0.59", "60.0435, 27.563, 68.2343, 0.22", "60.8205, 27.5039, 69.2639, 1.55", "61.2072, 27.4877, 69.7755, 1.55", "62.2287, 27.5579, 71.1678, 0.22", "62.5383, 27.6235, 71.6118, 0.22", "62.9679, 27.7887, 72.1852, 0.22", "63.3824, 28.0078, 72.7485, 0.96", "63.8299, 28.3297, 73.3618, 1.25", "64.617, 29.0518, 74.4032, 0.22", "65.2276, 29.7712, 75.1578, 0.22", "65.8999, 30.5801, 75.9721, 2.73" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "34.6128, 16.8313, 38.6839, 0.22", "35.2368, 14.9034, 39.4814, 0.22", "35.5502, 14.0569, 39.7727, 0.37", "36.0976, 12.7774, 40.198, 0.66", "36.7267, 11.3571, 40.7708, 0.66", "37.2918, 10.0973, 41.3804, 0.15", "37.7613, 9.0382, 41.9691, 1.47", "38.3673, 7.62122, 42.7359, 3.24", "38.7661, 6.74263, 43.2548, 3.24", "40.0761, 4.13552, 44.9965, 0.29", "40.5928, 3.13548, 45.754, 0.44", "41.2505, 1.82363, 46.8214, 2.14" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-24.3292, 56.0008, 35.5835, 0.22", "-25.6503, 57.398, 35.216, 0.22", "-26.273, 58.0649, 35.0373, 1.55", "-27.1065, 58.9588, 34.6949, 3.1", "-28.5916, 60.5522, 33.9373, 0.15", "-29.1003, 61.0952, 33.6304, 0.66", "-29.9287, 61.9611, 33.0735, 0.15", "-30.5488, 62.5615, 32.5621, 1.18", "-31.6798, 63.561, 31.4996, 0.07", "-32.3065, 64.0569, 30.8563, 0.07", "-32.8146, 64.43, 30.3002, 0.07", "-33.387, 64.805, 29.6945, 0.96", "-34.531, 65.4814, 28.5465, 0.15", "-35.4494, 66.0109, 27.7019, 0.15", "-36.0326, 66.3377, 27.2578, 1.03", "-36.6595, 66.6718, 26.8343, 1.99", "-37.9445, 67.2965, 26.1451, 0.15", "-38.5224, 67.5485, 25.8893, 0.15", "-38.9507, 67.7097, 25.7338, 0.15", "-39.6618, 67.9431, 25.5169, 0.88", "-40.5454, 68.179, 25.2461, 1.62", "-42.4298, 68.5882, 24.683, 0.15", "-43.1656, 68.7142, 24.4644, 0.15", "-43.9901, 68.8285, 24.2057, 0.44", "-44.9091, 68.9089, 23.8895, 0.15", "-46.1916, 68.9667, 23.4762, 0.22", "-47.4293, 68.9673, 23.1086, 0.15", "-47.7292, 68.9489, 23.0295, 0.74", "-48.8273, 68.8475, 22.7837, 1.25", "-50.6064, 68.642, 22.4442, 0.22", "-52.1898, 68.4119, 22.1959, 1.11", "-52.9156, 68.2746, 22.1004, 1.84", "-54.5161, 67.7989, 21.9477, 0.15", "-55.064, 67.5785, 21.921, 0.15", "-55.6407, 67.3146, 21.912, 0.15", "-56.0483, 67.105, 21.9152, 0.81", "-57.1354, 66.4366, 21.8826, 2.14", "-58.9359, 65.1276, 21.9179, 0.22", "-59.7542, 64.3702, 21.9768, 1.47" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-24.3292, 56.0008, 35.5835, 0.22", "-25.2672, 57.3459, 36.5897, 0.22", "-25.9297, 58.3294, 37.2546, 0.22", "-26.898, 59.7609, 38.1594, 0.37", "-27.3087, 60.3294, 38.5132, 0.37", "-27.83, 61.021, 38.9406, 0.96", "-28.3264, 61.6858, 39.3447, 0.15", "-28.5561, 62.012, 39.5312, 0.15", "-28.7005, 62.2009, 39.6308, 0.22", "-29.2249, 62.8345, 39.9074, 0.15", "-29.6732, 63.3287, 40.1426, 1.03", "-30.2762, 63.9879, 40.5115, 1.99", "-31.1379, 65.0228, 41.1932, 0.22", "-31.5958, 65.7227, 41.6588, 0.15", "-31.7498, 66.0221, 41.8629, 0.15", "-31.9884, 66.6338, 42.2835, 1.18", "-32.287, 67.5747, 42.9362, 0.15", "-32.4453, 68.1351, 43.3341, 0.52", "-32.6329, 68.9023, 43.8598, 0.22", "-32.8338, 69.6567, 44.3597, 1.33", "-33.1251, 70.5043, 44.9139, 2.88", "-33.8181, 72.0277, 45.8857, 0.22", "-34.1635, 72.5957, 46.2198, 0.22", "-34.6194, 73.2198, 46.5733, 0.74", "-35.1941, 73.9094, 46.981, 0.15", "-35.6809, 74.4608, 47.317, 0.15", "-36.1237, 74.9118, 47.6246, 0.15", "-36.6783, 75.3767, 48.0619, 0.74", "-37.1976, 75.7653, 48.5679, 0.74", "-37.5872, 75.9621, 49.0387, 0.74", "-37.9707, 76.066, 49.5597, 0.74", "-38.1263, 76.0841, 49.7574, 0.74", "-38.7926, 76.1142, 50.5487, 0.74", "-39.02, 76.1123, 50.8247, 0.74", "-39.6335, 76.1018, 51.576, 0.74", "-39.9953, 76.1213, 52.0819, 0.74", "-40.5729, 76.24, 53.0941, 0.96", "-40.9064, 76.3931, 53.8794, 0.96", "-41.0829, 76.5569, 54.4621, 0.96", "-41.2801, 76.8149, 55.2924, 0.96", "-41.4758, 77.1826, 56.3341, 0.66", "-41.649, 77.5839, 57.4043, 0.88", "-41.872, 78.0469, 58.5299, 1.55", "-42.2219, 78.6219, 59.7679, 0.37", "-42.4259, 78.9197, 60.3018, 0.37", "-42.8105, 79.5132, 61.1732, 1.4", "-43.0264, 79.8605, 61.6087, 1.62", "-43.5167, 80.7615, 62.5886, 0.44", "-43.8071, 81.3932, 63.2069, 0.44", "-44.0332, 82.069, 63.8283, 1.18", "-44.2376, 83.0158, 64.6757, 0.22", "-44.2784, 83.4969, 65.1105, 0.22", "-44.2613, 84.0612, 65.6302, 1.25", "-44.2077, 84.6498, 66.1776, 1.92", "-44.1598, 85.9006, 67.3718, 0.15", "-44.192, 86.3921, 67.8585, 0.88", "-44.3069, 87.0103, 68.4688, 1.92", "-44.6907, 88.2416, 69.6949, 0.22", "-44.9822, 88.8942, 70.3833, 0.74", "-45.4613, 89.7674, 71.3592, 1.7", "-45.8529, 90.3941, 72.1253, 0.07", "-46.0418, 90.7074, 72.5451, 0.96", "-46.5118, 91.4947, 73.6935, 0.07", "-46.7761, 91.9764, 74.4666, 0.07", "-46.9254, 92.3292, 75.0839, 0.07", "-47.1158, 92.8381, 76.1184, 0.37", "-47.335, 93.25, 77.1483, 0.59", "-47.4898, 93.4483, 77.7308, 0.59", "-47.6618, 93.5858, 78.2073, 0.59", "-47.7986, 93.6717, 78.4762, 0.59", "-48.3904, 94.0664, 79.3958, 0.15", "-48.8125, 94.4266, 79.982, 0.07", "-49.0524, 94.723, 80.3661, 0.07", "-49.2348, 95.0074, 80.6862, 0.07", "-49.5288, 95.502, 81.1685, 0.88", "-50.0284, 96.3044, 81.9205, 0.22", "-50.5159, 96.9694, 82.5962, 0.22", "-51.0501, 97.5538, 83.2602, 1.62", "-51.6998, 98.0728, 83.95, 2.21", "-52.908, 98.7672, 85.1161, 0.37", "-53.7655, 99.0997, 85.9166, 0.37", "-55.063, 99.36, 87.1163, 1.33", "-55.4715, 99.3603, 87.5195, 1.77", "-56.2981, 99.1854, 88.4416, 0.29", "-56.9669, 98.8784, 89.2789, 0.29", "-57.5217, 98.5394, 89.9599, 0.59", "-58.1131, 98.1739, 90.6381, 1.18", "-59.1109, 97.6068, 91.6983, 0.37", "-60.1957, 97.0379, 92.7728, 1.03", "-61.1147, 96.6052, 93.5706, 1.4", "-63.0833, 95.7951, 94.9833, 0.07", "-64.0528, 95.4583, 95.5465, 0.59", "-65.08, 95.2105, 95.9826, 0.15", "-65.7675, 95.1112, 96.1644, 0.15", "-66.8039, 95.0236, 96.3212, 0.15", "-67.2952, 95.0101, 96.362, 1.03", "-67.7846, 95.0079, 96.357, 1.4", "-69.5384, 95.0135, 96.2732, 0.15", "-70.1791, 95.0237, 96.2469, 0.15", "-71.3382, 95.0405, 96.2637, 0.15", "-71.9416, 95.0369, 96.3116, 1.11", "-72.5257, 95.0249, 96.3913, 1.62", "-73.9508, 94.9878, 96.667, 0.29", "-74.841, 94.9732, 96.885, 0.07", "-75.6764, 95.0118, 97.0854, 0.07", "-76.1914, 95.0592, 97.2073, 0.88", "-77.402, 95.2055, 97.5268, 0.07", "-77.9933, 95.3015, 97.7093, 0.22", "-79.0051, 95.5353, 98.075, 0.07", "-79.7088, 95.7544, 98.3144, 1.77" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-8.60156, 45.8506, 27.2908, 0.52", "-6.05766, 45.4827, 25.7788, 0.52", "-5.43735, 45.3407, 25.4598, 2.21", "-4.32464, 45.0011, 24.9381, 2.88", "-2.44475, 44.2914, 24.1071, 0.96", "-1.09065, 43.679, 23.4904, 0.15", "-0.339335, 43.285, 23.1049, 0.59", "0.411317, 42.7638, 22.7899, 0.15", "0.90931, 42.3621, 22.5771, 0.22", "1.29108, 41.9711, 22.392, 0.22", "1.9592, 41.0994, 21.9519, 0.22", "2.76169, 39.8377, 21.3147, 1.11", "3.13994, 39.1311, 20.9548, 2.29", "3.34869, 38.6801, 20.7176, 2.58", "3.94463, 37.229, 19.9527, 0.15", "4.24235, 36.3507, 19.5316, 0.15", "4.42815, 35.5358, 19.2126, 0.29", "4.51199, 34.9325, 19.0136, 1.03", "4.57022, 34.305, 18.8146, 1.99", "4.60515, 33.8485, 18.686, 2.29", "4.6953, 32.3377, 18.3819, 0.44", "4.78411, 31.2662, 18.2243, 0.29", "4.8434, 30.6886, 18.167, 0.44", "4.91003, 30.135, 18.1295, 0.52", "5.04078, 29.1372, 18.1113, 0.22", "5.14881, 28.4726, 18.1303, 0.22", "5.28007, 27.7566, 18.1931, 1.33", "5.41964, 27.0591, 18.2797, 2.29", "5.52598, 26.4826, 18.365, 2.29", "5.81876, 24.8794, 18.6368, 0.15", "5.93076, 24.1991, 18.7588, 0.15", "6.0182, 23.6503, 18.8524, 0.15", "6.09518, 23.1235, 18.9425, 0.66", "6.21253, 22.2946, 19.0642, 1.33", "6.30303, 21.6477, 19.1071, 1.03", "6.47846, 20.2662, 19.0515, 0.22", "6.55935, 19.6008, 18.9722, 0.22", "6.63678, 18.9508, 18.8452, 0.66", "6.75438, 18.0134, 18.6209, 0.22", "6.88003, 16.8058, 18.2784, 0.29", "6.94822, 16.0373, 18.0622, 0.59", "7.00319, 15.4518, 17.8775, 1.33", "7.07115, 14.6111, 17.5958, 2.14", "7.17853, 13.1665, 17.0962, 0.22", "7.23708, 12.1764, 16.7815, 0.22", "7.27063, 11.337, 16.6124, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-8.60156, 45.8506, 27.2908, 0.52", "-9.07858, 46.8818, 29.0008, 0.52", "-9.40115, 47.4813, 30.5836, 0.52", "-9.70743, 47.9322, 32.6392, 0.52", "-9.8348, 48.0296, 33.7352, 0.52", "-10.0524, 48.1394, 36.3127, 0.81", "-10.1542, 48.227, 38.2213, 1.18", "-10.0862, 48.1695, 40.6842, 0.96", "-9.96086, 48.0525, 42.4313, 1.25", "-9.76794, 47.842, 44.3047, 0.37", "-9.59536, 47.7372, 45.3979, 0.37", "-9.3493, 47.6169, 46.7073, 0.15", "-8.98359, 47.5381, 48.2697, 0.15", "-8.48238, 47.6696, 49.9605, 1.18", "-8.17359, 47.8641, 50.9633, 2.43", "-7.58976, 48.2811, 52.6554, 2.65" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-12.0124, 116.549, 7.30353, 0.59", "-12.3546, 118.275, 7.12006, 0.59", "-12.7374, 119.794, 6.91778, 0.29", "-13.159, 121.223, 6.70969, 0.96", "-13.5128, 122.309, 6.55633, 0.07", "-13.9506, 123.476, 6.39807, 0.07", "-14.2117, 124.137, 6.31256, 0.22", "-14.6096, 124.937, 6.21604, 0.88", "-14.8456, 125.411, 6.17647, 1.47", "-15.4374, 126.76, 6.02644, 0.07", "-15.7338, 127.658, 5.88222, 0.07", "-15.8403, 128.132, 5.81278, 0.22", "-15.9118, 128.491, 5.76791, 0.22", "-16.0891, 129.484, 5.67075, 0.07", "-16.2011, 130.382, 5.59082, 0.07", "-16.2467, 130.972, 5.52301, 0.66", "-16.2903, 131.636, 5.41778, 0.66", "-16.3751, 132.712, 5.21101, 0.15", "-16.4392, 133.548, 5.03373, 1.03", "-16.5009, 134.427, 4.83622, 1.77", "-16.5692, 136.073, 4.47736, 0.15", "-16.6063, 137.179, 4.25068, 0.22", "-16.6238, 137.631, 4.15323, 0.66", "-16.6641, 138.158, 4.05592, 0.37", "-16.8008, 139.068, 3.94479, 1.11", "-16.9764, 139.78, 3.90909, 1.11", "-17.5293, 141.447, 3.96666, 0.22", "-17.9385, 142.423, 4.04315, 1.03", "-18.4949, 143.549, 4.14496, 1.62", "-19.0789, 144.586, 4.25679, 1.99", "-19.6614, 145.549, 4.30074, 0.52", "-20.4665, 146.822, 4.25169, 0.22", "-21.2673, 148.088, 4.06714, 0.22", "-21.6561, 148.723, 3.89454, 0.88", "-22.1926, 149.666, 3.44789, 1.55", "-23.2529, 151.529, 2.27617, 0.15", "-23.6669, 152.293, 1.74344, 0.22", "-24.0079, 152.975, 1.2593, 0.07", "-24.5187, 154.103, 0.477616, 1.33", "-25.2674, 155.802, -0.552734, 0.07", "-25.5041, 156.352, -0.876798, 0.37", "-25.9899, 157.473, -1.3227, 0.07", "-26.5359, 158.745, -1.61918, 0.22", "-27.0492, 159.933, -1.62391, 1.55", "-27.4283, 160.909, -1.27664, 1.55", "-29.5039, 171.432, -4.25939, 1.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-12.0124, 116.549, 7.30353, 0.22", "-13.2623, 118.18, 7.25895, 0.22", "-13.8347, 118.969, 7.22422, 0.07", "-14.4596, 119.884, 7.16611, 1.11", "-15.3744, 121.385, 7.05449, 0.07", "-15.7558, 122.099, 6.99712, 0.07", "-15.939, 122.48, 6.96654, 0.52", "-16.1934, 123.228, 6.8935, 1.47", "-16.4551, 124.183, 6.80227, 0.07", "-16.6477, 125.035, 6.72065, 0.15", "-16.7823, 125.868, 6.65776, 0.88", "-16.8832, 126.677, 6.61816, 1.4", "-17.0114, 127.951, 6.55878, 0.07", "-17.0643, 128.557, 6.53809, 0.74" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-30.3281, -90.4862, -43.0404, 0.15", "-32.0053, -97.9629, -44.6639, 0.15", "-33.9407, -105.527, -45.4214, 0.15", "-34.8657, -113.093, -47.1917, 0.15", "-34.3285, -120.824, -48.2283, 0.15", "-32.8554, -128.388, -49.4271, 0.15", "-31.3374, -135.985, -50.3403, 0.15", "-29.1125, -143.358, -51.466, 0.15", "-27.3139, -150.945, -51.6899, 0.15", "-24.4589, -158.168, -52.0278, 0.15", "-21.3466, -165.285, -52.1475, 0.15", "-19.142, -172.651, -50.8765, 0.15", "-17.3453, -180.129, -49.5626, 0.15", "-15.3273, -187.634, -48.924, 0.15", "-13.6142, -195.238, -49.2497, 0.15" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-30.3281, -90.4862, -43.0404, 1.03", "-31.9542, -100.397, -45.4376, 0.15", "-35.1823, -110.127, -46.7377, 0.15", "-39.432, -119.444, -48.045, 0.15", "-45.5214, -127.74, -48.3753, 0.15" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-7.87665, -147.31, 29.5415, 0.22", "-7.5007, -148.553, 30.2327, 0.22", "-7.3166, -149.347, 30.6399, 0.22", "-7.22442, -149.948, 30.8971, 0.88", "-7.13278, -150.837, 31.2244, 1.25", "-7.03563, -152.213, 31.6962, 0.15", "-6.98436, -153.259, 32.0218, 0.15", "-6.99514, -154.118, 32.2443, 0.66", "-7.04621, -155.405, 32.5174, 0.15", "-7.07732, -155.992, 32.6272, 0.44", "-7.09418, -156.419, 32.6978, 0.44", "-7.0918, -157.604, 32.9021, 0.15", "-7.05868, -158.457, 33.0576, 0.15", "-7.00803, -159.107, 33.1921, 1.18", "-6.92634, -159.75, 33.3479, 2.14", "-6.7835, -160.705, 33.5835, 1.03", "-6.6359, -161.628, 33.7979, 0.15", "-6.50434, -162.35, 33.9717, 0.15", "-6.39688, -162.924, 34.1003, 0.37", "-6.25597, -163.64, 34.2408, 0.22", "-6.17676, -164.026, 34.2939, 0.66", "-6.06336, -164.545, 34.3422, 0.81", "-5.78927, -165.645, 34.4177, 0.22", "-5.65025, -166.179, 34.4513, 1.03", "-5.40705, -167.14, 34.4861, 1.84", "-5.06798, -168.539, 34.5112, 0.22", "-4.96297, -168.996, 34.5208, 0.22", "-4.84942, -169.53, 34.5401, 0.22", "-4.748, -170.052, 34.5714, 0.22", "-4.58988, -170.813, 34.6655, 0.96", "-4.23508, -172.387, 34.9683, 0.15", "-4.09803, -172.938, 35.1132, 0.15", "-3.95482, -173.521, 35.2849, 0.96", "-3.79887, -174.192, 35.4948, 1.92", "-3.45193, -175.688, 36.0025, 0.22", "-3.32879, -176.213, 36.1974, 0.22", "-3.21001, -176.677, 36.3783, 0.15", "-2.99007, -177.506, 36.7022, 0.15", "-2.86778, -177.998, 36.8861, 0.81", "-2.77318, -178.503, 37.0683, 1.62", "-2.65206, -179.518, 37.4233, 0.15", "-2.57241, -180.312, 37.6966, 0.15", "-2.52026, -180.751, 37.8563, 0.15", "-2.42678, -181.437, 38.1176, 0.88", "-2.29671, -182.467, 38.4922, 0.15", "-2.23237, -182.995, 38.6737, 0.96", "-2.12438, -183.962, 38.979, 2.21", "-1.92768, -185.776, 39.5191, 0.15", "-1.8338, -186.534, 39.7368, 0.96", "-1.62204, -188.065, 40.2044, 0.22", "-1.50491, -188.795, 40.4411, 0.88", "-1.44315, -189.186, 40.5744, 0.88", "-1.25425, -190.425, 41.03, 0.07", "-1.21304, -190.686, 41.1364, 0.29", "-1.12376, -191.241, 41.39, 0.29", "-1.03585, -191.781, 41.6543, 0.15", "-0.98694, -192.216, 41.8605, 0.15", "-0.925181, -192.935, 42.1769, 0.15", "-0.886843, -193.44, 42.3725, 0.74", "-0.846085, -194.159, 42.6317, 1.77", "-0.834936, -194.615, 42.7866, 1.33", "-0.84292, -195.75, 43.1696, 0.07", "-0.856188, -196.127, 43.2928, 0.37", "-0.931044, -197.299, 43.6756, 0.07", "-0.972869, -197.925, 43.8824, 0.59", "-1.02096, -198.936, 44.2298, 0.15", "-1.03269, -199.457, 44.4102, 0.22", "-1.03435, -200.251, 44.6842, 1.33", "-1.03447, -201.415, 45.0771, 0.07", "-1.0387, -201.867, 45.2173, 0.88", "-1.01692, -203.171, 45.6243, 0.15", "-0.990644, -203.767, 45.8152, 0.15", "-0.960396, -204.282, 45.9867, 0.15", "-0.924471, -204.849, 46.1891, 0.74", "-0.886178, -205.661, 46.4764, 2.14", "-0.859531, -207.134, 46.977, 0.15", "-0.871545, -207.6, 47.1063, 0.44", "-0.942825, -208.799, 47.3767, 0.07", "-0.993386, -209.293, 47.4607, 0.15", "-1.07925, -209.863, 47.5266, 0.07", "-1.2203, -210.558, 47.5704, 1.11", "-1.62612, -212.19, 47.5788, 0.15", "-1.81184, -212.885, 47.5675, 1.03", "-2.15685, -214.136, 47.517, 0.15", "-2.28817, -214.699, 47.4962, 0.44", "-2.45579, -215.712, 47.4911, 0.15", "-2.53306, -216.503, 47.5193, 1.62", "-2.53782, -216.909, 47.5536, 1.77", "-2.49133, -217.516, 47.6258, 1.03", "-2.25914, -219.042, 47.8475, 0.15", "-1.97052, -220.482, 48.0864, 0.15", "-1.85791, -220.955, 48.1785, 0.88", "-1.70301, -221.587, 48.3309, 1.18", "-1.28305, -223.22, 48.7903, 0.07", "-1.19567, -223.547, 48.8928, 0.15", "-0.928897, -224.57, 49.2426, 0.07", "-0.646147, -225.684, 49.6421, 0.15", "-0.421074, -226.645, 49.9816, 1.33", "-0.0793367, -228.217, 50.529, 0.15", "0.0432281, -228.87, 50.7523, 0.22", "0.213198, -229.933, 51.0636, 0.07", "0.256809, -230.264, 51.1425, 0.22", "0.4303, -231.848, 51.4227, 0.07", "0.459706, -232.16, 51.4658, 0.81", "0.54311, -233.296, 51.5889, 1.92", "0.673107, -234.681, 51.6903, 0.15", "0.766973, -235.407, 51.7138, 0.88", "1.02625, -236.992, 51.7243, 0.15", "1.11006, -237.414, 51.7141, 0.44", "1.39429, -238.726, 51.6632, 0.07", "1.65806, -239.807, 51.6253, 0.07", "1.81679, -240.516, 51.6219, 0.15", "1.92454, -241.065, 51.6368, 0.74", "2.00057, -241.565, 51.6707, 0.74", "2.11724, -242.678, 51.8815, 0.07", "2.17336, -243.435, 52.1466, 0.07", "2.1865, -244.169, 52.4936, 0.07", "2.18214, -244.774, 52.8146, 1.25", "2.17428, -245.259, 53.0794, 1.99", "2.15695, -246.921, 53.956, 0.15", "2.15031, -247.83, 54.4093, 0.96", "2.14234, -249.143, 54.9991, 0.07", "2.14443, -250.179, 55.4127, 0.07", "2.14932, -250.943, 55.6674, 0.81", "2.19159, -252.99, 56.2157, 0.15", "2.20498, -253.511, 56.3148, 0.29", "2.24379, -254.534, 56.4554, 0.07", "2.30081, -255.392, 56.5399, 1.47", "2.45964, -257.315, 56.6764, 0.07", "2.51744, -258.153, 56.7339, 0.07", "2.55292, -258.774, 56.7553, 1.11", "2.64808, -260.385, 56.7552, 0.07", "2.69259, -261.069, 56.729, 0.74", "2.7387, -261.693, 56.6767, 1.92", "2.86518, -263.407, 56.4622, 0.15", "2.96004, -264.724, 56.2704, 0.22", "3.06643, -266.243, 56.0468, 0.22", "3.11172, -266.91, 55.9365, 0.81", "3.16584, -267.773, 55.7945, 1.84", "3.2539, -269.625, 55.5625, 0.07", "3.27448, -270.171, 55.5142, 0.29", "3.24504, -271.541, 55.5525, 0.07", "3.19282, -272.414, 55.6241, 0.07", "3.10751, -273.404, 55.7508, 1.55", "2.93731, -274.919, 56.0409, 0.07", "2.8663, -275.456, 56.1784, 0.07", "2.67762, -276.856, 56.6048, 1.47" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-7.87665, -147.31, 29.5415, 0.22", "-8.8377, -148.743, 29.9964, 0.22", "-9.56545, -150.111, 30.4096, 0.44", "-9.85246, -150.761, 30.6029, 0.15", "-10.0726, -151.301, 30.7697, 0.15", "-10.1814, -151.552, 30.846, 0.37", "-10.533, -152.283, 31.0525, 0.44", "-10.856, -152.906, 31.203, 0.15", "-11.013, -153.159, 31.2789, 0.22", "-11.3074, -153.573, 31.4653, 0.22", "-11.7261, -154.109, 31.7632, 0.22", "-12.1162, -154.596, 32.0717, 0.81", "-12.7952, -155.478, 32.6682, 0.22", "-13.5093, -156.489, 33.3697, 0.96", "-14.1477, -157.49, 34.0493, 2.21", "-15.2499, -159.472, 35.3398, 0.22", "-15.6706, -160.334, 35.9022, 0.22", "-15.9255, -160.933, 36.2845, 0.22", "-16.0953, -161.393, 36.5564, 0.22", "-16.3541, -162.118, 36.9154, 0.22", "-16.5874, -162.683, 37.1569, 0.22", "-16.8639, -163.243, 37.3719, 0.88", "-17.2822, -163.926, 37.6416, 1.4", "-17.9821, -164.832, 38.0476, 2.14", "-19.3008, -166.295, 38.7895, 0.52", "-20.3094, -167.291, 39.3497, 0.22", "-20.8857, -167.822, 39.6595, 0.22", "-21.684, -168.505, 40.0607, 1.11", "-22.9955, -169.484, 40.6904, 1.99", "-23.6974, -169.926, 41.0109, 1.99", "-23.9488, -170.047, 41.1288, 1.99" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-38.9409, -134.547, 15.377, 0.22", "-39.9445, -135.55, 15.1912, 0.22", "-40.48, -136.112, 15.0978, 0.22", "-40.947, -136.597, 15.012, 1.33", "-41.8046, -137.488, 14.8475, 0.15", "-42.1112, -137.816, 14.788, 0.15", "-42.3327, -138.062, 14.7452, 0.37", "-42.6863, -138.505, 14.704, 0.37", "-43.1929, -139.221, 14.6461, 0.22", "-43.4172, -139.556, 14.6104, 0.15", "-43.5809, -139.812, 14.5754, 0.15", "-43.6986, -140.005, 14.5581, 0.15", "-43.9695, -140.468, 14.5286, 0.15", "-44.2383, -140.965, 14.5086, 0.74", "-44.6731, -141.786, 14.4787, 0.15", "-44.9669, -142.284, 14.4112, 0.15", "-45.4116, -142.964, 14.2617, 0.15", "-45.581, -143.209, 14.183, 0.15", "-45.9553, -143.731, 13.9662, 1.33", "-46.3147, -144.187, 13.7722, 2.14", "-47.31, -145.294, 13.2907, 0.15", "-47.8234, -145.782, 13.0738, 1.25", "-48.6037, -146.448, 12.7699, 0.07", "-48.9101, -146.7, 12.6699, 0.22", "-49.8866, -147.469, 12.3973, 0.22", "-50.3857, -147.838, 12.286, 1.25", "-50.7117, -148.064, 12.2345, 1.25", "-51.7419, -148.885, 12.0351, 0.07", "-52.4147, -149.517, 11.8723, 0.07", "-52.8443, -150.037, 11.7055, 0.07", "-53.1756, -150.589, 11.4619, 0.07", "-53.3333, -150.913, 11.3092, 1.18", "-53.8324, -152.136, 10.7019, 0.07", "-53.9269, -152.412, 10.5636, 0.88", "-54.1546, -153.177, 10.1857, 1.92", "-54.5301, -154.518, 9.5387, 0.15", "-54.6433, -154.947, 9.33584, 0.22", "-54.8438, -155.617, 9.01682, 0.07", "-54.9575, -155.979, 8.85002, 0.07", "-55.1181, -156.559, 8.61342, 0.29", "-55.4049, -157.752, 8.22572, 0.07", "-55.6394, -158.812, 7.97756, 0.22", "-55.806, -159.548, 7.83738, 1.55", "-56.1387, -160.878, 7.67932, 0.22", "-56.3684, -161.697, 7.63179, 0.07", "-56.5782, -162.427, 7.62837, 0.07", "-56.726, -162.918, 7.68269, 0.07", "-56.8909, -163.362, 7.78666, 0.15", "-57.183, -164.021, 8.02902, 0.07", "-57.4033, -164.307, 8.20327, 0.88" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-38.9409, -134.547, 15.377, 0.29", "-40.6732, -134.134, 15.0322, 0.29", "-41.5277, -133.901, 14.776, 0.22", "-42.0663, -133.748, 14.5736, 0.74", "-42.7111, -133.557, 14.306, 0.96", "-43.4734, -133.339, 13.9778, 0.29", "-44.2618, -133.114, 13.6275, 0.15", "-45.1127, -132.865, 13.2124, 0.15", "-45.8377, -132.677, 12.889, 1.03", "-46.7528, -132.466, 12.5164, 0.29", "-48.0121, -132.195, 12.0521, 0.22", "-48.7085, -132.06, 11.8233, 1.11", "-49.827, -131.872, 11.5117, 2.14", "-51.9351, -131.545, 11.0122, 0.22", "-52.4702, -131.468, 10.8984, 0.81", "-53.5423, -131.326, 10.6768, 1.7", "-54.9947, -131.127, 10.3918, 0.22", "-55.6063, -131.043, 10.2603, 0.88", "-56.5302, -130.923, 10.035, 1.55", "-57.2163, -130.828, 9.84577, 0.59", "-58.5071, -130.656, 9.46587, 0.15", "-59.4531, -130.554, 9.14946, 0.88", "-60.3989, -130.457, 8.78766, 0.15", "-61.1514, -130.362, 8.4635, 0.22", "-61.8142, -130.265, 8.14971, 0.81", "-62.7987, -130.124, 7.6602, 1.99", "-64.1786, -129.97, 6.91383, 0.22", "-64.8518, -129.907, 6.5362, 0.22", "-65.5339, -129.836, 6.1429, 0.52", "-66.2403, -129.753, 5.72005, 1.18", "-67.3539, -129.601, 5.04362, 1.99", "-68.7828, -129.38, 4.13122, 0.15", "-69.3123, -129.29, 3.79013, 0.29", "-70.1726, -129.175, 3.22423, 0.07", "-70.7555, -129.121, 2.80104, 0.22", "-71.191, -129.087, 2.42437, 0.22", "-71.5635, -129.08, 1.99131, 0.22", "-71.7005, -129.097, 1.79315, 0.22", "-72.014, -129.241, 1.20676, 0.22", "-72.3091, -129.551, 0.519984, 0.22", "-72.5063, -129.829, 0.00633502, 0.22", "-72.9762, -130.514, -1.10818, 1.84" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "65.8999, 30.5801, 75.9721, 0.22", "67.3618, 30.6725, 77.6902, 0.22", "67.6843, 30.6635, 78.0782, 0.22", "68.4584, 30.6656, 78.9501, 0.59", "69.2001, 30.7036, 79.7018, 0.44", "69.6174, 30.7257, 80.0825, 0.44", "70.1662, 30.7336, 80.5058, 0.15", "70.7524, 30.7453, 80.8328, 0.15", "71.5276, 30.6948, 81.174, 0.15", "72.1624, 30.6029, 81.3779, 0.96", "73.0253, 30.455, 81.5997, 1.55", "74.2431, 30.3055, 81.896, 0.22", "75.1225, 30.2015, 82.0995, 0.37", "75.8064, 30.0888, 82.2477, 0.22", "76.3705, 29.9692, 82.3744, 0.22", "77.0084, 29.8334, 82.5245, 0.37", "78.2105, 29.5966, 82.8516, 0.22", "78.8774, 29.4916, 83.0733, 0.22", "79.7506, 29.4052, 83.4067, 0.22", "80.3129, 29.3717, 83.6412, 0.96", "81.2699, 29.3356, 84.0797, 1.99", "82.8292, 29.2589, 84.8522, 0.22", "83.7964, 29.169, 85.3785, 0.15", "84.7295, 29.0828, 85.9456, 0.15", "85.0362, 29.0519, 86.1491, 0.15", "85.4627, 28.9858, 86.4421, 0.15", "85.8722, 28.897, 86.695, 0.15", "86.6457, 28.6916, 87.0853, 0.15", "87.1296, 28.5064, 87.2987, 0.81", "87.6972, 28.231, 87.5454, 1.47", "88.1137, 28.0166, 87.7287, 1.47", "89.3646, 27.3599, 88.2508, 0.15", "89.6797, 27.207, 88.3919, 0.22", "90.507, 26.7812, 88.7889, 0.37", "91.3292, 26.3152, 89.2101, 1.03", "92.1161, 25.8662, 89.7191, 1.77", "92.5296, 25.6433, 90.0504, 1.77", "93.7416, 25.0351, 91.199, 0.22", "94.1979, 24.8632, 91.6574, 0.22", "94.9248, 24.695, 92.3839, 1.11", "96.41, 24.4923, 93.8952, 0.22", "97.0174, 24.4294, 94.5611, 0.22", "97.5957, 24.373, 95.2343, 0.66", "98.406, 24.291, 96.1697, 0.88", "98.9653, 24.2524, 96.7966, 1.7", "100.156, 24.2288, 98.1145, 0.44", "101.053, 24.2392, 99.0511, 0.74", "101.725, 24.2881, 99.7407, 1.25", "102.846, 24.4952, 100.895, 0.22", "103.241, 24.6072, 101.301, 0.22", "103.926, 24.891, 102.0, 0.37", "104.409, 25.1362, 102.436, 0.37", "105.21, 25.5599, 103.063, 1.47", "106.196, 26.0584, 103.784, 0.29", "106.674, 26.2823, 104.11, 0.29", "106.937, 26.3957, 104.289, 0.29", "107.778, 26.7471, 104.921, 0.15", "108.299, 26.9957, 105.396, 0.22", "108.689, 27.2169, 105.829, 0.74", "109.118, 27.5342, 106.427, 1.25", "109.791, 28.1961, 107.583, 0.22", "110.289, 28.7794, 108.56, 0.96", "110.72, 29.3226, 109.479, 0.96", "111.069, 29.7165, 110.237, 0.29", "111.503, 30.1304, 111.205, 0.29", "111.864, 30.4143, 112.07, 0.29", "112.203, 30.6202, 112.919, 0.29", "112.477, 30.8091, 113.815, 0.29", "112.621, 30.9722, 114.659, 0.29", "112.651, 31.122, 115.492, 0.29", "112.638, 31.2151, 116.023, 0.29", "112.604, 31.3572, 116.726, 0.29", "112.521, 31.6735, 118.07, 0.59", "112.463, 31.9402, 119.085, 0.59", "112.434, 32.2753, 120.349, 0.59", "112.463, 32.4875, 121.245, 0.59", "112.589, 32.6908, 122.368, 0.59", "112.75, 32.7783, 123.155, 0.59", "112.85, 32.7957, 123.459, 0.59", "113.226, 32.7923, 124.262, 0.59", "113.433, 32.748, 124.588, 0.59", "113.982, 32.5557, 125.272, 0.22", "114.438, 32.3627, 125.707, 0.22", "115.076, 32.157, 126.315, 0.22", "115.535, 32.0802, 126.79, 0.22", "116.271, 32.07, 127.537, 0.22", "116.8, 32.1508, 128.111, 0.22", "117.357, 32.3274, 128.799, 1.11", "118.364, 32.7891, 130.19, 0.22", "118.907, 33.0886, 131.02, 0.22", "119.542, 33.4984, 132.068, 0.22", "120.026, 33.7729, 132.872, 0.22", "120.404, 33.8641, 133.547, 0.22", "120.582, 33.8007, 133.875, 0.22", "120.943, 33.5059, 134.49, 0.59", "121.508, 32.9513, 135.382, 0.59", "122.177, 32.3051, 136.395, 0.15", "122.833, 31.6845, 137.351, 0.66", "123.533, 31.0642, 138.375, 0.15", "124.098, 30.61, 139.222, 0.66", "124.572, 30.2953, 139.922, 1.03", "125.506, 29.7726, 141.201, 0.22", "126.309, 29.3833, 142.206, 0.15", "127.135, 29.0534, 143.152, 0.66", "127.659, 28.9139, 143.733, 1.25", "128.795, 28.7249, 144.947, 0.22", "129.64, 28.6325, 145.819, 0.15", "130.399, 28.5933, 146.52, 0.37", "130.865, 28.5998, 146.906, 0.59", "132.064, 28.6371, 147.832, 0.15", "132.79, 28.6449, 148.407, 0.88", "134.029, 28.6434, 149.442, 0.22", "134.519, 28.66, 149.863, 0.96", "134.926, 28.6848, 150.221, 0.66", "135.784, 28.7418, 150.95, 0.15", "136.64, 28.844, 151.697, 0.81", "137.211, 28.9883, 152.249, 1.25", "137.982, 29.2918, 153.01, 0.15", "138.928, 29.7242, 153.973, 0.15", "139.213, 29.869, 154.275, 0.29", "139.912, 30.2902, 155.033, 0.15", "140.248, 30.5159, 155.412, 0.96", "140.869, 30.9019, 156.16, 0.29", "141.693, 31.2997, 157.16, 0.74", "142.505, 31.6159, 158.095, 0.15", "143.055, 31.8061, 158.713, 0.37", "143.389, 31.913, 159.054, 0.37", "143.974, 32.1209, 159.655, 0.22", "144.639, 32.3766, 160.308, 0.22", "145.194, 32.5435, 160.78, 0.37", "145.851, 32.7091, 161.277, 0.37", "146.6, 32.8859, 161.777, 1.33", "148.062, 33.2761, 162.641, 0.22", "149.035, 33.6098, 163.166, 1.03", "150.243, 34.0868, 163.76, 0.15", "150.661, 34.2801, 163.947, 0.15", "151.74, 34.9084, 164.379, 0.15", "152.502, 35.4835, 164.688, 1.03", "153.127, 36.1136, 164.936, 0.15", "153.551, 36.6343, 165.121, 0.15", "154.132, 37.4541, 165.455, 0.15", "154.735, 38.2879, 165.914, 0.88", "155.32, 39.0919, 166.459, 0.29", "155.753, 39.6703, 166.906, 0.81", "155.965, 39.9381, 167.125, 0.81", "156.782, 41.1091, 167.995, 0.22", "157.313, 42.0087, 168.583, 0.07", "157.64, 42.7693, 168.984, 0.15", "157.759, 43.1841, 169.158, 0.66", "157.913, 44.0544, 169.461, 1.55", "158.184, 46.2553, 170.111, 0.15", "158.245, 47.3083, 170.328, 0.15", "158.23, 48.2833, 170.496, 0.66", "158.179, 49.0021, 170.624, 0.15", "158.127, 49.4293, 170.702, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "65.8999, 30.5801, 75.9721, 0.29", "65.0323, 31.3998, 77.6231, 0.29", "64.3457, 32.0566, 78.7602, 0.29", "63.6188, 32.7977, 79.8971, 0.81", "63.2043, 33.1993, 80.5065, 1.4", "62.1706, 34.1022, 81.9387, 0.07", "61.6138, 34.5516, 82.6661, 1.03", "60.5039, 35.3381, 83.9149, 0.15", "59.5603, 36.0336, 84.9275, 1.55", "58.6815, 36.7371, 85.8947, 0.22", "58.1058, 37.2533, 86.575, 0.22", "57.5081, 37.8685, 87.3404, 0.81", "56.9045, 38.5708, 88.1602, 0.07", "56.428, 39.2804, 88.8998, 0.59", "56.1046, 40.0115, 89.5137, 0.07", "55.9883, 40.4828, 89.8494, 0.52", "55.8052, 42.097, 90.9286, 0.07", "55.8103, 42.639, 91.2811, 0.96", "55.8737, 43.1488, 91.6199, 0.96", "56.1723, 44.5071, 92.5717, 0.22", "56.5159, 45.4557, 93.253, 0.22", "56.9373, 46.2575, 93.8742, 0.96", "57.4831, 47.0932, 94.5613, 1.77", "58.2682, 48.2174, 95.5659, 0.22", "58.7679, 48.8903, 96.1972, 0.15", "59.202, 49.4582, 96.7069, 0.15", "59.4215, 49.7662, 96.9749, 0.15", "60.089, 50.8391, 97.879, 0.88", "60.6511, 52.0817, 98.9173, 0.22", "60.8693, 52.7783, 99.503, 0.81", "61.1581, 53.9602, 100.512, 0.15", "61.3407, 54.8102, 101.237, 0.66", "61.5242, 55.7494, 102.032, 1.84", "61.8963, 57.5007, 103.506, 0.15", "62.0969, 58.4995, 104.321, 0.15", "62.2588, 59.313, 104.97, 0.15", "62.4169, 59.9736, 105.492, 0.66", "62.8057, 61.2368, 106.396, 0.15", "63.2691, 62.4128, 107.166, 0.15", "63.5422, 63.0067, 107.515, 0.66", "63.7784, 63.5853, 107.822, 0.22", "64.0784, 64.5151, 108.305, 0.22", "64.2214, 65.0689, 108.583, 0.81", "64.2963, 65.5151, 108.793, 0.81", "64.3429, 66.7625, 109.386, 0.07", "64.2933, 67.512, 109.762, 0.66", "63.991, 69.0742, 110.61, 0.15", "63.6775, 70.1125, 111.199, 1.4", "63.1249, 71.5425, 112.071, 0.15", "62.6796, 72.4864, 112.685, 0.15", "62.2223, 73.2694, 113.229, 1.18", "61.3247, 74.446, 114.169, 0.22", "60.5199, 75.2518, 114.893, 0.15", "60.0102, 75.7052, 115.33, 0.15", "59.4976, 76.1417, 115.76, 0.74", "58.876, 76.6846, 116.265, 1.25", "57.6121, 77.8362, 117.302, 0.22", "56.9459, 78.4756, 117.872, 1.11", "55.8064, 79.6224, 118.931, 0.22", "55.1873, 80.2938, 119.547, 1.47", "54.5953, 80.9748, 120.161, 0.96", "53.8111, 81.9474, 121.021, 0.22", "53.1435, 82.8408, 121.796, 0.74", "52.3378, 83.9455, 122.792, 0.15", "51.9909, 84.4113, 123.244, 0.15", "51.6239, 84.9196, 123.757, 0.29" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "41.2505, 1.82363, 46.8214, 0.15", "44.1613, -0.177728, 49.9681, 0.15", "45.1395, -0.648856, 50.693, 0.22", "45.9268, -0.961384, 51.1959, 0.88", "47.3473, -1.45744, 52.0183, 0.15", "48.278, -1.75187, 52.5251, 1.18", "49.3104, -2.06895, 53.0776, 2.58", "51.7397, -2.6066, 54.0619, 0.29", "52.8581, -2.8376, 54.5011, 0.96", "53.6938, -3.0099, 54.8438, 1.18", "56.0524, -3.49573, 55.9475, 0.07", "56.9176, -3.66549, 56.439, 0.07", "57.3325, -3.75435, 56.7121, 0.07", "58.0854, -3.96823, 57.3055, 0.74", "58.6962, -4.1973, 57.8496, 1.03", "60.0873, -4.84893, 59.2338, 0.15", "61.2326, -5.54168, 60.4802, 1.18", "61.6738, -5.87376, 60.9868, 1.4", "62.5757, -6.69961, 62.0917, 0.15", "63.202, -7.4223, 62.8897, 0.15", "63.5323, -7.86667, 63.318, 0.88", "63.9167, -8.447, 63.8404, 0.29", "64.5836, -9.5273, 64.8108, 0.15", "65.0231, -10.2817, 65.556, 0.81", "65.4709, -11.1089, 66.4444, 1.62", "66.2255, -12.7694, 68.28, 0.15", "66.5704, -13.6653, 69.2908, 0.15", "66.8349, -14.4782, 70.1967, 0.22", "67.0879, -15.5077, 71.3076, 0.22", "67.2153, -16.1905, 72.0084, 0.22", "67.3356, -16.8413, 72.6926, 1.18", "67.5031, -17.6514, 73.5096, 1.62", "68.0041, -19.0821, 74.9021, 0.22", "68.4044, -19.7572, 75.6278, 0.22", "68.7089, -20.1, 76.0603, 0.44", "69.5616, -20.7937, 77.1272, 0.15", "70.2179, -21.1917, 77.8701, 1.33", "71.5696, -21.88, 79.2916, 0.15", "72.9982, -22.5196, 80.6726, 0.22", "73.7724, -22.8867, 81.3449, 0.22", "74.1766, -23.0917, 81.6696, 0.22", "74.8887, -23.504, 82.1769, 0.74", "75.6515, -23.9672, 82.6362, 1.25", "76.3, -24.3515, 82.9259, 1.25", "78.3967, -25.6744, 83.63, 0.22", "79.3173, -26.2756, 83.9429, 0.22", "80.0886, -26.7952, 84.2217, 1.03", "81.0577, -27.4527, 84.5756, 1.84", "83.5171, -29.1031, 85.4485, 0.22", "84.5863, -29.8443, 85.8061, 1.11", "86.1115, -30.9939, 86.3082, 0.22", "87.0911, -31.7799, 86.6596, 0.15", "87.7906, -32.3484, 86.941, 0.15", "88.8129, -33.2015, 87.4041, 1.03", "90.2538, -34.4814, 88.1427, 0.22", "90.9376, -35.0807, 88.5735, 0.96", "92.1423, -36.1367, 89.43, 0.15", "92.9434, -36.8618, 90.1048, 0.15", "93.5192, -37.4345, 90.7041, 0.96", "94.2773, -38.2185, 91.6671, 1.92", "96.0867, -39.9825, 94.317, 0.22", "96.6658, -40.4951, 95.2105, 0.44", "97.5555, -41.2948, 96.681, 1.18", "98.5908, -42.2911, 98.5881, 0.22", "99.5653, -43.3089, 100.682, 0.52", "100.288, -44.152, 102.637, 0.81", "100.646, -44.6639, 104.029, 0.81", "101.061, -45.3662, 106.455, 0.52", "101.124, -45.6402, 107.837, 0.52", "100.928, -45.7105, 109.228, 0.52", "100.436, -45.543, 110.486, 0.52", "99.8465, -45.224, 111.43, 1.25", "99.2476, -44.7813, 112.217, 1.25", "98.517, -44.0549, 113.165, 0.37", "97.5998, -42.9055, 114.535, 0.66", "97.0823, -42.0793, 115.467, 0.37", "96.7045, -41.2001, 116.492, 0.66", "96.4778, -40.252, 117.809, 0.15", "96.465, -39.6936, 118.762, 0.15", "96.5438, -39.4055, 119.377, 0.15", "96.7498, -38.9892, 120.423, 1.62", "97.1758, -38.2484, 122.467, 0.22", "97.6311, -37.478, 124.819, 0.88", "97.9667, -36.9245, 126.839, 1.4", "98.2181, -36.4851, 128.697, 1.4", "98.4692, -35.9265, 131.289, 0.66", "98.5901, -35.492, 133.626, 0.29", "98.5995, -35.3357, 134.813, 0.29", "98.5712, -35.2459, 136.0, 0.29", "98.5069, -35.255, 136.783, 0.29", "98.25, -35.518, 138.591, 0.29", "98.008, -35.903, 139.812, 0.29", "97.7086, -36.452, 141.179, 0.29", "97.4437, -36.802, 142.191, 0.29", "97.1741, -36.9659, 142.939, 0.29", "96.9482, -37.0104, 143.431, 0.29", "96.2979, -36.855, 144.397, 0.88", "95.5572, -36.4806, 145.291, 1.25", "94.8458, -36.0209, 146.11, 0.59", "93.8851, -35.3551, 147.141, 1.25", "93.2291, -34.8734, 147.837, 1.4", "91.2096, -33.3805, 149.907, 0.15", "90.4243, -32.8112, 150.653, 0.74", "88.9692, -31.7768, 151.94, 0.22", "87.9512, -31.0669, 152.825, 1.03", "87.2373, -30.5733, 153.461, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "41.2505, 1.82363, 46.8214, 0.15", "40.0048, -0.486649, 47.265, 0.15", "39.5056, -1.43298, 47.415, 0.07", "38.9068, -2.56291, 47.5651, 1.03", "38.0685, -4.12069, 47.7282, 0.07", "37.2281, -5.64772, 47.8632, 0.07", "36.7436, -6.49587, 47.927, 0.66", "35.7559, -8.168, 47.8613, 0.07", "35.2529, -9.03139, 47.7755, 0.07", "34.5296, -10.2841, 47.5993, 0.07", "34.3153, -10.6526, 47.5151, 0.29", "33.915, -11.3592, 47.2979, 0.81", "32.8269, -13.3083, 46.5809, 0.07", "32.0957, -14.6527, 46.0131, 0.07", "31.5994, -15.5815, 45.5672, 0.15", "30.6196, -17.4704, 44.5844, 0.07", "30.0379, -18.666, 43.9387, 0.07", "29.7203, -19.3742, 43.5489, 0.22", "29.489, -19.9233, 43.2405, 0.22", "28.7896, -21.5419, 42.3066, 0.15", "28.3887, -22.4935, 41.7691, 0.15", "27.943, -23.6518, 41.1512, 0.07", "27.713, -24.2871, 40.8118, 0.15", "27.1629, -25.804, 40.0297, 0.07", "26.8239, -26.6579, 39.5928, 0.59", "26.1544, -28.0288, 38.8651, 0.07", "25.7486, -28.6827, 38.4519, 0.07", "25.4174, -29.1046, 38.1345, 0.22", "24.6815, -29.9122, 37.4705, 0.22", "23.7547, -30.8606, 36.7014, 0.07", "22.6339, -31.9727, 35.8413, 0.07", "22.0806, -32.4755, 35.4656, 0.07", "21.3703, -33.0452, 35.0699, 0.07", "20.1861, -33.8782, 34.5826, 0.29", "18.3419, -35.0094, 34.1168, 0.07", "17.5009, -35.4557, 34.0599, 0.29", "16.7446, -35.8338, 34.1127, 0.29", "15.3021, -36.5564, 34.3134, 0.07", "13.9034, -37.2105, 34.5808, 0.07", "13.3073, -37.4512, 34.7083, 0.22", "12.4, -37.755, 34.8899, 0.37", "11.1793, -38.1662, 35.0639, 0.29", "9.6785, -38.6888, 35.0467, 0.07", "9.14543, -38.8728, 34.9525, 0.37", "8.3534, -39.105, 34.7449, 0.59", "6.80083, -39.4159, 34.2661, 0.07", "6.00873, -39.5069, 33.9915, 0.15", "4.03106, -39.5897, 33.2614, 0.07", "2.73005, -39.59, 32.7557, 0.07", "1.60167, -39.6281, 32.3049, 0.15", "0.121404, -39.7886, 31.7182, 0.07", "-0.637137, -39.9598, 31.4337, 0.07", "-1.06514, -40.1013, 31.2931, 0.29", "-1.57481, -40.3294, 31.1648, 0.29", "-2.97083, -41.1005, 30.8475, 0.07", "-4.25739, -41.907, 30.5872, 0.07", "-5.39798, -42.6648, 30.3764, 0.07", "-5.82721, -42.9411, 30.2852, 0.07", "-6.05035, -43.0772, 30.2259, 0.15", "-6.41327, -43.2696, 30.1018, 0.15", "-7.13218, -43.5264, 29.78, 0.15", "-8.13016, -43.6961, 29.2361, 0.15", "-9.17578, -43.7493, 28.5559, 0.15", "-9.79522, -43.7572, 28.1354, 0.15", "-10.4636, -43.7591, 27.6769, 0.15", "-11.1267, -43.7546, 27.2115, 0.15", "-11.6307, -43.7473, 26.8458, 0.15", "-12.2162, -43.7102, 26.4361, 0.15", "-13.3624, -43.5583, 25.6496, 0.07", "-14.1209, -43.4536, 25.1584, 0.07", "-15.1805, -43.3853, 24.5382, 0.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-59.7542, 64.3702, 21.9768, 0.07", "-60.7643, 63.9723, 22.826, 0.07", "-61.3652, 63.6991, 23.4236, 0.88", "-62.1032, 63.3165, 24.2707, 0.22", "-62.6133, 63.0571, 24.8478, 0.88", "-63.2992, 62.7096, 25.6094, 1.84", "-64.5924, 62.0243, 27.0549, 0.22", "-65.1054, 61.6741, 27.6778, 0.22", "-65.5059, 61.3343, 28.1644, 0.22", "-66.1731, 60.687, 28.9473, 0.15", "-66.6365, 60.1943, 29.4735, 0.15", "-66.9991, 59.7864, 29.8328, 0.29", "-67.7488, 58.8959, 30.4566, 1.25", "-68.8857, 57.5262, 31.3044, 0.07", "-69.2664, 57.0548, 31.5751, 0.88", "-69.4674, 56.7917, 31.7252, 1.18", "-70.2646, 55.7787, 32.3006, 0.07", "-70.6694, 55.2923, 32.5899, 0.74", "-71.4183, 54.4557, 33.1952, 0.07", "-71.735, 54.1046, 33.5232, 0.29", "-72.1487, 53.6128, 34.1079, 0.07", "-72.4498, 53.218, 34.7262, 1.03", "-72.6231, 52.972, 35.2469, 1.47", "-72.9544, 52.4691, 36.5676, 0.22", "-73.1562, 52.142, 37.6063, 0.22", "-73.3573, 51.8599, 38.659, 0.22", "-73.5514, 51.6669, 39.4722, 0.22", "-73.6915, 51.5494, 39.9425, 0.22", "-73.9476, 51.3321, 40.5172, 0.22", "-74.1904, 51.1247, 40.9069, 0.22", "-74.6385, 50.7654, 41.4422, 0.22", "-75.2942, 50.1834, 42.1155, 1.03", "-75.8957, 49.5803, 42.717, 1.47", "-76.9674, 48.3706, 43.8285, 0.07", "-77.2486, 48.0474, 44.1149, 1.25", "-77.6651, 47.5817, 44.5211, 1.4", "-78.5188, 46.6493, 45.2981, 0.29", "-79.0853, 46.0692, 45.762, 0.15", "-79.5831, 45.6143, 46.1095, 0.81", "-80.6817, 44.6866, 46.7798, 0.15", "-81.3285, 44.1877, 47.0964, 0.15", "-81.8107, 43.8431, 47.3013, 0.37", "-82.6249, 43.3063, 47.5262, 0.15", "-83.0536, 43.0255, 47.5956, 0.88", "-83.4751, 42.7458, 47.63, 1.55", "-85.1303, 41.6574, 47.687, 0.22", "-85.5605, 41.389, 47.7038, 0.22", "-86.6054, 40.7978, 47.7685, 0.81", "-87.9877, 40.0962, 47.8987, 0.07", "-88.5319, 39.8614, 47.9832, 0.74", "-89.3895, 39.5599, 48.1893, 0.22", "-90.3515, 39.2874, 48.5324, 0.37", "-91.0125, 39.1288, 48.8321, 0.22", "-92.0715, 38.903, 49.4461, 1.03", "-93.1851, 38.646, 50.2468, 0.07", "-94.0147, 38.4201, 50.963, 0.88", "-94.7009, 38.193, 51.6251, 1.25", "-95.9274, 37.6707, 52.8241, 0.15", "-96.5125, 37.3644, 53.3827, 0.74", "-97.6074, 36.6799, 54.357, 0.22", "-98.6334, 35.943, 55.1604, 1.11", "-99.2578, 35.471, 55.5745, 2.06", "-100.812, 34.2922, 56.4376, 0.15", "-101.395, 33.8575, 56.713, 0.29", "-102.691, 32.9563, 57.2381, 0.07", "-103.323, 32.5769, 57.4616, 0.22", "-104.528, 31.9695, 57.8925, 0.07", "-105.205, 31.7113, 58.1793, 1.4", "-106.786, 31.2784, 58.9608, 0.07", "-107.568, 31.1058, 59.3719, 0.81", "-108.889, 30.9055, 60.1363, 0.07", "-109.709, 30.828, 60.652, 0.96", "-111.242, 30.774, 61.6423, 0.07", "-111.816, 30.7763, 62.0053, 0.07", "-112.554, 30.7956, 62.457, 1.25", "-114.223, 30.8327, 63.4112, 0.22", "-115.356, 30.8302, 64.0011, 0.88", "-116.092, 30.8367, 64.3229, 1.18", "-118.209, 30.8683, 65.0821, 0.15", "-118.86, 30.8718, 65.2736, 0.81", "-119.876, 30.8588, 65.5028, 0.15", "-120.829, 30.8227, 65.6319, 1.18", "-122.336, 30.7952, 65.7429, 0.07", "-122.98, 30.8106, 65.7607, 0.07", "-123.862, 30.9264, 65.6895, 0.07", "-124.316, 31.0182, 65.6229, 0.88", "-124.985, 31.1801, 65.5034, 1.33", "-126.794, 31.7199, 65.1061, 0.07", "-127.631, 32.0107, 64.8825, 1.33", "-129.651, 32.8496, 64.2716, 0.07", "-129.988, 33.0121, 64.1557, 0.15" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-59.7542, 64.3702, 21.9768, 0.15", "-59.3242, 62.6773, 22.2118, 0.15", "-59.1234, 61.9669, 22.2628, 0.29", "-58.8003, 60.8999, 22.3217, 0.15", "-58.6626, 60.4861, 22.3358, 0.52", "-58.3725, 59.6539, 22.3593, 1.33", "-57.8372, 58.0476, 22.4162, 0.07", "-57.5609, 57.1796, 22.4117, 0.07", "-57.3412, 56.4408, 22.4364, 0.37", "-56.9873, 55.22, 22.6323, 0.07", "-56.8873, 54.8569, 22.7401, 0.15", "-56.4974, 53.2305, 23.429, 0.15", "-56.4155, 52.8536, 23.6419, 0.74", "-56.2693, 52.0225, 24.1768, 1.25", "-56.0264, 50.0041, 25.6045, 0.15", "-55.9421, 48.8209, 26.5037, 0.15", "-55.915, 48.289, 26.9142, 0.15", "-55.8964, 47.6235, 27.4123, 0.15", "-55.8913, 46.7559, 27.9932, 1.25", "-55.9454, 45.2067, 28.8506, 0.07", "-55.9977, 44.5522, 29.137, 0.96", "-56.0531, 43.9651, 29.3452, 1.25", "-56.2309, 41.9756, 29.9723, 0.15", "-56.293, 41.1431, 30.1978, 0.96", "-56.367, 39.538, 30.5735, 0.07", "-56.3809, 38.7616, 30.7249, 0.29", "-56.3873, 36.462, 31.0977, 0.07", "-56.3828, 35.9498, 31.1689, 0.29", "-56.3391, 34.3402, 31.3544, 0.07", "-56.2936, 33.5991, 31.4364, 1.03", "-56.2225, 32.8791, 31.5234, 1.47", "-55.88, 30.3084, 31.8892, 0.07", "-55.7768, 29.7167, 31.993, 0.59", "-55.6219, 28.8943, 32.1609, 0.07", "-55.4851, 28.1244, 32.3551, 0.07", "-55.3137, 27.0934, 32.6542, 0.07", "-55.1976, 26.1824, 32.9522, 1.18", "-54.9737, 23.8384, 33.7953, 0.07", "-54.9461, 23.1628, 34.0345, 0.74", "-54.9605, 21.3641, 34.6525, 0.07", "-54.9909, 20.8507, 34.8183, 0.44", "-55.1798, 19.1055, 35.3784, 0.07", "-55.3219, 18.2162, 35.6659, 1.47", "-55.7, 16.3952, 36.2517, 0.07", "-55.832, 15.8309, 36.4217, 0.37", "-56.1227, 14.6994, 36.7286, 0.07", "-56.5453, 13.1968, 37.1547, 0.07", "-56.8328, 12.2302, 37.4358, 0.07", "-56.9766, 11.7293, 37.5977, 0.37", "-57.3058, 10.4996, 38.035, 0.15", "-57.5053, 9.74312, 38.3381, 0.81", "-57.8336, 8.44631, 38.9145, 0.15", "-58.0857, 7.39339, 39.4327, 1.55", "-58.4915, 5.69135, 40.3615, 0.07", "-58.6135, 5.19192, 40.6741, 0.66", "-58.9096, 3.86296, 41.6388, 0.07", "-58.9753, 3.40096, 42.0116, 0.29", "-59.0122, 2.72504, 42.606, 0.07", "-59.031, 2.31284, 43.0015, 0.74", "-59.0609, 1.27212, 44.0696, 0.15", "-59.0286, 0.377764, 45.0116, 1.18", "-58.7381, -1.37104, 46.9129, 0.15", "-58.6016, -1.95539, 47.5528, 0.66" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-79.7088, 95.7544, 98.3144, 0.07", "-80.6716, 94.9615, 97.3347, 0.07", "-81.0143, 94.5976, 96.9699, 0.07", "-81.3634, 94.2269, 96.5982, 0.22", "-82.0225, 93.5272, 95.8965, 0.07", "-82.2906, 93.2425, 95.6111, 0.52", "-82.7422, 92.7629, 95.1302, 0.07", "-82.9223, 92.474, 94.946, 0.22" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-79.7088, 95.7544, 98.3144, 0.29", "-80.6735, 95.8541, 99.6725, 0.29", "-81.4127, 95.8229, 100.636, 0.29", "-82.3116, 95.7303, 101.664, 0.59", "-83.559, 95.6105, 102.988, 0.74", "-84.1763, 95.577, 103.608, 1.03", "-84.9132, 95.6041, 104.326, 1.03", "-85.8723, 95.7088, 105.221, 0.15", "-86.6139, 95.9069, 105.888, 0.44", "-87.5516, 96.2471, 106.696, 0.81", "-88.1657, 96.5651, 107.186, 1.03", "-89.2649, 97.2892, 108.068, 0.15", "-90.2072, 98.0749, 108.853, 0.74", "-91.0808, 99.0403, 109.695, 0.37" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "7.27063, 11.337, 16.6124, 0.22", "7.42196, 9.49638, 14.743, 0.22", "7.5298, 8.66898, 14.0426, 0.37", "7.62535, 8.16566, 13.6554, 0.59", "7.80199, 7.23514, 12.9395, 0.22", "7.99446, 6.22129, 12.1596, 1.47", "8.19065, 5.18782, 11.3645, 0.29", "8.44101, 4.18575, 10.84, 0.15", "8.71387, 3.24428, 10.4249, 1.03", "9.24686, -4.52343, 4.17229, 1.03" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "7.27063, 11.337, 16.6124, 0.22", "7.73263, 10.4193, 17.1448, 0.22", "8.11154, 9.5212, 17.57, 1.4", "8.57765, 7.99278, 18.1304, 2.65", "9.43173, 4.04275, 19.3262, 0.22", "9.55786, 3.23971, 19.5268, 0.22", "9.69781, 1.988, 19.7876, 0.96", "9.7365, 0.438401, 20.0044, 2.06", "9.60398, -2.07288, 20.1832, 0.22", "9.39871, -3.50242, 20.132, 0.15", "9.17324, -4.60637, 19.9582, 0.29", "8.90561, -5.74137, 19.7563, 0.15", "8.6558, -6.93851, 19.5185, 1.18", "8.53577, -7.64984, 19.3649, 1.7", "8.14907, -10.7484, 18.6686, 0.22", "8.04922, -12.0022, 18.3956, 0.81", "8.02017, -12.8218, 18.2365, 1.4", "8.04622, -15.6238, 17.7671, 0.15", "8.11329, -16.3529, 17.6806, 0.15", "8.38896, -17.8087, 17.5795, 0.15", "8.63993, -18.751, 17.5637, 0.37", "8.87636, -19.6898, 17.5632, 1.33", "9.09859, -20.7982, 17.5649, 1.84", "9.38966, -24.3808, 17.5777, 0.22", "9.35256, -26.3196, 17.5558, 0.07", "9.31616, -27.1401, 17.5442, 0.96", "9.14124, -28.891, 17.5153, 0.22", "8.88879, -30.236, 17.4729, 1.33", "8.09074, -32.5542, 17.3479, 0.22", "7.25097, -33.73, 17.232, 1.18" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-7.58976, 48.2811, 52.6554, 0.44", "-9.15346, 47.9765, 53.1965, 0.44", "-10.3896, 47.8917, 53.4889, 0.44", "-11.6355, 47.9191, 53.7696, 0.44", "-12.1847, 47.9521, 53.9049, 0.44", "-13.0684, 48.012, 54.1218, 0.96", "-13.6246, 48.0482, 54.2514, 1.18", "-15.1056, 48.1272, 54.4744, 0.15", "-15.8412, 48.2039, 54.6104, 0.15", "-16.5275, 48.2804, 54.7927, 0.15", "-17.5613, 48.3421, 55.1192, 0.15", "-18.1367, 48.3087, 55.3076, 1.33", "-19.3193, 48.1163, 55.6774, 1.92", "-21.3871, 47.5841, 56.2797, 0.22", "-22.716, 47.1357, 56.6116, 0.59", "-23.4099, 46.8245, 56.7948, 1.03", "-25.0304, 45.902, 57.2907, 0.15", "-25.9134, 45.2825, 57.6111, 0.15", "-26.3151, 44.9264, 57.7751, 0.88", "-27.0637, 44.0653, 58.0949, 1.92", "-28.5548, 42.0519, 58.7885, 0.22", "-28.9417, 41.5102, 58.9968, 0.22", "-29.3878, 40.7968, 59.2471, 0.22", "-29.6425, 40.3907, 59.3825, 0.22", "-30.3071, 39.428, 59.6792, 0.22", "-30.867, 38.7143, 59.8771, 1.11", "-31.8074, 37.6958, 60.0966, 2.58", "-33.5782, 35.9738, 60.4338, 0.52", "-34.9655, 34.6727, 60.719, 0.15", "-35.5521, 34.1338, 60.8646, 0.15", "-36.383, 33.4089, 61.112, 0.29", "-37.1728, 32.7562, 61.3712, 0.96", "-38.4367, 31.7176, 61.8124, 0.22", "-39.2865, 31.0806, 62.1412, 0.22", "-40.0479, 30.4527, 62.4334, 0.44", "-40.8425, 29.7288, 62.7817, 1.62", "-41.5854, 29.0188, 63.1561, 1.99" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-7.58976, 48.2811, 52.6554, 1.47", "-6.70173, 48.5356, 53.794, 1.47" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-23.9488, -170.047, 41.1288, 0.22", "-24.2137, -169.217, 41.5496, 0.22", "-24.4934, -168.268, 41.9991, 0.22", "-24.6769, -167.512, 42.3357, 0.22", "-24.8443, -166.657, 42.692, 0.66", "-24.9549, -166.012, 42.9655, 0.81", "-25.1035, -164.794, 43.4849, 0.15", "-25.1323, -164.057, 43.7747, 1.18", "-25.1236, -163.331, 44.0448, 1.4", "-25.0317, -161.739, 44.6257, 0.15", "-24.9671, -161.187, 44.831, 0.15", "-24.7666, -160.097, 45.2714, 1.7", "-24.4946, -159.115, 45.6851, 0.22", "-24.2391, -158.362, 46.0063, 0.88", "-24.0132, -157.766, 46.2614, 0.22", "-23.7527, -157.14, 46.5177, 0.07", "-23.4562, -156.37, 46.8043, 0.07", "-23.0882, -155.3, 47.1836, 0.66", "-22.7526, -154.181, 47.554, 0.07", "-22.6463, -153.751, 47.6893, 0.37", "-22.534, -153.181, 47.8541, 0.66", "-22.2838, -151.385, 48.3467, 0.07", "-22.2109, -150.606, 48.5577, 1.03", "-22.1558, -149.162, 48.9432, 0.15", "-22.1655, -148.525, 49.1134, 0.88", "-22.1958, -147.981, 49.2562, 1.18", "-22.3981, -146.229, 49.6998, 0.15", "-22.52, -145.659, 49.8254, 0.15", "-22.7181, -145.038, 49.9272, 0.22", "-22.9319, -144.587, 49.9581, 0.07", "-23.2374, -144.06, 49.9348, 0.29", "-23.5591, -143.579, 49.8652, 0.07", "-23.8399, -143.192, 49.7646, 0.59", "-24.3079, -142.57, 49.5655, 0.15", "-24.9185, -141.771, 49.2818, 1.62", "-25.5329, -140.963, 48.9868, 0.15", "-25.9706, -140.395, 48.7844, 0.29", "-26.6777, -139.469, 48.4644, 0.07", "-27.2199, -138.709, 48.2587, 0.07", "-27.5123, -138.271, 48.1697, 0.66", "-28.0234, -137.483, 48.0374, 0.15", "-28.4128, -136.884, 47.9532, 1.03", "-28.8857, -136.191, 47.8779, 1.62", "-30.2674, -134.27, 47.7879, 0.07", "-30.8912, -133.411, 47.785, 0.59", "-31.3461, -132.8, 47.7986, 0.15", "-31.9316, -132.014, 47.8312, 0.88", "-32.7565, -130.855, 47.9166, 0.15", "-33.5263, -129.802, 48.021, 0.15", "-34.1546, -128.975, 48.1274, 1.33", "-34.9432, -127.922, 48.2933, 0.15", "-35.5565, -127.041, 48.4639, 0.15", "-36.0173, -126.265, 48.6297, 1.33" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-23.9488, -170.047, 41.1288, 0.15", "-24.4277, -171.847, 41.1316, 0.15", "-24.9505, -172.908, 41.1549, 0.15", "-25.4737, -173.646, 41.1947, 0.15", "-25.969, -174.237, 41.2134, 0.74", "-26.7905, -175.171, 41.2278, 0.15", "-27.4163, -175.903, 41.2473, 1.4", "-28.5584, -177.07, 41.363, 0.15", "-29.6784, -178.174, 41.507, 0.66", "-30.6026, -179.107, 41.7689, 0.07", "-31.0528, -179.55, 41.998, 0.07", "-31.6005, -180.111, 42.3314, 0.29", "-32.495, -181.061, 42.9967, 0.07", "-33.1512, -181.82, 43.635, 1.25", "-34.3315, -183.237, 45.0585, 0.29", "-35.63, -184.71, 46.8288, 1.62" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-72.9762, -130.514, -1.10818, 0.59", "-74.0669, -130.348, -2.13461, 0.59", "-74.3897, -130.281, -2.482, 0.07", "-74.8061, -130.187, -3.01653, 0.07", "-75.0815, -130.12, -3.4117, 0.37", "-75.5243, -129.994, -4.11624, 0.07", "-75.8416, -129.884, -4.70229, 0.15", "-76.2194, -129.746, -5.61055, 1.62", "-76.5101, -129.525, -6.89715, 0.22", "-76.5349, -129.423, -7.49617, 0.22", "-76.5089, -129.336, -8.02184, 0.59", "-76.3764, -129.21, -8.78029, 0.59", "-76.1304, -129.095, -9.56097, 0.59", "-75.6061, -128.998, -10.5016, 1.18", "-75.2179, -128.964, -10.9416, 1.18", "-76.5705, -127.629, -18.8069, 1.18" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-72.9762, -130.514, -1.10818, 0.22", "-74.2311, -131.328, -1.64448, 0.22", "-74.9257, -131.763, -1.95471, 0.15", "-75.9417, -132.32, -2.48109, 0.15", "-76.8283, -132.769, -2.99343, 1.25", "-77.8479, -133.243, -3.58472, 0.15", "-78.7249, -133.616, -4.07267, 0.15", "-79.9437, -134.066, -4.74343, 1.62", "-81.3044, -134.535, -5.43547, 0.22", "-82.1403, -134.843, -5.84927, 0.22", "-83.1228, -135.217, -6.33799, 1.33", "-84.0926, -135.578, -6.80152, 1.11", "-85.7372, -136.163, -7.53135, 0.15", "-86.3203, -136.378, -7.75671, 0.15", "-87.6433, -136.918, -8.15261, 0.15", "-88.4094, -137.245, -8.3103, 0.15", "-89.1988, -137.595, -8.36159, 0.66", "-90.3391, -138.026, -8.15374, 0.07", "-91.0474, -138.205, -7.81145, 0.88", "-92.0169, -138.295, -7.15161, 0.15", "-93.0063, -138.238, -6.36741, 0.59", "-94.2271, -137.99, -5.26934, 1.4", "-95.8246, -137.401, -3.78131, 0.22", "-96.9479, -136.792, -2.69604, 1.25", "-98.281, -135.858, -1.36547, 0.44", "-98.9829, -135.243, -0.668346, 0.52", "-99.7702, -134.4, 0.144829, 1.11", "-100.617, -133.315, 1.10152, 0.37", "-101.535, -131.997, 2.27707, 0.07", "-102.036, -131.274, 2.97614, 0.07", "-102.372, -130.767, 3.52602, 0.22", "-102.803, -130.086, 4.3722, 0.96", "-103.171, -129.461, 5.22861, 2.06", "-103.82, -128.13, 7.28685, 0.22", "-104.177, -127.273, 8.81789, 0.74", "-104.384, -126.785, 9.91434, 0.74", "-104.561, -126.394, 11.1283, 0.74", "-104.608, -126.289, 11.6695, 0.74", "-104.624, -126.174, 12.9762, 0.74", "-104.477, -126.15, 14.3475, 0.74", "-104.361, -126.135, 15.1584, 0.74", "-104.296, -126.072, 15.6203, 0.74", "-104.124, -125.693, 16.6737, 0.74", "-103.888, -125.153, 17.5187, 0.74", "-103.403, -124.06, 18.8047, 0.29", "-103.123, -123.416, 19.4424, 0.29", "-102.701, -122.498, 20.2631, 0.07", "-102.416, -121.932, 20.7403, 0.44", "-101.65, -120.522, 21.8528, 0.07", "-101.188, -119.761, 22.4488, 0.07", "-100.717, -119.035, 23.0287, 0.07", "-100.43, -118.625, 23.3732, 0.29", "-99.8899, -117.877, 23.9896, 0.07", "-99.452, -117.258, 24.5412, 0.37", "-98.9518, -116.601, 25.1915, 0.22", "-98.7462, -116.368, 25.4857, 0.81", "-98.3835, -115.998, 26.1413, 0.37", "-97.9258, -115.567, 27.3195, 0.88", "-97.4591, -115.135, 28.7819, 0.88", "-97.3028, -114.993, 29.3992, 0.88", "-97.0683, -114.778, 30.6327, 0.88", "-96.8873, -114.653, 31.7344, 0.88", "-96.6537, -114.625, 33.3864, 0.88" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "7.25097, -33.73, 17.232, 0.29", "7.27088, -35.7625, 17.9505, 0.29", "7.30813, -36.7823, 18.3095, 0.15", "7.36927, -37.7675, 18.6483, 1.03", "7.50387, -39.6171, 19.265, 0.15", "7.59467, -40.8645, 19.6809, 1.4", "7.80141, -43.7053, 20.628, 0.07", "7.82874, -44.1352, 20.7724, 0.81", "7.95641, -45.6083, 21.2329, 0.07", "8.09143, -46.6632, 21.5576, 1.62" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "7.25097, -33.73, 17.232, 1.92", "7.01213, -34.153, 17.6351, 1.92", "6.75751, -34.5758, 18.0443, 2.06", "6.13227, -35.4825, 18.9605, 0.22", "5.92201, -35.7685, 19.2648, 0.66", "5.59667, -36.1289, 19.6714, 0.22", "5.341, -36.3658, 19.9445, 0.96", "5.18122, -36.5, 20.1072, 1.47", "4.49687, -36.9914, 20.739, 0.52", "4.07168, -37.215, 21.0726, 0.66", "3.17943, -37.6516, 21.7094, 0.15", "2.67837, -37.9036, 22.0504, 0.37" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-41.5854, 29.0188, 63.1561, 0.07", "-43.4565, 29.1703, 63.0453, 0.07", "-44.3252, 29.2407, 62.9939, 0.96", "-45.4906, 29.3351, 62.9249, 0.07", "-46.106, 29.3849, 62.8885, 0.29", "-47.1285, 29.4678, 62.828, 0.07", "-48.2379, 29.5576, 62.7623, 0.07" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-41.5854, 29.0188, 63.1561, 0.44", "-41.7902, 27.958, 64.0366, 0.44", "-41.8911, 27.1061, 64.8693, 0.96", "-41.9368, 26.5159, 65.5186, 0.66", "-41.9815, 25.9021, 66.2063, 0.15", "-42.0375, 25.5513, 66.5465, 0.15", "-42.1375, 25.0142, 67.024, 0.29", "-42.2795, 24.2368, 67.6697, 0.29", "-42.3802, 23.7327, 68.025, 0.74", "-42.4842, 23.0504, 68.4542, 1.62", "-42.6483, 21.3313, 69.4427, 0.22", "-42.7058, 20.6516, 69.7966, 1.18", "-42.7456, 20.2717, 69.9722, 1.55", "-42.8464, 19.2456, 70.4042, 0.29", "-42.9116, 18.3318, 70.7984, 0.22", "-42.9254, 17.3315, 71.2919, 0.22", "-42.8712, 16.66, 71.7016, 0.22", "-42.8389, 16.0561, 72.1139, 0.52", "-42.8238, 15.8278, 72.3048, 0.52", "-42.7917, 15.3953, 72.7556, 0.52", "-42.7696, 15.0922, 73.0799, 0.52", "-42.72, 14.7205, 73.4387, 0.52", "-42.61, 14.0925, 74.0091, 0.15", "-42.5227, 13.687, 74.3603, 0.15", "-42.4506, 13.3743, 74.6155, 0.44", "-42.3222, 12.8525, 75.0249, 1.11", "-42.047, 11.8721, 75.7161, 0.15", "-41.9326, 11.4786, 75.9649, 0.15", "-41.6949, 10.6363, 76.4699, 0.22", "-41.4956, 9.96732, 76.8585, 1.25", "-41.2769, 9.34756, 77.2431, 1.99", "-40.6899, 8.01611, 78.15, 0.15", "-40.397, 7.49416, 78.5135, 1.03", "-40.0541, 6.99536, 78.8832, 1.03", "-39.2653, 6.20764, 79.5655, 0.15", "-38.6279, 5.76392, 80.0293, 0.15", "-38.0165, 5.46798, 80.4037, 0.15", "-37.272, 5.23604, 80.7881, 0.81", "-36.4973, 5.0113, 81.1344, 1.33", "-34.9496, 4.5031, 81.7231, 0.15", "-34.4564, 4.2656, 81.8901, 1.25", "-33.5972, 3.67063, 82.1595, 0.29", "-32.7739, 2.88185, 82.3976, 0.22", "-32.237, 2.20589, 82.5323, 0.15", "-31.7173, 1.34936, 82.6058, 1.77", "-30.8472, -0.474431, 82.5896, 0.07", "-30.6127, -1.03304, 82.557, 0.81", "-30.2474, -2.04952, 82.4644, 0.07", "-29.9742, -2.91797, 82.369, 0.96", "-29.7231, -3.72896, 82.2591, 2.06", "-29.102, -5.60996, 81.9864, 0.07", "-28.7778, -6.50325, 81.8604, 0.22", "-28.4152, -7.54018, 81.7581, 0.15", "-28.1325, -8.39661, 81.7133, 1.47", "-27.8539, -9.34868, 81.6836, 0.66", "-27.617, -10.32, 81.6563, 0.66", "-27.4956, -10.9419, 81.6484, 1.77", "-27.258, -12.2738, 81.6339, 0.07", "-27.2068, -12.6513, 81.6315, 0.22", "-27.1325, -13.4871, 81.6298, 0.22", "-27.1109, -14.2012, 81.6326, 1.55", "-27.1466, -15.6417, 81.6119, 0.15", "-27.1827, -16.285, 81.5769, 0.59", "-27.2253, -17.0809, 81.4973, 0.15", "-27.2532, -17.7392, 81.4179, 0.15", "-27.2727, -18.3373, 81.3376, 0.74", "-27.2915, -19.0655, 81.2164, 1.25", "-27.3768, -20.3962, 80.9707, 0.07", "-27.4329, -21.1276, 80.8358, 0.15", "-27.4905, -21.7612, 80.7445, 0.74", "-27.5626, -22.3294, 80.6915, 1.4", "-27.7159, -23.2868, 80.656, 0.15", "-27.9168, -24.1827, 80.7075, 0.07", "-28.0543, -24.6042, 80.7765, 0.29", "-28.5258, -25.665, 81.0006, 0.07", "-28.7906, -26.1917, 81.1301, 0.88", "-28.9809, -26.5285, 81.221, 1.33", "-29.6027, -27.5055, 81.5144, 0.22", "-30.017, -28.1443, 81.711, 0.22", "-30.4235, -28.7304, 81.8974, 1.33" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-6.70173, 48.5356, 53.794, 0.15", "-6.14501, 49.9809, 54.9149, 0.15", "-5.99494, 50.5074, 55.3424, 0.22", "-5.8349, 51.3867, 56.0876, 0.15", "-5.7685, 51.9311, 56.5422, 0.96", "-5.70054, 52.6883, 57.1566, 0.29", "-5.64279, 53.2703, 57.6317, 0.29", "-5.62816, 53.9484, 58.2022, 0.29", "-5.57578, 54.5967, 58.7441, 0.29", "-5.48486, 55.2006, 59.2479, 1.25", "-5.43482, 55.429, 59.445, 1.25", "-5.08323, 56.6736, 60.5828, 0.15", "-4.73388, 57.5473, 61.4413, 1.33", "-4.14605, 58.6892, 62.6463, 0.07", "-3.782, 59.25, 63.3133, 0.59", "-3.25256, 59.9534, 64.2423, 0.15", "-2.76994, 60.5554, 65.0739, 1.11", "-2.35863, 61.1174, 65.7729, 2.14", "-2.14323, 61.4546, 66.1344, 1.84", "-1.5597, 62.8193, 67.2218, 0.15", "-1.32708, 63.7129, 67.7079, 1.4", "-1.22224, 64.5078, 68.0084, 0.96", "-1.13651, 66.6643, 68.6842, 0.15", "-1.16976, 67.5683, 68.9408, 0.96", "-1.39305, 69.4325, 69.4777, 0.15", "-1.52344, 70.0622, 69.6667, 1.18", "-1.83099, 71.2473, 70.116, 0.15", "-2.1681, 72.3759, 70.7127, 0.59", "-2.28991, 72.7364, 70.977, 0.88", "-2.69735, 73.9222, 72.028, 0.22", "-2.94195, 74.6791, 72.8131, 0.88", "-3.14206, 75.3176, 73.5115, 1.77", "-3.45429, 76.508, 74.8322, 0.29", "-3.54943, 77.0761, 75.4803, 0.81", "-3.63726, 78.0822, 76.6585, 0.22", "-3.63705, 78.7934, 77.5085, 0.37", "-3.61089, 79.163, 77.9571, 0.37", "-3.49054, 80.042, 79.0386, 1.55", "-3.23358, 81.169, 80.4317, 0.07", "-2.97377, 82.0444, 81.4881, 0.22", "-2.76744, 82.6291, 82.1744, 0.22", "-2.57327, 83.151, 82.7705, 0.22", "-2.33646, 83.7852, 83.4576, 0.07", "-2.12572, 84.3706, 84.0397, 1.11", "-1.99553, 84.7111, 84.3476, 1.4", "-1.48557, 85.86, 85.3574, 0.07", "-1.15888, 86.5681, 85.9729, 0.74", "-0.966402, 87.025, 86.35, 0.74", "-0.664566, 87.8043, 86.9703, 0.22", "-0.313771, 88.7334, 87.6943, 0.22", "-0.0763325, 89.3492, 88.1679, 0.96", "0.0862072, 89.7702, 88.4829, 0.96", "0.681432, 91.3922, 89.6392, 0.15", "0.99409, 92.3015, 90.2691, 0.15", "1.1237, 92.7158, 90.5366, 0.22", "1.4455, 93.9009, 91.2025, 0.07", "1.59321, 94.5252, 91.5299, 0.07", "1.808, 95.5576, 92.0234, 0.96", "1.96767, 96.4141, 92.3963, 0.22", "2.12632, 97.3845, 92.7766, 1.25", "2.43698, 99.5268, 93.5713, 0.15", "2.58035, 100.585, 93.9423, 1.33", "2.80531, 102.283, 94.5248, 0.15", "2.86741, 102.816, 94.7078, 0.22", "2.98657, 103.994, 95.1009, 0.15", "3.05712, 104.804, 95.3592, 0.81", "3.06927, 104.953, 95.4028, 0.81" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-6.70173, 48.5356, 53.794, 0.29", "-6.15911, 49.386, 55.2358, 0.29", "-5.6984, 50.2911, 56.6188, 0.52", "-5.4658, 50.8429, 57.3897, 1.25", "-5.06209, 51.9008, 58.777, 0.15", "-4.87683, 52.3945, 59.4064, 0.15", "-4.7433, 52.7747, 59.8859, 0.15", "-4.56575, 53.4549, 60.6304, 0.15", "-4.42234, 53.967, 61.1459, 0.81", "-4.20749, 54.6308, 61.8291, 1.33", "-3.82619, 55.7032, 62.977, 0.22", "-3.59117, 56.2221, 63.5947, 0.22", "-3.27711, 56.7287, 64.2573, 1.11", "-2.99171, 57.098, 64.7843, 1.7", "-2.45104, 57.7683, 65.7546, 0.22", "-2.16812, 58.1017, 66.2535, 0.88", "-1.59596, 58.686, 67.1717, 0.15", "-1.25048, 58.9709, 67.6611, 0.29", "-0.929714, 59.1827, 68.0889, 0.29", "-0.514937, 59.4454, 68.6586, 0.15", "-0.064887, 59.761, 69.3409, 0.15", "0.274894, 60.042, 69.9097, 0.96", "0.673939, 60.3987, 70.6245, 0.66", "1.25261, 60.7477, 71.6082, 0.15", "1.65042, 60.9491, 72.2826, 0.15", "2.17851, 61.2033, 73.2269, 0.81", "2.93216, 61.6031, 74.6815, 2.14", "3.29773, 61.8217, 75.4445, 2.14", "4.33395, 62.5659, 77.698, 0.15", "4.70805, 62.8455, 78.4871, 0.15", "5.28229, 63.2348, 79.623, 0.29", "5.69955, 63.4883, 80.4051, 1.33", "6.05516, 63.7114, 81.0731, 1.62", "6.73003, 64.2194, 82.374, 0.15", "6.92737, 64.4444, 82.8282, 0.15", "7.22607, 64.7907, 83.5523, 0.15", "7.38963, 64.9882, 83.9837, 0.15", "7.5946, 65.2117, 84.5612, 0.29", "7.87608, 65.4906, 85.4883, 0.66", "8.19345, 65.8414, 86.8608, 0.15", "8.32283, 66.068, 87.6449, 0.15", "8.3905, 66.2844, 88.2666, 0.15", "8.42521, 66.6169, 89.0196, 0.66", "8.39531, 67.3766, 90.4855, 0.22", "8.34482, 67.9291, 91.4071, 0.22", "8.30081, 68.4476, 92.2069, 1.33", "8.25159, 69.1005, 93.1593, 1.92", "8.15876, 70.5099, 95.1516, 0.37", "8.10022, 71.3014, 96.2435, 0.22", "8.03234, 72.1737, 97.4247, 0.22", "7.98506, 72.5912, 98.041, 0.22", "7.89349, 72.9173, 98.613, 0.22", "7.74514, 73.1552, 99.1927, 0.22", "7.59407, 73.3073, 99.7467, 0.22", "7.41099, 73.4924, 100.411, 0.52", "6.96446, 74.0171, 101.957, 1.18", "6.55774, 74.5938, 103.451, 1.4", "5.96819, 75.6084, 105.862, 0.81", "5.70755, 76.2332, 107.312, 0.81", "5.54298, 76.9147, 108.946, 1.7", "5.50039, 78.1062, 111.923, 0.29", "5.59608, 78.695, 113.403, 0.29", "5.69785, 79.0236, 114.202, 1.03", "5.95961, 79.7481, 115.886, 0.22", "6.17911, 80.3325, 117.242, 1.11", "6.48852, 80.955, 118.884, 0.29", "6.71032, 81.2886, 119.988, 0.29", "6.80827, 81.4445, 120.605, 0.52", "6.91599, 81.613, 121.66, 0.52", "6.93318, 81.6634, 122.06, 0.52", "6.96586, 81.7014, 122.68, 0.52", "7.1496, 81.6559, 123.704, 0.52", "7.44872, 81.6231, 124.396, 0.52", "8.13303, 81.6518, 125.582, 0.22", "8.79457, 81.7891, 126.57, 0.15", "9.03499, 81.9189, 126.973, 0.15", "9.42808, 82.2743, 127.687, 0.81", "10.0608, 83.0674, 128.935, 0.29", "10.4901, 83.7653, 129.879, 0.81", "10.798, 84.443, 130.646, 1.7", "11.4388, 86.2542, 132.509, 0.22", "11.7175, 87.2877, 133.441, 0.44", "11.7951, 87.8723, 133.853, 0.15", "11.8378, 88.6891, 134.295, 0.88", "11.8485, 90.3726, 134.987, 0.22", "11.8519, 91.1897, 135.263, 0.88", "11.8655, 91.8527, 135.448, 1.47", "11.9312, 94.4235, 136.179, 0.22", "11.9633, 94.9936, 136.347, 0.22", "12.0676, 95.7651, 136.614, 0.37", "12.4534, 97.4043, 137.344, 0.22", "12.6548, 98.0694, 137.711, 0.22", "12.8731, 98.6898, 138.147, 0.96", "13.1005, 99.1767, 138.578, 1.55", "13.8606, 100.593, 139.984, 0.15", "14.4397, 101.501, 140.984, 1.25", "14.9744, 102.296, 141.909, 1.25", "15.613, 103.16, 142.974, 0.74", "16.3858, 104.065, 144.221, 0.15", "16.9133, 104.612, 145.051, 0.29", "17.2882, 104.931, 145.587, 0.29", "17.9924, 105.407, 146.373, 0.29", "18.7447, 105.863, 147.066, 0.81", "19.8411, 106.577, 147.98, 0.15", "20.436, 107.031, 148.486, 1.11", "20.7358, 107.292, 148.745, 1.77", "22.3181, 108.723, 150.091, 0.22", "22.898, 109.219, 150.536, 0.22", "23.6285, 109.872, 151.055, 0.22", "24.2952, 110.46, 151.462, 0.22", "24.6486, 110.788, 151.669, 0.44", "25.3437, 111.476, 152.071, 0.44", "26.236, 112.391, 152.587, 1.55", "27.2146, 113.296, 153.124, 0.66", "28.5284, 114.294, 153.814, 0.15", "29.0555, 114.642, 154.102, 0.15", "29.7081, 115.034, 154.494, 0.37", "30.7228, 115.598, 155.152, 0.15", "31.3892, 115.952, 155.631, 0.81", "32.6173, 116.554, 156.576, 0.22", "33.2524, 116.852, 157.066, 0.22", "33.9319, 117.156, 157.565, 1.25", "34.2596, 117.312, 157.798, 1.25", "35.4695, 117.921, 158.577, 0.07", "36.2665, 118.35, 159.041, 0.96", "37.8689, 119.251, 159.876, 0.22", "38.6703, 119.678, 160.258, 1.03", "39.4856, 120.09, 160.619, 1.77", "41.1315, 120.949, 161.323, 0.15", "42.0472, 121.429, 161.691, 0.22", "43.1283, 122.012, 162.124, 0.15", "43.9124, 122.465, 162.453, 1.03", "44.8983, 123.052, 162.884, 0.22", "46.0276, 123.741, 163.404, 0.22", "47.1927, 124.521, 163.974, 0.15", "47.9835, 125.071, 164.363, 0.15", "48.8116, 125.66, 164.783, 0.81", "49.0888, 125.855, 164.925, 1.77", "50.2764, 126.629, 165.461, 0.07", "51.2018, 127.195, 165.805, 0.59", "53.2101, 128.422, 166.379, 0.22", "53.6479, 128.684, 166.482, 0.59", "54.4945, 129.164, 166.648, 0.66", "56.2054, 130.114, 166.938, 0.07", "56.9059, 130.483, 167.015, 0.07", "57.347, 130.688, 167.03, 0.52" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-48.2379, 29.5576, 62.7623, 0.15", "-49.7811, 30.8874, 63.0042, 0.15", "-50.7283, 32.0354, 62.9455, 0.15", "-51.5967, 33.4474, 62.6726, 0.07", "-51.9322, 34.1767, 62.4326, 0.07", "-52.5529, 35.8434, 61.6974, 0.07", "-52.9573, 37.126, 61.006, 0.07", "-53.023, 37.7327, 60.5522, 0.07", "-52.9685, 38.3147, 60.0278, 0.29", "-52.7461, 39.1322, 59.1784, 0.29", "-52.5741, 39.5986, 58.6458, 0.29", "-52.3991, 40.0222, 58.1391, 0.29", "-52.1592, 40.5465, 57.4752, 0.29", "-51.7581, 41.4808, 56.207, 0.22", "-51.5291, 42.092, 55.2939, 0.22", "-51.2314, 43.0619, 53.7776, 0.88", "-51.0136, 43.8668, 52.4573, 0.22", "-50.9397, 44.22, 51.855, 0.22", "-50.859, 44.7672, 50.8857, 0.15", "-50.826, 45.3939, 49.7954, 0.15", "-50.7922, 46.0268, 48.6898, 0.15", "-50.7387, 46.5958, 47.7099, 0.15", "-50.662, 47.1023, 46.8869, 0.74", "-50.5862, 47.5633, 46.1876, 0.74", "-50.4247, 48.2767, 45.121, 0.15", "-50.173, 49.1202, 43.7896, 0.22", "-50.0428, 49.4632, 43.1847, 0.22", "-49.7629, 49.9798, 42.1487, 0.22", "-49.6145, 50.18, 41.6885, 0.22", "-49.3181, 50.5033, 40.8262, 0.22", "-48.9805, 50.7292, 39.927, 0.22", "-48.7132, 50.8085, 39.2801, 0.22", "-48.3559, 50.843, 38.4634, 0.22", "-48.0142, 50.8544, 37.7436, 0.22", "-47.5354, 50.8962, 36.6384, 0.22", "-46.9548, 50.943, 35.0905, 0.44", "-46.6483, 50.9458, 34.1136, 0.44", "-46.55, 50.9332, 33.7554, 0.44", "-46.2543, 50.8299, 32.6786, 0.44", "-45.8632, 50.6425, 31.547, 0.44" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-48.2379, 29.5576, 62.7623, 1.03", "-48.5584, 29.8286, 62.9496, 1.03", "-49.3411, 30.5493, 63.5388, 0.07", "-49.611, 30.8128, 63.7758, 0.07", "-49.8054, 31.0508, 63.9874, 0.22", "-50.1001, 31.474, 64.3627, 0.07", "-50.3103, 31.8022, 64.6489, 0.37", "-50.6379, 32.3761, 65.1628, 0.15", "-50.8887, 32.882, 65.6283, 1.33", "-51.4537, 34.055, 66.7165, 0.07", "-51.7877, 34.7588, 67.3776, 0.07", "-51.9634, 35.1367, 67.7312, 0.66", "-52.1442, 35.553, 68.1073, 0.66" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-30.4235, -28.7304, 81.8974, 0.07", "-30.5949, -29.9163, 81.9735, 0.07", "-30.7028, -30.6624, 82.0214, 0.37", "-30.8244, -31.5037, 82.0753, 0.22", "-30.9501, -32.3734, 82.1311, 0.88", "-31.0336, -32.9511, 82.1682, 0.44" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-30.4235, -28.7304, 81.8974, 0.07", "-31.2679, -27.1472, 81.3656, 0.07", "-31.6082, -26.5092, 81.1513, 0.44", "-32.0066, -25.7621, 80.9004, 0.15", "-32.4457, -24.9388, 80.6238, 0.74", "-33.0316, -23.8403, 80.2548, 0.07" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_25", "dend_10", "dend_1", "dend_0", "dend_38", "dend_33", "dend_27", "dend_26", "dend_14", "dend_11", "dend_3", "dend_2", "dend_56", "dend_39", "dend_35", "dend_34", "dend_31", "dend_28", "dend_20", "dend_15", "dend_13", "dend_12", "dend_7", "dend_4", "dend_60", "dend_57", "dend_51", "dend_40", "dend_37", "dend_36", "dend_30", "dend_29", "dend_24", "dend_21", "dend_19", "dend_16", "dend_9", "dend_8", "dend_6", "dend_5", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_52", "dend_44", "dend_41", "dend_23", "dend_22", "dend_18", "dend_17", "dend_54", "dend_53", "dend_48", "dend_45", "dend_43", "dend_42", "dend_50", "dend_49", "dend_47", "dend_46" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_32", "dend_25", "dend_10", "dend_1", "dend_0", "dend_38", "dend_33", "dend_27", "dend_26", "dend_14", "dend_11", "dend_3", "dend_2", "dend_56", "dend_39", "dend_35", "dend_34", "dend_31", "dend_28", "dend_20", "dend_15", "dend_13", "dend_12", "dend_7", "dend_4", "dend_60", "dend_57", "dend_51", "dend_40", "dend_37", "dend_36", "dend_30", "dend_29", "dend_24", "dend_21", "dend_19", "dend_16", "dend_9", "dend_8", "dend_6", "dend_5", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_52", "dend_44", "dend_41", "dend_23", "dend_22", "dend_18", "dend_17", "dend_54", "dend_53", "dend_48", "dend_45", "dend_43", "dend_42", "dend_50", "dend_49", "dend_47", "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L4_DBC_99fd24de2c_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_38
create dend_56
public dend_56
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_39
create dend_51
public dend_51
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_55
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_32(0), soma_0(0.49999950122992937)
    connect dend_25(0), soma_0(0.49999950122992937)
    connect dend_10(0), soma_0(0.49999950122992937)
    connect dend_1(0), soma_0(0.49999950122992937)
    connect dend_0(0), soma_0(0.49999950122992937)
    connect axon_0(0), soma_0(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.29752, -10.9202, 0.0, 2.7473 ) }
    soma_0 { pt3dadd( -3.02947, -9.86122, 0.0, 4.90547 ) }
    soma_0 { pt3dadd( -2.76143, -8.80223, 0.0, 7.1195 ) }
    soma_0 { pt3dadd( -2.49339, -7.74324, 0.0, 9.06693 ) }
    soma_0 { pt3dadd( -2.22534, -6.68425, 0.0, 10.5477 ) }
    soma_0 { pt3dadd( -1.9573, -5.62526, 0.0, 11.7638 ) }
    soma_0 { pt3dadd( -1.68926, -4.56627, 0.0, 12.6703 ) }
    soma_0 { pt3dadd( -1.42121, -3.50728, 0.0, 13.5724 ) }
    soma_0 { pt3dadd( -1.15317, -2.44829, 0.0, 13.9606 ) }
    soma_0 { pt3dadd( -0.885125, -1.3893, 0.0, 14.249 ) }
    soma_0 { pt3dadd( -0.617082, -0.330312, 0.0, 14.4914 ) }
    soma_0 { pt3dadd( -0.349039, 0.728678, 0.0, 14.572 ) }
    soma_0 { pt3dadd( -0.0809953, 1.78767, 0.0, 14.5168 ) }
    soma_0 { pt3dadd( 0.187048, 2.84666, 0.0, 14.1167 ) }
    soma_0 { pt3dadd( 0.455092, 3.90565, 0.0, 13.6161 ) }
    soma_0 { pt3dadd( 0.723135, 4.96464, 0.0, 12.8986 ) }
    soma_0 { pt3dadd( 0.991178, 6.02363, 0.0, 12.0703 ) }
    soma_0 { pt3dadd( 1.25922, 7.08262, 0.0, 10.8368 ) }
    soma_0 { pt3dadd( 1.52727, 8.14161, 0.0, 9.27498 ) }
    soma_0 { pt3dadd( 1.79531, 9.2006, 0.0, 7.02436 ) }
    soma_0 { pt3dadd( 2.06335, 10.2596, 0.0, 4.05122 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 21/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 0.851454, 10.3756, 1.7, 1.62 ) }
    dend_32 { pt3dadd( 0.851454, 10.3756, 1.7, 1.62 ) }
    dend_32 { pt3dadd( 0.752109, 12.5171, 1.63555, 0.96 ) }
    dend_32 { pt3dadd( 0.666967, 14.3525, 1.5803, 1.25 ) }
    dend_32 { pt3dadd( 0.548177, 16.9131, 1.50323, 1.55 ) }
    dend_32 { pt3dadd( 0.437001, 19.3097, 1.4311, 1.84 ) }
    dend_32 { pt3dadd( 0.324955, 21.725, 1.35841, 2.14 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 28/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -2.23855, -9.6529, -9.03, 1.18 ) }
    dend_25 { pt3dadd( -1.85484, -9.75169, -9.09742, 1.18 ) }
    dend_25 { pt3dadd( -0.907417, -10.102, -9.27897, 1.18 ) }
    dend_25 { pt3dadd( 0.685098, -10.8822, -9.63029, 1.03 ) }
    dend_25 { pt3dadd( 1.50156, -11.3501, -9.8282, 0.96 ) }
    dend_25 { pt3dadd( 2.20708, -11.669, -9.97182, 0.81 ) }
    dend_25 { pt3dadd( 1.4098, -11.8751, -9.98566, 0.74 ) }
    dend_25 { pt3dadd( 0.826499, -12.2767, -10.1044, 0.74 ) }
    dend_25 { pt3dadd( 0.053575, -12.804, -10.3095, 0.96 ) }
    dend_25 { pt3dadd( -0.890999, -13.3972, -10.5926, 1.18 ) }
    dend_25 { pt3dadd( -2.25581, -14.1681, -11.0439, 0.88 ) }
    dend_25 { pt3dadd( -3.40238, -14.7547, -11.4754, 0.96 ) }
    dend_25 { pt3dadd( -4.59912, -15.3156, -11.9421, 1.25 ) }
    dend_25 { pt3dadd( -5.43254, -15.6901, -12.2926, 1.99 ) }
    dend_25 { pt3dadd( -6.24956, -16.0601, -12.6781, 2.95 ) }
    dend_25 { pt3dadd( -7.04316, -16.4554, -13.1328, 3.54 ) }
    dend_25 { pt3dadd( -7.71306, -16.8406, -13.6237, 3.54 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -1.90855, -11.9489, 1.23, 0.81 ) }
    dend_10 { pt3dadd( -1.75595, -12.8156, 1.19583, 0.81 ) }
    dend_10 { pt3dadd( -1.50533, -13.8768, 1.15414, 0.96 ) }
    dend_10 { pt3dadd( -1.21118, -14.9366, 1.11446, 1.18 ) }
    dend_10 { pt3dadd( -0.894014, -15.9627, 1.07832, 1.18 ) }
    dend_10 { pt3dadd( -0.515844, -17.1001, 1.07434, 0.81 ) }
    dend_10 { pt3dadd( -0.273513, -17.7951, 1.09652, 1.03 ) }
    dend_10 { pt3dadd( 0.095524, -18.7688, 1.19393, 1.47 ) }
    dend_10 { pt3dadd( 0.352775, -19.4662, 1.31949, 2.06 ) }
    dend_10 { pt3dadd( 0.554119, -20.0951, 1.48092, 2.14 ) }
    dend_10 { pt3dadd( 0.823236, -21.2644, 1.86198, 1.33 ) }
    dend_10 { pt3dadd( 0.981, -22.7617, 2.4245, 0.96 ) }
    dend_10 { pt3dadd( 0.9276, -24.095, 2.95802, 0.96 ) }
    dend_10 { pt3dadd( 0.723681, -25.0476, 3.34927, 1.18 ) }
    dend_10 { pt3dadd( 0.476627, -25.7517, 3.64288, 1.99 ) }
    dend_10 { pt3dadd( 0.081616, -26.6209, 3.99964, 2.88 ) }
    dend_10 { pt3dadd( -0.440855, -27.6081, 4.37986, 3.02 ) }
    dend_10 { pt3dadd( -1.17308, -28.9347, 4.84891, 1.77 ) }
    dend_10 { pt3dadd( -2.17356, -30.8898, 5.44899, 0.81 ) }
    dend_10 { pt3dadd( -2.66742, -32.0294, 5.75825, 0.81 ) }
    dend_10 { pt3dadd( -2.93449, -32.8398, 5.94845, 0.81 ) }
    dend_10 { pt3dadd( -3.14674, -33.8245, 6.15608, 0.81 ) }
    dend_10 { pt3dadd( -3.27245, -34.8979, 6.37833, 0.81 ) }
    dend_10 { pt3dadd( -3.30054, -35.7994, 6.55901, 1.03 ) }
    dend_10 { pt3dadd( -3.28462, -36.6896, 6.72685, 1.25 ) }
    dend_10 { pt3dadd( -3.20845, -38.3491, 7.02516, 0.81 ) }
    dend_10 { pt3dadd( -3.14225, -39.6718, 7.27426, 1.03 ) }
    dend_10 { pt3dadd( -3.10894, -40.7279, 7.494, 1.62 ) }
    dend_10 { pt3dadd( -3.1226, -41.599, 7.70013, 2.73 ) }
    dend_10 { pt3dadd( -3.21019, -42.8273, 8.02424, 4.06 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 75/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.51145, 6.49085, 5.69, 0.59 ) }
    dend_1 { pt3dadd( 7.38033, 6.97736, 5.50849, 0.44 ) }
    dend_1 { pt3dadd( 8.22699, 7.50592, 5.58671, 0.44 ) }
    dend_1 { pt3dadd( 8.93498, 7.97079, 5.8438, 0.44 ) }
    dend_1 { pt3dadd( 9.6933, 8.46644, 6.26601, 0.37 ) }
    dend_1 { pt3dadd( 10.2594, 8.81847, 6.64637, 1.03 ) }
    dend_1 { pt3dadd( 11.149, 9.34344, 7.32837, 1.33 ) }
    dend_1 { pt3dadd( 12.0883, 9.87502, 8.2645, 1.47 ) }
    dend_1 { pt3dadd( 12.7328, 10.2082, 9.04065, 1.25 ) }
    dend_1 { pt3dadd( 13.4343, 10.4818, 9.99847, 0.29 ) }
    dend_1 { pt3dadd( 13.8858, 10.5644, 10.662, 0.22 ) }
    dend_1 { pt3dadd( 14.2337, 10.5541, 11.1465, 0.22 ) }
    dend_1 { pt3dadd( 14.456, 10.4748, 11.4005, 0.22 ) }
    dend_1 { pt3dadd( 14.7209, 10.3491, 11.6717, 0.22 ) }
    dend_1 { pt3dadd( 15.1341, 10.1628, 12.0746, 1.03 ) }
    dend_1 { pt3dadd( 16.0112, 9.83502, 12.9556, 2.21 ) }
    dend_1 { pt3dadd( 16.4971, 9.75312, 13.4513, 3.02 ) }
    dend_1 { pt3dadd( 18.0329, 9.90802, 15.053, 0.29 ) }
    dend_1 { pt3dadd( 18.7394, 10.1928, 15.8314, 0.29 ) }
    dend_1 { pt3dadd( 19.137, 10.467, 16.2827, 0.44 ) }
    dend_1 { pt3dadd( 19.5237, 10.8415, 16.7413, 0.66 ) }
    dend_1 { pt3dadd( 20.1196, 11.5874, 17.4727, 1.11 ) }
    dend_1 { pt3dadd( 20.6661, 12.3633, 18.1732, 0.52 ) }
    dend_1 { pt3dadd( 21.1008, 13.0412, 18.6886, 0.22 ) }
    dend_1 { pt3dadd( 21.3792, 13.3425, 18.9737, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 21.6525, 13.4388, 19.2297, 0.22 ) }
    dend_1 { pt3dadd( 21.9189, 13.3332, 19.4578, 0.22 ) }
    dend_1 { pt3dadd( 22.5292, 12.9302, 19.9531, 0.66 ) }
    dend_1 { pt3dadd( 23.1462, 12.4863, 20.427, 1.7 ) }
    dend_1 { pt3dadd( 23.7582, 12.0481, 20.9145, 2.21 ) }
    dend_1 { pt3dadd( 24.3359, 11.6809, 21.4198, 1.7 ) }
    dend_1 { pt3dadd( 25.1317, 11.3334, 22.23, 0.29 ) }
    dend_1 { pt3dadd( 25.8635, 11.2268, 23.1509, 0.22 ) }
    dend_1 { pt3dadd( 26.1611, 11.3113, 23.6334, 0.22 ) }
    dend_1 { pt3dadd( 26.4582, 11.6152, 24.3893, 0.22 ) }
    dend_1 { pt3dadd( 26.622, 12.0616, 25.2173, 0.96 ) }
    dend_1 { pt3dadd( 26.699, 12.863, 26.5164, 0.74 ) }
    dend_1 { pt3dadd( 26.6573, 13.434, 27.4208, 0.74 ) }
    dend_1 { pt3dadd( 26.5972, 13.75, 27.9589, 0.74 ) }
    dend_1 { pt3dadd( 26.5345, 14.1752, 28.8433, 0.74 ) }
    dend_1 { pt3dadd( 26.5606, 14.4173, 29.4282, 0.74 ) }
    dend_1 { pt3dadd( 26.6224, 14.4771, 29.6331, 0.74 ) }
    dend_1 { pt3dadd( 27.0684, 14.6026, 30.2972, 0.74 ) }
    dend_1 { pt3dadd( 27.537, 14.6987, 30.8266, 1.18 ) }
    dend_1 { pt3dadd( 28.3613, 14.8474, 31.6776, 0.44 ) }
    dend_1 { pt3dadd( 29.1126, 14.986, 32.3734, 1.25 ) }
    dend_1 { pt3dadd( 30.155, 15.2051, 33.2796, 2.73 ) }
    dend_1 { pt3dadd( 31.2688, 15.4795, 34.2309, 3.54 ) }
    dend_1 { pt3dadd( 31.8927, 15.6578, 34.7439, 2.8 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 24/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.64855, 7.1161, 5.52, 0.88 ) }
    dend_0 { pt3dadd( -5.12676, 7.72359, 5.74818, 0.74 ) }
    dend_0 { pt3dadd( -5.89934, 8.59694, 6.18886, 0.22 ) }
    dend_0 { pt3dadd( -6.41768, 9.12798, 6.51068, 0.22 ) }
    dend_0 { pt3dadd( -7.10793, 9.77412, 6.92935, 0.44 ) }
    dend_0 { pt3dadd( -7.6856, 10.2609, 7.26073, 0.44 ) }
    dend_0 { pt3dadd( -8.44726, 10.8056, 7.67372, 0.22 ) }
    dend_0 { pt3dadd( -9.26424, 11.2432, 8.10518, 0.22 ) }
    dend_0 { pt3dadd( -9.68709, 11.4151, 8.31301, 0.22 ) }
    dend_0 { pt3dadd( -10.2829, 11.6089, 8.58004, 0.96 ) }
    dend_0 { pt3dadd( -11.2211, 11.8516, 8.99732, 1.47 ) }
    dend_0 { pt3dadd( -12.9218, 12.223, 9.82114, 0.15 ) }
    dend_0 { pt3dadd( -13.6801, 12.3863, 10.1745, 0.15 ) }
    dend_0 { pt3dadd( -14.2107, 12.5316, 10.385, 0.15 ) }
    dend_0 { pt3dadd( -14.9979, 12.769, 10.6708, 0.88 ) }
    dend_0 { pt3dadd( -16.3898, 13.2199, 11.1606, 0.37 ) }
    dend_0 { pt3dadd( -17.8773, 13.7377, 11.6776, 1.55 ) }
    dend_0 { pt3dadd( -19.0664, 14.1915, 12.0896, 2.95 ) }
    dend_0 { pt3dadd( -22.0997, 15.4152, 13.1266, 0.07 ) }
    dend_0 { pt3dadd( -22.6657, 15.6424, 13.3148, 0.88 ) }
    dend_0 { pt3dadd( -23.8353, 16.1139, 13.6677, 0.07 ) }
    dend_0 { pt3dadd( -24.919, 16.5593, 13.9145, 0.22 ) }
    dend_0 { pt3dadd( -25.663, 16.8671, 14.0528, 0.22 ) }
    dend_0 { pt3dadd( -27.3168, 17.5214, 14.333, 0.15 ) }
    dend_0 { pt3dadd( -27.831, 17.7032, 14.4101, 0.96 ) }
    dend_0 { pt3dadd( -28.5662, 17.9509, 14.4815, 1.84 ) }
    dend_0 { pt3dadd( -31.1788, 18.774, 14.5733, 0.15 ) }
    dend_0 { pt3dadd( -31.7589, 18.9294, 14.5691, 0.66 ) }
    dend_0 { pt3dadd( -32.6796, 19.1402, 14.5421, 1.18 ) }
    dend_0 { pt3dadd( -34.9229, 19.5765, 14.4421, 0.15 ) }
    dend_0 { pt3dadd( -35.7586, 19.7068, 14.3863, 1.33 ) }
    dend_0 { pt3dadd( -36.8777, 19.8383, 14.2953, 2.51 ) }
    dend_0 { pt3dadd( -40.0402, 20.0818, 13.991, 0.15 ) }
    dend_0 { pt3dadd( -40.5499, 20.1096, 13.9193, 0.52 ) }
    dend_0 { pt3dadd( -41.4765, 20.1389, 13.7425, 0.81 ) }
    dend_0 { pt3dadd( -42.9193, 20.1607, 13.3884, 0.15 ) }
    dend_0 { pt3dadd( -43.6488, 20.1669, 13.1983, 0.15 ) }
    dend_0 { pt3dadd( -44.2023, 20.1758, 13.0379, 0.66 ) }
    dend_0 { pt3dadd( -45.8848, 20.2344, 12.4945, 1.84 ) }
    dend_0 { pt3dadd( -47.5406, 20.3465, 11.9886, 0.22 ) }
    dend_0 { pt3dadd( -48.3856, 20.4284, 11.7584, 0.37 ) }
    dend_0 { pt3dadd( -48.7522, 20.474, 11.6709, 0.88 ) }
    dend_0 { pt3dadd( -50.1344, 20.6626, 11.4158, 0.15 ) }
    dend_0 { pt3dadd( -50.8961, 20.783, 11.3132, 0.15 ) }
    dend_0 { pt3dadd( -51.7356, 20.9348, 11.2562, 0.74 ) }
    dend_0 { pt3dadd( -54.2427, 21.4131, 11.2662, 0.07 ) }
    dend_0 { pt3dadd( -54.7168, 21.5109, 11.2906, 0.52 ) }
    dend_0 { pt3dadd( -56.3443, 21.8866, 11.4469, 0.15 ) }
    dend_0 { pt3dadd( -57.1163, 22.0829, 11.5581, 0.96 ) }
    dend_0 { pt3dadd( -58.0844, 22.3452, 11.7311, 1.92 ) }
    dend_0 { pt3dadd( -60.1676, 23.013, 12.1657, 0.15 ) }
    dend_0 { pt3dadd( -61.0309, 23.3427, 12.3632, 0.22 ) }
    dend_0 { pt3dadd( -62.0504, 23.7718, 12.5779, 0.07 ) }
    dend_0 { pt3dadd( -62.7155, 24.1014, 12.7015, 1.03 ) }
    dend_0 { pt3dadd( -63.4004, 24.4709, 12.8176, 1.77 ) }
    dend_0 { pt3dadd( -65.4538, 25.6633, 13.1161, 0.07 ) }
    dend_0 { pt3dadd( -66.2857, 26.1866, 13.2217, 0.07 ) }
    dend_0 { pt3dadd( -66.8595, 26.5428, 13.306, 0.74 ) }
    dend_0 { pt3dadd( -68.4201, 27.5184, 13.5504, 0.07 ) }
    dend_0 { pt3dadd( -68.9024, 27.8157, 13.6273, 0.52 ) }
    dend_0 { pt3dadd( -70.2293, 28.5272, 13.8538, 0.07 ) }
    dend_0 { pt3dadd( -71.0575, 28.8749, 14.0036, 0.22 ) }
    dend_0 { pt3dadd( -71.9794, 29.1526, 14.1595, 0.15 ) }
    dend_0 { pt3dadd( -72.3657, 29.2156, 14.2133, 0.96 ) }
    dend_0 { pt3dadd( -73.3139, 29.2484, 14.312, 1.92 ) }
    dend_0 { pt3dadd( -75.2555, 29.1809, 14.4561, 0.07 ) }
    dend_0 { pt3dadd( -76.2039, 29.0887, 14.4831, 0.29 ) }
    dend_0 { pt3dadd( -77.2373, 28.9998, 14.4632, 0.07 ) }
    dend_0 { pt3dadd( -78.2351, 28.9765, 14.4049, 0.07 ) }
    dend_0 { pt3dadd( -78.6233, 28.9926, 14.3793, 0.07 ) }
    dend_0 { pt3dadd( -78.9897, 29.0267, 14.3486, 0.44 ) }
    dend_0 { pt3dadd( -79.7571, 29.1463, 14.2638, 0.74 ) }
    dend_0 { pt3dadd( -81.6459, 29.4685, 14.0433, 0.07 ) }
    dend_0 { pt3dadd( -83.1451, 29.7267, 13.8753, 0.15 ) }
    dend_0 { pt3dadd( -84.1868, 29.8999, 13.7596, 0.96 ) }
    dend_0 { pt3dadd( -85.4783, 30.0559, 13.6232, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( -86.5226, 30.1327, 13.5138, 0.59 ) }
    dend_0 { pt3dadd( -87.5321, 30.1418, 13.411, 0.15 ) }
    dend_0 { pt3dadd( -88.0137, 30.1109, 13.3611, 0.74 ) }
    dend_0 { pt3dadd( -88.7441, 30.0267, 13.2816, 1.18 ) }
    dend_0 { pt3dadd( -91.0204, 29.7183, 12.9473, 0.15 ) }
    dend_0 { pt3dadd( -91.7707, 29.6208, 12.819, 0.81 ) }
    dend_0 { pt3dadd( -92.9012, 29.4809, 12.5932, 0.15 ) }
    dend_0 { pt3dadd( -93.5629, 29.4031, 12.4458, 0.22 ) }
    dend_0 { pt3dadd( -95.2662, 29.2074, 12.0332, 0.07 ) }
    dend_0 { pt3dadd( -96.3203, 29.0872, 11.7597, 1.03 ) }
    dend_0 { pt3dadd( -97.0559, 29.017, 11.5552, 1.84 ) }
    dend_0 { pt3dadd( -99.4966, 28.8678, 10.8907, 0.07 ) }
    dend_0 { pt3dadd( -99.9838, 28.8637, 10.7628, 0.22 ) }
    dend_0 { pt3dadd( -102.27, 28.9674, 10.2187, 0.07 ) }
    dend_0 { pt3dadd( -102.565, 28.9914, 10.1569, 0.66 ) }
    dend_0 { pt3dadd( -103.227, 29.0559, 10.0567, 1.25 ) }
    dend_0 { pt3dadd( -104.343, 29.1884, 9.91063, 0.15 ) }
    dend_0 { pt3dadd( -105.242, 29.3378, 9.81649, 0.74 ) }
    dend_0 { pt3dadd( -106.723, 29.57, 9.71486, 0.07 ) }
    dend_0 { pt3dadd( -107.722, 29.7173, 9.6803, 0.07 ) }
    dend_0 { pt3dadd( -108.75, 29.8505, 9.65789, 0.07 ) }
    dend_0 { pt3dadd( -108.955, 29.8786, 9.66185, 0.07 ) }
    dend_0 { pt3dadd( -109.795, 30.0184, 9.71236, 0.74 ) }
    dend_0 { pt3dadd( -111.413, 30.3179, 9.91276, 0.07 ) }
    dend_0 { pt3dadd( -111.864, 30.4244, 9.99777, 1.11 ) }
    dend_0 { pt3dadd( -112.821, 30.6739, 10.2274, 1.62 ) }
    dend_0 { pt3dadd( -114.567, 31.0342, 10.7041, 0.07 ) }
    dend_0 { pt3dadd( -115.482, 31.1823, 10.9699, 0.81 ) }
    dend_0 { pt3dadd( -116.939, 31.3536, 11.408, 0.15 ) }
    dend_0 { pt3dadd( -118.129, 31.4283, 11.7893, 0.15 ) }
    dend_0 { pt3dadd( -119.38, 31.4357, 12.1997, 1.11 ) }
    dend_0 { pt3dadd( -122.206, 31.2841, 13.124, 0.15 ) }
    dend_0 { pt3dadd( -122.857, 31.2159, 13.3267, 1.03 ) }
    dend_0 { pt3dadd( -124.049, 31.06, 13.6831, 1.84 ) }
    dend_0 { pt3dadd( -126.086, 30.7477, 14.2326, 0.22 ) }
    dend_0 { pt3dadd( -126.454, 30.6818, 14.3305, 0.22 ) }
    dend_0 { pt3dadd( -127.201, 30.5453, 14.5326, 0.07 ) }
    dend_0 { pt3dadd( -127.749, 30.4487, 14.6905, 0.59 ) }
    dend_0 { pt3dadd( -128.897, 30.2359, 15.0488, 0.07 ) }
    dend_0 { pt3dadd( -129.65, 30.081, 15.2898, 0.29 ) }
    dend_0 { pt3dadd( -130.409, 29.891, 15.5276, 0.07 ) }
    dend_0 { pt3dadd( -131.282, 29.631, 15.8003, 0.37 ) }
    dend_0 { pt3dadd( -132.526, 29.2103, 16.1848, 0.07 ) }
    dend_0 { pt3dadd( -133.43, 28.8602, 16.4591, 0.66 ) }
    dend_0 { pt3dadd( -134.434, 28.3536, 16.7153, 0.07 ) }
    dend_0 { pt3dadd( -135.348, 27.8001, 16.9122, 0.96 ) }
    dend_0 { pt3dadd( -136.917, 26.6484, 17.1656, 0.07 ) }
    dend_0 { pt3dadd( -137.765, 25.8552, 17.2323, 0.07 ) }
    dend_0 { pt3dadd( -138.323, 25.1817, 17.2122, 1.03 ) }
    dend_0 { pt3dadd( -139.81, 22.7341, 16.9762, 0.15 ) }
    dend_0 { pt3dadd( -140.196, 21.9268, 16.8554, 0.15 ) }
    dend_0 { pt3dadd( -140.601, 20.8725, 16.6574, 1.11 ) }
    dend_0 { pt3dadd( -141.143, 19.1094, 16.2847, 0.15 ) }
    dend_0 { pt3dadd( -141.552, 17.5984, 15.9447, 1.84 ) }
    dend_0 { pt3dadd( -142.312, 14.6458, 15.2643, 0.15 ) }
    dend_0 { pt3dadd( -142.474, 13.9955, 15.1168, 0.59 ) }
    dend_0 { pt3dadd( -142.753, 12.9859, 14.9187, 1.03 ) }
    dend_0 { pt3dadd( -143.463, 10.7778, 14.5967, 0.15 ) }
    dend_0 { pt3dadd( -143.739, 10.0519, 14.5639, 0.52 ) }
    dend_0 { pt3dadd( -144.329, 8.67611, 14.6161, 0.15 ) }
    dend_0 { pt3dadd( -144.694, 7.85951, 14.7242, 0.66 ) }
    dend_0 { pt3dadd( -145.235, 6.58846, 15.0018, 0.15 ) }
    dend_0 { pt3dadd( -145.787, 5.12598, 15.4276, 1.62 ) }
    dend_0 { pt3dadd( -146.434, 2.98993, 16.1788, 0.07 ) }
    dend_0 { pt3dadd( -146.612, 2.19068, 16.4626, 0.29 ) }
    dend_0 { pt3dadd( -146.821, 0.720463, 16.9383, 0.07 ) }
    dend_0 { pt3dadd( -146.871, -0.0805597, 17.1444, 0.96 ) }
    dend_0 { pt3dadd( -146.883, -1.35233, 17.3009, 2.21 ) }
    dend_0 { pt3dadd( -146.86, -2.4547, 17.3122, 1.33 ) }
    dend_0 { pt3dadd( -146.85, -3.99182, 17.1698, 0.07 ) }
    dend_0 { pt3dadd( -146.89, -5.35459, 16.9582, 0.07 ) }
    dend_0 { pt3dadd( -146.965, -6.38315, 16.7416, 1.03 ) }
    dend_0 { pt3dadd( -147.183, -8.82398, 16.1655, 0.07 ) }
    dend_0 { pt3dadd( -147.277, -9.60555, 15.9636, 0.88 ) }
    dend_0 { pt3dadd( -147.551, -11.4907, 15.4532, 0.07 ) }
    dend_0 { pt3dadd( -147.654, -12.1758, 15.2625, 0.66 ) }
    dend_0 { pt3dadd( -147.724, -12.6443, 15.1396, 1.25 ) }
    dend_0 { pt3dadd( -147.959, -14.1063, 14.7857, 0.29 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 78/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.06335, 10.2596, 0.0, 0.615564 ) }
    axon_0 { pt3dadd( 5.74396, 24.801, 0.0, 0.615564 ) }
    axon_0 { pt3dadd( 9.42458, 39.3425, 0.0, 0.615564 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 81/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 0.324955, 21.725, 1.35841, 0.37 ) }
    dend_38 { pt3dadd( 1.21826, 22.9244, 2.34053, 0.37 ) }
    dend_38 { pt3dadd( 1.49583, 23.2597, 2.66051, 0.37 ) }
    dend_38 { pt3dadd( 1.9926, 23.9066, 3.323, 0.37 ) }
    dend_38 { pt3dadd( 2.5473, 24.867, 4.24126, 0.22 ) }
    dend_38 { pt3dadd( 2.65328, 25.2321, 4.56882, 0.22 ) }
    dend_38 { pt3dadd( 2.57113, 25.6655, 4.94524, 0.22 ) }
    dend_38 { pt3dadd( 2.35142, 25.9262, 5.19279, 0.22 ) }
    dend_38 { pt3dadd( 1.93344, 26.3419, 5.54819, 0.22 ) }
    dend_38 { pt3dadd( 1.20584, 27.0356, 6.14576, 0.22 ) }
    dend_38 { pt3dadd( 0.743226, 27.4822, 6.54329, 0.22 ) }
    dend_38 { pt3dadd( -0.00408947, 28.3052, 7.26768, 0.66 ) }
    dend_38 { pt3dadd( -0.729859, 29.2783, 8.13246, 1.03 ) }
    dend_38 { pt3dadd( -1.53492, 30.5085, 9.299, 0.22 ) }
    dend_38 { pt3dadd( -2.04275, 31.3604, 10.2041, 0.22 ) }
    dend_38 { pt3dadd( -2.36032, 31.9598, 10.945, 0.88 ) }
    dend_38 { pt3dadd( -2.65501, 32.5756, 11.8173, 1.47 ) }
    dend_38 { pt3dadd( -3.07174, 33.5409, 13.4146, 0.15 ) }
    dend_38 { pt3dadd( -3.34783, 34.3115, 14.7388, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_38 { pt3dadd( -3.58971, 35.1027, 16.0454, 0.15 ) }
    dend_38 { pt3dadd( -3.8709, 35.8709, 17.1643, 0.15 ) }
    dend_38 { pt3dadd( -4.24447, 36.6378, 18.2041, 0.15 ) }
    dend_38 { pt3dadd( -4.8566, 37.5528, 19.3363, 0.15 ) }
    dend_38 { pt3dadd( -6.04833, 38.9605, 20.7669, 0.96 ) }
    dend_38 { pt3dadd( -6.80235, 39.7551, 21.4451, 2.06 ) }
    dend_38 { pt3dadd( -8.14165, 41.0289, 22.3116, 0.22 ) }
    dend_38 { pt3dadd( -8.6929, 41.5498, 22.6064, 0.22 ) }
    dend_38 { pt3dadd( -9.23399, 42.0208, 22.8617, 0.22 ) }
    dend_38 { pt3dadd( -10.0817, 42.6651, 23.2794, 0.22 ) }
    dend_38 { pt3dadd( -11.073, 43.307, 23.8973, 0.22 ) }
    dend_38 { pt3dadd( -11.7144, 43.7107, 24.3405, 1.33 ) }
    dend_38 { pt3dadd( -12.6595, 44.5067, 25.2072, 2.95 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 13/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 0.324955, 21.725, 1.35841, 1.25 ) }
    dend_33 { pt3dadd( -0.243439, 23.0267, 1.34151, 1.25 ) }
    dend_33 { pt3dadd( -0.910734, 24.7103, 1.42279, 0.81 ) }
    dend_33 { pt3dadd( -1.37594, 26.1496, 1.60435, 0.81 ) }
    dend_33 { pt3dadd( -1.71467, 27.5396, 1.86121, 1.11 ) }
    dend_33 { pt3dadd( -1.91593, 28.8334, 2.15852, 1.4 ) }
    dend_33 { pt3dadd( -1.96893, 29.9406, 2.45075, 0.59 ) }
    dend_33 { pt3dadd( -1.80712, 30.9983, 2.86532, 0.59 ) }
    dend_33 { pt3dadd( -1.32694, 32.246, 3.4872, 0.52 ) }
    dend_33 { pt3dadd( -0.894936, 32.9956, 3.89951, 0.59 ) }
    dend_33 { pt3dadd( -0.385458, 33.7513, 4.3386, 0.59 ) }
    dend_33 { pt3dadd( 0.289015, 34.7449, 4.93552, 0.44 ) }
    dend_33 { pt3dadd( 0.646279, 35.3584, 5.30508, 0.44 ) }
    dend_33 { pt3dadd( 0.748198, 35.7071, 5.48866, 0.44 ) }
    dend_33 { pt3dadd( 0.726453, 36.3299, 5.80583, 0.52 ) }
    dend_33 { pt3dadd( 0.521304, 37.2704, 6.34498, 0.66 ) }
    dend_33 { pt3dadd( 0.279643, 38.0443, 6.82701, 0.29 ) }
    dend_33 { pt3dadd( 0.087198, 38.6131, 7.21777, 0.29 ) }
    dend_33 { pt3dadd( -0.110837, 39.3453, 7.71762, 0.37 ) }
    dend_33 { pt3dadd( -0.309059, 40.2954, 8.34256, 0.88 ) }
    dend_33 { pt3dadd( -0.488051, 41.278, 8.97503, 1.62 ) }
    dend_33 { pt3dadd( -0.6219, 42.1861, 9.53949, 2.43 ) }
    dend_33 { pt3dadd( -0.732835, 43.2161, 10.1587, 2.43 ) }
    dend_33 { pt3dadd( -0.852974, 44.9356, 11.1509, 0.22 ) }
    dend_33 { pt3dadd( -0.876548, 45.7467, 11.6024, 0.52 ) }
    dend_33 { pt3dadd( -0.880438, 46.5661, 12.0144, 0.22 ) }
    dend_33 { pt3dadd( -0.874858, 47.0011, 12.1957, 0.22 ) }
    dend_33 { pt3dadd( -0.85888, 47.5595, 12.3867, 0.22 ) }
    dend_33 { pt3dadd( -0.840333, 48.2393, 12.5497, 0.22 ) }
    dend_33 { pt3dadd( -0.83515, 48.6935, 12.6312, 0.22 ) }
    dend_33 { pt3dadd( -0.839209, 48.9916, 12.6734, 0.22 ) }
    dend_33 { pt3dadd( -0.911788, 50.0544, 12.7632, 0.37 ) }
    dend_33 { pt3dadd( -1.02329, 50.9581, 12.7947, 0.37 ) }
    dend_33 { pt3dadd( -1.16741, 51.8208, 12.7864, 0.52 ) }
    dend_33 { pt3dadd( -1.32424, 52.6932, 12.7524, 0.96 ) }
    dend_33 { pt3dadd( -1.49902, 53.7379, 12.6684, 0.96 ) }
    dend_33 { pt3dadd( -1.72147, 55.3347, 12.4444, 0.44 ) }
    dend_33 { pt3dadd( -1.79521, 56.3757, 12.2256, 0.44 ) }
    dend_33 { pt3dadd( -1.84574, 57.4563, 11.9505, 1.47 ) }
    dend_33 { pt3dadd( -1.8897, 58.5838, 11.6282, 2.8 ) }
    dend_33 { pt3dadd( -1.93353, 59.6253, 11.2977, 3.61 ) }
    dend_33 { pt3dadd( -1.98757, 60.7054, 10.9133, 3.02 ) }
    dend_33 { pt3dadd( -2.12482, 63.2335, 9.90469, 0.22 ) }
    dend_33 { pt3dadd( -2.181, 64.0055, 9.57256, 0.29 ) }
    dend_33 { pt3dadd( -2.21484, 64.4254, 9.38828, 0.29 ) }
    dend_33 { pt3dadd( -2.29919, 65.2448, 9.01333, 0.22 ) }
    dend_33 { pt3dadd( -2.42502, 66.2273, 8.562, 0.52 ) }
    dend_33 { pt3dadd( -2.55281, 67.0451, 8.18343, 1.33 ) }
    dend_33 { pt3dadd( -2.75145, 68.0697, 7.64023, 2.43 ) }
    dend_33 { pt3dadd( -2.84264, 69.0192, 7.11548, 2.43 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 63/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -7.71306, -16.8406, -13.6237, 0.44 ) }
    dend_27 { pt3dadd( -9.59399, -17.8513, -14.9588, 0.44 ) }
    dend_27 { pt3dadd( -9.69396, -18.2701, -15.2828, 0.44 ) }
    dend_27 { pt3dadd( -9.75672, -18.7174, -15.6349, 0.44 ) }
    dend_27 { pt3dadd( -9.85848, -19.1925, -16.0297, 0.44 ) }
    dend_27 { pt3dadd( -10.0318, -19.7329, -16.5209, 0.59 ) }
    dend_27 { pt3dadd( -10.3332, -20.457, -17.2679, 0.74 ) }
    dend_27 { pt3dadd( -10.5155, -20.9589, -17.8433, 1.11 ) }
    dend_27 { pt3dadd( -10.7653, -21.5057, -18.5823, 1.47 ) }
    dend_27 { pt3dadd( -11.0634, -21.9854, -19.379, 1.47 ) }
    dend_27 { pt3dadd( -11.5585, -22.5311, -20.5527, 0.59 ) }
    dend_27 { pt3dadd( -11.9771, -22.7965, -21.444, 0.52 ) }
    dend_27 { pt3dadd( -12.2965, -22.86, -22.0681, 0.52 ) }
    dend_27 { pt3dadd( -12.6717, -22.8233, -22.7161, 0.44 ) }
    dend_27 { pt3dadd( -13.1097, -22.6993, -23.3123, 0.44 ) }
    dend_27 { pt3dadd( -13.3526, -22.6156, -23.5829, 0.44 ) }
    dend_27 { pt3dadd( -13.9881, -22.4211, -24.1445, 0.96 ) }
    dend_27 { pt3dadd( -14.6038, -22.263, -24.6241, 0.96 ) }
    dend_27 { pt3dadd( -15.3434, -22.1202, -25.147, 1.4 ) }
    dend_27 { pt3dadd( -16.3075, -21.9922, -25.7824, 2.36 ) }
    dend_27 { pt3dadd( -17.1046, -21.9297, -26.2799, 3.32 ) }
    dend_27 { pt3dadd( -18.0386, -21.8762, -26.8769, 3.61 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 85/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -7.71306, -16.8406, -13.6237, 0.29 ) }
    dend_26 { pt3dadd( -7.46673, -18.1918, -14.1459, 0.29 ) }
    dend_26 { pt3dadd( -7.35632, -18.6522, -14.3348, 0.29 ) }
    dend_26 { pt3dadd( -7.21022, -19.2545, -14.5972, 0.29 ) }
    dend_26 { pt3dadd( -7.09959, -19.7557, -14.8415, 0.81 ) }
    dend_26 { pt3dadd( -6.99166, -20.2934, -15.1289, 1.11 ) }
    dend_26 { pt3dadd( -6.86228, -21.0655, -15.5953, 0.22 ) }
    dend_26 { pt3dadd( -6.74377, -21.624, -16.0146, 0.22 ) }
    dend_26 { pt3dadd( -6.7131, -21.9425, -16.3015, 0.22 ) }
    dend_26 { pt3dadd( -6.71983, -22.3747, -16.7469, 0.22 ) }
    dend_26 { pt3dadd( -6.71498, -22.6162, -16.9379, 0.37 ) }
    dend_26 { pt3dadd( -6.68472, -23.0832, -17.2563, 0.37 ) }
    dend_26 { pt3dadd( -6.64141, -23.465, -17.4756, 0.81 ) }
    dend_26 { pt3dadd( -6.55698, -24.02, -17.7379, 1.7 ) }
    dend_26 { pt3dadd( -6.43718, -24.7982, -18.0819, 2.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_26 { pt3dadd( -6.1658, -26.496, -18.7756, 0.29 ) }
    dend_26 { pt3dadd( -6.06681, -27.0745, -18.9853, 0.96 ) }
    dend_26 { pt3dadd( -5.99288, -27.463, -19.1079, 0.96 ) }
    dend_26 { pt3dadd( -5.79354, -28.3648, -19.3649, 0.15 ) }
    dend_26 { pt3dadd( -5.63708, -28.9397, -19.4944, 0.15 ) }
    dend_26 { pt3dadd( -5.51834, -29.3266, -19.5659, 0.59 ) }
    dend_26 { pt3dadd( -5.24139, -30.0692, -19.67, 0.29 ) }
    dend_26 { pt3dadd( -5.04261, -30.5432, -19.7108, 1.4 ) }
    dend_26 { pt3dadd( -4.72388, -31.2523, -19.7485, 2.73 ) }
    dend_26 { pt3dadd( -3.93994, -32.8934, -19.7757, 0.15 ) }
    dend_26 { pt3dadd( -3.81716, -33.1442, -19.7752, 0.74 ) }
    dend_26 { pt3dadd( -3.59214, -33.5988, -19.785, 0.74 ) }
    dend_26 { pt3dadd( -3.22934, -34.2948, -19.8195, 0.15 ) }
    dend_26 { pt3dadd( -2.89553, -34.9221, -19.8605, 0.15 ) }
    dend_26 { pt3dadd( -2.61319, -35.4685, -19.9059, 0.15 ) }
    dend_26 { pt3dadd( -2.36911, -35.9557, -19.9728, 1.25 ) }
    dend_26 { pt3dadd( -2.03605, -36.6867, -20.1157, 0.22 ) }
    dend_26 { pt3dadd( -1.85463, -37.188, -20.2493, 0.22 ) }
    dend_26 { pt3dadd( -1.7969, -37.4478, -20.331, 0.22 ) }
    dend_26 { pt3dadd( -1.77175, -37.8251, -20.4425, 0.22 ) }
    dend_26 { pt3dadd( -1.79033, -38.5152, -20.6254, 0.44 ) }
    dend_26 { pt3dadd( -1.844, -39.1669, -20.7791, 1.62 ) }
    dend_26 { pt3dadd( -1.91195, -39.8662, -20.9313, 3.02 ) }
    dend_26 { pt3dadd( -1.98338, -40.7121, -21.1062, 3.02 ) }
    dend_26 { pt3dadd( -2.09932, -42.6043, -21.4987, 0.29 ) }
    dend_26 { pt3dadd( -2.12233, -43.2994, -21.6367, 0.81 ) }
    dend_26 { pt3dadd( -2.1242, -43.9044, -21.7449, 1.03 ) }
    dend_26 { pt3dadd( -2.10619, -44.5331, -21.8534, 0.37 ) }
    dend_26 { pt3dadd( -2.07968, -45.0205, -21.9235, 1.18 ) }
    dend_26 { pt3dadd( -1.98825, -46.0035, -22.0462, 0.22 ) }
    dend_26 { pt3dadd( -1.92634, -46.3782, -22.0829, 0.74 ) }
    dend_26 { pt3dadd( -1.85454, -46.6853, -22.0999, 0.74 ) }
    dend_26 { pt3dadd( -1.75498, -47.0133, -22.0986, 0.15 ) }
    dend_26 { pt3dadd( -1.46419, -47.9015, -22.0357, 0.44 ) }
    dend_26 { pt3dadd( -1.37449, -48.1226, -22.009, 0.44 ) }
    dend_26 { pt3dadd( -1.05715, -48.7989, -21.9106, 0.22 ) }
    dend_26 { pt3dadd( -0.868822, -49.1965, -21.865, 1.11 ) }
    dend_26 { pt3dadd( -0.730272, -49.5337, -21.8378, 1.62 ) }
    dend_26 { pt3dadd( -0.527092, -50.0974, -21.8076, 1.62 ) }
    dend_26 { pt3dadd( -0.155904, -51.3936, -21.8066, 0.22 ) }
    dend_26 { pt3dadd( -0.0397357, -52.0512, -21.8128, 0.96 ) }
    dend_26 { pt3dadd( -0.0252974, -52.7341, -21.8249, 1.18 ) }
    dend_26 { pt3dadd( -0.165241, -53.9433, -21.8726, 0.15 ) }
    dend_26 { pt3dadd( -0.239081, -54.3489, -21.8941, 0.22 ) }
    dend_26 { pt3dadd( -0.513777, -55.2845, -21.9685, 0.07 ) }
    dend_26 { pt3dadd( -0.727682, -55.6956, -22.0215, 0.22 ) }
    dend_26 { pt3dadd( -1.30386, -56.5043, -22.1479, 0.07 ) }
    dend_26 { pt3dadd( -1.5666, -56.7738, -22.2008, 0.15 ) }
    dend_26 { pt3dadd( -1.10173, -63.9731, -24.0192, 0.15 ) }
    dend_26 { pt3dadd( -1.69328, -71.217, -25.6168, 0.15 ) }
    dend_26 { pt3dadd( -0.70559, -78.459, -27.0168, 0.15 ) }
    dend_26 { pt3dadd( 0.870114, -85.4738, -28.8985, 0.15 ) }
    dend_26 { pt3dadd( 2.455, -92.2352, -31.5135, 0.15 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 53/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -3.21019, -42.8273, 8.02424, 1.99 ) }
    dend_14 { pt3dadd( -3.67149, -44.6105, 7.99602, 1.99 ) }
    dend_14 { pt3dadd( -4.21646, -47.082, 7.96671, 0.59 ) }
    dend_14 { pt3dadd( -4.47935, -48.4929, 7.95377, 0.59 ) }
    dend_14 { pt3dadd( -4.72978, -50.1856, 7.95926, 0.59 ) }
    dend_14 { pt3dadd( -4.81598, -51.0152, 7.96935, 1.11 ) }
    dend_14 { pt3dadd( -4.90327, -52.5255, 8.01769, 2.58 ) }
    dend_14 { pt3dadd( -4.86619, -53.2677, 8.05583, 2.88 ) }
    dend_14 { pt3dadd( -4.78266, -53.9099, 8.10697, 2.65 ) }
    dend_14 { pt3dadd( -4.65511, -54.8937, 8.22247, 1.55 ) }
    dend_14 { pt3dadd( -4.49049, -56.2773, 8.43613, 0.74 ) }
    dend_14 { pt3dadd( -4.38271, -57.5961, 8.65719, 0.44 ) }
    dend_14 { pt3dadd( -4.35095, -58.7503, 8.86017, 0.29 ) }
    dend_14 { pt3dadd( -4.37948, -59.6435, 9.02699, 0.29 ) }
    dend_14 { pt3dadd( -4.47599, -60.7824, 9.2609, 0.29 ) }
    dend_14 { pt3dadd( -4.50619, -61.143, 9.33811, 0.29 ) }
    dend_14 { pt3dadd( -4.56964, -61.8086, 9.48552, 0.44 ) }
    dend_14 { pt3dadd( -4.64606, -62.4673, 9.62156, 1.11 ) }
    dend_14 { pt3dadd( -4.73364, -63.2118, 9.78498, 2.36 ) }
    dend_14 { pt3dadd( -4.88075, -64.7608, 10.1219, 2.73 ) }
    dend_14 { pt3dadd( -5.0536, -67.6481, 10.7475, 0.44 ) }
    dend_14 { pt3dadd( -5.07906, -68.2169, 10.8823, 0.44 ) }
    dend_14 { pt3dadd( -5.12283, -69.3143, 11.1625, 0.59 ) }
    dend_14 { pt3dadd( -5.15494, -70.3702, 11.4501, 0.29 ) }
    dend_14 { pt3dadd( -5.17028, -71.0308, 11.6342, 0.29 ) }
    dend_14 { pt3dadd( -5.14717, -71.6468, 11.7981, 0.29 ) }
    dend_14 { pt3dadd( -5.07411, -72.2861, 11.9944, 0.29 ) }
    dend_14 { pt3dadd( -4.96878, -72.7802, 12.1677, 0.88 ) }
    dend_14 { pt3dadd( -4.75812, -73.4724, 12.436, 1.84 ) }
    dend_14 { pt3dadd( -4.51481, -74.1324, 12.7033, 2.14 ) }
    dend_14 { pt3dadd( -3.78294, -76.0174, 13.5173, 0.44 ) }
    dend_14 { pt3dadd( -3.46396, -76.8614, 13.892, 0.66 ) }
    dend_14 { pt3dadd( -3.08583, -77.8621, 14.3734, 0.29 ) }
    dend_14 { pt3dadd( -2.94502, -78.2211, 14.5742, 0.29 ) }
    dend_14 { pt3dadd( -2.8068, -78.5933, 14.8258, 0.29 ) }
    dend_14 { pt3dadd( -2.74202, -78.8307, 15.0265, 0.29 ) }
    dend_14 { pt3dadd( -2.77483, -79.0823, 15.2527, 0.29 ) }
    dend_14 { pt3dadd( -2.94101, -79.632, 15.5152, 0.29 ) }
    dend_14 { pt3dadd( -3.06707, -80.0508, 15.6365, 0.29 ) }
    dend_14 { pt3dadd( -3.198, -80.5495, 15.7499, 0.29 ) }
    dend_14 { pt3dadd( -3.39216, -81.3462, 15.9038, 1.18 ) }
    dend_14 { pt3dadd( -3.5674, -82.1631, 16.0742, 2.43 ) }
    dend_14 { pt3dadd( -3.73545, -83.1107, 16.291, 2.88 ) }
    dend_14 { pt3dadd( -3.93561, -84.5772, 16.6609, 1.55 ) }
    dend_14 { pt3dadd( -4.09903, -86.4416, 17.2091, 0.52 ) }
    dend_14 { pt3dadd( -4.15199, -87.622, 17.6184, 0.29 ) }
    dend_14 { pt3dadd( -4.17162, -88.5643, 17.9925, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_14 { pt3dadd( -4.1661, -89.3318, 18.3291, 0.66 ) }
    dend_14 { pt3dadd( -4.14607, -89.9546, 18.619, 0.96 ) }
    dend_14 { pt3dadd( -4.09631, -90.7741, 18.9673, 0.22 ) }
    dend_14 { pt3dadd( -4.04501, -91.5483, 19.2, 0.22 ) }
    dend_14 { pt3dadd( -4.00381, -92.3796, 19.3242, 0.29 ) }
    dend_14 { pt3dadd( -3.96638, -93.1401, 19.3569, 0.59 ) }
    dend_14 { pt3dadd( -3.92109, -94.351, 19.3452, 1.33 ) }
    dend_14 { pt3dadd( -3.88067, -95.7142, 19.2918, 2.21 ) }
    dend_14 { pt3dadd( -3.84541, -96.8009, 19.2312, 3.24 ) }
    dend_14 { pt3dadd( -3.74894, -98.7106, 19.1139, 1.77 ) }
    dend_14 { pt3dadd( -3.64816, -100.306, 19.0299, 0.44 ) }
    dend_14 { pt3dadd( -3.57585, -101.434, 18.983, 0.37 ) }
    dend_14 { pt3dadd( -3.50648, -102.71, 18.9483, 0.37 ) }
    dend_14 { pt3dadd( -3.46916, -103.54, 18.9422, 0.88 ) }
    dend_14 { pt3dadd( -3.46102, -103.919, 18.9421, 1.77 ) }
    dend_14 { pt3dadd( -3.48536, -105.131, 18.9368, 3.1 ) }
    dend_14 { pt3dadd( -3.64748, -107.008, 18.9196, 1.33 ) }
    dend_14 { pt3dadd( -3.85595, -108.293, 18.9017, 0.74 ) }
    dend_14 { pt3dadd( -4.22775, -109.793, 18.8734, 0.22 ) }
    dend_14 { pt3dadd( -4.42437, -110.404, 18.8593, 0.22 ) }
    dend_14 { pt3dadd( -4.59056, -110.844, 18.849, 0.52 ) }
    dend_14 { pt3dadd( -5.06423, -111.89, 18.825, 0.81 ) }
    dend_14 { pt3dadd( -5.65407, -113.021, 18.8401, 0.29 ) }
    dend_14 { pt3dadd( -5.83336, -113.363, 18.854, 0.37 ) }
    dend_14 { pt3dadd( -6.21532, -114.173, 18.9008, 0.37 ) }
    dend_14 { pt3dadd( -6.58615, -115.146, 19.0384, 0.44 ) }
    dend_14 { pt3dadd( -6.92892, -116.266, 19.282, 0.81 ) }
    dend_14 { pt3dadd( -7.23286, -117.599, 19.6592, 0.81 ) }
    dend_14 { pt3dadd( -7.4097, -118.641, 20.0011, 0.81 ) }
    dend_14 { pt3dadd( -7.62613, -119.974, 20.475, 0.37 ) }
    dend_14 { pt3dadd( -7.89357, -121.582, 21.1196, 0.37 ) }
    dend_14 { pt3dadd( -8.02032, -122.394, 21.4923, 1.18 ) }
    dend_14 { pt3dadd( -8.10512, -123.179, 21.907, 2.8 ) }
    dend_14 { pt3dadd( -8.13096, -123.848, 22.3009, 3.32 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 34/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -3.21019, -42.8273, 8.02424, 0.66 ) }
    dend_11 { pt3dadd( -1.51034, -44.3559, 9.47845, 0.66 ) }
    dend_11 { pt3dadd( -0.409948, -45.4982, 10.4215, 0.44 ) }
    dend_11 { pt3dadd( 0.349742, -46.4188, 11.0714, 0.88 ) }
    dend_11 { pt3dadd( 0.857739, -47.1385, 11.5068, 0.44 ) }
    dend_11 { pt3dadd( 1.26788, -47.8131, 11.8459, 0.22 ) }
    dend_11 { pt3dadd( 1.65635, -48.5759, 12.1668, 0.22 ) }
    dend_11 { pt3dadd( 1.88478, -49.3943, 12.3391, 0.22 ) }
    dend_11 { pt3dadd( 2.02333, -50.1596, 12.4534, 0.22 ) }
    dend_11 { pt3dadd( 2.08324, -50.8523, 12.5527, 0.59 ) }
    dend_11 { pt3dadd( 2.11378, -51.8665, 12.7408, 1.7 ) }
    dend_11 { pt3dadd( 2.10258, -53.203, 13.0326, 1.47 ) }
    dend_11 { pt3dadd( 2.04925, -55.5137, 13.6139, 0.44 ) }
    dend_11 { pt3dadd( 2.0453, -56.7499, 13.9615, 0.29 ) }
    dend_11 { pt3dadd( 2.04478, -57.536, 14.1912, 0.22 ) }
    dend_11 { pt3dadd( 2.06072, -58.4209, 14.4408, 0.22 ) }
    dend_11 { pt3dadd( 2.08421, -59.0458, 14.6209, 0.96 ) }
    dend_11 { pt3dadd( 2.17341, -60.2509, 14.9469, 2.51 ) }
    dend_11 { pt3dadd( 2.32918, -61.5914, 15.3142, 3.39 ) }
    dend_11 { pt3dadd( 2.53642, -62.8574, 15.6448, 3.1 ) }
    dend_11 { pt3dadd( 2.90588, -64.5477, 16.1216, 1.03 ) }
    dend_11 { pt3dadd( 3.31172, -66.1635, 16.6049, 0.29 ) }
    dend_11 { pt3dadd( 3.62935, -67.3117, 16.9946, 0.22 ) }
    dend_11 { pt3dadd( 3.84763, -68.0541, 17.2758, 0.22 ) }
    dend_11 { pt3dadd( 3.96891, -68.4771, 17.4521, 0.22 ) }
    dend_11 { pt3dadd( 4.15159, -69.0933, 17.7254, 0.29 ) }
    dend_11 { pt3dadd( 4.34937, -69.7798, 18.015, 0.22 ) }
    dend_11 { pt3dadd( 4.56625, -70.6147, 18.2377, 0.29 ) }
    dend_11 { pt3dadd( 4.67469, -71.0544, 18.3155, 0.81 ) }
    dend_11 { pt3dadd( 4.99817, -72.3562, 18.4556, 1.55 ) }
    dend_11 { pt3dadd( 5.26615, -73.4226, 18.5261, 2.29 ) }
    dend_11 { pt3dadd( 5.5141, -74.3626, 18.5653, 2.06 ) }
    dend_11 { pt3dadd( 6.0869, -76.3349, 18.6636, 0.22 ) }
    dend_11 { pt3dadd( 6.30606, -76.9895, 18.7289, 0.22 ) }
    dend_11 { pt3dadd( 6.48795, -77.4615, 18.8146, 0.22 ) }
    dend_11 { pt3dadd( 6.57918, -77.6697, 18.8745, 0.22 ) }
    dend_11 { pt3dadd( 6.87901, -78.3081, 19.1314, 0.81 ) }
    dend_11 { pt3dadd( 7.33141, -79.2526, 19.5789, 1.84 ) }
    dend_11 { pt3dadd( 7.75206, -80.2141, 20.0879, 2.8 ) }
    dend_11 { pt3dadd( 8.14944, -81.3388, 20.7049, 1.77 ) }
    dend_11 { pt3dadd( 8.42976, -82.3834, 21.2581, 0.81 ) }
    dend_11 { pt3dadd( 8.71914, -83.7354, 21.9591, 0.22 ) }
    dend_11 { pt3dadd( 8.86575, -84.5181, 22.3506, 0.29 ) }
    dend_11 { pt3dadd( 8.97863, -85.2937, 22.726, 0.29 ) }
    dend_11 { pt3dadd( 9.07544, -86.6737, 23.369, 0.59 ) }
    dend_11 { pt3dadd( 9.06101, -87.9441, 23.962, 1.47 ) }
    dend_11 { pt3dadd( 8.99917, -88.5912, 24.2768, 1.92 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 81/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 31.8927, 15.6578, 34.7439, 0.22 ) }
    dend_3 { pt3dadd( 32.8035, 16.0507, 36.0631, 0.22 ) }
    dend_3 { pt3dadd( 33.4178, 16.3158, 36.953, 0.22 ) }
    dend_3 { pt3dadd( 34.2775, 16.6866, 38.1982, 1.47 ) }
    dend_3 { pt3dadd( 34.6128, 16.8313, 38.6839, 1.25 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 86/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 31.8927, 15.6578, 34.7439, 0.29 ) }
    dend_2 { pt3dadd( 33.2898, 14.7043, 35.881, 0.29 ) }
    dend_2 { pt3dadd( 34.1147, 14.0363, 36.5512, 0.15 ) }
    dend_2 { pt3dadd( 34.4532, 13.761, 36.8041, 0.22 ) }
    dend_2 { pt3dadd( 35.1365, 13.2122, 37.2774, 0.22 ) }
    dend_2 { pt3dadd( 35.9469, 12.5386, 37.8388, 0.22 ) }
    dend_2 { pt3dadd( 36.5818, 12.021, 38.2498, 0.22 ) }
    dend_2 { pt3dadd( 37.4528, 11.2816, 38.774, 0.22 ) }
    dend_2 { pt3dadd( 38.3188, 10.5408, 39.2603, 0.22 ) }
    dend_2 { pt3dadd( 39.2279, 9.81102, 39.7218, 0.22 ) }
    dend_2 { pt3dadd( 40.3675, 9.00046, 40.2, 0.15 ) }
    dend_2 { pt3dadd( 41.4219, 8.33616, 40.5513, 0.15 ) }
    dend_2 { pt3dadd( 41.9467, 8.04035, 40.6986, 0.15 ) }
    dend_2 { pt3dadd( 42.5857, 7.67786, 40.8573, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( 43.2284, 7.30156, 40.9972, 1.25 ) }
    dend_2 { pt3dadd( 44.2867, 6.69144, 41.1842, 0.15 ) }
    dend_2 { pt3dadd( 44.8243, 6.3902, 41.265, 0.15 ) }
    dend_2 { pt3dadd( 45.7128, 5.89809, 41.3813, 0.88 ) }
    dend_2 { pt3dadd( 46.9398, 5.23163, 41.5205, 0.15 ) }
    dend_2 { pt3dadd( 47.4529, 4.96256, 41.5689, 0.44 ) }
    dend_2 { pt3dadd( 48.1232, 4.61403, 41.6411, 1.18 ) }
    dend_2 { pt3dadd( 49.4948, 3.9042, 41.8197, 0.07 ) }
    dend_2 { pt3dadd( 50.507, 3.41156, 41.9659, 0.07 ) }
    dend_2 { pt3dadd( 51.2984, 3.02945, 42.1113, 1.47 ) }
    dend_2 { pt3dadd( 51.7562, 2.82175, 42.2154, 1.47 ) }
    dend_2 { pt3dadd( 53.2412, 2.13134, 42.6037, 0.15 ) }
    dend_2 { pt3dadd( 53.8785, 1.81102, 42.8127, 1.11 ) }
    dend_2 { pt3dadd( 54.3948, 1.52446, 43.0176, 1.47 ) }
    dend_2 { pt3dadd( 55.9643, 0.568869, 43.742, 0.07 ) }
    dend_2 { pt3dadd( 56.7877, -0.00626802, 44.1663, 0.15 ) }
    dend_2 { pt3dadd( 57.3689, -0.463663, 44.4949, 0.22 ) }
    dend_2 { pt3dadd( 58.1587, -1.15593, 45.0098, 0.07 ) }
    dend_2 { pt3dadd( 58.6135, -1.5725, 45.3391, 1.18 ) }
    dend_2 { pt3dadd( 59.1427, -2.05151, 45.7419, 1.77 ) }
    dend_2 { pt3dadd( 60.3577, -3.13072, 46.6764, 0.07 ) }
    dend_2 { pt3dadd( 61.0591, -3.64302, 47.145, 0.15 ) }
    dend_2 { pt3dadd( 62.3573, -4.35247, 47.9014, 0.74 ) }
    dend_2 { pt3dadd( 63.3975, -4.73201, 48.4123, 0.15 ) }
    dend_2 { pt3dadd( 64.0663, -4.85645, 48.6932, 0.81 ) }
    dend_2 { pt3dadd( 64.7625, -4.8804, 48.9439, 2.14 ) }
    dend_2 { pt3dadd( 67.3025, -4.5946, 49.7015, 0.15 ) }
    dend_2 { pt3dadd( 68.1944, -4.39088, 49.946, 0.15 ) }
    dend_2 { pt3dadd( 68.9077, -4.15757, 50.1374, 0.37 ) }
    dend_2 { pt3dadd( 70.2051, -3.63125, 50.5487, 0.07 ) }
    dend_2 { pt3dadd( 70.7174, -3.38623, 50.7638, 0.88 ) }
    dend_2 { pt3dadd( 71.1713, -3.12068, 51.0071, 1.25 ) }
    dend_2 { pt3dadd( 72.3121, -2.251, 51.8791, 0.07 ) }
    dend_2 { pt3dadd( 72.8532, -1.75756, 52.4115, 1.11 ) }
    dend_2 { pt3dadd( 73.2981, -1.27585, 52.9827, 1.55 ) }
    dend_2 { pt3dadd( 73.8647, -0.63422, 53.9009, 0.07 ) }
    dend_2 { pt3dadd( 74.1248, -0.349186, 54.3831, 0.74 ) }
    dend_2 { pt3dadd( 74.5879, 0.162125, 55.3714, 0.15 ) }
    dend_2 { pt3dadd( 74.9476, 0.574037, 56.2409, 0.81 ) }
    dend_2 { pt3dadd( 75.333, 1.00168, 57.2098, 1.25 ) }
    dend_2 { pt3dadd( 75.9596, 1.63609, 58.7986, 0.22 ) }
    dend_2 { pt3dadd( 76.2305, 1.87369, 59.4947, 0.22 ) }
    dend_2 { pt3dadd( 76.3802, 1.96659, 59.8537, 0.22 ) }
    dend_2 { pt3dadd( 76.7407, 2.09316, 60.6136, 0.15 ) }
    dend_2 { pt3dadd( 77.1052, 2.15282, 61.3226, 0.81 ) }
    dend_2 { pt3dadd( 77.948, 2.13528, 62.7498, 0.22 ) }
    dend_2 { pt3dadd( 78.6497, 2.06277, 63.8091, 0.22 ) }
    dend_2 { pt3dadd( 79.2809, 1.93125, 64.6416, 1.62 ) }
    dend_2 { pt3dadd( 79.9993, 1.72172, 65.4998, 0.15 ) }
    dend_2 { pt3dadd( 80.5371, 1.53742, 66.0822, 0.96 ) }
    dend_2 { pt3dadd( 81.9037, 1.06757, 67.3397, 0.07 ) }
    dend_2 { pt3dadd( 82.8064, 0.777363, 68.0716, 0.59 ) }
    dend_2 { pt3dadd( 84.0208, 0.449045, 69.0117, 0.07 ) }
    dend_2 { pt3dadd( 84.8988, 0.256318, 69.695, 0.07 ) }
    dend_2 { pt3dadd( 85.4547, 0.15388, 70.1284, 1.25 ) }
    dend_2 { pt3dadd( 87.1797, -0.055047, 71.4325, 0.07 ) }
    dend_2 { pt3dadd( 88.0811, -0.093601, 72.0654, 0.81 ) }
    dend_2 { pt3dadd( 89.5211, -0.043553, 73.0362, 0.07 ) }
    dend_2 { pt3dadd( 89.9667, 0.021072, 73.3374, 0.07 ) }
    dend_2 { pt3dadd( 90.5154, 0.154317, 73.7142, 1.03 ) }
    dend_2 { pt3dadd( 91.6692, 0.498941, 74.5261, 0.07 ) }
    dend_2 { pt3dadd( 92.7339, 0.929253, 75.2946, 0.07 ) }
    dend_2 { pt3dadd( 93.8834, 1.46397, 76.0847, 0.07 ) }
    dend_2 { pt3dadd( 94.5986, 1.86231, 76.5476, 0.66 ) }
    dend_2 { pt3dadd( 95.0962, 2.15715, 76.8798, 1.03 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 65/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.42458, 39.3425, 0.0, 0.181554 ) }
    axon_1 { pt3dadd( 13.1052, 53.8839, 0.0, 0.181554 ) }
    axon_1 { pt3dadd( 16.7858, 68.4253, 0.0, 0.181554 ) }
    // Section: dend_56, id: dend_56, parent: dend_38 (entry count 68/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -12.6595, 44.5067, 25.2072, 0.22 ) }
    dend_56 { pt3dadd( -14.4424, 45.1327, 26.0269, 0.22 ) }
    dend_56 { pt3dadd( -15.11, 45.4782, 26.3462, 0.22 ) }
    dend_56 { pt3dadd( -15.6416, 45.8771, 26.6884, 0.15 ) }
    dend_56 { pt3dadd( -16.0926, 46.2862, 27.061, 0.15 ) }
    dend_56 { pt3dadd( -16.4001, 46.5998, 27.3221, 0.15 ) }
    dend_56 { pt3dadd( -16.9074, 47.2438, 27.8296, 0.66 ) }
    dend_56 { pt3dadd( -17.3064, 47.833, 28.273, 0.22 ) }
    dend_56 { pt3dadd( -17.9481, 48.7424, 28.9718, 0.22 ) }
    dend_56 { pt3dadd( -18.456, 49.45, 29.529, 1.62 ) }
    dend_56 { pt3dadd( -19.0783, 50.3079, 30.245, 3.1 ) }
    dend_56 { pt3dadd( -20.7489, 52.4576, 32.1485, 0.29 ) }
    dend_56 { pt3dadd( -21.4444, 53.2699, 32.9164, 0.22 ) }
    dend_56 { pt3dadd( -21.773, 53.6268, 33.2515, 0.22 ) }
    dend_56 { pt3dadd( -21.8618, 53.7232, 33.3368, 0.22 ) }
    dend_56 { pt3dadd( -22.2471, 54.1392, 33.7092, 0.22 ) }
    dend_56 { pt3dadd( -22.6734, 54.5672, 34.1384, 0.22 ) }
    dend_56 { pt3dadd( -23.3198, 55.072, 34.6901, 0.22 ) }
    dend_56 { pt3dadd( -23.9774, 55.6591, 35.2786, 0.88 ) }
    dend_56 { pt3dadd( -24.3292, 56.0008, 35.5835, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 88/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -12.6595, 44.5067, 25.2072, 0.22 ) }
    dend_39 { pt3dadd( -10.4844, 45.2271, 26.324, 0.22 ) }
    dend_39 { pt3dadd( -9.47686, 45.5608, 26.8414, 0.37 ) }
    dend_39 { pt3dadd( -8.60156, 45.8506, 27.2908, 0.88 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 92/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -2.84264, 69.0192, 7.11548, 0.15 ) }
    dend_35 { pt3dadd( -3.61919, 70.9844, 7.08147, 0.15 ) }
    dend_35 { pt3dadd( -4.02533, 72.0229, 7.11428, 0.81 ) }
    dend_35 { pt3dadd( -4.34247, 72.8195, 7.10645, 1.18 ) }
    dend_35 { pt3dadd( -5.00835, 74.47, 7.05934, 0.22 ) }
    dend_35 { pt3dadd( -5.34929, 75.3671, 7.02586, 0.81 ) }
    dend_35 { pt3dadd( -5.5506, 75.9443, 7.01818, 0.81 ) }
    dend_35 { pt3dadd( -5.9031, 77.2085, 7.10168, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_35 { pt3dadd( -6.20477, 78.5625, 7.2183, 0.07 ) }
    dend_35 { pt3dadd( -6.32817, 79.2775, 7.27759, 0.96 ) }
    dend_35 { pt3dadd( -6.4842, 80.3936, 7.35108, 1.92 ) }
    dend_35 { pt3dadd( -6.70753, 81.8968, 7.46925, 0.22 ) }
    dend_35 { pt3dadd( -6.80984, 82.7001, 7.56118, 0.22 ) }
    dend_35 { pt3dadd( -6.88775, 83.4275, 7.67011, 0.22 ) }
    dend_35 { pt3dadd( -6.95453, 84.1113, 7.80799, 0.81 ) }
    dend_35 { pt3dadd( -7.04692, 84.9313, 7.97752, 1.11 ) }
    dend_35 { pt3dadd( -7.3165, 86.7189, 8.32989, 0.15 ) }
    dend_35 { pt3dadd( -7.54306, 88.0403, 8.54403, 0.15 ) }
    dend_35 { pt3dadd( -7.64337, 88.6038, 8.62407, 0.74 ) }
    dend_35 { pt3dadd( -7.81186, 89.7677, 8.77496, 1.92 ) }
    dend_35 { pt3dadd( -7.86839, 90.3115, 8.83534, 2.88 ) }
    dend_35 { pt3dadd( -7.94599, 91.5008, 8.97513, 1.84 ) }
    dend_35 { pt3dadd( -7.9933, 93.3623, 9.212, 0.22 ) }
    dend_35 { pt3dadd( -8.00731, 94.5732, 9.37033, 0.59 ) }
    dend_35 { pt3dadd( -7.99624, 95.3948, 9.47405, 0.59 ) }
    dend_35 { pt3dadd( -7.95678, 96.4519, 9.58506, 0.22 ) }
    dend_35 { pt3dadd( -7.88504, 97.629, 9.67483, 0.22 ) }
    dend_35 { pt3dadd( -7.82283, 98.495, 9.69979, 0.22 ) }
    dend_35 { pt3dadd( -7.82129, 99.395, 9.65783, 0.15 ) }
    dend_35 { pt3dadd( -7.92931, 100.528, 9.50573, 0.15 ) }
    dend_35 { pt3dadd( -8.09037, 101.426, 9.30268, 0.88 ) }
    dend_35 { pt3dadd( -8.35333, 102.575, 8.95027, 1.77 ) }
    dend_35 { pt3dadd( -8.57287, 103.429, 8.64778, 1.77 ) }
    dend_35 { pt3dadd( -9.10279, 105.107, 8.03524, 0.15 ) }
    dend_35 { pt3dadd( -9.39767, 105.925, 7.74507, 0.37 ) }
    dend_35 { pt3dadd( -9.67676, 106.67, 7.50912, 0.96 ) }
    dend_35 { pt3dadd( -10.0062, 107.574, 7.29802, 1.77 ) }
    dend_35 { pt3dadd( -10.5034, 109.048, 7.07863, 0.29 ) }
    dend_35 { pt3dadd( -10.9388, 110.568, 6.95818, 0.15 ) }
    dend_35 { pt3dadd( -11.0229, 110.971, 6.94956, 0.52 ) }
    dend_35 { pt3dadd( -11.2057, 111.855, 6.95613, 1.18 ) }
    dend_35 { pt3dadd( -11.5241, 113.32, 7.00781, 0.15 ) }
    dend_35 { pt3dadd( -11.7182, 114.212, 7.0556, 0.15 ) }
    dend_35 { pt3dadd( -11.86, 115.012, 7.12017, 1.03 ) }
    dend_35 { pt3dadd( -12.0124, 116.549, 7.30353, 2.8 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 37/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -2.84264, 69.0192, 7.11548, 0.22 ) }
    dend_34 { pt3dadd( -2.53867, 70.0543, 7.62474, 0.22 ) }
    dend_34 { pt3dadd( -2.25953, 71.0466, 8.13255, 0.22 ) }
    dend_34 { pt3dadd( -2.04086, 71.8088, 8.51846, 0.96 ) }
    dend_34 { pt3dadd( -1.86291, 72.366, 8.79581, 1.18 ) }
    dend_34 { pt3dadd( -1.50338, 73.3538, 9.26696, 0.15 ) }
    dend_34 { pt3dadd( -1.25088, 73.9468, 9.5479, 0.15 ) }
    dend_34 { pt3dadd( -1.04456, 74.3548, 9.72396, 0.15 ) }
    dend_34 { pt3dadd( -0.804981, 74.8193, 9.88414, 0.15 ) }
    dend_34 { pt3dadd( -0.562361, 75.3551, 10.009, 0.15 ) }
    dend_34 { pt3dadd( -0.307559, 75.9915, 10.0943, 1.33 ) }
    dend_34 { pt3dadd( -0.00529385, 76.8193, 10.1254, 2.73 ) }
    dend_34 { pt3dadd( 0.224878, 77.5889, 10.1159, 3.1 ) }
    dend_34 { pt3dadd( 0.68444, 79.8076, 10.0026, 0.22 ) }
    dend_34 { pt3dadd( 0.822239, 80.8095, 9.9299, 0.15 ) }
    dend_34 { pt3dadd( 0.878348, 81.5013, 9.87135, 0.52 ) }
    dend_34 { pt3dadd( 0.91017, 82.142, 9.81195, 0.74 ) }
    dend_34 { pt3dadd( 0.94943, 83.4584, 9.6801, 0.22 ) }
    dend_34 { pt3dadd( 0.97384, 84.228, 9.61577, 1.18 ) }
    dend_34 { pt3dadd( 1.00861, 84.9238, 9.58356, 2.58 ) }
    dend_34 { pt3dadd( 1.13587, 86.6446, 9.59315, 0.22 ) }
    dend_34 { pt3dadd( 1.19652, 87.361, 9.61951, 0.22 ) }
    dend_34 { pt3dadd( 1.25773, 88.1134, 9.6597, 0.81 ) }
    dend_34 { pt3dadd( 1.34937, 89.3387, 9.73984, 2.51 ) }
    dend_34 { pt3dadd( 1.47018, 91.4457, 9.89778, 0.22 ) }
    dend_34 { pt3dadd( 1.48703, 92.3456, 9.9704, 0.29 ) }
    dend_34 { pt3dadd( 1.44787, 93.3419, 10.0531, 0.15 ) }
    dend_34 { pt3dadd( 1.36659, 94.3531, 10.1328, 0.15 ) }
    dend_34 { pt3dadd( 1.26462, 95.1489, 10.1902, 1.03 ) }
    dend_34 { pt3dadd( 1.13155, 95.833, 10.2315, 1.99 ) }
    dend_34 { pt3dadd( 0.90891, 96.5854, 10.2626, 1.99 ) }
    dend_34 { pt3dadd( 0.285608, 98.2602, 10.3015, 0.15 ) }
    dend_34 { pt3dadd( -0.0200898, 98.9478, 10.3053, 0.15 ) }
    dend_34 { pt3dadd( -0.315511, 99.5409, 10.29, 0.15 ) }
    dend_34 { pt3dadd( -0.561392, 99.98, 10.2655, 0.44 ) }
    dend_34 { pt3dadd( -1.28967, 101.104, 10.174, 0.15 ) }
    dend_34 { pt3dadd( -1.91286, 101.935, 10.0852, 1.47 ) }
    dend_34 { pt3dadd( -2.4896, 102.578, 10.0027, 2.51 ) }
    dend_34 { pt3dadd( -3.47567, 103.567, 9.8719, 0.37 ) }
    dend_34 { pt3dadd( -4.03299, 104.086, 9.795, 0.22 ) }
    dend_34 { pt3dadd( -4.54097, 104.511, 9.72012, 0.07 ) }
    dend_34 { pt3dadd( -5.03123, 104.865, 9.65872, 0.29 ) }
    dend_34 { pt3dadd( -5.96378, 105.443, 9.57466, 0.07 ) }
    dend_34 { pt3dadd( -6.75984, 105.906, 9.52333, 0.44 ) }
    dend_34 { pt3dadd( -7.8699, 106.51, 9.46566, 0.07 ) }
    dend_34 { pt3dadd( -8.784, 107.002, 9.40477, 0.15 ) }
    dend_34 { pt3dadd( -9.39519, 107.323, 9.32019, 0.74 ) }
    dend_34 { pt3dadd( -10.2071, 107.731, 9.19487, 1.84 ) }
    dend_34 { pt3dadd( -11.4929, 108.326, 8.97111, 0.15 ) }
    dend_34 { pt3dadd( -12.1931, 108.632, 8.83787, 0.59 ) }
    dend_34 { pt3dadd( -12.7511, 108.865, 8.7233, 0.29 ) }
    dend_34 { pt3dadd( -13.9832, 109.408, 8.399, 1.03 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 89/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -18.0386, -21.8762, -26.8769, 1.47 ) }
    dend_31 { pt3dadd( -18.9998, -21.9962, -27.3246, 1.47 ) }
    dend_31 { pt3dadd( -19.9635, -22.2149, -27.9232, 0.52 ) }
    dend_31 { pt3dadd( -20.4119, -22.3753, -28.2561, 0.52 ) }
    dend_31 { pt3dadd( -20.8426, -22.5294, -28.5758, 1.11 ) }
    dend_31 { pt3dadd( -21.3192, -22.6998, -28.9296, 2.21 ) }
    dend_31 { pt3dadd( -21.7577, -22.8567, -29.255, 1.11 ) }
    dend_31 { pt3dadd( -22.4692, -23.2509, -29.9259, 0.44 ) }
    dend_31 { pt3dadd( -22.8683, -23.5915, -30.3889, 1.47 ) }
    dend_31 { pt3dadd( -28.4479, -25.0542, -32.9528, 1.47 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 99/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -18.0386, -21.8762, -26.8769, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_28 { pt3dadd( -18.2, -23.661, -27.3497, 0.22 ) }
    dend_28 { pt3dadd( -18.264, -24.2496, -27.5179, 0.22 ) }
    dend_28 { pt3dadd( -18.346, -24.9594, -27.7146, 0.96 ) }
    dend_28 { pt3dadd( -18.452, -25.9888, -28.0192, 0.22 ) }
    dend_28 { pt3dadd( -18.5045, -26.6965, -28.2497, 0.22 ) }
    dend_28 { pt3dadd( -18.5459, -27.2529, -28.4309, 0.81 ) }
    dend_28 { pt3dadd( -18.5888, -27.8281, -28.6368, 1.92 ) }
    dend_28 { pt3dadd( -18.6365, -28.5192, -28.8812, 0.81 ) }
    dend_28 { pt3dadd( -18.6719, -29.3992, -29.23, 0.15 ) }
    dend_28 { pt3dadd( -18.6692, -30.0669, -29.5325, 0.66 ) }
    dend_28 { pt3dadd( -18.5076, -37.3051, -33.0394, 0.66 ) }
    dend_28 { pt3dadd( -19.5013, -44.9573, -35.4205, 0.66 ) }
    dend_28 { pt3dadd( -20.536, -52.3446, -38.4785, 0.66 ) }
    dend_28 { pt3dadd( -22.7356, -59.7629, -40.7916, 0.66 ) }
    dend_28 { pt3dadd( -25.5878, -66.8794, -43.3031, 0.66 ) }
    dend_28 { pt3dadd( -27.281, -74.6944, -44.5545, 0.66 ) }
    dend_28 { pt3dadd( -28.4475, -82.712, -44.3481, 0.66 ) }
    dend_28 { pt3dadd( -30.3281, -90.4862, -43.0404, 0.66 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 18/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -8.13096, -123.848, 22.3009, 0.37 ) }
    dend_20 { pt3dadd( -6.99317, -125.424, 23.261, 0.37 ) }
    dend_20 { pt3dadd( -6.43484, -126.474, 23.8396, 0.22 ) }
    dend_20 { pt3dadd( -6.19457, -127.099, 24.164, 0.22 ) }
    dend_20 { pt3dadd( -5.97563, -127.875, 24.5514, 0.22 ) }
    dend_20 { pt3dadd( -5.81746, -128.588, 24.8854, 0.29 ) }
    dend_20 { pt3dadd( -5.67526, -129.494, 25.2552, 0.29 ) }
    dend_20 { pt3dadd( -5.69795, -130.275, 25.495, 0.22 ) }
    dend_20 { pt3dadd( -5.77284, -131.031, 25.6968, 0.81 ) }
    dend_20 { pt3dadd( -5.85895, -131.755, 25.885, 1.77 ) }
    dend_20 { pt3dadd( -5.94182, -132.493, 26.0703, 2.43 ) }
    dend_20 { pt3dadd( -6.03963, -133.964, 26.4087, 0.96 ) }
    dend_20 { pt3dadd( -6.10895, -136.024, 26.8742, 0.22 ) }
    dend_20 { pt3dadd( -6.1465, -136.83, 27.0482, 1.18 ) }
    dend_20 { pt3dadd( -6.22229, -137.745, 27.2327, 1.7 ) }
    dend_20 { pt3dadd( -6.26923, -138.134, 27.3077, 1.7 ) }
    dend_20 { pt3dadd( -6.4822, -139.399, 27.5693, 0.74 ) }
    dend_20 { pt3dadd( -6.72927, -140.625, 27.8326, 0.29 ) }
    dend_20 { pt3dadd( -6.97825, -141.788, 28.067, 0.29 ) }
    dend_20 { pt3dadd( -7.1489, -142.666, 28.259, 0.29 ) }
    dend_20 { pt3dadd( -7.30759, -143.384, 28.4145, 0.66 ) }
    dend_20 { pt3dadd( -7.50359, -144.199, 28.6026, 1.47 ) }
    dend_20 { pt3dadd( -7.68971, -144.925, 28.7895, 2.73 ) }
    dend_20 { pt3dadd( -7.81489, -145.596, 28.9759, 2.88 ) }
    dend_20 { pt3dadd( -7.87665, -147.31, 29.5415, 1.84 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 43/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -8.13096, -123.848, 22.3009, 0.22 ) }
    dend_15 { pt3dadd( -10.3167, -124.947, 22.2422, 0.22 ) }
    dend_15 { pt3dadd( -11.4598, -125.547, 22.1687, 0.22 ) }
    dend_15 { pt3dadd( -11.9681, -125.864, 22.1188, 0.22 ) }
    dend_15 { pt3dadd( -12.3512, -126.133, 22.074, 0.22 ) }
    dend_15 { pt3dadd( -12.949, -126.58, 22.0161, 0.29 ) }
    dend_15 { pt3dadd( -13.4043, -126.921, 21.9747, 0.96 ) }
    dend_15 { pt3dadd( -14.3496, -127.663, 21.8216, 1.84 ) }
    dend_15 { pt3dadd( -15.6811, -128.735, 21.5245, 0.22 ) }
    dend_15 { pt3dadd( -16.4706, -129.356, 21.3311, 0.22 ) }
    dend_15 { pt3dadd( -17.3475, -129.971, 21.1026, 0.96 ) }
    dend_15 { pt3dadd( -18.4262, -130.587, 20.8264, 0.22 ) }
    dend_15 { pt3dadd( -19.4991, -130.981, 20.5422, 0.22 ) }
    dend_15 { pt3dadd( -19.9228, -131.057, 20.427, 0.22 ) }
    dend_15 { pt3dadd( -20.8351, -131.107, 20.1889, 0.22 ) }
    dend_15 { pt3dadd( -21.9425, -131.148, 19.9155, 0.29 ) }
    dend_15 { pt3dadd( -22.7145, -131.208, 19.7367, 1.25 ) }
    dend_15 { pt3dadd( -24.0937, -131.398, 19.4735, 2.88 ) }
    dend_15 { pt3dadd( -24.6756, -131.501, 19.3812, 2.73 ) }
    dend_15 { pt3dadd( -27.0206, -132.087, 19.006, 0.29 ) }
    dend_15 { pt3dadd( -27.9334, -132.404, 18.8582, 0.66 ) }
    dend_15 { pt3dadd( -29.145, -132.903, 18.6549, 0.29 ) }
    dend_15 { pt3dadd( -29.8553, -133.21, 18.514, 0.22 ) }
    dend_15 { pt3dadd( -30.7935, -133.604, 18.3143, 0.22 ) }
    dend_15 { pt3dadd( -31.7589, -133.961, 18.0793, 0.22 ) }
    dend_15 { pt3dadd( -33.2507, -134.417, 17.6632, 0.22 ) }
    dend_15 { pt3dadd( -33.9113, -134.548, 17.4467, 0.37 ) }
    dend_15 { pt3dadd( -35.0448, -134.713, 17.0458, 0.37 ) }
    dend_15 { pt3dadd( -36.0833, -134.822, 16.6502, 0.66 ) }
    dend_15 { pt3dadd( -36.7682, -134.867, 16.3743, 1.62 ) }
    dend_15 { pt3dadd( -37.5664, -134.818, 16.0275, 2.51 ) }
    dend_15 { pt3dadd( -38.9409, -134.547, 15.377, 2.73 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 75/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 8.99917, -88.5912, 24.2768, 3.24 ) }
    dend_13 { pt3dadd( 9.12435, -89.401, 24.3383, 3.24 ) }
    dend_13 { pt3dadd( 9.24937, -90.0987, 24.3906, 3.24 ) }
    dend_13 { pt3dadd( 9.53394, -91.5219, 24.4969, 0.22 ) }
    dend_13 { pt3dadd( 9.7312, -92.4293, 24.5642, 0.29 ) }
    dend_13 { pt3dadd( 9.84283, -92.913, 24.5998, 0.22 ) }
    dend_13 { pt3dadd( 9.98622, -93.5004, 24.6427, 0.22 ) }
    dend_13 { pt3dadd( 10.088, -93.8665, 24.6628, 0.22 ) }
    dend_13 { pt3dadd( 10.1711, -94.1422, 24.6792, 0.22 ) }
    dend_13 { pt3dadd( 10.307, -94.5841, 24.7063, 0.74 ) }
    dend_13 { pt3dadd( 10.3891, -94.8893, 24.7235, 0.74 ) }
    dend_13 { pt3dadd( 10.4758, -95.4148, 24.7588, 0.22 ) }
    dend_13 { pt3dadd( 10.512, -95.879, 24.7997, 0.22 ) }
    dend_13 { pt3dadd( 10.5587, -96.5243, 24.8538, 0.22 ) }
    dend_13 { pt3dadd( 10.5987, -96.947, 24.8687, 0.22 ) }
    dend_13 { pt3dadd( 10.6726, -97.5371, 24.8701, 0.22 ) }
    dend_13 { pt3dadd( 10.7815, -98.1471, 24.8588, 1.33 ) }
    dend_13 { pt3dadd( 10.9593, -98.9344, 24.8255, 3.02 ) }
    dend_13 { pt3dadd( 11.2543, -99.9412, 24.7643, 0.88 ) }
    dend_13 { pt3dadd( 11.5767, -100.901, 24.7129, 0.22 ) }
    dend_13 { pt3dadd( 11.7492, -101.386, 24.6928, 0.22 ) }
    dend_13 { pt3dadd( 11.9878, -102.042, 24.6762, 0.22 ) }
    dend_13 { pt3dadd( 12.1263, -102.443, 24.678, 1.18 ) }
    dend_13 { pt3dadd( 12.3739, -103.239, 24.7326, 2.06 ) }
    dend_13 { pt3dadd( 12.6604, -104.357, 24.9131, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_13 { pt3dadd( 12.75, -104.887, 25.0466, 0.52 ) }
    dend_13 { pt3dadd( 12.7977, -105.342, 25.182, 0.52 ) }
    dend_13 { pt3dadd( 12.8611, -106.205, 25.4717, 0.22 ) }
    dend_13 { pt3dadd( 12.8845, -106.582, 25.6113, 0.22 ) }
    dend_13 { pt3dadd( 12.926, -107.427, 25.948, 1.99 ) }
    dend_13 { pt3dadd( 13.0205, -108.866, 26.5334, 0.29 ) }
    dend_13 { pt3dadd( 13.048, -109.333, 26.7209, 0.22 ) }
    dend_13 { pt3dadd( 13.0928, -110.122, 27.0284, 0.22 ) }
    dend_13 { pt3dadd( 13.1212, -110.523, 27.1729, 1.03 ) }
    dend_13 { pt3dadd( 13.158, -110.995, 27.3304, 2.14 ) }
    dend_13 { pt3dadd( 13.1994, -111.441, 27.4706, 2.06 ) }
    dend_13 { pt3dadd( 13.3092, -112.55, 27.8062, 0.22 ) }
    dend_13 { pt3dadd( 13.3429, -113.042, 27.9468, 0.66 ) }
    dend_13 { pt3dadd( 13.386, -114.071, 28.2233, 0.22 ) }
    dend_13 { pt3dadd( 13.4082, -114.735, 28.3889, 0.22 ) }
    dend_13 { pt3dadd( 13.4274, -115.171, 28.4806, 0.66 ) }
    dend_13 { pt3dadd( 13.4652, -115.824, 28.5991, 0.22 ) }
    dend_13 { pt3dadd( 13.5102, -116.413, 28.691, 1.55 ) }
    dend_13 { pt3dadd( 13.5472, -116.899, 28.7586, 2.8 ) }
    dend_13 { pt3dadd( 13.5874, -117.389, 28.8157, 2.58 ) }
    dend_13 { pt3dadd( 13.7712, -119.036, 28.9546, 0.22 ) }
    dend_13 { pt3dadd( 13.8152, -119.548, 28.9972, 0.22 ) }
    dend_13 { pt3dadd( 13.8449, -119.99, 29.0268, 0.59 ) }
    dend_13 { pt3dadd( 13.8683, -120.387, 29.056, 0.29 ) }
    dend_13 { pt3dadd( 13.8916, -120.9, 29.0952, 1.03 ) }
    dend_13 { pt3dadd( 13.9154, -121.516, 29.136, 2.06 ) }
    dend_13 { pt3dadd( 13.9323, -122.759, 29.1934, 0.15 ) }
    dend_13 { pt3dadd( 13.9395, -123.072, 29.2003, 0.15 ) }
    dend_13 { pt3dadd( 13.9711, -123.764, 29.1997, 0.29 ) }
    dend_13 { pt3dadd( 13.9985, -124.233, 29.1957, 0.15 ) }
    dend_13 { pt3dadd( 14.034, -124.769, 29.1875, 0.15 ) }
    dend_13 { pt3dadd( 14.0726, -125.223, 29.1887, 0.96 ) }
    dend_13 { pt3dadd( 14.1257, -125.695, 29.1904, 2.06 ) }
    dend_13 { pt3dadd( 14.1855, -126.343, 29.2153, 2.14 ) }
    dend_13 { pt3dadd( 14.2828, -127.874, 29.3145, 0.22 ) }
    dend_13 { pt3dadd( 14.292, -128.368, 29.3734, 0.22 ) }
    dend_13 { pt3dadd( 14.2842, -129.051, 29.4884, 0.22 ) }
    dend_13 { pt3dadd( 14.2779, -129.252, 29.5317, 0.59 ) }
    dend_13 { pt3dadd( 14.2493, -129.752, 29.6567, 1.4 ) }
    dend_13 { pt3dadd( 14.215, -130.276, 29.8003, 0.66 ) }
    dend_13 { pt3dadd( 14.1508, -131.351, 30.1197, 0.22 ) }
    dend_13 { pt3dadd( 14.1035, -131.877, 30.2599, 0.22 ) }
    dend_13 { pt3dadd( 14.0612, -132.273, 30.3512, 0.22 ) }
    dend_13 { pt3dadd( 14.0203, -132.705, 30.4444, 1.03 ) }
    dend_13 { pt3dadd( 13.9804, -133.356, 30.5704, 2.21 ) }
    dend_13 { pt3dadd( 13.9441, -134.74, 30.8275, 0.15 ) }
    dend_13 { pt3dadd( 13.9579, -135.571, 30.9639, 0.15 ) }
    dend_13 { pt3dadd( 13.9683, -135.911, 31.0181, 0.81 ) }
    dend_13 { pt3dadd( 13.9857, -136.397, 31.0927, 1.33 ) }
    dend_13 { pt3dadd( 14.0107, -137.124, 31.2039, 0.22 ) }
    dend_13 { pt3dadd( 14.0344, -137.855, 31.311, 0.22 ) }
    dend_13 { pt3dadd( 14.0526, -138.308, 31.3729, 0.88 ) }
    dend_13 { pt3dadd( 14.0691, -138.708, 31.4346, 0.66 ) }
    dend_13 { pt3dadd( 14.1015, -139.609, 31.5974, 0.15 ) }
    dend_13 { pt3dadd( 14.1289, -140.271, 31.7302, 0.15 ) }
    dend_13 { pt3dadd( 14.1449, -140.519, 31.7846, 0.74 ) }
    dend_13 { pt3dadd( 14.1932, -141.018, 31.8967, 1.18 ) }
    dend_13 { pt3dadd( 14.3226, -142.023, 32.137, 0.22 ) }
    dend_13 { pt3dadd( 14.427, -142.602, 32.2917, 0.22 ) }
    dend_13 { pt3dadd( 14.5194, -142.962, 32.3897, 0.22 ) }
    dend_13 { pt3dadd( 14.6317, -143.326, 32.492, 0.22 ) }
    dend_13 { pt3dadd( 14.7825, -143.78, 32.6161, 0.22 ) }
    dend_13 { pt3dadd( 14.9437, -144.283, 32.7449, 1.33 ) }
    dend_13 { pt3dadd( 15.1138, -144.867, 32.8824, 2.21 ) }
    dend_13 { pt3dadd( 15.3804, -145.909, 33.1043, 0.15 ) }
    dend_13 { pt3dadd( 15.5002, -146.335, 33.2018, 0.29 ) }
    dend_13 { pt3dadd( 15.5656, -146.542, 33.2517, 0.29 ) }
    dend_13 { pt3dadd( 15.7985, -147.194, 33.4232, 0.15 ) }
    dend_13 { pt3dadd( 15.8658, -147.386, 33.4739, 0.15 ) }
    dend_13 { pt3dadd( 16.0005, -147.812, 33.5772, 0.66 ) }
    dend_13 { pt3dadd( 16.2178, -148.567, 33.7723, 0.15 ) }
    dend_13 { pt3dadd( 16.2975, -148.866, 33.8436, 0.15 ) }
    dend_13 { pt3dadd( 16.3605, -149.083, 33.9028, 0.15 ) }
    dend_13 { pt3dadd( 16.5184, -149.583, 34.0624, 0.15 ) }
    dend_13 { pt3dadd( 16.6133, -149.902, 34.1683, 0.37 ) }
    dend_13 { pt3dadd( 16.7366, -150.363, 34.3175, 1.03 ) }
    dend_13 { pt3dadd( 16.8601, -150.856, 34.4754, 0.22 ) }
    dend_13 { pt3dadd( 17.0472, -151.549, 34.6989, 0.22 ) }
    dend_13 { pt3dadd( 17.2224, -152.14, 34.8872, 1.4 ) }
    dend_13 { pt3dadd( 17.3871, -152.656, 35.0442, 2.14 ) }
    dend_13 { pt3dadd( 17.5614, -153.216, 35.2084, 1.4 ) }
    dend_13 { pt3dadd( 17.8597, -154.281, 35.4944, 0.22 ) }
    dend_13 { pt3dadd( 17.9407, -154.616, 35.5753, 0.81 ) }
    dend_13 { pt3dadd( 18.0233, -155.041, 35.6645, 1.55 ) }
    dend_13 { pt3dadd( 18.1574, -155.866, 35.8264, 0.29 ) }
    dend_13 { pt3dadd( 18.2545, -156.593, 35.9673, 0.22 ) }
    dend_13 { pt3dadd( 18.3073, -157.088, 36.0574, 0.22 ) }
    dend_13 { pt3dadd( 18.3383, -157.592, 36.1318, 0.29 ) }
    dend_13 { pt3dadd( 18.3555, -158.167, 36.2171, 0.15 ) }
    dend_13 { pt3dadd( 18.3618, -158.606, 36.2809, 0.96 ) }
    dend_13 { pt3dadd( 18.3649, -158.91, 36.3215, 1.47 ) }
    dend_13 { pt3dadd( 18.378, -159.364, 36.3706, 1.47 ) }
    dend_13 { pt3dadd( 18.4329, -160.16, 36.4537, 0.22 ) }
    dend_13 { pt3dadd( 18.5202, -160.941, 36.539, 0.22 ) }
    dend_13 { pt3dadd( 18.5887, -161.378, 36.5838, 0.88 ) }
    dend_13 { pt3dadd( 18.7053, -161.963, 36.6439, 0.88 ) }
    dend_13 { pt3dadd( 18.9186, -162.874, 36.7449, 0.15 ) }
    dend_13 { pt3dadd( 19.0961, -163.49, 36.82, 0.15 ) }
    dend_13 { pt3dadd( 19.245, -163.934, 36.8761, 0.81 ) }
    dend_13 { pt3dadd( 19.4967, -164.642, 36.9885, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_13 { pt3dadd( 19.6578, -165.099, 37.0789, 0.81 ) }
    dend_13 { pt3dadd( 19.8449, -165.647, 37.2045, 0.52 ) }
    dend_13 { pt3dadd( 19.9939, -166.141, 37.3279, 1.62 ) }
    dend_13 { pt3dadd( 20.1146, -166.654, 37.4612, 1.62 ) }
    dend_13 { pt3dadd( 20.2995, -167.703, 37.716, 0.22 ) }
    dend_13 { pt3dadd( 20.378, -168.29, 37.847, 0.22 ) }
    dend_13 { pt3dadd( 20.4146, -168.64, 37.9107, 0.74 ) }
    dend_13 { pt3dadd( 20.447, -169.034, 37.9689, 0.29 ) }
    dend_13 { pt3dadd( 20.4795, -169.603, 38.0443, 1.47 ) }
    dend_13 { pt3dadd( 20.5048, -169.999, 38.0923, 1.47 ) }
    dend_13 { pt3dadd( 20.5617, -170.932, 38.1798, 0.15 ) }
    dend_13 { pt3dadd( 20.6052, -171.385, 38.2451, 0.52 ) }
    dend_13 { pt3dadd( 20.6878, -172.017, 38.3585, 0.15 ) }
    dend_13 { pt3dadd( 20.7634, -172.492, 38.4557, 0.15 ) }
    dend_13 { pt3dadd( 20.8079, -172.756, 38.5136, 0.66 ) }
    dend_13 { pt3dadd( 20.8915, -173.239, 38.6257, 1.47 ) }
    dend_13 { pt3dadd( 21.0826, -174.311, 38.8806, 0.22 ) }
    dend_13 { pt3dadd( 21.193, -174.897, 39.0099, 0.15 ) }
    dend_13 { pt3dadd( 21.27, -175.28, 39.0776, 0.15 ) }
    dend_13 { pt3dadd( 21.3678, -175.768, 39.1551, 0.74 ) }
    dend_13 { pt3dadd( 21.5028, -176.505, 39.2595, 0.15 ) }
    dend_13 { pt3dadd( 21.5914, -176.993, 39.3218, 0.15 ) }
    dend_13 { pt3dadd( 21.7133, -177.782, 39.4071, 0.22 ) }
    dend_13 { pt3dadd( 21.7859, -178.305, 39.4705, 1.18 ) }
    dend_13 { pt3dadd( 21.865, -178.916, 39.5526, 1.7 ) }
    dend_13 { pt3dadd( 22.0326, -180.189, 39.7442, 0.22 ) }
    dend_13 { pt3dadd( 22.0996, -180.683, 39.8234, 0.22 ) }
    dend_13 { pt3dadd( 22.1689, -181.146, 39.9031, 0.15 ) }
    dend_13 { pt3dadd( 22.2738, -181.81, 40.03, 0.15 ) }
    dend_13 { pt3dadd( 22.3218, -182.191, 40.1108, 0.44 ) }
    dend_13 { pt3dadd( 22.4273, -183.242, 40.3381, 0.15 ) }
    dend_13 { pt3dadd( 22.4476, -183.578, 40.4194, 0.88 ) }
    dend_13 { pt3dadd( 22.4585, -184.052, 40.538, 1.7 ) }
    dend_13 { pt3dadd( 22.4598, -184.581, 40.6686, 1.4 ) }
    dend_13 { pt3dadd( 22.4363, -185.811, 40.9528, 0.15 ) }
    dend_13 { pt3dadd( 22.4296, -186.06, 41.0067, 0.22 ) }
    dend_13 { pt3dadd( 22.3962, -186.932, 41.1827, 0.07 ) }
    dend_13 { pt3dadd( 22.3836, -187.376, 41.2646, 1.33 ) }
    dend_13 { pt3dadd( 22.3757, -187.767, 41.3307, 1.33 ) }
    dend_13 { pt3dadd( 22.3877, -188.484, 41.445, 0.07 ) }
    dend_13 { pt3dadd( 22.4306, -189.009, 41.5157, 0.15 ) }
    dend_13 { pt3dadd( 22.4737, -189.36, 41.5582, 0.15 ) }
    dend_13 { pt3dadd( 22.5318, -189.714, 41.5955, 0.22 ) }
    dend_13 { pt3dadd( 22.649, -190.387, 41.6653, 0.07 ) }
    dend_13 { pt3dadd( 22.6892, -190.633, 41.6902, 0.66 ) }
    dend_13 { pt3dadd( 22.7467, -191.031, 41.7265, 0.29 ) }
    dend_13 { pt3dadd( 22.8722, -191.966, 41.8011, 0.15 ) }
    dend_13 { pt3dadd( 22.9089, -192.208, 41.8216, 0.22 ) }
    dend_13 { pt3dadd( 22.984, -192.702, 41.8688, 0.07 ) }
    dend_13 { pt3dadd( 23.0497, -193.143, 41.9188, 0.74 ) }
    dend_13 { pt3dadd( 23.1385, -193.834, 42.0133, 0.15 ) }
    dend_13 { pt3dadd( 23.1746, -194.173, 42.0661, 0.59 ) }
    dend_13 { pt3dadd( 23.2467, -195.087, 42.2129, 0.15 ) }
    dend_13 { pt3dadd( 23.2728, -195.474, 42.2841, 0.29 ) }
    dend_13 { pt3dadd( 23.2993, -195.959, 42.3712, 0.15 ) }
    dend_13 { pt3dadd( 23.3137, -196.349, 42.4393, 0.88 ) }
    dend_13 { pt3dadd( 23.319, -196.689, 42.495, 1.92 ) }
    dend_13 { pt3dadd( 23.3168, -198.167, 42.7186, 0.22 ) }
    dend_13 { pt3dadd( 23.3096, -198.926, 42.8208, 1.7 ) }
    dend_13 { pt3dadd( 23.2974, -200.595, 43.0255, 0.15 ) }
    dend_13 { pt3dadd( 23.2871, -201.302, 43.1015, 0.15 ) }
    dend_13 { pt3dadd( 23.2758, -201.744, 43.1452, 0.81 ) }
    dend_13 { pt3dadd( 23.2416, -202.74, 43.2323, 0.22 ) }
    dend_13 { pt3dadd( 23.2231, -203.306, 43.2728, 1.25 ) }
    dend_13 { pt3dadd( 23.2159, -203.615, 43.2914, 1.84 ) }
    dend_13 { pt3dadd( 23.1994, -205.011, 43.393, 0.15 ) }
    dend_13 { pt3dadd( 23.2027, -205.371, 43.4211, 0.29 ) }
    dend_13 { pt3dadd( 23.2288, -206.013, 43.491, 0.07 ) }
    dend_13 { pt3dadd( 23.2509, -206.409, 43.5433, 0.15 ) }
    dend_13 { pt3dadd( 23.311, -207.35, 43.6876, 0.15 ) }
    dend_13 { pt3dadd( 23.3311, -207.602, 43.7307, 0.52 ) }
    dend_13 { pt3dadd( 23.3663, -207.96, 43.7984, 1.4 ) }
    dend_13 { pt3dadd( 23.4281, -208.992, 44.0136, 0.07 ) }
    dend_13 { pt3dadd( 23.4442, -209.727, 44.1764, 0.15 ) }
    dend_13 { pt3dadd( 23.4327, -210.066, 44.2595, 0.74 ) }
    dend_13 { pt3dadd( 23.4092, -210.408, 44.3478, 1.92 ) }
    dend_13 { pt3dadd( 23.3654, -210.929, 44.4988, 1.92 ) }
    dend_13 { pt3dadd( 23.2422, -212.285, 44.9312, 0.15 ) }
    dend_13 { pt3dadd( 23.2004, -212.76, 45.1092, 0.59 ) }
    dend_13 { pt3dadd( 23.1608, -213.535, 45.4564, 0.07 ) }
    dend_13 { pt3dadd( 23.1573, -213.715, 45.5472, 0.15 ) }
    dend_13 { pt3dadd( 23.1684, -214.312, 45.8743, 0.15 ) }
    dend_13 { pt3dadd( 23.1923, -214.729, 46.1114, 0.37 ) }
    dend_13 { pt3dadd( 23.2518, -215.248, 46.4012, 0.96 ) }
    dend_13 { pt3dadd( 23.3394, -215.723, 46.6375, 1.47 ) }
    dend_13 { pt3dadd( 23.5413, -216.546, 47.0156, 0.15 ) }
    dend_13 { pt3dadd( 23.6672, -217.012, 47.2119, 0.15 ) }
    dend_13 { pt3dadd( 23.7692, -217.371, 47.3436, 1.11 ) }
    dend_13 { pt3dadd( 23.8759, -217.741, 47.4623, 1.7 ) }
    dend_13 { pt3dadd( 24.1828, -218.859, 47.751, 0.15 ) }
    dend_13 { pt3dadd( 24.2876, -219.255, 47.8396, 0.81 ) }
    dend_13 { pt3dadd( 24.4147, -219.723, 47.9308, 1.03 ) }
    dend_13 { pt3dadd( 24.7541, -220.842, 48.1455, 0.15 ) }
    dend_13 { pt3dadd( 24.8955, -221.262, 48.2302, 0.22 ) }
    dend_13 { pt3dadd( 25.0843, -221.818, 48.3371, 0.07 ) }
    dend_13 { pt3dadd( 25.2018, -222.191, 48.4013, 0.88 ) }
    dend_13 { pt3dadd( 25.3343, -222.632, 48.4771, 1.62 ) }
    dend_13 { pt3dadd( 25.6549, -223.668, 48.6735, 0.15 ) }
    dend_13 { pt3dadd( 25.8316, -224.176, 48.7748, 1.33 ) }
    dend_13 { pt3dadd( 26.1848, -225.135, 48.9775, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( 26.2857, -225.427, 49.0436, 0.22 ) }
    dend_13 { pt3dadd( 26.564, -226.36, 49.2688, 0.07 ) }
    dend_13 { pt3dadd( 26.6592, -226.725, 49.3683, 0.96 ) }
    dend_13 { pt3dadd( 26.8748, -227.694, 49.6521, 0.15 ) }
    dend_13 { pt3dadd( 26.9727, -228.13, 49.7901, 1.11 ) }
    dend_13 { pt3dadd( 27.293, -229.458, 50.2395, 0.15 ) }
    dend_13 { pt3dadd( 27.4421, -230.038, 50.4277, 1.11 ) }
    dend_13 { pt3dadd( 27.5799, -230.564, 50.5852, 1.47 ) }
    dend_13 { pt3dadd( 27.8864, -231.82, 50.9299, 0.15 ) }
    dend_13 { pt3dadd( 27.9958, -232.267, 51.038, 0.88 ) }
    dend_13 { pt3dadd( 28.1392, -232.81, 51.1426, 1.33 ) }
    dend_13 { pt3dadd( 28.4701, -234.028, 51.2878, 0.15 ) }
    dend_13 { pt3dadd( 28.6325, -234.674, 51.3154, 0.96 ) }
    dend_13 { pt3dadd( 28.8934, -235.909, 51.2772, 0.15 ) }
    dend_13 { pt3dadd( 28.963, -236.413, 51.2313, 0.15 ) }
    dend_13 { pt3dadd( 28.9984, -236.954, 51.1737, 0.74 ) }
    dend_13 { pt3dadd( 28.9708, -237.777, 51.0771, 0.44 ) }
    dend_13 { pt3dadd( 28.8998, -238.339, 51.0066, 1.11 ) }
    dend_13 { pt3dadd( 28.8159, -238.765, 50.9551, 1.7 ) }
    dend_13 { pt3dadd( 28.4433, -240.288, 50.7956, 0.15 ) }
    dend_13 { pt3dadd( 28.2234, -241.071, 50.7335, 1.33 ) }
    dend_13 { pt3dadd( 27.9943, -241.818, 50.6984, 0.15 ) }
    dend_13 { pt3dadd( 27.9004, -242.111, 50.6969, 0.74 ) }
    dend_13 { pt3dadd( 27.7848, -242.468, 50.7137, 1.4 ) }
    dend_13 { pt3dadd( 27.6353, -242.936, 50.752, 0.74 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 8.99917, -88.5912, 24.2768, 1.03 ) }
    dend_12 { pt3dadd( 7.38805, -89.5686, 27.938, 1.03 ) }
    dend_12 { pt3dadd( 7.0691, -89.7301, 28.7125, 1.03 ) }
    dend_12 { pt3dadd( 6.79413, -89.8513, 29.4355, 1.03 ) }
    dend_12 { pt3dadd( 6.54245, -89.9682, 30.1399, 1.03 ) }
    dend_12 { pt3dadd( 6.37697, -90.055, 30.6714, 1.03 ) }
    dend_12 { pt3dadd( 6.18462, -90.1772, 31.4001, 1.03 ) }
    dend_12 { pt3dadd( 6.20562, -90.2288, 31.8848, 0.88 ) }
    dend_12 { pt3dadd( 6.2193, -90.292, 32.3132, 0.88 ) }
    dend_12 { pt3dadd( 6.18052, -90.4625, 32.9015, 0.44 ) }
    dend_12 { pt3dadd( 6.08192, -90.7979, 33.4861, 0.59 ) }
    dend_12 { pt3dadd( 5.98484, -91.0864, 33.8926, 0.22 ) }
    dend_12 { pt3dadd( 5.72602, -91.6555, 34.8606, 0.22 ) }
    dend_12 { pt3dadd( 5.50438, -92.0285, 35.6513, 0.44 ) }
    dend_12 { pt3dadd( 5.36893, -92.1867, 36.1337, 1.4 ) }
    dend_12 { pt3dadd( 5.13476, -92.354, 37.0249, 2.14 ) }
    dend_12 { pt3dadd( 4.86081, -92.4288, 38.3417, 0.59 ) }
    dend_12 { pt3dadd( 4.60678, -92.3181, 40.3554, 0.59 ) }
    dend_12 { pt3dadd( 4.60886, -92.2109, 41.0308, 0.44 ) }
    dend_12 { pt3dadd( 4.73424, -91.9304, 42.1771, 0.81 ) }
    dend_12 { pt3dadd( 4.89795, -91.6322, 43.1007, 1.99 ) }
    dend_12 { pt3dadd( 5.25707, -91.1027, 44.4067, 0.22 ) }
    dend_12 { pt3dadd( 5.48355, -90.8409, 44.9876, 1.03 ) }
    dend_12 { pt3dadd( 5.88042, -90.4777, 45.7792, 0.22 ) }
    dend_12 { pt3dadd( 6.3459, -90.1102, 46.6599, 0.96 ) }
    dend_12 { pt3dadd( 6.65762, -89.8859, 47.2309, 1.92 ) }
    dend_12 { pt3dadd( 7.30053, -89.413, 48.6394, 0.22 ) }
    dend_12 { pt3dadd( 7.52155, -89.2154, 49.2593, 0.22 ) }
    dend_12 { pt3dadd( 7.63545, -89.097, 49.6316, 0.22 ) }
    dend_12 { pt3dadd( 7.81911, -88.8837, 50.2902, 1.11 ) }
    dend_12 { pt3dadd( 8.05221, -88.6007, 51.1288, 2.58 ) }
    dend_12 { pt3dadd( 8.49425, -88.0025, 52.7616, 1.11 ) }
    dend_12 { pt3dadd( 8.69397, -87.6914, 53.5425, 0.44 ) }
    dend_12 { pt3dadd( 8.86777, -87.4246, 54.2499, 0.44 ) }
    dend_12 { pt3dadd( 8.96429, -87.2809, 54.6937, 0.22 ) }
    dend_12 { pt3dadd( 9.05033, -87.1826, 55.0898, 0.22 ) }
    dend_12 { pt3dadd( 9.13789, -87.1186, 55.4822, 0.22 ) }
    dend_12 { pt3dadd( 9.2752, -87.0698, 56.1581, 1.4 ) }
    dend_12 { pt3dadd( 9.416, -87.1021, 57.4461, 0.37 ) }
    dend_12 { pt3dadd( 9.37831, -87.2146, 58.5417, 0.29 ) }
    dend_12 { pt3dadd( 9.25594, -87.3895, 59.4116, 0.29 ) }
    dend_12 { pt3dadd( 9.21973, -87.4423, 59.5817, 0.29 ) }
    dend_12 { pt3dadd( 9.0396, -87.7242, 60.1569, 0.29 ) }
    dend_12 { pt3dadd( 8.83052, -88.0695, 60.6785, 0.29 ) }
    dend_12 { pt3dadd( 8.49877, -88.6897, 61.439, 0.59 ) }
    dend_12 { pt3dadd( 8.25693, -89.1902, 61.9563, 1.84 ) }
    dend_12 { pt3dadd( 8.03283, -89.6638, 62.398, 2.06 ) }
    dend_12 { pt3dadd( 7.53997, -90.7584, 63.3401, 0.52 ) }
    dend_12 { pt3dadd( 7.26384, -91.4187, 63.8351, 0.22 ) }
    dend_12 { pt3dadd( 7.01425, -92.0305, 64.2372, 0.22 ) }
    dend_12 { pt3dadd( 6.83986, -92.4344, 64.4577, 0.22 ) }
    dend_12 { pt3dadd( 6.67739, -92.7051, 64.5844, 0.52 ) }
    dend_12 { pt3dadd( 6.38205, -93.0526, 64.7243, 0.81 ) }
    dend_12 { pt3dadd( 5.50393, -93.7488, 64.9822, 0.22 ) }
    dend_12 { pt3dadd( 4.84628, -94.1215, 65.1375, 1.47 ) }
    dend_12 { pt3dadd( 4.39035, -94.3161, 65.2408, 1.92 ) }
    dend_12 { pt3dadd( 3.34261, -94.6545, 65.4926, 0.44 ) }
    dend_12 { pt3dadd( 2.83456, -94.7682, 65.6194, 0.22 ) }
    dend_12 { pt3dadd( 2.23315, -94.8167, 65.7732, 0.81 ) }
    dend_12 { pt3dadd( 1.24969, -94.774, 66.035, 0.22 ) }
    dend_12 { pt3dadd( 0.740423, -94.7297, 66.1743, 0.22 ) }
    dend_12 { pt3dadd( 0.476009, -94.7096, 66.2541, 0.22 ) }
    dend_12 { pt3dadd( -0.0190835, -94.7023, 66.4157, 0.59 ) }
    dend_12 { pt3dadd( -1.05065, -94.7579, 66.7817, 0.37 ) }
    dend_12 { pt3dadd( -1.70268, -94.8296, 67.0368, 0.37 ) }
    dend_12 { pt3dadd( -2.24284, -94.8955, 67.2986, 0.37 ) }
    dend_12 { pt3dadd( -2.64904, -94.9519, 67.5563, 0.37 ) }
    dend_12 { pt3dadd( -3.11328, -95.0739, 67.9577, 0.37 ) }
    dend_12 { pt3dadd( -3.40243, -95.2331, 68.3092, 0.37 ) }
    dend_12 { pt3dadd( -3.62538, -95.4158, 68.6398, 0.37 ) }
    dend_12 { pt3dadd( -3.92067, -95.6221, 69.0709, 0.37 ) }
    dend_12 { pt3dadd( -4.35538, -95.7385, 69.4459, 0.37 ) }
    dend_12 { pt3dadd( -4.93228, -95.8532, 69.6487, 0.37 ) }
    dend_12 { pt3dadd( -5.58116, -95.9609, 69.7172, 0.37 ) }
    dend_12 { pt3dadd( -6.18311, -96.0173, 69.6903, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_12 { pt3dadd( -6.49096, -96.0254, 69.6391, 0.37 ) }
    dend_12 { pt3dadd( -7.71274, -95.9352, 69.3572, 0.29 ) }
    dend_12 { pt3dadd( -8.93561, -95.659, 69.0269, 0.22 ) }
    dend_12 { pt3dadd( -9.32027, -95.5386, 68.9148, 0.22 ) }
    dend_12 { pt3dadd( -10.111, -95.2637, 68.7057, 0.15 ) }
    dend_12 { pt3dadd( -10.68, -95.077, 68.5853, 0.59 ) }
    dend_12 { pt3dadd( -11.2245, -94.9074, 68.486, 0.29 ) }
    dend_12 { pt3dadd( -11.7254, -94.7795, 68.4199, 0.88 ) }
    dend_12 { pt3dadd( -12.5645, -94.6227, 68.359, 0.96 ) }
    dend_12 { pt3dadd( -13.7516, -94.5072, 68.2651, 0.22 ) }
    dend_12 { pt3dadd( -14.449, -94.499, 68.2022, 1.33 ) }
    dend_12 { pt3dadd( -14.9035, -94.5229, 68.1538, 1.4 ) }
    dend_12 { pt3dadd( -15.9707, -94.6569, 68.0051, 0.15 ) }
    dend_12 { pt3dadd( -16.2557, -94.7193, 67.971, 0.15 ) }
    dend_12 { pt3dadd( -16.64, -94.8278, 67.9362, 0.15 ) }
    dend_12 { pt3dadd( -16.9211, -94.9332, 67.9128, 0.15 ) }
    dend_12 { pt3dadd( -17.1094, -95.0049, 67.9016, 0.81 ) }
    dend_12 { pt3dadd( -17.4101, -95.0837, 67.8925, 0.81 ) }
    dend_12 { pt3dadd( -18.4588, -95.2468, 67.8898, 0.22 ) }
    dend_12 { pt3dadd( -19.0513, -95.2764, 67.8811, 0.22 ) }
    dend_12 { pt3dadd( -19.6217, -95.268, 67.8636, 1.11 ) }
    dend_12 { pt3dadd( -20.1721, -95.2216, 67.8346, 1.62 ) }
    dend_12 { pt3dadd( -21.3803, -95.0244, 67.727, 0.22 ) }
    dend_12 { pt3dadd( -22.0706, -94.8387, 67.632, 1.11 ) }
    dend_12 { pt3dadd( -22.9583, -94.5065, 67.445, 0.22 ) }
    dend_12 { pt3dadd( -23.5578, -94.2601, 67.2861, 0.22 ) }
    dend_12 { pt3dadd( -23.8468, -94.1307, 67.1971, 1.03 ) }
    dend_12 { pt3dadd( -24.3894, -93.8711, 67.0008, 1.03 ) }
    dend_12 { pt3dadd( -25.1008, -93.5062, 66.6981, 0.22 ) }
    dend_12 { pt3dadd( -25.7925, -93.1125, 66.3723, 0.52 ) }
    dend_12 { pt3dadd( -26.5489, -92.6355, 66.0072, 0.15 ) }
    dend_12 { pt3dadd( -26.8224, -92.4376, 65.8716, 0.15 ) }
    dend_12 { pt3dadd( -27.0306, -92.273, 65.7833, 0.52 ) }
    dend_12 { pt3dadd( -27.3324, -92.0137, 65.6699, 1.18 ) }
    dend_12 { pt3dadd( -28.2264, -91.1785, 65.3699, 0.22 ) }
    dend_12 { pt3dadd( -28.6374, -90.6994, 65.221, 1.03 ) }
    dend_12 { pt3dadd( -28.8652, -90.3696, 65.1257, 1.99 ) }
    dend_12 { pt3dadd( -29.6562, -89.0072, 64.7442, 0.29 ) }
    dend_12 { pt3dadd( -29.8344, -88.6168, 64.63, 0.96 ) }
    dend_12 { pt3dadd( -30.0399, -88.0067, 64.4421, 1.7 ) }
    dend_12 { pt3dadd( -30.2884, -86.7112, 64.0407, 0.22 ) }
    dend_12 { pt3dadd( -30.3333, -86.0817, 63.832, 0.22 ) }
    dend_12 { pt3dadd( -30.3069, -85.5514, 63.6432, 0.96 ) }
    dend_12 { pt3dadd( -30.1314, -84.6216, 63.3046, 0.07 ) }
    dend_12 { pt3dadd( -29.9816, -84.0532, 63.1007, 0.74 ) }
    dend_12 { pt3dadd( -29.7143, -83.2923, 62.84, 0.22 ) }
    dend_12 { pt3dadd( -29.3886, -82.5315, 62.624, 0.22 ) }
    dend_12 { pt3dadd( -29.0043, -81.8565, 62.5312, 0.66 ) }
    dend_12 { pt3dadd( -28.3988, -81.0001, 62.5423, 0.07 ) }
    dend_12 { pt3dadd( -27.9859, -80.5146, 62.6313, 0.22 ) }
    dend_12 { pt3dadd( -27.4325, -79.9371, 62.8388, 0.07 ) }
    dend_12 { pt3dadd( -26.8819, -79.4127, 63.0927, 1.11 ) }
    dend_12 { pt3dadd( -25.4393, -78.1364, 63.9215, 0.07 ) }
    dend_12 { pt3dadd( -25.117, -77.8704, 64.1419, 0.07 ) }
    dend_12 { pt3dadd( -24.8937, -77.6996, 64.3201, 0.29 ) }
    dend_12 { pt3dadd( -24.3203, -77.2644, 64.8472, 0.07 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 56/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 34.6128, 16.8313, 38.6839, 0.22 ) }
    dend_7 { pt3dadd( 34.9214, 17.3629, 39.431, 0.22 ) }
    dend_7 { pt3dadd( 35.2334, 17.7703, 40.1078, 0.22 ) }
    dend_7 { pt3dadd( 35.5141, 18.0659, 40.6629, 0.52 ) }
    dend_7 { pt3dadd( 35.9208, 18.4437, 41.3976, 1.7 ) }
    dend_7 { pt3dadd( 36.3068, 18.7159, 41.9895, 2.06 ) }
    dend_7 { pt3dadd( 37.1398, 19.1922, 43.1859, 0.52 ) }
    dend_7 { pt3dadd( 37.7676, 19.5004, 44.0506, 0.66 ) }
    dend_7 { pt3dadd( 38.3404, 19.7581, 44.7962, 2.14 ) }
    dend_7 { pt3dadd( 38.6802, 19.9108, 45.2271, 2.65 ) }
    dend_7 { pt3dadd( 39.8783, 20.4805, 46.7198, 0.29 ) }
    dend_7 { pt3dadd( 40.4101, 20.7366, 47.4295, 0.22 ) }
    dend_7 { pt3dadd( 40.991, 21.0089, 48.2452, 0.22 ) }
    dend_7 { pt3dadd( 41.4375, 21.1984, 48.9114, 1.25 ) }
    dend_7 { pt3dadd( 42.0926, 21.4504, 49.9399, 0.15 ) }
    dend_7 { pt3dadd( 42.7065, 21.6761, 50.9226, 0.81 ) }
    dend_7 { pt3dadd( 43.4563, 21.96, 52.0264, 1.4 ) }
    dend_7 { pt3dadd( 43.9966, 22.1462, 52.7039, 2.21 ) }
    dend_7 { pt3dadd( 45.3855, 22.5402, 54.1806, 0.22 ) }
    dend_7 { pt3dadd( 46.0589, 22.6984, 54.7903, 0.88 ) }
    dend_7 { pt3dadd( 46.6855, 22.8266, 55.2697, 1.18 ) }
    dend_7 { pt3dadd( 48.0023, 23.1128, 56.0863, 0.22 ) }
    dend_7 { pt3dadd( 48.6048, 23.2702, 56.3765, 0.59 ) }
    dend_7 { pt3dadd( 49.1644, 23.4361, 56.5887, 1.11 ) }
    dend_7 { pt3dadd( 50.0768, 23.7129, 56.8619, 0.15 ) }
    dend_7 { pt3dadd( 50.4401, 23.8226, 56.9794, 0.15 ) }
    dend_7 { pt3dadd( 50.7729, 23.9415, 57.1224, 0.15 ) }
    dend_7 { pt3dadd( 51.075, 24.0707, 57.3041, 0.37 ) }
    dend_7 { pt3dadd( 51.4978, 24.3037, 57.6398, 0.66 ) }
    dend_7 { pt3dadd( 52.4589, 24.9059, 58.5266, 0.15 ) }
    dend_7 { pt3dadd( 53.1288, 25.3484, 59.2339, 1.62 ) }
    dend_7 { pt3dadd( 53.8082, 25.78, 60.0067, 0.29 ) }
    dend_7 { pt3dadd( 54.5209, 26.2046, 60.8753, 1.18 ) }
    dend_7 { pt3dadd( 55.4993, 26.7192, 62.1376, 0.22 ) }
    dend_7 { pt3dadd( 56.1559, 27.0086, 63.0142, 0.52 ) }
    dend_7 { pt3dadd( 56.9701, 27.2858, 64.0976, 1.25 ) }
    dend_7 { pt3dadd( 57.6097, 27.4469, 64.9578, 2.14 ) }
    dend_7 { pt3dadd( 58.689, 27.5852, 66.4167, 0.59 ) }
    dend_7 { pt3dadd( 59.3723, 27.604, 67.3457, 0.59 ) }
    dend_7 { pt3dadd( 60.0435, 27.563, 68.2343, 0.22 ) }
    dend_7 { pt3dadd( 60.8205, 27.5039, 69.2639, 1.55 ) }
    dend_7 { pt3dadd( 61.2072, 27.4877, 69.7755, 1.55 ) }
    dend_7 { pt3dadd( 62.2287, 27.5579, 71.1678, 0.22 ) }
    dend_7 { pt3dadd( 62.5383, 27.6235, 71.6118, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_7 { pt3dadd( 62.9679, 27.7887, 72.1852, 0.22 ) }
    dend_7 { pt3dadd( 63.3824, 28.0078, 72.7485, 0.96 ) }
    dend_7 { pt3dadd( 63.8299, 28.3297, 73.3618, 1.25 ) }
    dend_7 { pt3dadd( 64.617, 29.0518, 74.4032, 0.22 ) }
    dend_7 { pt3dadd( 65.2276, 29.7712, 75.1578, 0.22 ) }
    dend_7 { pt3dadd( 65.8999, 30.5801, 75.9721, 2.73 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 6/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 34.6128, 16.8313, 38.6839, 0.22 ) }
    dend_4 { pt3dadd( 35.2368, 14.9034, 39.4814, 0.22 ) }
    dend_4 { pt3dadd( 35.5502, 14.0569, 39.7727, 0.37 ) }
    dend_4 { pt3dadd( 36.0976, 12.7774, 40.198, 0.66 ) }
    dend_4 { pt3dadd( 36.7267, 11.3571, 40.7708, 0.66 ) }
    dend_4 { pt3dadd( 37.2918, 10.0973, 41.3804, 0.15 ) }
    dend_4 { pt3dadd( 37.7613, 9.0382, 41.9691, 1.47 ) }
    dend_4 { pt3dadd( 38.3673, 7.62122, 42.7359, 3.24 ) }
    dend_4 { pt3dadd( 38.7661, 6.74263, 43.2548, 3.24 ) }
    dend_4 { pt3dadd( 40.0761, 4.13552, 44.9965, 0.29 ) }
    dend_4 { pt3dadd( 40.5928, 3.13548, 45.754, 0.44 ) }
    dend_4 { pt3dadd( 41.2505, 1.82363, 46.8214, 2.14 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 18/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -24.3292, 56.0008, 35.5835, 0.22 ) }
    dend_60 { pt3dadd( -25.6503, 57.398, 35.216, 0.22 ) }
    dend_60 { pt3dadd( -26.273, 58.0649, 35.0373, 1.55 ) }
    dend_60 { pt3dadd( -27.1065, 58.9588, 34.6949, 3.1 ) }
    dend_60 { pt3dadd( -28.5916, 60.5522, 33.9373, 0.15 ) }
    dend_60 { pt3dadd( -29.1003, 61.0952, 33.6304, 0.66 ) }
    dend_60 { pt3dadd( -29.9287, 61.9611, 33.0735, 0.15 ) }
    dend_60 { pt3dadd( -30.5488, 62.5615, 32.5621, 1.18 ) }
    dend_60 { pt3dadd( -31.6798, 63.561, 31.4996, 0.07 ) }
    dend_60 { pt3dadd( -32.3065, 64.0569, 30.8563, 0.07 ) }
    dend_60 { pt3dadd( -32.8146, 64.43, 30.3002, 0.07 ) }
    dend_60 { pt3dadd( -33.387, 64.805, 29.6945, 0.96 ) }
    dend_60 { pt3dadd( -34.531, 65.4814, 28.5465, 0.15 ) }
    dend_60 { pt3dadd( -35.4494, 66.0109, 27.7019, 0.15 ) }
    dend_60 { pt3dadd( -36.0326, 66.3377, 27.2578, 1.03 ) }
    dend_60 { pt3dadd( -36.6595, 66.6718, 26.8343, 1.99 ) }
    dend_60 { pt3dadd( -37.9445, 67.2965, 26.1451, 0.15 ) }
    dend_60 { pt3dadd( -38.5224, 67.5485, 25.8893, 0.15 ) }
    dend_60 { pt3dadd( -38.9507, 67.7097, 25.7338, 0.15 ) }
    dend_60 { pt3dadd( -39.6618, 67.9431, 25.5169, 0.88 ) }
    dend_60 { pt3dadd( -40.5454, 68.179, 25.2461, 1.62 ) }
    dend_60 { pt3dadd( -42.4298, 68.5882, 24.683, 0.15 ) }
    dend_60 { pt3dadd( -43.1656, 68.7142, 24.4644, 0.15 ) }
    dend_60 { pt3dadd( -43.9901, 68.8285, 24.2057, 0.44 ) }
    dend_60 { pt3dadd( -44.9091, 68.9089, 23.8895, 0.15 ) }
    dend_60 { pt3dadd( -46.1916, 68.9667, 23.4762, 0.22 ) }
    dend_60 { pt3dadd( -47.4293, 68.9673, 23.1086, 0.15 ) }
    dend_60 { pt3dadd( -47.7292, 68.9489, 23.0295, 0.74 ) }
    dend_60 { pt3dadd( -48.8273, 68.8475, 22.7837, 1.25 ) }
    dend_60 { pt3dadd( -50.6064, 68.642, 22.4442, 0.22 ) }
    dend_60 { pt3dadd( -52.1898, 68.4119, 22.1959, 1.11 ) }
    dend_60 { pt3dadd( -52.9156, 68.2746, 22.1004, 1.84 ) }
    dend_60 { pt3dadd( -54.5161, 67.7989, 21.9477, 0.15 ) }
    dend_60 { pt3dadd( -55.064, 67.5785, 21.921, 0.15 ) }
    dend_60 { pt3dadd( -55.6407, 67.3146, 21.912, 0.15 ) }
    dend_60 { pt3dadd( -56.0483, 67.105, 21.9152, 0.81 ) }
    dend_60 { pt3dadd( -57.1354, 66.4366, 21.8826, 2.14 ) }
    dend_60 { pt3dadd( -58.9359, 65.1276, 21.9179, 0.22 ) }
    dend_60 { pt3dadd( -59.7542, 64.3702, 21.9768, 1.47 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 57/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -24.3292, 56.0008, 35.5835, 0.22 ) }
    dend_57 { pt3dadd( -25.2672, 57.3459, 36.5897, 0.22 ) }
    dend_57 { pt3dadd( -25.9297, 58.3294, 37.2546, 0.22 ) }
    dend_57 { pt3dadd( -26.898, 59.7609, 38.1594, 0.37 ) }
    dend_57 { pt3dadd( -27.3087, 60.3294, 38.5132, 0.37 ) }
    dend_57 { pt3dadd( -27.83, 61.021, 38.9406, 0.96 ) }
    dend_57 { pt3dadd( -28.3264, 61.6858, 39.3447, 0.15 ) }
    dend_57 { pt3dadd( -28.5561, 62.012, 39.5312, 0.15 ) }
    dend_57 { pt3dadd( -28.7005, 62.2009, 39.6308, 0.22 ) }
    dend_57 { pt3dadd( -29.2249, 62.8345, 39.9074, 0.15 ) }
    dend_57 { pt3dadd( -29.6732, 63.3287, 40.1426, 1.03 ) }
    dend_57 { pt3dadd( -30.2762, 63.9879, 40.5115, 1.99 ) }
    dend_57 { pt3dadd( -31.1379, 65.0228, 41.1932, 0.22 ) }
    dend_57 { pt3dadd( -31.5958, 65.7227, 41.6588, 0.15 ) }
    dend_57 { pt3dadd( -31.7498, 66.0221, 41.8629, 0.15 ) }
    dend_57 { pt3dadd( -31.9884, 66.6338, 42.2835, 1.18 ) }
    dend_57 { pt3dadd( -32.287, 67.5747, 42.9362, 0.15 ) }
    dend_57 { pt3dadd( -32.4453, 68.1351, 43.3341, 0.52 ) }
    dend_57 { pt3dadd( -32.6329, 68.9023, 43.8598, 0.22 ) }
    dend_57 { pt3dadd( -32.8338, 69.6567, 44.3597, 1.33 ) }
    dend_57 { pt3dadd( -33.1251, 70.5043, 44.9139, 2.88 ) }
    dend_57 { pt3dadd( -33.8181, 72.0277, 45.8857, 0.22 ) }
    dend_57 { pt3dadd( -34.1635, 72.5957, 46.2198, 0.22 ) }
    dend_57 { pt3dadd( -34.6194, 73.2198, 46.5733, 0.74 ) }
    dend_57 { pt3dadd( -35.1941, 73.9094, 46.981, 0.15 ) }
    dend_57 { pt3dadd( -35.6809, 74.4608, 47.317, 0.15 ) }
    dend_57 { pt3dadd( -36.1237, 74.9118, 47.6246, 0.15 ) }
    dend_57 { pt3dadd( -36.6783, 75.3767, 48.0619, 0.74 ) }
    dend_57 { pt3dadd( -37.1976, 75.7653, 48.5679, 0.74 ) }
    dend_57 { pt3dadd( -37.5872, 75.9621, 49.0387, 0.74 ) }
    dend_57 { pt3dadd( -37.9707, 76.066, 49.5597, 0.74 ) }
    dend_57 { pt3dadd( -38.1263, 76.0841, 49.7574, 0.74 ) }
    dend_57 { pt3dadd( -38.7926, 76.1142, 50.5487, 0.74 ) }
    dend_57 { pt3dadd( -39.02, 76.1123, 50.8247, 0.74 ) }
    dend_57 { pt3dadd( -39.6335, 76.1018, 51.576, 0.74 ) }
    dend_57 { pt3dadd( -39.9953, 76.1213, 52.0819, 0.74 ) }
    dend_57 { pt3dadd( -40.5729, 76.24, 53.0941, 0.96 ) }
    dend_57 { pt3dadd( -40.9064, 76.3931, 53.8794, 0.96 ) }
    dend_57 { pt3dadd( -41.0829, 76.5569, 54.4621, 0.96 ) }
    dend_57 { pt3dadd( -41.2801, 76.8149, 55.2924, 0.96 ) }
    dend_57 { pt3dadd( -41.4758, 77.1826, 56.3341, 0.66 ) }
    dend_57 { pt3dadd( -41.649, 77.5839, 57.4043, 0.88 ) }
    dend_57 { pt3dadd( -41.872, 78.0469, 58.5299, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_57 { pt3dadd( -42.2219, 78.6219, 59.7679, 0.37 ) }
    dend_57 { pt3dadd( -42.4259, 78.9197, 60.3018, 0.37 ) }
    dend_57 { pt3dadd( -42.8105, 79.5132, 61.1732, 1.4 ) }
    dend_57 { pt3dadd( -43.0264, 79.8605, 61.6087, 1.62 ) }
    dend_57 { pt3dadd( -43.5167, 80.7615, 62.5886, 0.44 ) }
    dend_57 { pt3dadd( -43.8071, 81.3932, 63.2069, 0.44 ) }
    dend_57 { pt3dadd( -44.0332, 82.069, 63.8283, 1.18 ) }
    dend_57 { pt3dadd( -44.2376, 83.0158, 64.6757, 0.22 ) }
    dend_57 { pt3dadd( -44.2784, 83.4969, 65.1105, 0.22 ) }
    dend_57 { pt3dadd( -44.2613, 84.0612, 65.6302, 1.25 ) }
    dend_57 { pt3dadd( -44.2077, 84.6498, 66.1776, 1.92 ) }
    dend_57 { pt3dadd( -44.1598, 85.9006, 67.3718, 0.15 ) }
    dend_57 { pt3dadd( -44.192, 86.3921, 67.8585, 0.88 ) }
    dend_57 { pt3dadd( -44.3069, 87.0103, 68.4688, 1.92 ) }
    dend_57 { pt3dadd( -44.6907, 88.2416, 69.6949, 0.22 ) }
    dend_57 { pt3dadd( -44.9822, 88.8942, 70.3833, 0.74 ) }
    dend_57 { pt3dadd( -45.4613, 89.7674, 71.3592, 1.7 ) }
    dend_57 { pt3dadd( -45.8529, 90.3941, 72.1253, 0.07 ) }
    dend_57 { pt3dadd( -46.0418, 90.7074, 72.5451, 0.96 ) }
    dend_57 { pt3dadd( -46.5118, 91.4947, 73.6935, 0.07 ) }
    dend_57 { pt3dadd( -46.7761, 91.9764, 74.4666, 0.07 ) }
    dend_57 { pt3dadd( -46.9254, 92.3292, 75.0839, 0.07 ) }
    dend_57 { pt3dadd( -47.1158, 92.8381, 76.1184, 0.37 ) }
    dend_57 { pt3dadd( -47.335, 93.25, 77.1483, 0.59 ) }
    dend_57 { pt3dadd( -47.4898, 93.4483, 77.7308, 0.59 ) }
    dend_57 { pt3dadd( -47.6618, 93.5858, 78.2073, 0.59 ) }
    dend_57 { pt3dadd( -47.7986, 93.6717, 78.4762, 0.59 ) }
    dend_57 { pt3dadd( -48.3904, 94.0664, 79.3958, 0.15 ) }
    dend_57 { pt3dadd( -48.8125, 94.4266, 79.982, 0.07 ) }
    dend_57 { pt3dadd( -49.0524, 94.723, 80.3661, 0.07 ) }
    dend_57 { pt3dadd( -49.2348, 95.0074, 80.6862, 0.07 ) }
    dend_57 { pt3dadd( -49.5288, 95.502, 81.1685, 0.88 ) }
    dend_57 { pt3dadd( -50.0284, 96.3044, 81.9205, 0.22 ) }
    dend_57 { pt3dadd( -50.5159, 96.9694, 82.5962, 0.22 ) }
    dend_57 { pt3dadd( -51.0501, 97.5538, 83.2602, 1.62 ) }
    dend_57 { pt3dadd( -51.6998, 98.0728, 83.95, 2.21 ) }
    dend_57 { pt3dadd( -52.908, 98.7672, 85.1161, 0.37 ) }
    dend_57 { pt3dadd( -53.7655, 99.0997, 85.9166, 0.37 ) }
    dend_57 { pt3dadd( -55.063, 99.36, 87.1163, 1.33 ) }
    dend_57 { pt3dadd( -55.4715, 99.3603, 87.5195, 1.77 ) }
    dend_57 { pt3dadd( -56.2981, 99.1854, 88.4416, 0.29 ) }
    dend_57 { pt3dadd( -56.9669, 98.8784, 89.2789, 0.29 ) }
    dend_57 { pt3dadd( -57.5217, 98.5394, 89.9599, 0.59 ) }
    dend_57 { pt3dadd( -58.1131, 98.1739, 90.6381, 1.18 ) }
    dend_57 { pt3dadd( -59.1109, 97.6068, 91.6983, 0.37 ) }
    dend_57 { pt3dadd( -60.1957, 97.0379, 92.7728, 1.03 ) }
    dend_57 { pt3dadd( -61.1147, 96.6052, 93.5706, 1.4 ) }
    dend_57 { pt3dadd( -63.0833, 95.7951, 94.9833, 0.07 ) }
    dend_57 { pt3dadd( -64.0528, 95.4583, 95.5465, 0.59 ) }
    dend_57 { pt3dadd( -65.08, 95.2105, 95.9826, 0.15 ) }
    dend_57 { pt3dadd( -65.7675, 95.1112, 96.1644, 0.15 ) }
    dend_57 { pt3dadd( -66.8039, 95.0236, 96.3212, 0.15 ) }
    dend_57 { pt3dadd( -67.2952, 95.0101, 96.362, 1.03 ) }
    dend_57 { pt3dadd( -67.7846, 95.0079, 96.357, 1.4 ) }
    dend_57 { pt3dadd( -69.5384, 95.0135, 96.2732, 0.15 ) }
    dend_57 { pt3dadd( -70.1791, 95.0237, 96.2469, 0.15 ) }
    dend_57 { pt3dadd( -71.3382, 95.0405, 96.2637, 0.15 ) }
    dend_57 { pt3dadd( -71.9416, 95.0369, 96.3116, 1.11 ) }
    dend_57 { pt3dadd( -72.5257, 95.0249, 96.3913, 1.62 ) }
    dend_57 { pt3dadd( -73.9508, 94.9878, 96.667, 0.29 ) }
    dend_57 { pt3dadd( -74.841, 94.9732, 96.885, 0.07 ) }
    dend_57 { pt3dadd( -75.6764, 95.0118, 97.0854, 0.07 ) }
    dend_57 { pt3dadd( -76.1914, 95.0592, 97.2073, 0.88 ) }
    dend_57 { pt3dadd( -77.402, 95.2055, 97.5268, 0.07 ) }
    dend_57 { pt3dadd( -77.9933, 95.3015, 97.7093, 0.22 ) }
    dend_57 { pt3dadd( -79.0051, 95.5353, 98.075, 0.07 ) }
    dend_57 { pt3dadd( -79.7088, 95.7544, 98.3144, 1.77 ) }
    // Section: dend_51, id: dend_51, parent: dend_39 (entry count 67/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -8.60156, 45.8506, 27.2908, 0.52 ) }
    dend_51 { pt3dadd( -6.05766, 45.4827, 25.7788, 0.52 ) }
    dend_51 { pt3dadd( -5.43735, 45.3407, 25.4598, 2.21 ) }
    dend_51 { pt3dadd( -4.32464, 45.0011, 24.9381, 2.88 ) }
    dend_51 { pt3dadd( -2.44475, 44.2914, 24.1071, 0.96 ) }
    dend_51 { pt3dadd( -1.09065, 43.679, 23.4904, 0.15 ) }
    dend_51 { pt3dadd( -0.339335, 43.285, 23.1049, 0.59 ) }
    dend_51 { pt3dadd( 0.411317, 42.7638, 22.7899, 0.15 ) }
    dend_51 { pt3dadd( 0.90931, 42.3621, 22.5771, 0.22 ) }
    dend_51 { pt3dadd( 1.29108, 41.9711, 22.392, 0.22 ) }
    dend_51 { pt3dadd( 1.9592, 41.0994, 21.9519, 0.22 ) }
    dend_51 { pt3dadd( 2.76169, 39.8377, 21.3147, 1.11 ) }
    dend_51 { pt3dadd( 3.13994, 39.1311, 20.9548, 2.29 ) }
    dend_51 { pt3dadd( 3.34869, 38.6801, 20.7176, 2.58 ) }
    dend_51 { pt3dadd( 3.94463, 37.229, 19.9527, 0.15 ) }
    dend_51 { pt3dadd( 4.24235, 36.3507, 19.5316, 0.15 ) }
    dend_51 { pt3dadd( 4.42815, 35.5358, 19.2126, 0.29 ) }
    dend_51 { pt3dadd( 4.51199, 34.9325, 19.0136, 1.03 ) }
    dend_51 { pt3dadd( 4.57022, 34.305, 18.8146, 1.99 ) }
    dend_51 { pt3dadd( 4.60515, 33.8485, 18.686, 2.29 ) }
    dend_51 { pt3dadd( 4.6953, 32.3377, 18.3819, 0.44 ) }
    dend_51 { pt3dadd( 4.78411, 31.2662, 18.2243, 0.29 ) }
    dend_51 { pt3dadd( 4.8434, 30.6886, 18.167, 0.44 ) }
    dend_51 { pt3dadd( 4.91003, 30.135, 18.1295, 0.52 ) }
    dend_51 { pt3dadd( 5.04078, 29.1372, 18.1113, 0.22 ) }
    dend_51 { pt3dadd( 5.14881, 28.4726, 18.1303, 0.22 ) }
    dend_51 { pt3dadd( 5.28007, 27.7566, 18.1931, 1.33 ) }
    dend_51 { pt3dadd( 5.41964, 27.0591, 18.2797, 2.29 ) }
    dend_51 { pt3dadd( 5.52598, 26.4826, 18.365, 2.29 ) }
    dend_51 { pt3dadd( 5.81876, 24.8794, 18.6368, 0.15 ) }
    dend_51 { pt3dadd( 5.93076, 24.1991, 18.7588, 0.15 ) }
    dend_51 { pt3dadd( 6.0182, 23.6503, 18.8524, 0.15 ) }
    dend_51 { pt3dadd( 6.09518, 23.1235, 18.9425, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_51 { pt3dadd( 6.21253, 22.2946, 19.0642, 1.33 ) }
    dend_51 { pt3dadd( 6.30303, 21.6477, 19.1071, 1.03 ) }
    dend_51 { pt3dadd( 6.47846, 20.2662, 19.0515, 0.22 ) }
    dend_51 { pt3dadd( 6.55935, 19.6008, 18.9722, 0.22 ) }
    dend_51 { pt3dadd( 6.63678, 18.9508, 18.8452, 0.66 ) }
    dend_51 { pt3dadd( 6.75438, 18.0134, 18.6209, 0.22 ) }
    dend_51 { pt3dadd( 6.88003, 16.8058, 18.2784, 0.29 ) }
    dend_51 { pt3dadd( 6.94822, 16.0373, 18.0622, 0.59 ) }
    dend_51 { pt3dadd( 7.00319, 15.4518, 17.8775, 1.33 ) }
    dend_51 { pt3dadd( 7.07115, 14.6111, 17.5958, 2.14 ) }
    dend_51 { pt3dadd( 7.17853, 13.1665, 17.0962, 0.22 ) }
    dend_51 { pt3dadd( 7.23708, 12.1764, 16.7815, 0.22 ) }
    dend_51 { pt3dadd( 7.27063, 11.337, 16.6124, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 13/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -8.60156, 45.8506, 27.2908, 0.52 ) }
    dend_40 { pt3dadd( -9.07858, 46.8818, 29.0008, 0.52 ) }
    dend_40 { pt3dadd( -9.40115, 47.4813, 30.5836, 0.52 ) }
    dend_40 { pt3dadd( -9.70743, 47.9322, 32.6392, 0.52 ) }
    dend_40 { pt3dadd( -9.8348, 48.0296, 33.7352, 0.52 ) }
    dend_40 { pt3dadd( -10.0524, 48.1394, 36.3127, 0.81 ) }
    dend_40 { pt3dadd( -10.1542, 48.227, 38.2213, 1.18 ) }
    dend_40 { pt3dadd( -10.0862, 48.1695, 40.6842, 0.96 ) }
    dend_40 { pt3dadd( -9.96086, 48.0525, 42.4313, 1.25 ) }
    dend_40 { pt3dadd( -9.76794, 47.842, 44.3047, 0.37 ) }
    dend_40 { pt3dadd( -9.59536, 47.7372, 45.3979, 0.37 ) }
    dend_40 { pt3dadd( -9.3493, 47.6169, 46.7073, 0.15 ) }
    dend_40 { pt3dadd( -8.98359, 47.5381, 48.2697, 0.15 ) }
    dend_40 { pt3dadd( -8.48238, 47.6696, 49.9605, 1.18 ) }
    dend_40 { pt3dadd( -8.17359, 47.8641, 50.9633, 2.43 ) }
    dend_40 { pt3dadd( -7.58976, 48.2811, 52.6554, 2.65 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 29/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -12.0124, 116.549, 7.30353, 0.59 ) }
    dend_37 { pt3dadd( -12.3546, 118.275, 7.12006, 0.59 ) }
    dend_37 { pt3dadd( -12.7374, 119.794, 6.91778, 0.29 ) }
    dend_37 { pt3dadd( -13.159, 121.223, 6.70969, 0.96 ) }
    dend_37 { pt3dadd( -13.5128, 122.309, 6.55633, 0.07 ) }
    dend_37 { pt3dadd( -13.9506, 123.476, 6.39807, 0.07 ) }
    dend_37 { pt3dadd( -14.2117, 124.137, 6.31256, 0.22 ) }
    dend_37 { pt3dadd( -14.6096, 124.937, 6.21604, 0.88 ) }
    dend_37 { pt3dadd( -14.8456, 125.411, 6.17647, 1.47 ) }
    dend_37 { pt3dadd( -15.4374, 126.76, 6.02644, 0.07 ) }
    dend_37 { pt3dadd( -15.7338, 127.658, 5.88222, 0.07 ) }
    dend_37 { pt3dadd( -15.8403, 128.132, 5.81278, 0.22 ) }
    dend_37 { pt3dadd( -15.9118, 128.491, 5.76791, 0.22 ) }
    dend_37 { pt3dadd( -16.0891, 129.484, 5.67075, 0.07 ) }
    dend_37 { pt3dadd( -16.2011, 130.382, 5.59082, 0.07 ) }
    dend_37 { pt3dadd( -16.2467, 130.972, 5.52301, 0.66 ) }
    dend_37 { pt3dadd( -16.2903, 131.636, 5.41778, 0.66 ) }
    dend_37 { pt3dadd( -16.3751, 132.712, 5.21101, 0.15 ) }
    dend_37 { pt3dadd( -16.4392, 133.548, 5.03373, 1.03 ) }
    dend_37 { pt3dadd( -16.5009, 134.427, 4.83622, 1.77 ) }
    dend_37 { pt3dadd( -16.5692, 136.073, 4.47736, 0.15 ) }
    dend_37 { pt3dadd( -16.6063, 137.179, 4.25068, 0.22 ) }
    dend_37 { pt3dadd( -16.6238, 137.631, 4.15323, 0.66 ) }
    dend_37 { pt3dadd( -16.6641, 138.158, 4.05592, 0.37 ) }
    dend_37 { pt3dadd( -16.8008, 139.068, 3.94479, 1.11 ) }
    dend_37 { pt3dadd( -16.9764, 139.78, 3.90909, 1.11 ) }
    dend_37 { pt3dadd( -17.5293, 141.447, 3.96666, 0.22 ) }
    dend_37 { pt3dadd( -17.9385, 142.423, 4.04315, 1.03 ) }
    dend_37 { pt3dadd( -18.4949, 143.549, 4.14496, 1.62 ) }
    dend_37 { pt3dadd( -19.0789, 144.586, 4.25679, 1.99 ) }
    dend_37 { pt3dadd( -19.6614, 145.549, 4.30074, 0.52 ) }
    dend_37 { pt3dadd( -20.4665, 146.822, 4.25169, 0.22 ) }
    dend_37 { pt3dadd( -21.2673, 148.088, 4.06714, 0.22 ) }
    dend_37 { pt3dadd( -21.6561, 148.723, 3.89454, 0.88 ) }
    dend_37 { pt3dadd( -22.1926, 149.666, 3.44789, 1.55 ) }
    dend_37 { pt3dadd( -23.2529, 151.529, 2.27617, 0.15 ) }
    dend_37 { pt3dadd( -23.6669, 152.293, 1.74344, 0.22 ) }
    dend_37 { pt3dadd( -24.0079, 152.975, 1.2593, 0.07 ) }
    dend_37 { pt3dadd( -24.5187, 154.103, 0.477616, 1.33 ) }
    dend_37 { pt3dadd( -25.2674, 155.802, -0.552734, 0.07 ) }
    dend_37 { pt3dadd( -25.5041, 156.352, -0.876798, 0.37 ) }
    dend_37 { pt3dadd( -25.9899, 157.473, -1.3227, 0.07 ) }
    dend_37 { pt3dadd( -26.5359, 158.745, -1.61918, 0.22 ) }
    dend_37 { pt3dadd( -27.0492, 159.933, -1.62391, 1.55 ) }
    dend_37 { pt3dadd( -27.4283, 160.909, -1.27664, 1.55 ) }
    dend_37 { pt3dadd( -29.5039, 171.432, -4.25939, 1.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 75/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -12.0124, 116.549, 7.30353, 0.22 ) }
    dend_36 { pt3dadd( -13.2623, 118.18, 7.25895, 0.22 ) }
    dend_36 { pt3dadd( -13.8347, 118.969, 7.22422, 0.07 ) }
    dend_36 { pt3dadd( -14.4596, 119.884, 7.16611, 1.11 ) }
    dend_36 { pt3dadd( -15.3744, 121.385, 7.05449, 0.07 ) }
    dend_36 { pt3dadd( -15.7558, 122.099, 6.99712, 0.07 ) }
    dend_36 { pt3dadd( -15.939, 122.48, 6.96654, 0.52 ) }
    dend_36 { pt3dadd( -16.1934, 123.228, 6.8935, 1.47 ) }
    dend_36 { pt3dadd( -16.4551, 124.183, 6.80227, 0.07 ) }
    dend_36 { pt3dadd( -16.6477, 125.035, 6.72065, 0.15 ) }
    dend_36 { pt3dadd( -16.7823, 125.868, 6.65776, 0.88 ) }
    dend_36 { pt3dadd( -16.8832, 126.677, 6.61816, 1.4 ) }
    dend_36 { pt3dadd( -17.0114, 127.951, 6.55878, 0.07 ) }
    dend_36 { pt3dadd( -17.0643, 128.557, 6.53809, 0.74 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -30.3281, -90.4862, -43.0404, 0.15 ) }
    dend_30 { pt3dadd( -32.0053, -97.9629, -44.6639, 0.15 ) }
    dend_30 { pt3dadd( -33.9407, -105.527, -45.4214, 0.15 ) }
    dend_30 { pt3dadd( -34.8657, -113.093, -47.1917, 0.15 ) }
    dend_30 { pt3dadd( -34.3285, -120.824, -48.2283, 0.15 ) }
    dend_30 { pt3dadd( -32.8554, -128.388, -49.4271, 0.15 ) }
    dend_30 { pt3dadd( -31.3374, -135.985, -50.3403, 0.15 ) }
    dend_30 { pt3dadd( -29.1125, -143.358, -51.466, 0.15 ) }
    dend_30 { pt3dadd( -27.3139, -150.945, -51.6899, 0.15 ) }
    dend_30 { pt3dadd( -24.4589, -158.168, -52.0278, 0.15 ) }
    dend_30 { pt3dadd( -21.3466, -165.285, -52.1475, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_30 { pt3dadd( -19.142, -172.651, -50.8765, 0.15 ) }
    dend_30 { pt3dadd( -17.3453, -180.129, -49.5626, 0.15 ) }
    dend_30 { pt3dadd( -15.3273, -187.634, -48.924, 0.15 ) }
    dend_30 { pt3dadd( -13.6142, -195.238, -49.2497, 0.15 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 4/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -30.3281, -90.4862, -43.0404, 1.03 ) }
    dend_29 { pt3dadd( -31.9542, -100.397, -45.4376, 0.15 ) }
    dend_29 { pt3dadd( -35.1823, -110.127, -46.7377, 0.15 ) }
    dend_29 { pt3dadd( -39.432, -119.444, -48.045, 0.15 ) }
    dend_29 { pt3dadd( -45.5214, -127.74, -48.3753, 0.15 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 9/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -7.87665, -147.31, 29.5415, 0.22 ) }
    dend_24 { pt3dadd( -7.5007, -148.553, 30.2327, 0.22 ) }
    dend_24 { pt3dadd( -7.3166, -149.347, 30.6399, 0.22 ) }
    dend_24 { pt3dadd( -7.22442, -149.948, 30.8971, 0.88 ) }
    dend_24 { pt3dadd( -7.13278, -150.837, 31.2244, 1.25 ) }
    dend_24 { pt3dadd( -7.03563, -152.213, 31.6962, 0.15 ) }
    dend_24 { pt3dadd( -6.98436, -153.259, 32.0218, 0.15 ) }
    dend_24 { pt3dadd( -6.99514, -154.118, 32.2443, 0.66 ) }
    dend_24 { pt3dadd( -7.04621, -155.405, 32.5174, 0.15 ) }
    dend_24 { pt3dadd( -7.07732, -155.992, 32.6272, 0.44 ) }
    dend_24 { pt3dadd( -7.09418, -156.419, 32.6978, 0.44 ) }
    dend_24 { pt3dadd( -7.0918, -157.604, 32.9021, 0.15 ) }
    dend_24 { pt3dadd( -7.05868, -158.457, 33.0576, 0.15 ) }
    dend_24 { pt3dadd( -7.00803, -159.107, 33.1921, 1.18 ) }
    dend_24 { pt3dadd( -6.92634, -159.75, 33.3479, 2.14 ) }
    dend_24 { pt3dadd( -6.7835, -160.705, 33.5835, 1.03 ) }
    dend_24 { pt3dadd( -6.6359, -161.628, 33.7979, 0.15 ) }
    dend_24 { pt3dadd( -6.50434, -162.35, 33.9717, 0.15 ) }
    dend_24 { pt3dadd( -6.39688, -162.924, 34.1003, 0.37 ) }
    dend_24 { pt3dadd( -6.25597, -163.64, 34.2408, 0.22 ) }
    dend_24 { pt3dadd( -6.17676, -164.026, 34.2939, 0.66 ) }
    dend_24 { pt3dadd( -6.06336, -164.545, 34.3422, 0.81 ) }
    dend_24 { pt3dadd( -5.78927, -165.645, 34.4177, 0.22 ) }
    dend_24 { pt3dadd( -5.65025, -166.179, 34.4513, 1.03 ) }
    dend_24 { pt3dadd( -5.40705, -167.14, 34.4861, 1.84 ) }
    dend_24 { pt3dadd( -5.06798, -168.539, 34.5112, 0.22 ) }
    dend_24 { pt3dadd( -4.96297, -168.996, 34.5208, 0.22 ) }
    dend_24 { pt3dadd( -4.84942, -169.53, 34.5401, 0.22 ) }
    dend_24 { pt3dadd( -4.748, -170.052, 34.5714, 0.22 ) }
    dend_24 { pt3dadd( -4.58988, -170.813, 34.6655, 0.96 ) }
    dend_24 { pt3dadd( -4.23508, -172.387, 34.9683, 0.15 ) }
    dend_24 { pt3dadd( -4.09803, -172.938, 35.1132, 0.15 ) }
    dend_24 { pt3dadd( -3.95482, -173.521, 35.2849, 0.96 ) }
    dend_24 { pt3dadd( -3.79887, -174.192, 35.4948, 1.92 ) }
    dend_24 { pt3dadd( -3.45193, -175.688, 36.0025, 0.22 ) }
    dend_24 { pt3dadd( -3.32879, -176.213, 36.1974, 0.22 ) }
    dend_24 { pt3dadd( -3.21001, -176.677, 36.3783, 0.15 ) }
    dend_24 { pt3dadd( -2.99007, -177.506, 36.7022, 0.15 ) }
    dend_24 { pt3dadd( -2.86778, -177.998, 36.8861, 0.81 ) }
    dend_24 { pt3dadd( -2.77318, -178.503, 37.0683, 1.62 ) }
    dend_24 { pt3dadd( -2.65206, -179.518, 37.4233, 0.15 ) }
    dend_24 { pt3dadd( -2.57241, -180.312, 37.6966, 0.15 ) }
    dend_24 { pt3dadd( -2.52026, -180.751, 37.8563, 0.15 ) }
    dend_24 { pt3dadd( -2.42678, -181.437, 38.1176, 0.88 ) }
    dend_24 { pt3dadd( -2.29671, -182.467, 38.4922, 0.15 ) }
    dend_24 { pt3dadd( -2.23237, -182.995, 38.6737, 0.96 ) }
    dend_24 { pt3dadd( -2.12438, -183.962, 38.979, 2.21 ) }
    dend_24 { pt3dadd( -1.92768, -185.776, 39.5191, 0.15 ) }
    dend_24 { pt3dadd( -1.8338, -186.534, 39.7368, 0.96 ) }
    dend_24 { pt3dadd( -1.62204, -188.065, 40.2044, 0.22 ) }
    dend_24 { pt3dadd( -1.50491, -188.795, 40.4411, 0.88 ) }
    dend_24 { pt3dadd( -1.44315, -189.186, 40.5744, 0.88 ) }
    dend_24 { pt3dadd( -1.25425, -190.425, 41.03, 0.07 ) }
    dend_24 { pt3dadd( -1.21304, -190.686, 41.1364, 0.29 ) }
    dend_24 { pt3dadd( -1.12376, -191.241, 41.39, 0.29 ) }
    dend_24 { pt3dadd( -1.03585, -191.781, 41.6543, 0.15 ) }
    dend_24 { pt3dadd( -0.98694, -192.216, 41.8605, 0.15 ) }
    dend_24 { pt3dadd( -0.925181, -192.935, 42.1769, 0.15 ) }
    dend_24 { pt3dadd( -0.886843, -193.44, 42.3725, 0.74 ) }
    dend_24 { pt3dadd( -0.846085, -194.159, 42.6317, 1.77 ) }
    dend_24 { pt3dadd( -0.834936, -194.615, 42.7866, 1.33 ) }
    dend_24 { pt3dadd( -0.84292, -195.75, 43.1696, 0.07 ) }
    dend_24 { pt3dadd( -0.856188, -196.127, 43.2928, 0.37 ) }
    dend_24 { pt3dadd( -0.931044, -197.299, 43.6756, 0.07 ) }
    dend_24 { pt3dadd( -0.972869, -197.925, 43.8824, 0.59 ) }
    dend_24 { pt3dadd( -1.02096, -198.936, 44.2298, 0.15 ) }
    dend_24 { pt3dadd( -1.03269, -199.457, 44.4102, 0.22 ) }
    dend_24 { pt3dadd( -1.03435, -200.251, 44.6842, 1.33 ) }
    dend_24 { pt3dadd( -1.03447, -201.415, 45.0771, 0.07 ) }
    dend_24 { pt3dadd( -1.0387, -201.867, 45.2173, 0.88 ) }
    dend_24 { pt3dadd( -1.01692, -203.171, 45.6243, 0.15 ) }
    dend_24 { pt3dadd( -0.990644, -203.767, 45.8152, 0.15 ) }
    dend_24 { pt3dadd( -0.960396, -204.282, 45.9867, 0.15 ) }
    dend_24 { pt3dadd( -0.924471, -204.849, 46.1891, 0.74 ) }
    dend_24 { pt3dadd( -0.886178, -205.661, 46.4764, 2.14 ) }
    dend_24 { pt3dadd( -0.859531, -207.134, 46.977, 0.15 ) }
    dend_24 { pt3dadd( -0.871545, -207.6, 47.1063, 0.44 ) }
    dend_24 { pt3dadd( -0.942825, -208.799, 47.3767, 0.07 ) }
    dend_24 { pt3dadd( -0.993386, -209.293, 47.4607, 0.15 ) }
    dend_24 { pt3dadd( -1.07925, -209.863, 47.5266, 0.07 ) }
    dend_24 { pt3dadd( -1.2203, -210.558, 47.5704, 1.11 ) }
    dend_24 { pt3dadd( -1.62612, -212.19, 47.5788, 0.15 ) }
    dend_24 { pt3dadd( -1.81184, -212.885, 47.5675, 1.03 ) }
    dend_24 { pt3dadd( -2.15685, -214.136, 47.517, 0.15 ) }
    dend_24 { pt3dadd( -2.28817, -214.699, 47.4962, 0.44 ) }
    dend_24 { pt3dadd( -2.45579, -215.712, 47.4911, 0.15 ) }
    dend_24 { pt3dadd( -2.53306, -216.503, 47.5193, 1.62 ) }
    dend_24 { pt3dadd( -2.53782, -216.909, 47.5536, 1.77 ) }
    dend_24 { pt3dadd( -2.49133, -217.516, 47.6258, 1.03 ) }
    dend_24 { pt3dadd( -2.25914, -219.042, 47.8475, 0.15 ) }
    dend_24 { pt3dadd( -1.97052, -220.482, 48.0864, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_24 { pt3dadd( -1.85791, -220.955, 48.1785, 0.88 ) }
    dend_24 { pt3dadd( -1.70301, -221.587, 48.3309, 1.18 ) }
    dend_24 { pt3dadd( -1.28305, -223.22, 48.7903, 0.07 ) }
    dend_24 { pt3dadd( -1.19567, -223.547, 48.8928, 0.15 ) }
    dend_24 { pt3dadd( -0.928897, -224.57, 49.2426, 0.07 ) }
    dend_24 { pt3dadd( -0.646147, -225.684, 49.6421, 0.15 ) }
    dend_24 { pt3dadd( -0.421074, -226.645, 49.9816, 1.33 ) }
    dend_24 { pt3dadd( -0.0793367, -228.217, 50.529, 0.15 ) }
    dend_24 { pt3dadd( 0.0432281, -228.87, 50.7523, 0.22 ) }
    dend_24 { pt3dadd( 0.213198, -229.933, 51.0636, 0.07 ) }
    dend_24 { pt3dadd( 0.256809, -230.264, 51.1425, 0.22 ) }
    dend_24 { pt3dadd( 0.4303, -231.848, 51.4227, 0.07 ) }
    dend_24 { pt3dadd( 0.459706, -232.16, 51.4658, 0.81 ) }
    dend_24 { pt3dadd( 0.54311, -233.296, 51.5889, 1.92 ) }
    dend_24 { pt3dadd( 0.673107, -234.681, 51.6903, 0.15 ) }
    dend_24 { pt3dadd( 0.766973, -235.407, 51.7138, 0.88 ) }
    dend_24 { pt3dadd( 1.02625, -236.992, 51.7243, 0.15 ) }
    dend_24 { pt3dadd( 1.11006, -237.414, 51.7141, 0.44 ) }
    dend_24 { pt3dadd( 1.39429, -238.726, 51.6632, 0.07 ) }
    dend_24 { pt3dadd( 1.65806, -239.807, 51.6253, 0.07 ) }
    dend_24 { pt3dadd( 1.81679, -240.516, 51.6219, 0.15 ) }
    dend_24 { pt3dadd( 1.92454, -241.065, 51.6368, 0.74 ) }
    dend_24 { pt3dadd( 2.00057, -241.565, 51.6707, 0.74 ) }
    dend_24 { pt3dadd( 2.11724, -242.678, 51.8815, 0.07 ) }
    dend_24 { pt3dadd( 2.17336, -243.435, 52.1466, 0.07 ) }
    dend_24 { pt3dadd( 2.1865, -244.169, 52.4936, 0.07 ) }
    dend_24 { pt3dadd( 2.18214, -244.774, 52.8146, 1.25 ) }
    dend_24 { pt3dadd( 2.17428, -245.259, 53.0794, 1.99 ) }
    dend_24 { pt3dadd( 2.15695, -246.921, 53.956, 0.15 ) }
    dend_24 { pt3dadd( 2.15031, -247.83, 54.4093, 0.96 ) }
    dend_24 { pt3dadd( 2.14234, -249.143, 54.9991, 0.07 ) }
    dend_24 { pt3dadd( 2.14443, -250.179, 55.4127, 0.07 ) }
    dend_24 { pt3dadd( 2.14932, -250.943, 55.6674, 0.81 ) }
    dend_24 { pt3dadd( 2.19159, -252.99, 56.2157, 0.15 ) }
    dend_24 { pt3dadd( 2.20498, -253.511, 56.3148, 0.29 ) }
    dend_24 { pt3dadd( 2.24379, -254.534, 56.4554, 0.07 ) }
    dend_24 { pt3dadd( 2.30081, -255.392, 56.5399, 1.47 ) }
    dend_24 { pt3dadd( 2.45964, -257.315, 56.6764, 0.07 ) }
    dend_24 { pt3dadd( 2.51744, -258.153, 56.7339, 0.07 ) }
    dend_24 { pt3dadd( 2.55292, -258.774, 56.7553, 1.11 ) }
    dend_24 { pt3dadd( 2.64808, -260.385, 56.7552, 0.07 ) }
    dend_24 { pt3dadd( 2.69259, -261.069, 56.729, 0.74 ) }
    dend_24 { pt3dadd( 2.7387, -261.693, 56.6767, 1.92 ) }
    dend_24 { pt3dadd( 2.86518, -263.407, 56.4622, 0.15 ) }
    dend_24 { pt3dadd( 2.96004, -264.724, 56.2704, 0.22 ) }
    dend_24 { pt3dadd( 3.06643, -266.243, 56.0468, 0.22 ) }
    dend_24 { pt3dadd( 3.11172, -266.91, 55.9365, 0.81 ) }
    dend_24 { pt3dadd( 3.16584, -267.773, 55.7945, 1.84 ) }
    dend_24 { pt3dadd( 3.2539, -269.625, 55.5625, 0.07 ) }
    dend_24 { pt3dadd( 3.27448, -270.171, 55.5142, 0.29 ) }
    dend_24 { pt3dadd( 3.24504, -271.541, 55.5525, 0.07 ) }
    dend_24 { pt3dadd( 3.19282, -272.414, 55.6241, 0.07 ) }
    dend_24 { pt3dadd( 3.10751, -273.404, 55.7508, 1.55 ) }
    dend_24 { pt3dadd( 2.93731, -274.919, 56.0409, 0.07 ) }
    dend_24 { pt3dadd( 2.8663, -275.456, 56.1784, 0.07 ) }
    dend_24 { pt3dadd( 2.67762, -276.856, 56.6048, 1.47 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 56/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -7.87665, -147.31, 29.5415, 0.22 ) }
    dend_21 { pt3dadd( -8.8377, -148.743, 29.9964, 0.22 ) }
    dend_21 { pt3dadd( -9.56545, -150.111, 30.4096, 0.44 ) }
    dend_21 { pt3dadd( -9.85246, -150.761, 30.6029, 0.15 ) }
    dend_21 { pt3dadd( -10.0726, -151.301, 30.7697, 0.15 ) }
    dend_21 { pt3dadd( -10.1814, -151.552, 30.846, 0.37 ) }
    dend_21 { pt3dadd( -10.533, -152.283, 31.0525, 0.44 ) }
    dend_21 { pt3dadd( -10.856, -152.906, 31.203, 0.15 ) }
    dend_21 { pt3dadd( -11.013, -153.159, 31.2789, 0.22 ) }
    dend_21 { pt3dadd( -11.3074, -153.573, 31.4653, 0.22 ) }
    dend_21 { pt3dadd( -11.7261, -154.109, 31.7632, 0.22 ) }
    dend_21 { pt3dadd( -12.1162, -154.596, 32.0717, 0.81 ) }
    dend_21 { pt3dadd( -12.7952, -155.478, 32.6682, 0.22 ) }
    dend_21 { pt3dadd( -13.5093, -156.489, 33.3697, 0.96 ) }
    dend_21 { pt3dadd( -14.1477, -157.49, 34.0493, 2.21 ) }
    dend_21 { pt3dadd( -15.2499, -159.472, 35.3398, 0.22 ) }
    dend_21 { pt3dadd( -15.6706, -160.334, 35.9022, 0.22 ) }
    dend_21 { pt3dadd( -15.9255, -160.933, 36.2845, 0.22 ) }
    dend_21 { pt3dadd( -16.0953, -161.393, 36.5564, 0.22 ) }
    dend_21 { pt3dadd( -16.3541, -162.118, 36.9154, 0.22 ) }
    dend_21 { pt3dadd( -16.5874, -162.683, 37.1569, 0.22 ) }
    dend_21 { pt3dadd( -16.8639, -163.243, 37.3719, 0.88 ) }
    dend_21 { pt3dadd( -17.2822, -163.926, 37.6416, 1.4 ) }
    dend_21 { pt3dadd( -17.9821, -164.832, 38.0476, 2.14 ) }
    dend_21 { pt3dadd( -19.3008, -166.295, 38.7895, 0.52 ) }
    dend_21 { pt3dadd( -20.3094, -167.291, 39.3497, 0.22 ) }
    dend_21 { pt3dadd( -20.8857, -167.822, 39.6595, 0.22 ) }
    dend_21 { pt3dadd( -21.684, -168.505, 40.0607, 1.11 ) }
    dend_21 { pt3dadd( -22.9955, -169.484, 40.6904, 1.99 ) }
    dend_21 { pt3dadd( -23.6974, -169.926, 41.0109, 1.99 ) }
    dend_21 { pt3dadd( -23.9488, -170.047, 41.1288, 1.99 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 87/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -38.9409, -134.547, 15.377, 0.22 ) }
    dend_19 { pt3dadd( -39.9445, -135.55, 15.1912, 0.22 ) }
    dend_19 { pt3dadd( -40.48, -136.112, 15.0978, 0.22 ) }
    dend_19 { pt3dadd( -40.947, -136.597, 15.012, 1.33 ) }
    dend_19 { pt3dadd( -41.8046, -137.488, 14.8475, 0.15 ) }
    dend_19 { pt3dadd( -42.1112, -137.816, 14.788, 0.15 ) }
    dend_19 { pt3dadd( -42.3327, -138.062, 14.7452, 0.37 ) }
    dend_19 { pt3dadd( -42.6863, -138.505, 14.704, 0.37 ) }
    dend_19 { pt3dadd( -43.1929, -139.221, 14.6461, 0.22 ) }
    dend_19 { pt3dadd( -43.4172, -139.556, 14.6104, 0.15 ) }
    dend_19 { pt3dadd( -43.5809, -139.812, 14.5754, 0.15 ) }
    dend_19 { pt3dadd( -43.6986, -140.005, 14.5581, 0.15 ) }
    dend_19 { pt3dadd( -43.9695, -140.468, 14.5286, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_19 { pt3dadd( -44.2383, -140.965, 14.5086, 0.74 ) }
    dend_19 { pt3dadd( -44.6731, -141.786, 14.4787, 0.15 ) }
    dend_19 { pt3dadd( -44.9669, -142.284, 14.4112, 0.15 ) }
    dend_19 { pt3dadd( -45.4116, -142.964, 14.2617, 0.15 ) }
    dend_19 { pt3dadd( -45.581, -143.209, 14.183, 0.15 ) }
    dend_19 { pt3dadd( -45.9553, -143.731, 13.9662, 1.33 ) }
    dend_19 { pt3dadd( -46.3147, -144.187, 13.7722, 2.14 ) }
    dend_19 { pt3dadd( -47.31, -145.294, 13.2907, 0.15 ) }
    dend_19 { pt3dadd( -47.8234, -145.782, 13.0738, 1.25 ) }
    dend_19 { pt3dadd( -48.6037, -146.448, 12.7699, 0.07 ) }
    dend_19 { pt3dadd( -48.9101, -146.7, 12.6699, 0.22 ) }
    dend_19 { pt3dadd( -49.8866, -147.469, 12.3973, 0.22 ) }
    dend_19 { pt3dadd( -50.3857, -147.838, 12.286, 1.25 ) }
    dend_19 { pt3dadd( -50.7117, -148.064, 12.2345, 1.25 ) }
    dend_19 { pt3dadd( -51.7419, -148.885, 12.0351, 0.07 ) }
    dend_19 { pt3dadd( -52.4147, -149.517, 11.8723, 0.07 ) }
    dend_19 { pt3dadd( -52.8443, -150.037, 11.7055, 0.07 ) }
    dend_19 { pt3dadd( -53.1756, -150.589, 11.4619, 0.07 ) }
    dend_19 { pt3dadd( -53.3333, -150.913, 11.3092, 1.18 ) }
    dend_19 { pt3dadd( -53.8324, -152.136, 10.7019, 0.07 ) }
    dend_19 { pt3dadd( -53.9269, -152.412, 10.5636, 0.88 ) }
    dend_19 { pt3dadd( -54.1546, -153.177, 10.1857, 1.92 ) }
    dend_19 { pt3dadd( -54.5301, -154.518, 9.5387, 0.15 ) }
    dend_19 { pt3dadd( -54.6433, -154.947, 9.33584, 0.22 ) }
    dend_19 { pt3dadd( -54.8438, -155.617, 9.01682, 0.07 ) }
    dend_19 { pt3dadd( -54.9575, -155.979, 8.85002, 0.07 ) }
    dend_19 { pt3dadd( -55.1181, -156.559, 8.61342, 0.29 ) }
    dend_19 { pt3dadd( -55.4049, -157.752, 8.22572, 0.07 ) }
    dend_19 { pt3dadd( -55.6394, -158.812, 7.97756, 0.22 ) }
    dend_19 { pt3dadd( -55.806, -159.548, 7.83738, 1.55 ) }
    dend_19 { pt3dadd( -56.1387, -160.878, 7.67932, 0.22 ) }
    dend_19 { pt3dadd( -56.3684, -161.697, 7.63179, 0.07 ) }
    dend_19 { pt3dadd( -56.5782, -162.427, 7.62837, 0.07 ) }
    dend_19 { pt3dadd( -56.726, -162.918, 7.68269, 0.07 ) }
    dend_19 { pt3dadd( -56.8909, -163.362, 7.78666, 0.15 ) }
    dend_19 { pt3dadd( -57.183, -164.021, 8.02902, 0.07 ) }
    dend_19 { pt3dadd( -57.4033, -164.307, 8.20327, 0.88 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 37/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -38.9409, -134.547, 15.377, 0.29 ) }
    dend_16 { pt3dadd( -40.6732, -134.134, 15.0322, 0.29 ) }
    dend_16 { pt3dadd( -41.5277, -133.901, 14.776, 0.22 ) }
    dend_16 { pt3dadd( -42.0663, -133.748, 14.5736, 0.74 ) }
    dend_16 { pt3dadd( -42.7111, -133.557, 14.306, 0.96 ) }
    dend_16 { pt3dadd( -43.4734, -133.339, 13.9778, 0.29 ) }
    dend_16 { pt3dadd( -44.2618, -133.114, 13.6275, 0.15 ) }
    dend_16 { pt3dadd( -45.1127, -132.865, 13.2124, 0.15 ) }
    dend_16 { pt3dadd( -45.8377, -132.677, 12.889, 1.03 ) }
    dend_16 { pt3dadd( -46.7528, -132.466, 12.5164, 0.29 ) }
    dend_16 { pt3dadd( -48.0121, -132.195, 12.0521, 0.22 ) }
    dend_16 { pt3dadd( -48.7085, -132.06, 11.8233, 1.11 ) }
    dend_16 { pt3dadd( -49.827, -131.872, 11.5117, 2.14 ) }
    dend_16 { pt3dadd( -51.9351, -131.545, 11.0122, 0.22 ) }
    dend_16 { pt3dadd( -52.4702, -131.468, 10.8984, 0.81 ) }
    dend_16 { pt3dadd( -53.5423, -131.326, 10.6768, 1.7 ) }
    dend_16 { pt3dadd( -54.9947, -131.127, 10.3918, 0.22 ) }
    dend_16 { pt3dadd( -55.6063, -131.043, 10.2603, 0.88 ) }
    dend_16 { pt3dadd( -56.5302, -130.923, 10.035, 1.55 ) }
    dend_16 { pt3dadd( -57.2163, -130.828, 9.84577, 0.59 ) }
    dend_16 { pt3dadd( -58.5071, -130.656, 9.46587, 0.15 ) }
    dend_16 { pt3dadd( -59.4531, -130.554, 9.14946, 0.88 ) }
    dend_16 { pt3dadd( -60.3989, -130.457, 8.78766, 0.15 ) }
    dend_16 { pt3dadd( -61.1514, -130.362, 8.4635, 0.22 ) }
    dend_16 { pt3dadd( -61.8142, -130.265, 8.14971, 0.81 ) }
    dend_16 { pt3dadd( -62.7987, -130.124, 7.6602, 1.99 ) }
    dend_16 { pt3dadd( -64.1786, -129.97, 6.91383, 0.22 ) }
    dend_16 { pt3dadd( -64.8518, -129.907, 6.5362, 0.22 ) }
    dend_16 { pt3dadd( -65.5339, -129.836, 6.1429, 0.52 ) }
    dend_16 { pt3dadd( -66.2403, -129.753, 5.72005, 1.18 ) }
    dend_16 { pt3dadd( -67.3539, -129.601, 5.04362, 1.99 ) }
    dend_16 { pt3dadd( -68.7828, -129.38, 4.13122, 0.15 ) }
    dend_16 { pt3dadd( -69.3123, -129.29, 3.79013, 0.29 ) }
    dend_16 { pt3dadd( -70.1726, -129.175, 3.22423, 0.07 ) }
    dend_16 { pt3dadd( -70.7555, -129.121, 2.80104, 0.22 ) }
    dend_16 { pt3dadd( -71.191, -129.087, 2.42437, 0.22 ) }
    dend_16 { pt3dadd( -71.5635, -129.08, 1.99131, 0.22 ) }
    dend_16 { pt3dadd( -71.7005, -129.097, 1.79315, 0.22 ) }
    dend_16 { pt3dadd( -72.014, -129.241, 1.20676, 0.22 ) }
    dend_16 { pt3dadd( -72.3091, -129.551, 0.519984, 0.22 ) }
    dend_16 { pt3dadd( -72.5063, -129.829, 0.00633502, 0.22 ) }
    dend_16 { pt3dadd( -72.9762, -130.514, -1.10818, 1.84 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 79/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 65.8999, 30.5801, 75.9721, 0.22 ) }
    dend_9 { pt3dadd( 67.3618, 30.6725, 77.6902, 0.22 ) }
    dend_9 { pt3dadd( 67.6843, 30.6635, 78.0782, 0.22 ) }
    dend_9 { pt3dadd( 68.4584, 30.6656, 78.9501, 0.59 ) }
    dend_9 { pt3dadd( 69.2001, 30.7036, 79.7018, 0.44 ) }
    dend_9 { pt3dadd( 69.6174, 30.7257, 80.0825, 0.44 ) }
    dend_9 { pt3dadd( 70.1662, 30.7336, 80.5058, 0.15 ) }
    dend_9 { pt3dadd( 70.7524, 30.7453, 80.8328, 0.15 ) }
    dend_9 { pt3dadd( 71.5276, 30.6948, 81.174, 0.15 ) }
    dend_9 { pt3dadd( 72.1624, 30.6029, 81.3779, 0.96 ) }
    dend_9 { pt3dadd( 73.0253, 30.455, 81.5997, 1.55 ) }
    dend_9 { pt3dadd( 74.2431, 30.3055, 81.896, 0.22 ) }
    dend_9 { pt3dadd( 75.1225, 30.2015, 82.0995, 0.37 ) }
    dend_9 { pt3dadd( 75.8064, 30.0888, 82.2477, 0.22 ) }
    dend_9 { pt3dadd( 76.3705, 29.9692, 82.3744, 0.22 ) }
    dend_9 { pt3dadd( 77.0084, 29.8334, 82.5245, 0.37 ) }
    dend_9 { pt3dadd( 78.2105, 29.5966, 82.8516, 0.22 ) }
    dend_9 { pt3dadd( 78.8774, 29.4916, 83.0733, 0.22 ) }
    dend_9 { pt3dadd( 79.7506, 29.4052, 83.4067, 0.22 ) }
    dend_9 { pt3dadd( 80.3129, 29.3717, 83.6412, 0.96 ) }
    dend_9 { pt3dadd( 81.2699, 29.3356, 84.0797, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_9 { pt3dadd( 82.8292, 29.2589, 84.8522, 0.22 ) }
    dend_9 { pt3dadd( 83.7964, 29.169, 85.3785, 0.15 ) }
    dend_9 { pt3dadd( 84.7295, 29.0828, 85.9456, 0.15 ) }
    dend_9 { pt3dadd( 85.0362, 29.0519, 86.1491, 0.15 ) }
    dend_9 { pt3dadd( 85.4627, 28.9858, 86.4421, 0.15 ) }
    dend_9 { pt3dadd( 85.8722, 28.897, 86.695, 0.15 ) }
    dend_9 { pt3dadd( 86.6457, 28.6916, 87.0853, 0.15 ) }
    dend_9 { pt3dadd( 87.1296, 28.5064, 87.2987, 0.81 ) }
    dend_9 { pt3dadd( 87.6972, 28.231, 87.5454, 1.47 ) }
    dend_9 { pt3dadd( 88.1137, 28.0166, 87.7287, 1.47 ) }
    dend_9 { pt3dadd( 89.3646, 27.3599, 88.2508, 0.15 ) }
    dend_9 { pt3dadd( 89.6797, 27.207, 88.3919, 0.22 ) }
    dend_9 { pt3dadd( 90.507, 26.7812, 88.7889, 0.37 ) }
    dend_9 { pt3dadd( 91.3292, 26.3152, 89.2101, 1.03 ) }
    dend_9 { pt3dadd( 92.1161, 25.8662, 89.7191, 1.77 ) }
    dend_9 { pt3dadd( 92.5296, 25.6433, 90.0504, 1.77 ) }
    dend_9 { pt3dadd( 93.7416, 25.0351, 91.199, 0.22 ) }
    dend_9 { pt3dadd( 94.1979, 24.8632, 91.6574, 0.22 ) }
    dend_9 { pt3dadd( 94.9248, 24.695, 92.3839, 1.11 ) }
    dend_9 { pt3dadd( 96.41, 24.4923, 93.8952, 0.22 ) }
    dend_9 { pt3dadd( 97.0174, 24.4294, 94.5611, 0.22 ) }
    dend_9 { pt3dadd( 97.5957, 24.373, 95.2343, 0.66 ) }
    dend_9 { pt3dadd( 98.406, 24.291, 96.1697, 0.88 ) }
    dend_9 { pt3dadd( 98.9653, 24.2524, 96.7966, 1.7 ) }
    dend_9 { pt3dadd( 100.156, 24.2288, 98.1145, 0.44 ) }
    dend_9 { pt3dadd( 101.053, 24.2392, 99.0511, 0.74 ) }
    dend_9 { pt3dadd( 101.725, 24.2881, 99.7407, 1.25 ) }
    dend_9 { pt3dadd( 102.846, 24.4952, 100.895, 0.22 ) }
    dend_9 { pt3dadd( 103.241, 24.6072, 101.301, 0.22 ) }
    dend_9 { pt3dadd( 103.926, 24.891, 102.0, 0.37 ) }
    dend_9 { pt3dadd( 104.409, 25.1362, 102.436, 0.37 ) }
    dend_9 { pt3dadd( 105.21, 25.5599, 103.063, 1.47 ) }
    dend_9 { pt3dadd( 106.196, 26.0584, 103.784, 0.29 ) }
    dend_9 { pt3dadd( 106.674, 26.2823, 104.11, 0.29 ) }
    dend_9 { pt3dadd( 106.937, 26.3957, 104.289, 0.29 ) }
    dend_9 { pt3dadd( 107.778, 26.7471, 104.921, 0.15 ) }
    dend_9 { pt3dadd( 108.299, 26.9957, 105.396, 0.22 ) }
    dend_9 { pt3dadd( 108.689, 27.2169, 105.829, 0.74 ) }
    dend_9 { pt3dadd( 109.118, 27.5342, 106.427, 1.25 ) }
    dend_9 { pt3dadd( 109.791, 28.1961, 107.583, 0.22 ) }
    dend_9 { pt3dadd( 110.289, 28.7794, 108.56, 0.96 ) }
    dend_9 { pt3dadd( 110.72, 29.3226, 109.479, 0.96 ) }
    dend_9 { pt3dadd( 111.069, 29.7165, 110.237, 0.29 ) }
    dend_9 { pt3dadd( 111.503, 30.1304, 111.205, 0.29 ) }
    dend_9 { pt3dadd( 111.864, 30.4143, 112.07, 0.29 ) }
    dend_9 { pt3dadd( 112.203, 30.6202, 112.919, 0.29 ) }
    dend_9 { pt3dadd( 112.477, 30.8091, 113.815, 0.29 ) }
    dend_9 { pt3dadd( 112.621, 30.9722, 114.659, 0.29 ) }
    dend_9 { pt3dadd( 112.651, 31.122, 115.492, 0.29 ) }
    dend_9 { pt3dadd( 112.638, 31.2151, 116.023, 0.29 ) }
    dend_9 { pt3dadd( 112.604, 31.3572, 116.726, 0.29 ) }
    dend_9 { pt3dadd( 112.521, 31.6735, 118.07, 0.59 ) }
    dend_9 { pt3dadd( 112.463, 31.9402, 119.085, 0.59 ) }
    dend_9 { pt3dadd( 112.434, 32.2753, 120.349, 0.59 ) }
    dend_9 { pt3dadd( 112.463, 32.4875, 121.245, 0.59 ) }
    dend_9 { pt3dadd( 112.589, 32.6908, 122.368, 0.59 ) }
    dend_9 { pt3dadd( 112.75, 32.7783, 123.155, 0.59 ) }
    dend_9 { pt3dadd( 112.85, 32.7957, 123.459, 0.59 ) }
    dend_9 { pt3dadd( 113.226, 32.7923, 124.262, 0.59 ) }
    dend_9 { pt3dadd( 113.433, 32.748, 124.588, 0.59 ) }
    dend_9 { pt3dadd( 113.982, 32.5557, 125.272, 0.22 ) }
    dend_9 { pt3dadd( 114.438, 32.3627, 125.707, 0.22 ) }
    dend_9 { pt3dadd( 115.076, 32.157, 126.315, 0.22 ) }
    dend_9 { pt3dadd( 115.535, 32.0802, 126.79, 0.22 ) }
    dend_9 { pt3dadd( 116.271, 32.07, 127.537, 0.22 ) }
    dend_9 { pt3dadd( 116.8, 32.1508, 128.111, 0.22 ) }
    dend_9 { pt3dadd( 117.357, 32.3274, 128.799, 1.11 ) }
    dend_9 { pt3dadd( 118.364, 32.7891, 130.19, 0.22 ) }
    dend_9 { pt3dadd( 118.907, 33.0886, 131.02, 0.22 ) }
    dend_9 { pt3dadd( 119.542, 33.4984, 132.068, 0.22 ) }
    dend_9 { pt3dadd( 120.026, 33.7729, 132.872, 0.22 ) }
    dend_9 { pt3dadd( 120.404, 33.8641, 133.547, 0.22 ) }
    dend_9 { pt3dadd( 120.582, 33.8007, 133.875, 0.22 ) }
    dend_9 { pt3dadd( 120.943, 33.5059, 134.49, 0.59 ) }
    dend_9 { pt3dadd( 121.508, 32.9513, 135.382, 0.59 ) }
    dend_9 { pt3dadd( 122.177, 32.3051, 136.395, 0.15 ) }
    dend_9 { pt3dadd( 122.833, 31.6845, 137.351, 0.66 ) }
    dend_9 { pt3dadd( 123.533, 31.0642, 138.375, 0.15 ) }
    dend_9 { pt3dadd( 124.098, 30.61, 139.222, 0.66 ) }
    dend_9 { pt3dadd( 124.572, 30.2953, 139.922, 1.03 ) }
    dend_9 { pt3dadd( 125.506, 29.7726, 141.201, 0.22 ) }
    dend_9 { pt3dadd( 126.309, 29.3833, 142.206, 0.15 ) }
    dend_9 { pt3dadd( 127.135, 29.0534, 143.152, 0.66 ) }
    dend_9 { pt3dadd( 127.659, 28.9139, 143.733, 1.25 ) }
    dend_9 { pt3dadd( 128.795, 28.7249, 144.947, 0.22 ) }
    dend_9 { pt3dadd( 129.64, 28.6325, 145.819, 0.15 ) }
    dend_9 { pt3dadd( 130.399, 28.5933, 146.52, 0.37 ) }
    dend_9 { pt3dadd( 130.865, 28.5998, 146.906, 0.59 ) }
    dend_9 { pt3dadd( 132.064, 28.6371, 147.832, 0.15 ) }
    dend_9 { pt3dadd( 132.79, 28.6449, 148.407, 0.88 ) }
    dend_9 { pt3dadd( 134.029, 28.6434, 149.442, 0.22 ) }
    dend_9 { pt3dadd( 134.519, 28.66, 149.863, 0.96 ) }
    dend_9 { pt3dadd( 134.926, 28.6848, 150.221, 0.66 ) }
    dend_9 { pt3dadd( 135.784, 28.7418, 150.95, 0.15 ) }
    dend_9 { pt3dadd( 136.64, 28.844, 151.697, 0.81 ) }
    dend_9 { pt3dadd( 137.211, 28.9883, 152.249, 1.25 ) }
    dend_9 { pt3dadd( 137.982, 29.2918, 153.01, 0.15 ) }
    dend_9 { pt3dadd( 138.928, 29.7242, 153.973, 0.15 ) }
    dend_9 { pt3dadd( 139.213, 29.869, 154.275, 0.29 ) }
    dend_9 { pt3dadd( 139.912, 30.2902, 155.033, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_9 { pt3dadd( 140.248, 30.5159, 155.412, 0.96 ) }
    dend_9 { pt3dadd( 140.869, 30.9019, 156.16, 0.29 ) }
    dend_9 { pt3dadd( 141.693, 31.2997, 157.16, 0.74 ) }
    dend_9 { pt3dadd( 142.505, 31.6159, 158.095, 0.15 ) }
    dend_9 { pt3dadd( 143.055, 31.8061, 158.713, 0.37 ) }
    dend_9 { pt3dadd( 143.389, 31.913, 159.054, 0.37 ) }
    dend_9 { pt3dadd( 143.974, 32.1209, 159.655, 0.22 ) }
    dend_9 { pt3dadd( 144.639, 32.3766, 160.308, 0.22 ) }
    dend_9 { pt3dadd( 145.194, 32.5435, 160.78, 0.37 ) }
    dend_9 { pt3dadd( 145.851, 32.7091, 161.277, 0.37 ) }
    dend_9 { pt3dadd( 146.6, 32.8859, 161.777, 1.33 ) }
    dend_9 { pt3dadd( 148.062, 33.2761, 162.641, 0.22 ) }
    dend_9 { pt3dadd( 149.035, 33.6098, 163.166, 1.03 ) }
    dend_9 { pt3dadd( 150.243, 34.0868, 163.76, 0.15 ) }
    dend_9 { pt3dadd( 150.661, 34.2801, 163.947, 0.15 ) }
    dend_9 { pt3dadd( 151.74, 34.9084, 164.379, 0.15 ) }
    dend_9 { pt3dadd( 152.502, 35.4835, 164.688, 1.03 ) }
    dend_9 { pt3dadd( 153.127, 36.1136, 164.936, 0.15 ) }
    dend_9 { pt3dadd( 153.551, 36.6343, 165.121, 0.15 ) }
    dend_9 { pt3dadd( 154.132, 37.4541, 165.455, 0.15 ) }
    dend_9 { pt3dadd( 154.735, 38.2879, 165.914, 0.88 ) }
    dend_9 { pt3dadd( 155.32, 39.0919, 166.459, 0.29 ) }
    dend_9 { pt3dadd( 155.753, 39.6703, 166.906, 0.81 ) }
    dend_9 { pt3dadd( 155.965, 39.9381, 167.125, 0.81 ) }
    dend_9 { pt3dadd( 156.782, 41.1091, 167.995, 0.22 ) }
    dend_9 { pt3dadd( 157.313, 42.0087, 168.583, 0.07 ) }
    dend_9 { pt3dadd( 157.64, 42.7693, 168.984, 0.15 ) }
    dend_9 { pt3dadd( 157.759, 43.1841, 169.158, 0.66 ) }
    dend_9 { pt3dadd( 157.913, 44.0544, 169.461, 1.55 ) }
    dend_9 { pt3dadd( 158.184, 46.2553, 170.111, 0.15 ) }
    dend_9 { pt3dadd( 158.245, 47.3083, 170.328, 0.15 ) }
    dend_9 { pt3dadd( 158.23, 48.2833, 170.496, 0.66 ) }
    dend_9 { pt3dadd( 158.179, 49.0021, 170.624, 0.15 ) }
    dend_9 { pt3dadd( 158.127, 49.4293, 170.702, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 34/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 65.8999, 30.5801, 75.9721, 0.29 ) }
    dend_8 { pt3dadd( 65.0323, 31.3998, 77.6231, 0.29 ) }
    dend_8 { pt3dadd( 64.3457, 32.0566, 78.7602, 0.29 ) }
    dend_8 { pt3dadd( 63.6188, 32.7977, 79.8971, 0.81 ) }
    dend_8 { pt3dadd( 63.2043, 33.1993, 80.5065, 1.4 ) }
    dend_8 { pt3dadd( 62.1706, 34.1022, 81.9387, 0.07 ) }
    dend_8 { pt3dadd( 61.6138, 34.5516, 82.6661, 1.03 ) }
    dend_8 { pt3dadd( 60.5039, 35.3381, 83.9149, 0.15 ) }
    dend_8 { pt3dadd( 59.5603, 36.0336, 84.9275, 1.55 ) }
    dend_8 { pt3dadd( 58.6815, 36.7371, 85.8947, 0.22 ) }
    dend_8 { pt3dadd( 58.1058, 37.2533, 86.575, 0.22 ) }
    dend_8 { pt3dadd( 57.5081, 37.8685, 87.3404, 0.81 ) }
    dend_8 { pt3dadd( 56.9045, 38.5708, 88.1602, 0.07 ) }
    dend_8 { pt3dadd( 56.428, 39.2804, 88.8998, 0.59 ) }
    dend_8 { pt3dadd( 56.1046, 40.0115, 89.5137, 0.07 ) }
    dend_8 { pt3dadd( 55.9883, 40.4828, 89.8494, 0.52 ) }
    dend_8 { pt3dadd( 55.8052, 42.097, 90.9286, 0.07 ) }
    dend_8 { pt3dadd( 55.8103, 42.639, 91.2811, 0.96 ) }
    dend_8 { pt3dadd( 55.8737, 43.1488, 91.6199, 0.96 ) }
    dend_8 { pt3dadd( 56.1723, 44.5071, 92.5717, 0.22 ) }
    dend_8 { pt3dadd( 56.5159, 45.4557, 93.253, 0.22 ) }
    dend_8 { pt3dadd( 56.9373, 46.2575, 93.8742, 0.96 ) }
    dend_8 { pt3dadd( 57.4831, 47.0932, 94.5613, 1.77 ) }
    dend_8 { pt3dadd( 58.2682, 48.2174, 95.5659, 0.22 ) }
    dend_8 { pt3dadd( 58.7679, 48.8903, 96.1972, 0.15 ) }
    dend_8 { pt3dadd( 59.202, 49.4582, 96.7069, 0.15 ) }
    dend_8 { pt3dadd( 59.4215, 49.7662, 96.9749, 0.15 ) }
    dend_8 { pt3dadd( 60.089, 50.8391, 97.879, 0.88 ) }
    dend_8 { pt3dadd( 60.6511, 52.0817, 98.9173, 0.22 ) }
    dend_8 { pt3dadd( 60.8693, 52.7783, 99.503, 0.81 ) }
    dend_8 { pt3dadd( 61.1581, 53.9602, 100.512, 0.15 ) }
    dend_8 { pt3dadd( 61.3407, 54.8102, 101.237, 0.66 ) }
    dend_8 { pt3dadd( 61.5242, 55.7494, 102.032, 1.84 ) }
    dend_8 { pt3dadd( 61.8963, 57.5007, 103.506, 0.15 ) }
    dend_8 { pt3dadd( 62.0969, 58.4995, 104.321, 0.15 ) }
    dend_8 { pt3dadd( 62.2588, 59.313, 104.97, 0.15 ) }
    dend_8 { pt3dadd( 62.4169, 59.9736, 105.492, 0.66 ) }
    dend_8 { pt3dadd( 62.8057, 61.2368, 106.396, 0.15 ) }
    dend_8 { pt3dadd( 63.2691, 62.4128, 107.166, 0.15 ) }
    dend_8 { pt3dadd( 63.5422, 63.0067, 107.515, 0.66 ) }
    dend_8 { pt3dadd( 63.7784, 63.5853, 107.822, 0.22 ) }
    dend_8 { pt3dadd( 64.0784, 64.5151, 108.305, 0.22 ) }
    dend_8 { pt3dadd( 64.2214, 65.0689, 108.583, 0.81 ) }
    dend_8 { pt3dadd( 64.2963, 65.5151, 108.793, 0.81 ) }
    dend_8 { pt3dadd( 64.3429, 66.7625, 109.386, 0.07 ) }
    dend_8 { pt3dadd( 64.2933, 67.512, 109.762, 0.66 ) }
    dend_8 { pt3dadd( 63.991, 69.0742, 110.61, 0.15 ) }
    dend_8 { pt3dadd( 63.6775, 70.1125, 111.199, 1.4 ) }
    dend_8 { pt3dadd( 63.1249, 71.5425, 112.071, 0.15 ) }
    dend_8 { pt3dadd( 62.6796, 72.4864, 112.685, 0.15 ) }
    dend_8 { pt3dadd( 62.2223, 73.2694, 113.229, 1.18 ) }
    dend_8 { pt3dadd( 61.3247, 74.446, 114.169, 0.22 ) }
    dend_8 { pt3dadd( 60.5199, 75.2518, 114.893, 0.15 ) }
    dend_8 { pt3dadd( 60.0102, 75.7052, 115.33, 0.15 ) }
    dend_8 { pt3dadd( 59.4976, 76.1417, 115.76, 0.74 ) }
    dend_8 { pt3dadd( 58.876, 76.6846, 116.265, 1.25 ) }
    dend_8 { pt3dadd( 57.6121, 77.8362, 117.302, 0.22 ) }
    dend_8 { pt3dadd( 56.9459, 78.4756, 117.872, 1.11 ) }
    dend_8 { pt3dadd( 55.8064, 79.6224, 118.931, 0.22 ) }
    dend_8 { pt3dadd( 55.1873, 80.2938, 119.547, 1.47 ) }
    dend_8 { pt3dadd( 54.5953, 80.9748, 120.161, 0.96 ) }
    dend_8 { pt3dadd( 53.8111, 81.9474, 121.021, 0.22 ) }
    dend_8 { pt3dadd( 53.1435, 82.8408, 121.796, 0.74 ) }
    dend_8 { pt3dadd( 52.3378, 83.9455, 122.792, 0.15 ) }
    dend_8 { pt3dadd( 51.9909, 84.4113, 123.244, 0.15 ) }
    dend_8 { pt3dadd( 51.6239, 84.9196, 123.757, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 0/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 41.2505, 1.82363, 46.8214, 0.15 ) }
    dend_6 { pt3dadd( 44.1613, -0.177728, 49.9681, 0.15 ) }
    dend_6 { pt3dadd( 45.1395, -0.648856, 50.693, 0.22 ) }
    dend_6 { pt3dadd( 45.9268, -0.961384, 51.1959, 0.88 ) }
    dend_6 { pt3dadd( 47.3473, -1.45744, 52.0183, 0.15 ) }
    dend_6 { pt3dadd( 48.278, -1.75187, 52.5251, 1.18 ) }
    dend_6 { pt3dadd( 49.3104, -2.06895, 53.0776, 2.58 ) }
    dend_6 { pt3dadd( 51.7397, -2.6066, 54.0619, 0.29 ) }
    dend_6 { pt3dadd( 52.8581, -2.8376, 54.5011, 0.96 ) }
    dend_6 { pt3dadd( 53.6938, -3.0099, 54.8438, 1.18 ) }
    dend_6 { pt3dadd( 56.0524, -3.49573, 55.9475, 0.07 ) }
    dend_6 { pt3dadd( 56.9176, -3.66549, 56.439, 0.07 ) }
    dend_6 { pt3dadd( 57.3325, -3.75435, 56.7121, 0.07 ) }
    dend_6 { pt3dadd( 58.0854, -3.96823, 57.3055, 0.74 ) }
    dend_6 { pt3dadd( 58.6962, -4.1973, 57.8496, 1.03 ) }
    dend_6 { pt3dadd( 60.0873, -4.84893, 59.2338, 0.15 ) }
    dend_6 { pt3dadd( 61.2326, -5.54168, 60.4802, 1.18 ) }
    dend_6 { pt3dadd( 61.6738, -5.87376, 60.9868, 1.4 ) }
    dend_6 { pt3dadd( 62.5757, -6.69961, 62.0917, 0.15 ) }
    dend_6 { pt3dadd( 63.202, -7.4223, 62.8897, 0.15 ) }
    dend_6 { pt3dadd( 63.5323, -7.86667, 63.318, 0.88 ) }
    dend_6 { pt3dadd( 63.9167, -8.447, 63.8404, 0.29 ) }
    dend_6 { pt3dadd( 64.5836, -9.5273, 64.8108, 0.15 ) }
    dend_6 { pt3dadd( 65.0231, -10.2817, 65.556, 0.81 ) }
    dend_6 { pt3dadd( 65.4709, -11.1089, 66.4444, 1.62 ) }
    dend_6 { pt3dadd( 66.2255, -12.7694, 68.28, 0.15 ) }
    dend_6 { pt3dadd( 66.5704, -13.6653, 69.2908, 0.15 ) }
    dend_6 { pt3dadd( 66.8349, -14.4782, 70.1967, 0.22 ) }
    dend_6 { pt3dadd( 67.0879, -15.5077, 71.3076, 0.22 ) }
    dend_6 { pt3dadd( 67.2153, -16.1905, 72.0084, 0.22 ) }
    dend_6 { pt3dadd( 67.3356, -16.8413, 72.6926, 1.18 ) }
    dend_6 { pt3dadd( 67.5031, -17.6514, 73.5096, 1.62 ) }
    dend_6 { pt3dadd( 68.0041, -19.0821, 74.9021, 0.22 ) }
    dend_6 { pt3dadd( 68.4044, -19.7572, 75.6278, 0.22 ) }
    dend_6 { pt3dadd( 68.7089, -20.1, 76.0603, 0.44 ) }
    dend_6 { pt3dadd( 69.5616, -20.7937, 77.1272, 0.15 ) }
    dend_6 { pt3dadd( 70.2179, -21.1917, 77.8701, 1.33 ) }
    dend_6 { pt3dadd( 71.5696, -21.88, 79.2916, 0.15 ) }
    dend_6 { pt3dadd( 72.9982, -22.5196, 80.6726, 0.22 ) }
    dend_6 { pt3dadd( 73.7724, -22.8867, 81.3449, 0.22 ) }
    dend_6 { pt3dadd( 74.1766, -23.0917, 81.6696, 0.22 ) }
    dend_6 { pt3dadd( 74.8887, -23.504, 82.1769, 0.74 ) }
    dend_6 { pt3dadd( 75.6515, -23.9672, 82.6362, 1.25 ) }
    dend_6 { pt3dadd( 76.3, -24.3515, 82.9259, 1.25 ) }
    dend_6 { pt3dadd( 78.3967, -25.6744, 83.63, 0.22 ) }
    dend_6 { pt3dadd( 79.3173, -26.2756, 83.9429, 0.22 ) }
    dend_6 { pt3dadd( 80.0886, -26.7952, 84.2217, 1.03 ) }
    dend_6 { pt3dadd( 81.0577, -27.4527, 84.5756, 1.84 ) }
    dend_6 { pt3dadd( 83.5171, -29.1031, 85.4485, 0.22 ) }
    dend_6 { pt3dadd( 84.5863, -29.8443, 85.8061, 1.11 ) }
    dend_6 { pt3dadd( 86.1115, -30.9939, 86.3082, 0.22 ) }
    dend_6 { pt3dadd( 87.0911, -31.7799, 86.6596, 0.15 ) }
    dend_6 { pt3dadd( 87.7906, -32.3484, 86.941, 0.15 ) }
    dend_6 { pt3dadd( 88.8129, -33.2015, 87.4041, 1.03 ) }
    dend_6 { pt3dadd( 90.2538, -34.4814, 88.1427, 0.22 ) }
    dend_6 { pt3dadd( 90.9376, -35.0807, 88.5735, 0.96 ) }
    dend_6 { pt3dadd( 92.1423, -36.1367, 89.43, 0.15 ) }
    dend_6 { pt3dadd( 92.9434, -36.8618, 90.1048, 0.15 ) }
    dend_6 { pt3dadd( 93.5192, -37.4345, 90.7041, 0.96 ) }
    dend_6 { pt3dadd( 94.2773, -38.2185, 91.6671, 1.92 ) }
    dend_6 { pt3dadd( 96.0867, -39.9825, 94.317, 0.22 ) }
    dend_6 { pt3dadd( 96.6658, -40.4951, 95.2105, 0.44 ) }
    dend_6 { pt3dadd( 97.5555, -41.2948, 96.681, 1.18 ) }
    dend_6 { pt3dadd( 98.5908, -42.2911, 98.5881, 0.22 ) }
    dend_6 { pt3dadd( 99.5653, -43.3089, 100.682, 0.52 ) }
    dend_6 { pt3dadd( 100.288, -44.152, 102.637, 0.81 ) }
    dend_6 { pt3dadd( 100.646, -44.6639, 104.029, 0.81 ) }
    dend_6 { pt3dadd( 101.061, -45.3662, 106.455, 0.52 ) }
    dend_6 { pt3dadd( 101.124, -45.6402, 107.837, 0.52 ) }
    dend_6 { pt3dadd( 100.928, -45.7105, 109.228, 0.52 ) }
    dend_6 { pt3dadd( 100.436, -45.543, 110.486, 0.52 ) }
    dend_6 { pt3dadd( 99.8465, -45.224, 111.43, 1.25 ) }
    dend_6 { pt3dadd( 99.2476, -44.7813, 112.217, 1.25 ) }
    dend_6 { pt3dadd( 98.517, -44.0549, 113.165, 0.37 ) }
    dend_6 { pt3dadd( 97.5998, -42.9055, 114.535, 0.66 ) }
    dend_6 { pt3dadd( 97.0823, -42.0793, 115.467, 0.37 ) }
    dend_6 { pt3dadd( 96.7045, -41.2001, 116.492, 0.66 ) }
    dend_6 { pt3dadd( 96.4778, -40.252, 117.809, 0.15 ) }
    dend_6 { pt3dadd( 96.465, -39.6936, 118.762, 0.15 ) }
    dend_6 { pt3dadd( 96.5438, -39.4055, 119.377, 0.15 ) }
    dend_6 { pt3dadd( 96.7498, -38.9892, 120.423, 1.62 ) }
    dend_6 { pt3dadd( 97.1758, -38.2484, 122.467, 0.22 ) }
    dend_6 { pt3dadd( 97.6311, -37.478, 124.819, 0.88 ) }
    dend_6 { pt3dadd( 97.9667, -36.9245, 126.839, 1.4 ) }
    dend_6 { pt3dadd( 98.2181, -36.4851, 128.697, 1.4 ) }
    dend_6 { pt3dadd( 98.4692, -35.9265, 131.289, 0.66 ) }
    dend_6 { pt3dadd( 98.5901, -35.492, 133.626, 0.29 ) }
    dend_6 { pt3dadd( 98.5995, -35.3357, 134.813, 0.29 ) }
    dend_6 { pt3dadd( 98.5712, -35.2459, 136.0, 0.29 ) }
    dend_6 { pt3dadd( 98.5069, -35.255, 136.783, 0.29 ) }
    dend_6 { pt3dadd( 98.25, -35.518, 138.591, 0.29 ) }
    dend_6 { pt3dadd( 98.008, -35.903, 139.812, 0.29 ) }
    dend_6 { pt3dadd( 97.7086, -36.452, 141.179, 0.29 ) }
    dend_6 { pt3dadd( 97.4437, -36.802, 142.191, 0.29 ) }
    dend_6 { pt3dadd( 97.1741, -36.9659, 142.939, 0.29 ) }
    dend_6 { pt3dadd( 96.9482, -37.0104, 143.431, 0.29 ) }
    dend_6 { pt3dadd( 96.2979, -36.855, 144.397, 0.88 ) }
    dend_6 { pt3dadd( 95.5572, -36.4806, 145.291, 1.25 ) }
    dend_6 { pt3dadd( 94.8458, -36.0209, 146.11, 0.59 ) }
    dend_6 { pt3dadd( 93.8851, -35.3551, 147.141, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_6 { pt3dadd( 93.2291, -34.8734, 147.837, 1.4 ) }
    dend_6 { pt3dadd( 91.2096, -33.3805, 149.907, 0.15 ) }
    dend_6 { pt3dadd( 90.4243, -32.8112, 150.653, 0.74 ) }
    dend_6 { pt3dadd( 88.9692, -31.7768, 151.94, 0.22 ) }
    dend_6 { pt3dadd( 87.9512, -31.0669, 152.825, 1.03 ) }
    dend_6 { pt3dadd( 87.2373, -30.5733, 153.461, 0.52 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 6/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 41.2505, 1.82363, 46.8214, 0.15 ) }
    dend_5 { pt3dadd( 40.0048, -0.486649, 47.265, 0.15 ) }
    dend_5 { pt3dadd( 39.5056, -1.43298, 47.415, 0.07 ) }
    dend_5 { pt3dadd( 38.9068, -2.56291, 47.5651, 1.03 ) }
    dend_5 { pt3dadd( 38.0685, -4.12069, 47.7282, 0.07 ) }
    dend_5 { pt3dadd( 37.2281, -5.64772, 47.8632, 0.07 ) }
    dend_5 { pt3dadd( 36.7436, -6.49587, 47.927, 0.66 ) }
    dend_5 { pt3dadd( 35.7559, -8.168, 47.8613, 0.07 ) }
    dend_5 { pt3dadd( 35.2529, -9.03139, 47.7755, 0.07 ) }
    dend_5 { pt3dadd( 34.5296, -10.2841, 47.5993, 0.07 ) }
    dend_5 { pt3dadd( 34.3153, -10.6526, 47.5151, 0.29 ) }
    dend_5 { pt3dadd( 33.915, -11.3592, 47.2979, 0.81 ) }
    dend_5 { pt3dadd( 32.8269, -13.3083, 46.5809, 0.07 ) }
    dend_5 { pt3dadd( 32.0957, -14.6527, 46.0131, 0.07 ) }
    dend_5 { pt3dadd( 31.5994, -15.5815, 45.5672, 0.15 ) }
    dend_5 { pt3dadd( 30.6196, -17.4704, 44.5844, 0.07 ) }
    dend_5 { pt3dadd( 30.0379, -18.666, 43.9387, 0.07 ) }
    dend_5 { pt3dadd( 29.7203, -19.3742, 43.5489, 0.22 ) }
    dend_5 { pt3dadd( 29.489, -19.9233, 43.2405, 0.22 ) }
    dend_5 { pt3dadd( 28.7896, -21.5419, 42.3066, 0.15 ) }
    dend_5 { pt3dadd( 28.3887, -22.4935, 41.7691, 0.15 ) }
    dend_5 { pt3dadd( 27.943, -23.6518, 41.1512, 0.07 ) }
    dend_5 { pt3dadd( 27.713, -24.2871, 40.8118, 0.15 ) }
    dend_5 { pt3dadd( 27.1629, -25.804, 40.0297, 0.07 ) }
    dend_5 { pt3dadd( 26.8239, -26.6579, 39.5928, 0.59 ) }
    dend_5 { pt3dadd( 26.1544, -28.0288, 38.8651, 0.07 ) }
    dend_5 { pt3dadd( 25.7486, -28.6827, 38.4519, 0.07 ) }
    dend_5 { pt3dadd( 25.4174, -29.1046, 38.1345, 0.22 ) }
    dend_5 { pt3dadd( 24.6815, -29.9122, 37.4705, 0.22 ) }
    dend_5 { pt3dadd( 23.7547, -30.8606, 36.7014, 0.07 ) }
    dend_5 { pt3dadd( 22.6339, -31.9727, 35.8413, 0.07 ) }
    dend_5 { pt3dadd( 22.0806, -32.4755, 35.4656, 0.07 ) }
    dend_5 { pt3dadd( 21.3703, -33.0452, 35.0699, 0.07 ) }
    dend_5 { pt3dadd( 20.1861, -33.8782, 34.5826, 0.29 ) }
    dend_5 { pt3dadd( 18.3419, -35.0094, 34.1168, 0.07 ) }
    dend_5 { pt3dadd( 17.5009, -35.4557, 34.0599, 0.29 ) }
    dend_5 { pt3dadd( 16.7446, -35.8338, 34.1127, 0.29 ) }
    dend_5 { pt3dadd( 15.3021, -36.5564, 34.3134, 0.07 ) }
    dend_5 { pt3dadd( 13.9034, -37.2105, 34.5808, 0.07 ) }
    dend_5 { pt3dadd( 13.3073, -37.4512, 34.7083, 0.22 ) }
    dend_5 { pt3dadd( 12.4, -37.755, 34.8899, 0.37 ) }
    dend_5 { pt3dadd( 11.1793, -38.1662, 35.0639, 0.29 ) }
    dend_5 { pt3dadd( 9.6785, -38.6888, 35.0467, 0.07 ) }
    dend_5 { pt3dadd( 9.14543, -38.8728, 34.9525, 0.37 ) }
    dend_5 { pt3dadd( 8.3534, -39.105, 34.7449, 0.59 ) }
    dend_5 { pt3dadd( 6.80083, -39.4159, 34.2661, 0.07 ) }
    dend_5 { pt3dadd( 6.00873, -39.5069, 33.9915, 0.15 ) }
    dend_5 { pt3dadd( 4.03106, -39.5897, 33.2614, 0.07 ) }
    dend_5 { pt3dadd( 2.73005, -39.59, 32.7557, 0.07 ) }
    dend_5 { pt3dadd( 1.60167, -39.6281, 32.3049, 0.15 ) }
    dend_5 { pt3dadd( 0.121404, -39.7886, 31.7182, 0.07 ) }
    dend_5 { pt3dadd( -0.637137, -39.9598, 31.4337, 0.07 ) }
    dend_5 { pt3dadd( -1.06514, -40.1013, 31.2931, 0.29 ) }
    dend_5 { pt3dadd( -1.57481, -40.3294, 31.1648, 0.29 ) }
    dend_5 { pt3dadd( -2.97083, -41.1005, 30.8475, 0.07 ) }
    dend_5 { pt3dadd( -4.25739, -41.907, 30.5872, 0.07 ) }
    dend_5 { pt3dadd( -5.39798, -42.6648, 30.3764, 0.07 ) }
    dend_5 { pt3dadd( -5.82721, -42.9411, 30.2852, 0.07 ) }
    dend_5 { pt3dadd( -6.05035, -43.0772, 30.2259, 0.15 ) }
    dend_5 { pt3dadd( -6.41327, -43.2696, 30.1018, 0.15 ) }
    dend_5 { pt3dadd( -7.13218, -43.5264, 29.78, 0.15 ) }
    dend_5 { pt3dadd( -8.13016, -43.6961, 29.2361, 0.15 ) }
    dend_5 { pt3dadd( -9.17578, -43.7493, 28.5559, 0.15 ) }
    dend_5 { pt3dadd( -9.79522, -43.7572, 28.1354, 0.15 ) }
    dend_5 { pt3dadd( -10.4636, -43.7591, 27.6769, 0.15 ) }
    dend_5 { pt3dadd( -11.1267, -43.7546, 27.2115, 0.15 ) }
    dend_5 { pt3dadd( -11.6307, -43.7473, 26.8458, 0.15 ) }
    dend_5 { pt3dadd( -12.2162, -43.7102, 26.4361, 0.15 ) }
    dend_5 { pt3dadd( -13.3624, -43.5583, 25.6496, 0.07 ) }
    dend_5 { pt3dadd( -14.1209, -43.4536, 25.1584, 0.07 ) }
    dend_5 { pt3dadd( -15.1805, -43.3853, 24.5382, 0.66 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 77/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -59.7542, 64.3702, 21.9768, 0.07 ) }
    dend_62 { pt3dadd( -60.7643, 63.9723, 22.826, 0.07 ) }
    dend_62 { pt3dadd( -61.3652, 63.6991, 23.4236, 0.88 ) }
    dend_62 { pt3dadd( -62.1032, 63.3165, 24.2707, 0.22 ) }
    dend_62 { pt3dadd( -62.6133, 63.0571, 24.8478, 0.88 ) }
    dend_62 { pt3dadd( -63.2992, 62.7096, 25.6094, 1.84 ) }
    dend_62 { pt3dadd( -64.5924, 62.0243, 27.0549, 0.22 ) }
    dend_62 { pt3dadd( -65.1054, 61.6741, 27.6778, 0.22 ) }
    dend_62 { pt3dadd( -65.5059, 61.3343, 28.1644, 0.22 ) }
    dend_62 { pt3dadd( -66.1731, 60.687, 28.9473, 0.15 ) }
    dend_62 { pt3dadd( -66.6365, 60.1943, 29.4735, 0.15 ) }
    dend_62 { pt3dadd( -66.9991, 59.7864, 29.8328, 0.29 ) }
    dend_62 { pt3dadd( -67.7488, 58.8959, 30.4566, 1.25 ) }
    dend_62 { pt3dadd( -68.8857, 57.5262, 31.3044, 0.07 ) }
    dend_62 { pt3dadd( -69.2664, 57.0548, 31.5751, 0.88 ) }
    dend_62 { pt3dadd( -69.4674, 56.7917, 31.7252, 1.18 ) }
    dend_62 { pt3dadd( -70.2646, 55.7787, 32.3006, 0.07 ) }
    dend_62 { pt3dadd( -70.6694, 55.2923, 32.5899, 0.74 ) }
    dend_62 { pt3dadd( -71.4183, 54.4557, 33.1952, 0.07 ) }
    dend_62 { pt3dadd( -71.735, 54.1046, 33.5232, 0.29 ) }
    dend_62 { pt3dadd( -72.1487, 53.6128, 34.1079, 0.07 ) }
    dend_62 { pt3dadd( -72.4498, 53.218, 34.7262, 1.03 ) }
    dend_62 { pt3dadd( -72.6231, 52.972, 35.2469, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_62 { pt3dadd( -72.9544, 52.4691, 36.5676, 0.22 ) }
    dend_62 { pt3dadd( -73.1562, 52.142, 37.6063, 0.22 ) }
    dend_62 { pt3dadd( -73.3573, 51.8599, 38.659, 0.22 ) }
    dend_62 { pt3dadd( -73.5514, 51.6669, 39.4722, 0.22 ) }
    dend_62 { pt3dadd( -73.6915, 51.5494, 39.9425, 0.22 ) }
    dend_62 { pt3dadd( -73.9476, 51.3321, 40.5172, 0.22 ) }
    dend_62 { pt3dadd( -74.1904, 51.1247, 40.9069, 0.22 ) }
    dend_62 { pt3dadd( -74.6385, 50.7654, 41.4422, 0.22 ) }
    dend_62 { pt3dadd( -75.2942, 50.1834, 42.1155, 1.03 ) }
    dend_62 { pt3dadd( -75.8957, 49.5803, 42.717, 1.47 ) }
    dend_62 { pt3dadd( -76.9674, 48.3706, 43.8285, 0.07 ) }
    dend_62 { pt3dadd( -77.2486, 48.0474, 44.1149, 1.25 ) }
    dend_62 { pt3dadd( -77.6651, 47.5817, 44.5211, 1.4 ) }
    dend_62 { pt3dadd( -78.5188, 46.6493, 45.2981, 0.29 ) }
    dend_62 { pt3dadd( -79.0853, 46.0692, 45.762, 0.15 ) }
    dend_62 { pt3dadd( -79.5831, 45.6143, 46.1095, 0.81 ) }
    dend_62 { pt3dadd( -80.6817, 44.6866, 46.7798, 0.15 ) }
    dend_62 { pt3dadd( -81.3285, 44.1877, 47.0964, 0.15 ) }
    dend_62 { pt3dadd( -81.8107, 43.8431, 47.3013, 0.37 ) }
    dend_62 { pt3dadd( -82.6249, 43.3063, 47.5262, 0.15 ) }
    dend_62 { pt3dadd( -83.0536, 43.0255, 47.5956, 0.88 ) }
    dend_62 { pt3dadd( -83.4751, 42.7458, 47.63, 1.55 ) }
    dend_62 { pt3dadd( -85.1303, 41.6574, 47.687, 0.22 ) }
    dend_62 { pt3dadd( -85.5605, 41.389, 47.7038, 0.22 ) }
    dend_62 { pt3dadd( -86.6054, 40.7978, 47.7685, 0.81 ) }
    dend_62 { pt3dadd( -87.9877, 40.0962, 47.8987, 0.07 ) }
    dend_62 { pt3dadd( -88.5319, 39.8614, 47.9832, 0.74 ) }
    dend_62 { pt3dadd( -89.3895, 39.5599, 48.1893, 0.22 ) }
    dend_62 { pt3dadd( -90.3515, 39.2874, 48.5324, 0.37 ) }
    dend_62 { pt3dadd( -91.0125, 39.1288, 48.8321, 0.22 ) }
    dend_62 { pt3dadd( -92.0715, 38.903, 49.4461, 1.03 ) }
    dend_62 { pt3dadd( -93.1851, 38.646, 50.2468, 0.07 ) }
    dend_62 { pt3dadd( -94.0147, 38.4201, 50.963, 0.88 ) }
    dend_62 { pt3dadd( -94.7009, 38.193, 51.6251, 1.25 ) }
    dend_62 { pt3dadd( -95.9274, 37.6707, 52.8241, 0.15 ) }
    dend_62 { pt3dadd( -96.5125, 37.3644, 53.3827, 0.74 ) }
    dend_62 { pt3dadd( -97.6074, 36.6799, 54.357, 0.22 ) }
    dend_62 { pt3dadd( -98.6334, 35.943, 55.1604, 1.11 ) }
    dend_62 { pt3dadd( -99.2578, 35.471, 55.5745, 2.06 ) }
    dend_62 { pt3dadd( -100.812, 34.2922, 56.4376, 0.15 ) }
    dend_62 { pt3dadd( -101.395, 33.8575, 56.713, 0.29 ) }
    dend_62 { pt3dadd( -102.691, 32.9563, 57.2381, 0.07 ) }
    dend_62 { pt3dadd( -103.323, 32.5769, 57.4616, 0.22 ) }
    dend_62 { pt3dadd( -104.528, 31.9695, 57.8925, 0.07 ) }
    dend_62 { pt3dadd( -105.205, 31.7113, 58.1793, 1.4 ) }
    dend_62 { pt3dadd( -106.786, 31.2784, 58.9608, 0.07 ) }
    dend_62 { pt3dadd( -107.568, 31.1058, 59.3719, 0.81 ) }
    dend_62 { pt3dadd( -108.889, 30.9055, 60.1363, 0.07 ) }
    dend_62 { pt3dadd( -109.709, 30.828, 60.652, 0.96 ) }
    dend_62 { pt3dadd( -111.242, 30.774, 61.6423, 0.07 ) }
    dend_62 { pt3dadd( -111.816, 30.7763, 62.0053, 0.07 ) }
    dend_62 { pt3dadd( -112.554, 30.7956, 62.457, 1.25 ) }
    dend_62 { pt3dadd( -114.223, 30.8327, 63.4112, 0.22 ) }
    dend_62 { pt3dadd( -115.356, 30.8302, 64.0011, 0.88 ) }
    dend_62 { pt3dadd( -116.092, 30.8367, 64.3229, 1.18 ) }
    dend_62 { pt3dadd( -118.209, 30.8683, 65.0821, 0.15 ) }
    dend_62 { pt3dadd( -118.86, 30.8718, 65.2736, 0.81 ) }
    dend_62 { pt3dadd( -119.876, 30.8588, 65.5028, 0.15 ) }
    dend_62 { pt3dadd( -120.829, 30.8227, 65.6319, 1.18 ) }
    dend_62 { pt3dadd( -122.336, 30.7952, 65.7429, 0.07 ) }
    dend_62 { pt3dadd( -122.98, 30.8106, 65.7607, 0.07 ) }
    dend_62 { pt3dadd( -123.862, 30.9264, 65.6895, 0.07 ) }
    dend_62 { pt3dadd( -124.316, 31.0182, 65.6229, 0.88 ) }
    dend_62 { pt3dadd( -124.985, 31.1801, 65.5034, 1.33 ) }
    dend_62 { pt3dadd( -126.794, 31.7199, 65.1061, 0.07 ) }
    dend_62 { pt3dadd( -127.631, 32.0107, 64.8825, 1.33 ) }
    dend_62 { pt3dadd( -129.651, 32.8496, 64.2716, 0.07 ) }
    dend_62 { pt3dadd( -129.988, 33.0121, 64.1557, 0.15 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 68/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -59.7542, 64.3702, 21.9768, 0.15 ) }
    dend_61 { pt3dadd( -59.3242, 62.6773, 22.2118, 0.15 ) }
    dend_61 { pt3dadd( -59.1234, 61.9669, 22.2628, 0.29 ) }
    dend_61 { pt3dadd( -58.8003, 60.8999, 22.3217, 0.15 ) }
    dend_61 { pt3dadd( -58.6626, 60.4861, 22.3358, 0.52 ) }
    dend_61 { pt3dadd( -58.3725, 59.6539, 22.3593, 1.33 ) }
    dend_61 { pt3dadd( -57.8372, 58.0476, 22.4162, 0.07 ) }
    dend_61 { pt3dadd( -57.5609, 57.1796, 22.4117, 0.07 ) }
    dend_61 { pt3dadd( -57.3412, 56.4408, 22.4364, 0.37 ) }
    dend_61 { pt3dadd( -56.9873, 55.22, 22.6323, 0.07 ) }
    dend_61 { pt3dadd( -56.8873, 54.8569, 22.7401, 0.15 ) }
    dend_61 { pt3dadd( -56.4974, 53.2305, 23.429, 0.15 ) }
    dend_61 { pt3dadd( -56.4155, 52.8536, 23.6419, 0.74 ) }
    dend_61 { pt3dadd( -56.2693, 52.0225, 24.1768, 1.25 ) }
    dend_61 { pt3dadd( -56.0264, 50.0041, 25.6045, 0.15 ) }
    dend_61 { pt3dadd( -55.9421, 48.8209, 26.5037, 0.15 ) }
    dend_61 { pt3dadd( -55.915, 48.289, 26.9142, 0.15 ) }
    dend_61 { pt3dadd( -55.8964, 47.6235, 27.4123, 0.15 ) }
    dend_61 { pt3dadd( -55.8913, 46.7559, 27.9932, 1.25 ) }
    dend_61 { pt3dadd( -55.9454, 45.2067, 28.8506, 0.07 ) }
    dend_61 { pt3dadd( -55.9977, 44.5522, 29.137, 0.96 ) }
    dend_61 { pt3dadd( -56.0531, 43.9651, 29.3452, 1.25 ) }
    dend_61 { pt3dadd( -56.2309, 41.9756, 29.9723, 0.15 ) }
    dend_61 { pt3dadd( -56.293, 41.1431, 30.1978, 0.96 ) }
    dend_61 { pt3dadd( -56.367, 39.538, 30.5735, 0.07 ) }
    dend_61 { pt3dadd( -56.3809, 38.7616, 30.7249, 0.29 ) }
    dend_61 { pt3dadd( -56.3873, 36.462, 31.0977, 0.07 ) }
    dend_61 { pt3dadd( -56.3828, 35.9498, 31.1689, 0.29 ) }
    dend_61 { pt3dadd( -56.3391, 34.3402, 31.3544, 0.07 ) }
    dend_61 { pt3dadd( -56.2936, 33.5991, 31.4364, 1.03 ) }
    dend_61 { pt3dadd( -56.2225, 32.8791, 31.5234, 1.47 ) }
    dend_61 { pt3dadd( -55.88, 30.3084, 31.8892, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_61 { pt3dadd( -55.7768, 29.7167, 31.993, 0.59 ) }
    dend_61 { pt3dadd( -55.6219, 28.8943, 32.1609, 0.07 ) }
    dend_61 { pt3dadd( -55.4851, 28.1244, 32.3551, 0.07 ) }
    dend_61 { pt3dadd( -55.3137, 27.0934, 32.6542, 0.07 ) }
    dend_61 { pt3dadd( -55.1976, 26.1824, 32.9522, 1.18 ) }
    dend_61 { pt3dadd( -54.9737, 23.8384, 33.7953, 0.07 ) }
    dend_61 { pt3dadd( -54.9461, 23.1628, 34.0345, 0.74 ) }
    dend_61 { pt3dadd( -54.9605, 21.3641, 34.6525, 0.07 ) }
    dend_61 { pt3dadd( -54.9909, 20.8507, 34.8183, 0.44 ) }
    dend_61 { pt3dadd( -55.1798, 19.1055, 35.3784, 0.07 ) }
    dend_61 { pt3dadd( -55.3219, 18.2162, 35.6659, 1.47 ) }
    dend_61 { pt3dadd( -55.7, 16.3952, 36.2517, 0.07 ) }
    dend_61 { pt3dadd( -55.832, 15.8309, 36.4217, 0.37 ) }
    dend_61 { pt3dadd( -56.1227, 14.6994, 36.7286, 0.07 ) }
    dend_61 { pt3dadd( -56.5453, 13.1968, 37.1547, 0.07 ) }
    dend_61 { pt3dadd( -56.8328, 12.2302, 37.4358, 0.07 ) }
    dend_61 { pt3dadd( -56.9766, 11.7293, 37.5977, 0.37 ) }
    dend_61 { pt3dadd( -57.3058, 10.4996, 38.035, 0.15 ) }
    dend_61 { pt3dadd( -57.5053, 9.74312, 38.3381, 0.81 ) }
    dend_61 { pt3dadd( -57.8336, 8.44631, 38.9145, 0.15 ) }
    dend_61 { pt3dadd( -58.0857, 7.39339, 39.4327, 1.55 ) }
    dend_61 { pt3dadd( -58.4915, 5.69135, 40.3615, 0.07 ) }
    dend_61 { pt3dadd( -58.6135, 5.19192, 40.6741, 0.66 ) }
    dend_61 { pt3dadd( -58.9096, 3.86296, 41.6388, 0.07 ) }
    dend_61 { pt3dadd( -58.9753, 3.40096, 42.0116, 0.29 ) }
    dend_61 { pt3dadd( -59.0122, 2.72504, 42.606, 0.07 ) }
    dend_61 { pt3dadd( -59.031, 2.31284, 43.0015, 0.74 ) }
    dend_61 { pt3dadd( -59.0609, 1.27212, 44.0696, 0.15 ) }
    dend_61 { pt3dadd( -59.0286, 0.377764, 45.0116, 1.18 ) }
    dend_61 { pt3dadd( -58.7381, -1.37104, 46.9129, 0.15 ) }
    dend_61 { pt3dadd( -58.6016, -1.95539, 47.5528, 0.66 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 31/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -79.7088, 95.7544, 98.3144, 0.07 ) }
    dend_59 { pt3dadd( -80.6716, 94.9615, 97.3347, 0.07 ) }
    dend_59 { pt3dadd( -81.0143, 94.5976, 96.9699, 0.07 ) }
    dend_59 { pt3dadd( -81.3634, 94.2269, 96.5982, 0.22 ) }
    dend_59 { pt3dadd( -82.0225, 93.5272, 95.8965, 0.07 ) }
    dend_59 { pt3dadd( -82.2906, 93.2425, 95.6111, 0.52 ) }
    dend_59 { pt3dadd( -82.7422, 92.7629, 95.1302, 0.07 ) }
    dend_59 { pt3dadd( -82.9223, 92.474, 94.946, 0.22 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 39/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -79.7088, 95.7544, 98.3144, 0.29 ) }
    dend_58 { pt3dadd( -80.6735, 95.8541, 99.6725, 0.29 ) }
    dend_58 { pt3dadd( -81.4127, 95.8229, 100.636, 0.29 ) }
    dend_58 { pt3dadd( -82.3116, 95.7303, 101.664, 0.59 ) }
    dend_58 { pt3dadd( -83.559, 95.6105, 102.988, 0.74 ) }
    dend_58 { pt3dadd( -84.1763, 95.577, 103.608, 1.03 ) }
    dend_58 { pt3dadd( -84.9132, 95.6041, 104.326, 1.03 ) }
    dend_58 { pt3dadd( -85.8723, 95.7088, 105.221, 0.15 ) }
    dend_58 { pt3dadd( -86.6139, 95.9069, 105.888, 0.44 ) }
    dend_58 { pt3dadd( -87.5516, 96.2471, 106.696, 0.81 ) }
    dend_58 { pt3dadd( -88.1657, 96.5651, 107.186, 1.03 ) }
    dend_58 { pt3dadd( -89.2649, 97.2892, 108.068, 0.15 ) }
    dend_58 { pt3dadd( -90.2072, 98.0749, 108.853, 0.74 ) }
    dend_58 { pt3dadd( -91.0808, 99.0403, 109.695, 0.37 ) }
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 53/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 7.27063, 11.337, 16.6124, 0.22 ) }
    dend_55 { pt3dadd( 7.42196, 9.49638, 14.743, 0.22 ) }
    dend_55 { pt3dadd( 7.5298, 8.66898, 14.0426, 0.37 ) }
    dend_55 { pt3dadd( 7.62535, 8.16566, 13.6554, 0.59 ) }
    dend_55 { pt3dadd( 7.80199, 7.23514, 12.9395, 0.22 ) }
    dend_55 { pt3dadd( 7.99446, 6.22129, 12.1596, 1.47 ) }
    dend_55 { pt3dadd( 8.19065, 5.18782, 11.3645, 0.29 ) }
    dend_55 { pt3dadd( 8.44101, 4.18575, 10.84, 0.15 ) }
    dend_55 { pt3dadd( 8.71387, 3.24428, 10.4249, 1.03 ) }
    dend_55 { pt3dadd( 9.24686, -4.52343, 4.17229, 1.03 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 63/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 7.27063, 11.337, 16.6124, 0.22 ) }
    dend_52 { pt3dadd( 7.73263, 10.4193, 17.1448, 0.22 ) }
    dend_52 { pt3dadd( 8.11154, 9.5212, 17.57, 1.4 ) }
    dend_52 { pt3dadd( 8.57765, 7.99278, 18.1304, 2.65 ) }
    dend_52 { pt3dadd( 9.43173, 4.04275, 19.3262, 0.22 ) }
    dend_52 { pt3dadd( 9.55786, 3.23971, 19.5268, 0.22 ) }
    dend_52 { pt3dadd( 9.69781, 1.988, 19.7876, 0.96 ) }
    dend_52 { pt3dadd( 9.7365, 0.438401, 20.0044, 2.06 ) }
    dend_52 { pt3dadd( 9.60398, -2.07288, 20.1832, 0.22 ) }
    dend_52 { pt3dadd( 9.39871, -3.50242, 20.132, 0.15 ) }
    dend_52 { pt3dadd( 9.17324, -4.60637, 19.9582, 0.29 ) }
    dend_52 { pt3dadd( 8.90561, -5.74137, 19.7563, 0.15 ) }
    dend_52 { pt3dadd( 8.6558, -6.93851, 19.5185, 1.18 ) }
    dend_52 { pt3dadd( 8.53577, -7.64984, 19.3649, 1.7 ) }
    dend_52 { pt3dadd( 8.14907, -10.7484, 18.6686, 0.22 ) }
    dend_52 { pt3dadd( 8.04922, -12.0022, 18.3956, 0.81 ) }
    dend_52 { pt3dadd( 8.02017, -12.8218, 18.2365, 1.4 ) }
    dend_52 { pt3dadd( 8.04622, -15.6238, 17.7671, 0.15 ) }
    dend_52 { pt3dadd( 8.11329, -16.3529, 17.6806, 0.15 ) }
    dend_52 { pt3dadd( 8.38896, -17.8087, 17.5795, 0.15 ) }
    dend_52 { pt3dadd( 8.63993, -18.751, 17.5637, 0.37 ) }
    dend_52 { pt3dadd( 8.87636, -19.6898, 17.5632, 1.33 ) }
    dend_52 { pt3dadd( 9.09859, -20.7982, 17.5649, 1.84 ) }
    dend_52 { pt3dadd( 9.38966, -24.3808, 17.5777, 0.22 ) }
    dend_52 { pt3dadd( 9.35256, -26.3196, 17.5558, 0.07 ) }
    dend_52 { pt3dadd( 9.31616, -27.1401, 17.5442, 0.96 ) }
    dend_52 { pt3dadd( 9.14124, -28.891, 17.5153, 0.22 ) }
    dend_52 { pt3dadd( 8.88879, -30.236, 17.4729, 1.33 ) }
    dend_52 { pt3dadd( 8.09074, -32.5542, 17.3479, 0.22 ) }
    dend_52 { pt3dadd( 7.25097, -33.73, 17.232, 1.18 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 93/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -7.58976, 48.2811, 52.6554, 0.44 ) }
    dend_44 { pt3dadd( -9.15346, 47.9765, 53.1965, 0.44 ) }
    dend_44 { pt3dadd( -10.3896, 47.8917, 53.4889, 0.44 ) }
    dend_44 { pt3dadd( -11.6355, 47.9191, 53.7696, 0.44 ) }
    dend_44 { pt3dadd( -12.1847, 47.9521, 53.9049, 0.44 ) }
    dend_44 { pt3dadd( -13.0684, 48.012, 54.1218, 0.96 ) }
    dend_44 { pt3dadd( -13.6246, 48.0482, 54.2514, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_44 { pt3dadd( -15.1056, 48.1272, 54.4744, 0.15 ) }
    dend_44 { pt3dadd( -15.8412, 48.2039, 54.6104, 0.15 ) }
    dend_44 { pt3dadd( -16.5275, 48.2804, 54.7927, 0.15 ) }
    dend_44 { pt3dadd( -17.5613, 48.3421, 55.1192, 0.15 ) }
    dend_44 { pt3dadd( -18.1367, 48.3087, 55.3076, 1.33 ) }
    dend_44 { pt3dadd( -19.3193, 48.1163, 55.6774, 1.92 ) }
    dend_44 { pt3dadd( -21.3871, 47.5841, 56.2797, 0.22 ) }
    dend_44 { pt3dadd( -22.716, 47.1357, 56.6116, 0.59 ) }
    dend_44 { pt3dadd( -23.4099, 46.8245, 56.7948, 1.03 ) }
    dend_44 { pt3dadd( -25.0304, 45.902, 57.2907, 0.15 ) }
    dend_44 { pt3dadd( -25.9134, 45.2825, 57.6111, 0.15 ) }
    dend_44 { pt3dadd( -26.3151, 44.9264, 57.7751, 0.88 ) }
    dend_44 { pt3dadd( -27.0637, 44.0653, 58.0949, 1.92 ) }
    dend_44 { pt3dadd( -28.5548, 42.0519, 58.7885, 0.22 ) }
    dend_44 { pt3dadd( -28.9417, 41.5102, 58.9968, 0.22 ) }
    dend_44 { pt3dadd( -29.3878, 40.7968, 59.2471, 0.22 ) }
    dend_44 { pt3dadd( -29.6425, 40.3907, 59.3825, 0.22 ) }
    dend_44 { pt3dadd( -30.3071, 39.428, 59.6792, 0.22 ) }
    dend_44 { pt3dadd( -30.867, 38.7143, 59.8771, 1.11 ) }
    dend_44 { pt3dadd( -31.8074, 37.6958, 60.0966, 2.58 ) }
    dend_44 { pt3dadd( -33.5782, 35.9738, 60.4338, 0.52 ) }
    dend_44 { pt3dadd( -34.9655, 34.6727, 60.719, 0.15 ) }
    dend_44 { pt3dadd( -35.5521, 34.1338, 60.8646, 0.15 ) }
    dend_44 { pt3dadd( -36.383, 33.4089, 61.112, 0.29 ) }
    dend_44 { pt3dadd( -37.1728, 32.7562, 61.3712, 0.96 ) }
    dend_44 { pt3dadd( -38.4367, 31.7176, 61.8124, 0.22 ) }
    dend_44 { pt3dadd( -39.2865, 31.0806, 62.1412, 0.22 ) }
    dend_44 { pt3dadd( -40.0479, 30.4527, 62.4334, 0.44 ) }
    dend_44 { pt3dadd( -40.8425, 29.7288, 62.7817, 1.62 ) }
    dend_44 { pt3dadd( -41.5854, 29.0188, 63.1561, 1.99 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -7.58976, 48.2811, 52.6554, 1.47 ) }
    dend_41 { pt3dadd( -6.70173, 48.5356, 53.794, 1.47 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 32/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -23.9488, -170.047, 41.1288, 0.22 ) }
    dend_23 { pt3dadd( -24.2137, -169.217, 41.5496, 0.22 ) }
    dend_23 { pt3dadd( -24.4934, -168.268, 41.9991, 0.22 ) }
    dend_23 { pt3dadd( -24.6769, -167.512, 42.3357, 0.22 ) }
    dend_23 { pt3dadd( -24.8443, -166.657, 42.692, 0.66 ) }
    dend_23 { pt3dadd( -24.9549, -166.012, 42.9655, 0.81 ) }
    dend_23 { pt3dadd( -25.1035, -164.794, 43.4849, 0.15 ) }
    dend_23 { pt3dadd( -25.1323, -164.057, 43.7747, 1.18 ) }
    dend_23 { pt3dadd( -25.1236, -163.331, 44.0448, 1.4 ) }
    dend_23 { pt3dadd( -25.0317, -161.739, 44.6257, 0.15 ) }
    dend_23 { pt3dadd( -24.9671, -161.187, 44.831, 0.15 ) }
    dend_23 { pt3dadd( -24.7666, -160.097, 45.2714, 1.7 ) }
    dend_23 { pt3dadd( -24.4946, -159.115, 45.6851, 0.22 ) }
    dend_23 { pt3dadd( -24.2391, -158.362, 46.0063, 0.88 ) }
    dend_23 { pt3dadd( -24.0132, -157.766, 46.2614, 0.22 ) }
    dend_23 { pt3dadd( -23.7527, -157.14, 46.5177, 0.07 ) }
    dend_23 { pt3dadd( -23.4562, -156.37, 46.8043, 0.07 ) }
    dend_23 { pt3dadd( -23.0882, -155.3, 47.1836, 0.66 ) }
    dend_23 { pt3dadd( -22.7526, -154.181, 47.554, 0.07 ) }
    dend_23 { pt3dadd( -22.6463, -153.751, 47.6893, 0.37 ) }
    dend_23 { pt3dadd( -22.534, -153.181, 47.8541, 0.66 ) }
    dend_23 { pt3dadd( -22.2838, -151.385, 48.3467, 0.07 ) }
    dend_23 { pt3dadd( -22.2109, -150.606, 48.5577, 1.03 ) }
    dend_23 { pt3dadd( -22.1558, -149.162, 48.9432, 0.15 ) }
    dend_23 { pt3dadd( -22.1655, -148.525, 49.1134, 0.88 ) }
    dend_23 { pt3dadd( -22.1958, -147.981, 49.2562, 1.18 ) }
    dend_23 { pt3dadd( -22.3981, -146.229, 49.6998, 0.15 ) }
    dend_23 { pt3dadd( -22.52, -145.659, 49.8254, 0.15 ) }
    dend_23 { pt3dadd( -22.7181, -145.038, 49.9272, 0.22 ) }
    dend_23 { pt3dadd( -22.9319, -144.587, 49.9581, 0.07 ) }
    dend_23 { pt3dadd( -23.2374, -144.06, 49.9348, 0.29 ) }
    dend_23 { pt3dadd( -23.5591, -143.579, 49.8652, 0.07 ) }
    dend_23 { pt3dadd( -23.8399, -143.192, 49.7646, 0.59 ) }
    dend_23 { pt3dadd( -24.3079, -142.57, 49.5655, 0.15 ) }
    dend_23 { pt3dadd( -24.9185, -141.771, 49.2818, 1.62 ) }
    dend_23 { pt3dadd( -25.5329, -140.963, 48.9868, 0.15 ) }
    dend_23 { pt3dadd( -25.9706, -140.395, 48.7844, 0.29 ) }
    dend_23 { pt3dadd( -26.6777, -139.469, 48.4644, 0.07 ) }
    dend_23 { pt3dadd( -27.2199, -138.709, 48.2587, 0.07 ) }
    dend_23 { pt3dadd( -27.5123, -138.271, 48.1697, 0.66 ) }
    dend_23 { pt3dadd( -28.0234, -137.483, 48.0374, 0.15 ) }
    dend_23 { pt3dadd( -28.4128, -136.884, 47.9532, 1.03 ) }
    dend_23 { pt3dadd( -28.8857, -136.191, 47.8779, 1.62 ) }
    dend_23 { pt3dadd( -30.2674, -134.27, 47.7879, 0.07 ) }
    dend_23 { pt3dadd( -30.8912, -133.411, 47.785, 0.59 ) }
    dend_23 { pt3dadd( -31.3461, -132.8, 47.7986, 0.15 ) }
    dend_23 { pt3dadd( -31.9316, -132.014, 47.8312, 0.88 ) }
    dend_23 { pt3dadd( -32.7565, -130.855, 47.9166, 0.15 ) }
    dend_23 { pt3dadd( -33.5263, -129.802, 48.021, 0.15 ) }
    dend_23 { pt3dadd( -34.1546, -128.975, 48.1274, 1.33 ) }
    dend_23 { pt3dadd( -34.9432, -127.922, 48.2933, 0.15 ) }
    dend_23 { pt3dadd( -35.5565, -127.041, 48.4639, 0.15 ) }
    dend_23 { pt3dadd( -36.0173, -126.265, 48.6297, 1.33 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 85/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -23.9488, -170.047, 41.1288, 0.15 ) }
    dend_22 { pt3dadd( -24.4277, -171.847, 41.1316, 0.15 ) }
    dend_22 { pt3dadd( -24.9505, -172.908, 41.1549, 0.15 ) }
    dend_22 { pt3dadd( -25.4737, -173.646, 41.1947, 0.15 ) }
    dend_22 { pt3dadd( -25.969, -174.237, 41.2134, 0.74 ) }
    dend_22 { pt3dadd( -26.7905, -175.171, 41.2278, 0.15 ) }
    dend_22 { pt3dadd( -27.4163, -175.903, 41.2473, 1.4 ) }
    dend_22 { pt3dadd( -28.5584, -177.07, 41.363, 0.15 ) }
    dend_22 { pt3dadd( -29.6784, -178.174, 41.507, 0.66 ) }
    dend_22 { pt3dadd( -30.6026, -179.107, 41.7689, 0.07 ) }
    dend_22 { pt3dadd( -31.0528, -179.55, 41.998, 0.07 ) }
    dend_22 { pt3dadd( -31.6005, -180.111, 42.3314, 0.29 ) }
    dend_22 { pt3dadd( -32.495, -181.061, 42.9967, 0.07 ) }
    dend_22 { pt3dadd( -33.1512, -181.82, 43.635, 1.25 ) }
    dend_22 { pt3dadd( -34.3315, -183.237, 45.0585, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_22 { pt3dadd( -35.63, -184.71, 46.8288, 1.62 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 1/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -72.9762, -130.514, -1.10818, 0.59 ) }
    dend_18 { pt3dadd( -74.0669, -130.348, -2.13461, 0.59 ) }
    dend_18 { pt3dadd( -74.3897, -130.281, -2.482, 0.07 ) }
    dend_18 { pt3dadd( -74.8061, -130.187, -3.01653, 0.07 ) }
    dend_18 { pt3dadd( -75.0815, -130.12, -3.4117, 0.37 ) }
    dend_18 { pt3dadd( -75.5243, -129.994, -4.11624, 0.07 ) }
    dend_18 { pt3dadd( -75.8416, -129.884, -4.70229, 0.15 ) }
    dend_18 { pt3dadd( -76.2194, -129.746, -5.61055, 1.62 ) }
    dend_18 { pt3dadd( -76.5101, -129.525, -6.89715, 0.22 ) }
    dend_18 { pt3dadd( -76.5349, -129.423, -7.49617, 0.22 ) }
    dend_18 { pt3dadd( -76.5089, -129.336, -8.02184, 0.59 ) }
    dend_18 { pt3dadd( -76.3764, -129.21, -8.78029, 0.59 ) }
    dend_18 { pt3dadd( -76.1304, -129.095, -9.56097, 0.59 ) }
    dend_18 { pt3dadd( -75.6061, -128.998, -10.5016, 1.18 ) }
    dend_18 { pt3dadd( -75.2179, -128.964, -10.9416, 1.18 ) }
    dend_18 { pt3dadd( -76.5705, -127.629, -18.8069, 1.18 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 17/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -72.9762, -130.514, -1.10818, 0.22 ) }
    dend_17 { pt3dadd( -74.2311, -131.328, -1.64448, 0.22 ) }
    dend_17 { pt3dadd( -74.9257, -131.763, -1.95471, 0.15 ) }
    dend_17 { pt3dadd( -75.9417, -132.32, -2.48109, 0.15 ) }
    dend_17 { pt3dadd( -76.8283, -132.769, -2.99343, 1.25 ) }
    dend_17 { pt3dadd( -77.8479, -133.243, -3.58472, 0.15 ) }
    dend_17 { pt3dadd( -78.7249, -133.616, -4.07267, 0.15 ) }
    dend_17 { pt3dadd( -79.9437, -134.066, -4.74343, 1.62 ) }
    dend_17 { pt3dadd( -81.3044, -134.535, -5.43547, 0.22 ) }
    dend_17 { pt3dadd( -82.1403, -134.843, -5.84927, 0.22 ) }
    dend_17 { pt3dadd( -83.1228, -135.217, -6.33799, 1.33 ) }
    dend_17 { pt3dadd( -84.0926, -135.578, -6.80152, 1.11 ) }
    dend_17 { pt3dadd( -85.7372, -136.163, -7.53135, 0.15 ) }
    dend_17 { pt3dadd( -86.3203, -136.378, -7.75671, 0.15 ) }
    dend_17 { pt3dadd( -87.6433, -136.918, -8.15261, 0.15 ) }
    dend_17 { pt3dadd( -88.4094, -137.245, -8.3103, 0.15 ) }
    dend_17 { pt3dadd( -89.1988, -137.595, -8.36159, 0.66 ) }
    dend_17 { pt3dadd( -90.3391, -138.026, -8.15374, 0.07 ) }
    dend_17 { pt3dadd( -91.0474, -138.205, -7.81145, 0.88 ) }
    dend_17 { pt3dadd( -92.0169, -138.295, -7.15161, 0.15 ) }
    dend_17 { pt3dadd( -93.0063, -138.238, -6.36741, 0.59 ) }
    dend_17 { pt3dadd( -94.2271, -137.99, -5.26934, 1.4 ) }
    dend_17 { pt3dadd( -95.8246, -137.401, -3.78131, 0.22 ) }
    dend_17 { pt3dadd( -96.9479, -136.792, -2.69604, 1.25 ) }
    dend_17 { pt3dadd( -98.281, -135.858, -1.36547, 0.44 ) }
    dend_17 { pt3dadd( -98.9829, -135.243, -0.668346, 0.52 ) }
    dend_17 { pt3dadd( -99.7702, -134.4, 0.144829, 1.11 ) }
    dend_17 { pt3dadd( -100.617, -133.315, 1.10152, 0.37 ) }
    dend_17 { pt3dadd( -101.535, -131.997, 2.27707, 0.07 ) }
    dend_17 { pt3dadd( -102.036, -131.274, 2.97614, 0.07 ) }
    dend_17 { pt3dadd( -102.372, -130.767, 3.52602, 0.22 ) }
    dend_17 { pt3dadd( -102.803, -130.086, 4.3722, 0.96 ) }
    dend_17 { pt3dadd( -103.171, -129.461, 5.22861, 2.06 ) }
    dend_17 { pt3dadd( -103.82, -128.13, 7.28685, 0.22 ) }
    dend_17 { pt3dadd( -104.177, -127.273, 8.81789, 0.74 ) }
    dend_17 { pt3dadd( -104.384, -126.785, 9.91434, 0.74 ) }
    dend_17 { pt3dadd( -104.561, -126.394, 11.1283, 0.74 ) }
    dend_17 { pt3dadd( -104.608, -126.289, 11.6695, 0.74 ) }
    dend_17 { pt3dadd( -104.624, -126.174, 12.9762, 0.74 ) }
    dend_17 { pt3dadd( -104.477, -126.15, 14.3475, 0.74 ) }
    dend_17 { pt3dadd( -104.361, -126.135, 15.1584, 0.74 ) }
    dend_17 { pt3dadd( -104.296, -126.072, 15.6203, 0.74 ) }
    dend_17 { pt3dadd( -104.124, -125.693, 16.6737, 0.74 ) }
    dend_17 { pt3dadd( -103.888, -125.153, 17.5187, 0.74 ) }
    dend_17 { pt3dadd( -103.403, -124.06, 18.8047, 0.29 ) }
    dend_17 { pt3dadd( -103.123, -123.416, 19.4424, 0.29 ) }
    dend_17 { pt3dadd( -102.701, -122.498, 20.2631, 0.07 ) }
    dend_17 { pt3dadd( -102.416, -121.932, 20.7403, 0.44 ) }
    dend_17 { pt3dadd( -101.65, -120.522, 21.8528, 0.07 ) }
    dend_17 { pt3dadd( -101.188, -119.761, 22.4488, 0.07 ) }
    dend_17 { pt3dadd( -100.717, -119.035, 23.0287, 0.07 ) }
    dend_17 { pt3dadd( -100.43, -118.625, 23.3732, 0.29 ) }
    dend_17 { pt3dadd( -99.8899, -117.877, 23.9896, 0.07 ) }
    dend_17 { pt3dadd( -99.452, -117.258, 24.5412, 0.37 ) }
    dend_17 { pt3dadd( -98.9518, -116.601, 25.1915, 0.22 ) }
    dend_17 { pt3dadd( -98.7462, -116.368, 25.4857, 0.81 ) }
    dend_17 { pt3dadd( -98.3835, -115.998, 26.1413, 0.37 ) }
    dend_17 { pt3dadd( -97.9258, -115.567, 27.3195, 0.88 ) }
    dend_17 { pt3dadd( -97.4591, -115.135, 28.7819, 0.88 ) }
    dend_17 { pt3dadd( -97.3028, -114.993, 29.3992, 0.88 ) }
    dend_17 { pt3dadd( -97.0683, -114.778, 30.6327, 0.88 ) }
    dend_17 { pt3dadd( -96.8873, -114.653, 31.7344, 0.88 ) }
    dend_17 { pt3dadd( -96.6537, -114.625, 33.3864, 0.88 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 80/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 7.25097, -33.73, 17.232, 0.29 ) }
    dend_54 { pt3dadd( 7.27088, -35.7625, 17.9505, 0.29 ) }
    dend_54 { pt3dadd( 7.30813, -36.7823, 18.3095, 0.15 ) }
    dend_54 { pt3dadd( 7.36927, -37.7675, 18.6483, 1.03 ) }
    dend_54 { pt3dadd( 7.50387, -39.6171, 19.265, 0.15 ) }
    dend_54 { pt3dadd( 7.59467, -40.8645, 19.6809, 1.4 ) }
    dend_54 { pt3dadd( 7.80141, -43.7053, 20.628, 0.07 ) }
    dend_54 { pt3dadd( 7.82874, -44.1352, 20.7724, 0.81 ) }
    dend_54 { pt3dadd( 7.95641, -45.6083, 21.2329, 0.07 ) }
    dend_54 { pt3dadd( 8.09143, -46.6632, 21.5576, 1.62 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 90/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 7.25097, -33.73, 17.232, 1.92 ) }
    dend_53 { pt3dadd( 7.01213, -34.153, 17.6351, 1.92 ) }
    dend_53 { pt3dadd( 6.75751, -34.5758, 18.0443, 2.06 ) }
    dend_53 { pt3dadd( 6.13227, -35.4825, 18.9605, 0.22 ) }
    dend_53 { pt3dadd( 5.92201, -35.7685, 19.2648, 0.66 ) }
    dend_53 { pt3dadd( 5.59667, -36.1289, 19.6714, 0.22 ) }
    dend_53 { pt3dadd( 5.341, -36.3658, 19.9445, 0.96 ) }
    dend_53 { pt3dadd( 5.18122, -36.5, 20.1072, 1.47 ) }
    dend_53 { pt3dadd( 4.49687, -36.9914, 20.739, 0.52 ) }
    dend_53 { pt3dadd( 4.07168, -37.215, 21.0726, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_53 { pt3dadd( 3.17943, -37.6516, 21.7094, 0.15 ) }
    dend_53 { pt3dadd( 2.67837, -37.9036, 22.0504, 0.37 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 2/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -41.5854, 29.0188, 63.1561, 0.07 ) }
    dend_48 { pt3dadd( -43.4565, 29.1703, 63.0453, 0.07 ) }
    dend_48 { pt3dadd( -44.3252, 29.2407, 62.9939, 0.96 ) }
    dend_48 { pt3dadd( -45.4906, 29.3351, 62.9249, 0.07 ) }
    dend_48 { pt3dadd( -46.106, 29.3849, 62.8885, 0.29 ) }
    dend_48 { pt3dadd( -47.1285, 29.4678, 62.828, 0.07 ) }
    dend_48 { pt3dadd( -48.2379, 29.5576, 62.7623, 0.07 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 9/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -41.5854, 29.0188, 63.1561, 0.44 ) }
    dend_45 { pt3dadd( -41.7902, 27.958, 64.0366, 0.44 ) }
    dend_45 { pt3dadd( -41.8911, 27.1061, 64.8693, 0.96 ) }
    dend_45 { pt3dadd( -41.9368, 26.5159, 65.5186, 0.66 ) }
    dend_45 { pt3dadd( -41.9815, 25.9021, 66.2063, 0.15 ) }
    dend_45 { pt3dadd( -42.0375, 25.5513, 66.5465, 0.15 ) }
    dend_45 { pt3dadd( -42.1375, 25.0142, 67.024, 0.29 ) }
    dend_45 { pt3dadd( -42.2795, 24.2368, 67.6697, 0.29 ) }
    dend_45 { pt3dadd( -42.3802, 23.7327, 68.025, 0.74 ) }
    dend_45 { pt3dadd( -42.4842, 23.0504, 68.4542, 1.62 ) }
    dend_45 { pt3dadd( -42.6483, 21.3313, 69.4427, 0.22 ) }
    dend_45 { pt3dadd( -42.7058, 20.6516, 69.7966, 1.18 ) }
    dend_45 { pt3dadd( -42.7456, 20.2717, 69.9722, 1.55 ) }
    dend_45 { pt3dadd( -42.8464, 19.2456, 70.4042, 0.29 ) }
    dend_45 { pt3dadd( -42.9116, 18.3318, 70.7984, 0.22 ) }
    dend_45 { pt3dadd( -42.9254, 17.3315, 71.2919, 0.22 ) }
    dend_45 { pt3dadd( -42.8712, 16.66, 71.7016, 0.22 ) }
    dend_45 { pt3dadd( -42.8389, 16.0561, 72.1139, 0.52 ) }
    dend_45 { pt3dadd( -42.8238, 15.8278, 72.3048, 0.52 ) }
    dend_45 { pt3dadd( -42.7917, 15.3953, 72.7556, 0.52 ) }
    dend_45 { pt3dadd( -42.7696, 15.0922, 73.0799, 0.52 ) }
    dend_45 { pt3dadd( -42.72, 14.7205, 73.4387, 0.52 ) }
    dend_45 { pt3dadd( -42.61, 14.0925, 74.0091, 0.15 ) }
    dend_45 { pt3dadd( -42.5227, 13.687, 74.3603, 0.15 ) }
    dend_45 { pt3dadd( -42.4506, 13.3743, 74.6155, 0.44 ) }
    dend_45 { pt3dadd( -42.3222, 12.8525, 75.0249, 1.11 ) }
    dend_45 { pt3dadd( -42.047, 11.8721, 75.7161, 0.15 ) }
    dend_45 { pt3dadd( -41.9326, 11.4786, 75.9649, 0.15 ) }
    dend_45 { pt3dadd( -41.6949, 10.6363, 76.4699, 0.22 ) }
    dend_45 { pt3dadd( -41.4956, 9.96732, 76.8585, 1.25 ) }
    dend_45 { pt3dadd( -41.2769, 9.34756, 77.2431, 1.99 ) }
    dend_45 { pt3dadd( -40.6899, 8.01611, 78.15, 0.15 ) }
    dend_45 { pt3dadd( -40.397, 7.49416, 78.5135, 1.03 ) }
    dend_45 { pt3dadd( -40.0541, 6.99536, 78.8832, 1.03 ) }
    dend_45 { pt3dadd( -39.2653, 6.20764, 79.5655, 0.15 ) }
    dend_45 { pt3dadd( -38.6279, 5.76392, 80.0293, 0.15 ) }
    dend_45 { pt3dadd( -38.0165, 5.46798, 80.4037, 0.15 ) }
    dend_45 { pt3dadd( -37.272, 5.23604, 80.7881, 0.81 ) }
    dend_45 { pt3dadd( -36.4973, 5.0113, 81.1344, 1.33 ) }
    dend_45 { pt3dadd( -34.9496, 4.5031, 81.7231, 0.15 ) }
    dend_45 { pt3dadd( -34.4564, 4.2656, 81.8901, 1.25 ) }
    dend_45 { pt3dadd( -33.5972, 3.67063, 82.1595, 0.29 ) }
    dend_45 { pt3dadd( -32.7739, 2.88185, 82.3976, 0.22 ) }
    dend_45 { pt3dadd( -32.237, 2.20589, 82.5323, 0.15 ) }
    dend_45 { pt3dadd( -31.7173, 1.34936, 82.6058, 1.77 ) }
    dend_45 { pt3dadd( -30.8472, -0.474431, 82.5896, 0.07 ) }
    dend_45 { pt3dadd( -30.6127, -1.03304, 82.557, 0.81 ) }
    dend_45 { pt3dadd( -30.2474, -2.04952, 82.4644, 0.07 ) }
    dend_45 { pt3dadd( -29.9742, -2.91797, 82.369, 0.96 ) }
    dend_45 { pt3dadd( -29.7231, -3.72896, 82.2591, 2.06 ) }
    dend_45 { pt3dadd( -29.102, -5.60996, 81.9864, 0.07 ) }
    dend_45 { pt3dadd( -28.7778, -6.50325, 81.8604, 0.22 ) }
    dend_45 { pt3dadd( -28.4152, -7.54018, 81.7581, 0.15 ) }
    dend_45 { pt3dadd( -28.1325, -8.39661, 81.7133, 1.47 ) }
    dend_45 { pt3dadd( -27.8539, -9.34868, 81.6836, 0.66 ) }
    dend_45 { pt3dadd( -27.617, -10.32, 81.6563, 0.66 ) }
    dend_45 { pt3dadd( -27.4956, -10.9419, 81.6484, 1.77 ) }
    dend_45 { pt3dadd( -27.258, -12.2738, 81.6339, 0.07 ) }
    dend_45 { pt3dadd( -27.2068, -12.6513, 81.6315, 0.22 ) }
    dend_45 { pt3dadd( -27.1325, -13.4871, 81.6298, 0.22 ) }
    dend_45 { pt3dadd( -27.1109, -14.2012, 81.6326, 1.55 ) }
    dend_45 { pt3dadd( -27.1466, -15.6417, 81.6119, 0.15 ) }
    dend_45 { pt3dadd( -27.1827, -16.285, 81.5769, 0.59 ) }
    dend_45 { pt3dadd( -27.2253, -17.0809, 81.4973, 0.15 ) }
    dend_45 { pt3dadd( -27.2532, -17.7392, 81.4179, 0.15 ) }
    dend_45 { pt3dadd( -27.2727, -18.3373, 81.3376, 0.74 ) }
    dend_45 { pt3dadd( -27.2915, -19.0655, 81.2164, 1.25 ) }
    dend_45 { pt3dadd( -27.3768, -20.3962, 80.9707, 0.07 ) }
    dend_45 { pt3dadd( -27.4329, -21.1276, 80.8358, 0.15 ) }
    dend_45 { pt3dadd( -27.4905, -21.7612, 80.7445, 0.74 ) }
    dend_45 { pt3dadd( -27.5626, -22.3294, 80.6915, 1.4 ) }
    dend_45 { pt3dadd( -27.7159, -23.2868, 80.656, 0.15 ) }
    dend_45 { pt3dadd( -27.9168, -24.1827, 80.7075, 0.07 ) }
    dend_45 { pt3dadd( -28.0543, -24.6042, 80.7765, 0.29 ) }
    dend_45 { pt3dadd( -28.5258, -25.665, 81.0006, 0.07 ) }
    dend_45 { pt3dadd( -28.7906, -26.1917, 81.1301, 0.88 ) }
    dend_45 { pt3dadd( -28.9809, -26.5285, 81.221, 1.33 ) }
    dend_45 { pt3dadd( -29.6027, -27.5055, 81.5144, 0.22 ) }
    dend_45 { pt3dadd( -30.017, -28.1443, 81.711, 0.22 ) }
    dend_45 { pt3dadd( -30.4235, -28.7304, 81.8974, 1.33 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 89/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -6.70173, 48.5356, 53.794, 0.15 ) }
    dend_43 { pt3dadd( -6.14501, 49.9809, 54.9149, 0.15 ) }
    dend_43 { pt3dadd( -5.99494, 50.5074, 55.3424, 0.22 ) }
    dend_43 { pt3dadd( -5.8349, 51.3867, 56.0876, 0.15 ) }
    dend_43 { pt3dadd( -5.7685, 51.9311, 56.5422, 0.96 ) }
    dend_43 { pt3dadd( -5.70054, 52.6883, 57.1566, 0.29 ) }
    dend_43 { pt3dadd( -5.64279, 53.2703, 57.6317, 0.29 ) }
    dend_43 { pt3dadd( -5.62816, 53.9484, 58.2022, 0.29 ) }
    dend_43 { pt3dadd( -5.57578, 54.5967, 58.7441, 0.29 ) }
    dend_43 { pt3dadd( -5.48486, 55.2006, 59.2479, 1.25 ) }
    dend_43 { pt3dadd( -5.43482, 55.429, 59.445, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_43 { pt3dadd( -5.08323, 56.6736, 60.5828, 0.15 ) }
    dend_43 { pt3dadd( -4.73388, 57.5473, 61.4413, 1.33 ) }
    dend_43 { pt3dadd( -4.14605, 58.6892, 62.6463, 0.07 ) }
    dend_43 { pt3dadd( -3.782, 59.25, 63.3133, 0.59 ) }
    dend_43 { pt3dadd( -3.25256, 59.9534, 64.2423, 0.15 ) }
    dend_43 { pt3dadd( -2.76994, 60.5554, 65.0739, 1.11 ) }
    dend_43 { pt3dadd( -2.35863, 61.1174, 65.7729, 2.14 ) }
    dend_43 { pt3dadd( -2.14323, 61.4546, 66.1344, 1.84 ) }
    dend_43 { pt3dadd( -1.5597, 62.8193, 67.2218, 0.15 ) }
    dend_43 { pt3dadd( -1.32708, 63.7129, 67.7079, 1.4 ) }
    dend_43 { pt3dadd( -1.22224, 64.5078, 68.0084, 0.96 ) }
    dend_43 { pt3dadd( -1.13651, 66.6643, 68.6842, 0.15 ) }
    dend_43 { pt3dadd( -1.16976, 67.5683, 68.9408, 0.96 ) }
    dend_43 { pt3dadd( -1.39305, 69.4325, 69.4777, 0.15 ) }
    dend_43 { pt3dadd( -1.52344, 70.0622, 69.6667, 1.18 ) }
    dend_43 { pt3dadd( -1.83099, 71.2473, 70.116, 0.15 ) }
    dend_43 { pt3dadd( -2.1681, 72.3759, 70.7127, 0.59 ) }
    dend_43 { pt3dadd( -2.28991, 72.7364, 70.977, 0.88 ) }
    dend_43 { pt3dadd( -2.69735, 73.9222, 72.028, 0.22 ) }
    dend_43 { pt3dadd( -2.94195, 74.6791, 72.8131, 0.88 ) }
    dend_43 { pt3dadd( -3.14206, 75.3176, 73.5115, 1.77 ) }
    dend_43 { pt3dadd( -3.45429, 76.508, 74.8322, 0.29 ) }
    dend_43 { pt3dadd( -3.54943, 77.0761, 75.4803, 0.81 ) }
    dend_43 { pt3dadd( -3.63726, 78.0822, 76.6585, 0.22 ) }
    dend_43 { pt3dadd( -3.63705, 78.7934, 77.5085, 0.37 ) }
    dend_43 { pt3dadd( -3.61089, 79.163, 77.9571, 0.37 ) }
    dend_43 { pt3dadd( -3.49054, 80.042, 79.0386, 1.55 ) }
    dend_43 { pt3dadd( -3.23358, 81.169, 80.4317, 0.07 ) }
    dend_43 { pt3dadd( -2.97377, 82.0444, 81.4881, 0.22 ) }
    dend_43 { pt3dadd( -2.76744, 82.6291, 82.1744, 0.22 ) }
    dend_43 { pt3dadd( -2.57327, 83.151, 82.7705, 0.22 ) }
    dend_43 { pt3dadd( -2.33646, 83.7852, 83.4576, 0.07 ) }
    dend_43 { pt3dadd( -2.12572, 84.3706, 84.0397, 1.11 ) }
    dend_43 { pt3dadd( -1.99553, 84.7111, 84.3476, 1.4 ) }
    dend_43 { pt3dadd( -1.48557, 85.86, 85.3574, 0.07 ) }
    dend_43 { pt3dadd( -1.15888, 86.5681, 85.9729, 0.74 ) }
    dend_43 { pt3dadd( -0.966402, 87.025, 86.35, 0.74 ) }
    dend_43 { pt3dadd( -0.664566, 87.8043, 86.9703, 0.22 ) }
    dend_43 { pt3dadd( -0.313771, 88.7334, 87.6943, 0.22 ) }
    dend_43 { pt3dadd( -0.0763325, 89.3492, 88.1679, 0.96 ) }
    dend_43 { pt3dadd( 0.0862072, 89.7702, 88.4829, 0.96 ) }
    dend_43 { pt3dadd( 0.681432, 91.3922, 89.6392, 0.15 ) }
    dend_43 { pt3dadd( 0.99409, 92.3015, 90.2691, 0.15 ) }
    dend_43 { pt3dadd( 1.1237, 92.7158, 90.5366, 0.22 ) }
    dend_43 { pt3dadd( 1.4455, 93.9009, 91.2025, 0.07 ) }
    dend_43 { pt3dadd( 1.59321, 94.5252, 91.5299, 0.07 ) }
    dend_43 { pt3dadd( 1.808, 95.5576, 92.0234, 0.96 ) }
    dend_43 { pt3dadd( 1.96767, 96.4141, 92.3963, 0.22 ) }
    dend_43 { pt3dadd( 2.12632, 97.3845, 92.7766, 1.25 ) }
    dend_43 { pt3dadd( 2.43698, 99.5268, 93.5713, 0.15 ) }
    dend_43 { pt3dadd( 2.58035, 100.585, 93.9423, 1.33 ) }
    dend_43 { pt3dadd( 2.80531, 102.283, 94.5248, 0.15 ) }
    dend_43 { pt3dadd( 2.86741, 102.816, 94.7078, 0.22 ) }
    dend_43 { pt3dadd( 2.98657, 103.994, 95.1009, 0.15 ) }
    dend_43 { pt3dadd( 3.05712, 104.804, 95.3592, 0.81 ) }
    dend_43 { pt3dadd( 3.06927, 104.953, 95.4028, 0.81 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 56/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -6.70173, 48.5356, 53.794, 0.29 ) }
    dend_42 { pt3dadd( -6.15911, 49.386, 55.2358, 0.29 ) }
    dend_42 { pt3dadd( -5.6984, 50.2911, 56.6188, 0.52 ) }
    dend_42 { pt3dadd( -5.4658, 50.8429, 57.3897, 1.25 ) }
    dend_42 { pt3dadd( -5.06209, 51.9008, 58.777, 0.15 ) }
    dend_42 { pt3dadd( -4.87683, 52.3945, 59.4064, 0.15 ) }
    dend_42 { pt3dadd( -4.7433, 52.7747, 59.8859, 0.15 ) }
    dend_42 { pt3dadd( -4.56575, 53.4549, 60.6304, 0.15 ) }
    dend_42 { pt3dadd( -4.42234, 53.967, 61.1459, 0.81 ) }
    dend_42 { pt3dadd( -4.20749, 54.6308, 61.8291, 1.33 ) }
    dend_42 { pt3dadd( -3.82619, 55.7032, 62.977, 0.22 ) }
    dend_42 { pt3dadd( -3.59117, 56.2221, 63.5947, 0.22 ) }
    dend_42 { pt3dadd( -3.27711, 56.7287, 64.2573, 1.11 ) }
    dend_42 { pt3dadd( -2.99171, 57.098, 64.7843, 1.7 ) }
    dend_42 { pt3dadd( -2.45104, 57.7683, 65.7546, 0.22 ) }
    dend_42 { pt3dadd( -2.16812, 58.1017, 66.2535, 0.88 ) }
    dend_42 { pt3dadd( -1.59596, 58.686, 67.1717, 0.15 ) }
    dend_42 { pt3dadd( -1.25048, 58.9709, 67.6611, 0.29 ) }
    dend_42 { pt3dadd( -0.929714, 59.1827, 68.0889, 0.29 ) }
    dend_42 { pt3dadd( -0.514937, 59.4454, 68.6586, 0.15 ) }
    dend_42 { pt3dadd( -0.064887, 59.761, 69.3409, 0.15 ) }
    dend_42 { pt3dadd( 0.274894, 60.042, 69.9097, 0.96 ) }
    dend_42 { pt3dadd( 0.673939, 60.3987, 70.6245, 0.66 ) }
    dend_42 { pt3dadd( 1.25261, 60.7477, 71.6082, 0.15 ) }
    dend_42 { pt3dadd( 1.65042, 60.9491, 72.2826, 0.15 ) }
    dend_42 { pt3dadd( 2.17851, 61.2033, 73.2269, 0.81 ) }
    dend_42 { pt3dadd( 2.93216, 61.6031, 74.6815, 2.14 ) }
    dend_42 { pt3dadd( 3.29773, 61.8217, 75.4445, 2.14 ) }
    dend_42 { pt3dadd( 4.33395, 62.5659, 77.698, 0.15 ) }
    dend_42 { pt3dadd( 4.70805, 62.8455, 78.4871, 0.15 ) }
    dend_42 { pt3dadd( 5.28229, 63.2348, 79.623, 0.29 ) }
    dend_42 { pt3dadd( 5.69955, 63.4883, 80.4051, 1.33 ) }
    dend_42 { pt3dadd( 6.05516, 63.7114, 81.0731, 1.62 ) }
    dend_42 { pt3dadd( 6.73003, 64.2194, 82.374, 0.15 ) }
    dend_42 { pt3dadd( 6.92737, 64.4444, 82.8282, 0.15 ) }
    dend_42 { pt3dadd( 7.22607, 64.7907, 83.5523, 0.15 ) }
    dend_42 { pt3dadd( 7.38963, 64.9882, 83.9837, 0.15 ) }
    dend_42 { pt3dadd( 7.5946, 65.2117, 84.5612, 0.29 ) }
    dend_42 { pt3dadd( 7.87608, 65.4906, 85.4883, 0.66 ) }
    dend_42 { pt3dadd( 8.19345, 65.8414, 86.8608, 0.15 ) }
    dend_42 { pt3dadd( 8.32283, 66.068, 87.6449, 0.15 ) }
    dend_42 { pt3dadd( 8.3905, 66.2844, 88.2666, 0.15 ) }
    dend_42 { pt3dadd( 8.42521, 66.6169, 89.0196, 0.66 ) }
    dend_42 { pt3dadd( 8.39531, 67.3766, 90.4855, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_42 { pt3dadd( 8.34482, 67.9291, 91.4071, 0.22 ) }
    dend_42 { pt3dadd( 8.30081, 68.4476, 92.2069, 1.33 ) }
    dend_42 { pt3dadd( 8.25159, 69.1005, 93.1593, 1.92 ) }
    dend_42 { pt3dadd( 8.15876, 70.5099, 95.1516, 0.37 ) }
    dend_42 { pt3dadd( 8.10022, 71.3014, 96.2435, 0.22 ) }
    dend_42 { pt3dadd( 8.03234, 72.1737, 97.4247, 0.22 ) }
    dend_42 { pt3dadd( 7.98506, 72.5912, 98.041, 0.22 ) }
    dend_42 { pt3dadd( 7.89349, 72.9173, 98.613, 0.22 ) }
    dend_42 { pt3dadd( 7.74514, 73.1552, 99.1927, 0.22 ) }
    dend_42 { pt3dadd( 7.59407, 73.3073, 99.7467, 0.22 ) }
    dend_42 { pt3dadd( 7.41099, 73.4924, 100.411, 0.52 ) }
    dend_42 { pt3dadd( 6.96446, 74.0171, 101.957, 1.18 ) }
    dend_42 { pt3dadd( 6.55774, 74.5938, 103.451, 1.4 ) }
    dend_42 { pt3dadd( 5.96819, 75.6084, 105.862, 0.81 ) }
    dend_42 { pt3dadd( 5.70755, 76.2332, 107.312, 0.81 ) }
    dend_42 { pt3dadd( 5.54298, 76.9147, 108.946, 1.7 ) }
    dend_42 { pt3dadd( 5.50039, 78.1062, 111.923, 0.29 ) }
    dend_42 { pt3dadd( 5.59608, 78.695, 113.403, 0.29 ) }
    dend_42 { pt3dadd( 5.69785, 79.0236, 114.202, 1.03 ) }
    dend_42 { pt3dadd( 5.95961, 79.7481, 115.886, 0.22 ) }
    dend_42 { pt3dadd( 6.17911, 80.3325, 117.242, 1.11 ) }
    dend_42 { pt3dadd( 6.48852, 80.955, 118.884, 0.29 ) }
    dend_42 { pt3dadd( 6.71032, 81.2886, 119.988, 0.29 ) }
    dend_42 { pt3dadd( 6.80827, 81.4445, 120.605, 0.52 ) }
    dend_42 { pt3dadd( 6.91599, 81.613, 121.66, 0.52 ) }
    dend_42 { pt3dadd( 6.93318, 81.6634, 122.06, 0.52 ) }
    dend_42 { pt3dadd( 6.96586, 81.7014, 122.68, 0.52 ) }
    dend_42 { pt3dadd( 7.1496, 81.6559, 123.704, 0.52 ) }
    dend_42 { pt3dadd( 7.44872, 81.6231, 124.396, 0.52 ) }
    dend_42 { pt3dadd( 8.13303, 81.6518, 125.582, 0.22 ) }
    dend_42 { pt3dadd( 8.79457, 81.7891, 126.57, 0.15 ) }
    dend_42 { pt3dadd( 9.03499, 81.9189, 126.973, 0.15 ) }
    dend_42 { pt3dadd( 9.42808, 82.2743, 127.687, 0.81 ) }
    dend_42 { pt3dadd( 10.0608, 83.0674, 128.935, 0.29 ) }
    dend_42 { pt3dadd( 10.4901, 83.7653, 129.879, 0.81 ) }
    dend_42 { pt3dadd( 10.798, 84.443, 130.646, 1.7 ) }
    dend_42 { pt3dadd( 11.4388, 86.2542, 132.509, 0.22 ) }
    dend_42 { pt3dadd( 11.7175, 87.2877, 133.441, 0.44 ) }
    dend_42 { pt3dadd( 11.7951, 87.8723, 133.853, 0.15 ) }
    dend_42 { pt3dadd( 11.8378, 88.6891, 134.295, 0.88 ) }
    dend_42 { pt3dadd( 11.8485, 90.3726, 134.987, 0.22 ) }
    dend_42 { pt3dadd( 11.8519, 91.1897, 135.263, 0.88 ) }
    dend_42 { pt3dadd( 11.8655, 91.8527, 135.448, 1.47 ) }
    dend_42 { pt3dadd( 11.9312, 94.4235, 136.179, 0.22 ) }
    dend_42 { pt3dadd( 11.9633, 94.9936, 136.347, 0.22 ) }
    dend_42 { pt3dadd( 12.0676, 95.7651, 136.614, 0.37 ) }
    dend_42 { pt3dadd( 12.4534, 97.4043, 137.344, 0.22 ) }
    dend_42 { pt3dadd( 12.6548, 98.0694, 137.711, 0.22 ) }
    dend_42 { pt3dadd( 12.8731, 98.6898, 138.147, 0.96 ) }
    dend_42 { pt3dadd( 13.1005, 99.1767, 138.578, 1.55 ) }
    dend_42 { pt3dadd( 13.8606, 100.593, 139.984, 0.15 ) }
    dend_42 { pt3dadd( 14.4397, 101.501, 140.984, 1.25 ) }
    dend_42 { pt3dadd( 14.9744, 102.296, 141.909, 1.25 ) }
    dend_42 { pt3dadd( 15.613, 103.16, 142.974, 0.74 ) }
    dend_42 { pt3dadd( 16.3858, 104.065, 144.221, 0.15 ) }
    dend_42 { pt3dadd( 16.9133, 104.612, 145.051, 0.29 ) }
    dend_42 { pt3dadd( 17.2882, 104.931, 145.587, 0.29 ) }
    dend_42 { pt3dadd( 17.9924, 105.407, 146.373, 0.29 ) }
    dend_42 { pt3dadd( 18.7447, 105.863, 147.066, 0.81 ) }
    dend_42 { pt3dadd( 19.8411, 106.577, 147.98, 0.15 ) }
    dend_42 { pt3dadd( 20.436, 107.031, 148.486, 1.11 ) }
    dend_42 { pt3dadd( 20.7358, 107.292, 148.745, 1.77 ) }
    dend_42 { pt3dadd( 22.3181, 108.723, 150.091, 0.22 ) }
    dend_42 { pt3dadd( 22.898, 109.219, 150.536, 0.22 ) }
    dend_42 { pt3dadd( 23.6285, 109.872, 151.055, 0.22 ) }
    dend_42 { pt3dadd( 24.2952, 110.46, 151.462, 0.22 ) }
    dend_42 { pt3dadd( 24.6486, 110.788, 151.669, 0.44 ) }
    dend_42 { pt3dadd( 25.3437, 111.476, 152.071, 0.44 ) }
    dend_42 { pt3dadd( 26.236, 112.391, 152.587, 1.55 ) }
    dend_42 { pt3dadd( 27.2146, 113.296, 153.124, 0.66 ) }
    dend_42 { pt3dadd( 28.5284, 114.294, 153.814, 0.15 ) }
    dend_42 { pt3dadd( 29.0555, 114.642, 154.102, 0.15 ) }
    dend_42 { pt3dadd( 29.7081, 115.034, 154.494, 0.37 ) }
    dend_42 { pt3dadd( 30.7228, 115.598, 155.152, 0.15 ) }
    dend_42 { pt3dadd( 31.3892, 115.952, 155.631, 0.81 ) }
    dend_42 { pt3dadd( 32.6173, 116.554, 156.576, 0.22 ) }
    dend_42 { pt3dadd( 33.2524, 116.852, 157.066, 0.22 ) }
    dend_42 { pt3dadd( 33.9319, 117.156, 157.565, 1.25 ) }
    dend_42 { pt3dadd( 34.2596, 117.312, 157.798, 1.25 ) }
    dend_42 { pt3dadd( 35.4695, 117.921, 158.577, 0.07 ) }
    dend_42 { pt3dadd( 36.2665, 118.35, 159.041, 0.96 ) }
    dend_42 { pt3dadd( 37.8689, 119.251, 159.876, 0.22 ) }
    dend_42 { pt3dadd( 38.6703, 119.678, 160.258, 1.03 ) }
    dend_42 { pt3dadd( 39.4856, 120.09, 160.619, 1.77 ) }
    dend_42 { pt3dadd( 41.1315, 120.949, 161.323, 0.15 ) }
    dend_42 { pt3dadd( 42.0472, 121.429, 161.691, 0.22 ) }
    dend_42 { pt3dadd( 43.1283, 122.012, 162.124, 0.15 ) }
    dend_42 { pt3dadd( 43.9124, 122.465, 162.453, 1.03 ) }
    dend_42 { pt3dadd( 44.8983, 123.052, 162.884, 0.22 ) }
    dend_42 { pt3dadd( 46.0276, 123.741, 163.404, 0.22 ) }
    dend_42 { pt3dadd( 47.1927, 124.521, 163.974, 0.15 ) }
    dend_42 { pt3dadd( 47.9835, 125.071, 164.363, 0.15 ) }
    dend_42 { pt3dadd( 48.8116, 125.66, 164.783, 0.81 ) }
    dend_42 { pt3dadd( 49.0888, 125.855, 164.925, 1.77 ) }
    dend_42 { pt3dadd( 50.2764, 126.629, 165.461, 0.07 ) }
    dend_42 { pt3dadd( 51.2018, 127.195, 165.805, 0.59 ) }
    dend_42 { pt3dadd( 53.2101, 128.422, 166.379, 0.22 ) }
    dend_42 { pt3dadd( 53.6479, 128.684, 166.482, 0.59 ) }
    dend_42 { pt3dadd( 54.4945, 129.164, 166.648, 0.66 ) }
    dend_42 { pt3dadd( 56.2054, 130.114, 166.938, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_42 { pt3dadd( 56.9059, 130.483, 167.015, 0.07 ) }
    dend_42 { pt3dadd( 57.347, 130.688, 167.03, 0.52 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 2/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -48.2379, 29.5576, 62.7623, 0.15 ) }
    dend_50 { pt3dadd( -49.7811, 30.8874, 63.0042, 0.15 ) }
    dend_50 { pt3dadd( -50.7283, 32.0354, 62.9455, 0.15 ) }
    dend_50 { pt3dadd( -51.5967, 33.4474, 62.6726, 0.07 ) }
    dend_50 { pt3dadd( -51.9322, 34.1767, 62.4326, 0.07 ) }
    dend_50 { pt3dadd( -52.5529, 35.8434, 61.6974, 0.07 ) }
    dend_50 { pt3dadd( -52.9573, 37.126, 61.006, 0.07 ) }
    dend_50 { pt3dadd( -53.023, 37.7327, 60.5522, 0.07 ) }
    dend_50 { pt3dadd( -52.9685, 38.3147, 60.0278, 0.29 ) }
    dend_50 { pt3dadd( -52.7461, 39.1322, 59.1784, 0.29 ) }
    dend_50 { pt3dadd( -52.5741, 39.5986, 58.6458, 0.29 ) }
    dend_50 { pt3dadd( -52.3991, 40.0222, 58.1391, 0.29 ) }
    dend_50 { pt3dadd( -52.1592, 40.5465, 57.4752, 0.29 ) }
    dend_50 { pt3dadd( -51.7581, 41.4808, 56.207, 0.22 ) }
    dend_50 { pt3dadd( -51.5291, 42.092, 55.2939, 0.22 ) }
    dend_50 { pt3dadd( -51.2314, 43.0619, 53.7776, 0.88 ) }
    dend_50 { pt3dadd( -51.0136, 43.8668, 52.4573, 0.22 ) }
    dend_50 { pt3dadd( -50.9397, 44.22, 51.855, 0.22 ) }
    dend_50 { pt3dadd( -50.859, 44.7672, 50.8857, 0.15 ) }
    dend_50 { pt3dadd( -50.826, 45.3939, 49.7954, 0.15 ) }
    dend_50 { pt3dadd( -50.7922, 46.0268, 48.6898, 0.15 ) }
    dend_50 { pt3dadd( -50.7387, 46.5958, 47.7099, 0.15 ) }
    dend_50 { pt3dadd( -50.662, 47.1023, 46.8869, 0.74 ) }
    dend_50 { pt3dadd( -50.5862, 47.5633, 46.1876, 0.74 ) }
    dend_50 { pt3dadd( -50.4247, 48.2767, 45.121, 0.15 ) }
    dend_50 { pt3dadd( -50.173, 49.1202, 43.7896, 0.22 ) }
    dend_50 { pt3dadd( -50.0428, 49.4632, 43.1847, 0.22 ) }
    dend_50 { pt3dadd( -49.7629, 49.9798, 42.1487, 0.22 ) }
    dend_50 { pt3dadd( -49.6145, 50.18, 41.6885, 0.22 ) }
    dend_50 { pt3dadd( -49.3181, 50.5033, 40.8262, 0.22 ) }
    dend_50 { pt3dadd( -48.9805, 50.7292, 39.927, 0.22 ) }
    dend_50 { pt3dadd( -48.7132, 50.8085, 39.2801, 0.22 ) }
    dend_50 { pt3dadd( -48.3559, 50.843, 38.4634, 0.22 ) }
    dend_50 { pt3dadd( -48.0142, 50.8544, 37.7436, 0.22 ) }
    dend_50 { pt3dadd( -47.5354, 50.8962, 36.6384, 0.22 ) }
    dend_50 { pt3dadd( -46.9548, 50.943, 35.0905, 0.44 ) }
    dend_50 { pt3dadd( -46.6483, 50.9458, 34.1136, 0.44 ) }
    dend_50 { pt3dadd( -46.55, 50.9332, 33.7554, 0.44 ) }
    dend_50 { pt3dadd( -46.2543, 50.8299, 32.6786, 0.44 ) }
    dend_50 { pt3dadd( -45.8632, 50.6425, 31.547, 0.44 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 42/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -48.2379, 29.5576, 62.7623, 1.03 ) }
    dend_49 { pt3dadd( -48.5584, 29.8286, 62.9496, 1.03 ) }
    dend_49 { pt3dadd( -49.3411, 30.5493, 63.5388, 0.07 ) }
    dend_49 { pt3dadd( -49.611, 30.8128, 63.7758, 0.07 ) }
    dend_49 { pt3dadd( -49.8054, 31.0508, 63.9874, 0.22 ) }
    dend_49 { pt3dadd( -50.1001, 31.474, 64.3627, 0.07 ) }
    dend_49 { pt3dadd( -50.3103, 31.8022, 64.6489, 0.37 ) }
    dend_49 { pt3dadd( -50.6379, 32.3761, 65.1628, 0.15 ) }
    dend_49 { pt3dadd( -50.8887, 32.882, 65.6283, 1.33 ) }
    dend_49 { pt3dadd( -51.4537, 34.055, 66.7165, 0.07 ) }
    dend_49 { pt3dadd( -51.7877, 34.7588, 67.3776, 0.07 ) }
    dend_49 { pt3dadd( -51.9634, 35.1367, 67.7312, 0.66 ) }
    dend_49 { pt3dadd( -52.1442, 35.553, 68.1073, 0.66 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 55/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -30.4235, -28.7304, 81.8974, 0.07 ) }
    dend_47 { pt3dadd( -30.5949, -29.9163, 81.9735, 0.07 ) }
    dend_47 { pt3dadd( -30.7028, -30.6624, 82.0214, 0.37 ) }
    dend_47 { pt3dadd( -30.8244, -31.5037, 82.0753, 0.22 ) }
    dend_47 { pt3dadd( -30.9501, -32.3734, 82.1311, 0.88 ) }
    dend_47 { pt3dadd( -31.0336, -32.9511, 82.1682, 0.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 61/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -30.4235, -28.7304, 81.8974, 0.07 ) }
    dend_46 { pt3dadd( -31.2679, -27.1472, 81.3656, 0.07 ) }
    dend_46 { pt3dadd( -31.6082, -26.5092, 81.1513, 0.44 ) }
    dend_46 { pt3dadd( -32.0066, -25.7621, 80.9004, 0.15 ) }
    dend_46 { pt3dadd( -32.4457, -24.9388, 80.6238, 0.74 ) }
    dend_46 { pt3dadd( -33.0316, -23.8403, 80.2548, 0.07 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
    ModelViewParmSubset_2 = new SectionList()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_1 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_33 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_26 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_14 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_11 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_2 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_34 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_28 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_13 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_7 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_60 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_57 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_51 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_37 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_30 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_29 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_24 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_9 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_8 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_6 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_5 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_62 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_61 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_52 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_44 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_23 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_17 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_45 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_43 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_42 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_50 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_32 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_10 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_27 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_31 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_3 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_38 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_39 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_56 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_40 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_41 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_55 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_36 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_48 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_49 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_20 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_15 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_53 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_54 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_21 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_59 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_19 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_16 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_58 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_22 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_47 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_46 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_18 OneSecGrp_SectionRef_55.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_42 all.append()
    dend_42 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_1 nseg = 3
    dend_0 nseg = 9
    dend_33 nseg = 3
    dend_26 nseg = 5
    dend_14 nseg = 5
    dend_11 nseg = 3
    dend_2 nseg = 5
    dend_35 nseg = 3
    dend_34 nseg = 3
    dend_28 nseg = 3
    dend_13 nseg = 9
    dend_12 nseg = 5
    dend_7 nseg = 3
    dend_60 nseg = 3
    dend_57 nseg = 5
    dend_51 nseg = 3
    dend_37 nseg = 3
    dend_30 nseg = 5
    dend_29 nseg = 3
    dend_24 nseg = 7
    dend_9 nseg = 7
    dend_8 nseg = 5
    dend_6 nseg = 7
    dend_5 nseg = 5
    dend_62 nseg = 5
    dend_61 nseg = 3
    dend_52 nseg = 3
    dend_44 nseg = 3
    dend_23 nseg = 3
    dend_17 nseg = 3
    dend_45 nseg = 3
    dend_43 nseg = 3
    dend_42 nseg = 9
    dend_50 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L4_DBC_99fd24de2c_0_0


