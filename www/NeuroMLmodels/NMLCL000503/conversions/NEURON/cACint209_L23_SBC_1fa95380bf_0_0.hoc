// Cell: cACint209_L23_SBC_1fa95380bf_0_0
/*
{
  "id" : "cACint209_L23_SBC_1fa95380bf_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.0293462, -12.9853, -0.0366919, 2.96605", "-0.0916006, -11.7544, -0.0331152, 4.78829", "-0.153855, -10.5234, -0.0295385, 5.73414", "-0.216109, -9.29249, -0.0259618, 6.71072", "-0.278364, -8.06156, -0.0223851, 7.64095", "-0.340618, -6.83062, -0.0188084, 8.52026", "-0.402872, -5.59969, -0.0152318, 9.22278", "-0.465127, -4.36876, -0.0116551, 10.3473", "-0.527381, -3.13782, -0.00807839, 11.5282", "-0.589635, -1.90689, -0.00450171, 12.8198", "-0.65189, -0.675958, -9.25027E-4, 13.2176", "-0.714144, 0.554976, 0.00265166, 13.5115", "-0.776398, 1.78591, 0.00622834, 13.548", "-0.838653, 3.01684, 0.00980502, 13.3634", "-0.900907, 4.24778, 0.0133817, 13.1199", "-0.963162, 5.47871, 0.0169584, 12.2421", "-1.02542, 6.70964, 0.0205351, 10.9571", "-1.08767, 7.94058, 0.0241117, 9.09301", "-1.14992, 9.17151, 0.0276884, 6.3102", "-1.21218, 10.4024, 0.0312651, 4.08577", "-1.27443, 11.6334, 0.0348418, 2.61233" ]
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-3.98176, -4.35749, 18.7528, 0.96", "-4.08176, -4.65863, 19.7778, 0.96", "-4.17319, -4.93394, 20.7148, 1.33", "-4.24973, -5.16444, 21.4993, 1.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999967977018533
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "3.62822, 5.40051, 10.5928, 0.66", "5.12621, 5.27804, 11.4428, 0.66", "6.46264, 5.1896, 12.3012, 0.29", "7.63163, 5.16004, 13.1595, 0.22", "8.25396, 5.18023, 13.6323, 0.22", "9.22206, 5.21937, 14.3769, 0.22", "9.89611, 5.23399, 14.8995, 0.37", "11.0186, 5.26063, 15.8406, 0.29", "11.924, 5.31687, 16.6908, 0.59", "13.4591, 5.43779, 18.1802, 0.29", "14.3412, 5.50548, 19.0113, 0.22", "15.1111, 5.51791, 19.7255, 0.29", "16.1697, 5.46419, 20.6803, 0.29", "17.342, 5.33946, 21.6586, 0.66", "18.1045, 5.20583, 22.2418, 0.96", "19.0466, 4.96791, 22.9389, 0.29", "20.4817, 4.55485, 23.9815, 0.37", "21.0702, 4.38306, 24.4128, 0.29", "21.7291, 4.18522, 24.8541, 0.29", "22.307, 4.03879, 25.2515, 0.22", "22.6951, 3.999, 25.5431, 0.22", "23.8009, 4.02784, 26.4931, 0.22", "25.0773, 4.11218, 27.6094, 0.37", "25.8755, 4.19668, 28.3596, 0.88", "26.6465, 4.30726, 29.1219, 0.96", "27.7903, 4.52981, 30.2596, 0.29", "28.59, 4.71338, 31.0073, 0.29", "29.4428, 4.91161, 31.7267, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999967977018533
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-2.42176, 8.47551, 13.5428, 0.88", "-2.42176, 8.47551, 13.5428, 0.88", "-2.83995, 9.73923, 14.3983, 0.88", "-3.16428, 10.726, 14.9798, 0.88", "-3.67873, 12.4217, 15.8627, 0.88", "-4.06094, 13.8785, 16.5641, 0.88", "-4.32329, 15.1809, 17.1593, 0.88", "-4.52563, 16.4931, 17.7013, 0.88", "-4.71675, 17.9278, 18.2553, 1.55", "-4.95115, 19.6033, 18.9359, 0.88", "-5.11675, 20.5795, 19.3724, 0.66", "-5.43713, 21.9661, 20.1316, 0.44", "-5.71546, 22.8283, 20.6949, 0.96", "-6.18348, 23.9419, 21.5052, 0.74", "-6.5947, 24.7619, 22.1267, 0.59", "-7.2687, 25.998, 23.0381, 0.74", "-8.03121, 27.4167, 24.0008, 1.03", "-8.72959, 28.8291, 24.8654, 0.81", "-9.18768, 30.0266, 25.4942, 0.81", "-9.41937, 31.0088, 25.9153, 0.88", "-9.48563, 31.6994, 26.1778, 0.96", "-9.43889, 32.9167, 26.6271, 0.52", "-9.29767, 33.863, 27.0408, 0.74", "-9.14523, 34.8022, 27.6003, 0.88", "-9.05078, 35.7248, 28.2928, 0.81", "-9.04584, 36.5618, 29.1072, 1.03", "-9.11561, 37.1347, 29.8244, 1.03", "-9.29357, 37.9706, 31.1192, 0.81", "-9.58183, 38.9948, 32.9678, 0.66", "-9.75931, 39.5002, 33.9672, 0.66", "-10.1491, 40.3199, 35.6609, 1.11", "-10.5775, 41.0265, 37.163, 0.81", "-10.8421, 41.401, 37.9794, 0.81", "-11.0597, 41.7055, 38.6297, 0.66", "-11.4005, 42.252, 39.6725, 1.18", "-11.8426, 43.1524, 40.9902, 0.66", "-12.2996, 44.1857, 42.1699, 0.59", "-12.6942, 45.0815, 43.1042, 0.81", "-13.1254, 45.9856, 44.0633, 0.81", "-13.4488, 46.6796, 44.8122, 1.18", "-14.0311, 48.0006, 46.1923, 0.52", "-14.3647, 48.8526, 47.0318, 0.52", "-14.8592, 50.3187, 48.4143, 0.96", "-15.1202, 51.1911, 49.2326, 1.18", "-15.5029, 52.5568, 50.5676, 0.74", "-15.8216, 53.7788, 51.8267, 0.59", "-16.0062, 54.5973, 52.666, 0.96", "-16.1739, 55.7564, 53.7375, 1.18", "-16.2543, 56.6841, 54.4944, 1.33", "-16.3309, 58.1453, 55.6029, 0.96", "-16.4016, 59.8842, 56.8346, 0.66", "-16.4678, 60.9722, 57.5276, 0.66", "-16.6278, 62.3982, 58.2991, 0.52", "-16.6843, 62.7265, 58.4344, 0.52", "-16.8609, 63.5857, 58.6694, 0.52", "-17.1068, 64.7087, 58.7873, 0.52", "-17.5047, 66.5015, 58.8193, 0.37", "-17.605, 66.9411, 58.838, 0.37", "-17.7943, 67.8093, 58.929, 0.74", "-17.8863, 68.5186, 59.087, 1.03", "-17.9713, 69.8106, 59.5371, 0.59", "-18.0259, 70.9288, 60.0799, 0.44", "-18.0988, 71.9572, 60.7101, 0.96", "-18.182, 72.6511, 61.1907, 1.18", "-18.4114, 74.1846, 62.3604, 0.44", "-18.59, 75.3992, 63.3202, 0.74", "-18.687, 76.2017, 63.946, 0.52", "-18.7868, 77.3418, 64.7505, 0.52", "-18.8532, 78.4449, 65.4285, 0.74", "-18.926, 79.9204, 66.2212, 0.52", "-18.9644, 81.0858, 66.7448, 0.88", "-18.9568, 82.0367, 67.1164, 1.03", "-18.8912, 83.5352, 67.6157, 0.74", "-18.8379, 84.5576, 67.947, 0.29", "-18.8295, 85.1469, 68.1383, 0.29", "-18.858, 85.8884, 68.3776, 0.52", "-18.9271, 86.7306, 68.6559, 0.88", "-18.9878, 87.5019, 68.9411, 1.03", "-19.1112, 89.3212, 69.7298, 0.52", "-19.1986, 90.6255, 70.3782, 0.52", "-19.2442, 91.2306, 70.7119, 0.52", "-19.3357, 92.0325, 71.2167, 0.37", "-19.505, 92.976, 71.8947, 0.88", "-19.8161, 94.327, 72.9894, 0.29", "-20.0165, 95.0959, 73.6624, 0.29", "-20.2148, 95.8109, 74.3572, 0.88", "-20.481, 96.6765, 75.2327, 1.25", "-20.7958, 97.6293, 76.1942, 0.44", "-21.0907, 98.5522, 77.0482, 0.22", "-21.2469, 99.1111, 77.5115, 0.81", "-21.3982, 99.7397, 77.979, 0.88", "-21.7311, 101.428, 79.0655, 0.29", "-21.886, 102.42, 79.6171, 0.52", "-22.0499, 103.669, 80.2142, 0.29", "-22.188, 104.829, 80.7278, 0.52", "-22.2434, 105.382, 80.975, 0.29", "-22.306, 106.521, 81.4802, 0.74", "-22.3163, 107.208, 81.7913, 0.74", "-22.3128, 108.322, 82.3259, 0.88", "-22.2613, 109.586, 82.9625, 0.44", "-22.1606, 110.724, 83.5461, 0.44", "-22.0339, 111.978, 84.2384, 0.81", "-21.929, 113.007, 84.8399, 0.22", "-21.8658, 113.636, 85.2133, 0.52", "-21.7305, 114.995, 86.0434, 0.29", "-21.6364, 116.016, 86.6257, 0.81", "-21.5487, 117.266, 87.3765, 0.29", "-21.5315, 117.75, 87.7028, 0.29", "-21.5301, 118.71, 88.4705, 0.52", "-21.5563, 119.386, 89.1228, 0.52", "-21.6124, 120.164, 89.9866, 1.33", "-21.6788, 121.347, 91.4618, 0.37", "-21.674, 121.942, 92.2579, 0.37", "-21.6336, 122.781, 93.4925, 0.52", "-21.5955, 123.598, 94.8003, 0.52", "-21.5696, 124.134, 95.7142, 0.66", "-21.5275, 125.009, 97.3311, 0.37", "-21.4502, 125.733, 98.6398, 0.07", "-21.3971, 126.032, 99.1621, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999967977018533,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-7.05177, -2.03074, 8.53279, 1.18", "-7.09087, -2.20609, 8.6737, 1.18", "-7.40093, -3.05733, 9.48675, 1.03", "-7.79509, -3.83272, 10.2637, 1.03", "-8.11434, -4.30634, 10.7509, 1.11", "-8.82356, -5.09463, 11.5932, 0.81", "-9.46923, -5.63093, 12.1892, 0.96", "-10.1903, -6.15919, 12.8022, 0.96", "-10.8834, -6.53529, 13.2952, 1.03", "-11.6039, -6.77627, 13.7015, 1.33", "-12.578, -6.97979, 14.1349, 1.25", "-13.6129, -7.0742, 14.4122, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999967977018533
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-5.17176, 6.69201, 11.7128, 1.03", "-6.25346, 6.95516, 13.0308, 1.03", "-7.74176, 7.14076, 14.8612, 1.18", "-8.90516, 7.13136, 16.3937, 0.88", "-9.90942, 6.97286, 17.9021, 0.81", "-10.8704, 6.74671, 19.4533, 0.81", "-11.6746, 6.53779, 20.8393, 0.96", "-12.4682, 6.2771, 22.3274, 1.03", "-13.338, 5.93263, 24.1978, 0.81", "-14.3279, 5.541, 26.4668, 1.03", "-14.565, 5.47033, 27.0064, 1.03", "-15.2021, 5.38402, 28.3837, 1.03", "-15.8697, 5.34199, 29.7577, 0.74", "-16.7078, 5.2886, 31.4376, 0.66", "-17.3276, 5.22013, 32.7236, 0.88", "-18.0015, 5.07792, 34.2669, 1.03", "-18.5673, 4.86465, 35.8433, 1.11", "-19.1912, 4.53111, 37.9712, 0.74", "-19.6347, 4.27431, 39.778, 0.96", "-20.1602, 4.10376, 42.3766, 0.81", "-20.394, 4.14783, 43.7363, 0.81", "-20.6363, 4.35195, 45.2243, 0.81", "-20.853, 4.6318, 46.377, 0.81", "-21.2868, 5.25351, 48.0443, 0.66", "-21.9803, 6.16051, 49.8627, 0.88", "-22.3695, 6.57303, 50.5016, 0.66", "-22.8237, 6.96151, 51.0514, 0.44", "-23.4487, 7.3806, 51.6244, 0.44", "-24.049, 7.69639, 52.153, 0.44", "-24.6902, 7.96335, 52.7543, 0.44", "-25.4484, 8.17796, 53.5516, 1.25", "-26.1958, 8.34932, 54.4189, 1.55", "-27.3068, 8.62107, 55.7545, 0.74", "-28.6675, 8.97464, 57.4208, 0.44", "-29.3139, 9.11731, 58.2611, 0.44", "-30.2967, 9.26159, 59.5857, 0.59", "-30.9512, 9.30124, 60.4895, 0.59", "-31.4772, 9.30022, 61.1884, 0.59", "-32.5337, 9.25615, 62.5726, 0.37", "-33.4678, 9.22981, 63.7323, 0.88", "-34.7033, 9.21755, 65.2295, 1.77", "-36.377, 9.23176, 67.2432, 0.66", "-37.5878, 9.21666, 68.7417, 1.4", "-39.041, 9.14721, 70.6186, 0.59", "-39.916, 9.08719, 71.771, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999967977018533,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-6.85176, 5.80026, 5.85279, 2.43", "-6.85176, 5.80026, 5.85279, 2.43", "-8.06731, 6.28803, 7.0712, 1.03", "-8.89086, 6.70094, 8.04876, 0.88", "-9.63481, 7.17918, 9.13167, 0.66", "-10.2405, 7.68417, 10.1926, 1.11", "-10.7645, 8.2462, 11.2344, 0.96", "-11.1872, 8.91419, 12.2447, 0.88", "-11.5402, 9.84779, 13.3366, 0.96", "-11.7913, 10.8269, 14.1938, 0.88", "-11.9881, 11.7107, 14.7648, 0.96", "-12.2815, 12.7101, 15.1618, 0.88", "-12.8355, 13.8083, 15.2379, 0.74", "-13.495, 14.6216, 15.0115, 0.74", "-14.4211, 15.5468, 14.5621, 0.96", "-15.3357, 16.3421, 14.0614, 0.81", "-16.1891, 16.9983, 13.5645, 0.81", "-17.2141, 17.6862, 12.9538, 0.88", "-18.374, 18.3819, 12.2401, 0.81", "-19.2427, 18.8835, 11.6654, 1.11", "-19.7053, 19.1561, 11.3471, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999967977018533
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "4.63823, -6.56124, 5.83279, 1.4", "5.54941, -5.60784, 6.4275, 1.4", "6.30785, -4.81426, 6.92252, 1.03", "7.63644, -3.4241, 7.78967, 0.74", "8.56008, -2.45766, 8.39252, 0.96", "9.43144, -1.54593, 8.96123, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999967977018533
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-0.511725, -13.562, 0.232789, 3.24", "-0.511725, -13.562, 0.232789, 3.24", "-1.09402, -15.5468, 0.641393, 2.21", "-1.60529, -17.2896, 1.00015, 1.92", "-1.93933, -18.4282, 1.23456, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999967977018533
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "1.90825, -13.5415, -2.02721, 1.11", "2.06263, -13.6205, -2.04905, 1.11", "3.88597, -14.4587, -2.24484, 0.74", "5.14589, -15.0379, -2.38014, 0.59", "6.1014, -15.4771, -2.48274, 0.74", "7.65835, -16.1928, -2.64994, 0.81", "8.83491, -16.7337, -2.77628, 0.81", "10.1397, -17.2596, -2.90157, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999967977018533
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "4.79827, -6.47924, -1.43721, 1.77", "4.79827, -6.47924, -1.43721, 1.77", "5.21101, -6.74134, -1.04139, 0.81", "6.009, -7.10134, -0.405313, 0.44", "6.57422, -7.29639, -0.0342595, 0.44", "6.92101, -7.41276, 0.15586, 0.44", "7.46365, -7.62969, 0.411609, 0.44", "8.25353, -8.04674, 0.684972, 0.81", "9.02393, -8.7406, 0.802477, 0.52", "9.3965, -9.24031, 0.802779, 0.44", "9.78383, -9.76706, 0.832601, 0.81", "10.353, -10.4966, 0.891542, 0.96", "11.1574, -11.4685, 0.987949, 1.18", "12.0888, -12.5098, 1.15688, 0.74", "13.0097, -13.4164, 1.41394, 0.66", "14.2932, -14.3889, 1.89944, 0.59", "14.9476, -14.7409, 2.20537, 0.52", "15.6341, -15.0047, 2.53164, 0.44", "16.3071, -15.188, 2.84317, 0.59", "16.7813, -15.3071, 3.01204, 0.59", "17.3966, -15.5665, 3.12186, 0.44", "17.8216, -16.0181, 3.06867, 0.44", "18.3716, -16.9821, 2.90199, 0.88", "18.644, -17.5216, 2.77576, 1.25", "19.2669, -18.7351, 2.421, 0.29", "19.4305, -19.0182, 2.31905, 0.29", "19.8902, -19.6246, 2.0532, 0.37", "20.3957, -20.1187, 1.82044, 0.22", "21.1189, -20.5855, 1.56982, 0.29", "21.7331, -20.8739, 1.35672, 0.29", "22.3035, -21.0885, 1.16069, 0.44", "23.326, -21.4738, 0.805003, 0.44", "23.9484, -21.7316, 0.594517, 0.52", "24.919, -22.266, 0.284447, 0.37", "25.5132, -22.7475, 0.12693, 0.44", "26.0812, -23.3573, 0.0498026, 1.03", "26.4853, -23.8321, 0.073852, 1.03", "27.1153, -24.5974, 0.213946, 0.44", "27.8694, -25.3827, 0.478162, 0.66", "28.415, -25.8741, 0.745768, 0.44", "29.1528, -26.4218, 1.16134, 0.44", "30.3898, -27.2084, 1.82201, 0.81", "30.7825, -27.4218, 1.9883, 0.81", "31.8552, -27.9173, 2.27553, 0.44", "32.8438, -28.3487, 2.34273, 0.59", "34.0213, -28.9267, 2.22804, 0.66", "34.7784, -29.3775, 1.99528, 0.44", "35.7568, -30.0924, 1.49203, 0.59", "36.569, -30.7823, 0.880729, 0.81", "37.3041, -31.4869, 0.130035, 0.52", "37.8302, -32.0045, -0.483293, 0.37", "38.4772, -32.6531, -1.28335, 0.37", "39.0592, -33.2618, -1.96257, 0.52", "39.8687, -34.1758, -2.79204, 0.59", "40.3391, -34.7309, -3.20014, 0.88", "41.2137, -35.7757, -3.82637, 0.37", "41.5461, -36.1809, -4.00898, 0.37", "42.2537, -37.0511, -4.26795, 0.66", "43.1793, -38.1694, -4.51997, 0.37", "43.7524, -38.8298, -4.64771, 0.37", "44.3322, -39.4887, -4.81516, 0.66", "45.1418, -40.4178, -5.19248, 0.29", "45.5212, -40.8496, -5.48896, 0.29", "45.9292, -41.3408, -6.01358, 0.29", "46.2924, -41.8456, -6.69542, 0.29", "46.6074, -42.4433, -7.44559, 0.52", "46.8307, -42.9976, -7.98138, 0.74", "47.0608, -43.6699, -8.39023, 0.44", "47.3489, -44.5353, -8.6695, 0.37", "47.6185, -45.3067, -8.79465, 0.52", "48.028, -46.4503, -8.8966, 0.81", "48.4631, -47.677, -8.98345, 0.59", "48.847, -48.7844, -9.08501, 0.52", "49.1208, -49.6155, -9.18755, 0.44", "49.2994, -50.243, -9.28933, 0.44", "49.4834, -51.0521, -9.44521, 0.22", "49.6683, -52.1292, -9.63797, 0.66", "49.8028, -53.1351, -9.82566, 0.37", "50.0019, -54.448, -10.0839, 0.59", "50.2206, -55.6765, -10.2772, 0.37", "50.3807, -56.4468, -10.3476, 0.66", "50.6365, -57.548, -10.3541, 0.44", "50.8791, -58.4856, -10.3046, 0.29", "51.1477, -59.4189, -10.2582, 0.22", "51.3607, -60.0926, -10.272, 0.22", "51.6053, -60.8005, -10.347, 0.59", "51.8161, -61.4116, -10.4607, 0.22", "52.0628, -62.1506, -10.7148, 0.22", "52.3109, -62.8588, -11.0191, 0.29", "52.5511, -63.5271, -11.4025, 0.29", "52.701, -63.9225, -11.6759, 0.29", "52.9182, -64.5035, -12.1194, 0.37", "53.272, -65.4809, -12.9048, 0.44", "53.5281, -66.2294, -13.4856, 0.66", "53.882, -67.3727, -14.3082, 0.74", "54.0994, -68.1645, -14.8278, 0.74", "54.2771, -68.9495, -15.28, 0.37", "54.4486, -69.9211, -15.737, 0.22", "54.5789, -70.8038, -16.0414, 0.29", "54.6693, -71.3973, -16.2116, 0.44", "54.7608, -71.9164, -16.3383, 0.52", "54.984, -73.0457, -16.6744, 0.22", "55.1373, -73.7334, -16.9595, 0.29", "55.3126, -74.4594, -17.4863, 0.22", "55.4671, -75.0685, -18.1901, 0.22", "55.587, -75.6122, -18.9142, 0.52", "55.7138, -76.3023, -19.8212, 0.37", "55.7595, -76.5649, -20.1294, 0.37", "55.8304, -77.1054, -20.6599, 0.22", "55.8747, -77.692, -21.1383, 0.22", "55.9398, -78.7963, -21.8886, 0.29", "56.012, -79.5776, -22.3562, 0.37", "56.1408, -80.6626, -22.9749, 0.22", "56.2652, -81.5565, -23.5185, 0.44", "56.4056, -82.3799, -24.0386, 0.44", "56.5475, -83.0706, -24.4908, 0.15", "56.7355, -83.8757, -25.0254, 0.15", "56.8239, -84.2706, -25.2649, 0.29", "57.0027, -85.2566, -25.7892, 0.37", "57.138, -86.1717, -26.215, 0.22", "57.2086, -86.7165, -26.4544, 0.22", "57.2872, -87.5277, -26.8187, 0.22", "57.3548, -88.5709, -27.3023, 0.22", "57.3717, -89.248, -27.6254, 0.22", "57.3803, -89.782, -27.9092, 0.22", "57.3817, -90.1633, -28.1568, 0.22", "57.3905, -90.4459, -28.3701, 0.22", "57.4041, -90.7048, -28.5959, 0.22", "57.468, -91.3777, -29.3639, 0.22", "57.5637, -92.004, -29.9794, 0.22", "61.8463, -99.4145, -33.0351, 0.22", "65.8456, -107.119, -35.7691, 0.22", "70.2608, -114.276, -39.1846, 0.22", "75.4246, -121.145, -42.0915, 0.22", "81.1891, -128.078, -43.1992, 0.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999967977018533,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-0.15174, 11.038, 1.18279, 1.84", "-0.15174, 11.038, 1.18279, 1.84", "7.81982E-4, 12.4317, 1.5797, 1.03", "0.128822, 13.5005, 1.86518, 0.88", "0.334424, 15.2167, 2.32358, 0.96", "0.537687, 16.9134, 2.77677, 0.96", "0.652991, 17.8758, 3.03384, 0.88", "0.753116, 18.7519, 3.25715, 1.47", "0.842738, 19.6448, 3.45727, 1.99" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999967977018533
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.60827, 7.30701, 2.52279, 2.51", "4.60827, 7.30701, 2.52279, 2.51", "5.05462, 8.18829, 2.94783, 1.62", "5.44357, 8.95623, 3.3182, 1.62", "5.93708, 9.93059, 3.78814, 1.47", "6.38205, 10.8092, 4.21186, 1.62", "6.95464, 11.9397, 4.7571, 1.7", "7.32522, 12.7156, 5.14001, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999967977018533
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.27443, 11.6334, 0.0348418, 0.912474", "-2.03208, 26.6143, 0.0348418, 0.912474", "-2.78974, 41.5951, 0.0348418, 0.912474" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-4.24973, -5.16444, 21.4993, 0.44", "-5.54034, -3.96253, 26.6985, 0.44", "-6.05522, -3.58502, 28.3206, 0.88", "-6.54333, -3.27974, 29.6432, 0.88", "-7.20677, -2.92502, 31.1928, 0.66", "-7.94942, -2.61823, 32.7352, 0.59", "-8.61017, -2.40001, 33.9834, 0.81", "-9.72855, -2.1175, 35.6454, 0.29", "-10.2126, -2.01325, 36.3236, 0.81", "-11.0516, -1.86487, 37.4092, 1.03", "-12.4303, -1.63323, 39.0386, 0.22", "-12.9009, -1.54313, 39.5817, 0.22", "-13.7477, -1.31426, 40.6131, 0.44", "-14.9345, -0.818919, 42.2392, 1.25", "-15.5527, -0.479224, 43.1441, 1.55", "-16.7165, 0.3537, 45.0171, 0.22", "-17.275, 0.832366, 45.9216, 0.74", "-17.815, 1.31872, 46.7659, 0.74", "-18.7561, 2.14342, 48.076, 0.22", "-19.5145, 2.80554, 49.025, 0.74", "-20.2264, 3.44826, 49.9083, 1.03", "-20.7805, 3.9549, 50.5979, 0.22", "-21.4219, 4.53165, 51.4452, 0.59", "-21.9043, 4.96294, 52.1194, 0.29", "-22.6522, 5.66381, 53.2668, 0.15", "-23.4731, 6.57064, 54.7081, 1.11", "-24.0502, 7.39295, 55.9037, 0.37", "-24.6593, 8.53133, 57.4282, 0.37", "-24.9084, 9.14498, 58.1599, 0.37", "-25.2046, 10.0785, 59.1396, 0.74", "-25.4251, 10.997, 59.8988, 1.03", "-25.7265, 12.566, 60.873, 0.15", "-25.8585, 13.33, 61.2141, 0.22", "-26.014, 14.1572, 61.461, 0.52", "-26.069, 14.427, 61.5204, 0.52", "-26.3653, 15.8204, 61.7463, 0.15", "-26.5481, 16.6643, 61.8598, 0.37", "-26.6869, 17.2948, 61.9689, 0.15", "-26.9133, 18.2786, 62.1911, 0.59", "-27.259, 19.7383, 62.6025, 0.22", "-27.4143, 20.469, 62.9079, 1.03", "-27.5214, 21.073, 63.2491, 1.47", "-27.7676, 22.8381, 64.4825, 0.15", "-27.8497, 23.6016, 65.1038, 0.96", "-27.8935, 24.1291, 65.5806, 0.96", "-28.0275, 25.9935, 67.3674, 0.15", "-28.0794, 26.6997, 68.0479, 0.44", "-28.1773, 27.9179, 69.1733, 0.15", "-28.2417, 28.6598, 69.7833, 0.15", "-28.3072, 29.2736, 70.2047, 0.44", "-28.4431, 30.2601, 70.7491, 0.22", "-28.6177, 31.2667, 71.1465, 0.96", "-28.828, 32.4755, 71.529, 0.15", "-28.9829, 33.4926, 71.8157, 0.15", "-29.096, 34.3173, 72.0895, 0.52", "-29.1956, 35.2785, 72.4776, 0.52", "-29.2725, 36.3709, 72.9726, 0.15", "-29.326, 37.2809, 73.4118, 0.44", "-29.4102, 38.93, 74.2883, 0.15", "-29.4723, 40.4901, 75.2123, 0.15", "-29.5048, 41.5129, 75.8761, 0.96", "-29.5109, 42.508, 76.5704, 0.15" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-4.24973, -5.16444, 21.4993, 0.74", "-5.27802, -7.16837, 24.3796, 0.74", "-5.79409, -8.2891, 26.2421, 0.81", "-6.44386, -9.88482, 29.0571, 0.52", "-6.76101, -10.785, 30.7638, 0.81", "-7.02372, -11.6257, 32.4347, 0.59", "-7.35444, -12.7838, 34.7067, 0.37", "-7.75575, -14.1141, 37.5864, 0.66", "-7.81309, -14.3939, 38.2201, 0.81", "-7.85723, -15.3798, 40.5418, 0.74", "-7.76994, -16.0302, 42.284, 1.33", "-7.67562, -16.3655, 43.3186, 1.33" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "29.4428, 4.91161, 31.7267, 0.22", "29.6334, 4.54761, 31.8767, 0.22", "29.7018, 4.3426, 31.9307, 0.22", "29.7533, 4.15238, 31.9537, 0.22", "29.8199, 3.92322, 31.9691, 0.22", "29.894, 3.68918, 31.983, 0.22", "30.0004, 3.37855, 32.0156, 0.22", "30.1413, 3.02049, 32.0838, 0.29", "30.2748, 2.67827, 32.1701, 0.81", "30.3896, 2.41672, 32.2575, 0.96", "30.6519, 1.88434, 32.5063, 0.37", "30.8533, 1.52514, 32.7324, 1.18", "31.1578, 1.02131, 33.133, 0.29", "31.309, 0.769102, 33.3895, 0.22", "31.5041, 0.45195, 33.7879, 0.29", "31.7204, 0.0933279, 34.3068, 0.29", "31.8963, -0.229078, 34.818, 0.29", "32.0289, -0.558537, 35.3269, 0.88", "32.1567, -1.0244, 35.9575, 0.37", "32.2507, -1.55442, 36.5516, 0.29", "32.3057, -2.04907, 36.9845, 0.37", "32.3647, -2.60713, 37.3559, 0.74", "32.4594, -3.51031, 37.7837, 0.22", "32.5548, -4.37242, 38.0444, 0.37", "32.6372, -5.16054, 38.1828, 0.22", "32.6847, -5.68204, 38.2165, 0.22", "32.7443, -6.17177, 38.1985, 0.22", "32.8064, -6.48731, 38.1556, 0.22", "32.9692, -6.99277, 38.0397, 0.22" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "29.4428, 4.91161, 31.7267, 0.22", "29.6781, 5.14094, 31.7781, 0.22", "30.004, 5.36987, 31.8284, 0.29", "30.4895, 5.6192, 31.8801, 0.59", "31.0577, 5.89659, 31.9302, 0.66", "31.6719, 6.21688, 32.0067, 0.44", "32.0858, 6.44765, 32.0873, 0.66", "32.7155, 6.79339, 32.2345, 0.88", "33.5938, 7.23813, 32.4632, 0.37", "34.2922, 7.56171, 32.6416, 0.37", "34.9099, 7.83952, 32.8002, 0.44", "35.5574, 8.14638, 32.985, 0.22", "35.8259, 8.29555, 33.068, 0.22", "36.0395, 8.43015, 33.1345, 0.22", "36.4548, 8.68549, 33.2419, 0.22", "36.7605, 8.83308, 33.2741, 0.29", "37.1734, 9.01347, 33.2803, 0.29", "37.7953, 9.28732, 33.2564, 0.52", "38.3177, 9.54211, 33.2529, 0.29", "38.6775, 9.73747, 33.267, 0.22", "39.3194, 10.1099, 33.3398, 0.29" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-13.6129, -7.0742, 14.4122, 0.52", "-14.2848, -8.89534, 14.5821, 0.52", "-14.7324, -9.78376, 14.7054, 0.74", "-15.7014, -11.2551, 14.9535, 1.11", "-16.7848, -12.613, 15.2209, 1.11", "-17.8215, -13.8047, 15.4884, 0.81", "-18.4708, -14.5525, 15.6405, 0.74", "-19.2875, -15.3972, 15.8723, 0.81", "-19.933, -15.9218, 16.0143, 0.52", "-20.4253, -16.1907, 16.0668, 0.52", "-21.478, -16.6381, 16.0449, 0.74", "-22.5354, -17.0907, 15.9619, 0.52", "-23.6861, -17.6713, 15.8971, 0.52", "-24.5853, -18.1958, 15.8654, 0.52", "-25.5537, -18.7891, 15.8895, 0.88", "-26.6446, -19.4856, 15.9929, 0.59", "-27.7618, -20.2116, 16.1761, 0.59", "-28.6953, -20.8524, 16.4108, 0.81", "-29.656, -21.5701, 16.7305, 0.74", "-30.4542, -22.1847, 17.0544, 0.44", "-31.1057, -22.6644, 17.3345, 0.44", "-31.4685, -22.8726, 17.4848, 0.44", "-31.8859, -23.025, 17.6087, 0.44", "-32.8773, -23.2821, 17.8185, 0.59", "-33.7008, -23.4268, 17.9755, 0.59", "-34.7671, -23.5494, 18.1553, 0.66", "-35.4301, -23.6053, 18.2882, 0.66", "-37.1357, -23.7614, 18.7325, 0.52", "-38.3001, -23.9078, 19.1229, 0.52", "-40.0105, -24.2588, 19.8315, 0.37", "-40.8807, -24.4783, 20.2333, 0.37", "-41.6687, -24.7135, 20.6237, 0.37", "-42.5306, -25.0589, 21.0949, 0.66", "-43.2657, -25.5019, 21.5643, 0.96", "-44.285, -26.373, 22.3125, 0.44", "-45.0578, -27.2468, 22.9517, 0.44", "-45.7624, -28.0885, 23.5562, 0.44", "-46.5642, -29.0148, 24.2427, 0.74", "-47.3545, -29.8696, 24.9075, 0.52", "-47.9353, -30.4638, 25.4031, 0.52", "-48.7675, -31.2888, 26.1889, 0.96", "-49.5474, -32.0909, 27.0263, 0.52", "-50.1791, -32.6622, 27.6605, 0.52", "-50.5599, -32.9182, 27.9716, 0.29", "-50.9717, -33.1234, 28.2536, 0.29", "-51.3454, -33.2985, 28.5003, 0.29", "-51.8072, -33.5458, 28.8083, 0.29", "-52.8268, -34.2283, 29.491, 0.81", "-53.8069, -34.9612, 30.1417, 0.59", "-55.2763, -36.1561, 31.1585, 0.29", "-56.0, -36.7731, 31.7067, 0.44", "-57.1924, -37.8005, 32.7116, 0.81", "-58.2469, -38.733, 33.6911, 0.52", "-58.809, -39.2928, 34.2719, 0.37", "-59.3938, -39.965, 34.9021, 0.81", "-60.346, -41.1805, 35.9953, 0.66", "-61.2437, -42.3181, 37.0361, 0.66", "-62.0616, -43.2837, 37.9965, 0.59", "-62.8297, -44.1171, 38.8798, 0.59", "-63.5709, -44.8541, 39.694, 0.59", "-64.3541, -45.5991, 40.5228, 0.52", "-65.1237, -46.2902, 41.3092, 0.66", "-65.8985, -46.9145, 42.0707, 0.52", "-66.8177, -47.5303, 42.8975, 0.66", "-67.8413, -48.0487, 43.7327, 0.88", "-68.9243, -48.4656, 44.5576, 0.44", "-69.9047, -48.7778, 45.2826, 0.37", "-70.8026, -49.0473, 45.9901, 0.44", "-71.8285, -49.3679, 46.8483, 0.29", "-72.7066, -49.6435, 47.5753, 0.29", "-73.7522, -49.95, 48.4596, 0.88", "-74.7771, -50.2019, 49.366, 0.74", "-76.043, -50.4807, 50.6667, 0.59", "-76.9788, -50.6623, 51.8107, 0.66", "-78.0708, -50.8469, 53.2555, 0.44", "-78.7532, -50.9577, 54.1516, 0.44", "-79.4475, -51.0731, 55.0246, 0.74", "-80.6478, -51.3059, 56.4851, 0.74", "-81.6025, -51.5335, 57.6274, 0.81", "-82.44, -51.7569, 58.5777, 0.59", "-83.3408, -52.0199, 59.4895, 0.88", "-84.196, -52.281, 60.1979, 0.59", "-84.9223, -52.4762, 60.6771, 0.52", "-86.069, -52.6869, 61.2494, 0.52", "-87.4796, -52.8302, 61.8121, 0.59", "-89.064, -52.9396, 62.3337, 0.52", "-90.1877, -52.9699, 62.6071, 0.59", "-91.4773, -52.9311, 62.8866, 0.81", "-92.8019, -52.8125, 63.1699, 0.52", "-93.5197, -52.7025, 63.343, 0.52", "-94.9241, -52.444, 63.7716, 0.44", "-95.6334, -52.31, 64.0185, 0.44", "-97.205, -52.0872, 64.5905, 0.74", "-98.2761, -52.0077, 64.9985, 0.96", "-99.9795, -52.0215, 65.6895, 0.66", "-100.715, -52.0818, 65.9975, 0.81", "-102.013, -52.2962, 66.5136, 0.59", "-103.501, -52.6734, 66.9942, 0.81", "-104.315, -52.9401, 67.1801, 0.59", "-105.284, -53.297, 67.3597, 0.74", "-105.908, -53.535, 67.4596, 0.59", "-106.909, -53.8837, 67.6383, 0.29", "-108.5, -54.4349, 67.9889, 0.37", "-109.509, -54.7965, 68.26, 0.88", "-110.362, -55.0987, 68.5404, 0.74", "-110.981, -55.3139, 68.7834, 1.03", "-112.436, -55.8379, 69.4946, 0.44", "-113.519, -56.2875, 70.1665, 0.74", "-114.334, -56.6916, 70.77, 0.59", "-115.293, -57.1705, 71.5417, 0.37", "-116.298, -57.6267, 72.394, 0.52", "-117.321, -58.0064, 73.2936, 0.81", "-118.269, -58.2631, 74.1493, 0.96", "-119.315, -58.4803, 75.1208, 0.44", "-120.196, -58.6604, 75.9926, 0.44", "-121.076, -58.8959, 76.9261, 0.59", "-121.787, -59.1377, 77.7577, 0.66", "-122.252, -59.3344, 78.3205, 0.37", "-122.749, -59.5471, 78.9187, 0.37", "-123.253, -59.7623, 79.5104, 0.37", "-123.899, -60.0746, 80.2177, 0.88", "-124.621, -60.4849, 80.9056, 1.03", "-125.803, -61.1949, 81.8635, 0.29", "-126.536, -61.6221, 82.327, 0.29", "-127.19, -61.9404, 82.6353, 0.29", "-127.837, -62.2091, 82.8635, 0.44", "-128.72, -62.5198, 83.1114, 0.74", "-129.528, -62.7864, 83.297, 0.74", "-130.371, -63.0493, 83.4697, 0.22", "-131.598, -63.4035, 83.7203, 0.22", "-132.58, -63.5924, 83.9142, 0.37", "-133.849, -63.6543, 84.1378, 0.74", "-134.6, -63.5897, 84.2469, 0.74", "-135.493, -63.4282, 84.3253, 0.22", "-135.971, -63.3148, 84.3324, 0.22", "-136.9, -63.029, 84.2173, 0.22", "-137.604, -62.7615, 84.045, 0.22", "-138.076, -62.572, 83.884, 0.29", "-139.035, -62.2087, 83.5067, 0.81", "-140.428, -61.7679, 82.8973, 0.37", "-141.377, -61.5208, 82.4451, 0.37", "-142.146, -61.3283, 82.0345, 0.22", "-142.489, -61.2214, 81.8153, 0.22", "-142.898, -61.06, 81.5116, 0.22", "-143.263, -60.8989, 81.2155, 0.22", "-143.852, -60.6403, 80.7495, 0.37", "-144.818, -60.2975, 80.1145, 0.74", "-145.643, -60.0378, 79.6786, 0.29", "-146.095, -59.8844, 79.5056, 0.29", "-146.895, -59.6177, 79.2968, 0.29", "-147.764, -59.3997, 79.1449, 0.29", "-149.012, -59.1565, 78.979, 0.59", "-149.921, -58.994, 78.8888, 0.37", "-151.082, -58.7763, 78.7798, 0.22", "-151.755, -58.6505, 78.7011, 0.22", "-152.883, -58.4516, 78.5559, 0.29", "-153.912, -58.3194, 78.4521, 0.22", "-154.559, -58.2517, 78.4298, 0.22", "-155.27, -58.1927, 78.4824, 0.22", "-156.214, -58.1314, 78.6621, 0.29", "-157.0, -58.0408, 78.9701, 0.29", "-157.742, -57.888, 79.3891, 0.29", "-158.642, -57.6499, 80.0201, 0.15", "-159.444, -57.3518, 80.6447, 0.15", "-160.11, -57.0274, 81.218, 0.74", "-160.994, -56.5195, 82.0029, 0.22", "-161.624, -56.1276, 82.5257, 0.22", "-161.956, -55.9341, 82.7497, 0.22", "-162.654, -55.583, 83.1139, 0.52", "-163.725, -55.13, 83.4963, 0.22", "-164.236, -54.9721, 83.6109, 0.59", "-165.06, -54.81, 83.7249, 0.22", "-166.494, -54.6841, 83.8958, 0.29", "-167.173, -54.6835, 83.9674, 0.29", "-168.314, -54.7652, 84.0946, 0.66", "-169.696, -54.9111, 84.2311, 0.22", "-170.408, -55.0184, 84.3137, 0.29", "-171.416, -55.2463, 84.4486, 0.22", "-172.155, -55.4565, 84.5584, 0.59", "-173.124, -55.7635, 84.7097, 0.22", "-173.971, -56.0508, 84.8387, 0.29", "-174.642, -56.2737, 84.932, 0.22", "-175.458, -56.5208, 85.0319, 0.22", "-175.901, -56.6347, 85.0756, 0.22", "-176.687, -56.8059, 85.1449, 0.37", "-177.571, -57.006, 85.2096, 0.15", "-178.567, -57.2326, 85.2953, 0.15", "-179.851, -57.4754, 85.4176, 0.15", "-180.517, -57.5743, 85.4873, 0.15", "-181.144, -57.6709, 85.5604, 0.59" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-13.6129, -7.0742, 14.4122, 0.59", "-14.0797, -6.11229, 15.4846, 0.59", "-14.6522, -5.07044, 16.3735, 0.44", "-14.9917, -4.55432, 16.6961, 0.52", "-15.4149, -4.01387, 16.9914, 0.52", "-15.8286, -3.53388, 17.2745, 0.52", "-16.7531, -2.45226, 17.9437, 0.88", "-17.1675, -1.94476, 18.2139, 0.88", "-18.0613, -0.79414, 18.7941, 0.59", "-18.8727, 0.280146, 19.3387, 0.52", "-19.5879, 1.3187, 19.8423, 0.52", "-20.2086, 2.36026, 20.2511, 0.66", "-20.6679, 3.28573, 20.54, 0.74", "-21.117, 4.37052, 20.7937, 0.88", "-21.43, 5.36953, 20.989, 1.03", "-21.871, 7.12486, 21.3158, 0.74", "-22.308, 9.06926, 21.6918, 0.59", "-22.5225, 10.1015, 21.9483, 0.59", "-22.7416, 11.2972, 22.3513, 0.81", "-23.0437, 13.129, 23.1303, 0.52", "-23.3708, 14.9943, 24.1511, 0.66", "-23.5644, 15.8217, 24.7566, 0.96", "-23.8853, 16.6807, 25.5941, 0.96", "-24.408, 17.4769, 26.6001, 0.44", "-24.8524, 17.833, 27.2183, 0.44", "-25.6881, 18.136, 28.0796, 0.44", "-26.7647, 18.2813, 29.031, 0.59", "-28.0129, 18.3353, 30.0344, 0.52", "-28.8783, 18.3493, 30.6801, 0.52", "-29.7517, 18.3853, 31.3315, 1.03", "-30.9435, 18.5486, 32.2588, 0.74", "-32.0835, 18.8784, 33.205, 0.88", "-33.2612, 19.394, 34.291, 0.52", "-33.823, 19.6867, 34.8717, 0.52", "-34.6905, 20.1547, 35.8209, 0.74", "-35.5537, 20.6248, 36.8161, 0.52", "-36.2713, 20.9955, 37.682, 0.52", "-37.3528, 21.4584, 38.9705, 0.81", "-38.3561, 21.8083, 40.1425, 1.03", "-39.5899, 22.1754, 41.5628, 0.44", "-40.6758, 22.4547, 42.773, 0.88", "-41.7585, 22.7285, 43.9399, 0.66", "-42.515, 22.965, 44.6868, 0.29", "-43.1062, 23.2373, 45.2008, 0.29", "-43.8824, 23.7791, 45.8008, 0.29", "-44.3904, 24.235, 46.1549, 0.29", "-44.72, 24.5353, 46.3493, 0.29", "-45.4511, 25.1156, 46.7373, 0.29", "-46.1857, 25.5858, 47.1119, 0.59", "-47.5544, 26.3157, 47.8222, 0.81", "-48.2678, 26.6519, 48.2272, 0.96", "-49.1927, 27.0621, 48.7895, 0.52", "-50.4981, 27.6511, 49.6841, 0.81", "-51.4692, 28.1286, 50.4746, 0.22", "-52.2097, 28.4883, 51.126, 0.22", "-53.2018, 28.9871, 52.0901, 0.81", "-53.7726, 29.3039, 52.7166, 1.18", "-54.9097, 30.0314, 54.1715, 0.37", "-55.5978, 30.5549, 55.2383, 0.37" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-39.916, 9.08719, 71.771, 0.88", "-40.8725, 8.26804, 71.9296, 0.88", "-42.1324, 7.18898, 72.1385, 0.29", "-43.3379, 6.15653, 72.3384, 0.74" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-39.916, 9.08719, 71.771, 0.22", "-41.1331, 9.0409, 73.1705, 0.22", "-41.9038, 9.01114, 74.0446, 0.29", "-42.6998, 8.96764, 75.0483, 0.29", "-43.688, 8.90286, 76.3271, 0.22", "-44.6179, 8.83618, 77.5046, 0.88", "-45.7421, 8.7362, 78.9163, 1.92", "-47.1415, 8.56464, 80.647, 0.44", "-48.4755, 8.39667, 82.2644, 0.59", "-49.1056, 8.3245, 82.995, 0.37", "-49.6221, 8.28009, 83.562, 0.74", "-50.8789, 8.20069, 84.7894, 0.22", "-51.7419, 8.17892, 85.5487, 0.22", "-52.1777, 8.18838, 85.9061, 0.96", "-52.9162, 8.24593, 86.4756, 1.4", "-54.6792, 8.44907, 87.8989, 0.22", "-55.6961, 8.5987, 88.7611, 0.22", "-56.081, 8.66315, 89.0952, 0.22", "-57.0666, 8.79831, 90.0131, 0.22", "-57.7451, 8.87207, 90.7088, 0.22", "-58.241, 8.90589, 91.234, 0.74", "-58.9247, 8.9109, 91.9596, 1.33", "-59.8503, 8.89263, 92.906, 0.74", "-61.1501, 8.83765, 94.2092, 0.15", "-61.6922, 8.80591, 94.7321, 0.15", "-62.4483, 8.74871, 95.4476, 0.81", "-63.5671, 8.66597, 96.5077, 0.22", "-64.4144, 8.6206, 97.3115, 0.59", "-65.4721, 8.58374, 98.3222, 0.15", "-65.8948, 8.57092, 98.738, 0.15", "-66.4388, 8.55697, 99.2763, 0.44", "-67.1559, 8.54019, 100.006, 0.96", "-68.6592, 8.49405, 101.538, 0.22", "-69.5721, 8.44017, 102.475, 0.74", "-70.4522, 8.3871, 103.36, 0.15", "-71.0533, 8.36936, 103.968, 0.44", "-72.0328, 8.36708, 104.945, 0.29", "-72.7395, 8.36735, 105.637, 0.29", "-73.5961, 8.36536, 106.479, 0.07", "-74.0528, 8.37715, 106.923, 0.96", "-75.3147, 8.38724, 108.177, 0.15", "-75.7714, 8.37115, 108.648, 0.88", "-76.7593, 8.30363, 109.689, 0.22", "-77.3229, 8.22943, 110.299, 0.22", "-78.0807, 8.06461, 111.109, 0.81", "-79.184, 7.70857, 112.27, 0.15", "-79.9824, 7.3928, 113.092, 0.15", "-80.7009, 7.0791, 113.831, 0.59", "-81.5499, 6.67987, 114.689, 0.96", "-82.5369, 6.16954, 115.681, 0.15", "-83.213, 5.77065, 116.358, 0.74" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-19.7053, 19.1561, 11.3471, 0.52", "-20.4919, 19.1874, 12.0798, 0.52", "-21.5432, 19.3385, 13.1367, 0.52", "-22.5745, 19.6196, 14.3043, 0.81", "-23.4579, 19.9148, 15.4415, 0.44", "-24.2269, 20.1572, 16.4916, 0.74", "-24.8832, 20.3271, 17.4644, 0.44", "-25.5531, 20.4584, 18.6519, 0.44", "-26.2377, 20.535, 20.1505, 0.74", "-26.9359, 20.5625, 21.8353, 1.03", "-27.6418, 20.5254, 23.5307, 0.66", "-28.5518, 20.4169, 25.4817, 0.66", "-29.6292, 20.218, 27.5094, 0.59", "-30.6813, 19.9732, 29.2228, 0.59", "-31.3081, 19.8074, 30.1435, 0.44", "-32.1294, 19.5906, 31.2596, 0.81", "-33.1765, 19.2848, 32.6388, 0.29", "-33.8106, 19.0861, 33.4059, 0.52", "-35.0424, 18.7117, 34.7995, 0.81", "-36.457, 18.3167, 36.4433, 0.52", "-37.6422, 18.0169, 37.9595, 0.52", "-38.4626, 17.8709, 39.1139, 0.29", "-39.0593, 17.8388, 39.9671, 0.29", "-39.7311, 17.9918, 40.7826, 0.37", "-40.691, 18.4547, 41.8094, 0.37", "-41.1736, 18.7567, 42.3081, 0.66", "-42.1321, 19.4092, 43.2998, 1.33", "-42.6117, 19.72, 43.7705, 1.18", "-44.1168, 20.5649, 45.1839, 0.52", "-45.2567, 21.0765, 46.2212, 0.81", "-46.185, 21.4057, 47.0726, 0.44", "-46.9236, 21.6311, 47.7563, 0.44", "-47.9938, 21.9464, 48.7382, 0.44", "-49.0038, 22.2553, 49.6682, 0.96", "-50.0611, 22.5807, 50.6241, 0.44", "-51.467, 23.0517, 51.8404, 0.88", "-52.9622, 23.5964, 53.1392, 0.52", "-54.3282, 24.1099, 54.4203, 0.44", "-55.4341, 24.5342, 55.5866, 0.52" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-19.7053, 19.1561, 11.3471, 0.37", "-20.3496, 19.2587, 10.849, 0.37", "-21.1097, 19.4655, 10.2811, 0.29", "-21.8469, 19.7702, 9.74128, 0.59", "-22.4878, 20.127, 9.29055, 0.44", "-22.9533, 20.4217, 8.96502, 0.74", "-23.3896, 20.7211, 8.67537, 0.44", "-23.9237, 21.087, 8.39281, 0.29", "-24.3642, 21.4081, 8.21061, 0.74", "-24.9855, 21.8734, 7.9855, 0.44", "-25.5545, 22.2304, 7.80498, 0.74", "-26.1097, 22.4605, 7.63586, 0.74", "-26.5255, 22.5552, 7.53388, 0.74", "-27.2782, 22.6533, 7.39538, 0.66", "-27.8736, 22.6984, 7.33259, 0.52", "-28.6552, 22.7289, 7.35415, 0.59", "-29.3326, 22.7749, 7.49138, 0.29", "-29.9777, 22.8522, 7.66295, 0.29", "-30.3921, 22.9424, 7.77651, 0.59", "-30.9197, 23.1288, 7.90751, 0.37", "-31.7743, 23.5347, 8.11809, 0.59", "-32.9979, 24.2261, 8.44221, 0.88", "-33.6953, 24.6522, 8.623, 0.88", "-34.4109, 25.1104, 8.78358, 0.44", "-35.1002, 25.608, 8.88729, 0.44", "-35.7102, 26.1723, 8.8949, 0.44", "-36.2254, 26.8135, 8.80643, 0.52", "-36.5809, 27.3664, 8.67746, 0.29", "-36.7217, 27.6011, 8.62435, 0.29", "-37.2993, 28.5342, 8.36247, 0.81", "-37.8763, 29.3934, 8.07685, 0.37", "-38.1661, 29.8231, 7.90466, 0.37", "-38.5854, 30.4783, 7.66117, 0.37", "-38.9294, 31.0375, 7.50809, 0.66", "-39.3278, 31.6811, 7.38437, 0.96", "-39.8121, 32.4015, 7.31924, 0.44", "-40.0645, 32.7456, 7.28461, 0.44", "-40.6402, 33.5005, 7.10897, 0.44", "-41.0003, 33.9644, 6.92613, 0.29", "-41.3851, 34.4072, 6.67085, 0.29", "-41.9056, 34.9121, 6.3062, 0.59", "-42.5288, 35.4019, 5.85841, 0.29", "-43.1798, 35.8565, 5.43893, 0.81", "-43.5161, 36.0822, 5.23245, 0.37", "-44.1403, 36.5177, 4.8954, 0.29", "-44.5503, 36.8189, 4.70891, 0.29", "-44.8976, 37.0962, 4.57959, 0.37", "-45.6197, 37.7218, 4.37167, 0.52", "-46.049, 38.1085, 4.27858, 0.52", "-46.5321, 38.5333, 4.18757, 0.37", "-47.0902, 39.0044, 4.07803, 0.59", "-47.6029, 39.4173, 3.95189, 0.37", "-48.216, 39.9146, 3.77726, 0.59", "-48.7406, 40.3485, 3.60884, 0.29", "-49.0829, 40.6756, 3.49623, 0.29", "-49.5034, 41.1532, 3.3684, 0.29", "-49.7231, 41.4563, 3.29773, 0.44", "-50.1507, 42.1294, 3.13367, 0.59", "-50.5279, 42.7985, 2.96369, 0.66", "-51.0554, 43.8186, 2.67522, 0.37", "-51.3535, 44.437, 2.4984, 0.22", "-51.7322, 45.2202, 2.27892, 0.59", "-51.9972, 45.7112, 2.13111, 0.59", "-52.4477, 46.4134, 1.86249, 0.29", "-52.8493, 46.9611, 1.60149, 0.29", "-53.2338, 47.4233, 1.3181, 0.44", "-53.5185, 47.7381, 1.08685, 0.29", "-53.7973, 48.0191, 0.853605, 0.44", "-54.2345, 48.4499, 0.506897, 0.22", "-54.5447, 48.7255, 0.265994, 0.22", "-54.9382, 49.0637, -0.0336609, 0.22", "-55.3144, 49.3991, -0.338095, 0.88", "-55.8175, 49.9473, -0.768863, 0.74", "-56.2787, 50.5966, -1.17114, 0.07", "-61.312, 55.4379, -1.88911, 0.07", "-66.0972, 60.5906, -1.97622, 0.07", "-71.356, 65.1093, -0.912502, 0.07" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "9.43144, -1.54593, 8.96123, 0.74", "9.45336, -1.15447, 10.1033, 0.74", "9.54042, -0.865308, 11.3013, 0.74", "9.69523, -0.53427, 12.796, 0.81", "9.96755, -0.020743, 14.8057, 1.03", "10.34, 0.576793, 16.8706, 1.03", "10.8216, 1.20341, 18.8917, 0.81", "11.452, 1.75787, 20.9081, 0.52", "11.7732, 1.93575, 21.7702, 0.52", "12.3906, 2.12314, 23.1657, 0.59", "12.9818, 2.19862, 24.3608, 0.66", "13.7754, 2.22563, 25.9377, 0.74", "14.7082, 2.17979, 27.9415, 0.66", "15.7887, 2.0185, 30.6929, 0.59", "16.1585, 1.9188, 31.8034, 0.81", "16.76, 1.70059, 33.8171, 0.81", "17.1213, 1.60627, 35.0954, 0.81", "17.397, 1.62341, 36.0444, 0.81", "17.9259, 1.91933, 37.6601, 0.59", "18.1528, 2.14293, 38.2832, 0.59", "18.5355, 2.6427, 39.3668, 0.44", "19.0127, 3.37901, 40.7667, 0.44", "19.5176, 4.23756, 42.2203, 0.44", "20.1818, 5.49511, 44.1034, 0.88", "20.4962, 6.26607, 45.0945, 0.88", "20.8255, 7.41067, 46.3927, 0.59", "21.0354, 8.6712, 47.6573, 0.81", "21.1005, 9.92889, 48.7833, 0.66", "21.0575, 11.2779, 49.8028, 0.66", "20.9421, 12.7027, 50.745, 0.66", "20.7976, 13.9223, 51.4792, 0.74", "20.6551, 15.0549, 52.0931, 0.52", "20.4545, 16.7429, 52.9941, 0.66", "20.3085, 18.1838, 53.8318, 0.52", "20.2464, 19.1683, 54.4254, 0.52", "20.2231, 20.6433, 55.352, 0.81", "20.2295, 22.0842, 56.2662, 0.59", "20.2619, 23.2494, 56.9731, 0.37", "20.2866, 24.104, 57.4555, 0.37", "20.293, 24.7758, 57.8748, 0.66", "20.2815, 25.6497, 58.5121, 0.52", "20.2204, 26.8723, 59.5231, 0.37", "20.1471, 27.7811, 60.2801, 0.66", "20.0584, 29.1591, 61.3547, 1.03", "19.9948, 30.9496, 62.7287, 0.59", "20.0171, 32.3403, 63.8155, 0.59", "20.0805, 33.3718, 64.6359, 0.59", "20.1812, 34.5892, 65.6621, 0.88", "20.2741, 35.9016, 66.8412, 0.22", "20.2817, 36.4065, 67.3091, 0.44", "20.2054, 37.4962, 68.3305, 0.74", "20.044, 38.9545, 69.7153, 0.44", "19.948, 39.8563, 70.5799, 0.81", "19.8925, 40.7405, 71.4177, 0.96", "19.8809, 42.2017, 72.7431, 0.44", "19.9479, 43.4758, 73.832, 0.52", "20.1028, 44.9037, 74.9612, 0.81", "20.3054, 46.0567, 75.7953, 0.66", "20.6842, 47.6814, 76.8575, 0.29", "20.9585, 48.6818, 77.4741, 0.29", "21.2475, 49.638, 78.0548, 0.74", "21.4849, 50.5816, 78.6473, 0.81", "21.6286, 51.4772, 79.2921, 0.29", "21.7055, 52.3851, 80.0572, 0.66", "21.6971, 53.1879, 80.8119, 0.22", "21.641, 54.0812, 81.7138, 1.11", "21.5384, 55.162, 82.8286, 0.52", "21.398, 56.2413, 84.0056, 0.29", "21.2172, 57.188, 85.1116, 0.29", "21.0861, 57.7678, 85.857, 0.29", "20.9526, 58.4319, 86.7431, 0.29", "20.8264, 59.1761, 87.7515, 1.18", "20.6411, 60.2466, 89.1925, 0.22", "20.4495, 61.0853, 90.3222, 0.22", "20.2469, 61.8566, 91.4329, 0.22", "20.137, 62.3242, 92.1978, 0.74", "20.0247, 62.7703, 93.0687, 0.29", "19.8439, 63.2413, 94.1497, 0.81", "19.6087, 63.6799, 95.1605, 0.37", "19.2791, 64.2447, 96.4073, 0.37", "19.0582, 64.6164, 97.1434, 0.37", "18.613, 65.4123, 98.6136, 0.81", "18.0652, 66.497, 100.424, 1.4", "17.5459, 67.5662, 102.085, 0.37", "17.1984, 68.3301, 103.181, 0.37", "16.8758, 69.1258, 104.237, 0.74", "16.5704, 69.9461, 105.267, 0.88", "16.0895, 71.3785, 106.947, 0.37", "15.6974, 72.5446, 108.303, 1.18", "15.2626, 73.6326, 109.597, 0.22", "14.802, 74.5396, 110.706, 0.88", "14.3388, 75.2813, 111.671, 0.22", "13.9548, 75.815, 112.405, 0.74", "13.2728, 76.6685, 113.616, 0.07", "12.6899, 77.3229, 114.489, 0.96", "11.8672, 78.1556, 115.507, 0.15", "11.2724, 78.7616, 116.154, 0.88", "10.3622, 79.8334, 117.077, 0.07", "10.1172, 80.2141, 117.288, 0.59", "9.31657, 81.9762, 117.677, 0.15", "8.99514, 82.9602, 117.597, 0.15", "8.74984, 83.9364, 117.317, 0.81", "8.57218, 84.736, 117.017, 0.81", "8.21379, 86.5467, 116.188, 0.07", "8.0849, 87.4099, 115.756, 0.74", "7.95505, 89.0992, 114.813, 0.07", "7.88895, 89.9217, 114.341, 0.37" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "9.43144, -1.54593, 8.96123, 0.88", "10.019, -2.65962, 10.3241, 0.88", "10.8859, -3.98421, 11.7889, 0.66", "12.0976, -5.3583, 13.2775, 0.52", "13.151, -6.2759, 14.3384, 0.81", "14.1854, -7.05946, 15.335, 0.66", "15.0361, -7.71097, 16.1693, 0.59", "16.1051, -8.56742, 17.1098, 0.88", "17.411, -9.60099, 18.0943, 0.66", "18.7093, -10.562, 18.9033, 0.44", "20.0605, -11.6118, 19.7302, 0.52", "21.337, -12.7957, 20.6426, 0.59", "22.1344, -13.7051, 21.3953, 0.44", "22.7964, -14.5436, 22.1388, 0.66", "23.893, -15.9779, 23.4502, 0.37", "24.9487, -17.2169, 24.6514, 0.88", "25.8091, -18.0511, 25.5902, 0.96", "27.6712, -19.4812, 27.63, 0.29", "28.8512, -20.2292, 29.0071, 0.59", "29.4697, -20.5726, 29.7884, 0.74", "30.6097, -21.1683, 31.3914, 0.44", "31.5539, -21.6293, 32.7696, 0.44", "32.263, -21.9949, 33.8446, 0.44", "33.1305, -22.4991, 35.2471, 0.44", "33.7691, -22.8939, 36.4187, 0.44", "34.3108, -23.1699, 37.3704, 0.44", "35.0126, -23.46, 38.5073, 0.44", "35.8233, -23.7645, 39.6712, 0.44", "36.7171, -24.1126, 40.831, 0.88", "37.4772, -24.4171, 41.7545, 0.88", "38.8417, -25.0134, 43.4071, 0.44", "39.9001, -25.6043, 44.7368, 0.44", "40.6644, -26.178, 45.7594, 0.66", "42.1864, -27.6278, 47.9296, 0.88", "43.0779, -28.6302, 49.278, 0.52", "43.9185, -29.6803, 50.5858, 0.29", "44.7698, -30.8289, 51.9883, 0.52", "45.3267, -31.5318, 52.845, 0.29", "46.1273, -32.456, 53.9917, 0.37", "46.9098, -33.3207, 55.0728, 0.37", "47.4918, -33.9234, 55.8737, 0.66", "48.4563, -34.8594, 57.2499, 1.18", "49.6305, -35.9679, 59.1033, 1.18", "50.5351, -36.8759, 60.7451, 0.52", "51.3726, -37.7838, 62.4557, 0.29", "52.0765, -38.5253, 63.9511, 0.88", "52.8142, -39.2357, 65.5219, 0.29", "53.9199, -40.2362, 67.8251, 0.96", "55.3914, -41.4932, 70.837, 0.22", "56.0693, -42.0408, 72.1565, 0.37", "56.8518, -42.6962, 73.5096, 1.25", "57.7532, -43.5356, 74.9172, 0.22", "58.4624, -44.2912, 75.9491, 0.44", "58.9857, -44.9247, 76.6946, 0.44", "59.6226, -45.8113, 77.6258, 1.55", "61.0926, -48.0378, 79.8326, 0.15", "61.6751, -48.9604, 80.7724, 0.81", "63.043, -51.073, 83.0911, 0.29", "63.7742, -52.1337, 84.3541, 0.29", "64.6586, -53.3413, 85.8658, 0.22", "65.1963, -54.0063, 86.7419, 1.18", "67.0722, -56.0127, 89.5311, 0.52", "68.1095, -56.9739, 90.8377, 0.29", "68.8143, -57.5233, 91.5364, 1.03", "69.3711, -57.8895, 92.0018, 1.33", "71.7221, -59.1831, 93.7091, 0.22", "72.6746, -59.63, 94.3124, 0.96", "73.9411, -60.1259, 94.968, 1.18", "76.1037, -60.8559, 95.9736, 0.22", "77.9967, -61.3808, 96.7623, 0.59", "79.1643, -61.6511, 97.2302, 0.22", "80.2688, -61.862, 97.6743, 0.22", "80.8627, -62.0034, 97.9446, 0.74", "82.0193, -62.3201, 98.5407, 1.55", "84.435, -63.1261, 100.082, 0.22", "85.6992, -63.6657, 101.021, 0.22", "87.2396, -64.4324, 102.312, 0.88", "89.1555, -65.5189, 104.077, 0.22", "90.164, -66.1416, 105.077, 0.29", "91.9525, -67.3941, 107.066, 0.07", "93.2232, -68.4269, 108.701, 0.07", "93.5007, -68.6619, 109.067, 0.07", "94.0792, -69.1637, 109.845, 0.37" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-1.93933, -18.4282, 1.23456, 0.81", "-3.70129, -19.8801, 1.30197, 0.81", "-4.77235, -20.7627, 1.34294, 0.81", "-6.21667, -21.9528, 1.3982, 1.03", "-7.63183, -23.1189, 1.45234, 0.66", "-8.88656, -24.1528, 1.50035, 0.74", "-9.70161, -24.8244, 1.53153, 1.33" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-1.93933, -18.4282, 1.23456, 1.25", "-1.33448, -20.0867, 0.814762, 1.25", "-0.800485, -21.7431, 0.210328, 1.4", "-0.330206, -23.4975, -0.605798, 1.33", "-0.0648939, -24.7322, -1.29765, 1.25", "0.112657, -25.8908, -2.0311, 1.11", "0.226154, -27.1519, -2.89289, 1.18", "0.256338, -28.4853, -3.95368, 1.18", "0.199944, -29.7105, -5.08437, 1.03", "0.061032, -30.8017, -6.21038, 0.96", "-0.16243, -31.85, -7.3642, 1.33", "-0.429701, -32.7789, -8.40505, 1.7" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "10.1397, -17.2596, -2.90157, 0.52", "10.5654, -17.8842, -2.73753, 0.52", "11.0553, -18.427, -2.50691, 0.37", "11.595, -18.9581, -2.20543, 0.29", "12.0349, -19.3666, -1.92276, 0.59", "12.4598, -19.7411, -1.61597, 0.44", "13.1268, -20.2671, -1.13366, 0.22", "13.9685, -20.809, -0.566725, 0.22", "14.6637, -21.2126, -0.13467, 0.44", "15.3348, -21.5964, 0.273151, 0.52", "16.1968, -22.1185, 0.780631, 0.29", "16.9715, -22.6093, 1.20682, 0.29", "17.5668, -23.0081, 1.51407, 0.29", "18.2425, -23.5048, 1.81744, 0.29", "18.7349, -23.9032, 1.99786, 0.37", "19.2172, -24.3514, 2.13856, 0.22", "19.3687, -24.5218, 2.17546, 0.37", "19.8022, -25.1032, 2.27804, 0.22", "20.2522, -25.738, 2.37206, 0.81", "20.8504, -26.5398, 2.44832, 0.37", "21.4266, -27.2405, 2.48628, 0.29", "21.9277, -27.8079, 2.48584, 0.22", "22.3314, -28.2121, 2.48503, 0.74", "22.9016, -28.7145, 2.49723, 0.22", "23.2964, -29.0253, 2.52269, 0.22", "23.9934, -29.4849, 2.60871, 0.66", "24.8186, -29.9513, 2.73771, 0.52", "26.0385, -30.5853, 2.96352, 0.22", "26.794, -30.9776, 3.1205, 0.74", "27.0666, -31.1212, 3.1758, 1.11", "28.0145, -31.6466, 3.33594, 0.22", "28.2206, -31.7663, 3.34668, 0.44", "28.5603, -31.9564, 3.32047, 0.44", "29.0809, -32.2534, 3.21333, 0.22", "29.7884, -32.6545, 3.06002, 0.15", "30.434, -33.0328, 2.93971, 0.22", "31.3148, -33.5941, 2.79512, 0.15", "31.9282, -34.0016, 2.72263, 0.15", "32.3947, -34.3385, 2.68379, 0.74", "33.1467, -34.9998, 2.62426, 0.37", "33.4831, -35.4015, 2.60229, 0.29", "33.7796, -35.8069, 2.59859, 0.88", "34.0147, -36.2, 2.61499, 1.25", "34.3459, -36.9611, 2.60907, 0.22", "34.6296, -37.9024, 2.51431, 0.15", "34.7444, -38.552, 2.37144, 0.52" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "10.1397, -17.2596, -2.90157, 0.66", "10.032, -17.3729, -4.01986, 0.66", "9.92911, -17.6529, -5.45821, 0.66", "9.88029, -18.0082, -6.64588, 0.66", "9.87487, -18.4977, -7.85485, 0.44", "9.88602, -18.87, -8.5667, 0.44", "9.89702, -19.2309, -9.17125, 0.44", "9.94571, -20.0271, -10.2487, 0.37", "9.99383, -20.5358, -10.8476, 0.59", "10.0539, -21.1123, -11.481, 0.52", "10.1007, -21.9272, -12.3618, 0.44", "10.0869, -22.4956, -13.016, 0.44", "9.98705, -23.252, -13.979, 0.52", "9.9112, -23.6214, -14.4941, 0.52", "9.88203, -23.7679, -14.6776, 0.52", "9.79281, -24.2327, -15.1344, 0.52", "9.64507, -24.8965, -15.6525, 0.52", "9.46562, -25.6065, -16.1594, 0.37", "9.24109, -26.4421, -16.7713, 0.37", "9.08221, -27.0392, -17.1731, 0.59", "8.8753, -27.9493, -17.7167, 0.37", "8.67797, -29.0568, -18.3304, 0.29", "8.50347, -30.1835, -18.9187, 0.29", "8.33625, -31.1989, -19.4074, 0.37", "8.03548, -32.5515, -19.9855, 0.22", "7.69107, -33.8514, -20.4677, 0.15", "7.60119, -34.2909, -20.5849, 0.15", "7.52999, -34.7961, -20.647, 0.15", "7.43421, -35.5189, -20.6245, 0.15", "7.26987, -36.5743, -20.4678, 0.15", "6.96627, -37.6275, -20.3468, 0.15", "6.19031, -44.6956, -25.3997, 0.15", "6.0138, -51.0682, -31.3185, 0.15", "5.77273, -56.3215, -38.2075, 0.15" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "0.842738, 19.6448, 3.45727, 1.33", "1.30524, 20.0033, 3.00458, 1.33", "1.93623, 20.6079, 2.39562, 1.03", "2.67215, 21.4543, 1.69563, 0.74", "3.46898, 22.6689, 0.881869, 1.03", "4.04328, 23.6858, 0.285479, 0.59", "4.48019, 24.503, -0.141444, 0.81", "4.98511, 25.6207, -0.593428, 0.74", "5.32576, 26.542, -0.853195, 1.33", "5.86633, 28.3582, -1.18252, 0.52", "5.98114, 28.8703, -1.24385, 0.52", "6.13265, 30.0028, -1.36973, 0.74", "6.20151, 31.1895, -1.54436, 0.59", "6.19122, 32.4535, -1.80284, 0.59", "6.15335, 33.4768, -2.06971, 1.11", "6.11746, 34.4802, -2.36299, 1.11", "6.08253, 35.889, -2.78738, 0.66", "6.10506, 36.8666, -3.09044, 0.81", "6.22056, 37.7099, -3.37544, 0.66", "6.49046, 38.6727, -3.70175, 0.44", "6.80043, 39.4732, -4.01316, 0.44", "7.15591, 40.3383, -4.39714, 0.59", "7.54278, 41.4133, -4.93824, 0.88", "7.7485, 42.3904, -5.48577, 0.66", "7.7605, 43.4167, -6.13507, 0.81", "7.66759, 44.4377, -6.83844, 0.66", "7.44026, 45.6269, -7.7306, 0.66", "7.11254, 46.698, -8.59428, 0.52", "6.7182, 47.5909, -9.33095, 0.74", "6.17752, 48.5727, -10.1041, 0.81" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "0.842738, 19.6448, 3.45727, 0.74", "-0.512668, 20.7774, 3.1619, 0.74", "-2.1171, 21.8663, 2.91041, 0.88", "-3.43796, 22.7396, 2.74365, 0.66", "-4.21867, 23.2608, 2.65293, 0.66", "-5.28688, 23.9487, 2.54292, 0.74", "-6.52465, 24.6793, 2.42584, 0.59", "-7.86955, 25.2323, 2.31877, 0.37", "-8.74441, 25.4801, 2.25914, 0.37", "-9.35659, 25.6228, 2.22402, 0.37", "-10.0657, 25.8084, 2.17415, 0.37", "-11.1153, 26.1527, 2.11435, 0.37", "-12.0799, 26.5649, 2.06256, 0.59", "-13.1387, 27.1198, 2.00886, 0.52", "-14.6841, 28.0502, 1.92184, 0.66", "-15.8423, 28.8742, 1.84791, 0.37", "-16.803, 29.6809, 1.79337, 0.66", "-17.8228, 30.6607, 1.7873, 0.52", "-18.6455, 31.5016, 1.85236, 0.81", "-19.3944, 32.2626, 1.9665, 0.88", "-20.1246, 33.0165, 2.13401, 0.66", "-21.3075, 34.1767, 2.48638, 0.44", "-22.433, 35.1894, 2.95153, 0.44", "-23.4495, 36.0668, 3.55854, 0.66", "-23.9021, 36.4524, 3.90404, 0.66", "-24.3521, 36.8568, 4.30879, 0.66", "-24.7361, 37.2437, 4.70663, 0.66", "-25.3391, 37.9247, 5.45937, 0.66", "-25.982, 38.747, 6.41991, 0.29", "-26.5277, 39.5278, 7.34864, 0.29", "-27.2155, 40.5408, 8.54403, 0.66", "-27.8839, 41.4382, 9.61904, 0.37", "-28.7506, 42.4886, 10.9658, 0.59", "-29.5114, 43.2995, 12.0807, 0.96", "-30.1318, 43.8675, 12.9439, 0.37", "-30.55, 44.2201, 13.4578, 0.37", "-31.281, 44.7442, 14.1558, 0.37", "-31.856, 45.1238, 14.5237, 0.37", "-32.4944, 45.5824, 14.7704, 0.96", "-32.9961, 45.9696, 14.9059, 0.96", "-34.1506, 46.96, 15.1624, 0.22", "-34.8555, 47.627, 15.3154, 0.59", "-35.4573, 48.2766, 15.4654, 1.18", "-36.6973, 49.6675, 15.8003, 0.22", "-36.9764, 49.9902, 15.8865, 0.44", "-37.5149, 50.6081, 16.0779, 0.44", "-38.4413, 51.5854, 16.4155, 0.22", "-39.2495, 52.4119, 16.6981, 0.15", "-39.8006, 52.9473, 16.8794, 0.15", "-40.2724, 53.3732, 17.0084, 0.15", "-41.1334, 54.1244, 17.2055, 0.88", "-42.6038, 55.4035, 17.4624, 0.15", "-42.8611, 55.6358, 17.4908, 0.52", "-43.5991, 56.3087, 17.53, 1.47", "-45.0233, 57.7083, 17.5505, 0.22", "-45.6792, 58.4504, 17.533, 0.22", "-46.1903, 59.1479, 17.5028, 0.74", "-46.9051, 60.3436, 17.4442, 0.15", "-47.0392, 60.5866, 17.4337, 0.59", "-47.4433, 61.3988, 17.402, 1.11", "-48.4092, 63.4678, 17.311, 0.15", "-48.8102, 64.337, 17.2676, 0.15", "-49.0984, 64.9567, 17.2371, 0.29", "-49.8037, 66.4538, 17.1491, 0.15", "-50.0593, 66.9786, 17.1174, 0.96", "-50.2719, 67.3643, 17.0926, 1.33" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "7.32522, 12.7156, 5.14001, 1.33", "8.11996, 12.6928, 4.91459, 1.33", "9.56271, 12.8122, 4.38348, 0.66", "10.5265, 12.9886, 3.95931, 0.66", "11.5998, 13.2831, 3.45878, 0.66", "12.6483, 13.5709, 2.9698, 0.88", "13.8426, 13.8986, 2.41285, 0.81", "15.2487, 14.2757, 1.65798, 0.96", "16.1168, 14.5493, 1.09637, 1.03", "16.7533, 14.8764, 0.63567, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.32522, 12.7156, 5.14001, 1.03", "7.82009, 12.2507, 6.55305, 1.03", "8.42685, 11.6808, 8.28563, 1.03", "8.97913, 11.162, 9.86262, 1.03", "9.51193, 10.6615, 11.384, 0.88", "10.0501, 10.156, 12.9207, 1.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.78974, 41.5951, 0.0348418, 0.15", "-3.54739, 56.576, 0.0348418, 0.15", "-4.30504, 71.5568, 0.0348418, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-7.67562, -16.3655, 43.3186, 0.29", "-8.15141, -16.8894, 44.0203, 0.29", "-8.72905, -17.5095, 44.9357, 0.74", "-9.56782, -18.3615, 46.2925, 0.22", "-10.5252, -19.2876, 47.8455, 0.22", "-11.4986, -20.2477, 49.4121, 0.44", "-11.9825, -20.7315, 50.1608, 1.03", "-12.6328, -21.412, 51.2017, 1.4", "-13.3155, -22.1843, 52.3289, 1.11", "-14.0773, -23.162, 53.6092, 0.37", "-14.6816, -24.0676, 54.6909, 0.29", "-15.0672, -24.7181, 55.4016, 0.29", "-15.4181, -25.37, 56.0837, 0.52", "-15.7501, -26.0645, 56.7511, 1.03", "-16.1518, -26.9495, 57.5236, 0.74", "-16.8365, -28.4157, 58.6971, 0.22", "-17.0802, -28.9147, 59.0906, 0.52", "-17.4616, -29.6745, 59.7674, 0.22", "-17.7656, -30.2313, 60.2951, 0.88", "-18.3172, -31.14, 61.1632, 0.37", "-19.0225, -32.2663, 62.2585, 0.15", "-19.5504, -33.0765, 63.1306, 0.44", "-20.718, -34.8512, 65.2303, 0.29", "-21.0307, -35.3019, 65.8129, 0.88", "-21.4193, -35.8024, 66.5525, 1.4", "-22.3552, -36.8416, 68.3467, 0.22", "-23.0966, -37.5233, 69.6458, 0.22", "-23.3284, -37.7048, 69.9905, 0.52", "-23.7179, -37.9905, 70.4742, 0.96", "-24.7205, -38.7428, 71.6597, 0.22", "-25.6451, -39.4821, 72.7237, 0.22", "-25.9577, -39.7431, 73.0611, 0.96", "-26.395, -40.1516, 73.5416, 1.03", "-27.3026, -41.1204, 74.6406, 0.15", "-27.547, -41.4418, 74.9726, 0.29", "-28.2308, -42.59, 76.0237, 0.15", "-28.6225, -43.3676, 76.7326, 0.59", "-28.8976, -43.9743, 77.2988, 0.88", "-29.3361, -45.0559, 78.2876, 0.29", "-29.6818, -45.9703, 79.0691, 0.44", "-30.1749, -47.2833, 80.0672, 0.29", "-30.5402, -48.2814, 80.7189, 0.88", "-30.7447, -48.8475, 81.0355, 1.4", "-31.4717, -50.7939, 81.9154, 0.15", "-31.8044, -51.639, 82.2239, 0.15", "-32.3726, -53.0073, 82.611, 0.15", "-32.5352, -53.3871, 82.6747, 0.52", "-32.8578, -54.1221, 82.7558, 0.88", "-33.7254, -56.058, 82.9187, 0.15", "-34.1647, -57.0129, 82.9934, 0.15", "-34.512, -57.7612, 83.0559, 1.03", "-35.3003, -59.4149, 83.2124, 0.29", "-36.0314, -60.8896, 83.3647, 0.22", "-36.2677, -61.3359, 83.4173, 0.59", "-36.7519, -62.1927, 83.539, 1.11" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-7.67562, -16.3655, 43.3186, 0.44", "-7.82232, -17.6772, 44.1748, 0.44", "-7.91291, -18.5655, 44.7893, 0.37", "-8.06083, -20.0983, 45.9085, 0.29", "-8.1851, -21.0575, 46.6464, 0.81", "-8.31827, -21.8775, 47.303, 0.29", "-8.44217, -22.5065, 47.8096, 0.74", "-8.6018, -23.1774, 48.4304, 0.37", "-8.79094, -23.8393, 49.0853, 0.96", "-9.04639, -24.5925, 49.8098, 0.15", "-9.21565, -25.0352, 50.2325, 0.15", "-9.40188, -25.472, 50.6254, 0.52", "-9.89066, -26.5708, 51.502, 0.15", "-10.1184, -27.0758, 51.8417, 0.88", "-10.2979, -27.4734, 52.0617, 1.55", "-10.5948, -28.1644, 52.3915, 0.52", "-11.0979, -29.3073, 52.8667, 0.15", "-11.5238, -30.2039, 53.1757, 0.15", "-11.7724, -30.6866, 53.2841, 0.22", "-12.2596, -31.6, 53.4673, 0.15", "-12.465, -31.9686, 53.5232, 0.74", "-12.7392, -32.4497, 53.5681, 1.18", "-13.3114, -33.4415, 53.5901, 0.44", "-14.0641, -34.7286, 53.5132, 0.15", "-14.4739, -35.4366, 53.4293, 0.44", "-15.0797, -36.5197, 53.211, 0.22", "-15.3278, -36.9796, 53.0913, 0.88", "-15.4917, -37.2914, 52.9991, 1.11", "-16.1596, -38.5982, 52.5396, 0.15", "-16.3799, -39.0273, 52.3594, 0.74", "-16.911, -40.0956, 51.8536, 0.07", "-17.0697, -40.4376, 51.708, 0.29" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "32.9692, -6.99277, 38.0397, 0.74", "32.6024, -6.30131, 40.0822, 0.74", "32.1496, -5.70035, 41.6574, 0.37", "31.6502, -5.27399, 42.6844, 0.52", "30.8816, -4.81963, 43.8377, 0.52", "29.9657, -4.44285, 45.0004, 0.22", "29.3338, -4.30661, 45.7113, 0.22", "28.5257, -4.30443, 46.2736, 0.66", "27.1558, -4.53634, 47.0525, 0.22", "26.4158, -4.81307, 47.4699, 0.29", "25.7122, -5.22242, 47.8725, 0.29", "24.5548, -6.10136, 48.5763, 0.22", "24.0467, -6.52555, 48.892, 0.52", "23.375, -7.08861, 49.3031, 0.52", "22.447, -7.88225, 49.8146, 0.37", "21.3548, -8.74753, 50.3271, 0.29", "20.4587, -9.39671, 50.6694, 0.22", "19.8597, -9.7905, 50.8612, 0.29", "19.0661, -10.2817, 51.0927, 0.22", "18.1013, -10.8273, 51.3495, 0.22", "17.5064, -11.1342, 51.5403, 0.22", "17.0101, -11.3811, 51.7898, 0.22", "16.3455, -11.69, 52.2359, 0.22", "15.8776, -11.9203, 52.5575, 0.44", "14.7906, -12.4875, 53.2832, 0.15", "14.1403, -12.8239, 53.6898, 0.44", "12.6227, -13.633, 54.5359, 0.22", "11.5979, -14.1983, 54.9977, 0.52", "10.1588, -15.0249, 55.4436, 0.07", "9.36699, -15.483, 55.5476, 0.07", "8.48467, -15.9728, 55.4605, 0.07", "7.82097, -16.2784, 55.2948, 0.07", "6.829, -16.6476, 54.9499, 0.15", "6.17673, -16.8221, 54.7365, 0.15", "5.2995, -16.9437, 54.5265, 0.15", "4.34034, -17.0082, 54.3253, 0.15", "2.77485, -17.0657, 54.0462, 0.15", "1.54845, -17.0613, 53.8953, 0.52", "0.11549, -16.9426, 53.7756, 0.15", "-0.900924, -16.7717, 53.7069, 0.15", "-1.81505, -16.5601, 53.6465, 0.15", "-2.49057, -16.3889, 53.5954, 0.81", "-3.50389, -16.0834, 53.4973, 0.22", "-4.77204, -15.589, 53.3597, 0.22", "-5.60597, -15.1902, 53.2501, 0.44", "-6.79514, -14.5474, 53.0468, 0.96" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "32.9692, -6.99277, 38.0397, 0.22", "33.228, -7.73725, 38.2976, 0.22", "33.3711, -8.08306, 38.4055, 0.52", "33.5399, -8.47, 38.5361, 0.88", "33.8056, -9.03858, 38.7402, 0.44", "34.1951, -9.81057, 39.0757, 0.37", "34.4802, -10.3325, 39.3374, 0.44", "34.8291, -10.8712, 39.6988, 0.37", "35.2242, -11.4095, 40.1782, 0.37", "35.5377, -11.7827, 40.5924, 0.44", "35.9557, -12.224, 41.1771, 0.29", "36.3015, -12.571, 41.6696, 0.59", "36.8463, -13.1267, 42.4858, 0.29", "37.3188, -13.6081, 43.2109, 0.29", "37.594, -13.8802, 43.6052, 0.52", "37.921, -14.1971, 44.0354, 0.81", "38.3105, -14.5815, 44.491, 0.29", "38.5718, -14.858, 44.7649, 0.29", "38.8762, -15.1999, 45.0232, 0.29", "39.0406, -15.4001, 45.142, 0.59", "39.3002, -15.7331, 45.3414, 0.29", "39.5065, -15.9859, 45.4966, 0.29", "39.8681, -16.4193, 45.7617, 0.29", "40.3107, -16.9975, 46.1011, 0.15", "40.6267, -17.4601, 46.3797, 0.22", "41.0252, -18.0966, 46.7537, 0.22", "41.357, -18.6954, 47.0896, 0.22", "41.5678, -19.0867, 47.297, 0.22", "41.8722, -19.6178, 47.5979, 0.37", "42.1688, -20.1316, 47.8975, 0.37", "42.4067, -20.51, 48.1274, 0.22", "42.7462, -21.0284, 48.4411, 0.29", "43.0161, -21.4295, 48.6901, 0.29", "43.4628, -22.0394, 49.0595, 0.22", "43.7843, -22.4148, 49.2835, 0.22", "44.0638, -22.7227, 49.4724, 0.22", "44.2521, -22.9348, 49.6169, 0.22", "44.5167, -23.2922, 49.8625, 0.22", "44.8026, -23.8703, 50.2549, 0.22", "44.9632, -24.3542, 50.5827, 0.22", "45.1193, -24.9026, 50.9876, 0.29", "45.2592, -25.4401, 51.4081, 0.66", "45.4327, -26.0909, 51.9105, 0.29", "45.6851, -26.8739, 52.5044, 0.59", "45.8561, -27.3439, 52.8184, 0.59", "46.1235, -27.9711, 53.1259, 0.22", "46.2596, -28.2237, 53.1953, 0.22", "46.6323, -28.7894, 53.2358, 0.22", "47.0378, -29.3387, 53.1764, 0.22", "47.4345, -29.9332, 53.0321, 0.52", "47.7657, -30.5426, 52.8278, 0.22", "47.9699, -31.0487, 52.637, 0.22", "48.1329, -31.5754, 52.4272, 0.22", "48.2368, -32.041, 52.246, 0.22", "48.3912, -32.8703, 51.9305, 0.29", "48.4884, -33.4937, 51.7033, 0.22", "48.597, -34.327, 51.4045, 0.59", "48.6844, -35.043, 51.1475, 0.44", "48.7698, -35.7815, 50.8643, 0.96", "48.8818, -36.4789, 50.5938, 0.29" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "39.3194, 10.1099, 33.3398, 0.44", "40.3858, 11.1023, 32.9532, 0.44", "41.3452, 11.9952, 32.6054, 1.03" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "39.3194, 10.1099, 33.3398, 0.22", "39.8345, 9.87769, 34.0384, 0.22", "40.2552, 9.66677, 34.6235, 0.22", "40.7154, 9.41276, 35.2997, 0.44", "41.2793, 9.07191, 36.1934, 0.74", "41.7579, 8.77372, 36.9372, 0.59", "42.3819, 8.38924, 37.8696, 0.29", "42.8748, 8.15099, 38.5973, 0.22", "43.251, 8.0144, 39.1588, 0.22", "43.5986, 7.92026, 39.6667, 0.22", "44.1447, 7.80211, 40.4374, 0.22", "44.4042, 7.75497, 40.7832, 0.22", "45.1936, 7.64165, 41.7691, 0.37", "46.0405, 7.52412, 42.7941, 0.22", "46.5355, 7.43094, 43.3754, 0.22", "46.888, 7.35695, 43.7871, 0.22", "47.3093, 7.2721, 44.2884, 0.44", "48.2772, 7.04835, 45.4735, 0.15", "48.8029, 6.88583, 46.139, 0.29", "49.5297, 6.6375, 47.0656, 0.15", "50.1833, 6.45524, 47.9158, 0.88", "50.9501, 6.30538, 48.9569, 0.29", "51.6188, 6.22749, 49.9065, 0.22", "52.0243, 6.21517, 50.4859, 0.22", "52.553, 6.23208, 51.2281, 0.37", "53.4018, 6.33197, 52.3917, 0.66", "54.3518, 6.50159, 53.6503, 0.07", "54.8528, 6.61981, 54.2868, 0.37", "55.6573, 6.84723, 55.2155, 0.15", "56.7025, 7.17532, 56.3463, 0.15", "57.0989, 7.29569, 56.768, 0.15", "57.5813, 7.40407, 57.2369, 0.29", "58.256, 7.49869, 57.8317, 0.29", "59.0039, 7.5132, 58.4614, 0.15", "59.2444, 7.48785, 58.6695, 0.15", "59.9015, 7.39385, 59.2325, 0.15", "60.7349, 7.27707, 59.9657, 0.15", "61.2773, 7.23198, 60.4728, 0.15", "61.8465, 7.2498, 61.0035, 0.15", "62.3918, 7.35936, 61.5015, 0.15", "63.2004, 7.64942, 62.1634, 0.22", "64.126, 8.12647, 62.8684, 0.22", "64.9308, 8.67433, 63.4444, 0.22", "65.4856, 9.11546, 63.8032, 0.29", "66.3379, 9.85579, 64.302, 0.52", "67.0818, 10.5015, 64.6918, 0.37", "67.6523, 10.9809, 64.9657, 0.22", "68.4189, 11.5982, 65.2659, 0.22", "68.9089, 11.9708, 65.452, 0.22", "69.3032, 12.238, 65.635, 0.29", "70.1469, 12.7142, 66.1035, 0.22", "70.5408, 12.902, 66.367, 0.44", "71.1627, 13.1722, 66.8239, 0.44", "71.8492, 13.4801, 67.3888, 0.22", "72.585, 13.8678, 68.0631, 0.44", "73.0648, 14.1782, 68.5564, 0.44", "73.8038, 14.7643, 69.3887, 0.22", "74.2922, 15.2184, 69.9691, 0.22", "74.8556, 15.7952, 70.6599, 0.22", "75.2668, 16.2351, 71.1571, 0.52", "75.7868, 16.8411, 71.7833, 1.03", "76.5673, 17.8168, 72.7685, 0.22", "77.1302, 18.5169, 73.4728, 0.59", "77.8323, 19.3031, 74.2862, 0.22", "78.4654, 19.9359, 74.9378, 0.52", "79.4587, 20.8256, 75.8307, 0.22", "80.1731, 21.396, 76.3948, 0.22", "80.8844, 21.9284, 76.9207, 0.66", "81.795, 22.5689, 77.5426, 0.15", "82.6941, 23.1711, 78.0938, 0.15", "83.558, 23.7173, 78.5628, 0.37", "84.8196, 24.4388, 79.1666, 0.07", "85.7664, 24.9751, 79.5766, 0.07" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-55.4341, 24.5342, 55.5866, 0.88", "-56.5941, 24.7932, 57.0059, 0.88", "-57.9894, 25.0166, 58.7199, 0.44", "-59.1861, 25.1509, 60.1913, 1.03", "-60.6867, 25.2513, 62.0539, 0.29", "-61.4012, 25.2928, 62.895, 0.29", "-61.9722, 25.3287, 63.5475, 0.29", "-62.2478, 25.3288, 63.856, 0.29", "-62.3756, 25.3159, 64.0004, 0.29", "-62.9386, 25.2284, 64.671, 0.29", "-63.8918, 25.1327, 65.849, 0.44", "-64.8141, 25.192, 66.9987, 0.22", "-65.8194, 25.3782, 68.3052, 0.81", "-66.9441, 25.6276, 69.7693, 1.11", "-67.8144, 25.8404, 70.8984, 0.29", "-68.4557, 26.0116, 71.7622, 0.29", "-69.3442, 26.2944, 73.0402, 0.81", "-70.255, 26.6714, 74.4152, 0.22", "-70.8126, 26.9848, 75.2795, 0.22", "-71.2423, 27.2619, 75.962, 0.22", "-71.8193, 27.6262, 76.9232, 0.22", "-72.3737, 27.9603, 77.8515, 0.96", "-73.12, 28.4335, 79.1621, 0.96", "-73.4744, 28.6876, 79.8045, 0.22", "-74.1574, 29.2212, 81.0853, 1.18", "-74.5045, 29.5004, 81.7228, 1.33", "-75.5492, 30.408, 83.5265, 0.07", "-76.0888, 30.9063, 84.4086, 0.44", "-76.7652, 31.5951, 85.4395, 0.22", "-77.2435, 32.1351, 86.1782, 0.88", "-77.5066, 32.4948, 86.581, 1.18", "-78.1881, 33.5872, 87.5736, 0.22", "-78.5341, 34.2279, 88.0467, 0.66", "-79.0436, 35.2372, 88.7306, 0.15", "-79.2495, 35.6806, 89.0253, 0.15", "-79.5861, 36.4262, 89.593, 0.59", "-79.8666, 37.045, 90.1531, 0.22", "-80.2717, 37.9078, 91.0807, 0.88", "-80.7927, 38.9835, 92.4109, 0.15", "-81.0942, 39.5354, 93.1936, 0.88", "-81.73, 40.5546, 94.82, 0.07", "-82.1046, 41.0976, 95.8028, 0.37", "-82.6058, 41.785, 97.1678, 0.15", "-82.9735, 42.262, 98.1622, 0.96", "-83.7296, 43.1475, 100.123, 0.07", "-84.1278, 43.5957, 101.076, 0.29", "-84.8286, 44.3898, 102.682, 0.07", "-85.2705, 44.8878, 103.628, 0.07", "-85.4824, 45.1134, 104.048, 0.74", "-86.2917, 45.9038, 105.483, 1.18", "-87.7045, 47.0558, 107.545, 0.15", "-88.2821, 47.4529, 108.249, 0.44", "-88.7108, 47.6958, 108.68, 0.44", "-89.7362, 48.2312, 109.627, 0.07", "-90.4956, 48.5903, 110.276, 0.66", "-92.0646, 49.1984, 111.387, 0.07", "-92.3904, 49.2722, 111.573, 0.07", "-92.8468, 49.3595, 111.803, 0.66" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-55.4341, 24.5342, 55.5866, 0.52", "-58.0752, 24.9525, 55.038, 0.52", "-58.9231, 25.0853, 55.0809, 1.03", "-59.9398, 25.2824, 55.3527, 0.37", "-60.5089, 25.4051, 55.5543, 0.37", "-61.4465, 25.5898, 55.9157, 0.88", "-62.4618, 25.7836, 56.3163, 0.37", "-63.4271, 25.9629, 56.8508, 0.37", "-64.3745, 26.1534, 57.3945, 0.37", "-64.8837, 26.2671, 57.6967, 0.29", "-65.7469, 26.4764, 58.1924, 0.22", "-66.1097, 26.5721, 58.3926, 0.52", "-66.7726, 26.7578, 58.7523, 1.18", "-68.0214, 27.0836, 59.4202, 0.22", "-68.4545, 27.1815, 59.6607, 0.22", "-69.4197, 27.3719, 60.2221, 0.44", "-70.0563, 27.4686, 60.6007, 0.59", "-70.8711, 27.5194, 61.0773, 0.22", "-71.6692, 27.5029, 61.551, 0.74", "-72.4602, 27.4264, 62.0261, 0.96", "-73.1909, 27.3279, 62.4373, 0.52", "-74.0083, 27.1828, 62.8524, 0.29", "-74.8516, 27.0151, 63.2685, 0.59", "-75.8449, 26.8069, 63.7811, 0.22", "-76.3642, 26.7163, 64.0606, 0.22", "-77.1159, 26.6146, 64.4845, 0.96", "-78.0341, 26.5198, 65.0096, 0.22", "-78.875, 26.4571, 65.4672, 0.37", "-79.6641, 26.4127, 65.8556, 0.22", "-80.308, 26.3774, 66.1258, 0.96", "-81.2952, 26.345, 66.4483, 0.15", "-81.9564, 26.3395, 66.5914, 0.15", "-82.6979, 26.3571, 66.6395, 0.15", "-83.3678, 26.3822, 66.5856, 0.74", "-84.3006, 26.4084, 66.3907, 1.18", "-85.4966, 26.408, 66.0259, 0.22", "-86.4593, 26.3613, 65.6489, 0.44", "-87.2869, 26.2762, 65.2856, 0.15", "-87.651, 26.2166, 65.1078, 0.44", "-88.9639, 25.9184, 64.4462, 0.15", "-89.5957, 25.7375, 64.1173, 0.29", "-90.3412, 25.4584, 63.7565, 0.15", "-90.7488, 25.2748, 63.5741, 0.37", "-91.3598, 24.9505, 63.2925, 0.15", "-91.8474, 24.6608, 63.0612, 0.59" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-9.70161, -24.8244, 1.53153, 0.59", "-9.77829, -25.4126, 1.41632, 0.59", "-9.84994, -25.9005, 1.27342, 0.59", "-9.92808, -26.2881, 1.11647, 0.52", "-10.0069, -26.5186, 0.96793, 0.52", "-10.1116, -26.7269, 0.80918, 0.52", "-10.2813, -27.0112, 0.606616, 0.44", "-10.4898, -27.3283, 0.400245, 0.81", "-10.6759, -27.5945, 0.241559, 0.66", "-11.0633, -28.1545, -0.068126, 0.59", "-11.3242, -28.5623, -0.281529, 0.52", "-11.7028, -29.2415, -0.608716, 0.44", "-11.9219, -29.7034, -0.81604, 0.52", "-12.1615, -30.2573, -1.05312, 0.81", "-12.2619, -30.4953, -1.15208, 0.59", "-12.4144, -30.8519, -1.29206, 0.74", "-12.5923, -31.2053, -1.45624, 0.96", "-12.8269, -31.5155, -1.63819, 0.96", "-13.1396, -31.8364, -1.8576, 0.66", "-13.5533, -32.1494, -2.06739, 0.52", "-13.8645, -32.3392, -2.18706, 0.52", "-14.1379, -32.4733, -2.24988, 0.52", "-14.5668, -32.6487, -2.29156, 0.52" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-9.70161, -24.8244, 1.53153, 0.29", "-9.27585, -26.0776, -2.3926, 0.29", "-9.39023, -26.6935, -4.0312, 0.29", "-9.50556, -27.0603, -4.84721, 0.52", "-9.64364, -27.5484, -5.84804, 0.52", "-9.77748, -28.1396, -7.03494, 0.88", "-9.94478, -28.9494, -8.72696, 0.59", "-10.2672, -29.6191, -10.0204, 0.37", "-10.7205, -30.261, -11.393, 0.52", "-11.2269, -30.8015, -12.6703, 0.37", "-11.4978, -31.0909, -13.3151, 0.37", "-11.761, -31.5068, -14.0182, 0.37", "-12.0371, -32.1577, -14.679, 0.37", "-12.4759, -33.3267, -15.2628, 0.52", "-12.9241, -34.5643, -15.6536, 0.66", "-13.2384, -35.4597, -15.872, 0.44", "-13.8944, -37.4185, -16.3001, 0.29", "-14.1158, -38.2481, -16.4659, 0.29", "-14.3504, -39.6037, -16.718, 0.44", "-14.4705, -40.8989, -16.943, 0.59", "-14.5282, -42.1013, -17.1566, 0.52", "-14.57, -43.0796, -17.3503, 0.81", "-14.6283, -44.4984, -17.6756, 0.29", "-14.643, -45.7602, -17.9633, 0.29", "-14.6252, -46.3715, -18.104, 0.29", "-14.6096, -46.8243, -18.2349, 0.29", "-14.5858, -47.9771, -18.622, 0.29", "-14.5913, -49.1013, -19.0575, 0.29", "-14.6393, -50.0938, -19.5327, 0.52", "-14.7213, -51.1596, -20.1729, 0.29", "-14.8958, -52.8389, -21.3068, 0.29", "-14.984, -53.5057, -21.7758, 0.52", "-15.2167, -54.8403, -22.7174, 0.37", "-15.4427, -56.0526, -23.6148, 0.22", "-15.6985, -57.3379, -24.6142, 0.22", "-15.9056, -58.2713, -25.3506, 0.07", "-16.187, -59.4639, -26.2955, 0.07", "-16.5145, -60.6187, -27.2248, 0.07", "-19.0221, -69.6542, -33.9584, 0.07" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.429701, -32.7789, -8.40505, 0.52", "0.794443, -33.3787, -8.03572, 0.52", "1.81486, -34.1238, -7.46381, 0.37", "2.38493, -34.7605, -7.00713, 0.59", "2.85114, -35.4667, -6.60843, 0.66", "3.33255, -36.3439, -6.32802, 0.52", "4.00229, -37.6365, -6.22314, 0.66", "4.13498, -37.9598, -6.25873, 0.81", "4.46657, -38.8385, -6.52831, 0.59", "4.80942, -39.712, -6.94578, 0.66", "5.40988, -41.1474, -7.7776, 0.52", "6.00464, -42.4785, -8.59467, 0.88", "6.558, -43.681, -9.30741, 1.03", "6.98243, -44.6368, -9.79954, 0.81", "7.53135, -46.0, -10.3777, 0.59", "7.7628, -46.676, -10.5891, 0.52", "8.11866, -47.9355, -10.8362, 0.59", "8.50167, -49.3509, -11.0042, 0.59", "8.79479, -50.3463, -11.0927, 0.59", "9.19951, -51.4885, -11.188, 0.59", "9.64146, -52.4456, -11.3092, 0.52", "10.3464, -53.6321, -11.5801, 0.96", "11.141, -54.7586, -11.9747, 0.66", "11.6601, -55.4421, -12.2389, 0.44", "12.1478, -56.1085, -12.4835, 0.44", "12.6937, -56.9468, -12.7186, 0.59", "12.9884, -57.4916, -12.8032, 0.52", "13.5236, -58.7006, -12.8644, 0.44", "14.0616, -60.1303, -12.849, 0.52", "14.4023, -61.0557, -12.8117, 0.52", "14.8798, -62.3488, -12.766, 0.44", "15.2457, -63.3887, -12.7602, 0.52", "15.5257, -64.1857, -12.8116, 0.44", "15.7731, -64.9463, -12.905, 0.44", "16.0335, -65.9121, -13.0606, 0.52", "16.2354, -66.8269, -13.1732, 0.44", "16.4841, -68.2122, -13.302, 0.59", "16.6867, -69.422, -13.2962, 0.66", "16.9378, -70.8325, -13.126, 0.44", "17.1159, -71.9146, -12.8937, 0.44", "17.3361, -73.2176, -12.5657, 0.52", "17.5323, -74.1348, -12.306, 0.44", "17.937, -75.4815, -11.9236, 0.44", "18.3289, -76.5626, -11.6218, 0.52", "18.7703, -77.7718, -11.3468, 0.37", "19.0637, -78.8973, -11.1373, 0.44", "19.1491, -79.4875, -11.0308, 0.66", "19.1987, -80.2473, -10.8515, 0.66", "19.2754, -81.5183, -10.4463, 0.44", "19.368, -82.5327, -9.9831, 0.59", "19.5096, -83.7409, -9.31085, 0.66", "19.582, -84.6265, -8.78214, 0.74", "19.6314, -85.8221, -8.11779, 0.59", "19.659, -87.0264, -7.51814, 0.74", "19.6707, -87.8285, -7.20439, 0.66", "19.6915, -88.9358, -6.86413, 0.74", "19.7271, -90.2961, -6.56736, 0.96", "19.77, -91.8247, -6.36388, 0.66", "19.8177, -93.1713, -6.29851, 0.66", "19.8829, -94.786, -6.33608, 0.52", "19.9886, -96.3371, -6.46185, 0.59", "20.2358, -98.5428, -6.75736, 0.44", "20.3978, -99.459, -6.93169, 0.52", "20.5864, -100.283, -7.13796, 0.81", "20.7525, -100.918, -7.345, 0.96", "21.043, -102.037, -7.78037, 0.52", "21.156, -102.647, -8.04979, 0.52", "21.2442, -103.654, -8.49206, 0.81", "21.2713, -104.608, -8.86692, 0.59", "21.3115, -105.923, -9.31767, 0.59", "21.3817, -107.294, -9.74227, 0.81", "21.4832, -108.636, -10.1161, 0.44", "21.5873, -109.787, -10.4048, 0.52", "21.7137, -111.068, -10.7221, 0.44", "21.8918, -112.603, -11.1241, 0.37", "21.9929, -113.311, -11.3386, 0.52", "22.1934, -114.534, -11.797, 0.88", "22.3939, -115.855, -12.3777, 0.66", "22.5259, -117.031, -12.9259, 1.11", "22.605, -118.227, -13.4566, 0.59", "22.6408, -119.228, -13.8882, 0.52", "22.663, -120.15, -14.2679, 0.59", "22.7344, -121.692, -14.9656, 0.44", "22.8321, -123.027, -15.5479, 0.44", "22.9927, -124.71, -16.2189, 0.29", "23.0818, -125.533, -16.5146, 0.22", "23.1868, -126.5, -16.8186, 0.29", "23.3872, -128.544, -17.4447, 0.29", "24.6355, -137.944, -16.8674, 0.29", "25.4714, -147.115, -14.5725, 0.29", "26.5208, -155.982, -11.3975, 0.29", "26.6724, -164.984, -8.41599, 0.29", "25.9594, -174.325, -6.82499, 0.29", "24.416, -183.703, -7.01829, 0.29", "24.3435, -193.203, -6.64156, 0.29", "23.024, -202.575, -5.76158, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.429701, -32.7789, -8.40505, 1.4", "-1.33948, -33.5358, -9.04968, 1.4", "-2.72678, -34.6899, -10.0326, 1.03" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "6.17752, 48.5727, -10.1041, 0.22", "6.04695, 49.7017, -10.2629, 0.22", "5.9336, 50.5378, -10.4334, 0.22", "5.83617, 51.4138, -10.6259, 0.22", "5.72057, 53.2578, -11.0655, 0.37", "5.65828, 54.4542, -11.4121, 0.44", "5.5676, 55.9143, -11.8765, 0.37", "5.53424, 56.7078, -12.166, 0.37", "5.51938, 57.7174, -12.5345, 0.37", "5.50552, 58.9768, -13.0171, 0.44", "5.53121, 61.0178, -13.7807, 0.37", "5.61894, 62.7539, -14.4162, 0.22", "5.71494, 63.8504, -14.8047, 0.22", "5.81033, 65.2967, -15.3019, 0.22", "7.75417, 76.1678, -18.6404, 0.22", "9.66245, 87.2092, -21.4154, 0.22", "10.3352, 98.7238, -22.238, 0.22", "11.9128, 110.171, -22.1066, 0.22", "11.9712, 121.709, -21.367, 0.22", "12.5516, 133.229, -22.1896, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "6.17752, 48.5727, -10.1041, 0.29", "6.7176, 49.1015, -10.5579, 0.29", "6.97174, 49.4097, -10.7638, 0.29", "7.24411, 49.826, -10.9794, 0.29", "7.47485, 50.2315, -11.1657, 0.52", "7.68862, 50.6264, -11.3455, 0.81", "8.11069, 51.4411, -11.7363, 0.44", "8.38304, 52.0189, -12.0039, 0.66", "8.69378, 52.6907, -12.3372, 0.44", "8.98774, 53.2889, -12.6478, 0.29", "9.27022, 53.7993, -12.9421, 0.52", "9.68438, 54.4504, -13.3824, 0.44", "10.1219, 55.0479, -13.8784, 0.29", "10.5549, 55.5967, -14.4137, 0.29", "10.8692, 55.9565, -14.8315, 0.37", "11.162, 56.266, -15.2407, 0.22", "11.5136, 56.6162, -15.754, 0.37", "11.8349, 56.8996, -16.2274, 0.66", "12.1658, 57.1871, -16.7517, 0.37", "12.7009, 57.6891, -17.7117, 0.22", "12.8721, 57.8594, -18.0529, 0.22", "13.1748, 58.1577, -18.6501, 0.37", "13.3831, 58.3262, -19.0007, 0.52", "17.906, 62.778, -22.5106, 0.52" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "16.7533, 14.8764, 0.63567, 0.81", "16.5469, 15.5568, 0.436382, 0.81", "16.3702, 16.3205, 0.252526, 0.52", "16.2268, 17.3676, 0.00803625, 0.96", "16.1448, 18.3537, -0.238678, 0.66", "16.0719, 19.2836, -0.496034, 1.11", "15.9737, 20.4083, -0.826841, 0.52", "15.9343, 21.2178, -1.08289, 0.74", "15.9274, 22.1548, -1.39193, 0.44", "15.935, 22.619, -1.56577, 0.44", "15.9653, 23.398, -1.91301, 0.44", "15.9929, 24.1615, -2.28986, 0.37", "16.0024, 24.8976, -2.67158, 0.44", "15.9788, 25.855, -3.15624, 0.66", "15.9458, 26.629, -3.48316, 0.59", "15.9478, 27.4393, -3.77733, 0.44", "15.9804, 27.8388, -3.91087, 0.44", "16.1144, 28.7748, -4.21666, 0.59", "16.2379, 29.3263, -4.38046, 0.52", "16.5392, 30.2627, -4.64402, 0.59", "16.9404, 31.1915, -4.90379, 0.52", "17.3676, 32.006, -5.14955, 0.44", "17.6208, 32.4293, -5.30982, 0.44", "18.2852, 33.4269, -5.78593, 0.44", "18.6908, 34.013, -6.13791, 0.44", "19.1346, 34.6462, -6.60205, 0.52", "19.4091, 35.0372, -6.8955, 0.66", "19.9076, 35.7478, -7.45385, 0.66", "20.2328, 36.2112, -7.8498, 0.59", "20.5738, 36.6999, -8.34184, 0.44", "20.8534, 37.089, -8.77059, 0.29", "21.3491, 37.7159, -9.51923, 0.29", "21.7297, 38.1658, -10.0842, 0.29", "22.1006, 38.6193, -10.6193, 0.29", "22.4927, 39.1789, -11.2538, 0.59", "22.753, 39.657, -11.7975, 0.81", "23.0364, 40.3088, -12.5973, 0.44", "23.1728, 40.6799, -13.0917, 0.44", "23.3184, 41.1159, -13.6969, 0.29", "23.449, 41.5182, -14.3082, 0.37", "23.6244, 42.1341, -15.2917, 0.29", "23.7278, 42.6088, -16.0436, 0.29", "23.7802, 42.9372, -16.5553, 0.29", "23.8148, 43.1191, -16.827, 0.29", "23.9132, 43.5428, -17.3354, 0.37", "24.0489, 44.1277, -17.8454, 0.37", "24.143, 44.7637, -18.256, 0.37", "24.1707, 45.082, -18.4342, 0.66", "24.2074, 45.4204, -18.6228, 1.03", "24.4118, 46.6344, -19.3034, 0.29", "24.5809, 47.3079, -19.7046, 0.29", "24.7596, 47.8363, -20.0733, 0.29", "24.904, 48.1792, -20.3519, 0.29", "25.2305, 48.7976, -20.8998, 0.29", "25.476, 49.1865, -21.2728, 0.29", "25.8214, 49.6676, -21.751, 0.81", "26.5756, 50.6133, -22.6583, 0.22", "26.9132, 50.9946, -23.0113, 0.22", "27.3193, 51.4434, -23.4282, 0.22", "27.709, 51.8866, -23.8369, 0.15", "27.9682, 52.1771, -24.1118, 0.15", "28.3921, 52.6244, -24.5206, 0.15", "28.8128, 53.0087, -24.84, 0.29", "32.0007, 59.5456, -27.9617, 0.29", "35.595, 64.9902, -32.3773, 0.29", "38.7945, 71.0092, -36.3658, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "16.7533, 14.8764, 0.63567, 0.66", "17.336, 15.5197, 1.16286, 0.66", "18.2795, 16.3292, 1.73205, 0.88", "19.0738, 16.6792, 1.69021, 0.52", "19.5332, 16.7947, 1.44211, 0.52", "19.9931, 16.8927, 1.06332, 0.52", "20.8427, 17.0336, 0.272112, 0.52", "21.4092, 17.0641, -0.378228, 0.52", "22.1934, 17.065, -1.34599, 0.59", "22.9746, 17.0767, -2.34147, 0.74", "24.0357, 17.1331, -3.70718, 0.96", "24.6069, 17.1891, -4.38738, 0.74", "25.4223, 17.2957, -5.1851, 0.59", "25.8955, 17.3579, -5.44121, 0.37", "26.7507, 17.485, -5.45861, 0.37", "27.4182, 17.6101, -5.23397, 0.37", "29.5968, 18.0039, -4.05367, 0.44", "30.457, 18.1765, -3.4786, 0.88", "31.7911, 18.5153, -2.45337, 0.52", "32.6672, 18.7917, -1.70516, 0.52", "33.7548, 19.1957, -0.7364, 0.81", "34.7481, 19.6488, 0.0781613, 0.52", "35.6882, 20.1698, 0.677719, 0.52", "36.6101, 20.769, 1.17251, 0.74", "37.5392, 21.4922, 1.47672, 0.66", "38.1361, 21.9974, 1.41029, 0.52", "39.3366, 23.0775, 0.718971, 0.52", "40.0235, 23.6975, 0.0320833, 0.52", "40.4621, 24.0254, -0.606894, 0.52", "41.0164, 24.3104, -1.63523, 0.44", "41.4705, 24.4438, -2.64416, 0.44", "41.7625, 24.4899, -3.38524, 0.44", "42.1182, 24.5081, -4.33246, 0.44", "42.7359, 24.5071, -5.72434, 0.66", "43.2812, 24.5243, -6.7376, 0.88", "43.9501, 24.5702, -7.71633, 0.59", "45.284, 24.7618, -9.14668, 0.96", "45.9667, 24.9148, -9.65717, 1.11", "47.3573, 25.2977, -10.3421, 0.29", "48.445, 25.6116, -10.6987, 0.66", "49.3069, 25.7847, -10.9138, 0.66", "50.376, 25.8669, -11.1495, 0.52", "51.3576, 25.8162, -11.3693, 0.52", "52.0985, 25.7315, -11.5633, 0.59", "53.4308, 25.5924, -11.9822, 0.74", "55.4886, 25.4675, -12.6849, 0.52", "56.741, 25.4593, -13.0853, 0.74", "58.2325, 25.5598, -13.4735, 0.52", "59.3518, 25.7734, -13.6374, 0.74", "61.1476, 26.3547, -13.7187, 0.52", "62.4639, 26.9524, -13.6298, 0.44", "63.5084, 27.5514, -13.4619, 0.44", "64.6865, 28.2894, -13.204, 0.81", "66.0478, 29.2286, -12.8333, 0.22", "66.6592, 29.6659, -12.6369, 0.29", "67.2663, 30.0867, -12.3956, 0.29", "68.127, 30.658, -12.0511, 0.44", "68.8394, 31.1076, -11.8322, 0.22", "78.8839, 33.7014, -12.6927, 0.22", "87.8897, 38.0191, -15.7432, 0.22", "97.4529, 41.5877, -17.8685, 0.22" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "10.0501, 10.156, 12.9207, 0.74", "9.6872, 13.6825, 16.4744, 0.74", "9.35788, 15.3108, 17.8102, 0.96", "8.86526, 17.1687, 19.1604, 0.81", "8.55098, 18.2136, 19.8737, 0.81", "8.05916, 19.6971, 20.8562, 0.88", "7.50457, 21.2912, 21.9118, 0.88", "6.97079, 22.5879, 22.5716, 0.88", "6.28538, 24.2932, 23.5732, 0.59", "6.10707, 24.825, 24.0959, 0.59", "6.10503, 25.0152, 24.5144, 0.59", "6.15016, 25.1267, 24.9512, 0.59", "6.42596, 25.4321, 27.086, 0.88", "6.61826, 25.6191, 29.6353, 1.03", "6.61549, 25.6695, 31.6546, 0.81", "6.3734, 25.6562, 34.1958, 0.81", "5.97229, 25.6014, 36.1605, 1.11", "5.22672, 25.4965, 38.4108, 1.11", "3.6589, 25.2913, 41.5444, 0.59", "2.60829, 25.1455, 43.2672, 0.44", "1.51633, 24.981, 44.9113, 0.96", "0.427359, 24.7823, 46.5173, 0.74", "-0.535308, 24.5354, 47.9246, 1.03", "-2.03745, 24.0824, 50.0701, 0.44", "-3.51225, 23.5597, 52.2783, 0.96", "-4.42665, 23.2172, 53.7121, 1.03", "-5.78427, 22.716, 55.827, 0.66", "-6.74094, 22.3635, 57.263, 0.96", "-7.59636, 22.0665, 58.5568, 0.37", "-8.32285, 21.8363, 59.6946, 0.37", "-9.00596, 21.6875, 60.739, 1.03", "-10.0537, 21.654, 62.3492, 0.37", "-10.8571, 21.8265, 63.5718, 0.37", "-11.9532, 22.2504, 65.3212, 0.52", "-12.9755, 22.7281, 67.0279, 0.52", "-13.6399, 23.0182, 68.1346, 0.52", "-14.5809, 23.3229, 69.7771, 1.11", "-15.4517, 23.4852, 71.3094, 0.29", "-15.8439, 23.5181, 71.9605, 0.29", "-16.3393, 23.5257, 72.7562, 0.59", "-16.9886, 23.5256, 73.8655, 0.96", "-18.2211, 23.5081, 76.0146, 0.29", "-18.8681, 23.5114, 77.1674, 0.29", "-19.5228, 23.5875, 78.3765, 0.29", "-20.2474, 23.7966, 79.724, 0.88", "-20.8697, 24.0685, 80.8568, 0.52", "-21.5853, 24.4261, 82.1354, 0.59", "-22.2832, 24.7857, 83.3894, 0.29", "-23.1463, 25.217, 84.9769, 0.29", "-23.9861, 25.6459, 86.729, 1.47", "-24.4472, 25.9083, 87.8437, 1.47", "-25.4822, 26.6049, 90.4852, 0.37", "-25.9693, 27.0289, 91.8159, 0.37", "-26.4813, 27.6255, 93.2835, 1.18", "-27.4829, 29.1589, 96.199, 0.52", "-28.0257, 30.2613, 97.8459, 0.96", "-28.5355, 31.6346, 99.4887, 0.37", "-28.952, 33.0178, 100.806, 0.59", "-29.5361, 35.0615, 102.538, 0.37", "-29.8497, 36.2301, 103.425, 0.37", "-30.1444, 37.3383, 104.192, 0.37", "-30.4129, 38.3967, 104.965, 0.66", "-30.7092, 39.654, 106.017, 0.37", "-30.8839, 40.5174, 106.753, 0.37", "-31.089, 41.7366, 107.744, 0.66", "-31.2627, 43.0878, 108.834, 0.37", "-31.3638, 44.2534, 109.759, 1.03", "-31.401, 45.197, 110.538, 0.74", "-31.3515, 47.2048, 112.238, 0.15", "-31.3138, 47.8623, 112.816, 0.37", "-31.2418, 49.0149, 113.884, 0.07", "-31.2075, 49.6537, 114.476, 0.74", "-31.1665, 50.9674, 115.729, 0.22", "-31.1837, 51.9233, 116.665, 0.96", "-31.2933, 53.2021, 117.992, 0.22", "-31.4416, 54.0373, 118.866, 0.37", "-31.7179, 55.0311, 119.901, 0.15", "-32.0818, 55.9364, 120.826, 0.15", "-32.4001, 56.5433, 121.419, 0.59", "-33.033, 57.6071, 122.47, 1.18", "-33.7485, 58.794, 123.693, 0.15", "-34.0295, 59.2804, 124.246, 0.37", "-34.5196, 60.1747, 125.365, 0.15", "-34.7358, 60.642, 125.989, 0.37", "-35.0994, 61.6753, 127.495, 0.15", "-35.2292, 62.2253, 128.49, 0.96", "-35.2846, 62.6654, 129.46, 0.96", "-35.3254, 63.1924, 130.686, 0.22", "-35.3321, 63.6922, 131.942, 0.59", "-35.323, 64.3875, 133.817, 0.29", "-35.2957, 65.5347, 137.284, 0.15", "-35.2999, 66.0093, 138.806, 0.37" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "10.0501, 10.156, 12.9207, 0.81", "10.8017, 10.3559, 13.7053, 0.81", "11.7726, 10.5912, 14.7418, 1.03", "12.6298, 10.737, 15.6467, 0.81", "13.4773, 10.7924, 16.5146, 0.81", "14.3195, 10.8474, 17.3771, 0.81", "14.7944, 10.8785, 17.8635, 0.96", "15.9632, 11.0161, 19.1022, 1.11", "16.6624, 11.0871, 19.8355, 1.11", "17.5588, 11.0555, 20.7096, 1.47" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "41.3452, 11.9952, 32.6054, 0.22", "41.5951, 12.7898, 35.205, 0.22", "41.7956, 13.3642, 36.9246, 0.22", "41.9397, 13.8387, 38.0984, 0.22", "42.1118, 14.4069, 39.3605, 0.07", "42.2998, 15.0254, 40.6221, 0.22", "42.5393, 15.7623, 42.0057, 0.15", "42.8192, 16.5135, 43.1933, 0.15", "43.2426, 17.5083, 44.6844, 0.22", "43.5331, 18.1462, 45.6021, 0.15", "43.6828, 18.4873, 46.0915, 0.29", "43.986, 19.1787, 47.1234, 0.44", "44.5892, 20.4177, 49.0795, 0.15", "45.0161, 21.1399, 50.3703, 0.15", "45.2838, 21.4967, 51.1424, 0.22", "45.8873, 22.2059, 52.9017, 0.22", "46.3747, 22.6831, 54.2939, 0.44", "46.885, 23.1368, 55.7671, 0.52", "47.4909, 23.6256, 57.4599, 0.29", "48.0404, 23.9932, 58.9132, 0.44", "48.6863, 24.3341, 60.5171, 0.59", "49.2798, 24.5781, 61.8642, 0.44", "49.9204, 24.85, 63.3761, 0.66" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "41.3452, 11.9952, 32.6054, 0.22", "42.4179, 12.5575, 32.405, 0.22", "43.1018, 12.8959, 32.2918, 0.22", "43.8449, 13.2529, 32.1837, 0.22", "44.4664, 13.5156, 32.1098, 0.44", "45.5408, 13.9849, 32.0266, 0.22", "46.4986, 14.4123, 32.0077, 0.29", "47.504, 14.8816, 32.0636, 0.22", "48.2102, 15.2167, 32.1968, 0.59", "49.2927, 15.7301, 32.5347, 0.22", "50.0574, 16.0936, 32.8656, 0.22", "50.7309, 16.4173, 33.2319, 0.52", "51.9272, 16.9744, 33.9459, 0.59", "52.9182, 17.429, 34.5383, 0.22", "53.4848, 17.6946, 34.8762, 0.22", "54.1921, 18.0411, 35.2838, 0.22", "54.7068, 18.2693, 35.5423, 0.44", "55.6211, 18.6546, 35.9559, 0.22", "56.2787, 18.9111, 36.2428, 0.22", "57.0221, 19.1994, 36.6373, 0.22", "57.4335, 19.3649, 36.8977, 0.22", "57.9762, 19.5953, 37.2647, 0.22", "58.3598, 19.7654, 37.5576, 0.22", "58.8666, 19.9896, 37.9547, 0.22", "59.7593, 20.3211, 38.581, 0.29", "60.3068, 20.4922, 38.8943, 0.29", "61.0381, 20.6995, 39.2509, 0.22", "61.819, 20.9195, 39.566, 0.74", "62.4558, 21.0993, 39.7749, 1.03", "63.3674, 21.3465, 39.9828, 0.66", "64.5408, 21.6544, 40.1197, 0.22", "65.1505, 21.8259, 40.1389, 0.29", "65.971, 22.0717, 40.099, 0.59", "66.8622, 22.3155, 39.9783, 0.22", "67.7916, 22.5064, 39.7597, 0.37", "68.5834, 22.605, 39.4715, 0.22", "69.1178, 22.6347, 39.2306, 0.22", "69.5585, 22.6365, 39.0126, 0.22", "70.2667, 22.6296, 38.6321, 0.52", "71.2274, 22.5956, 38.0323, 0.22", "71.9183, 22.5387, 37.5767, 0.37", "72.7876, 22.4391, 36.8988, 0.15", "73.5826, 22.3528, 36.1758, 0.15", "74.189, 22.3193, 35.5364, 0.66", "75.3061, 22.3362, 34.1972, 0.15", "75.8227, 22.3799, 33.5067, 0.22", "76.801, 22.4559, 32.019, 0.22", "77.0954, 22.4699, 31.4936, 0.22", "77.5098, 22.5005, 30.6974, 0.22", "77.7665, 22.5327, 30.1828, 0.29", "78.029, 22.6354, 29.6451, 0.29", "78.2488, 22.7815, 29.2034, 0.29", "78.6259, 23.0792, 28.5337, 0.29", "78.9898, 23.3165, 28.0268, 0.29", "79.2319, 23.4544, 27.7518, 0.66", "79.6949, 23.7357, 27.2871, 0.59", "80.46, 24.2479, 26.5502, 0.22", "80.9002, 24.5771, 26.1047, 0.59", "81.5177, 25.0564, 25.442, 0.22", "82.1243, 25.4748, 24.7621, 0.22", "82.6973, 25.8033, 24.1107, 0.37", "83.6623, 26.1942, 22.976, 0.15", "84.3567, 26.3401, 22.0931, 0.52", "85.0133, 26.3194, 21.1783, 0.88", "85.6302, 26.0481, 20.1924, 0.29", "86.087, 25.5543, 19.3964, 0.52", "86.5887, 24.6462, 18.5013, 0.29", "86.9136, 23.7989, 17.9275, 0.29", "87.1907, 22.9488, 17.4818, 0.59", "87.5385, 21.8532, 16.9885, 0.22", "87.7505, 21.1915, 16.732, 0.29", "88.14, 20.2233, 16.4252, 0.29", "88.3877, 19.7962, 16.3524, 0.29", "88.7813, 19.3115, 16.3427, 0.22", "89.5897, 18.5264, 16.4232, 0.22", "90.0774, 18.0955, 16.5074, 0.44", "90.7168, 17.5426, 16.6375, 0.66", "92.0016, 16.4728, 16.9128, 0.22", "92.6214, 15.9655, 17.0469, 0.22", "93.6494, 15.0777, 17.2759, 0.22", "94.5806, 14.2342, 17.4465, 0.22", "95.0434, 13.8547, 17.4689, 0.22", "95.5064, 13.5221, 17.4247, 0.22", "96.0493, 13.1874, 17.2798, 0.22", "96.6576, 12.7967, 16.9758, 0.22", "97.2336, 12.382, 16.494, 0.22", "97.9912, 11.691, 15.6361, 0.22", "98.3071, 11.3442, 15.2334, 0.22", "98.6166, 10.9439, 14.8236, 0.37", "99.1907, 10.1517, 14.0662, 0.22", "99.7405, 9.395, 13.3685, 0.44", "100.514, 8.24409, 12.4279, 0.15", "100.743, 7.86764, 12.1601, 0.37", "101.311, 6.93776, 11.5247, 0.15", "101.585, 6.52006, 11.2429, 0.37", "102.033, 5.87653, 10.8621, 0.37" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-14.5668, -32.6487, -2.29156, 0.22", "-15.1082, -33.1003, -2.0787, 0.22", "-15.3875, -33.3332, -1.96889, 0.22", "-15.8643, -33.7307, -1.78147, 0.22", "-16.5174, -34.2754, -1.5247, 0.22", "-16.8627, -34.5633, -1.38895, 0.22", "-17.2845, -34.9151, -1.22314, 0.22", "-23.7973, -38.8817, 1.2898, 0.22" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-14.5668, -32.6487, -2.29156, 0.37", "-14.721, -33.7055, -3.49968, 0.37", "-14.9149, -34.5216, -4.30178, 0.37", "-15.2537, -35.4949, -5.13494, 0.52", "-15.7725, -36.6743, -5.97416, 0.74", "-16.4226, -37.9731, -6.67447, 0.22", "-16.6853, -38.4809, -6.89384, 0.22", "-17.2814, -39.5527, -7.15461, 0.29", "-17.9081, -40.6749, -7.32422, 0.66", "-18.3329, -41.436, -7.39377, 0.29", "-18.923, -42.6433, -7.47378, 0.37", "-19.4316, -43.9749, -7.58477, 0.37", "-19.8103, -45.2155, -7.75192, 0.44", "-20.1315, -46.455, -7.97265, 0.52", "-20.3958, -47.4837, -8.17467, 0.44", "-20.8388, -49.1096, -8.45804, 0.44", "-21.2936, -50.5591, -8.70688, 0.22", "-21.5754, -51.3522, -8.84066, 0.52", "-21.9275, -52.2703, -9.01871, 0.88", "-22.5422, -53.917, -9.43461, 0.52", "-22.9968, -55.2386, -9.9137, 0.81", "-23.4015, -56.482, -10.5318, 0.29", "-23.5758, -57.1715, -10.964, 0.37", "-23.6795, -57.8117, -11.4115, 0.52", "-23.7938, -58.9634, -12.283, 0.44", "-23.867, -60.1255, -13.1931, 0.66", "-23.9566, -61.0645, -13.8939, 0.74", "-24.1498, -62.3575, -14.7108, 0.44", "-24.4725, -63.8519, -15.5254, 0.29", "-24.7557, -64.886, -16.0218, 0.29", "-24.9812, -65.6062, -16.3273, 0.37", "-25.3624, -66.82, -16.7538, 0.29", "-25.748, -68.0288, -17.1268, 0.29", "-25.9883, -68.751, -17.3399, 0.29", "-26.4138, -70.0409, -17.7642, 0.29", "-26.6671, -70.9171, -18.1144, 0.96", "-26.864, -71.7164, -18.4919, 0.44", "-27.111, -72.9212, -19.1127, 0.29", "-27.3417, -74.1416, -19.79, 0.37", "-27.5928, -75.2879, -20.4561, 0.22", "-27.9085, -76.4496, -21.1356, 0.22", "-28.0504, -76.9186, -21.4305, 0.29", "-32.4256, -87.2117, -24.2455, 0.29", "-36.2858, -97.681, -27.1924, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-19.0221, -69.6542, -33.9584, 0.07", "-21.2663, -76.3827, -39.3506, 0.07", "-22.8968, -83.889, -43.9271, 0.07", "-24.616, -90.9753, -49.0736, 0.07", "-27.4002, -97.6898, -54.2209, 0.07", "-31.0527, -104.486, -58.6689, 0.07" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-19.0221, -69.6542, -33.9584, 0.07", "-20.3762, -75.8894, -39.0763, 0.07", "-21.6511, -81.238, -45.0923, 0.07", "-22.401, -87.8308, -49.9003, 0.07" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-2.72678, -34.6899, -10.0326, 0.52", "-4.03589, -36.0701, -10.3602, 0.52", "-4.68057, -37.2423, -10.6584, 0.52", "-5.21021, -38.9679, -11.1632, 0.59", "-5.39582, -40.2668, -11.6231, 0.74", "-5.44439, -41.4007, -12.1548, 0.59", "-5.44663, -42.6528, -12.8712, 0.88", "-5.32113, -43.9748, -13.7414, 0.59", "-5.25098, -44.6811, -14.2797, 0.44", "-5.23332, -45.4396, -14.9185, 0.74", "-5.41288, -46.6331, -15.8693, 0.96", "-5.59153, -47.2802, -16.2644, 0.81", "-6.12561, -48.9503, -17.0899, 0.37", "-6.519, -50.125, -17.548, 0.52", "-7.07772, -51.7393, -18.0824, 0.66", "-7.63661, -53.4368, -18.5886, 0.88", "-8.29274, -55.7592, -19.2562, 0.59", "-8.56703, -57.0501, -19.6532, 0.44", "-8.71513, -58.1064, -20.0181, 0.66", "-8.88744, -59.6905, -20.6453, 0.37", "-9.01334, -60.7231, -21.132, 0.66", "-9.23747, -61.8965, -21.7713, 0.66", "-9.60219, -63.2317, -22.5707, 0.59", "-9.92267, -64.2869, -23.1969, 0.74", "-10.2185, -65.335, -23.8218, 0.37", "-10.5239, -66.5536, -24.5423, 0.37", "-10.9492, -68.2002, -25.5202, 0.66", "-11.3502, -69.5844, -26.4041, 0.44", "-11.6867, -70.5741, -27.1446, 0.74", "-12.1654, -71.7985, -28.233, 0.29", "-12.3785, -72.3135, -28.746, 0.29", "-12.4971, -72.7018, -29.1623, 0.29", "-12.6256, -73.4599, -30.0029, 0.29", "-12.7469, -74.232, -30.9309, 0.22", "-12.8737, -74.9559, -31.9528, 0.22", "-12.9721, -75.6165, -32.9584, 0.37", "-12.99, -76.4731, -34.2081, 0.52", "-12.932, -77.0465, -34.9862, 0.74", "-12.7262, -78.0199, -36.2241, 0.44", "-12.4547, -79.1085, -37.5996, 0.44", "-12.3263, -79.6759, -38.3628, 0.44", "-12.2221, -80.5477, -39.5467, 0.22", "-12.2012, -81.0318, -40.2081, 0.22", "-12.2115, -81.5521, -40.8892, 0.22", "-12.2616, -82.205, -41.5981, 0.44", "-12.4451, -83.2574, -42.5043, 0.22", "-12.7057, -84.0989, -43.18, 0.22", "-16.3681, -91.9226, -49.7153, 0.22", "-20.6013, -98.3783, -57.2519, 0.22", "-24.8723, -104.964, -64.6591, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-2.72678, -34.6899, -10.0326, 0.37", "-1.6276, -36.2455, -10.0608, 0.37", "-0.991936, -37.4151, -10.1642, 0.37", "-0.43207, -38.5904, -10.3901, 0.37", "0.234351, -40.1292, -10.8085, 0.74", "0.862977, -41.6796, -11.3524, 0.74", "1.6561, -43.7443, -12.2186, 0.52", "2.29442, -45.4476, -13.0508, 0.52", "2.87122, -47.2089, -14.0214, 0.81", "3.19238, -48.4411, -14.7506, 1.11", "3.4797, -49.8723, -15.6526, 0.96", "3.72685, -51.2383, -16.5756, 0.88" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "17.5588, 11.0555, 20.7096, 0.52", "18.4993, 10.1803, 20.9288, 0.52", "19.4368, 9.57267, 20.951, 0.66", "20.2985, 9.06564, 20.9331, 0.44", "21.3569, 8.47751, 20.852, 0.88", "22.4494, 7.87984, 20.6791, 0.59", "23.621, 7.21344, 20.4034, 0.44", "24.5196, 6.78187, 20.1209, 0.44", "25.5933, 6.29361, 19.7637, 0.44", "26.6392, 5.81065, 19.4401, 0.74", "27.7335, 5.26739, 19.1826, 0.96", "28.9546, 4.63216, 19.0224, 0.44", "30.1572, 4.01288, 18.9208, 0.44", "31.2828, 3.45802, 18.8135, 0.59", "32.2563, 2.99227, 18.7226, 1.11", "33.2193, 2.53415, 18.6399, 0.44", "34.6167, 1.88496, 18.5152, 0.52", "35.628, 1.41762, 18.3752, 0.44", "36.338, 1.05907, 18.2369, 0.29", "37.0043, 0.689124, 18.0537, 0.52", "37.7442, 0.210002, 17.8231, 0.22", "38.2806, -0.205246, 17.6552, 0.37", "39.0015, -0.882122, 17.4865, 0.22", "39.7139, -1.60791, 17.3805, 0.59", "40.2933, -2.18126, 17.3098, 0.37", "40.8323, -2.67967, 17.2403, 0.81", "41.4105, -3.13129, 17.1633, 0.44", "42.1551, -3.61922, 17.0806, 0.88", "43.2681, -4.2197, 17.0413, 0.52", "44.3992, -4.75182, 17.0662, 0.81", "45.3507, -5.16459, 17.1654, 0.44", "46.6124, -5.71784, 17.373, 0.44", "47.6946, -6.20601, 17.6351, 0.96", "49.1141, -6.85194, 18.0741, 0.29", "49.9444, -7.22151, 18.3801, 0.59", "50.9875, -7.68259, 18.8004, 0.44", "51.5343, -7.9025, 18.9964, 0.22", "51.978, -8.07028, 19.1338, 0.22", "52.6406, -8.29356, 19.2977, 0.59", "53.3576, -8.52874, 19.4379, 0.44", "54.3539, -8.88348, 19.6574, 0.81", "55.5833, -9.47116, 20.0105, 0.29", "56.1807, -9.9417, 20.2525, 0.29", "56.7526, -10.701, 20.6163, 0.44", "57.0411, -11.3129, 20.8928, 0.22", "57.2767, -12.0476, 21.2103, 0.37", "57.5137, -12.9757, 21.6243, 0.81", "57.8062, -14.1995, 22.178, 0.37", "58.0752, -15.112, 22.6035, 0.22", "58.2785, -15.6518, 22.8729, 0.22", "58.4187, -15.9794, 23.0473, 0.22", "58.87, -16.9531, 23.5889, 0.22", "59.063, -17.3154, 23.806, 0.22", "59.4201, -17.9197, 24.1818, 0.37", "59.659, -18.3093, 24.4066, 0.81", "60.4054, -19.5296, 25.099, 0.29", "60.9507, -20.4515, 25.593, 0.59", "61.5527, -21.4769, 26.1015, 0.29", "61.894, -22.019, 26.3504, 0.29", "62.478, -22.8281, 26.6882, 0.22", "62.9027, -23.3254, 26.8888, 0.81", "63.333, -23.7544, 27.0564, 1.25", "64.1368, -24.4691, 27.3046, 0.74", "65.3322, -25.4777, 27.6564, 0.29", "65.9905, -26.0316, 27.8682, 0.29", "66.5962, -26.5674, 28.0824, 0.81", "66.8999, -26.8798, 28.1963, 0.81", "67.5841, -27.7291, 28.4985, 0.22", "68.0699, -28.4625, 28.7903, 0.44", "68.6786, -29.545, 29.3016, 0.59", "69.0503, -30.2722, 29.7182, 0.81", "69.5782, -31.4325, 30.487, 0.29", "69.913, -32.2715, 31.1093, 0.29", "70.321, -33.4036, 32.0109, 0.52", "70.6726, -34.3533, 32.8498, 0.88", "71.102, -35.5104, 33.9684, 0.88", "71.4149, -36.3796, 34.8609, 1.18", "71.7559, -37.3665, 35.8928, 0.22", "71.9389, -37.9449, 36.4618, 0.22", "72.2519, -39.0724, 37.4202, 0.37", "72.4186, -39.7546, 37.899, 0.66", "72.5339, -40.2427, 38.1769, 0.88", "72.9122, -41.7053, 38.9012, 0.22", "73.1433, -42.5344, 39.2661, 0.22", "73.3675, -43.32, 39.5714, 0.74", "73.8916, -45.2077, 40.2104, 0.22", "74.1019, -45.9378, 40.4501, 0.81", "74.4586, -47.0907, 40.8043, 0.22", "74.7406, -47.9559, 41.0338, 0.22", "74.9865, -48.659, 41.205, 1.18" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "17.5588, 11.0555, 20.7096, 0.44", "18.1419, 11.8799, 21.2793, 0.44", "18.6815, 12.4035, 21.8124, 0.66", "19.6431, 13.0521, 22.7724, 0.66", "20.2053, 13.3223, 23.3287, 0.66", "21.0901, 13.6433, 24.0956, 0.66", "22.0088, 13.9051, 24.8328, 0.59", "23.0308, 14.022, 25.6662, 0.66", "23.8539, 13.9961, 26.3289, 0.66", "24.6124, 13.8894, 26.9284, 0.66", "25.833, 13.6484, 27.9561, 0.44", "26.2124, 13.5659, 28.2735, 0.44", "27.0223, 13.4092, 28.9193, 0.81", "27.6481, 13.3215, 29.3866, 0.81", "28.5898, 13.2588, 30.0535, 0.44", "29.7825, 13.3004, 30.9038, 0.88", "30.2977, 13.3966, 31.2825, 0.88", "30.7995, 13.5662, 31.6404, 0.88", "31.9613, 14.0753, 32.4762, 0.66", "32.9452, 14.5119, 33.202, 0.59", "33.6402, 14.8063, 33.7449, 0.59", "34.5613, 15.1382, 34.4984, 0.66", "35.198, 15.3206, 35.0258, 0.66", "36.0933, 15.5205, 35.7461, 0.96", "37.1607, 15.6934, 36.5572, 1.03", "38.244, 15.8232, 37.3487, 0.66", "39.2088, 15.9405, 38.0298, 0.52", "40.1766, 16.098, 38.7104, 0.74", "40.7917, 16.2536, 39.1299, 0.44", "42.011, 16.6803, 39.9424, 0.88", "43.7052, 17.4268, 41.0656, 0.44", "44.4794, 17.7951, 41.5707, 0.44", "45.5412, 18.3054, 42.2847, 0.66", "46.4516, 18.7106, 42.9323, 0.59", "47.0833, 18.948, 43.4026, 0.88", "48.1512, 19.2307, 44.2329, 0.81", "48.5389, 19.2747, 44.564, 0.29", "49.1595, 19.2254, 45.1597, 0.29", "49.7454, 19.04, 45.8062, 0.52", "50.2074, 18.8187, 46.3665, 0.52", "50.8023, 18.5155, 47.06, 0.37", "51.2719, 18.3044, 47.5325, 0.37", "51.7223, 18.1594, 47.8638, 0.81", "52.0961, 18.0621, 48.0325, 1.11", "52.7662, 17.8973, 48.206, 1.03", "53.9058, 17.5764, 48.3035, 0.44", "54.7565, 17.2824, 48.2807, 0.66", "55.4794, 17.0019, 48.2494, 0.37", "56.3269, 16.6573, 48.2398, 0.29", "56.7349, 16.5083, 48.2596, 0.59", "57.3403, 16.3258, 48.3221, 0.88", "58.4867, 16.029, 48.4784, 0.44", "59.3187, 15.8332, 48.6229, 0.44", "59.8921, 15.7162, 48.7626, 0.96", "61.1235, 15.5014, 49.137, 0.59", "62.0416, 15.3451, 49.429, 0.37", "62.6232, 15.2332, 49.6495, 0.37", "63.1634, 15.0853, 49.8916, 0.22", "63.7845, 14.8547, 50.2153, 0.37", "64.5409, 14.5364, 50.6568, 0.66", "65.1503, 14.2644, 51.0328, 0.29", "66.0051, 13.927, 51.5654, 0.74", "66.9159, 13.6309, 52.1016, 0.44", "67.5367, 13.4469, 52.4545, 0.44", "68.1228, 13.2687, 52.7682, 0.74", "68.681, 13.0883, 53.0976, 0.81", "69.3222, 12.8872, 53.5327, 0.37", "69.6353, 12.7976, 53.7662, 0.29", "70.2587, 12.6197, 54.3, 0.74", "70.8175, 12.4075, 54.8776, 0.88", "71.4427, 12.0877, 55.6475, 0.52", "72.0057, 11.748, 56.3848, 0.66", "72.6309, 11.3758, 57.1873, 0.52", "72.9139, 11.23, 57.5059, 0.29", "73.4615, 11.0153, 57.9764, 0.22", "73.8823, 10.9085, 58.2486, 0.22", "74.661, 10.8126, 58.6353, 0.44", "75.8737, 10.7875, 59.221, 0.66", "76.6205, 10.8448, 59.6105, 0.44", "77.5756, 10.9829, 60.164, 0.66", "78.5068, 11.1662, 60.7472, 0.37", "79.7873, 11.4723, 61.5851, 0.59", "80.7174, 11.726, 62.243, 0.37", "81.6691, 11.9877, 62.9516, 0.96", "82.2366, 12.1318, 63.4019, 1.55", "83.5039, 12.3988, 64.4442, 0.22", "84.0366, 12.4837, 64.8786, 0.66", "84.4089, 12.5283, 65.1663, 0.74", "85.3234, 12.5959, 65.8007, 0.22", "85.8114, 12.5909, 66.1329, 0.22", "86.2797, 12.5605, 66.4694, 0.22", "87.2179, 12.4506, 67.1636, 0.22", "87.7049, 12.3799, 67.5231, 0.74", "88.1072, 12.2982, 67.8255, 1.11", "89.1611, 12.0193, 68.6314, 0.22", "89.8699, 11.817, 69.1679, 0.22", "90.3696, 11.6492, 69.5257, 0.22", "90.8482, 11.4704, 69.8449, 0.22", "91.9214, 11.062, 70.545, 0.22", "92.7599, 10.7331, 71.0711, 0.74", "93.4873, 10.4433, 71.513, 0.29", "94.0206, 10.2208, 71.8395, 0.29", "94.7425, 9.92379, 72.2906, 0.22", "95.2421, 9.72541, 72.5891, 0.44", "96.0709, 9.43271, 73.0275, 0.59", "96.8369, 9.16015, 73.4135, 0.15", "97.3272, 8.97227, 73.6574, 0.15", "97.7796, 8.79945, 73.8878, 0.52", "98.8426, 8.38944, 74.4332, 0.15", "99.5454, 8.1391, 74.7982, 0.15", "99.945, 8.00806, 74.9989, 0.29", "100.334, 7.87565, 75.2061, 0.52", "100.934, 7.65638, 75.5477, 0.37", "101.605, 7.4101, 75.9458, 0.66", "102.603, 7.09102, 76.566, 0.15", "103.104, 6.95702, 76.8882, 0.81", "104.047, 6.76949, 77.4726, 0.22", "104.755, 6.69319, 77.881, 0.22", "105.526, 6.66346, 78.304, 0.37", "106.502, 6.69338, 78.8167, 0.22", "107.174, 6.7463, 79.169, 0.22", "107.881, 6.83291, 79.5383, 0.74", "109.317, 7.09125, 80.2168, 0.07", "109.957, 7.23691, 80.5154, 0.07", "110.428, 7.35376, 80.7334, 0.37" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "49.9204, 24.85, 63.3761, 0.22", "50.0655, 25.7109, 64.511, 0.22", "50.1286, 26.606, 65.5427, 0.22", "50.1368, 27.2463, 66.218, 0.22", "50.158, 27.8792, 66.8428, 0.44", "50.182, 28.6074, 67.515, 0.44", "50.2187, 29.658, 68.4476, 0.37", "50.2955, 30.9899, 69.5103, 0.52", "50.4137, 32.3705, 70.5139, 0.22", "50.4974, 33.5368, 71.3025, 0.22", "50.5434, 34.1596, 71.7056, 0.22", "50.6741, 35.2674, 72.3869, 0.22", "50.8449, 36.1906, 72.9574, 0.88", "51.253, 37.8823, 74.0267, 0.22", "51.4918, 38.8267, 74.6165, 0.22", "51.6075, 39.3448, 74.9372, 0.22", "51.7817, 40.2175, 75.4882, 0.22", "51.9062, 41.0937, 76.0556, 0.22", "51.9396, 41.651, 76.4484, 0.22", "51.9343, 42.5385, 77.1113, 0.22", "51.9121, 43.0152, 77.4736, 0.22", "51.8138, 44.2053, 78.3845, 0.29", "51.6818, 45.2497, 79.1859, 0.22", "51.6022, 45.8814, 79.668, 0.74", "51.5347, 46.4955, 80.1439, 0.74", "51.3562, 48.2228, 81.5681, 0.22", "51.2349, 49.1287, 82.3226, 0.15", "51.1204, 49.844, 82.9159, 0.15", "50.9777, 50.7354, 83.6559, 0.15", "50.8485, 51.4904, 84.3023, 0.37", "50.6264, 52.6652, 85.3436, 0.37", "50.4127, 53.715, 86.3169, 0.15", "50.3197, 54.161, 86.7277, 0.15", "50.1828, 54.8669, 87.3345, 0.22", "50.0566, 55.5481, 87.9149, 0.22", "50.0101, 56.0493, 88.3529, 0.22", "50.0055, 56.7528, 88.938, 0.22", "50.0449, 57.1572, 89.2828, 0.22", "50.2166, 58.2939, 90.2263, 0.44", "50.4808, 59.6241, 91.3072, 0.22", "50.8605, 61.0977, 92.4502, 0.15", "51.0948, 61.9447, 93.0693, 0.22", "51.4201, 63.1095, 93.8678, 0.22", "51.5762, 63.747, 94.2898, 0.29", "51.8041, 64.7928, 94.9456, 0.15", "51.9775, 65.8214, 95.5466, 0.59", "52.1284, 67.1219, 96.3761, 0.29", "52.281, 68.4172, 97.3539, 0.15", "52.404, 69.4471, 98.2958, 0.15", "52.4898, 70.0791, 98.96, 0.29", "52.5955, 70.7577, 99.9852, 0.52", "52.6962, 71.5947, 101.774, 1.11", "52.7108, 72.0275, 103.108, 0.88", "52.6746, 72.4297, 104.696, 0.22", "52.6505, 72.5615, 105.328, 0.22", "52.3882, 73.3794, 109.899, 0.22", "52.2635, 73.7226, 111.826, 0.22", "52.0787, 74.2259, 114.224, 0.22", "52.0016, 74.487, 115.263, 0.52", "51.909, 75.0753, 117.152, 0.66", "51.9202, 75.7974, 119.033, 0.15", "52.0531, 76.5154, 120.41, 0.37", "52.3723, 77.7327, 122.471, 0.22", "52.6369, 78.5831, 123.725, 0.22", "52.8602, 79.2635, 124.645, 0.96", "53.242, 80.4737, 126.053, 0.22", "53.5761, 81.5369, 127.147, 0.66" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "49.9204, 24.85, 63.3761, 0.22", "50.6688, 26.0641, 64.5345, 0.22", "51.2001, 26.882, 65.4362, 0.29", "51.632, 27.5304, 66.1526, 0.22", "52.0654, 28.1762, 66.8627, 0.22", "52.4084, 28.7027, 67.4478, 0.44", "53.1463, 29.7806, 68.7259, 0.15", "53.6849, 30.538, 69.6244, 0.15", "54.0094, 30.9433, 70.1558, 0.15", "54.0932, 31.0295, 70.2836, 0.15", "54.7683, 31.5653, 71.2056, 0.22", "55.4923, 32.0829, 72.1141, 0.22", "56.0408, 32.4092, 72.7213, 0.22", "56.4112, 32.5972, 73.0717, 0.66", "57.2628, 32.9245, 73.7847, 1.03", "58.2844, 33.189, 74.5103, 0.37", "59.1912, 33.272, 74.9866, 0.37", "60.3145, 33.2187, 75.4597, 0.22", "61.4527, 33.0048, 75.86, 0.22", "62.4382, 32.7287, 76.1211, 0.29", "63.2037, 32.457, 76.2548, 0.22", "64.4724, 31.9257, 76.4066, 0.22", "65.2895, 31.5345, 76.4837, 0.37", "66.0575, 31.1435, 76.5584, 0.22", "66.8486, 30.7435, 76.7031, 0.74", "68.2737, 30.1512, 76.9812, 0.22" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-23.7973, -38.8817, 1.2898, 0.22", "-29.5013, -42.7243, 3.49731, 0.22", "-35.0343, -46.7467, 5.83026, 0.22" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-23.7973, -38.8817, 1.2898, 0.22", "-32.3991, -43.7338, 3.26796, 0.22", "-41.4064, -48.1483, 4.01007, 0.22" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-22.401, -87.8308, -49.9003, 0.07", "-23.4504, -95.9195, -56.7319, 0.07", "-23.9739, -104.254, -63.3401, 0.07", "-23.2098, -112.104, -70.4694, 0.07", "-20.3472, -119.49, -77.5411, 0.07", "-16.0767, -124.899, -85.5493, 0.07" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-22.401, -87.8308, -49.9003, 0.07", "-24.7319, -94.3813, -55.9218, 0.07" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "3.72685, -51.2383, -16.5756, 0.37", "3.08768, -51.9481, -15.6751, 0.37", "2.45905, -52.5544, -14.7843, 0.22", "2.1095, -52.964, -14.2241, 0.29", "1.73636, -53.5185, -13.5072, 0.29", "1.54239, -53.8977, -13.073, 0.44", "1.29265, -54.5015, -12.4403, 0.44", "1.15922, -54.918, -12.0349, 0.44", "0.919286, -55.9309, -11.1863, 0.29", "0.761386, -56.7062, -10.632, 0.44", "0.528698, -57.9732, -9.80711, 0.66", "0.370124, -58.9107, -9.21785, 0.44", "0.258874, -59.6167, -8.79862, 0.66", "0.0963365, -60.6837, -8.19907, 0.44", "-0.0944421, -61.9443, -7.53452, 0.44", "-0.223818, -63.0498, -7.05292, 0.59", "-0.306702, -64.2735, -6.62078, 0.66", "-0.3104, -65.7488, -6.21698, 0.59", "-0.197511, -67.0027, -5.93099, 0.74", "0.072623, -68.4515, -5.62535, 0.59", "0.515464, -70.0758, -5.28219, 0.74", "0.960646, -71.4619, -4.97697, 0.37", "1.34876, -72.567, -4.69091, 0.52", "1.84554, -73.9932, -4.24277, 0.59", "2.12156, -74.8566, -3.91929, 0.44", "2.41986, -75.8757, -3.50934, 0.44", "2.65509, -76.9158, -3.06626, 0.74", "2.80178, -77.9294, -2.69047, 0.81", "2.89999, -79.4192, -2.24973, 0.44", "2.93837, -80.9554, -1.9118, 0.66", "2.96598, -82.0867, -1.72691, 0.52", "2.98605, -83.3079, -1.56438, 0.66", "2.98854, -84.7269, -1.38729, 0.66", "2.9471, -86.2891, -1.17863, 0.52", "2.86004, -87.8075, -0.949329, 0.52", "2.75207, -88.9844, -0.718538, 0.44", "2.61423, -90.2857, -0.415281, 0.66", "2.51323, -91.2384, -0.18315, 0.66", "2.38498, -92.2408, 0.0849342, 0.59", "2.21574, -93.3182, 0.36086, 0.59", "1.93369, -94.827, 0.737466, 0.74", "1.68167, -96.1329, 1.04977, 0.59", "1.46484, -97.3865, 1.32001, 0.59", "1.25936, -98.8676, 1.61649, 0.81", "1.01954, -100.964, 2.01103, 0.52", "0.874959, -102.491, 2.27726, 0.52", "0.80775, -103.461, 2.42575, 0.88", "0.78639, -104.932, 2.64959, 0.52", "0.894162, -106.044, 2.79521, 0.22", "1.00275, -106.501, 2.83484, 0.22", "1.18745, -107.086, 2.85942, 0.29", "1.38078, -107.76, 2.84837, 0.29", "1.5884, -108.774, 2.81106, 0.81", "1.72124, -109.995, 2.74731, 0.66", "1.74598, -111.409, 2.66333, 0.59", "1.69469, -112.821, 2.58051, 0.37", "1.61369, -113.978, 2.53298, 0.37", "1.52904, -114.959, 2.51566, 0.59", "1.42938, -116.036, 2.54599, 0.52", "1.32443, -117.232, 2.5864, 0.44", "1.26564, -118.145, 2.58969, 0.44", "1.24714, -119.155, 2.55155, 0.59", "1.26005, -119.919, 2.49397, 1.11", "1.30648, -121.478, 2.32082, 0.59", "1.33436, -122.801, 2.11735, 0.37", "1.34174, -123.874, 1.91352, 0.37", "1.31665, -124.838, 1.70751, 0.29", "1.27338, -125.703, 1.49488, 0.66", "1.24794, -126.324, 1.32849, 0.66", "1.24757, -127.735, 0.952955, 0.37", "1.2959, -128.333, 0.816934, 0.66", "1.48082, -129.584, 0.566208, 0.44", "1.69713, -130.631, 0.358698, 0.29", "1.95776, -131.655, 0.131841, 0.59", "2.18991, -132.557, -0.0763538, 0.74", "2.50251, -133.867, -0.419034, 0.44", "2.66239, -134.699, -0.652671, 0.44", "2.76914, -135.438, -0.872798, 0.44", "2.84318, -136.307, -1.10393, 0.44", "2.86796, -137.666, -1.41285, 0.44", "2.80509, -139.316, -1.75226, 0.37", "2.7418, -140.136, -1.87129, 0.59", "2.64047, -141.371, -1.92067, 0.44", "2.59559, -142.337, -1.82635, 0.22", "2.61732, -143.031, -1.61472, 0.22", "2.67604, -143.517, -1.34608, 0.37", "2.766, -144.3, -0.705862, 0.37", "2.82923, -144.992, -0.00407004, 0.37", "2.88466, -145.598, 0.726219, 0.37", "2.97489, -146.329, 1.71908, 0.59", "3.05963, -146.919, 2.57296, 0.22", "3.10664, -147.612, 3.59364, 0.37", "3.07422, -148.148, 4.34369, 0.37", "3.01769, -148.44, 4.71593, 0.37", "2.81397, -149.133, 5.52062, 0.37", "2.70697, -149.452, 5.8279, 0.37", "2.36562, -150.523, 6.67746, 0.29", "2.09038, -151.425, 7.26999, 0.37", "1.75371, -152.481, 7.9016, 0.29", "1.58336, -153.061, 8.24357, 1.03", "1.31048, -154.101, 8.81539, 0.37", "1.1508, -154.837, 9.21308, 0.29", "0.993714, -155.789, 9.7121, 0.29", "0.768123, -157.236, 10.4751, 0.52", "0.578884, -158.402, 11.1158, 1.18", "0.346673, -159.813, 11.9232, 0.15", "0.254177, -160.475, 12.3187, 0.15", "0.180714, -161.232, 12.7456, 0.59" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "3.72685, -51.2383, -16.5756, 0.29", "4.1087, -52.3436, -17.0461, 0.29", "4.34434, -53.1894, -17.3049, 0.29", "4.43034, -54.3094, -17.6138, 0.37", "4.39031, -55.0031, -17.7705, 0.37", "4.29485, -55.9429, -17.9413, 0.29", "4.19228, -56.959, -18.0943, 0.44", "4.08252, -58.2395, -18.1807, 0.59", "3.93237, -60.3724, -18.246, 0.37", "3.87328, -61.6902, -18.2732, 0.37", "3.86373, -62.9141, -18.3159, 0.52", "3.85879, -64.1539, -18.36, 0.44", "3.92198, -65.4471, -18.4116, 0.44", "4.10687, -66.5215, -18.4379, 0.44", "4.39162, -67.3553, -18.4413, 0.88", "4.84399, -68.3871, -18.4771, 0.44", "5.43728, -78.1616, -21.2965, 0.44", "4.55445, -88.0232, -23.7446, 0.44", "2.99527, -97.569, -26.9418, 0.44", "1.38417, -107.073, -30.2313, 0.44", "-1.34366, -116.572, -32.7093, 0.44", "-5.25728, -125.638, -35.1567, 0.44", "-8.18523, -135.141, -37.3784, 0.44", "-9.61333, -144.889, -40.0031, 0.44", "-9.86953, -155.01, -41.3235, 0.44" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_63", "dend_52", "dend_51", "dend_48", "dend_45", "dend_40", "dend_37", "dend_18", "dend_15", "dend_14", "dend_9", "dend_0", "dend_67", "dend_64", "dend_60", "dend_53", "dend_50", "dend_49", "dend_47", "dend_46", "dend_42", "dend_41", "dend_39", "dend_38", "dend_26", "dend_19", "dend_17", "dend_16", "dend_11", "dend_10", "dend_6", "dend_1", "dend_66", "dend_65", "dend_62", "dend_61", "dend_55", "dend_54", "dend_44", "dend_43", "dend_32", "dend_27", "dend_25", "dend_20", "dend_13", "dend_12", "dend_8", "dend_7", "dend_5", "dend_2", "dend_57", "dend_56", "dend_34", "dend_33", "dend_31", "dend_28", "dend_24", "dend_21", "dend_4", "dend_3", "dend_59", "dend_58", "dend_36", "dend_35", "dend_30", "dend_29", "dend_23", "dend_22" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_63", "dend_52", "dend_51", "dend_48", "dend_45", "dend_40", "dend_37", "dend_18", "dend_15", "dend_14", "dend_9", "dend_0", "dend_67", "dend_64", "dend_60", "dend_53", "dend_50", "dend_49", "dend_47", "dend_46", "dend_42", "dend_41", "dend_39", "dend_38", "dend_26", "dend_19", "dend_17", "dend_16", "dend_11", "dend_10", "dend_6", "dend_1", "dend_66", "dend_65", "dend_62", "dend_61", "dend_55", "dend_54", "dend_44", "dend_43", "dend_32", "dend_27", "dend_25", "dend_20", "dend_13", "dend_12", "dend_8", "dend_7", "dend_5", "dend_2", "dend_57", "dend_56", "dend_34", "dend_33", "dend_31", "dend_28", "dend_24", "dend_21", "dend_4", "dend_3", "dend_59", "dend_58", "dend_36", "dend_35", "dend_30", "dend_29", "dend_23", "dend_22" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_63", "dend_52", "dend_51", "dend_48", "dend_45", "dend_40", "dend_37", "dend_18", "dend_15", "dend_14", "dend_9", "dend_0", "axon_0", "dend_67", "dend_64", "dend_60", "dend_53", "dend_50", "dend_49", "dend_47", "dend_46", "dend_42", "dend_41", "dend_39", "dend_38", "dend_26", "dend_19", "dend_17", "dend_16", "dend_11", "dend_10", "dend_6", "dend_1", "axon_1", "dend_66", "dend_65", "dend_62", "dend_61", "dend_55", "dend_54", "dend_44", "dend_43", "dend_32", "dend_27", "dend_25", "dend_20", "dend_13", "dend_12", "dend_8", "dend_7", "dend_5", "dend_2", "dend_57", "dend_56", "dend_34", "dend_33", "dend_31", "dend_28", "dend_24", "dend_21", "dend_4", "dend_3", "dend_59", "dend_58", "dend_36", "dend_35", "dend_30", "dend_29", "dend_23", "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_63", "dend_63", "dend_63", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_36", "dend_36", "dend_35", "dend_35", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_SBC_1fa95380bf_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_63, id: dend_63, parent: soma_0
create dend_63
public dend_63
// Section: dend_52, id: dend_52, parent: soma_0
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: soma_0
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_67, id: dend_67, parent: dend_63
create dend_67
public dend_67
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_60, id: dend_60, parent: dend_52
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_18
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_19
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_63, dend_52, dend_51, dend_48, dend_45, dend_40, dend_37, dend_18, dend_15, dend_14, dend_9, dend_0, dend_67, dend_64, dend_60, dend_53, dend_50, dend_49, dend_47, dend_46, dend_42, dend_41, dend_39, dend_38, dend_26, dend_19, dend_17, dend_16, dend_11, dend_10, dend_6, dend_1, dend_66, dend_65, dend_62, dend_61, dend_55, dend_54, dend_44, dend_43, dend_32, dend_27, dend_25, dend_20, dend_13, dend_12, dend_8, dend_7, dend_5, dend_2, dend_57, dend_56, dend_34, dend_33, dend_31, dend_28, dend_24, dend_21, dend_4, dend_3, dend_59, dend_58, dend_36, dend_35, dend_30, dend_29, dend_23, dend_22]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_63, dend_52, dend_51, dend_48, dend_45, dend_40, dend_37, dend_18, dend_15, dend_14, dend_9, dend_0, dend_67, dend_64, dend_60, dend_53, dend_50, dend_49, dend_47, dend_46, dend_42, dend_41, dend_39, dend_38, dend_26, dend_19, dend_17, dend_16, dend_11, dend_10, dend_6, dend_1, dend_66, dend_65, dend_62, dend_61, dend_55, dend_54, dend_44, dend_43, dend_32, dend_27, dend_25, dend_20, dend_13, dend_12, dend_8, dend_7, dend_5, dend_2, dend_57, dend_56, dend_34, dend_33, dend_31, dend_28, dend_24, dend_21, dend_4, dend_3, dend_59, dend_58, dend_36, dend_35, dend_30, dend_29, dend_23, dend_22]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_63, dend_52, dend_51, dend_48, dend_45, dend_40, dend_37, dend_18, dend_15, dend_14, dend_9, dend_0, axon_0, dend_67, dend_64, dend_60, dend_53, dend_50, dend_49, dend_47, dend_46, dend_42, dend_41, dend_39, dend_38, dend_26, dend_19, dend_17, dend_16, dend_11, dend_10, dend_6, dend_1, axon_1, dend_66, dend_65, dend_62, dend_61, dend_55, dend_54, dend_44, dend_43, dend_32, dend_27, dend_25, dend_20, dend_13, dend_12, dend_8, dend_7, dend_5, dend_2, dend_57, dend_56, dend_34, dend_33, dend_31, dend_28, dend_24, dend_21, dend_4, dend_3, dend_59, dend_58, dend_36, dend_35, dend_30, dend_29, dend_23, dend_22]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_69
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_63, dend_63, dend_63, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_36, dend_36, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_63(0), soma_0(0.49999967977018533)
    connect dend_52(0), soma_0(0.49999967977018533)
    connect dend_51(0), soma_0(0.49999967977018533)
    connect dend_48(0), soma_0(0.49999967977018533)
    connect dend_45(0), soma_0(0.49999967977018533)
    connect dend_40(0), soma_0(0.49999967977018533)
    connect dend_37(0), soma_0(0.49999967977018533)
    connect dend_18(0), soma_0(0.49999967977018533)
    connect dend_15(0), soma_0(0.49999967977018533)
    connect dend_14(0), soma_0(0.49999967977018533)
    connect dend_9(0), soma_0(0.49999967977018533)
    connect dend_0(0), soma_0(0.49999967977018533)
    connect axon_0(0), soma_0(1.0)
    connect dend_67(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_60(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.0293462, -12.9853, -0.0366919, 2.96605 ) }
    soma_0 { pt3dadd( -0.0916006, -11.7544, -0.0331152, 4.78829 ) }
    soma_0 { pt3dadd( -0.153855, -10.5234, -0.0295385, 5.73414 ) }
    soma_0 { pt3dadd( -0.216109, -9.29249, -0.0259618, 6.71072 ) }
    soma_0 { pt3dadd( -0.278364, -8.06156, -0.0223851, 7.64095 ) }
    soma_0 { pt3dadd( -0.340618, -6.83062, -0.0188084, 8.52026 ) }
    soma_0 { pt3dadd( -0.402872, -5.59969, -0.0152318, 9.22278 ) }
    soma_0 { pt3dadd( -0.465127, -4.36876, -0.0116551, 10.3473 ) }
    soma_0 { pt3dadd( -0.527381, -3.13782, -0.00807839, 11.5282 ) }
    soma_0 { pt3dadd( -0.589635, -1.90689, -0.00450171, 12.8198 ) }
    soma_0 { pt3dadd( -0.65189, -0.675958, -9.25027E-4, 13.2176 ) }
    soma_0 { pt3dadd( -0.714144, 0.554976, 0.00265166, 13.5115 ) }
    soma_0 { pt3dadd( -0.776398, 1.78591, 0.00622834, 13.548 ) }
    soma_0 { pt3dadd( -0.838653, 3.01684, 0.00980502, 13.3634 ) }
    soma_0 { pt3dadd( -0.900907, 4.24778, 0.0133817, 13.1199 ) }
    soma_0 { pt3dadd( -0.963162, 5.47871, 0.0169584, 12.2421 ) }
    soma_0 { pt3dadd( -1.02542, 6.70964, 0.0205351, 10.9571 ) }
    soma_0 { pt3dadd( -1.08767, 7.94058, 0.0241117, 9.09301 ) }
    soma_0 { pt3dadd( -1.14992, 9.17151, 0.0276884, 6.3102 ) }
    soma_0 { pt3dadd( -1.21218, 10.4024, 0.0312651, 4.08577 ) }
    soma_0 { pt3dadd( -1.27443, 11.6334, 0.0348418, 2.61233 ) }
    // Section: dend_63, id: dend_63, parent: soma_0 (entry count 21/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -3.98176, -4.35749, 18.7528, 0.96 ) }
    dend_63 { pt3dadd( -4.08176, -4.65863, 19.7778, 0.96 ) }
    dend_63 { pt3dadd( -4.17319, -4.93394, 20.7148, 1.33 ) }
    dend_63 { pt3dadd( -4.24973, -5.16444, 21.4993, 1.4 ) }
    // Section: dend_52, id: dend_52, parent: soma_0 (entry count 25/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 3.62822, 5.40051, 10.5928, 0.66 ) }
    dend_52 { pt3dadd( 5.12621, 5.27804, 11.4428, 0.66 ) }
    dend_52 { pt3dadd( 6.46264, 5.1896, 12.3012, 0.29 ) }
    dend_52 { pt3dadd( 7.63163, 5.16004, 13.1595, 0.22 ) }
    dend_52 { pt3dadd( 8.25396, 5.18023, 13.6323, 0.22 ) }
    dend_52 { pt3dadd( 9.22206, 5.21937, 14.3769, 0.22 ) }
    dend_52 { pt3dadd( 9.89611, 5.23399, 14.8995, 0.37 ) }
    dend_52 { pt3dadd( 11.0186, 5.26063, 15.8406, 0.29 ) }
    dend_52 { pt3dadd( 11.924, 5.31687, 16.6908, 0.59 ) }
    dend_52 { pt3dadd( 13.4591, 5.43779, 18.1802, 0.29 ) }
    dend_52 { pt3dadd( 14.3412, 5.50548, 19.0113, 0.22 ) }
    dend_52 { pt3dadd( 15.1111, 5.51791, 19.7255, 0.29 ) }
    dend_52 { pt3dadd( 16.1697, 5.46419, 20.6803, 0.29 ) }
    dend_52 { pt3dadd( 17.342, 5.33946, 21.6586, 0.66 ) }
    dend_52 { pt3dadd( 18.1045, 5.20583, 22.2418, 0.96 ) }
    dend_52 { pt3dadd( 19.0466, 4.96791, 22.9389, 0.29 ) }
    dend_52 { pt3dadd( 20.4817, 4.55485, 23.9815, 0.37 ) }
    dend_52 { pt3dadd( 21.0702, 4.38306, 24.4128, 0.29 ) }
    dend_52 { pt3dadd( 21.7291, 4.18522, 24.8541, 0.29 ) }
    dend_52 { pt3dadd( 22.307, 4.03879, 25.2515, 0.22 ) }
    dend_52 { pt3dadd( 22.6951, 3.999, 25.5431, 0.22 ) }
    dend_52 { pt3dadd( 23.8009, 4.02784, 26.4931, 0.22 ) }
    dend_52 { pt3dadd( 25.0773, 4.11218, 27.6094, 0.37 ) }
    dend_52 { pt3dadd( 25.8755, 4.19668, 28.3596, 0.88 ) }
    dend_52 { pt3dadd( 26.6465, 4.30726, 29.1219, 0.96 ) }
    dend_52 { pt3dadd( 27.7903, 4.52981, 30.2596, 0.29 ) }
    dend_52 { pt3dadd( 28.59, 4.71338, 31.0073, 0.29 ) }
    dend_52 { pt3dadd( 29.4428, 4.91161, 31.7267, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: soma_0 (entry count 53/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -2.42176, 8.47551, 13.5428, 0.88 ) }
    dend_51 { pt3dadd( -2.42176, 8.47551, 13.5428, 0.88 ) }
    dend_51 { pt3dadd( -2.83995, 9.73923, 14.3983, 0.88 ) }
    dend_51 { pt3dadd( -3.16428, 10.726, 14.9798, 0.88 ) }
    dend_51 { pt3dadd( -3.67873, 12.4217, 15.8627, 0.88 ) }
    dend_51 { pt3dadd( -4.06094, 13.8785, 16.5641, 0.88 ) }
    dend_51 { pt3dadd( -4.32329, 15.1809, 17.1593, 0.88 ) }
    dend_51 { pt3dadd( -4.52563, 16.4931, 17.7013, 0.88 ) }
    dend_51 { pt3dadd( -4.71675, 17.9278, 18.2553, 1.55 ) }
    dend_51 { pt3dadd( -4.95115, 19.6033, 18.9359, 0.88 ) }
    dend_51 { pt3dadd( -5.11675, 20.5795, 19.3724, 0.66 ) }
    dend_51 { pt3dadd( -5.43713, 21.9661, 20.1316, 0.44 ) }
    dend_51 { pt3dadd( -5.71546, 22.8283, 20.6949, 0.96 ) }
    dend_51 { pt3dadd( -6.18348, 23.9419, 21.5052, 0.74 ) }
    dend_51 { pt3dadd( -6.5947, 24.7619, 22.1267, 0.59 ) }
    dend_51 { pt3dadd( -7.2687, 25.998, 23.0381, 0.74 ) }
    dend_51 { pt3dadd( -8.03121, 27.4167, 24.0008, 1.03 ) }
    dend_51 { pt3dadd( -8.72959, 28.8291, 24.8654, 0.81 ) }
    dend_51 { pt3dadd( -9.18768, 30.0266, 25.4942, 0.81 ) }
    dend_51 { pt3dadd( -9.41937, 31.0088, 25.9153, 0.88 ) }
    dend_51 { pt3dadd( -9.48563, 31.6994, 26.1778, 0.96 ) }
    dend_51 { pt3dadd( -9.43889, 32.9167, 26.6271, 0.52 ) }
    dend_51 { pt3dadd( -9.29767, 33.863, 27.0408, 0.74 ) }
    dend_51 { pt3dadd( -9.14523, 34.8022, 27.6003, 0.88 ) }
    dend_51 { pt3dadd( -9.05078, 35.7248, 28.2928, 0.81 ) }
    dend_51 { pt3dadd( -9.04584, 36.5618, 29.1072, 1.03 ) }
    dend_51 { pt3dadd( -9.11561, 37.1347, 29.8244, 1.03 ) }
    dend_51 { pt3dadd( -9.29357, 37.9706, 31.1192, 0.81 ) }
    dend_51 { pt3dadd( -9.58183, 38.9948, 32.9678, 0.66 ) }
    dend_51 { pt3dadd( -9.75931, 39.5002, 33.9672, 0.66 ) }
    dend_51 { pt3dadd( -10.1491, 40.3199, 35.6609, 1.11 ) }
    dend_51 { pt3dadd( -10.5775, 41.0265, 37.163, 0.81 ) }
    dend_51 { pt3dadd( -10.8421, 41.401, 37.9794, 0.81 ) }
    dend_51 { pt3dadd( -11.0597, 41.7055, 38.6297, 0.66 ) }
    dend_51 { pt3dadd( -11.4005, 42.252, 39.6725, 1.18 ) }
    dend_51 { pt3dadd( -11.8426, 43.1524, 40.9902, 0.66 ) }
    dend_51 { pt3dadd( -12.2996, 44.1857, 42.1699, 0.59 ) }
    dend_51 { pt3dadd( -12.6942, 45.0815, 43.1042, 0.81 ) }
    dend_51 { pt3dadd( -13.1254, 45.9856, 44.0633, 0.81 ) }
    dend_51 { pt3dadd( -13.4488, 46.6796, 44.8122, 1.18 ) }
    dend_51 { pt3dadd( -14.0311, 48.0006, 46.1923, 0.52 ) }
    dend_51 { pt3dadd( -14.3647, 48.8526, 47.0318, 0.52 ) }
    dend_51 { pt3dadd( -14.8592, 50.3187, 48.4143, 0.96 ) }
    dend_51 { pt3dadd( -15.1202, 51.1911, 49.2326, 1.18 ) }
    dend_51 { pt3dadd( -15.5029, 52.5568, 50.5676, 0.74 ) }
    dend_51 { pt3dadd( -15.8216, 53.7788, 51.8267, 0.59 ) }
    dend_51 { pt3dadd( -16.0062, 54.5973, 52.666, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_51 { pt3dadd( -16.1739, 55.7564, 53.7375, 1.18 ) }
    dend_51 { pt3dadd( -16.2543, 56.6841, 54.4944, 1.33 ) }
    dend_51 { pt3dadd( -16.3309, 58.1453, 55.6029, 0.96 ) }
    dend_51 { pt3dadd( -16.4016, 59.8842, 56.8346, 0.66 ) }
    dend_51 { pt3dadd( -16.4678, 60.9722, 57.5276, 0.66 ) }
    dend_51 { pt3dadd( -16.6278, 62.3982, 58.2991, 0.52 ) }
    dend_51 { pt3dadd( -16.6843, 62.7265, 58.4344, 0.52 ) }
    dend_51 { pt3dadd( -16.8609, 63.5857, 58.6694, 0.52 ) }
    dend_51 { pt3dadd( -17.1068, 64.7087, 58.7873, 0.52 ) }
    dend_51 { pt3dadd( -17.5047, 66.5015, 58.8193, 0.37 ) }
    dend_51 { pt3dadd( -17.605, 66.9411, 58.838, 0.37 ) }
    dend_51 { pt3dadd( -17.7943, 67.8093, 58.929, 0.74 ) }
    dend_51 { pt3dadd( -17.8863, 68.5186, 59.087, 1.03 ) }
    dend_51 { pt3dadd( -17.9713, 69.8106, 59.5371, 0.59 ) }
    dend_51 { pt3dadd( -18.0259, 70.9288, 60.0799, 0.44 ) }
    dend_51 { pt3dadd( -18.0988, 71.9572, 60.7101, 0.96 ) }
    dend_51 { pt3dadd( -18.182, 72.6511, 61.1907, 1.18 ) }
    dend_51 { pt3dadd( -18.4114, 74.1846, 62.3604, 0.44 ) }
    dend_51 { pt3dadd( -18.59, 75.3992, 63.3202, 0.74 ) }
    dend_51 { pt3dadd( -18.687, 76.2017, 63.946, 0.52 ) }
    dend_51 { pt3dadd( -18.7868, 77.3418, 64.7505, 0.52 ) }
    dend_51 { pt3dadd( -18.8532, 78.4449, 65.4285, 0.74 ) }
    dend_51 { pt3dadd( -18.926, 79.9204, 66.2212, 0.52 ) }
    dend_51 { pt3dadd( -18.9644, 81.0858, 66.7448, 0.88 ) }
    dend_51 { pt3dadd( -18.9568, 82.0367, 67.1164, 1.03 ) }
    dend_51 { pt3dadd( -18.8912, 83.5352, 67.6157, 0.74 ) }
    dend_51 { pt3dadd( -18.8379, 84.5576, 67.947, 0.29 ) }
    dend_51 { pt3dadd( -18.8295, 85.1469, 68.1383, 0.29 ) }
    dend_51 { pt3dadd( -18.858, 85.8884, 68.3776, 0.52 ) }
    dend_51 { pt3dadd( -18.9271, 86.7306, 68.6559, 0.88 ) }
    dend_51 { pt3dadd( -18.9878, 87.5019, 68.9411, 1.03 ) }
    dend_51 { pt3dadd( -19.1112, 89.3212, 69.7298, 0.52 ) }
    dend_51 { pt3dadd( -19.1986, 90.6255, 70.3782, 0.52 ) }
    dend_51 { pt3dadd( -19.2442, 91.2306, 70.7119, 0.52 ) }
    dend_51 { pt3dadd( -19.3357, 92.0325, 71.2167, 0.37 ) }
    dend_51 { pt3dadd( -19.505, 92.976, 71.8947, 0.88 ) }
    dend_51 { pt3dadd( -19.8161, 94.327, 72.9894, 0.29 ) }
    dend_51 { pt3dadd( -20.0165, 95.0959, 73.6624, 0.29 ) }
    dend_51 { pt3dadd( -20.2148, 95.8109, 74.3572, 0.88 ) }
    dend_51 { pt3dadd( -20.481, 96.6765, 75.2327, 1.25 ) }
    dend_51 { pt3dadd( -20.7958, 97.6293, 76.1942, 0.44 ) }
    dend_51 { pt3dadd( -21.0907, 98.5522, 77.0482, 0.22 ) }
    dend_51 { pt3dadd( -21.2469, 99.1111, 77.5115, 0.81 ) }
    dend_51 { pt3dadd( -21.3982, 99.7397, 77.979, 0.88 ) }
    dend_51 { pt3dadd( -21.7311, 101.428, 79.0655, 0.29 ) }
    dend_51 { pt3dadd( -21.886, 102.42, 79.6171, 0.52 ) }
    dend_51 { pt3dadd( -22.0499, 103.669, 80.2142, 0.29 ) }
    dend_51 { pt3dadd( -22.188, 104.829, 80.7278, 0.52 ) }
    dend_51 { pt3dadd( -22.2434, 105.382, 80.975, 0.29 ) }
    dend_51 { pt3dadd( -22.306, 106.521, 81.4802, 0.74 ) }
    dend_51 { pt3dadd( -22.3163, 107.208, 81.7913, 0.74 ) }
    dend_51 { pt3dadd( -22.3128, 108.322, 82.3259, 0.88 ) }
    dend_51 { pt3dadd( -22.2613, 109.586, 82.9625, 0.44 ) }
    dend_51 { pt3dadd( -22.1606, 110.724, 83.5461, 0.44 ) }
    dend_51 { pt3dadd( -22.0339, 111.978, 84.2384, 0.81 ) }
    dend_51 { pt3dadd( -21.929, 113.007, 84.8399, 0.22 ) }
    dend_51 { pt3dadd( -21.8658, 113.636, 85.2133, 0.52 ) }
    dend_51 { pt3dadd( -21.7305, 114.995, 86.0434, 0.29 ) }
    dend_51 { pt3dadd( -21.6364, 116.016, 86.6257, 0.81 ) }
    dend_51 { pt3dadd( -21.5487, 117.266, 87.3765, 0.29 ) }
    dend_51 { pt3dadd( -21.5315, 117.75, 87.7028, 0.29 ) }
    dend_51 { pt3dadd( -21.5301, 118.71, 88.4705, 0.52 ) }
    dend_51 { pt3dadd( -21.5563, 119.386, 89.1228, 0.52 ) }
    dend_51 { pt3dadd( -21.6124, 120.164, 89.9866, 1.33 ) }
    dend_51 { pt3dadd( -21.6788, 121.347, 91.4618, 0.37 ) }
    dend_51 { pt3dadd( -21.674, 121.942, 92.2579, 0.37 ) }
    dend_51 { pt3dadd( -21.6336, 122.781, 93.4925, 0.52 ) }
    dend_51 { pt3dadd( -21.5955, 123.598, 94.8003, 0.52 ) }
    dend_51 { pt3dadd( -21.5696, 124.134, 95.7142, 0.66 ) }
    dend_51 { pt3dadd( -21.5275, 125.009, 97.3311, 0.37 ) }
    dend_51 { pt3dadd( -21.4502, 125.733, 98.6398, 0.07 ) }
    dend_51 { pt3dadd( -21.3971, 126.032, 99.1621, 0.59 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 72/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -7.05177, -2.03074, 8.53279, 1.18 ) }
    dend_48 { pt3dadd( -7.09087, -2.20609, 8.6737, 1.18 ) }
    dend_48 { pt3dadd( -7.40093, -3.05733, 9.48675, 1.03 ) }
    dend_48 { pt3dadd( -7.79509, -3.83272, 10.2637, 1.03 ) }
    dend_48 { pt3dadd( -8.11434, -4.30634, 10.7509, 1.11 ) }
    dend_48 { pt3dadd( -8.82356, -5.09463, 11.5932, 0.81 ) }
    dend_48 { pt3dadd( -9.46923, -5.63093, 12.1892, 0.96 ) }
    dend_48 { pt3dadd( -10.1903, -6.15919, 12.8022, 0.96 ) }
    dend_48 { pt3dadd( -10.8834, -6.53529, 13.2952, 1.03 ) }
    dend_48 { pt3dadd( -11.6039, -6.77627, 13.7015, 1.33 ) }
    dend_48 { pt3dadd( -12.578, -6.97979, 14.1349, 1.25 ) }
    dend_48 { pt3dadd( -13.6129, -7.0742, 14.4122, 1.62 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 84/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -5.17176, 6.69201, 11.7128, 1.03 ) }
    dend_45 { pt3dadd( -6.25346, 6.95516, 13.0308, 1.03 ) }
    dend_45 { pt3dadd( -7.74176, 7.14076, 14.8612, 1.18 ) }
    dend_45 { pt3dadd( -8.90516, 7.13136, 16.3937, 0.88 ) }
    dend_45 { pt3dadd( -9.90942, 6.97286, 17.9021, 0.81 ) }
    dend_45 { pt3dadd( -10.8704, 6.74671, 19.4533, 0.81 ) }
    dend_45 { pt3dadd( -11.6746, 6.53779, 20.8393, 0.96 ) }
    dend_45 { pt3dadd( -12.4682, 6.2771, 22.3274, 1.03 ) }
    dend_45 { pt3dadd( -13.338, 5.93263, 24.1978, 0.81 ) }
    dend_45 { pt3dadd( -14.3279, 5.541, 26.4668, 1.03 ) }
    dend_45 { pt3dadd( -14.565, 5.47033, 27.0064, 1.03 ) }
    dend_45 { pt3dadd( -15.2021, 5.38402, 28.3837, 1.03 ) }
    dend_45 { pt3dadd( -15.8697, 5.34199, 29.7577, 0.74 ) }
    dend_45 { pt3dadd( -16.7078, 5.2886, 31.4376, 0.66 ) }
    dend_45 { pt3dadd( -17.3276, 5.22013, 32.7236, 0.88 ) }
    dend_45 { pt3dadd( -18.0015, 5.07792, 34.2669, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_45 { pt3dadd( -18.5673, 4.86465, 35.8433, 1.11 ) }
    dend_45 { pt3dadd( -19.1912, 4.53111, 37.9712, 0.74 ) }
    dend_45 { pt3dadd( -19.6347, 4.27431, 39.778, 0.96 ) }
    dend_45 { pt3dadd( -20.1602, 4.10376, 42.3766, 0.81 ) }
    dend_45 { pt3dadd( -20.394, 4.14783, 43.7363, 0.81 ) }
    dend_45 { pt3dadd( -20.6363, 4.35195, 45.2243, 0.81 ) }
    dend_45 { pt3dadd( -20.853, 4.6318, 46.377, 0.81 ) }
    dend_45 { pt3dadd( -21.2868, 5.25351, 48.0443, 0.66 ) }
    dend_45 { pt3dadd( -21.9803, 6.16051, 49.8627, 0.88 ) }
    dend_45 { pt3dadd( -22.3695, 6.57303, 50.5016, 0.66 ) }
    dend_45 { pt3dadd( -22.8237, 6.96151, 51.0514, 0.44 ) }
    dend_45 { pt3dadd( -23.4487, 7.3806, 51.6244, 0.44 ) }
    dend_45 { pt3dadd( -24.049, 7.69639, 52.153, 0.44 ) }
    dend_45 { pt3dadd( -24.6902, 7.96335, 52.7543, 0.44 ) }
    dend_45 { pt3dadd( -25.4484, 8.17796, 53.5516, 1.25 ) }
    dend_45 { pt3dadd( -26.1958, 8.34932, 54.4189, 1.55 ) }
    dend_45 { pt3dadd( -27.3068, 8.62107, 55.7545, 0.74 ) }
    dend_45 { pt3dadd( -28.6675, 8.97464, 57.4208, 0.44 ) }
    dend_45 { pt3dadd( -29.3139, 9.11731, 58.2611, 0.44 ) }
    dend_45 { pt3dadd( -30.2967, 9.26159, 59.5857, 0.59 ) }
    dend_45 { pt3dadd( -30.9512, 9.30124, 60.4895, 0.59 ) }
    dend_45 { pt3dadd( -31.4772, 9.30022, 61.1884, 0.59 ) }
    dend_45 { pt3dadd( -32.5337, 9.25615, 62.5726, 0.37 ) }
    dend_45 { pt3dadd( -33.4678, 9.22981, 63.7323, 0.88 ) }
    dend_45 { pt3dadd( -34.7033, 9.21755, 65.2295, 1.77 ) }
    dend_45 { pt3dadd( -36.377, 9.23176, 67.2432, 0.66 ) }
    dend_45 { pt3dadd( -37.5878, 9.21666, 68.7417, 1.4 ) }
    dend_45 { pt3dadd( -39.041, 9.14721, 70.6186, 0.59 ) }
    dend_45 { pt3dadd( -39.916, 9.08719, 71.771, 0.88 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 29/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -6.85176, 5.80026, 5.85279, 2.43 ) }
    dend_40 { pt3dadd( -6.85176, 5.80026, 5.85279, 2.43 ) }
    dend_40 { pt3dadd( -8.06731, 6.28803, 7.0712, 1.03 ) }
    dend_40 { pt3dadd( -8.89086, 6.70094, 8.04876, 0.88 ) }
    dend_40 { pt3dadd( -9.63481, 7.17918, 9.13167, 0.66 ) }
    dend_40 { pt3dadd( -10.2405, 7.68417, 10.1926, 1.11 ) }
    dend_40 { pt3dadd( -10.7645, 8.2462, 11.2344, 0.96 ) }
    dend_40 { pt3dadd( -11.1872, 8.91419, 12.2447, 0.88 ) }
    dend_40 { pt3dadd( -11.5402, 9.84779, 13.3366, 0.96 ) }
    dend_40 { pt3dadd( -11.7913, 10.8269, 14.1938, 0.88 ) }
    dend_40 { pt3dadd( -11.9881, 11.7107, 14.7648, 0.96 ) }
    dend_40 { pt3dadd( -12.2815, 12.7101, 15.1618, 0.88 ) }
    dend_40 { pt3dadd( -12.8355, 13.8083, 15.2379, 0.74 ) }
    dend_40 { pt3dadd( -13.495, 14.6216, 15.0115, 0.74 ) }
    dend_40 { pt3dadd( -14.4211, 15.5468, 14.5621, 0.96 ) }
    dend_40 { pt3dadd( -15.3357, 16.3421, 14.0614, 0.81 ) }
    dend_40 { pt3dadd( -16.1891, 16.9983, 13.5645, 0.81 ) }
    dend_40 { pt3dadd( -17.2141, 17.6862, 12.9538, 0.88 ) }
    dend_40 { pt3dadd( -18.374, 18.3819, 12.2401, 0.81 ) }
    dend_40 { pt3dadd( -19.2427, 18.8835, 11.6654, 1.11 ) }
    dend_40 { pt3dadd( -19.7053, 19.1561, 11.3471, 1.11 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 50/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 4.63823, -6.56124, 5.83279, 1.4 ) }
    dend_37 { pt3dadd( 5.54941, -5.60784, 6.4275, 1.4 ) }
    dend_37 { pt3dadd( 6.30785, -4.81426, 6.92252, 1.03 ) }
    dend_37 { pt3dadd( 7.63644, -3.4241, 7.78967, 0.74 ) }
    dend_37 { pt3dadd( 8.56008, -2.45766, 8.39252, 0.96 ) }
    dend_37 { pt3dadd( 9.43144, -1.54593, 8.96123, 1.47 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 56/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -0.511725, -13.562, 0.232789, 3.24 ) }
    dend_18 { pt3dadd( -0.511725, -13.562, 0.232789, 3.24 ) }
    dend_18 { pt3dadd( -1.09402, -15.5468, 0.641393, 2.21 ) }
    dend_18 { pt3dadd( -1.60529, -17.2896, 1.00015, 1.92 ) }
    dend_18 { pt3dadd( -1.93933, -18.4282, 1.23456, 2.06 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 61/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 1.90825, -13.5415, -2.02721, 1.11 ) }
    dend_15 { pt3dadd( 2.06263, -13.6205, -2.04905, 1.11 ) }
    dend_15 { pt3dadd( 3.88597, -14.4587, -2.24484, 0.74 ) }
    dend_15 { pt3dadd( 5.14589, -15.0379, -2.38014, 0.59 ) }
    dend_15 { pt3dadd( 6.1014, -15.4771, -2.48274, 0.74 ) }
    dend_15 { pt3dadd( 7.65835, -16.1928, -2.64994, 0.81 ) }
    dend_15 { pt3dadd( 8.83491, -16.7337, -2.77628, 0.81 ) }
    dend_15 { pt3dadd( 10.1397, -17.2596, -2.90157, 0.88 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 69/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 4.79827, -6.47924, -1.43721, 1.77 ) }
    dend_14 { pt3dadd( 4.79827, -6.47924, -1.43721, 1.77 ) }
    dend_14 { pt3dadd( 5.21101, -6.74134, -1.04139, 0.81 ) }
    dend_14 { pt3dadd( 6.009, -7.10134, -0.405313, 0.44 ) }
    dend_14 { pt3dadd( 6.57422, -7.29639, -0.0342595, 0.44 ) }
    dend_14 { pt3dadd( 6.92101, -7.41276, 0.15586, 0.44 ) }
    dend_14 { pt3dadd( 7.46365, -7.62969, 0.411609, 0.44 ) }
    dend_14 { pt3dadd( 8.25353, -8.04674, 0.684972, 0.81 ) }
    dend_14 { pt3dadd( 9.02393, -8.7406, 0.802477, 0.52 ) }
    dend_14 { pt3dadd( 9.3965, -9.24031, 0.802779, 0.44 ) }
    dend_14 { pt3dadd( 9.78383, -9.76706, 0.832601, 0.81 ) }
    dend_14 { pt3dadd( 10.353, -10.4966, 0.891542, 0.96 ) }
    dend_14 { pt3dadd( 11.1574, -11.4685, 0.987949, 1.18 ) }
    dend_14 { pt3dadd( 12.0888, -12.5098, 1.15688, 0.74 ) }
    dend_14 { pt3dadd( 13.0097, -13.4164, 1.41394, 0.66 ) }
    dend_14 { pt3dadd( 14.2932, -14.3889, 1.89944, 0.59 ) }
    dend_14 { pt3dadd( 14.9476, -14.7409, 2.20537, 0.52 ) }
    dend_14 { pt3dadd( 15.6341, -15.0047, 2.53164, 0.44 ) }
    dend_14 { pt3dadd( 16.3071, -15.188, 2.84317, 0.59 ) }
    dend_14 { pt3dadd( 16.7813, -15.3071, 3.01204, 0.59 ) }
    dend_14 { pt3dadd( 17.3966, -15.5665, 3.12186, 0.44 ) }
    dend_14 { pt3dadd( 17.8216, -16.0181, 3.06867, 0.44 ) }
    dend_14 { pt3dadd( 18.3716, -16.9821, 2.90199, 0.88 ) }
    dend_14 { pt3dadd( 18.644, -17.5216, 2.77576, 1.25 ) }
    dend_14 { pt3dadd( 19.2669, -18.7351, 2.421, 0.29 ) }
    dend_14 { pt3dadd( 19.4305, -19.0182, 2.31905, 0.29 ) }
    dend_14 { pt3dadd( 19.8902, -19.6246, 2.0532, 0.37 ) }
    dend_14 { pt3dadd( 20.3957, -20.1187, 1.82044, 0.22 ) }
    dend_14 { pt3dadd( 21.1189, -20.5855, 1.56982, 0.29 ) }
    dend_14 { pt3dadd( 21.7331, -20.8739, 1.35672, 0.29 ) }
    dend_14 { pt3dadd( 22.3035, -21.0885, 1.16069, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_14 { pt3dadd( 23.326, -21.4738, 0.805003, 0.44 ) }
    dend_14 { pt3dadd( 23.9484, -21.7316, 0.594517, 0.52 ) }
    dend_14 { pt3dadd( 24.919, -22.266, 0.284447, 0.37 ) }
    dend_14 { pt3dadd( 25.5132, -22.7475, 0.12693, 0.44 ) }
    dend_14 { pt3dadd( 26.0812, -23.3573, 0.0498026, 1.03 ) }
    dend_14 { pt3dadd( 26.4853, -23.8321, 0.073852, 1.03 ) }
    dend_14 { pt3dadd( 27.1153, -24.5974, 0.213946, 0.44 ) }
    dend_14 { pt3dadd( 27.8694, -25.3827, 0.478162, 0.66 ) }
    dend_14 { pt3dadd( 28.415, -25.8741, 0.745768, 0.44 ) }
    dend_14 { pt3dadd( 29.1528, -26.4218, 1.16134, 0.44 ) }
    dend_14 { pt3dadd( 30.3898, -27.2084, 1.82201, 0.81 ) }
    dend_14 { pt3dadd( 30.7825, -27.4218, 1.9883, 0.81 ) }
    dend_14 { pt3dadd( 31.8552, -27.9173, 2.27553, 0.44 ) }
    dend_14 { pt3dadd( 32.8438, -28.3487, 2.34273, 0.59 ) }
    dend_14 { pt3dadd( 34.0213, -28.9267, 2.22804, 0.66 ) }
    dend_14 { pt3dadd( 34.7784, -29.3775, 1.99528, 0.44 ) }
    dend_14 { pt3dadd( 35.7568, -30.0924, 1.49203, 0.59 ) }
    dend_14 { pt3dadd( 36.569, -30.7823, 0.880729, 0.81 ) }
    dend_14 { pt3dadd( 37.3041, -31.4869, 0.130035, 0.52 ) }
    dend_14 { pt3dadd( 37.8302, -32.0045, -0.483293, 0.37 ) }
    dend_14 { pt3dadd( 38.4772, -32.6531, -1.28335, 0.37 ) }
    dend_14 { pt3dadd( 39.0592, -33.2618, -1.96257, 0.52 ) }
    dend_14 { pt3dadd( 39.8687, -34.1758, -2.79204, 0.59 ) }
    dend_14 { pt3dadd( 40.3391, -34.7309, -3.20014, 0.88 ) }
    dend_14 { pt3dadd( 41.2137, -35.7757, -3.82637, 0.37 ) }
    dend_14 { pt3dadd( 41.5461, -36.1809, -4.00898, 0.37 ) }
    dend_14 { pt3dadd( 42.2537, -37.0511, -4.26795, 0.66 ) }
    dend_14 { pt3dadd( 43.1793, -38.1694, -4.51997, 0.37 ) }
    dend_14 { pt3dadd( 43.7524, -38.8298, -4.64771, 0.37 ) }
    dend_14 { pt3dadd( 44.3322, -39.4887, -4.81516, 0.66 ) }
    dend_14 { pt3dadd( 45.1418, -40.4178, -5.19248, 0.29 ) }
    dend_14 { pt3dadd( 45.5212, -40.8496, -5.48896, 0.29 ) }
    dend_14 { pt3dadd( 45.9292, -41.3408, -6.01358, 0.29 ) }
    dend_14 { pt3dadd( 46.2924, -41.8456, -6.69542, 0.29 ) }
    dend_14 { pt3dadd( 46.6074, -42.4433, -7.44559, 0.52 ) }
    dend_14 { pt3dadd( 46.8307, -42.9976, -7.98138, 0.74 ) }
    dend_14 { pt3dadd( 47.0608, -43.6699, -8.39023, 0.44 ) }
    dend_14 { pt3dadd( 47.3489, -44.5353, -8.6695, 0.37 ) }
    dend_14 { pt3dadd( 47.6185, -45.3067, -8.79465, 0.52 ) }
    dend_14 { pt3dadd( 48.028, -46.4503, -8.8966, 0.81 ) }
    dend_14 { pt3dadd( 48.4631, -47.677, -8.98345, 0.59 ) }
    dend_14 { pt3dadd( 48.847, -48.7844, -9.08501, 0.52 ) }
    dend_14 { pt3dadd( 49.1208, -49.6155, -9.18755, 0.44 ) }
    dend_14 { pt3dadd( 49.2994, -50.243, -9.28933, 0.44 ) }
    dend_14 { pt3dadd( 49.4834, -51.0521, -9.44521, 0.22 ) }
    dend_14 { pt3dadd( 49.6683, -52.1292, -9.63797, 0.66 ) }
    dend_14 { pt3dadd( 49.8028, -53.1351, -9.82566, 0.37 ) }
    dend_14 { pt3dadd( 50.0019, -54.448, -10.0839, 0.59 ) }
    dend_14 { pt3dadd( 50.2206, -55.6765, -10.2772, 0.37 ) }
    dend_14 { pt3dadd( 50.3807, -56.4468, -10.3476, 0.66 ) }
    dend_14 { pt3dadd( 50.6365, -57.548, -10.3541, 0.44 ) }
    dend_14 { pt3dadd( 50.8791, -58.4856, -10.3046, 0.29 ) }
    dend_14 { pt3dadd( 51.1477, -59.4189, -10.2582, 0.22 ) }
    dend_14 { pt3dadd( 51.3607, -60.0926, -10.272, 0.22 ) }
    dend_14 { pt3dadd( 51.6053, -60.8005, -10.347, 0.59 ) }
    dend_14 { pt3dadd( 51.8161, -61.4116, -10.4607, 0.22 ) }
    dend_14 { pt3dadd( 52.0628, -62.1506, -10.7148, 0.22 ) }
    dend_14 { pt3dadd( 52.3109, -62.8588, -11.0191, 0.29 ) }
    dend_14 { pt3dadd( 52.5511, -63.5271, -11.4025, 0.29 ) }
    dend_14 { pt3dadd( 52.701, -63.9225, -11.6759, 0.29 ) }
    dend_14 { pt3dadd( 52.9182, -64.5035, -12.1194, 0.37 ) }
    dend_14 { pt3dadd( 53.272, -65.4809, -12.9048, 0.44 ) }
    dend_14 { pt3dadd( 53.5281, -66.2294, -13.4856, 0.66 ) }
    dend_14 { pt3dadd( 53.882, -67.3727, -14.3082, 0.74 ) }
    dend_14 { pt3dadd( 54.0994, -68.1645, -14.8278, 0.74 ) }
    dend_14 { pt3dadd( 54.2771, -68.9495, -15.28, 0.37 ) }
    dend_14 { pt3dadd( 54.4486, -69.9211, -15.737, 0.22 ) }
    dend_14 { pt3dadd( 54.5789, -70.8038, -16.0414, 0.29 ) }
    dend_14 { pt3dadd( 54.6693, -71.3973, -16.2116, 0.44 ) }
    dend_14 { pt3dadd( 54.7608, -71.9164, -16.3383, 0.52 ) }
    dend_14 { pt3dadd( 54.984, -73.0457, -16.6744, 0.22 ) }
    dend_14 { pt3dadd( 55.1373, -73.7334, -16.9595, 0.29 ) }
    dend_14 { pt3dadd( 55.3126, -74.4594, -17.4863, 0.22 ) }
    dend_14 { pt3dadd( 55.4671, -75.0685, -18.1901, 0.22 ) }
    dend_14 { pt3dadd( 55.587, -75.6122, -18.9142, 0.52 ) }
    dend_14 { pt3dadd( 55.7138, -76.3023, -19.8212, 0.37 ) }
    dend_14 { pt3dadd( 55.7595, -76.5649, -20.1294, 0.37 ) }
    dend_14 { pt3dadd( 55.8304, -77.1054, -20.6599, 0.22 ) }
    dend_14 { pt3dadd( 55.8747, -77.692, -21.1383, 0.22 ) }
    dend_14 { pt3dadd( 55.9398, -78.7963, -21.8886, 0.29 ) }
    dend_14 { pt3dadd( 56.012, -79.5776, -22.3562, 0.37 ) }
    dend_14 { pt3dadd( 56.1408, -80.6626, -22.9749, 0.22 ) }
    dend_14 { pt3dadd( 56.2652, -81.5565, -23.5185, 0.44 ) }
    dend_14 { pt3dadd( 56.4056, -82.3799, -24.0386, 0.44 ) }
    dend_14 { pt3dadd( 56.5475, -83.0706, -24.4908, 0.15 ) }
    dend_14 { pt3dadd( 56.7355, -83.8757, -25.0254, 0.15 ) }
    dend_14 { pt3dadd( 56.8239, -84.2706, -25.2649, 0.29 ) }
    dend_14 { pt3dadd( 57.0027, -85.2566, -25.7892, 0.37 ) }
    dend_14 { pt3dadd( 57.138, -86.1717, -26.215, 0.22 ) }
    dend_14 { pt3dadd( 57.2086, -86.7165, -26.4544, 0.22 ) }
    dend_14 { pt3dadd( 57.2872, -87.5277, -26.8187, 0.22 ) }
    dend_14 { pt3dadd( 57.3548, -88.5709, -27.3023, 0.22 ) }
    dend_14 { pt3dadd( 57.3717, -89.248, -27.6254, 0.22 ) }
    dend_14 { pt3dadd( 57.3803, -89.782, -27.9092, 0.22 ) }
    dend_14 { pt3dadd( 57.3817, -90.1633, -28.1568, 0.22 ) }
    dend_14 { pt3dadd( 57.3905, -90.4459, -28.3701, 0.22 ) }
    dend_14 { pt3dadd( 57.4041, -90.7048, -28.5959, 0.22 ) }
    dend_14 { pt3dadd( 57.468, -91.3777, -29.3639, 0.22 ) }
    dend_14 { pt3dadd( 57.5637, -92.004, -29.9794, 0.22 ) }
    dend_14 { pt3dadd( 61.8463, -99.4145, -33.0351, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_14 { pt3dadd( 65.8456, -107.119, -35.7691, 0.22 ) }
    dend_14 { pt3dadd( 70.2608, -114.276, -39.1846, 0.22 ) }
    dend_14 { pt3dadd( 75.4246, -121.145, -42.0915, 0.22 ) }
    dend_14 { pt3dadd( 81.1891, -128.078, -43.1992, 0.22 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 4/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -0.15174, 11.038, 1.18279, 1.84 ) }
    dend_9 { pt3dadd( -0.15174, 11.038, 1.18279, 1.84 ) }
    dend_9 { pt3dadd( 7.81982E-4, 12.4317, 1.5797, 1.03 ) }
    dend_9 { pt3dadd( 0.128822, 13.5005, 1.86518, 0.88 ) }
    dend_9 { pt3dadd( 0.334424, 15.2167, 2.32358, 0.96 ) }
    dend_9 { pt3dadd( 0.537687, 16.9134, 2.77677, 0.96 ) }
    dend_9 { pt3dadd( 0.652991, 17.8758, 3.03384, 0.88 ) }
    dend_9 { pt3dadd( 0.753116, 18.7519, 3.25715, 1.47 ) }
    dend_9 { pt3dadd( 0.842738, 19.6448, 3.45727, 1.99 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 13/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.60827, 7.30701, 2.52279, 2.51 ) }
    dend_0 { pt3dadd( 4.60827, 7.30701, 2.52279, 2.51 ) }
    dend_0 { pt3dadd( 5.05462, 8.18829, 2.94783, 1.62 ) }
    dend_0 { pt3dadd( 5.44357, 8.95623, 3.3182, 1.62 ) }
    dend_0 { pt3dadd( 5.93708, 9.93059, 3.78814, 1.47 ) }
    dend_0 { pt3dadd( 6.38205, 10.8092, 4.21186, 1.62 ) }
    dend_0 { pt3dadd( 6.95464, 11.9397, 4.7571, 1.7 ) }
    dend_0 { pt3dadd( 7.32522, 12.7156, 5.14001, 1.77 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 21/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.27443, 11.6334, 0.0348418, 0.912474 ) }
    axon_0 { pt3dadd( -2.03208, 26.6143, 0.0348418, 0.912474 ) }
    axon_0 { pt3dadd( -2.78974, 41.5951, 0.0348418, 0.912474 ) }
    // Section: dend_67, id: dend_67, parent: dend_63 (entry count 24/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -4.24973, -5.16444, 21.4993, 0.44 ) }
    dend_67 { pt3dadd( -5.54034, -3.96253, 26.6985, 0.44 ) }
    dend_67 { pt3dadd( -6.05522, -3.58502, 28.3206, 0.88 ) }
    dend_67 { pt3dadd( -6.54333, -3.27974, 29.6432, 0.88 ) }
    dend_67 { pt3dadd( -7.20677, -2.92502, 31.1928, 0.66 ) }
    dend_67 { pt3dadd( -7.94942, -2.61823, 32.7352, 0.59 ) }
    dend_67 { pt3dadd( -8.61017, -2.40001, 33.9834, 0.81 ) }
    dend_67 { pt3dadd( -9.72855, -2.1175, 35.6454, 0.29 ) }
    dend_67 { pt3dadd( -10.2126, -2.01325, 36.3236, 0.81 ) }
    dend_67 { pt3dadd( -11.0516, -1.86487, 37.4092, 1.03 ) }
    dend_67 { pt3dadd( -12.4303, -1.63323, 39.0386, 0.22 ) }
    dend_67 { pt3dadd( -12.9009, -1.54313, 39.5817, 0.22 ) }
    dend_67 { pt3dadd( -13.7477, -1.31426, 40.6131, 0.44 ) }
    dend_67 { pt3dadd( -14.9345, -0.818919, 42.2392, 1.25 ) }
    dend_67 { pt3dadd( -15.5527, -0.479224, 43.1441, 1.55 ) }
    dend_67 { pt3dadd( -16.7165, 0.3537, 45.0171, 0.22 ) }
    dend_67 { pt3dadd( -17.275, 0.832366, 45.9216, 0.74 ) }
    dend_67 { pt3dadd( -17.815, 1.31872, 46.7659, 0.74 ) }
    dend_67 { pt3dadd( -18.7561, 2.14342, 48.076, 0.22 ) }
    dend_67 { pt3dadd( -19.5145, 2.80554, 49.025, 0.74 ) }
    dend_67 { pt3dadd( -20.2264, 3.44826, 49.9083, 1.03 ) }
    dend_67 { pt3dadd( -20.7805, 3.9549, 50.5979, 0.22 ) }
    dend_67 { pt3dadd( -21.4219, 4.53165, 51.4452, 0.59 ) }
    dend_67 { pt3dadd( -21.9043, 4.96294, 52.1194, 0.29 ) }
    dend_67 { pt3dadd( -22.6522, 5.66381, 53.2668, 0.15 ) }
    dend_67 { pt3dadd( -23.4731, 6.57064, 54.7081, 1.11 ) }
    dend_67 { pt3dadd( -24.0502, 7.39295, 55.9037, 0.37 ) }
    dend_67 { pt3dadd( -24.6593, 8.53133, 57.4282, 0.37 ) }
    dend_67 { pt3dadd( -24.9084, 9.14498, 58.1599, 0.37 ) }
    dend_67 { pt3dadd( -25.2046, 10.0785, 59.1396, 0.74 ) }
    dend_67 { pt3dadd( -25.4251, 10.997, 59.8988, 1.03 ) }
    dend_67 { pt3dadd( -25.7265, 12.566, 60.873, 0.15 ) }
    dend_67 { pt3dadd( -25.8585, 13.33, 61.2141, 0.22 ) }
    dend_67 { pt3dadd( -26.014, 14.1572, 61.461, 0.52 ) }
    dend_67 { pt3dadd( -26.069, 14.427, 61.5204, 0.52 ) }
    dend_67 { pt3dadd( -26.3653, 15.8204, 61.7463, 0.15 ) }
    dend_67 { pt3dadd( -26.5481, 16.6643, 61.8598, 0.37 ) }
    dend_67 { pt3dadd( -26.6869, 17.2948, 61.9689, 0.15 ) }
    dend_67 { pt3dadd( -26.9133, 18.2786, 62.1911, 0.59 ) }
    dend_67 { pt3dadd( -27.259, 19.7383, 62.6025, 0.22 ) }
    dend_67 { pt3dadd( -27.4143, 20.469, 62.9079, 1.03 ) }
    dend_67 { pt3dadd( -27.5214, 21.073, 63.2491, 1.47 ) }
    dend_67 { pt3dadd( -27.7676, 22.8381, 64.4825, 0.15 ) }
    dend_67 { pt3dadd( -27.8497, 23.6016, 65.1038, 0.96 ) }
    dend_67 { pt3dadd( -27.8935, 24.1291, 65.5806, 0.96 ) }
    dend_67 { pt3dadd( -28.0275, 25.9935, 67.3674, 0.15 ) }
    dend_67 { pt3dadd( -28.0794, 26.6997, 68.0479, 0.44 ) }
    dend_67 { pt3dadd( -28.1773, 27.9179, 69.1733, 0.15 ) }
    dend_67 { pt3dadd( -28.2417, 28.6598, 69.7833, 0.15 ) }
    dend_67 { pt3dadd( -28.3072, 29.2736, 70.2047, 0.44 ) }
    dend_67 { pt3dadd( -28.4431, 30.2601, 70.7491, 0.22 ) }
    dend_67 { pt3dadd( -28.6177, 31.2667, 71.1465, 0.96 ) }
    dend_67 { pt3dadd( -28.828, 32.4755, 71.529, 0.15 ) }
    dend_67 { pt3dadd( -28.9829, 33.4926, 71.8157, 0.15 ) }
    dend_67 { pt3dadd( -29.096, 34.3173, 72.0895, 0.52 ) }
    dend_67 { pt3dadd( -29.1956, 35.2785, 72.4776, 0.52 ) }
    dend_67 { pt3dadd( -29.2725, 36.3709, 72.9726, 0.15 ) }
    dend_67 { pt3dadd( -29.326, 37.2809, 73.4118, 0.44 ) }
    dend_67 { pt3dadd( -29.4102, 38.93, 74.2883, 0.15 ) }
    dend_67 { pt3dadd( -29.4723, 40.4901, 75.2123, 0.15 ) }
    dend_67 { pt3dadd( -29.5048, 41.5129, 75.8761, 0.96 ) }
    dend_67 { pt3dadd( -29.5109, 42.508, 76.5704, 0.15 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 86/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -4.24973, -5.16444, 21.4993, 0.74 ) }
    dend_64 { pt3dadd( -5.27802, -7.16837, 24.3796, 0.74 ) }
    dend_64 { pt3dadd( -5.79409, -8.2891, 26.2421, 0.81 ) }
    dend_64 { pt3dadd( -6.44386, -9.88482, 29.0571, 0.52 ) }
    dend_64 { pt3dadd( -6.76101, -10.785, 30.7638, 0.81 ) }
    dend_64 { pt3dadd( -7.02372, -11.6257, 32.4347, 0.59 ) }
    dend_64 { pt3dadd( -7.35444, -12.7838, 34.7067, 0.37 ) }
    dend_64 { pt3dadd( -7.75575, -14.1141, 37.5864, 0.66 ) }
    dend_64 { pt3dadd( -7.81309, -14.3939, 38.2201, 0.81 ) }
    dend_64 { pt3dadd( -7.85723, -15.3798, 40.5418, 0.74 ) }
    dend_64 { pt3dadd( -7.76994, -16.0302, 42.284, 1.33 ) }
    dend_64 { pt3dadd( -7.67562, -16.3655, 43.3186, 1.33 ) }
    // Section: dend_60, id: dend_60, parent: dend_52 (entry count 98/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 29.4428, 4.91161, 31.7267, 0.22 ) }
    dend_60 { pt3dadd( 29.6334, 4.54761, 31.8767, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_60 { pt3dadd( 29.7018, 4.3426, 31.9307, 0.22 ) }
    dend_60 { pt3dadd( 29.7533, 4.15238, 31.9537, 0.22 ) }
    dend_60 { pt3dadd( 29.8199, 3.92322, 31.9691, 0.22 ) }
    dend_60 { pt3dadd( 29.894, 3.68918, 31.983, 0.22 ) }
    dend_60 { pt3dadd( 30.0004, 3.37855, 32.0156, 0.22 ) }
    dend_60 { pt3dadd( 30.1413, 3.02049, 32.0838, 0.29 ) }
    dend_60 { pt3dadd( 30.2748, 2.67827, 32.1701, 0.81 ) }
    dend_60 { pt3dadd( 30.3896, 2.41672, 32.2575, 0.96 ) }
    dend_60 { pt3dadd( 30.6519, 1.88434, 32.5063, 0.37 ) }
    dend_60 { pt3dadd( 30.8533, 1.52514, 32.7324, 1.18 ) }
    dend_60 { pt3dadd( 31.1578, 1.02131, 33.133, 0.29 ) }
    dend_60 { pt3dadd( 31.309, 0.769102, 33.3895, 0.22 ) }
    dend_60 { pt3dadd( 31.5041, 0.45195, 33.7879, 0.29 ) }
    dend_60 { pt3dadd( 31.7204, 0.0933279, 34.3068, 0.29 ) }
    dend_60 { pt3dadd( 31.8963, -0.229078, 34.818, 0.29 ) }
    dend_60 { pt3dadd( 32.0289, -0.558537, 35.3269, 0.88 ) }
    dend_60 { pt3dadd( 32.1567, -1.0244, 35.9575, 0.37 ) }
    dend_60 { pt3dadd( 32.2507, -1.55442, 36.5516, 0.29 ) }
    dend_60 { pt3dadd( 32.3057, -2.04907, 36.9845, 0.37 ) }
    dend_60 { pt3dadd( 32.3647, -2.60713, 37.3559, 0.74 ) }
    dend_60 { pt3dadd( 32.4594, -3.51031, 37.7837, 0.22 ) }
    dend_60 { pt3dadd( 32.5548, -4.37242, 38.0444, 0.37 ) }
    dend_60 { pt3dadd( 32.6372, -5.16054, 38.1828, 0.22 ) }
    dend_60 { pt3dadd( 32.6847, -5.68204, 38.2165, 0.22 ) }
    dend_60 { pt3dadd( 32.7443, -6.17177, 38.1985, 0.22 ) }
    dend_60 { pt3dadd( 32.8064, -6.48731, 38.1556, 0.22 ) }
    dend_60 { pt3dadd( 32.9692, -6.99277, 38.0397, 0.22 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 27/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 29.4428, 4.91161, 31.7267, 0.22 ) }
    dend_53 { pt3dadd( 29.6781, 5.14094, 31.7781, 0.22 ) }
    dend_53 { pt3dadd( 30.004, 5.36987, 31.8284, 0.29 ) }
    dend_53 { pt3dadd( 30.4895, 5.6192, 31.8801, 0.59 ) }
    dend_53 { pt3dadd( 31.0577, 5.89659, 31.9302, 0.66 ) }
    dend_53 { pt3dadd( 31.6719, 6.21688, 32.0067, 0.44 ) }
    dend_53 { pt3dadd( 32.0858, 6.44765, 32.0873, 0.66 ) }
    dend_53 { pt3dadd( 32.7155, 6.79339, 32.2345, 0.88 ) }
    dend_53 { pt3dadd( 33.5938, 7.23813, 32.4632, 0.37 ) }
    dend_53 { pt3dadd( 34.2922, 7.56171, 32.6416, 0.37 ) }
    dend_53 { pt3dadd( 34.9099, 7.83952, 32.8002, 0.44 ) }
    dend_53 { pt3dadd( 35.5574, 8.14638, 32.985, 0.22 ) }
    dend_53 { pt3dadd( 35.8259, 8.29555, 33.068, 0.22 ) }
    dend_53 { pt3dadd( 36.0395, 8.43015, 33.1345, 0.22 ) }
    dend_53 { pt3dadd( 36.4548, 8.68549, 33.2419, 0.22 ) }
    dend_53 { pt3dadd( 36.7605, 8.83308, 33.2741, 0.29 ) }
    dend_53 { pt3dadd( 37.1734, 9.01347, 33.2803, 0.29 ) }
    dend_53 { pt3dadd( 37.7953, 9.28732, 33.2564, 0.52 ) }
    dend_53 { pt3dadd( 38.3177, 9.54211, 33.2529, 0.29 ) }
    dend_53 { pt3dadd( 38.6775, 9.73747, 33.267, 0.22 ) }
    dend_53 { pt3dadd( 39.3194, 10.1099, 33.3398, 0.29 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 48/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -13.6129, -7.0742, 14.4122, 0.52 ) }
    dend_50 { pt3dadd( -14.2848, -8.89534, 14.5821, 0.52 ) }
    dend_50 { pt3dadd( -14.7324, -9.78376, 14.7054, 0.74 ) }
    dend_50 { pt3dadd( -15.7014, -11.2551, 14.9535, 1.11 ) }
    dend_50 { pt3dadd( -16.7848, -12.613, 15.2209, 1.11 ) }
    dend_50 { pt3dadd( -17.8215, -13.8047, 15.4884, 0.81 ) }
    dend_50 { pt3dadd( -18.4708, -14.5525, 15.6405, 0.74 ) }
    dend_50 { pt3dadd( -19.2875, -15.3972, 15.8723, 0.81 ) }
    dend_50 { pt3dadd( -19.933, -15.9218, 16.0143, 0.52 ) }
    dend_50 { pt3dadd( -20.4253, -16.1907, 16.0668, 0.52 ) }
    dend_50 { pt3dadd( -21.478, -16.6381, 16.0449, 0.74 ) }
    dend_50 { pt3dadd( -22.5354, -17.0907, 15.9619, 0.52 ) }
    dend_50 { pt3dadd( -23.6861, -17.6713, 15.8971, 0.52 ) }
    dend_50 { pt3dadd( -24.5853, -18.1958, 15.8654, 0.52 ) }
    dend_50 { pt3dadd( -25.5537, -18.7891, 15.8895, 0.88 ) }
    dend_50 { pt3dadd( -26.6446, -19.4856, 15.9929, 0.59 ) }
    dend_50 { pt3dadd( -27.7618, -20.2116, 16.1761, 0.59 ) }
    dend_50 { pt3dadd( -28.6953, -20.8524, 16.4108, 0.81 ) }
    dend_50 { pt3dadd( -29.656, -21.5701, 16.7305, 0.74 ) }
    dend_50 { pt3dadd( -30.4542, -22.1847, 17.0544, 0.44 ) }
    dend_50 { pt3dadd( -31.1057, -22.6644, 17.3345, 0.44 ) }
    dend_50 { pt3dadd( -31.4685, -22.8726, 17.4848, 0.44 ) }
    dend_50 { pt3dadd( -31.8859, -23.025, 17.6087, 0.44 ) }
    dend_50 { pt3dadd( -32.8773, -23.2821, 17.8185, 0.59 ) }
    dend_50 { pt3dadd( -33.7008, -23.4268, 17.9755, 0.59 ) }
    dend_50 { pt3dadd( -34.7671, -23.5494, 18.1553, 0.66 ) }
    dend_50 { pt3dadd( -35.4301, -23.6053, 18.2882, 0.66 ) }
    dend_50 { pt3dadd( -37.1357, -23.7614, 18.7325, 0.52 ) }
    dend_50 { pt3dadd( -38.3001, -23.9078, 19.1229, 0.52 ) }
    dend_50 { pt3dadd( -40.0105, -24.2588, 19.8315, 0.37 ) }
    dend_50 { pt3dadd( -40.8807, -24.4783, 20.2333, 0.37 ) }
    dend_50 { pt3dadd( -41.6687, -24.7135, 20.6237, 0.37 ) }
    dend_50 { pt3dadd( -42.5306, -25.0589, 21.0949, 0.66 ) }
    dend_50 { pt3dadd( -43.2657, -25.5019, 21.5643, 0.96 ) }
    dend_50 { pt3dadd( -44.285, -26.373, 22.3125, 0.44 ) }
    dend_50 { pt3dadd( -45.0578, -27.2468, 22.9517, 0.44 ) }
    dend_50 { pt3dadd( -45.7624, -28.0885, 23.5562, 0.44 ) }
    dend_50 { pt3dadd( -46.5642, -29.0148, 24.2427, 0.74 ) }
    dend_50 { pt3dadd( -47.3545, -29.8696, 24.9075, 0.52 ) }
    dend_50 { pt3dadd( -47.9353, -30.4638, 25.4031, 0.52 ) }
    dend_50 { pt3dadd( -48.7675, -31.2888, 26.1889, 0.96 ) }
    dend_50 { pt3dadd( -49.5474, -32.0909, 27.0263, 0.52 ) }
    dend_50 { pt3dadd( -50.1791, -32.6622, 27.6605, 0.52 ) }
    dend_50 { pt3dadd( -50.5599, -32.9182, 27.9716, 0.29 ) }
    dend_50 { pt3dadd( -50.9717, -33.1234, 28.2536, 0.29 ) }
    dend_50 { pt3dadd( -51.3454, -33.2985, 28.5003, 0.29 ) }
    dend_50 { pt3dadd( -51.8072, -33.5458, 28.8083, 0.29 ) }
    dend_50 { pt3dadd( -52.8268, -34.2283, 29.491, 0.81 ) }
    dend_50 { pt3dadd( -53.8069, -34.9612, 30.1417, 0.59 ) }
    dend_50 { pt3dadd( -55.2763, -36.1561, 31.1585, 0.29 ) }
    dend_50 { pt3dadd( -56.0, -36.7731, 31.7067, 0.44 ) }
    dend_50 { pt3dadd( -57.1924, -37.8005, 32.7116, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_50 { pt3dadd( -58.2469, -38.733, 33.6911, 0.52 ) }
    dend_50 { pt3dadd( -58.809, -39.2928, 34.2719, 0.37 ) }
    dend_50 { pt3dadd( -59.3938, -39.965, 34.9021, 0.81 ) }
    dend_50 { pt3dadd( -60.346, -41.1805, 35.9953, 0.66 ) }
    dend_50 { pt3dadd( -61.2437, -42.3181, 37.0361, 0.66 ) }
    dend_50 { pt3dadd( -62.0616, -43.2837, 37.9965, 0.59 ) }
    dend_50 { pt3dadd( -62.8297, -44.1171, 38.8798, 0.59 ) }
    dend_50 { pt3dadd( -63.5709, -44.8541, 39.694, 0.59 ) }
    dend_50 { pt3dadd( -64.3541, -45.5991, 40.5228, 0.52 ) }
    dend_50 { pt3dadd( -65.1237, -46.2902, 41.3092, 0.66 ) }
    dend_50 { pt3dadd( -65.8985, -46.9145, 42.0707, 0.52 ) }
    dend_50 { pt3dadd( -66.8177, -47.5303, 42.8975, 0.66 ) }
    dend_50 { pt3dadd( -67.8413, -48.0487, 43.7327, 0.88 ) }
    dend_50 { pt3dadd( -68.9243, -48.4656, 44.5576, 0.44 ) }
    dend_50 { pt3dadd( -69.9047, -48.7778, 45.2826, 0.37 ) }
    dend_50 { pt3dadd( -70.8026, -49.0473, 45.9901, 0.44 ) }
    dend_50 { pt3dadd( -71.8285, -49.3679, 46.8483, 0.29 ) }
    dend_50 { pt3dadd( -72.7066, -49.6435, 47.5753, 0.29 ) }
    dend_50 { pt3dadd( -73.7522, -49.95, 48.4596, 0.88 ) }
    dend_50 { pt3dadd( -74.7771, -50.2019, 49.366, 0.74 ) }
    dend_50 { pt3dadd( -76.043, -50.4807, 50.6667, 0.59 ) }
    dend_50 { pt3dadd( -76.9788, -50.6623, 51.8107, 0.66 ) }
    dend_50 { pt3dadd( -78.0708, -50.8469, 53.2555, 0.44 ) }
    dend_50 { pt3dadd( -78.7532, -50.9577, 54.1516, 0.44 ) }
    dend_50 { pt3dadd( -79.4475, -51.0731, 55.0246, 0.74 ) }
    dend_50 { pt3dadd( -80.6478, -51.3059, 56.4851, 0.74 ) }
    dend_50 { pt3dadd( -81.6025, -51.5335, 57.6274, 0.81 ) }
    dend_50 { pt3dadd( -82.44, -51.7569, 58.5777, 0.59 ) }
    dend_50 { pt3dadd( -83.3408, -52.0199, 59.4895, 0.88 ) }
    dend_50 { pt3dadd( -84.196, -52.281, 60.1979, 0.59 ) }
    dend_50 { pt3dadd( -84.9223, -52.4762, 60.6771, 0.52 ) }
    dend_50 { pt3dadd( -86.069, -52.6869, 61.2494, 0.52 ) }
    dend_50 { pt3dadd( -87.4796, -52.8302, 61.8121, 0.59 ) }
    dend_50 { pt3dadd( -89.064, -52.9396, 62.3337, 0.52 ) }
    dend_50 { pt3dadd( -90.1877, -52.9699, 62.6071, 0.59 ) }
    dend_50 { pt3dadd( -91.4773, -52.9311, 62.8866, 0.81 ) }
    dend_50 { pt3dadd( -92.8019, -52.8125, 63.1699, 0.52 ) }
    dend_50 { pt3dadd( -93.5197, -52.7025, 63.343, 0.52 ) }
    dend_50 { pt3dadd( -94.9241, -52.444, 63.7716, 0.44 ) }
    dend_50 { pt3dadd( -95.6334, -52.31, 64.0185, 0.44 ) }
    dend_50 { pt3dadd( -97.205, -52.0872, 64.5905, 0.74 ) }
    dend_50 { pt3dadd( -98.2761, -52.0077, 64.9985, 0.96 ) }
    dend_50 { pt3dadd( -99.9795, -52.0215, 65.6895, 0.66 ) }
    dend_50 { pt3dadd( -100.715, -52.0818, 65.9975, 0.81 ) }
    dend_50 { pt3dadd( -102.013, -52.2962, 66.5136, 0.59 ) }
    dend_50 { pt3dadd( -103.501, -52.6734, 66.9942, 0.81 ) }
    dend_50 { pt3dadd( -104.315, -52.9401, 67.1801, 0.59 ) }
    dend_50 { pt3dadd( -105.284, -53.297, 67.3597, 0.74 ) }
    dend_50 { pt3dadd( -105.908, -53.535, 67.4596, 0.59 ) }
    dend_50 { pt3dadd( -106.909, -53.8837, 67.6383, 0.29 ) }
    dend_50 { pt3dadd( -108.5, -54.4349, 67.9889, 0.37 ) }
    dend_50 { pt3dadd( -109.509, -54.7965, 68.26, 0.88 ) }
    dend_50 { pt3dadd( -110.362, -55.0987, 68.5404, 0.74 ) }
    dend_50 { pt3dadd( -110.981, -55.3139, 68.7834, 1.03 ) }
    dend_50 { pt3dadd( -112.436, -55.8379, 69.4946, 0.44 ) }
    dend_50 { pt3dadd( -113.519, -56.2875, 70.1665, 0.74 ) }
    dend_50 { pt3dadd( -114.334, -56.6916, 70.77, 0.59 ) }
    dend_50 { pt3dadd( -115.293, -57.1705, 71.5417, 0.37 ) }
    dend_50 { pt3dadd( -116.298, -57.6267, 72.394, 0.52 ) }
    dend_50 { pt3dadd( -117.321, -58.0064, 73.2936, 0.81 ) }
    dend_50 { pt3dadd( -118.269, -58.2631, 74.1493, 0.96 ) }
    dend_50 { pt3dadd( -119.315, -58.4803, 75.1208, 0.44 ) }
    dend_50 { pt3dadd( -120.196, -58.6604, 75.9926, 0.44 ) }
    dend_50 { pt3dadd( -121.076, -58.8959, 76.9261, 0.59 ) }
    dend_50 { pt3dadd( -121.787, -59.1377, 77.7577, 0.66 ) }
    dend_50 { pt3dadd( -122.252, -59.3344, 78.3205, 0.37 ) }
    dend_50 { pt3dadd( -122.749, -59.5471, 78.9187, 0.37 ) }
    dend_50 { pt3dadd( -123.253, -59.7623, 79.5104, 0.37 ) }
    dend_50 { pt3dadd( -123.899, -60.0746, 80.2177, 0.88 ) }
    dend_50 { pt3dadd( -124.621, -60.4849, 80.9056, 1.03 ) }
    dend_50 { pt3dadd( -125.803, -61.1949, 81.8635, 0.29 ) }
    dend_50 { pt3dadd( -126.536, -61.6221, 82.327, 0.29 ) }
    dend_50 { pt3dadd( -127.19, -61.9404, 82.6353, 0.29 ) }
    dend_50 { pt3dadd( -127.837, -62.2091, 82.8635, 0.44 ) }
    dend_50 { pt3dadd( -128.72, -62.5198, 83.1114, 0.74 ) }
    dend_50 { pt3dadd( -129.528, -62.7864, 83.297, 0.74 ) }
    dend_50 { pt3dadd( -130.371, -63.0493, 83.4697, 0.22 ) }
    dend_50 { pt3dadd( -131.598, -63.4035, 83.7203, 0.22 ) }
    dend_50 { pt3dadd( -132.58, -63.5924, 83.9142, 0.37 ) }
    dend_50 { pt3dadd( -133.849, -63.6543, 84.1378, 0.74 ) }
    dend_50 { pt3dadd( -134.6, -63.5897, 84.2469, 0.74 ) }
    dend_50 { pt3dadd( -135.493, -63.4282, 84.3253, 0.22 ) }
    dend_50 { pt3dadd( -135.971, -63.3148, 84.3324, 0.22 ) }
    dend_50 { pt3dadd( -136.9, -63.029, 84.2173, 0.22 ) }
    dend_50 { pt3dadd( -137.604, -62.7615, 84.045, 0.22 ) }
    dend_50 { pt3dadd( -138.076, -62.572, 83.884, 0.29 ) }
    dend_50 { pt3dadd( -139.035, -62.2087, 83.5067, 0.81 ) }
    dend_50 { pt3dadd( -140.428, -61.7679, 82.8973, 0.37 ) }
    dend_50 { pt3dadd( -141.377, -61.5208, 82.4451, 0.37 ) }
    dend_50 { pt3dadd( -142.146, -61.3283, 82.0345, 0.22 ) }
    dend_50 { pt3dadd( -142.489, -61.2214, 81.8153, 0.22 ) }
    dend_50 { pt3dadd( -142.898, -61.06, 81.5116, 0.22 ) }
    dend_50 { pt3dadd( -143.263, -60.8989, 81.2155, 0.22 ) }
    dend_50 { pt3dadd( -143.852, -60.6403, 80.7495, 0.37 ) }
    dend_50 { pt3dadd( -144.818, -60.2975, 80.1145, 0.74 ) }
    dend_50 { pt3dadd( -145.643, -60.0378, 79.6786, 0.29 ) }
    dend_50 { pt3dadd( -146.095, -59.8844, 79.5056, 0.29 ) }
    dend_50 { pt3dadd( -146.895, -59.6177, 79.2968, 0.29 ) }
    dend_50 { pt3dadd( -147.764, -59.3997, 79.1449, 0.29 ) }
    dend_50 { pt3dadd( -149.012, -59.1565, 78.979, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_50 { pt3dadd( -149.921, -58.994, 78.8888, 0.37 ) }
    dend_50 { pt3dadd( -151.082, -58.7763, 78.7798, 0.22 ) }
    dend_50 { pt3dadd( -151.755, -58.6505, 78.7011, 0.22 ) }
    dend_50 { pt3dadd( -152.883, -58.4516, 78.5559, 0.29 ) }
    dend_50 { pt3dadd( -153.912, -58.3194, 78.4521, 0.22 ) }
    dend_50 { pt3dadd( -154.559, -58.2517, 78.4298, 0.22 ) }
    dend_50 { pt3dadd( -155.27, -58.1927, 78.4824, 0.22 ) }
    dend_50 { pt3dadd( -156.214, -58.1314, 78.6621, 0.29 ) }
    dend_50 { pt3dadd( -157.0, -58.0408, 78.9701, 0.29 ) }
    dend_50 { pt3dadd( -157.742, -57.888, 79.3891, 0.29 ) }
    dend_50 { pt3dadd( -158.642, -57.6499, 80.0201, 0.15 ) }
    dend_50 { pt3dadd( -159.444, -57.3518, 80.6447, 0.15 ) }
    dend_50 { pt3dadd( -160.11, -57.0274, 81.218, 0.74 ) }
    dend_50 { pt3dadd( -160.994, -56.5195, 82.0029, 0.22 ) }
    dend_50 { pt3dadd( -161.624, -56.1276, 82.5257, 0.22 ) }
    dend_50 { pt3dadd( -161.956, -55.9341, 82.7497, 0.22 ) }
    dend_50 { pt3dadd( -162.654, -55.583, 83.1139, 0.52 ) }
    dend_50 { pt3dadd( -163.725, -55.13, 83.4963, 0.22 ) }
    dend_50 { pt3dadd( -164.236, -54.9721, 83.6109, 0.59 ) }
    dend_50 { pt3dadd( -165.06, -54.81, 83.7249, 0.22 ) }
    dend_50 { pt3dadd( -166.494, -54.6841, 83.8958, 0.29 ) }
    dend_50 { pt3dadd( -167.173, -54.6835, 83.9674, 0.29 ) }
    dend_50 { pt3dadd( -168.314, -54.7652, 84.0946, 0.66 ) }
    dend_50 { pt3dadd( -169.696, -54.9111, 84.2311, 0.22 ) }
    dend_50 { pt3dadd( -170.408, -55.0184, 84.3137, 0.29 ) }
    dend_50 { pt3dadd( -171.416, -55.2463, 84.4486, 0.22 ) }
    dend_50 { pt3dadd( -172.155, -55.4565, 84.5584, 0.59 ) }
    dend_50 { pt3dadd( -173.124, -55.7635, 84.7097, 0.22 ) }
    dend_50 { pt3dadd( -173.971, -56.0508, 84.8387, 0.29 ) }
    dend_50 { pt3dadd( -174.642, -56.2737, 84.932, 0.22 ) }
    dend_50 { pt3dadd( -175.458, -56.5208, 85.0319, 0.22 ) }
    dend_50 { pt3dadd( -175.901, -56.6347, 85.0756, 0.22 ) }
    dend_50 { pt3dadd( -176.687, -56.8059, 85.1449, 0.37 ) }
    dend_50 { pt3dadd( -177.571, -57.006, 85.2096, 0.15 ) }
    dend_50 { pt3dadd( -178.567, -57.2326, 85.2953, 0.15 ) }
    dend_50 { pt3dadd( -179.851, -57.4754, 85.4176, 0.15 ) }
    dend_50 { pt3dadd( -180.517, -57.5743, 85.4873, 0.15 ) }
    dend_50 { pt3dadd( -181.144, -57.6709, 85.5604, 0.59 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 38/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -13.6129, -7.0742, 14.4122, 0.59 ) }
    dend_49 { pt3dadd( -14.0797, -6.11229, 15.4846, 0.59 ) }
    dend_49 { pt3dadd( -14.6522, -5.07044, 16.3735, 0.44 ) }
    dend_49 { pt3dadd( -14.9917, -4.55432, 16.6961, 0.52 ) }
    dend_49 { pt3dadd( -15.4149, -4.01387, 16.9914, 0.52 ) }
    dend_49 { pt3dadd( -15.8286, -3.53388, 17.2745, 0.52 ) }
    dend_49 { pt3dadd( -16.7531, -2.45226, 17.9437, 0.88 ) }
    dend_49 { pt3dadd( -17.1675, -1.94476, 18.2139, 0.88 ) }
    dend_49 { pt3dadd( -18.0613, -0.79414, 18.7941, 0.59 ) }
    dend_49 { pt3dadd( -18.8727, 0.280146, 19.3387, 0.52 ) }
    dend_49 { pt3dadd( -19.5879, 1.3187, 19.8423, 0.52 ) }
    dend_49 { pt3dadd( -20.2086, 2.36026, 20.2511, 0.66 ) }
    dend_49 { pt3dadd( -20.6679, 3.28573, 20.54, 0.74 ) }
    dend_49 { pt3dadd( -21.117, 4.37052, 20.7937, 0.88 ) }
    dend_49 { pt3dadd( -21.43, 5.36953, 20.989, 1.03 ) }
    dend_49 { pt3dadd( -21.871, 7.12486, 21.3158, 0.74 ) }
    dend_49 { pt3dadd( -22.308, 9.06926, 21.6918, 0.59 ) }
    dend_49 { pt3dadd( -22.5225, 10.1015, 21.9483, 0.59 ) }
    dend_49 { pt3dadd( -22.7416, 11.2972, 22.3513, 0.81 ) }
    dend_49 { pt3dadd( -23.0437, 13.129, 23.1303, 0.52 ) }
    dend_49 { pt3dadd( -23.3708, 14.9943, 24.1511, 0.66 ) }
    dend_49 { pt3dadd( -23.5644, 15.8217, 24.7566, 0.96 ) }
    dend_49 { pt3dadd( -23.8853, 16.6807, 25.5941, 0.96 ) }
    dend_49 { pt3dadd( -24.408, 17.4769, 26.6001, 0.44 ) }
    dend_49 { pt3dadd( -24.8524, 17.833, 27.2183, 0.44 ) }
    dend_49 { pt3dadd( -25.6881, 18.136, 28.0796, 0.44 ) }
    dend_49 { pt3dadd( -26.7647, 18.2813, 29.031, 0.59 ) }
    dend_49 { pt3dadd( -28.0129, 18.3353, 30.0344, 0.52 ) }
    dend_49 { pt3dadd( -28.8783, 18.3493, 30.6801, 0.52 ) }
    dend_49 { pt3dadd( -29.7517, 18.3853, 31.3315, 1.03 ) }
    dend_49 { pt3dadd( -30.9435, 18.5486, 32.2588, 0.74 ) }
    dend_49 { pt3dadd( -32.0835, 18.8784, 33.205, 0.88 ) }
    dend_49 { pt3dadd( -33.2612, 19.394, 34.291, 0.52 ) }
    dend_49 { pt3dadd( -33.823, 19.6867, 34.8717, 0.52 ) }
    dend_49 { pt3dadd( -34.6905, 20.1547, 35.8209, 0.74 ) }
    dend_49 { pt3dadd( -35.5537, 20.6248, 36.8161, 0.52 ) }
    dend_49 { pt3dadd( -36.2713, 20.9955, 37.682, 0.52 ) }
    dend_49 { pt3dadd( -37.3528, 21.4584, 38.9705, 0.81 ) }
    dend_49 { pt3dadd( -38.3561, 21.8083, 40.1425, 1.03 ) }
    dend_49 { pt3dadd( -39.5899, 22.1754, 41.5628, 0.44 ) }
    dend_49 { pt3dadd( -40.6758, 22.4547, 42.773, 0.88 ) }
    dend_49 { pt3dadd( -41.7585, 22.7285, 43.9399, 0.66 ) }
    dend_49 { pt3dadd( -42.515, 22.965, 44.6868, 0.29 ) }
    dend_49 { pt3dadd( -43.1062, 23.2373, 45.2008, 0.29 ) }
    dend_49 { pt3dadd( -43.8824, 23.7791, 45.8008, 0.29 ) }
    dend_49 { pt3dadd( -44.3904, 24.235, 46.1549, 0.29 ) }
    dend_49 { pt3dadd( -44.72, 24.5353, 46.3493, 0.29 ) }
    dend_49 { pt3dadd( -45.4511, 25.1156, 46.7373, 0.29 ) }
    dend_49 { pt3dadd( -46.1857, 25.5858, 47.1119, 0.59 ) }
    dend_49 { pt3dadd( -47.5544, 26.3157, 47.8222, 0.81 ) }
    dend_49 { pt3dadd( -48.2678, 26.6519, 48.2272, 0.96 ) }
    dend_49 { pt3dadd( -49.1927, 27.0621, 48.7895, 0.52 ) }
    dend_49 { pt3dadd( -50.4981, 27.6511, 49.6841, 0.81 ) }
    dend_49 { pt3dadd( -51.4692, 28.1286, 50.4746, 0.22 ) }
    dend_49 { pt3dadd( -52.2097, 28.4883, 51.126, 0.22 ) }
    dend_49 { pt3dadd( -53.2018, 28.9871, 52.0901, 0.81 ) }
    dend_49 { pt3dadd( -53.7726, 29.3039, 52.7166, 1.18 ) }
    dend_49 { pt3dadd( -54.9097, 30.0314, 54.1715, 0.37 ) }
    dend_49 { pt3dadd( -55.5978, 30.5549, 55.2383, 0.37 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 97/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -39.916, 9.08719, 71.771, 0.88 ) }
    dend_47 { pt3dadd( -40.8725, 8.26804, 71.9296, 0.88 ) }
    dend_47 { pt3dadd( -42.1324, 7.18898, 72.1385, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_47 { pt3dadd( -43.3379, 6.15653, 72.3384, 0.74 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 1/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -39.916, 9.08719, 71.771, 0.22 ) }
    dend_46 { pt3dadd( -41.1331, 9.0409, 73.1705, 0.22 ) }
    dend_46 { pt3dadd( -41.9038, 9.01114, 74.0446, 0.29 ) }
    dend_46 { pt3dadd( -42.6998, 8.96764, 75.0483, 0.29 ) }
    dend_46 { pt3dadd( -43.688, 8.90286, 76.3271, 0.22 ) }
    dend_46 { pt3dadd( -44.6179, 8.83618, 77.5046, 0.88 ) }
    dend_46 { pt3dadd( -45.7421, 8.7362, 78.9163, 1.92 ) }
    dend_46 { pt3dadd( -47.1415, 8.56464, 80.647, 0.44 ) }
    dend_46 { pt3dadd( -48.4755, 8.39667, 82.2644, 0.59 ) }
    dend_46 { pt3dadd( -49.1056, 8.3245, 82.995, 0.37 ) }
    dend_46 { pt3dadd( -49.6221, 8.28009, 83.562, 0.74 ) }
    dend_46 { pt3dadd( -50.8789, 8.20069, 84.7894, 0.22 ) }
    dend_46 { pt3dadd( -51.7419, 8.17892, 85.5487, 0.22 ) }
    dend_46 { pt3dadd( -52.1777, 8.18838, 85.9061, 0.96 ) }
    dend_46 { pt3dadd( -52.9162, 8.24593, 86.4756, 1.4 ) }
    dend_46 { pt3dadd( -54.6792, 8.44907, 87.8989, 0.22 ) }
    dend_46 { pt3dadd( -55.6961, 8.5987, 88.7611, 0.22 ) }
    dend_46 { pt3dadd( -56.081, 8.66315, 89.0952, 0.22 ) }
    dend_46 { pt3dadd( -57.0666, 8.79831, 90.0131, 0.22 ) }
    dend_46 { pt3dadd( -57.7451, 8.87207, 90.7088, 0.22 ) }
    dend_46 { pt3dadd( -58.241, 8.90589, 91.234, 0.74 ) }
    dend_46 { pt3dadd( -58.9247, 8.9109, 91.9596, 1.33 ) }
    dend_46 { pt3dadd( -59.8503, 8.89263, 92.906, 0.74 ) }
    dend_46 { pt3dadd( -61.1501, 8.83765, 94.2092, 0.15 ) }
    dend_46 { pt3dadd( -61.6922, 8.80591, 94.7321, 0.15 ) }
    dend_46 { pt3dadd( -62.4483, 8.74871, 95.4476, 0.81 ) }
    dend_46 { pt3dadd( -63.5671, 8.66597, 96.5077, 0.22 ) }
    dend_46 { pt3dadd( -64.4144, 8.6206, 97.3115, 0.59 ) }
    dend_46 { pt3dadd( -65.4721, 8.58374, 98.3222, 0.15 ) }
    dend_46 { pt3dadd( -65.8948, 8.57092, 98.738, 0.15 ) }
    dend_46 { pt3dadd( -66.4388, 8.55697, 99.2763, 0.44 ) }
    dend_46 { pt3dadd( -67.1559, 8.54019, 100.006, 0.96 ) }
    dend_46 { pt3dadd( -68.6592, 8.49405, 101.538, 0.22 ) }
    dend_46 { pt3dadd( -69.5721, 8.44017, 102.475, 0.74 ) }
    dend_46 { pt3dadd( -70.4522, 8.3871, 103.36, 0.15 ) }
    dend_46 { pt3dadd( -71.0533, 8.36936, 103.968, 0.44 ) }
    dend_46 { pt3dadd( -72.0328, 8.36708, 104.945, 0.29 ) }
    dend_46 { pt3dadd( -72.7395, 8.36735, 105.637, 0.29 ) }
    dend_46 { pt3dadd( -73.5961, 8.36536, 106.479, 0.07 ) }
    dend_46 { pt3dadd( -74.0528, 8.37715, 106.923, 0.96 ) }
    dend_46 { pt3dadd( -75.3147, 8.38724, 108.177, 0.15 ) }
    dend_46 { pt3dadd( -75.7714, 8.37115, 108.648, 0.88 ) }
    dend_46 { pt3dadd( -76.7593, 8.30363, 109.689, 0.22 ) }
    dend_46 { pt3dadd( -77.3229, 8.22943, 110.299, 0.22 ) }
    dend_46 { pt3dadd( -78.0807, 8.06461, 111.109, 0.81 ) }
    dend_46 { pt3dadd( -79.184, 7.70857, 112.27, 0.15 ) }
    dend_46 { pt3dadd( -79.9824, 7.3928, 113.092, 0.15 ) }
    dend_46 { pt3dadd( -80.7009, 7.0791, 113.831, 0.59 ) }
    dend_46 { pt3dadd( -81.5499, 6.67987, 114.689, 0.96 ) }
    dend_46 { pt3dadd( -82.5369, 6.16954, 115.681, 0.15 ) }
    dend_46 { pt3dadd( -83.213, 5.77065, 116.358, 0.74 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 52/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -19.7053, 19.1561, 11.3471, 0.52 ) }
    dend_42 { pt3dadd( -20.4919, 19.1874, 12.0798, 0.52 ) }
    dend_42 { pt3dadd( -21.5432, 19.3385, 13.1367, 0.52 ) }
    dend_42 { pt3dadd( -22.5745, 19.6196, 14.3043, 0.81 ) }
    dend_42 { pt3dadd( -23.4579, 19.9148, 15.4415, 0.44 ) }
    dend_42 { pt3dadd( -24.2269, 20.1572, 16.4916, 0.74 ) }
    dend_42 { pt3dadd( -24.8832, 20.3271, 17.4644, 0.44 ) }
    dend_42 { pt3dadd( -25.5531, 20.4584, 18.6519, 0.44 ) }
    dend_42 { pt3dadd( -26.2377, 20.535, 20.1505, 0.74 ) }
    dend_42 { pt3dadd( -26.9359, 20.5625, 21.8353, 1.03 ) }
    dend_42 { pt3dadd( -27.6418, 20.5254, 23.5307, 0.66 ) }
    dend_42 { pt3dadd( -28.5518, 20.4169, 25.4817, 0.66 ) }
    dend_42 { pt3dadd( -29.6292, 20.218, 27.5094, 0.59 ) }
    dend_42 { pt3dadd( -30.6813, 19.9732, 29.2228, 0.59 ) }
    dend_42 { pt3dadd( -31.3081, 19.8074, 30.1435, 0.44 ) }
    dend_42 { pt3dadd( -32.1294, 19.5906, 31.2596, 0.81 ) }
    dend_42 { pt3dadd( -33.1765, 19.2848, 32.6388, 0.29 ) }
    dend_42 { pt3dadd( -33.8106, 19.0861, 33.4059, 0.52 ) }
    dend_42 { pt3dadd( -35.0424, 18.7117, 34.7995, 0.81 ) }
    dend_42 { pt3dadd( -36.457, 18.3167, 36.4433, 0.52 ) }
    dend_42 { pt3dadd( -37.6422, 18.0169, 37.9595, 0.52 ) }
    dend_42 { pt3dadd( -38.4626, 17.8709, 39.1139, 0.29 ) }
    dend_42 { pt3dadd( -39.0593, 17.8388, 39.9671, 0.29 ) }
    dend_42 { pt3dadd( -39.7311, 17.9918, 40.7826, 0.37 ) }
    dend_42 { pt3dadd( -40.691, 18.4547, 41.8094, 0.37 ) }
    dend_42 { pt3dadd( -41.1736, 18.7567, 42.3081, 0.66 ) }
    dend_42 { pt3dadd( -42.1321, 19.4092, 43.2998, 1.33 ) }
    dend_42 { pt3dadd( -42.6117, 19.72, 43.7705, 1.18 ) }
    dend_42 { pt3dadd( -44.1168, 20.5649, 45.1839, 0.52 ) }
    dend_42 { pt3dadd( -45.2567, 21.0765, 46.2212, 0.81 ) }
    dend_42 { pt3dadd( -46.185, 21.4057, 47.0726, 0.44 ) }
    dend_42 { pt3dadd( -46.9236, 21.6311, 47.7563, 0.44 ) }
    dend_42 { pt3dadd( -47.9938, 21.9464, 48.7382, 0.44 ) }
    dend_42 { pt3dadd( -49.0038, 22.2553, 49.6682, 0.96 ) }
    dend_42 { pt3dadd( -50.0611, 22.5807, 50.6241, 0.44 ) }
    dend_42 { pt3dadd( -51.467, 23.0517, 51.8404, 0.88 ) }
    dend_42 { pt3dadd( -52.9622, 23.5964, 53.1392, 0.52 ) }
    dend_42 { pt3dadd( -54.3282, 24.1099, 54.4203, 0.44 ) }
    dend_42 { pt3dadd( -55.4341, 24.5342, 55.5866, 0.52 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 91/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -19.7053, 19.1561, 11.3471, 0.37 ) }
    dend_41 { pt3dadd( -20.3496, 19.2587, 10.849, 0.37 ) }
    dend_41 { pt3dadd( -21.1097, 19.4655, 10.2811, 0.29 ) }
    dend_41 { pt3dadd( -21.8469, 19.7702, 9.74128, 0.59 ) }
    dend_41 { pt3dadd( -22.4878, 20.127, 9.29055, 0.44 ) }
    dend_41 { pt3dadd( -22.9533, 20.4217, 8.96502, 0.74 ) }
    dend_41 { pt3dadd( -23.3896, 20.7211, 8.67537, 0.44 ) }
    dend_41 { pt3dadd( -23.9237, 21.087, 8.39281, 0.29 ) }
    dend_41 { pt3dadd( -24.3642, 21.4081, 8.21061, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_41 { pt3dadd( -24.9855, 21.8734, 7.9855, 0.44 ) }
    dend_41 { pt3dadd( -25.5545, 22.2304, 7.80498, 0.74 ) }
    dend_41 { pt3dadd( -26.1097, 22.4605, 7.63586, 0.74 ) }
    dend_41 { pt3dadd( -26.5255, 22.5552, 7.53388, 0.74 ) }
    dend_41 { pt3dadd( -27.2782, 22.6533, 7.39538, 0.66 ) }
    dend_41 { pt3dadd( -27.8736, 22.6984, 7.33259, 0.52 ) }
    dend_41 { pt3dadd( -28.6552, 22.7289, 7.35415, 0.59 ) }
    dend_41 { pt3dadd( -29.3326, 22.7749, 7.49138, 0.29 ) }
    dend_41 { pt3dadd( -29.9777, 22.8522, 7.66295, 0.29 ) }
    dend_41 { pt3dadd( -30.3921, 22.9424, 7.77651, 0.59 ) }
    dend_41 { pt3dadd( -30.9197, 23.1288, 7.90751, 0.37 ) }
    dend_41 { pt3dadd( -31.7743, 23.5347, 8.11809, 0.59 ) }
    dend_41 { pt3dadd( -32.9979, 24.2261, 8.44221, 0.88 ) }
    dend_41 { pt3dadd( -33.6953, 24.6522, 8.623, 0.88 ) }
    dend_41 { pt3dadd( -34.4109, 25.1104, 8.78358, 0.44 ) }
    dend_41 { pt3dadd( -35.1002, 25.608, 8.88729, 0.44 ) }
    dend_41 { pt3dadd( -35.7102, 26.1723, 8.8949, 0.44 ) }
    dend_41 { pt3dadd( -36.2254, 26.8135, 8.80643, 0.52 ) }
    dend_41 { pt3dadd( -36.5809, 27.3664, 8.67746, 0.29 ) }
    dend_41 { pt3dadd( -36.7217, 27.6011, 8.62435, 0.29 ) }
    dend_41 { pt3dadd( -37.2993, 28.5342, 8.36247, 0.81 ) }
    dend_41 { pt3dadd( -37.8763, 29.3934, 8.07685, 0.37 ) }
    dend_41 { pt3dadd( -38.1661, 29.8231, 7.90466, 0.37 ) }
    dend_41 { pt3dadd( -38.5854, 30.4783, 7.66117, 0.37 ) }
    dend_41 { pt3dadd( -38.9294, 31.0375, 7.50809, 0.66 ) }
    dend_41 { pt3dadd( -39.3278, 31.6811, 7.38437, 0.96 ) }
    dend_41 { pt3dadd( -39.8121, 32.4015, 7.31924, 0.44 ) }
    dend_41 { pt3dadd( -40.0645, 32.7456, 7.28461, 0.44 ) }
    dend_41 { pt3dadd( -40.6402, 33.5005, 7.10897, 0.44 ) }
    dend_41 { pt3dadd( -41.0003, 33.9644, 6.92613, 0.29 ) }
    dend_41 { pt3dadd( -41.3851, 34.4072, 6.67085, 0.29 ) }
    dend_41 { pt3dadd( -41.9056, 34.9121, 6.3062, 0.59 ) }
    dend_41 { pt3dadd( -42.5288, 35.4019, 5.85841, 0.29 ) }
    dend_41 { pt3dadd( -43.1798, 35.8565, 5.43893, 0.81 ) }
    dend_41 { pt3dadd( -43.5161, 36.0822, 5.23245, 0.37 ) }
    dend_41 { pt3dadd( -44.1403, 36.5177, 4.8954, 0.29 ) }
    dend_41 { pt3dadd( -44.5503, 36.8189, 4.70891, 0.29 ) }
    dend_41 { pt3dadd( -44.8976, 37.0962, 4.57959, 0.37 ) }
    dend_41 { pt3dadd( -45.6197, 37.7218, 4.37167, 0.52 ) }
    dend_41 { pt3dadd( -46.049, 38.1085, 4.27858, 0.52 ) }
    dend_41 { pt3dadd( -46.5321, 38.5333, 4.18757, 0.37 ) }
    dend_41 { pt3dadd( -47.0902, 39.0044, 4.07803, 0.59 ) }
    dend_41 { pt3dadd( -47.6029, 39.4173, 3.95189, 0.37 ) }
    dend_41 { pt3dadd( -48.216, 39.9146, 3.77726, 0.59 ) }
    dend_41 { pt3dadd( -48.7406, 40.3485, 3.60884, 0.29 ) }
    dend_41 { pt3dadd( -49.0829, 40.6756, 3.49623, 0.29 ) }
    dend_41 { pt3dadd( -49.5034, 41.1532, 3.3684, 0.29 ) }
    dend_41 { pt3dadd( -49.7231, 41.4563, 3.29773, 0.44 ) }
    dend_41 { pt3dadd( -50.1507, 42.1294, 3.13367, 0.59 ) }
    dend_41 { pt3dadd( -50.5279, 42.7985, 2.96369, 0.66 ) }
    dend_41 { pt3dadd( -51.0554, 43.8186, 2.67522, 0.37 ) }
    dend_41 { pt3dadd( -51.3535, 44.437, 2.4984, 0.22 ) }
    dend_41 { pt3dadd( -51.7322, 45.2202, 2.27892, 0.59 ) }
    dend_41 { pt3dadd( -51.9972, 45.7112, 2.13111, 0.59 ) }
    dend_41 { pt3dadd( -52.4477, 46.4134, 1.86249, 0.29 ) }
    dend_41 { pt3dadd( -52.8493, 46.9611, 1.60149, 0.29 ) }
    dend_41 { pt3dadd( -53.2338, 47.4233, 1.3181, 0.44 ) }
    dend_41 { pt3dadd( -53.5185, 47.7381, 1.08685, 0.29 ) }
    dend_41 { pt3dadd( -53.7973, 48.0191, 0.853605, 0.44 ) }
    dend_41 { pt3dadd( -54.2345, 48.4499, 0.506897, 0.22 ) }
    dend_41 { pt3dadd( -54.5447, 48.7255, 0.265994, 0.22 ) }
    dend_41 { pt3dadd( -54.9382, 49.0637, -0.0336609, 0.22 ) }
    dend_41 { pt3dadd( -55.3144, 49.3991, -0.338095, 0.88 ) }
    dend_41 { pt3dadd( -55.8175, 49.9473, -0.768863, 0.74 ) }
    dend_41 { pt3dadd( -56.2787, 50.5966, -1.17114, 0.07 ) }
    dend_41 { pt3dadd( -61.312, 55.4379, -1.88911, 0.07 ) }
    dend_41 { pt3dadd( -66.0972, 60.5906, -1.97622, 0.07 ) }
    dend_41 { pt3dadd( -71.356, 65.1093, -0.912502, 0.07 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 68/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 9.43144, -1.54593, 8.96123, 0.74 ) }
    dend_39 { pt3dadd( 9.45336, -1.15447, 10.1033, 0.74 ) }
    dend_39 { pt3dadd( 9.54042, -0.865308, 11.3013, 0.74 ) }
    dend_39 { pt3dadd( 9.69523, -0.53427, 12.796, 0.81 ) }
    dend_39 { pt3dadd( 9.96755, -0.020743, 14.8057, 1.03 ) }
    dend_39 { pt3dadd( 10.34, 0.576793, 16.8706, 1.03 ) }
    dend_39 { pt3dadd( 10.8216, 1.20341, 18.8917, 0.81 ) }
    dend_39 { pt3dadd( 11.452, 1.75787, 20.9081, 0.52 ) }
    dend_39 { pt3dadd( 11.7732, 1.93575, 21.7702, 0.52 ) }
    dend_39 { pt3dadd( 12.3906, 2.12314, 23.1657, 0.59 ) }
    dend_39 { pt3dadd( 12.9818, 2.19862, 24.3608, 0.66 ) }
    dend_39 { pt3dadd( 13.7754, 2.22563, 25.9377, 0.74 ) }
    dend_39 { pt3dadd( 14.7082, 2.17979, 27.9415, 0.66 ) }
    dend_39 { pt3dadd( 15.7887, 2.0185, 30.6929, 0.59 ) }
    dend_39 { pt3dadd( 16.1585, 1.9188, 31.8034, 0.81 ) }
    dend_39 { pt3dadd( 16.76, 1.70059, 33.8171, 0.81 ) }
    dend_39 { pt3dadd( 17.1213, 1.60627, 35.0954, 0.81 ) }
    dend_39 { pt3dadd( 17.397, 1.62341, 36.0444, 0.81 ) }
    dend_39 { pt3dadd( 17.9259, 1.91933, 37.6601, 0.59 ) }
    dend_39 { pt3dadd( 18.1528, 2.14293, 38.2832, 0.59 ) }
    dend_39 { pt3dadd( 18.5355, 2.6427, 39.3668, 0.44 ) }
    dend_39 { pt3dadd( 19.0127, 3.37901, 40.7667, 0.44 ) }
    dend_39 { pt3dadd( 19.5176, 4.23756, 42.2203, 0.44 ) }
    dend_39 { pt3dadd( 20.1818, 5.49511, 44.1034, 0.88 ) }
    dend_39 { pt3dadd( 20.4962, 6.26607, 45.0945, 0.88 ) }
    dend_39 { pt3dadd( 20.8255, 7.41067, 46.3927, 0.59 ) }
    dend_39 { pt3dadd( 21.0354, 8.6712, 47.6573, 0.81 ) }
    dend_39 { pt3dadd( 21.1005, 9.92889, 48.7833, 0.66 ) }
    dend_39 { pt3dadd( 21.0575, 11.2779, 49.8028, 0.66 ) }
    dend_39 { pt3dadd( 20.9421, 12.7027, 50.745, 0.66 ) }
    dend_39 { pt3dadd( 20.7976, 13.9223, 51.4792, 0.74 ) }
    dend_39 { pt3dadd( 20.6551, 15.0549, 52.0931, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_39 { pt3dadd( 20.4545, 16.7429, 52.9941, 0.66 ) }
    dend_39 { pt3dadd( 20.3085, 18.1838, 53.8318, 0.52 ) }
    dend_39 { pt3dadd( 20.2464, 19.1683, 54.4254, 0.52 ) }
    dend_39 { pt3dadd( 20.2231, 20.6433, 55.352, 0.81 ) }
    dend_39 { pt3dadd( 20.2295, 22.0842, 56.2662, 0.59 ) }
    dend_39 { pt3dadd( 20.2619, 23.2494, 56.9731, 0.37 ) }
    dend_39 { pt3dadd( 20.2866, 24.104, 57.4555, 0.37 ) }
    dend_39 { pt3dadd( 20.293, 24.7758, 57.8748, 0.66 ) }
    dend_39 { pt3dadd( 20.2815, 25.6497, 58.5121, 0.52 ) }
    dend_39 { pt3dadd( 20.2204, 26.8723, 59.5231, 0.37 ) }
    dend_39 { pt3dadd( 20.1471, 27.7811, 60.2801, 0.66 ) }
    dend_39 { pt3dadd( 20.0584, 29.1591, 61.3547, 1.03 ) }
    dend_39 { pt3dadd( 19.9948, 30.9496, 62.7287, 0.59 ) }
    dend_39 { pt3dadd( 20.0171, 32.3403, 63.8155, 0.59 ) }
    dend_39 { pt3dadd( 20.0805, 33.3718, 64.6359, 0.59 ) }
    dend_39 { pt3dadd( 20.1812, 34.5892, 65.6621, 0.88 ) }
    dend_39 { pt3dadd( 20.2741, 35.9016, 66.8412, 0.22 ) }
    dend_39 { pt3dadd( 20.2817, 36.4065, 67.3091, 0.44 ) }
    dend_39 { pt3dadd( 20.2054, 37.4962, 68.3305, 0.74 ) }
    dend_39 { pt3dadd( 20.044, 38.9545, 69.7153, 0.44 ) }
    dend_39 { pt3dadd( 19.948, 39.8563, 70.5799, 0.81 ) }
    dend_39 { pt3dadd( 19.8925, 40.7405, 71.4177, 0.96 ) }
    dend_39 { pt3dadd( 19.8809, 42.2017, 72.7431, 0.44 ) }
    dend_39 { pt3dadd( 19.9479, 43.4758, 73.832, 0.52 ) }
    dend_39 { pt3dadd( 20.1028, 44.9037, 74.9612, 0.81 ) }
    dend_39 { pt3dadd( 20.3054, 46.0567, 75.7953, 0.66 ) }
    dend_39 { pt3dadd( 20.6842, 47.6814, 76.8575, 0.29 ) }
    dend_39 { pt3dadd( 20.9585, 48.6818, 77.4741, 0.29 ) }
    dend_39 { pt3dadd( 21.2475, 49.638, 78.0548, 0.74 ) }
    dend_39 { pt3dadd( 21.4849, 50.5816, 78.6473, 0.81 ) }
    dend_39 { pt3dadd( 21.6286, 51.4772, 79.2921, 0.29 ) }
    dend_39 { pt3dadd( 21.7055, 52.3851, 80.0572, 0.66 ) }
    dend_39 { pt3dadd( 21.6971, 53.1879, 80.8119, 0.22 ) }
    dend_39 { pt3dadd( 21.641, 54.0812, 81.7138, 1.11 ) }
    dend_39 { pt3dadd( 21.5384, 55.162, 82.8286, 0.52 ) }
    dend_39 { pt3dadd( 21.398, 56.2413, 84.0056, 0.29 ) }
    dend_39 { pt3dadd( 21.2172, 57.188, 85.1116, 0.29 ) }
    dend_39 { pt3dadd( 21.0861, 57.7678, 85.857, 0.29 ) }
    dend_39 { pt3dadd( 20.9526, 58.4319, 86.7431, 0.29 ) }
    dend_39 { pt3dadd( 20.8264, 59.1761, 87.7515, 1.18 ) }
    dend_39 { pt3dadd( 20.6411, 60.2466, 89.1925, 0.22 ) }
    dend_39 { pt3dadd( 20.4495, 61.0853, 90.3222, 0.22 ) }
    dend_39 { pt3dadd( 20.2469, 61.8566, 91.4329, 0.22 ) }
    dend_39 { pt3dadd( 20.137, 62.3242, 92.1978, 0.74 ) }
    dend_39 { pt3dadd( 20.0247, 62.7703, 93.0687, 0.29 ) }
    dend_39 { pt3dadd( 19.8439, 63.2413, 94.1497, 0.81 ) }
    dend_39 { pt3dadd( 19.6087, 63.6799, 95.1605, 0.37 ) }
    dend_39 { pt3dadd( 19.2791, 64.2447, 96.4073, 0.37 ) }
    dend_39 { pt3dadd( 19.0582, 64.6164, 97.1434, 0.37 ) }
    dend_39 { pt3dadd( 18.613, 65.4123, 98.6136, 0.81 ) }
    dend_39 { pt3dadd( 18.0652, 66.497, 100.424, 1.4 ) }
    dend_39 { pt3dadd( 17.5459, 67.5662, 102.085, 0.37 ) }
    dend_39 { pt3dadd( 17.1984, 68.3301, 103.181, 0.37 ) }
    dend_39 { pt3dadd( 16.8758, 69.1258, 104.237, 0.74 ) }
    dend_39 { pt3dadd( 16.5704, 69.9461, 105.267, 0.88 ) }
    dend_39 { pt3dadd( 16.0895, 71.3785, 106.947, 0.37 ) }
    dend_39 { pt3dadd( 15.6974, 72.5446, 108.303, 1.18 ) }
    dend_39 { pt3dadd( 15.2626, 73.6326, 109.597, 0.22 ) }
    dend_39 { pt3dadd( 14.802, 74.5396, 110.706, 0.88 ) }
    dend_39 { pt3dadd( 14.3388, 75.2813, 111.671, 0.22 ) }
    dend_39 { pt3dadd( 13.9548, 75.815, 112.405, 0.74 ) }
    dend_39 { pt3dadd( 13.2728, 76.6685, 113.616, 0.07 ) }
    dend_39 { pt3dadd( 12.6899, 77.3229, 114.489, 0.96 ) }
    dend_39 { pt3dadd( 11.8672, 78.1556, 115.507, 0.15 ) }
    dend_39 { pt3dadd( 11.2724, 78.7616, 116.154, 0.88 ) }
    dend_39 { pt3dadd( 10.3622, 79.8334, 117.077, 0.07 ) }
    dend_39 { pt3dadd( 10.1172, 80.2141, 117.288, 0.59 ) }
    dend_39 { pt3dadd( 9.31657, 81.9762, 117.677, 0.15 ) }
    dend_39 { pt3dadd( 8.99514, 82.9602, 117.597, 0.15 ) }
    dend_39 { pt3dadd( 8.74984, 83.9364, 117.317, 0.81 ) }
    dend_39 { pt3dadd( 8.57218, 84.736, 117.017, 0.81 ) }
    dend_39 { pt3dadd( 8.21379, 86.5467, 116.188, 0.07 ) }
    dend_39 { pt3dadd( 8.0849, 87.4099, 115.756, 0.74 ) }
    dend_39 { pt3dadd( 7.95505, 89.0992, 114.813, 0.07 ) }
    dend_39 { pt3dadd( 7.88895, 89.9217, 114.341, 0.37 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 75/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 9.43144, -1.54593, 8.96123, 0.88 ) }
    dend_38 { pt3dadd( 10.019, -2.65962, 10.3241, 0.88 ) }
    dend_38 { pt3dadd( 10.8859, -3.98421, 11.7889, 0.66 ) }
    dend_38 { pt3dadd( 12.0976, -5.3583, 13.2775, 0.52 ) }
    dend_38 { pt3dadd( 13.151, -6.2759, 14.3384, 0.81 ) }
    dend_38 { pt3dadd( 14.1854, -7.05946, 15.335, 0.66 ) }
    dend_38 { pt3dadd( 15.0361, -7.71097, 16.1693, 0.59 ) }
    dend_38 { pt3dadd( 16.1051, -8.56742, 17.1098, 0.88 ) }
    dend_38 { pt3dadd( 17.411, -9.60099, 18.0943, 0.66 ) }
    dend_38 { pt3dadd( 18.7093, -10.562, 18.9033, 0.44 ) }
    dend_38 { pt3dadd( 20.0605, -11.6118, 19.7302, 0.52 ) }
    dend_38 { pt3dadd( 21.337, -12.7957, 20.6426, 0.59 ) }
    dend_38 { pt3dadd( 22.1344, -13.7051, 21.3953, 0.44 ) }
    dend_38 { pt3dadd( 22.7964, -14.5436, 22.1388, 0.66 ) }
    dend_38 { pt3dadd( 23.893, -15.9779, 23.4502, 0.37 ) }
    dend_38 { pt3dadd( 24.9487, -17.2169, 24.6514, 0.88 ) }
    dend_38 { pt3dadd( 25.8091, -18.0511, 25.5902, 0.96 ) }
    dend_38 { pt3dadd( 27.6712, -19.4812, 27.63, 0.29 ) }
    dend_38 { pt3dadd( 28.8512, -20.2292, 29.0071, 0.59 ) }
    dend_38 { pt3dadd( 29.4697, -20.5726, 29.7884, 0.74 ) }
    dend_38 { pt3dadd( 30.6097, -21.1683, 31.3914, 0.44 ) }
    dend_38 { pt3dadd( 31.5539, -21.6293, 32.7696, 0.44 ) }
    dend_38 { pt3dadd( 32.263, -21.9949, 33.8446, 0.44 ) }
    dend_38 { pt3dadd( 33.1305, -22.4991, 35.2471, 0.44 ) }
    dend_38 { pt3dadd( 33.7691, -22.8939, 36.4187, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_38 { pt3dadd( 34.3108, -23.1699, 37.3704, 0.44 ) }
    dend_38 { pt3dadd( 35.0126, -23.46, 38.5073, 0.44 ) }
    dend_38 { pt3dadd( 35.8233, -23.7645, 39.6712, 0.44 ) }
    dend_38 { pt3dadd( 36.7171, -24.1126, 40.831, 0.88 ) }
    dend_38 { pt3dadd( 37.4772, -24.4171, 41.7545, 0.88 ) }
    dend_38 { pt3dadd( 38.8417, -25.0134, 43.4071, 0.44 ) }
    dend_38 { pt3dadd( 39.9001, -25.6043, 44.7368, 0.44 ) }
    dend_38 { pt3dadd( 40.6644, -26.178, 45.7594, 0.66 ) }
    dend_38 { pt3dadd( 42.1864, -27.6278, 47.9296, 0.88 ) }
    dend_38 { pt3dadd( 43.0779, -28.6302, 49.278, 0.52 ) }
    dend_38 { pt3dadd( 43.9185, -29.6803, 50.5858, 0.29 ) }
    dend_38 { pt3dadd( 44.7698, -30.8289, 51.9883, 0.52 ) }
    dend_38 { pt3dadd( 45.3267, -31.5318, 52.845, 0.29 ) }
    dend_38 { pt3dadd( 46.1273, -32.456, 53.9917, 0.37 ) }
    dend_38 { pt3dadd( 46.9098, -33.3207, 55.0728, 0.37 ) }
    dend_38 { pt3dadd( 47.4918, -33.9234, 55.8737, 0.66 ) }
    dend_38 { pt3dadd( 48.4563, -34.8594, 57.2499, 1.18 ) }
    dend_38 { pt3dadd( 49.6305, -35.9679, 59.1033, 1.18 ) }
    dend_38 { pt3dadd( 50.5351, -36.8759, 60.7451, 0.52 ) }
    dend_38 { pt3dadd( 51.3726, -37.7838, 62.4557, 0.29 ) }
    dend_38 { pt3dadd( 52.0765, -38.5253, 63.9511, 0.88 ) }
    dend_38 { pt3dadd( 52.8142, -39.2357, 65.5219, 0.29 ) }
    dend_38 { pt3dadd( 53.9199, -40.2362, 67.8251, 0.96 ) }
    dend_38 { pt3dadd( 55.3914, -41.4932, 70.837, 0.22 ) }
    dend_38 { pt3dadd( 56.0693, -42.0408, 72.1565, 0.37 ) }
    dend_38 { pt3dadd( 56.8518, -42.6962, 73.5096, 1.25 ) }
    dend_38 { pt3dadd( 57.7532, -43.5356, 74.9172, 0.22 ) }
    dend_38 { pt3dadd( 58.4624, -44.2912, 75.9491, 0.44 ) }
    dend_38 { pt3dadd( 58.9857, -44.9247, 76.6946, 0.44 ) }
    dend_38 { pt3dadd( 59.6226, -45.8113, 77.6258, 1.55 ) }
    dend_38 { pt3dadd( 61.0926, -48.0378, 79.8326, 0.15 ) }
    dend_38 { pt3dadd( 61.6751, -48.9604, 80.7724, 0.81 ) }
    dend_38 { pt3dadd( 63.043, -51.073, 83.0911, 0.29 ) }
    dend_38 { pt3dadd( 63.7742, -52.1337, 84.3541, 0.29 ) }
    dend_38 { pt3dadd( 64.6586, -53.3413, 85.8658, 0.22 ) }
    dend_38 { pt3dadd( 65.1963, -54.0063, 86.7419, 1.18 ) }
    dend_38 { pt3dadd( 67.0722, -56.0127, 89.5311, 0.52 ) }
    dend_38 { pt3dadd( 68.1095, -56.9739, 90.8377, 0.29 ) }
    dend_38 { pt3dadd( 68.8143, -57.5233, 91.5364, 1.03 ) }
    dend_38 { pt3dadd( 69.3711, -57.8895, 92.0018, 1.33 ) }
    dend_38 { pt3dadd( 71.7221, -59.1831, 93.7091, 0.22 ) }
    dend_38 { pt3dadd( 72.6746, -59.63, 94.3124, 0.96 ) }
    dend_38 { pt3dadd( 73.9411, -60.1259, 94.968, 1.18 ) }
    dend_38 { pt3dadd( 76.1037, -60.8559, 95.9736, 0.22 ) }
    dend_38 { pt3dadd( 77.9967, -61.3808, 96.7623, 0.59 ) }
    dend_38 { pt3dadd( 79.1643, -61.6511, 97.2302, 0.22 ) }
    dend_38 { pt3dadd( 80.2688, -61.862, 97.6743, 0.22 ) }
    dend_38 { pt3dadd( 80.8627, -62.0034, 97.9446, 0.74 ) }
    dend_38 { pt3dadd( 82.0193, -62.3201, 98.5407, 1.55 ) }
    dend_38 { pt3dadd( 84.435, -63.1261, 100.082, 0.22 ) }
    dend_38 { pt3dadd( 85.6992, -63.6657, 101.021, 0.22 ) }
    dend_38 { pt3dadd( 87.2396, -64.4324, 102.312, 0.88 ) }
    dend_38 { pt3dadd( 89.1555, -65.5189, 104.077, 0.22 ) }
    dend_38 { pt3dadd( 90.164, -66.1416, 105.077, 0.29 ) }
    dend_38 { pt3dadd( 91.9525, -67.3941, 107.066, 0.07 ) }
    dend_38 { pt3dadd( 93.2232, -68.4269, 108.701, 0.07 ) }
    dend_38 { pt3dadd( 93.5007, -68.6619, 109.067, 0.07 ) }
    dend_38 { pt3dadd( 94.0792, -69.1637, 109.845, 0.37 ) }
    // Section: dend_26, id: dend_26, parent: dend_18 (entry count 58/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -1.93933, -18.4282, 1.23456, 0.81 ) }
    dend_26 { pt3dadd( -3.70129, -19.8801, 1.30197, 0.81 ) }
    dend_26 { pt3dadd( -4.77235, -20.7627, 1.34294, 0.81 ) }
    dend_26 { pt3dadd( -6.21667, -21.9528, 1.3982, 1.03 ) }
    dend_26 { pt3dadd( -7.63183, -23.1189, 1.45234, 0.66 ) }
    dend_26 { pt3dadd( -8.88656, -24.1528, 1.50035, 0.74 ) }
    dend_26 { pt3dadd( -9.70161, -24.8244, 1.53153, 1.33 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 65/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -1.93933, -18.4282, 1.23456, 1.25 ) }
    dend_19 { pt3dadd( -1.33448, -20.0867, 0.814762, 1.25 ) }
    dend_19 { pt3dadd( -0.800485, -21.7431, 0.210328, 1.4 ) }
    dend_19 { pt3dadd( -0.330206, -23.4975, -0.605798, 1.33 ) }
    dend_19 { pt3dadd( -0.0648939, -24.7322, -1.29765, 1.25 ) }
    dend_19 { pt3dadd( 0.112657, -25.8908, -2.0311, 1.11 ) }
    dend_19 { pt3dadd( 0.226154, -27.1519, -2.89289, 1.18 ) }
    dend_19 { pt3dadd( 0.256338, -28.4853, -3.95368, 1.18 ) }
    dend_19 { pt3dadd( 0.199944, -29.7105, -5.08437, 1.03 ) }
    dend_19 { pt3dadd( 0.061032, -30.8017, -6.21038, 0.96 ) }
    dend_19 { pt3dadd( -0.16243, -31.85, -7.3642, 1.33 ) }
    dend_19 { pt3dadd( -0.429701, -32.7789, -8.40505, 1.7 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 77/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 10.1397, -17.2596, -2.90157, 0.52 ) }
    dend_17 { pt3dadd( 10.5654, -17.8842, -2.73753, 0.52 ) }
    dend_17 { pt3dadd( 11.0553, -18.427, -2.50691, 0.37 ) }
    dend_17 { pt3dadd( 11.595, -18.9581, -2.20543, 0.29 ) }
    dend_17 { pt3dadd( 12.0349, -19.3666, -1.92276, 0.59 ) }
    dend_17 { pt3dadd( 12.4598, -19.7411, -1.61597, 0.44 ) }
    dend_17 { pt3dadd( 13.1268, -20.2671, -1.13366, 0.22 ) }
    dend_17 { pt3dadd( 13.9685, -20.809, -0.566725, 0.22 ) }
    dend_17 { pt3dadd( 14.6637, -21.2126, -0.13467, 0.44 ) }
    dend_17 { pt3dadd( 15.3348, -21.5964, 0.273151, 0.52 ) }
    dend_17 { pt3dadd( 16.1968, -22.1185, 0.780631, 0.29 ) }
    dend_17 { pt3dadd( 16.9715, -22.6093, 1.20682, 0.29 ) }
    dend_17 { pt3dadd( 17.5668, -23.0081, 1.51407, 0.29 ) }
    dend_17 { pt3dadd( 18.2425, -23.5048, 1.81744, 0.29 ) }
    dend_17 { pt3dadd( 18.7349, -23.9032, 1.99786, 0.37 ) }
    dend_17 { pt3dadd( 19.2172, -24.3514, 2.13856, 0.22 ) }
    dend_17 { pt3dadd( 19.3687, -24.5218, 2.17546, 0.37 ) }
    dend_17 { pt3dadd( 19.8022, -25.1032, 2.27804, 0.22 ) }
    dend_17 { pt3dadd( 20.2522, -25.738, 2.37206, 0.81 ) }
    dend_17 { pt3dadd( 20.8504, -26.5398, 2.44832, 0.37 ) }
    dend_17 { pt3dadd( 21.4266, -27.2405, 2.48628, 0.29 ) }
    dend_17 { pt3dadd( 21.9277, -27.8079, 2.48584, 0.22 ) }
    dend_17 { pt3dadd( 22.3314, -28.2121, 2.48503, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_17 { pt3dadd( 22.9016, -28.7145, 2.49723, 0.22 ) }
    dend_17 { pt3dadd( 23.2964, -29.0253, 2.52269, 0.22 ) }
    dend_17 { pt3dadd( 23.9934, -29.4849, 2.60871, 0.66 ) }
    dend_17 { pt3dadd( 24.8186, -29.9513, 2.73771, 0.52 ) }
    dend_17 { pt3dadd( 26.0385, -30.5853, 2.96352, 0.22 ) }
    dend_17 { pt3dadd( 26.794, -30.9776, 3.1205, 0.74 ) }
    dend_17 { pt3dadd( 27.0666, -31.1212, 3.1758, 1.11 ) }
    dend_17 { pt3dadd( 28.0145, -31.6466, 3.33594, 0.22 ) }
    dend_17 { pt3dadd( 28.2206, -31.7663, 3.34668, 0.44 ) }
    dend_17 { pt3dadd( 28.5603, -31.9564, 3.32047, 0.44 ) }
    dend_17 { pt3dadd( 29.0809, -32.2534, 3.21333, 0.22 ) }
    dend_17 { pt3dadd( 29.7884, -32.6545, 3.06002, 0.15 ) }
    dend_17 { pt3dadd( 30.434, -33.0328, 2.93971, 0.22 ) }
    dend_17 { pt3dadd( 31.3148, -33.5941, 2.79512, 0.15 ) }
    dend_17 { pt3dadd( 31.9282, -34.0016, 2.72263, 0.15 ) }
    dend_17 { pt3dadd( 32.3947, -34.3385, 2.68379, 0.74 ) }
    dend_17 { pt3dadd( 33.1467, -34.9998, 2.62426, 0.37 ) }
    dend_17 { pt3dadd( 33.4831, -35.4015, 2.60229, 0.29 ) }
    dend_17 { pt3dadd( 33.7796, -35.8069, 2.59859, 0.88 ) }
    dend_17 { pt3dadd( 34.0147, -36.2, 2.61499, 1.25 ) }
    dend_17 { pt3dadd( 34.3459, -36.9611, 2.60907, 0.22 ) }
    dend_17 { pt3dadd( 34.6296, -37.9024, 2.51431, 0.15 ) }
    dend_17 { pt3dadd( 34.7444, -38.552, 2.37144, 0.52 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 23/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 10.1397, -17.2596, -2.90157, 0.66 ) }
    dend_16 { pt3dadd( 10.032, -17.3729, -4.01986, 0.66 ) }
    dend_16 { pt3dadd( 9.92911, -17.6529, -5.45821, 0.66 ) }
    dend_16 { pt3dadd( 9.88029, -18.0082, -6.64588, 0.66 ) }
    dend_16 { pt3dadd( 9.87487, -18.4977, -7.85485, 0.44 ) }
    dend_16 { pt3dadd( 9.88602, -18.87, -8.5667, 0.44 ) }
    dend_16 { pt3dadd( 9.89702, -19.2309, -9.17125, 0.44 ) }
    dend_16 { pt3dadd( 9.94571, -20.0271, -10.2487, 0.37 ) }
    dend_16 { pt3dadd( 9.99383, -20.5358, -10.8476, 0.59 ) }
    dend_16 { pt3dadd( 10.0539, -21.1123, -11.481, 0.52 ) }
    dend_16 { pt3dadd( 10.1007, -21.9272, -12.3618, 0.44 ) }
    dend_16 { pt3dadd( 10.0869, -22.4956, -13.016, 0.44 ) }
    dend_16 { pt3dadd( 9.98705, -23.252, -13.979, 0.52 ) }
    dend_16 { pt3dadd( 9.9112, -23.6214, -14.4941, 0.52 ) }
    dend_16 { pt3dadd( 9.88203, -23.7679, -14.6776, 0.52 ) }
    dend_16 { pt3dadd( 9.79281, -24.2327, -15.1344, 0.52 ) }
    dend_16 { pt3dadd( 9.64507, -24.8965, -15.6525, 0.52 ) }
    dend_16 { pt3dadd( 9.46562, -25.6065, -16.1594, 0.37 ) }
    dend_16 { pt3dadd( 9.24109, -26.4421, -16.7713, 0.37 ) }
    dend_16 { pt3dadd( 9.08221, -27.0392, -17.1731, 0.59 ) }
    dend_16 { pt3dadd( 8.8753, -27.9493, -17.7167, 0.37 ) }
    dend_16 { pt3dadd( 8.67797, -29.0568, -18.3304, 0.29 ) }
    dend_16 { pt3dadd( 8.50347, -30.1835, -18.9187, 0.29 ) }
    dend_16 { pt3dadd( 8.33625, -31.1989, -19.4074, 0.37 ) }
    dend_16 { pt3dadd( 8.03548, -32.5515, -19.9855, 0.22 ) }
    dend_16 { pt3dadd( 7.69107, -33.8514, -20.4677, 0.15 ) }
    dend_16 { pt3dadd( 7.60119, -34.2909, -20.5849, 0.15 ) }
    dend_16 { pt3dadd( 7.52999, -34.7961, -20.647, 0.15 ) }
    dend_16 { pt3dadd( 7.43421, -35.5189, -20.6245, 0.15 ) }
    dend_16 { pt3dadd( 7.26987, -36.5743, -20.4678, 0.15 ) }
    dend_16 { pt3dadd( 6.96627, -37.6275, -20.3468, 0.15 ) }
    dend_16 { pt3dadd( 6.19031, -44.6956, -25.3997, 0.15 ) }
    dend_16 { pt3dadd( 6.0138, -51.0682, -31.3185, 0.15 ) }
    dend_16 { pt3dadd( 5.77273, -56.3215, -38.2075, 0.15 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 57/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 0.842738, 19.6448, 3.45727, 1.33 ) }
    dend_11 { pt3dadd( 1.30524, 20.0033, 3.00458, 1.33 ) }
    dend_11 { pt3dadd( 1.93623, 20.6079, 2.39562, 1.03 ) }
    dend_11 { pt3dadd( 2.67215, 21.4543, 1.69563, 0.74 ) }
    dend_11 { pt3dadd( 3.46898, 22.6689, 0.881869, 1.03 ) }
    dend_11 { pt3dadd( 4.04328, 23.6858, 0.285479, 0.59 ) }
    dend_11 { pt3dadd( 4.48019, 24.503, -0.141444, 0.81 ) }
    dend_11 { pt3dadd( 4.98511, 25.6207, -0.593428, 0.74 ) }
    dend_11 { pt3dadd( 5.32576, 26.542, -0.853195, 1.33 ) }
    dend_11 { pt3dadd( 5.86633, 28.3582, -1.18252, 0.52 ) }
    dend_11 { pt3dadd( 5.98114, 28.8703, -1.24385, 0.52 ) }
    dend_11 { pt3dadd( 6.13265, 30.0028, -1.36973, 0.74 ) }
    dend_11 { pt3dadd( 6.20151, 31.1895, -1.54436, 0.59 ) }
    dend_11 { pt3dadd( 6.19122, 32.4535, -1.80284, 0.59 ) }
    dend_11 { pt3dadd( 6.15335, 33.4768, -2.06971, 1.11 ) }
    dend_11 { pt3dadd( 6.11746, 34.4802, -2.36299, 1.11 ) }
    dend_11 { pt3dadd( 6.08253, 35.889, -2.78738, 0.66 ) }
    dend_11 { pt3dadd( 6.10506, 36.8666, -3.09044, 0.81 ) }
    dend_11 { pt3dadd( 6.22056, 37.7099, -3.37544, 0.66 ) }
    dend_11 { pt3dadd( 6.49046, 38.6727, -3.70175, 0.44 ) }
    dend_11 { pt3dadd( 6.80043, 39.4732, -4.01316, 0.44 ) }
    dend_11 { pt3dadd( 7.15591, 40.3383, -4.39714, 0.59 ) }
    dend_11 { pt3dadd( 7.54278, 41.4133, -4.93824, 0.88 ) }
    dend_11 { pt3dadd( 7.7485, 42.3904, -5.48577, 0.66 ) }
    dend_11 { pt3dadd( 7.7605, 43.4167, -6.13507, 0.81 ) }
    dend_11 { pt3dadd( 7.66759, 44.4377, -6.83844, 0.66 ) }
    dend_11 { pt3dadd( 7.44026, 45.6269, -7.7306, 0.66 ) }
    dend_11 { pt3dadd( 7.11254, 46.698, -8.59428, 0.52 ) }
    dend_11 { pt3dadd( 6.7182, 47.5909, -9.33095, 0.74 ) }
    dend_11 { pt3dadd( 6.17752, 48.5727, -10.1041, 0.81 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 87/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 0.842738, 19.6448, 3.45727, 0.74 ) }
    dend_10 { pt3dadd( -0.512668, 20.7774, 3.1619, 0.74 ) }
    dend_10 { pt3dadd( -2.1171, 21.8663, 2.91041, 0.88 ) }
    dend_10 { pt3dadd( -3.43796, 22.7396, 2.74365, 0.66 ) }
    dend_10 { pt3dadd( -4.21867, 23.2608, 2.65293, 0.66 ) }
    dend_10 { pt3dadd( -5.28688, 23.9487, 2.54292, 0.74 ) }
    dend_10 { pt3dadd( -6.52465, 24.6793, 2.42584, 0.59 ) }
    dend_10 { pt3dadd( -7.86955, 25.2323, 2.31877, 0.37 ) }
    dend_10 { pt3dadd( -8.74441, 25.4801, 2.25914, 0.37 ) }
    dend_10 { pt3dadd( -9.35659, 25.6228, 2.22402, 0.37 ) }
    dend_10 { pt3dadd( -10.0657, 25.8084, 2.17415, 0.37 ) }
    dend_10 { pt3dadd( -11.1153, 26.1527, 2.11435, 0.37 ) }
    dend_10 { pt3dadd( -12.0799, 26.5649, 2.06256, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_10 { pt3dadd( -13.1387, 27.1198, 2.00886, 0.52 ) }
    dend_10 { pt3dadd( -14.6841, 28.0502, 1.92184, 0.66 ) }
    dend_10 { pt3dadd( -15.8423, 28.8742, 1.84791, 0.37 ) }
    dend_10 { pt3dadd( -16.803, 29.6809, 1.79337, 0.66 ) }
    dend_10 { pt3dadd( -17.8228, 30.6607, 1.7873, 0.52 ) }
    dend_10 { pt3dadd( -18.6455, 31.5016, 1.85236, 0.81 ) }
    dend_10 { pt3dadd( -19.3944, 32.2626, 1.9665, 0.88 ) }
    dend_10 { pt3dadd( -20.1246, 33.0165, 2.13401, 0.66 ) }
    dend_10 { pt3dadd( -21.3075, 34.1767, 2.48638, 0.44 ) }
    dend_10 { pt3dadd( -22.433, 35.1894, 2.95153, 0.44 ) }
    dend_10 { pt3dadd( -23.4495, 36.0668, 3.55854, 0.66 ) }
    dend_10 { pt3dadd( -23.9021, 36.4524, 3.90404, 0.66 ) }
    dend_10 { pt3dadd( -24.3521, 36.8568, 4.30879, 0.66 ) }
    dend_10 { pt3dadd( -24.7361, 37.2437, 4.70663, 0.66 ) }
    dend_10 { pt3dadd( -25.3391, 37.9247, 5.45937, 0.66 ) }
    dend_10 { pt3dadd( -25.982, 38.747, 6.41991, 0.29 ) }
    dend_10 { pt3dadd( -26.5277, 39.5278, 7.34864, 0.29 ) }
    dend_10 { pt3dadd( -27.2155, 40.5408, 8.54403, 0.66 ) }
    dend_10 { pt3dadd( -27.8839, 41.4382, 9.61904, 0.37 ) }
    dend_10 { pt3dadd( -28.7506, 42.4886, 10.9658, 0.59 ) }
    dend_10 { pt3dadd( -29.5114, 43.2995, 12.0807, 0.96 ) }
    dend_10 { pt3dadd( -30.1318, 43.8675, 12.9439, 0.37 ) }
    dend_10 { pt3dadd( -30.55, 44.2201, 13.4578, 0.37 ) }
    dend_10 { pt3dadd( -31.281, 44.7442, 14.1558, 0.37 ) }
    dend_10 { pt3dadd( -31.856, 45.1238, 14.5237, 0.37 ) }
    dend_10 { pt3dadd( -32.4944, 45.5824, 14.7704, 0.96 ) }
    dend_10 { pt3dadd( -32.9961, 45.9696, 14.9059, 0.96 ) }
    dend_10 { pt3dadd( -34.1506, 46.96, 15.1624, 0.22 ) }
    dend_10 { pt3dadd( -34.8555, 47.627, 15.3154, 0.59 ) }
    dend_10 { pt3dadd( -35.4573, 48.2766, 15.4654, 1.18 ) }
    dend_10 { pt3dadd( -36.6973, 49.6675, 15.8003, 0.22 ) }
    dend_10 { pt3dadd( -36.9764, 49.9902, 15.8865, 0.44 ) }
    dend_10 { pt3dadd( -37.5149, 50.6081, 16.0779, 0.44 ) }
    dend_10 { pt3dadd( -38.4413, 51.5854, 16.4155, 0.22 ) }
    dend_10 { pt3dadd( -39.2495, 52.4119, 16.6981, 0.15 ) }
    dend_10 { pt3dadd( -39.8006, 52.9473, 16.8794, 0.15 ) }
    dend_10 { pt3dadd( -40.2724, 53.3732, 17.0084, 0.15 ) }
    dend_10 { pt3dadd( -41.1334, 54.1244, 17.2055, 0.88 ) }
    dend_10 { pt3dadd( -42.6038, 55.4035, 17.4624, 0.15 ) }
    dend_10 { pt3dadd( -42.8611, 55.6358, 17.4908, 0.52 ) }
    dend_10 { pt3dadd( -43.5991, 56.3087, 17.53, 1.47 ) }
    dend_10 { pt3dadd( -45.0233, 57.7083, 17.5505, 0.22 ) }
    dend_10 { pt3dadd( -45.6792, 58.4504, 17.533, 0.22 ) }
    dend_10 { pt3dadd( -46.1903, 59.1479, 17.5028, 0.74 ) }
    dend_10 { pt3dadd( -46.9051, 60.3436, 17.4442, 0.15 ) }
    dend_10 { pt3dadd( -47.0392, 60.5866, 17.4337, 0.59 ) }
    dend_10 { pt3dadd( -47.4433, 61.3988, 17.402, 1.11 ) }
    dend_10 { pt3dadd( -48.4092, 63.4678, 17.311, 0.15 ) }
    dend_10 { pt3dadd( -48.8102, 64.337, 17.2676, 0.15 ) }
    dend_10 { pt3dadd( -49.0984, 64.9567, 17.2371, 0.29 ) }
    dend_10 { pt3dadd( -49.8037, 66.4538, 17.1491, 0.15 ) }
    dend_10 { pt3dadd( -50.0593, 66.9786, 17.1174, 0.96 ) }
    dend_10 { pt3dadd( -50.2719, 67.3643, 17.0926, 1.33 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 53/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 7.32522, 12.7156, 5.14001, 1.33 ) }
    dend_6 { pt3dadd( 8.11996, 12.6928, 4.91459, 1.33 ) }
    dend_6 { pt3dadd( 9.56271, 12.8122, 4.38348, 0.66 ) }
    dend_6 { pt3dadd( 10.5265, 12.9886, 3.95931, 0.66 ) }
    dend_6 { pt3dadd( 11.5998, 13.2831, 3.45878, 0.66 ) }
    dend_6 { pt3dadd( 12.6483, 13.5709, 2.9698, 0.88 ) }
    dend_6 { pt3dadd( 13.8426, 13.8986, 2.41285, 0.81 ) }
    dend_6 { pt3dadd( 15.2487, 14.2757, 1.65798, 0.96 ) }
    dend_6 { pt3dadd( 16.1168, 14.5493, 1.09637, 1.03 ) }
    dend_6 { pt3dadd( 16.7533, 14.8764, 0.63567, 1.33 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 63/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.32522, 12.7156, 5.14001, 1.03 ) }
    dend_1 { pt3dadd( 7.82009, 12.2507, 6.55305, 1.03 ) }
    dend_1 { pt3dadd( 8.42685, 11.6808, 8.28563, 1.03 ) }
    dend_1 { pt3dadd( 8.97913, 11.162, 9.86262, 1.03 ) }
    dend_1 { pt3dadd( 9.51193, 10.6615, 11.384, 0.88 ) }
    dend_1 { pt3dadd( 10.0501, 10.156, 12.9207, 1.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 69/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.78974, 41.5951, 0.0348418, 0.15 ) }
    axon_1 { pt3dadd( -3.54739, 56.576, 0.0348418, 0.15 ) }
    axon_1 { pt3dadd( -4.30504, 71.5568, 0.0348418, 0.15 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 72/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -7.67562, -16.3655, 43.3186, 0.29 ) }
    dend_66 { pt3dadd( -8.15141, -16.8894, 44.0203, 0.29 ) }
    dend_66 { pt3dadd( -8.72905, -17.5095, 44.9357, 0.74 ) }
    dend_66 { pt3dadd( -9.56782, -18.3615, 46.2925, 0.22 ) }
    dend_66 { pt3dadd( -10.5252, -19.2876, 47.8455, 0.22 ) }
    dend_66 { pt3dadd( -11.4986, -20.2477, 49.4121, 0.44 ) }
    dend_66 { pt3dadd( -11.9825, -20.7315, 50.1608, 1.03 ) }
    dend_66 { pt3dadd( -12.6328, -21.412, 51.2017, 1.4 ) }
    dend_66 { pt3dadd( -13.3155, -22.1843, 52.3289, 1.11 ) }
    dend_66 { pt3dadd( -14.0773, -23.162, 53.6092, 0.37 ) }
    dend_66 { pt3dadd( -14.6816, -24.0676, 54.6909, 0.29 ) }
    dend_66 { pt3dadd( -15.0672, -24.7181, 55.4016, 0.29 ) }
    dend_66 { pt3dadd( -15.4181, -25.37, 56.0837, 0.52 ) }
    dend_66 { pt3dadd( -15.7501, -26.0645, 56.7511, 1.03 ) }
    dend_66 { pt3dadd( -16.1518, -26.9495, 57.5236, 0.74 ) }
    dend_66 { pt3dadd( -16.8365, -28.4157, 58.6971, 0.22 ) }
    dend_66 { pt3dadd( -17.0802, -28.9147, 59.0906, 0.52 ) }
    dend_66 { pt3dadd( -17.4616, -29.6745, 59.7674, 0.22 ) }
    dend_66 { pt3dadd( -17.7656, -30.2313, 60.2951, 0.88 ) }
    dend_66 { pt3dadd( -18.3172, -31.14, 61.1632, 0.37 ) }
    dend_66 { pt3dadd( -19.0225, -32.2663, 62.2585, 0.15 ) }
    dend_66 { pt3dadd( -19.5504, -33.0765, 63.1306, 0.44 ) }
    dend_66 { pt3dadd( -20.718, -34.8512, 65.2303, 0.29 ) }
    dend_66 { pt3dadd( -21.0307, -35.3019, 65.8129, 0.88 ) }
    dend_66 { pt3dadd( -21.4193, -35.8024, 66.5525, 1.4 ) }
    dend_66 { pt3dadd( -22.3552, -36.8416, 68.3467, 0.22 ) }
    dend_66 { pt3dadd( -23.0966, -37.5233, 69.6458, 0.22 ) }
    dend_66 { pt3dadd( -23.3284, -37.7048, 69.9905, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_66 { pt3dadd( -23.7179, -37.9905, 70.4742, 0.96 ) }
    dend_66 { pt3dadd( -24.7205, -38.7428, 71.6597, 0.22 ) }
    dend_66 { pt3dadd( -25.6451, -39.4821, 72.7237, 0.22 ) }
    dend_66 { pt3dadd( -25.9577, -39.7431, 73.0611, 0.96 ) }
    dend_66 { pt3dadd( -26.395, -40.1516, 73.5416, 1.03 ) }
    dend_66 { pt3dadd( -27.3026, -41.1204, 74.6406, 0.15 ) }
    dend_66 { pt3dadd( -27.547, -41.4418, 74.9726, 0.29 ) }
    dend_66 { pt3dadd( -28.2308, -42.59, 76.0237, 0.15 ) }
    dend_66 { pt3dadd( -28.6225, -43.3676, 76.7326, 0.59 ) }
    dend_66 { pt3dadd( -28.8976, -43.9743, 77.2988, 0.88 ) }
    dend_66 { pt3dadd( -29.3361, -45.0559, 78.2876, 0.29 ) }
    dend_66 { pt3dadd( -29.6818, -45.9703, 79.0691, 0.44 ) }
    dend_66 { pt3dadd( -30.1749, -47.2833, 80.0672, 0.29 ) }
    dend_66 { pt3dadd( -30.5402, -48.2814, 80.7189, 0.88 ) }
    dend_66 { pt3dadd( -30.7447, -48.8475, 81.0355, 1.4 ) }
    dend_66 { pt3dadd( -31.4717, -50.7939, 81.9154, 0.15 ) }
    dend_66 { pt3dadd( -31.8044, -51.639, 82.2239, 0.15 ) }
    dend_66 { pt3dadd( -32.3726, -53.0073, 82.611, 0.15 ) }
    dend_66 { pt3dadd( -32.5352, -53.3871, 82.6747, 0.52 ) }
    dend_66 { pt3dadd( -32.8578, -54.1221, 82.7558, 0.88 ) }
    dend_66 { pt3dadd( -33.7254, -56.058, 82.9187, 0.15 ) }
    dend_66 { pt3dadd( -34.1647, -57.0129, 82.9934, 0.15 ) }
    dend_66 { pt3dadd( -34.512, -57.7612, 83.0559, 1.03 ) }
    dend_66 { pt3dadd( -35.3003, -59.4149, 83.2124, 0.29 ) }
    dend_66 { pt3dadd( -36.0314, -60.8896, 83.3647, 0.22 ) }
    dend_66 { pt3dadd( -36.2677, -61.3359, 83.4173, 0.59 ) }
    dend_66 { pt3dadd( -36.7519, -62.1927, 83.539, 1.11 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 27/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -7.67562, -16.3655, 43.3186, 0.44 ) }
    dend_65 { pt3dadd( -7.82232, -17.6772, 44.1748, 0.44 ) }
    dend_65 { pt3dadd( -7.91291, -18.5655, 44.7893, 0.37 ) }
    dend_65 { pt3dadd( -8.06083, -20.0983, 45.9085, 0.29 ) }
    dend_65 { pt3dadd( -8.1851, -21.0575, 46.6464, 0.81 ) }
    dend_65 { pt3dadd( -8.31827, -21.8775, 47.303, 0.29 ) }
    dend_65 { pt3dadd( -8.44217, -22.5065, 47.8096, 0.74 ) }
    dend_65 { pt3dadd( -8.6018, -23.1774, 48.4304, 0.37 ) }
    dend_65 { pt3dadd( -8.79094, -23.8393, 49.0853, 0.96 ) }
    dend_65 { pt3dadd( -9.04639, -24.5925, 49.8098, 0.15 ) }
    dend_65 { pt3dadd( -9.21565, -25.0352, 50.2325, 0.15 ) }
    dend_65 { pt3dadd( -9.40188, -25.472, 50.6254, 0.52 ) }
    dend_65 { pt3dadd( -9.89066, -26.5708, 51.502, 0.15 ) }
    dend_65 { pt3dadd( -10.1184, -27.0758, 51.8417, 0.88 ) }
    dend_65 { pt3dadd( -10.2979, -27.4734, 52.0617, 1.55 ) }
    dend_65 { pt3dadd( -10.5948, -28.1644, 52.3915, 0.52 ) }
    dend_65 { pt3dadd( -11.0979, -29.3073, 52.8667, 0.15 ) }
    dend_65 { pt3dadd( -11.5238, -30.2039, 53.1757, 0.15 ) }
    dend_65 { pt3dadd( -11.7724, -30.6866, 53.2841, 0.22 ) }
    dend_65 { pt3dadd( -12.2596, -31.6, 53.4673, 0.15 ) }
    dend_65 { pt3dadd( -12.465, -31.9686, 53.5232, 0.74 ) }
    dend_65 { pt3dadd( -12.7392, -32.4497, 53.5681, 1.18 ) }
    dend_65 { pt3dadd( -13.3114, -33.4415, 53.5901, 0.44 ) }
    dend_65 { pt3dadd( -14.0641, -34.7286, 53.5132, 0.15 ) }
    dend_65 { pt3dadd( -14.4739, -35.4366, 53.4293, 0.44 ) }
    dend_65 { pt3dadd( -15.0797, -36.5197, 53.211, 0.22 ) }
    dend_65 { pt3dadd( -15.3278, -36.9796, 53.0913, 0.88 ) }
    dend_65 { pt3dadd( -15.4917, -37.2914, 52.9991, 1.11 ) }
    dend_65 { pt3dadd( -16.1596, -38.5982, 52.5396, 0.15 ) }
    dend_65 { pt3dadd( -16.3799, -39.0273, 52.3594, 0.74 ) }
    dend_65 { pt3dadd( -16.911, -40.0956, 51.8536, 0.07 ) }
    dend_65 { pt3dadd( -17.0697, -40.4376, 51.708, 0.29 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 59/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 32.9692, -6.99277, 38.0397, 0.74 ) }
    dend_62 { pt3dadd( 32.6024, -6.30131, 40.0822, 0.74 ) }
    dend_62 { pt3dadd( 32.1496, -5.70035, 41.6574, 0.37 ) }
    dend_62 { pt3dadd( 31.6502, -5.27399, 42.6844, 0.52 ) }
    dend_62 { pt3dadd( 30.8816, -4.81963, 43.8377, 0.52 ) }
    dend_62 { pt3dadd( 29.9657, -4.44285, 45.0004, 0.22 ) }
    dend_62 { pt3dadd( 29.3338, -4.30661, 45.7113, 0.22 ) }
    dend_62 { pt3dadd( 28.5257, -4.30443, 46.2736, 0.66 ) }
    dend_62 { pt3dadd( 27.1558, -4.53634, 47.0525, 0.22 ) }
    dend_62 { pt3dadd( 26.4158, -4.81307, 47.4699, 0.29 ) }
    dend_62 { pt3dadd( 25.7122, -5.22242, 47.8725, 0.29 ) }
    dend_62 { pt3dadd( 24.5548, -6.10136, 48.5763, 0.22 ) }
    dend_62 { pt3dadd( 24.0467, -6.52555, 48.892, 0.52 ) }
    dend_62 { pt3dadd( 23.375, -7.08861, 49.3031, 0.52 ) }
    dend_62 { pt3dadd( 22.447, -7.88225, 49.8146, 0.37 ) }
    dend_62 { pt3dadd( 21.3548, -8.74753, 50.3271, 0.29 ) }
    dend_62 { pt3dadd( 20.4587, -9.39671, 50.6694, 0.22 ) }
    dend_62 { pt3dadd( 19.8597, -9.7905, 50.8612, 0.29 ) }
    dend_62 { pt3dadd( 19.0661, -10.2817, 51.0927, 0.22 ) }
    dend_62 { pt3dadd( 18.1013, -10.8273, 51.3495, 0.22 ) }
    dend_62 { pt3dadd( 17.5064, -11.1342, 51.5403, 0.22 ) }
    dend_62 { pt3dadd( 17.0101, -11.3811, 51.7898, 0.22 ) }
    dend_62 { pt3dadd( 16.3455, -11.69, 52.2359, 0.22 ) }
    dend_62 { pt3dadd( 15.8776, -11.9203, 52.5575, 0.44 ) }
    dend_62 { pt3dadd( 14.7906, -12.4875, 53.2832, 0.15 ) }
    dend_62 { pt3dadd( 14.1403, -12.8239, 53.6898, 0.44 ) }
    dend_62 { pt3dadd( 12.6227, -13.633, 54.5359, 0.22 ) }
    dend_62 { pt3dadd( 11.5979, -14.1983, 54.9977, 0.52 ) }
    dend_62 { pt3dadd( 10.1588, -15.0249, 55.4436, 0.07 ) }
    dend_62 { pt3dadd( 9.36699, -15.483, 55.5476, 0.07 ) }
    dend_62 { pt3dadd( 8.48467, -15.9728, 55.4605, 0.07 ) }
    dend_62 { pt3dadd( 7.82097, -16.2784, 55.2948, 0.07 ) }
    dend_62 { pt3dadd( 6.829, -16.6476, 54.9499, 0.15 ) }
    dend_62 { pt3dadd( 6.17673, -16.8221, 54.7365, 0.15 ) }
    dend_62 { pt3dadd( 5.2995, -16.9437, 54.5265, 0.15 ) }
    dend_62 { pt3dadd( 4.34034, -17.0082, 54.3253, 0.15 ) }
    dend_62 { pt3dadd( 2.77485, -17.0657, 54.0462, 0.15 ) }
    dend_62 { pt3dadd( 1.54845, -17.0613, 53.8953, 0.52 ) }
    dend_62 { pt3dadd( 0.11549, -16.9426, 53.7756, 0.15 ) }
    dend_62 { pt3dadd( -0.900924, -16.7717, 53.7069, 0.15 ) }
    dend_62 { pt3dadd( -1.81505, -16.5601, 53.6465, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_62 { pt3dadd( -2.49057, -16.3889, 53.5954, 0.81 ) }
    dend_62 { pt3dadd( -3.50389, -16.0834, 53.4973, 0.22 ) }
    dend_62 { pt3dadd( -4.77204, -15.589, 53.3597, 0.22 ) }
    dend_62 { pt3dadd( -5.60597, -15.1902, 53.2501, 0.44 ) }
    dend_62 { pt3dadd( -6.79514, -14.5474, 53.0468, 0.96 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 5/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 32.9692, -6.99277, 38.0397, 0.22 ) }
    dend_61 { pt3dadd( 33.228, -7.73725, 38.2976, 0.22 ) }
    dend_61 { pt3dadd( 33.3711, -8.08306, 38.4055, 0.52 ) }
    dend_61 { pt3dadd( 33.5399, -8.47, 38.5361, 0.88 ) }
    dend_61 { pt3dadd( 33.8056, -9.03858, 38.7402, 0.44 ) }
    dend_61 { pt3dadd( 34.1951, -9.81057, 39.0757, 0.37 ) }
    dend_61 { pt3dadd( 34.4802, -10.3325, 39.3374, 0.44 ) }
    dend_61 { pt3dadd( 34.8291, -10.8712, 39.6988, 0.37 ) }
    dend_61 { pt3dadd( 35.2242, -11.4095, 40.1782, 0.37 ) }
    dend_61 { pt3dadd( 35.5377, -11.7827, 40.5924, 0.44 ) }
    dend_61 { pt3dadd( 35.9557, -12.224, 41.1771, 0.29 ) }
    dend_61 { pt3dadd( 36.3015, -12.571, 41.6696, 0.59 ) }
    dend_61 { pt3dadd( 36.8463, -13.1267, 42.4858, 0.29 ) }
    dend_61 { pt3dadd( 37.3188, -13.6081, 43.2109, 0.29 ) }
    dend_61 { pt3dadd( 37.594, -13.8802, 43.6052, 0.52 ) }
    dend_61 { pt3dadd( 37.921, -14.1971, 44.0354, 0.81 ) }
    dend_61 { pt3dadd( 38.3105, -14.5815, 44.491, 0.29 ) }
    dend_61 { pt3dadd( 38.5718, -14.858, 44.7649, 0.29 ) }
    dend_61 { pt3dadd( 38.8762, -15.1999, 45.0232, 0.29 ) }
    dend_61 { pt3dadd( 39.0406, -15.4001, 45.142, 0.59 ) }
    dend_61 { pt3dadd( 39.3002, -15.7331, 45.3414, 0.29 ) }
    dend_61 { pt3dadd( 39.5065, -15.9859, 45.4966, 0.29 ) }
    dend_61 { pt3dadd( 39.8681, -16.4193, 45.7617, 0.29 ) }
    dend_61 { pt3dadd( 40.3107, -16.9975, 46.1011, 0.15 ) }
    dend_61 { pt3dadd( 40.6267, -17.4601, 46.3797, 0.22 ) }
    dend_61 { pt3dadd( 41.0252, -18.0966, 46.7537, 0.22 ) }
    dend_61 { pt3dadd( 41.357, -18.6954, 47.0896, 0.22 ) }
    dend_61 { pt3dadd( 41.5678, -19.0867, 47.297, 0.22 ) }
    dend_61 { pt3dadd( 41.8722, -19.6178, 47.5979, 0.37 ) }
    dend_61 { pt3dadd( 42.1688, -20.1316, 47.8975, 0.37 ) }
    dend_61 { pt3dadd( 42.4067, -20.51, 48.1274, 0.22 ) }
    dend_61 { pt3dadd( 42.7462, -21.0284, 48.4411, 0.29 ) }
    dend_61 { pt3dadd( 43.0161, -21.4295, 48.6901, 0.29 ) }
    dend_61 { pt3dadd( 43.4628, -22.0394, 49.0595, 0.22 ) }
    dend_61 { pt3dadd( 43.7843, -22.4148, 49.2835, 0.22 ) }
    dend_61 { pt3dadd( 44.0638, -22.7227, 49.4724, 0.22 ) }
    dend_61 { pt3dadd( 44.2521, -22.9348, 49.6169, 0.22 ) }
    dend_61 { pt3dadd( 44.5167, -23.2922, 49.8625, 0.22 ) }
    dend_61 { pt3dadd( 44.8026, -23.8703, 50.2549, 0.22 ) }
    dend_61 { pt3dadd( 44.9632, -24.3542, 50.5827, 0.22 ) }
    dend_61 { pt3dadd( 45.1193, -24.9026, 50.9876, 0.29 ) }
    dend_61 { pt3dadd( 45.2592, -25.4401, 51.4081, 0.66 ) }
    dend_61 { pt3dadd( 45.4327, -26.0909, 51.9105, 0.29 ) }
    dend_61 { pt3dadd( 45.6851, -26.8739, 52.5044, 0.59 ) }
    dend_61 { pt3dadd( 45.8561, -27.3439, 52.8184, 0.59 ) }
    dend_61 { pt3dadd( 46.1235, -27.9711, 53.1259, 0.22 ) }
    dend_61 { pt3dadd( 46.2596, -28.2237, 53.1953, 0.22 ) }
    dend_61 { pt3dadd( 46.6323, -28.7894, 53.2358, 0.22 ) }
    dend_61 { pt3dadd( 47.0378, -29.3387, 53.1764, 0.22 ) }
    dend_61 { pt3dadd( 47.4345, -29.9332, 53.0321, 0.52 ) }
    dend_61 { pt3dadd( 47.7657, -30.5426, 52.8278, 0.22 ) }
    dend_61 { pt3dadd( 47.9699, -31.0487, 52.637, 0.22 ) }
    dend_61 { pt3dadd( 48.1329, -31.5754, 52.4272, 0.22 ) }
    dend_61 { pt3dadd( 48.2368, -32.041, 52.246, 0.22 ) }
    dend_61 { pt3dadd( 48.3912, -32.8703, 51.9305, 0.29 ) }
    dend_61 { pt3dadd( 48.4884, -33.4937, 51.7033, 0.22 ) }
    dend_61 { pt3dadd( 48.597, -34.327, 51.4045, 0.59 ) }
    dend_61 { pt3dadd( 48.6844, -35.043, 51.1475, 0.44 ) }
    dend_61 { pt3dadd( 48.7698, -35.7815, 50.8643, 0.96 ) }
    dend_61 { pt3dadd( 48.8818, -36.4789, 50.5938, 0.29 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 65/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 39.3194, 10.1099, 33.3398, 0.44 ) }
    dend_55 { pt3dadd( 40.3858, 11.1023, 32.9532, 0.44 ) }
    dend_55 { pt3dadd( 41.3452, 11.9952, 32.6054, 1.03 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 68/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 39.3194, 10.1099, 33.3398, 0.22 ) }
    dend_54 { pt3dadd( 39.8345, 9.87769, 34.0384, 0.22 ) }
    dend_54 { pt3dadd( 40.2552, 9.66677, 34.6235, 0.22 ) }
    dend_54 { pt3dadd( 40.7154, 9.41276, 35.2997, 0.44 ) }
    dend_54 { pt3dadd( 41.2793, 9.07191, 36.1934, 0.74 ) }
    dend_54 { pt3dadd( 41.7579, 8.77372, 36.9372, 0.59 ) }
    dend_54 { pt3dadd( 42.3819, 8.38924, 37.8696, 0.29 ) }
    dend_54 { pt3dadd( 42.8748, 8.15099, 38.5973, 0.22 ) }
    dend_54 { pt3dadd( 43.251, 8.0144, 39.1588, 0.22 ) }
    dend_54 { pt3dadd( 43.5986, 7.92026, 39.6667, 0.22 ) }
    dend_54 { pt3dadd( 44.1447, 7.80211, 40.4374, 0.22 ) }
    dend_54 { pt3dadd( 44.4042, 7.75497, 40.7832, 0.22 ) }
    dend_54 { pt3dadd( 45.1936, 7.64165, 41.7691, 0.37 ) }
    dend_54 { pt3dadd( 46.0405, 7.52412, 42.7941, 0.22 ) }
    dend_54 { pt3dadd( 46.5355, 7.43094, 43.3754, 0.22 ) }
    dend_54 { pt3dadd( 46.888, 7.35695, 43.7871, 0.22 ) }
    dend_54 { pt3dadd( 47.3093, 7.2721, 44.2884, 0.44 ) }
    dend_54 { pt3dadd( 48.2772, 7.04835, 45.4735, 0.15 ) }
    dend_54 { pt3dadd( 48.8029, 6.88583, 46.139, 0.29 ) }
    dend_54 { pt3dadd( 49.5297, 6.6375, 47.0656, 0.15 ) }
    dend_54 { pt3dadd( 50.1833, 6.45524, 47.9158, 0.88 ) }
    dend_54 { pt3dadd( 50.9501, 6.30538, 48.9569, 0.29 ) }
    dend_54 { pt3dadd( 51.6188, 6.22749, 49.9065, 0.22 ) }
    dend_54 { pt3dadd( 52.0243, 6.21517, 50.4859, 0.22 ) }
    dend_54 { pt3dadd( 52.553, 6.23208, 51.2281, 0.37 ) }
    dend_54 { pt3dadd( 53.4018, 6.33197, 52.3917, 0.66 ) }
    dend_54 { pt3dadd( 54.3518, 6.50159, 53.6503, 0.07 ) }
    dend_54 { pt3dadd( 54.8528, 6.61981, 54.2868, 0.37 ) }
    dend_54 { pt3dadd( 55.6573, 6.84723, 55.2155, 0.15 ) }
    dend_54 { pt3dadd( 56.7025, 7.17532, 56.3463, 0.15 ) }
    dend_54 { pt3dadd( 57.0989, 7.29569, 56.768, 0.15 ) }
    dend_54 { pt3dadd( 57.5813, 7.40407, 57.2369, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_54 { pt3dadd( 58.256, 7.49869, 57.8317, 0.29 ) }
    dend_54 { pt3dadd( 59.0039, 7.5132, 58.4614, 0.15 ) }
    dend_54 { pt3dadd( 59.2444, 7.48785, 58.6695, 0.15 ) }
    dend_54 { pt3dadd( 59.9015, 7.39385, 59.2325, 0.15 ) }
    dend_54 { pt3dadd( 60.7349, 7.27707, 59.9657, 0.15 ) }
    dend_54 { pt3dadd( 61.2773, 7.23198, 60.4728, 0.15 ) }
    dend_54 { pt3dadd( 61.8465, 7.2498, 61.0035, 0.15 ) }
    dend_54 { pt3dadd( 62.3918, 7.35936, 61.5015, 0.15 ) }
    dend_54 { pt3dadd( 63.2004, 7.64942, 62.1634, 0.22 ) }
    dend_54 { pt3dadd( 64.126, 8.12647, 62.8684, 0.22 ) }
    dend_54 { pt3dadd( 64.9308, 8.67433, 63.4444, 0.22 ) }
    dend_54 { pt3dadd( 65.4856, 9.11546, 63.8032, 0.29 ) }
    dend_54 { pt3dadd( 66.3379, 9.85579, 64.302, 0.52 ) }
    dend_54 { pt3dadd( 67.0818, 10.5015, 64.6918, 0.37 ) }
    dend_54 { pt3dadd( 67.6523, 10.9809, 64.9657, 0.22 ) }
    dend_54 { pt3dadd( 68.4189, 11.5982, 65.2659, 0.22 ) }
    dend_54 { pt3dadd( 68.9089, 11.9708, 65.452, 0.22 ) }
    dend_54 { pt3dadd( 69.3032, 12.238, 65.635, 0.29 ) }
    dend_54 { pt3dadd( 70.1469, 12.7142, 66.1035, 0.22 ) }
    dend_54 { pt3dadd( 70.5408, 12.902, 66.367, 0.44 ) }
    dend_54 { pt3dadd( 71.1627, 13.1722, 66.8239, 0.44 ) }
    dend_54 { pt3dadd( 71.8492, 13.4801, 67.3888, 0.22 ) }
    dend_54 { pt3dadd( 72.585, 13.8678, 68.0631, 0.44 ) }
    dend_54 { pt3dadd( 73.0648, 14.1782, 68.5564, 0.44 ) }
    dend_54 { pt3dadd( 73.8038, 14.7643, 69.3887, 0.22 ) }
    dend_54 { pt3dadd( 74.2922, 15.2184, 69.9691, 0.22 ) }
    dend_54 { pt3dadd( 74.8556, 15.7952, 70.6599, 0.22 ) }
    dend_54 { pt3dadd( 75.2668, 16.2351, 71.1571, 0.52 ) }
    dend_54 { pt3dadd( 75.7868, 16.8411, 71.7833, 1.03 ) }
    dend_54 { pt3dadd( 76.5673, 17.8168, 72.7685, 0.22 ) }
    dend_54 { pt3dadd( 77.1302, 18.5169, 73.4728, 0.59 ) }
    dend_54 { pt3dadd( 77.8323, 19.3031, 74.2862, 0.22 ) }
    dend_54 { pt3dadd( 78.4654, 19.9359, 74.9378, 0.52 ) }
    dend_54 { pt3dadd( 79.4587, 20.8256, 75.8307, 0.22 ) }
    dend_54 { pt3dadd( 80.1731, 21.396, 76.3948, 0.22 ) }
    dend_54 { pt3dadd( 80.8844, 21.9284, 76.9207, 0.66 ) }
    dend_54 { pt3dadd( 81.795, 22.5689, 77.5426, 0.15 ) }
    dend_54 { pt3dadd( 82.6941, 23.1711, 78.0938, 0.15 ) }
    dend_54 { pt3dadd( 83.558, 23.7173, 78.5628, 0.37 ) }
    dend_54 { pt3dadd( 84.8196, 24.4388, 79.1666, 0.07 ) }
    dend_54 { pt3dadd( 85.7664, 24.9751, 79.5766, 0.07 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 41/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -55.4341, 24.5342, 55.5866, 0.88 ) }
    dend_44 { pt3dadd( -56.5941, 24.7932, 57.0059, 0.88 ) }
    dend_44 { pt3dadd( -57.9894, 25.0166, 58.7199, 0.44 ) }
    dend_44 { pt3dadd( -59.1861, 25.1509, 60.1913, 1.03 ) }
    dend_44 { pt3dadd( -60.6867, 25.2513, 62.0539, 0.29 ) }
    dend_44 { pt3dadd( -61.4012, 25.2928, 62.895, 0.29 ) }
    dend_44 { pt3dadd( -61.9722, 25.3287, 63.5475, 0.29 ) }
    dend_44 { pt3dadd( -62.2478, 25.3288, 63.856, 0.29 ) }
    dend_44 { pt3dadd( -62.3756, 25.3159, 64.0004, 0.29 ) }
    dend_44 { pt3dadd( -62.9386, 25.2284, 64.671, 0.29 ) }
    dend_44 { pt3dadd( -63.8918, 25.1327, 65.849, 0.44 ) }
    dend_44 { pt3dadd( -64.8141, 25.192, 66.9987, 0.22 ) }
    dend_44 { pt3dadd( -65.8194, 25.3782, 68.3052, 0.81 ) }
    dend_44 { pt3dadd( -66.9441, 25.6276, 69.7693, 1.11 ) }
    dend_44 { pt3dadd( -67.8144, 25.8404, 70.8984, 0.29 ) }
    dend_44 { pt3dadd( -68.4557, 26.0116, 71.7622, 0.29 ) }
    dend_44 { pt3dadd( -69.3442, 26.2944, 73.0402, 0.81 ) }
    dend_44 { pt3dadd( -70.255, 26.6714, 74.4152, 0.22 ) }
    dend_44 { pt3dadd( -70.8126, 26.9848, 75.2795, 0.22 ) }
    dend_44 { pt3dadd( -71.2423, 27.2619, 75.962, 0.22 ) }
    dend_44 { pt3dadd( -71.8193, 27.6262, 76.9232, 0.22 ) }
    dend_44 { pt3dadd( -72.3737, 27.9603, 77.8515, 0.96 ) }
    dend_44 { pt3dadd( -73.12, 28.4335, 79.1621, 0.96 ) }
    dend_44 { pt3dadd( -73.4744, 28.6876, 79.8045, 0.22 ) }
    dend_44 { pt3dadd( -74.1574, 29.2212, 81.0853, 1.18 ) }
    dend_44 { pt3dadd( -74.5045, 29.5004, 81.7228, 1.33 ) }
    dend_44 { pt3dadd( -75.5492, 30.408, 83.5265, 0.07 ) }
    dend_44 { pt3dadd( -76.0888, 30.9063, 84.4086, 0.44 ) }
    dend_44 { pt3dadd( -76.7652, 31.5951, 85.4395, 0.22 ) }
    dend_44 { pt3dadd( -77.2435, 32.1351, 86.1782, 0.88 ) }
    dend_44 { pt3dadd( -77.5066, 32.4948, 86.581, 1.18 ) }
    dend_44 { pt3dadd( -78.1881, 33.5872, 87.5736, 0.22 ) }
    dend_44 { pt3dadd( -78.5341, 34.2279, 88.0467, 0.66 ) }
    dend_44 { pt3dadd( -79.0436, 35.2372, 88.7306, 0.15 ) }
    dend_44 { pt3dadd( -79.2495, 35.6806, 89.0253, 0.15 ) }
    dend_44 { pt3dadd( -79.5861, 36.4262, 89.593, 0.59 ) }
    dend_44 { pt3dadd( -79.8666, 37.045, 90.1531, 0.22 ) }
    dend_44 { pt3dadd( -80.2717, 37.9078, 91.0807, 0.88 ) }
    dend_44 { pt3dadd( -80.7927, 38.9835, 92.4109, 0.15 ) }
    dend_44 { pt3dadd( -81.0942, 39.5354, 93.1936, 0.88 ) }
    dend_44 { pt3dadd( -81.73, 40.5546, 94.82, 0.07 ) }
    dend_44 { pt3dadd( -82.1046, 41.0976, 95.8028, 0.37 ) }
    dend_44 { pt3dadd( -82.6058, 41.785, 97.1678, 0.15 ) }
    dend_44 { pt3dadd( -82.9735, 42.262, 98.1622, 0.96 ) }
    dend_44 { pt3dadd( -83.7296, 43.1475, 100.123, 0.07 ) }
    dend_44 { pt3dadd( -84.1278, 43.5957, 101.076, 0.29 ) }
    dend_44 { pt3dadd( -84.8286, 44.3898, 102.682, 0.07 ) }
    dend_44 { pt3dadd( -85.2705, 44.8878, 103.628, 0.07 ) }
    dend_44 { pt3dadd( -85.4824, 45.1134, 104.048, 0.74 ) }
    dend_44 { pt3dadd( -86.2917, 45.9038, 105.483, 1.18 ) }
    dend_44 { pt3dadd( -87.7045, 47.0558, 107.545, 0.15 ) }
    dend_44 { pt3dadd( -88.2821, 47.4529, 108.249, 0.44 ) }
    dend_44 { pt3dadd( -88.7108, 47.6958, 108.68, 0.44 ) }
    dend_44 { pt3dadd( -89.7362, 48.2312, 109.627, 0.07 ) }
    dend_44 { pt3dadd( -90.4956, 48.5903, 110.276, 0.66 ) }
    dend_44 { pt3dadd( -92.0646, 49.1984, 111.387, 0.07 ) }
    dend_44 { pt3dadd( -92.3904, 49.2722, 111.573, 0.07 ) }
    dend_44 { pt3dadd( -92.8468, 49.3595, 111.803, 0.66 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 99/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -55.4341, 24.5342, 55.5866, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_43 { pt3dadd( -58.0752, 24.9525, 55.038, 0.52 ) }
    dend_43 { pt3dadd( -58.9231, 25.0853, 55.0809, 1.03 ) }
    dend_43 { pt3dadd( -59.9398, 25.2824, 55.3527, 0.37 ) }
    dend_43 { pt3dadd( -60.5089, 25.4051, 55.5543, 0.37 ) }
    dend_43 { pt3dadd( -61.4465, 25.5898, 55.9157, 0.88 ) }
    dend_43 { pt3dadd( -62.4618, 25.7836, 56.3163, 0.37 ) }
    dend_43 { pt3dadd( -63.4271, 25.9629, 56.8508, 0.37 ) }
    dend_43 { pt3dadd( -64.3745, 26.1534, 57.3945, 0.37 ) }
    dend_43 { pt3dadd( -64.8837, 26.2671, 57.6967, 0.29 ) }
    dend_43 { pt3dadd( -65.7469, 26.4764, 58.1924, 0.22 ) }
    dend_43 { pt3dadd( -66.1097, 26.5721, 58.3926, 0.52 ) }
    dend_43 { pt3dadd( -66.7726, 26.7578, 58.7523, 1.18 ) }
    dend_43 { pt3dadd( -68.0214, 27.0836, 59.4202, 0.22 ) }
    dend_43 { pt3dadd( -68.4545, 27.1815, 59.6607, 0.22 ) }
    dend_43 { pt3dadd( -69.4197, 27.3719, 60.2221, 0.44 ) }
    dend_43 { pt3dadd( -70.0563, 27.4686, 60.6007, 0.59 ) }
    dend_43 { pt3dadd( -70.8711, 27.5194, 61.0773, 0.22 ) }
    dend_43 { pt3dadd( -71.6692, 27.5029, 61.551, 0.74 ) }
    dend_43 { pt3dadd( -72.4602, 27.4264, 62.0261, 0.96 ) }
    dend_43 { pt3dadd( -73.1909, 27.3279, 62.4373, 0.52 ) }
    dend_43 { pt3dadd( -74.0083, 27.1828, 62.8524, 0.29 ) }
    dend_43 { pt3dadd( -74.8516, 27.0151, 63.2685, 0.59 ) }
    dend_43 { pt3dadd( -75.8449, 26.8069, 63.7811, 0.22 ) }
    dend_43 { pt3dadd( -76.3642, 26.7163, 64.0606, 0.22 ) }
    dend_43 { pt3dadd( -77.1159, 26.6146, 64.4845, 0.96 ) }
    dend_43 { pt3dadd( -78.0341, 26.5198, 65.0096, 0.22 ) }
    dend_43 { pt3dadd( -78.875, 26.4571, 65.4672, 0.37 ) }
    dend_43 { pt3dadd( -79.6641, 26.4127, 65.8556, 0.22 ) }
    dend_43 { pt3dadd( -80.308, 26.3774, 66.1258, 0.96 ) }
    dend_43 { pt3dadd( -81.2952, 26.345, 66.4483, 0.15 ) }
    dend_43 { pt3dadd( -81.9564, 26.3395, 66.5914, 0.15 ) }
    dend_43 { pt3dadd( -82.6979, 26.3571, 66.6395, 0.15 ) }
    dend_43 { pt3dadd( -83.3678, 26.3822, 66.5856, 0.74 ) }
    dend_43 { pt3dadd( -84.3006, 26.4084, 66.3907, 1.18 ) }
    dend_43 { pt3dadd( -85.4966, 26.408, 66.0259, 0.22 ) }
    dend_43 { pt3dadd( -86.4593, 26.3613, 65.6489, 0.44 ) }
    dend_43 { pt3dadd( -87.2869, 26.2762, 65.2856, 0.15 ) }
    dend_43 { pt3dadd( -87.651, 26.2166, 65.1078, 0.44 ) }
    dend_43 { pt3dadd( -88.9639, 25.9184, 64.4462, 0.15 ) }
    dend_43 { pt3dadd( -89.5957, 25.7375, 64.1173, 0.29 ) }
    dend_43 { pt3dadd( -90.3412, 25.4584, 63.7565, 0.15 ) }
    dend_43 { pt3dadd( -90.7488, 25.2748, 63.5741, 0.37 ) }
    dend_43 { pt3dadd( -91.3598, 24.9505, 63.2925, 0.15 ) }
    dend_43 { pt3dadd( -91.8474, 24.6608, 63.0612, 0.59 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 44/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -9.70161, -24.8244, 1.53153, 0.59 ) }
    dend_32 { pt3dadd( -9.77829, -25.4126, 1.41632, 0.59 ) }
    dend_32 { pt3dadd( -9.84994, -25.9005, 1.27342, 0.59 ) }
    dend_32 { pt3dadd( -9.92808, -26.2881, 1.11647, 0.52 ) }
    dend_32 { pt3dadd( -10.0069, -26.5186, 0.96793, 0.52 ) }
    dend_32 { pt3dadd( -10.1116, -26.7269, 0.80918, 0.52 ) }
    dend_32 { pt3dadd( -10.2813, -27.0112, 0.606616, 0.44 ) }
    dend_32 { pt3dadd( -10.4898, -27.3283, 0.400245, 0.81 ) }
    dend_32 { pt3dadd( -10.6759, -27.5945, 0.241559, 0.66 ) }
    dend_32 { pt3dadd( -11.0633, -28.1545, -0.068126, 0.59 ) }
    dend_32 { pt3dadd( -11.3242, -28.5623, -0.281529, 0.52 ) }
    dend_32 { pt3dadd( -11.7028, -29.2415, -0.608716, 0.44 ) }
    dend_32 { pt3dadd( -11.9219, -29.7034, -0.81604, 0.52 ) }
    dend_32 { pt3dadd( -12.1615, -30.2573, -1.05312, 0.81 ) }
    dend_32 { pt3dadd( -12.2619, -30.4953, -1.15208, 0.59 ) }
    dend_32 { pt3dadd( -12.4144, -30.8519, -1.29206, 0.74 ) }
    dend_32 { pt3dadd( -12.5923, -31.2053, -1.45624, 0.96 ) }
    dend_32 { pt3dadd( -12.8269, -31.5155, -1.63819, 0.96 ) }
    dend_32 { pt3dadd( -13.1396, -31.8364, -1.8576, 0.66 ) }
    dend_32 { pt3dadd( -13.5533, -32.1494, -2.06739, 0.52 ) }
    dend_32 { pt3dadd( -13.8645, -32.3392, -2.18706, 0.52 ) }
    dend_32 { pt3dadd( -14.1379, -32.4733, -2.24988, 0.52 ) }
    dend_32 { pt3dadd( -14.5668, -32.6487, -2.29156, 0.52 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 67/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -9.70161, -24.8244, 1.53153, 0.29 ) }
    dend_27 { pt3dadd( -9.27585, -26.0776, -2.3926, 0.29 ) }
    dend_27 { pt3dadd( -9.39023, -26.6935, -4.0312, 0.29 ) }
    dend_27 { pt3dadd( -9.50556, -27.0603, -4.84721, 0.52 ) }
    dend_27 { pt3dadd( -9.64364, -27.5484, -5.84804, 0.52 ) }
    dend_27 { pt3dadd( -9.77748, -28.1396, -7.03494, 0.88 ) }
    dend_27 { pt3dadd( -9.94478, -28.9494, -8.72696, 0.59 ) }
    dend_27 { pt3dadd( -10.2672, -29.6191, -10.0204, 0.37 ) }
    dend_27 { pt3dadd( -10.7205, -30.261, -11.393, 0.52 ) }
    dend_27 { pt3dadd( -11.2269, -30.8015, -12.6703, 0.37 ) }
    dend_27 { pt3dadd( -11.4978, -31.0909, -13.3151, 0.37 ) }
    dend_27 { pt3dadd( -11.761, -31.5068, -14.0182, 0.37 ) }
    dend_27 { pt3dadd( -12.0371, -32.1577, -14.679, 0.37 ) }
    dend_27 { pt3dadd( -12.4759, -33.3267, -15.2628, 0.52 ) }
    dend_27 { pt3dadd( -12.9241, -34.5643, -15.6536, 0.66 ) }
    dend_27 { pt3dadd( -13.2384, -35.4597, -15.872, 0.44 ) }
    dend_27 { pt3dadd( -13.8944, -37.4185, -16.3001, 0.29 ) }
    dend_27 { pt3dadd( -14.1158, -38.2481, -16.4659, 0.29 ) }
    dend_27 { pt3dadd( -14.3504, -39.6037, -16.718, 0.44 ) }
    dend_27 { pt3dadd( -14.4705, -40.8989, -16.943, 0.59 ) }
    dend_27 { pt3dadd( -14.5282, -42.1013, -17.1566, 0.52 ) }
    dend_27 { pt3dadd( -14.57, -43.0796, -17.3503, 0.81 ) }
    dend_27 { pt3dadd( -14.6283, -44.4984, -17.6756, 0.29 ) }
    dend_27 { pt3dadd( -14.643, -45.7602, -17.9633, 0.29 ) }
    dend_27 { pt3dadd( -14.6252, -46.3715, -18.104, 0.29 ) }
    dend_27 { pt3dadd( -14.6096, -46.8243, -18.2349, 0.29 ) }
    dend_27 { pt3dadd( -14.5858, -47.9771, -18.622, 0.29 ) }
    dend_27 { pt3dadd( -14.5913, -49.1013, -19.0575, 0.29 ) }
    dend_27 { pt3dadd( -14.6393, -50.0938, -19.5327, 0.52 ) }
    dend_27 { pt3dadd( -14.7213, -51.1596, -20.1729, 0.29 ) }
    dend_27 { pt3dadd( -14.8958, -52.8389, -21.3068, 0.29 ) }
    dend_27 { pt3dadd( -14.984, -53.5057, -21.7758, 0.52 ) }
    dend_27 { pt3dadd( -15.2167, -54.8403, -22.7174, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_27 { pt3dadd( -15.4427, -56.0526, -23.6148, 0.22 ) }
    dend_27 { pt3dadd( -15.6985, -57.3379, -24.6142, 0.22 ) }
    dend_27 { pt3dadd( -15.9056, -58.2713, -25.3506, 0.07 ) }
    dend_27 { pt3dadd( -16.187, -59.4639, -26.2955, 0.07 ) }
    dend_27 { pt3dadd( -16.5145, -60.6187, -27.2248, 0.07 ) }
    dend_27 { pt3dadd( -19.0221, -69.6542, -33.9584, 0.07 ) }
    // Section: dend_25, id: dend_25, parent: dend_19 (entry count 6/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.429701, -32.7789, -8.40505, 0.52 ) }
    dend_25 { pt3dadd( 0.794443, -33.3787, -8.03572, 0.52 ) }
    dend_25 { pt3dadd( 1.81486, -34.1238, -7.46381, 0.37 ) }
    dend_25 { pt3dadd( 2.38493, -34.7605, -7.00713, 0.59 ) }
    dend_25 { pt3dadd( 2.85114, -35.4667, -6.60843, 0.66 ) }
    dend_25 { pt3dadd( 3.33255, -36.3439, -6.32802, 0.52 ) }
    dend_25 { pt3dadd( 4.00229, -37.6365, -6.22314, 0.66 ) }
    dend_25 { pt3dadd( 4.13498, -37.9598, -6.25873, 0.81 ) }
    dend_25 { pt3dadd( 4.46657, -38.8385, -6.52831, 0.59 ) }
    dend_25 { pt3dadd( 4.80942, -39.712, -6.94578, 0.66 ) }
    dend_25 { pt3dadd( 5.40988, -41.1474, -7.7776, 0.52 ) }
    dend_25 { pt3dadd( 6.00464, -42.4785, -8.59467, 0.88 ) }
    dend_25 { pt3dadd( 6.558, -43.681, -9.30741, 1.03 ) }
    dend_25 { pt3dadd( 6.98243, -44.6368, -9.79954, 0.81 ) }
    dend_25 { pt3dadd( 7.53135, -46.0, -10.3777, 0.59 ) }
    dend_25 { pt3dadd( 7.7628, -46.676, -10.5891, 0.52 ) }
    dend_25 { pt3dadd( 8.11866, -47.9355, -10.8362, 0.59 ) }
    dend_25 { pt3dadd( 8.50167, -49.3509, -11.0042, 0.59 ) }
    dend_25 { pt3dadd( 8.79479, -50.3463, -11.0927, 0.59 ) }
    dend_25 { pt3dadd( 9.19951, -51.4885, -11.188, 0.59 ) }
    dend_25 { pt3dadd( 9.64146, -52.4456, -11.3092, 0.52 ) }
    dend_25 { pt3dadd( 10.3464, -53.6321, -11.5801, 0.96 ) }
    dend_25 { pt3dadd( 11.141, -54.7586, -11.9747, 0.66 ) }
    dend_25 { pt3dadd( 11.6601, -55.4421, -12.2389, 0.44 ) }
    dend_25 { pt3dadd( 12.1478, -56.1085, -12.4835, 0.44 ) }
    dend_25 { pt3dadd( 12.6937, -56.9468, -12.7186, 0.59 ) }
    dend_25 { pt3dadd( 12.9884, -57.4916, -12.8032, 0.52 ) }
    dend_25 { pt3dadd( 13.5236, -58.7006, -12.8644, 0.44 ) }
    dend_25 { pt3dadd( 14.0616, -60.1303, -12.849, 0.52 ) }
    dend_25 { pt3dadd( 14.4023, -61.0557, -12.8117, 0.52 ) }
    dend_25 { pt3dadd( 14.8798, -62.3488, -12.766, 0.44 ) }
    dend_25 { pt3dadd( 15.2457, -63.3887, -12.7602, 0.52 ) }
    dend_25 { pt3dadd( 15.5257, -64.1857, -12.8116, 0.44 ) }
    dend_25 { pt3dadd( 15.7731, -64.9463, -12.905, 0.44 ) }
    dend_25 { pt3dadd( 16.0335, -65.9121, -13.0606, 0.52 ) }
    dend_25 { pt3dadd( 16.2354, -66.8269, -13.1732, 0.44 ) }
    dend_25 { pt3dadd( 16.4841, -68.2122, -13.302, 0.59 ) }
    dend_25 { pt3dadd( 16.6867, -69.422, -13.2962, 0.66 ) }
    dend_25 { pt3dadd( 16.9378, -70.8325, -13.126, 0.44 ) }
    dend_25 { pt3dadd( 17.1159, -71.9146, -12.8937, 0.44 ) }
    dend_25 { pt3dadd( 17.3361, -73.2176, -12.5657, 0.52 ) }
    dend_25 { pt3dadd( 17.5323, -74.1348, -12.306, 0.44 ) }
    dend_25 { pt3dadd( 17.937, -75.4815, -11.9236, 0.44 ) }
    dend_25 { pt3dadd( 18.3289, -76.5626, -11.6218, 0.52 ) }
    dend_25 { pt3dadd( 18.7703, -77.7718, -11.3468, 0.37 ) }
    dend_25 { pt3dadd( 19.0637, -78.8973, -11.1373, 0.44 ) }
    dend_25 { pt3dadd( 19.1491, -79.4875, -11.0308, 0.66 ) }
    dend_25 { pt3dadd( 19.1987, -80.2473, -10.8515, 0.66 ) }
    dend_25 { pt3dadd( 19.2754, -81.5183, -10.4463, 0.44 ) }
    dend_25 { pt3dadd( 19.368, -82.5327, -9.9831, 0.59 ) }
    dend_25 { pt3dadd( 19.5096, -83.7409, -9.31085, 0.66 ) }
    dend_25 { pt3dadd( 19.582, -84.6265, -8.78214, 0.74 ) }
    dend_25 { pt3dadd( 19.6314, -85.8221, -8.11779, 0.59 ) }
    dend_25 { pt3dadd( 19.659, -87.0264, -7.51814, 0.74 ) }
    dend_25 { pt3dadd( 19.6707, -87.8285, -7.20439, 0.66 ) }
    dend_25 { pt3dadd( 19.6915, -88.9358, -6.86413, 0.74 ) }
    dend_25 { pt3dadd( 19.7271, -90.2961, -6.56736, 0.96 ) }
    dend_25 { pt3dadd( 19.77, -91.8247, -6.36388, 0.66 ) }
    dend_25 { pt3dadd( 19.8177, -93.1713, -6.29851, 0.66 ) }
    dend_25 { pt3dadd( 19.8829, -94.786, -6.33608, 0.52 ) }
    dend_25 { pt3dadd( 19.9886, -96.3371, -6.46185, 0.59 ) }
    dend_25 { pt3dadd( 20.2358, -98.5428, -6.75736, 0.44 ) }
    dend_25 { pt3dadd( 20.3978, -99.459, -6.93169, 0.52 ) }
    dend_25 { pt3dadd( 20.5864, -100.283, -7.13796, 0.81 ) }
    dend_25 { pt3dadd( 20.7525, -100.918, -7.345, 0.96 ) }
    dend_25 { pt3dadd( 21.043, -102.037, -7.78037, 0.52 ) }
    dend_25 { pt3dadd( 21.156, -102.647, -8.04979, 0.52 ) }
    dend_25 { pt3dadd( 21.2442, -103.654, -8.49206, 0.81 ) }
    dend_25 { pt3dadd( 21.2713, -104.608, -8.86692, 0.59 ) }
    dend_25 { pt3dadd( 21.3115, -105.923, -9.31767, 0.59 ) }
    dend_25 { pt3dadd( 21.3817, -107.294, -9.74227, 0.81 ) }
    dend_25 { pt3dadd( 21.4832, -108.636, -10.1161, 0.44 ) }
    dend_25 { pt3dadd( 21.5873, -109.787, -10.4048, 0.52 ) }
    dend_25 { pt3dadd( 21.7137, -111.068, -10.7221, 0.44 ) }
    dend_25 { pt3dadd( 21.8918, -112.603, -11.1241, 0.37 ) }
    dend_25 { pt3dadd( 21.9929, -113.311, -11.3386, 0.52 ) }
    dend_25 { pt3dadd( 22.1934, -114.534, -11.797, 0.88 ) }
    dend_25 { pt3dadd( 22.3939, -115.855, -12.3777, 0.66 ) }
    dend_25 { pt3dadd( 22.5259, -117.031, -12.9259, 1.11 ) }
    dend_25 { pt3dadd( 22.605, -118.227, -13.4566, 0.59 ) }
    dend_25 { pt3dadd( 22.6408, -119.228, -13.8882, 0.52 ) }
    dend_25 { pt3dadd( 22.663, -120.15, -14.2679, 0.59 ) }
    dend_25 { pt3dadd( 22.7344, -121.692, -14.9656, 0.44 ) }
    dend_25 { pt3dadd( 22.8321, -123.027, -15.5479, 0.44 ) }
    dend_25 { pt3dadd( 22.9927, -124.71, -16.2189, 0.29 ) }
    dend_25 { pt3dadd( 23.0818, -125.533, -16.5146, 0.22 ) }
    dend_25 { pt3dadd( 23.1868, -126.5, -16.8186, 0.29 ) }
    dend_25 { pt3dadd( 23.3872, -128.544, -17.4447, 0.29 ) }
    dend_25 { pt3dadd( 24.6355, -137.944, -16.8674, 0.29 ) }
    dend_25 { pt3dadd( 25.4714, -147.115, -14.5725, 0.29 ) }
    dend_25 { pt3dadd( 26.5208, -155.982, -11.3975, 0.29 ) }
    dend_25 { pt3dadd( 26.6724, -164.984, -8.41599, 0.29 ) }
    dend_25 { pt3dadd( 25.9594, -174.325, -6.82499, 0.29 ) }
    dend_25 { pt3dadd( 24.416, -183.703, -7.01829, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_25 { pt3dadd( 24.3435, -193.203, -6.64156, 0.29 ) }
    dend_25 { pt3dadd( 23.024, -202.575, -5.76158, 0.29 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.429701, -32.7789, -8.40505, 1.4 ) }
    dend_20 { pt3dadd( -1.33948, -33.5358, -9.04968, 1.4 ) }
    dend_20 { pt3dadd( -2.72678, -34.6899, -10.0326, 1.03 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 5/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 6.17752, 48.5727, -10.1041, 0.22 ) }
    dend_13 { pt3dadd( 6.04695, 49.7017, -10.2629, 0.22 ) }
    dend_13 { pt3dadd( 5.9336, 50.5378, -10.4334, 0.22 ) }
    dend_13 { pt3dadd( 5.83617, 51.4138, -10.6259, 0.22 ) }
    dend_13 { pt3dadd( 5.72057, 53.2578, -11.0655, 0.37 ) }
    dend_13 { pt3dadd( 5.65828, 54.4542, -11.4121, 0.44 ) }
    dend_13 { pt3dadd( 5.5676, 55.9143, -11.8765, 0.37 ) }
    dend_13 { pt3dadd( 5.53424, 56.7078, -12.166, 0.37 ) }
    dend_13 { pt3dadd( 5.51938, 57.7174, -12.5345, 0.37 ) }
    dend_13 { pt3dadd( 5.50552, 58.9768, -13.0171, 0.44 ) }
    dend_13 { pt3dadd( 5.53121, 61.0178, -13.7807, 0.37 ) }
    dend_13 { pt3dadd( 5.61894, 62.7539, -14.4162, 0.22 ) }
    dend_13 { pt3dadd( 5.71494, 63.8504, -14.8047, 0.22 ) }
    dend_13 { pt3dadd( 5.81033, 65.2967, -15.3019, 0.22 ) }
    dend_13 { pt3dadd( 7.75417, 76.1678, -18.6404, 0.22 ) }
    dend_13 { pt3dadd( 9.66245, 87.2092, -21.4154, 0.22 ) }
    dend_13 { pt3dadd( 10.3352, 98.7238, -22.238, 0.22 ) }
    dend_13 { pt3dadd( 11.9128, 110.171, -22.1066, 0.22 ) }
    dend_13 { pt3dadd( 11.9712, 121.709, -21.367, 0.22 ) }
    dend_13 { pt3dadd( 12.5516, 133.229, -22.1896, 0.22 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 6.17752, 48.5727, -10.1041, 0.29 ) }
    dend_12 { pt3dadd( 6.7176, 49.1015, -10.5579, 0.29 ) }
    dend_12 { pt3dadd( 6.97174, 49.4097, -10.7638, 0.29 ) }
    dend_12 { pt3dadd( 7.24411, 49.826, -10.9794, 0.29 ) }
    dend_12 { pt3dadd( 7.47485, 50.2315, -11.1657, 0.52 ) }
    dend_12 { pt3dadd( 7.68862, 50.6264, -11.3455, 0.81 ) }
    dend_12 { pt3dadd( 8.11069, 51.4411, -11.7363, 0.44 ) }
    dend_12 { pt3dadd( 8.38304, 52.0189, -12.0039, 0.66 ) }
    dend_12 { pt3dadd( 8.69378, 52.6907, -12.3372, 0.44 ) }
    dend_12 { pt3dadd( 8.98774, 53.2889, -12.6478, 0.29 ) }
    dend_12 { pt3dadd( 9.27022, 53.7993, -12.9421, 0.52 ) }
    dend_12 { pt3dadd( 9.68438, 54.4504, -13.3824, 0.44 ) }
    dend_12 { pt3dadd( 10.1219, 55.0479, -13.8784, 0.29 ) }
    dend_12 { pt3dadd( 10.5549, 55.5967, -14.4137, 0.29 ) }
    dend_12 { pt3dadd( 10.8692, 55.9565, -14.8315, 0.37 ) }
    dend_12 { pt3dadd( 11.162, 56.266, -15.2407, 0.22 ) }
    dend_12 { pt3dadd( 11.5136, 56.6162, -15.754, 0.37 ) }
    dend_12 { pt3dadd( 11.8349, 56.8996, -16.2274, 0.66 ) }
    dend_12 { pt3dadd( 12.1658, 57.1871, -16.7517, 0.37 ) }
    dend_12 { pt3dadd( 12.7009, 57.6891, -17.7117, 0.22 ) }
    dend_12 { pt3dadd( 12.8721, 57.8594, -18.0529, 0.22 ) }
    dend_12 { pt3dadd( 13.1748, 58.1577, -18.6501, 0.37 ) }
    dend_12 { pt3dadd( 13.3831, 58.3262, -19.0007, 0.52 ) }
    dend_12 { pt3dadd( 17.906, 62.778, -22.5106, 0.52 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 49/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 16.7533, 14.8764, 0.63567, 0.81 ) }
    dend_8 { pt3dadd( 16.5469, 15.5568, 0.436382, 0.81 ) }
    dend_8 { pt3dadd( 16.3702, 16.3205, 0.252526, 0.52 ) }
    dend_8 { pt3dadd( 16.2268, 17.3676, 0.00803625, 0.96 ) }
    dend_8 { pt3dadd( 16.1448, 18.3537, -0.238678, 0.66 ) }
    dend_8 { pt3dadd( 16.0719, 19.2836, -0.496034, 1.11 ) }
    dend_8 { pt3dadd( 15.9737, 20.4083, -0.826841, 0.52 ) }
    dend_8 { pt3dadd( 15.9343, 21.2178, -1.08289, 0.74 ) }
    dend_8 { pt3dadd( 15.9274, 22.1548, -1.39193, 0.44 ) }
    dend_8 { pt3dadd( 15.935, 22.619, -1.56577, 0.44 ) }
    dend_8 { pt3dadd( 15.9653, 23.398, -1.91301, 0.44 ) }
    dend_8 { pt3dadd( 15.9929, 24.1615, -2.28986, 0.37 ) }
    dend_8 { pt3dadd( 16.0024, 24.8976, -2.67158, 0.44 ) }
    dend_8 { pt3dadd( 15.9788, 25.855, -3.15624, 0.66 ) }
    dend_8 { pt3dadd( 15.9458, 26.629, -3.48316, 0.59 ) }
    dend_8 { pt3dadd( 15.9478, 27.4393, -3.77733, 0.44 ) }
    dend_8 { pt3dadd( 15.9804, 27.8388, -3.91087, 0.44 ) }
    dend_8 { pt3dadd( 16.1144, 28.7748, -4.21666, 0.59 ) }
    dend_8 { pt3dadd( 16.2379, 29.3263, -4.38046, 0.52 ) }
    dend_8 { pt3dadd( 16.5392, 30.2627, -4.64402, 0.59 ) }
    dend_8 { pt3dadd( 16.9404, 31.1915, -4.90379, 0.52 ) }
    dend_8 { pt3dadd( 17.3676, 32.006, -5.14955, 0.44 ) }
    dend_8 { pt3dadd( 17.6208, 32.4293, -5.30982, 0.44 ) }
    dend_8 { pt3dadd( 18.2852, 33.4269, -5.78593, 0.44 ) }
    dend_8 { pt3dadd( 18.6908, 34.013, -6.13791, 0.44 ) }
    dend_8 { pt3dadd( 19.1346, 34.6462, -6.60205, 0.52 ) }
    dend_8 { pt3dadd( 19.4091, 35.0372, -6.8955, 0.66 ) }
    dend_8 { pt3dadd( 19.9076, 35.7478, -7.45385, 0.66 ) }
    dend_8 { pt3dadd( 20.2328, 36.2112, -7.8498, 0.59 ) }
    dend_8 { pt3dadd( 20.5738, 36.6999, -8.34184, 0.44 ) }
    dend_8 { pt3dadd( 20.8534, 37.089, -8.77059, 0.29 ) }
    dend_8 { pt3dadd( 21.3491, 37.7159, -9.51923, 0.29 ) }
    dend_8 { pt3dadd( 21.7297, 38.1658, -10.0842, 0.29 ) }
    dend_8 { pt3dadd( 22.1006, 38.6193, -10.6193, 0.29 ) }
    dend_8 { pt3dadd( 22.4927, 39.1789, -11.2538, 0.59 ) }
    dend_8 { pt3dadd( 22.753, 39.657, -11.7975, 0.81 ) }
    dend_8 { pt3dadd( 23.0364, 40.3088, -12.5973, 0.44 ) }
    dend_8 { pt3dadd( 23.1728, 40.6799, -13.0917, 0.44 ) }
    dend_8 { pt3dadd( 23.3184, 41.1159, -13.6969, 0.29 ) }
    dend_8 { pt3dadd( 23.449, 41.5182, -14.3082, 0.37 ) }
    dend_8 { pt3dadd( 23.6244, 42.1341, -15.2917, 0.29 ) }
    dend_8 { pt3dadd( 23.7278, 42.6088, -16.0436, 0.29 ) }
    dend_8 { pt3dadd( 23.7802, 42.9372, -16.5553, 0.29 ) }
    dend_8 { pt3dadd( 23.8148, 43.1191, -16.827, 0.29 ) }
    dend_8 { pt3dadd( 23.9132, 43.5428, -17.3354, 0.37 ) }
    dend_8 { pt3dadd( 24.0489, 44.1277, -17.8454, 0.37 ) }
    dend_8 { pt3dadd( 24.143, 44.7637, -18.256, 0.37 ) }
    dend_8 { pt3dadd( 24.1707, 45.082, -18.4342, 0.66 ) }
    dend_8 { pt3dadd( 24.2074, 45.4204, -18.6228, 1.03 ) }
    dend_8 { pt3dadd( 24.4118, 46.6344, -19.3034, 0.29 ) }
    dend_8 { pt3dadd( 24.5809, 47.3079, -19.7046, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_8 { pt3dadd( 24.7596, 47.8363, -20.0733, 0.29 ) }
    dend_8 { pt3dadd( 24.904, 48.1792, -20.3519, 0.29 ) }
    dend_8 { pt3dadd( 25.2305, 48.7976, -20.8998, 0.29 ) }
    dend_8 { pt3dadd( 25.476, 49.1865, -21.2728, 0.29 ) }
    dend_8 { pt3dadd( 25.8214, 49.6676, -21.751, 0.81 ) }
    dend_8 { pt3dadd( 26.5756, 50.6133, -22.6583, 0.22 ) }
    dend_8 { pt3dadd( 26.9132, 50.9946, -23.0113, 0.22 ) }
    dend_8 { pt3dadd( 27.3193, 51.4434, -23.4282, 0.22 ) }
    dend_8 { pt3dadd( 27.709, 51.8866, -23.8369, 0.15 ) }
    dend_8 { pt3dadd( 27.9682, 52.1771, -24.1118, 0.15 ) }
    dend_8 { pt3dadd( 28.3921, 52.6244, -24.5206, 0.15 ) }
    dend_8 { pt3dadd( 28.8128, 53.0087, -24.84, 0.29 ) }
    dend_8 { pt3dadd( 32.0007, 59.5456, -27.9617, 0.29 ) }
    dend_8 { pt3dadd( 35.595, 64.9902, -32.3773, 0.29 ) }
    dend_8 { pt3dadd( 38.7945, 71.0092, -36.3658, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 15/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 16.7533, 14.8764, 0.63567, 0.66 ) }
    dend_7 { pt3dadd( 17.336, 15.5197, 1.16286, 0.66 ) }
    dend_7 { pt3dadd( 18.2795, 16.3292, 1.73205, 0.88 ) }
    dend_7 { pt3dadd( 19.0738, 16.6792, 1.69021, 0.52 ) }
    dend_7 { pt3dadd( 19.5332, 16.7947, 1.44211, 0.52 ) }
    dend_7 { pt3dadd( 19.9931, 16.8927, 1.06332, 0.52 ) }
    dend_7 { pt3dadd( 20.8427, 17.0336, 0.272112, 0.52 ) }
    dend_7 { pt3dadd( 21.4092, 17.0641, -0.378228, 0.52 ) }
    dend_7 { pt3dadd( 22.1934, 17.065, -1.34599, 0.59 ) }
    dend_7 { pt3dadd( 22.9746, 17.0767, -2.34147, 0.74 ) }
    dend_7 { pt3dadd( 24.0357, 17.1331, -3.70718, 0.96 ) }
    dend_7 { pt3dadd( 24.6069, 17.1891, -4.38738, 0.74 ) }
    dend_7 { pt3dadd( 25.4223, 17.2957, -5.1851, 0.59 ) }
    dend_7 { pt3dadd( 25.8955, 17.3579, -5.44121, 0.37 ) }
    dend_7 { pt3dadd( 26.7507, 17.485, -5.45861, 0.37 ) }
    dend_7 { pt3dadd( 27.4182, 17.6101, -5.23397, 0.37 ) }
    dend_7 { pt3dadd( 29.5968, 18.0039, -4.05367, 0.44 ) }
    dend_7 { pt3dadd( 30.457, 18.1765, -3.4786, 0.88 ) }
    dend_7 { pt3dadd( 31.7911, 18.5153, -2.45337, 0.52 ) }
    dend_7 { pt3dadd( 32.6672, 18.7917, -1.70516, 0.52 ) }
    dend_7 { pt3dadd( 33.7548, 19.1957, -0.7364, 0.81 ) }
    dend_7 { pt3dadd( 34.7481, 19.6488, 0.0781613, 0.52 ) }
    dend_7 { pt3dadd( 35.6882, 20.1698, 0.677719, 0.52 ) }
    dend_7 { pt3dadd( 36.6101, 20.769, 1.17251, 0.74 ) }
    dend_7 { pt3dadd( 37.5392, 21.4922, 1.47672, 0.66 ) }
    dend_7 { pt3dadd( 38.1361, 21.9974, 1.41029, 0.52 ) }
    dend_7 { pt3dadd( 39.3366, 23.0775, 0.718971, 0.52 ) }
    dend_7 { pt3dadd( 40.0235, 23.6975, 0.0320833, 0.52 ) }
    dend_7 { pt3dadd( 40.4621, 24.0254, -0.606894, 0.52 ) }
    dend_7 { pt3dadd( 41.0164, 24.3104, -1.63523, 0.44 ) }
    dend_7 { pt3dadd( 41.4705, 24.4438, -2.64416, 0.44 ) }
    dend_7 { pt3dadd( 41.7625, 24.4899, -3.38524, 0.44 ) }
    dend_7 { pt3dadd( 42.1182, 24.5081, -4.33246, 0.44 ) }
    dend_7 { pt3dadd( 42.7359, 24.5071, -5.72434, 0.66 ) }
    dend_7 { pt3dadd( 43.2812, 24.5243, -6.7376, 0.88 ) }
    dend_7 { pt3dadd( 43.9501, 24.5702, -7.71633, 0.59 ) }
    dend_7 { pt3dadd( 45.284, 24.7618, -9.14668, 0.96 ) }
    dend_7 { pt3dadd( 45.9667, 24.9148, -9.65717, 1.11 ) }
    dend_7 { pt3dadd( 47.3573, 25.2977, -10.3421, 0.29 ) }
    dend_7 { pt3dadd( 48.445, 25.6116, -10.6987, 0.66 ) }
    dend_7 { pt3dadd( 49.3069, 25.7847, -10.9138, 0.66 ) }
    dend_7 { pt3dadd( 50.376, 25.8669, -11.1495, 0.52 ) }
    dend_7 { pt3dadd( 51.3576, 25.8162, -11.3693, 0.52 ) }
    dend_7 { pt3dadd( 52.0985, 25.7315, -11.5633, 0.59 ) }
    dend_7 { pt3dadd( 53.4308, 25.5924, -11.9822, 0.74 ) }
    dend_7 { pt3dadd( 55.4886, 25.4675, -12.6849, 0.52 ) }
    dend_7 { pt3dadd( 56.741, 25.4593, -13.0853, 0.74 ) }
    dend_7 { pt3dadd( 58.2325, 25.5598, -13.4735, 0.52 ) }
    dend_7 { pt3dadd( 59.3518, 25.7734, -13.6374, 0.74 ) }
    dend_7 { pt3dadd( 61.1476, 26.3547, -13.7187, 0.52 ) }
    dend_7 { pt3dadd( 62.4639, 26.9524, -13.6298, 0.44 ) }
    dend_7 { pt3dadd( 63.5084, 27.5514, -13.4619, 0.44 ) }
    dend_7 { pt3dadd( 64.6865, 28.2894, -13.204, 0.81 ) }
    dend_7 { pt3dadd( 66.0478, 29.2286, -12.8333, 0.22 ) }
    dend_7 { pt3dadd( 66.6592, 29.6659, -12.6369, 0.29 ) }
    dend_7 { pt3dadd( 67.2663, 30.0867, -12.3956, 0.29 ) }
    dend_7 { pt3dadd( 68.127, 30.658, -12.0511, 0.44 ) }
    dend_7 { pt3dadd( 68.8394, 31.1076, -11.8322, 0.22 ) }
    dend_7 { pt3dadd( 78.8839, 33.7014, -12.6927, 0.22 ) }
    dend_7 { pt3dadd( 87.8897, 38.0191, -15.7432, 0.22 ) }
    dend_7 { pt3dadd( 97.4529, 41.5877, -17.8685, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 76/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 10.0501, 10.156, 12.9207, 0.74 ) }
    dend_5 { pt3dadd( 9.6872, 13.6825, 16.4744, 0.74 ) }
    dend_5 { pt3dadd( 9.35788, 15.3108, 17.8102, 0.96 ) }
    dend_5 { pt3dadd( 8.86526, 17.1687, 19.1604, 0.81 ) }
    dend_5 { pt3dadd( 8.55098, 18.2136, 19.8737, 0.81 ) }
    dend_5 { pt3dadd( 8.05916, 19.6971, 20.8562, 0.88 ) }
    dend_5 { pt3dadd( 7.50457, 21.2912, 21.9118, 0.88 ) }
    dend_5 { pt3dadd( 6.97079, 22.5879, 22.5716, 0.88 ) }
    dend_5 { pt3dadd( 6.28538, 24.2932, 23.5732, 0.59 ) }
    dend_5 { pt3dadd( 6.10707, 24.825, 24.0959, 0.59 ) }
    dend_5 { pt3dadd( 6.10503, 25.0152, 24.5144, 0.59 ) }
    dend_5 { pt3dadd( 6.15016, 25.1267, 24.9512, 0.59 ) }
    dend_5 { pt3dadd( 6.42596, 25.4321, 27.086, 0.88 ) }
    dend_5 { pt3dadd( 6.61826, 25.6191, 29.6353, 1.03 ) }
    dend_5 { pt3dadd( 6.61549, 25.6695, 31.6546, 0.81 ) }
    dend_5 { pt3dadd( 6.3734, 25.6562, 34.1958, 0.81 ) }
    dend_5 { pt3dadd( 5.97229, 25.6014, 36.1605, 1.11 ) }
    dend_5 { pt3dadd( 5.22672, 25.4965, 38.4108, 1.11 ) }
    dend_5 { pt3dadd( 3.6589, 25.2913, 41.5444, 0.59 ) }
    dend_5 { pt3dadd( 2.60829, 25.1455, 43.2672, 0.44 ) }
    dend_5 { pt3dadd( 1.51633, 24.981, 44.9113, 0.96 ) }
    dend_5 { pt3dadd( 0.427359, 24.7823, 46.5173, 0.74 ) }
    dend_5 { pt3dadd( -0.535308, 24.5354, 47.9246, 1.03 ) }
    dend_5 { pt3dadd( -2.03745, 24.0824, 50.0701, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_5 { pt3dadd( -3.51225, 23.5597, 52.2783, 0.96 ) }
    dend_5 { pt3dadd( -4.42665, 23.2172, 53.7121, 1.03 ) }
    dend_5 { pt3dadd( -5.78427, 22.716, 55.827, 0.66 ) }
    dend_5 { pt3dadd( -6.74094, 22.3635, 57.263, 0.96 ) }
    dend_5 { pt3dadd( -7.59636, 22.0665, 58.5568, 0.37 ) }
    dend_5 { pt3dadd( -8.32285, 21.8363, 59.6946, 0.37 ) }
    dend_5 { pt3dadd( -9.00596, 21.6875, 60.739, 1.03 ) }
    dend_5 { pt3dadd( -10.0537, 21.654, 62.3492, 0.37 ) }
    dend_5 { pt3dadd( -10.8571, 21.8265, 63.5718, 0.37 ) }
    dend_5 { pt3dadd( -11.9532, 22.2504, 65.3212, 0.52 ) }
    dend_5 { pt3dadd( -12.9755, 22.7281, 67.0279, 0.52 ) }
    dend_5 { pt3dadd( -13.6399, 23.0182, 68.1346, 0.52 ) }
    dend_5 { pt3dadd( -14.5809, 23.3229, 69.7771, 1.11 ) }
    dend_5 { pt3dadd( -15.4517, 23.4852, 71.3094, 0.29 ) }
    dend_5 { pt3dadd( -15.8439, 23.5181, 71.9605, 0.29 ) }
    dend_5 { pt3dadd( -16.3393, 23.5257, 72.7562, 0.59 ) }
    dend_5 { pt3dadd( -16.9886, 23.5256, 73.8655, 0.96 ) }
    dend_5 { pt3dadd( -18.2211, 23.5081, 76.0146, 0.29 ) }
    dend_5 { pt3dadd( -18.8681, 23.5114, 77.1674, 0.29 ) }
    dend_5 { pt3dadd( -19.5228, 23.5875, 78.3765, 0.29 ) }
    dend_5 { pt3dadd( -20.2474, 23.7966, 79.724, 0.88 ) }
    dend_5 { pt3dadd( -20.8697, 24.0685, 80.8568, 0.52 ) }
    dend_5 { pt3dadd( -21.5853, 24.4261, 82.1354, 0.59 ) }
    dend_5 { pt3dadd( -22.2832, 24.7857, 83.3894, 0.29 ) }
    dend_5 { pt3dadd( -23.1463, 25.217, 84.9769, 0.29 ) }
    dend_5 { pt3dadd( -23.9861, 25.6459, 86.729, 1.47 ) }
    dend_5 { pt3dadd( -24.4472, 25.9083, 87.8437, 1.47 ) }
    dend_5 { pt3dadd( -25.4822, 26.6049, 90.4852, 0.37 ) }
    dend_5 { pt3dadd( -25.9693, 27.0289, 91.8159, 0.37 ) }
    dend_5 { pt3dadd( -26.4813, 27.6255, 93.2835, 1.18 ) }
    dend_5 { pt3dadd( -27.4829, 29.1589, 96.199, 0.52 ) }
    dend_5 { pt3dadd( -28.0257, 30.2613, 97.8459, 0.96 ) }
    dend_5 { pt3dadd( -28.5355, 31.6346, 99.4887, 0.37 ) }
    dend_5 { pt3dadd( -28.952, 33.0178, 100.806, 0.59 ) }
    dend_5 { pt3dadd( -29.5361, 35.0615, 102.538, 0.37 ) }
    dend_5 { pt3dadd( -29.8497, 36.2301, 103.425, 0.37 ) }
    dend_5 { pt3dadd( -30.1444, 37.3383, 104.192, 0.37 ) }
    dend_5 { pt3dadd( -30.4129, 38.3967, 104.965, 0.66 ) }
    dend_5 { pt3dadd( -30.7092, 39.654, 106.017, 0.37 ) }
    dend_5 { pt3dadd( -30.8839, 40.5174, 106.753, 0.37 ) }
    dend_5 { pt3dadd( -31.089, 41.7366, 107.744, 0.66 ) }
    dend_5 { pt3dadd( -31.2627, 43.0878, 108.834, 0.37 ) }
    dend_5 { pt3dadd( -31.3638, 44.2534, 109.759, 1.03 ) }
    dend_5 { pt3dadd( -31.401, 45.197, 110.538, 0.74 ) }
    dend_5 { pt3dadd( -31.3515, 47.2048, 112.238, 0.15 ) }
    dend_5 { pt3dadd( -31.3138, 47.8623, 112.816, 0.37 ) }
    dend_5 { pt3dadd( -31.2418, 49.0149, 113.884, 0.07 ) }
    dend_5 { pt3dadd( -31.2075, 49.6537, 114.476, 0.74 ) }
    dend_5 { pt3dadd( -31.1665, 50.9674, 115.729, 0.22 ) }
    dend_5 { pt3dadd( -31.1837, 51.9233, 116.665, 0.96 ) }
    dend_5 { pt3dadd( -31.2933, 53.2021, 117.992, 0.22 ) }
    dend_5 { pt3dadd( -31.4416, 54.0373, 118.866, 0.37 ) }
    dend_5 { pt3dadd( -31.7179, 55.0311, 119.901, 0.15 ) }
    dend_5 { pt3dadd( -32.0818, 55.9364, 120.826, 0.15 ) }
    dend_5 { pt3dadd( -32.4001, 56.5433, 121.419, 0.59 ) }
    dend_5 { pt3dadd( -33.033, 57.6071, 122.47, 1.18 ) }
    dend_5 { pt3dadd( -33.7485, 58.794, 123.693, 0.15 ) }
    dend_5 { pt3dadd( -34.0295, 59.2804, 124.246, 0.37 ) }
    dend_5 { pt3dadd( -34.5196, 60.1747, 125.365, 0.15 ) }
    dend_5 { pt3dadd( -34.7358, 60.642, 125.989, 0.37 ) }
    dend_5 { pt3dadd( -35.0994, 61.6753, 127.495, 0.15 ) }
    dend_5 { pt3dadd( -35.2292, 62.2253, 128.49, 0.96 ) }
    dend_5 { pt3dadd( -35.2846, 62.6654, 129.46, 0.96 ) }
    dend_5 { pt3dadd( -35.3254, 63.1924, 130.686, 0.22 ) }
    dend_5 { pt3dadd( -35.3321, 63.6922, 131.942, 0.59 ) }
    dend_5 { pt3dadd( -35.323, 64.3875, 133.817, 0.29 ) }
    dend_5 { pt3dadd( -35.2957, 65.5347, 137.284, 0.15 ) }
    dend_5 { pt3dadd( -35.2999, 66.0093, 138.806, 0.37 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 10.0501, 10.156, 12.9207, 0.81 ) }
    dend_2 { pt3dadd( 10.8017, 10.3559, 13.7053, 0.81 ) }
    dend_2 { pt3dadd( 11.7726, 10.5912, 14.7418, 1.03 ) }
    dend_2 { pt3dadd( 12.6298, 10.737, 15.6467, 0.81 ) }
    dend_2 { pt3dadd( 13.4773, 10.7924, 16.5146, 0.81 ) }
    dend_2 { pt3dadd( 14.3195, 10.8474, 17.3771, 0.81 ) }
    dend_2 { pt3dadd( 14.7944, 10.8785, 17.8635, 0.96 ) }
    dend_2 { pt3dadd( 15.9632, 11.0161, 19.1022, 1.11 ) }
    dend_2 { pt3dadd( 16.6624, 11.0871, 19.8355, 1.11 ) }
    dend_2 { pt3dadd( 17.5588, 11.0555, 20.7096, 1.47 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 78/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 41.3452, 11.9952, 32.6054, 0.22 ) }
    dend_57 { pt3dadd( 41.5951, 12.7898, 35.205, 0.22 ) }
    dend_57 { pt3dadd( 41.7956, 13.3642, 36.9246, 0.22 ) }
    dend_57 { pt3dadd( 41.9397, 13.8387, 38.0984, 0.22 ) }
    dend_57 { pt3dadd( 42.1118, 14.4069, 39.3605, 0.07 ) }
    dend_57 { pt3dadd( 42.2998, 15.0254, 40.6221, 0.22 ) }
    dend_57 { pt3dadd( 42.5393, 15.7623, 42.0057, 0.15 ) }
    dend_57 { pt3dadd( 42.8192, 16.5135, 43.1933, 0.15 ) }
    dend_57 { pt3dadd( 43.2426, 17.5083, 44.6844, 0.22 ) }
    dend_57 { pt3dadd( 43.5331, 18.1462, 45.6021, 0.15 ) }
    dend_57 { pt3dadd( 43.6828, 18.4873, 46.0915, 0.29 ) }
    dend_57 { pt3dadd( 43.986, 19.1787, 47.1234, 0.44 ) }
    dend_57 { pt3dadd( 44.5892, 20.4177, 49.0795, 0.15 ) }
    dend_57 { pt3dadd( 45.0161, 21.1399, 50.3703, 0.15 ) }
    dend_57 { pt3dadd( 45.2838, 21.4967, 51.1424, 0.22 ) }
    dend_57 { pt3dadd( 45.8873, 22.2059, 52.9017, 0.22 ) }
    dend_57 { pt3dadd( 46.3747, 22.6831, 54.2939, 0.44 ) }
    dend_57 { pt3dadd( 46.885, 23.1368, 55.7671, 0.52 ) }
    dend_57 { pt3dadd( 47.4909, 23.6256, 57.4599, 0.29 ) }
    dend_57 { pt3dadd( 48.0404, 23.9932, 58.9132, 0.44 ) }
    dend_57 { pt3dadd( 48.6863, 24.3341, 60.5171, 0.59 ) }
    dend_57 { pt3dadd( 49.2798, 24.5781, 61.8642, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_57 { pt3dadd( 49.9204, 24.85, 63.3761, 0.66 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 1/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 41.3452, 11.9952, 32.6054, 0.22 ) }
    dend_56 { pt3dadd( 42.4179, 12.5575, 32.405, 0.22 ) }
    dend_56 { pt3dadd( 43.1018, 12.8959, 32.2918, 0.22 ) }
    dend_56 { pt3dadd( 43.8449, 13.2529, 32.1837, 0.22 ) }
    dend_56 { pt3dadd( 44.4664, 13.5156, 32.1098, 0.44 ) }
    dend_56 { pt3dadd( 45.5408, 13.9849, 32.0266, 0.22 ) }
    dend_56 { pt3dadd( 46.4986, 14.4123, 32.0077, 0.29 ) }
    dend_56 { pt3dadd( 47.504, 14.8816, 32.0636, 0.22 ) }
    dend_56 { pt3dadd( 48.2102, 15.2167, 32.1968, 0.59 ) }
    dend_56 { pt3dadd( 49.2927, 15.7301, 32.5347, 0.22 ) }
    dend_56 { pt3dadd( 50.0574, 16.0936, 32.8656, 0.22 ) }
    dend_56 { pt3dadd( 50.7309, 16.4173, 33.2319, 0.52 ) }
    dend_56 { pt3dadd( 51.9272, 16.9744, 33.9459, 0.59 ) }
    dend_56 { pt3dadd( 52.9182, 17.429, 34.5383, 0.22 ) }
    dend_56 { pt3dadd( 53.4848, 17.6946, 34.8762, 0.22 ) }
    dend_56 { pt3dadd( 54.1921, 18.0411, 35.2838, 0.22 ) }
    dend_56 { pt3dadd( 54.7068, 18.2693, 35.5423, 0.44 ) }
    dend_56 { pt3dadd( 55.6211, 18.6546, 35.9559, 0.22 ) }
    dend_56 { pt3dadd( 56.2787, 18.9111, 36.2428, 0.22 ) }
    dend_56 { pt3dadd( 57.0221, 19.1994, 36.6373, 0.22 ) }
    dend_56 { pt3dadd( 57.4335, 19.3649, 36.8977, 0.22 ) }
    dend_56 { pt3dadd( 57.9762, 19.5953, 37.2647, 0.22 ) }
    dend_56 { pt3dadd( 58.3598, 19.7654, 37.5576, 0.22 ) }
    dend_56 { pt3dadd( 58.8666, 19.9896, 37.9547, 0.22 ) }
    dend_56 { pt3dadd( 59.7593, 20.3211, 38.581, 0.29 ) }
    dend_56 { pt3dadd( 60.3068, 20.4922, 38.8943, 0.29 ) }
    dend_56 { pt3dadd( 61.0381, 20.6995, 39.2509, 0.22 ) }
    dend_56 { pt3dadd( 61.819, 20.9195, 39.566, 0.74 ) }
    dend_56 { pt3dadd( 62.4558, 21.0993, 39.7749, 1.03 ) }
    dend_56 { pt3dadd( 63.3674, 21.3465, 39.9828, 0.66 ) }
    dend_56 { pt3dadd( 64.5408, 21.6544, 40.1197, 0.22 ) }
    dend_56 { pt3dadd( 65.1505, 21.8259, 40.1389, 0.29 ) }
    dend_56 { pt3dadd( 65.971, 22.0717, 40.099, 0.59 ) }
    dend_56 { pt3dadd( 66.8622, 22.3155, 39.9783, 0.22 ) }
    dend_56 { pt3dadd( 67.7916, 22.5064, 39.7597, 0.37 ) }
    dend_56 { pt3dadd( 68.5834, 22.605, 39.4715, 0.22 ) }
    dend_56 { pt3dadd( 69.1178, 22.6347, 39.2306, 0.22 ) }
    dend_56 { pt3dadd( 69.5585, 22.6365, 39.0126, 0.22 ) }
    dend_56 { pt3dadd( 70.2667, 22.6296, 38.6321, 0.52 ) }
    dend_56 { pt3dadd( 71.2274, 22.5956, 38.0323, 0.22 ) }
    dend_56 { pt3dadd( 71.9183, 22.5387, 37.5767, 0.37 ) }
    dend_56 { pt3dadd( 72.7876, 22.4391, 36.8988, 0.15 ) }
    dend_56 { pt3dadd( 73.5826, 22.3528, 36.1758, 0.15 ) }
    dend_56 { pt3dadd( 74.189, 22.3193, 35.5364, 0.66 ) }
    dend_56 { pt3dadd( 75.3061, 22.3362, 34.1972, 0.15 ) }
    dend_56 { pt3dadd( 75.8227, 22.3799, 33.5067, 0.22 ) }
    dend_56 { pt3dadd( 76.801, 22.4559, 32.019, 0.22 ) }
    dend_56 { pt3dadd( 77.0954, 22.4699, 31.4936, 0.22 ) }
    dend_56 { pt3dadd( 77.5098, 22.5005, 30.6974, 0.22 ) }
    dend_56 { pt3dadd( 77.7665, 22.5327, 30.1828, 0.29 ) }
    dend_56 { pt3dadd( 78.029, 22.6354, 29.6451, 0.29 ) }
    dend_56 { pt3dadd( 78.2488, 22.7815, 29.2034, 0.29 ) }
    dend_56 { pt3dadd( 78.6259, 23.0792, 28.5337, 0.29 ) }
    dend_56 { pt3dadd( 78.9898, 23.3165, 28.0268, 0.29 ) }
    dend_56 { pt3dadd( 79.2319, 23.4544, 27.7518, 0.66 ) }
    dend_56 { pt3dadd( 79.6949, 23.7357, 27.2871, 0.59 ) }
    dend_56 { pt3dadd( 80.46, 24.2479, 26.5502, 0.22 ) }
    dend_56 { pt3dadd( 80.9002, 24.5771, 26.1047, 0.59 ) }
    dend_56 { pt3dadd( 81.5177, 25.0564, 25.442, 0.22 ) }
    dend_56 { pt3dadd( 82.1243, 25.4748, 24.7621, 0.22 ) }
    dend_56 { pt3dadd( 82.6973, 25.8033, 24.1107, 0.37 ) }
    dend_56 { pt3dadd( 83.6623, 26.1942, 22.976, 0.15 ) }
    dend_56 { pt3dadd( 84.3567, 26.3401, 22.0931, 0.52 ) }
    dend_56 { pt3dadd( 85.0133, 26.3194, 21.1783, 0.88 ) }
    dend_56 { pt3dadd( 85.6302, 26.0481, 20.1924, 0.29 ) }
    dend_56 { pt3dadd( 86.087, 25.5543, 19.3964, 0.52 ) }
    dend_56 { pt3dadd( 86.5887, 24.6462, 18.5013, 0.29 ) }
    dend_56 { pt3dadd( 86.9136, 23.7989, 17.9275, 0.29 ) }
    dend_56 { pt3dadd( 87.1907, 22.9488, 17.4818, 0.59 ) }
    dend_56 { pt3dadd( 87.5385, 21.8532, 16.9885, 0.22 ) }
    dend_56 { pt3dadd( 87.7505, 21.1915, 16.732, 0.29 ) }
    dend_56 { pt3dadd( 88.14, 20.2233, 16.4252, 0.29 ) }
    dend_56 { pt3dadd( 88.3877, 19.7962, 16.3524, 0.29 ) }
    dend_56 { pt3dadd( 88.7813, 19.3115, 16.3427, 0.22 ) }
    dend_56 { pt3dadd( 89.5897, 18.5264, 16.4232, 0.22 ) }
    dend_56 { pt3dadd( 90.0774, 18.0955, 16.5074, 0.44 ) }
    dend_56 { pt3dadd( 90.7168, 17.5426, 16.6375, 0.66 ) }
    dend_56 { pt3dadd( 92.0016, 16.4728, 16.9128, 0.22 ) }
    dend_56 { pt3dadd( 92.6214, 15.9655, 17.0469, 0.22 ) }
    dend_56 { pt3dadd( 93.6494, 15.0777, 17.2759, 0.22 ) }
    dend_56 { pt3dadd( 94.5806, 14.2342, 17.4465, 0.22 ) }
    dend_56 { pt3dadd( 95.0434, 13.8547, 17.4689, 0.22 ) }
    dend_56 { pt3dadd( 95.5064, 13.5221, 17.4247, 0.22 ) }
    dend_56 { pt3dadd( 96.0493, 13.1874, 17.2798, 0.22 ) }
    dend_56 { pt3dadd( 96.6576, 12.7967, 16.9758, 0.22 ) }
    dend_56 { pt3dadd( 97.2336, 12.382, 16.494, 0.22 ) }
    dend_56 { pt3dadd( 97.9912, 11.691, 15.6361, 0.22 ) }
    dend_56 { pt3dadd( 98.3071, 11.3442, 15.2334, 0.22 ) }
    dend_56 { pt3dadd( 98.6166, 10.9439, 14.8236, 0.37 ) }
    dend_56 { pt3dadd( 99.1907, 10.1517, 14.0662, 0.22 ) }
    dend_56 { pt3dadd( 99.7405, 9.395, 13.3685, 0.44 ) }
    dend_56 { pt3dadd( 100.514, 8.24409, 12.4279, 0.15 ) }
    dend_56 { pt3dadd( 100.743, 7.86764, 12.1601, 0.37 ) }
    dend_56 { pt3dadd( 101.311, 6.93776, 11.5247, 0.15 ) }
    dend_56 { pt3dadd( 101.585, 6.52006, 11.2429, 0.37 ) }
    dend_56 { pt3dadd( 102.033, 5.87653, 10.8621, 0.37 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 97/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -14.5668, -32.6487, -2.29156, 0.22 ) }
    dend_34 { pt3dadd( -15.1082, -33.1003, -2.0787, 0.22 ) }
    dend_34 { pt3dadd( -15.3875, -33.3332, -1.96889, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_34 { pt3dadd( -15.8643, -33.7307, -1.78147, 0.22 ) }
    dend_34 { pt3dadd( -16.5174, -34.2754, -1.5247, 0.22 ) }
    dend_34 { pt3dadd( -16.8627, -34.5633, -1.38895, 0.22 ) }
    dend_34 { pt3dadd( -17.2845, -34.9151, -1.22314, 0.22 ) }
    dend_34 { pt3dadd( -23.7973, -38.8817, 1.2898, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 5/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -14.5668, -32.6487, -2.29156, 0.37 ) }
    dend_33 { pt3dadd( -14.721, -33.7055, -3.49968, 0.37 ) }
    dend_33 { pt3dadd( -14.9149, -34.5216, -4.30178, 0.37 ) }
    dend_33 { pt3dadd( -15.2537, -35.4949, -5.13494, 0.52 ) }
    dend_33 { pt3dadd( -15.7725, -36.6743, -5.97416, 0.74 ) }
    dend_33 { pt3dadd( -16.4226, -37.9731, -6.67447, 0.22 ) }
    dend_33 { pt3dadd( -16.6853, -38.4809, -6.89384, 0.22 ) }
    dend_33 { pt3dadd( -17.2814, -39.5527, -7.15461, 0.29 ) }
    dend_33 { pt3dadd( -17.9081, -40.6749, -7.32422, 0.66 ) }
    dend_33 { pt3dadd( -18.3329, -41.436, -7.39377, 0.29 ) }
    dend_33 { pt3dadd( -18.923, -42.6433, -7.47378, 0.37 ) }
    dend_33 { pt3dadd( -19.4316, -43.9749, -7.58477, 0.37 ) }
    dend_33 { pt3dadd( -19.8103, -45.2155, -7.75192, 0.44 ) }
    dend_33 { pt3dadd( -20.1315, -46.455, -7.97265, 0.52 ) }
    dend_33 { pt3dadd( -20.3958, -47.4837, -8.17467, 0.44 ) }
    dend_33 { pt3dadd( -20.8388, -49.1096, -8.45804, 0.44 ) }
    dend_33 { pt3dadd( -21.2936, -50.5591, -8.70688, 0.22 ) }
    dend_33 { pt3dadd( -21.5754, -51.3522, -8.84066, 0.52 ) }
    dend_33 { pt3dadd( -21.9275, -52.2703, -9.01871, 0.88 ) }
    dend_33 { pt3dadd( -22.5422, -53.917, -9.43461, 0.52 ) }
    dend_33 { pt3dadd( -22.9968, -55.2386, -9.9137, 0.81 ) }
    dend_33 { pt3dadd( -23.4015, -56.482, -10.5318, 0.29 ) }
    dend_33 { pt3dadd( -23.5758, -57.1715, -10.964, 0.37 ) }
    dend_33 { pt3dadd( -23.6795, -57.8117, -11.4115, 0.52 ) }
    dend_33 { pt3dadd( -23.7938, -58.9634, -12.283, 0.44 ) }
    dend_33 { pt3dadd( -23.867, -60.1255, -13.1931, 0.66 ) }
    dend_33 { pt3dadd( -23.9566, -61.0645, -13.8939, 0.74 ) }
    dend_33 { pt3dadd( -24.1498, -62.3575, -14.7108, 0.44 ) }
    dend_33 { pt3dadd( -24.4725, -63.8519, -15.5254, 0.29 ) }
    dend_33 { pt3dadd( -24.7557, -64.886, -16.0218, 0.29 ) }
    dend_33 { pt3dadd( -24.9812, -65.6062, -16.3273, 0.37 ) }
    dend_33 { pt3dadd( -25.3624, -66.82, -16.7538, 0.29 ) }
    dend_33 { pt3dadd( -25.748, -68.0288, -17.1268, 0.29 ) }
    dend_33 { pt3dadd( -25.9883, -68.751, -17.3399, 0.29 ) }
    dend_33 { pt3dadd( -26.4138, -70.0409, -17.7642, 0.29 ) }
    dend_33 { pt3dadd( -26.6671, -70.9171, -18.1144, 0.96 ) }
    dend_33 { pt3dadd( -26.864, -71.7164, -18.4919, 0.44 ) }
    dend_33 { pt3dadd( -27.111, -72.9212, -19.1127, 0.29 ) }
    dend_33 { pt3dadd( -27.3417, -74.1416, -19.79, 0.37 ) }
    dend_33 { pt3dadd( -27.5928, -75.2879, -20.4561, 0.22 ) }
    dend_33 { pt3dadd( -27.9085, -76.4496, -21.1356, 0.22 ) }
    dend_33 { pt3dadd( -28.0504, -76.9186, -21.4305, 0.29 ) }
    dend_33 { pt3dadd( -32.4256, -87.2117, -24.2455, 0.29 ) }
    dend_33 { pt3dadd( -36.2858, -97.681, -27.1924, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 49/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -19.0221, -69.6542, -33.9584, 0.07 ) }
    dend_31 { pt3dadd( -21.2663, -76.3827, -39.3506, 0.07 ) }
    dend_31 { pt3dadd( -22.8968, -83.889, -43.9271, 0.07 ) }
    dend_31 { pt3dadd( -24.616, -90.9753, -49.0736, 0.07 ) }
    dend_31 { pt3dadd( -27.4002, -97.6898, -54.2209, 0.07 ) }
    dend_31 { pt3dadd( -31.0527, -104.486, -58.6689, 0.07 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 55/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -19.0221, -69.6542, -33.9584, 0.07 ) }
    dend_28 { pt3dadd( -20.3762, -75.8894, -39.0763, 0.07 ) }
    dend_28 { pt3dadd( -21.6511, -81.238, -45.0923, 0.07 ) }
    dend_28 { pt3dadd( -22.401, -87.8308, -49.9003, 0.07 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 59/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -2.72678, -34.6899, -10.0326, 0.52 ) }
    dend_24 { pt3dadd( -4.03589, -36.0701, -10.3602, 0.52 ) }
    dend_24 { pt3dadd( -4.68057, -37.2423, -10.6584, 0.52 ) }
    dend_24 { pt3dadd( -5.21021, -38.9679, -11.1632, 0.59 ) }
    dend_24 { pt3dadd( -5.39582, -40.2668, -11.6231, 0.74 ) }
    dend_24 { pt3dadd( -5.44439, -41.4007, -12.1548, 0.59 ) }
    dend_24 { pt3dadd( -5.44663, -42.6528, -12.8712, 0.88 ) }
    dend_24 { pt3dadd( -5.32113, -43.9748, -13.7414, 0.59 ) }
    dend_24 { pt3dadd( -5.25098, -44.6811, -14.2797, 0.44 ) }
    dend_24 { pt3dadd( -5.23332, -45.4396, -14.9185, 0.74 ) }
    dend_24 { pt3dadd( -5.41288, -46.6331, -15.8693, 0.96 ) }
    dend_24 { pt3dadd( -5.59153, -47.2802, -16.2644, 0.81 ) }
    dend_24 { pt3dadd( -6.12561, -48.9503, -17.0899, 0.37 ) }
    dend_24 { pt3dadd( -6.519, -50.125, -17.548, 0.52 ) }
    dend_24 { pt3dadd( -7.07772, -51.7393, -18.0824, 0.66 ) }
    dend_24 { pt3dadd( -7.63661, -53.4368, -18.5886, 0.88 ) }
    dend_24 { pt3dadd( -8.29274, -55.7592, -19.2562, 0.59 ) }
    dend_24 { pt3dadd( -8.56703, -57.0501, -19.6532, 0.44 ) }
    dend_24 { pt3dadd( -8.71513, -58.1064, -20.0181, 0.66 ) }
    dend_24 { pt3dadd( -8.88744, -59.6905, -20.6453, 0.37 ) }
    dend_24 { pt3dadd( -9.01334, -60.7231, -21.132, 0.66 ) }
    dend_24 { pt3dadd( -9.23747, -61.8965, -21.7713, 0.66 ) }
    dend_24 { pt3dadd( -9.60219, -63.2317, -22.5707, 0.59 ) }
    dend_24 { pt3dadd( -9.92267, -64.2869, -23.1969, 0.74 ) }
    dend_24 { pt3dadd( -10.2185, -65.335, -23.8218, 0.37 ) }
    dend_24 { pt3dadd( -10.5239, -66.5536, -24.5423, 0.37 ) }
    dend_24 { pt3dadd( -10.9492, -68.2002, -25.5202, 0.66 ) }
    dend_24 { pt3dadd( -11.3502, -69.5844, -26.4041, 0.44 ) }
    dend_24 { pt3dadd( -11.6867, -70.5741, -27.1446, 0.74 ) }
    dend_24 { pt3dadd( -12.1654, -71.7985, -28.233, 0.29 ) }
    dend_24 { pt3dadd( -12.3785, -72.3135, -28.746, 0.29 ) }
    dend_24 { pt3dadd( -12.4971, -72.7018, -29.1623, 0.29 ) }
    dend_24 { pt3dadd( -12.6256, -73.4599, -30.0029, 0.29 ) }
    dend_24 { pt3dadd( -12.7469, -74.232, -30.9309, 0.22 ) }
    dend_24 { pt3dadd( -12.8737, -74.9559, -31.9528, 0.22 ) }
    dend_24 { pt3dadd( -12.9721, -75.6165, -32.9584, 0.37 ) }
    dend_24 { pt3dadd( -12.99, -76.4731, -34.2081, 0.52 ) }
    dend_24 { pt3dadd( -12.932, -77.0465, -34.9862, 0.74 ) }
    dend_24 { pt3dadd( -12.7262, -78.0199, -36.2241, 0.44 ) }
    dend_24 { pt3dadd( -12.4547, -79.1085, -37.5996, 0.44 ) }
    dend_24 { pt3dadd( -12.3263, -79.6759, -38.3628, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_24 { pt3dadd( -12.2221, -80.5477, -39.5467, 0.22 ) }
    dend_24 { pt3dadd( -12.2012, -81.0318, -40.2081, 0.22 ) }
    dend_24 { pt3dadd( -12.2115, -81.5521, -40.8892, 0.22 ) }
    dend_24 { pt3dadd( -12.2616, -82.205, -41.5981, 0.44 ) }
    dend_24 { pt3dadd( -12.4451, -83.2574, -42.5043, 0.22 ) }
    dend_24 { pt3dadd( -12.7057, -84.0989, -43.18, 0.22 ) }
    dend_24 { pt3dadd( -16.3681, -91.9226, -49.7153, 0.22 ) }
    dend_24 { pt3dadd( -20.6013, -98.3783, -57.2519, 0.22 ) }
    dend_24 { pt3dadd( -24.8723, -104.964, -64.6591, 0.22 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 9/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -2.72678, -34.6899, -10.0326, 0.37 ) }
    dend_21 { pt3dadd( -1.6276, -36.2455, -10.0608, 0.37 ) }
    dend_21 { pt3dadd( -0.991936, -37.4151, -10.1642, 0.37 ) }
    dend_21 { pt3dadd( -0.43207, -38.5904, -10.3901, 0.37 ) }
    dend_21 { pt3dadd( 0.234351, -40.1292, -10.8085, 0.74 ) }
    dend_21 { pt3dadd( 0.862977, -41.6796, -11.3524, 0.74 ) }
    dend_21 { pt3dadd( 1.6561, -43.7443, -12.2186, 0.52 ) }
    dend_21 { pt3dadd( 2.29442, -45.4476, -13.0508, 0.52 ) }
    dend_21 { pt3dadd( 2.87122, -47.2089, -14.0214, 0.81 ) }
    dend_21 { pt3dadd( 3.19238, -48.4411, -14.7506, 1.11 ) }
    dend_21 { pt3dadd( 3.4797, -49.8723, -15.6526, 0.96 ) }
    dend_21 { pt3dadd( 3.72685, -51.2383, -16.5756, 0.88 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 21/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 17.5588, 11.0555, 20.7096, 0.52 ) }
    dend_4 { pt3dadd( 18.4993, 10.1803, 20.9288, 0.52 ) }
    dend_4 { pt3dadd( 19.4368, 9.57267, 20.951, 0.66 ) }
    dend_4 { pt3dadd( 20.2985, 9.06564, 20.9331, 0.44 ) }
    dend_4 { pt3dadd( 21.3569, 8.47751, 20.852, 0.88 ) }
    dend_4 { pt3dadd( 22.4494, 7.87984, 20.6791, 0.59 ) }
    dend_4 { pt3dadd( 23.621, 7.21344, 20.4034, 0.44 ) }
    dend_4 { pt3dadd( 24.5196, 6.78187, 20.1209, 0.44 ) }
    dend_4 { pt3dadd( 25.5933, 6.29361, 19.7637, 0.44 ) }
    dend_4 { pt3dadd( 26.6392, 5.81065, 19.4401, 0.74 ) }
    dend_4 { pt3dadd( 27.7335, 5.26739, 19.1826, 0.96 ) }
    dend_4 { pt3dadd( 28.9546, 4.63216, 19.0224, 0.44 ) }
    dend_4 { pt3dadd( 30.1572, 4.01288, 18.9208, 0.44 ) }
    dend_4 { pt3dadd( 31.2828, 3.45802, 18.8135, 0.59 ) }
    dend_4 { pt3dadd( 32.2563, 2.99227, 18.7226, 1.11 ) }
    dend_4 { pt3dadd( 33.2193, 2.53415, 18.6399, 0.44 ) }
    dend_4 { pt3dadd( 34.6167, 1.88496, 18.5152, 0.52 ) }
    dend_4 { pt3dadd( 35.628, 1.41762, 18.3752, 0.44 ) }
    dend_4 { pt3dadd( 36.338, 1.05907, 18.2369, 0.29 ) }
    dend_4 { pt3dadd( 37.0043, 0.689124, 18.0537, 0.52 ) }
    dend_4 { pt3dadd( 37.7442, 0.210002, 17.8231, 0.22 ) }
    dend_4 { pt3dadd( 38.2806, -0.205246, 17.6552, 0.37 ) }
    dend_4 { pt3dadd( 39.0015, -0.882122, 17.4865, 0.22 ) }
    dend_4 { pt3dadd( 39.7139, -1.60791, 17.3805, 0.59 ) }
    dend_4 { pt3dadd( 40.2933, -2.18126, 17.3098, 0.37 ) }
    dend_4 { pt3dadd( 40.8323, -2.67967, 17.2403, 0.81 ) }
    dend_4 { pt3dadd( 41.4105, -3.13129, 17.1633, 0.44 ) }
    dend_4 { pt3dadd( 42.1551, -3.61922, 17.0806, 0.88 ) }
    dend_4 { pt3dadd( 43.2681, -4.2197, 17.0413, 0.52 ) }
    dend_4 { pt3dadd( 44.3992, -4.75182, 17.0662, 0.81 ) }
    dend_4 { pt3dadd( 45.3507, -5.16459, 17.1654, 0.44 ) }
    dend_4 { pt3dadd( 46.6124, -5.71784, 17.373, 0.44 ) }
    dend_4 { pt3dadd( 47.6946, -6.20601, 17.6351, 0.96 ) }
    dend_4 { pt3dadd( 49.1141, -6.85194, 18.0741, 0.29 ) }
    dend_4 { pt3dadd( 49.9444, -7.22151, 18.3801, 0.59 ) }
    dend_4 { pt3dadd( 50.9875, -7.68259, 18.8004, 0.44 ) }
    dend_4 { pt3dadd( 51.5343, -7.9025, 18.9964, 0.22 ) }
    dend_4 { pt3dadd( 51.978, -8.07028, 19.1338, 0.22 ) }
    dend_4 { pt3dadd( 52.6406, -8.29356, 19.2977, 0.59 ) }
    dend_4 { pt3dadd( 53.3576, -8.52874, 19.4379, 0.44 ) }
    dend_4 { pt3dadd( 54.3539, -8.88348, 19.6574, 0.81 ) }
    dend_4 { pt3dadd( 55.5833, -9.47116, 20.0105, 0.29 ) }
    dend_4 { pt3dadd( 56.1807, -9.9417, 20.2525, 0.29 ) }
    dend_4 { pt3dadd( 56.7526, -10.701, 20.6163, 0.44 ) }
    dend_4 { pt3dadd( 57.0411, -11.3129, 20.8928, 0.22 ) }
    dend_4 { pt3dadd( 57.2767, -12.0476, 21.2103, 0.37 ) }
    dend_4 { pt3dadd( 57.5137, -12.9757, 21.6243, 0.81 ) }
    dend_4 { pt3dadd( 57.8062, -14.1995, 22.178, 0.37 ) }
    dend_4 { pt3dadd( 58.0752, -15.112, 22.6035, 0.22 ) }
    dend_4 { pt3dadd( 58.2785, -15.6518, 22.8729, 0.22 ) }
    dend_4 { pt3dadd( 58.4187, -15.9794, 23.0473, 0.22 ) }
    dend_4 { pt3dadd( 58.87, -16.9531, 23.5889, 0.22 ) }
    dend_4 { pt3dadd( 59.063, -17.3154, 23.806, 0.22 ) }
    dend_4 { pt3dadd( 59.4201, -17.9197, 24.1818, 0.37 ) }
    dend_4 { pt3dadd( 59.659, -18.3093, 24.4066, 0.81 ) }
    dend_4 { pt3dadd( 60.4054, -19.5296, 25.099, 0.29 ) }
    dend_4 { pt3dadd( 60.9507, -20.4515, 25.593, 0.59 ) }
    dend_4 { pt3dadd( 61.5527, -21.4769, 26.1015, 0.29 ) }
    dend_4 { pt3dadd( 61.894, -22.019, 26.3504, 0.29 ) }
    dend_4 { pt3dadd( 62.478, -22.8281, 26.6882, 0.22 ) }
    dend_4 { pt3dadd( 62.9027, -23.3254, 26.8888, 0.81 ) }
    dend_4 { pt3dadd( 63.333, -23.7544, 27.0564, 1.25 ) }
    dend_4 { pt3dadd( 64.1368, -24.4691, 27.3046, 0.74 ) }
    dend_4 { pt3dadd( 65.3322, -25.4777, 27.6564, 0.29 ) }
    dend_4 { pt3dadd( 65.9905, -26.0316, 27.8682, 0.29 ) }
    dend_4 { pt3dadd( 66.5962, -26.5674, 28.0824, 0.81 ) }
    dend_4 { pt3dadd( 66.8999, -26.8798, 28.1963, 0.81 ) }
    dend_4 { pt3dadd( 67.5841, -27.7291, 28.4985, 0.22 ) }
    dend_4 { pt3dadd( 68.0699, -28.4625, 28.7903, 0.44 ) }
    dend_4 { pt3dadd( 68.6786, -29.545, 29.3016, 0.59 ) }
    dend_4 { pt3dadd( 69.0503, -30.2722, 29.7182, 0.81 ) }
    dend_4 { pt3dadd( 69.5782, -31.4325, 30.487, 0.29 ) }
    dend_4 { pt3dadd( 69.913, -32.2715, 31.1093, 0.29 ) }
    dend_4 { pt3dadd( 70.321, -33.4036, 32.0109, 0.52 ) }
    dend_4 { pt3dadd( 70.6726, -34.3533, 32.8498, 0.88 ) }
    dend_4 { pt3dadd( 71.102, -35.5104, 33.9684, 0.88 ) }
    dend_4 { pt3dadd( 71.4149, -36.3796, 34.8609, 1.18 ) }
    dend_4 { pt3dadd( 71.7559, -37.3665, 35.8928, 0.22 ) }
    dend_4 { pt3dadd( 71.9389, -37.9449, 36.4618, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_4 { pt3dadd( 72.2519, -39.0724, 37.4202, 0.37 ) }
    dend_4 { pt3dadd( 72.4186, -39.7546, 37.899, 0.66 ) }
    dend_4 { pt3dadd( 72.5339, -40.2427, 38.1769, 0.88 ) }
    dend_4 { pt3dadd( 72.9122, -41.7053, 38.9012, 0.22 ) }
    dend_4 { pt3dadd( 73.1433, -42.5344, 39.2661, 0.22 ) }
    dend_4 { pt3dadd( 73.3675, -43.32, 39.5714, 0.74 ) }
    dend_4 { pt3dadd( 73.8916, -45.2077, 40.2104, 0.22 ) }
    dend_4 { pt3dadd( 74.1019, -45.9378, 40.4501, 0.81 ) }
    dend_4 { pt3dadd( 74.4586, -47.0907, 40.8043, 0.22 ) }
    dend_4 { pt3dadd( 74.7406, -47.9559, 41.0338, 0.22 ) }
    dend_4 { pt3dadd( 74.9865, -48.659, 41.205, 1.18 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 11/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 17.5588, 11.0555, 20.7096, 0.44 ) }
    dend_3 { pt3dadd( 18.1419, 11.8799, 21.2793, 0.44 ) }
    dend_3 { pt3dadd( 18.6815, 12.4035, 21.8124, 0.66 ) }
    dend_3 { pt3dadd( 19.6431, 13.0521, 22.7724, 0.66 ) }
    dend_3 { pt3dadd( 20.2053, 13.3223, 23.3287, 0.66 ) }
    dend_3 { pt3dadd( 21.0901, 13.6433, 24.0956, 0.66 ) }
    dend_3 { pt3dadd( 22.0088, 13.9051, 24.8328, 0.59 ) }
    dend_3 { pt3dadd( 23.0308, 14.022, 25.6662, 0.66 ) }
    dend_3 { pt3dadd( 23.8539, 13.9961, 26.3289, 0.66 ) }
    dend_3 { pt3dadd( 24.6124, 13.8894, 26.9284, 0.66 ) }
    dend_3 { pt3dadd( 25.833, 13.6484, 27.9561, 0.44 ) }
    dend_3 { pt3dadd( 26.2124, 13.5659, 28.2735, 0.44 ) }
    dend_3 { pt3dadd( 27.0223, 13.4092, 28.9193, 0.81 ) }
    dend_3 { pt3dadd( 27.6481, 13.3215, 29.3866, 0.81 ) }
    dend_3 { pt3dadd( 28.5898, 13.2588, 30.0535, 0.44 ) }
    dend_3 { pt3dadd( 29.7825, 13.3004, 30.9038, 0.88 ) }
    dend_3 { pt3dadd( 30.2977, 13.3966, 31.2825, 0.88 ) }
    dend_3 { pt3dadd( 30.7995, 13.5662, 31.6404, 0.88 ) }
    dend_3 { pt3dadd( 31.9613, 14.0753, 32.4762, 0.66 ) }
    dend_3 { pt3dadd( 32.9452, 14.5119, 33.202, 0.59 ) }
    dend_3 { pt3dadd( 33.6402, 14.8063, 33.7449, 0.59 ) }
    dend_3 { pt3dadd( 34.5613, 15.1382, 34.4984, 0.66 ) }
    dend_3 { pt3dadd( 35.198, 15.3206, 35.0258, 0.66 ) }
    dend_3 { pt3dadd( 36.0933, 15.5205, 35.7461, 0.96 ) }
    dend_3 { pt3dadd( 37.1607, 15.6934, 36.5572, 1.03 ) }
    dend_3 { pt3dadd( 38.244, 15.8232, 37.3487, 0.66 ) }
    dend_3 { pt3dadd( 39.2088, 15.9405, 38.0298, 0.52 ) }
    dend_3 { pt3dadd( 40.1766, 16.098, 38.7104, 0.74 ) }
    dend_3 { pt3dadd( 40.7917, 16.2536, 39.1299, 0.44 ) }
    dend_3 { pt3dadd( 42.011, 16.6803, 39.9424, 0.88 ) }
    dend_3 { pt3dadd( 43.7052, 17.4268, 41.0656, 0.44 ) }
    dend_3 { pt3dadd( 44.4794, 17.7951, 41.5707, 0.44 ) }
    dend_3 { pt3dadd( 45.5412, 18.3054, 42.2847, 0.66 ) }
    dend_3 { pt3dadd( 46.4516, 18.7106, 42.9323, 0.59 ) }
    dend_3 { pt3dadd( 47.0833, 18.948, 43.4026, 0.88 ) }
    dend_3 { pt3dadd( 48.1512, 19.2307, 44.2329, 0.81 ) }
    dend_3 { pt3dadd( 48.5389, 19.2747, 44.564, 0.29 ) }
    dend_3 { pt3dadd( 49.1595, 19.2254, 45.1597, 0.29 ) }
    dend_3 { pt3dadd( 49.7454, 19.04, 45.8062, 0.52 ) }
    dend_3 { pt3dadd( 50.2074, 18.8187, 46.3665, 0.52 ) }
    dend_3 { pt3dadd( 50.8023, 18.5155, 47.06, 0.37 ) }
    dend_3 { pt3dadd( 51.2719, 18.3044, 47.5325, 0.37 ) }
    dend_3 { pt3dadd( 51.7223, 18.1594, 47.8638, 0.81 ) }
    dend_3 { pt3dadd( 52.0961, 18.0621, 48.0325, 1.11 ) }
    dend_3 { pt3dadd( 52.7662, 17.8973, 48.206, 1.03 ) }
    dend_3 { pt3dadd( 53.9058, 17.5764, 48.3035, 0.44 ) }
    dend_3 { pt3dadd( 54.7565, 17.2824, 48.2807, 0.66 ) }
    dend_3 { pt3dadd( 55.4794, 17.0019, 48.2494, 0.37 ) }
    dend_3 { pt3dadd( 56.3269, 16.6573, 48.2398, 0.29 ) }
    dend_3 { pt3dadd( 56.7349, 16.5083, 48.2596, 0.59 ) }
    dend_3 { pt3dadd( 57.3403, 16.3258, 48.3221, 0.88 ) }
    dend_3 { pt3dadd( 58.4867, 16.029, 48.4784, 0.44 ) }
    dend_3 { pt3dadd( 59.3187, 15.8332, 48.6229, 0.44 ) }
    dend_3 { pt3dadd( 59.8921, 15.7162, 48.7626, 0.96 ) }
    dend_3 { pt3dadd( 61.1235, 15.5014, 49.137, 0.59 ) }
    dend_3 { pt3dadd( 62.0416, 15.3451, 49.429, 0.37 ) }
    dend_3 { pt3dadd( 62.6232, 15.2332, 49.6495, 0.37 ) }
    dend_3 { pt3dadd( 63.1634, 15.0853, 49.8916, 0.22 ) }
    dend_3 { pt3dadd( 63.7845, 14.8547, 50.2153, 0.37 ) }
    dend_3 { pt3dadd( 64.5409, 14.5364, 50.6568, 0.66 ) }
    dend_3 { pt3dadd( 65.1503, 14.2644, 51.0328, 0.29 ) }
    dend_3 { pt3dadd( 66.0051, 13.927, 51.5654, 0.74 ) }
    dend_3 { pt3dadd( 66.9159, 13.6309, 52.1016, 0.44 ) }
    dend_3 { pt3dadd( 67.5367, 13.4469, 52.4545, 0.44 ) }
    dend_3 { pt3dadd( 68.1228, 13.2687, 52.7682, 0.74 ) }
    dend_3 { pt3dadd( 68.681, 13.0883, 53.0976, 0.81 ) }
    dend_3 { pt3dadd( 69.3222, 12.8872, 53.5327, 0.37 ) }
    dend_3 { pt3dadd( 69.6353, 12.7976, 53.7662, 0.29 ) }
    dend_3 { pt3dadd( 70.2587, 12.6197, 54.3, 0.74 ) }
    dend_3 { pt3dadd( 70.8175, 12.4075, 54.8776, 0.88 ) }
    dend_3 { pt3dadd( 71.4427, 12.0877, 55.6475, 0.52 ) }
    dend_3 { pt3dadd( 72.0057, 11.748, 56.3848, 0.66 ) }
    dend_3 { pt3dadd( 72.6309, 11.3758, 57.1873, 0.52 ) }
    dend_3 { pt3dadd( 72.9139, 11.23, 57.5059, 0.29 ) }
    dend_3 { pt3dadd( 73.4615, 11.0153, 57.9764, 0.22 ) }
    dend_3 { pt3dadd( 73.8823, 10.9085, 58.2486, 0.22 ) }
    dend_3 { pt3dadd( 74.661, 10.8126, 58.6353, 0.44 ) }
    dend_3 { pt3dadd( 75.8737, 10.7875, 59.221, 0.66 ) }
    dend_3 { pt3dadd( 76.6205, 10.8448, 59.6105, 0.44 ) }
    dend_3 { pt3dadd( 77.5756, 10.9829, 60.164, 0.66 ) }
    dend_3 { pt3dadd( 78.5068, 11.1662, 60.7472, 0.37 ) }
    dend_3 { pt3dadd( 79.7873, 11.4723, 61.5851, 0.59 ) }
    dend_3 { pt3dadd( 80.7174, 11.726, 62.243, 0.37 ) }
    dend_3 { pt3dadd( 81.6691, 11.9877, 62.9516, 0.96 ) }
    dend_3 { pt3dadd( 82.2366, 12.1318, 63.4019, 1.55 ) }
    dend_3 { pt3dadd( 83.5039, 12.3988, 64.4442, 0.22 ) }
    dend_3 { pt3dadd( 84.0366, 12.4837, 64.8786, 0.66 ) }
    dend_3 { pt3dadd( 84.4089, 12.5283, 65.1663, 0.74 ) }
    dend_3 { pt3dadd( 85.3234, 12.5959, 65.8007, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_3 { pt3dadd( 85.8114, 12.5909, 66.1329, 0.22 ) }
    dend_3 { pt3dadd( 86.2797, 12.5605, 66.4694, 0.22 ) }
    dend_3 { pt3dadd( 87.2179, 12.4506, 67.1636, 0.22 ) }
    dend_3 { pt3dadd( 87.7049, 12.3799, 67.5231, 0.74 ) }
    dend_3 { pt3dadd( 88.1072, 12.2982, 67.8255, 1.11 ) }
    dend_3 { pt3dadd( 89.1611, 12.0193, 68.6314, 0.22 ) }
    dend_3 { pt3dadd( 89.8699, 11.817, 69.1679, 0.22 ) }
    dend_3 { pt3dadd( 90.3696, 11.6492, 69.5257, 0.22 ) }
    dend_3 { pt3dadd( 90.8482, 11.4704, 69.8449, 0.22 ) }
    dend_3 { pt3dadd( 91.9214, 11.062, 70.545, 0.22 ) }
    dend_3 { pt3dadd( 92.7599, 10.7331, 71.0711, 0.74 ) }
    dend_3 { pt3dadd( 93.4873, 10.4433, 71.513, 0.29 ) }
    dend_3 { pt3dadd( 94.0206, 10.2208, 71.8395, 0.29 ) }
    dend_3 { pt3dadd( 94.7425, 9.92379, 72.2906, 0.22 ) }
    dend_3 { pt3dadd( 95.2421, 9.72541, 72.5891, 0.44 ) }
    dend_3 { pt3dadd( 96.0709, 9.43271, 73.0275, 0.59 ) }
    dend_3 { pt3dadd( 96.8369, 9.16015, 73.4135, 0.15 ) }
    dend_3 { pt3dadd( 97.3272, 8.97227, 73.6574, 0.15 ) }
    dend_3 { pt3dadd( 97.7796, 8.79945, 73.8878, 0.52 ) }
    dend_3 { pt3dadd( 98.8426, 8.38944, 74.4332, 0.15 ) }
    dend_3 { pt3dadd( 99.5454, 8.1391, 74.7982, 0.15 ) }
    dend_3 { pt3dadd( 99.945, 8.00806, 74.9989, 0.29 ) }
    dend_3 { pt3dadd( 100.334, 7.87565, 75.2061, 0.52 ) }
    dend_3 { pt3dadd( 100.934, 7.65638, 75.5477, 0.37 ) }
    dend_3 { pt3dadd( 101.605, 7.4101, 75.9458, 0.66 ) }
    dend_3 { pt3dadd( 102.603, 7.09102, 76.566, 0.15 ) }
    dend_3 { pt3dadd( 103.104, 6.95702, 76.8882, 0.81 ) }
    dend_3 { pt3dadd( 104.047, 6.76949, 77.4726, 0.22 ) }
    dend_3 { pt3dadd( 104.755, 6.69319, 77.881, 0.22 ) }
    dend_3 { pt3dadd( 105.526, 6.66346, 78.304, 0.37 ) }
    dend_3 { pt3dadd( 106.502, 6.69338, 78.8167, 0.22 ) }
    dend_3 { pt3dadd( 107.174, 6.7463, 79.169, 0.22 ) }
    dend_3 { pt3dadd( 107.881, 6.83291, 79.5383, 0.74 ) }
    dend_3 { pt3dadd( 109.317, 7.09125, 80.2168, 0.07 ) }
    dend_3 { pt3dadd( 109.957, 7.23691, 80.5154, 0.07 ) }
    dend_3 { pt3dadd( 110.428, 7.35376, 80.7334, 0.37 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 36/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 49.9204, 24.85, 63.3761, 0.22 ) }
    dend_59 { pt3dadd( 50.0655, 25.7109, 64.511, 0.22 ) }
    dend_59 { pt3dadd( 50.1286, 26.606, 65.5427, 0.22 ) }
    dend_59 { pt3dadd( 50.1368, 27.2463, 66.218, 0.22 ) }
    dend_59 { pt3dadd( 50.158, 27.8792, 66.8428, 0.44 ) }
    dend_59 { pt3dadd( 50.182, 28.6074, 67.515, 0.44 ) }
    dend_59 { pt3dadd( 50.2187, 29.658, 68.4476, 0.37 ) }
    dend_59 { pt3dadd( 50.2955, 30.9899, 69.5103, 0.52 ) }
    dend_59 { pt3dadd( 50.4137, 32.3705, 70.5139, 0.22 ) }
    dend_59 { pt3dadd( 50.4974, 33.5368, 71.3025, 0.22 ) }
    dend_59 { pt3dadd( 50.5434, 34.1596, 71.7056, 0.22 ) }
    dend_59 { pt3dadd( 50.6741, 35.2674, 72.3869, 0.22 ) }
    dend_59 { pt3dadd( 50.8449, 36.1906, 72.9574, 0.88 ) }
    dend_59 { pt3dadd( 51.253, 37.8823, 74.0267, 0.22 ) }
    dend_59 { pt3dadd( 51.4918, 38.8267, 74.6165, 0.22 ) }
    dend_59 { pt3dadd( 51.6075, 39.3448, 74.9372, 0.22 ) }
    dend_59 { pt3dadd( 51.7817, 40.2175, 75.4882, 0.22 ) }
    dend_59 { pt3dadd( 51.9062, 41.0937, 76.0556, 0.22 ) }
    dend_59 { pt3dadd( 51.9396, 41.651, 76.4484, 0.22 ) }
    dend_59 { pt3dadd( 51.9343, 42.5385, 77.1113, 0.22 ) }
    dend_59 { pt3dadd( 51.9121, 43.0152, 77.4736, 0.22 ) }
    dend_59 { pt3dadd( 51.8138, 44.2053, 78.3845, 0.29 ) }
    dend_59 { pt3dadd( 51.6818, 45.2497, 79.1859, 0.22 ) }
    dend_59 { pt3dadd( 51.6022, 45.8814, 79.668, 0.74 ) }
    dend_59 { pt3dadd( 51.5347, 46.4955, 80.1439, 0.74 ) }
    dend_59 { pt3dadd( 51.3562, 48.2228, 81.5681, 0.22 ) }
    dend_59 { pt3dadd( 51.2349, 49.1287, 82.3226, 0.15 ) }
    dend_59 { pt3dadd( 51.1204, 49.844, 82.9159, 0.15 ) }
    dend_59 { pt3dadd( 50.9777, 50.7354, 83.6559, 0.15 ) }
    dend_59 { pt3dadd( 50.8485, 51.4904, 84.3023, 0.37 ) }
    dend_59 { pt3dadd( 50.6264, 52.6652, 85.3436, 0.37 ) }
    dend_59 { pt3dadd( 50.4127, 53.715, 86.3169, 0.15 ) }
    dend_59 { pt3dadd( 50.3197, 54.161, 86.7277, 0.15 ) }
    dend_59 { pt3dadd( 50.1828, 54.8669, 87.3345, 0.22 ) }
    dend_59 { pt3dadd( 50.0566, 55.5481, 87.9149, 0.22 ) }
    dend_59 { pt3dadd( 50.0101, 56.0493, 88.3529, 0.22 ) }
    dend_59 { pt3dadd( 50.0055, 56.7528, 88.938, 0.22 ) }
    dend_59 { pt3dadd( 50.0449, 57.1572, 89.2828, 0.22 ) }
    dend_59 { pt3dadd( 50.2166, 58.2939, 90.2263, 0.44 ) }
    dend_59 { pt3dadd( 50.4808, 59.6241, 91.3072, 0.22 ) }
    dend_59 { pt3dadd( 50.8605, 61.0977, 92.4502, 0.15 ) }
    dend_59 { pt3dadd( 51.0948, 61.9447, 93.0693, 0.22 ) }
    dend_59 { pt3dadd( 51.4201, 63.1095, 93.8678, 0.22 ) }
    dend_59 { pt3dadd( 51.5762, 63.747, 94.2898, 0.29 ) }
    dend_59 { pt3dadd( 51.8041, 64.7928, 94.9456, 0.15 ) }
    dend_59 { pt3dadd( 51.9775, 65.8214, 95.5466, 0.59 ) }
    dend_59 { pt3dadd( 52.1284, 67.1219, 96.3761, 0.29 ) }
    dend_59 { pt3dadd( 52.281, 68.4172, 97.3539, 0.15 ) }
    dend_59 { pt3dadd( 52.404, 69.4471, 98.2958, 0.15 ) }
    dend_59 { pt3dadd( 52.4898, 70.0791, 98.96, 0.29 ) }
    dend_59 { pt3dadd( 52.5955, 70.7577, 99.9852, 0.52 ) }
    dend_59 { pt3dadd( 52.6962, 71.5947, 101.774, 1.11 ) }
    dend_59 { pt3dadd( 52.7108, 72.0275, 103.108, 0.88 ) }
    dend_59 { pt3dadd( 52.6746, 72.4297, 104.696, 0.22 ) }
    dend_59 { pt3dadd( 52.6505, 72.5615, 105.328, 0.22 ) }
    dend_59 { pt3dadd( 52.3882, 73.3794, 109.899, 0.22 ) }
    dend_59 { pt3dadd( 52.2635, 73.7226, 111.826, 0.22 ) }
    dend_59 { pt3dadd( 52.0787, 74.2259, 114.224, 0.22 ) }
    dend_59 { pt3dadd( 52.0016, 74.487, 115.263, 0.52 ) }
    dend_59 { pt3dadd( 51.909, 75.0753, 117.152, 0.66 ) }
    dend_59 { pt3dadd( 51.9202, 75.7974, 119.033, 0.15 ) }
    dend_59 { pt3dadd( 52.0531, 76.5154, 120.41, 0.37 ) }
    dend_59 { pt3dadd( 52.3723, 77.7327, 122.471, 0.22 ) }
    dend_59 { pt3dadd( 52.6369, 78.5831, 123.725, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_59 { pt3dadd( 52.8602, 79.2635, 124.645, 0.96 ) }
    dend_59 { pt3dadd( 53.242, 80.4737, 126.053, 0.22 ) }
    dend_59 { pt3dadd( 53.5761, 81.5369, 127.147, 0.66 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 3/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 49.9204, 24.85, 63.3761, 0.22 ) }
    dend_58 { pt3dadd( 50.6688, 26.0641, 64.5345, 0.22 ) }
    dend_58 { pt3dadd( 51.2001, 26.882, 65.4362, 0.29 ) }
    dend_58 { pt3dadd( 51.632, 27.5304, 66.1526, 0.22 ) }
    dend_58 { pt3dadd( 52.0654, 28.1762, 66.8627, 0.22 ) }
    dend_58 { pt3dadd( 52.4084, 28.7027, 67.4478, 0.44 ) }
    dend_58 { pt3dadd( 53.1463, 29.7806, 68.7259, 0.15 ) }
    dend_58 { pt3dadd( 53.6849, 30.538, 69.6244, 0.15 ) }
    dend_58 { pt3dadd( 54.0094, 30.9433, 70.1558, 0.15 ) }
    dend_58 { pt3dadd( 54.0932, 31.0295, 70.2836, 0.15 ) }
    dend_58 { pt3dadd( 54.7683, 31.5653, 71.2056, 0.22 ) }
    dend_58 { pt3dadd( 55.4923, 32.0829, 72.1141, 0.22 ) }
    dend_58 { pt3dadd( 56.0408, 32.4092, 72.7213, 0.22 ) }
    dend_58 { pt3dadd( 56.4112, 32.5972, 73.0717, 0.66 ) }
    dend_58 { pt3dadd( 57.2628, 32.9245, 73.7847, 1.03 ) }
    dend_58 { pt3dadd( 58.2844, 33.189, 74.5103, 0.37 ) }
    dend_58 { pt3dadd( 59.1912, 33.272, 74.9866, 0.37 ) }
    dend_58 { pt3dadd( 60.3145, 33.2187, 75.4597, 0.22 ) }
    dend_58 { pt3dadd( 61.4527, 33.0048, 75.86, 0.22 ) }
    dend_58 { pt3dadd( 62.4382, 32.7287, 76.1211, 0.29 ) }
    dend_58 { pt3dadd( 63.2037, 32.457, 76.2548, 0.22 ) }
    dend_58 { pt3dadd( 64.4724, 31.9257, 76.4066, 0.22 ) }
    dend_58 { pt3dadd( 65.2895, 31.5345, 76.4837, 0.37 ) }
    dend_58 { pt3dadd( 66.0575, 31.1435, 76.5584, 0.22 ) }
    dend_58 { pt3dadd( 66.8486, 30.7435, 76.7031, 0.74 ) }
    dend_58 { pt3dadd( 68.2737, 30.1512, 76.9812, 0.22 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 29/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -23.7973, -38.8817, 1.2898, 0.22 ) }
    dend_36 { pt3dadd( -29.5013, -42.7243, 3.49731, 0.22 ) }
    dend_36 { pt3dadd( -35.0343, -46.7467, 5.83026, 0.22 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 32/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -23.7973, -38.8817, 1.2898, 0.22 ) }
    dend_35 { pt3dadd( -32.3991, -43.7338, 3.26796, 0.22 ) }
    dend_35 { pt3dadd( -41.4064, -48.1483, 4.01007, 0.22 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 35/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -22.401, -87.8308, -49.9003, 0.07 ) }
    dend_30 { pt3dadd( -23.4504, -95.9195, -56.7319, 0.07 ) }
    dend_30 { pt3dadd( -23.9739, -104.254, -63.3401, 0.07 ) }
    dend_30 { pt3dadd( -23.2098, -112.104, -70.4694, 0.07 ) }
    dend_30 { pt3dadd( -20.3472, -119.49, -77.5411, 0.07 ) }
    dend_30 { pt3dadd( -16.0767, -124.899, -85.5493, 0.07 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 41/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -22.401, -87.8308, -49.9003, 0.07 ) }
    dend_29 { pt3dadd( -24.7319, -94.3813, -55.9218, 0.07 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 43/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 3.72685, -51.2383, -16.5756, 0.37 ) }
    dend_23 { pt3dadd( 3.08768, -51.9481, -15.6751, 0.37 ) }
    dend_23 { pt3dadd( 2.45905, -52.5544, -14.7843, 0.22 ) }
    dend_23 { pt3dadd( 2.1095, -52.964, -14.2241, 0.29 ) }
    dend_23 { pt3dadd( 1.73636, -53.5185, -13.5072, 0.29 ) }
    dend_23 { pt3dadd( 1.54239, -53.8977, -13.073, 0.44 ) }
    dend_23 { pt3dadd( 1.29265, -54.5015, -12.4403, 0.44 ) }
    dend_23 { pt3dadd( 1.15922, -54.918, -12.0349, 0.44 ) }
    dend_23 { pt3dadd( 0.919286, -55.9309, -11.1863, 0.29 ) }
    dend_23 { pt3dadd( 0.761386, -56.7062, -10.632, 0.44 ) }
    dend_23 { pt3dadd( 0.528698, -57.9732, -9.80711, 0.66 ) }
    dend_23 { pt3dadd( 0.370124, -58.9107, -9.21785, 0.44 ) }
    dend_23 { pt3dadd( 0.258874, -59.6167, -8.79862, 0.66 ) }
    dend_23 { pt3dadd( 0.0963365, -60.6837, -8.19907, 0.44 ) }
    dend_23 { pt3dadd( -0.0944421, -61.9443, -7.53452, 0.44 ) }
    dend_23 { pt3dadd( -0.223818, -63.0498, -7.05292, 0.59 ) }
    dend_23 { pt3dadd( -0.306702, -64.2735, -6.62078, 0.66 ) }
    dend_23 { pt3dadd( -0.3104, -65.7488, -6.21698, 0.59 ) }
    dend_23 { pt3dadd( -0.197511, -67.0027, -5.93099, 0.74 ) }
    dend_23 { pt3dadd( 0.072623, -68.4515, -5.62535, 0.59 ) }
    dend_23 { pt3dadd( 0.515464, -70.0758, -5.28219, 0.74 ) }
    dend_23 { pt3dadd( 0.960646, -71.4619, -4.97697, 0.37 ) }
    dend_23 { pt3dadd( 1.34876, -72.567, -4.69091, 0.52 ) }
    dend_23 { pt3dadd( 1.84554, -73.9932, -4.24277, 0.59 ) }
    dend_23 { pt3dadd( 2.12156, -74.8566, -3.91929, 0.44 ) }
    dend_23 { pt3dadd( 2.41986, -75.8757, -3.50934, 0.44 ) }
    dend_23 { pt3dadd( 2.65509, -76.9158, -3.06626, 0.74 ) }
    dend_23 { pt3dadd( 2.80178, -77.9294, -2.69047, 0.81 ) }
    dend_23 { pt3dadd( 2.89999, -79.4192, -2.24973, 0.44 ) }
    dend_23 { pt3dadd( 2.93837, -80.9554, -1.9118, 0.66 ) }
    dend_23 { pt3dadd( 2.96598, -82.0867, -1.72691, 0.52 ) }
    dend_23 { pt3dadd( 2.98605, -83.3079, -1.56438, 0.66 ) }
    dend_23 { pt3dadd( 2.98854, -84.7269, -1.38729, 0.66 ) }
    dend_23 { pt3dadd( 2.9471, -86.2891, -1.17863, 0.52 ) }
    dend_23 { pt3dadd( 2.86004, -87.8075, -0.949329, 0.52 ) }
    dend_23 { pt3dadd( 2.75207, -88.9844, -0.718538, 0.44 ) }
    dend_23 { pt3dadd( 2.61423, -90.2857, -0.415281, 0.66 ) }
    dend_23 { pt3dadd( 2.51323, -91.2384, -0.18315, 0.66 ) }
    dend_23 { pt3dadd( 2.38498, -92.2408, 0.0849342, 0.59 ) }
    dend_23 { pt3dadd( 2.21574, -93.3182, 0.36086, 0.59 ) }
    dend_23 { pt3dadd( 1.93369, -94.827, 0.737466, 0.74 ) }
    dend_23 { pt3dadd( 1.68167, -96.1329, 1.04977, 0.59 ) }
    dend_23 { pt3dadd( 1.46484, -97.3865, 1.32001, 0.59 ) }
    dend_23 { pt3dadd( 1.25936, -98.8676, 1.61649, 0.81 ) }
    dend_23 { pt3dadd( 1.01954, -100.964, 2.01103, 0.52 ) }
    dend_23 { pt3dadd( 0.874959, -102.491, 2.27726, 0.52 ) }
    dend_23 { pt3dadd( 0.80775, -103.461, 2.42575, 0.88 ) }
    dend_23 { pt3dadd( 0.78639, -104.932, 2.64959, 0.52 ) }
    dend_23 { pt3dadd( 0.894162, -106.044, 2.79521, 0.22 ) }
    dend_23 { pt3dadd( 1.00275, -106.501, 2.83484, 0.22 ) }
    dend_23 { pt3dadd( 1.18745, -107.086, 2.85942, 0.29 ) }
    dend_23 { pt3dadd( 1.38078, -107.76, 2.84837, 0.29 ) }
    dend_23 { pt3dadd( 1.5884, -108.774, 2.81106, 0.81 ) }
    dend_23 { pt3dadd( 1.72124, -109.995, 2.74731, 0.66 ) }
    dend_23 { pt3dadd( 1.74598, -111.409, 2.66333, 0.59 ) }
    dend_23 { pt3dadd( 1.69469, -112.821, 2.58051, 0.37 ) }
    dend_23 { pt3dadd( 1.61369, -113.978, 2.53298, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_23 { pt3dadd( 1.52904, -114.959, 2.51566, 0.59 ) }
    dend_23 { pt3dadd( 1.42938, -116.036, 2.54599, 0.52 ) }
    dend_23 { pt3dadd( 1.32443, -117.232, 2.5864, 0.44 ) }
    dend_23 { pt3dadd( 1.26564, -118.145, 2.58969, 0.44 ) }
    dend_23 { pt3dadd( 1.24714, -119.155, 2.55155, 0.59 ) }
    dend_23 { pt3dadd( 1.26005, -119.919, 2.49397, 1.11 ) }
    dend_23 { pt3dadd( 1.30648, -121.478, 2.32082, 0.59 ) }
    dend_23 { pt3dadd( 1.33436, -122.801, 2.11735, 0.37 ) }
    dend_23 { pt3dadd( 1.34174, -123.874, 1.91352, 0.37 ) }
    dend_23 { pt3dadd( 1.31665, -124.838, 1.70751, 0.29 ) }
    dend_23 { pt3dadd( 1.27338, -125.703, 1.49488, 0.66 ) }
    dend_23 { pt3dadd( 1.24794, -126.324, 1.32849, 0.66 ) }
    dend_23 { pt3dadd( 1.24757, -127.735, 0.952955, 0.37 ) }
    dend_23 { pt3dadd( 1.2959, -128.333, 0.816934, 0.66 ) }
    dend_23 { pt3dadd( 1.48082, -129.584, 0.566208, 0.44 ) }
    dend_23 { pt3dadd( 1.69713, -130.631, 0.358698, 0.29 ) }
    dend_23 { pt3dadd( 1.95776, -131.655, 0.131841, 0.59 ) }
    dend_23 { pt3dadd( 2.18991, -132.557, -0.0763538, 0.74 ) }
    dend_23 { pt3dadd( 2.50251, -133.867, -0.419034, 0.44 ) }
    dend_23 { pt3dadd( 2.66239, -134.699, -0.652671, 0.44 ) }
    dend_23 { pt3dadd( 2.76914, -135.438, -0.872798, 0.44 ) }
    dend_23 { pt3dadd( 2.84318, -136.307, -1.10393, 0.44 ) }
    dend_23 { pt3dadd( 2.86796, -137.666, -1.41285, 0.44 ) }
    dend_23 { pt3dadd( 2.80509, -139.316, -1.75226, 0.37 ) }
    dend_23 { pt3dadd( 2.7418, -140.136, -1.87129, 0.59 ) }
    dend_23 { pt3dadd( 2.64047, -141.371, -1.92067, 0.44 ) }
    dend_23 { pt3dadd( 2.59559, -142.337, -1.82635, 0.22 ) }
    dend_23 { pt3dadd( 2.61732, -143.031, -1.61472, 0.22 ) }
    dend_23 { pt3dadd( 2.67604, -143.517, -1.34608, 0.37 ) }
    dend_23 { pt3dadd( 2.766, -144.3, -0.705862, 0.37 ) }
    dend_23 { pt3dadd( 2.82923, -144.992, -0.00407004, 0.37 ) }
    dend_23 { pt3dadd( 2.88466, -145.598, 0.726219, 0.37 ) }
    dend_23 { pt3dadd( 2.97489, -146.329, 1.71908, 0.59 ) }
    dend_23 { pt3dadd( 3.05963, -146.919, 2.57296, 0.22 ) }
    dend_23 { pt3dadd( 3.10664, -147.612, 3.59364, 0.37 ) }
    dend_23 { pt3dadd( 3.07422, -148.148, 4.34369, 0.37 ) }
    dend_23 { pt3dadd( 3.01769, -148.44, 4.71593, 0.37 ) }
    dend_23 { pt3dadd( 2.81397, -149.133, 5.52062, 0.37 ) }
    dend_23 { pt3dadd( 2.70697, -149.452, 5.8279, 0.37 ) }
    dend_23 { pt3dadd( 2.36562, -150.523, 6.67746, 0.29 ) }
    dend_23 { pt3dadd( 2.09038, -151.425, 7.26999, 0.37 ) }
    dend_23 { pt3dadd( 1.75371, -152.481, 7.9016, 0.29 ) }
    dend_23 { pt3dadd( 1.58336, -153.061, 8.24357, 1.03 ) }
    dend_23 { pt3dadd( 1.31048, -154.101, 8.81539, 0.37 ) }
    dend_23 { pt3dadd( 1.1508, -154.837, 9.21308, 0.29 ) }
    dend_23 { pt3dadd( 0.993714, -155.789, 9.7121, 0.29 ) }
    dend_23 { pt3dadd( 0.768123, -157.236, 10.4751, 0.52 ) }
    dend_23 { pt3dadd( 0.578884, -158.402, 11.1158, 1.18 ) }
    dend_23 { pt3dadd( 0.346673, -159.813, 11.9232, 0.15 ) }
    dend_23 { pt3dadd( 0.254177, -160.475, 12.3187, 0.15 ) }
    dend_23 { pt3dadd( 0.180714, -161.232, 12.7456, 0.59 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 51/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 3.72685, -51.2383, -16.5756, 0.29 ) }
    dend_22 { pt3dadd( 4.1087, -52.3436, -17.0461, 0.29 ) }
    dend_22 { pt3dadd( 4.34434, -53.1894, -17.3049, 0.29 ) }
    dend_22 { pt3dadd( 4.43034, -54.3094, -17.6138, 0.37 ) }
    dend_22 { pt3dadd( 4.39031, -55.0031, -17.7705, 0.37 ) }
    dend_22 { pt3dadd( 4.29485, -55.9429, -17.9413, 0.29 ) }
    dend_22 { pt3dadd( 4.19228, -56.959, -18.0943, 0.44 ) }
    dend_22 { pt3dadd( 4.08252, -58.2395, -18.1807, 0.59 ) }
    dend_22 { pt3dadd( 3.93237, -60.3724, -18.246, 0.37 ) }
    dend_22 { pt3dadd( 3.87328, -61.6902, -18.2732, 0.37 ) }
    dend_22 { pt3dadd( 3.86373, -62.9141, -18.3159, 0.52 ) }
    dend_22 { pt3dadd( 3.85879, -64.1539, -18.36, 0.44 ) }
    dend_22 { pt3dadd( 3.92198, -65.4471, -18.4116, 0.44 ) }
    dend_22 { pt3dadd( 4.10687, -66.5215, -18.4379, 0.44 ) }
    dend_22 { pt3dadd( 4.39162, -67.3553, -18.4413, 0.88 ) }
    dend_22 { pt3dadd( 4.84399, -68.3871, -18.4771, 0.44 ) }
    dend_22 { pt3dadd( 5.43728, -78.1616, -21.2965, 0.44 ) }
    dend_22 { pt3dadd( 4.55445, -88.0232, -23.7446, 0.44 ) }
    dend_22 { pt3dadd( 2.99527, -97.569, -26.9418, 0.44 ) }
    dend_22 { pt3dadd( 1.38417, -107.073, -30.2313, 0.44 ) }
    dend_22 { pt3dadd( -1.34366, -116.572, -32.7093, 0.44 ) }
    dend_22 { pt3dadd( -5.25728, -125.638, -35.1567, 0.44 ) }
    dend_22 { pt3dadd( -8.18523, -135.141, -37.3784, 0.44 ) }
    dend_22 { pt3dadd( -9.61333, -144.889, -40.0031, 0.44 ) }
    dend_22 { pt3dadd( -9.86953, -155.01, -41.3235, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_63, dend_52, dend_51, dend_48, dend_45, dend_40, dend_37, dend_18, dend_15, dend_14, dend_9, dend_0, dend_67, dend_64, dend_60, dend_53, dend_50, dend_49, dend_47, dend_46, dend_42, dend_41, dend_39, dend_38, dend_26, dend_19, dend_17, dend_16, dend_11, dend_10, dend_6, dend_1, dend_66, dend_65, dend_62, dend_61, dend_55, dend_54, dend_44, dend_43, dend_32, dend_27, dend_25, dend_20, dend_13, dend_12, dend_8, dend_7, dend_5, dend_2, dend_57, dend_56, dend_34, dend_33, dend_31, dend_28, dend_24, dend_21, dend_4, dend_3, dend_59, dend_58, dend_36, dend_35, dend_30, dend_29, dend_23, dend_22]}
    ModelViewParmSubset_2 = new SectionList()
    dend_63 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_63, dend_52, dend_51, dend_48, dend_45, dend_40, dend_37, dend_18, dend_15, dend_14, dend_9, dend_0, dend_67, dend_64, dend_60, dend_53, dend_50, dend_49, dend_47, dend_46, dend_42, dend_41, dend_39, dend_38, dend_26, dend_19, dend_17, dend_16, dend_11, dend_10, dend_6, dend_1, dend_66, dend_65, dend_62, dend_61, dend_55, dend_54, dend_44, dend_43, dend_32, dend_27, dend_25, dend_20, dend_13, dend_12, dend_8, dend_7, dend_5, dend_2, dend_57, dend_56, dend_34, dend_33, dend_31, dend_28, dend_24, dend_21, dend_4, dend_3, dend_59, dend_58, dend_36, dend_35, dend_30, dend_29, dend_23, dend_22]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_63, dend_52, dend_51, dend_48, dend_45, dend_40, dend_37, dend_18, dend_15, dend_14, dend_9, dend_0, axon_0, dend_67, dend_64, dend_60, dend_53, dend_50, dend_49, dend_47, dend_46, dend_42, dend_41, dend_39, dend_38, dend_26, dend_19, dend_17, dend_16, dend_11, dend_10, dend_6, dend_1, axon_1, dend_66, dend_65, dend_62, dend_61, dend_55, dend_54, dend_44, dend_43, dend_32, dend_27, dend_25, dend_20, dend_13, dend_12, dend_8, dend_7, dend_5, dend_2, dend_57, dend_56, dend_34, dend_33, dend_31, dend_28, dend_24, dend_21, dend_4, dend_3, dend_59, dend_58, dend_36, dend_35, dend_30, dend_29, dend_23, dend_22]}
    ModelViewParmSubset_5 = new SectionList()
    dend_63 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_51 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_45 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_14 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_67 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_50 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_49 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_46 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_42 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_41 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_39 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_38 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_16 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_10 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_66 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_62 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_54 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_44 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_43 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_27 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_25 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_13 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_8 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_7 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_5 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_56 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_33 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_31 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_24 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_4 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_3 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_59 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_30 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_23 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_22 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_63 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_18 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_0 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_37 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_9 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_15 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_48 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_1 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_26 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_6 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_19 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_40 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_32 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_2 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_20 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_64 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_52 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_34 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_11 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_17 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_53 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_21 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_55 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_60 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_36 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_35 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_65 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_12 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_47 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_57 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_61 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_28 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_58 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_29 OneSecGrp_SectionRef_69.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_63, dend_63, dend_63, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_36, dend_36, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_51 nseg = 7
    dend_45 nseg = 3
    dend_14 nseg = 9
    dend_67 nseg = 5
    dend_50 nseg = 11
    dend_49 nseg = 3
    dend_46 nseg = 3
    dend_42 nseg = 3
    dend_41 nseg = 3
    dend_39 nseg = 7
    dend_38 nseg = 7
    dend_16 nseg = 3
    dend_10 nseg = 3
    dend_66 nseg = 3
    dend_62 nseg = 3
    dend_54 nseg = 3
    dend_44 nseg = 3
    dend_43 nseg = 3
    dend_27 nseg = 3
    dend_25 nseg = 9
    dend_13 nseg = 5
    dend_8 nseg = 3
    dend_7 nseg = 5
    dend_5 nseg = 9
    dend_56 nseg = 5
    dend_33 nseg = 3
    dend_31 nseg = 3
    dend_24 nseg = 5
    dend_4 nseg = 5
    dend_3 nseg = 5
    dend_59 nseg = 5
    dend_30 nseg = 3
    dend_23 nseg = 7
    dend_22 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_SBC_1fa95380bf_0_0


