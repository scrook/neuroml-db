// Cell: cACint209_L5_DBC_189fcfd9e0_0_0
/*
{
  "id" : "cACint209_L5_DBC_189fcfd9e0_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.29416, -10.039, 0.0, 3.29577", "-2.90858, -8.93717, 0.0, 5.95579", "-2.523, -7.83528, 0.0, 9.15271", "-2.13742, -6.7334, 0.0, 11.3921", "-1.75184, -5.63152, 0.0, 12.7837", "-1.36626, -4.52964, 0.0, 13.7064", "-0.980683, -3.42776, 0.0, 14.2605", "-0.595104, -2.32587, 0.0, 14.5213", "-0.209524, -1.22399, 0.0, 14.7821", "0.176055, -0.122111, 0.0, 14.8675", "0.561635, 0.979771, 0.0, 14.5727", "0.947214, 2.08165, 0.0, 14.1", "1.33279, 3.18354, 0.0, 13.169", "1.71837, 4.28542, 0.0, 12.1705", "2.10395, 5.3873, 0.0, 11.0272", "2.48953, 6.48918, 0.0, 9.72958", "2.87511, 7.59106, 0.0, 8.28215", "3.26069, 8.69295, 0.0, 6.88757", "3.64627, 9.79483, 0.0, 5.52197", "4.03185, 10.8967, 0.0, 3.91408", "4.41743, 11.9986, 0.0, 2.33646" ]
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-1.37545, -9.44466, 9.67, 2.76", "-1.66732, -11.662, 9.77205, 2.76", "-2.16079, -14.5108, 9.79065, 2.76", "-2.64694, -16.8917, 9.76822, 2.76", "-3.41113, -20.2313, 9.70987, 2.16", "-4.13279, -23.3296, 9.71239, 2.16", "-5.17901, -27.6972, 9.76373, 1.92", "-6.2145, -31.4775, 9.83989, 1.92", "-6.75498, -33.2798, 9.88104, 1.92", "-7.98072, -37.2111, 9.98389, 1.92", "-8.75043, -39.5903, 10.0575, 1.56", "-9.70533, -42.6894, 10.1717, 1.56", "-10.4184, -45.1967, 10.2846, 1.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999988276266909
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "6.36455, 4.37784, -1.63, 2.16", "7.29211, 3.55104, -1.98327, 2.16", "9.62715, 1.50574, -3.03684, 1.8", "11.3744, -0.0742548, -3.83913, 1.56", "12.6167, -1.21682, -4.31054, 1.56", "13.7431, -2.28233, -4.67857, 1.56", "16.829, -5.26056, -5.56952, 1.2", "18.8369, -7.22036, -6.02118, 1.2", "20.2397, -8.59156, -6.25074, 1.2", "22.115, -10.454, -6.45023, 1.2", "23.1013, -11.4629, -6.53465, 1.44", "23.7468, -12.1839, -6.54303, 1.44", "25.0056, -13.8246, -6.18549, 1.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999988276266909
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "5.61455, 10.1538, 0.0, 2.4", "6.98587, 13.6071, -0.360131, 1.8", "8.54983, 17.9785, -0.79774, 1.2", "9.81072, 21.5028, -1.15055, 1.2", "11.6101, 26.5324, -1.65403, 1.2", "13.3182, 31.3065, -2.13195, 1.68", "14.2025, 33.7783, -2.3794, 1.68", "15.3202, 37.1819, -2.77339, 1.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999988276266909
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "3.41455, 10.8758, 0.29, 2.4", "2.96794, 12.5693, 0.400815, 2.4", "2.17024, 17.2662, 0.401976, 1.44", "1.94463, 19.0885, 0.363084, 1.44", "1.77907, 20.7083, 0.276207, 1.44", "1.64003, 22.211, 0.17276, 1.44", "1.31308, 26.9371, 0.278265, 1.44", "1.07433, 32.1313, 0.75036, 1.44", "1.02288, 34.2238, 1.04881, 1.44", "0.974366, 36.056, 1.37466, 1.44", "0.75128, 40.3734, 2.39814, 1.32", "-0.01301, 49.8163, 5.03497, 1.44", "-0.331653, 52.7348, 5.97214, 1.44", "-0.576462, 54.6386, 6.68002, 1.44", "-0.717457, 55.5998, 7.05054, 1.44", "-1.61179, 61.1367, 9.15983, 1.8", "-2.36272, 65.2497, 10.4934, 1.08", "-2.59287, 66.4096, 10.6906, 1.08", "-2.83511, 67.7975, 10.8187, 1.08", "-3.11934, 69.5633, 10.8073, 1.08", "-3.56287, 72.4562, 10.6782, 1.08", "-3.81631, 74.5801, 10.5052, 1.08", "-4.2119, 78.6837, 10.3354, 1.44", "-4.30246, 79.9736, 10.3433, 1.44", "-4.44768, 82.8564, 10.5365, 1.44", "-4.5611, 88.0915, 10.9291, 0.84", "-4.58248, 90.5153, 11.1832, 0.84", "-4.5914, 91.7239, 11.3327, 0.84", "-4.65014, 95.3691, 11.7788, 0.84", "-4.65222, 97.5039, 12.0349, 1.08", "-4.61328, 102.896, 12.6461, 1.68", "-4.52394, 107.664, 12.9085, 0.84", "-4.50087, 109.883, 12.9921, 0.84", "-4.4928, 111.177, 13.0313, 0.84", "-4.46359, 117.589, 13.2449, 1.56", "-4.47041, 122.242, 13.4443, 0.96", "-4.4766, 126.047, 13.7371, 0.96", "-4.45553, 128.352, 13.896, 0.96", "-4.41767, 130.327, 13.9707, 0.96", "-4.38933, 131.497, 13.9765, 0.96", "-4.23712, 136.976, 13.6181, 1.44", "-4.14766, 138.417, 13.4684, 1.44", "-4.04177, 139.871, 13.3007, 1.44", "-3.63853, 144.532, 12.7275, 0.96", "-3.48977, 146.17, 12.5193, 0.96", "-3.14446, 149.74, 12.0476, 1.44", "-2.87959, 152.124, 11.7495, 1.44", "-2.54685, 155.354, 11.4373, 0.96", "-2.37796, 157.209, 11.337, 0.96", "-2.21864, 159.274, 11.3379, 0.96", "-2.13601, 160.578, 11.3789, 0.96", "-1.9665, 164.576, 11.6106, 1.44", "-1.90787, 166.322, 11.6986, 1.44", "-1.78647, 169.32, 11.7495, 0.84", "-1.7188, 171.208, 11.7197, 0.84", "-1.64494, 173.743, 11.6284, 1.44", "-1.5307, 178.152, 11.3899, 0.84", "-1.46882, 180.37, 11.2239, 0.84", "-1.37357, 182.305, 11.0445, 0.84", "-1.26335, 183.74, 10.8847, 0.84", "-1.07897, 185.563, 10.652, 0.84", "-0.894042, 187.074, 10.4339, 0.84", "-0.681662, 188.675, 10.2382, 0.84", "-0.462671, 190.281, 10.1095, 0.84", "-0.288254, 191.681, 10.0427, 0.84", "-0.214273, 192.557, 10.0103, 0.84", "-0.108552, 194.012, 10.008, 0.84", "0.32248, 200.228, 9.74544, 1.44", "0.739381, 206.585, 9.25014, 0.72", "1.07859, 212.034, 8.87495, 0.72", "1.46042, 218.846, 8.53726, 1.08", "1.72157, 224.321, 8.37828, 1.44", "2.04279, 231.963, 8.35142, 0.72", "2.13832, 235.014, 8.3518, 0.72", "2.25664, 240.231, 8.34399, 1.2", "2.3951, 244.82, 8.26991, 0.72", "2.51304, 248.051, 8.28216, 0.72", "2.58813, 251.352, 8.3309, 1.2", "2.69367, 256.705, 8.76871, 0.96", "2.7506, 258.764, 8.88603, 0.96", "2.93597, 263.528, 8.63132, 1.44", "3.20346, 267.902, 8.10798, 0.96" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999988276266909,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-7.02545, -1.46466, 5.97, 2.16", "-8.61504, -0.971146, 6.0107, 2.16", "-10.9864, -0.131624, 5.87059, 1.92", "-13.0844, 0.545169, 6.02481, 1.56", "-15.5659, 1.34566, 6.20722, 1.08", "-17.1731, 1.86413, 6.32537, 1.56", "-19.5402, 2.62773, 6.49937, 2.52", "-21.518, 3.38649, 6.57144, 2.52", "-25.7046, 5.35687, 6.3687, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999988276266909
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.08545, 4.87184, 3.55, 2.28", "-5.86084, 6.29578, 4.33402, 2.28", "-7.99416, 7.8322, 5.42947, 2.28", "-11.2343, 10.1658, 7.09331, 1.8", "-15.0224, 12.8939, 9.03848, 1.44", "-16.9898, 14.3108, 10.0487, 1.08", "-19.324, 15.9919, 11.2474, 1.08", "-23.0473, 18.3917, 13.2765, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999988276266909
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.41743, 11.9986, 0.0, 0.48", "9.37179, 26.1568, 0.0, 0.48", "14.3261, 40.315, 0.0, 0.48" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-10.4184, -45.1967, 10.2846, 0.6", "-10.253, -47.4336, 10.3508, 0.6", "-9.99011, -50.6088, 10.4493, 0.6", "-9.5892, -55.446, 10.6014, 1.08", "-9.39393, -57.9149, 10.6786, 1.08", "-9.1235, -61.3077, 10.7858, 0.48", "-8.77214, -65.5442, 10.9216, 1.2", "-8.66056, -66.8165, 11.021, 1.2", "-8.34412, -70.5509, 11.473, 0.6", "-8.16382, -72.8829, 11.8478, 0.6", "-8.00767, -75.188, 12.2812, 0.6", "-7.98752, -75.6567, 12.3769, 0.6", "-7.90282, -80.6767, 13.416, 1.8", "-7.89822, -83.5461, 13.9837, 1.8", "-7.92846, -86.2057, 14.4708, 1.8", "-7.98777, -88.5271, 14.8309, 1.8", "-8.13139, -91.8689, 15.2319, 1.32", "-8.29216, -94.9096, 15.4724, 1.92", "-8.36465, -96.3372, 15.5018, 1.92", "-8.45888, -98.9268, 15.5685, 1.08", "-8.57375, -101.55, 15.7708, 0.84", "-8.66991, -103.441, 15.8725, 0.84", "-8.74143, -104.944, 16.0227, 1.32", "-8.88698, -107.058, 16.2782, 1.32", "-8.98828, -108.444, 16.4596, 1.32", "-9.34235, -112.894, 17.0919, 1.8", "-9.77811, -118.023, 17.8716, 1.08", "-10.2457, -123.032, 18.6623, 0.72", "-10.9067, -129.076, 19.6233, 2.04" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-10.4184, -45.1967, 10.2846, 0.96", "-11.8284, -47.411, 11.627, 0.96", "-12.3549, -48.4769, 11.9899, 0.96", "-13.6916, -51.3536, 12.4308, 0.96", "-14.2808, -52.7554, 12.5001, 0.96", "-14.8313, -54.118, 12.5035, 0.96", "-15.8303, -56.4502, 12.4337, 0.96", "-17.647, -60.6918, 12.2419, 0.96", "-18.4746, -62.5418, 11.9809, 1.44", "-19.7933, -65.1646, 11.2294, 0.72", "-20.5274, -66.3592, 10.8006, 0.72", "-21.5054, -67.716, 10.1509, 1.2", "-22.666, -69.0974, 9.35106, 0.48", "-24.6739, -71.1019, 8.038, 0.48", "-26.4681, -72.6735, 6.9131, 1.08", "-28.3355, -74.1573, 5.60056, 0.6", "-30.5552, -75.8734, 3.91207, 1.56", "-31.8277, -76.7993, 2.88676, 0.72", "-34.2493, -78.3573, 0.911917, 1.8", "-37.0612, -79.9058, -1.19449, 0.84", "-40.4609, -81.6044, -3.62949, 0.48", "-42.3891, -82.4237, -4.86986, 1.56", "-45.0304, -83.412, -6.30177, 0.72", "-47.5019, -84.292, -7.50004, 1.44", "-50.4579, -85.3696, -8.67571, 0.48", "-51.7994, -85.8414, -9.1998, 0.48", "-54.0982, -86.5792, -9.74501, 1.08", "-55.7439, -87.1233, -9.98785, 0.48", "-57.3769, -87.7832, -10.0248, 1.08", "-59.3751, -88.8103, -9.79652, 0.6" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "25.0056, -13.8246, -6.18549, 1.8", "26.3182, -15.5927, -5.54548, 1.8", "27.157, -16.7226, -5.13645, 1.8" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "25.0056, -13.8246, -6.18549, 1.08", "26.6375, -13.5509, -4.95905, 1.08", "27.6358, -13.3682, -4.16856, 1.08", "28.2701, -13.2522, -3.66628, 1.08", "28.8896, -13.1388, -3.17579, 1.08", "31.1321, -12.7285, -1.40014, 0.84", "32.7706, -12.4287, -0.102731, 1.32", "32.9587, -12.3828, 0.0686061, 1.32" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "15.3202, 37.1819, -2.77339, 1.2", "18.7502, 37.0244, -0.167038, 1.2", "22.3991, 36.7205, 2.18215, 1.2", "27.175, 36.1344, 4.90512, 1.2", "31.275, 35.4833, 7.03476, 1.2", "37.4737, 34.3157, 10.0106, 1.8", "41.9138, 33.3669, 12.0, 1.32", "46.5665, 32.2245, 13.6753, 0.96", "49.6298, 31.4148, 14.4918, 0.96", "52.2343, 30.7202, 14.9218, 0.96", "56.2719, 29.6421, 15.4109, 0.84", "59.0456, 28.8655, 15.6639, 0.84", "62.9299, 27.7441, 16.118, 1.32", "66.7371, 26.6234, 16.9266, 0.96", "69.3113, 25.9244, 17.5075, 1.44", "72.9831, 24.9732, 18.4036, 1.32", "74.6367, 24.518, 18.8652, 1.32", "77.2622, 23.6423, 19.8812, 1.08", "79.2743, 22.476, 21.2725, 0.96" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "15.3202, 37.1819, -2.77339, 1.2", "15.279, 38.118, -2.69191, 1.2", "15.1544, 41.245, -2.45388, 1.2", "14.991, 45.3442, -2.14185, 1.2", "14.797, 50.2093, -1.77153, 0.96", "14.7059, 52.4964, -1.59743, 0.96", "14.5114, 57.3751, -1.22607, 1.2", "14.4186, 59.5928, -1.10603, 1.2" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "3.20346, 267.902, 8.10798, 0.72", "-4.75794, 269.967, 8.87714, 0.72", "-9.27327, 271.138, 9.31337, 0.72", "-11.2107, 271.64, 9.50055, 0.72", "-14.0158, 272.368, 9.77156, 1.08", "-17.6585, 273.313, 10.1235, 1.08", "-19.2641, 273.729, 10.2786, 1.08" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "3.20346, 267.902, 8.10798, 0.96", "4.69254, 268.179, 6.89895, 0.96", "6.94305, 268.855, 5.10409, 0.96", "7.79925, 269.179, 4.55903, 0.96", "12.1572, 271.43, 3.00715, 0.96", "13.7226, 272.321, 2.71573, 0.96", "15.4346, 273.145, 2.63412, 0.96", "18.8159, 274.357, 2.77668, 0.96", "23.7872, 275.602, 3.28188, 0.96", "29.0101, 276.173, 3.36872, 0.6", "30.1156, 276.245, 3.49769, 0.6", "35.4213, 276.15, 4.01289, 1.08", "39.4431, 275.382, 4.00386, 1.44", "42.5326, 274.146, 3.4146, 1.2", "46.9106, 271.824, 1.55669, 0.84" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-23.0473, 18.3917, 13.2765, 1.2", "-23.9693, 17.2123, 13.9262, 1.2", "-25.3629, 15.4297, 14.9081, 1.2", "-26.1275, 14.4515, 15.4469, 1.2" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-23.0473, 18.3917, 13.2765, 1.2", "-22.7546, 19.5738, 14.9734, 1.2", "-22.4591, 20.767, 16.6861, 1.2", "-22.1774, 21.9046, 18.3191, 1.2", "-22.082, 22.2901, 18.8724, 1.2" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "14.3261, 40.315, 0.0, 0.12", "19.2805, 54.4732, 0.0, 0.12", "24.2349, 68.6314, 0.0, 0.12" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-10.9067, -129.076, 19.6233, 0.84", "-10.8887, -131.676, 20.6541, 0.84", "-10.7758, -133.696, 21.4339, 0.84", "-10.6454, -134.886, 21.8641, 0.84", "-10.5547, -135.563, 22.0882, 0.84", "-10.0715, -138.811, 23.0994, 1.44", "-9.78845, -140.592, 23.6303, 1.44", "-9.34846, -143.049, 24.3293, 0.72", "-8.99182, -145.3, 24.9113, 0.72", "-8.70086, -147.294, 25.3623, 0.72", "-8.57542, -148.234, 25.5407, 0.72", "-8.48712, -148.889, 25.604, 0.72", "-8.02941, -152.249, 25.8109, 1.44", "-7.35307, -157.127, 25.9632, 0.72", "-7.12815, -158.821, 25.9713, 0.72", "-6.99115, -159.836, 25.9587, 0.72", "-6.40715, -164.201, 25.8518, 0.72", "-6.21028, -165.674, 25.7966, 0.72", "-5.93673, -167.598, 25.6906, 0.72", "-5.55723, -170.342, 25.4951, 1.44", "-5.32051, -173.0, 25.2661, 0.72", "-5.25153, -174.791, 25.1128, 0.72", "-5.28666, -176.01, 25.1083, 0.72", "-5.33554, -177.189, 25.1136, 0.72", "-5.41001, -179.131, 25.1077, 0.72", "-5.66078, -182.954, 25.2391, 1.44", "-5.76237, -184.143, 25.3136, 1.44", "-6.15921, -188.236, 25.667, 0.6", "-6.56418, -192.138, 26.1138, 1.2", "-7.06649, -196.678, 26.7411, 0.6", "-7.45406, -200.232, 27.3229, 1.08", "-7.62912, -201.885, 27.6367, 0.36", "-7.71474, -202.738, 27.7676, 0.36", "-8.09686, -206.148, 28.1029, 1.08", "-8.2626, -207.312, 28.2147, 1.08", "-8.53195, -209.227, 28.338, 0.36", "-8.71107, -211.004, 28.35, 1.68", "-9.00154, -214.518, 28.2691, 0.72", "-9.17832, -216.646, 28.1586, 0.72", "-9.25464, -217.641, 28.0822, 0.72", "-9.32246, -218.766, 27.9952, 0.72", "-9.42216, -221.274, 27.8106, 1.44", "-9.523, -223.472, 27.656, 1.44", "-9.64252, -225.244, 27.4326, 0.72", "-9.78378, -226.915, 27.1385, 0.72", "-9.91151, -227.832, 27.0073, 0.72", "-10.1471, -229.209, 26.7886, 0.72", "-10.7416, -231.843, 26.3228, 1.32", "-11.4868, -234.679, 25.8362, 0.84", "-11.9123, -236.195, 25.5437, 0.84", "-13.0489, -239.43, 24.8105, 0.48" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-10.9067, -129.076, 19.6233, 1.2", "-12.4299, -130.955, 18.9376, 1.2", "-13.4512, -132.261, 18.4125, 1.2", "-15.7671, -135.314, 17.098, 0.96", "-16.8532, -136.744, 16.6273, 1.44", "-18.8912, -139.494, 15.6871, 0.72", "-21.1291, -142.567, 14.6529, 0.72", "-21.9398, -143.726, 14.2608, 0.72", "-23.1013, -145.431, 13.6987, 1.2", "-25.9358, -149.602, 12.0143, 0.48", "-28.1641, -152.843, 10.5752, 0.96", "-30.2079, -155.796, 9.08262, 0.36", "-30.5113, -156.228, 8.84727, 0.36", "-31.8701, -158.095, 8.09323, 0.72", "-34.6443, -162.033, 7.32428, 0.72", "-36.56, -165.418, 7.01053, 1.2", "-37.7914, -168.322, 7.26939, 0.6", "-38.3489, -170.323, 7.63089, 0.6", "-41.035, -181.682, 10.6087, 0.6", "-41.6897, -185.447, 12.0867, 0.6", "-42.3211, -190.964, 15.1358, 1.08", "-42.329, -193.139, 16.5414, 0.36", "-42.2316, -194.477, 17.4922, 0.36" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "27.157, -16.7226, -5.13645, 1.8", "27.5856, -17.1956, -3.01134, 1.8", "27.8122, -17.4457, -1.88776, 1.8", "28.4481, -18.1476, 1.26545, 1.8" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "27.157, -16.7226, -5.13645, 1.44", "29.1911, -17.8759, -6.90616, 1.44", "30.4532, -18.6533, -7.93681, 1.44", "31.2708, -19.1675, -8.58555, 1.44", "34.911, -21.3728, -10.7912, 1.56", "36.2397, -22.1241, -11.3691, 1.56", "38.6393, -23.437, -12.3108, 1.8", "40.5603, -24.5063, -12.9753, 1.8", "42.9257, -25.7105, -13.6341, 1.32", "46.6986, -27.4594, -14.5331, 1.68", "49.1056, -28.5143, -15.1917, 1.32", "52.8011, -29.9688, -16.0756, 0.72", "54.8725, -30.6942, -16.4819, 0.72", "56.2671, -31.1081, -16.8083, 1.32", "59.0988, -31.6946, -17.6375, 0.96", "63.8065, -32.3384, -19.8837, 1.44", "69.5411, -32.6992, -23.6293, 0.6", "70.5716, -32.6625, -24.4908, 0.6", "72.4608, -32.4988, -26.3031, 1.08", "75.218, -32.1232, -29.3132, 1.56", "77.592, -31.5026, -32.3738, 1.2", "79.2089, -30.852, -35.1675, 1.2", "80.0527, -30.4605, -37.129, 1.2" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "32.9587, -12.3828, 0.0686061, 1.08", "35.3614, -11.9018, 0.0487747, 1.08", "36.3236, -11.6005, -0.45358, 1.08", "37.8085, -11.0601, -1.42015, 1.56", "40.5016, -10.0105, -3.32655, 1.08", "42.4156, -9.19195, -4.75548, 0.6", "47.3964, -6.68361, -8.80122, 0.6", "48.7059, -5.82985, -10.147, 1.2", "49.4152, -5.23878, -11.0031, 0.6", "49.9331, -4.67091, -11.7143, 1.08", "50.3481, -4.07886, -12.3822, 0.36", "51.1669, -2.63418, -13.6662, 1.44", "51.7803, -1.37225, -14.1807, 0.84", "52.1769, -0.455633, -14.4364, 1.32", "52.754, 0.955561, -14.7305, 0.72", "53.0414, 1.60345, -14.8298, 0.72", "53.442, 2.36254, -14.9333, 1.08", "54.251, 3.59913, -15.0715, 0.6", "55.1107, 4.72646, -15.2191, 1.2", "55.6131, 5.29961, -15.3031, 1.2", "56.6349, 6.31524, -15.4755, 0.72", "57.8663, 7.50512, -15.723, 1.08", "59.3865, 8.98533, -15.9598, 0.6", "59.7466, 9.35621, -15.9981, 0.6", "60.2957, 9.98053, -16.0257, 0.6", "62.0601, 12.2951, -15.9619, 1.08", "62.7031, 13.2535, -15.8646, 0.72", "63.7681, 14.9666, -15.5809, 1.2", "64.5482, 16.2949, -15.3312, 1.2", "65.0074, 17.0461, -15.183, 1.2", "65.8011, 18.2515, -14.9311, 0.72", "66.3724, 19.0161, -14.7498, 0.72", "67.3492, 20.0848, -14.4947, 0.72", "68.1139, 20.7618, -14.3393, 1.32", "69.7662, 21.9711, -13.9826, 0.96", "70.4381, 22.4074, -13.8342, 0.96", "71.1834, 22.8498, -13.6679, 1.44", "72.2827, 23.5274, -13.3839, 1.08", "73.408, 24.2458, -13.1639, 1.56", "74.7917, 25.1532, -12.9878, 0.96", "75.4745, 25.6166, -12.9623, 0.96", "75.9865, 25.9774, -12.9886, 1.56", "77.093, 26.7928, -13.1901, 0.96", "78.8677, 28.1772, -13.7323, 0.96", "79.4291, 28.6083, -13.8949, 0.96", "80.6023, 29.4273, -14.1682, 1.56", "81.5134, 30.0504, -14.3727, 0.84", "82.4903, 30.696, -14.4932, 1.44", "84.4496, 31.953, -14.4978, 0.72", "86.1822, 33.1389, -14.1264, 0.48", "86.9219, 33.677, -13.8481, 0.48", "88.3473, 34.7333, -13.0304, 1.68", "90.2155, 36.1104, -11.7677, 0.72", "91.1952, 36.8172, -10.9745, 0.72", "92.5735, 37.818, -9.61154, 1.32", "93.1147, 38.2598, -9.00649, 1.32", "93.9882, 39.0074, -7.75322, 0.72" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "32.9587, -12.3828, 0.0686061, 1.08", "36.5365, -15.306, -5.07161, 1.08", "37.3737, -15.9901, -6.27447, 1.08", "38.9237, -17.2565, -8.50128, 0.84", "39.6995, -17.8903, -9.61586, 0.84", "41.1858, -19.1048, -11.7514, 0.84", "42.2217, -19.9511, -13.2396, 1.32" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "14.4186, 59.5928, -1.10603, 0.96", "13.5227, 64.3686, -0.85, 0.96", "13.0166, 67.0664, -0.705369, 0.96", "12.1306, 71.7898, -0.452152, 1.2", "11.491, 75.1992, -0.269375, 1.92" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "14.4186, 59.5928, -1.10603, 0.96", "15.5249, 61.0789, -0.118202, 0.96", "17.7283, 63.7693, 1.56406, 0.84", "18.4063, 64.5596, 2.00157, 0.84", "21.205, 67.8282, 3.53306, 0.84", "22.233, 69.0467, 4.05232, 0.84", "24.6153, 71.8951, 5.19068, 0.84", "26.1217, 73.7038, 5.79281, 0.84", "28.3803, 76.3586, 6.56781, 0.84", "31.0838, 79.4927, 7.39775, 0.84", "33.4856, 82.272, 7.98968, 1.08", "34.2863, 83.2366, 8.19082, 1.08", "36.1078, 85.6337, 8.64528, 1.08" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-13.0489, -239.43, 24.8105, 0.72", "-13.61, -241.034, 24.8021, 0.72", "-14.3483, -242.981, 24.7816, 1.2", "-15.0035, -244.413, 24.7508, 1.2", "-15.7953, -246.178, 24.5567, 0.6", "-16.4339, -247.685, 24.3439, 0.6", "-17.3034, -249.87, 24.015, 0.6", "-17.7972, -251.257, 23.7561, 0.6", "-18.7827, -254.437, 23.0045, 1.2", "-20.0403, -258.353, 22.4278, 0.72", "-20.5152, -259.862, 22.1984, 0.72", "-21.1352, -262.015, 21.8742, 0.72", "-21.542, -263.675, 21.6403, 0.72", "-22.5407, -268.432, 21.0905, 1.32", "-23.597, -275.218, 20.7924, 0.84" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-13.0489, -239.43, 24.8105, 0.48", "-12.1297, -242.54, 24.5931, 0.48", "-11.8769, -243.46, 24.5632, 0.48", "-11.4217, -245.593, 24.5233, 0.48", "-11.23, -246.893, 24.4887, 0.48", "-11.1557, -248.249, 24.4208, 0.48", "-11.2144, -250.101, 24.299, 1.08", "-11.4778, -251.768, 24.1324, 1.08", "-12.1082, -254.141, 23.7082, 1.08", "-12.6898, -255.647, 23.2831, 1.08", "-14.0646, -258.404, 22.1148, 0.48", "-15.1378, -260.032, 21.0083, 0.48", "-15.9357, -261.0, 19.9802, 0.48", "-17.4606, -262.538, 17.6659, 1.44", "-18.2936, -263.244, 16.2131, 0.84", "-18.7317, -263.551, 15.3749, 0.84", "-20.0812, -264.312, 12.4276, 1.32", "-20.8793, -264.719, 10.4525, 0.72", "-21.4436, -265.007, 8.96726, 0.72", "-21.8029, -265.208, 8.06577, 0.72", "-22.3854, -265.633, 6.64571, 0.72" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-13.0489, -239.43, 24.8105, 0.84", "-11.7122, -243.988, 25.0438, 0.84", "-10.5977, -247.939, 25.3236, 2.16", "-9.05239, -253.654, 25.7951, 1.08", "-8.32339, -256.649, 26.0742, 0.84", "-7.90355, -258.817, 26.3569, 0.84", "-7.6202, -260.665, 26.4415, 0.84", "-7.53961, -262.753, 26.4871, 0.84", "-7.56716, -264.168, 26.4583, 0.84", "-7.66851, -266.121, 26.3384, 0.84", "-7.96574, -268.616, 26.2443, 0.84", "-9.34738, -276.387, 25.7808, 2.04", "-10.3654, -280.526, 25.4012, 0.96", "-10.6472, -281.608, 25.2456, 0.96", "-11.3879, -284.471, 24.7429, 0.96", "-11.8441, -286.272, 24.3813, 0.96", "-12.551, -289.244, 23.7554, 0.96", "-13.4769, -293.266, 23.0727, 1.68", "-14.2121, -297.667, 22.2701, 0.96", "-14.4193, -300.058, 21.9082, 0.96", "-14.3771, -301.848, 21.7241, 0.96", "-14.1643, -303.793, 21.7596, 1.32", "-13.5526, -306.693, 22.4908, 0.6", "-12.9267, -308.652, 23.5527, 0.96", "-12.0377, -310.864, 25.4042, 0.6", "-10.8898, -312.929, 27.6742, 1.08", "-9.54532, -314.719, 30.1673, 0.48", "-7.01392, -317.397, 34.7086, 0.48", "-6.01714, -318.282, 36.5296, 0.48", "-5.06139, -319.003, 38.3125, 0.48", "-3.66426, -319.891, 40.9989, 0.48", "-2.63572, -320.376, 42.8701, 0.48", "-2.04253, -320.563, 43.6711, 0.48" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "28.4481, -18.1476, 1.26545, 1.32", "28.1861, -18.9203, 2.12373, 1.32", "27.9104, -19.7078, 2.82722, 0.84", "27.7128, -20.3228, 3.31471, 0.84", "27.4967, -21.0479, 3.8555, 0.84", "26.9364, -23.0612, 5.29269, 1.32", "26.6596, -24.2447, 6.0449, 1.32", "26.318, -26.2131, 7.18566, 0.72", "26.1454, -27.4738, 7.85754, 0.72", "26.1018, -27.9108, 8.07291, 0.72", "26.0559, -28.4338, 8.31036, 0.72", "25.8383, -32.0341, 9.71484, 1.56", "25.8085, -32.8177, 10.0141, 1.56", "25.8222, -34.7005, 10.8346, 1.56", "25.8273, -35.6667, 11.2454, 1.92" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "28.4481, -18.1476, 1.26545, 0.72", "29.0347, -19.9541, 2.81283, 0.72", "29.1556, -20.3226, 3.13583, 0.72", "29.4279, -21.1024, 3.84107, 1.2", "30.1982, -23.2063, 5.70701, 0.84", "30.7523, -24.6319, 6.93035, 1.56", "31.3421, -26.053, 8.11517, 0.84", "32.0666, -27.7552, 9.53488, 1.44", "32.8184, -29.1057, 10.5786, 0.96", "33.4945, -29.9571, 11.1802, 0.96", "34.3034, -30.6182, 11.5816, 0.96", "34.9076, -30.9907, 11.7047, 0.96", "36.146, -31.5769, 11.7075, 0.84", "38.8771, -32.7074, 11.5691, 1.32", "41.6597, -33.7533, 11.3174, 0.6", "44.8394, -34.847, 10.9648, 1.2", "49.1097, -36.2183, 10.3997, 0.48", "52.4105, -37.226, 9.87471, 0.96" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "11.491, 75.1992, -0.269375, 1.2", "11.6612, 82.927, 2.43916, 1.2", "12.0889, 86.7314, 3.46455, 1.2", "12.5687, 89.2202, 4.09181, 1.2", "13.2981, 92.3578, 4.81967, 1.2", "14.0868, 95.4777, 5.45787, 0.96", "14.7032, 98.2386, 5.94685, 0.96", "15.2906, 100.749, 6.16336, 0.96", "16.4983, 106.251, 6.62103, 0.96", "17.0103, 109.1, 6.84094, 0.96", "17.4292, 112.079, 7.06873, 0.96", "18.038, 117.613, 7.48235, 0.84", "18.2735, 120.3, 7.66436, 0.84", "18.5619, 125.343, 7.95976, 0.84", "18.663, 129.238, 8.12605, 0.84", "18.6381, 132.477, 8.24471, 0.84", "18.5045, 136.457, 8.37408, 0.84", "18.3341, 140.174, 8.46924, 0.84", "18.0755, 144.132, 8.54724, 0.84", "17.6363, 149.236, 8.61942, 0.84", "16.694, 159.091, 8.69389, 0.84", "16.1166, 164.382, 8.69306, 0.84", "15.8153, 166.823, 8.677, 0.84", "15.5565, 168.843, 8.65945, 0.84", "15.2449, 171.168, 8.67163, 0.84", "14.7859, 173.971, 8.74437, 0.84", "14.2876, 176.742, 8.87819, 0.84", "13.6738, 179.885, 9.05173, 0.84", "13.1452, 182.38, 9.19781, 0.84", "11.7693, 188.701, 9.56936, 0.72", "10.9712, 192.366, 9.7814, 0.72", "10.4025, 195.564, 9.92991, 0.72", "10.0205, 198.409, 10.0345, 0.72", "9.65114, 202.245, 10.2175, 1.2", "9.43651, 205.523, 10.4307, 1.2", "9.33436, 209.238, 10.7104, 0.96", "9.26846, 215.976, 11.3332, 1.44", "9.26713, 218.529, 11.5989, 1.44", "9.34928, 222.33, 11.9631, 1.2", "9.46731, 224.955, 12.1182, 1.2", "9.68471, 229.458, 12.2348, 1.2", "9.80515, 231.794, 12.2487, 1.2", "9.88231, 233.241, 12.2579, 1.2", "10.082, 236.563, 12.2584, 1.56", "10.5792, 244.62, 12.2038, 0.84", "10.7963, 248.445, 12.2049, 0.84", "11.1954, 255.64, 12.3735, 1.32", "11.5949, 262.628, 12.6937, 0.96", "11.7416, 265.14, 12.8701, 0.96", "11.9189, 268.032, 13.1603, 0.96", "12.0254, 269.456, 13.3291, 0.96", "12.5038, 274.286, 13.8366, 0.96", "12.9039, 277.203, 14.1394, 0.96", "13.2706, 279.536, 14.3046, 0.96", "13.8491, 282.927, 14.475, 0.96", "14.3362, 285.65, 14.5574, 0.96", "14.7429, 287.95, 14.5464, 0.96", "15.6063, 293.119, 14.3346, 0.96", "16.3287, 297.735, 14.0551, 0.96", "17.1079, 303.217, 13.739, 0.96", "17.5289, 306.897, 13.4147, 0.96", "17.8828, 311.637, 12.829, 1.44", "18.085, 317.233, 11.9856, 0.96", "18.0728, 321.036, 11.302, 0.72", "17.9131, 326.256, 10.302, 1.2", "17.6714, 331.471, 9.40418, 1.2", "17.4381, 335.627, 8.95742, 1.2", "17.2058, 339.136, 8.75116, 1.56", "16.8844, 344.328, 8.63848, 1.68", "16.5656, 349.537, 8.5288, 1.08", "15.9411, 358.992, 8.72171, 1.44", "15.3974, 369.062, 9.30258, 0.84", "15.2919, 371.401, 9.48949, 0.84", "15.0112, 377.374, 10.0578, 1.44", "14.6724, 384.079, 10.8617, 0.6", "14.195, 391.369, 11.877, 1.08" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "11.491, 75.1992, -0.269375, 0.96", "12.1174, 77.785, -1.34983, 0.96", "12.542, 79.8852, -2.01021, 0.96", "13.3812, 84.5506, -3.21542, 0.96", "13.6987, 86.564, -3.65803, 1.32", "13.8543, 87.8092, -3.88046, 1.32", "14.211, 91.6847, -4.44073, 0.96", "14.2833, 94.1195, -4.67469, 0.96", "14.274, 95.5239, -4.67677, 0.96", "14.2625, 97.0321, -4.54412, 0.96", "14.2805, 98.981, -4.51299, 0.96", "14.3014, 101.189, -4.58479, 0.96", "14.335, 102.293, -4.68465, 0.96", "14.438, 103.958, -4.88207, 0.96", "14.7738, 107.775, -5.41711, 1.44", "15.5354, 114.117, -6.41067, 1.2", "15.7714, 115.669, -6.67553, 1.2", "16.3993, 119.535, -7.34819, 1.08", "16.7576, 121.863, -7.7377, 1.08", "16.9047, 122.923, -7.90161, 1.08", "17.216, 125.402, -8.22739, 1.08", "17.4782, 127.709, -8.39144, 1.08", "17.6263, 130.705, -8.4972, 1.08", "17.4894, 133.251, -8.40611, 1.08", "17.1851, 135.323, -8.29344, 1.08", "16.8559, 136.83, -8.18701, 1.08", "16.1949, 139.183, -7.98954, 1.08", "15.1296, 142.734, -7.65536, 1.56", "14.1238, 146.111, -7.23911, 0.84", "13.5616, 148.122, -6.97028, 0.84", "12.9313, 150.536, -6.61637, 0.84", "12.4975, 152.489, -6.33256, 0.84", "11.7351, 156.935, -5.7242, 1.2", "11.3161, 160.311, -5.30739, 0.96", "11.127, 162.459, -5.05292, 0.96", "10.9603, 165.301, -4.66798, 1.2", "10.7413, 169.696, -4.06333, 0.84", "10.6124, 172.193, -3.73214, 0.84", "10.5444, 173.364, -3.61948, 0.84", "10.5007, 174.144, -3.59508, 0.84", "10.4248, 175.517, -3.58123, 0.84", "10.27, 179.056, -3.61084, 0.72", "10.2091, 180.679, -3.62562, 1.32", "10.0393, 184.252, -3.57168, 0.96", "9.96013, 186.616, -3.49897, 0.96", "9.9125, 188.753, -3.41215, 0.96", "9.90099, 190.228, -3.34415, 0.96", "10.0033, 194.376, -3.13591, 1.32", "10.1801, 197.965, -2.9053, 0.72", "10.4193, 201.459, -2.61899, 0.72", "10.7136, 205.203, -2.30721, 0.72", "10.8277, 206.557, -2.22287, 0.72", "11.041, 208.913, -2.10704, 0.72", "11.232, 210.794, -2.04016, 0.72", "11.4109, 212.355, -2.02052, 0.72", "11.5565, 213.919, -1.9986, 0.72", "11.6879, 215.512, -1.97481, 0.72", "11.7584, 216.765, -1.92639, 0.72", "11.8398, 218.982, -1.75078, 0.72", "11.8718, 220.677, -1.55109, 0.72", "11.8828, 222.126, -1.30967, 0.72", "11.9767, 223.538, -0.902339, 0.72", "12.1979, 225.239, -0.215317, 0.72", "12.3591, 226.179, 0.247239, 0.72", "12.4565, 226.682, 0.492376, 0.72", "12.5642, 227.246, 0.733569, 0.72", "13.2018, 230.824, 2.07711, 1.32", "13.3507, 231.796, 2.39946, 0.84", "13.9485, 236.329, 3.6626, 0.84", "14.3713, 239.943, 4.50405, 0.84", "14.85, 244.443, 5.39388, 1.2", "15.0155, 246.218, 5.66379, 1.2", "15.1035, 247.415, 5.78176, 1.2", "15.2771, 249.37, 5.98, 1.2", "15.5149, 251.518, 6.17763, 1.2", "15.632, 252.514, 6.26941, 1.2", "15.8575, 254.507, 6.43345, 1.2", "16.0874, 256.454, 6.58562, 1.2", "16.7532, 263.02, 7.15242, 1.2", "17.0756, 266.711, 7.4813, 1.68", "17.483, 271.962, 7.94042, 1.08", "17.873, 277.572, 8.4086, 1.56", "18.0303, 280.105, 8.60655, 1.56", "18.2833, 284.256, 8.92838, 1.44", "18.5267, 288.253, 9.21907, 1.44", "18.7336, 291.787, 9.52091, 1.44", "18.9429, 294.959, 9.86004, 1.44", "19.0782, 296.959, 10.0604, 1.44", "19.3221, 300.857, 10.5039, 1.44", "19.435, 302.457, 10.6963, 1.44", "19.5394, 304.291, 10.9743, 1.44", "19.6298, 306.48, 11.3605, 1.44", "19.5494, 310.281, 11.8408, 0.84", "19.4298, 313.392, 12.2065, 0.84", "19.2941, 315.31, 12.3864, 0.84", "19.1273, 317.125, 12.5335, 0.84", "18.9309, 318.673, 12.6247, 0.84", "17.9228, 324.309, 12.7219, 1.2" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "36.1078, 85.6337, 8.64528, 0.96", "38.4047, 86.5953, 8.14588, 0.96", "39.9459, 87.6177, 7.83909, 0.96", "41.0242, 88.5452, 7.64448, 0.96", "42.3645, 89.9502, 7.42977, 0.96", "44.249, 92.2623, 7.16278, 0.96", "45.1364, 93.5061, 7.05857, 0.96", "46.6812, 96.6043, 6.97056, 1.2", "47.0566, 97.6731, 6.98296, 1.2", "47.354, 98.8915, 7.03559, 0.6", "47.5471, 99.9496, 7.10307, 0.6", "47.8223, 101.985, 7.37003, 1.08", "48.0081, 103.391, 7.5814, 0.36", "48.1269, 104.241, 7.7222, 0.36", "48.4041, 106.252, 8.07342, 0.84", "48.6183, 108.062, 8.41543, 0.84", "48.9025, 111.027, 9.0092, 1.44", "48.9921, 112.193, 9.27616, 1.44", "49.0901, 113.455, 9.58657, 0.84", "49.1814, 115.039, 9.94249, 0.84", "49.2513, 117.056, 10.3564, 1.32", "49.2638, 118.185, 10.5801, 1.32", "49.3057, 119.902, 10.8613, 1.08", "49.3176, 120.605, 10.9732, 1.08", "49.4021, 123.225, 11.3517, 1.56", "49.426, 123.948, 11.4353, 1.56" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "36.1078, 85.6337, 8.64528, 1.08", "36.5041, 88.6363, 8.74286, 1.08", "36.7904, 90.7279, 8.75044, 1.08", "37.1351, 93.4608, 8.84841, 1.08", "37.4994, 96.7082, 9.03338, 0.84", "38.1662, 102.998, 9.45193, 1.56", "38.848, 108.949, 9.93807, 1.2", "39.3807, 113.762, 10.3433, 1.08", "39.8717, 118.52, 10.7137, 1.32", "40.1234, 121.593, 10.8642, 0.96", "40.2645, 124.349, 10.9886, 1.32", "40.3461, 127.881, 11.118, 1.08", "40.3896, 134.021, 11.3215, 0.84", "40.3667, 136.466, 11.4014, 0.84", "40.2348, 144.704, 11.4435, 1.08", "40.0927, 149.791, 11.4432, 1.08", "39.9332, 152.799, 11.4505, 0.96", "39.3615, 159.233, 11.4982, 1.2" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "25.8273, -35.6667, 11.2454, 0.84", "26.5061, -38.2066, 12.5576, 0.84", "26.9674, -39.8999, 13.4193, 0.84", "27.5261, -41.9885, 14.518, 1.44", "28.0632, -43.979, 15.5817, 1.08", "28.5899, -45.978, 16.6724, 0.48", "29.6747, -50.0952, 18.9189, 1.2", "30.0834, -51.5428, 19.7068, 1.2", "30.6747, -53.6346, 20.8396, 1.2", "31.1152, -55.223, 21.7025, 1.2", "31.5776, -57.0188, 22.7043, 1.8" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "25.8273, -35.6667, 11.2454, 0.96", "28.5074, -38.3709, 12.4752, 0.96", "29.6714, -39.7687, 13.0548, 0.96", "32.181, -42.6794, 14.4567, 1.56", "33.7817, -44.6777, 15.3507, 0.84", "35.7904, -47.1593, 16.5903, 1.32", "38.2332, -50.1599, 18.1593, 0.72", "40.6734, -53.1509, 19.9115, 1.2", "43.3974, -56.5712, 21.9818, 0.72", "45.8772, -59.8271, 24.0236, 1.44", "48.9923, -63.9455, 26.7048, 0.72", "49.534, -64.6411, 27.1923, 0.72", "51.0684, -66.5216, 28.6179, 1.32" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "31.5776, -57.0188, 22.7043, 1.2", "32.129, -58.6611, 23.683, 1.2", "33.1824, -59.8677, 25.2825, 0.72", "35.335, -61.7702, 28.5399, 1.92", "36.6017, -62.7691, 30.4596, 1.92", "37.6529, -63.6577, 32.0921, 1.2", "39.1703, -65.0364, 34.4849, 1.68", "44.5597, -69.979, 43.1623, 1.68", "46.2648, -71.7041, 45.9975, 2.28", "47.5751, -73.1871, 48.2756, 1.2", "48.8189, -74.8943, 50.5395, 1.2", "49.6128, -76.2845, 52.0848, 1.2", "50.8944, -79.3531, 54.8343, 1.8", "51.8756, -83.2776, 57.4749, 1.08", "52.2282, -84.7941, 58.4709, 1.08", "52.9794, -88.2128, 60.6804, 0.6", "53.5291, -90.673, 62.3516, 1.2", "53.9909, -93.0004, 63.9842, 1.2", "54.4475, -95.3596, 65.7858, 1.8", "54.9645, -97.8356, 67.9539, 0.72", "55.2795, -99.2227, 69.307, 0.72", "55.6882, -100.92, 71.1478, 0.72", "56.0778, -102.438, 72.9117, 0.72", "56.7509, -104.878, 75.8871, 1.8", "57.5223, -107.379, 78.9569, 0.84", "57.9871, -108.973, 80.8373, 0.84", "58.2768, -110.0, 81.9785, 0.84", "59.0568, -112.858, 85.0353, 1.44", "59.5279, -114.708, 86.9357, 0.72", "59.9592, -116.675, 88.8508, 0.72", "60.2227, -118.236, 90.2518, 0.72", "60.5538, -120.274, 92.0949, 1.2", "61.0801, -123.757, 95.2724, 0.6", "61.2838, -125.143, 96.5293, 0.6", "61.4184, -126.091, 97.3801, 0.6", "61.8346, -131.216, 101.587, 1.8", "61.9334, -133.821, 103.556, 0.96", "61.9409, -135.831, 104.953, 0.96", "61.8805, -138.525, 106.675, 0.96", "61.7684, -141.406, 108.49, 1.68", "61.5253, -145.695, 111.284, 0.84", "61.4015, -146.959, 112.19, 0.84", "61.3214, -147.516, 112.568, 0.84", "60.9744, -149.475, 113.945, 0.84", "60.6661, -150.867, 115.039, 0.84", "60.284, -153.059, 117.169, 1.44", "60.3135, -154.372, 119.112, 0.72" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "31.5776, -57.0188, 22.7043, 0.96", "32.9875, -58.3254, 23.3031, 0.96", "34.3832, -59.9797, 23.497, 1.44", "36.1831, -62.2764, 23.5262, 0.96", "37.6886, -64.0683, 23.4554, 0.96", "39.4314, -66.0387, 23.3522, 0.96", "42.1518, -69.0493, 23.1496, 0.6", "46.727, -74.0906, 22.9945, 1.2", "48.1623, -75.6348, 22.9848, 1.2", "51.3896, -79.0852, 22.8818, 1.44", "53.4217, -81.1216, 22.9685, 0.6", "55.2191, -82.7268, 23.3381, 1.08", "57.9813, -84.874, 24.572, 0.6", "59.2335, -85.8206, 25.6025, 0.6", "61.3154, -87.6643, 27.9733, 1.08", "63.2685, -90.0653, 31.2453, 0.6", "64.7493, -92.3614, 34.2647, 0.6", "65.453, -93.5786, 35.8978, 0.6", "66.426, -95.5955, 38.3825, 1.08", "66.9104, -96.6845, 39.7707, 1.08", "67.8345, -98.9729, 42.6596, 0.48", "68.14, -100.241, 43.642, 0.48" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "68.14, -100.241, 43.642, 0.84", "68.3743, -101.226, 43.9787, 0.84", "68.7183, -102.579, 44.5202, 0.84", "69.0922, -104.096, 45.0395, 1.44", "69.6602, -106.604, 45.8191, 0.6", "69.8882, -107.872, 46.1874, 0.6", "70.0276, -109.043, 46.5875, 0.6", "70.2084, -111.233, 47.1563, 0.6", "70.2588, -113.335, 47.4466, 1.08", "70.1497, -114.74, 47.4335, 0.6", "69.737, -116.243, 46.9907, 0.6", "68.7253, -118.823, 45.7258, 1.44", "66.6806, -122.582, 42.7526, 1.44", "65.9598, -123.543, 41.476, 1.44", "65.4556, -124.011, 40.4366, 0.96", "64.7157, -124.556, 38.5038, 1.44" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "68.14, -100.241, 43.642, 0.48", "71.3218, -99.7687, 42.9041, 0.48", "74.7957, -99.1713, 42.0641, 0.48", "76.4973, -98.8785, 41.6527, 0.48", "78.148, -98.5944, 41.2536, 0.48", "82.8872, -97.7788, 40.1077, 0.84", "88.3142, -96.8448, 38.7954, 1.32", "89.6151, -96.6745, 38.4693, 1.32" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "89.6151, -96.6745, 38.4693, 0.6", "92.0256, -96.2595, 38.7827, 0.6", "95.766, -95.8887, 39.3379, 0.6", "97.2125, -95.8296, 39.5773, 0.6", "98.7554, -95.8532, 39.7674, 0.6", "100.949, -96.0403, 40.0107, 1.08", "105.515, -96.7009, 40.5116, 0.6", "107.865, -97.281, 40.8457, 0.6", "109.19, -97.7757, 41.0178, 0.6", "112.111, -99.1462, 41.3044, 0.6", "114.635, -100.507, 41.4738, 1.2", "116.291, -101.542, 41.551, 1.2", "118.106, -102.864, 41.5647, 0.6", "121.09, -105.06, 41.5049, 0.6", "122.894, -106.368, 41.463, 0.6", "124.206, -107.346, 41.5049, 0.6" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "89.6151, -96.6745, 38.4693, 1.2", "89.7947, -96.0183, 38.3623, 1.2", "90.3072, -94.1452, 38.057, 0.84", "90.9814, -91.6809, 37.6552, 0.36", "91.2487, -90.7041, 37.496, 0.36", "91.9379, -88.1853, 37.0853, 0.84" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_33", "dend_16", "dend_7", "dend_4", "dend_3", "dend_0", "dend_35", "dend_34", "dend_20", "dend_17", "dend_15", "dend_8", "dend_6", "dend_5", "dend_2", "dend_1", "dend_37", "dend_36", "dend_22", "dend_21", "dend_19", "dend_18", "dend_12", "dend_9", "dend_40", "dend_39", "dend_38", "dend_24", "dend_23", "dend_14", "dend_13", "dend_11", "dend_10", "dend_26", "dend_25", "dend_32", "dend_27", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_33", "dend_16", "dend_7", "dend_4", "dend_3", "dend_0", "dend_35", "dend_34", "dend_20", "dend_17", "dend_15", "dend_8", "dend_6", "dend_5", "dend_2", "dend_1", "dend_37", "dend_36", "dend_22", "dend_21", "dend_19", "dend_18", "dend_12", "dend_9", "dend_40", "dend_39", "dend_38", "dend_24", "dend_23", "dend_14", "dend_13", "dend_11", "dend_10", "dend_26", "dend_25", "dend_32", "dend_27", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_33", "dend_16", "dend_7", "dend_4", "dend_3", "dend_0", "axon_0", "dend_35", "dend_34", "dend_20", "dend_17", "dend_15", "dend_8", "dend_6", "dend_5", "dend_2", "dend_1", "axon_1", "dend_37", "dend_36", "dend_22", "dend_21", "dend_19", "dend_18", "dend_12", "dend_9", "dend_40", "dend_39", "dend_38", "dend_24", "dend_23", "dend_14", "dend_13", "dend_11", "dend_10", "dend_26", "dend_25", "dend_32", "dend_27", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_DBC_189fcfd9e0_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: soma_0
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_7
create dend_15
public dend_15
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_40, id: dend_40, parent: dend_37
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_33, dend_16, dend_7, dend_4, dend_3, dend_0, dend_35, dend_34, dend_20, dend_17, dend_15, dend_8, dend_6, dend_5, dend_2, dend_1, dend_37, dend_36, dend_22, dend_21, dend_19, dend_18, dend_12, dend_9, dend_40, dend_39, dend_38, dend_24, dend_23, dend_14, dend_13, dend_11, dend_10, dend_26, dend_25, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_33, dend_16, dend_7, dend_4, dend_3, dend_0, dend_35, dend_34, dend_20, dend_17, dend_15, dend_8, dend_6, dend_5, dend_2, dend_1, dend_37, dend_36, dend_22, dend_21, dend_19, dend_18, dend_12, dend_9, dend_40, dend_39, dend_38, dend_24, dend_23, dend_14, dend_13, dend_11, dend_10, dend_26, dend_25, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_33, dend_16, dend_7, dend_4, dend_3, dend_0, axon_0, dend_35, dend_34, dend_20, dend_17, dend_15, dend_8, dend_6, dend_5, dend_2, dend_1, axon_1, dend_37, dend_36, dend_22, dend_21, dend_19, dend_18, dend_12, dend_9, dend_40, dend_39, dend_38, dend_24, dend_23, dend_14, dend_13, dend_11, dend_10, dend_26, dend_25, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_15
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_33(0), soma_0(0.4999988276266909)
    connect dend_16(0), soma_0(0.4999988276266909)
    connect dend_7(0), soma_0(0.4999988276266909)
    connect dend_4(0), soma_0(0.4999988276266909)
    connect dend_3(0), soma_0(0.4999988276266909)
    connect dend_0(0), soma_0(0.4999988276266909)
    connect axon_0(0), soma_0(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_40(0), dend_37(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.29416, -10.039, 0.0, 3.29577 ) }
    soma_0 { pt3dadd( -2.90858, -8.93717, 0.0, 5.95579 ) }
    soma_0 { pt3dadd( -2.523, -7.83528, 0.0, 9.15271 ) }
    soma_0 { pt3dadd( -2.13742, -6.7334, 0.0, 11.3921 ) }
    soma_0 { pt3dadd( -1.75184, -5.63152, 0.0, 12.7837 ) }
    soma_0 { pt3dadd( -1.36626, -4.52964, 0.0, 13.7064 ) }
    soma_0 { pt3dadd( -0.980683, -3.42776, 0.0, 14.2605 ) }
    soma_0 { pt3dadd( -0.595104, -2.32587, 0.0, 14.5213 ) }
    soma_0 { pt3dadd( -0.209524, -1.22399, 0.0, 14.7821 ) }
    soma_0 { pt3dadd( 0.176055, -0.122111, 0.0, 14.8675 ) }
    soma_0 { pt3dadd( 0.561635, 0.979771, 0.0, 14.5727 ) }
    soma_0 { pt3dadd( 0.947214, 2.08165, 0.0, 14.1 ) }
    soma_0 { pt3dadd( 1.33279, 3.18354, 0.0, 13.169 ) }
    soma_0 { pt3dadd( 1.71837, 4.28542, 0.0, 12.1705 ) }
    soma_0 { pt3dadd( 2.10395, 5.3873, 0.0, 11.0272 ) }
    soma_0 { pt3dadd( 2.48953, 6.48918, 0.0, 9.72958 ) }
    soma_0 { pt3dadd( 2.87511, 7.59106, 0.0, 8.28215 ) }
    soma_0 { pt3dadd( 3.26069, 8.69295, 0.0, 6.88757 ) }
    soma_0 { pt3dadd( 3.64627, 9.79483, 0.0, 5.52197 ) }
    soma_0 { pt3dadd( 4.03185, 10.8967, 0.0, 3.91408 ) }
    soma_0 { pt3dadd( 4.41743, 11.9986, 0.0, 2.33646 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 21/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -1.37545, -9.44466, 9.67, 2.76 ) }
    dend_33 { pt3dadd( -1.66732, -11.662, 9.77205, 2.76 ) }
    dend_33 { pt3dadd( -2.16079, -14.5108, 9.79065, 2.76 ) }
    dend_33 { pt3dadd( -2.64694, -16.8917, 9.76822, 2.76 ) }
    dend_33 { pt3dadd( -3.41113, -20.2313, 9.70987, 2.16 ) }
    dend_33 { pt3dadd( -4.13279, -23.3296, 9.71239, 2.16 ) }
    dend_33 { pt3dadd( -5.17901, -27.6972, 9.76373, 1.92 ) }
    dend_33 { pt3dadd( -6.2145, -31.4775, 9.83989, 1.92 ) }
    dend_33 { pt3dadd( -6.75498, -33.2798, 9.88104, 1.92 ) }
    dend_33 { pt3dadd( -7.98072, -37.2111, 9.98389, 1.92 ) }
    dend_33 { pt3dadd( -8.75043, -39.5903, 10.0575, 1.56 ) }
    dend_33 { pt3dadd( -9.70533, -42.6894, 10.1717, 1.56 ) }
    dend_33 { pt3dadd( -10.4184, -45.1967, 10.2846, 1.2 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 34/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 6.36455, 4.37784, -1.63, 2.16 ) }
    dend_16 { pt3dadd( 7.29211, 3.55104, -1.98327, 2.16 ) }
    dend_16 { pt3dadd( 9.62715, 1.50574, -3.03684, 1.8 ) }
    dend_16 { pt3dadd( 11.3744, -0.0742548, -3.83913, 1.56 ) }
    dend_16 { pt3dadd( 12.6167, -1.21682, -4.31054, 1.56 ) }
    dend_16 { pt3dadd( 13.7431, -2.28233, -4.67857, 1.56 ) }
    dend_16 { pt3dadd( 16.829, -5.26056, -5.56952, 1.2 ) }
    dend_16 { pt3dadd( 18.8369, -7.22036, -6.02118, 1.2 ) }
    dend_16 { pt3dadd( 20.2397, -8.59156, -6.25074, 1.2 ) }
    dend_16 { pt3dadd( 22.115, -10.454, -6.45023, 1.2 ) }
    dend_16 { pt3dadd( 23.1013, -11.4629, -6.53465, 1.44 ) }
    dend_16 { pt3dadd( 23.7468, -12.1839, -6.54303, 1.44 ) }
    dend_16 { pt3dadd( 25.0056, -13.8246, -6.18549, 1.68 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 47/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 5.61455, 10.1538, 0.0, 2.4 ) }
    dend_7 { pt3dadd( 6.98587, 13.6071, -0.360131, 1.8 ) }
    dend_7 { pt3dadd( 8.54983, 17.9785, -0.79774, 1.2 ) }
    dend_7 { pt3dadd( 9.81072, 21.5028, -1.15055, 1.2 ) }
    dend_7 { pt3dadd( 11.6101, 26.5324, -1.65403, 1.2 ) }
    dend_7 { pt3dadd( 13.3182, 31.3065, -2.13195, 1.68 ) }
    dend_7 { pt3dadd( 14.2025, 33.7783, -2.3794, 1.68 ) }
    dend_7 { pt3dadd( 15.3202, 37.1819, -2.77339, 1.68 ) }
    // Section: dend_4, id: dend_4, parent: soma_0 (entry count 55/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 3.41455, 10.8758, 0.29, 2.4 ) }
    dend_4 { pt3dadd( 2.96794, 12.5693, 0.400815, 2.4 ) }
    dend_4 { pt3dadd( 2.17024, 17.2662, 0.401976, 1.44 ) }
    dend_4 { pt3dadd( 1.94463, 19.0885, 0.363084, 1.44 ) }
    dend_4 { pt3dadd( 1.77907, 20.7083, 0.276207, 1.44 ) }
    dend_4 { pt3dadd( 1.64003, 22.211, 0.17276, 1.44 ) }
    dend_4 { pt3dadd( 1.31308, 26.9371, 0.278265, 1.44 ) }
    dend_4 { pt3dadd( 1.07433, 32.1313, 0.75036, 1.44 ) }
    dend_4 { pt3dadd( 1.02288, 34.2238, 1.04881, 1.44 ) }
    dend_4 { pt3dadd( 0.974366, 36.056, 1.37466, 1.44 ) }
    dend_4 { pt3dadd( 0.75128, 40.3734, 2.39814, 1.32 ) }
    dend_4 { pt3dadd( -0.01301, 49.8163, 5.03497, 1.44 ) }
    dend_4 { pt3dadd( -0.331653, 52.7348, 5.97214, 1.44 ) }
    dend_4 { pt3dadd( -0.576462, 54.6386, 6.68002, 1.44 ) }
    dend_4 { pt3dadd( -0.717457, 55.5998, 7.05054, 1.44 ) }
    dend_4 { pt3dadd( -1.61179, 61.1367, 9.15983, 1.8 ) }
    dend_4 { pt3dadd( -2.36272, 65.2497, 10.4934, 1.08 ) }
    dend_4 { pt3dadd( -2.59287, 66.4096, 10.6906, 1.08 ) }
    dend_4 { pt3dadd( -2.83511, 67.7975, 10.8187, 1.08 ) }
    dend_4 { pt3dadd( -3.11934, 69.5633, 10.8073, 1.08 ) }
    dend_4 { pt3dadd( -3.56287, 72.4562, 10.6782, 1.08 ) }
    dend_4 { pt3dadd( -3.81631, 74.5801, 10.5052, 1.08 ) }
    dend_4 { pt3dadd( -4.2119, 78.6837, 10.3354, 1.44 ) }
    dend_4 { pt3dadd( -4.30246, 79.9736, 10.3433, 1.44 ) }
    dend_4 { pt3dadd( -4.44768, 82.8564, 10.5365, 1.44 ) }
    dend_4 { pt3dadd( -4.5611, 88.0915, 10.9291, 0.84 ) }
    dend_4 { pt3dadd( -4.58248, 90.5153, 11.1832, 0.84 ) }
    dend_4 { pt3dadd( -4.5914, 91.7239, 11.3327, 0.84 ) }
    dend_4 { pt3dadd( -4.65014, 95.3691, 11.7788, 0.84 ) }
    dend_4 { pt3dadd( -4.65222, 97.5039, 12.0349, 1.08 ) }
    dend_4 { pt3dadd( -4.61328, 102.896, 12.6461, 1.68 ) }
    dend_4 { pt3dadd( -4.52394, 107.664, 12.9085, 0.84 ) }
    dend_4 { pt3dadd( -4.50087, 109.883, 12.9921, 0.84 ) }
    dend_4 { pt3dadd( -4.4928, 111.177, 13.0313, 0.84 ) }
    dend_4 { pt3dadd( -4.46359, 117.589, 13.2449, 1.56 ) }
    dend_4 { pt3dadd( -4.47041, 122.242, 13.4443, 0.96 ) }
    dend_4 { pt3dadd( -4.4766, 126.047, 13.7371, 0.96 ) }
    dend_4 { pt3dadd( -4.45553, 128.352, 13.896, 0.96 ) }
    dend_4 { pt3dadd( -4.41767, 130.327, 13.9707, 0.96 ) }
    dend_4 { pt3dadd( -4.38933, 131.497, 13.9765, 0.96 ) }
    dend_4 { pt3dadd( -4.23712, 136.976, 13.6181, 1.44 ) }
    dend_4 { pt3dadd( -4.14766, 138.417, 13.4684, 1.44 ) }
    dend_4 { pt3dadd( -4.04177, 139.871, 13.3007, 1.44 ) }
    dend_4 { pt3dadd( -3.63853, 144.532, 12.7275, 0.96 ) }
    dend_4 { pt3dadd( -3.48977, 146.17, 12.5193, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_4 { pt3dadd( -3.14446, 149.74, 12.0476, 1.44 ) }
    dend_4 { pt3dadd( -2.87959, 152.124, 11.7495, 1.44 ) }
    dend_4 { pt3dadd( -2.54685, 155.354, 11.4373, 0.96 ) }
    dend_4 { pt3dadd( -2.37796, 157.209, 11.337, 0.96 ) }
    dend_4 { pt3dadd( -2.21864, 159.274, 11.3379, 0.96 ) }
    dend_4 { pt3dadd( -2.13601, 160.578, 11.3789, 0.96 ) }
    dend_4 { pt3dadd( -1.9665, 164.576, 11.6106, 1.44 ) }
    dend_4 { pt3dadd( -1.90787, 166.322, 11.6986, 1.44 ) }
    dend_4 { pt3dadd( -1.78647, 169.32, 11.7495, 0.84 ) }
    dend_4 { pt3dadd( -1.7188, 171.208, 11.7197, 0.84 ) }
    dend_4 { pt3dadd( -1.64494, 173.743, 11.6284, 1.44 ) }
    dend_4 { pt3dadd( -1.5307, 178.152, 11.3899, 0.84 ) }
    dend_4 { pt3dadd( -1.46882, 180.37, 11.2239, 0.84 ) }
    dend_4 { pt3dadd( -1.37357, 182.305, 11.0445, 0.84 ) }
    dend_4 { pt3dadd( -1.26335, 183.74, 10.8847, 0.84 ) }
    dend_4 { pt3dadd( -1.07897, 185.563, 10.652, 0.84 ) }
    dend_4 { pt3dadd( -0.894042, 187.074, 10.4339, 0.84 ) }
    dend_4 { pt3dadd( -0.681662, 188.675, 10.2382, 0.84 ) }
    dend_4 { pt3dadd( -0.462671, 190.281, 10.1095, 0.84 ) }
    dend_4 { pt3dadd( -0.288254, 191.681, 10.0427, 0.84 ) }
    dend_4 { pt3dadd( -0.214273, 192.557, 10.0103, 0.84 ) }
    dend_4 { pt3dadd( -0.108552, 194.012, 10.008, 0.84 ) }
    dend_4 { pt3dadd( 0.32248, 200.228, 9.74544, 1.44 ) }
    dend_4 { pt3dadd( 0.739381, 206.585, 9.25014, 0.72 ) }
    dend_4 { pt3dadd( 1.07859, 212.034, 8.87495, 0.72 ) }
    dend_4 { pt3dadd( 1.46042, 218.846, 8.53726, 1.08 ) }
    dend_4 { pt3dadd( 1.72157, 224.321, 8.37828, 1.44 ) }
    dend_4 { pt3dadd( 2.04279, 231.963, 8.35142, 0.72 ) }
    dend_4 { pt3dadd( 2.13832, 235.014, 8.3518, 0.72 ) }
    dend_4 { pt3dadd( 2.25664, 240.231, 8.34399, 1.2 ) }
    dend_4 { pt3dadd( 2.3951, 244.82, 8.26991, 0.72 ) }
    dend_4 { pt3dadd( 2.51304, 248.051, 8.28216, 0.72 ) }
    dend_4 { pt3dadd( 2.58813, 251.352, 8.3309, 1.2 ) }
    dend_4 { pt3dadd( 2.69367, 256.705, 8.76871, 0.96 ) }
    dend_4 { pt3dadd( 2.7506, 258.764, 8.88603, 0.96 ) }
    dend_4 { pt3dadd( 2.93597, 263.528, 8.63132, 1.44 ) }
    dend_4 { pt3dadd( 3.20346, 267.902, 8.10798, 0.96 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 37/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -7.02545, -1.46466, 5.97, 2.16 ) }
    dend_3 { pt3dadd( -8.61504, -0.971146, 6.0107, 2.16 ) }
    dend_3 { pt3dadd( -10.9864, -0.131624, 5.87059, 1.92 ) }
    dend_3 { pt3dadd( -13.0844, 0.545169, 6.02481, 1.56 ) }
    dend_3 { pt3dadd( -15.5659, 1.34566, 6.20722, 1.08 ) }
    dend_3 { pt3dadd( -17.1731, 1.86413, 6.32537, 1.56 ) }
    dend_3 { pt3dadd( -19.5402, 2.62773, 6.49937, 2.52 ) }
    dend_3 { pt3dadd( -21.518, 3.38649, 6.57144, 2.52 ) }
    dend_3 { pt3dadd( -25.7046, 5.35687, 6.3687, 1.92 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 46/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.08545, 4.87184, 3.55, 2.28 ) }
    dend_0 { pt3dadd( -5.86084, 6.29578, 4.33402, 2.28 ) }
    dend_0 { pt3dadd( -7.99416, 7.8322, 5.42947, 2.28 ) }
    dend_0 { pt3dadd( -11.2343, 10.1658, 7.09331, 1.8 ) }
    dend_0 { pt3dadd( -15.0224, 12.8939, 9.03848, 1.44 ) }
    dend_0 { pt3dadd( -16.9898, 14.3108, 10.0487, 1.08 ) }
    dend_0 { pt3dadd( -19.324, 15.9919, 11.2474, 1.08 ) }
    dend_0 { pt3dadd( -23.0473, 18.3917, 13.2765, 2.28 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 54/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.41743, 11.9986, 0.0, 0.48 ) }
    axon_0 { pt3dadd( 9.37179, 26.1568, 0.0, 0.48 ) }
    axon_0 { pt3dadd( 14.3261, 40.315, 0.0, 0.48 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 57/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -10.4184, -45.1967, 10.2846, 0.6 ) }
    dend_35 { pt3dadd( -10.253, -47.4336, 10.3508, 0.6 ) }
    dend_35 { pt3dadd( -9.99011, -50.6088, 10.4493, 0.6 ) }
    dend_35 { pt3dadd( -9.5892, -55.446, 10.6014, 1.08 ) }
    dend_35 { pt3dadd( -9.39393, -57.9149, 10.6786, 1.08 ) }
    dend_35 { pt3dadd( -9.1235, -61.3077, 10.7858, 0.48 ) }
    dend_35 { pt3dadd( -8.77214, -65.5442, 10.9216, 1.2 ) }
    dend_35 { pt3dadd( -8.66056, -66.8165, 11.021, 1.2 ) }
    dend_35 { pt3dadd( -8.34412, -70.5509, 11.473, 0.6 ) }
    dend_35 { pt3dadd( -8.16382, -72.8829, 11.8478, 0.6 ) }
    dend_35 { pt3dadd( -8.00767, -75.188, 12.2812, 0.6 ) }
    dend_35 { pt3dadd( -7.98752, -75.6567, 12.3769, 0.6 ) }
    dend_35 { pt3dadd( -7.90282, -80.6767, 13.416, 1.8 ) }
    dend_35 { pt3dadd( -7.89822, -83.5461, 13.9837, 1.8 ) }
    dend_35 { pt3dadd( -7.92846, -86.2057, 14.4708, 1.8 ) }
    dend_35 { pt3dadd( -7.98777, -88.5271, 14.8309, 1.8 ) }
    dend_35 { pt3dadd( -8.13139, -91.8689, 15.2319, 1.32 ) }
    dend_35 { pt3dadd( -8.29216, -94.9096, 15.4724, 1.92 ) }
    dend_35 { pt3dadd( -8.36465, -96.3372, 15.5018, 1.92 ) }
    dend_35 { pt3dadd( -8.45888, -98.9268, 15.5685, 1.08 ) }
    dend_35 { pt3dadd( -8.57375, -101.55, 15.7708, 0.84 ) }
    dend_35 { pt3dadd( -8.66991, -103.441, 15.8725, 0.84 ) }
    dend_35 { pt3dadd( -8.74143, -104.944, 16.0227, 1.32 ) }
    dend_35 { pt3dadd( -8.88698, -107.058, 16.2782, 1.32 ) }
    dend_35 { pt3dadd( -8.98828, -108.444, 16.4596, 1.32 ) }
    dend_35 { pt3dadd( -9.34235, -112.894, 17.0919, 1.8 ) }
    dend_35 { pt3dadd( -9.77811, -118.023, 17.8716, 1.08 ) }
    dend_35 { pt3dadd( -10.2457, -123.032, 18.6623, 0.72 ) }
    dend_35 { pt3dadd( -10.9067, -129.076, 19.6233, 2.04 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 86/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -10.4184, -45.1967, 10.2846, 0.96 ) }
    dend_34 { pt3dadd( -11.8284, -47.411, 11.627, 0.96 ) }
    dend_34 { pt3dadd( -12.3549, -48.4769, 11.9899, 0.96 ) }
    dend_34 { pt3dadd( -13.6916, -51.3536, 12.4308, 0.96 ) }
    dend_34 { pt3dadd( -14.2808, -52.7554, 12.5001, 0.96 ) }
    dend_34 { pt3dadd( -14.8313, -54.118, 12.5035, 0.96 ) }
    dend_34 { pt3dadd( -15.8303, -56.4502, 12.4337, 0.96 ) }
    dend_34 { pt3dadd( -17.647, -60.6918, 12.2419, 0.96 ) }
    dend_34 { pt3dadd( -18.4746, -62.5418, 11.9809, 1.44 ) }
    dend_34 { pt3dadd( -19.7933, -65.1646, 11.2294, 0.72 ) }
    dend_34 { pt3dadd( -20.5274, -66.3592, 10.8006, 0.72 ) }
    dend_34 { pt3dadd( -21.5054, -67.716, 10.1509, 1.2 ) }
    dend_34 { pt3dadd( -22.666, -69.0974, 9.35106, 0.48 ) }
    dend_34 { pt3dadd( -24.6739, -71.1019, 8.038, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_34 { pt3dadd( -26.4681, -72.6735, 6.9131, 1.08 ) }
    dend_34 { pt3dadd( -28.3355, -74.1573, 5.60056, 0.6 ) }
    dend_34 { pt3dadd( -30.5552, -75.8734, 3.91207, 1.56 ) }
    dend_34 { pt3dadd( -31.8277, -76.7993, 2.88676, 0.72 ) }
    dend_34 { pt3dadd( -34.2493, -78.3573, 0.911917, 1.8 ) }
    dend_34 { pt3dadd( -37.0612, -79.9058, -1.19449, 0.84 ) }
    dend_34 { pt3dadd( -40.4609, -81.6044, -3.62949, 0.48 ) }
    dend_34 { pt3dadd( -42.3891, -82.4237, -4.86986, 1.56 ) }
    dend_34 { pt3dadd( -45.0304, -83.412, -6.30177, 0.72 ) }
    dend_34 { pt3dadd( -47.5019, -84.292, -7.50004, 1.44 ) }
    dend_34 { pt3dadd( -50.4579, -85.3696, -8.67571, 0.48 ) }
    dend_34 { pt3dadd( -51.7994, -85.8414, -9.1998, 0.48 ) }
    dend_34 { pt3dadd( -54.0982, -86.5792, -9.74501, 1.08 ) }
    dend_34 { pt3dadd( -55.7439, -87.1233, -9.98785, 0.48 ) }
    dend_34 { pt3dadd( -57.3769, -87.7832, -10.0248, 1.08 ) }
    dend_34 { pt3dadd( -59.3751, -88.8103, -9.79652, 0.6 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 16/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 25.0056, -13.8246, -6.18549, 1.8 ) }
    dend_20 { pt3dadd( 26.3182, -15.5927, -5.54548, 1.8 ) }
    dend_20 { pt3dadd( 27.157, -16.7226, -5.13645, 1.8 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 19/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 25.0056, -13.8246, -6.18549, 1.08 ) }
    dend_17 { pt3dadd( 26.6375, -13.5509, -4.95905, 1.08 ) }
    dend_17 { pt3dadd( 27.6358, -13.3682, -4.16856, 1.08 ) }
    dend_17 { pt3dadd( 28.2701, -13.2522, -3.66628, 1.08 ) }
    dend_17 { pt3dadd( 28.8896, -13.1388, -3.17579, 1.08 ) }
    dend_17 { pt3dadd( 31.1321, -12.7285, -1.40014, 0.84 ) }
    dend_17 { pt3dadd( 32.7706, -12.4287, -0.102731, 1.32 ) }
    dend_17 { pt3dadd( 32.9587, -12.3828, 0.0686061, 1.32 ) }
    // Section: dend_15, id: dend_15, parent: dend_7 (entry count 27/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 15.3202, 37.1819, -2.77339, 1.2 ) }
    dend_15 { pt3dadd( 18.7502, 37.0244, -0.167038, 1.2 ) }
    dend_15 { pt3dadd( 22.3991, 36.7205, 2.18215, 1.2 ) }
    dend_15 { pt3dadd( 27.175, 36.1344, 4.90512, 1.2 ) }
    dend_15 { pt3dadd( 31.275, 35.4833, 7.03476, 1.2 ) }
    dend_15 { pt3dadd( 37.4737, 34.3157, 10.0106, 1.8 ) }
    dend_15 { pt3dadd( 41.9138, 33.3669, 12.0, 1.32 ) }
    dend_15 { pt3dadd( 46.5665, 32.2245, 13.6753, 0.96 ) }
    dend_15 { pt3dadd( 49.6298, 31.4148, 14.4918, 0.96 ) }
    dend_15 { pt3dadd( 52.2343, 30.7202, 14.9218, 0.96 ) }
    dend_15 { pt3dadd( 56.2719, 29.6421, 15.4109, 0.84 ) }
    dend_15 { pt3dadd( 59.0456, 28.8655, 15.6639, 0.84 ) }
    dend_15 { pt3dadd( 62.9299, 27.7441, 16.118, 1.32 ) }
    dend_15 { pt3dadd( 66.7371, 26.6234, 16.9266, 0.96 ) }
    dend_15 { pt3dadd( 69.3113, 25.9244, 17.5075, 1.44 ) }
    dend_15 { pt3dadd( 72.9831, 24.9732, 18.4036, 1.32 ) }
    dend_15 { pt3dadd( 74.6367, 24.518, 18.8652, 1.32 ) }
    dend_15 { pt3dadd( 77.2622, 23.6423, 19.8812, 1.08 ) }
    dend_15 { pt3dadd( 79.2743, 22.476, 21.2725, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 46/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 15.3202, 37.1819, -2.77339, 1.2 ) }
    dend_8 { pt3dadd( 15.279, 38.118, -2.69191, 1.2 ) }
    dend_8 { pt3dadd( 15.1544, 41.245, -2.45388, 1.2 ) }
    dend_8 { pt3dadd( 14.991, 45.3442, -2.14185, 1.2 ) }
    dend_8 { pt3dadd( 14.797, 50.2093, -1.77153, 0.96 ) }
    dend_8 { pt3dadd( 14.7059, 52.4964, -1.59743, 0.96 ) }
    dend_8 { pt3dadd( 14.5114, 57.3751, -1.22607, 1.2 ) }
    dend_8 { pt3dadd( 14.4186, 59.5928, -1.10603, 1.2 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 54/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 3.20346, 267.902, 8.10798, 0.72 ) }
    dend_6 { pt3dadd( -4.75794, 269.967, 8.87714, 0.72 ) }
    dend_6 { pt3dadd( -9.27327, 271.138, 9.31337, 0.72 ) }
    dend_6 { pt3dadd( -11.2107, 271.64, 9.50055, 0.72 ) }
    dend_6 { pt3dadd( -14.0158, 272.368, 9.77156, 1.08 ) }
    dend_6 { pt3dadd( -17.6585, 273.313, 10.1235, 1.08 ) }
    dend_6 { pt3dadd( -19.2641, 273.729, 10.2786, 1.08 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 61/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 3.20346, 267.902, 8.10798, 0.96 ) }
    dend_5 { pt3dadd( 4.69254, 268.179, 6.89895, 0.96 ) }
    dend_5 { pt3dadd( 6.94305, 268.855, 5.10409, 0.96 ) }
    dend_5 { pt3dadd( 7.79925, 269.179, 4.55903, 0.96 ) }
    dend_5 { pt3dadd( 12.1572, 271.43, 3.00715, 0.96 ) }
    dend_5 { pt3dadd( 13.7226, 272.321, 2.71573, 0.96 ) }
    dend_5 { pt3dadd( 15.4346, 273.145, 2.63412, 0.96 ) }
    dend_5 { pt3dadd( 18.8159, 274.357, 2.77668, 0.96 ) }
    dend_5 { pt3dadd( 23.7872, 275.602, 3.28188, 0.96 ) }
    dend_5 { pt3dadd( 29.0101, 276.173, 3.36872, 0.6 ) }
    dend_5 { pt3dadd( 30.1156, 276.245, 3.49769, 0.6 ) }
    dend_5 { pt3dadd( 35.4213, 276.15, 4.01289, 1.08 ) }
    dend_5 { pt3dadd( 39.4431, 275.382, 4.00386, 1.44 ) }
    dend_5 { pt3dadd( 42.5326, 274.146, 3.4146, 1.2 ) }
    dend_5 { pt3dadd( 46.9106, 271.824, 1.55669, 0.84 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 76/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -23.0473, 18.3917, 13.2765, 1.2 ) }
    dend_2 { pt3dadd( -23.9693, 17.2123, 13.9262, 1.2 ) }
    dend_2 { pt3dadd( -25.3629, 15.4297, 14.9081, 1.2 ) }
    dend_2 { pt3dadd( -26.1275, 14.4515, 15.4469, 1.2 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 80/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -23.0473, 18.3917, 13.2765, 1.2 ) }
    dend_1 { pt3dadd( -22.7546, 19.5738, 14.9734, 1.2 ) }
    dend_1 { pt3dadd( -22.4591, 20.767, 16.6861, 1.2 ) }
    dend_1 { pt3dadd( -22.1774, 21.9046, 18.3191, 1.2 ) }
    dend_1 { pt3dadd( -22.082, 22.2901, 18.8724, 1.2 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 85/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 14.3261, 40.315, 0.0, 0.12 ) }
    axon_1 { pt3dadd( 19.2805, 54.4732, 0.0, 0.12 ) }
    axon_1 { pt3dadd( 24.2349, 68.6314, 0.0, 0.12 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 88/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -10.9067, -129.076, 19.6233, 0.84 ) }
    dend_37 { pt3dadd( -10.8887, -131.676, 20.6541, 0.84 ) }
    dend_37 { pt3dadd( -10.7758, -133.696, 21.4339, 0.84 ) }
    dend_37 { pt3dadd( -10.6454, -134.886, 21.8641, 0.84 ) }
    dend_37 { pt3dadd( -10.5547, -135.563, 22.0882, 0.84 ) }
    dend_37 { pt3dadd( -10.0715, -138.811, 23.0994, 1.44 ) }
    dend_37 { pt3dadd( -9.78845, -140.592, 23.6303, 1.44 ) }
    dend_37 { pt3dadd( -9.34846, -143.049, 24.3293, 0.72 ) }
    dend_37 { pt3dadd( -8.99182, -145.3, 24.9113, 0.72 ) }
    dend_37 { pt3dadd( -8.70086, -147.294, 25.3623, 0.72 ) }
    dend_37 { pt3dadd( -8.57542, -148.234, 25.5407, 0.72 ) }
    dend_37 { pt3dadd( -8.48712, -148.889, 25.604, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_37 { pt3dadd( -8.02941, -152.249, 25.8109, 1.44 ) }
    dend_37 { pt3dadd( -7.35307, -157.127, 25.9632, 0.72 ) }
    dend_37 { pt3dadd( -7.12815, -158.821, 25.9713, 0.72 ) }
    dend_37 { pt3dadd( -6.99115, -159.836, 25.9587, 0.72 ) }
    dend_37 { pt3dadd( -6.40715, -164.201, 25.8518, 0.72 ) }
    dend_37 { pt3dadd( -6.21028, -165.674, 25.7966, 0.72 ) }
    dend_37 { pt3dadd( -5.93673, -167.598, 25.6906, 0.72 ) }
    dend_37 { pt3dadd( -5.55723, -170.342, 25.4951, 1.44 ) }
    dend_37 { pt3dadd( -5.32051, -173.0, 25.2661, 0.72 ) }
    dend_37 { pt3dadd( -5.25153, -174.791, 25.1128, 0.72 ) }
    dend_37 { pt3dadd( -5.28666, -176.01, 25.1083, 0.72 ) }
    dend_37 { pt3dadd( -5.33554, -177.189, 25.1136, 0.72 ) }
    dend_37 { pt3dadd( -5.41001, -179.131, 25.1077, 0.72 ) }
    dend_37 { pt3dadd( -5.66078, -182.954, 25.2391, 1.44 ) }
    dend_37 { pt3dadd( -5.76237, -184.143, 25.3136, 1.44 ) }
    dend_37 { pt3dadd( -6.15921, -188.236, 25.667, 0.6 ) }
    dend_37 { pt3dadd( -6.56418, -192.138, 26.1138, 1.2 ) }
    dend_37 { pt3dadd( -7.06649, -196.678, 26.7411, 0.6 ) }
    dend_37 { pt3dadd( -7.45406, -200.232, 27.3229, 1.08 ) }
    dend_37 { pt3dadd( -7.62912, -201.885, 27.6367, 0.36 ) }
    dend_37 { pt3dadd( -7.71474, -202.738, 27.7676, 0.36 ) }
    dend_37 { pt3dadd( -8.09686, -206.148, 28.1029, 1.08 ) }
    dend_37 { pt3dadd( -8.2626, -207.312, 28.2147, 1.08 ) }
    dend_37 { pt3dadd( -8.53195, -209.227, 28.338, 0.36 ) }
    dend_37 { pt3dadd( -8.71107, -211.004, 28.35, 1.68 ) }
    dend_37 { pt3dadd( -9.00154, -214.518, 28.2691, 0.72 ) }
    dend_37 { pt3dadd( -9.17832, -216.646, 28.1586, 0.72 ) }
    dend_37 { pt3dadd( -9.25464, -217.641, 28.0822, 0.72 ) }
    dend_37 { pt3dadd( -9.32246, -218.766, 27.9952, 0.72 ) }
    dend_37 { pt3dadd( -9.42216, -221.274, 27.8106, 1.44 ) }
    dend_37 { pt3dadd( -9.523, -223.472, 27.656, 1.44 ) }
    dend_37 { pt3dadd( -9.64252, -225.244, 27.4326, 0.72 ) }
    dend_37 { pt3dadd( -9.78378, -226.915, 27.1385, 0.72 ) }
    dend_37 { pt3dadd( -9.91151, -227.832, 27.0073, 0.72 ) }
    dend_37 { pt3dadd( -10.1471, -229.209, 26.7886, 0.72 ) }
    dend_37 { pt3dadd( -10.7416, -231.843, 26.3228, 1.32 ) }
    dend_37 { pt3dadd( -11.4868, -234.679, 25.8362, 0.84 ) }
    dend_37 { pt3dadd( -11.9123, -236.195, 25.5437, 0.84 ) }
    dend_37 { pt3dadd( -13.0489, -239.43, 24.8105, 0.48 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 39/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -10.9067, -129.076, 19.6233, 1.2 ) }
    dend_36 { pt3dadd( -12.4299, -130.955, 18.9376, 1.2 ) }
    dend_36 { pt3dadd( -13.4512, -132.261, 18.4125, 1.2 ) }
    dend_36 { pt3dadd( -15.7671, -135.314, 17.098, 0.96 ) }
    dend_36 { pt3dadd( -16.8532, -136.744, 16.6273, 1.44 ) }
    dend_36 { pt3dadd( -18.8912, -139.494, 15.6871, 0.72 ) }
    dend_36 { pt3dadd( -21.1291, -142.567, 14.6529, 0.72 ) }
    dend_36 { pt3dadd( -21.9398, -143.726, 14.2608, 0.72 ) }
    dend_36 { pt3dadd( -23.1013, -145.431, 13.6987, 1.2 ) }
    dend_36 { pt3dadd( -25.9358, -149.602, 12.0143, 0.48 ) }
    dend_36 { pt3dadd( -28.1641, -152.843, 10.5752, 0.96 ) }
    dend_36 { pt3dadd( -30.2079, -155.796, 9.08262, 0.36 ) }
    dend_36 { pt3dadd( -30.5113, -156.228, 8.84727, 0.36 ) }
    dend_36 { pt3dadd( -31.8701, -158.095, 8.09323, 0.72 ) }
    dend_36 { pt3dadd( -34.6443, -162.033, 7.32428, 0.72 ) }
    dend_36 { pt3dadd( -36.56, -165.418, 7.01053, 1.2 ) }
    dend_36 { pt3dadd( -37.7914, -168.322, 7.26939, 0.6 ) }
    dend_36 { pt3dadd( -38.3489, -170.323, 7.63089, 0.6 ) }
    dend_36 { pt3dadd( -41.035, -181.682, 10.6087, 0.6 ) }
    dend_36 { pt3dadd( -41.6897, -185.447, 12.0867, 0.6 ) }
    dend_36 { pt3dadd( -42.3211, -190.964, 15.1358, 1.08 ) }
    dend_36 { pt3dadd( -42.329, -193.139, 16.5414, 0.36 ) }
    dend_36 { pt3dadd( -42.2316, -194.477, 17.4922, 0.36 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 62/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 27.157, -16.7226, -5.13645, 1.8 ) }
    dend_22 { pt3dadd( 27.5856, -17.1956, -3.01134, 1.8 ) }
    dend_22 { pt3dadd( 27.8122, -17.4457, -1.88776, 1.8 ) }
    dend_22 { pt3dadd( 28.4481, -18.1476, 1.26545, 1.8 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 66/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 27.157, -16.7226, -5.13645, 1.44 ) }
    dend_21 { pt3dadd( 29.1911, -17.8759, -6.90616, 1.44 ) }
    dend_21 { pt3dadd( 30.4532, -18.6533, -7.93681, 1.44 ) }
    dend_21 { pt3dadd( 31.2708, -19.1675, -8.58555, 1.44 ) }
    dend_21 { pt3dadd( 34.911, -21.3728, -10.7912, 1.56 ) }
    dend_21 { pt3dadd( 36.2397, -22.1241, -11.3691, 1.56 ) }
    dend_21 { pt3dadd( 38.6393, -23.437, -12.3108, 1.8 ) }
    dend_21 { pt3dadd( 40.5603, -24.5063, -12.9753, 1.8 ) }
    dend_21 { pt3dadd( 42.9257, -25.7105, -13.6341, 1.32 ) }
    dend_21 { pt3dadd( 46.6986, -27.4594, -14.5331, 1.68 ) }
    dend_21 { pt3dadd( 49.1056, -28.5143, -15.1917, 1.32 ) }
    dend_21 { pt3dadd( 52.8011, -29.9688, -16.0756, 0.72 ) }
    dend_21 { pt3dadd( 54.8725, -30.6942, -16.4819, 0.72 ) }
    dend_21 { pt3dadd( 56.2671, -31.1081, -16.8083, 1.32 ) }
    dend_21 { pt3dadd( 59.0988, -31.6946, -17.6375, 0.96 ) }
    dend_21 { pt3dadd( 63.8065, -32.3384, -19.8837, 1.44 ) }
    dend_21 { pt3dadd( 69.5411, -32.6992, -23.6293, 0.6 ) }
    dend_21 { pt3dadd( 70.5716, -32.6625, -24.4908, 0.6 ) }
    dend_21 { pt3dadd( 72.4608, -32.4988, -26.3031, 1.08 ) }
    dend_21 { pt3dadd( 75.218, -32.1232, -29.3132, 1.56 ) }
    dend_21 { pt3dadd( 77.592, -31.5026, -32.3738, 1.2 ) }
    dend_21 { pt3dadd( 79.2089, -30.852, -35.1675, 1.2 ) }
    dend_21 { pt3dadd( 80.0527, -30.4605, -37.129, 1.2 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 89/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 32.9587, -12.3828, 0.0686061, 1.08 ) }
    dend_19 { pt3dadd( 35.3614, -11.9018, 0.0487747, 1.08 ) }
    dend_19 { pt3dadd( 36.3236, -11.6005, -0.45358, 1.08 ) }
    dend_19 { pt3dadd( 37.8085, -11.0601, -1.42015, 1.56 ) }
    dend_19 { pt3dadd( 40.5016, -10.0105, -3.32655, 1.08 ) }
    dend_19 { pt3dadd( 42.4156, -9.19195, -4.75548, 0.6 ) }
    dend_19 { pt3dadd( 47.3964, -6.68361, -8.80122, 0.6 ) }
    dend_19 { pt3dadd( 48.7059, -5.82985, -10.147, 1.2 ) }
    dend_19 { pt3dadd( 49.4152, -5.23878, -11.0031, 0.6 ) }
    dend_19 { pt3dadd( 49.9331, -4.67091, -11.7143, 1.08 ) }
    dend_19 { pt3dadd( 50.3481, -4.07886, -12.3822, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_19 { pt3dadd( 51.1669, -2.63418, -13.6662, 1.44 ) }
    dend_19 { pt3dadd( 51.7803, -1.37225, -14.1807, 0.84 ) }
    dend_19 { pt3dadd( 52.1769, -0.455633, -14.4364, 1.32 ) }
    dend_19 { pt3dadd( 52.754, 0.955561, -14.7305, 0.72 ) }
    dend_19 { pt3dadd( 53.0414, 1.60345, -14.8298, 0.72 ) }
    dend_19 { pt3dadd( 53.442, 2.36254, -14.9333, 1.08 ) }
    dend_19 { pt3dadd( 54.251, 3.59913, -15.0715, 0.6 ) }
    dend_19 { pt3dadd( 55.1107, 4.72646, -15.2191, 1.2 ) }
    dend_19 { pt3dadd( 55.6131, 5.29961, -15.3031, 1.2 ) }
    dend_19 { pt3dadd( 56.6349, 6.31524, -15.4755, 0.72 ) }
    dend_19 { pt3dadd( 57.8663, 7.50512, -15.723, 1.08 ) }
    dend_19 { pt3dadd( 59.3865, 8.98533, -15.9598, 0.6 ) }
    dend_19 { pt3dadd( 59.7466, 9.35621, -15.9981, 0.6 ) }
    dend_19 { pt3dadd( 60.2957, 9.98053, -16.0257, 0.6 ) }
    dend_19 { pt3dadd( 62.0601, 12.2951, -15.9619, 1.08 ) }
    dend_19 { pt3dadd( 62.7031, 13.2535, -15.8646, 0.72 ) }
    dend_19 { pt3dadd( 63.7681, 14.9666, -15.5809, 1.2 ) }
    dend_19 { pt3dadd( 64.5482, 16.2949, -15.3312, 1.2 ) }
    dend_19 { pt3dadd( 65.0074, 17.0461, -15.183, 1.2 ) }
    dend_19 { pt3dadd( 65.8011, 18.2515, -14.9311, 0.72 ) }
    dend_19 { pt3dadd( 66.3724, 19.0161, -14.7498, 0.72 ) }
    dend_19 { pt3dadd( 67.3492, 20.0848, -14.4947, 0.72 ) }
    dend_19 { pt3dadd( 68.1139, 20.7618, -14.3393, 1.32 ) }
    dend_19 { pt3dadd( 69.7662, 21.9711, -13.9826, 0.96 ) }
    dend_19 { pt3dadd( 70.4381, 22.4074, -13.8342, 0.96 ) }
    dend_19 { pt3dadd( 71.1834, 22.8498, -13.6679, 1.44 ) }
    dend_19 { pt3dadd( 72.2827, 23.5274, -13.3839, 1.08 ) }
    dend_19 { pt3dadd( 73.408, 24.2458, -13.1639, 1.56 ) }
    dend_19 { pt3dadd( 74.7917, 25.1532, -12.9878, 0.96 ) }
    dend_19 { pt3dadd( 75.4745, 25.6166, -12.9623, 0.96 ) }
    dend_19 { pt3dadd( 75.9865, 25.9774, -12.9886, 1.56 ) }
    dend_19 { pt3dadd( 77.093, 26.7928, -13.1901, 0.96 ) }
    dend_19 { pt3dadd( 78.8677, 28.1772, -13.7323, 0.96 ) }
    dend_19 { pt3dadd( 79.4291, 28.6083, -13.8949, 0.96 ) }
    dend_19 { pt3dadd( 80.6023, 29.4273, -14.1682, 1.56 ) }
    dend_19 { pt3dadd( 81.5134, 30.0504, -14.3727, 0.84 ) }
    dend_19 { pt3dadd( 82.4903, 30.696, -14.4932, 1.44 ) }
    dend_19 { pt3dadd( 84.4496, 31.953, -14.4978, 0.72 ) }
    dend_19 { pt3dadd( 86.1822, 33.1389, -14.1264, 0.48 ) }
    dend_19 { pt3dadd( 86.9219, 33.677, -13.8481, 0.48 ) }
    dend_19 { pt3dadd( 88.3473, 34.7333, -13.0304, 1.68 ) }
    dend_19 { pt3dadd( 90.2155, 36.1104, -11.7677, 0.72 ) }
    dend_19 { pt3dadd( 91.1952, 36.8172, -10.9745, 0.72 ) }
    dend_19 { pt3dadd( 92.5735, 37.818, -9.61154, 1.32 ) }
    dend_19 { pt3dadd( 93.1147, 38.2598, -9.00649, 1.32 ) }
    dend_19 { pt3dadd( 93.9882, 39.0074, -7.75322, 0.72 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 46/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 32.9587, -12.3828, 0.0686061, 1.08 ) }
    dend_18 { pt3dadd( 36.5365, -15.306, -5.07161, 1.08 ) }
    dend_18 { pt3dadd( 37.3737, -15.9901, -6.27447, 1.08 ) }
    dend_18 { pt3dadd( 38.9237, -17.2565, -8.50128, 0.84 ) }
    dend_18 { pt3dadd( 39.6995, -17.8903, -9.61586, 0.84 ) }
    dend_18 { pt3dadd( 41.1858, -19.1048, -11.7514, 0.84 ) }
    dend_18 { pt3dadd( 42.2217, -19.9511, -13.2396, 1.32 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 53/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 14.4186, 59.5928, -1.10603, 0.96 ) }
    dend_12 { pt3dadd( 13.5227, 64.3686, -0.85, 0.96 ) }
    dend_12 { pt3dadd( 13.0166, 67.0664, -0.705369, 0.96 ) }
    dend_12 { pt3dadd( 12.1306, 71.7898, -0.452152, 1.2 ) }
    dend_12 { pt3dadd( 11.491, 75.1992, -0.269375, 1.92 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 58/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 14.4186, 59.5928, -1.10603, 0.96 ) }
    dend_9 { pt3dadd( 15.5249, 61.0789, -0.118202, 0.96 ) }
    dend_9 { pt3dadd( 17.7283, 63.7693, 1.56406, 0.84 ) }
    dend_9 { pt3dadd( 18.4063, 64.5596, 2.00157, 0.84 ) }
    dend_9 { pt3dadd( 21.205, 67.8282, 3.53306, 0.84 ) }
    dend_9 { pt3dadd( 22.233, 69.0467, 4.05232, 0.84 ) }
    dend_9 { pt3dadd( 24.6153, 71.8951, 5.19068, 0.84 ) }
    dend_9 { pt3dadd( 26.1217, 73.7038, 5.79281, 0.84 ) }
    dend_9 { pt3dadd( 28.3803, 76.3586, 6.56781, 0.84 ) }
    dend_9 { pt3dadd( 31.0838, 79.4927, 7.39775, 0.84 ) }
    dend_9 { pt3dadd( 33.4856, 82.272, 7.98968, 1.08 ) }
    dend_9 { pt3dadd( 34.2863, 83.2366, 8.19082, 1.08 ) }
    dend_9 { pt3dadd( 36.1078, 85.6337, 8.64528, 1.08 ) }
    // Section: dend_40, id: dend_40, parent: dend_37 (entry count 71/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -13.0489, -239.43, 24.8105, 0.72 ) }
    dend_40 { pt3dadd( -13.61, -241.034, 24.8021, 0.72 ) }
    dend_40 { pt3dadd( -14.3483, -242.981, 24.7816, 1.2 ) }
    dend_40 { pt3dadd( -15.0035, -244.413, 24.7508, 1.2 ) }
    dend_40 { pt3dadd( -15.7953, -246.178, 24.5567, 0.6 ) }
    dend_40 { pt3dadd( -16.4339, -247.685, 24.3439, 0.6 ) }
    dend_40 { pt3dadd( -17.3034, -249.87, 24.015, 0.6 ) }
    dend_40 { pt3dadd( -17.7972, -251.257, 23.7561, 0.6 ) }
    dend_40 { pt3dadd( -18.7827, -254.437, 23.0045, 1.2 ) }
    dend_40 { pt3dadd( -20.0403, -258.353, 22.4278, 0.72 ) }
    dend_40 { pt3dadd( -20.5152, -259.862, 22.1984, 0.72 ) }
    dend_40 { pt3dadd( -21.1352, -262.015, 21.8742, 0.72 ) }
    dend_40 { pt3dadd( -21.542, -263.675, 21.6403, 0.72 ) }
    dend_40 { pt3dadd( -22.5407, -268.432, 21.0905, 1.32 ) }
    dend_40 { pt3dadd( -23.597, -275.218, 20.7924, 0.84 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 86/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -13.0489, -239.43, 24.8105, 0.48 ) }
    dend_39 { pt3dadd( -12.1297, -242.54, 24.5931, 0.48 ) }
    dend_39 { pt3dadd( -11.8769, -243.46, 24.5632, 0.48 ) }
    dend_39 { pt3dadd( -11.4217, -245.593, 24.5233, 0.48 ) }
    dend_39 { pt3dadd( -11.23, -246.893, 24.4887, 0.48 ) }
    dend_39 { pt3dadd( -11.1557, -248.249, 24.4208, 0.48 ) }
    dend_39 { pt3dadd( -11.2144, -250.101, 24.299, 1.08 ) }
    dend_39 { pt3dadd( -11.4778, -251.768, 24.1324, 1.08 ) }
    dend_39 { pt3dadd( -12.1082, -254.141, 23.7082, 1.08 ) }
    dend_39 { pt3dadd( -12.6898, -255.647, 23.2831, 1.08 ) }
    dend_39 { pt3dadd( -14.0646, -258.404, 22.1148, 0.48 ) }
    dend_39 { pt3dadd( -15.1378, -260.032, 21.0083, 0.48 ) }
    dend_39 { pt3dadd( -15.9357, -261.0, 19.9802, 0.48 ) }
    dend_39 { pt3dadd( -17.4606, -262.538, 17.6659, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_39 { pt3dadd( -18.2936, -263.244, 16.2131, 0.84 ) }
    dend_39 { pt3dadd( -18.7317, -263.551, 15.3749, 0.84 ) }
    dend_39 { pt3dadd( -20.0812, -264.312, 12.4276, 1.32 ) }
    dend_39 { pt3dadd( -20.8793, -264.719, 10.4525, 0.72 ) }
    dend_39 { pt3dadd( -21.4436, -265.007, 8.96726, 0.72 ) }
    dend_39 { pt3dadd( -21.8029, -265.208, 8.06577, 0.72 ) }
    dend_39 { pt3dadd( -22.3854, -265.633, 6.64571, 0.72 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 7/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -13.0489, -239.43, 24.8105, 0.84 ) }
    dend_38 { pt3dadd( -11.7122, -243.988, 25.0438, 0.84 ) }
    dend_38 { pt3dadd( -10.5977, -247.939, 25.3236, 2.16 ) }
    dend_38 { pt3dadd( -9.05239, -253.654, 25.7951, 1.08 ) }
    dend_38 { pt3dadd( -8.32339, -256.649, 26.0742, 0.84 ) }
    dend_38 { pt3dadd( -7.90355, -258.817, 26.3569, 0.84 ) }
    dend_38 { pt3dadd( -7.6202, -260.665, 26.4415, 0.84 ) }
    dend_38 { pt3dadd( -7.53961, -262.753, 26.4871, 0.84 ) }
    dend_38 { pt3dadd( -7.56716, -264.168, 26.4583, 0.84 ) }
    dend_38 { pt3dadd( -7.66851, -266.121, 26.3384, 0.84 ) }
    dend_38 { pt3dadd( -7.96574, -268.616, 26.2443, 0.84 ) }
    dend_38 { pt3dadd( -9.34738, -276.387, 25.7808, 2.04 ) }
    dend_38 { pt3dadd( -10.3654, -280.526, 25.4012, 0.96 ) }
    dend_38 { pt3dadd( -10.6472, -281.608, 25.2456, 0.96 ) }
    dend_38 { pt3dadd( -11.3879, -284.471, 24.7429, 0.96 ) }
    dend_38 { pt3dadd( -11.8441, -286.272, 24.3813, 0.96 ) }
    dend_38 { pt3dadd( -12.551, -289.244, 23.7554, 0.96 ) }
    dend_38 { pt3dadd( -13.4769, -293.266, 23.0727, 1.68 ) }
    dend_38 { pt3dadd( -14.2121, -297.667, 22.2701, 0.96 ) }
    dend_38 { pt3dadd( -14.4193, -300.058, 21.9082, 0.96 ) }
    dend_38 { pt3dadd( -14.3771, -301.848, 21.7241, 0.96 ) }
    dend_38 { pt3dadd( -14.1643, -303.793, 21.7596, 1.32 ) }
    dend_38 { pt3dadd( -13.5526, -306.693, 22.4908, 0.6 ) }
    dend_38 { pt3dadd( -12.9267, -308.652, 23.5527, 0.96 ) }
    dend_38 { pt3dadd( -12.0377, -310.864, 25.4042, 0.6 ) }
    dend_38 { pt3dadd( -10.8898, -312.929, 27.6742, 1.08 ) }
    dend_38 { pt3dadd( -9.54532, -314.719, 30.1673, 0.48 ) }
    dend_38 { pt3dadd( -7.01392, -317.397, 34.7086, 0.48 ) }
    dend_38 { pt3dadd( -6.01714, -318.282, 36.5296, 0.48 ) }
    dend_38 { pt3dadd( -5.06139, -319.003, 38.3125, 0.48 ) }
    dend_38 { pt3dadd( -3.66426, -319.891, 40.9989, 0.48 ) }
    dend_38 { pt3dadd( -2.63572, -320.376, 42.8701, 0.48 ) }
    dend_38 { pt3dadd( -2.04253, -320.563, 43.6711, 0.48 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 40/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 28.4481, -18.1476, 1.26545, 1.32 ) }
    dend_24 { pt3dadd( 28.1861, -18.9203, 2.12373, 1.32 ) }
    dend_24 { pt3dadd( 27.9104, -19.7078, 2.82722, 0.84 ) }
    dend_24 { pt3dadd( 27.7128, -20.3228, 3.31471, 0.84 ) }
    dend_24 { pt3dadd( 27.4967, -21.0479, 3.8555, 0.84 ) }
    dend_24 { pt3dadd( 26.9364, -23.0612, 5.29269, 1.32 ) }
    dend_24 { pt3dadd( 26.6596, -24.2447, 6.0449, 1.32 ) }
    dend_24 { pt3dadd( 26.318, -26.2131, 7.18566, 0.72 ) }
    dend_24 { pt3dadd( 26.1454, -27.4738, 7.85754, 0.72 ) }
    dend_24 { pt3dadd( 26.1018, -27.9108, 8.07291, 0.72 ) }
    dend_24 { pt3dadd( 26.0559, -28.4338, 8.31036, 0.72 ) }
    dend_24 { pt3dadd( 25.8383, -32.0341, 9.71484, 1.56 ) }
    dend_24 { pt3dadd( 25.8085, -32.8177, 10.0141, 1.56 ) }
    dend_24 { pt3dadd( 25.8222, -34.7005, 10.8346, 1.56 ) }
    dend_24 { pt3dadd( 25.8273, -35.6667, 11.2454, 1.92 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 55/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 28.4481, -18.1476, 1.26545, 0.72 ) }
    dend_23 { pt3dadd( 29.0347, -19.9541, 2.81283, 0.72 ) }
    dend_23 { pt3dadd( 29.1556, -20.3226, 3.13583, 0.72 ) }
    dend_23 { pt3dadd( 29.4279, -21.1024, 3.84107, 1.2 ) }
    dend_23 { pt3dadd( 30.1982, -23.2063, 5.70701, 0.84 ) }
    dend_23 { pt3dadd( 30.7523, -24.6319, 6.93035, 1.56 ) }
    dend_23 { pt3dadd( 31.3421, -26.053, 8.11517, 0.84 ) }
    dend_23 { pt3dadd( 32.0666, -27.7552, 9.53488, 1.44 ) }
    dend_23 { pt3dadd( 32.8184, -29.1057, 10.5786, 0.96 ) }
    dend_23 { pt3dadd( 33.4945, -29.9571, 11.1802, 0.96 ) }
    dend_23 { pt3dadd( 34.3034, -30.6182, 11.5816, 0.96 ) }
    dend_23 { pt3dadd( 34.9076, -30.9907, 11.7047, 0.96 ) }
    dend_23 { pt3dadd( 36.146, -31.5769, 11.7075, 0.84 ) }
    dend_23 { pt3dadd( 38.8771, -32.7074, 11.5691, 1.32 ) }
    dend_23 { pt3dadd( 41.6597, -33.7533, 11.3174, 0.6 ) }
    dend_23 { pt3dadd( 44.8394, -34.847, 10.9648, 1.2 ) }
    dend_23 { pt3dadd( 49.1097, -36.2183, 10.3997, 0.48 ) }
    dend_23 { pt3dadd( 52.4105, -37.226, 9.87471, 0.96 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 73/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 11.491, 75.1992, -0.269375, 1.2 ) }
    dend_14 { pt3dadd( 11.6612, 82.927, 2.43916, 1.2 ) }
    dend_14 { pt3dadd( 12.0889, 86.7314, 3.46455, 1.2 ) }
    dend_14 { pt3dadd( 12.5687, 89.2202, 4.09181, 1.2 ) }
    dend_14 { pt3dadd( 13.2981, 92.3578, 4.81967, 1.2 ) }
    dend_14 { pt3dadd( 14.0868, 95.4777, 5.45787, 0.96 ) }
    dend_14 { pt3dadd( 14.7032, 98.2386, 5.94685, 0.96 ) }
    dend_14 { pt3dadd( 15.2906, 100.749, 6.16336, 0.96 ) }
    dend_14 { pt3dadd( 16.4983, 106.251, 6.62103, 0.96 ) }
    dend_14 { pt3dadd( 17.0103, 109.1, 6.84094, 0.96 ) }
    dend_14 { pt3dadd( 17.4292, 112.079, 7.06873, 0.96 ) }
    dend_14 { pt3dadd( 18.038, 117.613, 7.48235, 0.84 ) }
    dend_14 { pt3dadd( 18.2735, 120.3, 7.66436, 0.84 ) }
    dend_14 { pt3dadd( 18.5619, 125.343, 7.95976, 0.84 ) }
    dend_14 { pt3dadd( 18.663, 129.238, 8.12605, 0.84 ) }
    dend_14 { pt3dadd( 18.6381, 132.477, 8.24471, 0.84 ) }
    dend_14 { pt3dadd( 18.5045, 136.457, 8.37408, 0.84 ) }
    dend_14 { pt3dadd( 18.3341, 140.174, 8.46924, 0.84 ) }
    dend_14 { pt3dadd( 18.0755, 144.132, 8.54724, 0.84 ) }
    dend_14 { pt3dadd( 17.6363, 149.236, 8.61942, 0.84 ) }
    dend_14 { pt3dadd( 16.694, 159.091, 8.69389, 0.84 ) }
    dend_14 { pt3dadd( 16.1166, 164.382, 8.69306, 0.84 ) }
    dend_14 { pt3dadd( 15.8153, 166.823, 8.677, 0.84 ) }
    dend_14 { pt3dadd( 15.5565, 168.843, 8.65945, 0.84 ) }
    dend_14 { pt3dadd( 15.2449, 171.168, 8.67163, 0.84 ) }
    dend_14 { pt3dadd( 14.7859, 173.971, 8.74437, 0.84 ) }
    dend_14 { pt3dadd( 14.2876, 176.742, 8.87819, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_14 { pt3dadd( 13.6738, 179.885, 9.05173, 0.84 ) }
    dend_14 { pt3dadd( 13.1452, 182.38, 9.19781, 0.84 ) }
    dend_14 { pt3dadd( 11.7693, 188.701, 9.56936, 0.72 ) }
    dend_14 { pt3dadd( 10.9712, 192.366, 9.7814, 0.72 ) }
    dend_14 { pt3dadd( 10.4025, 195.564, 9.92991, 0.72 ) }
    dend_14 { pt3dadd( 10.0205, 198.409, 10.0345, 0.72 ) }
    dend_14 { pt3dadd( 9.65114, 202.245, 10.2175, 1.2 ) }
    dend_14 { pt3dadd( 9.43651, 205.523, 10.4307, 1.2 ) }
    dend_14 { pt3dadd( 9.33436, 209.238, 10.7104, 0.96 ) }
    dend_14 { pt3dadd( 9.26846, 215.976, 11.3332, 1.44 ) }
    dend_14 { pt3dadd( 9.26713, 218.529, 11.5989, 1.44 ) }
    dend_14 { pt3dadd( 9.34928, 222.33, 11.9631, 1.2 ) }
    dend_14 { pt3dadd( 9.46731, 224.955, 12.1182, 1.2 ) }
    dend_14 { pt3dadd( 9.68471, 229.458, 12.2348, 1.2 ) }
    dend_14 { pt3dadd( 9.80515, 231.794, 12.2487, 1.2 ) }
    dend_14 { pt3dadd( 9.88231, 233.241, 12.2579, 1.2 ) }
    dend_14 { pt3dadd( 10.082, 236.563, 12.2584, 1.56 ) }
    dend_14 { pt3dadd( 10.5792, 244.62, 12.2038, 0.84 ) }
    dend_14 { pt3dadd( 10.7963, 248.445, 12.2049, 0.84 ) }
    dend_14 { pt3dadd( 11.1954, 255.64, 12.3735, 1.32 ) }
    dend_14 { pt3dadd( 11.5949, 262.628, 12.6937, 0.96 ) }
    dend_14 { pt3dadd( 11.7416, 265.14, 12.8701, 0.96 ) }
    dend_14 { pt3dadd( 11.9189, 268.032, 13.1603, 0.96 ) }
    dend_14 { pt3dadd( 12.0254, 269.456, 13.3291, 0.96 ) }
    dend_14 { pt3dadd( 12.5038, 274.286, 13.8366, 0.96 ) }
    dend_14 { pt3dadd( 12.9039, 277.203, 14.1394, 0.96 ) }
    dend_14 { pt3dadd( 13.2706, 279.536, 14.3046, 0.96 ) }
    dend_14 { pt3dadd( 13.8491, 282.927, 14.475, 0.96 ) }
    dend_14 { pt3dadd( 14.3362, 285.65, 14.5574, 0.96 ) }
    dend_14 { pt3dadd( 14.7429, 287.95, 14.5464, 0.96 ) }
    dend_14 { pt3dadd( 15.6063, 293.119, 14.3346, 0.96 ) }
    dend_14 { pt3dadd( 16.3287, 297.735, 14.0551, 0.96 ) }
    dend_14 { pt3dadd( 17.1079, 303.217, 13.739, 0.96 ) }
    dend_14 { pt3dadd( 17.5289, 306.897, 13.4147, 0.96 ) }
    dend_14 { pt3dadd( 17.8828, 311.637, 12.829, 1.44 ) }
    dend_14 { pt3dadd( 18.085, 317.233, 11.9856, 0.96 ) }
    dend_14 { pt3dadd( 18.0728, 321.036, 11.302, 0.72 ) }
    dend_14 { pt3dadd( 17.9131, 326.256, 10.302, 1.2 ) }
    dend_14 { pt3dadd( 17.6714, 331.471, 9.40418, 1.2 ) }
    dend_14 { pt3dadd( 17.4381, 335.627, 8.95742, 1.2 ) }
    dend_14 { pt3dadd( 17.2058, 339.136, 8.75116, 1.56 ) }
    dend_14 { pt3dadd( 16.8844, 344.328, 8.63848, 1.68 ) }
    dend_14 { pt3dadd( 16.5656, 349.537, 8.5288, 1.08 ) }
    dend_14 { pt3dadd( 15.9411, 358.992, 8.72171, 1.44 ) }
    dend_14 { pt3dadd( 15.3974, 369.062, 9.30258, 0.84 ) }
    dend_14 { pt3dadd( 15.2919, 371.401, 9.48949, 0.84 ) }
    dend_14 { pt3dadd( 15.0112, 377.374, 10.0578, 1.44 ) }
    dend_14 { pt3dadd( 14.6724, 384.079, 10.8617, 0.6 ) }
    dend_14 { pt3dadd( 14.195, 391.369, 11.877, 1.08 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 49/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 11.491, 75.1992, -0.269375, 0.96 ) }
    dend_13 { pt3dadd( 12.1174, 77.785, -1.34983, 0.96 ) }
    dend_13 { pt3dadd( 12.542, 79.8852, -2.01021, 0.96 ) }
    dend_13 { pt3dadd( 13.3812, 84.5506, -3.21542, 0.96 ) }
    dend_13 { pt3dadd( 13.6987, 86.564, -3.65803, 1.32 ) }
    dend_13 { pt3dadd( 13.8543, 87.8092, -3.88046, 1.32 ) }
    dend_13 { pt3dadd( 14.211, 91.6847, -4.44073, 0.96 ) }
    dend_13 { pt3dadd( 14.2833, 94.1195, -4.67469, 0.96 ) }
    dend_13 { pt3dadd( 14.274, 95.5239, -4.67677, 0.96 ) }
    dend_13 { pt3dadd( 14.2625, 97.0321, -4.54412, 0.96 ) }
    dend_13 { pt3dadd( 14.2805, 98.981, -4.51299, 0.96 ) }
    dend_13 { pt3dadd( 14.3014, 101.189, -4.58479, 0.96 ) }
    dend_13 { pt3dadd( 14.335, 102.293, -4.68465, 0.96 ) }
    dend_13 { pt3dadd( 14.438, 103.958, -4.88207, 0.96 ) }
    dend_13 { pt3dadd( 14.7738, 107.775, -5.41711, 1.44 ) }
    dend_13 { pt3dadd( 15.5354, 114.117, -6.41067, 1.2 ) }
    dend_13 { pt3dadd( 15.7714, 115.669, -6.67553, 1.2 ) }
    dend_13 { pt3dadd( 16.3993, 119.535, -7.34819, 1.08 ) }
    dend_13 { pt3dadd( 16.7576, 121.863, -7.7377, 1.08 ) }
    dend_13 { pt3dadd( 16.9047, 122.923, -7.90161, 1.08 ) }
    dend_13 { pt3dadd( 17.216, 125.402, -8.22739, 1.08 ) }
    dend_13 { pt3dadd( 17.4782, 127.709, -8.39144, 1.08 ) }
    dend_13 { pt3dadd( 17.6263, 130.705, -8.4972, 1.08 ) }
    dend_13 { pt3dadd( 17.4894, 133.251, -8.40611, 1.08 ) }
    dend_13 { pt3dadd( 17.1851, 135.323, -8.29344, 1.08 ) }
    dend_13 { pt3dadd( 16.8559, 136.83, -8.18701, 1.08 ) }
    dend_13 { pt3dadd( 16.1949, 139.183, -7.98954, 1.08 ) }
    dend_13 { pt3dadd( 15.1296, 142.734, -7.65536, 1.56 ) }
    dend_13 { pt3dadd( 14.1238, 146.111, -7.23911, 0.84 ) }
    dend_13 { pt3dadd( 13.5616, 148.122, -6.97028, 0.84 ) }
    dend_13 { pt3dadd( 12.9313, 150.536, -6.61637, 0.84 ) }
    dend_13 { pt3dadd( 12.4975, 152.489, -6.33256, 0.84 ) }
    dend_13 { pt3dadd( 11.7351, 156.935, -5.7242, 1.2 ) }
    dend_13 { pt3dadd( 11.3161, 160.311, -5.30739, 0.96 ) }
    dend_13 { pt3dadd( 11.127, 162.459, -5.05292, 0.96 ) }
    dend_13 { pt3dadd( 10.9603, 165.301, -4.66798, 1.2 ) }
    dend_13 { pt3dadd( 10.7413, 169.696, -4.06333, 0.84 ) }
    dend_13 { pt3dadd( 10.6124, 172.193, -3.73214, 0.84 ) }
    dend_13 { pt3dadd( 10.5444, 173.364, -3.61948, 0.84 ) }
    dend_13 { pt3dadd( 10.5007, 174.144, -3.59508, 0.84 ) }
    dend_13 { pt3dadd( 10.4248, 175.517, -3.58123, 0.84 ) }
    dend_13 { pt3dadd( 10.27, 179.056, -3.61084, 0.72 ) }
    dend_13 { pt3dadd( 10.2091, 180.679, -3.62562, 1.32 ) }
    dend_13 { pt3dadd( 10.0393, 184.252, -3.57168, 0.96 ) }
    dend_13 { pt3dadd( 9.96013, 186.616, -3.49897, 0.96 ) }
    dend_13 { pt3dadd( 9.9125, 188.753, -3.41215, 0.96 ) }
    dend_13 { pt3dadd( 9.90099, 190.228, -3.34415, 0.96 ) }
    dend_13 { pt3dadd( 10.0033, 194.376, -3.13591, 1.32 ) }
    dend_13 { pt3dadd( 10.1801, 197.965, -2.9053, 0.72 ) }
    dend_13 { pt3dadd( 10.4193, 201.459, -2.61899, 0.72 ) }
    dend_13 { pt3dadd( 10.7136, 205.203, -2.30721, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_13 { pt3dadd( 10.8277, 206.557, -2.22287, 0.72 ) }
    dend_13 { pt3dadd( 11.041, 208.913, -2.10704, 0.72 ) }
    dend_13 { pt3dadd( 11.232, 210.794, -2.04016, 0.72 ) }
    dend_13 { pt3dadd( 11.4109, 212.355, -2.02052, 0.72 ) }
    dend_13 { pt3dadd( 11.5565, 213.919, -1.9986, 0.72 ) }
    dend_13 { pt3dadd( 11.6879, 215.512, -1.97481, 0.72 ) }
    dend_13 { pt3dadd( 11.7584, 216.765, -1.92639, 0.72 ) }
    dend_13 { pt3dadd( 11.8398, 218.982, -1.75078, 0.72 ) }
    dend_13 { pt3dadd( 11.8718, 220.677, -1.55109, 0.72 ) }
    dend_13 { pt3dadd( 11.8828, 222.126, -1.30967, 0.72 ) }
    dend_13 { pt3dadd( 11.9767, 223.538, -0.902339, 0.72 ) }
    dend_13 { pt3dadd( 12.1979, 225.239, -0.215317, 0.72 ) }
    dend_13 { pt3dadd( 12.3591, 226.179, 0.247239, 0.72 ) }
    dend_13 { pt3dadd( 12.4565, 226.682, 0.492376, 0.72 ) }
    dend_13 { pt3dadd( 12.5642, 227.246, 0.733569, 0.72 ) }
    dend_13 { pt3dadd( 13.2018, 230.824, 2.07711, 1.32 ) }
    dend_13 { pt3dadd( 13.3507, 231.796, 2.39946, 0.84 ) }
    dend_13 { pt3dadd( 13.9485, 236.329, 3.6626, 0.84 ) }
    dend_13 { pt3dadd( 14.3713, 239.943, 4.50405, 0.84 ) }
    dend_13 { pt3dadd( 14.85, 244.443, 5.39388, 1.2 ) }
    dend_13 { pt3dadd( 15.0155, 246.218, 5.66379, 1.2 ) }
    dend_13 { pt3dadd( 15.1035, 247.415, 5.78176, 1.2 ) }
    dend_13 { pt3dadd( 15.2771, 249.37, 5.98, 1.2 ) }
    dend_13 { pt3dadd( 15.5149, 251.518, 6.17763, 1.2 ) }
    dend_13 { pt3dadd( 15.632, 252.514, 6.26941, 1.2 ) }
    dend_13 { pt3dadd( 15.8575, 254.507, 6.43345, 1.2 ) }
    dend_13 { pt3dadd( 16.0874, 256.454, 6.58562, 1.2 ) }
    dend_13 { pt3dadd( 16.7532, 263.02, 7.15242, 1.2 ) }
    dend_13 { pt3dadd( 17.0756, 266.711, 7.4813, 1.68 ) }
    dend_13 { pt3dadd( 17.483, 271.962, 7.94042, 1.08 ) }
    dend_13 { pt3dadd( 17.873, 277.572, 8.4086, 1.56 ) }
    dend_13 { pt3dadd( 18.0303, 280.105, 8.60655, 1.56 ) }
    dend_13 { pt3dadd( 18.2833, 284.256, 8.92838, 1.44 ) }
    dend_13 { pt3dadd( 18.5267, 288.253, 9.21907, 1.44 ) }
    dend_13 { pt3dadd( 18.7336, 291.787, 9.52091, 1.44 ) }
    dend_13 { pt3dadd( 18.9429, 294.959, 9.86004, 1.44 ) }
    dend_13 { pt3dadd( 19.0782, 296.959, 10.0604, 1.44 ) }
    dend_13 { pt3dadd( 19.3221, 300.857, 10.5039, 1.44 ) }
    dend_13 { pt3dadd( 19.435, 302.457, 10.6963, 1.44 ) }
    dend_13 { pt3dadd( 19.5394, 304.291, 10.9743, 1.44 ) }
    dend_13 { pt3dadd( 19.6298, 306.48, 11.3605, 1.44 ) }
    dend_13 { pt3dadd( 19.5494, 310.281, 11.8408, 0.84 ) }
    dend_13 { pt3dadd( 19.4298, 313.392, 12.2065, 0.84 ) }
    dend_13 { pt3dadd( 19.2941, 315.31, 12.3864, 0.84 ) }
    dend_13 { pt3dadd( 19.1273, 317.125, 12.5335, 0.84 ) }
    dend_13 { pt3dadd( 18.9309, 318.673, 12.6247, 0.84 ) }
    dend_13 { pt3dadd( 17.9228, 324.309, 12.7219, 1.2 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 47/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 36.1078, 85.6337, 8.64528, 0.96 ) }
    dend_11 { pt3dadd( 38.4047, 86.5953, 8.14588, 0.96 ) }
    dend_11 { pt3dadd( 39.9459, 87.6177, 7.83909, 0.96 ) }
    dend_11 { pt3dadd( 41.0242, 88.5452, 7.64448, 0.96 ) }
    dend_11 { pt3dadd( 42.3645, 89.9502, 7.42977, 0.96 ) }
    dend_11 { pt3dadd( 44.249, 92.2623, 7.16278, 0.96 ) }
    dend_11 { pt3dadd( 45.1364, 93.5061, 7.05857, 0.96 ) }
    dend_11 { pt3dadd( 46.6812, 96.6043, 6.97056, 1.2 ) }
    dend_11 { pt3dadd( 47.0566, 97.6731, 6.98296, 1.2 ) }
    dend_11 { pt3dadd( 47.354, 98.8915, 7.03559, 0.6 ) }
    dend_11 { pt3dadd( 47.5471, 99.9496, 7.10307, 0.6 ) }
    dend_11 { pt3dadd( 47.8223, 101.985, 7.37003, 1.08 ) }
    dend_11 { pt3dadd( 48.0081, 103.391, 7.5814, 0.36 ) }
    dend_11 { pt3dadd( 48.1269, 104.241, 7.7222, 0.36 ) }
    dend_11 { pt3dadd( 48.4041, 106.252, 8.07342, 0.84 ) }
    dend_11 { pt3dadd( 48.6183, 108.062, 8.41543, 0.84 ) }
    dend_11 { pt3dadd( 48.9025, 111.027, 9.0092, 1.44 ) }
    dend_11 { pt3dadd( 48.9921, 112.193, 9.27616, 1.44 ) }
    dend_11 { pt3dadd( 49.0901, 113.455, 9.58657, 0.84 ) }
    dend_11 { pt3dadd( 49.1814, 115.039, 9.94249, 0.84 ) }
    dend_11 { pt3dadd( 49.2513, 117.056, 10.3564, 1.32 ) }
    dend_11 { pt3dadd( 49.2638, 118.185, 10.5801, 1.32 ) }
    dend_11 { pt3dadd( 49.3057, 119.902, 10.8613, 1.08 ) }
    dend_11 { pt3dadd( 49.3176, 120.605, 10.9732, 1.08 ) }
    dend_11 { pt3dadd( 49.4021, 123.225, 11.3517, 1.56 ) }
    dend_11 { pt3dadd( 49.426, 123.948, 11.4353, 1.56 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 73/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 36.1078, 85.6337, 8.64528, 1.08 ) }
    dend_10 { pt3dadd( 36.5041, 88.6363, 8.74286, 1.08 ) }
    dend_10 { pt3dadd( 36.7904, 90.7279, 8.75044, 1.08 ) }
    dend_10 { pt3dadd( 37.1351, 93.4608, 8.84841, 1.08 ) }
    dend_10 { pt3dadd( 37.4994, 96.7082, 9.03338, 0.84 ) }
    dend_10 { pt3dadd( 38.1662, 102.998, 9.45193, 1.56 ) }
    dend_10 { pt3dadd( 38.848, 108.949, 9.93807, 1.2 ) }
    dend_10 { pt3dadd( 39.3807, 113.762, 10.3433, 1.08 ) }
    dend_10 { pt3dadd( 39.8717, 118.52, 10.7137, 1.32 ) }
    dend_10 { pt3dadd( 40.1234, 121.593, 10.8642, 0.96 ) }
    dend_10 { pt3dadd( 40.2645, 124.349, 10.9886, 1.32 ) }
    dend_10 { pt3dadd( 40.3461, 127.881, 11.118, 1.08 ) }
    dend_10 { pt3dadd( 40.3896, 134.021, 11.3215, 0.84 ) }
    dend_10 { pt3dadd( 40.3667, 136.466, 11.4014, 0.84 ) }
    dend_10 { pt3dadd( 40.2348, 144.704, 11.4435, 1.08 ) }
    dend_10 { pt3dadd( 40.0927, 149.791, 11.4432, 1.08 ) }
    dend_10 { pt3dadd( 39.9332, 152.799, 11.4505, 0.96 ) }
    dend_10 { pt3dadd( 39.3615, 159.233, 11.4982, 1.2 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 91/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 25.8273, -35.6667, 11.2454, 0.84 ) }
    dend_26 { pt3dadd( 26.5061, -38.2066, 12.5576, 0.84 ) }
    dend_26 { pt3dadd( 26.9674, -39.8999, 13.4193, 0.84 ) }
    dend_26 { pt3dadd( 27.5261, -41.9885, 14.518, 1.44 ) }
    dend_26 { pt3dadd( 28.0632, -43.979, 15.5817, 1.08 ) }
    dend_26 { pt3dadd( 28.5899, -45.978, 16.6724, 0.48 ) }
    dend_26 { pt3dadd( 29.6747, -50.0952, 18.9189, 1.2 ) }
    dend_26 { pt3dadd( 30.0834, -51.5428, 19.7068, 1.2 ) }
    dend_26 { pt3dadd( 30.6747, -53.6346, 20.8396, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_26 { pt3dadd( 31.1152, -55.223, 21.7025, 1.2 ) }
    dend_26 { pt3dadd( 31.5776, -57.0188, 22.7043, 1.8 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 2/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 25.8273, -35.6667, 11.2454, 0.96 ) }
    dend_25 { pt3dadd( 28.5074, -38.3709, 12.4752, 0.96 ) }
    dend_25 { pt3dadd( 29.6714, -39.7687, 13.0548, 0.96 ) }
    dend_25 { pt3dadd( 32.181, -42.6794, 14.4567, 1.56 ) }
    dend_25 { pt3dadd( 33.7817, -44.6777, 15.3507, 0.84 ) }
    dend_25 { pt3dadd( 35.7904, -47.1593, 16.5903, 1.32 ) }
    dend_25 { pt3dadd( 38.2332, -50.1599, 18.1593, 0.72 ) }
    dend_25 { pt3dadd( 40.6734, -53.1509, 19.9115, 1.2 ) }
    dend_25 { pt3dadd( 43.3974, -56.5712, 21.9818, 0.72 ) }
    dend_25 { pt3dadd( 45.8772, -59.8271, 24.0236, 1.44 ) }
    dend_25 { pt3dadd( 48.9923, -63.9455, 26.7048, 0.72 ) }
    dend_25 { pt3dadd( 49.534, -64.6411, 27.1923, 0.72 ) }
    dend_25 { pt3dadd( 51.0684, -66.5216, 28.6179, 1.32 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 15/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 31.5776, -57.0188, 22.7043, 1.2 ) }
    dend_32 { pt3dadd( 32.129, -58.6611, 23.683, 1.2 ) }
    dend_32 { pt3dadd( 33.1824, -59.8677, 25.2825, 0.72 ) }
    dend_32 { pt3dadd( 35.335, -61.7702, 28.5399, 1.92 ) }
    dend_32 { pt3dadd( 36.6017, -62.7691, 30.4596, 1.92 ) }
    dend_32 { pt3dadd( 37.6529, -63.6577, 32.0921, 1.2 ) }
    dend_32 { pt3dadd( 39.1703, -65.0364, 34.4849, 1.68 ) }
    dend_32 { pt3dadd( 44.5597, -69.979, 43.1623, 1.68 ) }
    dend_32 { pt3dadd( 46.2648, -71.7041, 45.9975, 2.28 ) }
    dend_32 { pt3dadd( 47.5751, -73.1871, 48.2756, 1.2 ) }
    dend_32 { pt3dadd( 48.8189, -74.8943, 50.5395, 1.2 ) }
    dend_32 { pt3dadd( 49.6128, -76.2845, 52.0848, 1.2 ) }
    dend_32 { pt3dadd( 50.8944, -79.3531, 54.8343, 1.8 ) }
    dend_32 { pt3dadd( 51.8756, -83.2776, 57.4749, 1.08 ) }
    dend_32 { pt3dadd( 52.2282, -84.7941, 58.4709, 1.08 ) }
    dend_32 { pt3dadd( 52.9794, -88.2128, 60.6804, 0.6 ) }
    dend_32 { pt3dadd( 53.5291, -90.673, 62.3516, 1.2 ) }
    dend_32 { pt3dadd( 53.9909, -93.0004, 63.9842, 1.2 ) }
    dend_32 { pt3dadd( 54.4475, -95.3596, 65.7858, 1.8 ) }
    dend_32 { pt3dadd( 54.9645, -97.8356, 67.9539, 0.72 ) }
    dend_32 { pt3dadd( 55.2795, -99.2227, 69.307, 0.72 ) }
    dend_32 { pt3dadd( 55.6882, -100.92, 71.1478, 0.72 ) }
    dend_32 { pt3dadd( 56.0778, -102.438, 72.9117, 0.72 ) }
    dend_32 { pt3dadd( 56.7509, -104.878, 75.8871, 1.8 ) }
    dend_32 { pt3dadd( 57.5223, -107.379, 78.9569, 0.84 ) }
    dend_32 { pt3dadd( 57.9871, -108.973, 80.8373, 0.84 ) }
    dend_32 { pt3dadd( 58.2768, -110.0, 81.9785, 0.84 ) }
    dend_32 { pt3dadd( 59.0568, -112.858, 85.0353, 1.44 ) }
    dend_32 { pt3dadd( 59.5279, -114.708, 86.9357, 0.72 ) }
    dend_32 { pt3dadd( 59.9592, -116.675, 88.8508, 0.72 ) }
    dend_32 { pt3dadd( 60.2227, -118.236, 90.2518, 0.72 ) }
    dend_32 { pt3dadd( 60.5538, -120.274, 92.0949, 1.2 ) }
    dend_32 { pt3dadd( 61.0801, -123.757, 95.2724, 0.6 ) }
    dend_32 { pt3dadd( 61.2838, -125.143, 96.5293, 0.6 ) }
    dend_32 { pt3dadd( 61.4184, -126.091, 97.3801, 0.6 ) }
    dend_32 { pt3dadd( 61.8346, -131.216, 101.587, 1.8 ) }
    dend_32 { pt3dadd( 61.9334, -133.821, 103.556, 0.96 ) }
    dend_32 { pt3dadd( 61.9409, -135.831, 104.953, 0.96 ) }
    dend_32 { pt3dadd( 61.8805, -138.525, 106.675, 0.96 ) }
    dend_32 { pt3dadd( 61.7684, -141.406, 108.49, 1.68 ) }
    dend_32 { pt3dadd( 61.5253, -145.695, 111.284, 0.84 ) }
    dend_32 { pt3dadd( 61.4015, -146.959, 112.19, 0.84 ) }
    dend_32 { pt3dadd( 61.3214, -147.516, 112.568, 0.84 ) }
    dend_32 { pt3dadd( 60.9744, -149.475, 113.945, 0.84 ) }
    dend_32 { pt3dadd( 60.6661, -150.867, 115.039, 0.84 ) }
    dend_32 { pt3dadd( 60.284, -153.059, 117.169, 1.44 ) }
    dend_32 { pt3dadd( 60.3135, -154.372, 119.112, 0.72 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 62/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 31.5776, -57.0188, 22.7043, 0.96 ) }
    dend_27 { pt3dadd( 32.9875, -58.3254, 23.3031, 0.96 ) }
    dend_27 { pt3dadd( 34.3832, -59.9797, 23.497, 1.44 ) }
    dend_27 { pt3dadd( 36.1831, -62.2764, 23.5262, 0.96 ) }
    dend_27 { pt3dadd( 37.6886, -64.0683, 23.4554, 0.96 ) }
    dend_27 { pt3dadd( 39.4314, -66.0387, 23.3522, 0.96 ) }
    dend_27 { pt3dadd( 42.1518, -69.0493, 23.1496, 0.6 ) }
    dend_27 { pt3dadd( 46.727, -74.0906, 22.9945, 1.2 ) }
    dend_27 { pt3dadd( 48.1623, -75.6348, 22.9848, 1.2 ) }
    dend_27 { pt3dadd( 51.3896, -79.0852, 22.8818, 1.44 ) }
    dend_27 { pt3dadd( 53.4217, -81.1216, 22.9685, 0.6 ) }
    dend_27 { pt3dadd( 55.2191, -82.7268, 23.3381, 1.08 ) }
    dend_27 { pt3dadd( 57.9813, -84.874, 24.572, 0.6 ) }
    dend_27 { pt3dadd( 59.2335, -85.8206, 25.6025, 0.6 ) }
    dend_27 { pt3dadd( 61.3154, -87.6643, 27.9733, 1.08 ) }
    dend_27 { pt3dadd( 63.2685, -90.0653, 31.2453, 0.6 ) }
    dend_27 { pt3dadd( 64.7493, -92.3614, 34.2647, 0.6 ) }
    dend_27 { pt3dadd( 65.453, -93.5786, 35.8978, 0.6 ) }
    dend_27 { pt3dadd( 66.426, -95.5955, 38.3825, 1.08 ) }
    dend_27 { pt3dadd( 66.9104, -96.6845, 39.7707, 1.08 ) }
    dend_27 { pt3dadd( 67.8345, -98.9729, 42.6596, 0.48 ) }
    dend_27 { pt3dadd( 68.14, -100.241, 43.642, 0.48 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 84/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 68.14, -100.241, 43.642, 0.84 ) }
    dend_31 { pt3dadd( 68.3743, -101.226, 43.9787, 0.84 ) }
    dend_31 { pt3dadd( 68.7183, -102.579, 44.5202, 0.84 ) }
    dend_31 { pt3dadd( 69.0922, -104.096, 45.0395, 1.44 ) }
    dend_31 { pt3dadd( 69.6602, -106.604, 45.8191, 0.6 ) }
    dend_31 { pt3dadd( 69.8882, -107.872, 46.1874, 0.6 ) }
    dend_31 { pt3dadd( 70.0276, -109.043, 46.5875, 0.6 ) }
    dend_31 { pt3dadd( 70.2084, -111.233, 47.1563, 0.6 ) }
    dend_31 { pt3dadd( 70.2588, -113.335, 47.4466, 1.08 ) }
    dend_31 { pt3dadd( 70.1497, -114.74, 47.4335, 0.6 ) }
    dend_31 { pt3dadd( 69.737, -116.243, 46.9907, 0.6 ) }
    dend_31 { pt3dadd( 68.7253, -118.823, 45.7258, 1.44 ) }
    dend_31 { pt3dadd( 66.6806, -122.582, 42.7526, 1.44 ) }
    dend_31 { pt3dadd( 65.9598, -123.543, 41.476, 1.44 ) }
    dend_31 { pt3dadd( 65.4556, -124.011, 40.4366, 0.96 ) }
    dend_31 { pt3dadd( 64.7157, -124.556, 38.5038, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 0/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 68.14, -100.241, 43.642, 0.48 ) }
    dend_28 { pt3dadd( 71.3218, -99.7687, 42.9041, 0.48 ) }
    dend_28 { pt3dadd( 74.7957, -99.1713, 42.0641, 0.48 ) }
    dend_28 { pt3dadd( 76.4973, -98.8785, 41.6527, 0.48 ) }
    dend_28 { pt3dadd( 78.148, -98.5944, 41.2536, 0.48 ) }
    dend_28 { pt3dadd( 82.8872, -97.7788, 40.1077, 0.84 ) }
    dend_28 { pt3dadd( 88.3142, -96.8448, 38.7954, 1.32 ) }
    dend_28 { pt3dadd( 89.6151, -96.6745, 38.4693, 1.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 8/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 89.6151, -96.6745, 38.4693, 0.6 ) }
    dend_30 { pt3dadd( 92.0256, -96.2595, 38.7827, 0.6 ) }
    dend_30 { pt3dadd( 95.766, -95.8887, 39.3379, 0.6 ) }
    dend_30 { pt3dadd( 97.2125, -95.8296, 39.5773, 0.6 ) }
    dend_30 { pt3dadd( 98.7554, -95.8532, 39.7674, 0.6 ) }
    dend_30 { pt3dadd( 100.949, -96.0403, 40.0107, 1.08 ) }
    dend_30 { pt3dadd( 105.515, -96.7009, 40.5116, 0.6 ) }
    dend_30 { pt3dadd( 107.865, -97.281, 40.8457, 0.6 ) }
    dend_30 { pt3dadd( 109.19, -97.7757, 41.0178, 0.6 ) }
    dend_30 { pt3dadd( 112.111, -99.1462, 41.3044, 0.6 ) }
    dend_30 { pt3dadd( 114.635, -100.507, 41.4738, 1.2 ) }
    dend_30 { pt3dadd( 116.291, -101.542, 41.551, 1.2 ) }
    dend_30 { pt3dadd( 118.106, -102.864, 41.5647, 0.6 ) }
    dend_30 { pt3dadd( 121.09, -105.06, 41.5049, 0.6 ) }
    dend_30 { pt3dadd( 122.894, -106.368, 41.463, 0.6 ) }
    dend_30 { pt3dadd( 124.206, -107.346, 41.5049, 0.6 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 24/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 89.6151, -96.6745, 38.4693, 1.2 ) }
    dend_29 { pt3dadd( 89.7947, -96.0183, 38.3623, 1.2 ) }
    dend_29 { pt3dadd( 90.3072, -94.1452, 38.057, 0.84 ) }
    dend_29 { pt3dadd( 90.9814, -91.6809, 37.6552, 0.36 ) }
    dend_29 { pt3dadd( 91.2487, -90.7041, 37.496, 0.36 ) }
    dend_29 { pt3dadd( 91.9379, -88.1853, 37.0853, 0.84 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_33, dend_16, dend_7, dend_4, dend_3, dend_0, dend_35, dend_34, dend_20, dend_17, dend_15, dend_8, dend_6, dend_5, dend_2, dend_1, dend_37, dend_36, dend_22, dend_21, dend_19, dend_18, dend_12, dend_9, dend_40, dend_39, dend_38, dend_24, dend_23, dend_14, dend_13, dend_11, dend_10, dend_26, dend_25, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_2 = new SectionList()
    dend_33 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_33, dend_16, dend_7, dend_4, dend_3, dend_0, dend_35, dend_34, dend_20, dend_17, dend_15, dend_8, dend_6, dend_5, dend_2, dend_1, dend_37, dend_36, dend_22, dend_21, dend_19, dend_18, dend_12, dend_9, dend_40, dend_39, dend_38, dend_24, dend_23, dend_14, dend_13, dend_11, dend_10, dend_26, dend_25, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_33, dend_16, dend_7, dend_4, dend_3, dend_0, axon_0, dend_35, dend_34, dend_20, dend_17, dend_15, dend_8, dend_6, dend_5, dend_2, dend_1, axon_1, dend_37, dend_36, dend_22, dend_21, dend_19, dend_18, dend_12, dend_9, dend_40, dend_39, dend_38, dend_24, dend_23, dend_14, dend_13, dend_11, dend_10, dend_26, dend_25, dend_32, dend_27, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_5 = new SectionList()
    dend_33 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_4 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_35 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_34 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_15 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_5 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_37 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_36 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_21 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_19 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_38 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_14 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_13 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_11 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_10 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_25 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_32 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_27 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_3 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_16 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_7 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_20 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_33 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_17 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_22 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_8 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_18 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_24 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_23 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_26 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_9 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_28 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_31 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_29 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_30 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_40 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_39 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_6 OneSecGrp_SectionRef_15.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_4 nseg = 13
    dend_35 nseg = 5
    dend_34 nseg = 3
    dend_15 nseg = 3
    dend_5 nseg = 3
    dend_37 nseg = 5
    dend_36 nseg = 3
    dend_21 nseg = 3
    dend_19 nseg = 5
    dend_38 nseg = 5
    dend_14 nseg = 15
    dend_13 nseg = 13
    dend_11 nseg = 3
    dend_10 nseg = 3
    dend_25 nseg = 3
    dend_32 nseg = 7
    dend_27 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_DBC_189fcfd9e0_0_0


