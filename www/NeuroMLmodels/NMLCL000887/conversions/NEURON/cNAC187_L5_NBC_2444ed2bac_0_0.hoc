// Cell: cNAC187_L5_NBC_2444ed2bac_0_0
/*
{
  "id" : "cNAC187_L5_NBC_2444ed2bac_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.80187, -2.65497, 0.815749, 4.80603", "-7.85711, -2.42647, 0.741853, 8.49266", "-6.91236, -2.19797, 0.667957, 10.2778", "-5.96761, -1.96947, 0.594062, 12.0489", "-5.02286, -1.74096, 0.520166, 13.6363", "-4.07811, -1.51246, 0.44627, 14.7753", "-3.13335, -1.28396, 0.372375, 15.6483", "-2.1886, -1.05546, 0.298479, 16.2981", "-1.24385, -0.826954, 0.224583, 16.8319", "-0.299097, -0.598451, 0.150687, 17.082", "0.645655, -0.369949, 0.0767917, 17.31", "1.59041, -0.141446, 0.00289604, 17.538", "2.53516, 0.0870562, -0.0709997, 17.43", "3.47991, 0.315559, -0.144895, 16.9438", "4.42466, 0.544061, -0.218791, 16.4576", "5.36941, 0.772563, -0.292687, 15.5199", "6.31417, 1.00107, -0.366582, 14.2667", "7.25892, 1.22957, -0.440478, 13.0135", "8.20367, 1.45807, -0.514374, 10.6764", "9.14842, 1.68657, -0.588269, 7.11693", "10.0932, 1.91508, -0.662165, 4.00176" ]
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-9.8861, 1.24219, -7.14961, 1.71", "-10.0491, 1.19052, -6.83031, 1.71", "-13.5704, 0.0746865, 0.0656075, 1.71" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-3.2361, 7.29694, -0.579609, 1.03", "-3.58146, 7.64061, -0.464413, 1.03", "-3.83951, 8.14443, 0.234563, 0.86", "-4.35879, 9.15825, 1.64107, 0.86", "-4.66007, 9.74648, 2.45715, 0.86", "-5.67638, 11.7307, 5.20992, 0.86", "-5.76969, 11.9128, 5.46267, 0.86", "-7.85016, 16.9904, 12.8961, 0.86" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-1.0861, 8.34019, -5.19961, 1.71", "-0.653036, 11.1181, -5.03427, 1.71", "-0.520269, 11.9698, -4.98358, 0.86", "-0.133734, 14.4493, -4.836, 0.68", "0.232254, 16.797, -4.69627, 0.68", "0.420052, 18.0016, -4.62457, 0.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "8.1539, 4.71319, -6.22961, 1.2", "9.66761, 5.15248, -6.98256, 1.2", "12.5467, 5.98803, -8.41471, 1.2", "16.6245, 7.17142, -10.443, 0.68", "21.157, 8.48679, -12.6976, 0.68", "24.425, 9.43519, -14.3232, 0.68", "26.3401, 9.99097, -15.2758, 0.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "10.4639, -0.785812, -1.19961, 1.54", "11.8338, 0.322596, 0.345248, 1.54", "12.821, 1.12137, 1.45855, 1.54", "15.4627, 3.25888, 4.43773, 1.03", "15.9684, 3.66806, 5.00803, 1.03", "16.1641, 3.82644, 5.22877, 1.03", "17.3744, 4.8057, 6.59363, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "2.0039, -4.71506, -5.19961, 1.2", "1.81666, -4.70505, -5.39921, 1.2", "0.783252, -4.69074, -6.38297, 1.2", "0.206626, -4.18614, -9.52647, 1.03", "0.0258557, -3.96826, -10.9004, 0.68", "-0.298639, -3.53046, -13.3829, 0.68", "-0.439187, -3.19844, -15.2147, 0.68", "-0.528776, -2.89434, -16.6863, 2.05", "-1.27262, 0.179035, -29.8261, 0.17", "-1.31223, 0.340464, -30.4733, 0.17", "-1.40065, 0.680813, -31.6621, 0.17", "-2.03799, 2.47688, -37.3718, 0.17", "-2.45391, 3.29825, -40.0542, 0.17", "-2.87769, 3.87542, -41.7329, 2.05", "-3.58594, 4.31615, -42.8566, 0.17", "-4.04148, 4.57721, -43.542, 0.17", "-5.02022, 5.07767, -45.1883, 0.17", "-7.82373, 6.07387, -49.399, 2.22", "-7.97732, 6.17393, -50.098, 0.17", "-8.14747, 6.28694, -51.1312, 0.17", "-8.2998, 6.40199, -52.2438, 0.17", "-8.85751, 6.88898, -57.1356, 0.17", "-9.12184, 7.19046, -60.1106, 0.17", "-10.3694, 8.56288, -76.0315, 1.71", "-10.5073, 8.76867, -78.4213, 0.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.7139, -0.386062, -15.7696, 1.37", "1.98298, -3.50778, -15.7511, 1.37", "2.14317, -5.1606, -15.7013, 1.37", "2.35949, -6.92888, -15.6338, 1.03", "2.7349, -9.45097, -15.53, 1.03", "3.4666, -13.8742, -15.3402, 1.03", "3.98079, -16.9826, -15.2069, 1.03", "4.46223, -20.2668, -14.9663, 1.03", "4.70304, -22.1293, -14.8228, 2.22", "4.86437, -23.4871, -14.7089, 1.54", "4.90483, -23.7342, -14.6858, 1.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "10.0932, 1.91508, -0.662165, 1.00003", "24.6728, 5.44137, -0.662165, 1.00003", "39.2524, 8.96767, -0.662165, 1.00003" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-13.5704, 0.0746865, 0.0656075, 1.37", "-14.0836, -0.242051, 0.078443, 1.37", "-15.7594, -1.27642, 0.12036, 1.37", "-17.3574, -2.26278, 0.160331, 1.37" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-13.5704, 0.0746865, 0.0656075, 0.68", "-18.894, 1.77286, -6.25002, 0.68", "-20.6143, 2.45408, -8.13702, 0.51", "-21.7515, 2.93737, -9.35519, 0.51", "-22.8461, 3.52576, -10.6182, 0.51", "-23.0368, 3.64268, -10.8391, 0.51", "-23.1706, 3.73225, -10.9829, 0.51", "-26.6983, 6.48726, -14.2233, 0.51", "-26.7491, 6.52849, -14.2715, 0.51", "-28.6113, 8.06819, -15.8585, 0.51", "-30.528, 9.7079, -17.2583, 1.88", "-32.2021, 11.111, -18.3534, 0.17", "-34.7264, 13.18, -19.9339, 0.68", "-36.3266, 14.3312, -20.7683, 0.68", "-38.2008, 15.5194, -21.6886, 0.17", "-39.9431, 16.4426, -22.4406, 1.37", "-41.8906, 17.449, -23.6379, 0.17", "-43.9385, 18.5562, -25.2679, 0.68", "-45.8988, 19.6494, -26.9227, 0.68", "-46.459, 19.981, -27.4497, 0.51", "-47.423, 20.5573, -28.3735, 1.03", "-51.9913, 23.1443, -32.29, 0.51", "-53.3877, 23.9453, -33.325, 0.51", "-55.8946, 25.3197, -34.8995, 0.51", "-56.0158, 25.3912, -34.971, 0.51", "-57.445, 26.1554, -35.6204, 2.22", "-58.8858, 26.7759, -36.0371, 0.34", "-61.0889, 27.4206, -36.1576, 0.34", "-63.3751, 27.882, -36.2077, 0.34", "-64.9145, 28.1356, -36.1879, 0.34", "-67.2226, 28.4843, -36.1223, 2.05", "-68.9759, 28.7092, -36.0226, 0.17", "-72.6299, 29.1381, -35.6409, 0.17", "-74.4849, 29.3146, -35.3123, 0.17", "-76.2186, 29.4513, -34.9728, 2.22" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-7.85016, 16.9904, 12.8961, 0.68", "-9.56691, 21.3123, 15.9546, 0.68", "-10.5058, 23.0443, 17.0065, 0.51", "-11.9802, 25.6094, 17.9523, 0.51", "-13.1295, 27.7465, 18.6614, 0.51", "-13.4416, 28.3053, 18.8304, 1.37", "-14.0806, 29.3683, 19.137, 0.68", "-15.2292, 31.1203, 19.3927, 0.34", "-18.1253, 34.8517, 19.9032, 0.34", "-19.7644, 36.6322, 20.1892, 0.34", "-21.3703, 38.3236, 20.4048, 0.34", "-22.3145, 39.3341, 20.534, 1.37", "-23.2034, 40.3085, 20.6574, 0.17", "-23.8949, 41.0026, 20.75, 0.17", "-26.5728, 42.7728, 20.8977, 0.17", "-27.9782, 43.5562, 20.806, 0.17", "-32.2799, 52.5753, 24.4504, 0.17", "-34.9516, 61.6243, 29.3671, 0.17", "-37.626, 69.6545, 35.8859, 0.17", "-42.03, 77.8808, 41.0637, 0.17", "-47.2713, 86.252, 45.082, 0.17", "-53.921, 93.0602, 50.0163, 0.17", "-59.4626, 99.5913, 56.4822, 0.17", "-65.1336, 107.253, 61.3228, 0.17", "-69.9648, 115.828, 65.4061, 0.17", "-73.9159, 125.398, 67.7236, 0.17", "-77.2595, 135.404, 68.617, 0.17", "-80.7537, 145.398, 68.678, 0.17" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-7.85016, 16.9904, 12.8961, 0.51", "-7.01894, 18.3232, 13.2099, 0.51", "-6.60006, 18.9307, 13.3631, 0.51", "-5.2684, 20.6609, 13.8199, 0.51", "-4.36526, 21.7478, 14.2586, 0.51", "-4.1936, 21.9648, 14.3406, 0.51", "-1.73517, 25.2322, 15.5119, 0.51", "-1.12062, 26.1955, 15.7713, 0.51", "-0.497909, 27.3349, 16.1267, 0.51", "0.955513, 29.9652, 17.1039, 0.51", "2.17482, 32.0224, 17.635, 1.71", "2.4543, 32.4719, 17.7044, 0.17", "4.1211, 35.1275, 17.8205, 1.03", "6.52768, 38.9144, 17.7345, 0.68", "8.12952, 41.2272, 17.5527, 0.51", "11.2308, 45.0276, 17.0299, 0.51", "12.2092, 46.035, 16.9309, 1.54", "13.0998, 46.8354, 16.8358, 0.17", "13.3317, 47.0078, 16.8072, 0.68", "15.4354, 48.4726, 16.2779, 0.68", "16.3385, 49.1203, 16.1804, 1.37", "16.6972, 49.4052, 16.2851, 0.17", "16.9117, 49.5968, 16.3595, 0.17", "17.0355, 49.7203, 16.4069, 0.17", "17.9632, 50.7235, 16.743, 0.17", "18.044, 50.8233, 16.7751, 0.17", "18.9, 51.9759, 17.1216, 0.17", "19.6516, 52.9896, 17.4128, 1.37", "20.5906, 54.2704, 17.7538, 0.17", "22.3162, 56.5682, 18.2967, 0.17" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "0.420052, 18.0016, -4.62457, 0.68", "-0.90877, 19.5274, -4.28385, 0.68", "-1.71686, 20.4552, -4.07664, 0.68", "-2.16816, 20.9734, -3.96092, 1.03" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "0.420052, 18.0016, -4.62457, 0.68", "1.87684, 19.9249, -5.48243, 0.68", "3.44948, 21.6431, -6.52589, 0.68", "3.88033, 22.1095, -6.68718, 0.68", "5.50347, 23.3992, -6.57221, 0.68", "7.60787, 25.0713, -6.42315, 0.17", "11.5062, 28.1688, -6.14701, 0.17", "12.5629, 28.9363, -5.9432, 0.17", "16.9854, 31.8229, -4.73411, 0.17", "23.2972, 35.4524, -2.57563, 0.17" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "26.3401, 9.99097, -15.2758, 0.17", "31.442, 12.3695, -18.178, 0.17", "32.9777, 13.2001, -18.9204, 0.17", "33.1879, 13.3196, -19.0103, 0.17", "36.2955, 15.1347, -20.2099, 0.17", "40.314, 17.5042, -21.6835, 1.88", "42.0304, 18.517, -22.2911, 0.17", "44.5044, 20.0121, -23.0506, 0.17", "45.768, 20.7401, -23.521, 1.37", "47.0457, 21.4424, -24.0568, 0.17", "47.3863, 21.6376, -24.2155, 0.17", "47.5255, 21.7169, -24.3027, 0.17", "52.0133, 24.3247, -27.7785, 0.17", "53.9565, 25.5732, -29.4211, 1.71", "54.291, 25.8012, -29.7643, 0.17", "56.7903, 27.6506, -32.5953, 0.17", "60.1635, 30.2759, -36.4709, 1.71", "60.2688, 30.3624, -36.5916, 0.17", "62.5646, 32.3776, -39.1947, 0.17", "65.593, 34.8269, -42.9286, 1.71", "66.704, 35.6175, -44.2134, 0.17", "67.9117, 36.3832, -45.4682, 0.17", "69.1131, 37.1343, -46.4792, 1.71", "70.0619, 37.6994, -47.2164, 0.17", "75.2193, 40.4076, -50.7125, 0.17", "77.2394, 41.4873, -51.8853, 0.17", "79.0444, 42.4531, -52.9078, 1.71", "80.325, 43.1609, -53.6251, 0.17", "85.1635, 45.8654, -56.1873, 0.17", "87.25, 47.0904, -56.9489, 1.71", "88.1761, 47.7933, -56.6589, 0.17", "89.5459, 49.1502, -55.2749, 0.17", "89.5836, 49.2213, -55.1105, 0.17", "89.6775, 49.4562, -54.4811, 1.37", "91.5621, 53.8706, -42.5853, 0.17", "92.2288, 55.4155, -38.4733, 0.17", "92.4296, 55.8585, -37.2871, 1.2", "95.9661, 62.8743, -19.5145, 0.17", "96.0477, 63.019, -19.1762, 0.17", "97.3644, 65.2932, -14.0317, 0.17", "97.4818, 65.467, -13.6706, 1.88", "97.6292, 65.6727, -13.1589, 0.17", "99.0877, 67.5631, -8.70937, 0.17", "99.548, 67.8906, -8.72713, 1.54" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "26.3401, 9.99097, -15.2758, 0.34", "25.8111, 14.1995, -15.3026, 0.34", "25.7189, 16.0728, -15.3501, 0.34", "25.6457, 19.3112, -15.451, 0.34", "25.7135, 24.4121, -15.7646, 0.68", "25.7985, 28.426, -16.2511, 0.68", "25.9722, 35.7433, -17.3767, 0.68", "26.2339, 41.2218, -18.5485, 0.68", "26.2544, 41.4102, -18.5981, 0.68", "27.153, 45.8846, -19.821, 0.68", "28.2603, 49.8873, -20.9129, 0.34", "29.7852, 54.5806, -22.188, 0.34", "30.8199, 57.4783, -22.8834, 0.34", "33.7554, 65.1971, -24.5374, 0.34", "37.1603, 73.7884, -26.0239, 0.34", "37.7163, 75.1258, -26.1702, 2.05", "38.2107, 76.2492, -26.2307, 0.17", "40.2539, 80.6366, -26.4191, 0.17", "40.4959, 81.1946, -26.4207, 0.68", "40.6615, 81.6825, -26.3726, 0.17", "41.3899, 84.8665, -26.0838, 0.17", "41.4519, 85.3151, -26.0484, 1.54", "41.5163, 86.0403, -26.0121, 0.17", "41.6233, 88.8265, -25.9436, 0.17", "41.6659, 90.4271, -25.9258, 1.54", "41.6692, 91.0406, -25.9245, 0.17", "41.6155, 95.9224, -25.9604, 0.17", "41.5979, 97.3163, -25.968, 1.2", "41.5813, 98.2246, -25.9704, 0.17", "41.5297, 101.318, -25.9474, 0.17", "41.4942, 102.779, -25.9114, 1.88", "41.4802, 103.295, -25.8903, 0.17", "41.418, 106.332, -25.7048, 0.17", "41.3748, 107.76, -25.5857, 0.17", "41.2665, 111.565, -25.2689, 0.17", "41.1649, 114.569, -25.0182, 0.17", "41.1659, 115.023, -24.9808, 1.37", "41.2436, 116.026, -24.9, 0.17", "41.7958, 119.89, -24.5956, 0.17", "42.1707, 121.778, -24.4496, 1.2", "42.5408, 123.02, -24.3568, 0.17", "43.5983, 125.552, -24.1756, 0.17", "45.7078, 129.834, -23.8775, 0.17", "45.9411, 130.226, -23.8513, 1.54", "46.2017, 130.572, -23.8296, 0.17", "47.9776, 132.56, -23.7121, 0.17", "49.9348, 134.406, -23.6112, 0.17", "50.0471, 134.502, -23.6062, 0.17", "50.3731, 134.766, -23.593, 1.88", "50.8725, 135.173, -23.5725, 0.17", "52.9582, 136.852, -23.4887, 0.17", "54.7562, 138.342, -23.4129, 0.17", "56.1252, 139.471, -23.3557, 1.54", "56.232, 139.561, -23.3511, 1.54" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "17.3744, 4.8057, 6.59363, 0.68", "18.0753, 6.95457, 6.37911, 0.68", "18.6322, 8.66195, 6.20867, 0.68", "19.3361, 10.8197, 5.99326, 0.68", "19.9232, 12.6196, 5.81357, 0.68", "20.6546, 14.8617, 5.58975, 0.68" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "17.3744, 4.8057, 6.59363, 0.68", "20.0101, 4.98115, 7.85717, 0.68", "22.4226, 5.14174, 9.01367, 0.68", "26.8163, 5.4342, 11.12, 0.68", "30.4571, 5.67655, 12.8653, 0.68", "39.8503, 7.14999, 17.1482, 0.68" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "4.90483, -23.7342, -14.6858, 0.17", "9.02675, -24.7294, 4.51111, 0.17", "9.13483, -24.7574, 4.84074, 0.17", "10.4488, -25.0843, 7.2336, 0.17", "11.7338, -25.5017, 8.33923, 0.17", "13.5194, -26.1749, 9.30994, 1.37", "16.189, -27.2824, 10.3738, 0.17", "19.459, -28.7287, 10.018, 0.68", "21.2391, -29.4991, 9.83326, 0.17", "25.1942, -31.2246, 9.43301, 0.86", "25.8322, -31.4388, 9.38108, 0.17", "26.6734, -31.6394, 9.33803, 0.17", "28.8753, -31.9581, 9.279, 0.17", "32.0079, -32.2714, 9.26337, 1.2", "33.2098, -32.353, 9.25728, 1.2", "38.75, -32.466, 9.22867, 0.17", "45.0086, -32.6694, 9.19651, 0.68", "47.2246, -32.778, 9.1852, 0.17", "50.4455, -33.0569, 9.16903, 0.17", "52.5815, -33.3717, 9.15859, 1.37", "54.0645, -33.6866, 9.15156, 0.17", "57.8155, -34.8339, 9.13453, 0.17", "59.1448, -35.2871, 9.1286, 1.88", "60.9698, -35.9136, 9.12046, 0.17", "64.791, -37.2153, 9.83055, 0.17", "68.4223, -38.4333, 10.9914, 0.17", "70.7534, -39.1526, 11.9398, 2.05", "71.8789, -39.4882, 12.4782, 0.17", "76.5073, -40.9196, 15.3693, 0.17", "85.6967, -43.5216, 21.8139, 2.05", "86.1091, -43.6328, 22.1378, 0.17", "89.1861, -44.4131, 24.9031, 0.17", "91.1273, -44.9023, 26.7139, 1.71", "96.5221, -46.3159, 31.8334, 0.17", "100.347, -47.2752, 35.4417, 0.17", "100.615, -47.3287, 35.6385, 0.86", "104.683, -48.0548, 38.495, 0.17", "107.383, -48.4552, 40.3058, 0.17", "107.589, -48.4735, 40.4117, 0.17", "108.708, -48.5735, 40.9034, 1.88", "110.387, -48.9038, 41.8162, 0.17", "113.182, -49.6469, 43.2531, 0.17", "113.851, -49.8447, 43.5616, 1.37", "115.521, -50.4157, 45.1356, 0.34", "119.613, -52.028, 49.9353, 0.17", "121.454, -52.8133, 52.3374, 0.17", "123.164, -53.6071, 54.8622, 0.17", "123.919, -53.98, 56.1311, 2.05", "130.697, -57.4424, 68.3779, 0.17", "131.119, -57.6649, 69.2182, 1.71", "141.635, -61.1123, 77.9085, 1.71" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.90483, -23.7342, -14.6858, 1.2", "3.95444, -25.8435, -14.1229, 1.2", "2.28922, -29.6524, -13.1922, 0.68", "1.0206, -32.6196, -12.5051, 2.22", "0.441171, -34.2259, -12.1653, 0.86", "0.171024, -34.9748, -12.0069, 0.68", "-0.677473, -37.3271, -11.5093, 0.68", "-1.01985, -38.2351, -11.304, 1.54", "-1.06989, -38.3888, -11.2735, 1.54", "-1.57858, -40.8342, -11.2871, 1.54" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "39.2524, 8.96767, -0.662165, 0.17", "53.8321, 12.494, -0.662165, 0.17", "68.4117, 16.0203, -0.662165, 0.17" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-17.3574, -2.26278, 0.160331, 0.86", "-18.2448, -3.65269, -1.23068, 0.86", "-19.3395, -4.99282, -2.86709, 0.68", "-20.7954, -6.48085, -4.91076, 0.68", "-25.4804, -10.6922, -11.2056, 0.68", "-27.75, -12.4416, -14.0669, 0.68", "-29.9874, -13.8488, -16.7524, 0.68", "-32.6495, -14.9299, -19.6708, 1.2", "-33.6764, -15.1063, -20.6517, 1.2", "-34.261, -15.0938, -21.0633, 0.68", "-36.2055, -14.7912, -21.8486, 0.68", "-39.1655, -14.13, -22.9487, 0.51", "-40.6919, -13.8043, -23.2915, 0.51", "-43.4434, -13.4529, -23.539, 1.88", "-46.2672, -13.3406, -23.7441, 1.88", "-48.4948, -13.5311, -23.8441, 1.88" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-17.3574, -2.26278, 0.160331, 0.86", "-19.3212, -2.15038, -2.08415, 0.86", "-22.2603, -2.2158, -5.29962, 0.86", "-24.4184, -2.28143, -7.50877, 0.86", "-30.5423, -2.18273, -13.199, 0.86", "-32.6007, -2.08542, -14.9864, 0.86", "-38.5548, -1.73445, -20.0634, 0.86", "-39.8972, -1.65118, -21.1981, 0.86", "-42.0616, -1.50415, -22.958, 0.86", "-45.81, -1.22957, -25.8522, 0.86", "-48.7875, -1.05547, -28.0696, 0.51", "-52.1127, -0.816032, -30.4544, 0.34", "-55.7817, -0.377727, -32.8174, 0.17", "-58.3972, -0.12659, -34.4405, 0.17", "-60.7224, -0.0421009, -35.7945, 2.05", "-62.5187, -0.085822, -36.6528, 0.17", "-64.3108, -0.104596, -37.1869, 0.17", "-65.455, -0.098371, -37.3382, 0.68", "-68.2603, -0.101745, -37.4335, 0.34", "-69.1565, -0.129548, -37.4602, 0.17", "-71.5016, -0.195352, -37.4551, 1.88", "-72.6245, -0.23755, -37.3497, 0.17", "-74.217, -0.314014, -37.0867, 0.17", "-75.9758, -0.436806, -36.7016, 1.2", "-77.0154, -0.510765, -36.4328, 0.17", "-80.3881, -0.686263, -35.5347, 0.17", "-83.1157, -0.702487, -34.5378, 1.71", "-84.3127, -0.674807, -34.025, 0.17", "-85.907, -0.562591, -33.2797, 0.17", "-87.3553, -0.375554, -32.6061, 2.39", "-89.2356, -0.13396, -31.8325, 0.68", "-93.1812, 0.267566, -30.508, 0.17", "-94.3865, 0.347383, -30.188, 0.17", "-95.7379, 0.419198, -29.8177, 1.2", "-98.1003, 0.488846, -29.1736, 0.17", "-101.454, 0.486337, -28.3611, 0.17", "-103.262, 0.41754, -28.0837, 2.22", "-103.857, 0.364016, -28.0925, 2.22" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-76.2186, 29.4513, -34.9728, 0.17", "-77.0722, 31.2603, -34.8471, 0.17", "-77.6052, 32.2828, -34.773, 0.17", "-79.2462, 35.307, -34.5491, 0.17", "-79.4901, 35.7169, -34.5167, 0.17", "-82.2879, 40.3773, -34.1385, 0.17", "-83.8287, 42.9162, -33.9295, 1.2", "-84.3167, 43.7431, -33.8565, 0.17", "-84.427, 43.9308, -33.8462, 0.17", "-89.153, 51.837, -33.6308, 0.17", "-90.6747, 54.4493, -33.6182, 1.54", "-91.3794, 55.6901, -33.6446, 0.17", "-93.2099, 59.0836, -33.7768, 0.17", "-94.4328, 61.4394, -33.9653, 1.2", "-94.9465, 62.5117, -34.0996, 0.17", "-95.021, 62.6989, -34.1406, 0.17", "-95.5722, 64.1834, -34.4966, 0.17", "-96.0905, 65.6811, -34.8434, 1.37", "-96.9793, 67.9087, -35.2849, 0.17", "-98.2972, 70.8312, -35.9303, 0.17", "-98.3946, 71.0193, -35.9827, 0.17", "-99.0146, 72.0889, -36.3286, 1.03", "-99.3642, 72.6028, -36.6213, 0.17", "-100.761, 74.4445, -37.877, 0.17", "-102.804, 76.9578, -39.7156, 1.71", "-103.822, 78.1873, -40.6049, 0.17", "-103.945, 78.3378, -40.7076, 0.17", "-108.578, 84.2553, -44.5024, 0.17", "-109.721, 85.8175, -45.3883, 1.37", "-110.16, 86.4714, -45.7371, 0.17", "-111.945, 89.2479, -46.9963, 0.17", "-112.477, 90.1145, -47.3472, 1.54", "-113.368, 91.5651, -47.7689, 0.17", "-114.445, 93.2742, -47.961, 0.17", "-115.979, 95.5778, -48.1637, 1.88", "-116.846, 96.8204, -48.231, 0.17", "-118.278, 98.7374, -48.2634, 0.17", "-119.822, 100.663, -48.2063, 1.54", "-120.524, 101.479, -48.1427, 0.17", "-122.518, 103.695, -47.8677, 0.17", "-124.026, 105.33, -47.5805, 1.71", "-125.28, 106.644, -47.3704, 0.17", "-126.968, 108.37, -47.1379, 0.17", "-127.967, 109.295, -47.0454, 2.22", "-129.148, 110.306, -46.946, 0.17", "-131.039, 111.788, -46.8035, 0.17", "-131.524, 112.159, -46.7678, 1.88", "-133.113, 113.354, -46.6522, 0.17", "-137.315, 116.45, -46.3517, 0.17", "-138.678, 117.432, -46.2561, 1.03", "-140.425, 118.68, -46.0528, 0.17", "-143.987, 121.173, -45.5192, 0.17", "-145.241, 122.062, -45.2946, 2.05", "-147.29, 123.512, -44.63, 0.17", "-150.148, 125.428, -43.3011, 0.17", "-152.64, 126.823, -41.8834, 1.03", "-153.564, 127.2, -41.2736, 0.17", "-154.935, 127.615, -40.2657, 0.17", "-160.052, 128.819, -36.3434, 0.17", "-162.549, 129.241, -34.4389, 0.17", "-164.836, 129.552, -32.7946, 0.17", "-170.386, 130.241, -29.5009, 0.17", "-170.792, 130.301, -29.3303, 1.71", "-171.642, 130.454, -29.1355, 0.17", "-173.889, 131.106, -29.3161, 0.17", "-175.708, 131.856, -29.7582, 0.17", "-178.635, 133.24, -30.4944, 0.17", "-183.709, 135.634, -31.853, 1.37", "-184.895, 136.165, -32.0954, 0.17", "-188.423, 137.6, -32.5501, 0.17", "-192.757, 139.161, -32.5869, 0.17", "-197.375, 140.68, -32.2671, 1.03", "-198.666, 141.084, -32.0255, 0.17", "-199.674, 141.34, -31.6772, 0.17", "-203.47, 142.109, -30.2639, 0.17", "-205.818, 142.352, -29.0266, 1.03" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-76.2186, 29.4513, -34.9728, 0.34", "-78.0071, 29.0291, -35.7751, 0.34", "-80.0092, 28.6511, -36.5652, 0.34", "-80.595, 28.5217, -36.7842, 0.34", "-80.7891, 28.4747, -36.8501, 0.34", "-83.226, 27.8392, -37.8887, 0.34", "-85.0925, 27.2993, -38.7194, 0.34", "-86.8419, 26.762, -39.4218, 1.03", "-87.7016, 26.463, -39.7425, 0.68", "-88.8602, 26.0157, -40.2999, 0.86", "-90.8953, 25.1199, -41.4793, 0.17", "-92.9099, 24.086, -42.8086, 0.17", "-93.6758, 23.6791, -43.3269, 1.37", "-94.7533, 23.143, -43.9767, 0.17", "-98.3128, 21.5312, -45.9796, 0.17", "-98.4439, 21.4799, -46.0413, 0.17", "-99.633, 21.1091, -46.4366, 1.03", "-100.362, 20.9786, -46.6315, 0.34", "-102.189, 20.9063, -47.0404, 0.34", "-102.484, 20.927, -47.0873, 0.34", "-104.526, 21.125, -47.202, 0.17", "-105.194, 21.1825, -47.2567, 2.05", "-107.2, 21.3843, -47.4637, 0.17", "-108.891, 21.5267, -47.6228, 0.17", "-109.198, 21.5461, -47.6481, 0.17", "-113.009, 21.7423, -47.8945, 0.17", "-114.425, 21.7986, -48.078, 1.03", "-115.835, 21.8217, -48.3172, 0.17", "-118.224, 21.8031, -48.7779, 0.17", "-119.913, 21.7408, -49.1155, 0.17", "-121.942, 21.6776, -49.6751, 1.54", "-125.086, 21.5889, -50.8268, 0.17", "-126.756, 21.4893, -51.5396, 0.17", "-127.844, 21.388, -52.074, 0.86", "-128.61, 21.2929, -52.5002, 0.17", "-130.909, 20.8848, -54.2089, 0.17", "-131.415, 20.7708, -54.6341, 1.37", "-131.657, 20.7181, -54.8612, 0.17", "-131.756, 20.6986, -54.9633, 0.17", "-132.368, 20.5891, -55.6347, 0.17", "-135.456, 20.0397, -59.0303, 0.17", "-136.553, 19.8299, -60.2636, 1.37", "-139.301, 19.3241, -63.3988, 0.17", "-140.289, 19.1417, -64.5297, 0.17", "-142.216, 18.7987, -66.7071, 0.17", "-143.146, 18.6459, -67.7426, 1.88" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "22.3162, 56.5682, 18.2967, 0.17", "21.9185, 57.7683, 20.8822, 0.17", "21.8251, 58.4325, 21.9792, 0.68", "21.6826, 61.0249, 25.6456, 0.68", "21.5867, 62.7681, 28.111, 0.68", "21.5443, 63.5388, 29.201, 0.51", "21.5048, 64.2564, 30.2158, 0.51", "21.5366, 65.299, 31.1835, 0.51", "21.5657, 65.4747, 31.3038, 0.51", "21.5326, 69.9644, 35.8575, 0.51", "20.84, 73.5241, 41.1636, 0.51", "19.4671, 76.974, 46.4163, 0.51", "17.7235, 79.9086, 51.887, 0.51", "15.6404, 82.9805, 57.157, 0.51", "13.688, 87.0517, 61.7158, 0.51", "11.9168, 91.5839, 65.8739, 0.51", "9.76641, 95.4161, 70.5606, 0.51", "7.18417, 99.5583, 74.7272, 0.51" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "22.3162, 56.5682, 18.2967, 0.17", "22.0087, 59.7667, 3.66922, 0.17", "22.0059, 59.7953, 3.53863, 0.17", "21.9678, 60.1921, 1.72376, 2.22", "21.9503, 60.3742, 0.891179, 2.22" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "20.6546, 14.8617, 5.58975, 0.68", "20.8301, 16.8335, 4.8845, 0.68", "20.835, 17.1505, 4.81, 1.88", "20.5552, 22.0378, 4.71364, 0.17", "20.1839, 25.3897, 4.91363, 0.51", "19.8169, 28.2836, 5.20071, 0.51", "19.2538, 32.724, 5.64121, 0.51", "18.6535, 36.5911, 6.10105, 1.03", "17.651, 42.54, 7.15142, 1.03", "17.059, 45.6559, 8.05744, 1.03", "16.6631, 47.143, 8.55282, 0.17" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "20.6546, 14.8617, 5.58975, 0.17", "22.2579, 14.7362, 6.09434, 0.17", "24.6813, 14.5464, 6.85697, 0.17", "26.4658, 14.4066, 7.41855, 0.51", "30.2014, 14.1141, 8.59417, 0.51", "36.7219, 13.6034, 10.6462, 0.51", "36.9129, 13.5885, 10.7063, 0.51" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-1.57858, -40.8342, -11.2871, 1.54", "-1.4336, -41.6104, -11.4343, 1.54", "-1.21608, -42.7751, -11.6553, 1.03" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-1.57858, -40.8342, -11.2871, 0.17", "-0.654782, -41.9698, -9.00805, 0.17", "-0.217986, -42.9554, -7.18177, 0.17", "-0.170613, -43.1628, -6.84876, 1.71", "-0.0826063, -43.9102, -5.61546, 0.17", "-0.152178, -47.7901, 1.44, 0.17", "-0.451733, -50.8531, 6.95685, 0.17", "-0.81439, -52.3269, 9.62411, 0.17", "-1.21138, -53.5794, 11.8036, 0.17", "-2.42056, -57.1522, 17.4821, 0.17", "-3.41056, -60.017, 21.5111, 0.17", "-3.95486, -61.3742, 23.1623, 0.17", "-4.28241, -62.412, 24.3604, 0.17", "-4.60302, -63.7965, 26.0047, 0.17", "-5.03469, -66.0967, 28.554, 0.17", "-5.44745, -69.6432, 30.7869, 0.17", "-8.53214, -74.3543, 39.4163, 0.17", "-13.4149, -77.0955, 48.1094, 0.17", "-18.4399, -79.7315, 56.7555, 0.17", "-22.2358, -82.9818, 65.7997, 0.17", "-27.0204, -85.8862, 74.4917, 0.17" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-48.4948, -13.5311, -23.8441, 0.17", "-48.6271, -13.4595, -23.8883, 0.17", "-49.5549, -12.8797, -24.2734, 0.17", "-50.26, -12.4743, -24.5559, 0.17", "-51.982, -11.5629, -25.2073, 1.37", "-53.2677, -10.9582, -25.6613, 1.37", "-55.6449, -9.98656, -26.4312, 0.17", "-57.1249, -9.44439, -26.8842, 0.17", "-58.5307, -9.0254, -27.3658, 0.17", "-59.276, -8.8941, -27.6177, 1.03", "-60.1426, -8.87439, -28.0664, 1.03", "-61.5545, -9.03211, -28.9194, 0.17", "-62.3678, -9.25629, -29.5189, 0.17", "-64.5833, -10.1899, -31.4317, 2.22", "-65.8783, -10.8512, -32.6933, 2.22", "-69.5717, -13.0167, -36.3836, 0.17", "-70.867, -13.9199, -37.8306, 0.17", "-72.9981, -15.5819, -40.2446, 0.17", "-73.8083, -16.2974, -41.0988, 1.88", "-73.9129, -16.4087, -41.1971, 1.88", "-75.2855, -18.1065, -42.4245, 1.2", "-77.1682, -20.8038, -43.7517, 0.34", "-78.5273, -22.9286, -44.63, 0.34", "-79.9817, -25.5285, -45.4176, 2.05", "-81.1167, -27.7653, -45.9809, 0.51", "-82.4886, -30.6857, -46.5774, 0.51", "-83.8344, -33.7802, -47.0463, 0.17", "-84.97, -36.3654, -47.2672, 0.17", "-86.4136, -39.6418, -47.4972, 0.17", "-87.2598, -41.3276, -47.5775, 1.54", "-87.9284, -42.4106, -47.583, 1.54", "-88.9811, -43.846, -47.4375, 0.17", "-90.3482, -45.4484, -47.1962, 0.17", "-91.501, -46.6711, -46.9568, 2.05", "-92.7223, -47.8118, -46.6067, 0.34", "-95.5293, -50.3456, -45.5455, 0.34", "-97.2822, -51.8925, -44.7526, 1.54", "-98.6462, -53.04, -44.0533, 1.54", "-99.0339, -53.3453, -43.8443, 0.17", "-101.325, -55.012, -42.5801, 0.17", "-102.478, -55.7728, -41.9636, 1.03", "-102.946, -56.0796, -41.743, 1.03", "-104.049, -56.7497, -41.3708, 0.17", "-106.252, -57.9029, -40.7876, 0.17", "-106.626, -58.0856, -40.718, 0.68", "-107.87, -58.6685, -40.4784, 0.17", "-110.582, -59.856, -40.0091, 0.17", "-112.949, -60.9097, -39.4349, 0.17", "-114.373, -61.5886, -39.0371, 1.37", "-115.927, -62.3988, -38.5511, 0.51", "-118.553, -63.9528, -37.2752, 0.51", "-120.471, -65.2179, -36.0161, 0.51", "-122.523, -66.6548, -34.4054, 0.17", "-123.799, -67.7224, -33.2774, 1.2", "-124.516, -68.3164, -32.6621, 1.2", "-127.824, -70.9973, -29.9591, 0.17", "-128.826, -71.7862, -29.2605, 0.17", "-129.985, -72.6538, -28.3073, 1.88", "-130.702, -73.1356, -27.7461, 0.17", "-132.271, -74.1849, -26.3964, 0.17", "-132.666, -74.4526, -26.0795, 0.86", "-133.737, -75.2138, -25.4549, 0.86", "-136.16, -77.1924, -23.938, 0.17", "-136.771, -77.6805, -23.5851, 0.17", "-137.503, -78.2071, -23.2398, 0.17", "-138.159, -78.6798, -22.9863, 0.86", "-139.999, -79.9719, -22.4554, 0.34", "-141.797, -81.2193, -22.0424, 0.34", "-143.456, -82.4178, -21.7522, 0.34", "-147.096, -85.1095, -21.3371, 0.34", "-148.944, -86.5234, -21.2068, 0.34", "-152.85, -89.603, -20.9539, 0.34", "-152.991, -89.7209, -20.9465, 0.34", "-154.822, -91.342, -20.8971, 0.34", "-157.226, -93.7744, -20.9683, 1.88", "-157.765, -94.3718, -21.0923, 1.88" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-48.4948, -13.5311, -23.8441, 0.68", "-50.2769, -17.0871, -23.9841, 0.68", "-50.8618, -18.2543, -24.03, 0.51", "-51.7559, -20.0384, -24.1002, 0.51", "-53.1849, -22.8899, -24.2124, 0.51" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-103.857, 0.364016, -28.0925, 0.17", "-104.323, 0.423474, -28.7508, 0.17", "-104.422, 0.437898, -28.891, 0.17", "-104.758, 0.486524, -29.3051, 0.17", "-105.857, 0.713192, -30.801, 0.86", "-107.632, 1.06714, -33.1566, 0.34", "-111.408, 1.82975, -38.5756, 0.34", "-112.258, 1.98478, -39.7408, 1.71", "-113.671, 2.2347, -41.5576, 0.17", "-116.275, 2.64761, -44.6104, 0.17", "-117.562, 2.84297, -46.0716, 0.17", "-121.513, 3.30594, -49.9086, 0.17", "-124.583, 3.58058, -52.2865, 0.17", "-125.747, 3.6523, -53.1275, 1.88", "-128.076, 3.73697, -54.5456, 0.17", "-132.818, 3.76888, -56.7381, 0.17", "-135.156, 3.79043, -57.6802, 0.17", "-136.028, 3.78909, -57.9676, 1.2", "-137.72, 3.81341, -58.6222, 0.17", "-140.651, 3.85853, -60.0136, 0.17", "-141.159, 3.87184, -60.2831, 0.17", "-141.325, 3.87523, -60.3545, 0.17", "-143.609, 3.91283, -61.5644, 0.17", "-145.17, 3.88635, -62.4354, 2.05", "-147.9, 3.76943, -63.9718, 1.54", "-148.742, 3.70355, -64.4279, 0.17", "-151.306, 3.42584, -65.7103, 0.17", "-155.654, 2.78376, -67.6685, 0.17", "-157.358, 2.47888, -68.2245, 1.03", "-158.757, 2.1905, -68.57, 0.17", "-160.146, 1.88709, -68.7573, 0.17", "-161.075, 1.65937, -68.8321, 1.54", "-162.12, 1.377, -68.8201, 0.17", "-165.645, 0.485814, -68.2873, 0.17", "-165.823, 0.448122, -68.2729, 0.17", "-167.229, 0.260021, -68.3553, 1.54", "-167.785, 0.246596, -68.4668, 0.17", "-169.693, 0.381145, -69.0244, 0.17", "-170.044, 0.458136, -69.1844, 1.54", "-173.558, 1.4882, -70.9592, 0.17", "-176.032, 2.33165, -72.1342, 0.17", "-178.048, 3.03591, -73.0186, 2.05", "-179.633, 3.57671, -73.6022, 0.17", "-184.277, 5.11352, -74.798, 0.17", "-187.143, 5.96684, -75.2626, 1.2", "-188.296, 6.27858, -75.3402, 0.17", "-191.537, 7.11188, -75.4476, 0.17", "-195.675, 7.99267, -75.1434, 0.17", "-199.007, 8.40235, -74.3735, 1.54", "-200.499, 8.45175, -73.7906, 0.17", "-201.148, 8.42675, -73.4365, 0.86", "-201.458, 8.39777, -73.2479, 0.17", "-205.31, 7.69811, -70.5534, 0.17", "-208.397, 6.84346, -68.3341, 0.17", "-209.666, 6.42012, -67.4623, 1.54", "-213.013, 5.181, -65.1976, 0.17", "-216.168, 3.86239, -62.999, 0.17", "-219.41, 2.37461, -60.6031, 1.2", "-220.532, 1.81102, -59.7632, 1.2", "-221.061, 1.52235, -59.336, 0.17", "-221.946, 1.02067, -58.5958, 0.17", "-224.712, -0.538051, -56.33, 0.86", "-227.702, -2.20302, -53.6807, 0.34", "-228.928, -2.74527, -52.7449, 0.34", "-229.076, -2.79986, -52.6539, 0.34", "-229.678, -2.99957, -52.3104, 1.03", "-230.33, -3.1979, -52.0322, 0.17", "-232.203, -3.67842, -52.3362, 0.17", "-234.913, -4.39033, -54.0529, 1.2", "-236.14, -4.7354, -55.0253, 0.68" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-103.857, 0.364016, -28.0925, 0.17", "-106.495, 3.40238, -30.2415, 0.17", "-108.162, 5.29237, -31.246, 0.17", "-109.685, 7.03425, -31.8138, 1.03", "-110.486, 7.94799, -32.0265, 0.17", "-111.601, 9.22225, -32.2502, 0.17", "-114.795, 12.8583, -32.786, 0.17", "-114.9, 12.9745, -32.7837, 0.17", "-116.668, 14.9326, -32.6307, 1.2", "-116.949, 15.2614, -32.5941, 0.17", "-118.632, 17.4011, -32.3414, 0.17", "-119.06, 18.0248, -32.28, 0.17", "-119.536, 18.7556, -32.2485, 1.54", "-120.131, 19.6582, -32.2374, 0.17", "-121.073, 21.0398, -32.2579, 0.17", "-122.509, 22.9043, -32.5349, 0.17", "-122.912, 23.3726, -32.6597, 1.71", "-124.013, 24.4902, -33.0606, 0.17", "-125.097, 25.4879, -33.4927, 0.17", "-127.181, 27.1497, -34.3403, 0.17", "-130.689, 29.5627, -35.8041, 1.54", "-132.444, 30.5641, -36.519, 0.17", "-134.583, 31.5557, -37.4268, 0.17", "-134.583, 31.5557, -37.4268, 2.05", "-136.768, 32.1479, -38.3604, 0.17", "-137.663, 32.2934, -38.7226, 0.17", "-141.02, 32.6821, -39.5547, 0.17", "-144.249, 32.9003, -40.1553, 1.03", "-145.013, 32.9646, -40.2526, 0.17", "-145.166, 32.9907, -40.2625, 0.17", "-145.901, 33.2243, -40.2332, 0.17", "-149.162, 35.0602, -39.7551, 1.37", "-150.0, 35.7554, -39.5107, 0.17", "-150.991, 36.7017, -39.1688, 0.17", "-151.923, 37.7114, -38.9359, 1.03", "-152.769, 38.6977, -38.8212, 0.17", "-153.6, 39.7767, -38.859, 0.17", "-153.979, 40.3012, -38.891, 1.03", "-154.164, 40.5868, -38.8538, 0.17", "-154.792, 41.5919, -38.4223, 0.17", "-154.865, 41.7123, -38.3542, 0.17", "-155.13, 42.1896, -38.0265, 1.2", "-156.626, 44.9603, -35.7881, 0.17", "-157.118, 45.8737, -34.9782, 0.17", "-158.141, 47.675, -33.2193, 1.54" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-143.146, 18.6459, -67.7426, 0.17", "-143.12, 17.1989, -66.4504, 0.17", "-143.094, 15.7991, -65.2003, 0.17", "-143.013, 11.406, -61.2773, 0.17", "-143.004, 10.8963, -60.822, 0.86", "-143.003, 10.836, -60.7682, 0.86" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-143.146, 18.6459, -67.7426, 0.17", "-144.441, 19.0535, -68.4401, 0.17", "-148.046, 20.3041, -70.2457, 0.17", "-148.192, 20.3626, -70.3323, 0.17", "-151.202, 21.5889, -72.2287, 1.37", "-152.752, 22.2134, -73.1933, 0.17", "-156.07, 23.5821, -75.1817, 0.17", "-157.299, 24.141, -75.9473, 0.17", "-160.599, 25.7818, -78.2877, 1.03", "-161.025, 25.9971, -78.5726, 0.17", "-162.527, 26.7333, -79.45, 0.17", "-164.026, 27.4367, -80.308, 0.68", "-164.294, 27.5558, -80.4964, 0.68", "-166.235, 28.3086, -81.8078, 0.17", "-168.487, 29.0143, -83.2112, 0.17", "-169.798, 29.374, -84.1408, 1.2", "-170.583, 29.5342, -84.7279, 0.17", "-173.567, 29.9604, -86.8979, 0.17", "-174.74, 30.0858, -87.6819, 0.17", "-175.909, 30.1146, -88.3575, 0.68", "-177.524, 29.9707, -89.357, 0.17", "-179.035, 29.7216, -90.2486, 0.17", "-179.835, 29.5109, -90.707, 1.88", "-180.408, 29.3285, -91.0555, 0.17", "-183.666, 28.2495, -93.2235, 0.17", "-185.417, 27.566, -94.382, 1.37", "-186.595, 27.0583, -95.1605, 0.17", "-189.359, 25.7538, -97.1488, 0.17", "-191.754, 24.574, -98.9091, 1.03", "-192.306, 24.2793, -99.3914, 0.17", "-194.488, 23.0453, -101.507, 0.17", "-194.748, 22.9014, -101.766, 0.17", "-195.808, 22.2914, -102.839, 1.2", "-196.603, 21.7962, -103.635, 0.17", "-201.424, 18.6778, -108.372, 0.17", "-201.826, 18.417, -108.915, 1.37", "-201.915, 18.3614, -109.058, 1.37", "-202.829, 17.7658, -110.697, 0.34", "-204.115, 16.9066, -113.27, 0.34", "-204.262, 16.806, -113.579, 0.34", "-208.474, 14.0099, -123.026, 0.17", "-208.629, 13.9078, -123.372, 0.17", "-208.845, 13.7661, -123.861, 0.17", "-208.943, 13.7146, -124.08, 0.17", "-211.065, 12.8212, -128.281, 0.86", "-213.176, 12.0576, -131.512, 0.17", "-214.501, 11.7964, -132.403, 0.17", "-214.616, 11.786, -132.542, 1.37", "-216.819, 11.682, -136.244, 0.17", "-217.082, 11.6713, -136.668, 1.03", "-217.372, 11.6619, -137.145, 0.17", "-218.549, 11.6189, -139.173, 0.17", "-224.998, 11.0924, -149.332, 1.03", "-227.819, 10.7494, -153.534, 0.17", "-230.749, 10.3135, -157.698, 0.17", "-230.981, 10.2656, -158.012, 1.03", "-234.717, 9.24827, -162.76, 0.17", "-239.189, 7.64337, -167.796, 0.17", "-241.189, 6.63376, -169.214, 1.2", "-241.741, 6.26772, -169.55, 0.17", "-243.983, 4.24532, -171.187, 0.17", "-244.656, 3.42567, -171.672, 0.68", "-244.993, 2.77779, -171.909, 0.17", "-245.508, 0.574064, -172.722, 0.17", "-246.068, -2.69596, -174.167, 1.37", "-246.275, -4.18745, -174.988, 0.17", "-246.439, -7.03358, -176.714, 0.17", "-246.288, -7.86341, -177.104, 1.03", "-246.181, -8.21593, -177.245, 0.17", "-244.638, -12.4542, -178.796, 0.17", "-244.497, -12.7976, -178.896, 0.17", "-242.639, -16.9824, -179.949, 0.17", "-238.674, -25.0292, -181.878, 0.17", "-238.444, -25.4837, -181.969, 1.03" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "21.9503, 60.3742, 0.891179, 0.17", "22.1252, 60.9254, 0.984463, 0.17", "22.2586, 61.3908, 1.06778, 0.17", "22.6051, 62.6582, 1.3001, 0.17", "22.8114, 63.2335, 1.50195, 1.71", "23.313, 64.5128, 2.03957, 0.17", "24.1003, 66.5326, 2.94767, 0.17", "24.1704, 66.7118, 3.03576, 1.54", "24.5397, 67.7229, 3.54004, 0.17", "25.5975, 70.6084, 4.99873, 0.17", "26.2838, 72.4408, 5.91819, 1.37", "26.4557, 73.0016, 6.17579, 0.17", "26.5136, 73.1914, 6.26169, 0.17", "27.3332, 76.1855, 7.52906, 0.17", "27.4882, 76.8958, 7.78627, 1.2", "27.5817, 77.6639, 7.96436, 0.17", "28.02, 82.0205, 9.00379, 0.17" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "21.9503, 60.3742, 0.891179, 0.86", "25.7557, 59.2763, 5.09569, 0.86", "27.2034, 58.8586, 6.69523, 0.86", "28.9149, 58.3648, 8.58627, 0.34", "30.3451, 57.9522, 10.1665, 0.34", "32.8722, 57.2231, 12.9586, 0.34", "41.0184, 54.8729, 21.9591, 0.17" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "36.9129, 13.5885, 10.7063, 0.17", "33.2791, 18.0482, 12.37, 0.17", "27.6159, 25.0698, 14.7437, 0.17", "21.3323, 31.7829, 16.4376, 0.17", "14.6077, 38.2517, 17.3084, 0.17", "8.08075, 44.9088, 18.1995, 0.17", "2.09934, 52.1163, 17.9596, 0.17", "-5.09065, 58.1254, 18.5498, 0.17", "-11.2363, 64.987, 20.1365, 0.17", "-17.3623, 72.0746, 19.7945, 0.17", "-24.9096, 77.5051, 18.1926, 0.17", "-31.8145, 83.7949, 17.0615, 0.17", "-38.6396, 90.208, 16.2507, 0.17" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "36.9129, 13.5885, 10.7063, 0.68", "37.1913, 14.0758, 9.09349, 0.68", "37.8855, 14.8479, 6.56753, 0.17", "41.2076, 17.6521, -2.62012, 0.17", "41.2349, 17.6668, -2.67591, 0.17", "42.2561, 18.0523, -4.28383, 0.17", "44.3335, 18.6935, -7.15196, 0.17", "44.9111, 18.8145, -7.7784, 1.37", "45.7135, 18.8863, -8.33234, 0.17", "48.8555, 18.9764, -9.56479, 0.17", "51.0776, 19.055, -10.4257, 0.17", "51.1929, 19.0585, -10.4707, 0.17", "53.5286, 19.1507, -11.3711, 0.17", "55.7637, 19.247, -12.2289, 0.17", "58.0535, 19.5389, -13.0141, 0.17", "58.2719, 19.6193, -13.1001, 0.17", "59.159, 20.1537, -13.5309, 0.17", "60.8409, 21.6122, -14.4932, 0.17", "60.9109, 21.7039, -14.5328, 0.17", "62.4891, 24.6637, -15.4749, 0.17", "64.3867, 29.2283, -16.9415, 0.17", "64.5498, 29.6616, -17.0789, 1.2", "64.6668, 30.0086, -17.1848, 0.17", "66.1474, 34.8272, -18.5571, 0.17", "67.7815, 40.0391, -20.0281, 0.17", "69.1222, 44.3962, -21.5577, 0.17", "69.1948, 44.6161, -21.6354, 1.2", "69.2952, 44.961, -21.7846, 0.17", "69.7009, 46.4862, -22.5171, 0.17", "69.7849, 46.9102, -22.7658, 0.86", "70.9174, 51.9913, -26.2667, 0.17", "71.5986, 54.7226, -28.2864, 0.17", "72.2625, 57.4099, -30.3701, 1.54" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-1.21608, -42.7751, -11.6553, 1.03", "-2.41529, -45.1845, -11.576, 1.03", "-3.61819, -48.1361, -11.4979, 1.54", "-4.05487, -49.5539, -11.4691, 0.68", "-5.06565, -54.6881, -11.8473, 0.68", "-5.40617, -57.5451, -11.501, 0.68", "-5.49259, -59.6323, -10.8524, 0.17", "-5.32945, -61.4955, -9.84956, 0.86", "-4.94219, -63.25, -8.51415, 0.86", "-3.90814, -66.6254, -4.81962, 0.51", "-0.440361, -75.0989, 5.75786, 0.17", "0.00875273, -76.2434, 7.20218, 1.03", "0.487133, -77.7591, 9.02303, 1.03", "0.624206, -78.3269, 9.64316, 1.03", "1.24124, -82.4162, 13.4455, 0.51", "1.52483, -86.2633, 16.3382, 0.51", "1.58805, -87.9271, 16.8746, 1.2", "1.73968, -90.226, 17.4568, 1.88", "1.93711, -92.1471, 17.8184, 0.51", "2.24828, -95.1496, 18.1225, 0.51", "2.35228, -96.5087, 18.0153, 0.51", "2.37162, -98.6715, 17.7175, 0.51", "2.25062, -102.402, 17.0624, 0.68", "2.17089, -103.793, 16.7802, 0.68", "2.08512, -105.844, 16.3451, 0.34", "2.03948, -110.427, 15.38, 1.54", "1.96331, -112.728, 14.9279, 0.68", "1.69387, -115.029, 14.5301, 0.17", "1.34281, -116.751, 14.2861, 0.68", "0.598448, -119.822, 13.9716, 0.51", "0.0157077, -121.891, 13.8603, 0.51", "-0.5372, -123.893, 13.8737, 0.51", "-1.49397, -127.211, 13.8976, 0.51", "-2.16831, -129.328, 13.9157, 1.2", "-2.93469, -131.407, 13.938, 0.86", "-3.92959, -133.878, 13.9683, 0.17", "-4.48578, -135.452, 13.9842, 0.17", "-5.14752, -138.073, 14.1606, 0.17", "-5.46529, -139.961, 14.3781, 1.54", "-5.67767, -141.501, 14.6061, 1.03", "-5.88919, -142.892, 14.8437, 0.34", "-6.45773, -146.202, 15.4276, 0.34", "-7.05201, -149.571, 16.1675, 1.03", "-7.23293, -150.831, 16.4853, 0.68", "-7.59107, -153.477, 17.1949, 0.17", "-7.8899, -155.494, 17.7275, 0.17", "-8.4224, -158.621, 18.5314, 0.17", "-9.05672, -161.751, 19.2343, 1.54", "-9.44888, -163.852, 19.5798, 0.68", "-9.67931, -165.352, 19.77, 0.51", "-10.0342, -168.37, 20.0456, 0.51", "-10.0799, -168.752, 20.0605, 0.51", "-10.637, -172.116, 19.971, 0.51", "-11.1594, -174.338, 19.7506, 0.51", "-11.6211, -176.116, 19.5534, 0.51", "-11.6762, -176.306, 19.5329, 0.51", "-12.4919, -178.771, 18.972, 1.37", "-12.5541, -178.944, 18.9297, 1.37", "-13.9259, -182.036, 18.0615, 0.86", "-14.13, -182.409, 17.9556, 0.17", "-15.4899, -184.765, 17.35, 0.68", "-17.6331, -188.452, 16.2404, 0.68" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-1.21608, -42.7751, -11.6553, 0.86", "0.461018, -46.1314, -21.3784, 0.86", "0.50245, -46.2143, -21.6186, 0.86", "0.998511, -47.207, -24.4945, 0.86" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-157.765, -94.3718, -21.0923, 0.17", "-162.669, -95.1425, -22.7515, 0.17", "-165.353, -95.3889, -22.9792, 0.17", "-166.496, -95.4242, -22.9582, 1.03", "-167.434, -95.4531, -22.941, 0.17", "-170.631, -95.5518, -22.8824, 0.17", "-172.167, -95.5992, -22.8543, 1.03", "-175.281, -95.5356, -22.1907, 0.17", "-176.975, -95.3824, -21.7217, 0.17" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-157.765, -94.3718, -21.0923, 0.17", "-159.93, -96.0719, -20.8683, 0.17", "-162.142, -97.6998, -20.3801, 0.17", "-163.69, -98.7903, -19.9668, 0.86", "-164.219, -99.1332, -19.8189, 0.17", "-165.285, -99.7958, -19.5136, 0.17", "-168.454, -101.713, -18.6025, 0.17", "-170.692, -102.908, -17.7769, 1.54", "-170.88, -103.028, -17.6514, 0.17", "-172.054, -104.097, -16.2271, 0.17", "-172.134, -104.188, -16.0931, 1.2", "-172.403, -104.592, -15.5484, 0.17", "-173.519, -106.747, -12.9664, 0.17", "-174.895, -109.516, -10.0374, 0.17", "-175.946, -111.866, -7.96621, 1.54", "-176.149, -112.418, -7.59376, 0.17", "-177.237, -115.616, -6.03895, 0.17", "-177.803, -117.583, -5.16699, 1.2", "-178.132, -118.827, -4.70231, 0.86", "-178.956, -121.689, -3.75707, 0.17", "-179.97, -125.179, -2.62757, 0.17", "-180.692, -127.693, -1.73431, 0.17", "-182.401, -133.593, 0.621356, 0.17", "-182.472, -133.817, 0.71291, 0.17", "-183.71, -137.201, 2.27431, 0.17", "-184.282, -138.548, 2.95683, 0.86", "-184.653, -139.388, 3.33713, 0.86", "-184.855, -139.875, 3.49267, 0.17", "-185.645, -141.919, 3.83876, 0.17", "-186.434, -144.482, 4.23277, 1.37", "-186.731, -145.924, 4.42974, 0.17", "-187.25, -149.489, 4.87481, 0.17", "-187.524, -152.513, 5.19371, 0.17", "-187.532, -152.687, 5.20604, 0.17", "-187.546, -154.624, 5.21835, 0.17", "-187.55, -155.631, 5.14024, 1.37", "-187.592, -156.858, 4.85434, 0.34", "-187.642, -157.665, 4.49866, 0.17", "-187.865, -159.929, 3.1176, 0.17", "-188.053, -161.028, 2.34429, 1.03", "-188.328, -161.864, 1.65016, 1.03", "-189.895, -164.975, -1.17476, 0.17", "-190.704, -165.936, -2.42882, 0.17", "-191.039, -166.207, -2.91239, 1.03", "-191.27, -166.318, -3.15273, 0.17", "-192.854, -166.729, -4.34505, 0.17", "-193.724, -166.884, -4.89742, 1.71", "-197.527, -167.286, -6.55161, 0.68", "-198.477, -167.341, -6.96372, 0.17", "-202.36, -167.638, -8.72842, 0.17", "-205.456, -167.926, -10.1876, 0.17" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-53.1849, -22.8899, -24.2124, 0.17", "-57.969, -23.2444, -18.9047, 0.17", "-61.3122, -23.3594, -14.3449, 0.17", "-66.3398, -23.3527, -6.28958, 0.17", "-69.5853, -23.3484, -1.08947, 0.17", "-72.4936, -23.3445, 3.57018, 0.17", "-79.7019, -23.3348, 15.1196, 0.17", "-81.7639, -23.0332, 19.5312, 0.17", "-83.2229, -22.5516, 23.758, 0.17", "-86.8885, -22.3145, 33.331, 0.17", "-89.0037, -23.0167, 43.3179, 0.17" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-53.1849, -22.8899, -24.2124, 0.51", "-54.2053, -21.4789, -21.5809, 0.51", "-57.6401, -17.5147, -14.194, 0.51", "-58.6909, -16.5077, -12.2854, 0.51", "-59.3847, -15.9343, -11.1775, 0.51", "-62.0355, -13.9933, -7.34183, 0.51", "-62.8502, -13.491, -6.27844, 0.34", "-63.9361, -12.9852, -4.96411, 0.34", "-65.0261, -12.8961, -3.97981, 0.34", "-65.5678, -12.9003, -3.48253, 0.86", "-65.9117, -12.9406, -3.09675, 0.17", "-67.062, -13.2072, -1.74962, 0.68", "-69.8679, -13.9228, 2.17541, 0.68", "-70.4242, -14.0915, 3.09906, 0.17", "-70.9212, -14.2478, 4.05283, 0.17", "-72.6921, -14.819, 7.79133, 0.51", "-76.4612, -12.4742, 12.9743, 0.51", "-81.609, -10.894, 17.1539, 0.51", "-85.5769, -8.06656, 21.9479, 0.51", "-89.2594, -5.24092, 26.964, 0.51", "-92.8274, -2.00848, 31.8253, 0.51", "-95.9417, 2.34378, 36.1132, 0.51", "-99.2006, 7.15097, 39.7659, 0.51", "-102.349, 11.3222, 44.203, 0.51", "-105.024, 14.9715, 49.343, 0.51", "-106.761, 18.3443, 55.0397, 0.51", "-108.093, 22.2136, 60.5362, 0.51" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-236.14, -4.7354, -55.0253, 0.17", "-236.465, -6.55889, -56.0369, 0.17", "-236.764, -8.24368, -56.8788, 0.17", "-236.873, -8.82139, -57.1488, 0.68", "-236.896, -8.92905, -57.1966, 0.68", "-237.021, -9.56082, -57.4662, 0.68", "-237.094, -9.86671, -57.5895, 0.17", "-237.599, -11.6568, -58.2413, 0.17", "-237.764, -12.1151, -58.3807, 1.37", "-237.976, -12.6453, -58.5422, 1.37", "-238.262, -13.1966, -58.711, 0.17", "-239.182, -14.8323, -58.949, 0.17", "-239.587, -15.4853, -58.9646, 0.17", "-240.184, -16.3252, -58.8836, 1.03", "-240.617, -16.9457, -58.8006, 0.17", "-241.731, -18.4941, -58.5313, 0.17", "-243.372, -20.9706, -58.1181, 1.37", "-243.696, -21.5769, -57.9868, 0.17", "-244.082, -22.3844, -57.8045, 0.17", "-244.777, -23.9851, -57.5025, 0.68", "-244.962, -24.4558, -57.4461, 0.17", "-245.71, -26.5029, -57.2992, 0.17", "-246.619, -28.5874, -57.3096, 0.68", "-246.896, -29.1297, -57.3024, 0.17", "-247.804, -30.6707, -57.2623, 0.17", "-248.629, -31.6427, -57.233, 1.37", "-249.261, -32.1899, -57.2883, 0.17", "-250.41, -32.8508, -57.4935, 0.17", "-251.602, -33.3617, -57.8171, 0.17", "-251.908, -33.4812, -57.9394, 0.17", "-254.274, -34.3547, -59.0836, 0.17", "-256.028, -35.0842, -60.0702, 1.03", "-256.712, -35.409, -60.5389, 0.51", "-258.201, -36.2302, -61.7264, 0.17", "-260.064, -37.5017, -63.4545, 0.17", "-261.49, -38.7076, -64.9692, 0.17", "-262.101, -39.4345, -65.7874, 1.71", "-262.656, -40.385, -66.6804, 0.17", "-262.734, -40.6381, -66.9206, 0.17", "-262.642, -41.5148, -67.7275, 0.17", "-262.588, -41.6385, -67.8248, 1.2", "-262.413, -41.856, -68.0107, 0.17", "-261.397, -42.8617, -68.8734, 0.17", "-260.541, -43.6263, -69.4225, 1.03", "-259.886, -44.141, -69.848, 0.17" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-236.14, -4.7354, -55.0253, 0.17", "-237.548, -4.71607, -55.4051, 0.17", "-239.206, -4.68726, -55.9145, 0.17", "-240.277, -4.6822, -56.2305, 0.86", "-241.582, -4.70717, -56.5952, 0.17", "-244.094, -4.80274, -57.2738, 0.17", "-245.189, -4.84444, -57.5698, 1.03", "-246.124, -4.88156, -57.7935, 0.17", "-248.568, -5.00849, -58.4092, 0.17", "-249.634, -5.09637, -58.6694, 0.17", "-249.967, -5.13095, -58.7344, 0.68" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "28.02, 82.0205, 9.00379, 0.17", "28.9083, 84.227, 10.0645, 0.17", "30.0256, 86.9932, 11.3674, 0.17", "30.8136, 88.96, 12.2641, 0.17", "31.8247, 92.0191, 13.7141, 1.2", "32.2796, 93.6397, 14.499, 0.17", "32.7074, 95.4778, 15.3918, 0.17", "32.7074, 95.4778, 15.3918, 1.03", "32.8026, 96.6544, 15.9878, 0.17", "32.7941, 99.8757, 17.4565, 0.17", "32.7298, 101.026, 17.9034, 0.17", "32.5175, 103.949, 18.9717, 0.17", "32.3602, 107.188, 20.0123, 0.17", "32.3544, 107.788, 20.1798, 0.17", "32.3694, 110.366, 20.6568, 1.37", "32.3849, 111.145, 20.754, 0.17", "32.4339, 112.868, 20.9212, 0.17", "32.5562, 115.66, 21.1219, 0.17", "32.7593, 118.661, 21.2985, 0.17", "33.2059, 124.655, 21.7183, 0.17", "33.3792, 126.706, 21.9135, 0.17", "33.4696, 128.126, 22.0479, 0.17", "33.4848, 129.237, 22.1689, 2.05", "33.4456, 129.923, 22.2678, 0.17" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "28.02, 82.0205, 9.00379, 0.17", "25.9713, 80.4748, 10.0318, 0.17", "24.1391, 79.0925, 10.9512, 0.17", "20.94, 76.6788, 12.5565, 0.17", "17.3581, 73.9764, 14.3538, 0.17", "12.6764, 70.4441, 16.7031, 0.17", "11.4606, 69.5269, 17.3131, 0.17" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "72.2625, 57.4099, -30.3701, 0.17", "76.5336, 61.3644, -28.7785, 0.17", "79.8657, 64.4497, -27.5368, 0.17", "83.1919, 67.5293, -26.2973, 0.17", "85.7307, 69.88, -25.3512, 0.17", "86.1849, 70.3005, -25.1819, 0.17" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "72.2625, 57.4099, -30.3701, 0.17", "73.1774, 62.8361, -29.3543, 0.17", "73.4494, 64.4489, -29.0524, 1.37", "73.5349, 64.9558, -28.9575, 0.17", "73.9526, 67.4336, -28.4937, 0.17" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-17.6331, -188.452, 16.2404, 1.2", "-18.4682, -190.437, 16.6973, 1.2", "-20.3399, -193.321, 19.4924, 0.17", "-21.238, -194.378, 20.8757, 0.17", "-23.3076, -196.442, 23.776, 0.17", "-25.6282, -198.33, 26.9272, 0.17", "-25.7129, -198.395, 27.0407, 0.17", "-31.8734, -202.714, 35.5182, 1.54", "-32.8517, -203.356, 36.9438, 0.17", "-33.9848, -203.945, 38.6498, 0.17", "-38.3626, -205.525, 45.3903, 0.17", "-38.629, -205.597, 45.8236, 1.37", "-38.9053, -205.686, 46.2492, 0.17", "-41.5395, -207.047, 49.1519, 0.17", "-46.6274, -210.333, 56.4064, 0.17" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-17.6331, -188.452, 16.2404, 0.86", "-16.7748, -192.275, 17.6475, 0.86", "-16.1118, -196.509, 19.0553, 0.86", "-16.0438, -197.241, 19.278, 0.86", "-15.828, -201.137, 20.3974, 0.68", "-15.7591, -203.657, 21.0359, 0.34", "-15.6093, -207.923, 21.7184, 0.34", "-15.638, -209.004, 21.8002, 1.2", "-15.7007, -210.668, 21.8136, 1.2", "-15.723, -210.964, 21.7981, 0.34", "-16.1205, -214.616, 21.3894, 0.34", "-16.6748, -219.369, 20.8098, 0.34", "-16.9133, -221.788, 20.5124, 1.88", "-17.0895, -223.863, 20.2762, 0.68", "-17.309, -227.936, 19.8629, 0.51", "-17.5487, -232.208, 19.5062, 0.51", "-17.7458, -234.72, 19.3558, 1.03", "-18.0546, -237.262, 19.2888, 1.71", "-18.3944, -239.808, 19.1981, 0.68", "-18.753, -242.415, 19.1195, 0.17", "-19.1916, -245.588, 19.0446, 0.17", "-19.6108, -247.819, 19.0136, 1.03", "-20.5281, -251.641, 19.011, 1.03", "-22.1492, -257.79, 19.0074, 1.03", "-22.2597, -258.2, 19.0072, 1.03", "-22.3709, -258.64, 19.0069, 1.03", "-22.6545, -259.888, 19.006, 0.17", "-22.9513, -261.356, 19.0048, 0.17", "-23.4117, -263.792, 19.0027, 0.34", "-23.6239, -264.681, 19.0021, 0.34", "-24.4223, -267.737, 19.0003, 0.34", "-25.6953, -274.719, 18.994, 1.37", "-25.8543, -276.009, 18.9926, 0.17", "-25.877, -276.225, 18.9924, 0.17", "-26.1299, -278.522, 18.9897, 0.17", "-26.2841, -280.611, 18.9869, 0.34", "-26.2032, -286.544, 18.9772, 0.34", "-26.0037, -288.027, 18.9741, 0.34", "-25.9834, -288.244, 18.9737, 0.34", "-25.9256, -290.44, 18.97, 0.34", "-25.9256, -290.44, 18.97, 1.03", "-25.9093, -291.501, 18.9969, 0.17", "-25.8535, -292.566, 19.1071, 0.17", "-25.3677, -295.692, 19.3925, 1.37", "-24.6991, -298.571, 19.6223, 0.51", "-24.1092, -300.639, 19.6989, 0.17", "-22.1911, -306.252, 19.8297, 0.51", "-20.2948, -310.902, 19.6331, 0.51", "-18.6038, -314.82, 19.2566, 1.88", "-17.2925, -317.749, 18.5567, 1.2", "-16.2304, -320.25, 17.6053, 0.17", "-15.2735, -322.89, 16.1786, 0.51", "-14.2934, -326.916, 13.2277, 1.03", "-13.8434, -329.129, 11.3622, 1.03", "-13.0053, -334.398, 7.09698, 0.17", "-12.8173, -335.709, 6.1363, 0.17", "-12.7912, -335.898, 6.0271, 0.17", "-12.3755, -338.328, 5.0491, 0.17", "-11.382, -341.571, 4.83318, 1.2", "-10.2973, -344.043, 5.09443, 1.2", "-9.63206, -345.498, 5.45964, 0.17", "-9.54123, -345.692, 5.50159, 0.17", "-8.33934, -348.479, 5.95665, 0.17", "-8.25411, -348.694, 5.97716, 1.54", "-7.60225, -350.781, 5.99325, 0.17", "-7.17817, -352.082, 6.0024, 0.17", "-6.71219, -353.624, 6.10294, 0.17", "-6.16378, -355.477, 6.306, 1.37", "-5.8665, -356.727, 6.49087, 0.68", "-5.80287, -357.014, 6.53867, 0.68", "-5.1615, -360.072, 7.09901, 0.17", "-4.62361, -362.793, 8.4636, 0.17", "-4.49806, -363.538, 8.89286, 1.71", "-4.27058, -365.182, 9.97719, 1.54", "-4.15349, -366.236, 10.7466, 0.17", "-4.00828, -367.916, 12.0926, 0.17", "-3.91153, -374.511, 18.5356, 2.05" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "0.998511, -47.207, -24.4945, 0.17", "0.905988, -47.8581, -23.9971, 0.17", "0.676968, -49.2452, -22.8448, 0.17", "0.235009, -51.7357, -20.686, 1.2", "-0.621915, -55.3241, -16.7788, 0.17", "-1.35004, -58.0643, -13.6112, 0.17", "-1.42827, -58.3766, -13.2438, 0.17", "-1.81299, -59.9963, -11.1989, 1.37", "-1.82534, -60.0488, -11.132, 1.37", "-2.54604, -63.7057, -6.65484, 0.17", "-2.76089, -65.0774, -5.2218, 0.17", "-2.92495, -65.9728, -4.17854, 0.17", "-2.96589, -66.1024, -3.99136, 0.17", "-3.56506, -67.9183, -1.30329, 0.17", "-3.70271, -68.324, -0.598005, 1.2", "-3.78885, -68.5568, -0.144986, 0.17", "-4.83555, -70.8495, 4.99717, 0.17", "-6.11357, -73.4595, 11.1618, 0.17", "-6.40379, -74.0482, 12.6456, 0.17", "-7.17657, -75.7292, 17.4086, 0.17", "-7.21802, -75.8415, 17.7123, 0.17", "-7.28303, -76.0929, 18.3398, 0.17", "-7.28416, -76.91, 19.9062, 0.17", "-7.24519, -77.1351, 20.2016, 0.68", "-7.11969, -78.2579, 21.5517, 0.68", "-7.03534, -79.241, 22.5528, 0.68", "-7.64549, -83.0767, 26.1679, 0.17", "-8.61525, -84.6752, 27.3019, 0.17", "-9.49049, -85.5623, 27.7077, 1.2", "-10.072, -85.9909, 27.7366, 0.17", "-10.2012, -86.0797, 27.7265, 0.17", "-15.2686, -90.0709, 25.958, 0.17", "-16.7004, -91.339, 25.1576, 0.17", "-17.3874, -91.9928, 24.7235, 0.17", "-21.1456, -96.0632, 22.0956, 0.17", "-23.231, -98.6296, 20.5662, 0.17", "-27.0348, -103.875, 17.6347, 0.17", "-28.8441, -106.896, 15.8381, 0.17", "-29.763, -108.4, 14.8324, 0.17", "-30.8511, -110.097, 13.5948, 0.17", "-33.0794, -113.899, 10.8858, 0.17", "-33.5944, -114.814, 10.2362, 0.17", "-36.1528, -119.499, 7.361, 0.17", "-37.0797, -121.484, 6.20203, 0.17", "-37.8193, -123.207, 5.25757, 0.17", "-39.8339, -128.022, 2.77929, 0.17", "-41.8856, -133.167, 0.53366, 0.17", "-43.4993, -137.301, -1.05028, 0.17", "-44.365, -139.507, -1.75389, 0.17", "-45.3821, -142.072, -2.55254, 0.17", "-46.3505, -144.324, -3.27898, 0.17", "-48.9496, -149.465, -5.00099, 0.17", "-50.4855, -152.082, -5.79448, 1.71", "-51.0016, -152.928, -6.09754, 0.17", "-51.9379, -154.435, -6.77571, 0.17", "-52.0893, -154.684, -6.90774, 0.17", "-53.1576, -156.414, -7.98714, 0.17", "-54.6649, -158.648, -9.98334, 0.17", "-56.0529, -160.666, -12.0197, 0.17", "-57.2126, -162.447, -14.055, 1.54", "-57.453, -162.844, -14.544, 0.17", "-57.8987, -163.578, -15.4391, 0.17", "-59.2894, -165.997, -18.0987, 0.17", "-59.6608, -166.762, -18.7732, 1.2", "-59.6608, -166.762, -18.7732, 0.17", "-60.3107, -168.041, -19.2952, 0.17", "-61.5128, -170.416, -20.099, 0.17", "-62.8901, -173.03, -20.734, 0.17", "-63.0099, -173.227, -20.7664, 0.17", "-64.1452, -175.383, -21.438, 0.17", "-64.241, -175.571, -21.5177, 0.17", "-64.3032, -175.699, -21.6023, 0.17", "-65.8093, -178.812, -24.3673, 0.17", "-66.3962, -180.189, -25.6718, 0.17", "-68.1478, -184.47, -29.6089, 0.17", "-69.2558, -187.136, -31.9836, 0.17", "-71.2353, -191.722, -35.7717, 0.17", "-73.2551, -196.336, -39.365, 0.17", "-75.5093, -201.099, -42.8442, 0.17", "-77.1066, -204.191, -44.8497, 0.17", "-78.7608, -206.857, -46.3195, 0.17", "-81.3151, -210.729, -48.2209, 0.17", "-81.957, -211.611, -48.5833, 0.17", "-84.7932, -215.126, -49.9226, 0.17", "-86.3487, -216.835, -50.612, 0.17", "-89.5309, -219.861, -52.0753, 0.17", "-94.817, -224.234, -54.5704, 0.17", "-95.3431, -224.583, -54.8187, 0.68", "-97.5906, -225.857, -55.8668, 0.17", "-98.8881, -226.454, -56.4543, 0.17", "-103.666, -228.341, -58.4606, 0.17", "-103.95, -228.455, -58.564, 0.17", "-106.288, -229.466, -59.253, 0.17", "-106.708, -229.689, -59.3756, 0.17", "-109.496, -231.282, -60.1865, 0.17", "-111.839, -232.764, -60.8652, 0.17", "-115.656, -235.495, -62.0562, 0.17", "-119.684, -238.461, -63.3201, 0.17", "-119.812, -238.56, -63.3607, 0.17", "-124.235, -241.907, -64.7793, 0.17", "-124.358, -241.996, -64.82, 0.17", "-126.211, -243.064, -65.4526, 0.17" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "0.998511, -47.207, -24.4945, 0.17", "1.66453, -48.2974, -21.0142, 0.17", "2.9598, -49.9123, -14.3342, 1.37", "2.98747, -49.9539, -14.1681, 1.37", "3.08249, -50.1118, -13.5477, 0.17", "4.19978, -51.9382, -6.30602, 0.17", "4.28756, -52.0518, -5.81598, 1.03", "5.40102, -53.2639, 0.75017, 0.17", "6.97843, -54.5706, 8.74056, 0.17", "7.04919, -54.6254, 9.08655, 1.2", "7.20497, -54.7337, 9.81191, 0.17", "7.90398, -55.1788, 12.926, 0.17", "8.84689, -55.7271, 17.1292, 1.2", "8.90352, -55.7465, 17.3272, 0.17", "11.6478, -58.703, 27.0334, 0.17", "14.3163, -62.0899, 36.6123, 0.17", "17.0743, -66.9465, 45.4751, 0.17", "20.4797, -72.6028, 53.5832, 0.17", "25.3595, -79.5748, 59.5924, 0.17", "30.9625, -84.2638, 67.1086, 0.17" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "73.9526, 67.4336, -28.4937, 0.17", "74.8079, 76.2025, -26.9008, 0.17", "76.2314, 88.504, -23.6011, 0.17", "76.2508, 88.6938, -23.54, 0.17", "76.8229, 94.7077, -21.4153, 0.17", "77.4053, 101.329, -18.9513, 0.17", "78.1488, 111.401, -14.8399, 0.17", "78.3398, 116.304, -12.1929, 0.17", "78.4067, 121.952, -8.39023, 0.17", "78.3234, 123.259, -7.48387, 1.88", "78.2289, 123.746, -7.1531, 0.17", "76.7666, 128.502, -3.76871, 0.17", "75.3043, 131.294, -1.39451, 0.17", "73.0307, 134.807, 1.57381, 0.17", "72.5078, 135.474, 2.17304, 0.17", "69.9357, 138.66, 4.82671, 0.17" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "73.9526, 67.4336, -28.4937, 0.17", "76.9865, 68.1648, -32.7631, 0.17", "78.725, 68.5838, -35.2097, 0.17", "80.6736, 69.0534, -37.9519, 0.17" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-3.91153, -374.511, 18.5356, 0.17", "-3.41013, -375.749, 19.7699, 0.17", "-3.1554, -376.96, 20.946, 0.17", "-3.11848, -377.32, 21.1769, 0.17", "-3.08821, -377.701, 21.3414, 1.03", "-2.99041, -379.987, 22.0644, 0.51", "-2.8867, -384.248, 23.1471, 0.17", "-3.01421, -385.851, 23.4047, 0.17", "-3.74832, -390.338, 23.8283, 1.2", "-4.08316, -391.711, 23.8674, 0.17", "-4.37175, -392.718, 23.8195, 0.17", "-4.43759, -392.921, 23.8053, 0.17", "-4.99418, -394.623, 23.7053, 0.17", "-5.53155, -396.348, 23.8116, 1.37", "-6.12027, -398.161, 24.1326, 0.17", "-6.84981, -400.502, 24.841, 0.17", "-7.51609, -403.41, 25.9344, 0.68", "-7.62649, -404.112, 26.225, 0.17", "-7.71608, -405.51, 26.8489, 0.17", "-7.7095, -406.84, 27.4887, 0.17", "-7.50786, -411.131, 29.5443, 0.68", "-7.38317, -414.186, 30.9347, 0.68", "-7.41172, -415.974, 31.5667, 0.34", "-7.4658, -417.118, 31.8778, 0.17", "-7.48206, -417.327, 31.9168, 0.17", "-7.83857, -420.306, 32.1923, 0.17", "-8.11207, -422.056, 32.1765, 0.68", "-8.72709, -425.548, 31.7667, 0.17", "-9.10185, -427.486, 31.5146, 0.17", "-9.43872, -429.159, 31.2762, 1.2", "-9.74205, -430.91, 30.9831, 0.17", "-9.9821, -433.146, 30.4589, 0.17", "-10.1143, -437.891, 28.9528, 1.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-3.91153, -374.511, 18.5356, 0.17", "-4.08798, -375.322, 18.1105, 0.17", "-4.43912, -376.872, 17.2735, 0.17", "-4.5849, -377.558, 16.9265, 1.54", "-4.69715, -378.069, 16.6983, 0.17", "-5.45037, -380.979, 15.6573, 0.17", "-5.54485, -381.317, 15.4996, 1.54", "-5.68505, -381.783, 15.2527, 0.17", "-6.00602, -382.778, 14.6894, 0.17", "-6.44277, -384.092, 13.9447, 0.17", "-7.29346, -386.454, 12.6355, 0.17", "-8.72847, -389.924, 10.353, 0.17", "-9.01839, -390.615, 9.82933, 1.03", "-9.22118, -391.09, 9.42304, 1.03", "-9.32924, -391.376, 9.14968, 0.17", "-9.66927, -392.66, 7.79533, 0.17", "-10.0092, -395.355, 5.00023, 1.54", "-10.0125, -396.66, 3.92566, 1.2", "-10.0057, -396.762, 3.84634, 1.2", "-9.75132, -398.978, 2.27586, 0.17", "-9.50849, -400.284, 1.53571, 0.17", "-9.11173, -401.867, 0.90471, 0.68", "-8.71315, -403.442, 0.537993, 0.17", "-8.68591, -403.567, 0.514263, 0.17", "-8.6369, -403.845, 0.47795, 0.86", "-8.35711, -406.134, 0.389658, 0.17", "-8.29341, -406.991, 0.393531, 1.03", "-8.28027, -407.244, 0.3943, 0.17", "-8.21105, -409.162, 0.398093, 0.17", "-8.20527, -409.564, 0.398305, 1.03", "-8.22241, -409.926, 0.397013, 0.17", "-8.42692, -411.932, 0.382567, 0.17", "-8.55123, -413.024, 0.373838, 1.2", "-8.61677, -413.478, 0.369288, 0.17", "-9.0946, -415.661, 0.336586, 0.17", "-9.3595, -416.645, 0.318554, 0.17", "-9.54466, -417.194, 0.306008, 1.2", "-9.9377, -418.214, 0.349524, 0.17", "-10.4995, -419.654, 0.478171, 0.17", "-10.7518, -420.353, 0.564107, 0.86", "-11.0619, -421.296, 0.714528, 0.17", "-11.3752, -422.266, 0.877394, 0.17", "-12.112, -424.298, 1.21401, 0.17", "-12.2393, -424.659, 1.25116, 1.54", "-12.4599, -425.312, 1.26465, 0.17", "-12.8406, -426.535, 1.20239, 0.17", "-13.2285, -427.672, 1.0707, 0.17", "-13.6156, -428.773, 0.881308, 0.17", "-14.1665, -430.261, 0.534889, 1.54", "-14.7826, -431.942, 0.160121, 0.17", "-15.3342, -433.505, 0.0306043, 0.17", "-15.7736, -435.167, 0.143414, 0.17", "-15.8882, -435.61, 0.220088, 1.03", "-15.9234, -435.732, 0.250945, 1.03", "-16.2981, -436.992, 0.66868, 0.17", "-17.2035, -440.135, 1.8943, 0.17", "-17.8027, -442.18, 2.79835, 0.17", "-18.4663, -444.495, 3.89542, 0.17", "-18.6052, -444.937, 4.10347, 0.17" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-10.1143, -437.891, 28.9528, 0.17", "-12.1987, -440.755, 30.0037, 0.17", "-13.2044, -442.512, 30.5043, 0.17", "-13.2791, -442.66, 30.5426, 0.17", "-14.067, -444.299, 30.9447, 1.2", "-14.295, -444.932, 31.0781, 0.17", "-14.5698, -446.05, 31.2514, 0.17", "-14.6169, -447.055, 31.2383, 0.86", "-14.5908, -447.524, 31.2396, 0.17", "-14.561, -447.894, 31.2422, 0.17", "-14.3451, -450.062, 31.2633, 0.17", "-14.1683, -452.06, 31.2801, 0.86", "-14.113, -453.25, 31.2826, 0.17", "-14.0802, -455.061, 31.0343, 0.17", "-14.1076, -456.688, 30.6598, 1.71", "-14.1141, -456.84, 30.6123, 0.17", "-14.245, -458.147, 30.0713, 0.17", "-14.4103, -459.479, 29.4211, 0.17", "-14.9958, -463.253, 27.3305, 0.17", "-15.1447, -464.079, 26.8422, 1.03", "-15.1705, -464.224, 26.7602, 0.17", "-15.3495, -465.544, 26.2089, 0.17", "-15.4586, -466.535, 25.9036, 1.37", "-15.4736, -466.691, 25.8755, 0.17", "-15.5613, -468.353, 25.8664, 0.17", "-15.5802, -469.611, 25.8678, 0.17", "-15.8427, -472.901, 25.8344, 0.17", "-15.8657, -473.058, 25.8398, 0.17", "-15.9764, -473.732, 25.8887, 1.54", "-16.2575, -475.118, 26.0018, 0.17", "-16.7029, -476.533, 26.0984, 0.17", "-17.8509, -479.164, 26.6084, 0.17", "-18.5491, -480.633, 27.056, 0.17", "-19.6011, -482.796, 27.8357, 0.17", "-21.247, -486.165, 29.181, 0.17", "-22.6568, -489.038, 30.4324, 0.17", "-24.8328, -493.62, 32.6074, 0.17", "-25.956, -496.1, 33.8487, 0.17", "-26.0732, -496.356, 33.9853, 1.71", "-26.3828, -497.012, 34.3936, 0.17", "-26.8428, -498.184, 35.2354, 0.17", "-26.8835, -498.374, 35.3641, 0.17", "-26.9972, -499.757, 36.0074, 0.17", "-27.2599, -502.917, 37.3391, 0.17", "-27.2862, -503.379, 37.5272, 0.17", "-27.2786, -504.223, 37.8329, 0.17", "-27.2093, -505.384, 38.1988, 1.54", "-27.1167, -506.178, 38.4022, 0.17", "-26.9858, -506.845, 38.5087, 0.17", "-26.9395, -507.338, 38.5211, 0.17", "-27.0507, -510.161, 38.5183, 0.17", "-27.1011, -510.627, 38.4825, 1.71", "-27.1337, -510.855, 38.4622, 0.17", "-27.5487, -513.303, 38.2167, 0.17", "-28.1916, -516.551, 37.8494, 0.17", "-29.1726, -520.665, 37.3119, 0.17", "-29.8111, -522.768, 36.9757, 0.17" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-10.1143, -437.891, 28.9528, 0.17", "-9.71211, -440.262, 29.0021, 0.17", "-9.17991, -442.823, 29.0657, 0.17", "-9.12942, -443.04, 29.0717, 1.2", "-8.96785, -443.675, 29.0906, 0.17", "-8.2111, -446.543, 29.1791, 0.17", "-7.64804, -448.45, 29.2443, 1.37", "-7.18912, -449.633, 29.3652, 0.17", "-7.10107, -449.836, 29.3931, 0.17", "-5.91068, -452.859, 29.8249, 0.17", "-5.83985, -453.051, 29.8758, 0.17", "-5.01641, -455.55, 30.7517, 0.17", "-3.36158, -461.344, 33.095, 0.17", "-2.71151, -463.699, 34.0667, 0.17", "-1.96099, -466.493, 35.1561, 0.17", "-0.623503, -471.691, 37.2961, 1.37", "-0.0686908, -474.001, 38.2615, 0.17", "-0.0281638, -474.203, 38.3492, 0.17", "0.916158, -480.003, 40.8409, 0.17", "1.84863, -484.18, 42.5375, 0.17", "3.857, -496.322, 45.9287, 0.17" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-29.8111, -522.768, 36.9757, 0.17", "-27.6146, -526.567, 39.2511, 0.17", "-25.9215, -529.496, 41.005, 0.17", "-24.3729, -532.174, 42.6092, 0.17", "-24.2833, -532.329, 42.702, 0.17", "-20.4028, -539.04, 46.7219, 0.17", "-20.1081, -539.55, 47.0271, 0.17", "-13.7459, -549.301, 50.7161, 0.17" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-29.8111, -522.768, 36.9757, 0.17", "-31.627, -524.612, 36.9109, 0.17", "-34.0975, -527.12, 36.8228, 0.17", "-35.2576, -528.297, 36.7814, 0.17", "-35.3512, -528.392, 36.778, 0.17", "-40.2625, -534.88, 37.5316, 0.17" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_35", "dend_32", "dend_29", "dend_18", "dend_17", "dend_0", "dend_50", "dend_45", "dend_43", "dend_36", "dend_34", "dend_33", "dend_31", "dend_30", "dend_20", "dend_19", "dend_16", "dend_1", "dend_56", "dend_51", "dend_49", "dend_46", "dend_42", "dend_37", "dend_28", "dend_21", "dend_3", "dend_2", "dend_60", "dend_57", "dend_53", "dend_52", "dend_48", "dend_47", "dend_39", "dend_38", "dend_27", "dend_22", "dend_7", "dend_4", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_54", "dend_41", "dend_40", "dend_26", "dend_23", "dend_15", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_10", "dend_9", "dend_12", "dend_11", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_44", "dend_35", "dend_32", "dend_29", "dend_18", "dend_17", "dend_0", "dend_50", "dend_45", "dend_43", "dend_36", "dend_34", "dend_33", "dend_31", "dend_30", "dend_20", "dend_19", "dend_16", "dend_1", "dend_56", "dend_51", "dend_49", "dend_46", "dend_42", "dend_37", "dend_28", "dend_21", "dend_3", "dend_2", "dend_60", "dend_57", "dend_53", "dend_52", "dend_48", "dend_47", "dend_39", "dend_38", "dend_27", "dend_22", "dend_7", "dend_4", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_54", "dend_41", "dend_40", "dend_26", "dend_23", "dend_15", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_10", "dend_9", "dend_12", "dend_11", "dend_14", "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_44", "dend_44", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_37", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L5_NBC_2444ed2bac_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_50, id: dend_50, parent: dend_44
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_35
create dend_43
public dend_43
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_50
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_49, id: dend_49, parent: dend_45
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_42, id: dend_42, parent: dend_36
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_28, id: dend_28, parent: dend_20
create dend_28
public dend_28
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_27, id: dend_27, parent: dend_21
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_15, id: dend_15, parent: dend_7
create dend_15
public dend_15
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_35, dend_32, dend_29, dend_18, dend_17, dend_0, dend_50, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_30, dend_20, dend_19, dend_16, dend_1, dend_56, dend_51, dend_49, dend_46, dend_42, dend_37, dend_28, dend_21, dend_3, dend_2, dend_60, dend_57, dend_53, dend_52, dend_48, dend_47, dend_39, dend_38, dend_27, dend_22, dend_7, dend_4, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_41, dend_40, dend_26, dend_23, dend_15, dend_8, dend_6, dend_5, dend_25, dend_24, dend_10, dend_9, dend_12, dend_11, dend_14, dend_13]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_35, dend_32, dend_29, dend_18, dend_17, dend_0, dend_50, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_30, dend_20, dend_19, dend_16, dend_1, dend_56, dend_51, dend_49, dend_46, dend_42, dend_37, dend_28, dend_21, dend_3, dend_2, dend_60, dend_57, dend_53, dend_52, dend_48, dend_47, dend_39, dend_38, dend_27, dend_22, dend_7, dend_4, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_41, dend_40, dend_26, dend_23, dend_15, dend_8, dend_6, dend_5, dend_25, dend_24, dend_10, dend_9, dend_12, dend_11, dend_14, dend_13]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_65
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_44(0), soma_0(0.49999945595718026)
    connect dend_35(0), soma_0(0.49999945595718026)
    connect dend_32(0), soma_0(0.49999945595718026)
    connect dend_29(0), soma_0(0.49999945595718026)
    connect dend_18(0), soma_0(0.49999945595718026)
    connect dend_17(0), soma_0(0.49999945595718026)
    connect dend_0(0), soma_0(0.49999945595718026)
    connect axon_0(0), soma_0(1.0)
    connect dend_50(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_49(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_42(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_28(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_27(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_15(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.80187, -2.65497, 0.815749, 4.80603 ) }
    soma_0 { pt3dadd( -7.85711, -2.42647, 0.741853, 8.49266 ) }
    soma_0 { pt3dadd( -6.91236, -2.19797, 0.667957, 10.2778 ) }
    soma_0 { pt3dadd( -5.96761, -1.96947, 0.594062, 12.0489 ) }
    soma_0 { pt3dadd( -5.02286, -1.74096, 0.520166, 13.6363 ) }
    soma_0 { pt3dadd( -4.07811, -1.51246, 0.44627, 14.7753 ) }
    soma_0 { pt3dadd( -3.13335, -1.28396, 0.372375, 15.6483 ) }
    soma_0 { pt3dadd( -2.1886, -1.05546, 0.298479, 16.2981 ) }
    soma_0 { pt3dadd( -1.24385, -0.826954, 0.224583, 16.8319 ) }
    soma_0 { pt3dadd( -0.299097, -0.598451, 0.150687, 17.082 ) }
    soma_0 { pt3dadd( 0.645655, -0.369949, 0.0767917, 17.31 ) }
    soma_0 { pt3dadd( 1.59041, -0.141446, 0.00289604, 17.538 ) }
    soma_0 { pt3dadd( 2.53516, 0.0870562, -0.0709997, 17.43 ) }
    soma_0 { pt3dadd( 3.47991, 0.315559, -0.144895, 16.9438 ) }
    soma_0 { pt3dadd( 4.42466, 0.544061, -0.218791, 16.4576 ) }
    soma_0 { pt3dadd( 5.36941, 0.772563, -0.292687, 15.5199 ) }
    soma_0 { pt3dadd( 6.31417, 1.00107, -0.366582, 14.2667 ) }
    soma_0 { pt3dadd( 7.25892, 1.22957, -0.440478, 13.0135 ) }
    soma_0 { pt3dadd( 8.20367, 1.45807, -0.514374, 10.6764 ) }
    soma_0 { pt3dadd( 9.14842, 1.68657, -0.588269, 7.11693 ) }
    soma_0 { pt3dadd( 10.0932, 1.91508, -0.662165, 4.00176 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 21/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -9.8861, 1.24219, -7.14961, 1.71 ) }
    dend_44 { pt3dadd( -10.0491, 1.19052, -6.83031, 1.71 ) }
    dend_44 { pt3dadd( -13.5704, 0.0746865, 0.0656075, 1.71 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 24/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -3.2361, 7.29694, -0.579609, 1.03 ) }
    dend_35 { pt3dadd( -3.58146, 7.64061, -0.464413, 1.03 ) }
    dend_35 { pt3dadd( -3.83951, 8.14443, 0.234563, 0.86 ) }
    dend_35 { pt3dadd( -4.35879, 9.15825, 1.64107, 0.86 ) }
    dend_35 { pt3dadd( -4.66007, 9.74648, 2.45715, 0.86 ) }
    dend_35 { pt3dadd( -5.67638, 11.7307, 5.20992, 0.86 ) }
    dend_35 { pt3dadd( -5.76969, 11.9128, 5.46267, 0.86 ) }
    dend_35 { pt3dadd( -7.85016, 16.9904, 12.8961, 0.86 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 32/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -1.0861, 8.34019, -5.19961, 1.71 ) }
    dend_32 { pt3dadd( -0.653036, 11.1181, -5.03427, 1.71 ) }
    dend_32 { pt3dadd( -0.520269, 11.9698, -4.98358, 0.86 ) }
    dend_32 { pt3dadd( -0.133734, 14.4493, -4.836, 0.68 ) }
    dend_32 { pt3dadd( 0.232254, 16.797, -4.69627, 0.68 ) }
    dend_32 { pt3dadd( 0.420052, 18.0016, -4.62457, 0.68 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 38/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 8.1539, 4.71319, -6.22961, 1.2 ) }
    dend_29 { pt3dadd( 9.66761, 5.15248, -6.98256, 1.2 ) }
    dend_29 { pt3dadd( 12.5467, 5.98803, -8.41471, 1.2 ) }
    dend_29 { pt3dadd( 16.6245, 7.17142, -10.443, 0.68 ) }
    dend_29 { pt3dadd( 21.157, 8.48679, -12.6976, 0.68 ) }
    dend_29 { pt3dadd( 24.425, 9.43519, -14.3232, 0.68 ) }
    dend_29 { pt3dadd( 26.3401, 9.99097, -15.2758, 0.68 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 45/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 10.4639, -0.785812, -1.19961, 1.54 ) }
    dend_18 { pt3dadd( 11.8338, 0.322596, 0.345248, 1.54 ) }
    dend_18 { pt3dadd( 12.821, 1.12137, 1.45855, 1.54 ) }
    dend_18 { pt3dadd( 15.4627, 3.25888, 4.43773, 1.03 ) }
    dend_18 { pt3dadd( 15.9684, 3.66806, 5.00803, 1.03 ) }
    dend_18 { pt3dadd( 16.1641, 3.82644, 5.22877, 1.03 ) }
    dend_18 { pt3dadd( 17.3744, 4.8057, 6.59363, 1.03 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 52/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 2.0039, -4.71506, -5.19961, 1.2 ) }
    dend_17 { pt3dadd( 1.81666, -4.70505, -5.39921, 1.2 ) }
    dend_17 { pt3dadd( 0.783252, -4.69074, -6.38297, 1.2 ) }
    dend_17 { pt3dadd( 0.206626, -4.18614, -9.52647, 1.03 ) }
    dend_17 { pt3dadd( 0.0258557, -3.96826, -10.9004, 0.68 ) }
    dend_17 { pt3dadd( -0.298639, -3.53046, -13.3829, 0.68 ) }
    dend_17 { pt3dadd( -0.439187, -3.19844, -15.2147, 0.68 ) }
    dend_17 { pt3dadd( -0.528776, -2.89434, -16.6863, 2.05 ) }
    dend_17 { pt3dadd( -1.27262, 0.179035, -29.8261, 0.17 ) }
    dend_17 { pt3dadd( -1.31223, 0.340464, -30.4733, 0.17 ) }
    dend_17 { pt3dadd( -1.40065, 0.680813, -31.6621, 0.17 ) }
    dend_17 { pt3dadd( -2.03799, 2.47688, -37.3718, 0.17 ) }
    dend_17 { pt3dadd( -2.45391, 3.29825, -40.0542, 0.17 ) }
    dend_17 { pt3dadd( -2.87769, 3.87542, -41.7329, 2.05 ) }
    dend_17 { pt3dadd( -3.58594, 4.31615, -42.8566, 0.17 ) }
    dend_17 { pt3dadd( -4.04148, 4.57721, -43.542, 0.17 ) }
    dend_17 { pt3dadd( -5.02022, 5.07767, -45.1883, 0.17 ) }
    dend_17 { pt3dadd( -7.82373, 6.07387, -49.399, 2.22 ) }
    dend_17 { pt3dadd( -7.97732, 6.17393, -50.098, 0.17 ) }
    dend_17 { pt3dadd( -8.14747, 6.28694, -51.1312, 0.17 ) }
    dend_17 { pt3dadd( -8.2998, 6.40199, -52.2438, 0.17 ) }
    dend_17 { pt3dadd( -8.85751, 6.88898, -57.1356, 0.17 ) }
    dend_17 { pt3dadd( -9.12184, 7.19046, -60.1106, 0.17 ) }
    dend_17 { pt3dadd( -10.3694, 8.56288, -76.0315, 1.71 ) }
    dend_17 { pt3dadd( -10.5073, 8.76867, -78.4213, 0.17 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.7139, -0.386062, -15.7696, 1.37 ) }
    dend_0 { pt3dadd( 1.98298, -3.50778, -15.7511, 1.37 ) }
    dend_0 { pt3dadd( 2.14317, -5.1606, -15.7013, 1.37 ) }
    dend_0 { pt3dadd( 2.35949, -6.92888, -15.6338, 1.03 ) }
    dend_0 { pt3dadd( 2.7349, -9.45097, -15.53, 1.03 ) }
    dend_0 { pt3dadd( 3.4666, -13.8742, -15.3402, 1.03 ) }
    dend_0 { pt3dadd( 3.98079, -16.9826, -15.2069, 1.03 ) }
    dend_0 { pt3dadd( 4.46223, -20.2668, -14.9663, 1.03 ) }
    dend_0 { pt3dadd( 4.70304, -22.1293, -14.8228, 2.22 ) }
    dend_0 { pt3dadd( 4.86437, -23.4871, -14.7089, 1.54 ) }
    dend_0 { pt3dadd( 4.90483, -23.7342, -14.6858, 1.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 88/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 10.0932, 1.91508, -0.662165, 1.00003 ) }
    axon_0 { pt3dadd( 24.6728, 5.44137, -0.662165, 1.00003 ) }
    axon_0 { pt3dadd( 39.2524, 8.96767, -0.662165, 1.00003 ) }
    // Section: dend_50, id: dend_50, parent: dend_44 (entry count 91/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -13.5704, 0.0746865, 0.0656075, 1.37 ) }
    dend_50 { pt3dadd( -14.0836, -0.242051, 0.078443, 1.37 ) }
    dend_50 { pt3dadd( -15.7594, -1.27642, 0.12036, 1.37 ) }
    dend_50 { pt3dadd( -17.3574, -2.26278, 0.160331, 1.37 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 95/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -13.5704, 0.0746865, 0.0656075, 0.68 ) }
    dend_45 { pt3dadd( -18.894, 1.77286, -6.25002, 0.68 ) }
    dend_45 { pt3dadd( -20.6143, 2.45408, -8.13702, 0.51 ) }
    dend_45 { pt3dadd( -21.7515, 2.93737, -9.35519, 0.51 ) }
    dend_45 { pt3dadd( -22.8461, 3.52576, -10.6182, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_45 { pt3dadd( -23.0368, 3.64268, -10.8391, 0.51 ) }
    dend_45 { pt3dadd( -23.1706, 3.73225, -10.9829, 0.51 ) }
    dend_45 { pt3dadd( -26.6983, 6.48726, -14.2233, 0.51 ) }
    dend_45 { pt3dadd( -26.7491, 6.52849, -14.2715, 0.51 ) }
    dend_45 { pt3dadd( -28.6113, 8.06819, -15.8585, 0.51 ) }
    dend_45 { pt3dadd( -30.528, 9.7079, -17.2583, 1.88 ) }
    dend_45 { pt3dadd( -32.2021, 11.111, -18.3534, 0.17 ) }
    dend_45 { pt3dadd( -34.7264, 13.18, -19.9339, 0.68 ) }
    dend_45 { pt3dadd( -36.3266, 14.3312, -20.7683, 0.68 ) }
    dend_45 { pt3dadd( -38.2008, 15.5194, -21.6886, 0.17 ) }
    dend_45 { pt3dadd( -39.9431, 16.4426, -22.4406, 1.37 ) }
    dend_45 { pt3dadd( -41.8906, 17.449, -23.6379, 0.17 ) }
    dend_45 { pt3dadd( -43.9385, 18.5562, -25.2679, 0.68 ) }
    dend_45 { pt3dadd( -45.8988, 19.6494, -26.9227, 0.68 ) }
    dend_45 { pt3dadd( -46.459, 19.981, -27.4497, 0.51 ) }
    dend_45 { pt3dadd( -47.423, 20.5573, -28.3735, 1.03 ) }
    dend_45 { pt3dadd( -51.9913, 23.1443, -32.29, 0.51 ) }
    dend_45 { pt3dadd( -53.3877, 23.9453, -33.325, 0.51 ) }
    dend_45 { pt3dadd( -55.8946, 25.3197, -34.8995, 0.51 ) }
    dend_45 { pt3dadd( -56.0158, 25.3912, -34.971, 0.51 ) }
    dend_45 { pt3dadd( -57.445, 26.1554, -35.6204, 2.22 ) }
    dend_45 { pt3dadd( -58.8858, 26.7759, -36.0371, 0.34 ) }
    dend_45 { pt3dadd( -61.0889, 27.4206, -36.1576, 0.34 ) }
    dend_45 { pt3dadd( -63.3751, 27.882, -36.2077, 0.34 ) }
    dend_45 { pt3dadd( -64.9145, 28.1356, -36.1879, 0.34 ) }
    dend_45 { pt3dadd( -67.2226, 28.4843, -36.1223, 2.05 ) }
    dend_45 { pt3dadd( -68.9759, 28.7092, -36.0226, 0.17 ) }
    dend_45 { pt3dadd( -72.6299, 29.1381, -35.6409, 0.17 ) }
    dend_45 { pt3dadd( -74.4849, 29.3146, -35.3123, 0.17 ) }
    dend_45 { pt3dadd( -76.2186, 29.4513, -34.9728, 2.22 ) }
    // Section: dend_43, id: dend_43, parent: dend_35 (entry count 30/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -7.85016, 16.9904, 12.8961, 0.68 ) }
    dend_43 { pt3dadd( -9.56691, 21.3123, 15.9546, 0.68 ) }
    dend_43 { pt3dadd( -10.5058, 23.0443, 17.0065, 0.51 ) }
    dend_43 { pt3dadd( -11.9802, 25.6094, 17.9523, 0.51 ) }
    dend_43 { pt3dadd( -13.1295, 27.7465, 18.6614, 0.51 ) }
    dend_43 { pt3dadd( -13.4416, 28.3053, 18.8304, 1.37 ) }
    dend_43 { pt3dadd( -14.0806, 29.3683, 19.137, 0.68 ) }
    dend_43 { pt3dadd( -15.2292, 31.1203, 19.3927, 0.34 ) }
    dend_43 { pt3dadd( -18.1253, 34.8517, 19.9032, 0.34 ) }
    dend_43 { pt3dadd( -19.7644, 36.6322, 20.1892, 0.34 ) }
    dend_43 { pt3dadd( -21.3703, 38.3236, 20.4048, 0.34 ) }
    dend_43 { pt3dadd( -22.3145, 39.3341, 20.534, 1.37 ) }
    dend_43 { pt3dadd( -23.2034, 40.3085, 20.6574, 0.17 ) }
    dend_43 { pt3dadd( -23.8949, 41.0026, 20.75, 0.17 ) }
    dend_43 { pt3dadd( -26.5728, 42.7728, 20.8977, 0.17 ) }
    dend_43 { pt3dadd( -27.9782, 43.5562, 20.806, 0.17 ) }
    dend_43 { pt3dadd( -32.2799, 52.5753, 24.4504, 0.17 ) }
    dend_43 { pt3dadd( -34.9516, 61.6243, 29.3671, 0.17 ) }
    dend_43 { pt3dadd( -37.626, 69.6545, 35.8859, 0.17 ) }
    dend_43 { pt3dadd( -42.03, 77.8808, 41.0637, 0.17 ) }
    dend_43 { pt3dadd( -47.2713, 86.252, 45.082, 0.17 ) }
    dend_43 { pt3dadd( -53.921, 93.0602, 50.0163, 0.17 ) }
    dend_43 { pt3dadd( -59.4626, 99.5913, 56.4822, 0.17 ) }
    dend_43 { pt3dadd( -65.1336, 107.253, 61.3228, 0.17 ) }
    dend_43 { pt3dadd( -69.9648, 115.828, 65.4061, 0.17 ) }
    dend_43 { pt3dadd( -73.9159, 125.398, 67.7236, 0.17 ) }
    dend_43 { pt3dadd( -77.2595, 135.404, 68.617, 0.17 ) }
    dend_43 { pt3dadd( -80.7537, 145.398, 68.678, 0.17 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 58/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -7.85016, 16.9904, 12.8961, 0.51 ) }
    dend_36 { pt3dadd( -7.01894, 18.3232, 13.2099, 0.51 ) }
    dend_36 { pt3dadd( -6.60006, 18.9307, 13.3631, 0.51 ) }
    dend_36 { pt3dadd( -5.2684, 20.6609, 13.8199, 0.51 ) }
    dend_36 { pt3dadd( -4.36526, 21.7478, 14.2586, 0.51 ) }
    dend_36 { pt3dadd( -4.1936, 21.9648, 14.3406, 0.51 ) }
    dend_36 { pt3dadd( -1.73517, 25.2322, 15.5119, 0.51 ) }
    dend_36 { pt3dadd( -1.12062, 26.1955, 15.7713, 0.51 ) }
    dend_36 { pt3dadd( -0.497909, 27.3349, 16.1267, 0.51 ) }
    dend_36 { pt3dadd( 0.955513, 29.9652, 17.1039, 0.51 ) }
    dend_36 { pt3dadd( 2.17482, 32.0224, 17.635, 1.71 ) }
    dend_36 { pt3dadd( 2.4543, 32.4719, 17.7044, 0.17 ) }
    dend_36 { pt3dadd( 4.1211, 35.1275, 17.8205, 1.03 ) }
    dend_36 { pt3dadd( 6.52768, 38.9144, 17.7345, 0.68 ) }
    dend_36 { pt3dadd( 8.12952, 41.2272, 17.5527, 0.51 ) }
    dend_36 { pt3dadd( 11.2308, 45.0276, 17.0299, 0.51 ) }
    dend_36 { pt3dadd( 12.2092, 46.035, 16.9309, 1.54 ) }
    dend_36 { pt3dadd( 13.0998, 46.8354, 16.8358, 0.17 ) }
    dend_36 { pt3dadd( 13.3317, 47.0078, 16.8072, 0.68 ) }
    dend_36 { pt3dadd( 15.4354, 48.4726, 16.2779, 0.68 ) }
    dend_36 { pt3dadd( 16.3385, 49.1203, 16.1804, 1.37 ) }
    dend_36 { pt3dadd( 16.6972, 49.4052, 16.2851, 0.17 ) }
    dend_36 { pt3dadd( 16.9117, 49.5968, 16.3595, 0.17 ) }
    dend_36 { pt3dadd( 17.0355, 49.7203, 16.4069, 0.17 ) }
    dend_36 { pt3dadd( 17.9632, 50.7235, 16.743, 0.17 ) }
    dend_36 { pt3dadd( 18.044, 50.8233, 16.7751, 0.17 ) }
    dend_36 { pt3dadd( 18.9, 51.9759, 17.1216, 0.17 ) }
    dend_36 { pt3dadd( 19.6516, 52.9896, 17.4128, 1.37 ) }
    dend_36 { pt3dadd( 20.5906, 54.2704, 17.7538, 0.17 ) }
    dend_36 { pt3dadd( 22.3162, 56.5682, 18.2967, 0.17 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 88/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 0.420052, 18.0016, -4.62457, 0.68 ) }
    dend_34 { pt3dadd( -0.90877, 19.5274, -4.28385, 0.68 ) }
    dend_34 { pt3dadd( -1.71686, 20.4552, -4.07664, 0.68 ) }
    dend_34 { pt3dadd( -2.16816, 20.9734, -3.96092, 1.03 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 92/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 0.420052, 18.0016, -4.62457, 0.68 ) }
    dend_33 { pt3dadd( 1.87684, 19.9249, -5.48243, 0.68 ) }
    dend_33 { pt3dadd( 3.44948, 21.6431, -6.52589, 0.68 ) }
    dend_33 { pt3dadd( 3.88033, 22.1095, -6.68718, 0.68 ) }
    dend_33 { pt3dadd( 5.50347, 23.3992, -6.57221, 0.68 ) }
    dend_33 { pt3dadd( 7.60787, 25.0713, -6.42315, 0.17 ) }
    dend_33 { pt3dadd( 11.5062, 28.1688, -6.14701, 0.17 ) }
    dend_33 { pt3dadd( 12.5629, 28.9363, -5.9432, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_33 { pt3dadd( 16.9854, 31.8229, -4.73411, 0.17 ) }
    dend_33 { pt3dadd( 23.2972, 35.4524, -2.57563, 0.17 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 26.3401, 9.99097, -15.2758, 0.17 ) }
    dend_31 { pt3dadd( 31.442, 12.3695, -18.178, 0.17 ) }
    dend_31 { pt3dadd( 32.9777, 13.2001, -18.9204, 0.17 ) }
    dend_31 { pt3dadd( 33.1879, 13.3196, -19.0103, 0.17 ) }
    dend_31 { pt3dadd( 36.2955, 15.1347, -20.2099, 0.17 ) }
    dend_31 { pt3dadd( 40.314, 17.5042, -21.6835, 1.88 ) }
    dend_31 { pt3dadd( 42.0304, 18.517, -22.2911, 0.17 ) }
    dend_31 { pt3dadd( 44.5044, 20.0121, -23.0506, 0.17 ) }
    dend_31 { pt3dadd( 45.768, 20.7401, -23.521, 1.37 ) }
    dend_31 { pt3dadd( 47.0457, 21.4424, -24.0568, 0.17 ) }
    dend_31 { pt3dadd( 47.3863, 21.6376, -24.2155, 0.17 ) }
    dend_31 { pt3dadd( 47.5255, 21.7169, -24.3027, 0.17 ) }
    dend_31 { pt3dadd( 52.0133, 24.3247, -27.7785, 0.17 ) }
    dend_31 { pt3dadd( 53.9565, 25.5732, -29.4211, 1.71 ) }
    dend_31 { pt3dadd( 54.291, 25.8012, -29.7643, 0.17 ) }
    dend_31 { pt3dadd( 56.7903, 27.6506, -32.5953, 0.17 ) }
    dend_31 { pt3dadd( 60.1635, 30.2759, -36.4709, 1.71 ) }
    dend_31 { pt3dadd( 60.2688, 30.3624, -36.5916, 0.17 ) }
    dend_31 { pt3dadd( 62.5646, 32.3776, -39.1947, 0.17 ) }
    dend_31 { pt3dadd( 65.593, 34.8269, -42.9286, 1.71 ) }
    dend_31 { pt3dadd( 66.704, 35.6175, -44.2134, 0.17 ) }
    dend_31 { pt3dadd( 67.9117, 36.3832, -45.4682, 0.17 ) }
    dend_31 { pt3dadd( 69.1131, 37.1343, -46.4792, 1.71 ) }
    dend_31 { pt3dadd( 70.0619, 37.6994, -47.2164, 0.17 ) }
    dend_31 { pt3dadd( 75.2193, 40.4076, -50.7125, 0.17 ) }
    dend_31 { pt3dadd( 77.2394, 41.4873, -51.8853, 0.17 ) }
    dend_31 { pt3dadd( 79.0444, 42.4531, -52.9078, 1.71 ) }
    dend_31 { pt3dadd( 80.325, 43.1609, -53.6251, 0.17 ) }
    dend_31 { pt3dadd( 85.1635, 45.8654, -56.1873, 0.17 ) }
    dend_31 { pt3dadd( 87.25, 47.0904, -56.9489, 1.71 ) }
    dend_31 { pt3dadd( 88.1761, 47.7933, -56.6589, 0.17 ) }
    dend_31 { pt3dadd( 89.5459, 49.1502, -55.2749, 0.17 ) }
    dend_31 { pt3dadd( 89.5836, 49.2213, -55.1105, 0.17 ) }
    dend_31 { pt3dadd( 89.6775, 49.4562, -54.4811, 1.37 ) }
    dend_31 { pt3dadd( 91.5621, 53.8706, -42.5853, 0.17 ) }
    dend_31 { pt3dadd( 92.2288, 55.4155, -38.4733, 0.17 ) }
    dend_31 { pt3dadd( 92.4296, 55.8585, -37.2871, 1.2 ) }
    dend_31 { pt3dadd( 95.9661, 62.8743, -19.5145, 0.17 ) }
    dend_31 { pt3dadd( 96.0477, 63.019, -19.1762, 0.17 ) }
    dend_31 { pt3dadd( 97.3644, 65.2932, -14.0317, 0.17 ) }
    dend_31 { pt3dadd( 97.4818, 65.467, -13.6706, 1.88 ) }
    dend_31 { pt3dadd( 97.6292, 65.6727, -13.1589, 0.17 ) }
    dend_31 { pt3dadd( 99.0877, 67.5631, -8.70937, 0.17 ) }
    dend_31 { pt3dadd( 99.548, 67.8906, -8.72713, 1.54 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 46/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 26.3401, 9.99097, -15.2758, 0.34 ) }
    dend_30 { pt3dadd( 25.8111, 14.1995, -15.3026, 0.34 ) }
    dend_30 { pt3dadd( 25.7189, 16.0728, -15.3501, 0.34 ) }
    dend_30 { pt3dadd( 25.6457, 19.3112, -15.451, 0.34 ) }
    dend_30 { pt3dadd( 25.7135, 24.4121, -15.7646, 0.68 ) }
    dend_30 { pt3dadd( 25.7985, 28.426, -16.2511, 0.68 ) }
    dend_30 { pt3dadd( 25.9722, 35.7433, -17.3767, 0.68 ) }
    dend_30 { pt3dadd( 26.2339, 41.2218, -18.5485, 0.68 ) }
    dend_30 { pt3dadd( 26.2544, 41.4102, -18.5981, 0.68 ) }
    dend_30 { pt3dadd( 27.153, 45.8846, -19.821, 0.68 ) }
    dend_30 { pt3dadd( 28.2603, 49.8873, -20.9129, 0.34 ) }
    dend_30 { pt3dadd( 29.7852, 54.5806, -22.188, 0.34 ) }
    dend_30 { pt3dadd( 30.8199, 57.4783, -22.8834, 0.34 ) }
    dend_30 { pt3dadd( 33.7554, 65.1971, -24.5374, 0.34 ) }
    dend_30 { pt3dadd( 37.1603, 73.7884, -26.0239, 0.34 ) }
    dend_30 { pt3dadd( 37.7163, 75.1258, -26.1702, 2.05 ) }
    dend_30 { pt3dadd( 38.2107, 76.2492, -26.2307, 0.17 ) }
    dend_30 { pt3dadd( 40.2539, 80.6366, -26.4191, 0.17 ) }
    dend_30 { pt3dadd( 40.4959, 81.1946, -26.4207, 0.68 ) }
    dend_30 { pt3dadd( 40.6615, 81.6825, -26.3726, 0.17 ) }
    dend_30 { pt3dadd( 41.3899, 84.8665, -26.0838, 0.17 ) }
    dend_30 { pt3dadd( 41.4519, 85.3151, -26.0484, 1.54 ) }
    dend_30 { pt3dadd( 41.5163, 86.0403, -26.0121, 0.17 ) }
    dend_30 { pt3dadd( 41.6233, 88.8265, -25.9436, 0.17 ) }
    dend_30 { pt3dadd( 41.6659, 90.4271, -25.9258, 1.54 ) }
    dend_30 { pt3dadd( 41.6692, 91.0406, -25.9245, 0.17 ) }
    dend_30 { pt3dadd( 41.6155, 95.9224, -25.9604, 0.17 ) }
    dend_30 { pt3dadd( 41.5979, 97.3163, -25.968, 1.2 ) }
    dend_30 { pt3dadd( 41.5813, 98.2246, -25.9704, 0.17 ) }
    dend_30 { pt3dadd( 41.5297, 101.318, -25.9474, 0.17 ) }
    dend_30 { pt3dadd( 41.4942, 102.779, -25.9114, 1.88 ) }
    dend_30 { pt3dadd( 41.4802, 103.295, -25.8903, 0.17 ) }
    dend_30 { pt3dadd( 41.418, 106.332, -25.7048, 0.17 ) }
    dend_30 { pt3dadd( 41.3748, 107.76, -25.5857, 0.17 ) }
    dend_30 { pt3dadd( 41.2665, 111.565, -25.2689, 0.17 ) }
    dend_30 { pt3dadd( 41.1649, 114.569, -25.0182, 0.17 ) }
    dend_30 { pt3dadd( 41.1659, 115.023, -24.9808, 1.37 ) }
    dend_30 { pt3dadd( 41.2436, 116.026, -24.9, 0.17 ) }
    dend_30 { pt3dadd( 41.7958, 119.89, -24.5956, 0.17 ) }
    dend_30 { pt3dadd( 42.1707, 121.778, -24.4496, 1.2 ) }
    dend_30 { pt3dadd( 42.5408, 123.02, -24.3568, 0.17 ) }
    dend_30 { pt3dadd( 43.5983, 125.552, -24.1756, 0.17 ) }
    dend_30 { pt3dadd( 45.7078, 129.834, -23.8775, 0.17 ) }
    dend_30 { pt3dadd( 45.9411, 130.226, -23.8513, 1.54 ) }
    dend_30 { pt3dadd( 46.2017, 130.572, -23.8296, 0.17 ) }
    dend_30 { pt3dadd( 47.9776, 132.56, -23.7121, 0.17 ) }
    dend_30 { pt3dadd( 49.9348, 134.406, -23.6112, 0.17 ) }
    dend_30 { pt3dadd( 50.0471, 134.502, -23.6062, 0.17 ) }
    dend_30 { pt3dadd( 50.3731, 134.766, -23.593, 1.88 ) }
    dend_30 { pt3dadd( 50.8725, 135.173, -23.5725, 0.17 ) }
    dend_30 { pt3dadd( 52.9582, 136.852, -23.4887, 0.17 ) }
    dend_30 { pt3dadd( 54.7562, 138.342, -23.4129, 0.17 ) }
    dend_30 { pt3dadd( 56.1252, 139.471, -23.3557, 1.54 ) }
    dend_30 { pt3dadd( 56.232, 139.561, -23.3511, 1.54 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 0/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 17.3744, 4.8057, 6.59363, 0.68 ) }
    dend_20 { pt3dadd( 18.0753, 6.95457, 6.37911, 0.68 ) }
    dend_20 { pt3dadd( 18.6322, 8.66195, 6.20867, 0.68 ) }
    dend_20 { pt3dadd( 19.3361, 10.8197, 5.99326, 0.68 ) }
    dend_20 { pt3dadd( 19.9232, 12.6196, 5.81357, 0.68 ) }
    dend_20 { pt3dadd( 20.6546, 14.8617, 5.58975, 0.68 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 6/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 17.3744, 4.8057, 6.59363, 0.68 ) }
    dend_19 { pt3dadd( 20.0101, 4.98115, 7.85717, 0.68 ) }
    dend_19 { pt3dadd( 22.4226, 5.14174, 9.01367, 0.68 ) }
    dend_19 { pt3dadd( 26.8163, 5.4342, 11.12, 0.68 ) }
    dend_19 { pt3dadd( 30.4571, 5.67655, 12.8653, 0.68 ) }
    dend_19 { pt3dadd( 39.8503, 7.14999, 17.1482, 0.68 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 12/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 4.90483, -23.7342, -14.6858, 0.17 ) }
    dend_16 { pt3dadd( 9.02675, -24.7294, 4.51111, 0.17 ) }
    dend_16 { pt3dadd( 9.13483, -24.7574, 4.84074, 0.17 ) }
    dend_16 { pt3dadd( 10.4488, -25.0843, 7.2336, 0.17 ) }
    dend_16 { pt3dadd( 11.7338, -25.5017, 8.33923, 0.17 ) }
    dend_16 { pt3dadd( 13.5194, -26.1749, 9.30994, 1.37 ) }
    dend_16 { pt3dadd( 16.189, -27.2824, 10.3738, 0.17 ) }
    dend_16 { pt3dadd( 19.459, -28.7287, 10.018, 0.68 ) }
    dend_16 { pt3dadd( 21.2391, -29.4991, 9.83326, 0.17 ) }
    dend_16 { pt3dadd( 25.1942, -31.2246, 9.43301, 0.86 ) }
    dend_16 { pt3dadd( 25.8322, -31.4388, 9.38108, 0.17 ) }
    dend_16 { pt3dadd( 26.6734, -31.6394, 9.33803, 0.17 ) }
    dend_16 { pt3dadd( 28.8753, -31.9581, 9.279, 0.17 ) }
    dend_16 { pt3dadd( 32.0079, -32.2714, 9.26337, 1.2 ) }
    dend_16 { pt3dadd( 33.2098, -32.353, 9.25728, 1.2 ) }
    dend_16 { pt3dadd( 38.75, -32.466, 9.22867, 0.17 ) }
    dend_16 { pt3dadd( 45.0086, -32.6694, 9.19651, 0.68 ) }
    dend_16 { pt3dadd( 47.2246, -32.778, 9.1852, 0.17 ) }
    dend_16 { pt3dadd( 50.4455, -33.0569, 9.16903, 0.17 ) }
    dend_16 { pt3dadd( 52.5815, -33.3717, 9.15859, 1.37 ) }
    dend_16 { pt3dadd( 54.0645, -33.6866, 9.15156, 0.17 ) }
    dend_16 { pt3dadd( 57.8155, -34.8339, 9.13453, 0.17 ) }
    dend_16 { pt3dadd( 59.1448, -35.2871, 9.1286, 1.88 ) }
    dend_16 { pt3dadd( 60.9698, -35.9136, 9.12046, 0.17 ) }
    dend_16 { pt3dadd( 64.791, -37.2153, 9.83055, 0.17 ) }
    dend_16 { pt3dadd( 68.4223, -38.4333, 10.9914, 0.17 ) }
    dend_16 { pt3dadd( 70.7534, -39.1526, 11.9398, 2.05 ) }
    dend_16 { pt3dadd( 71.8789, -39.4882, 12.4782, 0.17 ) }
    dend_16 { pt3dadd( 76.5073, -40.9196, 15.3693, 0.17 ) }
    dend_16 { pt3dadd( 85.6967, -43.5216, 21.8139, 2.05 ) }
    dend_16 { pt3dadd( 86.1091, -43.6328, 22.1378, 0.17 ) }
    dend_16 { pt3dadd( 89.1861, -44.4131, 24.9031, 0.17 ) }
    dend_16 { pt3dadd( 91.1273, -44.9023, 26.7139, 1.71 ) }
    dend_16 { pt3dadd( 96.5221, -46.3159, 31.8334, 0.17 ) }
    dend_16 { pt3dadd( 100.347, -47.2752, 35.4417, 0.17 ) }
    dend_16 { pt3dadd( 100.615, -47.3287, 35.6385, 0.86 ) }
    dend_16 { pt3dadd( 104.683, -48.0548, 38.495, 0.17 ) }
    dend_16 { pt3dadd( 107.383, -48.4552, 40.3058, 0.17 ) }
    dend_16 { pt3dadd( 107.589, -48.4735, 40.4117, 0.17 ) }
    dend_16 { pt3dadd( 108.708, -48.5735, 40.9034, 1.88 ) }
    dend_16 { pt3dadd( 110.387, -48.9038, 41.8162, 0.17 ) }
    dend_16 { pt3dadd( 113.182, -49.6469, 43.2531, 0.17 ) }
    dend_16 { pt3dadd( 113.851, -49.8447, 43.5616, 1.37 ) }
    dend_16 { pt3dadd( 115.521, -50.4157, 45.1356, 0.34 ) }
    dend_16 { pt3dadd( 119.613, -52.028, 49.9353, 0.17 ) }
    dend_16 { pt3dadd( 121.454, -52.8133, 52.3374, 0.17 ) }
    dend_16 { pt3dadd( 123.164, -53.6071, 54.8622, 0.17 ) }
    dend_16 { pt3dadd( 123.919, -53.98, 56.1311, 2.05 ) }
    dend_16 { pt3dadd( 130.697, -57.4424, 68.3779, 0.17 ) }
    dend_16 { pt3dadd( 131.119, -57.6649, 69.2182, 1.71 ) }
    dend_16 { pt3dadd( 141.635, -61.1123, 77.9085, 1.71 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 63/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.90483, -23.7342, -14.6858, 1.2 ) }
    dend_1 { pt3dadd( 3.95444, -25.8435, -14.1229, 1.2 ) }
    dend_1 { pt3dadd( 2.28922, -29.6524, -13.1922, 0.68 ) }
    dend_1 { pt3dadd( 1.0206, -32.6196, -12.5051, 2.22 ) }
    dend_1 { pt3dadd( 0.441171, -34.2259, -12.1653, 0.86 ) }
    dend_1 { pt3dadd( 0.171024, -34.9748, -12.0069, 0.68 ) }
    dend_1 { pt3dadd( -0.677473, -37.3271, -11.5093, 0.68 ) }
    dend_1 { pt3dadd( -1.01985, -38.2351, -11.304, 1.54 ) }
    dend_1 { pt3dadd( -1.06989, -38.3888, -11.2735, 1.54 ) }
    dend_1 { pt3dadd( -1.57858, -40.8342, -11.2871, 1.54 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 73/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 39.2524, 8.96767, -0.662165, 0.17 ) }
    axon_1 { pt3dadd( 53.8321, 12.494, -0.662165, 0.17 ) }
    axon_1 { pt3dadd( 68.4117, 16.0203, -0.662165, 0.17 ) }
    // Section: dend_56, id: dend_56, parent: dend_50 (entry count 76/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -17.3574, -2.26278, 0.160331, 0.86 ) }
    dend_56 { pt3dadd( -18.2448, -3.65269, -1.23068, 0.86 ) }
    dend_56 { pt3dadd( -19.3395, -4.99282, -2.86709, 0.68 ) }
    dend_56 { pt3dadd( -20.7954, -6.48085, -4.91076, 0.68 ) }
    dend_56 { pt3dadd( -25.4804, -10.6922, -11.2056, 0.68 ) }
    dend_56 { pt3dadd( -27.75, -12.4416, -14.0669, 0.68 ) }
    dend_56 { pt3dadd( -29.9874, -13.8488, -16.7524, 0.68 ) }
    dend_56 { pt3dadd( -32.6495, -14.9299, -19.6708, 1.2 ) }
    dend_56 { pt3dadd( -33.6764, -15.1063, -20.6517, 1.2 ) }
    dend_56 { pt3dadd( -34.261, -15.0938, -21.0633, 0.68 ) }
    dend_56 { pt3dadd( -36.2055, -14.7912, -21.8486, 0.68 ) }
    dend_56 { pt3dadd( -39.1655, -14.13, -22.9487, 0.51 ) }
    dend_56 { pt3dadd( -40.6919, -13.8043, -23.2915, 0.51 ) }
    dend_56 { pt3dadd( -43.4434, -13.4529, -23.539, 1.88 ) }
    dend_56 { pt3dadd( -46.2672, -13.3406, -23.7441, 1.88 ) }
    dend_56 { pt3dadd( -48.4948, -13.5311, -23.8441, 1.88 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 92/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -17.3574, -2.26278, 0.160331, 0.86 ) }
    dend_51 { pt3dadd( -19.3212, -2.15038, -2.08415, 0.86 ) }
    dend_51 { pt3dadd( -22.2603, -2.2158, -5.29962, 0.86 ) }
    dend_51 { pt3dadd( -24.4184, -2.28143, -7.50877, 0.86 ) }
    dend_51 { pt3dadd( -30.5423, -2.18273, -13.199, 0.86 ) }
    dend_51 { pt3dadd( -32.6007, -2.08542, -14.9864, 0.86 ) }
    dend_51 { pt3dadd( -38.5548, -1.73445, -20.0634, 0.86 ) }
    dend_51 { pt3dadd( -39.8972, -1.65118, -21.1981, 0.86 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_51 { pt3dadd( -42.0616, -1.50415, -22.958, 0.86 ) }
    dend_51 { pt3dadd( -45.81, -1.22957, -25.8522, 0.86 ) }
    dend_51 { pt3dadd( -48.7875, -1.05547, -28.0696, 0.51 ) }
    dend_51 { pt3dadd( -52.1127, -0.816032, -30.4544, 0.34 ) }
    dend_51 { pt3dadd( -55.7817, -0.377727, -32.8174, 0.17 ) }
    dend_51 { pt3dadd( -58.3972, -0.12659, -34.4405, 0.17 ) }
    dend_51 { pt3dadd( -60.7224, -0.0421009, -35.7945, 2.05 ) }
    dend_51 { pt3dadd( -62.5187, -0.085822, -36.6528, 0.17 ) }
    dend_51 { pt3dadd( -64.3108, -0.104596, -37.1869, 0.17 ) }
    dend_51 { pt3dadd( -65.455, -0.098371, -37.3382, 0.68 ) }
    dend_51 { pt3dadd( -68.2603, -0.101745, -37.4335, 0.34 ) }
    dend_51 { pt3dadd( -69.1565, -0.129548, -37.4602, 0.17 ) }
    dend_51 { pt3dadd( -71.5016, -0.195352, -37.4551, 1.88 ) }
    dend_51 { pt3dadd( -72.6245, -0.23755, -37.3497, 0.17 ) }
    dend_51 { pt3dadd( -74.217, -0.314014, -37.0867, 0.17 ) }
    dend_51 { pt3dadd( -75.9758, -0.436806, -36.7016, 1.2 ) }
    dend_51 { pt3dadd( -77.0154, -0.510765, -36.4328, 0.17 ) }
    dend_51 { pt3dadd( -80.3881, -0.686263, -35.5347, 0.17 ) }
    dend_51 { pt3dadd( -83.1157, -0.702487, -34.5378, 1.71 ) }
    dend_51 { pt3dadd( -84.3127, -0.674807, -34.025, 0.17 ) }
    dend_51 { pt3dadd( -85.907, -0.562591, -33.2797, 0.17 ) }
    dend_51 { pt3dadd( -87.3553, -0.375554, -32.6061, 2.39 ) }
    dend_51 { pt3dadd( -89.2356, -0.13396, -31.8325, 0.68 ) }
    dend_51 { pt3dadd( -93.1812, 0.267566, -30.508, 0.17 ) }
    dend_51 { pt3dadd( -94.3865, 0.347383, -30.188, 0.17 ) }
    dend_51 { pt3dadd( -95.7379, 0.419198, -29.8177, 1.2 ) }
    dend_51 { pt3dadd( -98.1003, 0.488846, -29.1736, 0.17 ) }
    dend_51 { pt3dadd( -101.454, 0.486337, -28.3611, 0.17 ) }
    dend_51 { pt3dadd( -103.262, 0.41754, -28.0837, 2.22 ) }
    dend_51 { pt3dadd( -103.857, 0.364016, -28.0925, 2.22 ) }
    // Section: dend_49, id: dend_49, parent: dend_45 (entry count 30/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -76.2186, 29.4513, -34.9728, 0.17 ) }
    dend_49 { pt3dadd( -77.0722, 31.2603, -34.8471, 0.17 ) }
    dend_49 { pt3dadd( -77.6052, 32.2828, -34.773, 0.17 ) }
    dend_49 { pt3dadd( -79.2462, 35.307, -34.5491, 0.17 ) }
    dend_49 { pt3dadd( -79.4901, 35.7169, -34.5167, 0.17 ) }
    dend_49 { pt3dadd( -82.2879, 40.3773, -34.1385, 0.17 ) }
    dend_49 { pt3dadd( -83.8287, 42.9162, -33.9295, 1.2 ) }
    dend_49 { pt3dadd( -84.3167, 43.7431, -33.8565, 0.17 ) }
    dend_49 { pt3dadd( -84.427, 43.9308, -33.8462, 0.17 ) }
    dend_49 { pt3dadd( -89.153, 51.837, -33.6308, 0.17 ) }
    dend_49 { pt3dadd( -90.6747, 54.4493, -33.6182, 1.54 ) }
    dend_49 { pt3dadd( -91.3794, 55.6901, -33.6446, 0.17 ) }
    dend_49 { pt3dadd( -93.2099, 59.0836, -33.7768, 0.17 ) }
    dend_49 { pt3dadd( -94.4328, 61.4394, -33.9653, 1.2 ) }
    dend_49 { pt3dadd( -94.9465, 62.5117, -34.0996, 0.17 ) }
    dend_49 { pt3dadd( -95.021, 62.6989, -34.1406, 0.17 ) }
    dend_49 { pt3dadd( -95.5722, 64.1834, -34.4966, 0.17 ) }
    dend_49 { pt3dadd( -96.0905, 65.6811, -34.8434, 1.37 ) }
    dend_49 { pt3dadd( -96.9793, 67.9087, -35.2849, 0.17 ) }
    dend_49 { pt3dadd( -98.2972, 70.8312, -35.9303, 0.17 ) }
    dend_49 { pt3dadd( -98.3946, 71.0193, -35.9827, 0.17 ) }
    dend_49 { pt3dadd( -99.0146, 72.0889, -36.3286, 1.03 ) }
    dend_49 { pt3dadd( -99.3642, 72.6028, -36.6213, 0.17 ) }
    dend_49 { pt3dadd( -100.761, 74.4445, -37.877, 0.17 ) }
    dend_49 { pt3dadd( -102.804, 76.9578, -39.7156, 1.71 ) }
    dend_49 { pt3dadd( -103.822, 78.1873, -40.6049, 0.17 ) }
    dend_49 { pt3dadd( -103.945, 78.3378, -40.7076, 0.17 ) }
    dend_49 { pt3dadd( -108.578, 84.2553, -44.5024, 0.17 ) }
    dend_49 { pt3dadd( -109.721, 85.8175, -45.3883, 1.37 ) }
    dend_49 { pt3dadd( -110.16, 86.4714, -45.7371, 0.17 ) }
    dend_49 { pt3dadd( -111.945, 89.2479, -46.9963, 0.17 ) }
    dend_49 { pt3dadd( -112.477, 90.1145, -47.3472, 1.54 ) }
    dend_49 { pt3dadd( -113.368, 91.5651, -47.7689, 0.17 ) }
    dend_49 { pt3dadd( -114.445, 93.2742, -47.961, 0.17 ) }
    dend_49 { pt3dadd( -115.979, 95.5778, -48.1637, 1.88 ) }
    dend_49 { pt3dadd( -116.846, 96.8204, -48.231, 0.17 ) }
    dend_49 { pt3dadd( -118.278, 98.7374, -48.2634, 0.17 ) }
    dend_49 { pt3dadd( -119.822, 100.663, -48.2063, 1.54 ) }
    dend_49 { pt3dadd( -120.524, 101.479, -48.1427, 0.17 ) }
    dend_49 { pt3dadd( -122.518, 103.695, -47.8677, 0.17 ) }
    dend_49 { pt3dadd( -124.026, 105.33, -47.5805, 1.71 ) }
    dend_49 { pt3dadd( -125.28, 106.644, -47.3704, 0.17 ) }
    dend_49 { pt3dadd( -126.968, 108.37, -47.1379, 0.17 ) }
    dend_49 { pt3dadd( -127.967, 109.295, -47.0454, 2.22 ) }
    dend_49 { pt3dadd( -129.148, 110.306, -46.946, 0.17 ) }
    dend_49 { pt3dadd( -131.039, 111.788, -46.8035, 0.17 ) }
    dend_49 { pt3dadd( -131.524, 112.159, -46.7678, 1.88 ) }
    dend_49 { pt3dadd( -133.113, 113.354, -46.6522, 0.17 ) }
    dend_49 { pt3dadd( -137.315, 116.45, -46.3517, 0.17 ) }
    dend_49 { pt3dadd( -138.678, 117.432, -46.2561, 1.03 ) }
    dend_49 { pt3dadd( -140.425, 118.68, -46.0528, 0.17 ) }
    dend_49 { pt3dadd( -143.987, 121.173, -45.5192, 0.17 ) }
    dend_49 { pt3dadd( -145.241, 122.062, -45.2946, 2.05 ) }
    dend_49 { pt3dadd( -147.29, 123.512, -44.63, 0.17 ) }
    dend_49 { pt3dadd( -150.148, 125.428, -43.3011, 0.17 ) }
    dend_49 { pt3dadd( -152.64, 126.823, -41.8834, 1.03 ) }
    dend_49 { pt3dadd( -153.564, 127.2, -41.2736, 0.17 ) }
    dend_49 { pt3dadd( -154.935, 127.615, -40.2657, 0.17 ) }
    dend_49 { pt3dadd( -160.052, 128.819, -36.3434, 0.17 ) }
    dend_49 { pt3dadd( -162.549, 129.241, -34.4389, 0.17 ) }
    dend_49 { pt3dadd( -164.836, 129.552, -32.7946, 0.17 ) }
    dend_49 { pt3dadd( -170.386, 130.241, -29.5009, 0.17 ) }
    dend_49 { pt3dadd( -170.792, 130.301, -29.3303, 1.71 ) }
    dend_49 { pt3dadd( -171.642, 130.454, -29.1355, 0.17 ) }
    dend_49 { pt3dadd( -173.889, 131.106, -29.3161, 0.17 ) }
    dend_49 { pt3dadd( -175.708, 131.856, -29.7582, 0.17 ) }
    dend_49 { pt3dadd( -178.635, 133.24, -30.4944, 0.17 ) }
    dend_49 { pt3dadd( -183.709, 135.634, -31.853, 1.37 ) }
    dend_49 { pt3dadd( -184.895, 136.165, -32.0954, 0.17 ) }
    dend_49 { pt3dadd( -188.423, 137.6, -32.5501, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_49 { pt3dadd( -192.757, 139.161, -32.5869, 0.17 ) }
    dend_49 { pt3dadd( -197.375, 140.68, -32.2671, 1.03 ) }
    dend_49 { pt3dadd( -198.666, 141.084, -32.0255, 0.17 ) }
    dend_49 { pt3dadd( -199.674, 141.34, -31.6772, 0.17 ) }
    dend_49 { pt3dadd( -203.47, 142.109, -30.2639, 0.17 ) }
    dend_49 { pt3dadd( -205.818, 142.352, -29.0266, 1.03 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 6/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -76.2186, 29.4513, -34.9728, 0.34 ) }
    dend_46 { pt3dadd( -78.0071, 29.0291, -35.7751, 0.34 ) }
    dend_46 { pt3dadd( -80.0092, 28.6511, -36.5652, 0.34 ) }
    dend_46 { pt3dadd( -80.595, 28.5217, -36.7842, 0.34 ) }
    dend_46 { pt3dadd( -80.7891, 28.4747, -36.8501, 0.34 ) }
    dend_46 { pt3dadd( -83.226, 27.8392, -37.8887, 0.34 ) }
    dend_46 { pt3dadd( -85.0925, 27.2993, -38.7194, 0.34 ) }
    dend_46 { pt3dadd( -86.8419, 26.762, -39.4218, 1.03 ) }
    dend_46 { pt3dadd( -87.7016, 26.463, -39.7425, 0.68 ) }
    dend_46 { pt3dadd( -88.8602, 26.0157, -40.2999, 0.86 ) }
    dend_46 { pt3dadd( -90.8953, 25.1199, -41.4793, 0.17 ) }
    dend_46 { pt3dadd( -92.9099, 24.086, -42.8086, 0.17 ) }
    dend_46 { pt3dadd( -93.6758, 23.6791, -43.3269, 1.37 ) }
    dend_46 { pt3dadd( -94.7533, 23.143, -43.9767, 0.17 ) }
    dend_46 { pt3dadd( -98.3128, 21.5312, -45.9796, 0.17 ) }
    dend_46 { pt3dadd( -98.4439, 21.4799, -46.0413, 0.17 ) }
    dend_46 { pt3dadd( -99.633, 21.1091, -46.4366, 1.03 ) }
    dend_46 { pt3dadd( -100.362, 20.9786, -46.6315, 0.34 ) }
    dend_46 { pt3dadd( -102.189, 20.9063, -47.0404, 0.34 ) }
    dend_46 { pt3dadd( -102.484, 20.927, -47.0873, 0.34 ) }
    dend_46 { pt3dadd( -104.526, 21.125, -47.202, 0.17 ) }
    dend_46 { pt3dadd( -105.194, 21.1825, -47.2567, 2.05 ) }
    dend_46 { pt3dadd( -107.2, 21.3843, -47.4637, 0.17 ) }
    dend_46 { pt3dadd( -108.891, 21.5267, -47.6228, 0.17 ) }
    dend_46 { pt3dadd( -109.198, 21.5461, -47.6481, 0.17 ) }
    dend_46 { pt3dadd( -113.009, 21.7423, -47.8945, 0.17 ) }
    dend_46 { pt3dadd( -114.425, 21.7986, -48.078, 1.03 ) }
    dend_46 { pt3dadd( -115.835, 21.8217, -48.3172, 0.17 ) }
    dend_46 { pt3dadd( -118.224, 21.8031, -48.7779, 0.17 ) }
    dend_46 { pt3dadd( -119.913, 21.7408, -49.1155, 0.17 ) }
    dend_46 { pt3dadd( -121.942, 21.6776, -49.6751, 1.54 ) }
    dend_46 { pt3dadd( -125.086, 21.5889, -50.8268, 0.17 ) }
    dend_46 { pt3dadd( -126.756, 21.4893, -51.5396, 0.17 ) }
    dend_46 { pt3dadd( -127.844, 21.388, -52.074, 0.86 ) }
    dend_46 { pt3dadd( -128.61, 21.2929, -52.5002, 0.17 ) }
    dend_46 { pt3dadd( -130.909, 20.8848, -54.2089, 0.17 ) }
    dend_46 { pt3dadd( -131.415, 20.7708, -54.6341, 1.37 ) }
    dend_46 { pt3dadd( -131.657, 20.7181, -54.8612, 0.17 ) }
    dend_46 { pt3dadd( -131.756, 20.6986, -54.9633, 0.17 ) }
    dend_46 { pt3dadd( -132.368, 20.5891, -55.6347, 0.17 ) }
    dend_46 { pt3dadd( -135.456, 20.0397, -59.0303, 0.17 ) }
    dend_46 { pt3dadd( -136.553, 19.8299, -60.2636, 1.37 ) }
    dend_46 { pt3dadd( -139.301, 19.3241, -63.3988, 0.17 ) }
    dend_46 { pt3dadd( -140.289, 19.1417, -64.5297, 0.17 ) }
    dend_46 { pt3dadd( -142.216, 18.7987, -66.7071, 0.17 ) }
    dend_46 { pt3dadd( -143.146, 18.6459, -67.7426, 1.88 ) }
    // Section: dend_42, id: dend_42, parent: dend_36 (entry count 52/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 22.3162, 56.5682, 18.2967, 0.17 ) }
    dend_42 { pt3dadd( 21.9185, 57.7683, 20.8822, 0.17 ) }
    dend_42 { pt3dadd( 21.8251, 58.4325, 21.9792, 0.68 ) }
    dend_42 { pt3dadd( 21.6826, 61.0249, 25.6456, 0.68 ) }
    dend_42 { pt3dadd( 21.5867, 62.7681, 28.111, 0.68 ) }
    dend_42 { pt3dadd( 21.5443, 63.5388, 29.201, 0.51 ) }
    dend_42 { pt3dadd( 21.5048, 64.2564, 30.2158, 0.51 ) }
    dend_42 { pt3dadd( 21.5366, 65.299, 31.1835, 0.51 ) }
    dend_42 { pt3dadd( 21.5657, 65.4747, 31.3038, 0.51 ) }
    dend_42 { pt3dadd( 21.5326, 69.9644, 35.8575, 0.51 ) }
    dend_42 { pt3dadd( 20.84, 73.5241, 41.1636, 0.51 ) }
    dend_42 { pt3dadd( 19.4671, 76.974, 46.4163, 0.51 ) }
    dend_42 { pt3dadd( 17.7235, 79.9086, 51.887, 0.51 ) }
    dend_42 { pt3dadd( 15.6404, 82.9805, 57.157, 0.51 ) }
    dend_42 { pt3dadd( 13.688, 87.0517, 61.7158, 0.51 ) }
    dend_42 { pt3dadd( 11.9168, 91.5839, 65.8739, 0.51 ) }
    dend_42 { pt3dadd( 9.76641, 95.4161, 70.5606, 0.51 ) }
    dend_42 { pt3dadd( 7.18417, 99.5583, 74.7272, 0.51 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 70/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 22.3162, 56.5682, 18.2967, 0.17 ) }
    dend_37 { pt3dadd( 22.0087, 59.7667, 3.66922, 0.17 ) }
    dend_37 { pt3dadd( 22.0059, 59.7953, 3.53863, 0.17 ) }
    dend_37 { pt3dadd( 21.9678, 60.1921, 1.72376, 2.22 ) }
    dend_37 { pt3dadd( 21.9503, 60.3742, 0.891179, 2.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_20 (entry count 75/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 20.6546, 14.8617, 5.58975, 0.68 ) }
    dend_28 { pt3dadd( 20.8301, 16.8335, 4.8845, 0.68 ) }
    dend_28 { pt3dadd( 20.835, 17.1505, 4.81, 1.88 ) }
    dend_28 { pt3dadd( 20.5552, 22.0378, 4.71364, 0.17 ) }
    dend_28 { pt3dadd( 20.1839, 25.3897, 4.91363, 0.51 ) }
    dend_28 { pt3dadd( 19.8169, 28.2836, 5.20071, 0.51 ) }
    dend_28 { pt3dadd( 19.2538, 32.724, 5.64121, 0.51 ) }
    dend_28 { pt3dadd( 18.6535, 36.5911, 6.10105, 1.03 ) }
    dend_28 { pt3dadd( 17.651, 42.54, 7.15142, 1.03 ) }
    dend_28 { pt3dadd( 17.059, 45.6559, 8.05744, 1.03 ) }
    dend_28 { pt3dadd( 16.6631, 47.143, 8.55282, 0.17 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 86/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 20.6546, 14.8617, 5.58975, 0.17 ) }
    dend_21 { pt3dadd( 22.2579, 14.7362, 6.09434, 0.17 ) }
    dend_21 { pt3dadd( 24.6813, 14.5464, 6.85697, 0.17 ) }
    dend_21 { pt3dadd( 26.4658, 14.4066, 7.41855, 0.51 ) }
    dend_21 { pt3dadd( 30.2014, 14.1141, 8.59417, 0.51 ) }
    dend_21 { pt3dadd( 36.7219, 13.6034, 10.6462, 0.51 ) }
    dend_21 { pt3dadd( 36.9129, 13.5885, 10.7063, 0.51 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 93/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -1.57858, -40.8342, -11.2871, 1.54 ) }
    dend_3 { pt3dadd( -1.4336, -41.6104, -11.4343, 1.54 ) }
    dend_3 { pt3dadd( -1.21608, -42.7751, -11.6553, 1.03 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 96/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -1.57858, -40.8342, -11.2871, 0.17 ) }
    dend_2 { pt3dadd( -0.654782, -41.9698, -9.00805, 0.17 ) }
    dend_2 { pt3dadd( -0.217986, -42.9554, -7.18177, 0.17 ) }
    dend_2 { pt3dadd( -0.170613, -43.1628, -6.84876, 1.71 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( -0.0826063, -43.9102, -5.61546, 0.17 ) }
    dend_2 { pt3dadd( -0.152178, -47.7901, 1.44, 0.17 ) }
    dend_2 { pt3dadd( -0.451733, -50.8531, 6.95685, 0.17 ) }
    dend_2 { pt3dadd( -0.81439, -52.3269, 9.62411, 0.17 ) }
    dend_2 { pt3dadd( -1.21138, -53.5794, 11.8036, 0.17 ) }
    dend_2 { pt3dadd( -2.42056, -57.1522, 17.4821, 0.17 ) }
    dend_2 { pt3dadd( -3.41056, -60.017, 21.5111, 0.17 ) }
    dend_2 { pt3dadd( -3.95486, -61.3742, 23.1623, 0.17 ) }
    dend_2 { pt3dadd( -4.28241, -62.412, 24.3604, 0.17 ) }
    dend_2 { pt3dadd( -4.60302, -63.7965, 26.0047, 0.17 ) }
    dend_2 { pt3dadd( -5.03469, -66.0967, 28.554, 0.17 ) }
    dend_2 { pt3dadd( -5.44745, -69.6432, 30.7869, 0.17 ) }
    dend_2 { pt3dadd( -8.53214, -74.3543, 39.4163, 0.17 ) }
    dend_2 { pt3dadd( -13.4149, -77.0955, 48.1094, 0.17 ) }
    dend_2 { pt3dadd( -18.4399, -79.7315, 56.7555, 0.17 ) }
    dend_2 { pt3dadd( -22.2358, -82.9818, 65.7997, 0.17 ) }
    dend_2 { pt3dadd( -27.0204, -85.8862, 74.4917, 0.17 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 17/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -48.4948, -13.5311, -23.8441, 0.17 ) }
    dend_60 { pt3dadd( -48.6271, -13.4595, -23.8883, 0.17 ) }
    dend_60 { pt3dadd( -49.5549, -12.8797, -24.2734, 0.17 ) }
    dend_60 { pt3dadd( -50.26, -12.4743, -24.5559, 0.17 ) }
    dend_60 { pt3dadd( -51.982, -11.5629, -25.2073, 1.37 ) }
    dend_60 { pt3dadd( -53.2677, -10.9582, -25.6613, 1.37 ) }
    dend_60 { pt3dadd( -55.6449, -9.98656, -26.4312, 0.17 ) }
    dend_60 { pt3dadd( -57.1249, -9.44439, -26.8842, 0.17 ) }
    dend_60 { pt3dadd( -58.5307, -9.0254, -27.3658, 0.17 ) }
    dend_60 { pt3dadd( -59.276, -8.8941, -27.6177, 1.03 ) }
    dend_60 { pt3dadd( -60.1426, -8.87439, -28.0664, 1.03 ) }
    dend_60 { pt3dadd( -61.5545, -9.03211, -28.9194, 0.17 ) }
    dend_60 { pt3dadd( -62.3678, -9.25629, -29.5189, 0.17 ) }
    dend_60 { pt3dadd( -64.5833, -10.1899, -31.4317, 2.22 ) }
    dend_60 { pt3dadd( -65.8783, -10.8512, -32.6933, 2.22 ) }
    dend_60 { pt3dadd( -69.5717, -13.0167, -36.3836, 0.17 ) }
    dend_60 { pt3dadd( -70.867, -13.9199, -37.8306, 0.17 ) }
    dend_60 { pt3dadd( -72.9981, -15.5819, -40.2446, 0.17 ) }
    dend_60 { pt3dadd( -73.8083, -16.2974, -41.0988, 1.88 ) }
    dend_60 { pt3dadd( -73.9129, -16.4087, -41.1971, 1.88 ) }
    dend_60 { pt3dadd( -75.2855, -18.1065, -42.4245, 1.2 ) }
    dend_60 { pt3dadd( -77.1682, -20.8038, -43.7517, 0.34 ) }
    dend_60 { pt3dadd( -78.5273, -22.9286, -44.63, 0.34 ) }
    dend_60 { pt3dadd( -79.9817, -25.5285, -45.4176, 2.05 ) }
    dend_60 { pt3dadd( -81.1167, -27.7653, -45.9809, 0.51 ) }
    dend_60 { pt3dadd( -82.4886, -30.6857, -46.5774, 0.51 ) }
    dend_60 { pt3dadd( -83.8344, -33.7802, -47.0463, 0.17 ) }
    dend_60 { pt3dadd( -84.97, -36.3654, -47.2672, 0.17 ) }
    dend_60 { pt3dadd( -86.4136, -39.6418, -47.4972, 0.17 ) }
    dend_60 { pt3dadd( -87.2598, -41.3276, -47.5775, 1.54 ) }
    dend_60 { pt3dadd( -87.9284, -42.4106, -47.583, 1.54 ) }
    dend_60 { pt3dadd( -88.9811, -43.846, -47.4375, 0.17 ) }
    dend_60 { pt3dadd( -90.3482, -45.4484, -47.1962, 0.17 ) }
    dend_60 { pt3dadd( -91.501, -46.6711, -46.9568, 2.05 ) }
    dend_60 { pt3dadd( -92.7223, -47.8118, -46.6067, 0.34 ) }
    dend_60 { pt3dadd( -95.5293, -50.3456, -45.5455, 0.34 ) }
    dend_60 { pt3dadd( -97.2822, -51.8925, -44.7526, 1.54 ) }
    dend_60 { pt3dadd( -98.6462, -53.04, -44.0533, 1.54 ) }
    dend_60 { pt3dadd( -99.0339, -53.3453, -43.8443, 0.17 ) }
    dend_60 { pt3dadd( -101.325, -55.012, -42.5801, 0.17 ) }
    dend_60 { pt3dadd( -102.478, -55.7728, -41.9636, 1.03 ) }
    dend_60 { pt3dadd( -102.946, -56.0796, -41.743, 1.03 ) }
    dend_60 { pt3dadd( -104.049, -56.7497, -41.3708, 0.17 ) }
    dend_60 { pt3dadd( -106.252, -57.9029, -40.7876, 0.17 ) }
    dend_60 { pt3dadd( -106.626, -58.0856, -40.718, 0.68 ) }
    dend_60 { pt3dadd( -107.87, -58.6685, -40.4784, 0.17 ) }
    dend_60 { pt3dadd( -110.582, -59.856, -40.0091, 0.17 ) }
    dend_60 { pt3dadd( -112.949, -60.9097, -39.4349, 0.17 ) }
    dend_60 { pt3dadd( -114.373, -61.5886, -39.0371, 1.37 ) }
    dend_60 { pt3dadd( -115.927, -62.3988, -38.5511, 0.51 ) }
    dend_60 { pt3dadd( -118.553, -63.9528, -37.2752, 0.51 ) }
    dend_60 { pt3dadd( -120.471, -65.2179, -36.0161, 0.51 ) }
    dend_60 { pt3dadd( -122.523, -66.6548, -34.4054, 0.17 ) }
    dend_60 { pt3dadd( -123.799, -67.7224, -33.2774, 1.2 ) }
    dend_60 { pt3dadd( -124.516, -68.3164, -32.6621, 1.2 ) }
    dend_60 { pt3dadd( -127.824, -70.9973, -29.9591, 0.17 ) }
    dend_60 { pt3dadd( -128.826, -71.7862, -29.2605, 0.17 ) }
    dend_60 { pt3dadd( -129.985, -72.6538, -28.3073, 1.88 ) }
    dend_60 { pt3dadd( -130.702, -73.1356, -27.7461, 0.17 ) }
    dend_60 { pt3dadd( -132.271, -74.1849, -26.3964, 0.17 ) }
    dend_60 { pt3dadd( -132.666, -74.4526, -26.0795, 0.86 ) }
    dend_60 { pt3dadd( -133.737, -75.2138, -25.4549, 0.86 ) }
    dend_60 { pt3dadd( -136.16, -77.1924, -23.938, 0.17 ) }
    dend_60 { pt3dadd( -136.771, -77.6805, -23.5851, 0.17 ) }
    dend_60 { pt3dadd( -137.503, -78.2071, -23.2398, 0.17 ) }
    dend_60 { pt3dadd( -138.159, -78.6798, -22.9863, 0.86 ) }
    dend_60 { pt3dadd( -139.999, -79.9719, -22.4554, 0.34 ) }
    dend_60 { pt3dadd( -141.797, -81.2193, -22.0424, 0.34 ) }
    dend_60 { pt3dadd( -143.456, -82.4178, -21.7522, 0.34 ) }
    dend_60 { pt3dadd( -147.096, -85.1095, -21.3371, 0.34 ) }
    dend_60 { pt3dadd( -148.944, -86.5234, -21.2068, 0.34 ) }
    dend_60 { pt3dadd( -152.85, -89.603, -20.9539, 0.34 ) }
    dend_60 { pt3dadd( -152.991, -89.7209, -20.9465, 0.34 ) }
    dend_60 { pt3dadd( -154.822, -91.342, -20.8971, 0.34 ) }
    dend_60 { pt3dadd( -157.226, -93.7744, -20.9683, 1.88 ) }
    dend_60 { pt3dadd( -157.765, -94.3718, -21.0923, 1.88 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 93/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -48.4948, -13.5311, -23.8441, 0.68 ) }
    dend_57 { pt3dadd( -50.2769, -17.0871, -23.9841, 0.68 ) }
    dend_57 { pt3dadd( -50.8618, -18.2543, -24.03, 0.51 ) }
    dend_57 { pt3dadd( -51.7559, -20.0384, -24.1002, 0.51 ) }
    dend_57 { pt3dadd( -53.1849, -22.8899, -24.2124, 0.51 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 98/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -103.857, 0.364016, -28.0925, 0.17 ) }
    dend_53 { pt3dadd( -104.323, 0.423474, -28.7508, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_53 { pt3dadd( -104.422, 0.437898, -28.891, 0.17 ) }
    dend_53 { pt3dadd( -104.758, 0.486524, -29.3051, 0.17 ) }
    dend_53 { pt3dadd( -105.857, 0.713192, -30.801, 0.86 ) }
    dend_53 { pt3dadd( -107.632, 1.06714, -33.1566, 0.34 ) }
    dend_53 { pt3dadd( -111.408, 1.82975, -38.5756, 0.34 ) }
    dend_53 { pt3dadd( -112.258, 1.98478, -39.7408, 1.71 ) }
    dend_53 { pt3dadd( -113.671, 2.2347, -41.5576, 0.17 ) }
    dend_53 { pt3dadd( -116.275, 2.64761, -44.6104, 0.17 ) }
    dend_53 { pt3dadd( -117.562, 2.84297, -46.0716, 0.17 ) }
    dend_53 { pt3dadd( -121.513, 3.30594, -49.9086, 0.17 ) }
    dend_53 { pt3dadd( -124.583, 3.58058, -52.2865, 0.17 ) }
    dend_53 { pt3dadd( -125.747, 3.6523, -53.1275, 1.88 ) }
    dend_53 { pt3dadd( -128.076, 3.73697, -54.5456, 0.17 ) }
    dend_53 { pt3dadd( -132.818, 3.76888, -56.7381, 0.17 ) }
    dend_53 { pt3dadd( -135.156, 3.79043, -57.6802, 0.17 ) }
    dend_53 { pt3dadd( -136.028, 3.78909, -57.9676, 1.2 ) }
    dend_53 { pt3dadd( -137.72, 3.81341, -58.6222, 0.17 ) }
    dend_53 { pt3dadd( -140.651, 3.85853, -60.0136, 0.17 ) }
    dend_53 { pt3dadd( -141.159, 3.87184, -60.2831, 0.17 ) }
    dend_53 { pt3dadd( -141.325, 3.87523, -60.3545, 0.17 ) }
    dend_53 { pt3dadd( -143.609, 3.91283, -61.5644, 0.17 ) }
    dend_53 { pt3dadd( -145.17, 3.88635, -62.4354, 2.05 ) }
    dend_53 { pt3dadd( -147.9, 3.76943, -63.9718, 1.54 ) }
    dend_53 { pt3dadd( -148.742, 3.70355, -64.4279, 0.17 ) }
    dend_53 { pt3dadd( -151.306, 3.42584, -65.7103, 0.17 ) }
    dend_53 { pt3dadd( -155.654, 2.78376, -67.6685, 0.17 ) }
    dend_53 { pt3dadd( -157.358, 2.47888, -68.2245, 1.03 ) }
    dend_53 { pt3dadd( -158.757, 2.1905, -68.57, 0.17 ) }
    dend_53 { pt3dadd( -160.146, 1.88709, -68.7573, 0.17 ) }
    dend_53 { pt3dadd( -161.075, 1.65937, -68.8321, 1.54 ) }
    dend_53 { pt3dadd( -162.12, 1.377, -68.8201, 0.17 ) }
    dend_53 { pt3dadd( -165.645, 0.485814, -68.2873, 0.17 ) }
    dend_53 { pt3dadd( -165.823, 0.448122, -68.2729, 0.17 ) }
    dend_53 { pt3dadd( -167.229, 0.260021, -68.3553, 1.54 ) }
    dend_53 { pt3dadd( -167.785, 0.246596, -68.4668, 0.17 ) }
    dend_53 { pt3dadd( -169.693, 0.381145, -69.0244, 0.17 ) }
    dend_53 { pt3dadd( -170.044, 0.458136, -69.1844, 1.54 ) }
    dend_53 { pt3dadd( -173.558, 1.4882, -70.9592, 0.17 ) }
    dend_53 { pt3dadd( -176.032, 2.33165, -72.1342, 0.17 ) }
    dend_53 { pt3dadd( -178.048, 3.03591, -73.0186, 2.05 ) }
    dend_53 { pt3dadd( -179.633, 3.57671, -73.6022, 0.17 ) }
    dend_53 { pt3dadd( -184.277, 5.11352, -74.798, 0.17 ) }
    dend_53 { pt3dadd( -187.143, 5.96684, -75.2626, 1.2 ) }
    dend_53 { pt3dadd( -188.296, 6.27858, -75.3402, 0.17 ) }
    dend_53 { pt3dadd( -191.537, 7.11188, -75.4476, 0.17 ) }
    dend_53 { pt3dadd( -195.675, 7.99267, -75.1434, 0.17 ) }
    dend_53 { pt3dadd( -199.007, 8.40235, -74.3735, 1.54 ) }
    dend_53 { pt3dadd( -200.499, 8.45175, -73.7906, 0.17 ) }
    dend_53 { pt3dadd( -201.148, 8.42675, -73.4365, 0.86 ) }
    dend_53 { pt3dadd( -201.458, 8.39777, -73.2479, 0.17 ) }
    dend_53 { pt3dadd( -205.31, 7.69811, -70.5534, 0.17 ) }
    dend_53 { pt3dadd( -208.397, 6.84346, -68.3341, 0.17 ) }
    dend_53 { pt3dadd( -209.666, 6.42012, -67.4623, 1.54 ) }
    dend_53 { pt3dadd( -213.013, 5.181, -65.1976, 0.17 ) }
    dend_53 { pt3dadd( -216.168, 3.86239, -62.999, 0.17 ) }
    dend_53 { pt3dadd( -219.41, 2.37461, -60.6031, 1.2 ) }
    dend_53 { pt3dadd( -220.532, 1.81102, -59.7632, 1.2 ) }
    dend_53 { pt3dadd( -221.061, 1.52235, -59.336, 0.17 ) }
    dend_53 { pt3dadd( -221.946, 1.02067, -58.5958, 0.17 ) }
    dend_53 { pt3dadd( -224.712, -0.538051, -56.33, 0.86 ) }
    dend_53 { pt3dadd( -227.702, -2.20302, -53.6807, 0.34 ) }
    dend_53 { pt3dadd( -228.928, -2.74527, -52.7449, 0.34 ) }
    dend_53 { pt3dadd( -229.076, -2.79986, -52.6539, 0.34 ) }
    dend_53 { pt3dadd( -229.678, -2.99957, -52.3104, 1.03 ) }
    dend_53 { pt3dadd( -230.33, -3.1979, -52.0322, 0.17 ) }
    dend_53 { pt3dadd( -232.203, -3.67842, -52.3362, 0.17 ) }
    dend_53 { pt3dadd( -234.913, -4.39033, -54.0529, 1.2 ) }
    dend_53 { pt3dadd( -236.14, -4.7354, -55.0253, 0.68 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 68/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -103.857, 0.364016, -28.0925, 0.17 ) }
    dend_52 { pt3dadd( -106.495, 3.40238, -30.2415, 0.17 ) }
    dend_52 { pt3dadd( -108.162, 5.29237, -31.246, 0.17 ) }
    dend_52 { pt3dadd( -109.685, 7.03425, -31.8138, 1.03 ) }
    dend_52 { pt3dadd( -110.486, 7.94799, -32.0265, 0.17 ) }
    dend_52 { pt3dadd( -111.601, 9.22225, -32.2502, 0.17 ) }
    dend_52 { pt3dadd( -114.795, 12.8583, -32.786, 0.17 ) }
    dend_52 { pt3dadd( -114.9, 12.9745, -32.7837, 0.17 ) }
    dend_52 { pt3dadd( -116.668, 14.9326, -32.6307, 1.2 ) }
    dend_52 { pt3dadd( -116.949, 15.2614, -32.5941, 0.17 ) }
    dend_52 { pt3dadd( -118.632, 17.4011, -32.3414, 0.17 ) }
    dend_52 { pt3dadd( -119.06, 18.0248, -32.28, 0.17 ) }
    dend_52 { pt3dadd( -119.536, 18.7556, -32.2485, 1.54 ) }
    dend_52 { pt3dadd( -120.131, 19.6582, -32.2374, 0.17 ) }
    dend_52 { pt3dadd( -121.073, 21.0398, -32.2579, 0.17 ) }
    dend_52 { pt3dadd( -122.509, 22.9043, -32.5349, 0.17 ) }
    dend_52 { pt3dadd( -122.912, 23.3726, -32.6597, 1.71 ) }
    dend_52 { pt3dadd( -124.013, 24.4902, -33.0606, 0.17 ) }
    dend_52 { pt3dadd( -125.097, 25.4879, -33.4927, 0.17 ) }
    dend_52 { pt3dadd( -127.181, 27.1497, -34.3403, 0.17 ) }
    dend_52 { pt3dadd( -130.689, 29.5627, -35.8041, 1.54 ) }
    dend_52 { pt3dadd( -132.444, 30.5641, -36.519, 0.17 ) }
    dend_52 { pt3dadd( -134.583, 31.5557, -37.4268, 0.17 ) }
    dend_52 { pt3dadd( -134.583, 31.5557, -37.4268, 2.05 ) }
    dend_52 { pt3dadd( -136.768, 32.1479, -38.3604, 0.17 ) }
    dend_52 { pt3dadd( -137.663, 32.2934, -38.7226, 0.17 ) }
    dend_52 { pt3dadd( -141.02, 32.6821, -39.5547, 0.17 ) }
    dend_52 { pt3dadd( -144.249, 32.9003, -40.1553, 1.03 ) }
    dend_52 { pt3dadd( -145.013, 32.9646, -40.2526, 0.17 ) }
    dend_52 { pt3dadd( -145.166, 32.9907, -40.2625, 0.17 ) }
    dend_52 { pt3dadd( -145.901, 33.2243, -40.2332, 0.17 ) }
    dend_52 { pt3dadd( -149.162, 35.0602, -39.7551, 1.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_52 { pt3dadd( -150.0, 35.7554, -39.5107, 0.17 ) }
    dend_52 { pt3dadd( -150.991, 36.7017, -39.1688, 0.17 ) }
    dend_52 { pt3dadd( -151.923, 37.7114, -38.9359, 1.03 ) }
    dend_52 { pt3dadd( -152.769, 38.6977, -38.8212, 0.17 ) }
    dend_52 { pt3dadd( -153.6, 39.7767, -38.859, 0.17 ) }
    dend_52 { pt3dadd( -153.979, 40.3012, -38.891, 1.03 ) }
    dend_52 { pt3dadd( -154.164, 40.5868, -38.8538, 0.17 ) }
    dend_52 { pt3dadd( -154.792, 41.5919, -38.4223, 0.17 ) }
    dend_52 { pt3dadd( -154.865, 41.7123, -38.3542, 0.17 ) }
    dend_52 { pt3dadd( -155.13, 42.1896, -38.0265, 1.2 ) }
    dend_52 { pt3dadd( -156.626, 44.9603, -35.7881, 0.17 ) }
    dend_52 { pt3dadd( -157.118, 45.8737, -34.9782, 0.17 ) }
    dend_52 { pt3dadd( -158.141, 47.675, -33.2193, 1.54 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 13/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -143.146, 18.6459, -67.7426, 0.17 ) }
    dend_48 { pt3dadd( -143.12, 17.1989, -66.4504, 0.17 ) }
    dend_48 { pt3dadd( -143.094, 15.7991, -65.2003, 0.17 ) }
    dend_48 { pt3dadd( -143.013, 11.406, -61.2773, 0.17 ) }
    dend_48 { pt3dadd( -143.004, 10.8963, -60.822, 0.86 ) }
    dend_48 { pt3dadd( -143.003, 10.836, -60.7682, 0.86 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 19/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -143.146, 18.6459, -67.7426, 0.17 ) }
    dend_47 { pt3dadd( -144.441, 19.0535, -68.4401, 0.17 ) }
    dend_47 { pt3dadd( -148.046, 20.3041, -70.2457, 0.17 ) }
    dend_47 { pt3dadd( -148.192, 20.3626, -70.3323, 0.17 ) }
    dend_47 { pt3dadd( -151.202, 21.5889, -72.2287, 1.37 ) }
    dend_47 { pt3dadd( -152.752, 22.2134, -73.1933, 0.17 ) }
    dend_47 { pt3dadd( -156.07, 23.5821, -75.1817, 0.17 ) }
    dend_47 { pt3dadd( -157.299, 24.141, -75.9473, 0.17 ) }
    dend_47 { pt3dadd( -160.599, 25.7818, -78.2877, 1.03 ) }
    dend_47 { pt3dadd( -161.025, 25.9971, -78.5726, 0.17 ) }
    dend_47 { pt3dadd( -162.527, 26.7333, -79.45, 0.17 ) }
    dend_47 { pt3dadd( -164.026, 27.4367, -80.308, 0.68 ) }
    dend_47 { pt3dadd( -164.294, 27.5558, -80.4964, 0.68 ) }
    dend_47 { pt3dadd( -166.235, 28.3086, -81.8078, 0.17 ) }
    dend_47 { pt3dadd( -168.487, 29.0143, -83.2112, 0.17 ) }
    dend_47 { pt3dadd( -169.798, 29.374, -84.1408, 1.2 ) }
    dend_47 { pt3dadd( -170.583, 29.5342, -84.7279, 0.17 ) }
    dend_47 { pt3dadd( -173.567, 29.9604, -86.8979, 0.17 ) }
    dend_47 { pt3dadd( -174.74, 30.0858, -87.6819, 0.17 ) }
    dend_47 { pt3dadd( -175.909, 30.1146, -88.3575, 0.68 ) }
    dend_47 { pt3dadd( -177.524, 29.9707, -89.357, 0.17 ) }
    dend_47 { pt3dadd( -179.035, 29.7216, -90.2486, 0.17 ) }
    dend_47 { pt3dadd( -179.835, 29.5109, -90.707, 1.88 ) }
    dend_47 { pt3dadd( -180.408, 29.3285, -91.0555, 0.17 ) }
    dend_47 { pt3dadd( -183.666, 28.2495, -93.2235, 0.17 ) }
    dend_47 { pt3dadd( -185.417, 27.566, -94.382, 1.37 ) }
    dend_47 { pt3dadd( -186.595, 27.0583, -95.1605, 0.17 ) }
    dend_47 { pt3dadd( -189.359, 25.7538, -97.1488, 0.17 ) }
    dend_47 { pt3dadd( -191.754, 24.574, -98.9091, 1.03 ) }
    dend_47 { pt3dadd( -192.306, 24.2793, -99.3914, 0.17 ) }
    dend_47 { pt3dadd( -194.488, 23.0453, -101.507, 0.17 ) }
    dend_47 { pt3dadd( -194.748, 22.9014, -101.766, 0.17 ) }
    dend_47 { pt3dadd( -195.808, 22.2914, -102.839, 1.2 ) }
    dend_47 { pt3dadd( -196.603, 21.7962, -103.635, 0.17 ) }
    dend_47 { pt3dadd( -201.424, 18.6778, -108.372, 0.17 ) }
    dend_47 { pt3dadd( -201.826, 18.417, -108.915, 1.37 ) }
    dend_47 { pt3dadd( -201.915, 18.3614, -109.058, 1.37 ) }
    dend_47 { pt3dadd( -202.829, 17.7658, -110.697, 0.34 ) }
    dend_47 { pt3dadd( -204.115, 16.9066, -113.27, 0.34 ) }
    dend_47 { pt3dadd( -204.262, 16.806, -113.579, 0.34 ) }
    dend_47 { pt3dadd( -208.474, 14.0099, -123.026, 0.17 ) }
    dend_47 { pt3dadd( -208.629, 13.9078, -123.372, 0.17 ) }
    dend_47 { pt3dadd( -208.845, 13.7661, -123.861, 0.17 ) }
    dend_47 { pt3dadd( -208.943, 13.7146, -124.08, 0.17 ) }
    dend_47 { pt3dadd( -211.065, 12.8212, -128.281, 0.86 ) }
    dend_47 { pt3dadd( -213.176, 12.0576, -131.512, 0.17 ) }
    dend_47 { pt3dadd( -214.501, 11.7964, -132.403, 0.17 ) }
    dend_47 { pt3dadd( -214.616, 11.786, -132.542, 1.37 ) }
    dend_47 { pt3dadd( -216.819, 11.682, -136.244, 0.17 ) }
    dend_47 { pt3dadd( -217.082, 11.6713, -136.668, 1.03 ) }
    dend_47 { pt3dadd( -217.372, 11.6619, -137.145, 0.17 ) }
    dend_47 { pt3dadd( -218.549, 11.6189, -139.173, 0.17 ) }
    dend_47 { pt3dadd( -224.998, 11.0924, -149.332, 1.03 ) }
    dend_47 { pt3dadd( -227.819, 10.7494, -153.534, 0.17 ) }
    dend_47 { pt3dadd( -230.749, 10.3135, -157.698, 0.17 ) }
    dend_47 { pt3dadd( -230.981, 10.2656, -158.012, 1.03 ) }
    dend_47 { pt3dadd( -234.717, 9.24827, -162.76, 0.17 ) }
    dend_47 { pt3dadd( -239.189, 7.64337, -167.796, 0.17 ) }
    dend_47 { pt3dadd( -241.189, 6.63376, -169.214, 1.2 ) }
    dend_47 { pt3dadd( -241.741, 6.26772, -169.55, 0.17 ) }
    dend_47 { pt3dadd( -243.983, 4.24532, -171.187, 0.17 ) }
    dend_47 { pt3dadd( -244.656, 3.42567, -171.672, 0.68 ) }
    dend_47 { pt3dadd( -244.993, 2.77779, -171.909, 0.17 ) }
    dend_47 { pt3dadd( -245.508, 0.574064, -172.722, 0.17 ) }
    dend_47 { pt3dadd( -246.068, -2.69596, -174.167, 1.37 ) }
    dend_47 { pt3dadd( -246.275, -4.18745, -174.988, 0.17 ) }
    dend_47 { pt3dadd( -246.439, -7.03358, -176.714, 0.17 ) }
    dend_47 { pt3dadd( -246.288, -7.86341, -177.104, 1.03 ) }
    dend_47 { pt3dadd( -246.181, -8.21593, -177.245, 0.17 ) }
    dend_47 { pt3dadd( -244.638, -12.4542, -178.796, 0.17 ) }
    dend_47 { pt3dadd( -244.497, -12.7976, -178.896, 0.17 ) }
    dend_47 { pt3dadd( -242.639, -16.9824, -179.949, 0.17 ) }
    dend_47 { pt3dadd( -238.674, -25.0292, -181.878, 0.17 ) }
    dend_47 { pt3dadd( -238.444, -25.4837, -181.969, 1.03 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 93/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 21.9503, 60.3742, 0.891179, 0.17 ) }
    dend_39 { pt3dadd( 22.1252, 60.9254, 0.984463, 0.17 ) }
    dend_39 { pt3dadd( 22.2586, 61.3908, 1.06778, 0.17 ) }
    dend_39 { pt3dadd( 22.6051, 62.6582, 1.3001, 0.17 ) }
    dend_39 { pt3dadd( 22.8114, 63.2335, 1.50195, 1.71 ) }
    dend_39 { pt3dadd( 23.313, 64.5128, 2.03957, 0.17 ) }
    dend_39 { pt3dadd( 24.1003, 66.5326, 2.94767, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_39 { pt3dadd( 24.1704, 66.7118, 3.03576, 1.54 ) }
    dend_39 { pt3dadd( 24.5397, 67.7229, 3.54004, 0.17 ) }
    dend_39 { pt3dadd( 25.5975, 70.6084, 4.99873, 0.17 ) }
    dend_39 { pt3dadd( 26.2838, 72.4408, 5.91819, 1.37 ) }
    dend_39 { pt3dadd( 26.4557, 73.0016, 6.17579, 0.17 ) }
    dend_39 { pt3dadd( 26.5136, 73.1914, 6.26169, 0.17 ) }
    dend_39 { pt3dadd( 27.3332, 76.1855, 7.52906, 0.17 ) }
    dend_39 { pt3dadd( 27.4882, 76.8958, 7.78627, 1.2 ) }
    dend_39 { pt3dadd( 27.5817, 77.6639, 7.96436, 0.17 ) }
    dend_39 { pt3dadd( 28.02, 82.0205, 9.00379, 0.17 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 10/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 21.9503, 60.3742, 0.891179, 0.86 ) }
    dend_38 { pt3dadd( 25.7557, 59.2763, 5.09569, 0.86 ) }
    dend_38 { pt3dadd( 27.2034, 58.8586, 6.69523, 0.86 ) }
    dend_38 { pt3dadd( 28.9149, 58.3648, 8.58627, 0.34 ) }
    dend_38 { pt3dadd( 30.3451, 57.9522, 10.1665, 0.34 ) }
    dend_38 { pt3dadd( 32.8722, 57.2231, 12.9586, 0.34 ) }
    dend_38 { pt3dadd( 41.0184, 54.8729, 21.9591, 0.17 ) }
    // Section: dend_27, id: dend_27, parent: dend_21 (entry count 17/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 36.9129, 13.5885, 10.7063, 0.17 ) }
    dend_27 { pt3dadd( 33.2791, 18.0482, 12.37, 0.17 ) }
    dend_27 { pt3dadd( 27.6159, 25.0698, 14.7437, 0.17 ) }
    dend_27 { pt3dadd( 21.3323, 31.7829, 16.4376, 0.17 ) }
    dend_27 { pt3dadd( 14.6077, 38.2517, 17.3084, 0.17 ) }
    dend_27 { pt3dadd( 8.08075, 44.9088, 18.1995, 0.17 ) }
    dend_27 { pt3dadd( 2.09934, 52.1163, 17.9596, 0.17 ) }
    dend_27 { pt3dadd( -5.09065, 58.1254, 18.5498, 0.17 ) }
    dend_27 { pt3dadd( -11.2363, 64.987, 20.1365, 0.17 ) }
    dend_27 { pt3dadd( -17.3623, 72.0746, 19.7945, 0.17 ) }
    dend_27 { pt3dadd( -24.9096, 77.5051, 18.1926, 0.17 ) }
    dend_27 { pt3dadd( -31.8145, 83.7949, 17.0615, 0.17 ) }
    dend_27 { pt3dadd( -38.6396, 90.208, 16.2507, 0.17 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 30/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 36.9129, 13.5885, 10.7063, 0.68 ) }
    dend_22 { pt3dadd( 37.1913, 14.0758, 9.09349, 0.68 ) }
    dend_22 { pt3dadd( 37.8855, 14.8479, 6.56753, 0.17 ) }
    dend_22 { pt3dadd( 41.2076, 17.6521, -2.62012, 0.17 ) }
    dend_22 { pt3dadd( 41.2349, 17.6668, -2.67591, 0.17 ) }
    dend_22 { pt3dadd( 42.2561, 18.0523, -4.28383, 0.17 ) }
    dend_22 { pt3dadd( 44.3335, 18.6935, -7.15196, 0.17 ) }
    dend_22 { pt3dadd( 44.9111, 18.8145, -7.7784, 1.37 ) }
    dend_22 { pt3dadd( 45.7135, 18.8863, -8.33234, 0.17 ) }
    dend_22 { pt3dadd( 48.8555, 18.9764, -9.56479, 0.17 ) }
    dend_22 { pt3dadd( 51.0776, 19.055, -10.4257, 0.17 ) }
    dend_22 { pt3dadd( 51.1929, 19.0585, -10.4707, 0.17 ) }
    dend_22 { pt3dadd( 53.5286, 19.1507, -11.3711, 0.17 ) }
    dend_22 { pt3dadd( 55.7637, 19.247, -12.2289, 0.17 ) }
    dend_22 { pt3dadd( 58.0535, 19.5389, -13.0141, 0.17 ) }
    dend_22 { pt3dadd( 58.2719, 19.6193, -13.1001, 0.17 ) }
    dend_22 { pt3dadd( 59.159, 20.1537, -13.5309, 0.17 ) }
    dend_22 { pt3dadd( 60.8409, 21.6122, -14.4932, 0.17 ) }
    dend_22 { pt3dadd( 60.9109, 21.7039, -14.5328, 0.17 ) }
    dend_22 { pt3dadd( 62.4891, 24.6637, -15.4749, 0.17 ) }
    dend_22 { pt3dadd( 64.3867, 29.2283, -16.9415, 0.17 ) }
    dend_22 { pt3dadd( 64.5498, 29.6616, -17.0789, 1.2 ) }
    dend_22 { pt3dadd( 64.6668, 30.0086, -17.1848, 0.17 ) }
    dend_22 { pt3dadd( 66.1474, 34.8272, -18.5571, 0.17 ) }
    dend_22 { pt3dadd( 67.7815, 40.0391, -20.0281, 0.17 ) }
    dend_22 { pt3dadd( 69.1222, 44.3962, -21.5577, 0.17 ) }
    dend_22 { pt3dadd( 69.1948, 44.6161, -21.6354, 1.2 ) }
    dend_22 { pt3dadd( 69.2952, 44.961, -21.7846, 0.17 ) }
    dend_22 { pt3dadd( 69.7009, 46.4862, -22.5171, 0.17 ) }
    dend_22 { pt3dadd( 69.7849, 46.9102, -22.7658, 0.86 ) }
    dend_22 { pt3dadd( 70.9174, 51.9913, -26.2667, 0.17 ) }
    dend_22 { pt3dadd( 71.5986, 54.7226, -28.2864, 0.17 ) }
    dend_22 { pt3dadd( 72.2625, 57.4099, -30.3701, 1.54 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 63/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -1.21608, -42.7751, -11.6553, 1.03 ) }
    dend_7 { pt3dadd( -2.41529, -45.1845, -11.576, 1.03 ) }
    dend_7 { pt3dadd( -3.61819, -48.1361, -11.4979, 1.54 ) }
    dend_7 { pt3dadd( -4.05487, -49.5539, -11.4691, 0.68 ) }
    dend_7 { pt3dadd( -5.06565, -54.6881, -11.8473, 0.68 ) }
    dend_7 { pt3dadd( -5.40617, -57.5451, -11.501, 0.68 ) }
    dend_7 { pt3dadd( -5.49259, -59.6323, -10.8524, 0.17 ) }
    dend_7 { pt3dadd( -5.32945, -61.4955, -9.84956, 0.86 ) }
    dend_7 { pt3dadd( -4.94219, -63.25, -8.51415, 0.86 ) }
    dend_7 { pt3dadd( -3.90814, -66.6254, -4.81962, 0.51 ) }
    dend_7 { pt3dadd( -0.440361, -75.0989, 5.75786, 0.17 ) }
    dend_7 { pt3dadd( 0.00875273, -76.2434, 7.20218, 1.03 ) }
    dend_7 { pt3dadd( 0.487133, -77.7591, 9.02303, 1.03 ) }
    dend_7 { pt3dadd( 0.624206, -78.3269, 9.64316, 1.03 ) }
    dend_7 { pt3dadd( 1.24124, -82.4162, 13.4455, 0.51 ) }
    dend_7 { pt3dadd( 1.52483, -86.2633, 16.3382, 0.51 ) }
    dend_7 { pt3dadd( 1.58805, -87.9271, 16.8746, 1.2 ) }
    dend_7 { pt3dadd( 1.73968, -90.226, 17.4568, 1.88 ) }
    dend_7 { pt3dadd( 1.93711, -92.1471, 17.8184, 0.51 ) }
    dend_7 { pt3dadd( 2.24828, -95.1496, 18.1225, 0.51 ) }
    dend_7 { pt3dadd( 2.35228, -96.5087, 18.0153, 0.51 ) }
    dend_7 { pt3dadd( 2.37162, -98.6715, 17.7175, 0.51 ) }
    dend_7 { pt3dadd( 2.25062, -102.402, 17.0624, 0.68 ) }
    dend_7 { pt3dadd( 2.17089, -103.793, 16.7802, 0.68 ) }
    dend_7 { pt3dadd( 2.08512, -105.844, 16.3451, 0.34 ) }
    dend_7 { pt3dadd( 2.03948, -110.427, 15.38, 1.54 ) }
    dend_7 { pt3dadd( 1.96331, -112.728, 14.9279, 0.68 ) }
    dend_7 { pt3dadd( 1.69387, -115.029, 14.5301, 0.17 ) }
    dend_7 { pt3dadd( 1.34281, -116.751, 14.2861, 0.68 ) }
    dend_7 { pt3dadd( 0.598448, -119.822, 13.9716, 0.51 ) }
    dend_7 { pt3dadd( 0.0157077, -121.891, 13.8603, 0.51 ) }
    dend_7 { pt3dadd( -0.5372, -123.893, 13.8737, 0.51 ) }
    dend_7 { pt3dadd( -1.49397, -127.211, 13.8976, 0.51 ) }
    dend_7 { pt3dadd( -2.16831, -129.328, 13.9157, 1.2 ) }
    dend_7 { pt3dadd( -2.93469, -131.407, 13.938, 0.86 ) }
    dend_7 { pt3dadd( -3.92959, -133.878, 13.9683, 0.17 ) }
    dend_7 { pt3dadd( -4.48578, -135.452, 13.9842, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_7 { pt3dadd( -5.14752, -138.073, 14.1606, 0.17 ) }
    dend_7 { pt3dadd( -5.46529, -139.961, 14.3781, 1.54 ) }
    dend_7 { pt3dadd( -5.67767, -141.501, 14.6061, 1.03 ) }
    dend_7 { pt3dadd( -5.88919, -142.892, 14.8437, 0.34 ) }
    dend_7 { pt3dadd( -6.45773, -146.202, 15.4276, 0.34 ) }
    dend_7 { pt3dadd( -7.05201, -149.571, 16.1675, 1.03 ) }
    dend_7 { pt3dadd( -7.23293, -150.831, 16.4853, 0.68 ) }
    dend_7 { pt3dadd( -7.59107, -153.477, 17.1949, 0.17 ) }
    dend_7 { pt3dadd( -7.8899, -155.494, 17.7275, 0.17 ) }
    dend_7 { pt3dadd( -8.4224, -158.621, 18.5314, 0.17 ) }
    dend_7 { pt3dadd( -9.05672, -161.751, 19.2343, 1.54 ) }
    dend_7 { pt3dadd( -9.44888, -163.852, 19.5798, 0.68 ) }
    dend_7 { pt3dadd( -9.67931, -165.352, 19.77, 0.51 ) }
    dend_7 { pt3dadd( -10.0342, -168.37, 20.0456, 0.51 ) }
    dend_7 { pt3dadd( -10.0799, -168.752, 20.0605, 0.51 ) }
    dend_7 { pt3dadd( -10.637, -172.116, 19.971, 0.51 ) }
    dend_7 { pt3dadd( -11.1594, -174.338, 19.7506, 0.51 ) }
    dend_7 { pt3dadd( -11.6211, -176.116, 19.5534, 0.51 ) }
    dend_7 { pt3dadd( -11.6762, -176.306, 19.5329, 0.51 ) }
    dend_7 { pt3dadd( -12.4919, -178.771, 18.972, 1.37 ) }
    dend_7 { pt3dadd( -12.5541, -178.944, 18.9297, 1.37 ) }
    dend_7 { pt3dadd( -13.9259, -182.036, 18.0615, 0.86 ) }
    dend_7 { pt3dadd( -14.13, -182.409, 17.9556, 0.17 ) }
    dend_7 { pt3dadd( -15.4899, -184.765, 17.35, 0.68 ) }
    dend_7 { pt3dadd( -17.6331, -188.452, 16.2404, 0.68 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 25/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -1.21608, -42.7751, -11.6553, 0.86 ) }
    dend_4 { pt3dadd( 0.461018, -46.1314, -21.3784, 0.86 ) }
    dend_4 { pt3dadd( 0.50245, -46.2143, -21.6186, 0.86 ) }
    dend_4 { pt3dadd( 0.998511, -47.207, -24.4945, 0.86 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 29/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -157.765, -94.3718, -21.0923, 0.17 ) }
    dend_62 { pt3dadd( -162.669, -95.1425, -22.7515, 0.17 ) }
    dend_62 { pt3dadd( -165.353, -95.3889, -22.9792, 0.17 ) }
    dend_62 { pt3dadd( -166.496, -95.4242, -22.9582, 1.03 ) }
    dend_62 { pt3dadd( -167.434, -95.4531, -22.941, 0.17 ) }
    dend_62 { pt3dadd( -170.631, -95.5518, -22.8824, 0.17 ) }
    dend_62 { pt3dadd( -172.167, -95.5992, -22.8543, 1.03 ) }
    dend_62 { pt3dadd( -175.281, -95.5356, -22.1907, 0.17 ) }
    dend_62 { pt3dadd( -176.975, -95.3824, -21.7217, 0.17 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 38/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -157.765, -94.3718, -21.0923, 0.17 ) }
    dend_61 { pt3dadd( -159.93, -96.0719, -20.8683, 0.17 ) }
    dend_61 { pt3dadd( -162.142, -97.6998, -20.3801, 0.17 ) }
    dend_61 { pt3dadd( -163.69, -98.7903, -19.9668, 0.86 ) }
    dend_61 { pt3dadd( -164.219, -99.1332, -19.8189, 0.17 ) }
    dend_61 { pt3dadd( -165.285, -99.7958, -19.5136, 0.17 ) }
    dend_61 { pt3dadd( -168.454, -101.713, -18.6025, 0.17 ) }
    dend_61 { pt3dadd( -170.692, -102.908, -17.7769, 1.54 ) }
    dend_61 { pt3dadd( -170.88, -103.028, -17.6514, 0.17 ) }
    dend_61 { pt3dadd( -172.054, -104.097, -16.2271, 0.17 ) }
    dend_61 { pt3dadd( -172.134, -104.188, -16.0931, 1.2 ) }
    dend_61 { pt3dadd( -172.403, -104.592, -15.5484, 0.17 ) }
    dend_61 { pt3dadd( -173.519, -106.747, -12.9664, 0.17 ) }
    dend_61 { pt3dadd( -174.895, -109.516, -10.0374, 0.17 ) }
    dend_61 { pt3dadd( -175.946, -111.866, -7.96621, 1.54 ) }
    dend_61 { pt3dadd( -176.149, -112.418, -7.59376, 0.17 ) }
    dend_61 { pt3dadd( -177.237, -115.616, -6.03895, 0.17 ) }
    dend_61 { pt3dadd( -177.803, -117.583, -5.16699, 1.2 ) }
    dend_61 { pt3dadd( -178.132, -118.827, -4.70231, 0.86 ) }
    dend_61 { pt3dadd( -178.956, -121.689, -3.75707, 0.17 ) }
    dend_61 { pt3dadd( -179.97, -125.179, -2.62757, 0.17 ) }
    dend_61 { pt3dadd( -180.692, -127.693, -1.73431, 0.17 ) }
    dend_61 { pt3dadd( -182.401, -133.593, 0.621356, 0.17 ) }
    dend_61 { pt3dadd( -182.472, -133.817, 0.71291, 0.17 ) }
    dend_61 { pt3dadd( -183.71, -137.201, 2.27431, 0.17 ) }
    dend_61 { pt3dadd( -184.282, -138.548, 2.95683, 0.86 ) }
    dend_61 { pt3dadd( -184.653, -139.388, 3.33713, 0.86 ) }
    dend_61 { pt3dadd( -184.855, -139.875, 3.49267, 0.17 ) }
    dend_61 { pt3dadd( -185.645, -141.919, 3.83876, 0.17 ) }
    dend_61 { pt3dadd( -186.434, -144.482, 4.23277, 1.37 ) }
    dend_61 { pt3dadd( -186.731, -145.924, 4.42974, 0.17 ) }
    dend_61 { pt3dadd( -187.25, -149.489, 4.87481, 0.17 ) }
    dend_61 { pt3dadd( -187.524, -152.513, 5.19371, 0.17 ) }
    dend_61 { pt3dadd( -187.532, -152.687, 5.20604, 0.17 ) }
    dend_61 { pt3dadd( -187.546, -154.624, 5.21835, 0.17 ) }
    dend_61 { pt3dadd( -187.55, -155.631, 5.14024, 1.37 ) }
    dend_61 { pt3dadd( -187.592, -156.858, 4.85434, 0.34 ) }
    dend_61 { pt3dadd( -187.642, -157.665, 4.49866, 0.17 ) }
    dend_61 { pt3dadd( -187.865, -159.929, 3.1176, 0.17 ) }
    dend_61 { pt3dadd( -188.053, -161.028, 2.34429, 1.03 ) }
    dend_61 { pt3dadd( -188.328, -161.864, 1.65016, 1.03 ) }
    dend_61 { pt3dadd( -189.895, -164.975, -1.17476, 0.17 ) }
    dend_61 { pt3dadd( -190.704, -165.936, -2.42882, 0.17 ) }
    dend_61 { pt3dadd( -191.039, -166.207, -2.91239, 1.03 ) }
    dend_61 { pt3dadd( -191.27, -166.318, -3.15273, 0.17 ) }
    dend_61 { pt3dadd( -192.854, -166.729, -4.34505, 0.17 ) }
    dend_61 { pt3dadd( -193.724, -166.884, -4.89742, 1.71 ) }
    dend_61 { pt3dadd( -197.527, -167.286, -6.55161, 0.68 ) }
    dend_61 { pt3dadd( -198.477, -167.341, -6.96372, 0.17 ) }
    dend_61 { pt3dadd( -202.36, -167.638, -8.72842, 0.17 ) }
    dend_61 { pt3dadd( -205.456, -167.926, -10.1876, 0.17 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 89/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -53.1849, -22.8899, -24.2124, 0.17 ) }
    dend_59 { pt3dadd( -57.969, -23.2444, -18.9047, 0.17 ) }
    dend_59 { pt3dadd( -61.3122, -23.3594, -14.3449, 0.17 ) }
    dend_59 { pt3dadd( -66.3398, -23.3527, -6.28958, 0.17 ) }
    dend_59 { pt3dadd( -69.5853, -23.3484, -1.08947, 0.17 ) }
    dend_59 { pt3dadd( -72.4936, -23.3445, 3.57018, 0.17 ) }
    dend_59 { pt3dadd( -79.7019, -23.3348, 15.1196, 0.17 ) }
    dend_59 { pt3dadd( -81.7639, -23.0332, 19.5312, 0.17 ) }
    dend_59 { pt3dadd( -83.2229, -22.5516, 23.758, 0.17 ) }
    dend_59 { pt3dadd( -86.8885, -22.3145, 33.331, 0.17 ) }
    dend_59 { pt3dadd( -89.0037, -23.0167, 43.3179, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 0/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -53.1849, -22.8899, -24.2124, 0.51 ) }
    dend_58 { pt3dadd( -54.2053, -21.4789, -21.5809, 0.51 ) }
    dend_58 { pt3dadd( -57.6401, -17.5147, -14.194, 0.51 ) }
    dend_58 { pt3dadd( -58.6909, -16.5077, -12.2854, 0.51 ) }
    dend_58 { pt3dadd( -59.3847, -15.9343, -11.1775, 0.51 ) }
    dend_58 { pt3dadd( -62.0355, -13.9933, -7.34183, 0.51 ) }
    dend_58 { pt3dadd( -62.8502, -13.491, -6.27844, 0.34 ) }
    dend_58 { pt3dadd( -63.9361, -12.9852, -4.96411, 0.34 ) }
    dend_58 { pt3dadd( -65.0261, -12.8961, -3.97981, 0.34 ) }
    dend_58 { pt3dadd( -65.5678, -12.9003, -3.48253, 0.86 ) }
    dend_58 { pt3dadd( -65.9117, -12.9406, -3.09675, 0.17 ) }
    dend_58 { pt3dadd( -67.062, -13.2072, -1.74962, 0.68 ) }
    dend_58 { pt3dadd( -69.8679, -13.9228, 2.17541, 0.68 ) }
    dend_58 { pt3dadd( -70.4242, -14.0915, 3.09906, 0.17 ) }
    dend_58 { pt3dadd( -70.9212, -14.2478, 4.05283, 0.17 ) }
    dend_58 { pt3dadd( -72.6921, -14.819, 7.79133, 0.51 ) }
    dend_58 { pt3dadd( -76.4612, -12.4742, 12.9743, 0.51 ) }
    dend_58 { pt3dadd( -81.609, -10.894, 17.1539, 0.51 ) }
    dend_58 { pt3dadd( -85.5769, -8.06656, 21.9479, 0.51 ) }
    dend_58 { pt3dadd( -89.2594, -5.24092, 26.964, 0.51 ) }
    dend_58 { pt3dadd( -92.8274, -2.00848, 31.8253, 0.51 ) }
    dend_58 { pt3dadd( -95.9417, 2.34378, 36.1132, 0.51 ) }
    dend_58 { pt3dadd( -99.2006, 7.15097, 39.7659, 0.51 ) }
    dend_58 { pt3dadd( -102.349, 11.3222, 44.203, 0.51 ) }
    dend_58 { pt3dadd( -105.024, 14.9715, 49.343, 0.51 ) }
    dend_58 { pt3dadd( -106.761, 18.3443, 55.0397, 0.51 ) }
    dend_58 { pt3dadd( -108.093, 22.2136, 60.5362, 0.51 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 27/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -236.14, -4.7354, -55.0253, 0.17 ) }
    dend_55 { pt3dadd( -236.465, -6.55889, -56.0369, 0.17 ) }
    dend_55 { pt3dadd( -236.764, -8.24368, -56.8788, 0.17 ) }
    dend_55 { pt3dadd( -236.873, -8.82139, -57.1488, 0.68 ) }
    dend_55 { pt3dadd( -236.896, -8.92905, -57.1966, 0.68 ) }
    dend_55 { pt3dadd( -237.021, -9.56082, -57.4662, 0.68 ) }
    dend_55 { pt3dadd( -237.094, -9.86671, -57.5895, 0.17 ) }
    dend_55 { pt3dadd( -237.599, -11.6568, -58.2413, 0.17 ) }
    dend_55 { pt3dadd( -237.764, -12.1151, -58.3807, 1.37 ) }
    dend_55 { pt3dadd( -237.976, -12.6453, -58.5422, 1.37 ) }
    dend_55 { pt3dadd( -238.262, -13.1966, -58.711, 0.17 ) }
    dend_55 { pt3dadd( -239.182, -14.8323, -58.949, 0.17 ) }
    dend_55 { pt3dadd( -239.587, -15.4853, -58.9646, 0.17 ) }
    dend_55 { pt3dadd( -240.184, -16.3252, -58.8836, 1.03 ) }
    dend_55 { pt3dadd( -240.617, -16.9457, -58.8006, 0.17 ) }
    dend_55 { pt3dadd( -241.731, -18.4941, -58.5313, 0.17 ) }
    dend_55 { pt3dadd( -243.372, -20.9706, -58.1181, 1.37 ) }
    dend_55 { pt3dadd( -243.696, -21.5769, -57.9868, 0.17 ) }
    dend_55 { pt3dadd( -244.082, -22.3844, -57.8045, 0.17 ) }
    dend_55 { pt3dadd( -244.777, -23.9851, -57.5025, 0.68 ) }
    dend_55 { pt3dadd( -244.962, -24.4558, -57.4461, 0.17 ) }
    dend_55 { pt3dadd( -245.71, -26.5029, -57.2992, 0.17 ) }
    dend_55 { pt3dadd( -246.619, -28.5874, -57.3096, 0.68 ) }
    dend_55 { pt3dadd( -246.896, -29.1297, -57.3024, 0.17 ) }
    dend_55 { pt3dadd( -247.804, -30.6707, -57.2623, 0.17 ) }
    dend_55 { pt3dadd( -248.629, -31.6427, -57.233, 1.37 ) }
    dend_55 { pt3dadd( -249.261, -32.1899, -57.2883, 0.17 ) }
    dend_55 { pt3dadd( -250.41, -32.8508, -57.4935, 0.17 ) }
    dend_55 { pt3dadd( -251.602, -33.3617, -57.8171, 0.17 ) }
    dend_55 { pt3dadd( -251.908, -33.4812, -57.9394, 0.17 ) }
    dend_55 { pt3dadd( -254.274, -34.3547, -59.0836, 0.17 ) }
    dend_55 { pt3dadd( -256.028, -35.0842, -60.0702, 1.03 ) }
    dend_55 { pt3dadd( -256.712, -35.409, -60.5389, 0.51 ) }
    dend_55 { pt3dadd( -258.201, -36.2302, -61.7264, 0.17 ) }
    dend_55 { pt3dadd( -260.064, -37.5017, -63.4545, 0.17 ) }
    dend_55 { pt3dadd( -261.49, -38.7076, -64.9692, 0.17 ) }
    dend_55 { pt3dadd( -262.101, -39.4345, -65.7874, 1.71 ) }
    dend_55 { pt3dadd( -262.656, -40.385, -66.6804, 0.17 ) }
    dend_55 { pt3dadd( -262.734, -40.6381, -66.9206, 0.17 ) }
    dend_55 { pt3dadd( -262.642, -41.5148, -67.7275, 0.17 ) }
    dend_55 { pt3dadd( -262.588, -41.6385, -67.8248, 1.2 ) }
    dend_55 { pt3dadd( -262.413, -41.856, -68.0107, 0.17 ) }
    dend_55 { pt3dadd( -261.397, -42.8617, -68.8734, 0.17 ) }
    dend_55 { pt3dadd( -260.541, -43.6263, -69.4225, 1.03 ) }
    dend_55 { pt3dadd( -259.886, -44.141, -69.848, 0.17 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 72/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -236.14, -4.7354, -55.0253, 0.17 ) }
    dend_54 { pt3dadd( -237.548, -4.71607, -55.4051, 0.17 ) }
    dend_54 { pt3dadd( -239.206, -4.68726, -55.9145, 0.17 ) }
    dend_54 { pt3dadd( -240.277, -4.6822, -56.2305, 0.86 ) }
    dend_54 { pt3dadd( -241.582, -4.70717, -56.5952, 0.17 ) }
    dend_54 { pt3dadd( -244.094, -4.80274, -57.2738, 0.17 ) }
    dend_54 { pt3dadd( -245.189, -4.84444, -57.5698, 1.03 ) }
    dend_54 { pt3dadd( -246.124, -4.88156, -57.7935, 0.17 ) }
    dend_54 { pt3dadd( -248.568, -5.00849, -58.4092, 0.17 ) }
    dend_54 { pt3dadd( -249.634, -5.09637, -58.6694, 0.17 ) }
    dend_54 { pt3dadd( -249.967, -5.13095, -58.7344, 0.68 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 83/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 28.02, 82.0205, 9.00379, 0.17 ) }
    dend_41 { pt3dadd( 28.9083, 84.227, 10.0645, 0.17 ) }
    dend_41 { pt3dadd( 30.0256, 86.9932, 11.3674, 0.17 ) }
    dend_41 { pt3dadd( 30.8136, 88.96, 12.2641, 0.17 ) }
    dend_41 { pt3dadd( 31.8247, 92.0191, 13.7141, 1.2 ) }
    dend_41 { pt3dadd( 32.2796, 93.6397, 14.499, 0.17 ) }
    dend_41 { pt3dadd( 32.7074, 95.4778, 15.3918, 0.17 ) }
    dend_41 { pt3dadd( 32.7074, 95.4778, 15.3918, 1.03 ) }
    dend_41 { pt3dadd( 32.8026, 96.6544, 15.9878, 0.17 ) }
    dend_41 { pt3dadd( 32.7941, 99.8757, 17.4565, 0.17 ) }
    dend_41 { pt3dadd( 32.7298, 101.026, 17.9034, 0.17 ) }
    dend_41 { pt3dadd( 32.5175, 103.949, 18.9717, 0.17 ) }
    dend_41 { pt3dadd( 32.3602, 107.188, 20.0123, 0.17 ) }
    dend_41 { pt3dadd( 32.3544, 107.788, 20.1798, 0.17 ) }
    dend_41 { pt3dadd( 32.3694, 110.366, 20.6568, 1.37 ) }
    dend_41 { pt3dadd( 32.3849, 111.145, 20.754, 0.17 ) }
    dend_41 { pt3dadd( 32.4339, 112.868, 20.9212, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_41 { pt3dadd( 32.5562, 115.66, 21.1219, 0.17 ) }
    dend_41 { pt3dadd( 32.7593, 118.661, 21.2985, 0.17 ) }
    dend_41 { pt3dadd( 33.2059, 124.655, 21.7183, 0.17 ) }
    dend_41 { pt3dadd( 33.3792, 126.706, 21.9135, 0.17 ) }
    dend_41 { pt3dadd( 33.4696, 128.126, 22.0479, 0.17 ) }
    dend_41 { pt3dadd( 33.4848, 129.237, 22.1689, 2.05 ) }
    dend_41 { pt3dadd( 33.4456, 129.923, 22.2678, 0.17 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 7/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 28.02, 82.0205, 9.00379, 0.17 ) }
    dend_40 { pt3dadd( 25.9713, 80.4748, 10.0318, 0.17 ) }
    dend_40 { pt3dadd( 24.1391, 79.0925, 10.9512, 0.17 ) }
    dend_40 { pt3dadd( 20.94, 76.6788, 12.5565, 0.17 ) }
    dend_40 { pt3dadd( 17.3581, 73.9764, 14.3538, 0.17 ) }
    dend_40 { pt3dadd( 12.6764, 70.4441, 16.7031, 0.17 ) }
    dend_40 { pt3dadd( 11.4606, 69.5269, 17.3131, 0.17 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 14/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 72.2625, 57.4099, -30.3701, 0.17 ) }
    dend_26 { pt3dadd( 76.5336, 61.3644, -28.7785, 0.17 ) }
    dend_26 { pt3dadd( 79.8657, 64.4497, -27.5368, 0.17 ) }
    dend_26 { pt3dadd( 83.1919, 67.5293, -26.2973, 0.17 ) }
    dend_26 { pt3dadd( 85.7307, 69.88, -25.3512, 0.17 ) }
    dend_26 { pt3dadd( 86.1849, 70.3005, -25.1819, 0.17 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 20/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 72.2625, 57.4099, -30.3701, 0.17 ) }
    dend_23 { pt3dadd( 73.1774, 62.8361, -29.3543, 0.17 ) }
    dend_23 { pt3dadd( 73.4494, 64.4489, -29.0524, 1.37 ) }
    dend_23 { pt3dadd( 73.5349, 64.9558, -28.9575, 0.17 ) }
    dend_23 { pt3dadd( 73.9526, 67.4336, -28.4937, 0.17 ) }
    // Section: dend_15, id: dend_15, parent: dend_7 (entry count 25/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -17.6331, -188.452, 16.2404, 1.2 ) }
    dend_15 { pt3dadd( -18.4682, -190.437, 16.6973, 1.2 ) }
    dend_15 { pt3dadd( -20.3399, -193.321, 19.4924, 0.17 ) }
    dend_15 { pt3dadd( -21.238, -194.378, 20.8757, 0.17 ) }
    dend_15 { pt3dadd( -23.3076, -196.442, 23.776, 0.17 ) }
    dend_15 { pt3dadd( -25.6282, -198.33, 26.9272, 0.17 ) }
    dend_15 { pt3dadd( -25.7129, -198.395, 27.0407, 0.17 ) }
    dend_15 { pt3dadd( -31.8734, -202.714, 35.5182, 1.54 ) }
    dend_15 { pt3dadd( -32.8517, -203.356, 36.9438, 0.17 ) }
    dend_15 { pt3dadd( -33.9848, -203.945, 38.6498, 0.17 ) }
    dend_15 { pt3dadd( -38.3626, -205.525, 45.3903, 0.17 ) }
    dend_15 { pt3dadd( -38.629, -205.597, 45.8236, 1.37 ) }
    dend_15 { pt3dadd( -38.9053, -205.686, 46.2492, 0.17 ) }
    dend_15 { pt3dadd( -41.5395, -207.047, 49.1519, 0.17 ) }
    dend_15 { pt3dadd( -46.6274, -210.333, 56.4064, 0.17 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -17.6331, -188.452, 16.2404, 0.86 ) }
    dend_8 { pt3dadd( -16.7748, -192.275, 17.6475, 0.86 ) }
    dend_8 { pt3dadd( -16.1118, -196.509, 19.0553, 0.86 ) }
    dend_8 { pt3dadd( -16.0438, -197.241, 19.278, 0.86 ) }
    dend_8 { pt3dadd( -15.828, -201.137, 20.3974, 0.68 ) }
    dend_8 { pt3dadd( -15.7591, -203.657, 21.0359, 0.34 ) }
    dend_8 { pt3dadd( -15.6093, -207.923, 21.7184, 0.34 ) }
    dend_8 { pt3dadd( -15.638, -209.004, 21.8002, 1.2 ) }
    dend_8 { pt3dadd( -15.7007, -210.668, 21.8136, 1.2 ) }
    dend_8 { pt3dadd( -15.723, -210.964, 21.7981, 0.34 ) }
    dend_8 { pt3dadd( -16.1205, -214.616, 21.3894, 0.34 ) }
    dend_8 { pt3dadd( -16.6748, -219.369, 20.8098, 0.34 ) }
    dend_8 { pt3dadd( -16.9133, -221.788, 20.5124, 1.88 ) }
    dend_8 { pt3dadd( -17.0895, -223.863, 20.2762, 0.68 ) }
    dend_8 { pt3dadd( -17.309, -227.936, 19.8629, 0.51 ) }
    dend_8 { pt3dadd( -17.5487, -232.208, 19.5062, 0.51 ) }
    dend_8 { pt3dadd( -17.7458, -234.72, 19.3558, 1.03 ) }
    dend_8 { pt3dadd( -18.0546, -237.262, 19.2888, 1.71 ) }
    dend_8 { pt3dadd( -18.3944, -239.808, 19.1981, 0.68 ) }
    dend_8 { pt3dadd( -18.753, -242.415, 19.1195, 0.17 ) }
    dend_8 { pt3dadd( -19.1916, -245.588, 19.0446, 0.17 ) }
    dend_8 { pt3dadd( -19.6108, -247.819, 19.0136, 1.03 ) }
    dend_8 { pt3dadd( -20.5281, -251.641, 19.011, 1.03 ) }
    dend_8 { pt3dadd( -22.1492, -257.79, 19.0074, 1.03 ) }
    dend_8 { pt3dadd( -22.2597, -258.2, 19.0072, 1.03 ) }
    dend_8 { pt3dadd( -22.3709, -258.64, 19.0069, 1.03 ) }
    dend_8 { pt3dadd( -22.6545, -259.888, 19.006, 0.17 ) }
    dend_8 { pt3dadd( -22.9513, -261.356, 19.0048, 0.17 ) }
    dend_8 { pt3dadd( -23.4117, -263.792, 19.0027, 0.34 ) }
    dend_8 { pt3dadd( -23.6239, -264.681, 19.0021, 0.34 ) }
    dend_8 { pt3dadd( -24.4223, -267.737, 19.0003, 0.34 ) }
    dend_8 { pt3dadd( -25.6953, -274.719, 18.994, 1.37 ) }
    dend_8 { pt3dadd( -25.8543, -276.009, 18.9926, 0.17 ) }
    dend_8 { pt3dadd( -25.877, -276.225, 18.9924, 0.17 ) }
    dend_8 { pt3dadd( -26.1299, -278.522, 18.9897, 0.17 ) }
    dend_8 { pt3dadd( -26.2841, -280.611, 18.9869, 0.34 ) }
    dend_8 { pt3dadd( -26.2032, -286.544, 18.9772, 0.34 ) }
    dend_8 { pt3dadd( -26.0037, -288.027, 18.9741, 0.34 ) }
    dend_8 { pt3dadd( -25.9834, -288.244, 18.9737, 0.34 ) }
    dend_8 { pt3dadd( -25.9256, -290.44, 18.97, 0.34 ) }
    dend_8 { pt3dadd( -25.9256, -290.44, 18.97, 1.03 ) }
    dend_8 { pt3dadd( -25.9093, -291.501, 18.9969, 0.17 ) }
    dend_8 { pt3dadd( -25.8535, -292.566, 19.1071, 0.17 ) }
    dend_8 { pt3dadd( -25.3677, -295.692, 19.3925, 1.37 ) }
    dend_8 { pt3dadd( -24.6991, -298.571, 19.6223, 0.51 ) }
    dend_8 { pt3dadd( -24.1092, -300.639, 19.6989, 0.17 ) }
    dend_8 { pt3dadd( -22.1911, -306.252, 19.8297, 0.51 ) }
    dend_8 { pt3dadd( -20.2948, -310.902, 19.6331, 0.51 ) }
    dend_8 { pt3dadd( -18.6038, -314.82, 19.2566, 1.88 ) }
    dend_8 { pt3dadd( -17.2925, -317.749, 18.5567, 1.2 ) }
    dend_8 { pt3dadd( -16.2304, -320.25, 17.6053, 0.17 ) }
    dend_8 { pt3dadd( -15.2735, -322.89, 16.1786, 0.51 ) }
    dend_8 { pt3dadd( -14.2934, -326.916, 13.2277, 1.03 ) }
    dend_8 { pt3dadd( -13.8434, -329.129, 11.3622, 1.03 ) }
    dend_8 { pt3dadd( -13.0053, -334.398, 7.09698, 0.17 ) }
    dend_8 { pt3dadd( -12.8173, -335.709, 6.1363, 0.17 ) }
    dend_8 { pt3dadd( -12.7912, -335.898, 6.0271, 0.17 ) }
    dend_8 { pt3dadd( -12.3755, -338.328, 5.0491, 0.17 ) }
    dend_8 { pt3dadd( -11.382, -341.571, 4.83318, 1.2 ) }
    dend_8 { pt3dadd( -10.2973, -344.043, 5.09443, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_8 { pt3dadd( -9.63206, -345.498, 5.45964, 0.17 ) }
    dend_8 { pt3dadd( -9.54123, -345.692, 5.50159, 0.17 ) }
    dend_8 { pt3dadd( -8.33934, -348.479, 5.95665, 0.17 ) }
    dend_8 { pt3dadd( -8.25411, -348.694, 5.97716, 1.54 ) }
    dend_8 { pt3dadd( -7.60225, -350.781, 5.99325, 0.17 ) }
    dend_8 { pt3dadd( -7.17817, -352.082, 6.0024, 0.17 ) }
    dend_8 { pt3dadd( -6.71219, -353.624, 6.10294, 0.17 ) }
    dend_8 { pt3dadd( -6.16378, -355.477, 6.306, 1.37 ) }
    dend_8 { pt3dadd( -5.8665, -356.727, 6.49087, 0.68 ) }
    dend_8 { pt3dadd( -5.80287, -357.014, 6.53867, 0.68 ) }
    dend_8 { pt3dadd( -5.1615, -360.072, 7.09901, 0.17 ) }
    dend_8 { pt3dadd( -4.62361, -362.793, 8.4636, 0.17 ) }
    dend_8 { pt3dadd( -4.49806, -363.538, 8.89286, 1.71 ) }
    dend_8 { pt3dadd( -4.27058, -365.182, 9.97719, 1.54 ) }
    dend_8 { pt3dadd( -4.15349, -366.236, 10.7466, 0.17 ) }
    dend_8 { pt3dadd( -4.00828, -367.916, 12.0926, 0.17 ) }
    dend_8 { pt3dadd( -3.91153, -374.511, 18.5356, 2.05 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 17/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 0.998511, -47.207, -24.4945, 0.17 ) }
    dend_6 { pt3dadd( 0.905988, -47.8581, -23.9971, 0.17 ) }
    dend_6 { pt3dadd( 0.676968, -49.2452, -22.8448, 0.17 ) }
    dend_6 { pt3dadd( 0.235009, -51.7357, -20.686, 1.2 ) }
    dend_6 { pt3dadd( -0.621915, -55.3241, -16.7788, 0.17 ) }
    dend_6 { pt3dadd( -1.35004, -58.0643, -13.6112, 0.17 ) }
    dend_6 { pt3dadd( -1.42827, -58.3766, -13.2438, 0.17 ) }
    dend_6 { pt3dadd( -1.81299, -59.9963, -11.1989, 1.37 ) }
    dend_6 { pt3dadd( -1.82534, -60.0488, -11.132, 1.37 ) }
    dend_6 { pt3dadd( -2.54604, -63.7057, -6.65484, 0.17 ) }
    dend_6 { pt3dadd( -2.76089, -65.0774, -5.2218, 0.17 ) }
    dend_6 { pt3dadd( -2.92495, -65.9728, -4.17854, 0.17 ) }
    dend_6 { pt3dadd( -2.96589, -66.1024, -3.99136, 0.17 ) }
    dend_6 { pt3dadd( -3.56506, -67.9183, -1.30329, 0.17 ) }
    dend_6 { pt3dadd( -3.70271, -68.324, -0.598005, 1.2 ) }
    dend_6 { pt3dadd( -3.78885, -68.5568, -0.144986, 0.17 ) }
    dend_6 { pt3dadd( -4.83555, -70.8495, 4.99717, 0.17 ) }
    dend_6 { pt3dadd( -6.11357, -73.4595, 11.1618, 0.17 ) }
    dend_6 { pt3dadd( -6.40379, -74.0482, 12.6456, 0.17 ) }
    dend_6 { pt3dadd( -7.17657, -75.7292, 17.4086, 0.17 ) }
    dend_6 { pt3dadd( -7.21802, -75.8415, 17.7123, 0.17 ) }
    dend_6 { pt3dadd( -7.28303, -76.0929, 18.3398, 0.17 ) }
    dend_6 { pt3dadd( -7.28416, -76.91, 19.9062, 0.17 ) }
    dend_6 { pt3dadd( -7.24519, -77.1351, 20.2016, 0.68 ) }
    dend_6 { pt3dadd( -7.11969, -78.2579, 21.5517, 0.68 ) }
    dend_6 { pt3dadd( -7.03534, -79.241, 22.5528, 0.68 ) }
    dend_6 { pt3dadd( -7.64549, -83.0767, 26.1679, 0.17 ) }
    dend_6 { pt3dadd( -8.61525, -84.6752, 27.3019, 0.17 ) }
    dend_6 { pt3dadd( -9.49049, -85.5623, 27.7077, 1.2 ) }
    dend_6 { pt3dadd( -10.072, -85.9909, 27.7366, 0.17 ) }
    dend_6 { pt3dadd( -10.2012, -86.0797, 27.7265, 0.17 ) }
    dend_6 { pt3dadd( -15.2686, -90.0709, 25.958, 0.17 ) }
    dend_6 { pt3dadd( -16.7004, -91.339, 25.1576, 0.17 ) }
    dend_6 { pt3dadd( -17.3874, -91.9928, 24.7235, 0.17 ) }
    dend_6 { pt3dadd( -21.1456, -96.0632, 22.0956, 0.17 ) }
    dend_6 { pt3dadd( -23.231, -98.6296, 20.5662, 0.17 ) }
    dend_6 { pt3dadd( -27.0348, -103.875, 17.6347, 0.17 ) }
    dend_6 { pt3dadd( -28.8441, -106.896, 15.8381, 0.17 ) }
    dend_6 { pt3dadd( -29.763, -108.4, 14.8324, 0.17 ) }
    dend_6 { pt3dadd( -30.8511, -110.097, 13.5948, 0.17 ) }
    dend_6 { pt3dadd( -33.0794, -113.899, 10.8858, 0.17 ) }
    dend_6 { pt3dadd( -33.5944, -114.814, 10.2362, 0.17 ) }
    dend_6 { pt3dadd( -36.1528, -119.499, 7.361, 0.17 ) }
    dend_6 { pt3dadd( -37.0797, -121.484, 6.20203, 0.17 ) }
    dend_6 { pt3dadd( -37.8193, -123.207, 5.25757, 0.17 ) }
    dend_6 { pt3dadd( -39.8339, -128.022, 2.77929, 0.17 ) }
    dend_6 { pt3dadd( -41.8856, -133.167, 0.53366, 0.17 ) }
    dend_6 { pt3dadd( -43.4993, -137.301, -1.05028, 0.17 ) }
    dend_6 { pt3dadd( -44.365, -139.507, -1.75389, 0.17 ) }
    dend_6 { pt3dadd( -45.3821, -142.072, -2.55254, 0.17 ) }
    dend_6 { pt3dadd( -46.3505, -144.324, -3.27898, 0.17 ) }
    dend_6 { pt3dadd( -48.9496, -149.465, -5.00099, 0.17 ) }
    dend_6 { pt3dadd( -50.4855, -152.082, -5.79448, 1.71 ) }
    dend_6 { pt3dadd( -51.0016, -152.928, -6.09754, 0.17 ) }
    dend_6 { pt3dadd( -51.9379, -154.435, -6.77571, 0.17 ) }
    dend_6 { pt3dadd( -52.0893, -154.684, -6.90774, 0.17 ) }
    dend_6 { pt3dadd( -53.1576, -156.414, -7.98714, 0.17 ) }
    dend_6 { pt3dadd( -54.6649, -158.648, -9.98334, 0.17 ) }
    dend_6 { pt3dadd( -56.0529, -160.666, -12.0197, 0.17 ) }
    dend_6 { pt3dadd( -57.2126, -162.447, -14.055, 1.54 ) }
    dend_6 { pt3dadd( -57.453, -162.844, -14.544, 0.17 ) }
    dend_6 { pt3dadd( -57.8987, -163.578, -15.4391, 0.17 ) }
    dend_6 { pt3dadd( -59.2894, -165.997, -18.0987, 0.17 ) }
    dend_6 { pt3dadd( -59.6608, -166.762, -18.7732, 1.2 ) }
    dend_6 { pt3dadd( -59.6608, -166.762, -18.7732, 0.17 ) }
    dend_6 { pt3dadd( -60.3107, -168.041, -19.2952, 0.17 ) }
    dend_6 { pt3dadd( -61.5128, -170.416, -20.099, 0.17 ) }
    dend_6 { pt3dadd( -62.8901, -173.03, -20.734, 0.17 ) }
    dend_6 { pt3dadd( -63.0099, -173.227, -20.7664, 0.17 ) }
    dend_6 { pt3dadd( -64.1452, -175.383, -21.438, 0.17 ) }
    dend_6 { pt3dadd( -64.241, -175.571, -21.5177, 0.17 ) }
    dend_6 { pt3dadd( -64.3032, -175.699, -21.6023, 0.17 ) }
    dend_6 { pt3dadd( -65.8093, -178.812, -24.3673, 0.17 ) }
    dend_6 { pt3dadd( -66.3962, -180.189, -25.6718, 0.17 ) }
    dend_6 { pt3dadd( -68.1478, -184.47, -29.6089, 0.17 ) }
    dend_6 { pt3dadd( -69.2558, -187.136, -31.9836, 0.17 ) }
    dend_6 { pt3dadd( -71.2353, -191.722, -35.7717, 0.17 ) }
    dend_6 { pt3dadd( -73.2551, -196.336, -39.365, 0.17 ) }
    dend_6 { pt3dadd( -75.5093, -201.099, -42.8442, 0.17 ) }
    dend_6 { pt3dadd( -77.1066, -204.191, -44.8497, 0.17 ) }
    dend_6 { pt3dadd( -78.7608, -206.857, -46.3195, 0.17 ) }
    dend_6 { pt3dadd( -81.3151, -210.729, -48.2209, 0.17 ) }
    dend_6 { pt3dadd( -81.957, -211.611, -48.5833, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_6 { pt3dadd( -84.7932, -215.126, -49.9226, 0.17 ) }
    dend_6 { pt3dadd( -86.3487, -216.835, -50.612, 0.17 ) }
    dend_6 { pt3dadd( -89.5309, -219.861, -52.0753, 0.17 ) }
    dend_6 { pt3dadd( -94.817, -224.234, -54.5704, 0.17 ) }
    dend_6 { pt3dadd( -95.3431, -224.583, -54.8187, 0.68 ) }
    dend_6 { pt3dadd( -97.5906, -225.857, -55.8668, 0.17 ) }
    dend_6 { pt3dadd( -98.8881, -226.454, -56.4543, 0.17 ) }
    dend_6 { pt3dadd( -103.666, -228.341, -58.4606, 0.17 ) }
    dend_6 { pt3dadd( -103.95, -228.455, -58.564, 0.17 ) }
    dend_6 { pt3dadd( -106.288, -229.466, -59.253, 0.17 ) }
    dend_6 { pt3dadd( -106.708, -229.689, -59.3756, 0.17 ) }
    dend_6 { pt3dadd( -109.496, -231.282, -60.1865, 0.17 ) }
    dend_6 { pt3dadd( -111.839, -232.764, -60.8652, 0.17 ) }
    dend_6 { pt3dadd( -115.656, -235.495, -62.0562, 0.17 ) }
    dend_6 { pt3dadd( -119.684, -238.461, -63.3201, 0.17 ) }
    dend_6 { pt3dadd( -119.812, -238.56, -63.3607, 0.17 ) }
    dend_6 { pt3dadd( -124.235, -241.907, -64.7793, 0.17 ) }
    dend_6 { pt3dadd( -124.358, -241.996, -64.82, 0.17 ) }
    dend_6 { pt3dadd( -126.211, -243.064, -65.4526, 0.17 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 19/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 0.998511, -47.207, -24.4945, 0.17 ) }
    dend_5 { pt3dadd( 1.66453, -48.2974, -21.0142, 0.17 ) }
    dend_5 { pt3dadd( 2.9598, -49.9123, -14.3342, 1.37 ) }
    dend_5 { pt3dadd( 2.98747, -49.9539, -14.1681, 1.37 ) }
    dend_5 { pt3dadd( 3.08249, -50.1118, -13.5477, 0.17 ) }
    dend_5 { pt3dadd( 4.19978, -51.9382, -6.30602, 0.17 ) }
    dend_5 { pt3dadd( 4.28756, -52.0518, -5.81598, 1.03 ) }
    dend_5 { pt3dadd( 5.40102, -53.2639, 0.75017, 0.17 ) }
    dend_5 { pt3dadd( 6.97843, -54.5706, 8.74056, 0.17 ) }
    dend_5 { pt3dadd( 7.04919, -54.6254, 9.08655, 1.2 ) }
    dend_5 { pt3dadd( 7.20497, -54.7337, 9.81191, 0.17 ) }
    dend_5 { pt3dadd( 7.90398, -55.1788, 12.926, 0.17 ) }
    dend_5 { pt3dadd( 8.84689, -55.7271, 17.1292, 1.2 ) }
    dend_5 { pt3dadd( 8.90352, -55.7465, 17.3272, 0.17 ) }
    dend_5 { pt3dadd( 11.6478, -58.703, 27.0334, 0.17 ) }
    dend_5 { pt3dadd( 14.3163, -62.0899, 36.6123, 0.17 ) }
    dend_5 { pt3dadd( 17.0743, -66.9465, 45.4751, 0.17 ) }
    dend_5 { pt3dadd( 20.4797, -72.6028, 53.5832, 0.17 ) }
    dend_5 { pt3dadd( 25.3595, -79.5748, 59.5924, 0.17 ) }
    dend_5 { pt3dadd( 30.9625, -84.2638, 67.1086, 0.17 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 39/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 73.9526, 67.4336, -28.4937, 0.17 ) }
    dend_25 { pt3dadd( 74.8079, 76.2025, -26.9008, 0.17 ) }
    dend_25 { pt3dadd( 76.2314, 88.504, -23.6011, 0.17 ) }
    dend_25 { pt3dadd( 76.2508, 88.6938, -23.54, 0.17 ) }
    dend_25 { pt3dadd( 76.8229, 94.7077, -21.4153, 0.17 ) }
    dend_25 { pt3dadd( 77.4053, 101.329, -18.9513, 0.17 ) }
    dend_25 { pt3dadd( 78.1488, 111.401, -14.8399, 0.17 ) }
    dend_25 { pt3dadd( 78.3398, 116.304, -12.1929, 0.17 ) }
    dend_25 { pt3dadd( 78.4067, 121.952, -8.39023, 0.17 ) }
    dend_25 { pt3dadd( 78.3234, 123.259, -7.48387, 1.88 ) }
    dend_25 { pt3dadd( 78.2289, 123.746, -7.1531, 0.17 ) }
    dend_25 { pt3dadd( 76.7666, 128.502, -3.76871, 0.17 ) }
    dend_25 { pt3dadd( 75.3043, 131.294, -1.39451, 0.17 ) }
    dend_25 { pt3dadd( 73.0307, 134.807, 1.57381, 0.17 ) }
    dend_25 { pt3dadd( 72.5078, 135.474, 2.17304, 0.17 ) }
    dend_25 { pt3dadd( 69.9357, 138.66, 4.82671, 0.17 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 55/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 73.9526, 67.4336, -28.4937, 0.17 ) }
    dend_24 { pt3dadd( 76.9865, 68.1648, -32.7631, 0.17 ) }
    dend_24 { pt3dadd( 78.725, 68.5838, -35.2097, 0.17 ) }
    dend_24 { pt3dadd( 80.6736, 69.0534, -37.9519, 0.17 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 59/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -3.91153, -374.511, 18.5356, 0.17 ) }
    dend_10 { pt3dadd( -3.41013, -375.749, 19.7699, 0.17 ) }
    dend_10 { pt3dadd( -3.1554, -376.96, 20.946, 0.17 ) }
    dend_10 { pt3dadd( -3.11848, -377.32, 21.1769, 0.17 ) }
    dend_10 { pt3dadd( -3.08821, -377.701, 21.3414, 1.03 ) }
    dend_10 { pt3dadd( -2.99041, -379.987, 22.0644, 0.51 ) }
    dend_10 { pt3dadd( -2.8867, -384.248, 23.1471, 0.17 ) }
    dend_10 { pt3dadd( -3.01421, -385.851, 23.4047, 0.17 ) }
    dend_10 { pt3dadd( -3.74832, -390.338, 23.8283, 1.2 ) }
    dend_10 { pt3dadd( -4.08316, -391.711, 23.8674, 0.17 ) }
    dend_10 { pt3dadd( -4.37175, -392.718, 23.8195, 0.17 ) }
    dend_10 { pt3dadd( -4.43759, -392.921, 23.8053, 0.17 ) }
    dend_10 { pt3dadd( -4.99418, -394.623, 23.7053, 0.17 ) }
    dend_10 { pt3dadd( -5.53155, -396.348, 23.8116, 1.37 ) }
    dend_10 { pt3dadd( -6.12027, -398.161, 24.1326, 0.17 ) }
    dend_10 { pt3dadd( -6.84981, -400.502, 24.841, 0.17 ) }
    dend_10 { pt3dadd( -7.51609, -403.41, 25.9344, 0.68 ) }
    dend_10 { pt3dadd( -7.62649, -404.112, 26.225, 0.17 ) }
    dend_10 { pt3dadd( -7.71608, -405.51, 26.8489, 0.17 ) }
    dend_10 { pt3dadd( -7.7095, -406.84, 27.4887, 0.17 ) }
    dend_10 { pt3dadd( -7.50786, -411.131, 29.5443, 0.68 ) }
    dend_10 { pt3dadd( -7.38317, -414.186, 30.9347, 0.68 ) }
    dend_10 { pt3dadd( -7.41172, -415.974, 31.5667, 0.34 ) }
    dend_10 { pt3dadd( -7.4658, -417.118, 31.8778, 0.17 ) }
    dend_10 { pt3dadd( -7.48206, -417.327, 31.9168, 0.17 ) }
    dend_10 { pt3dadd( -7.83857, -420.306, 32.1923, 0.17 ) }
    dend_10 { pt3dadd( -8.11207, -422.056, 32.1765, 0.68 ) }
    dend_10 { pt3dadd( -8.72709, -425.548, 31.7667, 0.17 ) }
    dend_10 { pt3dadd( -9.10185, -427.486, 31.5146, 0.17 ) }
    dend_10 { pt3dadd( -9.43872, -429.159, 31.2762, 1.2 ) }
    dend_10 { pt3dadd( -9.74205, -430.91, 30.9831, 0.17 ) }
    dend_10 { pt3dadd( -9.9821, -433.146, 30.4589, 0.17 ) }
    dend_10 { pt3dadd( -10.1143, -437.891, 28.9528, 1.37 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 92/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -3.91153, -374.511, 18.5356, 0.17 ) }
    dend_9 { pt3dadd( -4.08798, -375.322, 18.1105, 0.17 ) }
    dend_9 { pt3dadd( -4.43912, -376.872, 17.2735, 0.17 ) }
    dend_9 { pt3dadd( -4.5849, -377.558, 16.9265, 1.54 ) }
    dend_9 { pt3dadd( -4.69715, -378.069, 16.6983, 0.17 ) }
    dend_9 { pt3dadd( -5.45037, -380.979, 15.6573, 0.17 ) }
    dend_9 { pt3dadd( -5.54485, -381.317, 15.4996, 1.54 ) }
    dend_9 { pt3dadd( -5.68505, -381.783, 15.2527, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_9 { pt3dadd( -6.00602, -382.778, 14.6894, 0.17 ) }
    dend_9 { pt3dadd( -6.44277, -384.092, 13.9447, 0.17 ) }
    dend_9 { pt3dadd( -7.29346, -386.454, 12.6355, 0.17 ) }
    dend_9 { pt3dadd( -8.72847, -389.924, 10.353, 0.17 ) }
    dend_9 { pt3dadd( -9.01839, -390.615, 9.82933, 1.03 ) }
    dend_9 { pt3dadd( -9.22118, -391.09, 9.42304, 1.03 ) }
    dend_9 { pt3dadd( -9.32924, -391.376, 9.14968, 0.17 ) }
    dend_9 { pt3dadd( -9.66927, -392.66, 7.79533, 0.17 ) }
    dend_9 { pt3dadd( -10.0092, -395.355, 5.00023, 1.54 ) }
    dend_9 { pt3dadd( -10.0125, -396.66, 3.92566, 1.2 ) }
    dend_9 { pt3dadd( -10.0057, -396.762, 3.84634, 1.2 ) }
    dend_9 { pt3dadd( -9.75132, -398.978, 2.27586, 0.17 ) }
    dend_9 { pt3dadd( -9.50849, -400.284, 1.53571, 0.17 ) }
    dend_9 { pt3dadd( -9.11173, -401.867, 0.90471, 0.68 ) }
    dend_9 { pt3dadd( -8.71315, -403.442, 0.537993, 0.17 ) }
    dend_9 { pt3dadd( -8.68591, -403.567, 0.514263, 0.17 ) }
    dend_9 { pt3dadd( -8.6369, -403.845, 0.47795, 0.86 ) }
    dend_9 { pt3dadd( -8.35711, -406.134, 0.389658, 0.17 ) }
    dend_9 { pt3dadd( -8.29341, -406.991, 0.393531, 1.03 ) }
    dend_9 { pt3dadd( -8.28027, -407.244, 0.3943, 0.17 ) }
    dend_9 { pt3dadd( -8.21105, -409.162, 0.398093, 0.17 ) }
    dend_9 { pt3dadd( -8.20527, -409.564, 0.398305, 1.03 ) }
    dend_9 { pt3dadd( -8.22241, -409.926, 0.397013, 0.17 ) }
    dend_9 { pt3dadd( -8.42692, -411.932, 0.382567, 0.17 ) }
    dend_9 { pt3dadd( -8.55123, -413.024, 0.373838, 1.2 ) }
    dend_9 { pt3dadd( -8.61677, -413.478, 0.369288, 0.17 ) }
    dend_9 { pt3dadd( -9.0946, -415.661, 0.336586, 0.17 ) }
    dend_9 { pt3dadd( -9.3595, -416.645, 0.318554, 0.17 ) }
    dend_9 { pt3dadd( -9.54466, -417.194, 0.306008, 1.2 ) }
    dend_9 { pt3dadd( -9.9377, -418.214, 0.349524, 0.17 ) }
    dend_9 { pt3dadd( -10.4995, -419.654, 0.478171, 0.17 ) }
    dend_9 { pt3dadd( -10.7518, -420.353, 0.564107, 0.86 ) }
    dend_9 { pt3dadd( -11.0619, -421.296, 0.714528, 0.17 ) }
    dend_9 { pt3dadd( -11.3752, -422.266, 0.877394, 0.17 ) }
    dend_9 { pt3dadd( -12.112, -424.298, 1.21401, 0.17 ) }
    dend_9 { pt3dadd( -12.2393, -424.659, 1.25116, 1.54 ) }
    dend_9 { pt3dadd( -12.4599, -425.312, 1.26465, 0.17 ) }
    dend_9 { pt3dadd( -12.8406, -426.535, 1.20239, 0.17 ) }
    dend_9 { pt3dadd( -13.2285, -427.672, 1.0707, 0.17 ) }
    dend_9 { pt3dadd( -13.6156, -428.773, 0.881308, 0.17 ) }
    dend_9 { pt3dadd( -14.1665, -430.261, 0.534889, 1.54 ) }
    dend_9 { pt3dadd( -14.7826, -431.942, 0.160121, 0.17 ) }
    dend_9 { pt3dadd( -15.3342, -433.505, 0.0306043, 0.17 ) }
    dend_9 { pt3dadd( -15.7736, -435.167, 0.143414, 0.17 ) }
    dend_9 { pt3dadd( -15.8882, -435.61, 0.220088, 1.03 ) }
    dend_9 { pt3dadd( -15.9234, -435.732, 0.250945, 1.03 ) }
    dend_9 { pt3dadd( -16.2981, -436.992, 0.66868, 0.17 ) }
    dend_9 { pt3dadd( -17.2035, -440.135, 1.8943, 0.17 ) }
    dend_9 { pt3dadd( -17.8027, -442.18, 2.79835, 0.17 ) }
    dend_9 { pt3dadd( -18.4663, -444.495, 3.89542, 0.17 ) }
    dend_9 { pt3dadd( -18.6052, -444.937, 4.10347, 0.17 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 51/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -10.1143, -437.891, 28.9528, 0.17 ) }
    dend_12 { pt3dadd( -12.1987, -440.755, 30.0037, 0.17 ) }
    dend_12 { pt3dadd( -13.2044, -442.512, 30.5043, 0.17 ) }
    dend_12 { pt3dadd( -13.2791, -442.66, 30.5426, 0.17 ) }
    dend_12 { pt3dadd( -14.067, -444.299, 30.9447, 1.2 ) }
    dend_12 { pt3dadd( -14.295, -444.932, 31.0781, 0.17 ) }
    dend_12 { pt3dadd( -14.5698, -446.05, 31.2514, 0.17 ) }
    dend_12 { pt3dadd( -14.6169, -447.055, 31.2383, 0.86 ) }
    dend_12 { pt3dadd( -14.5908, -447.524, 31.2396, 0.17 ) }
    dend_12 { pt3dadd( -14.561, -447.894, 31.2422, 0.17 ) }
    dend_12 { pt3dadd( -14.3451, -450.062, 31.2633, 0.17 ) }
    dend_12 { pt3dadd( -14.1683, -452.06, 31.2801, 0.86 ) }
    dend_12 { pt3dadd( -14.113, -453.25, 31.2826, 0.17 ) }
    dend_12 { pt3dadd( -14.0802, -455.061, 31.0343, 0.17 ) }
    dend_12 { pt3dadd( -14.1076, -456.688, 30.6598, 1.71 ) }
    dend_12 { pt3dadd( -14.1141, -456.84, 30.6123, 0.17 ) }
    dend_12 { pt3dadd( -14.245, -458.147, 30.0713, 0.17 ) }
    dend_12 { pt3dadd( -14.4103, -459.479, 29.4211, 0.17 ) }
    dend_12 { pt3dadd( -14.9958, -463.253, 27.3305, 0.17 ) }
    dend_12 { pt3dadd( -15.1447, -464.079, 26.8422, 1.03 ) }
    dend_12 { pt3dadd( -15.1705, -464.224, 26.7602, 0.17 ) }
    dend_12 { pt3dadd( -15.3495, -465.544, 26.2089, 0.17 ) }
    dend_12 { pt3dadd( -15.4586, -466.535, 25.9036, 1.37 ) }
    dend_12 { pt3dadd( -15.4736, -466.691, 25.8755, 0.17 ) }
    dend_12 { pt3dadd( -15.5613, -468.353, 25.8664, 0.17 ) }
    dend_12 { pt3dadd( -15.5802, -469.611, 25.8678, 0.17 ) }
    dend_12 { pt3dadd( -15.8427, -472.901, 25.8344, 0.17 ) }
    dend_12 { pt3dadd( -15.8657, -473.058, 25.8398, 0.17 ) }
    dend_12 { pt3dadd( -15.9764, -473.732, 25.8887, 1.54 ) }
    dend_12 { pt3dadd( -16.2575, -475.118, 26.0018, 0.17 ) }
    dend_12 { pt3dadd( -16.7029, -476.533, 26.0984, 0.17 ) }
    dend_12 { pt3dadd( -17.8509, -479.164, 26.6084, 0.17 ) }
    dend_12 { pt3dadd( -18.5491, -480.633, 27.056, 0.17 ) }
    dend_12 { pt3dadd( -19.6011, -482.796, 27.8357, 0.17 ) }
    dend_12 { pt3dadd( -21.247, -486.165, 29.181, 0.17 ) }
    dend_12 { pt3dadd( -22.6568, -489.038, 30.4324, 0.17 ) }
    dend_12 { pt3dadd( -24.8328, -493.62, 32.6074, 0.17 ) }
    dend_12 { pt3dadd( -25.956, -496.1, 33.8487, 0.17 ) }
    dend_12 { pt3dadd( -26.0732, -496.356, 33.9853, 1.71 ) }
    dend_12 { pt3dadd( -26.3828, -497.012, 34.3936, 0.17 ) }
    dend_12 { pt3dadd( -26.8428, -498.184, 35.2354, 0.17 ) }
    dend_12 { pt3dadd( -26.8835, -498.374, 35.3641, 0.17 ) }
    dend_12 { pt3dadd( -26.9972, -499.757, 36.0074, 0.17 ) }
    dend_12 { pt3dadd( -27.2599, -502.917, 37.3391, 0.17 ) }
    dend_12 { pt3dadd( -27.2862, -503.379, 37.5272, 0.17 ) }
    dend_12 { pt3dadd( -27.2786, -504.223, 37.8329, 0.17 ) }
    dend_12 { pt3dadd( -27.2093, -505.384, 38.1988, 1.54 ) }
    dend_12 { pt3dadd( -27.1167, -506.178, 38.4022, 0.17 ) }
    dend_12 { pt3dadd( -26.9858, -506.845, 38.5087, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_12 { pt3dadd( -26.9395, -507.338, 38.5211, 0.17 ) }
    dend_12 { pt3dadd( -27.0507, -510.161, 38.5183, 0.17 ) }
    dend_12 { pt3dadd( -27.1011, -510.627, 38.4825, 1.71 ) }
    dend_12 { pt3dadd( -27.1337, -510.855, 38.4622, 0.17 ) }
    dend_12 { pt3dadd( -27.5487, -513.303, 38.2167, 0.17 ) }
    dend_12 { pt3dadd( -28.1916, -516.551, 37.8494, 0.17 ) }
    dend_12 { pt3dadd( -29.1726, -520.665, 37.3119, 0.17 ) }
    dend_12 { pt3dadd( -29.8111, -522.768, 36.9757, 0.17 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 8/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -10.1143, -437.891, 28.9528, 0.17 ) }
    dend_11 { pt3dadd( -9.71211, -440.262, 29.0021, 0.17 ) }
    dend_11 { pt3dadd( -9.17991, -442.823, 29.0657, 0.17 ) }
    dend_11 { pt3dadd( -9.12942, -443.04, 29.0717, 1.2 ) }
    dend_11 { pt3dadd( -8.96785, -443.675, 29.0906, 0.17 ) }
    dend_11 { pt3dadd( -8.2111, -446.543, 29.1791, 0.17 ) }
    dend_11 { pt3dadd( -7.64804, -448.45, 29.2443, 1.37 ) }
    dend_11 { pt3dadd( -7.18912, -449.633, 29.3652, 0.17 ) }
    dend_11 { pt3dadd( -7.10107, -449.836, 29.3931, 0.17 ) }
    dend_11 { pt3dadd( -5.91068, -452.859, 29.8249, 0.17 ) }
    dend_11 { pt3dadd( -5.83985, -453.051, 29.8758, 0.17 ) }
    dend_11 { pt3dadd( -5.01641, -455.55, 30.7517, 0.17 ) }
    dend_11 { pt3dadd( -3.36158, -461.344, 33.095, 0.17 ) }
    dend_11 { pt3dadd( -2.71151, -463.699, 34.0667, 0.17 ) }
    dend_11 { pt3dadd( -1.96099, -466.493, 35.1561, 0.17 ) }
    dend_11 { pt3dadd( -0.623503, -471.691, 37.2961, 1.37 ) }
    dend_11 { pt3dadd( -0.0686908, -474.001, 38.2615, 0.17 ) }
    dend_11 { pt3dadd( -0.0281638, -474.203, 38.3492, 0.17 ) }
    dend_11 { pt3dadd( 0.916158, -480.003, 40.8409, 0.17 ) }
    dend_11 { pt3dadd( 1.84863, -484.18, 42.5375, 0.17 ) }
    dend_11 { pt3dadd( 3.857, -496.322, 45.9287, 0.17 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 29/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -29.8111, -522.768, 36.9757, 0.17 ) }
    dend_14 { pt3dadd( -27.6146, -526.567, 39.2511, 0.17 ) }
    dend_14 { pt3dadd( -25.9215, -529.496, 41.005, 0.17 ) }
    dend_14 { pt3dadd( -24.3729, -532.174, 42.6092, 0.17 ) }
    dend_14 { pt3dadd( -24.2833, -532.329, 42.702, 0.17 ) }
    dend_14 { pt3dadd( -20.4028, -539.04, 46.7219, 0.17 ) }
    dend_14 { pt3dadd( -20.1081, -539.55, 47.0271, 0.17 ) }
    dend_14 { pt3dadd( -13.7459, -549.301, 50.7161, 0.17 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 37/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -29.8111, -522.768, 36.9757, 0.17 ) }
    dend_13 { pt3dadd( -31.627, -524.612, 36.9109, 0.17 ) }
    dend_13 { pt3dadd( -34.0975, -527.12, 36.8228, 0.17 ) }
    dend_13 { pt3dadd( -35.2576, -528.297, 36.7814, 0.17 ) }
    dend_13 { pt3dadd( -35.3512, -528.392, 36.778, 0.17 ) }
    dend_13 { pt3dadd( -40.2625, -534.88, 37.5316, 0.17 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_35, dend_32, dend_29, dend_18, dend_17, dend_0, dend_50, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_30, dend_20, dend_19, dend_16, dend_1, dend_56, dend_51, dend_49, dend_46, dend_42, dend_37, dend_28, dend_21, dend_3, dend_2, dend_60, dend_57, dend_53, dend_52, dend_48, dend_47, dend_39, dend_38, dend_27, dend_22, dend_7, dend_4, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_41, dend_40, dend_26, dend_23, dend_15, dend_8, dend_6, dend_5, dend_25, dend_24, dend_10, dend_9, dend_12, dend_11, dend_14, dend_13]}
    ModelViewParmSubset_2 = new SectionList()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_35, dend_32, dend_29, dend_18, dend_17, dend_0, dend_50, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_30, dend_20, dend_19, dend_16, dend_1, dend_56, dend_51, dend_49, dend_46, dend_42, dend_37, dend_28, dend_21, dend_3, dend_2, dend_60, dend_57, dend_53, dend_52, dend_48, dend_47, dend_39, dend_38, dend_27, dend_22, dend_7, dend_4, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_41, dend_40, dend_26, dend_23, dend_15, dend_8, dend_6, dend_5, dend_25, dend_24, dend_10, dend_9, dend_12, dend_11, dend_14, dend_13]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_17 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_45 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_43 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_36 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_31 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_30 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_16 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_56 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_51 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_49 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_46 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_42 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_2 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_60 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_53 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_52 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_47 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_27 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_22 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_7 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_61 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_59 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_58 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_55 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_41 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_15 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_8 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_6 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_5 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_25 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_10 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_9 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_12 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_11 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_44 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_18 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_50 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_34 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_29 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_21 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_33 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_1 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_28 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_4 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_57 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_37 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_39 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_38 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_23 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_40 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_26 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_24 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_48 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_62 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_54 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_13 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_14 OneSecGrp_SectionRef_65.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_17 nseg = 3
    dend_45 nseg = 5
    dend_43 nseg = 9
    dend_36 nseg = 3
    dend_31 nseg = 7
    dend_30 nseg = 7
    dend_16 nseg = 9
    dend_56 nseg = 3
    dend_51 nseg = 5
    dend_49 nseg = 9
    dend_46 nseg = 3
    dend_42 nseg = 3
    dend_2 nseg = 5
    dend_60 nseg = 7
    dend_53 nseg = 9
    dend_52 nseg = 3
    dend_47 nseg = 9
    dend_27 nseg = 5
    dend_22 nseg = 5
    dend_7 nseg = 9
    dend_61 nseg = 5
    dend_59 nseg = 3
    dend_58 nseg = 5
    dend_55 nseg = 3
    dend_41 nseg = 3
    dend_15 nseg = 3
    dend_8 nseg = 11
    dend_6 nseg = 15
    dend_5 nseg = 5
    dend_25 nseg = 5
    dend_10 nseg = 3
    dend_9 nseg = 3
    dend_12 nseg = 5
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L5_NBC_2444ed2bac_0_0


