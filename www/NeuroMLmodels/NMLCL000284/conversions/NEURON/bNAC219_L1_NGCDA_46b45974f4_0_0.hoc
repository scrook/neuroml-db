// Cell: bNAC219_L1_NGCDA_46b45974f4_0_0
/*
{
  "id" : "bNAC219_L1_NGCDA_46b45974f4_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.65332, -8.14477, 0.0, 3.38868", "2.3235, -7.30837, 0.0, 5.83516", "1.99367, -6.47197, 0.0, 8.36487", "1.66385, -5.63557, 0.0, 10.3053", "1.33402, -4.79917, 0.0, 11.2702", "1.0042, -3.96277, 0.0, 12.1037", "0.674371, -3.12636, 0.0, 12.478", "0.344546, -2.28996, 0.0, 12.8036", "0.0147201, -1.45356, 0.0, 13.3328", "-0.315105, -0.617159, 0.0, 13.8945", "-0.644931, 0.219243, 0.0, 14.1853", "-0.974756, 1.05564, 0.0, 14.2726", "-1.30458, 1.89205, 0.0, 14.0804", "-1.63441, 2.72845, 0.0, 13.7203", "-1.96423, 3.56485, 0.0, 13.3603", "-2.29406, 4.40125, 0.0, 12.7772", "-2.62388, 5.23765, 0.0, 12.1069", "-2.95371, 6.07405, 0.0, 11.425", "-3.28353, 6.91045, 0.0, 9.72987", "-3.61336, 7.74686, 0.0, 7.67118", "-3.94319, 8.58326, 0.0, 4.32164" ]
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "2.92163, -7.79977, 0.209999, 1.37", "3.39176, -8.51262, 0.0513644, 1.37", "3.96556, -9.21232, -0.211921, 1.37", "4.76928, -10.1889, -0.609037, 1.37", "5.2378, -10.7322, -0.756461, 1.37", "6.00516, -11.5972, -0.892722, 1.37", "6.83698, -12.5017, -0.972307, 0.91", "8.28177, -13.9908, -1.07932, 0.91", "9.26365, -14.9025, -1.19973, 0.91", "10.9322, -16.1965, -1.53204, 0.91", "12.14, -16.9926, -1.84646, 0.68", "13.6638, -17.8282, -2.39001, 0.91", "15.397, -18.5337, -3.22401, 0.68", "17.2962, -19.0232, -4.37052, 0.68", "19.1602, -19.1386, -5.90693, 0.68", "20.0311, -18.9861, -6.85253, 0.68", "21.0825, -18.3789, -8.43255, 0.68", "21.6774, -17.6426, -9.72782, 0.68", "22.0447, -16.8792, -10.9188, 0.68", "22.2845, -16.0663, -12.3429, 0.91", "22.3765, -15.6362, -13.4133, 1.37", "22.5647, -15.1666, -15.5314, 0.68", "22.7523, -15.0384, -17.0616, 0.68", "23.0125, -15.0103, -18.7909, 0.68", "23.5255, -15.0986, -21.2289, 0.68", "24.134, -15.286, -23.5014, 0.68", "24.803, -15.4769, -25.3803, 0.68", "25.3317, -15.5897, -26.4266, 0.68", "25.7936, -15.6329, -27.2129, 0.68", "26.6457, -15.591, -28.4939, 0.91", "27.0375, -15.5569, -29.0598, 0.91", "28.3033, -15.4341, -31.0566, 0.46", "29.2553, -15.3503, -32.8004, 0.91", "30.1157, -15.3449, -34.7826, 0.91", "31.0967, -15.3847, -37.421, 0.91", "31.5465, -15.4186, -38.8717, 0.91", "31.9062, -15.4554, -40.3108, 0.91", "32.1014, -15.5, -41.4873, 0.91", "32.3676, -15.5734, -43.7764, 0.91", "32.7853, -15.7326, -46.8469, 0.46" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999981492465656,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "6.55163, -2.74576, 7.25, 1.37", "6.57496, -2.74044, 7.26339, 1.37", "8.18547, -2.33907, 8.00747, 1.37", "9.36552, -2.00926, 8.39196, 1.14", "11.0715, -1.527, 8.76666, 1.37", "12.9602, -0.987927, 8.99435, 1.14", "14.4695, -0.557248, 9.00046, 0.91", "15.4262, -0.296568, 8.80714, 0.91", "16.8055, 0.0163089, 8.15186, 0.91", "17.8465, 0.154363, 7.4333, 1.14", "18.6675, 0.167941, 6.74164, 1.37", "19.9345, 0.0643129, 5.6519, 1.82", "21.2021, -0.104089, 4.56031, 1.37", "22.3365, -0.33166, 3.59314, 1.14", "23.7867, -0.718141, 2.37922, 1.14", "24.873, -1.05956, 1.45089, 1.14", "26.3092, -1.58583, 0.346298, 1.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999981492465656
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "0.741626, 8.44523, -6.69, 3.19", "0.972903, 9.06221, -8.66154, 2.73", "1.37068, 10.1233, -12.0524, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999981492465656
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "4.36163, 3.16324, 7.23, 1.37", "4.7862, 3.90369, 7.5481, 1.37", "5.50637, 5.15969, 8.08766, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999981492465656
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-7.36837, 4.90173, -1.97, 1.59", "-7.36837, 4.90173, -1.97, 1.59", "-8.06629, 5.82142, -2.62284, 1.37", "-8.73, 6.97496, -3.76016, 1.37", "-9.25038, 8.0936, -5.09363, 1.59", "-9.54213, 8.70967, -5.8625, 1.37", "-10.0638, 9.81115, -7.23716, 1.14", "-10.4104, 10.6395, -8.35009, 1.14", "-10.8804, 12.1495, -10.6599, 1.14", "-11.0436, 12.8983, -12.0246, 1.14", "-11.0912, 13.4945, -13.216, 1.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999981492465656
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-3.09837, -6.80227, 5.48, 1.14", "-3.52402, -6.95371, 5.41487, 1.14", "-4.56087, -7.2512, 5.25548, 0.91", "-5.41052, -7.45354, 5.15966, 0.91", "-6.38165, -7.62507, 5.07343, 1.14", "-7.36698, -7.74643, 5.02319, 0.91", "-9.0308, -7.86361, 4.97969, 1.14", "-10.6193, -7.83575, 5.0146, 1.14", "-11.5307, -7.71625, 5.10499, 1.14", "-12.4878, -7.50081, 5.27486, 0.91", "-13.2814, -7.27922, 5.46265, 0.91", "-13.9467, -7.08332, 5.66978, 1.14", "-14.8659, -6.84836, 6.10083, 0.91", "-15.6005, -6.80598, 6.56018, 0.91", "-16.1079, -6.84743, 6.89181, 1.14", "-16.926, -7.07539, 7.46134, 1.14", "-17.4884, -7.33886, 7.8467, 0.91", "-18.4492, -7.97175, 8.53881, 0.91", "-19.3893, -8.77401, 9.2087, 1.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999981492465656
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.371626, -6.32727, 10.68, 3.19", "0.378202, -6.87796, 11.2877, 3.19", "0.390453, -7.9038, 12.4196, 2.73", "0.402648, -8.92499, 13.5464, 2.73", "0.41688, -10.1167, 14.8614, 2.51", "0.431226, -11.318, 16.1869, 2.28", "0.444039, -12.3909, 17.3708, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999981492465656
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-3.94319, 8.58326, 0.0, 0.672061", "-9.44588, 22.5375, 0.0, 0.672061", "-14.9486, 36.4917, 0.0, 0.672061" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "26.3092, -1.58583, 0.346298, 0.91", "27.0949, -2.14134, 1.35912, 0.91", "28.0839, -2.80455, 2.76976, 0.91", "28.9328, -3.42208, 4.13223, 0.68", "29.78, -4.16601, 5.60934, 0.91", "30.4983, -4.98025, 6.90739, 0.91", "31.6211, -6.58004, 8.89425, 0.68", "32.446, -7.96503, 10.2788, 0.68", "33.0934, -9.28179, 11.389, 0.91", "33.6561, -10.5752, 12.3679, 0.68", "34.5832, -12.863, 13.9754, 0.68", "35.4454, -14.9961, 15.4239, 0.91", "36.1302, -16.5012, 16.4393, 0.68", "37.2866, -18.749, 18.0467, 1.14", "38.3168, -20.5967, 19.5184, 0.91", "39.4069, -22.4618, 21.1411, 0.91", "40.2332, -23.8536, 22.4638, 0.68", "41.1038, -25.2457, 23.8155, 0.68", "41.7676, -26.3464, 24.826, 0.68", "42.7402, -28.0451, 26.2371, 0.91", "43.495, -29.4464, 27.2454, 0.68", "44.7151, -31.8266, 28.6965, 0.68", "46.1364, -34.553, 30.1492, 0.68", "47.0643, -36.2883, 30.9487, 0.68", "48.0014, -37.8999, 31.5826, 0.68", "49.3498, -40.1918, 32.3318, 0.68", "50.7686, -42.6968, 33.0713, 0.68", "51.4324, -43.9024, 33.3556, 0.68", "52.5576, -45.9016, 33.8252, 0.68", "54.0794, -48.2381, 34.3967, 0.68", "55.7097, -50.4282, 34.9991, 0.68", "57.2427, -52.3096, 35.5791, 0.68", "58.3275, -53.5466, 35.9581, 0.91", "60.2097, -55.6343, 36.5464, 0.68", "61.7016, -57.1946, 36.9368, 0.68", "63.6308, -59.1779, 37.3203, 0.91", "64.8327, -60.4379, 37.5472, 0.68", "66.2076, -62.0607, 37.8598, 0.68", "67.3034, -63.5773, 38.1788, 0.68", "68.373, -65.3525, 38.5525, 0.91", "69.4952, -67.4672, 39.0962, 0.68", "70.7715, -69.924, 39.9527, 0.46", "71.9128, -72.1599, 41.0215, 0.46", "72.4968, -73.4179, 41.7935, 0.91", "73.2699, -75.1376, 42.9727, 0.68", "74.0098, -76.8421, 44.2018, 0.46", "74.8486, -78.849, 45.5554, 0.46", "75.7482, -81.0886, 46.8429, 0.46", "76.8327, -83.8993, 48.1016, 0.46", "77.6851, -86.1454, 49.0909, 0.46", "78.1645, -87.461, 49.6115, 0.46", "78.9328, -89.9115, 50.2343, 0.46", "79.255, -91.0475, 50.2772, 1.14", "79.86, -92.9849, 49.8962, 1.37" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "26.3092, -1.58583, 0.346298, 0.91", "27.2074, -0.992651, 0.0728025, 0.91", "28.1912, -0.666948, -0.238184, 0.91", "29.1559, -0.511849, -0.523255, 0.91", "29.9711, -0.482161, -0.735592, 0.91", "31.7754, -0.564949, -1.12737, 0.91", "33.6253, -0.716102, -1.47344, 0.91", "35.2412, -0.952271, -1.79127, 0.91", "36.4082, -1.19309, -2.01564, 0.91", "38.1053, -1.6469, -2.32723, 0.68", "39.4635, -2.0822, -2.53639, 0.68", "40.4096, -2.42947, -2.59533, 0.68" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "1.37068, 10.1233, -12.0524, 1.59", "2.18631, 9.83841, -13.3068, 1.59", "3.03819, 9.56793, -14.7853, 1.37", "3.92902, 9.32001, -16.5861, 1.37", "4.65914, 9.16291, -18.1549, 1.37", "5.43979, 8.99493, -19.8322, 1.37", "6.05239, 8.86311, -21.1485, 1.14", "6.93807, 8.70013, -23.2266, 1.14", "7.76973, 8.62626, -25.4751, 1.14", "7.97158, 8.64586, -26.0928, 1.14" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "1.37068, 10.1233, -12.0524, 1.82", "1.33783, 11.2017, -13.4066, 1.82", "1.45675, 13.024, -15.7781, 1.82", "1.6217, 14.4746, -17.5787, 1.82", "1.70982, 15.3535, -18.5878, 1.82", "1.81971, 16.4235, -19.7416, 1.37", "1.94595, 17.7086, -21.1216, 1.37", "2.09595, 19.0342, -22.578, 1.37", "2.23051, 20.1669, -23.7883, 1.37", "2.36085, 21.5266, -25.2754, 1.14", "2.44596, 22.7648, -26.7291, 1.14", "2.52642, 24.124, -28.4771, 1.14", "2.65715, 25.7098, -30.7427, 1.14", "2.76518, 26.869, -32.6426, 1.14", "2.82927, 27.6078, -34.0387, 1.14", "2.86983, 28.3946, -35.9183, 1.14", "2.87986, 28.9395, -37.5647, 1.37", "2.95558, 29.4453, -39.7197, 1.37", "3.14008, 29.7561, -41.8259, 1.37", "3.28983, 29.8608, -42.9951, 0.91", "3.67664, 30.0235, -45.6738, 0.91", "4.01038, 30.0854, -47.658, 0.91", "4.6009, 30.1474, -50.7263, 0.91", "5.3392, 30.2159, -53.6643, 0.91", "5.96642, 30.2461, -55.4965, 0.91" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "5.50637, 5.15969, 8.08766, 0.91", "7.0822, 5.64552, 8.63266, 0.91", "9.10078, 6.26786, 9.33077, 1.14", "11.2409, 6.92766, 10.0709, 1.14", "12.1327, 7.20261, 10.3793, 1.14", "13.3098, 7.56551, 10.7864, 1.37" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "5.50637, 5.15969, 8.08766, 1.14", "5.60593, 6.36283, 7.86323, 1.14", "5.68283, 7.21248, 7.71573, 1.14", "5.73942, 7.85888, 7.58732, 1.14", "5.8204, 8.72602, 7.41066, 1.14", "5.91997, 9.79216, 7.19347, 1.14", "6.04274, 11.1067, 6.92566, 0.91", "6.13512, 11.9029, 6.74651, 0.91", "6.23529, 12.7304, 6.54384, 0.91", "6.3487, 13.8542, 6.26185, 0.91" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-11.0912, 13.4945, -13.216, 1.14", "-11.2714, 13.6283, -13.252, 1.14", "-12.0876, 14.2347, -13.415, 1.14", "-12.8598, 14.8083, -13.5692, 0.91", "-13.6904, 15.4253, -13.735, 0.91", "-14.714, 16.1857, -13.9395, 0.91" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-11.0912, 13.4945, -13.216, 1.14", "-12.1933, 13.988, -14.3028, 1.14", "-13.9959, 14.7123, -15.9509, 0.91", "-15.2366, 15.1527, -17.1649, 0.91", "-16.2898, 15.4905, -18.2713, 1.14", "-17.4013, 15.7813, -19.5448, 0.91", "-18.7191, 16.0541, -21.2011, 1.14", "-20.2565, 16.2821, -23.4131, 1.14", "-21.683, 16.4433, -25.496, 1.14", "-22.9427, 16.4733, -27.4474, 1.14", "-24.0171, 16.3825, -29.3223, 0.68", "-24.7261, 16.216, -30.6792, 0.68", "-25.3384, 15.9004, -32.2057, 0.68" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-19.3893, -8.77401, 9.2087, 0.91", "-20.4278, -8.99418, 9.57471, 0.91", "-21.5743, -9.12271, 9.75991, 0.91", "-22.7311, -9.13013, 9.71665, 0.91", "-23.3218, -9.08855, 9.57705, 0.68", "-24.7465, -8.96788, 8.98354, 0.46", "-25.5303, -8.92376, 8.54397, 0.46", "-26.3554, -8.89788, 7.8466, 0.46", "-27.0461, -8.91287, 7.12788, 0.68", "-27.7705, -8.95256, 6.29587, 0.68", "-28.6801, -8.99992, 5.26889, 0.68", "-29.3711, -9.05654, 4.53543, 0.68", "-30.1585, -9.15418, 3.76537, 0.68", "-30.6324, -9.22982, 3.38677, 0.46", "-31.3155, -9.37344, 2.95323, 0.46", "-32.6033, -9.67968, 2.28431, 0.46", "-33.5153, -9.86288, 1.83478, 0.46", "-34.2904, -9.98461, 1.43228, 0.46", "-35.3431, -10.1183, 0.808344, 0.46", "-36.127, -10.2218, 0.265203, 0.23", "-37.0461, -10.3932, -0.471838, 0.46", "-37.9704, -10.6402, -1.32711, 0.46", "-38.5707, -10.8041, -1.92397, 0.68", "-38.9208, -10.8655, -2.28569, 0.68", "-39.0892, -10.875, -2.4636, 0.46", "-39.6995, -10.8618, -3.02041, 0.46", "-40.3196, -10.8414, -3.46961, 0.46", "-40.7219, -10.8447, -3.73131, 0.46", "-41.5475, -10.8441, -4.28861, 0.46", "-42.502, -10.802, -4.98121, 0.46", "-43.2935, -10.742, -5.60538, 0.68", "-44.0631, -10.6829, -6.24864, 0.68", "-44.6472, -10.644, -6.75336, 0.68", "-45.1455, -10.6347, -7.20988, 0.68", "-45.8361, -10.6867, -7.84898, 0.46", "-46.4142, -10.7745, -8.37897, 0.46", "-47.0249, -10.9074, -8.88703, 0.46", "-47.278, -10.9733, -9.03231, 0.46", "-47.7567, -11.1102, -9.19762, 0.46", "-48.5022, -11.3745, -9.40735, 0.23", "-48.9562, -11.5571, -9.52601, 0.68", "-49.6216, -11.7721, -9.7144, 0.46", "-50.1789, -11.9481, -9.90695, 0.46", "-50.7859, -12.1706, -10.1675, 0.68", "-51.5234, -12.4516, -10.5079, 0.46", "-51.7454, -12.5301, -10.617, 0.91", "-52.6854, -12.7934, -11.085, 0.23", "-53.4434, -12.9349, -11.4866, 0.23", "-53.9405, -12.9946, -11.7637, 0.46", "-54.7301, -13.0121, -12.1972, 1.14", "-55.4089, -12.9876, -12.5767, 0.23", "-55.9329, -12.9664, -12.906, 0.23", "-56.7128, -12.9604, -13.4609, 0.23", "-57.4491, -12.9843, -14.0093, 0.23", "-58.0696, -13.0858, -14.5331, 0.68", "-58.6068, -13.273, -15.0599, 0.23", "-59.2492, -13.574, -15.7281, 0.23", "-59.8301, -13.9155, -16.3258, 0.23", "-60.2524, -14.2217, -16.7576, 0.68", "-60.7921, -14.7232, -17.3502, 0.46", "-60.966, -14.9216, -17.547, 0.68" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-19.3893, -8.77401, 9.2087, 1.14", "-18.7331, -9.56233, 10.9, 1.14", "-18.1927, -10.302, 12.4859, 0.91", "-17.7831, -11.0006, 14.0078, 0.91", "-17.4663, -11.7006, 15.6253, 0.91", "-17.2985, -12.248, 17.0121, 0.91", "-17.213, -13.055, 19.2006, 0.91", "-17.5438, -13.4808, 20.6181, 0.91", "-18.4457, -13.5892, 21.5081, 0.91", "-19.9111, -13.5567, 22.3782, 0.91", "-21.7241, -13.4852, 23.3053, 0.68", "-23.4641, -13.4773, 24.0878, 0.68", "-24.5933, -13.5547, 24.5943, 0.68", "-25.7152, -13.7894, 25.2693, 0.68", "-27.1869, -14.5251, 26.7154, 0.68", "-27.9754, -15.1795, 27.8993, 0.91", "-28.4458, -15.6939, 28.807, 0.91", "-29.1819, -16.5561, 30.303, 0.68", "-29.9753, -17.5237, 31.8522, 0.68", "-30.775, -18.5409, 33.34, 0.68", "-31.8209, -19.922, 35.1123, 0.91", "-32.6468, -21.0103, 36.4002, 0.91", "-33.9539, -22.4681, 38.1472, 0.91", "-34.7112, -23.2884, 39.0599, 0.91", "-35.2509, -23.8621, 39.6105, 0.91", "-36.1981, -24.8182, 40.4276, 0.91", "-37.6497, -26.3856, 41.5465, 0.91", "-39.3928, -28.3342, 42.9418, 0.46" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.444039, -12.3909, 17.3708, 2.73", "-0.18672, -13.3175, 17.1611, 2.73", "-0.881619, -14.3384, 16.9301, 2.51" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.444039, -12.3909, 17.3708, 2.05", "1.045, -13.1401, 17.1022, 2.05", "1.46475, -13.6635, 16.9146, 1.82", "1.76339, -14.0358, 16.7811, 1.82" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-14.9486, 36.4917, 0.0, 0.46", "-20.4513, 50.4459, 0.0, 0.46", "-25.954, 64.4002, 0.0, 0.46" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "40.4096, -2.42947, -2.59533, 0.46", "40.8903, -2.801, -1.00236, 0.46", "41.9518, -3.64812, 1.8507, 0.46", "42.7466, -4.20139, 3.52133, 0.46", "43.7736, -4.7579, 5.20023, 0.46", "44.7244, -5.17273, 6.42853, 0.23", "45.5612, -5.44817, 7.41007, 0.23", "46.7085, -5.78702, 8.5395, 0.23", "47.8057, -6.01385, 9.56245, 0.46", "49.0932, -6.2129, 10.7239, 0.46", "50.6459, -6.412, 12.0847, 0.46", "52.2961, -6.52874, 13.6223, 0.46", "54.2322, -6.57291, 15.6705, 0.46", "55.9522, -6.57596, 17.7373, 0.46" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "40.4096, -2.42947, -2.59533, 0.46", "40.7825, -3.06771, -4.16498, 0.46", "41.1375, -3.48427, -5.56584, 0.46", "41.6479, -3.87993, -7.45679, 0.46", "41.993, -4.01839, -8.5779, 0.46", "42.6909, -4.13199, -10.4401, 0.46", "43.2464, -4.15889, -11.584, 0.46", "44.2778, -4.06429, -12.9683, 0.46", "45.0598, -4.04203, -13.5147, 0.46", "46.0434, -4.09199, -13.9681, 0.68", "46.9888, -4.20062, -14.4202, 0.68", "48.302, -4.44602, -15.1415, 0.46", "50.3676, -4.95831, -16.5654, 0.46", "52.3336, -5.55956, -18.2965, 0.46", "53.6424, -6.00991, -19.8014, 0.46", "55.1874, -6.52739, -22.0423, 0.46", "56.4504, -6.84957, -24.2835, 0.46", "57.2126, -6.84203, -25.874, 0.46", "57.7287, -6.58333, -27.1609, 0.46", "58.4, -5.79708, -28.8003, 0.46", "58.7569, -5.1328, -29.355, 0.46", "59.2521, -4.12604, -29.8532, 0.46", "60.3632, -1.91873, -30.6882, 0.68", "61.1844, -0.387399, -31.234, 0.68", "62.233, 1.4237, -32.0418, 0.68", "62.9819, 2.75293, -32.7747, 0.46", "64.0363, 4.57222, -34.039, 0.68", "64.4228, 5.25687, -34.593, 0.46", "64.9613, 6.21765, -35.4365, 0.46", "66.1528, 8.45428, -37.5256, 0.46", "66.8328, 9.76048, -38.7544, 0.68", "67.4451, 10.8953, -39.823, 0.46", "68.2469, 12.2965, -41.2214, 0.68", "68.7966, 13.1309, -42.0893, 0.46", "69.9307, 14.4943, -43.4701, 0.46", "70.9544, 15.5414, -44.5165, 0.46", "72.6487, 16.8727, -46.0496, 0.46", "73.9249, 17.5833, -47.0814, 0.46", "75.2759, 17.9873, -48.0343, 0.23", "76.857, 18.2328, -49.0482, 0.23" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "13.3098, 7.56551, 10.7864, 0.91", "14.3636, 7.27805, 11.8551, 0.91", "15.0351, 7.01259, 12.6313, 0.91", "16.2284, 6.41754, 14.2007, 0.91", "17.1075, 5.86748, 15.5432, 1.14", "18.074, 5.12232, 17.2062, 0.91", "18.7956, 4.39585, 18.6053, 0.91", "19.5442, 3.47425, 20.3647, 1.14", "19.9317, 2.85999, 21.4692, 0.91", "20.3104, 1.98162, 22.878, 0.91", "20.4394, 1.38601, 23.7118, 0.91", "20.4508, 0.100466, 25.2112, 1.14" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "13.3098, 7.56551, 10.7864, 1.37", "13.1209, 8.78289, 10.2746, 1.37", "12.7501, 10.371, 9.47696, 0.91", "12.3647, 11.8241, 8.61574, 0.91", "11.9117, 13.743, 7.39584, 0.91", "11.5009, 15.9309, 5.93103, 0.91", "11.3446, 17.5515, 4.83551, 0.91", "11.3294, 18.9373, 3.84694, 0.91", "11.4537, 20.634, 2.53324, 0.91", "11.6821, 21.9979, 1.41672, 0.91", "12.1126, 23.5432, 0.231388, 0.91", "12.9363, 25.5426, -1.17797, 0.91", "13.4885, 26.7252, -1.8866, 0.91", "13.5846, 26.928, -2.00367, 0.91", "14.3835, 28.9998, -3.3067, 0.68", "14.8209, 30.5739, -4.5455, 0.68", "15.0402, 31.7228, -5.69671, 0.46", "15.1085, 32.5398, -6.65155, 0.68", "15.1314, 33.829, -8.2771, 0.68", "15.1164, 35.3254, -10.2598, 0.68", "15.0968, 36.4264, -11.8107, 0.68", "15.0197, 37.532, -13.4846, 0.68", "14.8625, 38.6386, -15.1307, 0.23", "14.6517, 39.9395, -17.0403, 0.23", "14.5595, 40.5213, -17.7698, 0.23", "14.4794, 41.1396, -18.382, 0.23" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-14.714, 16.1857, -13.9395, 0.91", "-15.6764, 16.6292, -15.2555, 0.91", "-16.7457, 17.0903, -16.9283, 0.91", "-17.8775, 17.5037, -18.7682, 0.91", "-18.6773, 17.7959, -20.0685, 0.91", "-20.0096, 18.2826, -22.2343, 0.91", "-20.9866, 18.6395, -23.8227, 0.91", "-21.9538, 18.992, -25.5381, 0.91", "-22.8493, 19.2566, -27.3244, 0.68" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-14.714, 16.1857, -13.9395, 0.68", "-14.6722, 17.5542, -14.2607, 0.68", "-14.6873, 18.9337, -14.5155, 0.68", "-14.8276, 20.2664, -14.6752, 0.91", "-15.0648, 21.6901, -14.948, 0.91", "-15.1891, 22.4357, -15.0909, 0.68", "-15.3193, 23.2173, -15.2407, 0.68", "-15.6092, 24.5692, -15.5079, 0.68", "-16.1699, 26.6202, -15.8761, 0.68", "-16.8222, 28.4735, -16.2413, 0.91" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-0.881619, -14.3384, 16.9301, 1.14", "-2.04294, -14.6784, 16.2976, 1.14", "-4.07506, -15.1398, 15.0894, 1.14", "-6.14961, -15.4699, 13.741, 1.14", "-7.86013, -15.6462, 12.5489, 1.14", "-9.60345, -15.7533, 11.2565, 0.91", "-11.0389, -15.8029, 10.1631, 1.14", "-12.4886, -15.7769, 8.9668, 0.91", "-14.1707, -15.6089, 7.44956, 0.91", "-15.3832, -15.3577, 6.30152, 1.14", "-16.1132, -15.15, 5.58108, 1.37", "-16.3994, -15.0589, 5.27404, 1.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-0.881619, -14.3384, 16.9301, 1.14", "-0.934589, -17.3758, 16.5705, 1.14", "-0.962094, -18.953, 16.3838, 1.14", "-1.00204, -21.2437, 16.1126, 1.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "1.76339, -14.0358, 16.7811, 1.37", "3.43852, -14.3374, 16.2183, 1.37", "5.15211, -14.6577, 15.4601, 1.37", "6.19633, -14.905, 14.9298, 1.37", "7.8875, -15.3526, 14.049, 1.37", "9.89046, -15.902, 12.9988, 1.37", "11.3546, -16.301, 12.1832, 1.37", "13.1034, -16.8077, 11.1813, 1.37", "14.8957, -17.4007, 10.1468, 1.37", "15.8887, -17.7811, 9.56649, 1.37", "17.9431, -18.8394, 8.29903, 1.14", "19.8714, -20.2025, 7.1036, 1.14", "21.4658, -21.4253, 6.16169, 1.14", "22.4942, -22.306, 5.56894, 1.14", "23.2848, -23.0902, 5.08753, 1.14", "24.6352, -24.8587, 4.14294, 1.14", "25.4557, -26.751, 3.41692, 1.14" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "1.76339, -14.0358, 16.7811, 1.82", "0.80521, -16.0851, 17.3015, 1.82", "-0.0057122, -17.8196, 17.7419, 1.82", "-0.932999, -19.8028, 18.2455, 1.59", "-1.63103, -21.2958, 18.6246, 1.59", "-2.23763, -22.5932, 18.954, 1.59", "-3.18515, -24.6198, 19.4687, 1.82" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "20.4508, 0.100466, 25.2112, 0.68", "19.1018, 0.633384, 25.9177, 0.68", "17.0941, 1.27626, 26.8409, 1.14", "15.7544, 1.62933, 27.4557, 0.91", "14.2433, 1.95398, 28.19, 0.68", "13.3403, 2.0997, 28.6664, 0.68", "12.1956, 2.24124, 29.3335, 0.91", "10.4824, 2.35371, 30.4084, 0.68", "9.19744, 2.35067, 31.3115, 0.68", "8.38181, 2.28618, 32.024, 0.91", "7.45993, 2.13451, 32.9614, 0.91", "6.48576, 1.93343, 34.0242, 0.91", "5.64561, 1.72358, 34.9807, 0.91", "5.05892, 1.55343, 35.6258, 0.91", "4.22944, 1.31743, 36.4501, 0.91", "3.71694, 1.20133, 36.9055, 0.91", "2.51857, 0.939326, 37.9245, 0.68", "1.33281, 0.642506, 38.9192, 0.68", "-0.0142355, 0.296641, 40.005, 0.68", "-0.983735, 0.0445311, 40.782, 0.68", "-2.20958, -0.226091, 41.7381, 0.68", "-3.264, -0.411682, 42.6441, 0.68", "-4.30234, -0.571618, 43.7393, 0.91" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "20.4508, 0.100466, 25.2112, 0.68", "21.0294, 0.247641, 26.0023, 0.68", "22.375, 0.501351, 27.9516, 0.68", "22.9204, 0.583801, 28.8493, 0.68", "24.2497, 0.695585, 31.2774, 0.68", "25.1874, 0.685429, 33.0371, 0.68", "26.1517, 0.604646, 34.8341, 0.68", "27.009, 0.486362, 36.4132, 0.68", "27.8249, 0.276863, 37.7705, 0.68", "28.5128, -0.0233326, 38.9298, 0.68", "29.0907, -0.431975, 39.9095, 0.68", "29.6652, -0.933403, 40.9095, 0.68", "30.2825, -1.53658, 42.1395, 0.68", "30.9408, -2.21671, 43.6673, 0.46", "31.4612, -2.75263, 44.8795, 0.46", "32.1562, -3.48864, 46.6545, 0.68", "33.021, -4.49525, 49.3159, 0.68", "33.5955, -5.31494, 51.6157, 0.68", "33.8819, -5.86052, 53.3381, 0.46" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-16.3994, -15.0589, 5.27404, 0.68", "-16.1684, -13.6709, 3.33062, 0.68", "-15.8067, -12.3245, 1.57064, 0.68", "-15.6339, -11.7733, 0.884649, 0.46", "-15.2088, -10.3537, -0.8412, 0.68", "-14.8708, -8.98571, -2.52034, 0.68", "-14.6526, -7.80632, -4.01453, 0.68", "-14.4683, -6.60646, -5.53171, 0.68", "-14.4086, -5.88033, -6.5404, 0.68", "-14.4584, -5.07237, -7.90326, 0.91", "-14.7315, -4.20222, -9.77783, 0.91", "-15.0853, -3.75964, -11.1578, 0.91", "-15.257, -3.6861, -11.6117, 0.68", "-16.3354, -3.67744, -13.6838, 0.68", "-17.7678, -3.99421, -15.7243, 0.68", "-18.2965, -4.19057, -16.268, 0.68", "-19.0597, -4.54265, -16.9312, 0.46", "-20.4651, -5.23701, -17.941, 0.23", "-21.3868, -5.68703, -18.4504, 0.23", "-23.1184, -6.49761, -18.9037, 0.23", "-24.3064, -6.98764, -19.0294, 0.23" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-16.3994, -15.0589, 5.27404, 1.14", "-17.4187, -14.886, 4.97614, 1.14", "-19.6619, -14.5053, 4.32045, 1.14", "-21.037, -14.272, 3.91852, 1.14", "-22.8314, -13.9675, 3.39403, 1.14" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "25.4557, -26.751, 3.41692, 1.37", "25.6355, -26.9496, 3.34239, 1.37", "27.1285, -28.3729, 2.92976, 1.37", "28.2212, -29.2769, 2.72771, 0.91", "29.6959, -30.3668, 2.55118, 1.14", "30.8573, -31.1977, 2.48862, 0.68", "32.8429, -32.6121, 2.54156, 0.68", "34.5626, -33.7898, 2.74912, 0.68", "35.8702, -34.6383, 3.03959, 0.68", "37.6266, -35.6972, 3.50646, 0.68", "39.0829, -36.5097, 3.94264, 0.68", "41.2283, -37.6302, 4.65114, 0.91", "42.3354, -38.1813, 5.06183, 0.68", "43.5777, -38.7464, 5.52461, 0.68", "44.5153, -39.1805, 5.88711, 0.68", "45.8529, -39.8094, 6.3934, 0.68", "47.2443, -40.4514, 6.869, 0.23", "48.6329, -41.1098, 7.29115, 0.68", "50.4426, -42.0838, 7.80693, 0.46", "51.9237, -42.9649, 8.18409, 0.46", "53.2845, -43.8241, 8.51349, 0.46", "53.9395, -44.2226, 8.67163, 0.68", "55.739, -45.2326, 9.08665, 0.68", "57.0047, -45.8579, 9.35324, 0.46", "58.0116, -46.2624, 9.52491, 0.46", "58.8107, -46.4909, 9.6346, 0.46", "61.4896, -47.0146, 10.0072, 0.68", "62.5611, -47.2075, 10.1398, 0.68", "63.078, -47.3157, 10.1849, 0.68", "64.6705, -47.7096, 10.2782, 0.23", "65.464, -48.0124, 10.2861, 0.46", "66.9249, -48.8731, 10.205, 0.23", "68.602, -50.3802, 9.96655, 0.91", "70.265, -52.4136, 9.5886, 0.91", "70.5909, -52.9078, 9.46404, 0.91", "71.7831, -55.0656, 8.80008, 0.68", "72.6112, -56.7412, 8.14989, 0.68", "73.5713, -58.8659, 7.10441, 0.91", "74.4486, -60.7551, 5.91661, 0.68", "75.2728, -62.2979, 4.78834, 1.14", "75.9405, -63.2385, 3.98139, 0.91", "76.9172, -64.2081, 3.01701, 0.91", "78.686, -65.4629, 1.60829, 0.91", "80.7028, -66.5637, 0.259155, 0.46", "82.144, -67.2773, -0.586799, 0.46", "84.4689, -68.4997, -1.83604, 0.46", "86.3295, -69.5374, -2.82679, 0.68", "88.1809, -70.6137, -3.76318, 0.46", "90.7009, -72.0857, -4.92036, 0.68", "91.728, -72.7491, -5.36121, 0.46", "93.2059, -73.8246, -6.06726, 0.23", "94.2153, -74.7175, -6.58741, 0.23", "94.8527, -75.4086, -6.98566, 0.46", "95.7499, -76.5641, -7.5311, 0.68", "97.137, -78.181, -8.05638, 0.23" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "25.4557, -26.751, 3.41692, 0.68", "26.2976, -24.7597, -0.953463, 0.68", "27.1287, -23.3983, -3.50898, 0.68", "28.1188, -22.1542, -5.50651, 0.68", "29.0998, -21.148, -6.96334, 0.68", "30.0797, -20.2829, -8.15658, 0.46", "31.3375, -19.3612, -9.47819, 0.46", "32.8253, -18.5176, -10.4313, 0.46", "34.3959, -17.8686, -11.1678, 0.68", "35.8694, -17.4695, -11.7604, 0.68", "36.6496, -17.3708, -12.0628, 0.68", "39.2579, -17.256, -13.2335, 0.46", "40.5175, -17.218, -13.8916, 0.46", "42.2461, -17.1658, -14.8387, 0.46", "43.9434, -17.1834, -15.7306, 0.46", "46.122, -17.2835, -16.8071, 0.46", "48.7457, -17.4569, -17.9854, 0.46", "51.3476, -17.709, -18.9221, 0.23", "52.7239, -17.8826, -19.3264, 0.46", "54.2207, -18.1352, -19.7063, 0.23", "55.8624, -18.4428, -20.0072, 0.68", "57.262, -18.6502, -20.23, 0.23", "59.4897, -18.9656, -20.5288, 0.46", "61.41, -19.1823, -20.7786, 0.46", "63.544, -19.3365, -21.1865, 0.23", "66.3132, -19.471, -21.8936, 0.68", "69.0223, -19.6179, -22.7536, 0.46", "71.0636, -19.7982, -23.512, 0.46", "73.1959, -20.1113, -24.4031, 0.68", "76.2265, -20.7598, -25.718, 0.46", "78.0272, -21.3676, -26.4782, 0.46", "79.0696, -21.9508, -26.9149, 0.46", "80.7416, -23.3971, -27.6556, 0.46", "81.902, -24.8246, -28.2579, 0.46", "82.379, -25.6849, -28.6113, 0.46", "83.1131, -27.7013, -29.4775, 0.46", "83.6151, -29.5563, -30.4948, 0.23", "84.0736, -31.5784, -31.8583, 0.23", "84.2555, -32.472, -32.5504, 0.68", "84.6893, -34.3099, -34.1024, 0.23", "85.2194, -35.9657, -35.6094, 0.68", "86.0157, -37.8994, -37.4702, 0.23", "86.698, -39.2545, -38.8233, 0.23", "87.2639, -40.1707, -39.7124, 0.68", "88.0554, -41.2775, -40.7499, 0.23", "89.4623, -43.0168, -42.1831, 0.68", "91.2587, -45.114, -43.6576, 0.23" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-3.18515, -24.6198, 19.4687, 1.37", "-3.91281, -25.4318, 19.3966, 1.37", "-4.3518, -25.9217, 19.3531, 1.37", "-5.27962, -26.957, 19.2612, 1.37", "-5.87909, -27.626, 19.2018, 1.37", "-6.96853, -28.8417, 19.0938, 1.59", "-7.83086, -29.804, 19.0084, 1.59" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-3.18515, -24.6198, 19.4687, 1.14", "-4.06762, -24.8804, 20.8835, 1.14", "-5.83729, -25.2931, 23.5578, 1.14", "-7.39378, -25.6469, 25.883, 1.14", "-8.68885, -25.896, 27.6942, 1.14", "-9.71557, -26.1002, 29.0536, 0.91", "-11.2932, -26.4499, 31.0603, 0.91", "-12.7922, -26.8208, 32.8442, 0.91", "-13.9495, -27.1831, 34.1452, 0.91", "-15.1618, -27.6993, 35.4806, 0.91", "-15.892, -28.1097, 36.2218, 1.14", "-17.102, -29.0388, 37.2898, 1.14", "-18.1559, -30.311, 37.8183, 1.14", "-18.8091, -31.1953, 37.7596, 1.14", "-19.6596, -32.2441, 37.5622, 0.91", "-21.7511, -34.301, 37.2694, 0.91", "-23.7958, -35.6354, 37.4229, 0.91", "-25.2726, -36.3463, 37.8413, 1.14", "-26.8623, -36.9666, 38.6629, 0.91", "-28.9685, -37.6182, 40.3545, 0.91", "-30.8602, -38.0329, 42.5095, 0.91", "-32.1367, -38.1188, 44.3678, 0.91", "-33.0761, -38.0409, 45.9582, 0.91", "-33.7003, -37.9021, 47.1001, 0.91", "-34.6986, -37.6266, 48.8506, 0.91", "-35.1865, -37.5082, 49.46, 1.14", "-37.1464, -36.9835, 51.5658, 1.14", "-38.5636, -36.5823, 52.7565, 1.14", "-40.5153, -36.0417, 54.1124, 0.91", "-42.6372, -35.5613, 55.3638, 0.91", "-45.4823, -35.1735, 56.8067, 1.14" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-22.8314, -13.9675, 3.39403, 0.91", "-24.666, -14.5777, 3.05494, 0.91", "-26.8722, -15.2594, 2.85044, 0.68", "-29.088, -15.8497, 2.74941, 0.68", "-31.1256, -16.2999, 2.72735, 0.91", "-32.1547, -16.4685, 2.70496, 0.68", "-34.3641, -16.7181, 2.64731, 0.68", "-35.9251, -16.7693, 2.71222, 0.68", "-36.9739, -16.7016, 2.72844, 0.91", "-37.8159, -16.5504, 2.63507, 0.68", "-39.5937, -16.1258, 2.1345, 0.68", "-41.0702, -15.7998, 1.51782, 1.37", "-41.5278, -15.713, 1.27223, 0.91", "-43.3771, -15.488, 0.131543, 0.91", "-45.0298, -15.4221, -0.912601, 0.91", "-47.0043, -15.4363, -2.11415, 0.91", "-49.4706, -15.5318, -3.5276, 0.68", "-51.2337, -15.6414, -4.46086, 0.68", "-52.6288, -15.7583, -5.10469, 0.46", "-54.0031, -15.9136, -5.58537, 0.46", "-56.0395, -16.1375, -6.12868, 0.68", "-58.1809, -16.3724, -6.53935, 0.68", "-60.5001, -16.6193, -6.84963, 0.46", "-63.6013, -16.8946, -7.12501, 0.46", "-66.8215, -17.0611, -7.31533, 0.46", "-68.313, -17.1178, -7.37813, 0.68", "-69.5595, -17.1726, -7.40721, 0.68", "-71.9198, -17.3293, -7.38652, 0.23", "-73.51, -17.4422, -7.38223, 0.46", "-75.3933, -17.582, -7.3624, 0.23", "-77.1189, -17.6856, -7.31761, 0.23", "-77.5502, -17.6997, -7.29321, 0.46", "-80.2778, -17.6323, -7.04753, 0.23", "-81.5241, -17.5778, -6.91313, 0.23", "-83.6307, -17.4778, -6.66116, 0.91", "-85.8335, -17.327, -6.35162, 0.91", "-87.9989, -17.0184, -5.96572, 0.91", "-89.5246, -16.6776, -5.62373, 1.14" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-22.8314, -13.9675, 3.39403, 0.46", "-22.9081, -14.3239, 4.23178, 0.46", "-22.959, -14.6359, 5.01747, 0.46", "-23.0114, -15.0378, 6.04077, 0.68", "-23.0881, -15.8982, 8.20222, 0.68", "-23.1458, -16.7465, 10.2803, 0.68", "-23.175, -17.4286, 11.9001, 0.68", "-23.21, -17.8772, 13.0563, 0.91", "-23.3244, -18.3191, 14.2969, 0.91", "-23.5759, -18.7516, 15.5826, 0.91", "-23.9578, -19.0386, 16.478, 0.91", "-24.7475, -19.2092, 17.2732, 0.68", "-25.8272, -19.2832, 17.9718, 0.68", "-27.6642, -19.3188, 18.9234, 0.91", "-29.4592, -19.3192, 19.7154, 0.91", "-31.4928, -19.304, 20.5759, 0.68", "-33.3583, -19.2971, 21.4136, 0.68", "-34.8324, -19.3461, 22.1958, 0.68", "-36.1074, -19.5764, 23.2433, 0.68", "-36.4209, -19.7109, 23.6548, 1.14", "-37.0663, -20.1621, 24.7329, 1.14", "-37.7813, -20.8076, 26.0388, 1.14", "-38.4372, -21.459, 27.0844, 0.91", "-39.1697, -22.1385, 27.9967, 0.91", "-40.5734, -23.3154, 29.4841, 0.91", "-41.6668, -24.129, 30.4995, 0.91", "-42.4985, -24.6746, 31.2092, 1.14", "-43.6551, -25.3318, 32.2226, 0.68", "-44.7263, -25.8388, 33.3271, 0.68", "-45.2723, -26.1077, 34.1426, 0.68", "-45.4842, -26.2411, 34.726, 0.91", "-45.8881, -26.4373, 36.4009, 0.91", "-46.2024, -26.5662, 38.2248, 0.91", "-46.3731, -26.6958, 39.6475, 0.91", "-46.5508, -27.0084, 41.5239, 0.91", "-46.6452, -27.2431, 42.3266, 0.91", "-46.802, -27.6859, 43.1772, 0.91", "-47.0389, -28.6007, 43.9537, 0.91", "-47.3351, -29.9891, 44.5928, 0.91", "-47.5983, -30.9008, 44.8927, 0.91", "-48.2537, -32.27, 45.3053, 0.68", "-48.7587, -33.0904, 45.6116, 0.46", "-49.2913, -33.8326, 45.9903, 0.46", "-50.2711, -34.7692, 46.679, 0.46", "-51.0993, -35.4145, 47.3194, 0.46", "-51.9518, -36.0044, 48.0618, 0.46", "-52.9288, -36.5912, 48.979, 0.46", "-53.565, -36.8936, 49.5153, 0.46", "-54.5983, -37.2873, 50.3618, 0.68" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-7.83086, -29.804, 19.0084, 1.37", "-8.43449, -31.0626, 18.6199, 1.37", "-9.64437, -33.5851, 17.8413, 1.14", "-10.6291, -35.6382, 17.2076, 1.14", "-11.2401, -36.9119, 16.8144, 1.14", "-11.9187, -38.3269, 16.3777, 1.14", "-12.8726, -40.3156, 15.7638, 1.14" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-7.83086, -29.804, 19.0084, 0.68", "-9.16605, -29.2039, 16.53, 0.68", "-10.3023, -28.6147, 14.8493, 0.68", "-11.3344, -28.0042, 13.6707, 0.68", "-13.2447, -26.8707, 11.8137, 0.68", "-14.3709, -26.1542, 10.8132, 0.68", "-15.3835, -25.4741, 9.95123, 0.68", "-16.2934, -24.7575, 9.3089, 0.68", "-17.5719, -23.62, 8.38728, 0.23", "-19.0829, -22.251, 7.17851, 0.23", "-19.8114, -21.6665, 6.55432, 0.23", "-20.0363, -21.4977, 6.342, 0.68", "-21.4818, -20.3879, 4.9464, 0.91", "-23.4293, -18.8015, 3.09601, 0.91", "-24.9871, -17.5164, 1.68041, 0.68", "-26.7428, -16.0185, 0.229297, 0.68", "-28.2508, -14.7445, -0.998576, 0.91", "-29.7439, -13.5165, -2.24761, 0.68", "-31.7793, -11.8934, -4.04298, 0.46", "-33.1469, -10.8001, -5.31307, 0.68", "-35.0844, -9.17954, -7.29769, 0.46", "-36.4264, -8.04091, -8.77805, 0.46", "-38.5265, -6.37217, -11.3083, 0.46", "-40.1826, -5.16718, -13.4448, 0.46", "-41.0691, -4.54032, -14.6704, 0.68", "-41.6808, -4.11451, -15.5881, 0.68", "-42.7035, -3.41532, -17.3189, 0.46", "-44.2466, -2.32248, -19.9269, 0.46", "-45.1859, -1.6128, -21.5611, 0.46", "-46.3445, -0.738381, -23.6896, 0.46", "-47.8247, 0.317452, -26.6686, 0.46", "-49.1463, 1.15584, -29.4116, 0.46" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-45.4823, -35.1735, 56.8067, 0.46", "-47.3439, -37.3906, 60.1717, 0.46", "-48.5051, -39.0672, 62.1606, 0.46", "-49.2104, -40.2176, 63.6161, 0.46", "-49.691, -41.02, 64.7829, 0.46", "-50.1629, -41.7392, 65.8832, 0.46", "-51.2559, -43.1896, 68.169, 0.46", "-52.5645, -44.7561, 70.7447, 0.68", "-54.2293, -46.373, 73.6744, 0.68", "-56.2408, -47.8792, 76.839, 0.68", "-57.7001, -48.7467, 78.934, 0.68", "-59.1931, -49.4857, 80.6537, 0.46", "-60.9624, -50.2499, 82.2229, 0.46", "-62.3346, -50.7952, 83.2444, 0.46", "-63.5102, -51.2898, 83.9861, 0.68", "-65.1647, -52.1434, 85.111, 0.68", "-68.576, -54.2411, 88.0269, 0.46", "-70.7936, -55.8091, 90.348, 0.46", "-72.6111, -57.285, 92.8124, 0.46", "-72.9547, -57.5842, 93.4358, 0.46", "-74.7572, -59.2382, 97.7194, 0.46", "-75.5583, -60.0148, 100.226, 0.46", "-75.8745, -60.2883, 101.635, 0.46", "-76.4482, -60.7194, 104.655, 0.46", "-76.8832, -60.9036, 106.729, 0.46", "-77.3511, -60.9649, 108.955, 0.46" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-45.4823, -35.1735, 56.8067, 0.46", "-46.6364, -34.5904, 56.58, 0.46", "-47.185, -34.281, 56.5418, 0.23", "-48.0078, -33.8026, 56.5382, 0.23", "-49.3621, -33.0364, 56.5745, 0.23", "-49.7437, -32.8495, 56.588, 0.46", "-51.2051, -32.2152, 56.6423, 0.46", "-52.0876, -31.8575, 56.7167, 0.46", "-52.8168, -31.5827, 56.7867, 0.46", "-53.6987, -31.2859, 56.8832, 0.46", "-54.9261, -31.0054, 56.9627, 0.46", "-55.7274, -30.943, 56.9423, 0.23", "-56.5348, -31.0364, 56.8299, 0.23", "-57.151, -31.1828, 56.6906, 0.23", "-57.9873, -31.4473, 56.4771, 0.46", "-58.8545, -31.7438, 56.2512, 0.46", "-59.9023, -32.1083, 56.0613, 0.46", "-60.485, -32.3319, 56.0061, 0.23", "-61.5422, -32.7505, 55.9857, 0.23", "-62.1769, -32.9738, 56.0165, 0.23", "-63.3979, -33.2884, 56.1383, 0.23", "-64.6909, -33.5244, 56.2931, 0.23", "-65.5029, -33.6325, 56.3865, 0.46", "-66.7221, -33.7428, 56.4566, 0.46", "-68.0729, -33.8326, 56.4629, 0.46", "-69.2478, -33.8642, 56.4069, 0.46", "-70.1319, -33.8489, 56.355, 0.68", "-71.4723, -33.7875, 56.2519, 0.46", "-72.8624, -33.6863, 56.1761, 0.46", "-74.0969, -33.5507, 56.1474, 0.46", "-75.5375, -33.3743, 56.1824, 0.46", "-76.7346, -33.2297, 56.2871, 0.46", "-78.0409, -33.0479, 56.4834, 0.46", "-78.6379, -32.9524, 56.6098, 0.46", "-79.5197, -32.7872, 56.8542, 0.46", "-80.7753, -32.5063, 57.2207, 0.46", "-81.6062, -32.2851, 57.4532, 0.46", "-81.9997, -32.1596, 57.5464, 0.46", "-83.0561, -31.7666, 57.7899, 0.46", "-84.262, -31.3425, 58.0001, 0.91", "-85.2046, -31.0266, 58.0988, 0.68", "-86.1883, -30.7058, 58.1074, 0.68", "-86.9626, -30.4903, 58.0461, 0.68", "-87.5897, -30.3403, 57.9412, 0.68", "-88.6523, -30.11, 57.6485, 0.68", "-89.4021, -29.9602, 57.3616, 0.68", "-90.9633, -29.5916, 56.6098, 0.68", "-91.8142, -29.4145, 56.1716, 0.68", "-92.852, -29.1961, 55.6011, 0.68", "-93.5887, -29.0158, 55.1751, 0.68", "-94.2017, -28.812, 54.8109, 0.68", "-95.026, -28.4892, 54.2517, 0.68" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-54.5983, -37.2873, 50.3618, 0.46", "-55.8602, -37.2098, 48.8505, 0.46", "-57.5806, -37.1042, 46.79, 0.23", "-59.4832, -36.9875, 44.5113, 0.23", "-60.3386, -36.935, 43.4866, 0.23" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-54.5983, -37.2873, 50.3618, 0.46", "-55.3926, -36.8364, 51.2438, 0.46", "-56.7113, -36.0878, 52.708, 0.46", "-58.0075, -35.352, 54.1472, 0.68", "-59.0058, -34.7853, 55.2557, 0.68" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-12.8726, -40.3156, 15.7638, 0.91", "-14.0648, -41.1203, 16.3656, 0.91", "-15.1462, -41.9601, 16.9311, 0.91", "-15.985, -42.739, 17.3095, 0.68", "-16.8018, -43.7475, 17.6025, 0.68", "-17.225, -44.4152, 17.7156, 0.68", "-17.527, -45.0034, 17.799, 0.68", "-17.9444, -46.1267, 17.9325, 0.68", "-18.3369, -47.5177, 18.1397, 0.68", "-18.6582, -48.9593, 18.4112, 0.91", "-18.8529, -49.8673, 18.6093, 0.68", "-19.1307, -51.0241, 18.895, 0.68", "-19.5899, -52.6962, 19.3434, 0.68", "-20.0663, -54.0317, 19.7516, 0.68", "-20.2414, -54.434, 19.8944, 0.68", "-20.7631, -55.4499, 20.2246, 0.46", "-21.1006, -56.0672, 20.4046, 0.91", "-21.5765, -56.9324, 20.6373, 1.37", "-22.1133, -58.0082, 20.9263, 0.91", "-22.8733, -59.6003, 21.4922, 0.68", "-23.3567, -60.6318, 21.9259, 0.91", "-23.8878, -61.8189, 22.4439, 0.68", "-24.6324, -63.4244, 23.1619, 0.68", "-25.1376, -64.5018, 23.634, 0.68", "-25.7585, -65.8896, 24.217, 0.68", "-26.2253, -66.9111, 24.608, 1.14", "-27.0235, -68.4226, 25.1625, 0.68", "-27.6414, -69.4007, 25.4699, 0.68", "-28.3207, -70.326, 25.7063, 0.46", "-28.9554, -71.0861, 25.8864, 0.46", "-29.6725, -71.8989, 26.0638, 0.23", "-30.6105, -72.8889, 26.2735, 0.23", "-31.1715, -73.4621, 26.3867, 0.91", "-32.3195, -74.6532, 26.5611, 0.23", "-33.3015, -75.6852, 26.6679, 1.14", "-34.2825, -76.7696, 26.7419, 0.46", "-35.2658, -77.9533, 26.7682, 0.46", "-36.2439, -79.2971, 26.7001, 0.46", "-36.7876, -80.1751, 26.6125, 0.91", "-37.3126, -81.2004, 26.4654, 0.46", "-37.8194, -82.5322, 26.2362, 0.46", "-38.08, -83.368, 26.0816, 0.46", "-38.4489, -84.7751, 25.8352, 0.46", "-38.735, -86.0986, 25.5891, 0.46", "-38.9246, -87.0061, 25.3842, 0.91", "-39.274, -88.4133, 24.9569, 0.68", "-39.6805, -89.6747, 24.4806, 0.68", "-40.0413, -90.4612, 24.1156, 0.68", "-40.8682, -91.6231, 23.3701, 0.68", "-41.8978, -92.7051, 22.3941, 0.68", "-42.8251, -93.5599, 21.4058, 0.68", "-43.3819, -93.9951, 20.7683, 1.14", "-44.3117, -94.5883, 19.7347, 0.91", "-45.6074, -95.2323, 18.4082, 0.68", "-46.448, -95.5696, 17.5897, 0.68", "-47.4955, -95.9982, 16.5681, 0.91", "-48.8016, -96.6266, 15.3286, 0.68", "-50.0596, -97.3599, 14.2, 0.91", "-51.1065, -98.1068, 13.3898, 0.91", "-52.4039, -99.1597, 12.5844, 0.91", "-53.5584, -100.121, 12.0685, 0.68", "-54.8084, -101.22, 11.7105, 0.68", "-56.0407, -102.379, 11.5262, 0.68", "-57.5958, -103.882, 11.4578, 0.68", "-58.6937, -104.933, 11.5059, 0.68", "-59.7832, -105.918, 11.6373, 0.91", "-61.1882, -107.062, 11.879, 0.68", "-62.2609, -107.846, 12.0273, 0.68", "-63.1215, -108.419, 12.1192, 0.68", "-64.3043, -109.166, 12.2081, 0.23", "-65.2388, -109.765, 12.2678, 0.68", "-66.9389, -110.919, 12.3606, 0.23", "-68.1584, -111.806, 12.4244, 0.23", "-68.7717, -112.313, 12.4588, 0.46", "-69.6806, -113.162, 12.4753, 0.23", "-70.2635, -113.771, 12.4424, 0.23", "-70.7167, -114.333, 12.3181, 0.46", "-71.3933, -115.228, 11.9558, 0.23", "-71.9226, -115.929, 11.5615, 0.46", "-72.8459, -117.177, 10.6608, 0.46", "-73.5591, -118.111, 9.73336, 0.46", "-74.3835, -119.303, 8.38637, 0.46", "-75.1747, -120.427, 7.01446, 0.46", "-75.9141, -121.442, 5.65931, 0.46", "-76.455, -122.163, 4.62246, 0.91", "-77.7368, -123.873, 2.00614, 0.91", "-78.9152, -125.546, -0.667825, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-12.8726, -40.3156, 15.7638, 0.68", "-12.8442, -40.7793, 14.3033, 0.68", "-12.465, -41.7479, 12.2957, 0.68", "-11.8641, -42.787, 10.4107, 0.68", "-11.1372, -43.7338, 8.7415, 0.68", "-10.3326, -44.5761, 7.22037, 0.46", "-9.1824, -45.6482, 5.24424, 0.46", "-7.68651, -46.8854, 3.18229, 0.46", "-6.97332, -47.4185, 2.36569, 0.46", "-6.08146, -48.0264, 1.4429, 0.68", "-4.85704, -48.794, 0.13598, 0.46", "-3.17329, -49.7297, -1.78055, 0.68", "-1.47007, -50.5758, -3.69564, 0.46", "-0.620004, -50.9634, -4.65614, 0.46", "0.412114, -51.4481, -5.8472, 0.46", "1.90604, -52.0993, -7.49937, 0.46", "2.65106, -52.3719, -8.23645, 0.68", "4.71905, -52.9715, -10.0817, 0.23", "6.4804, -53.4565, -11.6005, 0.23", "7.7516, -53.8308, -12.6597, 0.23", "9.17166, -54.2492, -13.7399, 0.23", "10.6333, -54.6918, -14.7708, 0.23", "12.412, -55.2627, -15.9871, 0.46", "14.333, -55.8475, -17.2551, 0.46", "16.1355, -56.3693, -18.358, 0.46", "18.4462, -57.0738, -19.6998, 0.46", "20.2359, -57.6407, -20.7276, 0.46", "21.7854, -58.113, -21.5827, 0.46", "23.4718, -58.5916, -22.4421, 0.23", "24.3074, -58.8092, -22.8393, 0.46", "25.7931, -59.2019, -23.5118, 0.23", "26.9763, -59.5474, -24.0106, 0.23", "27.9599, -59.8413, -24.3872, 0.68", "28.9353, -60.1522, -24.7377, 0.23", "29.8621, -60.4893, -25.0539, 0.23", "31.8948, -61.2, -25.5638, 0.23", "33.695, -61.7671, -25.8927, 0.68", "34.4259, -62.01, -26.0148, 0.68", "34.9918, -62.227, -26.1125, 0.68", "37.5667, -63.3572, -26.603, 0.23", "40.1209, -64.7252, -27.1543, 0.23", "40.7874, -65.1786, -27.3794, 0.46", "41.8887, -66.1266, -28.0612, 0.46", "43.1762, -67.6328, -29.5722, 0.23", "43.8661, -68.6827, -30.8936, 0.46", "44.2975, -69.6152, -32.4904, 0.46", "44.6074, -70.8211, -35.1072, 0.46", "44.6709, -71.8568, -37.8662, 0.23", "44.5943, -72.5845, -40.1997, 0.68", "44.5664, -72.782, -40.9428, 0.68", "44.3991, -73.5406, -44.131, 0.23", "44.2375, -74.3145, -47.7679, 0.46", "44.1723, -74.9673, -50.7329, 0.46", "44.1012, -75.506, -53.0328, 0.46", "43.9093, -76.4406, -56.8209, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_46", "dend_41", "dend_38", "dend_31", "dend_26", "dend_23", "dend_0", "dend_45", "dend_42", "dend_40", "dend_39", "dend_33", "dend_32", "dend_28", "dend_27", "dend_25", "dend_24", "dend_14", "dend_1", "dend_44", "dend_43", "dend_35", "dend_34", "dend_30", "dend_29", "dend_16", "dend_15", "dend_11", "dend_2", "dend_37", "dend_36", "dend_22", "dend_17", "dend_13", "dend_12", "dend_6", "dend_3", "dend_21", "dend_18", "dend_8", "dend_7", "dend_5", "dend_4", "dend_20", "dend_19", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_46", "dend_41", "dend_38", "dend_31", "dend_26", "dend_23", "dend_0", "dend_45", "dend_42", "dend_40", "dend_39", "dend_33", "dend_32", "dend_28", "dend_27", "dend_25", "dend_24", "dend_14", "dend_1", "dend_44", "dend_43", "dend_35", "dend_34", "dend_30", "dend_29", "dend_16", "dend_15", "dend_11", "dend_2", "dend_37", "dend_36", "dend_22", "dend_17", "dend_13", "dend_12", "dend_6", "dend_3", "dend_21", "dend_18", "dend_8", "dend_7", "dend_5", "dend_4", "dend_20", "dend_19", "dend_10", "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L1_NGCDA_46b45974f4_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_46, id: dend_46, parent: soma_0
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_41, dend_38, dend_31, dend_26, dend_23, dend_0, dend_45, dend_42, dend_40, dend_39, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_14, dend_1, dend_44, dend_43, dend_35, dend_34, dend_30, dend_29, dend_16, dend_15, dend_11, dend_2, dend_37, dend_36, dend_22, dend_17, dend_13, dend_12, dend_6, dend_3, dend_21, dend_18, dend_8, dend_7, dend_5, dend_4, dend_20, dend_19, dend_10, dend_9]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_41, dend_38, dend_31, dend_26, dend_23, dend_0, dend_45, dend_42, dend_40, dend_39, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_14, dend_1, dend_44, dend_43, dend_35, dend_34, dend_30, dend_29, dend_16, dend_15, dend_11, dend_2, dend_37, dend_36, dend_22, dend_17, dend_13, dend_12, dend_6, dend_3, dend_21, dend_18, dend_8, dend_7, dend_5, dend_4, dend_20, dend_19, dend_10, dend_9]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_14, dend_14, dend_1, dend_1, dend_1, axon_1, axon_1, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_46(0), soma_0(0.49999981492465656)
    connect dend_41(0), soma_0(0.49999981492465656)
    connect dend_38(0), soma_0(0.49999981492465656)
    connect dend_31(0), soma_0(0.49999981492465656)
    connect dend_26(0), soma_0(0.49999981492465656)
    connect dend_23(0), soma_0(0.49999981492465656)
    connect dend_0(0), soma_0(0.49999981492465656)
    connect axon_0(0), soma_0(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.65332, -8.14477, 0.0, 3.38868 ) }
    soma_0 { pt3dadd( 2.3235, -7.30837, 0.0, 5.83516 ) }
    soma_0 { pt3dadd( 1.99367, -6.47197, 0.0, 8.36487 ) }
    soma_0 { pt3dadd( 1.66385, -5.63557, 0.0, 10.3053 ) }
    soma_0 { pt3dadd( 1.33402, -4.79917, 0.0, 11.2702 ) }
    soma_0 { pt3dadd( 1.0042, -3.96277, 0.0, 12.1037 ) }
    soma_0 { pt3dadd( 0.674371, -3.12636, 0.0, 12.478 ) }
    soma_0 { pt3dadd( 0.344546, -2.28996, 0.0, 12.8036 ) }
    soma_0 { pt3dadd( 0.0147201, -1.45356, 0.0, 13.3328 ) }
    soma_0 { pt3dadd( -0.315105, -0.617159, 0.0, 13.8945 ) }
    soma_0 { pt3dadd( -0.644931, 0.219243, 0.0, 14.1853 ) }
    soma_0 { pt3dadd( -0.974756, 1.05564, 0.0, 14.2726 ) }
    soma_0 { pt3dadd( -1.30458, 1.89205, 0.0, 14.0804 ) }
    soma_0 { pt3dadd( -1.63441, 2.72845, 0.0, 13.7203 ) }
    soma_0 { pt3dadd( -1.96423, 3.56485, 0.0, 13.3603 ) }
    soma_0 { pt3dadd( -2.29406, 4.40125, 0.0, 12.7772 ) }
    soma_0 { pt3dadd( -2.62388, 5.23765, 0.0, 12.1069 ) }
    soma_0 { pt3dadd( -2.95371, 6.07405, 0.0, 11.425 ) }
    soma_0 { pt3dadd( -3.28353, 6.91045, 0.0, 9.72987 ) }
    soma_0 { pt3dadd( -3.61336, 7.74686, 0.0, 7.67118 ) }
    soma_0 { pt3dadd( -3.94319, 8.58326, 0.0, 4.32164 ) }
    // Section: dend_46, id: dend_46, parent: soma_0 (entry count 21/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 2.92163, -7.79977, 0.209999, 1.37 ) }
    dend_46 { pt3dadd( 3.39176, -8.51262, 0.0513644, 1.37 ) }
    dend_46 { pt3dadd( 3.96556, -9.21232, -0.211921, 1.37 ) }
    dend_46 { pt3dadd( 4.76928, -10.1889, -0.609037, 1.37 ) }
    dend_46 { pt3dadd( 5.2378, -10.7322, -0.756461, 1.37 ) }
    dend_46 { pt3dadd( 6.00516, -11.5972, -0.892722, 1.37 ) }
    dend_46 { pt3dadd( 6.83698, -12.5017, -0.972307, 0.91 ) }
    dend_46 { pt3dadd( 8.28177, -13.9908, -1.07932, 0.91 ) }
    dend_46 { pt3dadd( 9.26365, -14.9025, -1.19973, 0.91 ) }
    dend_46 { pt3dadd( 10.9322, -16.1965, -1.53204, 0.91 ) }
    dend_46 { pt3dadd( 12.14, -16.9926, -1.84646, 0.68 ) }
    dend_46 { pt3dadd( 13.6638, -17.8282, -2.39001, 0.91 ) }
    dend_46 { pt3dadd( 15.397, -18.5337, -3.22401, 0.68 ) }
    dend_46 { pt3dadd( 17.2962, -19.0232, -4.37052, 0.68 ) }
    dend_46 { pt3dadd( 19.1602, -19.1386, -5.90693, 0.68 ) }
    dend_46 { pt3dadd( 20.0311, -18.9861, -6.85253, 0.68 ) }
    dend_46 { pt3dadd( 21.0825, -18.3789, -8.43255, 0.68 ) }
    dend_46 { pt3dadd( 21.6774, -17.6426, -9.72782, 0.68 ) }
    dend_46 { pt3dadd( 22.0447, -16.8792, -10.9188, 0.68 ) }
    dend_46 { pt3dadd( 22.2845, -16.0663, -12.3429, 0.91 ) }
    dend_46 { pt3dadd( 22.3765, -15.6362, -13.4133, 1.37 ) }
    dend_46 { pt3dadd( 22.5647, -15.1666, -15.5314, 0.68 ) }
    dend_46 { pt3dadd( 22.7523, -15.0384, -17.0616, 0.68 ) }
    dend_46 { pt3dadd( 23.0125, -15.0103, -18.7909, 0.68 ) }
    dend_46 { pt3dadd( 23.5255, -15.0986, -21.2289, 0.68 ) }
    dend_46 { pt3dadd( 24.134, -15.286, -23.5014, 0.68 ) }
    dend_46 { pt3dadd( 24.803, -15.4769, -25.3803, 0.68 ) }
    dend_46 { pt3dadd( 25.3317, -15.5897, -26.4266, 0.68 ) }
    dend_46 { pt3dadd( 25.7936, -15.6329, -27.2129, 0.68 ) }
    dend_46 { pt3dadd( 26.6457, -15.591, -28.4939, 0.91 ) }
    dend_46 { pt3dadd( 27.0375, -15.5569, -29.0598, 0.91 ) }
    dend_46 { pt3dadd( 28.3033, -15.4341, -31.0566, 0.46 ) }
    dend_46 { pt3dadd( 29.2553, -15.3503, -32.8004, 0.91 ) }
    dend_46 { pt3dadd( 30.1157, -15.3449, -34.7826, 0.91 ) }
    dend_46 { pt3dadd( 31.0967, -15.3847, -37.421, 0.91 ) }
    dend_46 { pt3dadd( 31.5465, -15.4186, -38.8717, 0.91 ) }
    dend_46 { pt3dadd( 31.9062, -15.4554, -40.3108, 0.91 ) }
    dend_46 { pt3dadd( 32.1014, -15.5, -41.4873, 0.91 ) }
    dend_46 { pt3dadd( 32.3676, -15.5734, -43.7764, 0.91 ) }
    dend_46 { pt3dadd( 32.7853, -15.7326, -46.8469, 0.46 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 61/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 6.55163, -2.74576, 7.25, 1.37 ) }
    dend_41 { pt3dadd( 6.57496, -2.74044, 7.26339, 1.37 ) }
    dend_41 { pt3dadd( 8.18547, -2.33907, 8.00747, 1.37 ) }
    dend_41 { pt3dadd( 9.36552, -2.00926, 8.39196, 1.14 ) }
    dend_41 { pt3dadd( 11.0715, -1.527, 8.76666, 1.37 ) }
    dend_41 { pt3dadd( 12.9602, -0.987927, 8.99435, 1.14 ) }
    dend_41 { pt3dadd( 14.4695, -0.557248, 9.00046, 0.91 ) }
    dend_41 { pt3dadd( 15.4262, -0.296568, 8.80714, 0.91 ) }
    dend_41 { pt3dadd( 16.8055, 0.0163089, 8.15186, 0.91 ) }
    dend_41 { pt3dadd( 17.8465, 0.154363, 7.4333, 1.14 ) }
    dend_41 { pt3dadd( 18.6675, 0.167941, 6.74164, 1.37 ) }
    dend_41 { pt3dadd( 19.9345, 0.0643129, 5.6519, 1.82 ) }
    dend_41 { pt3dadd( 21.2021, -0.104089, 4.56031, 1.37 ) }
    dend_41 { pt3dadd( 22.3365, -0.33166, 3.59314, 1.14 ) }
    dend_41 { pt3dadd( 23.7867, -0.718141, 2.37922, 1.14 ) }
    dend_41 { pt3dadd( 24.873, -1.05956, 1.45089, 1.14 ) }
    dend_41 { pt3dadd( 26.3092, -1.58583, 0.346298, 1.14 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 78/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 0.741626, 8.44523, -6.69, 3.19 ) }
    dend_38 { pt3dadd( 0.972903, 9.06221, -8.66154, 2.73 ) }
    dend_38 { pt3dadd( 1.37068, 10.1233, -12.0524, 2.73 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 81/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 4.36163, 3.16324, 7.23, 1.37 ) }
    dend_31 { pt3dadd( 4.7862, 3.90369, 7.5481, 1.37 ) }
    dend_31 { pt3dadd( 5.50637, 5.15969, 8.08766, 1.59 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 84/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -7.36837, 4.90173, -1.97, 1.59 ) }
    dend_26 { pt3dadd( -7.36837, 4.90173, -1.97, 1.59 ) }
    dend_26 { pt3dadd( -8.06629, 5.82142, -2.62284, 1.37 ) }
    dend_26 { pt3dadd( -8.73, 6.97496, -3.76016, 1.37 ) }
    dend_26 { pt3dadd( -9.25038, 8.0936, -5.09363, 1.59 ) }
    dend_26 { pt3dadd( -9.54213, 8.70967, -5.8625, 1.37 ) }
    dend_26 { pt3dadd( -10.0638, 9.81115, -7.23716, 1.14 ) }
    dend_26 { pt3dadd( -10.4104, 10.6395, -8.35009, 1.14 ) }
    dend_26 { pt3dadd( -10.8804, 12.1495, -10.6599, 1.14 ) }
    dend_26 { pt3dadd( -11.0436, 12.8983, -12.0246, 1.14 ) }
    dend_26 { pt3dadd( -11.0912, 13.4945, -13.216, 1.14 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 95/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -3.09837, -6.80227, 5.48, 1.14 ) }
    dend_23 { pt3dadd( -3.52402, -6.95371, 5.41487, 1.14 ) }
    dend_23 { pt3dadd( -4.56087, -7.2512, 5.25548, 0.91 ) }
    dend_23 { pt3dadd( -5.41052, -7.45354, 5.15966, 0.91 ) }
    dend_23 { pt3dadd( -6.38165, -7.62507, 5.07343, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( -7.36698, -7.74643, 5.02319, 0.91 ) }
    dend_23 { pt3dadd( -9.0308, -7.86361, 4.97969, 1.14 ) }
    dend_23 { pt3dadd( -10.6193, -7.83575, 5.0146, 1.14 ) }
    dend_23 { pt3dadd( -11.5307, -7.71625, 5.10499, 1.14 ) }
    dend_23 { pt3dadd( -12.4878, -7.50081, 5.27486, 0.91 ) }
    dend_23 { pt3dadd( -13.2814, -7.27922, 5.46265, 0.91 ) }
    dend_23 { pt3dadd( -13.9467, -7.08332, 5.66978, 1.14 ) }
    dend_23 { pt3dadd( -14.8659, -6.84836, 6.10083, 0.91 ) }
    dend_23 { pt3dadd( -15.6005, -6.80598, 6.56018, 0.91 ) }
    dend_23 { pt3dadd( -16.1079, -6.84743, 6.89181, 1.14 ) }
    dend_23 { pt3dadd( -16.926, -7.07539, 7.46134, 1.14 ) }
    dend_23 { pt3dadd( -17.4884, -7.33886, 7.8467, 0.91 ) }
    dend_23 { pt3dadd( -18.4492, -7.97175, 8.53881, 0.91 ) }
    dend_23 { pt3dadd( -19.3893, -8.77401, 9.2087, 1.14 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 14/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.371626, -6.32727, 10.68, 3.19 ) }
    dend_0 { pt3dadd( 0.378202, -6.87796, 11.2877, 3.19 ) }
    dend_0 { pt3dadd( 0.390453, -7.9038, 12.4196, 2.73 ) }
    dend_0 { pt3dadd( 0.402648, -8.92499, 13.5464, 2.73 ) }
    dend_0 { pt3dadd( 0.41688, -10.1167, 14.8614, 2.51 ) }
    dend_0 { pt3dadd( 0.431226, -11.318, 16.1869, 2.28 ) }
    dend_0 { pt3dadd( 0.444039, -12.3909, 17.3708, 2.73 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 21/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -3.94319, 8.58326, 0.0, 0.672061 ) }
    axon_0 { pt3dadd( -9.44588, 22.5375, 0.0, 0.672061 ) }
    axon_0 { pt3dadd( -14.9486, 36.4917, 0.0, 0.672061 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 24/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 26.3092, -1.58583, 0.346298, 0.91 ) }
    dend_45 { pt3dadd( 27.0949, -2.14134, 1.35912, 0.91 ) }
    dend_45 { pt3dadd( 28.0839, -2.80455, 2.76976, 0.91 ) }
    dend_45 { pt3dadd( 28.9328, -3.42208, 4.13223, 0.68 ) }
    dend_45 { pt3dadd( 29.78, -4.16601, 5.60934, 0.91 ) }
    dend_45 { pt3dadd( 30.4983, -4.98025, 6.90739, 0.91 ) }
    dend_45 { pt3dadd( 31.6211, -6.58004, 8.89425, 0.68 ) }
    dend_45 { pt3dadd( 32.446, -7.96503, 10.2788, 0.68 ) }
    dend_45 { pt3dadd( 33.0934, -9.28179, 11.389, 0.91 ) }
    dend_45 { pt3dadd( 33.6561, -10.5752, 12.3679, 0.68 ) }
    dend_45 { pt3dadd( 34.5832, -12.863, 13.9754, 0.68 ) }
    dend_45 { pt3dadd( 35.4454, -14.9961, 15.4239, 0.91 ) }
    dend_45 { pt3dadd( 36.1302, -16.5012, 16.4393, 0.68 ) }
    dend_45 { pt3dadd( 37.2866, -18.749, 18.0467, 1.14 ) }
    dend_45 { pt3dadd( 38.3168, -20.5967, 19.5184, 0.91 ) }
    dend_45 { pt3dadd( 39.4069, -22.4618, 21.1411, 0.91 ) }
    dend_45 { pt3dadd( 40.2332, -23.8536, 22.4638, 0.68 ) }
    dend_45 { pt3dadd( 41.1038, -25.2457, 23.8155, 0.68 ) }
    dend_45 { pt3dadd( 41.7676, -26.3464, 24.826, 0.68 ) }
    dend_45 { pt3dadd( 42.7402, -28.0451, 26.2371, 0.91 ) }
    dend_45 { pt3dadd( 43.495, -29.4464, 27.2454, 0.68 ) }
    dend_45 { pt3dadd( 44.7151, -31.8266, 28.6965, 0.68 ) }
    dend_45 { pt3dadd( 46.1364, -34.553, 30.1492, 0.68 ) }
    dend_45 { pt3dadd( 47.0643, -36.2883, 30.9487, 0.68 ) }
    dend_45 { pt3dadd( 48.0014, -37.8999, 31.5826, 0.68 ) }
    dend_45 { pt3dadd( 49.3498, -40.1918, 32.3318, 0.68 ) }
    dend_45 { pt3dadd( 50.7686, -42.6968, 33.0713, 0.68 ) }
    dend_45 { pt3dadd( 51.4324, -43.9024, 33.3556, 0.68 ) }
    dend_45 { pt3dadd( 52.5576, -45.9016, 33.8252, 0.68 ) }
    dend_45 { pt3dadd( 54.0794, -48.2381, 34.3967, 0.68 ) }
    dend_45 { pt3dadd( 55.7097, -50.4282, 34.9991, 0.68 ) }
    dend_45 { pt3dadd( 57.2427, -52.3096, 35.5791, 0.68 ) }
    dend_45 { pt3dadd( 58.3275, -53.5466, 35.9581, 0.91 ) }
    dend_45 { pt3dadd( 60.2097, -55.6343, 36.5464, 0.68 ) }
    dend_45 { pt3dadd( 61.7016, -57.1946, 36.9368, 0.68 ) }
    dend_45 { pt3dadd( 63.6308, -59.1779, 37.3203, 0.91 ) }
    dend_45 { pt3dadd( 64.8327, -60.4379, 37.5472, 0.68 ) }
    dend_45 { pt3dadd( 66.2076, -62.0607, 37.8598, 0.68 ) }
    dend_45 { pt3dadd( 67.3034, -63.5773, 38.1788, 0.68 ) }
    dend_45 { pt3dadd( 68.373, -65.3525, 38.5525, 0.91 ) }
    dend_45 { pt3dadd( 69.4952, -67.4672, 39.0962, 0.68 ) }
    dend_45 { pt3dadd( 70.7715, -69.924, 39.9527, 0.46 ) }
    dend_45 { pt3dadd( 71.9128, -72.1599, 41.0215, 0.46 ) }
    dend_45 { pt3dadd( 72.4968, -73.4179, 41.7935, 0.91 ) }
    dend_45 { pt3dadd( 73.2699, -75.1376, 42.9727, 0.68 ) }
    dend_45 { pt3dadd( 74.0098, -76.8421, 44.2018, 0.46 ) }
    dend_45 { pt3dadd( 74.8486, -78.849, 45.5554, 0.46 ) }
    dend_45 { pt3dadd( 75.7482, -81.0886, 46.8429, 0.46 ) }
    dend_45 { pt3dadd( 76.8327, -83.8993, 48.1016, 0.46 ) }
    dend_45 { pt3dadd( 77.6851, -86.1454, 49.0909, 0.46 ) }
    dend_45 { pt3dadd( 78.1645, -87.461, 49.6115, 0.46 ) }
    dend_45 { pt3dadd( 78.9328, -89.9115, 50.2343, 0.46 ) }
    dend_45 { pt3dadd( 79.255, -91.0475, 50.2772, 1.14 ) }
    dend_45 { pt3dadd( 79.86, -92.9849, 49.8962, 1.37 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 78/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 26.3092, -1.58583, 0.346298, 0.91 ) }
    dend_42 { pt3dadd( 27.2074, -0.992651, 0.0728025, 0.91 ) }
    dend_42 { pt3dadd( 28.1912, -0.666948, -0.238184, 0.91 ) }
    dend_42 { pt3dadd( 29.1559, -0.511849, -0.523255, 0.91 ) }
    dend_42 { pt3dadd( 29.9711, -0.482161, -0.735592, 0.91 ) }
    dend_42 { pt3dadd( 31.7754, -0.564949, -1.12737, 0.91 ) }
    dend_42 { pt3dadd( 33.6253, -0.716102, -1.47344, 0.91 ) }
    dend_42 { pt3dadd( 35.2412, -0.952271, -1.79127, 0.91 ) }
    dend_42 { pt3dadd( 36.4082, -1.19309, -2.01564, 0.91 ) }
    dend_42 { pt3dadd( 38.1053, -1.6469, -2.32723, 0.68 ) }
    dend_42 { pt3dadd( 39.4635, -2.0822, -2.53639, 0.68 ) }
    dend_42 { pt3dadd( 40.4096, -2.42947, -2.59533, 0.68 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 90/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 1.37068, 10.1233, -12.0524, 1.59 ) }
    dend_40 { pt3dadd( 2.18631, 9.83841, -13.3068, 1.59 ) }
    dend_40 { pt3dadd( 3.03819, 9.56793, -14.7853, 1.37 ) }
    dend_40 { pt3dadd( 3.92902, 9.32001, -16.5861, 1.37 ) }
    dend_40 { pt3dadd( 4.65914, 9.16291, -18.1549, 1.37 ) }
    dend_40 { pt3dadd( 5.43979, 8.99493, -19.8322, 1.37 ) }
    dend_40 { pt3dadd( 6.05239, 8.86311, -21.1485, 1.14 ) }
    dend_40 { pt3dadd( 6.93807, 8.70013, -23.2266, 1.14 ) }
    dend_40 { pt3dadd( 7.76973, 8.62626, -25.4751, 1.14 ) }
    dend_40 { pt3dadd( 7.97158, 8.64586, -26.0928, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 0/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 1.37068, 10.1233, -12.0524, 1.82 ) }
    dend_39 { pt3dadd( 1.33783, 11.2017, -13.4066, 1.82 ) }
    dend_39 { pt3dadd( 1.45675, 13.024, -15.7781, 1.82 ) }
    dend_39 { pt3dadd( 1.6217, 14.4746, -17.5787, 1.82 ) }
    dend_39 { pt3dadd( 1.70982, 15.3535, -18.5878, 1.82 ) }
    dend_39 { pt3dadd( 1.81971, 16.4235, -19.7416, 1.37 ) }
    dend_39 { pt3dadd( 1.94595, 17.7086, -21.1216, 1.37 ) }
    dend_39 { pt3dadd( 2.09595, 19.0342, -22.578, 1.37 ) }
    dend_39 { pt3dadd( 2.23051, 20.1669, -23.7883, 1.37 ) }
    dend_39 { pt3dadd( 2.36085, 21.5266, -25.2754, 1.14 ) }
    dend_39 { pt3dadd( 2.44596, 22.7648, -26.7291, 1.14 ) }
    dend_39 { pt3dadd( 2.52642, 24.124, -28.4771, 1.14 ) }
    dend_39 { pt3dadd( 2.65715, 25.7098, -30.7427, 1.14 ) }
    dend_39 { pt3dadd( 2.76518, 26.869, -32.6426, 1.14 ) }
    dend_39 { pt3dadd( 2.82927, 27.6078, -34.0387, 1.14 ) }
    dend_39 { pt3dadd( 2.86983, 28.3946, -35.9183, 1.14 ) }
    dend_39 { pt3dadd( 2.87986, 28.9395, -37.5647, 1.37 ) }
    dend_39 { pt3dadd( 2.95558, 29.4453, -39.7197, 1.37 ) }
    dend_39 { pt3dadd( 3.14008, 29.7561, -41.8259, 1.37 ) }
    dend_39 { pt3dadd( 3.28983, 29.8608, -42.9951, 0.91 ) }
    dend_39 { pt3dadd( 3.67664, 30.0235, -45.6738, 0.91 ) }
    dend_39 { pt3dadd( 4.01038, 30.0854, -47.658, 0.91 ) }
    dend_39 { pt3dadd( 4.6009, 30.1474, -50.7263, 0.91 ) }
    dend_39 { pt3dadd( 5.3392, 30.2159, -53.6643, 0.91 ) }
    dend_39 { pt3dadd( 5.96642, 30.2461, -55.4965, 0.91 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 25/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 5.50637, 5.15969, 8.08766, 0.91 ) }
    dend_33 { pt3dadd( 7.0822, 5.64552, 8.63266, 0.91 ) }
    dend_33 { pt3dadd( 9.10078, 6.26786, 9.33077, 1.14 ) }
    dend_33 { pt3dadd( 11.2409, 6.92766, 10.0709, 1.14 ) }
    dend_33 { pt3dadd( 12.1327, 7.20261, 10.3793, 1.14 ) }
    dend_33 { pt3dadd( 13.3098, 7.56551, 10.7864, 1.37 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 31/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 5.50637, 5.15969, 8.08766, 1.14 ) }
    dend_32 { pt3dadd( 5.60593, 6.36283, 7.86323, 1.14 ) }
    dend_32 { pt3dadd( 5.68283, 7.21248, 7.71573, 1.14 ) }
    dend_32 { pt3dadd( 5.73942, 7.85888, 7.58732, 1.14 ) }
    dend_32 { pt3dadd( 5.8204, 8.72602, 7.41066, 1.14 ) }
    dend_32 { pt3dadd( 5.91997, 9.79216, 7.19347, 1.14 ) }
    dend_32 { pt3dadd( 6.04274, 11.1067, 6.92566, 0.91 ) }
    dend_32 { pt3dadd( 6.13512, 11.9029, 6.74651, 0.91 ) }
    dend_32 { pt3dadd( 6.23529, 12.7304, 6.54384, 0.91 ) }
    dend_32 { pt3dadd( 6.3487, 13.8542, 6.26185, 0.91 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 41/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -11.0912, 13.4945, -13.216, 1.14 ) }
    dend_28 { pt3dadd( -11.2714, 13.6283, -13.252, 1.14 ) }
    dend_28 { pt3dadd( -12.0876, 14.2347, -13.415, 1.14 ) }
    dend_28 { pt3dadd( -12.8598, 14.8083, -13.5692, 0.91 ) }
    dend_28 { pt3dadd( -13.6904, 15.4253, -13.735, 0.91 ) }
    dend_28 { pt3dadd( -14.714, 16.1857, -13.9395, 0.91 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 47/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -11.0912, 13.4945, -13.216, 1.14 ) }
    dend_27 { pt3dadd( -12.1933, 13.988, -14.3028, 1.14 ) }
    dend_27 { pt3dadd( -13.9959, 14.7123, -15.9509, 0.91 ) }
    dend_27 { pt3dadd( -15.2366, 15.1527, -17.1649, 0.91 ) }
    dend_27 { pt3dadd( -16.2898, 15.4905, -18.2713, 1.14 ) }
    dend_27 { pt3dadd( -17.4013, 15.7813, -19.5448, 0.91 ) }
    dend_27 { pt3dadd( -18.7191, 16.0541, -21.2011, 1.14 ) }
    dend_27 { pt3dadd( -20.2565, 16.2821, -23.4131, 1.14 ) }
    dend_27 { pt3dadd( -21.683, 16.4433, -25.496, 1.14 ) }
    dend_27 { pt3dadd( -22.9427, 16.4733, -27.4474, 1.14 ) }
    dend_27 { pt3dadd( -24.0171, 16.3825, -29.3223, 0.68 ) }
    dend_27 { pt3dadd( -24.7261, 16.216, -30.6792, 0.68 ) }
    dend_27 { pt3dadd( -25.3384, 15.9004, -32.2057, 0.68 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 60/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -19.3893, -8.77401, 9.2087, 0.91 ) }
    dend_25 { pt3dadd( -20.4278, -8.99418, 9.57471, 0.91 ) }
    dend_25 { pt3dadd( -21.5743, -9.12271, 9.75991, 0.91 ) }
    dend_25 { pt3dadd( -22.7311, -9.13013, 9.71665, 0.91 ) }
    dend_25 { pt3dadd( -23.3218, -9.08855, 9.57705, 0.68 ) }
    dend_25 { pt3dadd( -24.7465, -8.96788, 8.98354, 0.46 ) }
    dend_25 { pt3dadd( -25.5303, -8.92376, 8.54397, 0.46 ) }
    dend_25 { pt3dadd( -26.3554, -8.89788, 7.8466, 0.46 ) }
    dend_25 { pt3dadd( -27.0461, -8.91287, 7.12788, 0.68 ) }
    dend_25 { pt3dadd( -27.7705, -8.95256, 6.29587, 0.68 ) }
    dend_25 { pt3dadd( -28.6801, -8.99992, 5.26889, 0.68 ) }
    dend_25 { pt3dadd( -29.3711, -9.05654, 4.53543, 0.68 ) }
    dend_25 { pt3dadd( -30.1585, -9.15418, 3.76537, 0.68 ) }
    dend_25 { pt3dadd( -30.6324, -9.22982, 3.38677, 0.46 ) }
    dend_25 { pt3dadd( -31.3155, -9.37344, 2.95323, 0.46 ) }
    dend_25 { pt3dadd( -32.6033, -9.67968, 2.28431, 0.46 ) }
    dend_25 { pt3dadd( -33.5153, -9.86288, 1.83478, 0.46 ) }
    dend_25 { pt3dadd( -34.2904, -9.98461, 1.43228, 0.46 ) }
    dend_25 { pt3dadd( -35.3431, -10.1183, 0.808344, 0.46 ) }
    dend_25 { pt3dadd( -36.127, -10.2218, 0.265203, 0.23 ) }
    dend_25 { pt3dadd( -37.0461, -10.3932, -0.471838, 0.46 ) }
    dend_25 { pt3dadd( -37.9704, -10.6402, -1.32711, 0.46 ) }
    dend_25 { pt3dadd( -38.5707, -10.8041, -1.92397, 0.68 ) }
    dend_25 { pt3dadd( -38.9208, -10.8655, -2.28569, 0.68 ) }
    dend_25 { pt3dadd( -39.0892, -10.875, -2.4636, 0.46 ) }
    dend_25 { pt3dadd( -39.6995, -10.8618, -3.02041, 0.46 ) }
    dend_25 { pt3dadd( -40.3196, -10.8414, -3.46961, 0.46 ) }
    dend_25 { pt3dadd( -40.7219, -10.8447, -3.73131, 0.46 ) }
    dend_25 { pt3dadd( -41.5475, -10.8441, -4.28861, 0.46 ) }
    dend_25 { pt3dadd( -42.502, -10.802, -4.98121, 0.46 ) }
    dend_25 { pt3dadd( -43.2935, -10.742, -5.60538, 0.68 ) }
    dend_25 { pt3dadd( -44.0631, -10.6829, -6.24864, 0.68 ) }
    dend_25 { pt3dadd( -44.6472, -10.644, -6.75336, 0.68 ) }
    dend_25 { pt3dadd( -45.1455, -10.6347, -7.20988, 0.68 ) }
    dend_25 { pt3dadd( -45.8361, -10.6867, -7.84898, 0.46 ) }
    dend_25 { pt3dadd( -46.4142, -10.7745, -8.37897, 0.46 ) }
    dend_25 { pt3dadd( -47.0249, -10.9074, -8.88703, 0.46 ) }
    dend_25 { pt3dadd( -47.278, -10.9733, -9.03231, 0.46 ) }
    dend_25 { pt3dadd( -47.7567, -11.1102, -9.19762, 0.46 ) }
    dend_25 { pt3dadd( -48.5022, -11.3745, -9.40735, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_25 { pt3dadd( -48.9562, -11.5571, -9.52601, 0.68 ) }
    dend_25 { pt3dadd( -49.6216, -11.7721, -9.7144, 0.46 ) }
    dend_25 { pt3dadd( -50.1789, -11.9481, -9.90695, 0.46 ) }
    dend_25 { pt3dadd( -50.7859, -12.1706, -10.1675, 0.68 ) }
    dend_25 { pt3dadd( -51.5234, -12.4516, -10.5079, 0.46 ) }
    dend_25 { pt3dadd( -51.7454, -12.5301, -10.617, 0.91 ) }
    dend_25 { pt3dadd( -52.6854, -12.7934, -11.085, 0.23 ) }
    dend_25 { pt3dadd( -53.4434, -12.9349, -11.4866, 0.23 ) }
    dend_25 { pt3dadd( -53.9405, -12.9946, -11.7637, 0.46 ) }
    dend_25 { pt3dadd( -54.7301, -13.0121, -12.1972, 1.14 ) }
    dend_25 { pt3dadd( -55.4089, -12.9876, -12.5767, 0.23 ) }
    dend_25 { pt3dadd( -55.9329, -12.9664, -12.906, 0.23 ) }
    dend_25 { pt3dadd( -56.7128, -12.9604, -13.4609, 0.23 ) }
    dend_25 { pt3dadd( -57.4491, -12.9843, -14.0093, 0.23 ) }
    dend_25 { pt3dadd( -58.0696, -13.0858, -14.5331, 0.68 ) }
    dend_25 { pt3dadd( -58.6068, -13.273, -15.0599, 0.23 ) }
    dend_25 { pt3dadd( -59.2492, -13.574, -15.7281, 0.23 ) }
    dend_25 { pt3dadd( -59.8301, -13.9155, -16.3258, 0.23 ) }
    dend_25 { pt3dadd( -60.2524, -14.2217, -16.7576, 0.68 ) }
    dend_25 { pt3dadd( -60.7921, -14.7232, -17.3502, 0.46 ) }
    dend_25 { pt3dadd( -60.966, -14.9216, -17.547, 0.68 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 21/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -19.3893, -8.77401, 9.2087, 1.14 ) }
    dend_24 { pt3dadd( -18.7331, -9.56233, 10.9, 1.14 ) }
    dend_24 { pt3dadd( -18.1927, -10.302, 12.4859, 0.91 ) }
    dend_24 { pt3dadd( -17.7831, -11.0006, 14.0078, 0.91 ) }
    dend_24 { pt3dadd( -17.4663, -11.7006, 15.6253, 0.91 ) }
    dend_24 { pt3dadd( -17.2985, -12.248, 17.0121, 0.91 ) }
    dend_24 { pt3dadd( -17.213, -13.055, 19.2006, 0.91 ) }
    dend_24 { pt3dadd( -17.5438, -13.4808, 20.6181, 0.91 ) }
    dend_24 { pt3dadd( -18.4457, -13.5892, 21.5081, 0.91 ) }
    dend_24 { pt3dadd( -19.9111, -13.5567, 22.3782, 0.91 ) }
    dend_24 { pt3dadd( -21.7241, -13.4852, 23.3053, 0.68 ) }
    dend_24 { pt3dadd( -23.4641, -13.4773, 24.0878, 0.68 ) }
    dend_24 { pt3dadd( -24.5933, -13.5547, 24.5943, 0.68 ) }
    dend_24 { pt3dadd( -25.7152, -13.7894, 25.2693, 0.68 ) }
    dend_24 { pt3dadd( -27.1869, -14.5251, 26.7154, 0.68 ) }
    dend_24 { pt3dadd( -27.9754, -15.1795, 27.8993, 0.91 ) }
    dend_24 { pt3dadd( -28.4458, -15.6939, 28.807, 0.91 ) }
    dend_24 { pt3dadd( -29.1819, -16.5561, 30.303, 0.68 ) }
    dend_24 { pt3dadd( -29.9753, -17.5237, 31.8522, 0.68 ) }
    dend_24 { pt3dadd( -30.775, -18.5409, 33.34, 0.68 ) }
    dend_24 { pt3dadd( -31.8209, -19.922, 35.1123, 0.91 ) }
    dend_24 { pt3dadd( -32.6468, -21.0103, 36.4002, 0.91 ) }
    dend_24 { pt3dadd( -33.9539, -22.4681, 38.1472, 0.91 ) }
    dend_24 { pt3dadd( -34.7112, -23.2884, 39.0599, 0.91 ) }
    dend_24 { pt3dadd( -35.2509, -23.8621, 39.6105, 0.91 ) }
    dend_24 { pt3dadd( -36.1981, -24.8182, 40.4276, 0.91 ) }
    dend_24 { pt3dadd( -37.6497, -26.3856, 41.5465, 0.91 ) }
    dend_24 { pt3dadd( -39.3928, -28.3342, 42.9418, 0.46 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 49/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.444039, -12.3909, 17.3708, 2.73 ) }
    dend_14 { pt3dadd( -0.18672, -13.3175, 17.1611, 2.73 ) }
    dend_14 { pt3dadd( -0.881619, -14.3384, 16.9301, 2.51 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 52/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.444039, -12.3909, 17.3708, 2.05 ) }
    dend_1 { pt3dadd( 1.045, -13.1401, 17.1022, 2.05 ) }
    dend_1 { pt3dadd( 1.46475, -13.6635, 16.9146, 1.82 ) }
    dend_1 { pt3dadd( 1.76339, -14.0358, 16.7811, 1.82 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 56/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -14.9486, 36.4917, 0.0, 0.46 ) }
    axon_1 { pt3dadd( -20.4513, 50.4459, 0.0, 0.46 ) }
    axon_1 { pt3dadd( -25.954, 64.4002, 0.0, 0.46 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 59/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 40.4096, -2.42947, -2.59533, 0.46 ) }
    dend_44 { pt3dadd( 40.8903, -2.801, -1.00236, 0.46 ) }
    dend_44 { pt3dadd( 41.9518, -3.64812, 1.8507, 0.46 ) }
    dend_44 { pt3dadd( 42.7466, -4.20139, 3.52133, 0.46 ) }
    dend_44 { pt3dadd( 43.7736, -4.7579, 5.20023, 0.46 ) }
    dend_44 { pt3dadd( 44.7244, -5.17273, 6.42853, 0.23 ) }
    dend_44 { pt3dadd( 45.5612, -5.44817, 7.41007, 0.23 ) }
    dend_44 { pt3dadd( 46.7085, -5.78702, 8.5395, 0.23 ) }
    dend_44 { pt3dadd( 47.8057, -6.01385, 9.56245, 0.46 ) }
    dend_44 { pt3dadd( 49.0932, -6.2129, 10.7239, 0.46 ) }
    dend_44 { pt3dadd( 50.6459, -6.412, 12.0847, 0.46 ) }
    dend_44 { pt3dadd( 52.2961, -6.52874, 13.6223, 0.46 ) }
    dend_44 { pt3dadd( 54.2322, -6.57291, 15.6705, 0.46 ) }
    dend_44 { pt3dadd( 55.9522, -6.57596, 17.7373, 0.46 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 73/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 40.4096, -2.42947, -2.59533, 0.46 ) }
    dend_43 { pt3dadd( 40.7825, -3.06771, -4.16498, 0.46 ) }
    dend_43 { pt3dadd( 41.1375, -3.48427, -5.56584, 0.46 ) }
    dend_43 { pt3dadd( 41.6479, -3.87993, -7.45679, 0.46 ) }
    dend_43 { pt3dadd( 41.993, -4.01839, -8.5779, 0.46 ) }
    dend_43 { pt3dadd( 42.6909, -4.13199, -10.4401, 0.46 ) }
    dend_43 { pt3dadd( 43.2464, -4.15889, -11.584, 0.46 ) }
    dend_43 { pt3dadd( 44.2778, -4.06429, -12.9683, 0.46 ) }
    dend_43 { pt3dadd( 45.0598, -4.04203, -13.5147, 0.46 ) }
    dend_43 { pt3dadd( 46.0434, -4.09199, -13.9681, 0.68 ) }
    dend_43 { pt3dadd( 46.9888, -4.20062, -14.4202, 0.68 ) }
    dend_43 { pt3dadd( 48.302, -4.44602, -15.1415, 0.46 ) }
    dend_43 { pt3dadd( 50.3676, -4.95831, -16.5654, 0.46 ) }
    dend_43 { pt3dadd( 52.3336, -5.55956, -18.2965, 0.46 ) }
    dend_43 { pt3dadd( 53.6424, -6.00991, -19.8014, 0.46 ) }
    dend_43 { pt3dadd( 55.1874, -6.52739, -22.0423, 0.46 ) }
    dend_43 { pt3dadd( 56.4504, -6.84957, -24.2835, 0.46 ) }
    dend_43 { pt3dadd( 57.2126, -6.84203, -25.874, 0.46 ) }
    dend_43 { pt3dadd( 57.7287, -6.58333, -27.1609, 0.46 ) }
    dend_43 { pt3dadd( 58.4, -5.79708, -28.8003, 0.46 ) }
    dend_43 { pt3dadd( 58.7569, -5.1328, -29.355, 0.46 ) }
    dend_43 { pt3dadd( 59.2521, -4.12604, -29.8532, 0.46 ) }
    dend_43 { pt3dadd( 60.3632, -1.91873, -30.6882, 0.68 ) }
    dend_43 { pt3dadd( 61.1844, -0.387399, -31.234, 0.68 ) }
    dend_43 { pt3dadd( 62.233, 1.4237, -32.0418, 0.68 ) }
    dend_43 { pt3dadd( 62.9819, 2.75293, -32.7747, 0.46 ) }
    dend_43 { pt3dadd( 64.0363, 4.57222, -34.039, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_43 { pt3dadd( 64.4228, 5.25687, -34.593, 0.46 ) }
    dend_43 { pt3dadd( 64.9613, 6.21765, -35.4365, 0.46 ) }
    dend_43 { pt3dadd( 66.1528, 8.45428, -37.5256, 0.46 ) }
    dend_43 { pt3dadd( 66.8328, 9.76048, -38.7544, 0.68 ) }
    dend_43 { pt3dadd( 67.4451, 10.8953, -39.823, 0.46 ) }
    dend_43 { pt3dadd( 68.2469, 12.2965, -41.2214, 0.68 ) }
    dend_43 { pt3dadd( 68.7966, 13.1309, -42.0893, 0.46 ) }
    dend_43 { pt3dadd( 69.9307, 14.4943, -43.4701, 0.46 ) }
    dend_43 { pt3dadd( 70.9544, 15.5414, -44.5165, 0.46 ) }
    dend_43 { pt3dadd( 72.6487, 16.8727, -46.0496, 0.46 ) }
    dend_43 { pt3dadd( 73.9249, 17.5833, -47.0814, 0.46 ) }
    dend_43 { pt3dadd( 75.2759, 17.9873, -48.0343, 0.23 ) }
    dend_43 { pt3dadd( 76.857, 18.2328, -49.0482, 0.23 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 13/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 13.3098, 7.56551, 10.7864, 0.91 ) }
    dend_35 { pt3dadd( 14.3636, 7.27805, 11.8551, 0.91 ) }
    dend_35 { pt3dadd( 15.0351, 7.01259, 12.6313, 0.91 ) }
    dend_35 { pt3dadd( 16.2284, 6.41754, 14.2007, 0.91 ) }
    dend_35 { pt3dadd( 17.1075, 5.86748, 15.5432, 1.14 ) }
    dend_35 { pt3dadd( 18.074, 5.12232, 17.2062, 0.91 ) }
    dend_35 { pt3dadd( 18.7956, 4.39585, 18.6053, 0.91 ) }
    dend_35 { pt3dadd( 19.5442, 3.47425, 20.3647, 1.14 ) }
    dend_35 { pt3dadd( 19.9317, 2.85999, 21.4692, 0.91 ) }
    dend_35 { pt3dadd( 20.3104, 1.98162, 22.878, 0.91 ) }
    dend_35 { pt3dadd( 20.4394, 1.38601, 23.7118, 0.91 ) }
    dend_35 { pt3dadd( 20.4508, 0.100466, 25.2112, 1.14 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 25/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 13.3098, 7.56551, 10.7864, 1.37 ) }
    dend_34 { pt3dadd( 13.1209, 8.78289, 10.2746, 1.37 ) }
    dend_34 { pt3dadd( 12.7501, 10.371, 9.47696, 0.91 ) }
    dend_34 { pt3dadd( 12.3647, 11.8241, 8.61574, 0.91 ) }
    dend_34 { pt3dadd( 11.9117, 13.743, 7.39584, 0.91 ) }
    dend_34 { pt3dadd( 11.5009, 15.9309, 5.93103, 0.91 ) }
    dend_34 { pt3dadd( 11.3446, 17.5515, 4.83551, 0.91 ) }
    dend_34 { pt3dadd( 11.3294, 18.9373, 3.84694, 0.91 ) }
    dend_34 { pt3dadd( 11.4537, 20.634, 2.53324, 0.91 ) }
    dend_34 { pt3dadd( 11.6821, 21.9979, 1.41672, 0.91 ) }
    dend_34 { pt3dadd( 12.1126, 23.5432, 0.231388, 0.91 ) }
    dend_34 { pt3dadd( 12.9363, 25.5426, -1.17797, 0.91 ) }
    dend_34 { pt3dadd( 13.4885, 26.7252, -1.8866, 0.91 ) }
    dend_34 { pt3dadd( 13.5846, 26.928, -2.00367, 0.91 ) }
    dend_34 { pt3dadd( 14.3835, 28.9998, -3.3067, 0.68 ) }
    dend_34 { pt3dadd( 14.8209, 30.5739, -4.5455, 0.68 ) }
    dend_34 { pt3dadd( 15.0402, 31.7228, -5.69671, 0.46 ) }
    dend_34 { pt3dadd( 15.1085, 32.5398, -6.65155, 0.68 ) }
    dend_34 { pt3dadd( 15.1314, 33.829, -8.2771, 0.68 ) }
    dend_34 { pt3dadd( 15.1164, 35.3254, -10.2598, 0.68 ) }
    dend_34 { pt3dadd( 15.0968, 36.4264, -11.8107, 0.68 ) }
    dend_34 { pt3dadd( 15.0197, 37.532, -13.4846, 0.68 ) }
    dend_34 { pt3dadd( 14.8625, 38.6386, -15.1307, 0.23 ) }
    dend_34 { pt3dadd( 14.6517, 39.9395, -17.0403, 0.23 ) }
    dend_34 { pt3dadd( 14.5595, 40.5213, -17.7698, 0.23 ) }
    dend_34 { pt3dadd( 14.4794, 41.1396, -18.382, 0.23 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -14.714, 16.1857, -13.9395, 0.91 ) }
    dend_30 { pt3dadd( -15.6764, 16.6292, -15.2555, 0.91 ) }
    dend_30 { pt3dadd( -16.7457, 17.0903, -16.9283, 0.91 ) }
    dend_30 { pt3dadd( -17.8775, 17.5037, -18.7682, 0.91 ) }
    dend_30 { pt3dadd( -18.6773, 17.7959, -20.0685, 0.91 ) }
    dend_30 { pt3dadd( -20.0096, 18.2826, -22.2343, 0.91 ) }
    dend_30 { pt3dadd( -20.9866, 18.6395, -23.8227, 0.91 ) }
    dend_30 { pt3dadd( -21.9538, 18.992, -25.5381, 0.91 ) }
    dend_30 { pt3dadd( -22.8493, 19.2566, -27.3244, 0.68 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 60/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -14.714, 16.1857, -13.9395, 0.68 ) }
    dend_29 { pt3dadd( -14.6722, 17.5542, -14.2607, 0.68 ) }
    dend_29 { pt3dadd( -14.6873, 18.9337, -14.5155, 0.68 ) }
    dend_29 { pt3dadd( -14.8276, 20.2664, -14.6752, 0.91 ) }
    dend_29 { pt3dadd( -15.0648, 21.6901, -14.948, 0.91 ) }
    dend_29 { pt3dadd( -15.1891, 22.4357, -15.0909, 0.68 ) }
    dend_29 { pt3dadd( -15.3193, 23.2173, -15.2407, 0.68 ) }
    dend_29 { pt3dadd( -15.6092, 24.5692, -15.5079, 0.68 ) }
    dend_29 { pt3dadd( -16.1699, 26.6202, -15.8761, 0.68 ) }
    dend_29 { pt3dadd( -16.8222, 28.4735, -16.2413, 0.91 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 70/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -0.881619, -14.3384, 16.9301, 1.14 ) }
    dend_16 { pt3dadd( -2.04294, -14.6784, 16.2976, 1.14 ) }
    dend_16 { pt3dadd( -4.07506, -15.1398, 15.0894, 1.14 ) }
    dend_16 { pt3dadd( -6.14961, -15.4699, 13.741, 1.14 ) }
    dend_16 { pt3dadd( -7.86013, -15.6462, 12.5489, 1.14 ) }
    dend_16 { pt3dadd( -9.60345, -15.7533, 11.2565, 0.91 ) }
    dend_16 { pt3dadd( -11.0389, -15.8029, 10.1631, 1.14 ) }
    dend_16 { pt3dadd( -12.4886, -15.7769, 8.9668, 0.91 ) }
    dend_16 { pt3dadd( -14.1707, -15.6089, 7.44956, 0.91 ) }
    dend_16 { pt3dadd( -15.3832, -15.3577, 6.30152, 1.14 ) }
    dend_16 { pt3dadd( -16.1132, -15.15, 5.58108, 1.37 ) }
    dend_16 { pt3dadd( -16.3994, -15.0589, 5.27404, 1.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 82/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -0.881619, -14.3384, 16.9301, 1.14 ) }
    dend_15 { pt3dadd( -0.934589, -17.3758, 16.5705, 1.14 ) }
    dend_15 { pt3dadd( -0.962094, -18.953, 16.3838, 1.14 ) }
    dend_15 { pt3dadd( -1.00204, -21.2437, 16.1126, 1.37 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 86/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 1.76339, -14.0358, 16.7811, 1.37 ) }
    dend_11 { pt3dadd( 3.43852, -14.3374, 16.2183, 1.37 ) }
    dend_11 { pt3dadd( 5.15211, -14.6577, 15.4601, 1.37 ) }
    dend_11 { pt3dadd( 6.19633, -14.905, 14.9298, 1.37 ) }
    dend_11 { pt3dadd( 7.8875, -15.3526, 14.049, 1.37 ) }
    dend_11 { pt3dadd( 9.89046, -15.902, 12.9988, 1.37 ) }
    dend_11 { pt3dadd( 11.3546, -16.301, 12.1832, 1.37 ) }
    dend_11 { pt3dadd( 13.1034, -16.8077, 11.1813, 1.37 ) }
    dend_11 { pt3dadd( 14.8957, -17.4007, 10.1468, 1.37 ) }
    dend_11 { pt3dadd( 15.8887, -17.7811, 9.56649, 1.37 ) }
    dend_11 { pt3dadd( 17.9431, -18.8394, 8.29903, 1.14 ) }
    dend_11 { pt3dadd( 19.8714, -20.2025, 7.1036, 1.14 ) }
    dend_11 { pt3dadd( 21.4658, -21.4253, 6.16169, 1.14 ) }
    dend_11 { pt3dadd( 22.4942, -22.306, 5.56894, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_11 { pt3dadd( 23.2848, -23.0902, 5.08753, 1.14 ) }
    dend_11 { pt3dadd( 24.6352, -24.8587, 4.14294, 1.14 ) }
    dend_11 { pt3dadd( 25.4557, -26.751, 3.41692, 1.14 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 3/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 1.76339, -14.0358, 16.7811, 1.82 ) }
    dend_2 { pt3dadd( 0.80521, -16.0851, 17.3015, 1.82 ) }
    dend_2 { pt3dadd( -0.0057122, -17.8196, 17.7419, 1.82 ) }
    dend_2 { pt3dadd( -0.932999, -19.8028, 18.2455, 1.59 ) }
    dend_2 { pt3dadd( -1.63103, -21.2958, 18.6246, 1.59 ) }
    dend_2 { pt3dadd( -2.23763, -22.5932, 18.954, 1.59 ) }
    dend_2 { pt3dadd( -3.18515, -24.6198, 19.4687, 1.82 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 10/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 20.4508, 0.100466, 25.2112, 0.68 ) }
    dend_37 { pt3dadd( 19.1018, 0.633384, 25.9177, 0.68 ) }
    dend_37 { pt3dadd( 17.0941, 1.27626, 26.8409, 1.14 ) }
    dend_37 { pt3dadd( 15.7544, 1.62933, 27.4557, 0.91 ) }
    dend_37 { pt3dadd( 14.2433, 1.95398, 28.19, 0.68 ) }
    dend_37 { pt3dadd( 13.3403, 2.0997, 28.6664, 0.68 ) }
    dend_37 { pt3dadd( 12.1956, 2.24124, 29.3335, 0.91 ) }
    dend_37 { pt3dadd( 10.4824, 2.35371, 30.4084, 0.68 ) }
    dend_37 { pt3dadd( 9.19744, 2.35067, 31.3115, 0.68 ) }
    dend_37 { pt3dadd( 8.38181, 2.28618, 32.024, 0.91 ) }
    dend_37 { pt3dadd( 7.45993, 2.13451, 32.9614, 0.91 ) }
    dend_37 { pt3dadd( 6.48576, 1.93343, 34.0242, 0.91 ) }
    dend_37 { pt3dadd( 5.64561, 1.72358, 34.9807, 0.91 ) }
    dend_37 { pt3dadd( 5.05892, 1.55343, 35.6258, 0.91 ) }
    dend_37 { pt3dadd( 4.22944, 1.31743, 36.4501, 0.91 ) }
    dend_37 { pt3dadd( 3.71694, 1.20133, 36.9055, 0.91 ) }
    dend_37 { pt3dadd( 2.51857, 0.939326, 37.9245, 0.68 ) }
    dend_37 { pt3dadd( 1.33281, 0.642506, 38.9192, 0.68 ) }
    dend_37 { pt3dadd( -0.0142355, 0.296641, 40.005, 0.68 ) }
    dend_37 { pt3dadd( -0.983735, 0.0445311, 40.782, 0.68 ) }
    dend_37 { pt3dadd( -2.20958, -0.226091, 41.7381, 0.68 ) }
    dend_37 { pt3dadd( -3.264, -0.411682, 42.6441, 0.68 ) }
    dend_37 { pt3dadd( -4.30234, -0.571618, 43.7393, 0.91 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 33/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 20.4508, 0.100466, 25.2112, 0.68 ) }
    dend_36 { pt3dadd( 21.0294, 0.247641, 26.0023, 0.68 ) }
    dend_36 { pt3dadd( 22.375, 0.501351, 27.9516, 0.68 ) }
    dend_36 { pt3dadd( 22.9204, 0.583801, 28.8493, 0.68 ) }
    dend_36 { pt3dadd( 24.2497, 0.695585, 31.2774, 0.68 ) }
    dend_36 { pt3dadd( 25.1874, 0.685429, 33.0371, 0.68 ) }
    dend_36 { pt3dadd( 26.1517, 0.604646, 34.8341, 0.68 ) }
    dend_36 { pt3dadd( 27.009, 0.486362, 36.4132, 0.68 ) }
    dend_36 { pt3dadd( 27.8249, 0.276863, 37.7705, 0.68 ) }
    dend_36 { pt3dadd( 28.5128, -0.0233326, 38.9298, 0.68 ) }
    dend_36 { pt3dadd( 29.0907, -0.431975, 39.9095, 0.68 ) }
    dend_36 { pt3dadd( 29.6652, -0.933403, 40.9095, 0.68 ) }
    dend_36 { pt3dadd( 30.2825, -1.53658, 42.1395, 0.68 ) }
    dend_36 { pt3dadd( 30.9408, -2.21671, 43.6673, 0.46 ) }
    dend_36 { pt3dadd( 31.4612, -2.75263, 44.8795, 0.46 ) }
    dend_36 { pt3dadd( 32.1562, -3.48864, 46.6545, 0.68 ) }
    dend_36 { pt3dadd( 33.021, -4.49525, 49.3159, 0.68 ) }
    dend_36 { pt3dadd( 33.5955, -5.31494, 51.6157, 0.68 ) }
    dend_36 { pt3dadd( 33.8819, -5.86052, 53.3381, 0.46 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 52/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -16.3994, -15.0589, 5.27404, 0.68 ) }
    dend_22 { pt3dadd( -16.1684, -13.6709, 3.33062, 0.68 ) }
    dend_22 { pt3dadd( -15.8067, -12.3245, 1.57064, 0.68 ) }
    dend_22 { pt3dadd( -15.6339, -11.7733, 0.884649, 0.46 ) }
    dend_22 { pt3dadd( -15.2088, -10.3537, -0.8412, 0.68 ) }
    dend_22 { pt3dadd( -14.8708, -8.98571, -2.52034, 0.68 ) }
    dend_22 { pt3dadd( -14.6526, -7.80632, -4.01453, 0.68 ) }
    dend_22 { pt3dadd( -14.4683, -6.60646, -5.53171, 0.68 ) }
    dend_22 { pt3dadd( -14.4086, -5.88033, -6.5404, 0.68 ) }
    dend_22 { pt3dadd( -14.4584, -5.07237, -7.90326, 0.91 ) }
    dend_22 { pt3dadd( -14.7315, -4.20222, -9.77783, 0.91 ) }
    dend_22 { pt3dadd( -15.0853, -3.75964, -11.1578, 0.91 ) }
    dend_22 { pt3dadd( -15.257, -3.6861, -11.6117, 0.68 ) }
    dend_22 { pt3dadd( -16.3354, -3.67744, -13.6838, 0.68 ) }
    dend_22 { pt3dadd( -17.7678, -3.99421, -15.7243, 0.68 ) }
    dend_22 { pt3dadd( -18.2965, -4.19057, -16.268, 0.68 ) }
    dend_22 { pt3dadd( -19.0597, -4.54265, -16.9312, 0.46 ) }
    dend_22 { pt3dadd( -20.4651, -5.23701, -17.941, 0.23 ) }
    dend_22 { pt3dadd( -21.3868, -5.68703, -18.4504, 0.23 ) }
    dend_22 { pt3dadd( -23.1184, -6.49761, -18.9037, 0.23 ) }
    dend_22 { pt3dadd( -24.3064, -6.98764, -19.0294, 0.23 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 73/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -16.3994, -15.0589, 5.27404, 1.14 ) }
    dend_17 { pt3dadd( -17.4187, -14.886, 4.97614, 1.14 ) }
    dend_17 { pt3dadd( -19.6619, -14.5053, 4.32045, 1.14 ) }
    dend_17 { pt3dadd( -21.037, -14.272, 3.91852, 1.14 ) }
    dend_17 { pt3dadd( -22.8314, -13.9675, 3.39403, 1.14 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 78/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 25.4557, -26.751, 3.41692, 1.37 ) }
    dend_13 { pt3dadd( 25.6355, -26.9496, 3.34239, 1.37 ) }
    dend_13 { pt3dadd( 27.1285, -28.3729, 2.92976, 1.37 ) }
    dend_13 { pt3dadd( 28.2212, -29.2769, 2.72771, 0.91 ) }
    dend_13 { pt3dadd( 29.6959, -30.3668, 2.55118, 1.14 ) }
    dend_13 { pt3dadd( 30.8573, -31.1977, 2.48862, 0.68 ) }
    dend_13 { pt3dadd( 32.8429, -32.6121, 2.54156, 0.68 ) }
    dend_13 { pt3dadd( 34.5626, -33.7898, 2.74912, 0.68 ) }
    dend_13 { pt3dadd( 35.8702, -34.6383, 3.03959, 0.68 ) }
    dend_13 { pt3dadd( 37.6266, -35.6972, 3.50646, 0.68 ) }
    dend_13 { pt3dadd( 39.0829, -36.5097, 3.94264, 0.68 ) }
    dend_13 { pt3dadd( 41.2283, -37.6302, 4.65114, 0.91 ) }
    dend_13 { pt3dadd( 42.3354, -38.1813, 5.06183, 0.68 ) }
    dend_13 { pt3dadd( 43.5777, -38.7464, 5.52461, 0.68 ) }
    dend_13 { pt3dadd( 44.5153, -39.1805, 5.88711, 0.68 ) }
    dend_13 { pt3dadd( 45.8529, -39.8094, 6.3934, 0.68 ) }
    dend_13 { pt3dadd( 47.2443, -40.4514, 6.869, 0.23 ) }
    dend_13 { pt3dadd( 48.6329, -41.1098, 7.29115, 0.68 ) }
    dend_13 { pt3dadd( 50.4426, -42.0838, 7.80693, 0.46 ) }
    dend_13 { pt3dadd( 51.9237, -42.9649, 8.18409, 0.46 ) }
    dend_13 { pt3dadd( 53.2845, -43.8241, 8.51349, 0.46 ) }
    dend_13 { pt3dadd( 53.9395, -44.2226, 8.67163, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_13 { pt3dadd( 55.739, -45.2326, 9.08665, 0.68 ) }
    dend_13 { pt3dadd( 57.0047, -45.8579, 9.35324, 0.46 ) }
    dend_13 { pt3dadd( 58.0116, -46.2624, 9.52491, 0.46 ) }
    dend_13 { pt3dadd( 58.8107, -46.4909, 9.6346, 0.46 ) }
    dend_13 { pt3dadd( 61.4896, -47.0146, 10.0072, 0.68 ) }
    dend_13 { pt3dadd( 62.5611, -47.2075, 10.1398, 0.68 ) }
    dend_13 { pt3dadd( 63.078, -47.3157, 10.1849, 0.68 ) }
    dend_13 { pt3dadd( 64.6705, -47.7096, 10.2782, 0.23 ) }
    dend_13 { pt3dadd( 65.464, -48.0124, 10.2861, 0.46 ) }
    dend_13 { pt3dadd( 66.9249, -48.8731, 10.205, 0.23 ) }
    dend_13 { pt3dadd( 68.602, -50.3802, 9.96655, 0.91 ) }
    dend_13 { pt3dadd( 70.265, -52.4136, 9.5886, 0.91 ) }
    dend_13 { pt3dadd( 70.5909, -52.9078, 9.46404, 0.91 ) }
    dend_13 { pt3dadd( 71.7831, -55.0656, 8.80008, 0.68 ) }
    dend_13 { pt3dadd( 72.6112, -56.7412, 8.14989, 0.68 ) }
    dend_13 { pt3dadd( 73.5713, -58.8659, 7.10441, 0.91 ) }
    dend_13 { pt3dadd( 74.4486, -60.7551, 5.91661, 0.68 ) }
    dend_13 { pt3dadd( 75.2728, -62.2979, 4.78834, 1.14 ) }
    dend_13 { pt3dadd( 75.9405, -63.2385, 3.98139, 0.91 ) }
    dend_13 { pt3dadd( 76.9172, -64.2081, 3.01701, 0.91 ) }
    dend_13 { pt3dadd( 78.686, -65.4629, 1.60829, 0.91 ) }
    dend_13 { pt3dadd( 80.7028, -66.5637, 0.259155, 0.46 ) }
    dend_13 { pt3dadd( 82.144, -67.2773, -0.586799, 0.46 ) }
    dend_13 { pt3dadd( 84.4689, -68.4997, -1.83604, 0.46 ) }
    dend_13 { pt3dadd( 86.3295, -69.5374, -2.82679, 0.68 ) }
    dend_13 { pt3dadd( 88.1809, -70.6137, -3.76318, 0.46 ) }
    dend_13 { pt3dadd( 90.7009, -72.0857, -4.92036, 0.68 ) }
    dend_13 { pt3dadd( 91.728, -72.7491, -5.36121, 0.46 ) }
    dend_13 { pt3dadd( 93.2059, -73.8246, -6.06726, 0.23 ) }
    dend_13 { pt3dadd( 94.2153, -74.7175, -6.58741, 0.23 ) }
    dend_13 { pt3dadd( 94.8527, -75.4086, -6.98566, 0.46 ) }
    dend_13 { pt3dadd( 95.7499, -76.5641, -7.5311, 0.68 ) }
    dend_13 { pt3dadd( 97.137, -78.181, -8.05638, 0.23 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 33/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 25.4557, -26.751, 3.41692, 0.68 ) }
    dend_12 { pt3dadd( 26.2976, -24.7597, -0.953463, 0.68 ) }
    dend_12 { pt3dadd( 27.1287, -23.3983, -3.50898, 0.68 ) }
    dend_12 { pt3dadd( 28.1188, -22.1542, -5.50651, 0.68 ) }
    dend_12 { pt3dadd( 29.0998, -21.148, -6.96334, 0.68 ) }
    dend_12 { pt3dadd( 30.0797, -20.2829, -8.15658, 0.46 ) }
    dend_12 { pt3dadd( 31.3375, -19.3612, -9.47819, 0.46 ) }
    dend_12 { pt3dadd( 32.8253, -18.5176, -10.4313, 0.46 ) }
    dend_12 { pt3dadd( 34.3959, -17.8686, -11.1678, 0.68 ) }
    dend_12 { pt3dadd( 35.8694, -17.4695, -11.7604, 0.68 ) }
    dend_12 { pt3dadd( 36.6496, -17.3708, -12.0628, 0.68 ) }
    dend_12 { pt3dadd( 39.2579, -17.256, -13.2335, 0.46 ) }
    dend_12 { pt3dadd( 40.5175, -17.218, -13.8916, 0.46 ) }
    dend_12 { pt3dadd( 42.2461, -17.1658, -14.8387, 0.46 ) }
    dend_12 { pt3dadd( 43.9434, -17.1834, -15.7306, 0.46 ) }
    dend_12 { pt3dadd( 46.122, -17.2835, -16.8071, 0.46 ) }
    dend_12 { pt3dadd( 48.7457, -17.4569, -17.9854, 0.46 ) }
    dend_12 { pt3dadd( 51.3476, -17.709, -18.9221, 0.23 ) }
    dend_12 { pt3dadd( 52.7239, -17.8826, -19.3264, 0.46 ) }
    dend_12 { pt3dadd( 54.2207, -18.1352, -19.7063, 0.23 ) }
    dend_12 { pt3dadd( 55.8624, -18.4428, -20.0072, 0.68 ) }
    dend_12 { pt3dadd( 57.262, -18.6502, -20.23, 0.23 ) }
    dend_12 { pt3dadd( 59.4897, -18.9656, -20.5288, 0.46 ) }
    dend_12 { pt3dadd( 61.41, -19.1823, -20.7786, 0.46 ) }
    dend_12 { pt3dadd( 63.544, -19.3365, -21.1865, 0.23 ) }
    dend_12 { pt3dadd( 66.3132, -19.471, -21.8936, 0.68 ) }
    dend_12 { pt3dadd( 69.0223, -19.6179, -22.7536, 0.46 ) }
    dend_12 { pt3dadd( 71.0636, -19.7982, -23.512, 0.46 ) }
    dend_12 { pt3dadd( 73.1959, -20.1113, -24.4031, 0.68 ) }
    dend_12 { pt3dadd( 76.2265, -20.7598, -25.718, 0.46 ) }
    dend_12 { pt3dadd( 78.0272, -21.3676, -26.4782, 0.46 ) }
    dend_12 { pt3dadd( 79.0696, -21.9508, -26.9149, 0.46 ) }
    dend_12 { pt3dadd( 80.7416, -23.3971, -27.6556, 0.46 ) }
    dend_12 { pt3dadd( 81.902, -24.8246, -28.2579, 0.46 ) }
    dend_12 { pt3dadd( 82.379, -25.6849, -28.6113, 0.46 ) }
    dend_12 { pt3dadd( 83.1131, -27.7013, -29.4775, 0.46 ) }
    dend_12 { pt3dadd( 83.6151, -29.5563, -30.4948, 0.23 ) }
    dend_12 { pt3dadd( 84.0736, -31.5784, -31.8583, 0.23 ) }
    dend_12 { pt3dadd( 84.2555, -32.472, -32.5504, 0.68 ) }
    dend_12 { pt3dadd( 84.6893, -34.3099, -34.1024, 0.23 ) }
    dend_12 { pt3dadd( 85.2194, -35.9657, -35.6094, 0.68 ) }
    dend_12 { pt3dadd( 86.0157, -37.8994, -37.4702, 0.23 ) }
    dend_12 { pt3dadd( 86.698, -39.2545, -38.8233, 0.23 ) }
    dend_12 { pt3dadd( 87.2639, -40.1707, -39.7124, 0.68 ) }
    dend_12 { pt3dadd( 88.0554, -41.2775, -40.7499, 0.23 ) }
    dend_12 { pt3dadd( 89.4623, -43.0168, -42.1831, 0.68 ) }
    dend_12 { pt3dadd( 91.2587, -45.114, -43.6576, 0.23 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 80/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -3.18515, -24.6198, 19.4687, 1.37 ) }
    dend_6 { pt3dadd( -3.91281, -25.4318, 19.3966, 1.37 ) }
    dend_6 { pt3dadd( -4.3518, -25.9217, 19.3531, 1.37 ) }
    dend_6 { pt3dadd( -5.27962, -26.957, 19.2612, 1.37 ) }
    dend_6 { pt3dadd( -5.87909, -27.626, 19.2018, 1.37 ) }
    dend_6 { pt3dadd( -6.96853, -28.8417, 19.0938, 1.59 ) }
    dend_6 { pt3dadd( -7.83086, -29.804, 19.0084, 1.59 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 87/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -3.18515, -24.6198, 19.4687, 1.14 ) }
    dend_3 { pt3dadd( -4.06762, -24.8804, 20.8835, 1.14 ) }
    dend_3 { pt3dadd( -5.83729, -25.2931, 23.5578, 1.14 ) }
    dend_3 { pt3dadd( -7.39378, -25.6469, 25.883, 1.14 ) }
    dend_3 { pt3dadd( -8.68885, -25.896, 27.6942, 1.14 ) }
    dend_3 { pt3dadd( -9.71557, -26.1002, 29.0536, 0.91 ) }
    dend_3 { pt3dadd( -11.2932, -26.4499, 31.0603, 0.91 ) }
    dend_3 { pt3dadd( -12.7922, -26.8208, 32.8442, 0.91 ) }
    dend_3 { pt3dadd( -13.9495, -27.1831, 34.1452, 0.91 ) }
    dend_3 { pt3dadd( -15.1618, -27.6993, 35.4806, 0.91 ) }
    dend_3 { pt3dadd( -15.892, -28.1097, 36.2218, 1.14 ) }
    dend_3 { pt3dadd( -17.102, -29.0388, 37.2898, 1.14 ) }
    dend_3 { pt3dadd( -18.1559, -30.311, 37.8183, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_3 { pt3dadd( -18.8091, -31.1953, 37.7596, 1.14 ) }
    dend_3 { pt3dadd( -19.6596, -32.2441, 37.5622, 0.91 ) }
    dend_3 { pt3dadd( -21.7511, -34.301, 37.2694, 0.91 ) }
    dend_3 { pt3dadd( -23.7958, -35.6354, 37.4229, 0.91 ) }
    dend_3 { pt3dadd( -25.2726, -36.3463, 37.8413, 1.14 ) }
    dend_3 { pt3dadd( -26.8623, -36.9666, 38.6629, 0.91 ) }
    dend_3 { pt3dadd( -28.9685, -37.6182, 40.3545, 0.91 ) }
    dend_3 { pt3dadd( -30.8602, -38.0329, 42.5095, 0.91 ) }
    dend_3 { pt3dadd( -32.1367, -38.1188, 44.3678, 0.91 ) }
    dend_3 { pt3dadd( -33.0761, -38.0409, 45.9582, 0.91 ) }
    dend_3 { pt3dadd( -33.7003, -37.9021, 47.1001, 0.91 ) }
    dend_3 { pt3dadd( -34.6986, -37.6266, 48.8506, 0.91 ) }
    dend_3 { pt3dadd( -35.1865, -37.5082, 49.46, 1.14 ) }
    dend_3 { pt3dadd( -37.1464, -36.9835, 51.5658, 1.14 ) }
    dend_3 { pt3dadd( -38.5636, -36.5823, 52.7565, 1.14 ) }
    dend_3 { pt3dadd( -40.5153, -36.0417, 54.1124, 0.91 ) }
    dend_3 { pt3dadd( -42.6372, -35.5613, 55.3638, 0.91 ) }
    dend_3 { pt3dadd( -45.4823, -35.1735, 56.8067, 1.14 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 18/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -22.8314, -13.9675, 3.39403, 0.91 ) }
    dend_21 { pt3dadd( -24.666, -14.5777, 3.05494, 0.91 ) }
    dend_21 { pt3dadd( -26.8722, -15.2594, 2.85044, 0.68 ) }
    dend_21 { pt3dadd( -29.088, -15.8497, 2.74941, 0.68 ) }
    dend_21 { pt3dadd( -31.1256, -16.2999, 2.72735, 0.91 ) }
    dend_21 { pt3dadd( -32.1547, -16.4685, 2.70496, 0.68 ) }
    dend_21 { pt3dadd( -34.3641, -16.7181, 2.64731, 0.68 ) }
    dend_21 { pt3dadd( -35.9251, -16.7693, 2.71222, 0.68 ) }
    dend_21 { pt3dadd( -36.9739, -16.7016, 2.72844, 0.91 ) }
    dend_21 { pt3dadd( -37.8159, -16.5504, 2.63507, 0.68 ) }
    dend_21 { pt3dadd( -39.5937, -16.1258, 2.1345, 0.68 ) }
    dend_21 { pt3dadd( -41.0702, -15.7998, 1.51782, 1.37 ) }
    dend_21 { pt3dadd( -41.5278, -15.713, 1.27223, 0.91 ) }
    dend_21 { pt3dadd( -43.3771, -15.488, 0.131543, 0.91 ) }
    dend_21 { pt3dadd( -45.0298, -15.4221, -0.912601, 0.91 ) }
    dend_21 { pt3dadd( -47.0043, -15.4363, -2.11415, 0.91 ) }
    dend_21 { pt3dadd( -49.4706, -15.5318, -3.5276, 0.68 ) }
    dend_21 { pt3dadd( -51.2337, -15.6414, -4.46086, 0.68 ) }
    dend_21 { pt3dadd( -52.6288, -15.7583, -5.10469, 0.46 ) }
    dend_21 { pt3dadd( -54.0031, -15.9136, -5.58537, 0.46 ) }
    dend_21 { pt3dadd( -56.0395, -16.1375, -6.12868, 0.68 ) }
    dend_21 { pt3dadd( -58.1809, -16.3724, -6.53935, 0.68 ) }
    dend_21 { pt3dadd( -60.5001, -16.6193, -6.84963, 0.46 ) }
    dend_21 { pt3dadd( -63.6013, -16.8946, -7.12501, 0.46 ) }
    dend_21 { pt3dadd( -66.8215, -17.0611, -7.31533, 0.46 ) }
    dend_21 { pt3dadd( -68.313, -17.1178, -7.37813, 0.68 ) }
    dend_21 { pt3dadd( -69.5595, -17.1726, -7.40721, 0.68 ) }
    dend_21 { pt3dadd( -71.9198, -17.3293, -7.38652, 0.23 ) }
    dend_21 { pt3dadd( -73.51, -17.4422, -7.38223, 0.46 ) }
    dend_21 { pt3dadd( -75.3933, -17.582, -7.3624, 0.23 ) }
    dend_21 { pt3dadd( -77.1189, -17.6856, -7.31761, 0.23 ) }
    dend_21 { pt3dadd( -77.5502, -17.6997, -7.29321, 0.46 ) }
    dend_21 { pt3dadd( -80.2778, -17.6323, -7.04753, 0.23 ) }
    dend_21 { pt3dadd( -81.5241, -17.5778, -6.91313, 0.23 ) }
    dend_21 { pt3dadd( -83.6307, -17.4778, -6.66116, 0.91 ) }
    dend_21 { pt3dadd( -85.8335, -17.327, -6.35162, 0.91 ) }
    dend_21 { pt3dadd( -87.9989, -17.0184, -5.96572, 0.91 ) }
    dend_21 { pt3dadd( -89.5246, -16.6776, -5.62373, 1.14 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 56/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -22.8314, -13.9675, 3.39403, 0.46 ) }
    dend_18 { pt3dadd( -22.9081, -14.3239, 4.23178, 0.46 ) }
    dend_18 { pt3dadd( -22.959, -14.6359, 5.01747, 0.46 ) }
    dend_18 { pt3dadd( -23.0114, -15.0378, 6.04077, 0.68 ) }
    dend_18 { pt3dadd( -23.0881, -15.8982, 8.20222, 0.68 ) }
    dend_18 { pt3dadd( -23.1458, -16.7465, 10.2803, 0.68 ) }
    dend_18 { pt3dadd( -23.175, -17.4286, 11.9001, 0.68 ) }
    dend_18 { pt3dadd( -23.21, -17.8772, 13.0563, 0.91 ) }
    dend_18 { pt3dadd( -23.3244, -18.3191, 14.2969, 0.91 ) }
    dend_18 { pt3dadd( -23.5759, -18.7516, 15.5826, 0.91 ) }
    dend_18 { pt3dadd( -23.9578, -19.0386, 16.478, 0.91 ) }
    dend_18 { pt3dadd( -24.7475, -19.2092, 17.2732, 0.68 ) }
    dend_18 { pt3dadd( -25.8272, -19.2832, 17.9718, 0.68 ) }
    dend_18 { pt3dadd( -27.6642, -19.3188, 18.9234, 0.91 ) }
    dend_18 { pt3dadd( -29.4592, -19.3192, 19.7154, 0.91 ) }
    dend_18 { pt3dadd( -31.4928, -19.304, 20.5759, 0.68 ) }
    dend_18 { pt3dadd( -33.3583, -19.2971, 21.4136, 0.68 ) }
    dend_18 { pt3dadd( -34.8324, -19.3461, 22.1958, 0.68 ) }
    dend_18 { pt3dadd( -36.1074, -19.5764, 23.2433, 0.68 ) }
    dend_18 { pt3dadd( -36.4209, -19.7109, 23.6548, 1.14 ) }
    dend_18 { pt3dadd( -37.0663, -20.1621, 24.7329, 1.14 ) }
    dend_18 { pt3dadd( -37.7813, -20.8076, 26.0388, 1.14 ) }
    dend_18 { pt3dadd( -38.4372, -21.459, 27.0844, 0.91 ) }
    dend_18 { pt3dadd( -39.1697, -22.1385, 27.9967, 0.91 ) }
    dend_18 { pt3dadd( -40.5734, -23.3154, 29.4841, 0.91 ) }
    dend_18 { pt3dadd( -41.6668, -24.129, 30.4995, 0.91 ) }
    dend_18 { pt3dadd( -42.4985, -24.6746, 31.2092, 1.14 ) }
    dend_18 { pt3dadd( -43.6551, -25.3318, 32.2226, 0.68 ) }
    dend_18 { pt3dadd( -44.7263, -25.8388, 33.3271, 0.68 ) }
    dend_18 { pt3dadd( -45.2723, -26.1077, 34.1426, 0.68 ) }
    dend_18 { pt3dadd( -45.4842, -26.2411, 34.726, 0.91 ) }
    dend_18 { pt3dadd( -45.8881, -26.4373, 36.4009, 0.91 ) }
    dend_18 { pt3dadd( -46.2024, -26.5662, 38.2248, 0.91 ) }
    dend_18 { pt3dadd( -46.3731, -26.6958, 39.6475, 0.91 ) }
    dend_18 { pt3dadd( -46.5508, -27.0084, 41.5239, 0.91 ) }
    dend_18 { pt3dadd( -46.6452, -27.2431, 42.3266, 0.91 ) }
    dend_18 { pt3dadd( -46.802, -27.6859, 43.1772, 0.91 ) }
    dend_18 { pt3dadd( -47.0389, -28.6007, 43.9537, 0.91 ) }
    dend_18 { pt3dadd( -47.3351, -29.9891, 44.5928, 0.91 ) }
    dend_18 { pt3dadd( -47.5983, -30.9008, 44.8927, 0.91 ) }
    dend_18 { pt3dadd( -48.2537, -32.27, 45.3053, 0.68 ) }
    dend_18 { pt3dadd( -48.7587, -33.0904, 45.6116, 0.46 ) }
    dend_18 { pt3dadd( -49.2913, -33.8326, 45.9903, 0.46 ) }
    dend_18 { pt3dadd( -50.2711, -34.7692, 46.679, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_18 { pt3dadd( -51.0993, -35.4145, 47.3194, 0.46 ) }
    dend_18 { pt3dadd( -51.9518, -36.0044, 48.0618, 0.46 ) }
    dend_18 { pt3dadd( -52.9288, -36.5912, 48.979, 0.46 ) }
    dend_18 { pt3dadd( -53.565, -36.8936, 49.5153, 0.46 ) }
    dend_18 { pt3dadd( -54.5983, -37.2873, 50.3618, 0.68 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 5/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -7.83086, -29.804, 19.0084, 1.37 ) }
    dend_8 { pt3dadd( -8.43449, -31.0626, 18.6199, 1.37 ) }
    dend_8 { pt3dadd( -9.64437, -33.5851, 17.8413, 1.14 ) }
    dend_8 { pt3dadd( -10.6291, -35.6382, 17.2076, 1.14 ) }
    dend_8 { pt3dadd( -11.2401, -36.9119, 16.8144, 1.14 ) }
    dend_8 { pt3dadd( -11.9187, -38.3269, 16.3777, 1.14 ) }
    dend_8 { pt3dadd( -12.8726, -40.3156, 15.7638, 1.14 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 12/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -7.83086, -29.804, 19.0084, 0.68 ) }
    dend_7 { pt3dadd( -9.16605, -29.2039, 16.53, 0.68 ) }
    dend_7 { pt3dadd( -10.3023, -28.6147, 14.8493, 0.68 ) }
    dend_7 { pt3dadd( -11.3344, -28.0042, 13.6707, 0.68 ) }
    dend_7 { pt3dadd( -13.2447, -26.8707, 11.8137, 0.68 ) }
    dend_7 { pt3dadd( -14.3709, -26.1542, 10.8132, 0.68 ) }
    dend_7 { pt3dadd( -15.3835, -25.4741, 9.95123, 0.68 ) }
    dend_7 { pt3dadd( -16.2934, -24.7575, 9.3089, 0.68 ) }
    dend_7 { pt3dadd( -17.5719, -23.62, 8.38728, 0.23 ) }
    dend_7 { pt3dadd( -19.0829, -22.251, 7.17851, 0.23 ) }
    dend_7 { pt3dadd( -19.8114, -21.6665, 6.55432, 0.23 ) }
    dend_7 { pt3dadd( -20.0363, -21.4977, 6.342, 0.68 ) }
    dend_7 { pt3dadd( -21.4818, -20.3879, 4.9464, 0.91 ) }
    dend_7 { pt3dadd( -23.4293, -18.8015, 3.09601, 0.91 ) }
    dend_7 { pt3dadd( -24.9871, -17.5164, 1.68041, 0.68 ) }
    dend_7 { pt3dadd( -26.7428, -16.0185, 0.229297, 0.68 ) }
    dend_7 { pt3dadd( -28.2508, -14.7445, -0.998576, 0.91 ) }
    dend_7 { pt3dadd( -29.7439, -13.5165, -2.24761, 0.68 ) }
    dend_7 { pt3dadd( -31.7793, -11.8934, -4.04298, 0.46 ) }
    dend_7 { pt3dadd( -33.1469, -10.8001, -5.31307, 0.68 ) }
    dend_7 { pt3dadd( -35.0844, -9.17954, -7.29769, 0.46 ) }
    dend_7 { pt3dadd( -36.4264, -8.04091, -8.77805, 0.46 ) }
    dend_7 { pt3dadd( -38.5265, -6.37217, -11.3083, 0.46 ) }
    dend_7 { pt3dadd( -40.1826, -5.16718, -13.4448, 0.46 ) }
    dend_7 { pt3dadd( -41.0691, -4.54032, -14.6704, 0.68 ) }
    dend_7 { pt3dadd( -41.6808, -4.11451, -15.5881, 0.68 ) }
    dend_7 { pt3dadd( -42.7035, -3.41532, -17.3189, 0.46 ) }
    dend_7 { pt3dadd( -44.2466, -2.32248, -19.9269, 0.46 ) }
    dend_7 { pt3dadd( -45.1859, -1.6128, -21.5611, 0.46 ) }
    dend_7 { pt3dadd( -46.3445, -0.738381, -23.6896, 0.46 ) }
    dend_7 { pt3dadd( -47.8247, 0.317452, -26.6686, 0.46 ) }
    dend_7 { pt3dadd( -49.1463, 1.15584, -29.4116, 0.46 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 44/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -45.4823, -35.1735, 56.8067, 0.46 ) }
    dend_5 { pt3dadd( -47.3439, -37.3906, 60.1717, 0.46 ) }
    dend_5 { pt3dadd( -48.5051, -39.0672, 62.1606, 0.46 ) }
    dend_5 { pt3dadd( -49.2104, -40.2176, 63.6161, 0.46 ) }
    dend_5 { pt3dadd( -49.691, -41.02, 64.7829, 0.46 ) }
    dend_5 { pt3dadd( -50.1629, -41.7392, 65.8832, 0.46 ) }
    dend_5 { pt3dadd( -51.2559, -43.1896, 68.169, 0.46 ) }
    dend_5 { pt3dadd( -52.5645, -44.7561, 70.7447, 0.68 ) }
    dend_5 { pt3dadd( -54.2293, -46.373, 73.6744, 0.68 ) }
    dend_5 { pt3dadd( -56.2408, -47.8792, 76.839, 0.68 ) }
    dend_5 { pt3dadd( -57.7001, -48.7467, 78.934, 0.68 ) }
    dend_5 { pt3dadd( -59.1931, -49.4857, 80.6537, 0.46 ) }
    dend_5 { pt3dadd( -60.9624, -50.2499, 82.2229, 0.46 ) }
    dend_5 { pt3dadd( -62.3346, -50.7952, 83.2444, 0.46 ) }
    dend_5 { pt3dadd( -63.5102, -51.2898, 83.9861, 0.68 ) }
    dend_5 { pt3dadd( -65.1647, -52.1434, 85.111, 0.68 ) }
    dend_5 { pt3dadd( -68.576, -54.2411, 88.0269, 0.46 ) }
    dend_5 { pt3dadd( -70.7936, -55.8091, 90.348, 0.46 ) }
    dend_5 { pt3dadd( -72.6111, -57.285, 92.8124, 0.46 ) }
    dend_5 { pt3dadd( -72.9547, -57.5842, 93.4358, 0.46 ) }
    dend_5 { pt3dadd( -74.7572, -59.2382, 97.7194, 0.46 ) }
    dend_5 { pt3dadd( -75.5583, -60.0148, 100.226, 0.46 ) }
    dend_5 { pt3dadd( -75.8745, -60.2883, 101.635, 0.46 ) }
    dend_5 { pt3dadd( -76.4482, -60.7194, 104.655, 0.46 ) }
    dend_5 { pt3dadd( -76.8832, -60.9036, 106.729, 0.46 ) }
    dend_5 { pt3dadd( -77.3511, -60.9649, 108.955, 0.46 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 70/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -45.4823, -35.1735, 56.8067, 0.46 ) }
    dend_4 { pt3dadd( -46.6364, -34.5904, 56.58, 0.46 ) }
    dend_4 { pt3dadd( -47.185, -34.281, 56.5418, 0.23 ) }
    dend_4 { pt3dadd( -48.0078, -33.8026, 56.5382, 0.23 ) }
    dend_4 { pt3dadd( -49.3621, -33.0364, 56.5745, 0.23 ) }
    dend_4 { pt3dadd( -49.7437, -32.8495, 56.588, 0.46 ) }
    dend_4 { pt3dadd( -51.2051, -32.2152, 56.6423, 0.46 ) }
    dend_4 { pt3dadd( -52.0876, -31.8575, 56.7167, 0.46 ) }
    dend_4 { pt3dadd( -52.8168, -31.5827, 56.7867, 0.46 ) }
    dend_4 { pt3dadd( -53.6987, -31.2859, 56.8832, 0.46 ) }
    dend_4 { pt3dadd( -54.9261, -31.0054, 56.9627, 0.46 ) }
    dend_4 { pt3dadd( -55.7274, -30.943, 56.9423, 0.23 ) }
    dend_4 { pt3dadd( -56.5348, -31.0364, 56.8299, 0.23 ) }
    dend_4 { pt3dadd( -57.151, -31.1828, 56.6906, 0.23 ) }
    dend_4 { pt3dadd( -57.9873, -31.4473, 56.4771, 0.46 ) }
    dend_4 { pt3dadd( -58.8545, -31.7438, 56.2512, 0.46 ) }
    dend_4 { pt3dadd( -59.9023, -32.1083, 56.0613, 0.46 ) }
    dend_4 { pt3dadd( -60.485, -32.3319, 56.0061, 0.23 ) }
    dend_4 { pt3dadd( -61.5422, -32.7505, 55.9857, 0.23 ) }
    dend_4 { pt3dadd( -62.1769, -32.9738, 56.0165, 0.23 ) }
    dend_4 { pt3dadd( -63.3979, -33.2884, 56.1383, 0.23 ) }
    dend_4 { pt3dadd( -64.6909, -33.5244, 56.2931, 0.23 ) }
    dend_4 { pt3dadd( -65.5029, -33.6325, 56.3865, 0.46 ) }
    dend_4 { pt3dadd( -66.7221, -33.7428, 56.4566, 0.46 ) }
    dend_4 { pt3dadd( -68.0729, -33.8326, 56.4629, 0.46 ) }
    dend_4 { pt3dadd( -69.2478, -33.8642, 56.4069, 0.46 ) }
    dend_4 { pt3dadd( -70.1319, -33.8489, 56.355, 0.68 ) }
    dend_4 { pt3dadd( -71.4723, -33.7875, 56.2519, 0.46 ) }
    dend_4 { pt3dadd( -72.8624, -33.6863, 56.1761, 0.46 ) }
    dend_4 { pt3dadd( -74.0969, -33.5507, 56.1474, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_4 { pt3dadd( -75.5375, -33.3743, 56.1824, 0.46 ) }
    dend_4 { pt3dadd( -76.7346, -33.2297, 56.2871, 0.46 ) }
    dend_4 { pt3dadd( -78.0409, -33.0479, 56.4834, 0.46 ) }
    dend_4 { pt3dadd( -78.6379, -32.9524, 56.6098, 0.46 ) }
    dend_4 { pt3dadd( -79.5197, -32.7872, 56.8542, 0.46 ) }
    dend_4 { pt3dadd( -80.7753, -32.5063, 57.2207, 0.46 ) }
    dend_4 { pt3dadd( -81.6062, -32.2851, 57.4532, 0.46 ) }
    dend_4 { pt3dadd( -81.9997, -32.1596, 57.5464, 0.46 ) }
    dend_4 { pt3dadd( -83.0561, -31.7666, 57.7899, 0.46 ) }
    dend_4 { pt3dadd( -84.262, -31.3425, 58.0001, 0.91 ) }
    dend_4 { pt3dadd( -85.2046, -31.0266, 58.0988, 0.68 ) }
    dend_4 { pt3dadd( -86.1883, -30.7058, 58.1074, 0.68 ) }
    dend_4 { pt3dadd( -86.9626, -30.4903, 58.0461, 0.68 ) }
    dend_4 { pt3dadd( -87.5897, -30.3403, 57.9412, 0.68 ) }
    dend_4 { pt3dadd( -88.6523, -30.11, 57.6485, 0.68 ) }
    dend_4 { pt3dadd( -89.4021, -29.9602, 57.3616, 0.68 ) }
    dend_4 { pt3dadd( -90.9633, -29.5916, 56.6098, 0.68 ) }
    dend_4 { pt3dadd( -91.8142, -29.4145, 56.1716, 0.68 ) }
    dend_4 { pt3dadd( -92.852, -29.1961, 55.6011, 0.68 ) }
    dend_4 { pt3dadd( -93.5887, -29.0158, 55.1751, 0.68 ) }
    dend_4 { pt3dadd( -94.2017, -28.812, 54.8109, 0.68 ) }
    dend_4 { pt3dadd( -95.026, -28.4892, 54.2517, 0.68 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 22/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -54.5983, -37.2873, 50.3618, 0.46 ) }
    dend_20 { pt3dadd( -55.8602, -37.2098, 48.8505, 0.46 ) }
    dend_20 { pt3dadd( -57.5806, -37.1042, 46.79, 0.23 ) }
    dend_20 { pt3dadd( -59.4832, -36.9875, 44.5113, 0.23 ) }
    dend_20 { pt3dadd( -60.3386, -36.935, 43.4866, 0.23 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 27/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -54.5983, -37.2873, 50.3618, 0.46 ) }
    dend_19 { pt3dadd( -55.3926, -36.8364, 51.2438, 0.46 ) }
    dend_19 { pt3dadd( -56.7113, -36.0878, 52.708, 0.46 ) }
    dend_19 { pt3dadd( -58.0075, -35.352, 54.1472, 0.68 ) }
    dend_19 { pt3dadd( -59.0058, -34.7853, 55.2557, 0.68 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 32/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -12.8726, -40.3156, 15.7638, 0.91 ) }
    dend_10 { pt3dadd( -14.0648, -41.1203, 16.3656, 0.91 ) }
    dend_10 { pt3dadd( -15.1462, -41.9601, 16.9311, 0.91 ) }
    dend_10 { pt3dadd( -15.985, -42.739, 17.3095, 0.68 ) }
    dend_10 { pt3dadd( -16.8018, -43.7475, 17.6025, 0.68 ) }
    dend_10 { pt3dadd( -17.225, -44.4152, 17.7156, 0.68 ) }
    dend_10 { pt3dadd( -17.527, -45.0034, 17.799, 0.68 ) }
    dend_10 { pt3dadd( -17.9444, -46.1267, 17.9325, 0.68 ) }
    dend_10 { pt3dadd( -18.3369, -47.5177, 18.1397, 0.68 ) }
    dend_10 { pt3dadd( -18.6582, -48.9593, 18.4112, 0.91 ) }
    dend_10 { pt3dadd( -18.8529, -49.8673, 18.6093, 0.68 ) }
    dend_10 { pt3dadd( -19.1307, -51.0241, 18.895, 0.68 ) }
    dend_10 { pt3dadd( -19.5899, -52.6962, 19.3434, 0.68 ) }
    dend_10 { pt3dadd( -20.0663, -54.0317, 19.7516, 0.68 ) }
    dend_10 { pt3dadd( -20.2414, -54.434, 19.8944, 0.68 ) }
    dend_10 { pt3dadd( -20.7631, -55.4499, 20.2246, 0.46 ) }
    dend_10 { pt3dadd( -21.1006, -56.0672, 20.4046, 0.91 ) }
    dend_10 { pt3dadd( -21.5765, -56.9324, 20.6373, 1.37 ) }
    dend_10 { pt3dadd( -22.1133, -58.0082, 20.9263, 0.91 ) }
    dend_10 { pt3dadd( -22.8733, -59.6003, 21.4922, 0.68 ) }
    dend_10 { pt3dadd( -23.3567, -60.6318, 21.9259, 0.91 ) }
    dend_10 { pt3dadd( -23.8878, -61.8189, 22.4439, 0.68 ) }
    dend_10 { pt3dadd( -24.6324, -63.4244, 23.1619, 0.68 ) }
    dend_10 { pt3dadd( -25.1376, -64.5018, 23.634, 0.68 ) }
    dend_10 { pt3dadd( -25.7585, -65.8896, 24.217, 0.68 ) }
    dend_10 { pt3dadd( -26.2253, -66.9111, 24.608, 1.14 ) }
    dend_10 { pt3dadd( -27.0235, -68.4226, 25.1625, 0.68 ) }
    dend_10 { pt3dadd( -27.6414, -69.4007, 25.4699, 0.68 ) }
    dend_10 { pt3dadd( -28.3207, -70.326, 25.7063, 0.46 ) }
    dend_10 { pt3dadd( -28.9554, -71.0861, 25.8864, 0.46 ) }
    dend_10 { pt3dadd( -29.6725, -71.8989, 26.0638, 0.23 ) }
    dend_10 { pt3dadd( -30.6105, -72.8889, 26.2735, 0.23 ) }
    dend_10 { pt3dadd( -31.1715, -73.4621, 26.3867, 0.91 ) }
    dend_10 { pt3dadd( -32.3195, -74.6532, 26.5611, 0.23 ) }
    dend_10 { pt3dadd( -33.3015, -75.6852, 26.6679, 1.14 ) }
    dend_10 { pt3dadd( -34.2825, -76.7696, 26.7419, 0.46 ) }
    dend_10 { pt3dadd( -35.2658, -77.9533, 26.7682, 0.46 ) }
    dend_10 { pt3dadd( -36.2439, -79.2971, 26.7001, 0.46 ) }
    dend_10 { pt3dadd( -36.7876, -80.1751, 26.6125, 0.91 ) }
    dend_10 { pt3dadd( -37.3126, -81.2004, 26.4654, 0.46 ) }
    dend_10 { pt3dadd( -37.8194, -82.5322, 26.2362, 0.46 ) }
    dend_10 { pt3dadd( -38.08, -83.368, 26.0816, 0.46 ) }
    dend_10 { pt3dadd( -38.4489, -84.7751, 25.8352, 0.46 ) }
    dend_10 { pt3dadd( -38.735, -86.0986, 25.5891, 0.46 ) }
    dend_10 { pt3dadd( -38.9246, -87.0061, 25.3842, 0.91 ) }
    dend_10 { pt3dadd( -39.274, -88.4133, 24.9569, 0.68 ) }
    dend_10 { pt3dadd( -39.6805, -89.6747, 24.4806, 0.68 ) }
    dend_10 { pt3dadd( -40.0413, -90.4612, 24.1156, 0.68 ) }
    dend_10 { pt3dadd( -40.8682, -91.6231, 23.3701, 0.68 ) }
    dend_10 { pt3dadd( -41.8978, -92.7051, 22.3941, 0.68 ) }
    dend_10 { pt3dadd( -42.8251, -93.5599, 21.4058, 0.68 ) }
    dend_10 { pt3dadd( -43.3819, -93.9951, 20.7683, 1.14 ) }
    dend_10 { pt3dadd( -44.3117, -94.5883, 19.7347, 0.91 ) }
    dend_10 { pt3dadd( -45.6074, -95.2323, 18.4082, 0.68 ) }
    dend_10 { pt3dadd( -46.448, -95.5696, 17.5897, 0.68 ) }
    dend_10 { pt3dadd( -47.4955, -95.9982, 16.5681, 0.91 ) }
    dend_10 { pt3dadd( -48.8016, -96.6266, 15.3286, 0.68 ) }
    dend_10 { pt3dadd( -50.0596, -97.3599, 14.2, 0.91 ) }
    dend_10 { pt3dadd( -51.1065, -98.1068, 13.3898, 0.91 ) }
    dend_10 { pt3dadd( -52.4039, -99.1597, 12.5844, 0.91 ) }
    dend_10 { pt3dadd( -53.5584, -100.121, 12.0685, 0.68 ) }
    dend_10 { pt3dadd( -54.8084, -101.22, 11.7105, 0.68 ) }
    dend_10 { pt3dadd( -56.0407, -102.379, 11.5262, 0.68 ) }
    dend_10 { pt3dadd( -57.5958, -103.882, 11.4578, 0.68 ) }
    dend_10 { pt3dadd( -58.6937, -104.933, 11.5059, 0.68 ) }
    dend_10 { pt3dadd( -59.7832, -105.918, 11.6373, 0.91 ) }
    dend_10 { pt3dadd( -61.1882, -107.062, 11.879, 0.68 ) }
    dend_10 { pt3dadd( -62.2609, -107.846, 12.0273, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( -63.1215, -108.419, 12.1192, 0.68 ) }
    dend_10 { pt3dadd( -64.3043, -109.166, 12.2081, 0.23 ) }
    dend_10 { pt3dadd( -65.2388, -109.765, 12.2678, 0.68 ) }
    dend_10 { pt3dadd( -66.9389, -110.919, 12.3606, 0.23 ) }
    dend_10 { pt3dadd( -68.1584, -111.806, 12.4244, 0.23 ) }
    dend_10 { pt3dadd( -68.7717, -112.313, 12.4588, 0.46 ) }
    dend_10 { pt3dadd( -69.6806, -113.162, 12.4753, 0.23 ) }
    dend_10 { pt3dadd( -70.2635, -113.771, 12.4424, 0.23 ) }
    dend_10 { pt3dadd( -70.7167, -114.333, 12.3181, 0.46 ) }
    dend_10 { pt3dadd( -71.3933, -115.228, 11.9558, 0.23 ) }
    dend_10 { pt3dadd( -71.9226, -115.929, 11.5615, 0.46 ) }
    dend_10 { pt3dadd( -72.8459, -117.177, 10.6608, 0.46 ) }
    dend_10 { pt3dadd( -73.5591, -118.111, 9.73336, 0.46 ) }
    dend_10 { pt3dadd( -74.3835, -119.303, 8.38637, 0.46 ) }
    dend_10 { pt3dadd( -75.1747, -120.427, 7.01446, 0.46 ) }
    dend_10 { pt3dadd( -75.9141, -121.442, 5.65931, 0.46 ) }
    dend_10 { pt3dadd( -76.455, -122.163, 4.62246, 0.91 ) }
    dend_10 { pt3dadd( -77.7368, -123.873, 2.00614, 0.91 ) }
    dend_10 { pt3dadd( -78.9152, -125.546, -0.667825, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 19/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -12.8726, -40.3156, 15.7638, 0.68 ) }
    dend_9 { pt3dadd( -12.8442, -40.7793, 14.3033, 0.68 ) }
    dend_9 { pt3dadd( -12.465, -41.7479, 12.2957, 0.68 ) }
    dend_9 { pt3dadd( -11.8641, -42.787, 10.4107, 0.68 ) }
    dend_9 { pt3dadd( -11.1372, -43.7338, 8.7415, 0.68 ) }
    dend_9 { pt3dadd( -10.3326, -44.5761, 7.22037, 0.46 ) }
    dend_9 { pt3dadd( -9.1824, -45.6482, 5.24424, 0.46 ) }
    dend_9 { pt3dadd( -7.68651, -46.8854, 3.18229, 0.46 ) }
    dend_9 { pt3dadd( -6.97332, -47.4185, 2.36569, 0.46 ) }
    dend_9 { pt3dadd( -6.08146, -48.0264, 1.4429, 0.68 ) }
    dend_9 { pt3dadd( -4.85704, -48.794, 0.13598, 0.46 ) }
    dend_9 { pt3dadd( -3.17329, -49.7297, -1.78055, 0.68 ) }
    dend_9 { pt3dadd( -1.47007, -50.5758, -3.69564, 0.46 ) }
    dend_9 { pt3dadd( -0.620004, -50.9634, -4.65614, 0.46 ) }
    dend_9 { pt3dadd( 0.412114, -51.4481, -5.8472, 0.46 ) }
    dend_9 { pt3dadd( 1.90604, -52.0993, -7.49937, 0.46 ) }
    dend_9 { pt3dadd( 2.65106, -52.3719, -8.23645, 0.68 ) }
    dend_9 { pt3dadd( 4.71905, -52.9715, -10.0817, 0.23 ) }
    dend_9 { pt3dadd( 6.4804, -53.4565, -11.6005, 0.23 ) }
    dend_9 { pt3dadd( 7.7516, -53.8308, -12.6597, 0.23 ) }
    dend_9 { pt3dadd( 9.17166, -54.2492, -13.7399, 0.23 ) }
    dend_9 { pt3dadd( 10.6333, -54.6918, -14.7708, 0.23 ) }
    dend_9 { pt3dadd( 12.412, -55.2627, -15.9871, 0.46 ) }
    dend_9 { pt3dadd( 14.333, -55.8475, -17.2551, 0.46 ) }
    dend_9 { pt3dadd( 16.1355, -56.3693, -18.358, 0.46 ) }
    dend_9 { pt3dadd( 18.4462, -57.0738, -19.6998, 0.46 ) }
    dend_9 { pt3dadd( 20.2359, -57.6407, -20.7276, 0.46 ) }
    dend_9 { pt3dadd( 21.7854, -58.113, -21.5827, 0.46 ) }
    dend_9 { pt3dadd( 23.4718, -58.5916, -22.4421, 0.23 ) }
    dend_9 { pt3dadd( 24.3074, -58.8092, -22.8393, 0.46 ) }
    dend_9 { pt3dadd( 25.7931, -59.2019, -23.5118, 0.23 ) }
    dend_9 { pt3dadd( 26.9763, -59.5474, -24.0106, 0.23 ) }
    dend_9 { pt3dadd( 27.9599, -59.8413, -24.3872, 0.68 ) }
    dend_9 { pt3dadd( 28.9353, -60.1522, -24.7377, 0.23 ) }
    dend_9 { pt3dadd( 29.8621, -60.4893, -25.0539, 0.23 ) }
    dend_9 { pt3dadd( 31.8948, -61.2, -25.5638, 0.23 ) }
    dend_9 { pt3dadd( 33.695, -61.7671, -25.8927, 0.68 ) }
    dend_9 { pt3dadd( 34.4259, -62.01, -26.0148, 0.68 ) }
    dend_9 { pt3dadd( 34.9918, -62.227, -26.1125, 0.68 ) }
    dend_9 { pt3dadd( 37.5667, -63.3572, -26.603, 0.23 ) }
    dend_9 { pt3dadd( 40.1209, -64.7252, -27.1543, 0.23 ) }
    dend_9 { pt3dadd( 40.7874, -65.1786, -27.3794, 0.46 ) }
    dend_9 { pt3dadd( 41.8887, -66.1266, -28.0612, 0.46 ) }
    dend_9 { pt3dadd( 43.1762, -67.6328, -29.5722, 0.23 ) }
    dend_9 { pt3dadd( 43.8661, -68.6827, -30.8936, 0.46 ) }
    dend_9 { pt3dadd( 44.2975, -69.6152, -32.4904, 0.46 ) }
    dend_9 { pt3dadd( 44.6074, -70.8211, -35.1072, 0.46 ) }
    dend_9 { pt3dadd( 44.6709, -71.8568, -37.8662, 0.23 ) }
    dend_9 { pt3dadd( 44.5943, -72.5845, -40.1997, 0.68 ) }
    dend_9 { pt3dadd( 44.5664, -72.782, -40.9428, 0.68 ) }
    dend_9 { pt3dadd( 44.3991, -73.5406, -44.131, 0.23 ) }
    dend_9 { pt3dadd( 44.2375, -74.3145, -47.7679, 0.46 ) }
    dend_9 { pt3dadd( 44.1723, -74.9673, -50.7329, 0.46 ) }
    dend_9 { pt3dadd( 44.1012, -75.506, -53.0328, 0.46 ) }
    dend_9 { pt3dadd( 43.9093, -76.4406, -56.8209, 0.23 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_41, dend_38, dend_31, dend_26, dend_23, dend_0, dend_45, dend_42, dend_40, dend_39, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_14, dend_1, dend_44, dend_43, dend_35, dend_34, dend_30, dend_29, dend_16, dend_15, dend_11, dend_2, dend_37, dend_36, dend_22, dend_17, dend_13, dend_12, dend_6, dend_3, dend_21, dend_18, dend_8, dend_7, dend_5, dend_4, dend_20, dend_19, dend_10, dend_9]}
    ModelViewParmSubset_2 = new SectionList()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_41, dend_38, dend_31, dend_26, dend_23, dend_0, dend_45, dend_42, dend_40, dend_39, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_14, dend_1, dend_44, dend_43, dend_35, dend_34, dend_30, dend_29, dend_16, dend_15, dend_11, dend_2, dend_37, dend_36, dend_22, dend_17, dend_13, dend_12, dend_6, dend_3, dend_21, dend_18, dend_8, dend_7, dend_5, dend_4, dend_20, dend_19, dend_10, dend_9]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_46 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_45 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_39 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_25 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_24 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_43 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_34 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_13 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_12 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_3 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_21 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_18 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_7 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_5 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_4 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_10 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_9 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_31 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_38 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_33 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_1 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_32 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_14 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_26 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_23 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_15 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_40 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_2 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_41 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_35 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_6 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_16 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_29 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_30 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_42 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_27 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_8 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_11 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_37 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_36 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_22 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_44 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_19 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_20 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_14, dend_14, dend_1, dend_1, dend_1, axon_1, axon_1, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_46 nseg = 3
    dend_45 nseg = 7
    dend_39 nseg = 3
    dend_25 nseg = 3
    dend_24 nseg = 3
    dend_43 nseg = 3
    dend_34 nseg = 3
    dend_13 nseg = 5
    dend_12 nseg = 5
    dend_3 nseg = 3
    dend_21 nseg = 3
    dend_18 nseg = 3
    dend_7 nseg = 3
    dend_5 nseg = 3
    dend_4 nseg = 3
    dend_10 nseg = 7
    dend_9 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L1_NGCDA_46b45974f4_0_0


