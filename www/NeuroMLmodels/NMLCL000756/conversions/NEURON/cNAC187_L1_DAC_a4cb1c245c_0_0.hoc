// Cell: cNAC187_L1_DAC_a4cb1c245c_0_0
/*
{
  "id" : "cNAC187_L1_DAC_a4cb1c245c_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-7.13528, -1.16888, 0.0, 4.15795", "-6.42457, -1.07374, 0.0, 7.84613", "-5.71387, -0.978592, 0.0, 9.14199", "-5.00317, -0.883447, 0.0, 9.83423", "-4.29246, -0.788301, 0.0, 10.5043", "-3.58176, -0.693156, 0.0, 11.2615", "-2.87105, -0.598011, 0.0, 11.8079", "-2.16035, -0.502865, 0.0, 12.0209", "-1.44965, -0.40772, 0.0, 12.1436", "-0.738941, -0.312575, 0.0, 12.1855", "-0.0282374, -0.217429, 0.0, 12.0178", "0.682467, -0.122284, 0.0, 11.8284", "1.39317, -0.0271384, 0.0, 11.3574", "2.10387, 0.068007, 0.0, 10.5983", "2.81458, 0.163152, 0.0, 9.98907", "3.52528, 0.258298, 0.0, 9.19047", "4.23599, 0.353443, 0.0, 8.37922", "4.94669, 0.448588, 0.0, 7.41071", "5.65739, 0.543734, 0.0, 6.60365", "6.3681, 0.638879, 0.0, 5.85286", "7.0788, 0.734025, 0.0, 3.31328" ]
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "7.49967, -0.413702, 0.05, 2.32", "12.8154, -1.92819, -0.710818, 2.32", "14.8913, -2.51962, -1.00793, 2.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000186524988
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "9.51967, -0.0637015, 8.55, 1.59", "12.5484, 1.02686, 9.70055, 1.59", "14.4166, 1.69953, 10.4102, 1.35", "15.8467, 2.21448, 10.9535, 1.35", "19.1274, 3.39574, 12.1997, 1.35", "21.2554, 4.16196, 13.0081, 1.35" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000186524988
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "5.99967, 2.79629, 12.2, 0.98", "8.25689, 4.35323, 13.0386, 0.98", "10.5453, 6.3614, 14.0366, 0.98", "13.2217, 8.71006, 15.2038, 0.98", "15.3565, 10.5834, 16.1347, 0.98", "17.4743, 12.4419, 17.0583, 0.98", "19.3631, 14.0994, 17.882, 0.98", "20.5367, 15.5535, 18.6704, 0.98" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000186524988
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-3.91033, 1.50629, 9.35, 1.71", "-5.99372, 3.61371, 9.35, 1.71", "-7.75816, 5.3985, 9.35, 1.71", "-8.80549, 6.45791, 9.35, 1.71" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000186524988
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-0.96033, -5.19371, -6.55, 2.2", "-1.10453, -8.5282, -6.55, 2.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000186524988
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-6.43033, -4.21371, -1.25, 0.98", "-9.02474, -4.55634, -1.10678, 0.98", "-10.5415, -4.86572, -1.06055, 0.98", "-11.4168, -5.09733, -1.05046, 0.86", "-13.3001, -5.64463, -1.08408, 0.86", "-15.0791, -6.16095, -1.13072, 0.86", "-17.0531, -6.69241, -1.1661, 1.22", "-18.5682, -7.08051, -1.20181, 1.22", "-20.2162, -7.53034, -1.25088, 0.98", "-21.6452, -7.94459, -1.28553, 0.86", "-23.0416, -8.34643, -1.27357, 0.73", "-24.5697, -8.68558, -1.20478, 0.73", "-25.5526, -8.84146, -1.11036, 0.61", "-26.4468, -8.94446, -0.984851, 0.61", "-28.0091, -9.0234, -0.769721, 0.61", "-29.5498, -9.09181, -0.617621, 1.1", "-30.9929, -9.19164, -0.56064, 0.86", "-32.5344, -9.33704, -0.574825, 0.73", "-33.5852, -9.45991, -0.628991, 0.61", "-35.8268, -9.74082, -0.82207, 0.61", "-37.4911, -9.97602, -1.04732, 0.61", "-38.7803, -10.1466, -1.31855, 0.61", "-39.7177, -10.2593, -1.579, 0.61", "-40.7094, -10.3699, -1.82453, 0.61", "-41.5984, -10.4577, -2.00026, 0.61", "-42.5046, -10.4907, -2.13729, 0.49", "-44.3672, -10.4327, -2.37594, 0.49", "-46.2139, -10.3645, -2.60924, 0.49", "-48.0421, -10.2942, -2.91717, 0.61", "-50.2601, -10.2293, -3.31484, 1.1", "-53.0334, -10.2397, -3.81364, 1.1", "-53.9967, -10.2747, -3.98717, 1.1", "-55.4874, -10.3884, -4.2473, 1.1", "-58.6126, -10.7044, -4.89913, 0.98", "-59.8121, -10.8934, -5.21478, 0.86", "-61.2557, -11.3003, -5.60733, 0.73", "-61.4447, -11.3779, -5.65994, 0.73", "-61.9951, -11.6311, -5.80823, 0.73", "-63.7699, -12.4792, -6.228, 0.98", "-65.2166, -13.2946, -6.53403, 0.86", "-66.7062, -14.2177, -6.88282, 0.73", "-68.1388, -15.1306, -7.21886, 0.73", "-69.3097, -15.8525, -7.44345, 0.73", "-71.2067, -17.0007, -7.72556, 0.73", "-72.1682, -17.6, -7.81658, 0.61", "-73.9519, -18.6745, -7.9684, 0.61", "-74.3974, -18.9331, -8.01043, 0.61", "-75.9726, -19.8368, -8.17216, 0.61", "-76.8359, -20.3546, -8.27829, 0.61", "-78.7624, -21.5507, -8.53248, 0.61", "-80.6383, -22.6577, -8.801, 0.49", "-82.7516, -23.9322, -9.15611, 0.49", "-84.322, -24.9411, -9.47551, 0.49", "-85.888, -25.9452, -9.88295, 0.49", "-87.7221, -27.0701, -10.4627, 0.49", "-89.2442, -28.0004, -11.0209, 0.49", "-91.0063, -29.0627, -11.7845, 0.49", "-91.8839, -29.563, -12.1897, 0.49", "-93.5532, -30.4419, -12.9963, 0.49", "-95.6818, -31.4597, -14.0316, 0.49", "-96.8452, -31.9895, -14.622, 0.49", "-99.0444, -32.9659, -15.6626, 0.49", "-100.746, -33.6779, -16.3663, 0.49", "-101.752, -34.1008, -16.6965, 0.49", "-103.255, -34.7816, -17.0557, 0.49", "-105.564, -35.8618, -17.4319, 0.49", "-107.743, -36.9013, -17.6486, 0.49", "-109.058, -37.5902, -17.7346, 0.49", "-111.215, -38.7531, -17.8372, 0.49", "-113.571, -40.0671, -17.8931, 0.49", "-115.841, -41.3076, -17.9007, 0.49", "-118.143, -42.5082, -17.9103, 0.49", "-120.17, -43.4281, -17.9589, 0.49", "-122.375, -44.4033, -18.0421, 0.49", "-125.302, -45.6118, -18.1991, 0.49", "-127.129, -46.2643, -18.3213, 0.49", "-128.877, -46.776, -18.4695, 0.49", "-131.866, -47.3994, -18.7599, 0.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000186524988,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-6.23033, 3.29629, -0.9, 1.47", "-7.43408, 4.33518, -1.04504, 1.47", "-8.64021, 5.34096, -1.34428, 1.47", "-9.3449, 5.91609, -1.5439, 1.47", "-11.1714, 7.35288, -2.11654, 1.47", "-12.2234, 8.13058, -2.49258, 1.47", "-13.5255, 9.05832, -2.98657, 1.35", "-15.2602, 10.1741, -3.70452, 1.22", "-16.5257, 10.9439, -4.28404, 1.22", "-17.5818, 11.5881, -4.80781, 1.1", "-18.9197, 12.4356, -5.54361, 1.1", "-19.5591, 12.8559, -5.91869, 0.86", "-20.4798, 13.4626, -6.465, 0.73", "-21.1771, 13.9484, -6.8771, 0.73", "-22.5128, 14.9691, -7.78146, 0.73", "-23.1902, 15.5989, -8.27608, 0.73", "-23.6114, 16.1149, -8.62321, 0.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000186524988
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.0788, 0.734025, 0.0, 0.49", "21.9462, 2.72439, 0.0, 0.49", "36.8135, 4.71475, 0.0, 0.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "14.8913, -2.51962, -1.00793, 0.98", "13.9901, -2.38496, -9.24329, 0.98" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "21.2554, 4.16196, 13.0081, 1.1", "23.935, 5.49498, 12.8652, 1.1", "25.2168, 6.10357, 12.8051, 0.98", "27.1371, 7.02086, 12.7068, 0.49", "28.2841, 7.61931, 12.7157, 0.49", "28.9502, 7.99749, 12.7385, 0.49", "30.3684, 8.85715, 12.7452, 0.49", "32.2652, 10.1919, 12.7256, 0.61", "33.7802, 11.3605, 12.6868, 0.61", "36.0135, 13.1648, 12.6027, 0.61", "37.4414, 14.3426, 12.5311, 0.61", "39.4909, 16.1728, 12.3464, 0.61", "40.3006, 17.0057, 12.2324, 0.37", "41.0871, 17.9415, 12.0679, 0.37", "41.8073, 18.8458, 11.8709, 0.37", "42.5044, 19.7405, 11.6143, 0.37", "43.5895, 21.0469, 11.2175, 0.37", "44.3846, 21.907, 10.9364, 0.37", "45.3307, 22.8192, 10.5864, 0.37", "46.4075, 23.7245, 10.1943, 0.37", "47.0946, 24.2488, 9.95704, 0.37", "48.782, 25.4478, 9.38244, 0.37", "50.5595, 26.619, 8.82536, 0.37", "51.1702, 27.0102, 8.62271, 0.37", "52.9168, 28.1642, 8.12704, 0.37", "54.094, 28.9886, 7.77705, 0.37", "55.3584, 29.8717, 7.36822, 0.37", "56.8745, 30.9533, 6.79555, 0.37", "58.7704, 32.3355, 5.98916, 0.37", "60.7853, 33.8675, 5.04482, 0.37", "62.7321, 35.4451, 3.9921, 0.37", "64.1041, 36.6448, 3.15722, 0.37", "65.4918, 37.9204, 2.24242, 0.37", "66.5885, 38.9967, 1.52093, 0.37", "67.7001, 40.0805, 0.86446, 0.37", "68.9237, 41.2945, 0.121785, 0.37", "70.4593, 42.8349, -0.718446, 0.37", "72.7602, 45.0616, -1.87794, 0.37", "74.6062, 46.7281, -2.7033, 0.37", "76.4664, 48.2234, -3.53289, 0.37", "78.7319, 49.9392, -4.5128, 0.37", "80.4455, 51.1406, -5.19541, 0.37", "81.6942, 51.9192, -5.68102, 0.37", "82.9468, 52.6267, -6.19832, 0.37", "84.9123, 53.5873, -7.21471, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "21.2554, 4.16196, 13.0081, 1.22", "22.7454, 2.43887, 15.9197, 1.22", "24.5085, 0.481463, 18.7915, 0.98", "25.2873, -0.395962, 19.9515, 0.98", "26.0731, -1.28133, 21.1219, 0.98", "26.5808, -1.85331, 21.8781, 0.98", "27.4192, -2.79786, 23.1268, 0.98", "28.2792, -3.76494, 23.9541, 0.98", "28.6592, -4.12023, 24.1935, 0.98" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "20.5367, 15.5535, 18.6704, 0.61", "22.7518, 14.2258, 23.0535, 0.61", "23.2842, 13.7925, 24.0903, 0.61", "24.1745, 12.735, 26.1696, 0.61", "24.4188, 12.3556, 26.7893, 0.61", "25.0003, 11.3144, 28.2287, 0.61", "25.8647, 9.52543, 30.3206, 0.61", "26.2907, 8.43147, 31.3025, 0.61", "26.9952, 6.6821, 32.786, 0.61", "27.4831, 5.68457, 33.731, 0.61", "28.2856, 4.62891, 35.1507, 0.61", "29.5983, 3.25025, 37.7441, 0.61", "30.736, 2.20505, 40.1176, 0.49", "31.25, 1.8259, 41.2637, 0.98", "33.2015, 0.824426, 45.9076, 0.98", "35.6503, 0.17409, 52.3305, 0.98", "37.3566, 0.382674, 57.552, 0.73", "38.2463, 0.869469, 60.3919, 0.73", "39.2995, 1.93364, 64.0761, 0.73", "40.1024, 3.15636, 67.1504, 0.73", "40.6735, 4.56785, 69.6317, 0.73", "42.0431, 9.47849, 76.321, 0.61", "42.5916, 11.9568, 79.282, 0.61", "42.992, 14.7706, 82.4992, 0.61", "43.1235, 16.2027, 84.1466, 0.61", "43.2086, 18.5435, 86.9133, 0.61", "43.0322, 21.2573, 90.3109, 0.61", "42.5045, 24.1541, 94.0937, 0.61", "41.7586, 27.2614, 98.3643, 0.61", "41.2159, 29.2867, 101.266, 0.61", "40.5693, 31.4696, 104.532, 0.61", "39.2696, 35.117, 110.364, 0.61", "38.6124, 36.5777, 112.922, 0.49" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "20.5367, 15.5535, 18.6704, 0.73", "22.2072, 17.1172, 19.5648, 0.73", "22.9781, 17.9096, 20.0186, 0.61", "24.7698, 19.9229, 21.1944, 0.49", "26.1358, 21.4339, 22.0642, 0.49", "26.938, 22.3409, 22.5754, 0.49", "28.0996, 23.706, 23.303, 0.49", "29.2796, 25.097, 23.8708, 0.49", "30.064, 26.0765, 24.1901, 0.49", "31.3758, 27.8055, 24.5764, 0.49", "32.5149, 29.2943, 24.8466, 0.49", "33.5603, 30.6805, 25.0891, 0.49", "34.929, 32.5145, 25.3361, 0.49", "35.5312, 33.3501, 25.4191, 0.49", "36.2516, 34.4562, 25.5459, 0.37", "37.0029, 35.7582, 25.741, 0.37", "38.0355, 37.5547, 25.8784, 0.37", "38.6433, 38.5793, 25.91, 0.37", "39.3323, 39.64, 25.9647, 0.37", "40.2043, 40.7999, 25.9675, 0.37", "41.3882, 42.1494, 25.918, 0.37", "43.7962, 44.3307, 25.7329, 0.37", "45.4577, 45.5813, 25.6546, 0.37", "47.6162, 46.9899, 25.5362, 0.37", "49.1928, 47.8476, 25.4491, 0.37", "51.0157, 48.7064, 25.3561, 0.37", "52.9873, 49.5271, 25.3119, 0.37", "55.1292, 50.2946, 25.3469, 0.37", "57.7406, 51.0877, 25.2993, 0.37", "59.2659, 51.4993, 25.2105, 0.37", "60.8542, 51.8602, 25.1126, 0.37", "62.7123, 52.1814, 24.9818, 0.37", "64.6333, 52.4445, 24.8538, 0.37", "67.8363, 52.7755, 24.6602, 0.37", "69.2324, 52.8927, 24.6206, 0.37", "71.6368, 53.0721, 24.5995, 0.37", "75.8333, 53.2616, 24.6133, 0.37", "76.6812, 53.2819, 24.6226, 0.37", "78.6458, 53.2957, 24.6603, 0.37", "80.0296, 53.2961, 24.7081, 0.37", "83.0736, 53.3444, 24.798, 0.37", "84.7782, 53.4022, 24.9075, 0.37", "86.599, 53.4634, 25.1187, 0.37", "88.8621, 53.5289, 25.353, 0.37", "90.8728, 53.5973, 25.5013, 0.37", "93.4611, 53.7013, 25.7103, 0.37", "95.8852, 53.8254, 25.9575, 0.37", "97.6759, 54.0293, 26.2241, 0.37", "100.271, 54.4324, 26.7239, 0.37", "102.221, 54.8384, 27.1825, 0.37", "104.948, 55.439, 27.9114, 0.37", "107.976, 56.2155, 28.7934, 0.37", "112.404, 57.5533, 30.1062, 0.37", "114.364, 58.2175, 30.7618, 0.37", "118.705, 59.8402, 32.5053, 0.37", "122.006, 61.1235, 33.9938, 0.37", "124.636, 62.1525, 35.1835, 0.37", "128.129, 63.4096, 36.8331, 0.37", "130.51, 64.0923, 38.0256, 0.37", "133.069, 64.6391, 39.3417, 0.37", "136.46, 64.9671, 41.1625, 0.37", "139.529, 64.8764, 42.8284, 0.37", "141.492, 64.5945, 43.8925, 0.37", "143.93, 63.9229, 45.1691, 0.37", "145.559, 63.291, 45.9324, 0.37", "147.066, 62.5109, 46.5373, 0.37", "148.437, 61.5625, 47.0795, 0.37" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-8.80549, 6.45791, 9.35, 0.86", "-9.72169, 8.75764, 8.96601, 0.86", "-10.3084, 10.1471, 8.52837, 0.86", "-10.9394, 11.5646, 8.00599, 0.86", "-11.2112, 12.1892, 7.70901, 0.86", "-12.0902, 14.2788, 6.47208, 0.86", "-12.7841, 15.9294, 5.32135, 0.86", "-13.2096, 17.0716, 4.28625, 0.86", "-13.4031, 17.6243, 3.7108, 0.86", "-13.9744, 19.2173, 1.9392, 0.86", "-14.5561, 20.6198, 0.346745, 0.73", "-15.3114, 22.1573, -1.40194, 0.73", "-16.049, 23.5985, -2.96672, 0.73", "-16.7524, 24.8716, -4.29575, 0.73", "-17.1348, 25.5018, -4.91951, 0.73", "-17.7668, 26.4569, -5.72336, 0.73", "-18.2218, 27.1542, -6.20292, 0.73", "-18.7085, 27.9616, -6.62969, 0.73", "-19.3444, 29.1173, -7.11104, 0.73", "-19.8897, 30.3678, -7.62412, 0.73", "-20.2269, 31.2932, -8.03196, 0.73", "-20.6175, 32.5144, -8.58059, 0.73", "-21.0682, 33.984, -9.25077, 0.73", "-21.4293, 35.1169, -9.7318, 0.73", "-21.9436, 36.6709, -10.3034, 0.73", "-22.2896, 37.6855, -10.6218, 0.73", "-22.7281, 38.9512, -10.9719, 0.73", "-23.1086, 40.1371, -11.2152, 0.73", "-23.6392, 42.0163, -11.4826, 0.73", "-23.9576, 43.3511, -11.5966, 0.73", "-24.1836, 44.6546, -11.6399, 0.73", "-24.2575, 45.6249, -11.661, 0.73", "-24.1965, 47.6289, -11.5862, 0.73", "-24.1023, 48.3783, -11.4933, 0.73", "-23.85, 49.4408, -11.3555, 0.73", "-23.1318, 51.6155, -11.0727, 0.73", "-22.5071, 53.1052, -10.8817, 0.73", "-21.4565, 55.2406, -10.6193, 0.86", "-20.6414, 56.7493, -10.4392, 0.86", "-19.3458, 59.2158, -10.1493, 0.86", "-18.8193, 60.3452, -10.0647, 0.86", "-18.4916, 61.2162, -10.0529, 0.86", "-18.0654, 62.5842, -10.1206, 0.86", "-17.8382, 63.5203, -10.2605, 0.61", "-17.6038, 64.9453, -10.5198, 0.37", "-17.5127, 67.1664, -10.7236, 0.37", "-17.5539, 68.0121, -10.8161, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-8.80549, 6.45791, 9.35, 1.47", "-10.1771, 6.18644, 10.9441, 1.47", "-12.6851, 5.69002, 13.8591, 1.47", "-14.5904, 5.31291, 16.0735, 1.47", "-16.6575, 4.90376, 18.4761, 1.47" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-1.10453, -8.5282, -6.55, 0.86", "-2.29761, -5.33738, -9.01174, 0.86", "-2.60051, -4.38447, -9.75659, 0.86", "-2.9876, -3.23258, -10.6479, 0.86", "-3.59628, -1.63219, -11.8346, 0.86", "-4.1371, -0.473267, -12.7061, 0.86", "-5.12881, 1.33061, -14.0576, 0.73", "-5.64727, 2.23115, -14.6961, 0.73", "-6.04043, 2.9062, -15.2678, 0.73", "-6.53675, 3.72516, -16.0292, 0.73", "-7.3113, 4.90016, -17.1022, 0.73", "-7.81364, 5.6378, -17.7515, 0.73", "-8.73515, 7.04319, -18.8695, 0.73", "-9.61914, 8.58092, -19.9919, 0.73", "-10.4653, 10.3891, -21.2088, 0.73", "-10.7644, 11.1398, -21.659, 0.73", "-11.3108, 12.781, -22.5029, 0.73", "-11.692, 13.9248, -23.0446, 0.73", "-12.0552, 14.9607, -23.4987, 0.73", "-12.4654, 16.1904, -24.0026, 0.73", "-12.8177, 17.3523, -24.5358, 0.73", "-13.38, 19.1421, -25.5194, 0.73", "-13.8376, 20.4605, -26.2376, 0.73", "-14.5143, 22.1556, -27.1513, 0.73", "-15.0255, 23.2517, -27.713, 0.61", "-15.8914, 25.0447, -28.6904, 0.61", "-16.6605, 26.7177, -29.7486, 0.61", "-17.5651, 28.7643, -31.2087, 0.61", "-17.7066, 29.2414, -31.6312, 0.61", "-17.4312, 29.4918, -32.3746, 0.61", "-15.5231, 29.2223, -34.7294, 0.61", "-13.4836, 28.6087, -36.6455, 0.61", "-12.3269, 28.1441, -37.6247, 0.61", "-10.5378, 27.3147, -38.9252, 0.61", "-10.1337, 27.1089, -39.145, 0.61", "-9.13296, 26.5701, -39.5316, 0.61", "-7.5559, 25.7243, -39.8434, 0.61", "-6.09823, 25.0946, -39.9529, 0.61", "-4.04694, 24.4046, -39.9069, 0.61", "-2.14883, 23.9639, -39.7595, 0.61", "-1.33612, 23.9057, -39.679, 0.37", "-0.313785, 23.9754, -39.5651, 0.37", "0.891369, 24.1905, -39.4284, 0.37", "2.08026, 24.475, -39.3113, 0.37", "3.22408, 24.8297, -39.2458, 0.37", "5.8649, 25.869, -39.1687, 0.37", "7.30681, 26.4389, -39.1233, 0.37", "8.23578, 26.8184, -39.0928, 0.37", "9.15895, 27.2111, -39.0639, 0.37", "11.2645, 28.1456, -39.0262, 0.37", "12.9349, 28.9684, -38.9444, 0.37" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-1.10453, -8.5282, -6.55, 1.59", "-1.35831, -10.6384, -6.07207, 1.59", "-1.48143, -11.9397, -5.86161, 1.59", "-1.5893, -13.0799, -5.67719, 1.59", "-1.79808, -15.2865, -5.32028, 1.59", "-1.9043, -16.4092, -5.13869, 1.59", "-2.00596, -17.4838, -4.96489, 1.59", "-2.10705, -18.8735, -4.52333, 1.59" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-23.6114, 16.1149, -8.62321, 0.49", "-25.314, 17.863, -8.68993, 0.49", "-26.6829, 19.3162, -8.79919, 0.49", "-27.6863, 20.3572, -8.89497, 0.49", "-29.1751, 21.7327, -9.03168, 0.49", "-30.7241, 23.0583, -9.1659, 0.49", "-32.0231, 24.1189, -9.32828, 0.49", "-33.4356, 25.1544, -9.56375, 0.49", "-34.0648, 25.6025, -9.69849, 0.49", "-36.1, 26.9592, -10.1943, 0.49", "-37.0267, 27.5416, -10.3774, 0.49", "-38.5916, 28.5181, -10.5348, 0.49", "-39.8175, 29.3401, -10.5937, 0.49", "-40.7391, 30.0419, -10.5904, 0.49", "-42.1927, 31.3697, -10.5015, 0.49", "-43.7643, 33.1635, -10.23, 0.49", "-44.774, 34.4918, -9.95352, 0.49", "-45.7582, 35.9276, -9.594, 0.49", "-46.422, 37.0438, -9.32166, 0.49", "-46.8937, 38.022, -9.14787, 0.49", "-47.5066, 39.6143, -8.99911, 0.49", "-48.2362, 41.7417, -9.01629, 0.49", "-48.6573, 43.1539, -9.10846, 0.49", "-48.9811, 44.3315, -9.27029, 0.49", "-49.6563, 46.9138, -9.72356, 0.49", "-50.0181, 48.3168, -10.0499, 0.49", "-50.2189, 49.1616, -10.3114, 0.49", "-50.4976, 50.692, -10.8704, 0.49", "-50.7479, 52.221, -11.5065, 0.49" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-23.6114, 16.1149, -8.62321, 0.73", "-24.5529, 16.4213, -9.09522, 0.73", "-26.2639, 17.0276, -9.95182, 0.73", "-26.991, 17.2723, -10.298, 0.73", "-27.8071, 17.5478, -10.6996, 0.61", "-28.5145, 17.7829, -11.044, 0.61", "-29.3041, 18.0599, -11.4704, 0.61", "-29.6485, 18.2012, -11.662, 0.61", "-30.5658, 18.5832, -12.1418, 0.61", "-31.1468, 18.8262, -12.4436, 0.61", "-31.7478, 19.0656, -12.7455, 0.61", "-33.2769, 19.6988, -13.4748, 0.61", "-34.3486, 20.1728, -13.9553, 0.61", "-35.1837, 20.5906, -14.2902, 0.61", "-36.0443, 21.0526, -14.5877, 0.61", "-36.7506, 21.4594, -14.8222, 0.61", "-37.8133, 22.0786, -15.1806, 0.61", "-38.4097, 22.424, -15.3671, 0.61", "-39.3571, 22.9793, -15.6788, 0.61", "-40.3595, 23.5744, -16.0055, 0.61", "-41.5697, 24.3164, -16.4066, 0.61", "-42.8564, 25.1215, -16.8172, 0.61", "-43.741, 25.6784, -17.0835, 0.49", "-44.7249, 26.3085, -17.3593, 0.49", "-45.3322, 26.7183, -17.5268, 0.49", "-46.5152, 27.5873, -17.8291, 0.49", "-47.4568, 28.3065, -18.0255, 0.49", "-48.0986, 28.8446, -18.1557, 0.49", "-49.1805, 29.8202, -18.3992, 0.49", "-50.2736, 30.8952, -18.6545, 0.49", "-50.6831, 31.3221, -18.7508, 0.49", "-51.3284, 32.0218, -18.8582, 0.49", "-51.9579, 32.7522, -18.92, 0.49", "-52.6269, 33.5934, -18.9583, 0.49", "-53.1574, 34.2553, -18.9667, 0.49", "-53.6561, 34.827, -18.9639, 0.49", "-54.55, 35.7543, -18.9921, 0.49", "-55.219, 36.4039, -18.9923, 0.49", "-56.606, 37.6654, -18.9491, 0.49", "-57.6295, 38.5273, -18.8981, 0.49", "-58.1828, 38.9836, -18.9021, 0.49", "-58.8842, 39.5563, -18.9355, 0.49", "-59.9455, 40.3541, -19.053, 0.49", "-60.587, 40.7852, -19.1608, 0.49", "-61.4342, 41.2906, -19.4177, 0.49", "-62.5356, 41.8999, -19.9871, 0.49", "-63.5494, 42.3959, -20.6848, 0.49", "-64.3657, 42.7672, -21.3164, 0.49", "-65.3488, 43.168, -22.1744, 0.49", "-66.9085, 43.7183, -23.6351, 0.49", "-68.3301, 44.1518, -25.0794, 0.37", "-69.1178, 44.3563, -25.9332, 0.37" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "36.8135, 4.71475, 0.0, 0.49", "51.6809, 6.70511, 0.0, 0.49", "66.5482, 8.69548, 0.0, 0.49" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "13.9901, -2.38496, -9.24329, 0.73", "15.9697, -1.76229, -18.7013, 0.73", "15.7276, -4.145, -28.2375, 0.73", "15.328, -4.98685, -29.1538, 0.73", "14.6843, -6.30936, -29.9971, 0.73", "13.9357, -7.69489, -30.7388, 0.73", "13.122, -9.19938, -31.4546, 0.73", "12.5244, -10.5042, -31.9124, 0.73", "12.1783, -11.3756, -32.3766, 0.73", "11.6283, -12.6795, -32.994, 0.73", "10.9972, -14.0774, -33.5636, 0.73", "10.6078, -14.9936, -33.9147, 0.73", "9.84713, -16.6825, -34.5297, 0.73", "9.2909, -17.9079, -34.9666, 0.73", "8.58314, -19.4301, -35.5238, 0.61", "8.01845, -20.7074, -35.9929, 0.61", "7.25862, -22.5157, -36.6424, 0.61", "6.71736, -23.8229, -37.1617, 0.61", "6.17906, -25.2673, -37.7285, 0.49", "5.86012, -26.224, -38.146, 0.49", "5.39591, -27.7512, -38.8934, 0.49", "4.54417, -30.8488, -40.537, 0.49", "4.02614, -33.2245, -42.026, 0.49", "3.66517, -35.4344, -43.6647, 0.49", "3.33962, -38.3968, -46.0885, 0.49", "3.17702, -40.388, -47.8719, 0.49", "3.10879, -41.5364, -48.9755, 0.49", "2.97951, -44.2119, -51.7108, 0.49", "2.78561, -46.3876, -53.8186, 0.49", "2.65795, -47.3018, -54.6359, 0.49", "2.38456, -48.769, -55.571, 0.49", "2.08507, -50.0283, -56.0769, 0.49", "1.75273, -51.312, -56.3416, 0.49", "1.08151, -54.2326, -56.2787, 0.49", "0.634042, -56.3592, -56.0188, 0.49", "0.232626, -58.3938, -55.6886, 0.49", "0.118017, -59.2529, -55.4971, 0.49", "-0.0128022, -60.9184, -55.0844, 0.49", "0.0726298, -62.5711, -54.6465, 0.49" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "13.9901, -2.38496, -9.24329, 0.86", "13.8371, -0.82279, -9.49622, 0.86", "13.6757, 0.929056, -9.67923, 0.73", "13.6359, 1.64383, -9.73044, 0.73", "13.5936, 2.34144, -9.74928, 0.73", "13.4915, 3.90708, -9.70409, 0.73", "13.4595, 4.80687, -9.68682, 0.73", "13.4694, 5.65217, -9.6342, 0.73", "13.5057, 6.46542, -9.60425, 0.73", "13.5829, 7.39262, -9.64112, 0.61", "13.7281, 8.51933, -9.77665, 0.61", "14.0184, 10.0454, -10.1054, 0.61", "14.2257, 10.9539, -10.336, 0.49", "14.5308, 12.0801, -10.629, 0.49", "14.8288, 13.0337, -10.878, 0.49", "15.2, 14.0712, -11.1375, 0.49", "15.5456, 14.8882, -11.3072, 0.37", "15.8175, 15.4686, -11.36, 0.37", "16.276, 16.2819, -11.3335, 0.37", "16.5706, 16.7614, -11.2766, 0.37", "17.0629, 17.4987, -11.1333, 0.37", "17.8066, 18.5298, -10.8613, 0.37", "18.2783, 19.1559, -10.6625, 0.37", "19.0306, 20.1049, -10.3516, 0.37" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "84.9123, 53.5873, -7.21471, 0.37", "86.2638, 52.344, -7.92924, 0.37", "87.7966, 50.934, -8.7396, 0.37", "88.2529, 50.5143, -8.98085, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "84.9123, 53.5873, -7.21471, 0.37", "86.1134, 52.84, -7.72049, 0.37", "87.4951, 51.8521, -8.34253, 0.37", "88.2723, 51.3447, -8.66866, 0.37", "89.2364, 50.7169, -9.10025, 0.37", "90.709, 49.73, -9.79467, 0.37", "92.5676, 48.4819, -10.6864, 0.37", "94.406, 47.2051, -11.5538, 0.37", "95.8949, 46.1847, -12.2175, 0.37", "98.4261, 44.5833, -13.2918, 0.37", "100.848, 43.1456, -14.3072, 0.37", "102.437, 42.2862, -14.9336, 0.37", "104.288, 41.3323, -15.6647, 0.37", "105.743, 40.56, -16.2086, 0.37", "107.01, 39.8722, -16.6617, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "28.6592, -4.12023, 24.1935, 0.49", "29.9185, -3.79345, 25.3062, 0.49" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "28.6592, -4.12023, 24.1935, 0.61", "28.8899, -5.76545, 24.7469, 0.61", "29.075, -7.07974, 25.1729, 0.61", "29.1865, -7.96305, 25.4497, 0.61", "29.2981, -9.0719, 25.77, 0.61", "29.4978, -11.1408, 26.3174, 0.61", "29.6906, -13.0709, 26.8355, 0.61", "29.8405, -14.6401, 27.252, 0.61", "29.9693, -16.1459, 27.6652, 0.49", "30.1732, -18.7638, 28.3839, 0.49", "30.2698, -20.243, 28.7784, 0.49", "30.357, -22.0349, 29.2115, 0.49", "30.4978, -24.7594, 29.8722, 0.49", "30.6175, -26.9611, 30.453, 0.49" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-16.6575, 4.90376, 18.4761, 0.49", "-14.9207, 5.35816, 20.7263, 0.49", "-14.284, 5.5624, 21.6307, 0.49", "-13.2225, 6.02558, 23.4349, 0.49", "-11.1217, 6.95173, 27.3062, 0.49", "-9.79159, 7.55268, 29.6666, 0.49", "-8.97273, 7.9456, 31.0865, 0.49", "-7.55834, 8.76377, 33.7074, 0.49", "-6.05497, 9.72719, 36.4096, 0.49", "-4.79826, 10.7064, 38.606, 0.49", "-3.71928, 11.7178, 40.1966, 0.37", "-2.82475, 12.5978, 41.2435, 0.37", "-2.08455, 13.2798, 41.9198, 0.37", "-0.63285, 14.6322, 42.9604, 0.37", "-0.00444022, 15.2323, 43.3364, 0.37", "1.43186, 16.9264, 44.0668, 0.37", "2.48159, 18.3736, 44.5062, 0.37", "3.0772, 19.2889, 44.6061, 0.37", "3.76704, 20.4961, 44.5352, 0.37", "4.21493, 21.4051, 44.3626, 0.37", "5.62066, 24.6546, 43.542, 0.37", "6.30754, 26.3772, 43.0395, 0.37", "6.79265, 27.685, 42.581, 0.37", "7.32543, 29.0977, 42.0243, 0.37", "7.80588, 30.2546, 41.5369, 0.37", "8.57902, 31.9395, 40.9122, 0.37", "9.34915, 33.2664, 40.7133, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-16.6575, 4.90376, 18.4761, 1.22", "-18.1579, 4.73844, 18.2788, 1.22", "-19.5055, 4.58997, 18.1016, 1.1", "-21.1395, 4.40993, 17.8866, 1.1", "-23.43, 4.15756, 17.5854, 1.1" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.10705, -18.8735, -4.52333, 0.49", "-0.57161, -20.5375, -5.65762, 0.49", "0.49801, -21.5344, -6.34541, 0.49", "1.20112, -22.2105, -6.8182, 0.49", "2.00845, -23.0164, -7.41409, 0.49", "2.6588, -23.6731, -7.80972, 0.49", "3.26408, -24.3132, -8.12004, 0.49", "4.14043, -25.3606, -8.50177, 0.37", "4.67615, -26.1002, -8.66632, 0.37", "5.17392, -26.8175, -8.77445, 0.37", "6.36897, -28.8398, -8.94464, 0.37", "6.72772, -29.5682, -8.97812, 0.37", "7.36711, -30.9837, -9.04612, 0.37", "8.52561, -33.751, -9.15744, 0.37", "9.06774, -34.955, -9.21691, 0.37", "9.61006, -36.19, -9.35144, 0.37", "10.3143, -37.8512, -9.8592, 0.37" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-2.10705, -18.8735, -4.52333, 1.47", "-3.341, -20.964, -4.00488, 1.47", "-4.38922, -23.0258, -3.38467, 1.47", "-5.37778, -25.1991, -2.73678, 0.73", "-6.2125, -27.1832, -2.17631, 0.86", "-6.99028, -28.9856, -1.6897, 0.86", "-8.74333, -32.8584, -0.682438, 0.86", "-9.84249, -35.3236, -0.0386243, 0.86", "-10.9369, -37.8479, 0.593303, 0.86", "-11.7366, -39.7458, 1.01784, 0.86", "-12.7483, -42.134, 1.36879, 0.86", "-13.5112, -43.8679, 1.47739, 0.86", "-14.2692, -45.467, 1.45133, 0.86", "-15.0139, -46.9857, 1.40726, 0.86", "-16.2237, -49.4483, 1.2859, 0.86", "-17.5587, -52.3139, 1.07232, 0.86", "-18.6333, -55.0564, 0.772194, 0.86" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "19.0306, 20.1049, -10.3516, 0.49", "20.9873, 19.2992, -13.9324, 0.49" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "19.0306, 20.1049, -10.3516, 0.37", "19.75, 23.1302, -11.0499, 0.37", "20.3074, 25.4913, -11.5814, 0.37", "20.5379, 26.4676, -11.8012, 0.37", "20.9714, 28.3041, -12.2147, 0.37", "21.2892, 29.65, -12.5176, 0.37", "21.659, 31.2165, -12.8703, 0.37", "21.8912, 32.1967, -12.9544, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "30.6175, -26.9611, 30.453, 0.49", "28.5935, -26.7508, 30.4969, 0.49", "26.9495, -26.4113, 30.6256, 0.49", "25.399, -25.8961, 30.636, 0.49", "23.5153, -24.9716, 30.5171, 0.37", "21.8133, -23.9252, 30.3226, 0.37", "20.5523, -23.0207, 30.1074, 0.37", "19.7685, -22.2328, 29.932, 0.37", "18.0744, -20.1047, 29.425, 0.37", "17.1572, -18.7884, 29.0923, 0.37", "16.257, -17.3059, 28.7363, 0.37", "15.6248, -16.1546, 28.4089, 0.37", "14.852, -14.626, 27.9326, 0.37", "14.4707, -13.7034, 27.6651, 0.37", "13.9234, -12.125, 27.2996, 0.37", "13.5008, -10.4751, 26.9437, 0.37", "13.1568, -8.56267, 26.3868, 0.37", "12.9208, -7.01558, 25.8739, 0.37", "12.5387, -4.2864, 24.9035, 0.37", "12.3664, -2.93829, 24.3569, 0.37", "12.0871, -0.798688, 23.4033, 0.37", "11.402, 3.55462, 21.3256, 0.37", "10.7535, 7.03747, 19.5806, 0.37", "10.4437, 8.45889, 18.83, 0.37", "9.52756, 11.9807, 16.8682, 0.37", "8.85882, 14.2702, 15.5449, 0.37", "8.59503, 15.0617, 15.0747, 0.37", "8.00321, 16.624, 14.1958, 0.37", "7.40116, 18.0673, 13.369, 0.24", "6.60045, 19.9024, 12.3786, 0.24", "5.96228, 21.3282, 11.7119, 0.24", "5.25969, 23.0763, 10.9915, 0.24", "4.67326, 24.8878, 10.3735, 0.24", "4.35897, 26.1668, 10.0546, 0.24", "4.06263, 27.5885, 9.74911, 0.24", "3.80086, 29.3088, 9.47817, 0.24", "3.55136, 31.6974, 9.25294, 0.24", "3.45747, 33.7456, 9.20683, 0.24", "3.50228, 35.5912, 9.24434, 0.24" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "30.6175, -26.9611, 30.453, 0.49", "31.6644, -29.5898, 30.6867, 0.49", "31.9388, -30.3457, 30.7358, 0.49", "32.6259, -32.2939, 30.819, 0.49", "33.4254, -34.5138, 30.8916, 0.49", "34.4711, -37.2701, 30.9584, 0.49", "35.4686, -39.8111, 31.0157, 0.49", "36.6959, -42.7663, 31.159, 0.49", "37.4054, -44.3464, 31.2915, 0.49", "37.7396, -45.0654, 31.3578, 0.49", "38.5396, -46.7334, 31.4988, 0.49", "39.6795, -48.9153, 31.6901, 0.49", "41.088, -51.4572, 31.946, 0.49", "42.5592, -54.0941, 32.2454, 0.49", "43.3757, -55.6242, 32.4072, 0.49", "44.5364, -57.9057, 32.5993, 0.49", "45.8941, -60.6882, 32.7395, 0.49", "46.5281, -61.9656, 32.7562, 0.49", "47.0737, -63.1131, 32.743, 0.49", "48.3806, -65.9681, 32.6879, 0.49", "48.98, -67.4411, 32.6975, 0.49", "49.5877, -69.5601, 32.7069, 0.49", "49.9141, -72.0388, 32.6334, 0.49", "50.1159, -74.045, 32.584, 0.49", "50.2154, -75.6804, 32.5466, 0.49", "50.135, -79.2947, 32.4261, 0.49", "49.782, -82.8023, 32.3058, 0.49", "49.0243, -86.5499, 32.1344, 0.49" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-23.43, 4.15756, 17.5854, 0.37", "-27.3116, 0.491014, 19.3004, 0.37", "-28.2966, -0.482895, 19.6914, 0.37", "-29.9774, -2.17222, 20.5005, 0.37", "-31.0008, -3.23212, 20.9431, 0.37", "-32.1835, -4.4074, 21.3675, 0.37", "-34.7866, -6.81018, 22.0883, 0.37", "-35.7482, -7.61091, 22.242, 0.37", "-38.3837, -9.84542, 22.6963, 0.37", "-40.0608, -11.3162, 23.0014, 0.37", "-41.7356, -12.7614, 23.2924, 0.37", "-43.882, -14.5794, 23.6728, 0.37", "-46.3539, -16.6549, 24.0028, 0.37", "-48.796, -18.8292, 24.3561, 0.37", "-50.8171, -20.7036, 24.6403, 0.37", "-52.2547, -22.0329, 24.9324, 0.37", "-54.3024, -23.9403, 25.4025, 0.37", "-55.6542, -25.1568, 25.7176, 0.37", "-57.0865, -26.266, 25.9923, 0.37", "-58.3486, -27.0404, 26.2335, 0.37", "-60.4358, -28.0182, 26.6421, 0.37", "-61.8617, -28.5829, 26.879, 0.37", "-64.5324, -29.5451, 27.1975, 0.37", "-67.0037, -30.35, 27.5854, 0.37", "-68.8309, -30.9357, 27.9634, 0.37", "-70.6387, -31.5623, 28.4191, 0.37", "-72.9475, -32.4527, 29.064, 0.37", "-76.1106, -33.7536, 30.0116, 0.37", "-78.8276, -34.9186, 30.8367, 0.37", "-81.4299, -36.3184, 31.5926, 0.37", "-83.2452, -37.4397, 32.0519, 0.37", "-85.1755, -38.7398, 32.4428, 0.37", "-87.5512, -40.4616, 32.8983, 0.37", "-89.437, -41.9364, 33.1587, 0.37", "-93.0767, -44.9075, 33.4077, 0.37", "-94.4211, -46.0376, 33.499, 0.37", "-96.8399, -48.0498, 33.7423, 0.37", "-100.74, -51.096, 34.2304, 0.37", "-103.628, -53.1852, 34.7088, 0.37", "-105.096, -54.1283, 34.9924, 0.37", "-108.206, -55.8187, 35.6056, 0.37", "-111.156, -57.2839, 36.1963, 0.37", "-113.75, -58.4207, 36.6666, 0.37", "-116.648, -59.4964, 37.1134, 0.37", "-118.177, -60.0368, 37.368, 0.37", "-121.595, -61.2188, 38.0006, 0.37", "-124.678, -62.2204, 38.5623, 0.37", "-127.661, -63.2202, 39.1868, 0.37", "-130.355, -64.1362, 39.8248, 0.37", "-132.363, -64.8022, 40.3222, 0.37", "-135.108, -65.7212, 41.0195, 0.37", "-137.276, -66.4202, 41.6323, 0.37", "-139.583, -67.1657, 42.2927, 0.37", "-142.206, -68.0208, 43.0563, 0.37", "-144.969, -68.9094, 43.746, 0.37", "-147.506, -69.6599, 44.27, 0.37" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-23.43, 4.15756, 17.5854, 0.86", "-25.0816, 5.32988, 17.7436, 0.86", "-25.6957, 5.7607, 17.8236, 0.86", "-27.1848, 6.75866, 18.0869, 0.73", "-28.4841, 7.59964, 18.3572, 0.73", "-29.4235, 8.21264, 18.5713, 0.73", "-30.6278, 9.03148, 18.8822, 0.73", "-32.1686, 10.0553, 19.3127, 0.73", "-33.1951, 10.7738, 19.5927, 0.73", "-34.3766, 11.7003, 19.8768, 0.73", "-35.6817, 12.7818, 20.1916, 0.73", "-37.0649, 14.0107, 20.521, 0.61", "-37.9872, 14.8949, 20.7327, 0.61", "-39.2262, 16.133, 21.0168, 0.61", "-41.0748, 18.0315, 21.4418, 0.61", "-42.9808, 19.9557, 21.8429, 0.61", "-44.4557, 21.3316, 22.2278, 0.61", "-46.3356, 22.9787, 22.7946, 0.61", "-47.4969, 23.9369, 23.2585, 0.61", "-48.3838, 24.6371, 23.7198, 0.61", "-50.6532, 26.4442, 24.9708, 0.61", "-52.8479, 28.2206, 26.2454, 0.61", "-53.9499, 29.1367, 26.9456, 0.61", "-55.9422, 30.8731, 28.2724, 0.61", "-57.4117, 32.2524, 29.2825, 0.61", "-59.8135, 34.7244, 30.9434, 0.61", "-61.3734, 36.4883, 32.0214, 0.61", "-62.4845, 37.816, 32.7092, 0.61", "-63.6925, 39.2068, 33.404, 0.61", "-65.1393, 40.7816, 34.1057, 0.61", "-66.3923, 42.0647, 34.6782, 0.61", "-67.7271, 43.3083, 35.264, 0.61", "-69.1779, 44.6017, 35.7986, 0.61", "-70.8273, 46.0265, 36.3646, 0.61", "-73.1531, 48.0434, 37.1508, 0.61", "-73.9897, 48.7947, 37.427, 0.61", "-75.3951, 50.1377, 37.909, 0.61", "-76.4888, 51.2797, 38.277, 0.61", "-77.874, 52.8428, 38.7304, 0.61", "-79.2092, 54.4494, 39.1727, 0.61", "-80.4544, 55.9839, 39.5846, 0.61", "-81.5454, 57.3293, 39.9305, 0.61", "-82.6466, 58.6451, 40.2589, 0.61", "-84.3163, 60.3756, 40.6599, 0.61", "-85.6635, 61.5923, 40.9211, 0.61", "-87.7196, 63.2659, 41.2619, 0.61", "-88.9066, 64.146, 41.495, 0.61", "-90.9471, 65.5728, 41.9768, 0.61", "-93.2519, 67.1292, 42.6529, 0.61", "-95.0561, 68.2713, 43.265, 0.61", "-96.4734, 69.1046, 43.783, 0.61", "-98.9261, 70.4137, 44.7119, 0.61", "-100.693, 71.2848, 45.3836, 0.61", "-102.693, 72.2399, 46.157, 0.61", "-104.112, 72.8984, 46.7066, 0.61", "-105.187, 73.3562, 47.0653, 0.61", "-106.693, 73.9673, 47.4005, 0.61", "-108.521, 74.691, 47.6005, 0.61", "-110.112, 75.2957, 47.6934, 0.61", "-111.552, 75.8423, 47.7045, 0.61", "-113.255, 76.4873, 47.7247, 0.61", "-115.167, 77.1801, 47.733, 0.61", "-116.212, 77.5705, 47.7156, 0.61", "-118.817, 78.5392, 47.6168, 0.61", "-120.36, 79.0752, 47.5283, 0.61", "-122.401, 79.71, 47.3919, 0.61", "-123.881, 80.129, 47.3179, 0.61", "-125.46, 80.5764, 47.2676, 0.61", "-126.348, 80.8426, 47.2263, 0.61", "-128.496, 81.5057, 47.1066, 0.61", "-131.108, 82.2877, 46.9788, 0.61", "-133.015, 82.842, 46.8772, 0.61", "-134.076, 83.1285, 46.8419, 0.61", "-135.557, 83.4944, 46.8126, 0.61", "-136.589, 83.7463, 46.8476, 0.61", "-138.624, 84.2549, 47.0106, 0.61", "-140.233, 84.6913, 47.2242, 0.61", "-142.087, 85.2389, 47.5488, 0.49", "-143.222, 85.6158, 47.7951, 0.49", "-145.879, 86.6113, 48.4333, 0.49", "-147.523, 87.2985, 48.8426, 0.49", "-149.303, 88.1119, 49.3203, 0.49", "-150.642, 88.7482, 49.5951, 0.49", "-152.561, 89.6769, 49.8451, 0.37", "-155.036, 90.907, 49.9956, 0.37", "-156.856, 91.8327, 49.9454, 0.37", "-158.039, 92.4363, 49.8539, 0.37", "-161.046, 93.918, 49.4334, 0.37", "-163.401, 95.0335, 48.9981, 0.37", "-164.751, 95.6554, 48.692, 0.37", "-166.251, 96.3165, 48.3377, 0.37", "-167.862, 96.9775, 47.9395, 0.37", "-169.456, 97.5275, 47.5558, 0.37", "-170.589, 97.8925, 47.3266, 0.37", "-172.168, 98.3384, 46.9828, 0.37", "-175.352, 99.0858, 46.2745, 0.37", "-176.868, 99.3775, 45.9563, 0.37", "-179.694, 99.7966, 45.3829, 0.37" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "10.3143, -37.8512, -9.8592, 0.37", "10.1445, -38.9149, -9.87082, 0.37", "10.0661, -39.4057, -9.87619, 0.37", "9.9079, -40.3966, -9.88702, 0.37", "9.73017, -41.5098, -9.89918, 0.37" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "10.3143, -37.8512, -9.8592, 0.37", "12.1661, -40.4389, -9.90394, 0.37", "12.6759, -41.2591, -9.90658, 0.37", "12.8354, -41.5391, -9.90271, 0.37", "13.829, -43.2834, -9.8786, 0.37", "14.603, -44.6424, -9.85982, 0.37", "15.5444, -46.295, -9.83697, 0.37", "16.0332, -47.5086, -9.76778, 0.37", "16.4991, -48.7153, -9.71913, 0.37" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-18.6333, -55.0564, 0.772194, 0.49", "-19.9238, -55.5956, 0.579004, 0.49", "-20.4989, -55.8486, 0.477009, 0.49", "-21.1627, -56.1378, 0.36001, 0.49", "-21.9466, -56.4685, 0.221832, 0.49", "-22.6227, -56.7414, 0.0751947, 0.49", "-23.2604, -56.9916, -0.0748291, 0.49", "-23.8946, -57.2562, -0.211772, 0.49", "-24.7959, -57.6627, -0.49173, 0.49", "-25.0433, -57.7746, -0.587021, 0.24", "-25.6432, -58.0599, -0.866028, 0.24", "-25.991, -58.2243, -1.05266, 0.37", "-26.586, -58.5257, -1.39774, 0.37", "-27.0799, -58.7813, -1.69188, 0.37", "-27.7366, -59.1251, -2.0897, 0.37", "-28.1522, -59.3411, -2.32226, 0.37", "-28.8247, -59.6729, -2.6654, 0.37", "-29.3519, -59.9064, -2.92262, 0.37", "-30.1705, -60.2237, -3.29515, 0.37", "-30.641, -60.3973, -3.50006, 0.37", "-31.0472, -60.5409, -3.68117, 0.37", "-31.582, -60.7058, -3.8998, 0.37", "-32.0067, -60.8162, -4.04521, 0.37", "-32.455, -60.9251, -4.2024, 0.37", "-32.9799, -61.05, -4.37917, 0.37", "-33.4546, -61.1672, -4.5278, 0.37", "-33.9553, -61.3022, -4.65981, 0.37", "-34.4263, -61.4443, -4.75768, 0.37", "-35.4159, -61.7794, -4.92246, 0.37", "-36.0435, -62.0208, -5.0213, 0.37", "-36.9855, -62.4151, -5.15777, 0.37", "-37.7759, -62.7695, -5.25874, 0.37", "-38.2075, -62.9913, -5.31183, 0.37", "-38.6841, -63.2613, -5.38534, 0.37", "-39.3351, -63.6431, -5.47654, 0.37", "-39.9808, -64.0525, -5.59877, 0.37", "-40.7289, -64.5552, -5.76755, 0.37", "-41.3003, -64.9535, -5.91492, 0.37", "-42.1947, -65.616, -6.15242, 0.37", "-42.9635, -66.224, -6.34842, 0.37", "-43.2948, -66.4914, -6.42407, 0.37", "-43.8338, -66.9375, -6.54527, 0.37", "-44.5156, -67.4972, -6.69647, 0.37", "-45.2496, -68.0593, -6.83294, 0.37", "-45.8023, -68.4427, -6.90575, 0.37", "-46.348, -68.7704, -6.96684, 0.37", "-46.9545, -69.0595, -7.01609, 0.37", "-47.6941, -69.3304, -7.06399, 0.37", "-48.4183, -69.5149, -7.09435, 0.37", "-49.4989, -69.6983, -7.11093, 0.37", "-50.3996, -69.805, -7.10685, 0.37", "-51.08, -69.8665, -7.11688, 0.37", "-51.5424, -69.8919, -7.12552, 0.24", "-52.2877, -69.907, -7.12841, 0.24", "-52.9258, -69.9123, -7.13563, 0.24", "-53.5242, -69.9236, -7.14843, 0.24", "-54.5186, -69.9469, -7.19114, 0.24", "-55.0317, -69.969, -7.22873, 0.24" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-18.6333, -55.0564, 0.772194, 0.86", "-18.9403, -56.0677, 0.806259, 0.86", "-19.2188, -56.8992, 0.833077, 0.86", "-19.6035, -57.9974, 0.86772, 0.86", "-19.8764, -58.7361, 0.890378, 0.86", "-20.2855, -59.8723, 0.925716, 0.86", "-20.5011, -60.52, 0.933816, 0.86", "-20.8757, -61.6238, 0.930103, 0.86", "-21.2181, -62.6964, 0.915981, 0.86", "-21.4722, -63.5909, 0.900006, 0.86", "-21.6955, -64.4377, 0.886835, 0.86", "-22.0013, -65.6144, 0.887482, 0.86", "-22.2809, -66.7098, 0.894546, 0.86", "-22.6707, -68.2962, 0.914754, 0.86", "-22.9134, -69.3203, 0.934914, 0.86", "-23.14, -70.3431, 0.964029, 0.86", "-23.5374, -72.2038, 1.01389, 0.86", "-23.8348, -73.7687, 1.0605, 0.86", "-23.9833, -74.7183, 1.07939, 0.86", "-24.0563, -75.3123, 1.08599, 0.86", "-24.1568, -76.3568, 1.08955, 0.86", "-24.2715, -77.8161, 1.08313, 0.86", "-24.3641, -79.5585, 1.06953, 0.86", "-24.443, -80.7999, 1.06961, 0.86", "-24.5125, -81.6659, 1.07024, 0.86", "-24.5775, -82.4432, 1.09411, 0.86", "-24.6623, -83.5278, 1.15611, 0.86", "-24.7401, -84.3225, 1.22411, 0.86", "-24.9601, -85.8167, 1.34724, 0.86", "-25.0613, -86.4202, 1.39293, 0.86", "-25.315, -87.8266, 1.48573, 0.86", "-25.5191, -88.8561, 1.55847, 0.86", "-25.8363, -90.4217, 1.67969, 0.86", "-26.0352, -91.3809, 1.75666, 0.86", "-26.2658, -92.51, 1.84372, 0.86", "-26.4136, -93.2812, 1.88996, 0.86", "-26.6132, -94.4231, 1.93271, 0.86", "-26.8079, -95.5629, 1.98547, 0.86", "-26.9709, -96.5955, 2.03761, 0.86", "-27.1174, -97.5329, 2.06585, 0.86", "-27.2853, -98.4899, 2.07354, 0.86", "-27.538, -99.9809, 2.06955, 0.86", "-27.7617, -101.44, 2.05418, 0.86", "-27.9439, -102.747, 1.99532, 0.86", "-28.105, -104.103, 1.90557, 0.86", "-28.2136, -105.299, 1.81702, 0.86", "-28.2495, -105.902, 1.77197, 0.86", "-28.2743, -106.704, 1.70777, 0.86", "-28.2966, -108.501, 1.63226, 0.86", "-28.3223, -109.973, 1.54104, 0.86", "-28.4049, -111.983, 1.39922, 0.86", "-28.4897, -113.372, 1.2772, 0.86", "-28.5678, -114.474, 1.16912, 0.86", "-28.7053, -116.262, 1.00026, 0.86", "-28.9053, -118.309, 0.84937, 0.86", "-29.0417, -119.479, 0.747097, 0.86", "-29.1471, -120.362, 0.663196, 0.86", "-29.269, -121.678, 0.55076, 0.86", "-29.325, -122.54, 0.492243, 0.86", "-29.4204, -124.172, 0.40898, 0.61", "-29.4825, -125.358, 0.4226, 0.61", "-29.5139, -126.138, 0.436623, 0.61", "-29.5653, -128.012, 0.451519, 0.61", "-29.589, -128.962, 0.437376, 0.61", "-29.606, -130.127, 0.395407, 0.61", "-29.6111, -130.909, 0.356266, 0.61", "-29.6291, -131.947, 0.297295, 0.61", "-29.703, -134.095, 0.170745, 0.61", "-29.7876, -135.285, 0.100844, 0.61", "-29.8675, -136.171, 0.034323, 0.61", "-30.0171, -137.478, -0.0763769, 0.61", "-30.2085, -138.654, -0.184102, 0.49", "-30.4128, -139.668, -0.278464, 0.49", "-30.7076, -140.928, -0.397182, 0.49", "-30.9223, -141.8, -0.482765, 0.49", "-31.1445, -142.663, -0.565318, 0.49", "-31.4379, -143.879, -0.66728, 0.49", "-31.6044, -144.649, -0.712175, 0.49", "-31.745, -145.342, -0.712122, 0.49", "-31.855, -146.193, -0.695174, 0.49", "-31.9531, -147.308, -0.648754, 0.49", "-32.0287, -148.465, -0.605269, 0.49", "-32.096, -149.615, -0.564731, 0.49", "-32.19, -151.174, -0.518452, 0.49", "-32.273, -152.964, -0.502472, 0.49", "-32.287, -153.836, -0.519598, 0.49", "-32.2821, -155.019, -0.575062, 0.49", "-32.2526, -156.261, -0.6411, 0.49", "-32.2122, -157.12, -0.689228, 0.49", "-32.1196, -158.577, -0.776583, 0.49", "-32.0745, -159.59, -0.82217, 0.49", "-32.042, -160.186, -0.855032, 0.49", "-31.9793, -161.162, -0.911471, 0.49", "-31.9076, -162.264, -0.973407, 0.49", "-31.8267, -163.582, -1.03445, 0.49", "-31.7607, -164.56, -1.05628, 0.49", "-31.7066, -165.695, -1.10858, 0.49", "-31.6704, -166.73, -1.19038, 0.49", "-31.6624, -167.598, -1.28368, 0.49", "-31.6807, -168.893, -1.46809, 0.49", "-31.7363, -170.066, -1.66529, 0.49", "-31.9032, -172.033, -2.01554, 0.49", "-32.0155, -172.885, -2.17604, 0.49", "-32.1512, -173.671, -2.32672, 0.49", "-32.3385, -174.557, -2.47064, 0.49", "-32.5975, -175.562, -2.62787, 0.49", "-32.8781, -176.533, -2.7484, 0.49", "-33.0808, -177.282, -2.79649, 0.49", "-33.2338, -177.967, -2.82581, 0.49", "-33.5008, -179.48, -2.92357, 0.49", "-33.6765, -180.8, -3.0264, 0.49", "-33.8422, -182.496, -3.19021, 0.49", "-33.9094, -183.449, -3.29365, 0.49", "-33.9716, -184.77, -3.42941, 0.49", "-33.9864, -185.932, -3.53518, 0.49", "-33.9433, -187.492, -3.6738, 0.49", "-33.8903, -189.063, -3.77971, 0.49", "-33.8517, -189.793, -3.85109, 0.49", "-33.7696, -191.261, -4.09501, 0.49", "-33.6829, -192.517, -4.3717, 0.49", "-33.4985, -194.188, -4.81787, 0.49", "-33.1768, -196.211, -5.46342, 0.49", "-32.7813, -197.97, -6.14275, 0.49", "-32.1469, -200.16, -7.1006, 0.49", "-31.6362, -201.641, -7.80885, 0.49", "-31.3472, -202.412, -8.18485, 0.49", "-30.9892, -203.393, -8.616, 0.49", "-30.5407, -205.022, -9.21965, 0.49", "-30.4981, -206.156, -9.46645, 0.49", "-30.604, -206.79, -9.54444, 0.49", "-30.8548, -207.704, -9.63025, 0.49", "-31.6547, -210.183, -9.8131, 0.49", "-32.3942, -212.27, -9.92889, 0.49", "-32.9822, -213.85, -9.97341, 0.49", "-33.5551, -215.431, -10.0281, 0.49", "-33.8717, -216.51, -10.0844, 0.49", "-34.0388, -217.459, -10.1413, 0.49", "-34.071, -218.501, -10.1835, 0.49", "-34.0252, -219.11, -10.1904, 0.49", "-33.9667, -219.851, -10.1925, 0.49", "-33.9159, -221.138, -10.1769, 0.49", "-33.9032, -222.879, -10.1771, 0.49", "-33.8891, -224.265, -10.2506, 0.49", "-33.8467, -225.469, -10.3644, 0.49", "-33.7111, -227.332, -10.5922, 0.49", "-33.5836, -228.57, -10.7778, 0.49", "-33.3873, -229.836, -11.0162, 0.49", "-32.9894, -231.675, -11.3996, 0.49", "-32.611, -232.962, -11.6861, 0.49", "-32.076, -234.503, -12.0437, 0.49", "-31.7296, -235.321, -12.2324, 0.49", "-31.0131, -236.828, -12.5877, 0.49", "-30.2032, -238.426, -12.9341, 0.49", "-29.657, -239.502, -13.0818, 0.49" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-147.506, -69.6599, 44.27, 0.37", "-150.257, -69.8865, 45.3229, 0.37", "-153.31, -70.138, 46.4909, 0.37", "-154.936, -70.2719, 47.1132, 0.37", "-156.386, -70.3913, 47.6681, 0.24" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-147.506, -69.6599, 44.27, 0.37", "-148.429, -71.9805, 44.5114, 0.37", "-148.957, -73.5094, 44.6978, 0.37", "-149.434, -75.0593, 44.9006, 0.37", "-149.864, -76.7768, 45.2244, 0.37", "-150.184, -78.2551, 45.5714, 0.37", "-150.476, -79.7643, 45.9591, 0.37", "-150.648, -81.2197, 46.3937, 0.37", "-150.723, -82.1071, 46.6718, 0.37", "-150.894, -84.5747, 47.4714, 0.37", "-150.992, -86.6702, 48.157, 0.37", "-151.023, -87.8043, 48.4944, 0.37", "-151.026, -89.3732, 48.9551, 0.37", "-151.016, -90.7356, 49.328, 0.37", "-151.015, -91.7605, 49.5888, 0.37", "-150.996, -93.2635, 49.8452, 0.37", "-151.002, -95.2528, 50.0691, 0.37", "-151.042, -96.8846, 50.1434, 0.37", "-151.132, -98.4045, 50.1121, 0.37", "-151.357, -100.29, 49.9523, 0.37", "-151.81, -102.645, 49.6019, 0.37", "-152.342, -104.35, 49.2089, 0.37", "-153.121, -105.95, 48.6904, 0.37", "-153.638, -106.691, 48.4059, 0.37", "-154.775, -107.899, 47.8916, 0.37", "-155.429, -108.45, 47.626, 0.37", "-156.888, -109.417, 47.148, 0.37", "-158.332, -110.297, 46.7015, 0.37", "-159.917, -111.176, 46.2482, 0.37", "-161.411, -111.978, 45.8187, 0.37", "-162.59, -112.589, 45.4684, 0.37", "-164.747, -113.741, 44.8111, 0.37", "-166.91, -114.96, 44.12, 0.37" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-29.657, -239.502, -13.0818, 0.49", "-27.8397, -240.876, -13.9527, 0.49", "-26.321, -242.025, -14.6805, 0.49", "-24.507, -243.398, -15.5498, 0.49", "-20.9979, -246.053, -17.2314, 0.49" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-29.657, -239.502, -13.0818, 0.49", "-31.2965, -240.247, -13.4895, 0.49", "-32.7456, -240.907, -13.8499, 0.49" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-20.9979, -246.053, -17.2314, 0.49", "-20.1047, -248.267, -17.3851, 0.49", "-19.22, -250.461, -17.5373, 0.49", "-17.9931, -253.504, -17.7484, 0.49" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-20.9979, -246.053, -17.2314, 0.49", "-18.1835, -245.801, -18.1856, 0.49", "-17.3883, -245.73, -18.4552, 0.49", "-15.0601, -245.521, -19.2445, 0.49", "-12.641, -245.305, -20.0647, 0.49", "-10.9898, -245.157, -20.6245, 0.49", "-9.51142, -245.025, -21.1257, 0.49" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_29", "dend_26", "dend_17", "dend_4", "dend_3", "dend_0", "dend_39", "dend_35", "dend_30", "dend_28", "dend_27", "dend_25", "dend_18", "dend_16", "dend_5", "dend_2", "dend_1", "dend_43", "dend_40", "dend_37", "dend_36", "dend_34", "dend_31", "dend_24", "dend_19", "dend_13", "dend_6", "dend_42", "dend_41", "dend_33", "dend_32", "dend_21", "dend_20", "dend_15", "dend_14", "dend_12", "dend_7", "dend_23", "dend_22", "dend_9", "dend_8", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_38", "dend_29", "dend_26", "dend_17", "dend_4", "dend_3", "dend_0", "dend_39", "dend_35", "dend_30", "dend_28", "dend_27", "dend_25", "dend_18", "dend_16", "dend_5", "dend_2", "dend_1", "dend_43", "dend_40", "dend_37", "dend_36", "dend_34", "dend_31", "dend_24", "dend_19", "dend_13", "dend_6", "dend_42", "dend_41", "dend_33", "dend_32", "dend_21", "dend_20", "dend_15", "dend_14", "dend_12", "dend_7", "dend_23", "dend_22", "dend_9", "dend_8", "dend_11", "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_38", "dend_38", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_17", "dend_17", "dend_17", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L1_DAC_a4cb1c245c_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_4, id: dend_4, parent: soma_0
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_29
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_17
create dend_25
public dend_25
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_4
create dend_16
public dend_16
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_5
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_6
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_29, dend_26, dend_17, dend_4, dend_3, dend_0, dend_39, dend_35, dend_30, dend_28, dend_27, dend_25, dend_18, dend_16, dend_5, dend_2, dend_1, dend_43, dend_40, dend_37, dend_36, dend_34, dend_31, dend_24, dend_19, dend_13, dend_6, dend_42, dend_41, dend_33, dend_32, dend_21, dend_20, dend_15, dend_14, dend_12, dend_7, dend_23, dend_22, dend_9, dend_8, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_29, dend_26, dend_17, dend_4, dend_3, dend_0, dend_39, dend_35, dend_30, dend_28, dend_27, dend_25, dend_18, dend_16, dend_5, dend_2, dend_1, dend_43, dend_40, dend_37, dend_36, dend_34, dend_31, dend_24, dend_19, dend_13, dend_6, dend_42, dend_41, dend_33, dend_32, dend_21, dend_20, dend_15, dend_14, dend_12, dend_7, dend_23, dend_22, dend_9, dend_8, dend_11, dend_10]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_38(0), soma_0(0.450000186524988)
    connect dend_29(0), soma_0(0.450000186524988)
    connect dend_26(0), soma_0(0.450000186524988)
    connect dend_17(0), soma_0(0.450000186524988)
    connect dend_4(0), soma_0(0.450000186524988)
    connect dend_3(0), soma_0(0.450000186524988)
    connect dend_0(0), soma_0(0.450000186524988)
    connect axon_0(0), soma_0(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -7.13528, -1.16888, 0.0, 4.15795 ) }
    soma_0 { pt3dadd( -6.42457, -1.07374, 0.0, 7.84613 ) }
    soma_0 { pt3dadd( -5.71387, -0.978592, 0.0, 9.14199 ) }
    soma_0 { pt3dadd( -5.00317, -0.883447, 0.0, 9.83423 ) }
    soma_0 { pt3dadd( -4.29246, -0.788301, 0.0, 10.5043 ) }
    soma_0 { pt3dadd( -3.58176, -0.693156, 0.0, 11.2615 ) }
    soma_0 { pt3dadd( -2.87105, -0.598011, 0.0, 11.8079 ) }
    soma_0 { pt3dadd( -2.16035, -0.502865, 0.0, 12.0209 ) }
    soma_0 { pt3dadd( -1.44965, -0.40772, 0.0, 12.1436 ) }
    soma_0 { pt3dadd( -0.738941, -0.312575, 0.0, 12.1855 ) }
    soma_0 { pt3dadd( -0.0282374, -0.217429, 0.0, 12.0178 ) }
    soma_0 { pt3dadd( 0.682467, -0.122284, 0.0, 11.8284 ) }
    soma_0 { pt3dadd( 1.39317, -0.0271384, 0.0, 11.3574 ) }
    soma_0 { pt3dadd( 2.10387, 0.068007, 0.0, 10.5983 ) }
    soma_0 { pt3dadd( 2.81458, 0.163152, 0.0, 9.98907 ) }
    soma_0 { pt3dadd( 3.52528, 0.258298, 0.0, 9.19047 ) }
    soma_0 { pt3dadd( 4.23599, 0.353443, 0.0, 8.37922 ) }
    soma_0 { pt3dadd( 4.94669, 0.448588, 0.0, 7.41071 ) }
    soma_0 { pt3dadd( 5.65739, 0.543734, 0.0, 6.60365 ) }
    soma_0 { pt3dadd( 6.3681, 0.638879, 0.0, 5.85286 ) }
    soma_0 { pt3dadd( 7.0788, 0.734025, 0.0, 3.31328 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 7.49967, -0.413702, 0.05, 2.32 ) }
    dend_38 { pt3dadd( 12.8154, -1.92819, -0.710818, 2.32 ) }
    dend_38 { pt3dadd( 14.8913, -2.51962, -1.00793, 2.32 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 24/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 9.51967, -0.0637015, 8.55, 1.59 ) }
    dend_29 { pt3dadd( 12.5484, 1.02686, 9.70055, 1.59 ) }
    dend_29 { pt3dadd( 14.4166, 1.69953, 10.4102, 1.35 ) }
    dend_29 { pt3dadd( 15.8467, 2.21448, 10.9535, 1.35 ) }
    dend_29 { pt3dadd( 19.1274, 3.39574, 12.1997, 1.35 ) }
    dend_29 { pt3dadd( 21.2554, 4.16196, 13.0081, 1.35 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 30/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 5.99967, 2.79629, 12.2, 0.98 ) }
    dend_26 { pt3dadd( 8.25689, 4.35323, 13.0386, 0.98 ) }
    dend_26 { pt3dadd( 10.5453, 6.3614, 14.0366, 0.98 ) }
    dend_26 { pt3dadd( 13.2217, 8.71006, 15.2038, 0.98 ) }
    dend_26 { pt3dadd( 15.3565, 10.5834, 16.1347, 0.98 ) }
    dend_26 { pt3dadd( 17.4743, 12.4419, 17.0583, 0.98 ) }
    dend_26 { pt3dadd( 19.3631, 14.0994, 17.882, 0.98 ) }
    dend_26 { pt3dadd( 20.5367, 15.5535, 18.6704, 0.98 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 38/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -3.91033, 1.50629, 9.35, 1.71 ) }
    dend_17 { pt3dadd( -5.99372, 3.61371, 9.35, 1.71 ) }
    dend_17 { pt3dadd( -7.75816, 5.3985, 9.35, 1.71 ) }
    dend_17 { pt3dadd( -8.80549, 6.45791, 9.35, 1.71 ) }
    // Section: dend_4, id: dend_4, parent: soma_0 (entry count 42/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -0.96033, -5.19371, -6.55, 2.2 ) }
    dend_4 { pt3dadd( -1.10453, -8.5282, -6.55, 2.2 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 44/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -6.43033, -4.21371, -1.25, 0.98 ) }
    dend_3 { pt3dadd( -9.02474, -4.55634, -1.10678, 0.98 ) }
    dend_3 { pt3dadd( -10.5415, -4.86572, -1.06055, 0.98 ) }
    dend_3 { pt3dadd( -11.4168, -5.09733, -1.05046, 0.86 ) }
    dend_3 { pt3dadd( -13.3001, -5.64463, -1.08408, 0.86 ) }
    dend_3 { pt3dadd( -15.0791, -6.16095, -1.13072, 0.86 ) }
    dend_3 { pt3dadd( -17.0531, -6.69241, -1.1661, 1.22 ) }
    dend_3 { pt3dadd( -18.5682, -7.08051, -1.20181, 1.22 ) }
    dend_3 { pt3dadd( -20.2162, -7.53034, -1.25088, 0.98 ) }
    dend_3 { pt3dadd( -21.6452, -7.94459, -1.28553, 0.86 ) }
    dend_3 { pt3dadd( -23.0416, -8.34643, -1.27357, 0.73 ) }
    dend_3 { pt3dadd( -24.5697, -8.68558, -1.20478, 0.73 ) }
    dend_3 { pt3dadd( -25.5526, -8.84146, -1.11036, 0.61 ) }
    dend_3 { pt3dadd( -26.4468, -8.94446, -0.984851, 0.61 ) }
    dend_3 { pt3dadd( -28.0091, -9.0234, -0.769721, 0.61 ) }
    dend_3 { pt3dadd( -29.5498, -9.09181, -0.617621, 1.1 ) }
    dend_3 { pt3dadd( -30.9929, -9.19164, -0.56064, 0.86 ) }
    dend_3 { pt3dadd( -32.5344, -9.33704, -0.574825, 0.73 ) }
    dend_3 { pt3dadd( -33.5852, -9.45991, -0.628991, 0.61 ) }
    dend_3 { pt3dadd( -35.8268, -9.74082, -0.82207, 0.61 ) }
    dend_3 { pt3dadd( -37.4911, -9.97602, -1.04732, 0.61 ) }
    dend_3 { pt3dadd( -38.7803, -10.1466, -1.31855, 0.61 ) }
    dend_3 { pt3dadd( -39.7177, -10.2593, -1.579, 0.61 ) }
    dend_3 { pt3dadd( -40.7094, -10.3699, -1.82453, 0.61 ) }
    dend_3 { pt3dadd( -41.5984, -10.4577, -2.00026, 0.61 ) }
    dend_3 { pt3dadd( -42.5046, -10.4907, -2.13729, 0.49 ) }
    dend_3 { pt3dadd( -44.3672, -10.4327, -2.37594, 0.49 ) }
    dend_3 { pt3dadd( -46.2139, -10.3645, -2.60924, 0.49 ) }
    dend_3 { pt3dadd( -48.0421, -10.2942, -2.91717, 0.61 ) }
    dend_3 { pt3dadd( -50.2601, -10.2293, -3.31484, 1.1 ) }
    dend_3 { pt3dadd( -53.0334, -10.2397, -3.81364, 1.1 ) }
    dend_3 { pt3dadd( -53.9967, -10.2747, -3.98717, 1.1 ) }
    dend_3 { pt3dadd( -55.4874, -10.3884, -4.2473, 1.1 ) }
    dend_3 { pt3dadd( -58.6126, -10.7044, -4.89913, 0.98 ) }
    dend_3 { pt3dadd( -59.8121, -10.8934, -5.21478, 0.86 ) }
    dend_3 { pt3dadd( -61.2557, -11.3003, -5.60733, 0.73 ) }
    dend_3 { pt3dadd( -61.4447, -11.3779, -5.65994, 0.73 ) }
    dend_3 { pt3dadd( -61.9951, -11.6311, -5.80823, 0.73 ) }
    dend_3 { pt3dadd( -63.7699, -12.4792, -6.228, 0.98 ) }
    dend_3 { pt3dadd( -65.2166, -13.2946, -6.53403, 0.86 ) }
    dend_3 { pt3dadd( -66.7062, -14.2177, -6.88282, 0.73 ) }
    dend_3 { pt3dadd( -68.1388, -15.1306, -7.21886, 0.73 ) }
    dend_3 { pt3dadd( -69.3097, -15.8525, -7.44345, 0.73 ) }
    dend_3 { pt3dadd( -71.2067, -17.0007, -7.72556, 0.73 ) }
    dend_3 { pt3dadd( -72.1682, -17.6, -7.81658, 0.61 ) }
    dend_3 { pt3dadd( -73.9519, -18.6745, -7.9684, 0.61 ) }
    dend_3 { pt3dadd( -74.3974, -18.9331, -8.01043, 0.61 ) }
    dend_3 { pt3dadd( -75.9726, -19.8368, -8.17216, 0.61 ) }
    dend_3 { pt3dadd( -76.8359, -20.3546, -8.27829, 0.61 ) }
    dend_3 { pt3dadd( -78.7624, -21.5507, -8.53248, 0.61 ) }
    dend_3 { pt3dadd( -80.6383, -22.6577, -8.801, 0.49 ) }
    dend_3 { pt3dadd( -82.7516, -23.9322, -9.15611, 0.49 ) }
    dend_3 { pt3dadd( -84.322, -24.9411, -9.47551, 0.49 ) }
    dend_3 { pt3dadd( -85.888, -25.9452, -9.88295, 0.49 ) }
    dend_3 { pt3dadd( -87.7221, -27.0701, -10.4627, 0.49 ) }
    dend_3 { pt3dadd( -89.2442, -28.0004, -11.0209, 0.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_3 { pt3dadd( -91.0063, -29.0627, -11.7845, 0.49 ) }
    dend_3 { pt3dadd( -91.8839, -29.563, -12.1897, 0.49 ) }
    dend_3 { pt3dadd( -93.5532, -30.4419, -12.9963, 0.49 ) }
    dend_3 { pt3dadd( -95.6818, -31.4597, -14.0316, 0.49 ) }
    dend_3 { pt3dadd( -96.8452, -31.9895, -14.622, 0.49 ) }
    dend_3 { pt3dadd( -99.0444, -32.9659, -15.6626, 0.49 ) }
    dend_3 { pt3dadd( -100.746, -33.6779, -16.3663, 0.49 ) }
    dend_3 { pt3dadd( -101.752, -34.1008, -16.6965, 0.49 ) }
    dend_3 { pt3dadd( -103.255, -34.7816, -17.0557, 0.49 ) }
    dend_3 { pt3dadd( -105.564, -35.8618, -17.4319, 0.49 ) }
    dend_3 { pt3dadd( -107.743, -36.9013, -17.6486, 0.49 ) }
    dend_3 { pt3dadd( -109.058, -37.5902, -17.7346, 0.49 ) }
    dend_3 { pt3dadd( -111.215, -38.7531, -17.8372, 0.49 ) }
    dend_3 { pt3dadd( -113.571, -40.0671, -17.8931, 0.49 ) }
    dend_3 { pt3dadd( -115.841, -41.3076, -17.9007, 0.49 ) }
    dend_3 { pt3dadd( -118.143, -42.5082, -17.9103, 0.49 ) }
    dend_3 { pt3dadd( -120.17, -43.4281, -17.9589, 0.49 ) }
    dend_3 { pt3dadd( -122.375, -44.4033, -18.0421, 0.49 ) }
    dend_3 { pt3dadd( -125.302, -45.6118, -18.1991, 0.49 ) }
    dend_3 { pt3dadd( -127.129, -46.2643, -18.3213, 0.49 ) }
    dend_3 { pt3dadd( -128.877, -46.776, -18.4695, 0.49 ) }
    dend_3 { pt3dadd( -131.866, -47.3994, -18.7599, 0.49 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 22/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -6.23033, 3.29629, -0.9, 1.47 ) }
    dend_0 { pt3dadd( -7.43408, 4.33518, -1.04504, 1.47 ) }
    dend_0 { pt3dadd( -8.64021, 5.34096, -1.34428, 1.47 ) }
    dend_0 { pt3dadd( -9.3449, 5.91609, -1.5439, 1.47 ) }
    dend_0 { pt3dadd( -11.1714, 7.35288, -2.11654, 1.47 ) }
    dend_0 { pt3dadd( -12.2234, 8.13058, -2.49258, 1.47 ) }
    dend_0 { pt3dadd( -13.5255, 9.05832, -2.98657, 1.35 ) }
    dend_0 { pt3dadd( -15.2602, 10.1741, -3.70452, 1.22 ) }
    dend_0 { pt3dadd( -16.5257, 10.9439, -4.28404, 1.22 ) }
    dend_0 { pt3dadd( -17.5818, 11.5881, -4.80781, 1.1 ) }
    dend_0 { pt3dadd( -18.9197, 12.4356, -5.54361, 1.1 ) }
    dend_0 { pt3dadd( -19.5591, 12.8559, -5.91869, 0.86 ) }
    dend_0 { pt3dadd( -20.4798, 13.4626, -6.465, 0.73 ) }
    dend_0 { pt3dadd( -21.1771, 13.9484, -6.8771, 0.73 ) }
    dend_0 { pt3dadd( -22.5128, 14.9691, -7.78146, 0.73 ) }
    dend_0 { pt3dadd( -23.1902, 15.5989, -8.27608, 0.73 ) }
    dend_0 { pt3dadd( -23.6114, 16.1149, -8.62321, 0.73 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 39/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.0788, 0.734025, 0.0, 0.49 ) }
    axon_0 { pt3dadd( 21.9462, 2.72439, 0.0, 0.49 ) }
    axon_0 { pt3dadd( 36.8135, 4.71475, 0.0, 0.49 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 42/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 14.8913, -2.51962, -1.00793, 0.98 ) }
    dend_39 { pt3dadd( 13.9901, -2.38496, -9.24329, 0.98 ) }
    // Section: dend_35, id: dend_35, parent: dend_29 (entry count 44/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 21.2554, 4.16196, 13.0081, 1.1 ) }
    dend_35 { pt3dadd( 23.935, 5.49498, 12.8652, 1.1 ) }
    dend_35 { pt3dadd( 25.2168, 6.10357, 12.8051, 0.98 ) }
    dend_35 { pt3dadd( 27.1371, 7.02086, 12.7068, 0.49 ) }
    dend_35 { pt3dadd( 28.2841, 7.61931, 12.7157, 0.49 ) }
    dend_35 { pt3dadd( 28.9502, 7.99749, 12.7385, 0.49 ) }
    dend_35 { pt3dadd( 30.3684, 8.85715, 12.7452, 0.49 ) }
    dend_35 { pt3dadd( 32.2652, 10.1919, 12.7256, 0.61 ) }
    dend_35 { pt3dadd( 33.7802, 11.3605, 12.6868, 0.61 ) }
    dend_35 { pt3dadd( 36.0135, 13.1648, 12.6027, 0.61 ) }
    dend_35 { pt3dadd( 37.4414, 14.3426, 12.5311, 0.61 ) }
    dend_35 { pt3dadd( 39.4909, 16.1728, 12.3464, 0.61 ) }
    dend_35 { pt3dadd( 40.3006, 17.0057, 12.2324, 0.37 ) }
    dend_35 { pt3dadd( 41.0871, 17.9415, 12.0679, 0.37 ) }
    dend_35 { pt3dadd( 41.8073, 18.8458, 11.8709, 0.37 ) }
    dend_35 { pt3dadd( 42.5044, 19.7405, 11.6143, 0.37 ) }
    dend_35 { pt3dadd( 43.5895, 21.0469, 11.2175, 0.37 ) }
    dend_35 { pt3dadd( 44.3846, 21.907, 10.9364, 0.37 ) }
    dend_35 { pt3dadd( 45.3307, 22.8192, 10.5864, 0.37 ) }
    dend_35 { pt3dadd( 46.4075, 23.7245, 10.1943, 0.37 ) }
    dend_35 { pt3dadd( 47.0946, 24.2488, 9.95704, 0.37 ) }
    dend_35 { pt3dadd( 48.782, 25.4478, 9.38244, 0.37 ) }
    dend_35 { pt3dadd( 50.5595, 26.619, 8.82536, 0.37 ) }
    dend_35 { pt3dadd( 51.1702, 27.0102, 8.62271, 0.37 ) }
    dend_35 { pt3dadd( 52.9168, 28.1642, 8.12704, 0.37 ) }
    dend_35 { pt3dadd( 54.094, 28.9886, 7.77705, 0.37 ) }
    dend_35 { pt3dadd( 55.3584, 29.8717, 7.36822, 0.37 ) }
    dend_35 { pt3dadd( 56.8745, 30.9533, 6.79555, 0.37 ) }
    dend_35 { pt3dadd( 58.7704, 32.3355, 5.98916, 0.37 ) }
    dend_35 { pt3dadd( 60.7853, 33.8675, 5.04482, 0.37 ) }
    dend_35 { pt3dadd( 62.7321, 35.4451, 3.9921, 0.37 ) }
    dend_35 { pt3dadd( 64.1041, 36.6448, 3.15722, 0.37 ) }
    dend_35 { pt3dadd( 65.4918, 37.9204, 2.24242, 0.37 ) }
    dend_35 { pt3dadd( 66.5885, 38.9967, 1.52093, 0.37 ) }
    dend_35 { pt3dadd( 67.7001, 40.0805, 0.86446, 0.37 ) }
    dend_35 { pt3dadd( 68.9237, 41.2945, 0.121785, 0.37 ) }
    dend_35 { pt3dadd( 70.4593, 42.8349, -0.718446, 0.37 ) }
    dend_35 { pt3dadd( 72.7602, 45.0616, -1.87794, 0.37 ) }
    dend_35 { pt3dadd( 74.6062, 46.7281, -2.7033, 0.37 ) }
    dend_35 { pt3dadd( 76.4664, 48.2234, -3.53289, 0.37 ) }
    dend_35 { pt3dadd( 78.7319, 49.9392, -4.5128, 0.37 ) }
    dend_35 { pt3dadd( 80.4455, 51.1406, -5.19541, 0.37 ) }
    dend_35 { pt3dadd( 81.6942, 51.9192, -5.68102, 0.37 ) }
    dend_35 { pt3dadd( 82.9468, 52.6267, -6.19832, 0.37 ) }
    dend_35 { pt3dadd( 84.9123, 53.5873, -7.21471, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 21.2554, 4.16196, 13.0081, 1.22 ) }
    dend_30 { pt3dadd( 22.7454, 2.43887, 15.9197, 1.22 ) }
    dend_30 { pt3dadd( 24.5085, 0.481463, 18.7915, 0.98 ) }
    dend_30 { pt3dadd( 25.2873, -0.395962, 19.9515, 0.98 ) }
    dend_30 { pt3dadd( 26.0731, -1.28133, 21.1219, 0.98 ) }
    dend_30 { pt3dadd( 26.5808, -1.85331, 21.8781, 0.98 ) }
    dend_30 { pt3dadd( 27.4192, -2.79786, 23.1268, 0.98 ) }
    dend_30 { pt3dadd( 28.2792, -3.76494, 23.9541, 0.98 ) }
    dend_30 { pt3dadd( 28.6592, -4.12023, 24.1935, 0.98 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 98/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 20.5367, 15.5535, 18.6704, 0.61 ) }
    dend_28 { pt3dadd( 22.7518, 14.2258, 23.0535, 0.61 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_28 { pt3dadd( 23.2842, 13.7925, 24.0903, 0.61 ) }
    dend_28 { pt3dadd( 24.1745, 12.735, 26.1696, 0.61 ) }
    dend_28 { pt3dadd( 24.4188, 12.3556, 26.7893, 0.61 ) }
    dend_28 { pt3dadd( 25.0003, 11.3144, 28.2287, 0.61 ) }
    dend_28 { pt3dadd( 25.8647, 9.52543, 30.3206, 0.61 ) }
    dend_28 { pt3dadd( 26.2907, 8.43147, 31.3025, 0.61 ) }
    dend_28 { pt3dadd( 26.9952, 6.6821, 32.786, 0.61 ) }
    dend_28 { pt3dadd( 27.4831, 5.68457, 33.731, 0.61 ) }
    dend_28 { pt3dadd( 28.2856, 4.62891, 35.1507, 0.61 ) }
    dend_28 { pt3dadd( 29.5983, 3.25025, 37.7441, 0.61 ) }
    dend_28 { pt3dadd( 30.736, 2.20505, 40.1176, 0.49 ) }
    dend_28 { pt3dadd( 31.25, 1.8259, 41.2637, 0.98 ) }
    dend_28 { pt3dadd( 33.2015, 0.824426, 45.9076, 0.98 ) }
    dend_28 { pt3dadd( 35.6503, 0.17409, 52.3305, 0.98 ) }
    dend_28 { pt3dadd( 37.3566, 0.382674, 57.552, 0.73 ) }
    dend_28 { pt3dadd( 38.2463, 0.869469, 60.3919, 0.73 ) }
    dend_28 { pt3dadd( 39.2995, 1.93364, 64.0761, 0.73 ) }
    dend_28 { pt3dadd( 40.1024, 3.15636, 67.1504, 0.73 ) }
    dend_28 { pt3dadd( 40.6735, 4.56785, 69.6317, 0.73 ) }
    dend_28 { pt3dadd( 42.0431, 9.47849, 76.321, 0.61 ) }
    dend_28 { pt3dadd( 42.5916, 11.9568, 79.282, 0.61 ) }
    dend_28 { pt3dadd( 42.992, 14.7706, 82.4992, 0.61 ) }
    dend_28 { pt3dadd( 43.1235, 16.2027, 84.1466, 0.61 ) }
    dend_28 { pt3dadd( 43.2086, 18.5435, 86.9133, 0.61 ) }
    dend_28 { pt3dadd( 43.0322, 21.2573, 90.3109, 0.61 ) }
    dend_28 { pt3dadd( 42.5045, 24.1541, 94.0937, 0.61 ) }
    dend_28 { pt3dadd( 41.7586, 27.2614, 98.3643, 0.61 ) }
    dend_28 { pt3dadd( 41.2159, 29.2867, 101.266, 0.61 ) }
    dend_28 { pt3dadd( 40.5693, 31.4696, 104.532, 0.61 ) }
    dend_28 { pt3dadd( 39.2696, 35.117, 110.364, 0.61 ) }
    dend_28 { pt3dadd( 38.6124, 36.5777, 112.922, 0.49 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 31/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 20.5367, 15.5535, 18.6704, 0.73 ) }
    dend_27 { pt3dadd( 22.2072, 17.1172, 19.5648, 0.73 ) }
    dend_27 { pt3dadd( 22.9781, 17.9096, 20.0186, 0.61 ) }
    dend_27 { pt3dadd( 24.7698, 19.9229, 21.1944, 0.49 ) }
    dend_27 { pt3dadd( 26.1358, 21.4339, 22.0642, 0.49 ) }
    dend_27 { pt3dadd( 26.938, 22.3409, 22.5754, 0.49 ) }
    dend_27 { pt3dadd( 28.0996, 23.706, 23.303, 0.49 ) }
    dend_27 { pt3dadd( 29.2796, 25.097, 23.8708, 0.49 ) }
    dend_27 { pt3dadd( 30.064, 26.0765, 24.1901, 0.49 ) }
    dend_27 { pt3dadd( 31.3758, 27.8055, 24.5764, 0.49 ) }
    dend_27 { pt3dadd( 32.5149, 29.2943, 24.8466, 0.49 ) }
    dend_27 { pt3dadd( 33.5603, 30.6805, 25.0891, 0.49 ) }
    dend_27 { pt3dadd( 34.929, 32.5145, 25.3361, 0.49 ) }
    dend_27 { pt3dadd( 35.5312, 33.3501, 25.4191, 0.49 ) }
    dend_27 { pt3dadd( 36.2516, 34.4562, 25.5459, 0.37 ) }
    dend_27 { pt3dadd( 37.0029, 35.7582, 25.741, 0.37 ) }
    dend_27 { pt3dadd( 38.0355, 37.5547, 25.8784, 0.37 ) }
    dend_27 { pt3dadd( 38.6433, 38.5793, 25.91, 0.37 ) }
    dend_27 { pt3dadd( 39.3323, 39.64, 25.9647, 0.37 ) }
    dend_27 { pt3dadd( 40.2043, 40.7999, 25.9675, 0.37 ) }
    dend_27 { pt3dadd( 41.3882, 42.1494, 25.918, 0.37 ) }
    dend_27 { pt3dadd( 43.7962, 44.3307, 25.7329, 0.37 ) }
    dend_27 { pt3dadd( 45.4577, 45.5813, 25.6546, 0.37 ) }
    dend_27 { pt3dadd( 47.6162, 46.9899, 25.5362, 0.37 ) }
    dend_27 { pt3dadd( 49.1928, 47.8476, 25.4491, 0.37 ) }
    dend_27 { pt3dadd( 51.0157, 48.7064, 25.3561, 0.37 ) }
    dend_27 { pt3dadd( 52.9873, 49.5271, 25.3119, 0.37 ) }
    dend_27 { pt3dadd( 55.1292, 50.2946, 25.3469, 0.37 ) }
    dend_27 { pt3dadd( 57.7406, 51.0877, 25.2993, 0.37 ) }
    dend_27 { pt3dadd( 59.2659, 51.4993, 25.2105, 0.37 ) }
    dend_27 { pt3dadd( 60.8542, 51.8602, 25.1126, 0.37 ) }
    dend_27 { pt3dadd( 62.7123, 52.1814, 24.9818, 0.37 ) }
    dend_27 { pt3dadd( 64.6333, 52.4445, 24.8538, 0.37 ) }
    dend_27 { pt3dadd( 67.8363, 52.7755, 24.6602, 0.37 ) }
    dend_27 { pt3dadd( 69.2324, 52.8927, 24.6206, 0.37 ) }
    dend_27 { pt3dadd( 71.6368, 53.0721, 24.5995, 0.37 ) }
    dend_27 { pt3dadd( 75.8333, 53.2616, 24.6133, 0.37 ) }
    dend_27 { pt3dadd( 76.6812, 53.2819, 24.6226, 0.37 ) }
    dend_27 { pt3dadd( 78.6458, 53.2957, 24.6603, 0.37 ) }
    dend_27 { pt3dadd( 80.0296, 53.2961, 24.7081, 0.37 ) }
    dend_27 { pt3dadd( 83.0736, 53.3444, 24.798, 0.37 ) }
    dend_27 { pt3dadd( 84.7782, 53.4022, 24.9075, 0.37 ) }
    dend_27 { pt3dadd( 86.599, 53.4634, 25.1187, 0.37 ) }
    dend_27 { pt3dadd( 88.8621, 53.5289, 25.353, 0.37 ) }
    dend_27 { pt3dadd( 90.8728, 53.5973, 25.5013, 0.37 ) }
    dend_27 { pt3dadd( 93.4611, 53.7013, 25.7103, 0.37 ) }
    dend_27 { pt3dadd( 95.8852, 53.8254, 25.9575, 0.37 ) }
    dend_27 { pt3dadd( 97.6759, 54.0293, 26.2241, 0.37 ) }
    dend_27 { pt3dadd( 100.271, 54.4324, 26.7239, 0.37 ) }
    dend_27 { pt3dadd( 102.221, 54.8384, 27.1825, 0.37 ) }
    dend_27 { pt3dadd( 104.948, 55.439, 27.9114, 0.37 ) }
    dend_27 { pt3dadd( 107.976, 56.2155, 28.7934, 0.37 ) }
    dend_27 { pt3dadd( 112.404, 57.5533, 30.1062, 0.37 ) }
    dend_27 { pt3dadd( 114.364, 58.2175, 30.7618, 0.37 ) }
    dend_27 { pt3dadd( 118.705, 59.8402, 32.5053, 0.37 ) }
    dend_27 { pt3dadd( 122.006, 61.1235, 33.9938, 0.37 ) }
    dend_27 { pt3dadd( 124.636, 62.1525, 35.1835, 0.37 ) }
    dend_27 { pt3dadd( 128.129, 63.4096, 36.8331, 0.37 ) }
    dend_27 { pt3dadd( 130.51, 64.0923, 38.0256, 0.37 ) }
    dend_27 { pt3dadd( 133.069, 64.6391, 39.3417, 0.37 ) }
    dend_27 { pt3dadd( 136.46, 64.9671, 41.1625, 0.37 ) }
    dend_27 { pt3dadd( 139.529, 64.8764, 42.8284, 0.37 ) }
    dend_27 { pt3dadd( 141.492, 64.5945, 43.8925, 0.37 ) }
    dend_27 { pt3dadd( 143.93, 63.9229, 45.1691, 0.37 ) }
    dend_27 { pt3dadd( 145.559, 63.291, 45.9324, 0.37 ) }
    dend_27 { pt3dadd( 147.066, 62.5109, 46.5373, 0.37 ) }
    dend_27 { pt3dadd( 148.437, 61.5625, 47.0795, 0.37 ) }
    // Section: dend_25, id: dend_25, parent: dend_17 (entry count 98/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -8.80549, 6.45791, 9.35, 0.86 ) }
    dend_25 { pt3dadd( -9.72169, 8.75764, 8.96601, 0.86 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_25 { pt3dadd( -10.3084, 10.1471, 8.52837, 0.86 ) }
    dend_25 { pt3dadd( -10.9394, 11.5646, 8.00599, 0.86 ) }
    dend_25 { pt3dadd( -11.2112, 12.1892, 7.70901, 0.86 ) }
    dend_25 { pt3dadd( -12.0902, 14.2788, 6.47208, 0.86 ) }
    dend_25 { pt3dadd( -12.7841, 15.9294, 5.32135, 0.86 ) }
    dend_25 { pt3dadd( -13.2096, 17.0716, 4.28625, 0.86 ) }
    dend_25 { pt3dadd( -13.4031, 17.6243, 3.7108, 0.86 ) }
    dend_25 { pt3dadd( -13.9744, 19.2173, 1.9392, 0.86 ) }
    dend_25 { pt3dadd( -14.5561, 20.6198, 0.346745, 0.73 ) }
    dend_25 { pt3dadd( -15.3114, 22.1573, -1.40194, 0.73 ) }
    dend_25 { pt3dadd( -16.049, 23.5985, -2.96672, 0.73 ) }
    dend_25 { pt3dadd( -16.7524, 24.8716, -4.29575, 0.73 ) }
    dend_25 { pt3dadd( -17.1348, 25.5018, -4.91951, 0.73 ) }
    dend_25 { pt3dadd( -17.7668, 26.4569, -5.72336, 0.73 ) }
    dend_25 { pt3dadd( -18.2218, 27.1542, -6.20292, 0.73 ) }
    dend_25 { pt3dadd( -18.7085, 27.9616, -6.62969, 0.73 ) }
    dend_25 { pt3dadd( -19.3444, 29.1173, -7.11104, 0.73 ) }
    dend_25 { pt3dadd( -19.8897, 30.3678, -7.62412, 0.73 ) }
    dend_25 { pt3dadd( -20.2269, 31.2932, -8.03196, 0.73 ) }
    dend_25 { pt3dadd( -20.6175, 32.5144, -8.58059, 0.73 ) }
    dend_25 { pt3dadd( -21.0682, 33.984, -9.25077, 0.73 ) }
    dend_25 { pt3dadd( -21.4293, 35.1169, -9.7318, 0.73 ) }
    dend_25 { pt3dadd( -21.9436, 36.6709, -10.3034, 0.73 ) }
    dend_25 { pt3dadd( -22.2896, 37.6855, -10.6218, 0.73 ) }
    dend_25 { pt3dadd( -22.7281, 38.9512, -10.9719, 0.73 ) }
    dend_25 { pt3dadd( -23.1086, 40.1371, -11.2152, 0.73 ) }
    dend_25 { pt3dadd( -23.6392, 42.0163, -11.4826, 0.73 ) }
    dend_25 { pt3dadd( -23.9576, 43.3511, -11.5966, 0.73 ) }
    dend_25 { pt3dadd( -24.1836, 44.6546, -11.6399, 0.73 ) }
    dend_25 { pt3dadd( -24.2575, 45.6249, -11.661, 0.73 ) }
    dend_25 { pt3dadd( -24.1965, 47.6289, -11.5862, 0.73 ) }
    dend_25 { pt3dadd( -24.1023, 48.3783, -11.4933, 0.73 ) }
    dend_25 { pt3dadd( -23.85, 49.4408, -11.3555, 0.73 ) }
    dend_25 { pt3dadd( -23.1318, 51.6155, -11.0727, 0.73 ) }
    dend_25 { pt3dadd( -22.5071, 53.1052, -10.8817, 0.73 ) }
    dend_25 { pt3dadd( -21.4565, 55.2406, -10.6193, 0.86 ) }
    dend_25 { pt3dadd( -20.6414, 56.7493, -10.4392, 0.86 ) }
    dend_25 { pt3dadd( -19.3458, 59.2158, -10.1493, 0.86 ) }
    dend_25 { pt3dadd( -18.8193, 60.3452, -10.0647, 0.86 ) }
    dend_25 { pt3dadd( -18.4916, 61.2162, -10.0529, 0.86 ) }
    dend_25 { pt3dadd( -18.0654, 62.5842, -10.1206, 0.86 ) }
    dend_25 { pt3dadd( -17.8382, 63.5203, -10.2605, 0.61 ) }
    dend_25 { pt3dadd( -17.6038, 64.9453, -10.5198, 0.37 ) }
    dend_25 { pt3dadd( -17.5127, 67.1664, -10.7236, 0.37 ) }
    dend_25 { pt3dadd( -17.5539, 68.0121, -10.8161, 0.37 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 45/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -8.80549, 6.45791, 9.35, 1.47 ) }
    dend_18 { pt3dadd( -10.1771, 6.18644, 10.9441, 1.47 ) }
    dend_18 { pt3dadd( -12.6851, 5.69002, 13.8591, 1.47 ) }
    dend_18 { pt3dadd( -14.5904, 5.31291, 16.0735, 1.47 ) }
    dend_18 { pt3dadd( -16.6575, 4.90376, 18.4761, 1.47 ) }
    // Section: dend_16, id: dend_16, parent: dend_4 (entry count 50/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -1.10453, -8.5282, -6.55, 0.86 ) }
    dend_16 { pt3dadd( -2.29761, -5.33738, -9.01174, 0.86 ) }
    dend_16 { pt3dadd( -2.60051, -4.38447, -9.75659, 0.86 ) }
    dend_16 { pt3dadd( -2.9876, -3.23258, -10.6479, 0.86 ) }
    dend_16 { pt3dadd( -3.59628, -1.63219, -11.8346, 0.86 ) }
    dend_16 { pt3dadd( -4.1371, -0.473267, -12.7061, 0.86 ) }
    dend_16 { pt3dadd( -5.12881, 1.33061, -14.0576, 0.73 ) }
    dend_16 { pt3dadd( -5.64727, 2.23115, -14.6961, 0.73 ) }
    dend_16 { pt3dadd( -6.04043, 2.9062, -15.2678, 0.73 ) }
    dend_16 { pt3dadd( -6.53675, 3.72516, -16.0292, 0.73 ) }
    dend_16 { pt3dadd( -7.3113, 4.90016, -17.1022, 0.73 ) }
    dend_16 { pt3dadd( -7.81364, 5.6378, -17.7515, 0.73 ) }
    dend_16 { pt3dadd( -8.73515, 7.04319, -18.8695, 0.73 ) }
    dend_16 { pt3dadd( -9.61914, 8.58092, -19.9919, 0.73 ) }
    dend_16 { pt3dadd( -10.4653, 10.3891, -21.2088, 0.73 ) }
    dend_16 { pt3dadd( -10.7644, 11.1398, -21.659, 0.73 ) }
    dend_16 { pt3dadd( -11.3108, 12.781, -22.5029, 0.73 ) }
    dend_16 { pt3dadd( -11.692, 13.9248, -23.0446, 0.73 ) }
    dend_16 { pt3dadd( -12.0552, 14.9607, -23.4987, 0.73 ) }
    dend_16 { pt3dadd( -12.4654, 16.1904, -24.0026, 0.73 ) }
    dend_16 { pt3dadd( -12.8177, 17.3523, -24.5358, 0.73 ) }
    dend_16 { pt3dadd( -13.38, 19.1421, -25.5194, 0.73 ) }
    dend_16 { pt3dadd( -13.8376, 20.4605, -26.2376, 0.73 ) }
    dend_16 { pt3dadd( -14.5143, 22.1556, -27.1513, 0.73 ) }
    dend_16 { pt3dadd( -15.0255, 23.2517, -27.713, 0.61 ) }
    dend_16 { pt3dadd( -15.8914, 25.0447, -28.6904, 0.61 ) }
    dend_16 { pt3dadd( -16.6605, 26.7177, -29.7486, 0.61 ) }
    dend_16 { pt3dadd( -17.5651, 28.7643, -31.2087, 0.61 ) }
    dend_16 { pt3dadd( -17.7066, 29.2414, -31.6312, 0.61 ) }
    dend_16 { pt3dadd( -17.4312, 29.4918, -32.3746, 0.61 ) }
    dend_16 { pt3dadd( -15.5231, 29.2223, -34.7294, 0.61 ) }
    dend_16 { pt3dadd( -13.4836, 28.6087, -36.6455, 0.61 ) }
    dend_16 { pt3dadd( -12.3269, 28.1441, -37.6247, 0.61 ) }
    dend_16 { pt3dadd( -10.5378, 27.3147, -38.9252, 0.61 ) }
    dend_16 { pt3dadd( -10.1337, 27.1089, -39.145, 0.61 ) }
    dend_16 { pt3dadd( -9.13296, 26.5701, -39.5316, 0.61 ) }
    dend_16 { pt3dadd( -7.5559, 25.7243, -39.8434, 0.61 ) }
    dend_16 { pt3dadd( -6.09823, 25.0946, -39.9529, 0.61 ) }
    dend_16 { pt3dadd( -4.04694, 24.4046, -39.9069, 0.61 ) }
    dend_16 { pt3dadd( -2.14883, 23.9639, -39.7595, 0.61 ) }
    dend_16 { pt3dadd( -1.33612, 23.9057, -39.679, 0.37 ) }
    dend_16 { pt3dadd( -0.313785, 23.9754, -39.5651, 0.37 ) }
    dend_16 { pt3dadd( 0.891369, 24.1905, -39.4284, 0.37 ) }
    dend_16 { pt3dadd( 2.08026, 24.475, -39.3113, 0.37 ) }
    dend_16 { pt3dadd( 3.22408, 24.8297, -39.2458, 0.37 ) }
    dend_16 { pt3dadd( 5.8649, 25.869, -39.1687, 0.37 ) }
    dend_16 { pt3dadd( 7.30681, 26.4389, -39.1233, 0.37 ) }
    dend_16 { pt3dadd( 8.23578, 26.8184, -39.0928, 0.37 ) }
    dend_16 { pt3dadd( 9.15895, 27.2111, -39.0639, 0.37 ) }
    dend_16 { pt3dadd( 11.2645, 28.1456, -39.0262, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_16 { pt3dadd( 12.9349, 28.9684, -38.9444, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 1/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -1.10453, -8.5282, -6.55, 1.59 ) }
    dend_5 { pt3dadd( -1.35831, -10.6384, -6.07207, 1.59 ) }
    dend_5 { pt3dadd( -1.48143, -11.9397, -5.86161, 1.59 ) }
    dend_5 { pt3dadd( -1.5893, -13.0799, -5.67719, 1.59 ) }
    dend_5 { pt3dadd( -1.79808, -15.2865, -5.32028, 1.59 ) }
    dend_5 { pt3dadd( -1.9043, -16.4092, -5.13869, 1.59 ) }
    dend_5 { pt3dadd( -2.00596, -17.4838, -4.96489, 1.59 ) }
    dend_5 { pt3dadd( -2.10705, -18.8735, -4.52333, 1.59 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 9/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -23.6114, 16.1149, -8.62321, 0.49 ) }
    dend_2 { pt3dadd( -25.314, 17.863, -8.68993, 0.49 ) }
    dend_2 { pt3dadd( -26.6829, 19.3162, -8.79919, 0.49 ) }
    dend_2 { pt3dadd( -27.6863, 20.3572, -8.89497, 0.49 ) }
    dend_2 { pt3dadd( -29.1751, 21.7327, -9.03168, 0.49 ) }
    dend_2 { pt3dadd( -30.7241, 23.0583, -9.1659, 0.49 ) }
    dend_2 { pt3dadd( -32.0231, 24.1189, -9.32828, 0.49 ) }
    dend_2 { pt3dadd( -33.4356, 25.1544, -9.56375, 0.49 ) }
    dend_2 { pt3dadd( -34.0648, 25.6025, -9.69849, 0.49 ) }
    dend_2 { pt3dadd( -36.1, 26.9592, -10.1943, 0.49 ) }
    dend_2 { pt3dadd( -37.0267, 27.5416, -10.3774, 0.49 ) }
    dend_2 { pt3dadd( -38.5916, 28.5181, -10.5348, 0.49 ) }
    dend_2 { pt3dadd( -39.8175, 29.3401, -10.5937, 0.49 ) }
    dend_2 { pt3dadd( -40.7391, 30.0419, -10.5904, 0.49 ) }
    dend_2 { pt3dadd( -42.1927, 31.3697, -10.5015, 0.49 ) }
    dend_2 { pt3dadd( -43.7643, 33.1635, -10.23, 0.49 ) }
    dend_2 { pt3dadd( -44.774, 34.4918, -9.95352, 0.49 ) }
    dend_2 { pt3dadd( -45.7582, 35.9276, -9.594, 0.49 ) }
    dend_2 { pt3dadd( -46.422, 37.0438, -9.32166, 0.49 ) }
    dend_2 { pt3dadd( -46.8937, 38.022, -9.14787, 0.49 ) }
    dend_2 { pt3dadd( -47.5066, 39.6143, -8.99911, 0.49 ) }
    dend_2 { pt3dadd( -48.2362, 41.7417, -9.01629, 0.49 ) }
    dend_2 { pt3dadd( -48.6573, 43.1539, -9.10846, 0.49 ) }
    dend_2 { pt3dadd( -48.9811, 44.3315, -9.27029, 0.49 ) }
    dend_2 { pt3dadd( -49.6563, 46.9138, -9.72356, 0.49 ) }
    dend_2 { pt3dadd( -50.0181, 48.3168, -10.0499, 0.49 ) }
    dend_2 { pt3dadd( -50.2189, 49.1616, -10.3114, 0.49 ) }
    dend_2 { pt3dadd( -50.4976, 50.692, -10.8704, 0.49 ) }
    dend_2 { pt3dadd( -50.7479, 52.221, -11.5065, 0.49 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 38/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -23.6114, 16.1149, -8.62321, 0.73 ) }
    dend_1 { pt3dadd( -24.5529, 16.4213, -9.09522, 0.73 ) }
    dend_1 { pt3dadd( -26.2639, 17.0276, -9.95182, 0.73 ) }
    dend_1 { pt3dadd( -26.991, 17.2723, -10.298, 0.73 ) }
    dend_1 { pt3dadd( -27.8071, 17.5478, -10.6996, 0.61 ) }
    dend_1 { pt3dadd( -28.5145, 17.7829, -11.044, 0.61 ) }
    dend_1 { pt3dadd( -29.3041, 18.0599, -11.4704, 0.61 ) }
    dend_1 { pt3dadd( -29.6485, 18.2012, -11.662, 0.61 ) }
    dend_1 { pt3dadd( -30.5658, 18.5832, -12.1418, 0.61 ) }
    dend_1 { pt3dadd( -31.1468, 18.8262, -12.4436, 0.61 ) }
    dend_1 { pt3dadd( -31.7478, 19.0656, -12.7455, 0.61 ) }
    dend_1 { pt3dadd( -33.2769, 19.6988, -13.4748, 0.61 ) }
    dend_1 { pt3dadd( -34.3486, 20.1728, -13.9553, 0.61 ) }
    dend_1 { pt3dadd( -35.1837, 20.5906, -14.2902, 0.61 ) }
    dend_1 { pt3dadd( -36.0443, 21.0526, -14.5877, 0.61 ) }
    dend_1 { pt3dadd( -36.7506, 21.4594, -14.8222, 0.61 ) }
    dend_1 { pt3dadd( -37.8133, 22.0786, -15.1806, 0.61 ) }
    dend_1 { pt3dadd( -38.4097, 22.424, -15.3671, 0.61 ) }
    dend_1 { pt3dadd( -39.3571, 22.9793, -15.6788, 0.61 ) }
    dend_1 { pt3dadd( -40.3595, 23.5744, -16.0055, 0.61 ) }
    dend_1 { pt3dadd( -41.5697, 24.3164, -16.4066, 0.61 ) }
    dend_1 { pt3dadd( -42.8564, 25.1215, -16.8172, 0.61 ) }
    dend_1 { pt3dadd( -43.741, 25.6784, -17.0835, 0.49 ) }
    dend_1 { pt3dadd( -44.7249, 26.3085, -17.3593, 0.49 ) }
    dend_1 { pt3dadd( -45.3322, 26.7183, -17.5268, 0.49 ) }
    dend_1 { pt3dadd( -46.5152, 27.5873, -17.8291, 0.49 ) }
    dend_1 { pt3dadd( -47.4568, 28.3065, -18.0255, 0.49 ) }
    dend_1 { pt3dadd( -48.0986, 28.8446, -18.1557, 0.49 ) }
    dend_1 { pt3dadd( -49.1805, 29.8202, -18.3992, 0.49 ) }
    dend_1 { pt3dadd( -50.2736, 30.8952, -18.6545, 0.49 ) }
    dend_1 { pt3dadd( -50.6831, 31.3221, -18.7508, 0.49 ) }
    dend_1 { pt3dadd( -51.3284, 32.0218, -18.8582, 0.49 ) }
    dend_1 { pt3dadd( -51.9579, 32.7522, -18.92, 0.49 ) }
    dend_1 { pt3dadd( -52.6269, 33.5934, -18.9583, 0.49 ) }
    dend_1 { pt3dadd( -53.1574, 34.2553, -18.9667, 0.49 ) }
    dend_1 { pt3dadd( -53.6561, 34.827, -18.9639, 0.49 ) }
    dend_1 { pt3dadd( -54.55, 35.7543, -18.9921, 0.49 ) }
    dend_1 { pt3dadd( -55.219, 36.4039, -18.9923, 0.49 ) }
    dend_1 { pt3dadd( -56.606, 37.6654, -18.9491, 0.49 ) }
    dend_1 { pt3dadd( -57.6295, 38.5273, -18.8981, 0.49 ) }
    dend_1 { pt3dadd( -58.1828, 38.9836, -18.9021, 0.49 ) }
    dend_1 { pt3dadd( -58.8842, 39.5563, -18.9355, 0.49 ) }
    dend_1 { pt3dadd( -59.9455, 40.3541, -19.053, 0.49 ) }
    dend_1 { pt3dadd( -60.587, 40.7852, -19.1608, 0.49 ) }
    dend_1 { pt3dadd( -61.4342, 41.2906, -19.4177, 0.49 ) }
    dend_1 { pt3dadd( -62.5356, 41.8999, -19.9871, 0.49 ) }
    dend_1 { pt3dadd( -63.5494, 42.3959, -20.6848, 0.49 ) }
    dend_1 { pt3dadd( -64.3657, 42.7672, -21.3164, 0.49 ) }
    dend_1 { pt3dadd( -65.3488, 43.168, -22.1744, 0.49 ) }
    dend_1 { pt3dadd( -66.9085, 43.7183, -23.6351, 0.49 ) }
    dend_1 { pt3dadd( -68.3301, 44.1518, -25.0794, 0.37 ) }
    dend_1 { pt3dadd( -69.1178, 44.3563, -25.9332, 0.37 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 90/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 36.8135, 4.71475, 0.0, 0.49 ) }
    axon_1 { pt3dadd( 51.6809, 6.70511, 0.0, 0.49 ) }
    axon_1 { pt3dadd( 66.5482, 8.69548, 0.0, 0.49 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 93/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 13.9901, -2.38496, -9.24329, 0.73 ) }
    dend_43 { pt3dadd( 15.9697, -1.76229, -18.7013, 0.73 ) }
    dend_43 { pt3dadd( 15.7276, -4.145, -28.2375, 0.73 ) }
    dend_43 { pt3dadd( 15.328, -4.98685, -29.1538, 0.73 ) }
    dend_43 { pt3dadd( 14.6843, -6.30936, -29.9971, 0.73 ) }
    dend_43 { pt3dadd( 13.9357, -7.69489, -30.7388, 0.73 ) }
    dend_43 { pt3dadd( 13.122, -9.19938, -31.4546, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_43 { pt3dadd( 12.5244, -10.5042, -31.9124, 0.73 ) }
    dend_43 { pt3dadd( 12.1783, -11.3756, -32.3766, 0.73 ) }
    dend_43 { pt3dadd( 11.6283, -12.6795, -32.994, 0.73 ) }
    dend_43 { pt3dadd( 10.9972, -14.0774, -33.5636, 0.73 ) }
    dend_43 { pt3dadd( 10.6078, -14.9936, -33.9147, 0.73 ) }
    dend_43 { pt3dadd( 9.84713, -16.6825, -34.5297, 0.73 ) }
    dend_43 { pt3dadd( 9.2909, -17.9079, -34.9666, 0.73 ) }
    dend_43 { pt3dadd( 8.58314, -19.4301, -35.5238, 0.61 ) }
    dend_43 { pt3dadd( 8.01845, -20.7074, -35.9929, 0.61 ) }
    dend_43 { pt3dadd( 7.25862, -22.5157, -36.6424, 0.61 ) }
    dend_43 { pt3dadd( 6.71736, -23.8229, -37.1617, 0.61 ) }
    dend_43 { pt3dadd( 6.17906, -25.2673, -37.7285, 0.49 ) }
    dend_43 { pt3dadd( 5.86012, -26.224, -38.146, 0.49 ) }
    dend_43 { pt3dadd( 5.39591, -27.7512, -38.8934, 0.49 ) }
    dend_43 { pt3dadd( 4.54417, -30.8488, -40.537, 0.49 ) }
    dend_43 { pt3dadd( 4.02614, -33.2245, -42.026, 0.49 ) }
    dend_43 { pt3dadd( 3.66517, -35.4344, -43.6647, 0.49 ) }
    dend_43 { pt3dadd( 3.33962, -38.3968, -46.0885, 0.49 ) }
    dend_43 { pt3dadd( 3.17702, -40.388, -47.8719, 0.49 ) }
    dend_43 { pt3dadd( 3.10879, -41.5364, -48.9755, 0.49 ) }
    dend_43 { pt3dadd( 2.97951, -44.2119, -51.7108, 0.49 ) }
    dend_43 { pt3dadd( 2.78561, -46.3876, -53.8186, 0.49 ) }
    dend_43 { pt3dadd( 2.65795, -47.3018, -54.6359, 0.49 ) }
    dend_43 { pt3dadd( 2.38456, -48.769, -55.571, 0.49 ) }
    dend_43 { pt3dadd( 2.08507, -50.0283, -56.0769, 0.49 ) }
    dend_43 { pt3dadd( 1.75273, -51.312, -56.3416, 0.49 ) }
    dend_43 { pt3dadd( 1.08151, -54.2326, -56.2787, 0.49 ) }
    dend_43 { pt3dadd( 0.634042, -56.3592, -56.0188, 0.49 ) }
    dend_43 { pt3dadd( 0.232626, -58.3938, -55.6886, 0.49 ) }
    dend_43 { pt3dadd( 0.118017, -59.2529, -55.4971, 0.49 ) }
    dend_43 { pt3dadd( -0.0128022, -60.9184, -55.0844, 0.49 ) }
    dend_43 { pt3dadd( 0.0726298, -62.5711, -54.6465, 0.49 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 32/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 13.9901, -2.38496, -9.24329, 0.86 ) }
    dend_40 { pt3dadd( 13.8371, -0.82279, -9.49622, 0.86 ) }
    dend_40 { pt3dadd( 13.6757, 0.929056, -9.67923, 0.73 ) }
    dend_40 { pt3dadd( 13.6359, 1.64383, -9.73044, 0.73 ) }
    dend_40 { pt3dadd( 13.5936, 2.34144, -9.74928, 0.73 ) }
    dend_40 { pt3dadd( 13.4915, 3.90708, -9.70409, 0.73 ) }
    dend_40 { pt3dadd( 13.4595, 4.80687, -9.68682, 0.73 ) }
    dend_40 { pt3dadd( 13.4694, 5.65217, -9.6342, 0.73 ) }
    dend_40 { pt3dadd( 13.5057, 6.46542, -9.60425, 0.73 ) }
    dend_40 { pt3dadd( 13.5829, 7.39262, -9.64112, 0.61 ) }
    dend_40 { pt3dadd( 13.7281, 8.51933, -9.77665, 0.61 ) }
    dend_40 { pt3dadd( 14.0184, 10.0454, -10.1054, 0.61 ) }
    dend_40 { pt3dadd( 14.2257, 10.9539, -10.336, 0.49 ) }
    dend_40 { pt3dadd( 14.5308, 12.0801, -10.629, 0.49 ) }
    dend_40 { pt3dadd( 14.8288, 13.0337, -10.878, 0.49 ) }
    dend_40 { pt3dadd( 15.2, 14.0712, -11.1375, 0.49 ) }
    dend_40 { pt3dadd( 15.5456, 14.8882, -11.3072, 0.37 ) }
    dend_40 { pt3dadd( 15.8175, 15.4686, -11.36, 0.37 ) }
    dend_40 { pt3dadd( 16.276, 16.2819, -11.3335, 0.37 ) }
    dend_40 { pt3dadd( 16.5706, 16.7614, -11.2766, 0.37 ) }
    dend_40 { pt3dadd( 17.0629, 17.4987, -11.1333, 0.37 ) }
    dend_40 { pt3dadd( 17.8066, 18.5298, -10.8613, 0.37 ) }
    dend_40 { pt3dadd( 18.2783, 19.1559, -10.6625, 0.37 ) }
    dend_40 { pt3dadd( 19.0306, 20.1049, -10.3516, 0.37 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 56/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 84.9123, 53.5873, -7.21471, 0.37 ) }
    dend_37 { pt3dadd( 86.2638, 52.344, -7.92924, 0.37 ) }
    dend_37 { pt3dadd( 87.7966, 50.934, -8.7396, 0.37 ) }
    dend_37 { pt3dadd( 88.2529, 50.5143, -8.98085, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 60/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 84.9123, 53.5873, -7.21471, 0.37 ) }
    dend_36 { pt3dadd( 86.1134, 52.84, -7.72049, 0.37 ) }
    dend_36 { pt3dadd( 87.4951, 51.8521, -8.34253, 0.37 ) }
    dend_36 { pt3dadd( 88.2723, 51.3447, -8.66866, 0.37 ) }
    dend_36 { pt3dadd( 89.2364, 50.7169, -9.10025, 0.37 ) }
    dend_36 { pt3dadd( 90.709, 49.73, -9.79467, 0.37 ) }
    dend_36 { pt3dadd( 92.5676, 48.4819, -10.6864, 0.37 ) }
    dend_36 { pt3dadd( 94.406, 47.2051, -11.5538, 0.37 ) }
    dend_36 { pt3dadd( 95.8949, 46.1847, -12.2175, 0.37 ) }
    dend_36 { pt3dadd( 98.4261, 44.5833, -13.2918, 0.37 ) }
    dend_36 { pt3dadd( 100.848, 43.1456, -14.3072, 0.37 ) }
    dend_36 { pt3dadd( 102.437, 42.2862, -14.9336, 0.37 ) }
    dend_36 { pt3dadd( 104.288, 41.3323, -15.6647, 0.37 ) }
    dend_36 { pt3dadd( 105.743, 40.56, -16.2086, 0.37 ) }
    dend_36 { pt3dadd( 107.01, 39.8722, -16.6617, 0.37 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 75/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 28.6592, -4.12023, 24.1935, 0.49 ) }
    dend_34 { pt3dadd( 29.9185, -3.79345, 25.3062, 0.49 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 77/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 28.6592, -4.12023, 24.1935, 0.61 ) }
    dend_31 { pt3dadd( 28.8899, -5.76545, 24.7469, 0.61 ) }
    dend_31 { pt3dadd( 29.075, -7.07974, 25.1729, 0.61 ) }
    dend_31 { pt3dadd( 29.1865, -7.96305, 25.4497, 0.61 ) }
    dend_31 { pt3dadd( 29.2981, -9.0719, 25.77, 0.61 ) }
    dend_31 { pt3dadd( 29.4978, -11.1408, 26.3174, 0.61 ) }
    dend_31 { pt3dadd( 29.6906, -13.0709, 26.8355, 0.61 ) }
    dend_31 { pt3dadd( 29.8405, -14.6401, 27.252, 0.61 ) }
    dend_31 { pt3dadd( 29.9693, -16.1459, 27.6652, 0.49 ) }
    dend_31 { pt3dadd( 30.1732, -18.7638, 28.3839, 0.49 ) }
    dend_31 { pt3dadd( 30.2698, -20.243, 28.7784, 0.49 ) }
    dend_31 { pt3dadd( 30.357, -22.0349, 29.2115, 0.49 ) }
    dend_31 { pt3dadd( 30.4978, -24.7594, 29.8722, 0.49 ) }
    dend_31 { pt3dadd( 30.6175, -26.9611, 30.453, 0.49 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 91/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -16.6575, 4.90376, 18.4761, 0.49 ) }
    dend_24 { pt3dadd( -14.9207, 5.35816, 20.7263, 0.49 ) }
    dend_24 { pt3dadd( -14.284, 5.5624, 21.6307, 0.49 ) }
    dend_24 { pt3dadd( -13.2225, 6.02558, 23.4349, 0.49 ) }
    dend_24 { pt3dadd( -11.1217, 6.95173, 27.3062, 0.49 ) }
    dend_24 { pt3dadd( -9.79159, 7.55268, 29.6666, 0.49 ) }
    dend_24 { pt3dadd( -8.97273, 7.9456, 31.0865, 0.49 ) }
    dend_24 { pt3dadd( -7.55834, 8.76377, 33.7074, 0.49 ) }
    dend_24 { pt3dadd( -6.05497, 9.72719, 36.4096, 0.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_24 { pt3dadd( -4.79826, 10.7064, 38.606, 0.49 ) }
    dend_24 { pt3dadd( -3.71928, 11.7178, 40.1966, 0.37 ) }
    dend_24 { pt3dadd( -2.82475, 12.5978, 41.2435, 0.37 ) }
    dend_24 { pt3dadd( -2.08455, 13.2798, 41.9198, 0.37 ) }
    dend_24 { pt3dadd( -0.63285, 14.6322, 42.9604, 0.37 ) }
    dend_24 { pt3dadd( -0.00444022, 15.2323, 43.3364, 0.37 ) }
    dend_24 { pt3dadd( 1.43186, 16.9264, 44.0668, 0.37 ) }
    dend_24 { pt3dadd( 2.48159, 18.3736, 44.5062, 0.37 ) }
    dend_24 { pt3dadd( 3.0772, 19.2889, 44.6061, 0.37 ) }
    dend_24 { pt3dadd( 3.76704, 20.4961, 44.5352, 0.37 ) }
    dend_24 { pt3dadd( 4.21493, 21.4051, 44.3626, 0.37 ) }
    dend_24 { pt3dadd( 5.62066, 24.6546, 43.542, 0.37 ) }
    dend_24 { pt3dadd( 6.30754, 26.3772, 43.0395, 0.37 ) }
    dend_24 { pt3dadd( 6.79265, 27.685, 42.581, 0.37 ) }
    dend_24 { pt3dadd( 7.32543, 29.0977, 42.0243, 0.37 ) }
    dend_24 { pt3dadd( 7.80588, 30.2546, 41.5369, 0.37 ) }
    dend_24 { pt3dadd( 8.57902, 31.9395, 40.9122, 0.37 ) }
    dend_24 { pt3dadd( 9.34915, 33.2664, 40.7133, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 18/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -16.6575, 4.90376, 18.4761, 1.22 ) }
    dend_19 { pt3dadd( -18.1579, 4.73844, 18.2788, 1.22 ) }
    dend_19 { pt3dadd( -19.5055, 4.58997, 18.1016, 1.1 ) }
    dend_19 { pt3dadd( -21.1395, 4.40993, 17.8866, 1.1 ) }
    dend_19 { pt3dadd( -23.43, 4.15756, 17.5854, 1.1 ) }
    // Section: dend_13, id: dend_13, parent: dend_5 (entry count 23/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.10705, -18.8735, -4.52333, 0.49 ) }
    dend_13 { pt3dadd( -0.57161, -20.5375, -5.65762, 0.49 ) }
    dend_13 { pt3dadd( 0.49801, -21.5344, -6.34541, 0.49 ) }
    dend_13 { pt3dadd( 1.20112, -22.2105, -6.8182, 0.49 ) }
    dend_13 { pt3dadd( 2.00845, -23.0164, -7.41409, 0.49 ) }
    dend_13 { pt3dadd( 2.6588, -23.6731, -7.80972, 0.49 ) }
    dend_13 { pt3dadd( 3.26408, -24.3132, -8.12004, 0.49 ) }
    dend_13 { pt3dadd( 4.14043, -25.3606, -8.50177, 0.37 ) }
    dend_13 { pt3dadd( 4.67615, -26.1002, -8.66632, 0.37 ) }
    dend_13 { pt3dadd( 5.17392, -26.8175, -8.77445, 0.37 ) }
    dend_13 { pt3dadd( 6.36897, -28.8398, -8.94464, 0.37 ) }
    dend_13 { pt3dadd( 6.72772, -29.5682, -8.97812, 0.37 ) }
    dend_13 { pt3dadd( 7.36711, -30.9837, -9.04612, 0.37 ) }
    dend_13 { pt3dadd( 8.52561, -33.751, -9.15744, 0.37 ) }
    dend_13 { pt3dadd( 9.06774, -34.955, -9.21691, 0.37 ) }
    dend_13 { pt3dadd( 9.61006, -36.19, -9.35144, 0.37 ) }
    dend_13 { pt3dadd( 10.3143, -37.8512, -9.8592, 0.37 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -2.10705, -18.8735, -4.52333, 1.47 ) }
    dend_6 { pt3dadd( -3.341, -20.964, -4.00488, 1.47 ) }
    dend_6 { pt3dadd( -4.38922, -23.0258, -3.38467, 1.47 ) }
    dend_6 { pt3dadd( -5.37778, -25.1991, -2.73678, 0.73 ) }
    dend_6 { pt3dadd( -6.2125, -27.1832, -2.17631, 0.86 ) }
    dend_6 { pt3dadd( -6.99028, -28.9856, -1.6897, 0.86 ) }
    dend_6 { pt3dadd( -8.74333, -32.8584, -0.682438, 0.86 ) }
    dend_6 { pt3dadd( -9.84249, -35.3236, -0.0386243, 0.86 ) }
    dend_6 { pt3dadd( -10.9369, -37.8479, 0.593303, 0.86 ) }
    dend_6 { pt3dadd( -11.7366, -39.7458, 1.01784, 0.86 ) }
    dend_6 { pt3dadd( -12.7483, -42.134, 1.36879, 0.86 ) }
    dend_6 { pt3dadd( -13.5112, -43.8679, 1.47739, 0.86 ) }
    dend_6 { pt3dadd( -14.2692, -45.467, 1.45133, 0.86 ) }
    dend_6 { pt3dadd( -15.0139, -46.9857, 1.40726, 0.86 ) }
    dend_6 { pt3dadd( -16.2237, -49.4483, 1.2859, 0.86 ) }
    dend_6 { pt3dadd( -17.5587, -52.3139, 1.07232, 0.86 ) }
    dend_6 { pt3dadd( -18.6333, -55.0564, 0.772194, 0.86 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 57/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 19.0306, 20.1049, -10.3516, 0.49 ) }
    dend_42 { pt3dadd( 20.9873, 19.2992, -13.9324, 0.49 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 59/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 19.0306, 20.1049, -10.3516, 0.37 ) }
    dend_41 { pt3dadd( 19.75, 23.1302, -11.0499, 0.37 ) }
    dend_41 { pt3dadd( 20.3074, 25.4913, -11.5814, 0.37 ) }
    dend_41 { pt3dadd( 20.5379, 26.4676, -11.8012, 0.37 ) }
    dend_41 { pt3dadd( 20.9714, 28.3041, -12.2147, 0.37 ) }
    dend_41 { pt3dadd( 21.2892, 29.65, -12.5176, 0.37 ) }
    dend_41 { pt3dadd( 21.659, 31.2165, -12.8703, 0.37 ) }
    dend_41 { pt3dadd( 21.8912, 32.1967, -12.9544, 0.37 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 67/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 30.6175, -26.9611, 30.453, 0.49 ) }
    dend_33 { pt3dadd( 28.5935, -26.7508, 30.4969, 0.49 ) }
    dend_33 { pt3dadd( 26.9495, -26.4113, 30.6256, 0.49 ) }
    dend_33 { pt3dadd( 25.399, -25.8961, 30.636, 0.49 ) }
    dend_33 { pt3dadd( 23.5153, -24.9716, 30.5171, 0.37 ) }
    dend_33 { pt3dadd( 21.8133, -23.9252, 30.3226, 0.37 ) }
    dend_33 { pt3dadd( 20.5523, -23.0207, 30.1074, 0.37 ) }
    dend_33 { pt3dadd( 19.7685, -22.2328, 29.932, 0.37 ) }
    dend_33 { pt3dadd( 18.0744, -20.1047, 29.425, 0.37 ) }
    dend_33 { pt3dadd( 17.1572, -18.7884, 29.0923, 0.37 ) }
    dend_33 { pt3dadd( 16.257, -17.3059, 28.7363, 0.37 ) }
    dend_33 { pt3dadd( 15.6248, -16.1546, 28.4089, 0.37 ) }
    dend_33 { pt3dadd( 14.852, -14.626, 27.9326, 0.37 ) }
    dend_33 { pt3dadd( 14.4707, -13.7034, 27.6651, 0.37 ) }
    dend_33 { pt3dadd( 13.9234, -12.125, 27.2996, 0.37 ) }
    dend_33 { pt3dadd( 13.5008, -10.4751, 26.9437, 0.37 ) }
    dend_33 { pt3dadd( 13.1568, -8.56267, 26.3868, 0.37 ) }
    dend_33 { pt3dadd( 12.9208, -7.01558, 25.8739, 0.37 ) }
    dend_33 { pt3dadd( 12.5387, -4.2864, 24.9035, 0.37 ) }
    dend_33 { pt3dadd( 12.3664, -2.93829, 24.3569, 0.37 ) }
    dend_33 { pt3dadd( 12.0871, -0.798688, 23.4033, 0.37 ) }
    dend_33 { pt3dadd( 11.402, 3.55462, 21.3256, 0.37 ) }
    dend_33 { pt3dadd( 10.7535, 7.03747, 19.5806, 0.37 ) }
    dend_33 { pt3dadd( 10.4437, 8.45889, 18.83, 0.37 ) }
    dend_33 { pt3dadd( 9.52756, 11.9807, 16.8682, 0.37 ) }
    dend_33 { pt3dadd( 8.85882, 14.2702, 15.5449, 0.37 ) }
    dend_33 { pt3dadd( 8.59503, 15.0617, 15.0747, 0.37 ) }
    dend_33 { pt3dadd( 8.00321, 16.624, 14.1958, 0.37 ) }
    dend_33 { pt3dadd( 7.40116, 18.0673, 13.369, 0.24 ) }
    dend_33 { pt3dadd( 6.60045, 19.9024, 12.3786, 0.24 ) }
    dend_33 { pt3dadd( 5.96228, 21.3282, 11.7119, 0.24 ) }
    dend_33 { pt3dadd( 5.25969, 23.0763, 10.9915, 0.24 ) }
    dend_33 { pt3dadd( 4.67326, 24.8878, 10.3735, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_33 { pt3dadd( 4.35897, 26.1668, 10.0546, 0.24 ) }
    dend_33 { pt3dadd( 4.06263, 27.5885, 9.74911, 0.24 ) }
    dend_33 { pt3dadd( 3.80086, 29.3088, 9.47817, 0.24 ) }
    dend_33 { pt3dadd( 3.55136, 31.6974, 9.25294, 0.24 ) }
    dend_33 { pt3dadd( 3.45747, 33.7456, 9.20683, 0.24 ) }
    dend_33 { pt3dadd( 3.50228, 35.5912, 9.24434, 0.24 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 6/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 30.6175, -26.9611, 30.453, 0.49 ) }
    dend_32 { pt3dadd( 31.6644, -29.5898, 30.6867, 0.49 ) }
    dend_32 { pt3dadd( 31.9388, -30.3457, 30.7358, 0.49 ) }
    dend_32 { pt3dadd( 32.6259, -32.2939, 30.819, 0.49 ) }
    dend_32 { pt3dadd( 33.4254, -34.5138, 30.8916, 0.49 ) }
    dend_32 { pt3dadd( 34.4711, -37.2701, 30.9584, 0.49 ) }
    dend_32 { pt3dadd( 35.4686, -39.8111, 31.0157, 0.49 ) }
    dend_32 { pt3dadd( 36.6959, -42.7663, 31.159, 0.49 ) }
    dend_32 { pt3dadd( 37.4054, -44.3464, 31.2915, 0.49 ) }
    dend_32 { pt3dadd( 37.7396, -45.0654, 31.3578, 0.49 ) }
    dend_32 { pt3dadd( 38.5396, -46.7334, 31.4988, 0.49 ) }
    dend_32 { pt3dadd( 39.6795, -48.9153, 31.6901, 0.49 ) }
    dend_32 { pt3dadd( 41.088, -51.4572, 31.946, 0.49 ) }
    dend_32 { pt3dadd( 42.5592, -54.0941, 32.2454, 0.49 ) }
    dend_32 { pt3dadd( 43.3757, -55.6242, 32.4072, 0.49 ) }
    dend_32 { pt3dadd( 44.5364, -57.9057, 32.5993, 0.49 ) }
    dend_32 { pt3dadd( 45.8941, -60.6882, 32.7395, 0.49 ) }
    dend_32 { pt3dadd( 46.5281, -61.9656, 32.7562, 0.49 ) }
    dend_32 { pt3dadd( 47.0737, -63.1131, 32.743, 0.49 ) }
    dend_32 { pt3dadd( 48.3806, -65.9681, 32.6879, 0.49 ) }
    dend_32 { pt3dadd( 48.98, -67.4411, 32.6975, 0.49 ) }
    dend_32 { pt3dadd( 49.5877, -69.5601, 32.7069, 0.49 ) }
    dend_32 { pt3dadd( 49.9141, -72.0388, 32.6334, 0.49 ) }
    dend_32 { pt3dadd( 50.1159, -74.045, 32.584, 0.49 ) }
    dend_32 { pt3dadd( 50.2154, -75.6804, 32.5466, 0.49 ) }
    dend_32 { pt3dadd( 50.135, -79.2947, 32.4261, 0.49 ) }
    dend_32 { pt3dadd( 49.782, -82.8023, 32.3058, 0.49 ) }
    dend_32 { pt3dadd( 49.0243, -86.5499, 32.1344, 0.49 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 34/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -23.43, 4.15756, 17.5854, 0.37 ) }
    dend_21 { pt3dadd( -27.3116, 0.491014, 19.3004, 0.37 ) }
    dend_21 { pt3dadd( -28.2966, -0.482895, 19.6914, 0.37 ) }
    dend_21 { pt3dadd( -29.9774, -2.17222, 20.5005, 0.37 ) }
    dend_21 { pt3dadd( -31.0008, -3.23212, 20.9431, 0.37 ) }
    dend_21 { pt3dadd( -32.1835, -4.4074, 21.3675, 0.37 ) }
    dend_21 { pt3dadd( -34.7866, -6.81018, 22.0883, 0.37 ) }
    dend_21 { pt3dadd( -35.7482, -7.61091, 22.242, 0.37 ) }
    dend_21 { pt3dadd( -38.3837, -9.84542, 22.6963, 0.37 ) }
    dend_21 { pt3dadd( -40.0608, -11.3162, 23.0014, 0.37 ) }
    dend_21 { pt3dadd( -41.7356, -12.7614, 23.2924, 0.37 ) }
    dend_21 { pt3dadd( -43.882, -14.5794, 23.6728, 0.37 ) }
    dend_21 { pt3dadd( -46.3539, -16.6549, 24.0028, 0.37 ) }
    dend_21 { pt3dadd( -48.796, -18.8292, 24.3561, 0.37 ) }
    dend_21 { pt3dadd( -50.8171, -20.7036, 24.6403, 0.37 ) }
    dend_21 { pt3dadd( -52.2547, -22.0329, 24.9324, 0.37 ) }
    dend_21 { pt3dadd( -54.3024, -23.9403, 25.4025, 0.37 ) }
    dend_21 { pt3dadd( -55.6542, -25.1568, 25.7176, 0.37 ) }
    dend_21 { pt3dadd( -57.0865, -26.266, 25.9923, 0.37 ) }
    dend_21 { pt3dadd( -58.3486, -27.0404, 26.2335, 0.37 ) }
    dend_21 { pt3dadd( -60.4358, -28.0182, 26.6421, 0.37 ) }
    dend_21 { pt3dadd( -61.8617, -28.5829, 26.879, 0.37 ) }
    dend_21 { pt3dadd( -64.5324, -29.5451, 27.1975, 0.37 ) }
    dend_21 { pt3dadd( -67.0037, -30.35, 27.5854, 0.37 ) }
    dend_21 { pt3dadd( -68.8309, -30.9357, 27.9634, 0.37 ) }
    dend_21 { pt3dadd( -70.6387, -31.5623, 28.4191, 0.37 ) }
    dend_21 { pt3dadd( -72.9475, -32.4527, 29.064, 0.37 ) }
    dend_21 { pt3dadd( -76.1106, -33.7536, 30.0116, 0.37 ) }
    dend_21 { pt3dadd( -78.8276, -34.9186, 30.8367, 0.37 ) }
    dend_21 { pt3dadd( -81.4299, -36.3184, 31.5926, 0.37 ) }
    dend_21 { pt3dadd( -83.2452, -37.4397, 32.0519, 0.37 ) }
    dend_21 { pt3dadd( -85.1755, -38.7398, 32.4428, 0.37 ) }
    dend_21 { pt3dadd( -87.5512, -40.4616, 32.8983, 0.37 ) }
    dend_21 { pt3dadd( -89.437, -41.9364, 33.1587, 0.37 ) }
    dend_21 { pt3dadd( -93.0767, -44.9075, 33.4077, 0.37 ) }
    dend_21 { pt3dadd( -94.4211, -46.0376, 33.499, 0.37 ) }
    dend_21 { pt3dadd( -96.8399, -48.0498, 33.7423, 0.37 ) }
    dend_21 { pt3dadd( -100.74, -51.096, 34.2304, 0.37 ) }
    dend_21 { pt3dadd( -103.628, -53.1852, 34.7088, 0.37 ) }
    dend_21 { pt3dadd( -105.096, -54.1283, 34.9924, 0.37 ) }
    dend_21 { pt3dadd( -108.206, -55.8187, 35.6056, 0.37 ) }
    dend_21 { pt3dadd( -111.156, -57.2839, 36.1963, 0.37 ) }
    dend_21 { pt3dadd( -113.75, -58.4207, 36.6666, 0.37 ) }
    dend_21 { pt3dadd( -116.648, -59.4964, 37.1134, 0.37 ) }
    dend_21 { pt3dadd( -118.177, -60.0368, 37.368, 0.37 ) }
    dend_21 { pt3dadd( -121.595, -61.2188, 38.0006, 0.37 ) }
    dend_21 { pt3dadd( -124.678, -62.2204, 38.5623, 0.37 ) }
    dend_21 { pt3dadd( -127.661, -63.2202, 39.1868, 0.37 ) }
    dend_21 { pt3dadd( -130.355, -64.1362, 39.8248, 0.37 ) }
    dend_21 { pt3dadd( -132.363, -64.8022, 40.3222, 0.37 ) }
    dend_21 { pt3dadd( -135.108, -65.7212, 41.0195, 0.37 ) }
    dend_21 { pt3dadd( -137.276, -66.4202, 41.6323, 0.37 ) }
    dend_21 { pt3dadd( -139.583, -67.1657, 42.2927, 0.37 ) }
    dend_21 { pt3dadd( -142.206, -68.0208, 43.0563, 0.37 ) }
    dend_21 { pt3dadd( -144.969, -68.9094, 43.746, 0.37 ) }
    dend_21 { pt3dadd( -147.506, -69.6599, 44.27, 0.37 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 90/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -23.43, 4.15756, 17.5854, 0.86 ) }
    dend_20 { pt3dadd( -25.0816, 5.32988, 17.7436, 0.86 ) }
    dend_20 { pt3dadd( -25.6957, 5.7607, 17.8236, 0.86 ) }
    dend_20 { pt3dadd( -27.1848, 6.75866, 18.0869, 0.73 ) }
    dend_20 { pt3dadd( -28.4841, 7.59964, 18.3572, 0.73 ) }
    dend_20 { pt3dadd( -29.4235, 8.21264, 18.5713, 0.73 ) }
    dend_20 { pt3dadd( -30.6278, 9.03148, 18.8822, 0.73 ) }
    dend_20 { pt3dadd( -32.1686, 10.0553, 19.3127, 0.73 ) }
    dend_20 { pt3dadd( -33.1951, 10.7738, 19.5927, 0.73 ) }
    dend_20 { pt3dadd( -34.3766, 11.7003, 19.8768, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_20 { pt3dadd( -35.6817, 12.7818, 20.1916, 0.73 ) }
    dend_20 { pt3dadd( -37.0649, 14.0107, 20.521, 0.61 ) }
    dend_20 { pt3dadd( -37.9872, 14.8949, 20.7327, 0.61 ) }
    dend_20 { pt3dadd( -39.2262, 16.133, 21.0168, 0.61 ) }
    dend_20 { pt3dadd( -41.0748, 18.0315, 21.4418, 0.61 ) }
    dend_20 { pt3dadd( -42.9808, 19.9557, 21.8429, 0.61 ) }
    dend_20 { pt3dadd( -44.4557, 21.3316, 22.2278, 0.61 ) }
    dend_20 { pt3dadd( -46.3356, 22.9787, 22.7946, 0.61 ) }
    dend_20 { pt3dadd( -47.4969, 23.9369, 23.2585, 0.61 ) }
    dend_20 { pt3dadd( -48.3838, 24.6371, 23.7198, 0.61 ) }
    dend_20 { pt3dadd( -50.6532, 26.4442, 24.9708, 0.61 ) }
    dend_20 { pt3dadd( -52.8479, 28.2206, 26.2454, 0.61 ) }
    dend_20 { pt3dadd( -53.9499, 29.1367, 26.9456, 0.61 ) }
    dend_20 { pt3dadd( -55.9422, 30.8731, 28.2724, 0.61 ) }
    dend_20 { pt3dadd( -57.4117, 32.2524, 29.2825, 0.61 ) }
    dend_20 { pt3dadd( -59.8135, 34.7244, 30.9434, 0.61 ) }
    dend_20 { pt3dadd( -61.3734, 36.4883, 32.0214, 0.61 ) }
    dend_20 { pt3dadd( -62.4845, 37.816, 32.7092, 0.61 ) }
    dend_20 { pt3dadd( -63.6925, 39.2068, 33.404, 0.61 ) }
    dend_20 { pt3dadd( -65.1393, 40.7816, 34.1057, 0.61 ) }
    dend_20 { pt3dadd( -66.3923, 42.0647, 34.6782, 0.61 ) }
    dend_20 { pt3dadd( -67.7271, 43.3083, 35.264, 0.61 ) }
    dend_20 { pt3dadd( -69.1779, 44.6017, 35.7986, 0.61 ) }
    dend_20 { pt3dadd( -70.8273, 46.0265, 36.3646, 0.61 ) }
    dend_20 { pt3dadd( -73.1531, 48.0434, 37.1508, 0.61 ) }
    dend_20 { pt3dadd( -73.9897, 48.7947, 37.427, 0.61 ) }
    dend_20 { pt3dadd( -75.3951, 50.1377, 37.909, 0.61 ) }
    dend_20 { pt3dadd( -76.4888, 51.2797, 38.277, 0.61 ) }
    dend_20 { pt3dadd( -77.874, 52.8428, 38.7304, 0.61 ) }
    dend_20 { pt3dadd( -79.2092, 54.4494, 39.1727, 0.61 ) }
    dend_20 { pt3dadd( -80.4544, 55.9839, 39.5846, 0.61 ) }
    dend_20 { pt3dadd( -81.5454, 57.3293, 39.9305, 0.61 ) }
    dend_20 { pt3dadd( -82.6466, 58.6451, 40.2589, 0.61 ) }
    dend_20 { pt3dadd( -84.3163, 60.3756, 40.6599, 0.61 ) }
    dend_20 { pt3dadd( -85.6635, 61.5923, 40.9211, 0.61 ) }
    dend_20 { pt3dadd( -87.7196, 63.2659, 41.2619, 0.61 ) }
    dend_20 { pt3dadd( -88.9066, 64.146, 41.495, 0.61 ) }
    dend_20 { pt3dadd( -90.9471, 65.5728, 41.9768, 0.61 ) }
    dend_20 { pt3dadd( -93.2519, 67.1292, 42.6529, 0.61 ) }
    dend_20 { pt3dadd( -95.0561, 68.2713, 43.265, 0.61 ) }
    dend_20 { pt3dadd( -96.4734, 69.1046, 43.783, 0.61 ) }
    dend_20 { pt3dadd( -98.9261, 70.4137, 44.7119, 0.61 ) }
    dend_20 { pt3dadd( -100.693, 71.2848, 45.3836, 0.61 ) }
    dend_20 { pt3dadd( -102.693, 72.2399, 46.157, 0.61 ) }
    dend_20 { pt3dadd( -104.112, 72.8984, 46.7066, 0.61 ) }
    dend_20 { pt3dadd( -105.187, 73.3562, 47.0653, 0.61 ) }
    dend_20 { pt3dadd( -106.693, 73.9673, 47.4005, 0.61 ) }
    dend_20 { pt3dadd( -108.521, 74.691, 47.6005, 0.61 ) }
    dend_20 { pt3dadd( -110.112, 75.2957, 47.6934, 0.61 ) }
    dend_20 { pt3dadd( -111.552, 75.8423, 47.7045, 0.61 ) }
    dend_20 { pt3dadd( -113.255, 76.4873, 47.7247, 0.61 ) }
    dend_20 { pt3dadd( -115.167, 77.1801, 47.733, 0.61 ) }
    dend_20 { pt3dadd( -116.212, 77.5705, 47.7156, 0.61 ) }
    dend_20 { pt3dadd( -118.817, 78.5392, 47.6168, 0.61 ) }
    dend_20 { pt3dadd( -120.36, 79.0752, 47.5283, 0.61 ) }
    dend_20 { pt3dadd( -122.401, 79.71, 47.3919, 0.61 ) }
    dend_20 { pt3dadd( -123.881, 80.129, 47.3179, 0.61 ) }
    dend_20 { pt3dadd( -125.46, 80.5764, 47.2676, 0.61 ) }
    dend_20 { pt3dadd( -126.348, 80.8426, 47.2263, 0.61 ) }
    dend_20 { pt3dadd( -128.496, 81.5057, 47.1066, 0.61 ) }
    dend_20 { pt3dadd( -131.108, 82.2877, 46.9788, 0.61 ) }
    dend_20 { pt3dadd( -133.015, 82.842, 46.8772, 0.61 ) }
    dend_20 { pt3dadd( -134.076, 83.1285, 46.8419, 0.61 ) }
    dend_20 { pt3dadd( -135.557, 83.4944, 46.8126, 0.61 ) }
    dend_20 { pt3dadd( -136.589, 83.7463, 46.8476, 0.61 ) }
    dend_20 { pt3dadd( -138.624, 84.2549, 47.0106, 0.61 ) }
    dend_20 { pt3dadd( -140.233, 84.6913, 47.2242, 0.61 ) }
    dend_20 { pt3dadd( -142.087, 85.2389, 47.5488, 0.49 ) }
    dend_20 { pt3dadd( -143.222, 85.6158, 47.7951, 0.49 ) }
    dend_20 { pt3dadd( -145.879, 86.6113, 48.4333, 0.49 ) }
    dend_20 { pt3dadd( -147.523, 87.2985, 48.8426, 0.49 ) }
    dend_20 { pt3dadd( -149.303, 88.1119, 49.3203, 0.49 ) }
    dend_20 { pt3dadd( -150.642, 88.7482, 49.5951, 0.49 ) }
    dend_20 { pt3dadd( -152.561, 89.6769, 49.8451, 0.37 ) }
    dend_20 { pt3dadd( -155.036, 90.907, 49.9956, 0.37 ) }
    dend_20 { pt3dadd( -156.856, 91.8327, 49.9454, 0.37 ) }
    dend_20 { pt3dadd( -158.039, 92.4363, 49.8539, 0.37 ) }
    dend_20 { pt3dadd( -161.046, 93.918, 49.4334, 0.37 ) }
    dend_20 { pt3dadd( -163.401, 95.0335, 48.9981, 0.37 ) }
    dend_20 { pt3dadd( -164.751, 95.6554, 48.692, 0.37 ) }
    dend_20 { pt3dadd( -166.251, 96.3165, 48.3377, 0.37 ) }
    dend_20 { pt3dadd( -167.862, 96.9775, 47.9395, 0.37 ) }
    dend_20 { pt3dadd( -169.456, 97.5275, 47.5558, 0.37 ) }
    dend_20 { pt3dadd( -170.589, 97.8925, 47.3266, 0.37 ) }
    dend_20 { pt3dadd( -172.168, 98.3384, 46.9828, 0.37 ) }
    dend_20 { pt3dadd( -175.352, 99.0858, 46.2745, 0.37 ) }
    dend_20 { pt3dadd( -176.868, 99.3775, 45.9563, 0.37 ) }
    dend_20 { pt3dadd( -179.694, 99.7966, 45.3829, 0.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 88/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 10.3143, -37.8512, -9.8592, 0.37 ) }
    dend_15 { pt3dadd( 10.1445, -38.9149, -9.87082, 0.37 ) }
    dend_15 { pt3dadd( 10.0661, -39.4057, -9.87619, 0.37 ) }
    dend_15 { pt3dadd( 9.9079, -40.3966, -9.88702, 0.37 ) }
    dend_15 { pt3dadd( 9.73017, -41.5098, -9.89918, 0.37 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 93/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 10.3143, -37.8512, -9.8592, 0.37 ) }
    dend_14 { pt3dadd( 12.1661, -40.4389, -9.90394, 0.37 ) }
    dend_14 { pt3dadd( 12.6759, -41.2591, -9.90658, 0.37 ) }
    dend_14 { pt3dadd( 12.8354, -41.5391, -9.90271, 0.37 ) }
    dend_14 { pt3dadd( 13.829, -43.2834, -9.8786, 0.37 ) }
    dend_14 { pt3dadd( 14.603, -44.6424, -9.85982, 0.37 ) }
    dend_14 { pt3dadd( 15.5444, -46.295, -9.83697, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( 16.0332, -47.5086, -9.76778, 0.37 ) }
    dend_14 { pt3dadd( 16.4991, -48.7153, -9.71913, 0.37 ) }
    // Section: dend_12, id: dend_12, parent: dend_6 (entry count 2/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -18.6333, -55.0564, 0.772194, 0.49 ) }
    dend_12 { pt3dadd( -19.9238, -55.5956, 0.579004, 0.49 ) }
    dend_12 { pt3dadd( -20.4989, -55.8486, 0.477009, 0.49 ) }
    dend_12 { pt3dadd( -21.1627, -56.1378, 0.36001, 0.49 ) }
    dend_12 { pt3dadd( -21.9466, -56.4685, 0.221832, 0.49 ) }
    dend_12 { pt3dadd( -22.6227, -56.7414, 0.0751947, 0.49 ) }
    dend_12 { pt3dadd( -23.2604, -56.9916, -0.0748291, 0.49 ) }
    dend_12 { pt3dadd( -23.8946, -57.2562, -0.211772, 0.49 ) }
    dend_12 { pt3dadd( -24.7959, -57.6627, -0.49173, 0.49 ) }
    dend_12 { pt3dadd( -25.0433, -57.7746, -0.587021, 0.24 ) }
    dend_12 { pt3dadd( -25.6432, -58.0599, -0.866028, 0.24 ) }
    dend_12 { pt3dadd( -25.991, -58.2243, -1.05266, 0.37 ) }
    dend_12 { pt3dadd( -26.586, -58.5257, -1.39774, 0.37 ) }
    dend_12 { pt3dadd( -27.0799, -58.7813, -1.69188, 0.37 ) }
    dend_12 { pt3dadd( -27.7366, -59.1251, -2.0897, 0.37 ) }
    dend_12 { pt3dadd( -28.1522, -59.3411, -2.32226, 0.37 ) }
    dend_12 { pt3dadd( -28.8247, -59.6729, -2.6654, 0.37 ) }
    dend_12 { pt3dadd( -29.3519, -59.9064, -2.92262, 0.37 ) }
    dend_12 { pt3dadd( -30.1705, -60.2237, -3.29515, 0.37 ) }
    dend_12 { pt3dadd( -30.641, -60.3973, -3.50006, 0.37 ) }
    dend_12 { pt3dadd( -31.0472, -60.5409, -3.68117, 0.37 ) }
    dend_12 { pt3dadd( -31.582, -60.7058, -3.8998, 0.37 ) }
    dend_12 { pt3dadd( -32.0067, -60.8162, -4.04521, 0.37 ) }
    dend_12 { pt3dadd( -32.455, -60.9251, -4.2024, 0.37 ) }
    dend_12 { pt3dadd( -32.9799, -61.05, -4.37917, 0.37 ) }
    dend_12 { pt3dadd( -33.4546, -61.1672, -4.5278, 0.37 ) }
    dend_12 { pt3dadd( -33.9553, -61.3022, -4.65981, 0.37 ) }
    dend_12 { pt3dadd( -34.4263, -61.4443, -4.75768, 0.37 ) }
    dend_12 { pt3dadd( -35.4159, -61.7794, -4.92246, 0.37 ) }
    dend_12 { pt3dadd( -36.0435, -62.0208, -5.0213, 0.37 ) }
    dend_12 { pt3dadd( -36.9855, -62.4151, -5.15777, 0.37 ) }
    dend_12 { pt3dadd( -37.7759, -62.7695, -5.25874, 0.37 ) }
    dend_12 { pt3dadd( -38.2075, -62.9913, -5.31183, 0.37 ) }
    dend_12 { pt3dadd( -38.6841, -63.2613, -5.38534, 0.37 ) }
    dend_12 { pt3dadd( -39.3351, -63.6431, -5.47654, 0.37 ) }
    dend_12 { pt3dadd( -39.9808, -64.0525, -5.59877, 0.37 ) }
    dend_12 { pt3dadd( -40.7289, -64.5552, -5.76755, 0.37 ) }
    dend_12 { pt3dadd( -41.3003, -64.9535, -5.91492, 0.37 ) }
    dend_12 { pt3dadd( -42.1947, -65.616, -6.15242, 0.37 ) }
    dend_12 { pt3dadd( -42.9635, -66.224, -6.34842, 0.37 ) }
    dend_12 { pt3dadd( -43.2948, -66.4914, -6.42407, 0.37 ) }
    dend_12 { pt3dadd( -43.8338, -66.9375, -6.54527, 0.37 ) }
    dend_12 { pt3dadd( -44.5156, -67.4972, -6.69647, 0.37 ) }
    dend_12 { pt3dadd( -45.2496, -68.0593, -6.83294, 0.37 ) }
    dend_12 { pt3dadd( -45.8023, -68.4427, -6.90575, 0.37 ) }
    dend_12 { pt3dadd( -46.348, -68.7704, -6.96684, 0.37 ) }
    dend_12 { pt3dadd( -46.9545, -69.0595, -7.01609, 0.37 ) }
    dend_12 { pt3dadd( -47.6941, -69.3304, -7.06399, 0.37 ) }
    dend_12 { pt3dadd( -48.4183, -69.5149, -7.09435, 0.37 ) }
    dend_12 { pt3dadd( -49.4989, -69.6983, -7.11093, 0.37 ) }
    dend_12 { pt3dadd( -50.3996, -69.805, -7.10685, 0.37 ) }
    dend_12 { pt3dadd( -51.08, -69.8665, -7.11688, 0.37 ) }
    dend_12 { pt3dadd( -51.5424, -69.8919, -7.12552, 0.24 ) }
    dend_12 { pt3dadd( -52.2877, -69.907, -7.12841, 0.24 ) }
    dend_12 { pt3dadd( -52.9258, -69.9123, -7.13563, 0.24 ) }
    dend_12 { pt3dadd( -53.5242, -69.9236, -7.14843, 0.24 ) }
    dend_12 { pt3dadd( -54.5186, -69.9469, -7.19114, 0.24 ) }
    dend_12 { pt3dadd( -55.0317, -69.969, -7.22873, 0.24 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 60/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -18.6333, -55.0564, 0.772194, 0.86 ) }
    dend_7 { pt3dadd( -18.9403, -56.0677, 0.806259, 0.86 ) }
    dend_7 { pt3dadd( -19.2188, -56.8992, 0.833077, 0.86 ) }
    dend_7 { pt3dadd( -19.6035, -57.9974, 0.86772, 0.86 ) }
    dend_7 { pt3dadd( -19.8764, -58.7361, 0.890378, 0.86 ) }
    dend_7 { pt3dadd( -20.2855, -59.8723, 0.925716, 0.86 ) }
    dend_7 { pt3dadd( -20.5011, -60.52, 0.933816, 0.86 ) }
    dend_7 { pt3dadd( -20.8757, -61.6238, 0.930103, 0.86 ) }
    dend_7 { pt3dadd( -21.2181, -62.6964, 0.915981, 0.86 ) }
    dend_7 { pt3dadd( -21.4722, -63.5909, 0.900006, 0.86 ) }
    dend_7 { pt3dadd( -21.6955, -64.4377, 0.886835, 0.86 ) }
    dend_7 { pt3dadd( -22.0013, -65.6144, 0.887482, 0.86 ) }
    dend_7 { pt3dadd( -22.2809, -66.7098, 0.894546, 0.86 ) }
    dend_7 { pt3dadd( -22.6707, -68.2962, 0.914754, 0.86 ) }
    dend_7 { pt3dadd( -22.9134, -69.3203, 0.934914, 0.86 ) }
    dend_7 { pt3dadd( -23.14, -70.3431, 0.964029, 0.86 ) }
    dend_7 { pt3dadd( -23.5374, -72.2038, 1.01389, 0.86 ) }
    dend_7 { pt3dadd( -23.8348, -73.7687, 1.0605, 0.86 ) }
    dend_7 { pt3dadd( -23.9833, -74.7183, 1.07939, 0.86 ) }
    dend_7 { pt3dadd( -24.0563, -75.3123, 1.08599, 0.86 ) }
    dend_7 { pt3dadd( -24.1568, -76.3568, 1.08955, 0.86 ) }
    dend_7 { pt3dadd( -24.2715, -77.8161, 1.08313, 0.86 ) }
    dend_7 { pt3dadd( -24.3641, -79.5585, 1.06953, 0.86 ) }
    dend_7 { pt3dadd( -24.443, -80.7999, 1.06961, 0.86 ) }
    dend_7 { pt3dadd( -24.5125, -81.6659, 1.07024, 0.86 ) }
    dend_7 { pt3dadd( -24.5775, -82.4432, 1.09411, 0.86 ) }
    dend_7 { pt3dadd( -24.6623, -83.5278, 1.15611, 0.86 ) }
    dend_7 { pt3dadd( -24.7401, -84.3225, 1.22411, 0.86 ) }
    dend_7 { pt3dadd( -24.9601, -85.8167, 1.34724, 0.86 ) }
    dend_7 { pt3dadd( -25.0613, -86.4202, 1.39293, 0.86 ) }
    dend_7 { pt3dadd( -25.315, -87.8266, 1.48573, 0.86 ) }
    dend_7 { pt3dadd( -25.5191, -88.8561, 1.55847, 0.86 ) }
    dend_7 { pt3dadd( -25.8363, -90.4217, 1.67969, 0.86 ) }
    dend_7 { pt3dadd( -26.0352, -91.3809, 1.75666, 0.86 ) }
    dend_7 { pt3dadd( -26.2658, -92.51, 1.84372, 0.86 ) }
    dend_7 { pt3dadd( -26.4136, -93.2812, 1.88996, 0.86 ) }
    dend_7 { pt3dadd( -26.6132, -94.4231, 1.93271, 0.86 ) }
    dend_7 { pt3dadd( -26.8079, -95.5629, 1.98547, 0.86 ) }
    dend_7 { pt3dadd( -26.9709, -96.5955, 2.03761, 0.86 ) }
    dend_7 { pt3dadd( -27.1174, -97.5329, 2.06585, 0.86 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_7 { pt3dadd( -27.2853, -98.4899, 2.07354, 0.86 ) }
    dend_7 { pt3dadd( -27.538, -99.9809, 2.06955, 0.86 ) }
    dend_7 { pt3dadd( -27.7617, -101.44, 2.05418, 0.86 ) }
    dend_7 { pt3dadd( -27.9439, -102.747, 1.99532, 0.86 ) }
    dend_7 { pt3dadd( -28.105, -104.103, 1.90557, 0.86 ) }
    dend_7 { pt3dadd( -28.2136, -105.299, 1.81702, 0.86 ) }
    dend_7 { pt3dadd( -28.2495, -105.902, 1.77197, 0.86 ) }
    dend_7 { pt3dadd( -28.2743, -106.704, 1.70777, 0.86 ) }
    dend_7 { pt3dadd( -28.2966, -108.501, 1.63226, 0.86 ) }
    dend_7 { pt3dadd( -28.3223, -109.973, 1.54104, 0.86 ) }
    dend_7 { pt3dadd( -28.4049, -111.983, 1.39922, 0.86 ) }
    dend_7 { pt3dadd( -28.4897, -113.372, 1.2772, 0.86 ) }
    dend_7 { pt3dadd( -28.5678, -114.474, 1.16912, 0.86 ) }
    dend_7 { pt3dadd( -28.7053, -116.262, 1.00026, 0.86 ) }
    dend_7 { pt3dadd( -28.9053, -118.309, 0.84937, 0.86 ) }
    dend_7 { pt3dadd( -29.0417, -119.479, 0.747097, 0.86 ) }
    dend_7 { pt3dadd( -29.1471, -120.362, 0.663196, 0.86 ) }
    dend_7 { pt3dadd( -29.269, -121.678, 0.55076, 0.86 ) }
    dend_7 { pt3dadd( -29.325, -122.54, 0.492243, 0.86 ) }
    dend_7 { pt3dadd( -29.4204, -124.172, 0.40898, 0.61 ) }
    dend_7 { pt3dadd( -29.4825, -125.358, 0.4226, 0.61 ) }
    dend_7 { pt3dadd( -29.5139, -126.138, 0.436623, 0.61 ) }
    dend_7 { pt3dadd( -29.5653, -128.012, 0.451519, 0.61 ) }
    dend_7 { pt3dadd( -29.589, -128.962, 0.437376, 0.61 ) }
    dend_7 { pt3dadd( -29.606, -130.127, 0.395407, 0.61 ) }
    dend_7 { pt3dadd( -29.6111, -130.909, 0.356266, 0.61 ) }
    dend_7 { pt3dadd( -29.6291, -131.947, 0.297295, 0.61 ) }
    dend_7 { pt3dadd( -29.703, -134.095, 0.170745, 0.61 ) }
    dend_7 { pt3dadd( -29.7876, -135.285, 0.100844, 0.61 ) }
    dend_7 { pt3dadd( -29.8675, -136.171, 0.034323, 0.61 ) }
    dend_7 { pt3dadd( -30.0171, -137.478, -0.0763769, 0.61 ) }
    dend_7 { pt3dadd( -30.2085, -138.654, -0.184102, 0.49 ) }
    dend_7 { pt3dadd( -30.4128, -139.668, -0.278464, 0.49 ) }
    dend_7 { pt3dadd( -30.7076, -140.928, -0.397182, 0.49 ) }
    dend_7 { pt3dadd( -30.9223, -141.8, -0.482765, 0.49 ) }
    dend_7 { pt3dadd( -31.1445, -142.663, -0.565318, 0.49 ) }
    dend_7 { pt3dadd( -31.4379, -143.879, -0.66728, 0.49 ) }
    dend_7 { pt3dadd( -31.6044, -144.649, -0.712175, 0.49 ) }
    dend_7 { pt3dadd( -31.745, -145.342, -0.712122, 0.49 ) }
    dend_7 { pt3dadd( -31.855, -146.193, -0.695174, 0.49 ) }
    dend_7 { pt3dadd( -31.9531, -147.308, -0.648754, 0.49 ) }
    dend_7 { pt3dadd( -32.0287, -148.465, -0.605269, 0.49 ) }
    dend_7 { pt3dadd( -32.096, -149.615, -0.564731, 0.49 ) }
    dend_7 { pt3dadd( -32.19, -151.174, -0.518452, 0.49 ) }
    dend_7 { pt3dadd( -32.273, -152.964, -0.502472, 0.49 ) }
    dend_7 { pt3dadd( -32.287, -153.836, -0.519598, 0.49 ) }
    dend_7 { pt3dadd( -32.2821, -155.019, -0.575062, 0.49 ) }
    dend_7 { pt3dadd( -32.2526, -156.261, -0.6411, 0.49 ) }
    dend_7 { pt3dadd( -32.2122, -157.12, -0.689228, 0.49 ) }
    dend_7 { pt3dadd( -32.1196, -158.577, -0.776583, 0.49 ) }
    dend_7 { pt3dadd( -32.0745, -159.59, -0.82217, 0.49 ) }
    dend_7 { pt3dadd( -32.042, -160.186, -0.855032, 0.49 ) }
    dend_7 { pt3dadd( -31.9793, -161.162, -0.911471, 0.49 ) }
    dend_7 { pt3dadd( -31.9076, -162.264, -0.973407, 0.49 ) }
    dend_7 { pt3dadd( -31.8267, -163.582, -1.03445, 0.49 ) }
    dend_7 { pt3dadd( -31.7607, -164.56, -1.05628, 0.49 ) }
    dend_7 { pt3dadd( -31.7066, -165.695, -1.10858, 0.49 ) }
    dend_7 { pt3dadd( -31.6704, -166.73, -1.19038, 0.49 ) }
    dend_7 { pt3dadd( -31.6624, -167.598, -1.28368, 0.49 ) }
    dend_7 { pt3dadd( -31.6807, -168.893, -1.46809, 0.49 ) }
    dend_7 { pt3dadd( -31.7363, -170.066, -1.66529, 0.49 ) }
    dend_7 { pt3dadd( -31.9032, -172.033, -2.01554, 0.49 ) }
    dend_7 { pt3dadd( -32.0155, -172.885, -2.17604, 0.49 ) }
    dend_7 { pt3dadd( -32.1512, -173.671, -2.32672, 0.49 ) }
    dend_7 { pt3dadd( -32.3385, -174.557, -2.47064, 0.49 ) }
    dend_7 { pt3dadd( -32.5975, -175.562, -2.62787, 0.49 ) }
    dend_7 { pt3dadd( -32.8781, -176.533, -2.7484, 0.49 ) }
    dend_7 { pt3dadd( -33.0808, -177.282, -2.79649, 0.49 ) }
    dend_7 { pt3dadd( -33.2338, -177.967, -2.82581, 0.49 ) }
    dend_7 { pt3dadd( -33.5008, -179.48, -2.92357, 0.49 ) }
    dend_7 { pt3dadd( -33.6765, -180.8, -3.0264, 0.49 ) }
    dend_7 { pt3dadd( -33.8422, -182.496, -3.19021, 0.49 ) }
    dend_7 { pt3dadd( -33.9094, -183.449, -3.29365, 0.49 ) }
    dend_7 { pt3dadd( -33.9716, -184.77, -3.42941, 0.49 ) }
    dend_7 { pt3dadd( -33.9864, -185.932, -3.53518, 0.49 ) }
    dend_7 { pt3dadd( -33.9433, -187.492, -3.6738, 0.49 ) }
    dend_7 { pt3dadd( -33.8903, -189.063, -3.77971, 0.49 ) }
    dend_7 { pt3dadd( -33.8517, -189.793, -3.85109, 0.49 ) }
    dend_7 { pt3dadd( -33.7696, -191.261, -4.09501, 0.49 ) }
    dend_7 { pt3dadd( -33.6829, -192.517, -4.3717, 0.49 ) }
    dend_7 { pt3dadd( -33.4985, -194.188, -4.81787, 0.49 ) }
    dend_7 { pt3dadd( -33.1768, -196.211, -5.46342, 0.49 ) }
    dend_7 { pt3dadd( -32.7813, -197.97, -6.14275, 0.49 ) }
    dend_7 { pt3dadd( -32.1469, -200.16, -7.1006, 0.49 ) }
    dend_7 { pt3dadd( -31.6362, -201.641, -7.80885, 0.49 ) }
    dend_7 { pt3dadd( -31.3472, -202.412, -8.18485, 0.49 ) }
    dend_7 { pt3dadd( -30.9892, -203.393, -8.616, 0.49 ) }
    dend_7 { pt3dadd( -30.5407, -205.022, -9.21965, 0.49 ) }
    dend_7 { pt3dadd( -30.4981, -206.156, -9.46645, 0.49 ) }
    dend_7 { pt3dadd( -30.604, -206.79, -9.54444, 0.49 ) }
    dend_7 { pt3dadd( -30.8548, -207.704, -9.63025, 0.49 ) }
    dend_7 { pt3dadd( -31.6547, -210.183, -9.8131, 0.49 ) }
    dend_7 { pt3dadd( -32.3942, -212.27, -9.92889, 0.49 ) }
    dend_7 { pt3dadd( -32.9822, -213.85, -9.97341, 0.49 ) }
    dend_7 { pt3dadd( -33.5551, -215.431, -10.0281, 0.49 ) }
    dend_7 { pt3dadd( -33.8717, -216.51, -10.0844, 0.49 ) }
    dend_7 { pt3dadd( -34.0388, -217.459, -10.1413, 0.49 ) }
    dend_7 { pt3dadd( -34.071, -218.501, -10.1835, 0.49 ) }
    dend_7 { pt3dadd( -34.0252, -219.11, -10.1904, 0.49 ) }
    dend_7 { pt3dadd( -33.9667, -219.851, -10.1925, 0.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_7 { pt3dadd( -33.9159, -221.138, -10.1769, 0.49 ) }
    dend_7 { pt3dadd( -33.9032, -222.879, -10.1771, 0.49 ) }
    dend_7 { pt3dadd( -33.8891, -224.265, -10.2506, 0.49 ) }
    dend_7 { pt3dadd( -33.8467, -225.469, -10.3644, 0.49 ) }
    dend_7 { pt3dadd( -33.7111, -227.332, -10.5922, 0.49 ) }
    dend_7 { pt3dadd( -33.5836, -228.57, -10.7778, 0.49 ) }
    dend_7 { pt3dadd( -33.3873, -229.836, -11.0162, 0.49 ) }
    dend_7 { pt3dadd( -32.9894, -231.675, -11.3996, 0.49 ) }
    dend_7 { pt3dadd( -32.611, -232.962, -11.6861, 0.49 ) }
    dend_7 { pt3dadd( -32.076, -234.503, -12.0437, 0.49 ) }
    dend_7 { pt3dadd( -31.7296, -235.321, -12.2324, 0.49 ) }
    dend_7 { pt3dadd( -31.0131, -236.828, -12.5877, 0.49 ) }
    dend_7 { pt3dadd( -30.2032, -238.426, -12.9341, 0.49 ) }
    dend_7 { pt3dadd( -29.657, -239.502, -13.0818, 0.49 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 14/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -147.506, -69.6599, 44.27, 0.37 ) }
    dend_23 { pt3dadd( -150.257, -69.8865, 45.3229, 0.37 ) }
    dend_23 { pt3dadd( -153.31, -70.138, 46.4909, 0.37 ) }
    dend_23 { pt3dadd( -154.936, -70.2719, 47.1132, 0.37 ) }
    dend_23 { pt3dadd( -156.386, -70.3913, 47.6681, 0.24 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 19/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -147.506, -69.6599, 44.27, 0.37 ) }
    dend_22 { pt3dadd( -148.429, -71.9805, 44.5114, 0.37 ) }
    dend_22 { pt3dadd( -148.957, -73.5094, 44.6978, 0.37 ) }
    dend_22 { pt3dadd( -149.434, -75.0593, 44.9006, 0.37 ) }
    dend_22 { pt3dadd( -149.864, -76.7768, 45.2244, 0.37 ) }
    dend_22 { pt3dadd( -150.184, -78.2551, 45.5714, 0.37 ) }
    dend_22 { pt3dadd( -150.476, -79.7643, 45.9591, 0.37 ) }
    dend_22 { pt3dadd( -150.648, -81.2197, 46.3937, 0.37 ) }
    dend_22 { pt3dadd( -150.723, -82.1071, 46.6718, 0.37 ) }
    dend_22 { pt3dadd( -150.894, -84.5747, 47.4714, 0.37 ) }
    dend_22 { pt3dadd( -150.992, -86.6702, 48.157, 0.37 ) }
    dend_22 { pt3dadd( -151.023, -87.8043, 48.4944, 0.37 ) }
    dend_22 { pt3dadd( -151.026, -89.3732, 48.9551, 0.37 ) }
    dend_22 { pt3dadd( -151.016, -90.7356, 49.328, 0.37 ) }
    dend_22 { pt3dadd( -151.015, -91.7605, 49.5888, 0.37 ) }
    dend_22 { pt3dadd( -150.996, -93.2635, 49.8452, 0.37 ) }
    dend_22 { pt3dadd( -151.002, -95.2528, 50.0691, 0.37 ) }
    dend_22 { pt3dadd( -151.042, -96.8846, 50.1434, 0.37 ) }
    dend_22 { pt3dadd( -151.132, -98.4045, 50.1121, 0.37 ) }
    dend_22 { pt3dadd( -151.357, -100.29, 49.9523, 0.37 ) }
    dend_22 { pt3dadd( -151.81, -102.645, 49.6019, 0.37 ) }
    dend_22 { pt3dadd( -152.342, -104.35, 49.2089, 0.37 ) }
    dend_22 { pt3dadd( -153.121, -105.95, 48.6904, 0.37 ) }
    dend_22 { pt3dadd( -153.638, -106.691, 48.4059, 0.37 ) }
    dend_22 { pt3dadd( -154.775, -107.899, 47.8916, 0.37 ) }
    dend_22 { pt3dadd( -155.429, -108.45, 47.626, 0.37 ) }
    dend_22 { pt3dadd( -156.888, -109.417, 47.148, 0.37 ) }
    dend_22 { pt3dadd( -158.332, -110.297, 46.7015, 0.37 ) }
    dend_22 { pt3dadd( -159.917, -111.176, 46.2482, 0.37 ) }
    dend_22 { pt3dadd( -161.411, -111.978, 45.8187, 0.37 ) }
    dend_22 { pt3dadd( -162.59, -112.589, 45.4684, 0.37 ) }
    dend_22 { pt3dadd( -164.747, -113.741, 44.8111, 0.37 ) }
    dend_22 { pt3dadd( -166.91, -114.96, 44.12, 0.37 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 52/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -29.657, -239.502, -13.0818, 0.49 ) }
    dend_9 { pt3dadd( -27.8397, -240.876, -13.9527, 0.49 ) }
    dend_9 { pt3dadd( -26.321, -242.025, -14.6805, 0.49 ) }
    dend_9 { pt3dadd( -24.507, -243.398, -15.5498, 0.49 ) }
    dend_9 { pt3dadd( -20.9979, -246.053, -17.2314, 0.49 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 57/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -29.657, -239.502, -13.0818, 0.49 ) }
    dend_8 { pt3dadd( -31.2965, -240.247, -13.4895, 0.49 ) }
    dend_8 { pt3dadd( -32.7456, -240.907, -13.8499, 0.49 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 60/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -20.9979, -246.053, -17.2314, 0.49 ) }
    dend_11 { pt3dadd( -20.1047, -248.267, -17.3851, 0.49 ) }
    dend_11 { pt3dadd( -19.22, -250.461, -17.5373, 0.49 ) }
    dend_11 { pt3dadd( -17.9931, -253.504, -17.7484, 0.49 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 64/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -20.9979, -246.053, -17.2314, 0.49 ) }
    dend_10 { pt3dadd( -18.1835, -245.801, -18.1856, 0.49 ) }
    dend_10 { pt3dadd( -17.3883, -245.73, -18.4552, 0.49 ) }
    dend_10 { pt3dadd( -15.0601, -245.521, -19.2445, 0.49 ) }
    dend_10 { pt3dadd( -12.641, -245.305, -20.0647, 0.49 ) }
    dend_10 { pt3dadd( -10.9898, -245.157, -20.6245, 0.49 ) }
    dend_10 { pt3dadd( -9.51142, -245.025, -21.1257, 0.49 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_29, dend_26, dend_17, dend_4, dend_3, dend_0, dend_39, dend_35, dend_30, dend_28, dend_27, dend_25, dend_18, dend_16, dend_5, dend_2, dend_1, dend_43, dend_40, dend_37, dend_36, dend_34, dend_31, dend_24, dend_19, dend_13, dend_6, dend_42, dend_41, dend_33, dend_32, dend_21, dend_20, dend_15, dend_14, dend_12, dend_7, dend_23, dend_22, dend_9, dend_8, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_38 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_29, dend_26, dend_17, dend_4, dend_3, dend_0, dend_39, dend_35, dend_30, dend_28, dend_27, dend_25, dend_18, dend_16, dend_5, dend_2, dend_1, dend_43, dend_40, dend_37, dend_36, dend_34, dend_31, dend_24, dend_19, dend_13, dend_6, dend_42, dend_41, dend_33, dend_32, dend_21, dend_20, dend_15, dend_14, dend_12, dend_7, dend_23, dend_22, dend_9, dend_8, dend_11, dend_10]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_3 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_35 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_28 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_27 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_25 OneSecGrp_SectionRef_15.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_16 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_43 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_24 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_6 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_21 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_20 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_12 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_7 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_22 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_4 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_17 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_38 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_29 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_5 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_39 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_18 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_26 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_19 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_30 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_34 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_13 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_40 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_15 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_42 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_14 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_31 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_41 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_37 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_36 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_23 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_8 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_9 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_11 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_10 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_8 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_3 nseg = 7
    dend_35 nseg = 5
    dend_28 nseg = 5
    dend_27 nseg = 7
    dend_25 nseg = 3
    dend_16 nseg = 5
    dend_2 nseg = 3
    dend_1 nseg = 3
    dend_43 nseg = 5
    dend_24 nseg = 3
    dend_6 nseg = 3
    dend_33 nseg = 3
    dend_32 nseg = 3
    dend_21 nseg = 7
    dend_20 nseg = 9
    dend_12 nseg = 3
    dend_7 nseg = 9
    dend_22 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L1_DAC_a4cb1c245c_0_0


