// Cell: bNAC219_L1_NGCDA_e7cec642c3_0_0
/*
{
  "id" : "bNAC219_L1_NGCDA_e7cec642c3_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.63214, -6.9024, 0.0, 2.40877", "-2.37453, -6.15806, 0.0, 3.98527", "-2.11692, -5.41372, 0.0, 5.71963", "-1.85931, -4.66938, 0.0, 7.14871", "-1.6017, -3.92504, 0.0, 8.48816", "-1.34409, -3.18071, 0.0, 9.45022", "-1.08649, -2.43637, 0.0, 10.3031", "-0.828875, -1.69203, 0.0, 11.0833", "-0.571265, -0.94769, 0.0, 11.8333", "-0.313656, -0.203352, 0.0, 12.495", "-0.0560457, 0.540986, 0.0, 13.0677", "0.201564, 1.28532, 0.0, 13.4325", "0.459174, 2.02966, 0.0, 13.7484", "0.716784, 2.774, 0.0, 13.6296", "0.974394, 3.51834, 0.0, 13.0732", "1.232, 4.26268, 0.0, 12.5169", "1.48961, 5.00702, 0.0, 11.8182", "1.74722, 5.75135, 0.0, 10.2852", "2.00483, 6.49569, 0.0, 8.55166", "2.26244, 7.24003, 0.0, 5.92911", "2.52005, 7.98437, 0.0, 3.37983" ]
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-1.98039, -7.09918, -0.78, 3.42", "-1.98039, -7.09918, -0.78, 3.42", "-2.91708, -7.76344, -1.28646, 2.96", "-4.6897, -8.76136, -1.7592, 2.28", "-6.37314, -9.53028, -1.86385, 1.59", "-8.31947, -10.199, -1.63259, 1.37", "-9.86737, -10.5923, -1.32898, 1.59", "-12.0215, -11.0302, -0.736337, 2.05", "-13.5482, -11.2278, -0.140778, 2.28", "-14.7691, -11.2858, 0.499952, 2.05", "-16.3947, -11.2159, 1.55519, 1.59", "-17.684, -11.0339, 2.53355, 1.82" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000058842509
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "5.4896, 3.76832, 6.55, 2.73", "6.00109, 4.08156, 8.11716, 2.73", "6.56591, 4.42745, 9.84775, 2.73", "7.20571, 4.81927, 11.8081, 2.28", "7.72697, 5.1385, 13.4052, 2.28", "8.09173, 5.36189, 14.5228, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000058842509
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-6.17039, 3.85232, 2.95, 0.68", "-7.09248, 3.89288, 3.22046, 0.68", "-8.92341, 3.97343, 3.7575, 1.14", "-10.477, 4.04177, 4.21316, 0.91", "-12.0856, 4.11254, 4.68499, 1.14", "-12.9374, 4.15001, 4.93482, 1.82", "-13.8743, 4.19123, 5.20963, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000058842509
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.52005, 7.98437, 0.0, 0.941078", "7.42592, 22.1594, 0.0, 0.941078", "12.3318, 36.3345, 0.0, 0.941078" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-17.684, -11.0339, 2.53355, 0.91", "-17.5929, -11.647, 1.74866, 0.91", "-17.4203, -12.809, 0.261205, 0.91", "-17.2524, -13.9387, -1.18496, 1.14", "-17.1386, -14.7047, -2.16562, 0.68" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-17.684, -11.0339, 2.53355, 0.91", "-18.8075, -11.5666, 2.02678, 0.91", "-19.44, -11.8665, 1.74153, 0.68", "-20.3826, -12.3134, 1.31637, 0.68", "-21.468, -12.8281, 0.82683, 0.68", "-22.3215, -13.2328, 0.441852, 1.59" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "8.09173, 5.36189, 14.5228, 1.82", "7.91199, 4.53784, 15.5849, 1.82", "7.59749, 3.50399, 17.0747, 1.59", "8.44993, 3.66825, 15.6994, 1.82", "9.31766, 3.30553, 14.8613, 1.82", "10.4469, 2.69564, 13.8141, 1.37", "13.2439, 1.18512, 11.2204, 0.91", "14.5806, 0.516565, 9.93264, 0.91", "15.8671, -0.0441232, 8.64173, 0.91", "17.0152, -0.473666, 7.41347, 0.68", "18.293, -0.908774, 5.92534, 0.68" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "8.09173, 5.36189, 14.5228, 2.05", "9.21988, 4.60182, 13.6946, 2.05", "10.3984, 3.52236, 12.4339, 1.59", "11.2165, 2.65608, 11.4185, 0.91", "12.3415, 1.48564, 10.1205, 0.91", "13.4882, 0.359608, 8.92456, 1.37", "14.4283, -0.470106, 8.04423, 1.59", "15.3258, -1.34996, 7.04451, 1.14", "16.3983, -2.47077, 5.66488, 0.91", "17.1723, -3.30776, 4.66534, 0.91", "17.796, -3.92062, 4.01627, 0.91", "18.6549, -4.61007, 3.42842, 1.37" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-13.8743, 4.19123, 5.20963, 1.37", "-14.8018, 4.11226, 4.08583, 1.37", "-15.686, 4.41797, 2.90654, 1.14", "-16.6301, 5.03505, 1.58264, 0.91", "-17.4087, 5.73533, 0.47175, 1.14", "-18.2239, 6.63512, -0.679262, 0.68", "-19.2504, 7.89993, -2.03303, 0.68", "-20.1426, 9.23648, -3.24546, 0.46", "-20.6232, 10.0978, -3.88936, 0.91", "-21.0345, 10.9828, -4.4458, 1.37", "-21.7932, 12.8604, -5.48949, 1.14", "-22.3672, 14.264, -6.17954, 1.59" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-13.8743, 4.19123, 5.20963, 0.68", "-14.9367, 5.26447, 5.51408, 0.68", "-16.1354, 6.35171, 5.9121, 0.68", "-17.5084, 7.5619, 6.44911, 0.91", "-18.5351, 8.50196, 6.93062, 0.91", "-19.1943, 9.16741, 7.26396, 0.91", "-19.799, 9.77779, 7.56971, 0.68", "-20.6908, 10.6806, 7.97885, 0.68", "-21.5177, 11.3768, 8.30985, 0.46", "-22.1001, 11.8419, 8.6805, 0.46", "-22.7693, 12.5894, 9.60353, 0.91" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "12.3318, 36.3345, 0.0, 0.23", "17.2377, 50.5096, 0.0, 0.23", "22.1435, 64.6846, 0.0, 0.23" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-17.1386, -14.7047, -2.16562, 1.37", "-16.7788, -15.6393, -2.85461, 1.37", "-16.4551, -16.4803, -3.47452, 1.82", "-15.9177, -17.8764, -4.50366, 0.91" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-17.1386, -14.7047, -2.16562, 0.91", "-14.9879, -14.7652, -5.5569, 0.91", "-14.0194, -14.7925, -7.08421, 0.68", "-13.0011, -14.8212, -8.68988, 0.68", "-12.5366, -14.8343, -9.42237, 1.37", "-11.8018, -14.855, -10.581, 2.05", "-11.1687, -14.8728, -11.5793, 1.14" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-22.3215, -13.2328, 0.441852, 1.59", "-23.7413, -12.9901, 1.90701, 1.59", "-25.1217, -12.4413, 3.26302, 1.59", "-26.0642, -11.953, 4.27098, 0.91", "-26.9482, -11.4333, 5.34998, 0.91", "-27.9898, -10.7654, 6.7674, 0.91", "-28.911, -10.1249, 8.23375, 1.37", "-29.6455, -9.31192, 9.77683, 0.68", "-30.0085, -8.64202, 10.8519, 0.68", "-30.0278, -7.86666, 12.2553, 0.23", "-29.7015, -7.71249, 12.8935, 0.68", "-28.4235, -7.87129, 14.3053, 0.23", "-27.5172, -8.13469, 15.1318, 0.68" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-22.3215, -13.2328, 0.441852, 0.91", "-23.2448, -13.9359, -0.984538, 0.91", "-24.3485, -14.7764, -2.68977, 0.91", "-25.0039, -15.2754, -3.70218, 0.91", "-25.3755, -15.5584, -4.27627, 0.91" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "18.6549, -4.61007, 3.42842, 0.68", "18.3245, -3.46466, 3.94403, 0.68", "17.9282, -2.18892, 4.50057, 0.68", "17.5796, -0.980439, 5.05288, 0.68", "17.1948, 0.35569, 5.74653, 0.91", "16.6021, 2.01892, 6.7466, 0.68", "16.2316, 2.85553, 7.327, 0.68", "15.6715, 3.91963, 8.16135, 0.68", "15.0792, 4.84369, 8.97308, 0.68", "14.4563, 5.6742, 9.84497, 0.68", "13.5615, 6.71, 11.2239, 0.23", "13.0089, 7.24825, 12.1479, 0.23" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "18.6549, -4.61007, 3.42842, 0.46", "19.8193, -5.11539, 3.64137, 0.46", "21.4715, -5.57128, 3.59681, 0.46", "22.7613, -5.92719, 3.56203, 0.68", "23.909, -6.24387, 3.53108, 0.68", "25.5303, -6.69125, 3.48735, 0.68", "26.9633, -7.08667, 3.44871, 0.91", "28.2696, -7.2335, 3.21042, 0.91" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-22.3672, 14.264, -6.17954, 0.68", "-23.6794, 15.2355, -6.53395, 0.68", "-25.0015, 16.0233, -6.92634, 0.68", "-26.3154, 16.6666, -7.3338, 0.68", "-27.857, 17.224, -7.81737, 1.14", "-28.969, 17.4055, -8.14962, 0.68", "-30.4986, 17.2839, -8.56588, 0.68", "-31.2885, 16.8451, -8.7551, 0.91", "-31.9556, 16.2339, -8.88308, 2.05", "-32.8297, 15.3177, -9.01726, 0.46", "-33.9581, 13.9476, -9.21666, 0.68", "-35.021, 12.5291, -9.41231, 0.46", "-36.0508, 11.0521, -9.58701, 0.68", "-36.6565, 10.1026, -9.70511, 0.46", "-37.4458, 8.72307, -9.93088, 0.46", "-37.9162, 7.63013, -10.1514, 0.46", "-38.0302, 7.09398, -10.2781, 0.46", "-38.0757, 5.98649, -10.606, 0.91", "-37.9364, 4.63025, -11.1148, 0.23", "-37.7921, 3.7326, -11.5243, 0.68", "-37.6337, 2.92844, -11.9586, 1.14", "-37.4096, 1.66495, -12.8331, 0.68", "-37.3217, 0.827955, -13.507, 0.68", "-37.3281, -0.66414, -14.8264, 0.91", "-37.4395, -1.48174, -15.5375, 0.68", "-37.6536, -2.29822, -16.1852, 0.68", "-37.9853, -3.22059, -16.8474, 0.68", "-38.5814, -4.61871, -17.7261, 0.68", "-39.0288, -5.58999, -18.2487, 1.59", "-39.5502, -6.75087, -18.7889, 0.68", "-40.0451, -8.1066, -19.3804, 0.68", "-40.3908, -9.29665, -19.9131, 1.59", "-40.595, -10.1745, -20.3553, 0.91", "-40.8151, -11.397, -21.0721, 0.68", "-40.9108, -12.2674, -21.6464, 1.14", "-40.9669, -13.3198, -22.4028, 0.46", "-40.9263, -14.6207, -23.3393, 0.46", "-40.8626, -15.3463, -23.8264, 0.46", "-40.7547, -16.2173, -24.3385, 1.59", "-40.5761, -17.441, -24.9804, 0.91", "-40.4711, -18.4463, -25.4625, 0.91", "-40.3699, -19.3236, -25.8149, 1.14", "-40.1623, -20.5589, -26.2766, 0.46", "-40.0108, -21.2723, -26.5256, 0.91", "-39.6133, -22.8633, -27.0316, 0.23", "-39.376, -23.8066, -27.3025, 0.23", "-38.9855, -25.3984, -27.7542, 0.23", "-38.7805, -26.313, -28.0317, 0.23", "-38.5119, -27.4581, -28.3996, 1.37", "-37.8959, -29.7539, -29.1029, 0.23" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-22.3672, 14.264, -6.17954, 0.68", "-22.964, 15.8183, -6.41059, 0.68", "-23.6532, 17.3107, -6.62316, 0.68", "-24.2016, 18.3946, -6.75734, 0.68", "-24.85, 19.7159, -6.89524, 0.68", "-25.3153, 20.8433, -6.99505, 0.68", "-25.568, 21.501, -7.06382, 0.46", "-25.7646, 21.9348, -7.10789, 0.68", "-26.4574, 23.3008, -7.26698, 0.91", "-27.0276, 24.4567, -7.43774, 0.46", "-27.6195, 25.8445, -7.65771, 0.46", "-28.0754, 26.9353, -7.80682, 0.46", "-28.5119, 27.823, -7.91024, 0.91", "-29.0232, 28.5864, -7.98572, 0.91", "-29.9367, 29.6119, -8.06491, 0.23", "-30.9873, 30.491, -8.10335, 0.23", "-32.0975, 31.2281, -8.12626, 0.23", "-33.2155, 31.8759, -8.17463, 0.68", "-34.8481, 32.6726, -8.3734, 0.46", "-35.2675, 32.8529, -8.45018, 0.91", "-36.5764, 33.3721, -8.75187, 2.05", "-37.4603, 33.7344, -9.01984, 1.14", "-39.2461, 34.5889, -9.79782, 0.46", "-40.329, 35.295, -10.4555, 0.46", "-41.007, 36.0183, -11.0997, 0.46", "-41.3928, 36.7421, -11.6796, 0.46", "-41.5262, 37.5655, -12.2853, 0.46", "-41.4392, 38.2975, -12.8198, 0.91", "-40.9086, 39.4654, -13.7063, 0.91", "-40.0819, 40.5049, -14.5611, 0.46", "-39.4903, 41.007, -15.0336, 0.46", "-38.6431, 41.6038, -15.603, 0.46", "-37.3207, 42.3833, -16.2927, 0.91", "-36.2681, 42.9802, -16.7428, 0.23", "-35.206, 43.5859, -17.1511, 0.23", "-34.2352, 44.1971, -17.5528, 1.14", "-33.3219, 44.913, -18.0473, 0.23", "-32.4862, 45.8085, -18.6479, 0.23", "-32.0339, 46.45, -19.1062, 0.23", "-31.5365, 47.3577, -19.8097, 0.46", "-31.1157, 48.2196, -20.5406, 0.46", "-30.7905, 48.8447, -21.1684, 0.46", "-30.5179, 49.3156, -21.6408, 0.46", "-29.9862, 50.0738, -22.441, 0.46", "-29.4902, 50.6018, -23.0174, 0.46", "-28.936, 51.0319, -23.5364, 1.14", "-28.1726, 51.4766, -24.1476, 0.46", "-26.5025, 52.1782, -25.4005, 0.23", "-25.4305, 52.5113, -26.2061, 0.23", "-25.0633, 52.5951, -26.4715, 0.46", "-23.9289, 52.7769, -27.2403, 0.68", "-22.7666, 52.8353, -27.9754, 0.23", "-21.6507, 52.7661, -28.6011, 0.23", "-20.8193, 52.6282, -29.0618, 0.23", "-20.0644, 52.4732, -29.5332, 0.68", "-19.1941, 52.2574, -30.1547, 0.46", "-17.9353, 51.866, -31.1, 0.46", "-16.498, 51.3269, -32.2086, 0.46", "-15.2574, 50.7397, -33.2086, 1.14", "-14.0966, 50.021, -34.3117, 0.23", "-13.0523, 49.2616, -35.481, 0.23", "-12.5259, 48.8548, -36.1801, 0.23", "-12.295, 48.6985, -36.5222, 0.23", "-11.9195, 48.4539, -37.1198, 0.68", "-10.8176, 47.8786, -38.9387, 0.46", "-9.7913, 47.5345, -40.5387, 0.91", "-9.02713, 47.4265, -41.8315, 0.68", "-8.43259, 47.4759, -42.9626, 0.68", "-7.92884, 47.6138, -44.0869, 0.68", "-7.50801, 47.7979, -45.2338, 0.68", "-7.14299, 48.0573, -46.6583, 0.68", "-6.98829, 48.334, -48.1913, 0.68", "-6.9509, 48.5635, -49.5008, 0.68", "-6.95394, 48.7579, -51.0837, 0.68", "-7.00871, 48.8967, -53.0754, 0.68", "-7.02547, 48.8636, -54.7799, 0.68", "-7.00981, 48.7858, -55.6348, 0.68", "-6.92649, 48.5633, -56.7415, 0.68", "-6.72769, 48.144, -58.0002, 0.68", "-6.59572, 47.8537, -58.5627, 0.68", "-6.42812, 46.9304, -59.4176, 0.68", "-6.42259, 46.3032, -59.7599, 0.91", "-6.44979, 45.4313, -60.1957, 0.91", "-6.48009, 44.3888, -60.6834, 0.46", "-6.48327, 43.8967, -60.9487, 0.46", "-6.49417, 42.6809, -61.8799, 0.68", "-6.5732, 41.6938, -63.0071, 0.23", "-6.69717, 40.9567, -64.2115, 0.23", "-6.77529, 40.4849, -65.2255, 0.91", "-6.84348, 39.839, -67.0374, 0.68", "-6.9004, 39.3264, -68.9479, 0.68", "-6.97646, 39.052, -70.5521, 0.68", "-7.1427, 38.9081, -72.2813, 0.68", "-7.4768, 38.9377, -74.1069, 0.68", "-7.76637, 39.1379, -75.2251, 0.68", "-8.09559, 39.7006, -76.3208, 0.68", "-8.33806, 40.5886, -77.4355, 0.46", "-8.45422, 41.6688, -78.557, 0.46", "-8.55928, 42.7819, -79.542, 0.46", "-8.69812, 44.1106, -80.6239, 0.46", "-8.81596, 45.4297, -81.7687, 0.46", "-8.76448, 46.9525, -83.1654, 0.46", "-8.60898, 47.8332, -84.1257, 0.46" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-22.7693, 12.5894, 9.60353, 0.68", "-23.9632, 13.6531, 8.9783, 0.68", "-25.066, 14.6356, 8.40077, 0.68", "-25.5303, 15.0493, 8.15763, 0.68", "-26.1664, 15.616, 7.82452, 0.68" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-22.7693, 12.5894, 9.60353, 0.68", "-22.4766, 12.7085, 9.99746, 0.68", "-21.4815, 13.1136, 11.337, 0.68", "-20.7258, 13.4213, 12.3543, 0.91" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-15.9177, -17.8764, -4.50366, 0.68", "-15.0286, -19.2567, -3.15752, 0.68", "-14.3688, -20.281, -2.1587, 0.68", "-13.7766, -21.2002, -1.26223, 0.68", "-13.014, -22.3841, -0.10766, 0.68", "-12.4242, -23.2998, 0.78533, 0.68" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-15.9177, -17.8764, -4.50366, 0.46", "-16.6932, -18.4572, -4.67414, 0.46", "-17.3386, -19.094, -4.89375, 0.46", "-17.8707, -19.7692, -5.19791, 0.46", "-18.3333, -20.4433, -5.62024, 0.46", "-18.8986, -21.3985, -6.16728, 1.14", "-19.4135, -22.2686, -6.66558, 1.37", "-19.9002, -23.3613, -7.31037, 0.91", "-20.3072, -24.5835, -8.03738, 0.91", "-20.541, -25.628, -8.73122, 0.91", "-20.7014, -26.9912, -9.7566, 1.37" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-11.1687, -14.8728, -11.5793, 0.46", "-10.8333, -12.9948, -11.9841, 0.46", "-10.7204, -10.9974, -12.3296, 0.46", "-10.6844, -9.98165, -12.4699, 0.46", "-10.6656, -9.02254, -12.5803, 0.46", "-10.6848, -7.86284, -12.6448, 0.46", "-10.7154, -7.08954, -12.6635, 0.46", "-10.928, -5.40702, -12.5925, 0.46", "-11.1982, -3.84657, -12.4612, 0.23", "-11.4254, -2.9527, -12.3827, 0.46", "-11.9909, -1.22628, -12.163, 0.46", "-12.1938, -0.724087, -12.0738, 0.91", "-12.6449, 0.281783, -11.8644, 1.59", "-13.0122, 0.950405, -11.7238, 0.68", "-14.9176, 4.18006, -11.0307, 0.23", "-15.9076, 5.88947, -10.6936, 0.23", "-16.4428, 6.81639, -10.5339, 0.23", "-17.0192, 7.76614, -10.3932, 1.37", "-18.5852, 10.1317, -10.1038, 0.23", "-19.8818, 12.0924, -9.89056, 0.23", "-20.6887, 13.3389, -9.79937, 0.46", "-21.446, 14.5227, -9.79573, 0.23", "-22.4525, 16.0543, -9.85923, 0.23", "-23.3161, 17.2521, -9.92636, 1.59" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-11.1687, -14.8728, -11.5793, 0.46", "-10.1066, -14.7522, -13.0581, 0.46", "-9.04176, -14.7333, -14.4709, 0.46", "-8.42494, -14.7603, -15.2203, 0.46", "-6.81809, -14.9071, -17.1144, 0.68", "-5.70372, -15.0831, -18.3192, 1.59", "-4.69859, -15.2801, -19.3177, 1.59", "-3.66226, -15.5699, -20.3269, 0.46", "-2.40742, -15.9612, -21.4071, 0.46", "-1.79841, -16.13, -21.8532, 0.46", "-0.412306, -16.4403, -22.6261, 1.37", "1.06311, -16.688, -23.3693, 0.68", "2.26372, -16.8497, -23.9851, 0.68", "3.53248, -16.9354, -24.7223, 0.68", "4.25369, -16.9398, -25.1827, 1.59", "5.9304, -16.861, -26.3418, 0.23", "7.09388, -16.6991, -27.245, 0.68", "8.56079, -16.4644, -28.438, 0.68", "9.66827, -16.2759, -29.3857, 0.68", "10.481, -16.1693, -30.1319, 0.68", "11.2519, -16.0568, -30.8863, 1.59", "12.9737, -15.5834, -32.6912, 0.68" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-25.3755, -15.5584, -4.27627, 0.23", "-24.5155, -17.6158, -3.68481, 0.23", "-23.9978, -18.8543, -3.32875, 0.23", "-23.5082, -20.0255, -2.99203, 0.68" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-25.3755, -15.5584, -4.27627, 0.68", "-26.8255, -15.7579, -5.67627, 0.68" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "28.2696, -7.2335, 3.21042, 0.46", "29.1063, -6.31044, 2.61672, 0.46", "29.4798, -5.52947, 2.20052, 0.46", "29.8912, -4.62586, 1.71351, 0.46", "30.3745, -3.7355, 1.19772, 0.46", "31.0235, -2.94725, 0.766088, 0.68", "31.6726, -2.32884, 0.529293, 0.46", "32.8539, -1.19284, 0.355575, 0.46", "33.359, -0.719869, 0.301273, 0.46", "34.2617, 7.78824E-4, 0.138941, 0.46", "36.076, 1.16738, -0.21593, 0.68", "37.2479, 1.91517, -0.465012, 0.46", "38.442, 2.97241, -0.728873, 0.46", "39.2563, 3.74404, -0.90938, 0.68", "40.3269, 4.91969, -1.20038, 1.82", "41.3933, 6.30294, -1.57909, 0.46", "42.2169, 7.55105, -2.0034, 0.23", "44.1111, 10.4647, -3.08165, 0.23" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "28.2696, -7.2335, 3.21042, 0.46", "30.1788, -7.45898, 2.77463, 0.46", "31.3033, -7.2873, 2.46938, 0.23", "32.3897, -6.95442, 2.15955, 0.23", "33.9839, -6.29054, 1.71562, 0.23", "35.4026, -5.71066, 1.35692, 0.23", "36.4493, -5.30203, 1.0999, 0.23", "38.3046, -4.28337, 0.596968, 0.23", "38.7279, -3.92152, 0.447945, 0.46", "38.1468, -4.92244, 0.827191, 0.46", "37.6551, -6.17262, 1.28331, 0.46", "37.3348, -7.24173, 1.70108, 0.68", "36.7957, -9.30649, 2.53944, 0.68", "36.2945, -11.2777, 3.34385, 0.68", "35.9033, -12.655, 3.89171, 0.68" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-20.7258, 13.4213, 12.3543, 0.68", "-21.6696, 14.061, 12.774, 0.68", "-22.2357, 14.4695, 13.0586, 0.68", "-22.8915, 14.9969, 13.4288, 0.68", "-23.7172, 15.8689, 14.0527, 0.68", "-24.1284, 16.504, 14.4687, 0.68", "-24.5466, 17.262, 14.9179, 0.68", "-24.5625, 17.3056, 14.9408, 0.68", "-24.708, 18.3327, 15.4201, 0.91", "-24.5379, 19.4124, 15.7918, 0.91", "-24.2158, 20.3244, 16.0365, 0.68", "-23.7724, 21.1806, 16.2325, 0.68", "-23.3174, 21.865, 16.3878, 0.68", "-22.6535, 22.829, 16.6028, 0.91", "-21.4371, 24.4796, 16.9509, 0.68", "-20.7399, 25.1972, 17.0877, 0.68", "-19.9568, 25.8167, 17.2222, 0.68", "-19.3192, 26.227, 17.3173, 0.68" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-20.7258, 13.4213, 12.3543, 0.68", "-19.3133, 14.2248, 12.241, 0.68", "-17.8217, 15.182, 12.2516, 0.68", "-16.7042, 15.9373, 12.3695, 0.68", "-15.9527, 16.4676, 12.4923, 0.68", "-14.5325, 17.5641, 12.7755, 0.68", "-13.9506, 18.015, 12.9328, 0.68", "-12.643, 19.1244, 13.4128, 0.68", "-11.9387, 19.7171, 13.7648, 0.68", "-11.5289, 20.0562, 14.0198, 1.14", "-10.7356, 20.8194, 14.6145, 0.68", "-10.0422, 21.7902, 15.3728, 0.68" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-20.7014, -26.9912, -9.7566, 0.68", "-21.8243, -27.6073, -10.6748, 0.68", "-22.68, -28.0768, -11.3746, 0.68", "-23.1241, -28.3205, -11.7378, 0.68", "-24.3964, -29.0185, -12.7782, 0.46", "-25.6046, -29.6815, -13.7662, 0.46" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-20.7014, -26.9912, -9.7566, 1.14", "-19.9312, -28.2468, -9.42895, 1.14", "-19.2854, -29.2213, -9.11403, 0.46", "-18.6814, -30.0013, -8.81783, 0.46", "-18.1843, -30.523, -8.56047, 0.91", "-17.6447, -30.9169, -8.23705, 0.91", "-16.7353, -31.3729, -7.64009, 0.23", "-15.8586, -31.4491, -7.06029, 0.23", "-15.1807, -31.3543, -6.51798, 1.14", "-14.1622, -31.1768, -5.61587, 0.68", "-13.1967, -31.082, -4.66375, 0.68", "-12.7477, -31.1091, -4.11732, 0.68", "-12.3794, -31.1706, -3.48264, 1.59", "-11.881, -31.347, -2.43944, 1.59", "-11.3182, -31.7329, -1.08128, 1.37", "-10.9101, -32.1714, -0.018682, 1.37", "-10.4006, -32.9732, 1.56469, 0.91", "-9.9899, -33.8906, 3.18976, 0.91", "-9.74593, -34.6209, 4.18901, 0.91", "-9.40843, -35.5161, 5.09683, 0.91", "-9.13929, -36.1399, 5.46397, 0.46", "-8.76538, -36.9023, 5.7199, 0.46", "-8.36779, -37.5449, 5.84893, 0.46", "-7.5639, -38.6829, 6.05408, 0.68", "-6.95323, -39.4631, 6.2436, 0.23", "-6.35565, -40.1325, 6.435, 0.23", "-5.52583, -40.9321, 6.74498, 0.23", "-4.35269, -41.9789, 7.25439, 0.23", "-3.18632, -43.0329, 7.82683, 0.46", "-2.23162, -43.9498, 8.42223, 0.23", "-1.25889, -44.9174, 9.06904, 0.46", "-0.147129, -45.9692, 9.82895, 0.68", "0.656703, -46.7363, 10.4025, 0.68", "1.01358, -47.1454, 10.7358, 0.91", "1.81678, -48.06, 11.6494, 0.91" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-26.8255, -15.7579, -5.67627, 0.68", "-26.8849, -17.2017, -6.82097, 0.68", "-26.9799, -17.7309, -7.29449, 0.68", "-27.1735, -18.4246, -7.98912, 1.37", "-27.5735, -19.4565, -9.0069, 1.37", "-27.9875, -20.346, -9.87539, 1.37", "-28.2365, -20.8581, -10.3566, 1.37", "-28.6342, -21.643, -11.1065, 0.91", "-28.8768, -22.1682, -11.5509, 0.91", "-29.2386, -23.0866, -12.209, 1.14", "-29.5697, -24.1221, -12.7957, 0.91", "-29.9021, -25.6136, -13.5198, 1.14", "-30.0635, -27.0774, -14.1441, 0.68", "-30.0827, -27.7943, -14.4087, 0.68", "-30.0822, -28.8887, -14.7667, 1.37", "-30.0191, -30.1635, -15.1422, 0.68", "-29.9942, -30.9186, -15.3213, 0.46", "-29.9993, -32.0153, -15.5629, 0.46", "-30.0261, -32.8243, -15.7685, 1.14", "-30.0597, -33.9959, -16.0943, 0.23", "-30.0763, -34.9672, -16.3569, 0.23", "-30.0882, -36.1331, -16.6866, 0.23", "-30.1154, -37.2916, -17.0444, 0.23", "-30.129, -38.6406, -17.4872, 1.37", "-30.1245, -40.6278, -18.1418, 0.23", "-30.0863, -42.0431, -18.6091, 0.23", "-30.0546, -43.2489, -19.0, 1.59", "-29.9746, -45.457, -19.6846, 0.23", "-29.9772, -45.69, -19.7515, 0.46", "-30.0757, -47.035, -20.1545, 0.23", "-30.131, -47.4862, -20.3083, 0.46", "-30.4349, -49.172, -20.9259, 0.23", "-30.5015, -49.449, -21.0306, 0.46", "-30.8486, -50.5402, -21.4807, 0.23", "-31.2052, -51.4781, -21.8913, 0.68", "-31.8636, -52.8356, -22.5497, 0.68", "-32.5494, -53.8461, -23.0952, 0.23", "-33.0278, -54.3554, -23.411, 0.46", "-33.882, -55.0367, -23.9193, 0.23", "-34.1157, -55.1734, -24.0499, 0.23", "-35.2293, -55.6501, -24.6587, 0.46", "-37.0688, -56.1143, -25.7008, 0.23", "-37.9048, -56.2154, -26.1894, 0.68", "-39.2704, -56.2551, -27.0239, 0.46", "-39.917, -56.2262, -27.4356, 1.37", "-41.0151, -56.1499, -28.235, 0.68", "-41.9952, -56.0298, -29.1337, 0.68", "-42.6418, -55.9417, -29.8327, 0.46", "-43.6718, -55.8133, -30.917, 0.46", "-43.87, -55.7865, -31.1271, 0.68", "-45.0216, -55.6314, -32.3173, 0.68", "-45.903, -55.5275, -33.2237, 0.23", "-47.6461, -55.5554, -35.1032, 0.23", "-48.6159, -55.6057, -36.2313, 0.23" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-26.8255, -15.7579, -5.67627, 0.46", "-27.2968, -15.6679, -5.51821, 0.46", "-28.7305, -15.394, -5.03744, 0.91", "-29.0609, -15.331, -4.92667, 1.37" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-29.0609, -15.331, -4.92667, 0.91", "-29.9955, -13.7711, -4.94929, 0.91", "-30.8416, -12.2347, -4.96068, 0.68", "-31.2561, -11.4133, -4.90733, 0.46", "-31.7186, -10.5077, -4.77984, 0.46", "-31.9433, -10.1017, -4.70892, 0.68", "-32.4054, -9.31408, -4.55986, 1.82", "-32.995, -8.26523, -4.33308, 0.46", "-33.7244, -6.91211, -3.98653, 0.46", "-34.3791, -5.74536, -3.70007, 0.46", "-34.9618, -4.71055, -3.44309, 0.91", "-35.3346, -4.13311, -3.30311, 0.46", "-35.6581, -3.68699, -3.20253, 0.46", "-36.4174, -2.81249, -2.99634, 0.46", "-37.0653, -2.12922, -2.82059, 0.46", "-37.9893, -1.21242, -2.56596, 1.37", "-39.4914, 0.150636, -2.20662, 0.46", "-40.0583, 0.618535, -2.09236, 0.46", "-41.6318, 1.82688, -1.76481, 0.46", "-42.8402, 2.74059, -1.51369, 0.46", "-44.2884, 3.8977, -1.16257, 0.46", "-45.5362, 4.95256, -0.792065, 1.82", "-46.4096, 5.7283, -0.5095, 0.91", "-47.5431, 6.74313, -0.137363, 0.68", "-48.4584, 7.6137, 0.164593, 0.91", "-50.1439, 9.18983, 0.769649, 0.23", "-50.9484, 10.0316, 1.20774, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-29.0609, -15.331, -4.92667, 0.46", "-29.4609, -16.8154, -4.06315, 0.46", "-29.5559, -17.1382, -3.87614, 0.46", "-29.9642, -18.3948, -3.20057, 0.46", "-30.4089, -19.6287, -2.58529, 0.46", "-30.7829, -20.5771, -2.18185, 0.46", "-31.1661, -21.4496, -1.86499, 0.46", "-31.4206, -22.0322, -1.72422, 0.68", "-31.7742, -22.8868, -1.64784, 1.82", "-31.9974, -23.4483, -1.66767, 1.82", "-32.5993, -24.8835, -1.83357, 0.23", "-33.0333, -25.9917, -1.99685, 0.23", "-33.6443, -27.9022, -2.20636, 0.46", "-33.9958, -29.2448, -2.28133, 0.46", "-34.0623, -29.5529, -2.28476, 0.46", "-34.3118, -30.8192, -2.22395, 0.23", "-34.5444, -32.124, -2.08946, 0.46", "-35.0267, -34.4915, -1.69088, 0.46", "-35.27, -35.3337, -1.49665, 0.46", "-35.6255, -36.3842, -1.22986, 1.82", "-36.2254, -37.8526, -0.865837, 0.46", "-36.8692, -39.202, -0.574203, 0.46", "-37.6366, -40.6199, -0.338338, 0.46", "-38.4299, -42.0483, -0.223445, 0.23", "-38.8109, -42.7165, -0.175609, 0.23", "-39.5705, -43.9904, -0.0669869, 0.68", "-40.2349, -45.0411, 0.0326754, 0.23", "-40.84, -45.9951, 0.124996, 0.68", "-41.7345, -47.5202, 0.262834, 0.23", "-42.7644, -49.3815, 0.474357, 0.23", "-43.4154, -50.4806, 0.639339, 0.23", "-44.245, -51.7907, 0.924078, 0.68" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-44.245, -51.7907, 0.924078, 0.46", "-46.094, -52.9384, 0.51432, 0.46", "-47.0244, -53.516, 0.308148, 1.59" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-44.245, -51.7907, 0.924078, 0.23", "-45.3865, -51.3071, -0.242885, 0.23", "-46.0207, -51.0385, -0.891295, 0.23", "-47.0493, -50.6028, -1.9428, 0.23", "-47.5614, -50.3858, -2.46632, 0.23", "-48.4882, -49.9932, -3.41383, 0.23", "-49.2648, -49.6643, -4.2077, 1.59" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_16", "dend_9", "dend_0", "dend_28", "dend_17", "dend_15", "dend_10", "dend_6", "dend_1", "dend_32", "dend_29", "dend_27", "dend_18", "dend_14", "dend_11", "dend_8", "dend_7", "dend_5", "dend_2", "dend_36", "dend_33", "dend_31", "dend_30", "dend_26", "dend_19", "dend_13", "dend_12", "dend_4", "dend_3", "dend_35", "dend_34", "dend_25", "dend_20", "dend_24", "dend_21", "dend_23", "dend_22" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_16", "dend_9", "dend_0", "dend_28", "dend_17", "dend_15", "dend_10", "dend_6", "dend_1", "dend_32", "dend_29", "dend_27", "dend_18", "dend_14", "dend_11", "dend_8", "dend_7", "dend_5", "dend_2", "dend_36", "dend_33", "dend_31", "dend_30", "dend_26", "dend_19", "dend_13", "dend_12", "dend_4", "dend_3", "dend_35", "dend_34", "dend_25", "dend_20", "dend_24", "dend_21", "dend_23", "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_28", "dend_28", "dend_28", "dend_28", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_18", "dend_18", "dend_18", "dend_18", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L1_NGCDA_e7cec642c3_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_28, id: dend_28, parent: dend_16
create dend_28
public dend_28
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_9
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_17
create dend_27
public dend_27
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_18
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_25, id: dend_25, parent: dend_19
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_16, dend_9, dend_0, dend_28, dend_17, dend_15, dend_10, dend_6, dend_1, dend_32, dend_29, dend_27, dend_18, dend_14, dend_11, dend_8, dend_7, dend_5, dend_2, dend_36, dend_33, dend_31, dend_30, dend_26, dend_19, dend_13, dend_12, dend_4, dend_3, dend_35, dend_34, dend_25, dend_20, dend_24, dend_21, dend_23, dend_22]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_16, dend_9, dend_0, dend_28, dend_17, dend_15, dend_10, dend_6, dend_1, dend_32, dend_29, dend_27, dend_18, dend_14, dend_11, dend_8, dend_7, dend_5, dend_2, dend_36, dend_33, dend_31, dend_30, dend_26, dend_19, dend_13, dend_12, dend_4, dend_3, dend_35, dend_34, dend_25, dend_20, dend_24, dend_21, dend_23, dend_22]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_40
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_16(0), soma_0(0.450000058842509)
    connect dend_9(0), soma_0(0.450000058842509)
    connect dend_0(0), soma_0(0.450000058842509)
    connect axon_0(0), soma_0(1.0)
    connect dend_28(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_25(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.63214, -6.9024, 0.0, 2.40877 ) }
    soma_0 { pt3dadd( -2.37453, -6.15806, 0.0, 3.98527 ) }
    soma_0 { pt3dadd( -2.11692, -5.41372, 0.0, 5.71963 ) }
    soma_0 { pt3dadd( -1.85931, -4.66938, 0.0, 7.14871 ) }
    soma_0 { pt3dadd( -1.6017, -3.92504, 0.0, 8.48816 ) }
    soma_0 { pt3dadd( -1.34409, -3.18071, 0.0, 9.45022 ) }
    soma_0 { pt3dadd( -1.08649, -2.43637, 0.0, 10.3031 ) }
    soma_0 { pt3dadd( -0.828875, -1.69203, 0.0, 11.0833 ) }
    soma_0 { pt3dadd( -0.571265, -0.94769, 0.0, 11.8333 ) }
    soma_0 { pt3dadd( -0.313656, -0.203352, 0.0, 12.495 ) }
    soma_0 { pt3dadd( -0.0560457, 0.540986, 0.0, 13.0677 ) }
    soma_0 { pt3dadd( 0.201564, 1.28532, 0.0, 13.4325 ) }
    soma_0 { pt3dadd( 0.459174, 2.02966, 0.0, 13.7484 ) }
    soma_0 { pt3dadd( 0.716784, 2.774, 0.0, 13.6296 ) }
    soma_0 { pt3dadd( 0.974394, 3.51834, 0.0, 13.0732 ) }
    soma_0 { pt3dadd( 1.232, 4.26268, 0.0, 12.5169 ) }
    soma_0 { pt3dadd( 1.48961, 5.00702, 0.0, 11.8182 ) }
    soma_0 { pt3dadd( 1.74722, 5.75135, 0.0, 10.2852 ) }
    soma_0 { pt3dadd( 2.00483, 6.49569, 0.0, 8.55166 ) }
    soma_0 { pt3dadd( 2.26244, 7.24003, 0.0, 5.92911 ) }
    soma_0 { pt3dadd( 2.52005, 7.98437, 0.0, 3.37983 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 21/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -1.98039, -7.09918, -0.78, 3.42 ) }
    dend_16 { pt3dadd( -1.98039, -7.09918, -0.78, 3.42 ) }
    dend_16 { pt3dadd( -2.91708, -7.76344, -1.28646, 2.96 ) }
    dend_16 { pt3dadd( -4.6897, -8.76136, -1.7592, 2.28 ) }
    dend_16 { pt3dadd( -6.37314, -9.53028, -1.86385, 1.59 ) }
    dend_16 { pt3dadd( -8.31947, -10.199, -1.63259, 1.37 ) }
    dend_16 { pt3dadd( -9.86737, -10.5923, -1.32898, 1.59 ) }
    dend_16 { pt3dadd( -12.0215, -11.0302, -0.736337, 2.05 ) }
    dend_16 { pt3dadd( -13.5482, -11.2278, -0.140778, 2.28 ) }
    dend_16 { pt3dadd( -14.7691, -11.2858, 0.499952, 2.05 ) }
    dend_16 { pt3dadd( -16.3947, -11.2159, 1.55519, 1.59 ) }
    dend_16 { pt3dadd( -17.684, -11.0339, 2.53355, 1.82 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 33/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 5.4896, 3.76832, 6.55, 2.73 ) }
    dend_9 { pt3dadd( 6.00109, 4.08156, 8.11716, 2.73 ) }
    dend_9 { pt3dadd( 6.56591, 4.42745, 9.84775, 2.73 ) }
    dend_9 { pt3dadd( 7.20571, 4.81927, 11.8081, 2.28 ) }
    dend_9 { pt3dadd( 7.72697, 5.1385, 13.4052, 2.28 ) }
    dend_9 { pt3dadd( 8.09173, 5.36189, 14.5228, 2.28 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 39/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -6.17039, 3.85232, 2.95, 0.68 ) }
    dend_0 { pt3dadd( -7.09248, 3.89288, 3.22046, 0.68 ) }
    dend_0 { pt3dadd( -8.92341, 3.97343, 3.7575, 1.14 ) }
    dend_0 { pt3dadd( -10.477, 4.04177, 4.21316, 0.91 ) }
    dend_0 { pt3dadd( -12.0856, 4.11254, 4.68499, 1.14 ) }
    dend_0 { pt3dadd( -12.9374, 4.15001, 4.93482, 1.82 ) }
    dend_0 { pt3dadd( -13.8743, 4.19123, 5.20963, 2.28 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 46/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.52005, 7.98437, 0.0, 0.941078 ) }
    axon_0 { pt3dadd( 7.42592, 22.1594, 0.0, 0.941078 ) }
    axon_0 { pt3dadd( 12.3318, 36.3345, 0.0, 0.941078 ) }
    // Section: dend_28, id: dend_28, parent: dend_16 (entry count 49/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -17.684, -11.0339, 2.53355, 0.91 ) }
    dend_28 { pt3dadd( -17.5929, -11.647, 1.74866, 0.91 ) }
    dend_28 { pt3dadd( -17.4203, -12.809, 0.261205, 0.91 ) }
    dend_28 { pt3dadd( -17.2524, -13.9387, -1.18496, 1.14 ) }
    dend_28 { pt3dadd( -17.1386, -14.7047, -2.16562, 0.68 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 54/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -17.684, -11.0339, 2.53355, 0.91 ) }
    dend_17 { pt3dadd( -18.8075, -11.5666, 2.02678, 0.91 ) }
    dend_17 { pt3dadd( -19.44, -11.8665, 1.74153, 0.68 ) }
    dend_17 { pt3dadd( -20.3826, -12.3134, 1.31637, 0.68 ) }
    dend_17 { pt3dadd( -21.468, -12.8281, 0.82683, 0.68 ) }
    dend_17 { pt3dadd( -22.3215, -13.2328, 0.441852, 1.59 ) }
    // Section: dend_15, id: dend_15, parent: dend_9 (entry count 60/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 8.09173, 5.36189, 14.5228, 1.82 ) }
    dend_15 { pt3dadd( 7.91199, 4.53784, 15.5849, 1.82 ) }
    dend_15 { pt3dadd( 7.59749, 3.50399, 17.0747, 1.59 ) }
    dend_15 { pt3dadd( 8.44993, 3.66825, 15.6994, 1.82 ) }
    dend_15 { pt3dadd( 9.31766, 3.30553, 14.8613, 1.82 ) }
    dend_15 { pt3dadd( 10.4469, 2.69564, 13.8141, 1.37 ) }
    dend_15 { pt3dadd( 13.2439, 1.18512, 11.2204, 0.91 ) }
    dend_15 { pt3dadd( 14.5806, 0.516565, 9.93264, 0.91 ) }
    dend_15 { pt3dadd( 15.8671, -0.0441232, 8.64173, 0.91 ) }
    dend_15 { pt3dadd( 17.0152, -0.473666, 7.41347, 0.68 ) }
    dend_15 { pt3dadd( 18.293, -0.908774, 5.92534, 0.68 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 71/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 8.09173, 5.36189, 14.5228, 2.05 ) }
    dend_10 { pt3dadd( 9.21988, 4.60182, 13.6946, 2.05 ) }
    dend_10 { pt3dadd( 10.3984, 3.52236, 12.4339, 1.59 ) }
    dend_10 { pt3dadd( 11.2165, 2.65608, 11.4185, 0.91 ) }
    dend_10 { pt3dadd( 12.3415, 1.48564, 10.1205, 0.91 ) }
    dend_10 { pt3dadd( 13.4882, 0.359608, 8.92456, 1.37 ) }
    dend_10 { pt3dadd( 14.4283, -0.470106, 8.04423, 1.59 ) }
    dend_10 { pt3dadd( 15.3258, -1.34996, 7.04451, 1.14 ) }
    dend_10 { pt3dadd( 16.3983, -2.47077, 5.66488, 0.91 ) }
    dend_10 { pt3dadd( 17.1723, -3.30776, 4.66534, 0.91 ) }
    dend_10 { pt3dadd( 17.796, -3.92062, 4.01627, 0.91 ) }
    dend_10 { pt3dadd( 18.6549, -4.61007, 3.42842, 1.37 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 83/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -13.8743, 4.19123, 5.20963, 1.37 ) }
    dend_6 { pt3dadd( -14.8018, 4.11226, 4.08583, 1.37 ) }
    dend_6 { pt3dadd( -15.686, 4.41797, 2.90654, 1.14 ) }
    dend_6 { pt3dadd( -16.6301, 5.03505, 1.58264, 0.91 ) }
    dend_6 { pt3dadd( -17.4087, 5.73533, 0.47175, 1.14 ) }
    dend_6 { pt3dadd( -18.2239, 6.63512, -0.679262, 0.68 ) }
    dend_6 { pt3dadd( -19.2504, 7.89993, -2.03303, 0.68 ) }
    dend_6 { pt3dadd( -20.1426, 9.23648, -3.24546, 0.46 ) }
    dend_6 { pt3dadd( -20.6232, 10.0978, -3.88936, 0.91 ) }
    dend_6 { pt3dadd( -21.0345, 10.9828, -4.4458, 1.37 ) }
    dend_6 { pt3dadd( -21.7932, 12.8604, -5.48949, 1.14 ) }
    dend_6 { pt3dadd( -22.3672, 14.264, -6.17954, 1.59 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 95/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -13.8743, 4.19123, 5.20963, 0.68 ) }
    dend_1 { pt3dadd( -14.9367, 5.26447, 5.51408, 0.68 ) }
    dend_1 { pt3dadd( -16.1354, 6.35171, 5.9121, 0.68 ) }
    dend_1 { pt3dadd( -17.5084, 7.5619, 6.44911, 0.91 ) }
    dend_1 { pt3dadd( -18.5351, 8.50196, 6.93062, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( -19.1943, 9.16741, 7.26396, 0.91 ) }
    dend_1 { pt3dadd( -19.799, 9.77779, 7.56971, 0.68 ) }
    dend_1 { pt3dadd( -20.6908, 10.6806, 7.97885, 0.68 ) }
    dend_1 { pt3dadd( -21.5177, 11.3768, 8.30985, 0.46 ) }
    dend_1 { pt3dadd( -22.1001, 11.8419, 8.6805, 0.46 ) }
    dend_1 { pt3dadd( -22.7693, 12.5894, 9.60353, 0.91 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 6/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 12.3318, 36.3345, 0.0, 0.23 ) }
    axon_1 { pt3dadd( 17.2377, 50.5096, 0.0, 0.23 ) }
    axon_1 { pt3dadd( 22.1435, 64.6846, 0.0, 0.23 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 9/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -17.1386, -14.7047, -2.16562, 1.37 ) }
    dend_32 { pt3dadd( -16.7788, -15.6393, -2.85461, 1.37 ) }
    dend_32 { pt3dadd( -16.4551, -16.4803, -3.47452, 1.82 ) }
    dend_32 { pt3dadd( -15.9177, -17.8764, -4.50366, 0.91 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 13/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -17.1386, -14.7047, -2.16562, 0.91 ) }
    dend_29 { pt3dadd( -14.9879, -14.7652, -5.5569, 0.91 ) }
    dend_29 { pt3dadd( -14.0194, -14.7925, -7.08421, 0.68 ) }
    dend_29 { pt3dadd( -13.0011, -14.8212, -8.68988, 0.68 ) }
    dend_29 { pt3dadd( -12.5366, -14.8343, -9.42237, 1.37 ) }
    dend_29 { pt3dadd( -11.8018, -14.855, -10.581, 2.05 ) }
    dend_29 { pt3dadd( -11.1687, -14.8728, -11.5793, 1.14 ) }
    // Section: dend_27, id: dend_27, parent: dend_17 (entry count 20/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -22.3215, -13.2328, 0.441852, 1.59 ) }
    dend_27 { pt3dadd( -23.7413, -12.9901, 1.90701, 1.59 ) }
    dend_27 { pt3dadd( -25.1217, -12.4413, 3.26302, 1.59 ) }
    dend_27 { pt3dadd( -26.0642, -11.953, 4.27098, 0.91 ) }
    dend_27 { pt3dadd( -26.9482, -11.4333, 5.34998, 0.91 ) }
    dend_27 { pt3dadd( -27.9898, -10.7654, 6.7674, 0.91 ) }
    dend_27 { pt3dadd( -28.911, -10.1249, 8.23375, 1.37 ) }
    dend_27 { pt3dadd( -29.6455, -9.31192, 9.77683, 0.68 ) }
    dend_27 { pt3dadd( -30.0085, -8.64202, 10.8519, 0.68 ) }
    dend_27 { pt3dadd( -30.0278, -7.86666, 12.2553, 0.23 ) }
    dend_27 { pt3dadd( -29.7015, -7.71249, 12.8935, 0.68 ) }
    dend_27 { pt3dadd( -28.4235, -7.87129, 14.3053, 0.23 ) }
    dend_27 { pt3dadd( -27.5172, -8.13469, 15.1318, 0.68 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 33/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -22.3215, -13.2328, 0.441852, 0.91 ) }
    dend_18 { pt3dadd( -23.2448, -13.9359, -0.984538, 0.91 ) }
    dend_18 { pt3dadd( -24.3485, -14.7764, -2.68977, 0.91 ) }
    dend_18 { pt3dadd( -25.0039, -15.2754, -3.70218, 0.91 ) }
    dend_18 { pt3dadd( -25.3755, -15.5584, -4.27627, 0.91 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 38/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 18.6549, -4.61007, 3.42842, 0.68 ) }
    dend_14 { pt3dadd( 18.3245, -3.46466, 3.94403, 0.68 ) }
    dend_14 { pt3dadd( 17.9282, -2.18892, 4.50057, 0.68 ) }
    dend_14 { pt3dadd( 17.5796, -0.980439, 5.05288, 0.68 ) }
    dend_14 { pt3dadd( 17.1948, 0.35569, 5.74653, 0.91 ) }
    dend_14 { pt3dadd( 16.6021, 2.01892, 6.7466, 0.68 ) }
    dend_14 { pt3dadd( 16.2316, 2.85553, 7.327, 0.68 ) }
    dend_14 { pt3dadd( 15.6715, 3.91963, 8.16135, 0.68 ) }
    dend_14 { pt3dadd( 15.0792, 4.84369, 8.97308, 0.68 ) }
    dend_14 { pt3dadd( 14.4563, 5.6742, 9.84497, 0.68 ) }
    dend_14 { pt3dadd( 13.5615, 6.71, 11.2239, 0.23 ) }
    dend_14 { pt3dadd( 13.0089, 7.24825, 12.1479, 0.23 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 50/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 18.6549, -4.61007, 3.42842, 0.46 ) }
    dend_11 { pt3dadd( 19.8193, -5.11539, 3.64137, 0.46 ) }
    dend_11 { pt3dadd( 21.4715, -5.57128, 3.59681, 0.46 ) }
    dend_11 { pt3dadd( 22.7613, -5.92719, 3.56203, 0.68 ) }
    dend_11 { pt3dadd( 23.909, -6.24387, 3.53108, 0.68 ) }
    dend_11 { pt3dadd( 25.5303, -6.69125, 3.48735, 0.68 ) }
    dend_11 { pt3dadd( 26.9633, -7.08667, 3.44871, 0.91 ) }
    dend_11 { pt3dadd( 28.2696, -7.2335, 3.21042, 0.91 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -22.3672, 14.264, -6.17954, 0.68 ) }
    dend_8 { pt3dadd( -23.6794, 15.2355, -6.53395, 0.68 ) }
    dend_8 { pt3dadd( -25.0015, 16.0233, -6.92634, 0.68 ) }
    dend_8 { pt3dadd( -26.3154, 16.6666, -7.3338, 0.68 ) }
    dend_8 { pt3dadd( -27.857, 17.224, -7.81737, 1.14 ) }
    dend_8 { pt3dadd( -28.969, 17.4055, -8.14962, 0.68 ) }
    dend_8 { pt3dadd( -30.4986, 17.2839, -8.56588, 0.68 ) }
    dend_8 { pt3dadd( -31.2885, 16.8451, -8.7551, 0.91 ) }
    dend_8 { pt3dadd( -31.9556, 16.2339, -8.88308, 2.05 ) }
    dend_8 { pt3dadd( -32.8297, 15.3177, -9.01726, 0.46 ) }
    dend_8 { pt3dadd( -33.9581, 13.9476, -9.21666, 0.68 ) }
    dend_8 { pt3dadd( -35.021, 12.5291, -9.41231, 0.46 ) }
    dend_8 { pt3dadd( -36.0508, 11.0521, -9.58701, 0.68 ) }
    dend_8 { pt3dadd( -36.6565, 10.1026, -9.70511, 0.46 ) }
    dend_8 { pt3dadd( -37.4458, 8.72307, -9.93088, 0.46 ) }
    dend_8 { pt3dadd( -37.9162, 7.63013, -10.1514, 0.46 ) }
    dend_8 { pt3dadd( -38.0302, 7.09398, -10.2781, 0.46 ) }
    dend_8 { pt3dadd( -38.0757, 5.98649, -10.606, 0.91 ) }
    dend_8 { pt3dadd( -37.9364, 4.63025, -11.1148, 0.23 ) }
    dend_8 { pt3dadd( -37.7921, 3.7326, -11.5243, 0.68 ) }
    dend_8 { pt3dadd( -37.6337, 2.92844, -11.9586, 1.14 ) }
    dend_8 { pt3dadd( -37.4096, 1.66495, -12.8331, 0.68 ) }
    dend_8 { pt3dadd( -37.3217, 0.827955, -13.507, 0.68 ) }
    dend_8 { pt3dadd( -37.3281, -0.66414, -14.8264, 0.91 ) }
    dend_8 { pt3dadd( -37.4395, -1.48174, -15.5375, 0.68 ) }
    dend_8 { pt3dadd( -37.6536, -2.29822, -16.1852, 0.68 ) }
    dend_8 { pt3dadd( -37.9853, -3.22059, -16.8474, 0.68 ) }
    dend_8 { pt3dadd( -38.5814, -4.61871, -17.7261, 0.68 ) }
    dend_8 { pt3dadd( -39.0288, -5.58999, -18.2487, 1.59 ) }
    dend_8 { pt3dadd( -39.5502, -6.75087, -18.7889, 0.68 ) }
    dend_8 { pt3dadd( -40.0451, -8.1066, -19.3804, 0.68 ) }
    dend_8 { pt3dadd( -40.3908, -9.29665, -19.9131, 1.59 ) }
    dend_8 { pt3dadd( -40.595, -10.1745, -20.3553, 0.91 ) }
    dend_8 { pt3dadd( -40.8151, -11.397, -21.0721, 0.68 ) }
    dend_8 { pt3dadd( -40.9108, -12.2674, -21.6464, 1.14 ) }
    dend_8 { pt3dadd( -40.9669, -13.3198, -22.4028, 0.46 ) }
    dend_8 { pt3dadd( -40.9263, -14.6207, -23.3393, 0.46 ) }
    dend_8 { pt3dadd( -40.8626, -15.3463, -23.8264, 0.46 ) }
    dend_8 { pt3dadd( -40.7547, -16.2173, -24.3385, 1.59 ) }
    dend_8 { pt3dadd( -40.5761, -17.441, -24.9804, 0.91 ) }
    dend_8 { pt3dadd( -40.4711, -18.4463, -25.4625, 0.91 ) }
    dend_8 { pt3dadd( -40.3699, -19.3236, -25.8149, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_8 { pt3dadd( -40.1623, -20.5589, -26.2766, 0.46 ) }
    dend_8 { pt3dadd( -40.0108, -21.2723, -26.5256, 0.91 ) }
    dend_8 { pt3dadd( -39.6133, -22.8633, -27.0316, 0.23 ) }
    dend_8 { pt3dadd( -39.376, -23.8066, -27.3025, 0.23 ) }
    dend_8 { pt3dadd( -38.9855, -25.3984, -27.7542, 0.23 ) }
    dend_8 { pt3dadd( -38.7805, -26.313, -28.0317, 0.23 ) }
    dend_8 { pt3dadd( -38.5119, -27.4581, -28.3996, 1.37 ) }
    dend_8 { pt3dadd( -37.8959, -29.7539, -29.1029, 0.23 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 8/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -22.3672, 14.264, -6.17954, 0.68 ) }
    dend_7 { pt3dadd( -22.964, 15.8183, -6.41059, 0.68 ) }
    dend_7 { pt3dadd( -23.6532, 17.3107, -6.62316, 0.68 ) }
    dend_7 { pt3dadd( -24.2016, 18.3946, -6.75734, 0.68 ) }
    dend_7 { pt3dadd( -24.85, 19.7159, -6.89524, 0.68 ) }
    dend_7 { pt3dadd( -25.3153, 20.8433, -6.99505, 0.68 ) }
    dend_7 { pt3dadd( -25.568, 21.501, -7.06382, 0.46 ) }
    dend_7 { pt3dadd( -25.7646, 21.9348, -7.10789, 0.68 ) }
    dend_7 { pt3dadd( -26.4574, 23.3008, -7.26698, 0.91 ) }
    dend_7 { pt3dadd( -27.0276, 24.4567, -7.43774, 0.46 ) }
    dend_7 { pt3dadd( -27.6195, 25.8445, -7.65771, 0.46 ) }
    dend_7 { pt3dadd( -28.0754, 26.9353, -7.80682, 0.46 ) }
    dend_7 { pt3dadd( -28.5119, 27.823, -7.91024, 0.91 ) }
    dend_7 { pt3dadd( -29.0232, 28.5864, -7.98572, 0.91 ) }
    dend_7 { pt3dadd( -29.9367, 29.6119, -8.06491, 0.23 ) }
    dend_7 { pt3dadd( -30.9873, 30.491, -8.10335, 0.23 ) }
    dend_7 { pt3dadd( -32.0975, 31.2281, -8.12626, 0.23 ) }
    dend_7 { pt3dadd( -33.2155, 31.8759, -8.17463, 0.68 ) }
    dend_7 { pt3dadd( -34.8481, 32.6726, -8.3734, 0.46 ) }
    dend_7 { pt3dadd( -35.2675, 32.8529, -8.45018, 0.91 ) }
    dend_7 { pt3dadd( -36.5764, 33.3721, -8.75187, 2.05 ) }
    dend_7 { pt3dadd( -37.4603, 33.7344, -9.01984, 1.14 ) }
    dend_7 { pt3dadd( -39.2461, 34.5889, -9.79782, 0.46 ) }
    dend_7 { pt3dadd( -40.329, 35.295, -10.4555, 0.46 ) }
    dend_7 { pt3dadd( -41.007, 36.0183, -11.0997, 0.46 ) }
    dend_7 { pt3dadd( -41.3928, 36.7421, -11.6796, 0.46 ) }
    dend_7 { pt3dadd( -41.5262, 37.5655, -12.2853, 0.46 ) }
    dend_7 { pt3dadd( -41.4392, 38.2975, -12.8198, 0.91 ) }
    dend_7 { pt3dadd( -40.9086, 39.4654, -13.7063, 0.91 ) }
    dend_7 { pt3dadd( -40.0819, 40.5049, -14.5611, 0.46 ) }
    dend_7 { pt3dadd( -39.4903, 41.007, -15.0336, 0.46 ) }
    dend_7 { pt3dadd( -38.6431, 41.6038, -15.603, 0.46 ) }
    dend_7 { pt3dadd( -37.3207, 42.3833, -16.2927, 0.91 ) }
    dend_7 { pt3dadd( -36.2681, 42.9802, -16.7428, 0.23 ) }
    dend_7 { pt3dadd( -35.206, 43.5859, -17.1511, 0.23 ) }
    dend_7 { pt3dadd( -34.2352, 44.1971, -17.5528, 1.14 ) }
    dend_7 { pt3dadd( -33.3219, 44.913, -18.0473, 0.23 ) }
    dend_7 { pt3dadd( -32.4862, 45.8085, -18.6479, 0.23 ) }
    dend_7 { pt3dadd( -32.0339, 46.45, -19.1062, 0.23 ) }
    dend_7 { pt3dadd( -31.5365, 47.3577, -19.8097, 0.46 ) }
    dend_7 { pt3dadd( -31.1157, 48.2196, -20.5406, 0.46 ) }
    dend_7 { pt3dadd( -30.7905, 48.8447, -21.1684, 0.46 ) }
    dend_7 { pt3dadd( -30.5179, 49.3156, -21.6408, 0.46 ) }
    dend_7 { pt3dadd( -29.9862, 50.0738, -22.441, 0.46 ) }
    dend_7 { pt3dadd( -29.4902, 50.6018, -23.0174, 0.46 ) }
    dend_7 { pt3dadd( -28.936, 51.0319, -23.5364, 1.14 ) }
    dend_7 { pt3dadd( -28.1726, 51.4766, -24.1476, 0.46 ) }
    dend_7 { pt3dadd( -26.5025, 52.1782, -25.4005, 0.23 ) }
    dend_7 { pt3dadd( -25.4305, 52.5113, -26.2061, 0.23 ) }
    dend_7 { pt3dadd( -25.0633, 52.5951, -26.4715, 0.46 ) }
    dend_7 { pt3dadd( -23.9289, 52.7769, -27.2403, 0.68 ) }
    dend_7 { pt3dadd( -22.7666, 52.8353, -27.9754, 0.23 ) }
    dend_7 { pt3dadd( -21.6507, 52.7661, -28.6011, 0.23 ) }
    dend_7 { pt3dadd( -20.8193, 52.6282, -29.0618, 0.23 ) }
    dend_7 { pt3dadd( -20.0644, 52.4732, -29.5332, 0.68 ) }
    dend_7 { pt3dadd( -19.1941, 52.2574, -30.1547, 0.46 ) }
    dend_7 { pt3dadd( -17.9353, 51.866, -31.1, 0.46 ) }
    dend_7 { pt3dadd( -16.498, 51.3269, -32.2086, 0.46 ) }
    dend_7 { pt3dadd( -15.2574, 50.7397, -33.2086, 1.14 ) }
    dend_7 { pt3dadd( -14.0966, 50.021, -34.3117, 0.23 ) }
    dend_7 { pt3dadd( -13.0523, 49.2616, -35.481, 0.23 ) }
    dend_7 { pt3dadd( -12.5259, 48.8548, -36.1801, 0.23 ) }
    dend_7 { pt3dadd( -12.295, 48.6985, -36.5222, 0.23 ) }
    dend_7 { pt3dadd( -11.9195, 48.4539, -37.1198, 0.68 ) }
    dend_7 { pt3dadd( -10.8176, 47.8786, -38.9387, 0.46 ) }
    dend_7 { pt3dadd( -9.7913, 47.5345, -40.5387, 0.91 ) }
    dend_7 { pt3dadd( -9.02713, 47.4265, -41.8315, 0.68 ) }
    dend_7 { pt3dadd( -8.43259, 47.4759, -42.9626, 0.68 ) }
    dend_7 { pt3dadd( -7.92884, 47.6138, -44.0869, 0.68 ) }
    dend_7 { pt3dadd( -7.50801, 47.7979, -45.2338, 0.68 ) }
    dend_7 { pt3dadd( -7.14299, 48.0573, -46.6583, 0.68 ) }
    dend_7 { pt3dadd( -6.98829, 48.334, -48.1913, 0.68 ) }
    dend_7 { pt3dadd( -6.9509, 48.5635, -49.5008, 0.68 ) }
    dend_7 { pt3dadd( -6.95394, 48.7579, -51.0837, 0.68 ) }
    dend_7 { pt3dadd( -7.00871, 48.8967, -53.0754, 0.68 ) }
    dend_7 { pt3dadd( -7.02547, 48.8636, -54.7799, 0.68 ) }
    dend_7 { pt3dadd( -7.00981, 48.7858, -55.6348, 0.68 ) }
    dend_7 { pt3dadd( -6.92649, 48.5633, -56.7415, 0.68 ) }
    dend_7 { pt3dadd( -6.72769, 48.144, -58.0002, 0.68 ) }
    dend_7 { pt3dadd( -6.59572, 47.8537, -58.5627, 0.68 ) }
    dend_7 { pt3dadd( -6.42812, 46.9304, -59.4176, 0.68 ) }
    dend_7 { pt3dadd( -6.42259, 46.3032, -59.7599, 0.91 ) }
    dend_7 { pt3dadd( -6.44979, 45.4313, -60.1957, 0.91 ) }
    dend_7 { pt3dadd( -6.48009, 44.3888, -60.6834, 0.46 ) }
    dend_7 { pt3dadd( -6.48327, 43.8967, -60.9487, 0.46 ) }
    dend_7 { pt3dadd( -6.49417, 42.6809, -61.8799, 0.68 ) }
    dend_7 { pt3dadd( -6.5732, 41.6938, -63.0071, 0.23 ) }
    dend_7 { pt3dadd( -6.69717, 40.9567, -64.2115, 0.23 ) }
    dend_7 { pt3dadd( -6.77529, 40.4849, -65.2255, 0.91 ) }
    dend_7 { pt3dadd( -6.84348, 39.839, -67.0374, 0.68 ) }
    dend_7 { pt3dadd( -6.9004, 39.3264, -68.9479, 0.68 ) }
    dend_7 { pt3dadd( -6.97646, 39.052, -70.5521, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_7 { pt3dadd( -7.1427, 38.9081, -72.2813, 0.68 ) }
    dend_7 { pt3dadd( -7.4768, 38.9377, -74.1069, 0.68 ) }
    dend_7 { pt3dadd( -7.76637, 39.1379, -75.2251, 0.68 ) }
    dend_7 { pt3dadd( -8.09559, 39.7006, -76.3208, 0.68 ) }
    dend_7 { pt3dadd( -8.33806, 40.5886, -77.4355, 0.46 ) }
    dend_7 { pt3dadd( -8.45422, 41.6688, -78.557, 0.46 ) }
    dend_7 { pt3dadd( -8.55928, 42.7819, -79.542, 0.46 ) }
    dend_7 { pt3dadd( -8.69812, 44.1106, -80.6239, 0.46 ) }
    dend_7 { pt3dadd( -8.81596, 45.4297, -81.7687, 0.46 ) }
    dend_7 { pt3dadd( -8.76448, 46.9525, -83.1654, 0.46 ) }
    dend_7 { pt3dadd( -8.60898, 47.8332, -84.1257, 0.46 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 11/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -22.7693, 12.5894, 9.60353, 0.68 ) }
    dend_5 { pt3dadd( -23.9632, 13.6531, 8.9783, 0.68 ) }
    dend_5 { pt3dadd( -25.066, 14.6356, 8.40077, 0.68 ) }
    dend_5 { pt3dadd( -25.5303, 15.0493, 8.15763, 0.68 ) }
    dend_5 { pt3dadd( -26.1664, 15.616, 7.82452, 0.68 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 16/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -22.7693, 12.5894, 9.60353, 0.68 ) }
    dend_2 { pt3dadd( -22.4766, 12.7085, 9.99746, 0.68 ) }
    dend_2 { pt3dadd( -21.4815, 13.1136, 11.337, 0.68 ) }
    dend_2 { pt3dadd( -20.7258, 13.4213, 12.3543, 0.91 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 20/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -15.9177, -17.8764, -4.50366, 0.68 ) }
    dend_36 { pt3dadd( -15.0286, -19.2567, -3.15752, 0.68 ) }
    dend_36 { pt3dadd( -14.3688, -20.281, -2.1587, 0.68 ) }
    dend_36 { pt3dadd( -13.7766, -21.2002, -1.26223, 0.68 ) }
    dend_36 { pt3dadd( -13.014, -22.3841, -0.10766, 0.68 ) }
    dend_36 { pt3dadd( -12.4242, -23.2998, 0.78533, 0.68 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 26/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -15.9177, -17.8764, -4.50366, 0.46 ) }
    dend_33 { pt3dadd( -16.6932, -18.4572, -4.67414, 0.46 ) }
    dend_33 { pt3dadd( -17.3386, -19.094, -4.89375, 0.46 ) }
    dend_33 { pt3dadd( -17.8707, -19.7692, -5.19791, 0.46 ) }
    dend_33 { pt3dadd( -18.3333, -20.4433, -5.62024, 0.46 ) }
    dend_33 { pt3dadd( -18.8986, -21.3985, -6.16728, 1.14 ) }
    dend_33 { pt3dadd( -19.4135, -22.2686, -6.66558, 1.37 ) }
    dend_33 { pt3dadd( -19.9002, -23.3613, -7.31037, 0.91 ) }
    dend_33 { pt3dadd( -20.3072, -24.5835, -8.03738, 0.91 ) }
    dend_33 { pt3dadd( -20.541, -25.628, -8.73122, 0.91 ) }
    dend_33 { pt3dadd( -20.7014, -26.9912, -9.7566, 1.37 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 37/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -11.1687, -14.8728, -11.5793, 0.46 ) }
    dend_31 { pt3dadd( -10.8333, -12.9948, -11.9841, 0.46 ) }
    dend_31 { pt3dadd( -10.7204, -10.9974, -12.3296, 0.46 ) }
    dend_31 { pt3dadd( -10.6844, -9.98165, -12.4699, 0.46 ) }
    dend_31 { pt3dadd( -10.6656, -9.02254, -12.5803, 0.46 ) }
    dend_31 { pt3dadd( -10.6848, -7.86284, -12.6448, 0.46 ) }
    dend_31 { pt3dadd( -10.7154, -7.08954, -12.6635, 0.46 ) }
    dend_31 { pt3dadd( -10.928, -5.40702, -12.5925, 0.46 ) }
    dend_31 { pt3dadd( -11.1982, -3.84657, -12.4612, 0.23 ) }
    dend_31 { pt3dadd( -11.4254, -2.9527, -12.3827, 0.46 ) }
    dend_31 { pt3dadd( -11.9909, -1.22628, -12.163, 0.46 ) }
    dend_31 { pt3dadd( -12.1938, -0.724087, -12.0738, 0.91 ) }
    dend_31 { pt3dadd( -12.6449, 0.281783, -11.8644, 1.59 ) }
    dend_31 { pt3dadd( -13.0122, 0.950405, -11.7238, 0.68 ) }
    dend_31 { pt3dadd( -14.9176, 4.18006, -11.0307, 0.23 ) }
    dend_31 { pt3dadd( -15.9076, 5.88947, -10.6936, 0.23 ) }
    dend_31 { pt3dadd( -16.4428, 6.81639, -10.5339, 0.23 ) }
    dend_31 { pt3dadd( -17.0192, 7.76614, -10.3932, 1.37 ) }
    dend_31 { pt3dadd( -18.5852, 10.1317, -10.1038, 0.23 ) }
    dend_31 { pt3dadd( -19.8818, 12.0924, -9.89056, 0.23 ) }
    dend_31 { pt3dadd( -20.6887, 13.3389, -9.79937, 0.46 ) }
    dend_31 { pt3dadd( -21.446, 14.5227, -9.79573, 0.23 ) }
    dend_31 { pt3dadd( -22.4525, 16.0543, -9.85923, 0.23 ) }
    dend_31 { pt3dadd( -23.3161, 17.2521, -9.92636, 1.59 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 61/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -11.1687, -14.8728, -11.5793, 0.46 ) }
    dend_30 { pt3dadd( -10.1066, -14.7522, -13.0581, 0.46 ) }
    dend_30 { pt3dadd( -9.04176, -14.7333, -14.4709, 0.46 ) }
    dend_30 { pt3dadd( -8.42494, -14.7603, -15.2203, 0.46 ) }
    dend_30 { pt3dadd( -6.81809, -14.9071, -17.1144, 0.68 ) }
    dend_30 { pt3dadd( -5.70372, -15.0831, -18.3192, 1.59 ) }
    dend_30 { pt3dadd( -4.69859, -15.2801, -19.3177, 1.59 ) }
    dend_30 { pt3dadd( -3.66226, -15.5699, -20.3269, 0.46 ) }
    dend_30 { pt3dadd( -2.40742, -15.9612, -21.4071, 0.46 ) }
    dend_30 { pt3dadd( -1.79841, -16.13, -21.8532, 0.46 ) }
    dend_30 { pt3dadd( -0.412306, -16.4403, -22.6261, 1.37 ) }
    dend_30 { pt3dadd( 1.06311, -16.688, -23.3693, 0.68 ) }
    dend_30 { pt3dadd( 2.26372, -16.8497, -23.9851, 0.68 ) }
    dend_30 { pt3dadd( 3.53248, -16.9354, -24.7223, 0.68 ) }
    dend_30 { pt3dadd( 4.25369, -16.9398, -25.1827, 1.59 ) }
    dend_30 { pt3dadd( 5.9304, -16.861, -26.3418, 0.23 ) }
    dend_30 { pt3dadd( 7.09388, -16.6991, -27.245, 0.68 ) }
    dend_30 { pt3dadd( 8.56079, -16.4644, -28.438, 0.68 ) }
    dend_30 { pt3dadd( 9.66827, -16.2759, -29.3857, 0.68 ) }
    dend_30 { pt3dadd( 10.481, -16.1693, -30.1319, 0.68 ) }
    dend_30 { pt3dadd( 11.2519, -16.0568, -30.8863, 1.59 ) }
    dend_30 { pt3dadd( 12.9737, -15.5834, -32.6912, 0.68 ) }
    // Section: dend_26, id: dend_26, parent: dend_18 (entry count 83/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -25.3755, -15.5584, -4.27627, 0.23 ) }
    dend_26 { pt3dadd( -24.5155, -17.6158, -3.68481, 0.23 ) }
    dend_26 { pt3dadd( -23.9978, -18.8543, -3.32875, 0.23 ) }
    dend_26 { pt3dadd( -23.5082, -20.0255, -2.99203, 0.68 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 87/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -25.3755, -15.5584, -4.27627, 0.68 ) }
    dend_19 { pt3dadd( -26.8255, -15.7579, -5.67627, 0.68 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 89/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 28.2696, -7.2335, 3.21042, 0.46 ) }
    dend_13 { pt3dadd( 29.1063, -6.31044, 2.61672, 0.46 ) }
    dend_13 { pt3dadd( 29.4798, -5.52947, 2.20052, 0.46 ) }
    dend_13 { pt3dadd( 29.8912, -4.62586, 1.71351, 0.46 ) }
    dend_13 { pt3dadd( 30.3745, -3.7355, 1.19772, 0.46 ) }
    dend_13 { pt3dadd( 31.0235, -2.94725, 0.766088, 0.68 ) }
    dend_13 { pt3dadd( 31.6726, -2.32884, 0.529293, 0.46 ) }
    dend_13 { pt3dadd( 32.8539, -1.19284, 0.355575, 0.46 ) }
    dend_13 { pt3dadd( 33.359, -0.719869, 0.301273, 0.46 ) }
    dend_13 { pt3dadd( 34.2617, 7.78824E-4, 0.138941, 0.46 ) }
    dend_13 { pt3dadd( 36.076, 1.16738, -0.21593, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_13 { pt3dadd( 37.2479, 1.91517, -0.465012, 0.46 ) }
    dend_13 { pt3dadd( 38.442, 2.97241, -0.728873, 0.46 ) }
    dend_13 { pt3dadd( 39.2563, 3.74404, -0.90938, 0.68 ) }
    dend_13 { pt3dadd( 40.3269, 4.91969, -1.20038, 1.82 ) }
    dend_13 { pt3dadd( 41.3933, 6.30294, -1.57909, 0.46 ) }
    dend_13 { pt3dadd( 42.2169, 7.55105, -2.0034, 0.23 ) }
    dend_13 { pt3dadd( 44.1111, 10.4647, -3.08165, 0.23 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 7/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 28.2696, -7.2335, 3.21042, 0.46 ) }
    dend_12 { pt3dadd( 30.1788, -7.45898, 2.77463, 0.46 ) }
    dend_12 { pt3dadd( 31.3033, -7.2873, 2.46938, 0.23 ) }
    dend_12 { pt3dadd( 32.3897, -6.95442, 2.15955, 0.23 ) }
    dend_12 { pt3dadd( 33.9839, -6.29054, 1.71562, 0.23 ) }
    dend_12 { pt3dadd( 35.4026, -5.71066, 1.35692, 0.23 ) }
    dend_12 { pt3dadd( 36.4493, -5.30203, 1.0999, 0.23 ) }
    dend_12 { pt3dadd( 38.3046, -4.28337, 0.596968, 0.23 ) }
    dend_12 { pt3dadd( 38.7279, -3.92152, 0.447945, 0.46 ) }
    dend_12 { pt3dadd( 38.1468, -4.92244, 0.827191, 0.46 ) }
    dend_12 { pt3dadd( 37.6551, -6.17262, 1.28331, 0.46 ) }
    dend_12 { pt3dadd( 37.3348, -7.24173, 1.70108, 0.68 ) }
    dend_12 { pt3dadd( 36.7957, -9.30649, 2.53944, 0.68 ) }
    dend_12 { pt3dadd( 36.2945, -11.2777, 3.34385, 0.68 ) }
    dend_12 { pt3dadd( 35.9033, -12.655, 3.89171, 0.68 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 22/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -20.7258, 13.4213, 12.3543, 0.68 ) }
    dend_4 { pt3dadd( -21.6696, 14.061, 12.774, 0.68 ) }
    dend_4 { pt3dadd( -22.2357, 14.4695, 13.0586, 0.68 ) }
    dend_4 { pt3dadd( -22.8915, 14.9969, 13.4288, 0.68 ) }
    dend_4 { pt3dadd( -23.7172, 15.8689, 14.0527, 0.68 ) }
    dend_4 { pt3dadd( -24.1284, 16.504, 14.4687, 0.68 ) }
    dend_4 { pt3dadd( -24.5466, 17.262, 14.9179, 0.68 ) }
    dend_4 { pt3dadd( -24.5625, 17.3056, 14.9408, 0.68 ) }
    dend_4 { pt3dadd( -24.708, 18.3327, 15.4201, 0.91 ) }
    dend_4 { pt3dadd( -24.5379, 19.4124, 15.7918, 0.91 ) }
    dend_4 { pt3dadd( -24.2158, 20.3244, 16.0365, 0.68 ) }
    dend_4 { pt3dadd( -23.7724, 21.1806, 16.2325, 0.68 ) }
    dend_4 { pt3dadd( -23.3174, 21.865, 16.3878, 0.68 ) }
    dend_4 { pt3dadd( -22.6535, 22.829, 16.6028, 0.91 ) }
    dend_4 { pt3dadd( -21.4371, 24.4796, 16.9509, 0.68 ) }
    dend_4 { pt3dadd( -20.7399, 25.1972, 17.0877, 0.68 ) }
    dend_4 { pt3dadd( -19.9568, 25.8167, 17.2222, 0.68 ) }
    dend_4 { pt3dadd( -19.3192, 26.227, 17.3173, 0.68 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 40/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -20.7258, 13.4213, 12.3543, 0.68 ) }
    dend_3 { pt3dadd( -19.3133, 14.2248, 12.241, 0.68 ) }
    dend_3 { pt3dadd( -17.8217, 15.182, 12.2516, 0.68 ) }
    dend_3 { pt3dadd( -16.7042, 15.9373, 12.3695, 0.68 ) }
    dend_3 { pt3dadd( -15.9527, 16.4676, 12.4923, 0.68 ) }
    dend_3 { pt3dadd( -14.5325, 17.5641, 12.7755, 0.68 ) }
    dend_3 { pt3dadd( -13.9506, 18.015, 12.9328, 0.68 ) }
    dend_3 { pt3dadd( -12.643, 19.1244, 13.4128, 0.68 ) }
    dend_3 { pt3dadd( -11.9387, 19.7171, 13.7648, 0.68 ) }
    dend_3 { pt3dadd( -11.5289, 20.0562, 14.0198, 1.14 ) }
    dend_3 { pt3dadd( -10.7356, 20.8194, 14.6145, 0.68 ) }
    dend_3 { pt3dadd( -10.0422, 21.7902, 15.3728, 0.68 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 52/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -20.7014, -26.9912, -9.7566, 0.68 ) }
    dend_35 { pt3dadd( -21.8243, -27.6073, -10.6748, 0.68 ) }
    dend_35 { pt3dadd( -22.68, -28.0768, -11.3746, 0.68 ) }
    dend_35 { pt3dadd( -23.1241, -28.3205, -11.7378, 0.68 ) }
    dend_35 { pt3dadd( -24.3964, -29.0185, -12.7782, 0.46 ) }
    dend_35 { pt3dadd( -25.6046, -29.6815, -13.7662, 0.46 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 58/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -20.7014, -26.9912, -9.7566, 1.14 ) }
    dend_34 { pt3dadd( -19.9312, -28.2468, -9.42895, 1.14 ) }
    dend_34 { pt3dadd( -19.2854, -29.2213, -9.11403, 0.46 ) }
    dend_34 { pt3dadd( -18.6814, -30.0013, -8.81783, 0.46 ) }
    dend_34 { pt3dadd( -18.1843, -30.523, -8.56047, 0.91 ) }
    dend_34 { pt3dadd( -17.6447, -30.9169, -8.23705, 0.91 ) }
    dend_34 { pt3dadd( -16.7353, -31.3729, -7.64009, 0.23 ) }
    dend_34 { pt3dadd( -15.8586, -31.4491, -7.06029, 0.23 ) }
    dend_34 { pt3dadd( -15.1807, -31.3543, -6.51798, 1.14 ) }
    dend_34 { pt3dadd( -14.1622, -31.1768, -5.61587, 0.68 ) }
    dend_34 { pt3dadd( -13.1967, -31.082, -4.66375, 0.68 ) }
    dend_34 { pt3dadd( -12.7477, -31.1091, -4.11732, 0.68 ) }
    dend_34 { pt3dadd( -12.3794, -31.1706, -3.48264, 1.59 ) }
    dend_34 { pt3dadd( -11.881, -31.347, -2.43944, 1.59 ) }
    dend_34 { pt3dadd( -11.3182, -31.7329, -1.08128, 1.37 ) }
    dend_34 { pt3dadd( -10.9101, -32.1714, -0.018682, 1.37 ) }
    dend_34 { pt3dadd( -10.4006, -32.9732, 1.56469, 0.91 ) }
    dend_34 { pt3dadd( -9.9899, -33.8906, 3.18976, 0.91 ) }
    dend_34 { pt3dadd( -9.74593, -34.6209, 4.18901, 0.91 ) }
    dend_34 { pt3dadd( -9.40843, -35.5161, 5.09683, 0.91 ) }
    dend_34 { pt3dadd( -9.13929, -36.1399, 5.46397, 0.46 ) }
    dend_34 { pt3dadd( -8.76538, -36.9023, 5.7199, 0.46 ) }
    dend_34 { pt3dadd( -8.36779, -37.5449, 5.84893, 0.46 ) }
    dend_34 { pt3dadd( -7.5639, -38.6829, 6.05408, 0.68 ) }
    dend_34 { pt3dadd( -6.95323, -39.4631, 6.2436, 0.23 ) }
    dend_34 { pt3dadd( -6.35565, -40.1325, 6.435, 0.23 ) }
    dend_34 { pt3dadd( -5.52583, -40.9321, 6.74498, 0.23 ) }
    dend_34 { pt3dadd( -4.35269, -41.9789, 7.25439, 0.23 ) }
    dend_34 { pt3dadd( -3.18632, -43.0329, 7.82683, 0.46 ) }
    dend_34 { pt3dadd( -2.23162, -43.9498, 8.42223, 0.23 ) }
    dend_34 { pt3dadd( -1.25889, -44.9174, 9.06904, 0.46 ) }
    dend_34 { pt3dadd( -0.147129, -45.9692, 9.82895, 0.68 ) }
    dend_34 { pt3dadd( 0.656703, -46.7363, 10.4025, 0.68 ) }
    dend_34 { pt3dadd( 1.01358, -47.1454, 10.7358, 0.91 ) }
    dend_34 { pt3dadd( 1.81678, -48.06, 11.6494, 0.91 ) }
    // Section: dend_25, id: dend_25, parent: dend_19 (entry count 93/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -26.8255, -15.7579, -5.67627, 0.68 ) }
    dend_25 { pt3dadd( -26.8849, -17.2017, -6.82097, 0.68 ) }
    dend_25 { pt3dadd( -26.9799, -17.7309, -7.29449, 0.68 ) }
    dend_25 { pt3dadd( -27.1735, -18.4246, -7.98912, 1.37 ) }
    dend_25 { pt3dadd( -27.5735, -19.4565, -9.0069, 1.37 ) }
    dend_25 { pt3dadd( -27.9875, -20.346, -9.87539, 1.37 ) }
    dend_25 { pt3dadd( -28.2365, -20.8581, -10.3566, 1.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_25 { pt3dadd( -28.6342, -21.643, -11.1065, 0.91 ) }
    dend_25 { pt3dadd( -28.8768, -22.1682, -11.5509, 0.91 ) }
    dend_25 { pt3dadd( -29.2386, -23.0866, -12.209, 1.14 ) }
    dend_25 { pt3dadd( -29.5697, -24.1221, -12.7957, 0.91 ) }
    dend_25 { pt3dadd( -29.9021, -25.6136, -13.5198, 1.14 ) }
    dend_25 { pt3dadd( -30.0635, -27.0774, -14.1441, 0.68 ) }
    dend_25 { pt3dadd( -30.0827, -27.7943, -14.4087, 0.68 ) }
    dend_25 { pt3dadd( -30.0822, -28.8887, -14.7667, 1.37 ) }
    dend_25 { pt3dadd( -30.0191, -30.1635, -15.1422, 0.68 ) }
    dend_25 { pt3dadd( -29.9942, -30.9186, -15.3213, 0.46 ) }
    dend_25 { pt3dadd( -29.9993, -32.0153, -15.5629, 0.46 ) }
    dend_25 { pt3dadd( -30.0261, -32.8243, -15.7685, 1.14 ) }
    dend_25 { pt3dadd( -30.0597, -33.9959, -16.0943, 0.23 ) }
    dend_25 { pt3dadd( -30.0763, -34.9672, -16.3569, 0.23 ) }
    dend_25 { pt3dadd( -30.0882, -36.1331, -16.6866, 0.23 ) }
    dend_25 { pt3dadd( -30.1154, -37.2916, -17.0444, 0.23 ) }
    dend_25 { pt3dadd( -30.129, -38.6406, -17.4872, 1.37 ) }
    dend_25 { pt3dadd( -30.1245, -40.6278, -18.1418, 0.23 ) }
    dend_25 { pt3dadd( -30.0863, -42.0431, -18.6091, 0.23 ) }
    dend_25 { pt3dadd( -30.0546, -43.2489, -19.0, 1.59 ) }
    dend_25 { pt3dadd( -29.9746, -45.457, -19.6846, 0.23 ) }
    dend_25 { pt3dadd( -29.9772, -45.69, -19.7515, 0.46 ) }
    dend_25 { pt3dadd( -30.0757, -47.035, -20.1545, 0.23 ) }
    dend_25 { pt3dadd( -30.131, -47.4862, -20.3083, 0.46 ) }
    dend_25 { pt3dadd( -30.4349, -49.172, -20.9259, 0.23 ) }
    dend_25 { pt3dadd( -30.5015, -49.449, -21.0306, 0.46 ) }
    dend_25 { pt3dadd( -30.8486, -50.5402, -21.4807, 0.23 ) }
    dend_25 { pt3dadd( -31.2052, -51.4781, -21.8913, 0.68 ) }
    dend_25 { pt3dadd( -31.8636, -52.8356, -22.5497, 0.68 ) }
    dend_25 { pt3dadd( -32.5494, -53.8461, -23.0952, 0.23 ) }
    dend_25 { pt3dadd( -33.0278, -54.3554, -23.411, 0.46 ) }
    dend_25 { pt3dadd( -33.882, -55.0367, -23.9193, 0.23 ) }
    dend_25 { pt3dadd( -34.1157, -55.1734, -24.0499, 0.23 ) }
    dend_25 { pt3dadd( -35.2293, -55.6501, -24.6587, 0.46 ) }
    dend_25 { pt3dadd( -37.0688, -56.1143, -25.7008, 0.23 ) }
    dend_25 { pt3dadd( -37.9048, -56.2154, -26.1894, 0.68 ) }
    dend_25 { pt3dadd( -39.2704, -56.2551, -27.0239, 0.46 ) }
    dend_25 { pt3dadd( -39.917, -56.2262, -27.4356, 1.37 ) }
    dend_25 { pt3dadd( -41.0151, -56.1499, -28.235, 0.68 ) }
    dend_25 { pt3dadd( -41.9952, -56.0298, -29.1337, 0.68 ) }
    dend_25 { pt3dadd( -42.6418, -55.9417, -29.8327, 0.46 ) }
    dend_25 { pt3dadd( -43.6718, -55.8133, -30.917, 0.46 ) }
    dend_25 { pt3dadd( -43.87, -55.7865, -31.1271, 0.68 ) }
    dend_25 { pt3dadd( -45.0216, -55.6314, -32.3173, 0.68 ) }
    dend_25 { pt3dadd( -45.903, -55.5275, -33.2237, 0.23 ) }
    dend_25 { pt3dadd( -47.6461, -55.5554, -35.1032, 0.23 ) }
    dend_25 { pt3dadd( -48.6159, -55.6057, -36.2313, 0.23 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 47/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -26.8255, -15.7579, -5.67627, 0.46 ) }
    dend_20 { pt3dadd( -27.2968, -15.6679, -5.51821, 0.46 ) }
    dend_20 { pt3dadd( -28.7305, -15.394, -5.03744, 0.91 ) }
    dend_20 { pt3dadd( -29.0609, -15.331, -4.92667, 1.37 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 51/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -29.0609, -15.331, -4.92667, 0.91 ) }
    dend_24 { pt3dadd( -29.9955, -13.7711, -4.94929, 0.91 ) }
    dend_24 { pt3dadd( -30.8416, -12.2347, -4.96068, 0.68 ) }
    dend_24 { pt3dadd( -31.2561, -11.4133, -4.90733, 0.46 ) }
    dend_24 { pt3dadd( -31.7186, -10.5077, -4.77984, 0.46 ) }
    dend_24 { pt3dadd( -31.9433, -10.1017, -4.70892, 0.68 ) }
    dend_24 { pt3dadd( -32.4054, -9.31408, -4.55986, 1.82 ) }
    dend_24 { pt3dadd( -32.995, -8.26523, -4.33308, 0.46 ) }
    dend_24 { pt3dadd( -33.7244, -6.91211, -3.98653, 0.46 ) }
    dend_24 { pt3dadd( -34.3791, -5.74536, -3.70007, 0.46 ) }
    dend_24 { pt3dadd( -34.9618, -4.71055, -3.44309, 0.91 ) }
    dend_24 { pt3dadd( -35.3346, -4.13311, -3.30311, 0.46 ) }
    dend_24 { pt3dadd( -35.6581, -3.68699, -3.20253, 0.46 ) }
    dend_24 { pt3dadd( -36.4174, -2.81249, -2.99634, 0.46 ) }
    dend_24 { pt3dadd( -37.0653, -2.12922, -2.82059, 0.46 ) }
    dend_24 { pt3dadd( -37.9893, -1.21242, -2.56596, 1.37 ) }
    dend_24 { pt3dadd( -39.4914, 0.150636, -2.20662, 0.46 ) }
    dend_24 { pt3dadd( -40.0583, 0.618535, -2.09236, 0.46 ) }
    dend_24 { pt3dadd( -41.6318, 1.82688, -1.76481, 0.46 ) }
    dend_24 { pt3dadd( -42.8402, 2.74059, -1.51369, 0.46 ) }
    dend_24 { pt3dadd( -44.2884, 3.8977, -1.16257, 0.46 ) }
    dend_24 { pt3dadd( -45.5362, 4.95256, -0.792065, 1.82 ) }
    dend_24 { pt3dadd( -46.4096, 5.7283, -0.5095, 0.91 ) }
    dend_24 { pt3dadd( -47.5431, 6.74313, -0.137363, 0.68 ) }
    dend_24 { pt3dadd( -48.4584, 7.6137, 0.164593, 0.91 ) }
    dend_24 { pt3dadd( -50.1439, 9.18983, 0.769649, 0.23 ) }
    dend_24 { pt3dadd( -50.9484, 10.0316, 1.20774, 0.23 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 78/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -29.0609, -15.331, -4.92667, 0.46 ) }
    dend_21 { pt3dadd( -29.4609, -16.8154, -4.06315, 0.46 ) }
    dend_21 { pt3dadd( -29.5559, -17.1382, -3.87614, 0.46 ) }
    dend_21 { pt3dadd( -29.9642, -18.3948, -3.20057, 0.46 ) }
    dend_21 { pt3dadd( -30.4089, -19.6287, -2.58529, 0.46 ) }
    dend_21 { pt3dadd( -30.7829, -20.5771, -2.18185, 0.46 ) }
    dend_21 { pt3dadd( -31.1661, -21.4496, -1.86499, 0.46 ) }
    dend_21 { pt3dadd( -31.4206, -22.0322, -1.72422, 0.68 ) }
    dend_21 { pt3dadd( -31.7742, -22.8868, -1.64784, 1.82 ) }
    dend_21 { pt3dadd( -31.9974, -23.4483, -1.66767, 1.82 ) }
    dend_21 { pt3dadd( -32.5993, -24.8835, -1.83357, 0.23 ) }
    dend_21 { pt3dadd( -33.0333, -25.9917, -1.99685, 0.23 ) }
    dend_21 { pt3dadd( -33.6443, -27.9022, -2.20636, 0.46 ) }
    dend_21 { pt3dadd( -33.9958, -29.2448, -2.28133, 0.46 ) }
    dend_21 { pt3dadd( -34.0623, -29.5529, -2.28476, 0.46 ) }
    dend_21 { pt3dadd( -34.3118, -30.8192, -2.22395, 0.23 ) }
    dend_21 { pt3dadd( -34.5444, -32.124, -2.08946, 0.46 ) }
    dend_21 { pt3dadd( -35.0267, -34.4915, -1.69088, 0.46 ) }
    dend_21 { pt3dadd( -35.27, -35.3337, -1.49665, 0.46 ) }
    dend_21 { pt3dadd( -35.6255, -36.3842, -1.22986, 1.82 ) }
    dend_21 { pt3dadd( -36.2254, -37.8526, -0.865837, 0.46 ) }
    dend_21 { pt3dadd( -36.8692, -39.202, -0.574203, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_21 { pt3dadd( -37.6366, -40.6199, -0.338338, 0.46 ) }
    dend_21 { pt3dadd( -38.4299, -42.0483, -0.223445, 0.23 ) }
    dend_21 { pt3dadd( -38.8109, -42.7165, -0.175609, 0.23 ) }
    dend_21 { pt3dadd( -39.5705, -43.9904, -0.0669869, 0.68 ) }
    dend_21 { pt3dadd( -40.2349, -45.0411, 0.0326754, 0.23 ) }
    dend_21 { pt3dadd( -40.84, -45.9951, 0.124996, 0.68 ) }
    dend_21 { pt3dadd( -41.7345, -47.5202, 0.262834, 0.23 ) }
    dend_21 { pt3dadd( -42.7644, -49.3815, 0.474357, 0.23 ) }
    dend_21 { pt3dadd( -43.4154, -50.4806, 0.639339, 0.23 ) }
    dend_21 { pt3dadd( -44.245, -51.7907, 0.924078, 0.68 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 10/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -44.245, -51.7907, 0.924078, 0.46 ) }
    dend_23 { pt3dadd( -46.094, -52.9384, 0.51432, 0.46 ) }
    dend_23 { pt3dadd( -47.0244, -53.516, 0.308148, 1.59 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 13/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -44.245, -51.7907, 0.924078, 0.23 ) }
    dend_22 { pt3dadd( -45.3865, -51.3071, -0.242885, 0.23 ) }
    dend_22 { pt3dadd( -46.0207, -51.0385, -0.891295, 0.23 ) }
    dend_22 { pt3dadd( -47.0493, -50.6028, -1.9428, 0.23 ) }
    dend_22 { pt3dadd( -47.5614, -50.3858, -2.46632, 0.23 ) }
    dend_22 { pt3dadd( -48.4882, -49.9932, -3.41383, 0.23 ) }
    dend_22 { pt3dadd( -49.2648, -49.6643, -4.2077, 1.59 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_16, dend_9, dend_0, dend_28, dend_17, dend_15, dend_10, dend_6, dend_1, dend_32, dend_29, dend_27, dend_18, dend_14, dend_11, dend_8, dend_7, dend_5, dend_2, dend_36, dend_33, dend_31, dend_30, dend_26, dend_19, dend_13, dend_12, dend_4, dend_3, dend_35, dend_34, dend_25, dend_20, dend_24, dend_21, dend_23, dend_22]}
    ModelViewParmSubset_2 = new SectionList()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_16, dend_9, dend_0, dend_28, dend_17, dend_15, dend_10, dend_6, dend_1, dend_32, dend_29, dend_27, dend_18, dend_14, dend_11, dend_8, dend_7, dend_5, dend_2, dend_36, dend_33, dend_31, dend_30, dend_26, dend_19, dend_13, dend_12, dend_4, dend_3, dend_35, dend_34, dend_25, dend_20, dend_24, dend_21, dend_23, dend_22]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_8 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_7 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_34 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_25 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_21 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_9 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_16 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_17 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_28 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_5 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_6 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_10 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_32 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_15 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_18 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_19 OneSecGrp_SectionRef_28.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_20 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_26 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_29 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_36 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_11 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_3 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_33 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_4 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_27 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_14 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_35 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_12 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_13 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_24 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_31 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_23 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_22 OneSecGrp_SectionRef_40.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    axon_0 all.append()
    axon_0 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_8 nseg = 3
    dend_7 nseg = 7
    dend_34 nseg = 3
    dend_25 nseg = 3
    dend_21 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L1_NGCDA_e7cec642c3_0_0


