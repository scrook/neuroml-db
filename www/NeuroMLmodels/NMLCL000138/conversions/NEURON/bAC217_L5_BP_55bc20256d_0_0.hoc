// Cell: bAC217_L5_BP_55bc20256d_0_0
/*
{
  "id" : "bAC217_L5_BP_55bc20256d_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.07628, 2.40803, 0.83", "-2.99863, 7.99555, 2.82303, 0.83", "-5.71952, 10.0517, 3.23338, 1.11", "-7.32378, 11.2633, 3.44683, 0.83", "-8.88238, 12.4301, 3.63808, 0.83", "-9.80518, 13.0955, 3.74289, 1.11", "-12.695, 15.1747, 4.07878, 1.11", "-17.8637, 18.7342, 4.67253, 0.83", "-19.7258, 19.9678, 4.86861, 0.83", "-21.2004, 20.9155, 4.99039, 0.83", "-22.6384, 21.8548, 5.09581, 0.83", "-23.8089, 22.629, 5.15269, 0.55", "-24.6887, 23.1532, 5.21042, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.31578, -5.68197, 0.55", "5.23608, 6.35522, -6.41048, 0.55", "8.8254, 7.11226, -7.21205, 0.55", "10.9081, 7.30336, -8.27268, 0.83", "14.2045, 7.50673, -10.2429, 0.55", "15.7957, 7.6049, -11.1939, 1.38", "19.7081, 7.84628, -13.5323, 0.55", "21.3744, 7.76454, -14.6481, 0.83", "29.9942, 6.2655, -20.9171, 0.55", "30.8281, 6.06392, -21.6068, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.03197, 2.42803, 1.11", "-0.69107, -10.8176, 3.45229, 1.11", "-0.752604, -16.1111, 5.39866, 1.11", "-0.777665, -18.267, 6.19135, 0.83", "-0.810959, -21.1312, 7.24447, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.41203, -1.26197, 1.11", "0.90323, 9.6203, -1.37817, 1.11", "1.01478, 11.5654, -1.36361, 1.11", "1.19225, 14.7389, -1.22066, 1.38", "1.20539, 14.9156, -1.20956, 1.38", "1.50384, 17.0999, -1.05412, 0.83", "1.92002, 19.408, -0.766284, 0.83", "2.62985, 22.01, -0.125124, 0.83", "3.02914, 22.9949, 0.238759, 0.83", "3.41958, 23.7065, 0.573036, 1.11", "4.55323, 25.4372, 1.4308, 0.55", "5.87069, 27.2415, 2.45674, 0.83", "7.58373, 29.0919, 3.6121, 0.55", "8.45282, 29.8581, 4.13175, 0.83", "9.67096, 30.8951, 4.94838, 0.55", "11.1844, 32.2145, 6.06013, 0.55", "13.3062, 34.2023, 7.76735, 0.55", "15.6456, 36.4758, 9.65267, 0.55", "17.1308, 37.9515, 11.073, 0.55", "18.9627, 39.8176, 13.09, 0.55", "19.3449, 40.1916, 13.5492, 0.83", "20.3573, 41.1797, 14.8472, 0.55", "21.2057, 41.949, 15.8638, 0.83", "23.1659, 44.0569, 18.2772, 0.55", "23.8955, 44.8268, 18.9752, 0.83", "24.5692, 45.3922, 19.4406, 0.55", "25.2324, 45.878, 19.7909, 0.83", "26.6946, 46.7777, 20.414, 0.83", "28.6219, 48.0038, 21.0674, 0.83", "29.7998, 48.816, 21.3414, 0.55", "30.6993, 49.5206, 21.5555, 0.55", "33.0553, 51.3407, 22.0815, 0.83", "34.5743, 52.5078, 22.3601, 0.55", "36.8755, 54.2166, 22.6895, 0.55", "38.9786, 55.6468, 22.9069, 0.55", "40.8566, 56.8571, 23.0508, 0.55", "43.2236, 58.2727, 23.1247, 0.55", "44.6659, 58.9622, 23.1225, 0.55", "45.6434, 59.3476, 23.0029, 0.55", "46.9337, 59.6277, 22.7336, 0.55", "48.848, 59.7381, 22.1718, 0.55", "50.0375, 59.6574, 21.7746, 0.55", "51.7811, 59.4925, 21.318, 0.55", "55.1181, 59.282, 20.7495, 0.55", "57.747, 59.2355, 20.4917, 0.55", "60.5431, 59.3159, 20.386, 0.55", "62.3434, 59.427, 20.46, 0.55", "67.0407, 60.1266, 20.9604, 0.55", "69.8324, 60.7474, 21.4649, 0.55", "71.9367, 61.3448, 22.0374, 0.55", "73.2202, 61.9115, 22.4346, 0.55", "74.7101, 62.7605, 22.8883, 0.55", "77.2241, 64.4408, 23.4361, 0.55", "77.7973, 64.8461, 23.4833, 0.55", "79.4354, 65.9282, 23.5112, 0.55", "80.9425, 67.0843, 23.5316, 0.83", "81.7644, 67.7259, 23.5298, 0.55", "82.9948, 68.8296, 23.4789, 0.83", "89.5558, 74.7215, 24.9072, 0.83", "95.2601, 81.5063, 25.7097, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-24.6887, 23.1532, 5.21042, 0.55", "-25.7481, 23.8947, 4.55411, 0.55", "-26.9, 24.7009, 3.84043, 0.55", "-28.2902, 25.6739, 2.97918, 0.55", "-29.4381, 26.4774, 2.26802, 0.83", "-30.4, 27.1507, 1.67207, 0.55", "-32.1855, 28.4003, 0.565905, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-24.6887, 23.1532, 5.21042, 0.55", "-26.8989, 23.5305, 4.99674, 0.55", "-29.244, 23.8659, 5.00473, 0.55", "-31.9014, 24.2436, 5.0788, 0.55", "-35.7402, 24.7581, 5.54096, 0.55", "-38.9456, 25.1025, 6.15948, 0.55", "-42.3031, 25.4163, 6.95423, 0.55", "-45.5373, 25.5117, 8.0813, 0.55", "-48.312, 25.3325, 9.33183, 0.55", "-51.7572, 24.8778, 11.2741, 0.55", "-53.2485, 24.5755, 12.3352, 0.55", "-54.8572, 24.2335, 13.5534, 0.55", "-57.697, 23.4117, 15.5747, 0.55", "-59.215, 22.9733, 16.4051, 0.55", "-60.8049, 22.4652, 17.2665, 0.55", "-62.7013, 21.8803, 18.0938, 0.55", "-64.7641, 21.2859, 18.9341, 0.55", "-67.7099, 20.429, 20.068, 0.55", "-71.6563, 19.5372, 21.2157, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "30.8281, 6.06392, -21.6068, 0.55", "37.1363, 7.78653, -22.9651, 0.55", "40.7791, 8.56566, -24.2629, 0.55", "44.3781, 9.1757, -25.5957, 0.55", "46.8391, 9.49616, -26.505, 0.55", "50.4375, 9.88291, -27.806, 0.55", "57.9064, 10.5421, -30.7386, 0.55", "66.3834, 11.2333, -34.6326, 0.55", "70.5007, 11.315, -36.8057, 0.55", "72.7076, 11.3047, -38.1145, 0.55", "75.1277, 11.3041, -39.648, 0.55", "79.4486, 11.1853, -42.3672, 0.55", "81.0199, 11.0518, -43.4066, 0.55", "87.6713, 10.6448, -48.322, 0.55", "92.3794, 10.428, -52.1504, 0.55", "95.0894, 10.3541, -54.4295, 0.55", "97.7927, 10.2571, -56.7004, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "30.8281, 6.06392, -21.6068, 0.83", "32.7692, 7.01094, -21.5489, 0.83", "33.8777, 7.5581, -21.5642, 0.55", "35.5097, 8.41536, -21.7145, 0.83", "36.6085, 9.0222, -21.8436, 0.55", "38.1276, 9.89364, -21.9953, 0.83", "39.9585, 10.9656, -22.1092, 0.55", "40.875, 11.4372, -22.1389, 0.55", "42.9642, 12.2373, -22.1017, 0.83", "44.847, 12.7171, -21.8599, 0.55", "45.9005, 12.9613, -21.6284, 0.83", "47.4872, 13.3379, -21.1155, 0.55", "49.775, 13.8778, -20.0922, 0.55", "52.9417, 14.4527, -18.5349, 0.55", "55.9564, 14.8712, -16.8623, 0.55", "58.3435, 15.1731, -15.4989, 0.55", "62.2807, 15.6852, -13.2288, 0.55", "65.169, 16.129, -11.4961, 0.55", "66.9256, 16.5252, -10.3693, 0.55", "70.1868, 17.5591, -8.22345, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.810959, -21.1312, 7.24447, 0.83", "-1.18522, -23.7334, 7.16103, 0.83", "-1.54985, -26.2688, 7.07973, 0.83", "-1.95696, -29.0996, 6.98895, 0.83", "-2.16956, -30.5778, 6.94155, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.810959, -21.1312, 7.24447, 0.55", "-0.330033, -22.4668, 8.22031, 0.55", "0.0876015, -24.1043, 9.48335, 0.55", "0.293417, -26.2543, 11.2163, 0.55", "0.312235, -27.0908, 11.9112, 0.83", "0.150146, -29.2276, 13.9298, 0.55", "-0.0275397, -30.3321, 14.9909, 0.55", "-0.422973, -32.4806, 17.1467, 0.83", "-0.814795, -34.077, 18.8489, 0.55", "-1.25785, -35.3954, 20.2282, 0.55", "-2.15328, -37.8929, 22.7921, 0.55", "-2.86409, -39.8835, 24.8117, 0.55", "-3.40137, -41.4789, 26.4547, 0.55", "-3.87403, -43.1716, 28.1473, 0.28", "-4.009, -43.876, 28.8264, 0.55", "-4.22099, -45.1767, 30.0058, 0.28", "-4.25674, -47.2042, 31.531, 0.55", "-6.06334, -53.9689, 36.9283, 0.55", "-8.07351, -60.2221, 42.8746, 0.55", "-9.73076, -65.3585, 49.9476, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-32.1855, 28.4003, 0.565905, 0.55", "-35.3579, 29.042, 2.67594, 0.55", "-36.6728, 29.257, 3.74793, 0.83", "-38.1856, 29.4534, 5.23253, 0.55", "-39.3293, 29.6166, 6.48423, 0.83", "-42.3278, 30.1571, 9.72085, 0.55", "-43.4616, 30.3836, 10.9539, 0.28", "-45.3302, 30.805, 13.1854, 0.55", "-47.8387, 31.3851, 16.1643, 0.55", "-49.7554, 31.8146, 18.3272, 0.55", "-52.3269, 32.377, 21.1248, 0.28", "-53.006, 32.5181, 21.7609, 0.55", "-54.4183, 32.8211, 23.0168, 0.28", "-55.3888, 33.042, 23.7678, 0.55", "-57.393, 33.4566, 25.1167, 0.28", "-58.5787, 33.6244, 25.8512, 0.55", "-60.6714, 33.764, 27.1842, 0.28", "-62.0835, 33.842, 28.0283, 0.55", "-70.2078, 34.0816, 37.296, 0.55", "-77.5006, 33.2388, 47.1878, 0.55", "-84.5, 31.2597, 57.1121, 0.55", "-91.5466, 27.8476, 66.5735, 0.55", "-97.0908, 25.0237, 77.1716, 0.55", "-103.579, 22.6087, 87.3347, 0.55", "-110.123, 22.1819, 97.7664, 0.55", "-116.667, 20.7926, 108.101, 0.55", "-122.931, 20.2246, 118.695, 0.55", "-128.598, 19.5051, 129.609, 0.55", "-133.064, 17.4433, 140.884, 0.55", "-137.594, 16.5108, 152.298, 0.55", "-142.35, 14.3573, 163.435, 0.55", "-145.65, 11.708, 174.974, 0.55", "-146.815, 9.8864, 187.087, 0.55", "-148.037, 5.80395, 198.584, 0.55", "-147.509, 1.45201, 210.03, 0.55", "-147.598, -2.36374, 221.689, 0.55", "-148.955, -5.26369, 233.551, 0.55", "-152.824, -6.25295, 245.201, 0.55", "-155.664, -8.58963, 256.934, 0.55", "-156.083, -8.93209, 269.243, 0.55", "-158.461, -8.36424, 281.326, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-32.1855, 28.4003, 0.565905, 0.55", "-33.5051, 29.2995, -1.37813, 0.55", "-34.4394, 30.2798, -3.48293, 0.55", "-35.2768, 31.4481, -5.67955, 0.55", "-35.8013, 32.1797, -7.05504, 0.55", "-36.7578, 33.5141, -9.5641, 0.83", "-37.4577, 34.4904, -11.3997, 0.55", "-38.1841, 35.8347, -14.0701, 0.83", "-38.3806, 36.7073, -15.5336, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-71.6563, 19.5372, 21.2157, 0.28", "-72.7103, 17.4251, 21.2636, 0.28", "-73.2248, 16.5014, 21.2144, 0.28", "-73.8943, 15.1902, 21.0946, 0.55", "-74.4435, 14.0408, 20.9957, 0.28", "-75.2501, 12.2948, 20.8638, 0.55", "-77.479, 7.18329, 20.5456, 0.28", "-78.2136, 5.36917, 20.2932, 0.55", "-79.333, 2.56044, 19.8141, 0.28", "-79.9805, 0.86907, 19.4546, 0.55", "-80.4301, -0.301242, 19.1808, 0.28", "-80.9415, -1.64247, 18.8764, 0.55", "-82.4697, -6.09266, 17.9495, 0.28", "-82.9554, -7.44763, 17.6262, 0.55", "-83.8277, -9.56006, 16.942, 0.28", "-84.5593, -10.9392, 16.4089, 0.28", "-85.2202, -11.8733, 16.034, 0.55", "-87.519, -14.5032, 15.0771, 0.28", "-88.5866, -15.5703, 14.7189, 0.55", "-91.2108, -18.0322, 13.7824, 0.28", "-93.8407, -20.2326, 12.9273, 0.28", "-96.709, -22.3637, 12.0414, 0.28", "-98.0228, -23.178, 11.716, 0.55", "-104.188, -31.4731, 9.75448, 0.55", "-110.896, -39.5762, 9.78706, 0.55", "-117.612, -47.5339, 8.2094, 0.55", "-124.613, -55.0102, 5.66978, 0.55", "-131.819, -61.9011, 2.14316, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-71.6563, 19.5372, 21.2157, 0.55", "-72.3248, 19.5396, 21.2327, 0.55", "-74.237, 19.4574, 21.5042, 0.55", "-74.9614, 19.3962, 21.634, 0.55", "-76.6723, 19.1981, 21.9439, 0.55", "-79.2876, 18.9628, 22.317, 0.55", "-80.6404, 18.8857, 22.5046, 0.28", "-82.7453, 18.7408, 22.7426, 0.55", "-84.3053, 18.6257, 22.8573, 0.55", "-84.9646, 18.5728, 22.9054, 0.28", "-88.9191, 18.2555, 23.1884, 0.55", "-90.763, 18.0741, 23.1881, 0.28", "-93.2352, 17.8748, 23.0527, 0.28", "-95.3501, 17.7768, 22.8344, 0.55", "-103.686, 17.7999, 24.0679, 0.55", "-111.861, 17.2689, 26.045, 0.55", "-119.753, 15.6076, 28.4786, 0.55", "-127.363, 14.9464, 32.0376, 0.55", "-134.11, 13.376, 36.8383, 0.55", "-139.725, 11.6582, 42.8824, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "97.7927, 10.2571, -56.7004, 0.55", "101.006, 11.214, -59.3791, 0.55", "102.023, 11.4698, -60.2891, 0.55", "103.296, 11.749, -61.4112, 0.55", "105.606, 12.2301, -63.5843, 0.55", "108.019, 12.6312, -65.9094, 0.55", "109.201, 12.7345, -67.0127, 0.83", "110.176, 12.75, -67.993, 0.55", "110.906, 12.6987, -68.7988, 0.83", "112.67, 12.3254, -70.8558, 0.55", "114.126, 11.8826, -72.5552, 0.55", "115.801, 11.3652, -74.4256, 0.55", "117.664, 10.8409, -76.5485, 0.55", "118.915, 10.4586, -78.0029, 0.55", "120.325, 10.0212, -79.689, 0.55", "121.543, 9.68283, -81.2341, 0.55", "122.307, 9.53573, -82.312, 0.55", "123.274, 9.26827, -84.482, 0.55", "123.802, 9.05812, -85.8373, 0.55", "124.257, 8.69724, -87.6344, 0.55", "124.883, 7.99438, -90.6681, 0.55", "125.011, 7.81034, -91.351, 0.28", "126.671, 5.48369, -99.65, 0.28", "127.231, 4.81875, -102.087, 0.83", "129.439, 2.31307, -110.724, 0.83", "130.576, 0.993323, -114.729, 0.83", "131.123, 0.395419, -116.347, 0.55", "131.751, -0.192508, -117.924, 0.55", "133.484, -1.33993, -120.843, 0.55", "135.338, -2.36835, -123.406, 0.28", "135.899, -2.54255, -123.549, 0.55", "137.131, -2.82297, -123.428, 0.28", "137.893, -2.93882, -123.245, 0.55", "138.688, -3.06712, -122.985, 0.28", "139.641, -3.17262, -122.632, 0.55", "141.065, -3.26307, -122.259, 0.28", "142.209, -3.37172, -121.995, 0.55", "143.473, -3.41389, -121.808, 0.28", "145.192, -3.47196, -121.707, 0.55", "147.119, -3.49821, -121.711, 0.55", "148.813, -3.50633, -121.828, 0.28", "151.156, -3.50196, -122.122, 0.55", "155.206, -3.40278, -123.066, 0.55", "156.993, -3.27709, -123.704, 0.55", "157.76, -3.19513, -124.062, 0.83", "159.222, -3.03442, -124.881, 0.55", "160.235, -2.88507, -125.514, 0.83", "162.961, -2.41369, -127.253, 0.55", "164.627, -2.24091, -128.354, 0.28", "165.329, -2.20787, -128.736, 0.55", "167.257, -2.28361, -129.561, 0.28", "167.934, -2.36922, -129.802, 0.55", "169.33, -2.62209, -130.081, 0.28", "170.753, -3.00393, -130.114, 0.55", "173.633, -3.90425, -129.669, 0.28", "174.962, -4.37038, -129.32, 0.55", "176.94, -5.16951, -128.692, 0.28", "179.439, -6.16572, -127.809, 0.55", "181.246, -6.86089, -127.144, 0.55", "184.375, -7.96742, -125.943, 0.28", "185.657, -8.36833, -125.558, 0.55", "187.866, -8.94691, -125.141, 0.28", "190.064, -9.36586, -124.886, 0.55", "191.266, -9.46966, -124.919, 0.28", "192.35, -9.4241, -125.041, 0.55", "195.406, -9.12905, -125.681, 0.28", "197.586, -8.77149, -126.18, 0.28", "199.479, -8.32593, -126.647, 0.55", "201.567, -7.78113, -127.272, 0.28", "202.092, -7.61057, -127.413, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "97.7927, 10.2571, -56.7004, 0.55", "98.5459, 7.98712, -58.2333, 0.55", "99.0068, 6.05292, -59.39, 0.28", "99.4267, 4.28006, -60.2942, 0.55", "100.514, 0.536092, -62.2481, 0.28", "100.576, 0.300169, -62.4053, 0.55", "100.936, -0.93278, -63.3338, 0.28", "101.138, -1.95846, -64.2687, 0.55", "101.286, -3.03279, -65.37, 0.28", "101.446, -4.50081, -66.9417, 0.55", "101.843, -8.18763, -70.8167, 0.55", "102.165, -11.5503, -74.4096, 0.55", "102.396, -14.2399, -77.285, 0.55", "102.574, -16.8873, -80.0631, 0.55", "102.617, -17.5717, -80.7511, 0.28", "102.685, -18.3016, -81.4238, 0.55", "102.874, -19.3066, -82.2605, 0.28", "103.399, -21.0968, -83.5916, 0.55", "104.704, -24.5078, -85.5821, 0.55", "105.422, -26.3418, -86.4824, 0.28", "106.04, -28.2132, -87.4815, 0.55", "106.711, -30.8465, -88.9813, 0.28", "107.114, -32.9807, -90.2422, 0.55", "107.579, -36.1806, -92.1331, 0.28", "108.084, -39.4904, -93.9856, 0.55", "108.752, -44.3, -96.7179, 0.28", "109.052, -46.8675, -98.1825, 0.55", "109.317, -49.4962, -99.7435, 0.28", "109.525, -51.812, -101.264, 0.28", "109.887, -54.702, -103.419, 0.55", "110.409, -57.3691, -105.349, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "70.1868, 17.5591, -8.22345, 0.55", "72.914, 16.8301, -7.92963, 0.55", "74.8827, 16.272, -7.91933, 0.55", "79.1739, 15.0581, -8.13235, 0.55", "81.089, 14.5162, -8.40923, 0.55", "83.1779, 13.995, -8.80763, 0.55", "85.9764, 13.3934, -9.53076, 0.55", "88.9023, 12.7525, -10.5948, 0.55", "90.4249, 12.4409, -11.3367, 0.55", "93.4924, 11.915, -13.2785, 0.55", "94.9036, 11.6963, -14.2165, 0.55", "98.1972, 11.1419, -16.5191, 0.55", "100.418, 10.6703, -18.0818, 0.55", "102.057, 10.2931, -19.1563, 0.83", "104.663, 9.58328, -20.8664, 0.55", "107.208, 8.73397, -22.4681, 0.83", "109.359, 7.89058, -23.7709, 0.55", "111.284, 7.14225, -24.8168, 0.55", "112.389, 6.75005, -25.3356, 0.83", "114.978, 5.80692, -26.4027, 0.28", "116.278, 5.37064, -26.8349, 0.28", "117.522, 4.88505, -27.3399, 0.28", "118.87, 4.39827, -27.8831, 0.28", "121.03, 3.67217, -28.7887, 0.28", "121.902, 3.38413, -29.1235, 0.55", "124.004, 2.66374, -29.7074, 0.55", "127.797, 1.28143, -30.5716, 0.55", "128.846, 0.859318, -30.7703, 0.55", "129.781, 0.4414, -30.9142, 0.83", "131.833, -0.445898, -31.0426, 0.55", "133.619, -1.22103, -31.1243, 0.55", "135.308, -1.94836, -31.1917, 0.55", "136.61, -2.52474, -31.2872, 0.55", "138.651, -3.55605, -31.5773, 0.55", "141.019, -4.95014, -32.1099, 0.55", "144.625, -7.47216, -33.3147, 0.55", "146.556, -9.12738, -34.1876, 0.55", "148.183, -10.8458, -35.1144, 0.28", "148.65, -11.4681, -35.4525, 0.55", "149.63, -13.1866, -36.3538, 0.28", "150.409, -15.0959, -37.2967, 0.55", "151.067, -17.4988, -38.2505, 0.55", "151.523, -19.0988, -38.8026, 0.28", "151.695, -19.6717, -38.9707, 0.55", "152.149, -21.1018, -39.3712, 0.28", "152.785, -22.9769, -39.8516, 0.55", "154.498, -27.5369, -40.9141, 0.55", "155.403, -29.8498, -41.4062, 0.55", "156.249, -31.9753, -41.8401, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "70.1868, 17.5591, -8.22345, 0.55", "72.2929, 17.6556, -6.52923, 0.55", "72.9698, 17.6849, -6.0238, 0.55", "75.4899, 17.6761, -4.2548, 0.55", "78.3047, 17.7203, -2.23581, 0.55", "81.9078, 17.7668, 0.449379, 0.55", "82.9033, 17.781, 1.1843, 0.55", "84.6867, 17.7384, 2.48288, 0.55", "86.6472, 17.7385, 3.83224, 0.55", "88.9343, 17.8041, 5.29853, 0.55", "91.0908, 17.8961, 6.68904, 0.55", "92.279, 18.0011, 7.39781, 0.55", "93.6761, 18.1641, 8.22878, 0.55", "95.4083, 18.4156, 9.2269, 0.83", "98.2575, 18.8285, 10.5629, 0.55", "100.145, 19.0313, 11.3545, 0.83", "102.761, 19.1976, 12.3597, 0.55", "103.563, 19.2062, 12.6554, 0.55", "106.047, 19.1131, 13.5169, 0.55", "110.485, 18.6875, 14.8711, 0.55", "113.728, 18.2004, 15.782, 0.55", "116.287, 17.6959, 16.5601, 0.55", "118.885, 17.0437, 17.4395, 0.55", "119.43, 16.8919, 17.6269, 0.28", "120.535, 16.54, 18.0026, 0.83", "125.064, 15.0286, 19.5702, 0.55", "128.235, 13.9766, 20.6039, 0.55", "130.839, 13.1772, 21.5217, 0.55", "132.394, 12.6945, 22.0852, 0.83", "133.619, 12.3322, 22.5316, 0.28", "134.73, 12.0056, 22.9259, 0.55", "143.454, 11.5314, 27.3491, 0.55", "152.681, 9.62313, 30.0317, 0.55", "161.915, 8.85795, 33.2097, 0.55", "170.006, 6.76492, 38.3225, 0.55", "177.426, 3.42753, 43.7726, 0.55", "185.579, -1.22933, 46.4831, 0.55", "193.588, -6.69614, 47.5127, 0.55", "202.566, -10.5387, 48.0589, 0.55", "211.411, -14.5385, 49.2458, 0.55", "220.715, -17.5211, 49.8696, 0.55", "229.965, -20.1263, 51.7642, 0.55", "238.5, -24.306, 54.0739, 0.55", "247.34, -26.8735, 57.4211, 0.55", "255.828, -28.0651, 62.1653, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.16956, -30.5778, 6.94155, 1.38", "0.537482, -33.8865, 5.60657, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-2.16956, -30.5778, 6.94155, 0.55", "-3.38733, -31.8612, 7.20476, 0.55", "-4.75077, -33.5214, 7.49457, 0.55", "-5.79535, -34.6101, 7.73294, 0.55", "-6.70351, -35.5166, 7.80257, 0.55", "-8.71484, -37.3836, 7.78209, 0.55", "-10.1285, -38.6248, 7.73261, 0.55", "-11.3954, -39.7374, 7.64528, 0.55", "-14.6382, -42.4335, 7.42504, 0.55", "-18.5197, -45.5455, 7.18959, 0.55", "-21.5317, -47.8967, 6.96035, 0.55", "-23.4629, -49.444, 6.78839, 0.55", "-25.6836, -51.308, 6.59638, 0.55", "-28.5173, -54.0085, 6.38319, 0.55", "-30.194, -55.9503, 6.28662, 0.55", "-32.2576, -58.7712, 6.32435, 0.55", "-33.9202, -61.4357, 6.40856, 0.55", "-35.6423, -64.788, 6.51322, 0.55", "-37.311, -68.7512, 6.66465, 0.55", "-38.265, -71.8053, 6.78981, 0.55", "-38.6125, -73.3353, 6.93106, 0.55", "-39.1679, -76.9511, 7.41509, 0.55", "-39.6077, -80.3408, 7.94431, 0.55", "-39.8196, -83.7742, 8.6942, 0.55", "-39.9386, -85.7447, 9.23653, 0.55", "-40.2213, -91.8446, 11.1297, 0.55", "-40.2434, -92.2937, 11.2776, 0.55", "-40.3126, -95.0493, 12.2398, 0.55", "-40.6405, -99.9622, 14.1253, 0.55", "-40.7807, -101.602, 14.6601, 0.55", "-41.158, -104.152, 15.0688, 0.55", "-41.3205, -105.097, 14.9966, 0.55", "-41.8582, -108.292, 14.1144, 0.55", "-42.1847, -110.361, 13.0762, 0.55", "-42.7595, -113.65, 10.7247, 0.55", "-43.3655, -117.679, 7.49662, 0.28", "-43.5288, -118.673, 6.55875, 0.55", "-43.8004, -120.178, 5.00085, 0.28", "-43.8461, -120.405, 4.75428, 0.55", "-44.0809, -121.646, 3.51406, 0.28", "-44.1687, -122.067, 3.19805, 0.55", "-44.5829, -124.264, 1.99683, 0.28", "-44.7511, -125.009, 1.60401, 0.55", "-45.2381, -127.164, 0.598727, 0.28", "-45.3877, -127.843, 0.284134, 0.55", "-45.9154, -130.185, -0.758363, 0.28", "-46.1536, -131.263, -1.24476, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-9.73076, -65.3585, 49.9476, 0.55", "-14.6166, -74.2246, 57.8704, 0.55", "-20.896, -82.1042, 65.9086, 0.55", "-26.6734, -90.7815, 73.4433, 0.55", "-32.6371, -99.525, 80.7496, 0.55", "-37.0109, -109.566, 87.394, 0.55", "-41.3872, -119.185, 94.6635, 0.55", "-43.7846, -130.654, 99.6805, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-9.73076, -65.3585, 49.9476, 0.55", "-9.48721, -71.9124, 56.9543, 0.55", "-8.42518, -79.4525, 62.7283, 0.55", "-8.85859, -87.2979, 68.1595, 0.55", "-9.58178, -95.687, 72.6247, 0.55", "-9.96187, -103.979, 77.3119, 0.55", "-10.445, -111.919, 82.5926, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-38.3806, 36.7073, -15.5336, 0.83", "-38.3513, 37.2053, -16.7391, 0.83", "-38.2905, 38.4686, -19.4799, 0.55", "-38.2427, 39.037, -20.5904, 0.83", "-38.1702, 39.6652, -21.716, 0.55", "-38.0579, 40.3559, -22.7391, 0.55", "-37.9801, 40.7224, -23.1925, 0.28", "-37.9267, 40.9951, -23.4086, 0.55", "-37.6511, 41.9732, -23.9135, 0.28", "-37.5152, 42.3969, -24.1096, 0.55", "-37.0442, 43.8942, -24.7231, 0.28", "-36.6921, 45.1003, -25.1595, 0.55", "-36.2207, 47.0205, -25.7579, 0.28", "-35.8587, 48.7299, -26.2365, 0.28", "-35.7076, 49.7027, -26.4721, 0.55", "-35.6, 50.8688, -26.7334, 0.28", "-35.5831, 51.4341, -26.8416, 0.55", "-35.6314, 52.7574, -27.1357, 0.28", "-35.7344, 53.635, -27.3614, 0.28", "-35.8611, 54.492, -27.6038, 0.28", "-35.9113, 54.9413, -27.7378, 0.55", "-36.0284, 56.7294, -28.3454, 0.28", "-36.1064, 58.8233, -29.121, 0.55", "-36.1232, 59.5438, -29.3944, 0.55", "-36.1475, 60.2731, -29.65, 0.55", "-36.2906, 61.8282, -30.1974, 0.55", "-36.4581, 62.8527, -30.5618, 0.28", "-36.5688, 63.2461, -30.6936, 0.55", "-36.9376, 64.3304, -31.0101, 0.28", "-37.3895, 65.4779, -31.379, 0.55", "-38.2098, 67.1314, -31.9332, 0.28", "-38.6327, 67.8261, -32.1675, 0.28", "-39.3697, 68.7813, -32.5551, 0.55", "-40.2184, 69.7702, -32.993, 0.28", "-40.3773, 69.9266, -33.0634, 0.55", "-40.9595, 70.4294, -33.2905, 0.28", "-42.9765, 72.0592, -33.9927, 0.55", "-45.8529, 74.0558, -34.9817, 0.28", "-46.3988, 74.3835, -35.1825, 0.55", "-47.9134, 75.2233, -35.7372, 0.28", "-48.5555, 75.5629, -35.9827, 0.28", "-49.1231, 75.8376, -36.2153, 0.55", "-50.8484, 76.4313, -36.9436, 0.28", "-52.0716, 76.759, -37.3772, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-38.3806, 36.7073, -15.5336, 0.55", "-38.4775, 37.9795, -15.8122, 0.55", "-38.5494, 38.7387, -15.9033, 0.28", "-38.7019, 39.302, -15.8266, 0.55", "-39.0521, 40.5954, -15.6506, 0.28", "-39.2981, 41.504, -15.5269, 0.55", "-39.7515, 43.1788, -15.2989, 0.28", "-40.0732, 44.0971, -15.018, 0.55", "-41.4145, 46.3951, -13.5659, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-131.819, -61.9011, 2.14316, 0.55", "-134.718, -65.8988, 1.19215, 0.55", "-136.832, -70.2435, -0.142404, 0.55", "-138.651, -74.2685, -2.53767, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-131.819, -61.9011, 2.14316, 0.55", "-138.816, -70.0471, -1.50232, 0.55", "-144.791, -78.2882, -6.49124, 0.55", "-150.32, -86.6728, -11.7349, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-139.725, 11.6582, 42.8824, 0.55", "-147.8, 10.7317, 47.2183, 0.55", "-156.134, 11.2074, 51.1057, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-139.725, 11.6582, 42.8824, 0.55", "-147.842, 10.5579, 44.8497, 0.55", "-155.931, 10.7617, 47.2003, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "110.409, -57.3691, -105.349, 0.28", "118.032, -61.5814, -116.866, 0.28", "118.777, -62.056, -117.885, 0.55", "120.035, -62.8573, -119.605, 0.28", "121.094, -63.532, -121.053, 0.28", "122.496, -64.4251, -122.97, 0.55", "124.345, -65.6027, -125.497, 0.55", "126.65, -67.5935, -126.695, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "110.409, -57.3691, -105.349, 0.55", "111.263, -58.6796, -106.602, 0.55", "111.536, -59.2812, -107.155, 0.28", "111.948, -60.3215, -108.122, 0.55", "112.856, -62.6132, -110.255, 0.28", "113.485, -64.2014, -111.732, 0.55", "114.551, -66.8922, -114.236, 0.28", "115.754, -70.2164, -117.553, 0.28", "116.242, -71.7561, -119.107, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "156.249, -31.9753, -41.8401, 0.28", "158.375, -35.7542, -42.0218, 0.28", "161.037, -40.8435, -41.8748, 0.28", "162.711, -44.1762, -41.6564, 0.55", "163.744, -46.0503, -41.4546, 0.28", "164.291, -47.0609, -41.3371, 0.28", "167.008, -52.0324, -40.8266, 0.55", "167.639, -53.1772, -40.5833, 0.28", "169.097, -56.2243, -39.7624, 0.55", "170.334, -58.844, -39.1435, 0.28", "171.433, -60.973, -38.6774, 0.55", "172.714, -63.4775, -38.2586, 0.55", "174.751, -67.3325, -38.0382, 0.55", "175.239, -68.2686, -38.0153, 0.55", "176.968, -71.7449, -37.9649, 0.28", "177.627, -73.151, -37.9787, 0.55", "178.57, -74.9552, -38.0035, 0.28", "179.899, -77.4854, -38.1478, 0.55", "182.125, -81.3355, -38.9237, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "156.249, -31.9753, -41.8401, 0.55", "153.305, -31.6363, -41.7237, 0.55", "150.914, -31.361, -41.6292, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "0.537482, -33.8865, 5.60657, 0.83", "0.658871, -34.1607, 5.56943, 0.83", "2.11221, -36.5986, 5.36068, 0.83", "3.37295, -38.7323, 5.03378, 0.55", "4.37875, -40.4345, 4.77298, 0.55", "6.51662, -44.0526, 4.21865, 0.83", "9.10971, -48.441, 3.54628, 0.55", "10.5325, -50.7403, 3.23504, 0.83", "13.0845, -54.4075, 2.88092, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.537482, -33.8865, 5.60657, 0.55", "-0.971204, -34.8872, 2.61826, 0.55", "-2.5906, -35.9613, -0.589319, 0.55", "-4.5023, -37.2292, -4.3759, 0.55", "-6.82373, -38.769, -8.97402, 0.55", "-8.14106, -39.6427, -11.5833, 0.55", "-8.40569, -39.8182, -12.1075, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-10.445, -111.919, 82.5926, 0.55", "-10.3027, -119.745, 88.6651, 0.55", "-8.60014, -127.921, 93.9581, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-10.445, -111.919, 82.5926, 0.55", "-10.8496, -118.975, 86.8499, 0.55", "-11.6605, -125.877, 91.31, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-41.4145, 46.3951, -13.5659, 0.28", "-42.5817, 48.5589, -11.8266, 0.28", "-43.009, 49.3894, -11.0805, 0.55", "-44.217, 51.7998, -8.87613, 0.28", "-44.8341, 52.9806, -7.89447, 0.55", "-46.5417, 56.1654, -5.33876, 0.28", "-48.2773, 59.4023, -2.74122, 0.55", "-51.1665, 64.5226, 1.63584, 0.28", "-51.7806, 65.621, 2.56772, 0.55", "-53.1296, 68.1597, 4.51882, 0.28", "-53.649, 69.2036, 5.27766, 0.55", "-60.2454, 76.5997, 12.2556, 0.55", "-67.9009, 84.9594, 16.4421, 0.55", "-74.0923, 93.7267, 21.9791, 0.55", "-78.6243, 103.734, 26.8797, 0.55", "-84.5402, 113.295, 31.1967, 0.55", "-91.4546, 121.325, 37.0386, 0.55", "-97.4483, 128.631, 44.6341, 0.55", "-102.23, 134.894, 53.8791, 0.55", "-107.026, 141.773, 62.6521, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-41.4145, 46.3951, -13.5659, 0.55", "-43.4944, 46.2165, -11.9658, 0.55", "-44.5792, 46.0848, -11.1261, 0.28", "-45.3865, 45.9868, -10.5012, 0.55", "-46.0593, 45.9051, -9.98033, 0.28", "-46.5306, 45.8479, -9.61552, 0.55", "-47.8301, 45.6901, -8.60955, 0.28", "-48.7314, 45.4779, -8.03581, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-138.651, -74.2685, -2.53767, 0.55", "-144.231, -87.5973, -1.13375, 0.55", "-149.465, -100.778, 1.90905, 0.55", "-153.662, -114.651, 2.40016, 0.55", "-159.298, -127.817, 4.75504, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-138.651, -74.2685, -2.53767, 0.55", "-142.817, -80.4206, -7.84955, 0.55", "-146.602, -85.6731, -14.3299, 0.55", "-151.094, -91.6496, -19.5836, 0.55", "-157.407, -96.1337, -24.4932, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-150.32, -86.6728, -11.7349, 0.55", "-155.445, -94.5195, -18.1782, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-150.32, -86.6728, -11.7349, 0.55", "-154.464, -95.6039, -8.58653, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "126.65, -67.5935, -126.695, 0.28", "128.638, -68.7958, -127.706, 0.28", "129.561, -69.3544, -128.175, 0.55", "131.321, -70.4194, -129.071, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "126.65, -67.5935, -126.695, 0.55", "126.261, -68.3759, -128.201, 0.55", "125.481, -69.941, -131.213, 0.28", "125.227, -70.4508, -132.194, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "116.242, -71.7561, -119.107, 0.28", "117.518, -75.1224, -122.732, 0.28", "118.15, -76.7892, -124.526, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "116.242, -71.7561, -119.107, 0.55", "115.263, -72.1205, -118.726, 0.55", "112.536, -73.1366, -117.665, 0.28", "111.888, -73.378, -117.413, 0.55", "110.115, -74.0383, -116.723, 0.28", "108.973, -74.464, -116.278, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "13.0845, -54.4075, 2.88092, 0.83", "13.0984, -54.6039, 2.85498, 0.83", "13.3294, -57.1733, 2.58175, 0.83", "13.3527, -59.0928, 2.52697, 0.83", "13.273, -60.9399, 2.68842, 0.83", "13.1072, -63.3931, 3.10566, 0.83", "12.8529, -66.2157, 3.70501, 0.83", "12.6084, -69.3649, 4.54107, 0.83", "12.3939, -72.4216, 5.49758, 0.83", "11.8664, -76.1694, 6.62088, 0.83", "11.5116, -77.8904, 7.0513, 0.83", "11.2268, -79.186, 7.29188, 0.83", "10.6178, -81.6712, 7.7076, 0.83", "10.1068, -83.9007, 7.94543, 0.83", "9.19867, -88.6714, 7.86774, 0.83", "8.67979, -91.2874, 7.47247, 0.83", "8.1726, -93.7009, 6.92888, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "13.0845, -54.4075, 2.88092, 0.55", "11.9588, -56.7323, 2.88321, 0.55", "11.1084, -58.4213, 3.01478, 0.55", "10.5875, -59.5033, 3.21334, 0.55", "9.84501, -61.2003, 3.69974, 0.55", "8.45116, -64.5651, 4.89193, 0.55", "7.35664, -67.1154, 6.08222, 0.55", "6.46758, -69.1625, 7.26134, 0.55", "5.50862, -71.2312, 8.60002, 0.55", "4.69296, -72.9477, 9.80163, 0.28", "3.99289, -74.3525, 10.9934, 0.55", "2.63594, -76.9123, 13.5276, 0.55", "1.70548, -78.4819, 15.2498, 0.55", "1.17478, -79.3609, 16.205, 0.55", "0.498273, -80.396, 17.2724, 0.83", "-1.52332, -83.4623, 20.2239, 0.28", "-2.1896, -84.4767, 21.1721, 0.55", "-3.32971, -86.3086, 22.8258, 0.28", "-3.68319, -86.8737, 23.3781, 0.55", "-4.43507, -88.2021, 24.6528, 0.28", "-4.85396, -88.9569, 25.3205, 0.55", "-6.33356, -91.4022, 26.7999, 0.55", "-8.76543, -98.0576, 33.5685, 0.55", "-10.7459, -104.415, 40.7716, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-8.40569, -39.8182, -12.1075, 0.55", "-9.89348, -40.5504, -14.5953, 0.55", "-10.3384, -40.7184, -15.3019, 0.55", "-11.4711, -41.1406, -17.0211, 0.55", "-13.9838, -41.9679, -20.6499, 0.28", "-14.3656, -42.0801, -21.1605, 0.55", "-15.9807, -42.603, -23.2141, 0.55", "-18.2613, -43.3212, -25.7695, 0.55", "-19.1393, -43.564, -26.7226, 0.28", "-19.92, -43.7162, -27.5071, 0.28", "-21.304, -43.9466, -28.6444, 0.55", "-22.9732, -44.1415, -30.1002, 0.28", "-24.502, -44.1768, -31.483, 0.55", "-25.6871, -44.0962, -32.5271, 0.55", "-26.4942, -43.9654, -33.2745, 0.55", "-28.8436, -43.4618, -35.55, 0.55", "-31.3243, -42.7431, -37.8925, 0.55", "-32.3544, -42.383, -38.8318, 0.28", "-33.3288, -42.0581, -39.7444, 0.55", "-35.3161, -41.542, -41.5733, 0.28", "-35.9873, -41.3897, -42.1813, 0.83", "-37.2639, -41.0895, -43.2221, 0.28", "-38.2177, -40.9491, -43.8414, 0.55", "-39.6113, -40.7963, -44.7114, 0.28", "-40.1706, -40.728, -45.0387, 0.55", "-41.2213, -40.6221, -45.5875, 0.55", "-42.8177, -40.3002, -46.3543, 0.55", "-43.8717, -40.025, -46.7953, 0.28", "-44.7325, -39.6982, -47.0823, 0.55", "-45.7418, -39.19, -47.4249, 0.28", "-45.9062, -39.0932, -47.4869, 0.55", "-47.3691, -38.1644, -48.3266, 0.28", "-48.4058, -37.4674, -49.0551, 0.55", "-49.7285, -36.4506, -50.2197, 0.83", "-50.7887, -35.5847, -51.3156, 0.28", "-51.0561, -35.363, -51.6298, 0.55", "-53.0801, -33.6976, -54.1746, 0.28", "-53.4256, -33.4128, -54.6618, 0.55", "-54.4248, -32.4884, -56.178, 0.28", "-54.6822, -32.2506, -56.5717, 0.55", "-55.3553, -31.6323, -57.5251, 0.28", "-55.8402, -31.1877, -58.1631, 0.55", "-56.9679, -30.1963, -59.3887, 0.28", "-57.6472, -29.663, -60.0863, 0.55", "-59.1227, -28.6298, -61.4857, 0.28", "-59.5655, -28.3494, -61.8947, 0.55", "-60.2695, -27.9701, -62.5075, 0.28", "-60.8731, -27.6509, -62.9941, 0.55", "-62.1459, -27.007, -63.9212, 0.28", "-62.5328, -26.8225, -64.1867, 0.55", "-65.4343, -25.3925, -66.0143, 0.28", "-66.4673, -24.8154, -66.5593, 0.55", "-68.3296, -23.6943, -67.4056, 0.28", "-69.1723, -23.1548, -67.7596, 0.55", "-71.1266, -21.9332, -68.4551, 0.28", "-71.8517, -21.5176, -68.678, 0.55", "-74.5133, -20.2529, -69.3399, 0.28", "-75.6326, -19.8643, -69.6059, 0.55", "-77.2476, -19.5692, -69.9676, 0.55", "-78.2484, -19.4497, -70.1663, 0.55", "-80.3152, -19.2589, -70.415, 0.28", "-82.3669, -19.0919, -70.5329, 0.28", "-84.0818, -18.9472, -70.5821, 0.55", "-86.1936, -18.5996, -70.4158, 0.28", "-87.2435, -18.3053, -70.1953, 0.55", "-89.7346, -17.2265, -69.4239, 0.28", "-91.0118, -16.4334, -68.723, 0.55", "-91.8291, -15.7986, -68.0884, 0.28", "-92.7385, -15.0854, -67.1481, 0.55", "-93.8657, -14.1533, -65.8271, 0.28", "-94.2969, -13.8246, -65.332, 0.55", "-96.5773, -12.3445, -63.0545, 0.28", "-97.3511, -11.8773, -62.2954, 0.55", "-99.1926, -10.8418, -60.4415, 0.28", "-100.194, -10.292, -59.4351, 0.55", "-101.019, -9.84162, -58.6095, 0.55", "-102.008, -9.31094, -57.6509, 0.28", "-102.537, -9.03968, -57.2432, 0.55", "-104.318, -8.06928, -55.9894, 0.28", "-105.239, -7.45166, -55.3119, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-8.40569, -39.8182, -12.1075, 0.55", "-7.50785, -40.0802, -13.2433, 0.55", "-6.55692, -40.1911, -14.3613, 0.55", "-5.29169, -40.2128, -15.6939, 0.55", "-4.20598, -40.1208, -16.7353, 0.55", "3.45813, -38.6026, -23.0268, 0.55", "5.19842, -38.0359, -24.4685, 0.55", "7.76179, -36.9864, -26.6517, 0.55", "9.57672, -36.174, -28.2086, 0.55", "11.3747, -35.2656, -29.6841, 0.28", "14.2223, -33.6951, -31.8148, 0.55", "18.5809, -31.2194, -34.7498, 0.28", "18.9179, -31.0824, -35.1005, 0.55", "20.5369, -30.7289, -37.9446, 0.28", "21.2988, -30.6072, -40.0395, 0.55", "21.9028, -30.629, -42.3846, 0.55", "22.9158, -30.878, -46.6127, 0.55", "24.9229, -31.4261, -54.9037, 0.55", "26.3653, -31.8567, -60.4451, 0.55", "26.9128, -32.0249, -62.3432, 0.55", "30.811, -33.0439, -74.7273, 0.55", "32.0104, -33.2767, -78.0338, 0.55", "32.8227, -33.4135, -79.837, 0.55", "35.0764, -33.8563, -83.8714, 0.55", "41.021, -35.4757, -93.2219, 0.55", "42.7242, -36.0311, -95.6687, 0.28", "43.7963, -36.4221, -96.9852, 0.55", "45.4174, -37.0998, -98.9038, 0.28", "46.1378, -37.4776, -99.6384, 0.55", "48.7486, -39.0402, -101.201, 0.28", "50.8113, -40.9537, -101.074, 0.55", "52.023, -42.2929, -100.902, 0.28", "53.0959, -43.7447, -100.581, 0.55", "53.9983, -45.3032, -100.189, 0.28", "54.3801, -46.1011, -100.033, 0.55", "55.2316, -48.1775, -99.5663, 0.28", "55.4562, -48.7979, -99.5338, 0.55", "56.7606, -52.3609, -99.5508, 0.28", "57.4447, -54.0193, -99.7646, 0.55", "59.0979, -57.5828, -100.6, 0.28", "59.7845, -58.9032, -101.045, 0.55", "62.2505, -63.2569, -102.741, 0.28", "62.8639, -64.3172, -103.197, 0.55", "64.7323, -67.6737, -104.776, 0.28", "65.1155, -68.4557, -105.093, 0.55", "66.0568, -70.5181, -105.924, 0.28", "66.6322, -71.7191, -106.52, 0.55", "67.2523, -72.9037, -107.192, 0.55", "68.4882, -75.2667, -108.515, 0.28", "69.4138, -76.7413, -109.482, 0.55", "72.567, -80.4889, -112.617, 0.28", "73.8431, -81.7252, -113.9, 0.55", "74.7455, -82.5163, -114.766, 0.28", "75.6834, -83.2462, -115.626, 0.55", "78.6436, -85.3129, -118.214, 0.28", "80.8943, -86.911, -120.106, 0.55", "84.7425, -89.9105, -123.008, 0.28", "85.9576, -90.8449, -123.916, 0.55", "88.328, -92.5676, -125.438, 0.28", "89.1263, -93.1328, -125.877, 0.55", "90.4417, -94.0343, -126.345, 0.28", "91.6109, -94.7966, -126.655, 0.55", "94.8078, -96.6993, -127.162, 0.28", "98.4963, -98.7365, -127.682, 0.28", "100.374, -99.6841, -127.813, 0.28", "102.277, -100.585, -128.06, 0.55", "105.075, -101.779, -128.435, 0.28", "106.322, -102.291, -128.576, 0.83", "109.494, -103.637, -128.812, 0.28", "110.867, -104.252, -128.991, 0.55", "116.88, -107.177, -130.055, 0.28", "119.883, -108.678, -130.829, 0.28", "122.065, -109.772, -131.536, 0.55", "123.33, -110.437, -132.092, 0.55", "126.67, -112.251, -133.835, 0.28", "129.764, -114.086, -135.592, 0.55", "132.569, -115.844, -137.191, 0.28", "135.091, -117.471, -138.775, 0.55", "137.182, -118.792, -140.072, 0.28", "138.918, -119.749, -141.04, 0.55", "143.158, -121.824, -143.18, 0.28", "145.314, -122.871, -144.174, 0.55", "148.559, -124.451, -145.548, 0.28", "151.229, -125.669, -146.611, 0.55", "157.519, -128.255, -149.112, 0.28", "160.091, -129.171, -150.304, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-8.60014, -127.921, 93.9581, 0.55", "-7.67999, -137.687, 99.3094, 0.55", "-4.91958, -147.999, 102.5, 0.55", "-3.25505, -158.073, 106.996, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-8.60014, -127.921, 93.9581, 0.55", "-7.4611, -136.839, 101.798, 0.55", "-8.66121, -144.839, 110.629, 0.55", "-10.7623, -150.96, 120.776, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-11.6605, -125.877, 91.31, 0.55", "-11.398, -134.282, 96.2989, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-11.6605, -125.877, 91.31, 0.55", "-13.4913, -136.097, 97.7299, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "8.1726, -93.7009, 6.92888, 0.83", "9.13607, -97.9204, 7.59046, 0.83", "10.1175, -101.472, 8.41427, 0.83", "11.093, -105.003, 9.23315, 0.83", "12.0195, -108.357, 10.0108, 0.83", "13.4472, -113.524, 11.2093, 0.83", "14.8646, -118.655, 12.399, 0.83", "16.086, -122.044, 13.6311, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "8.1726, -93.7009, 6.92888, 0.55", "9.75861, -96.0334, 6.61361, 0.55", "10.9026, -97.861, 6.06444, 0.55", "11.6572, -99.2139, 5.54262, 0.55", "12.261, -100.798, 4.79202, 0.83", "12.7796, -102.6, 3.75374, 0.55", "13.2869, -104.362, 2.73817, 0.83", "13.6903, -106.274, 1.4891, 0.55", "13.8979, -107.386, 0.664154, 0.83", "14.3567, -110.985, -2.24359, 0.55", "14.448, -113.809, -4.64457, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-10.7459, -104.415, 40.7716, 0.55", "-14.9832, -112.241, 45.6927, 0.55", "-20.6253, -119.117, 50.6993, 0.55", "-27.0065, -125.065, 56.0558, 0.55", "-34.2673, -129.857, 61.5088, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-10.7459, -104.415, 40.7716, 0.55", "-13.4236, -110.986, 46.4578, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "16.086, -122.044, 13.6311, 0.55", "16.1006, -123.441, 14.0098, 0.55", "16.1551, -125.223, 14.5511, 0.55", "16.2096, -126.906, 15.0531, 0.55", "16.2398, -128.102, 15.3881, 0.55", "16.2791, -130.238, 15.9467, 0.55", "16.522, -136.237, 17.3901, 0.55", "16.6774, -138.273, 17.8067, 0.55", "16.8122, -139.707, 18.0304, 0.55", "17.0156, -141.345, 18.1591, 0.55", "17.1825, -142.61, 18.1412, 0.55", "17.6931, -145.565, 18.0018, 0.55", "18.0037, -147.811, 17.8717, 0.55", "18.2352, -149.284, 17.8403, 0.55", "18.769, -153.107, 17.9501, 0.55", "19.0808, -155.679, 18.1329, 0.55", "19.4481, -158.995, 18.5585, 0.55", "19.8355, -162.76, 19.3428, 0.55", "20.1651, -165.271, 20.0513, 0.55", "20.3849, -166.754, 20.5191, 0.55", "20.5634, -168.122, 20.9397, 0.55", "20.8405, -169.853, 21.3988, 0.55", "21.5348, -174.026, 22.2103, 0.55", "21.874, -175.639, 22.4791, 0.55", "22.2122, -177.435, 22.7547, 0.55", "22.7016, -180.134, 23.1488, 0.55", "22.9761, -182.212, 23.446, 0.55", "23.1297, -184.189, 23.6727, 0.55", "23.1925, -186.076, 23.8669, 0.55", "23.2153, -187.919, 24.0748, 0.55", "23.2429, -189.23, 24.2118, 0.55", "23.3213, -191.375, 24.3658, 0.55", "23.4326, -193.949, 24.3459, 0.55", "23.5444, -195.197, 24.251, 0.55", "23.6772, -196.293, 24.0879, 0.55", "24.0563, -198.355, 23.6826, 0.55", "24.2932, -199.663, 23.3855, 0.55", "24.5868, -201.274, 23.0854, 0.55", "24.7313, -202.409, 22.932, 0.55", "25.0222, -205.362, 22.6347, 0.55", "25.1422, -207.576, 22.556, 0.55", "25.1939, -211.007, 22.6995, 0.55", "25.2177, -213.222, 23.0132, 0.55", "25.2041, -215.548, 23.413, 0.28", "25.165, -216.484, 23.6059, 0.28", "25.0029, -218.758, 24.2763, 0.28", "24.7881, -220.861, 25.0563, 0.28", "24.6797, -223.636, 26.4408, 0.28", "25.6849, -229.84, 28.1884, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "16.086, -122.044, 13.6311, 0.55", "16.7564, -122.406, 14.5408, 0.55", "18.0293, -123.337, 16.5223, 0.55", "19.0758, -124.255, 18.288, 0.28", "20.1576, -125.301, 20.2248, 0.55", "20.6942, -125.972, 21.5107, 0.28", "21.4847, -127.185, 23.8784, 0.55", "21.6329, -127.831, 25.0427, 0.28", "21.642, -128.066, 25.5048, 0.28", "21.6508, -128.403, 26.3098, 0.55", "21.8268, -129.51, 29.336, 0.28", "21.9338, -129.941, 30.5997, 0.55", "22.5393, -131.185, 34.2026, 0.28", "22.9635, -131.796, 36.0856, 0.28", "23.5904, -132.578, 38.355, 0.55", "24.7365, -133.785, 41.5603, 0.28", "24.9262, -133.944, 41.9653, 0.55", "25.9656, -134.716, 43.8683, 0.28", "26.0752, -134.788, 44.0274, 0.55", "27.01, -135.634, 45.4619, 0.28", "27.4211, -136.097, 46.1758, 0.55", "30.7517, -139.524, 52.0919, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-34.2673, -129.857, 61.5088, 0.55", "-40.7325, -134.471, 68.3249, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-34.2673, -129.857, 61.5088, 0.55", "-40.2513, -137.784, 64.124, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L5_BP_55bc20256d_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.07628, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -2.99863, 7.99555, 2.82303, 0.83 ) }
    dend_43 { pt3dadd( -5.71952, 10.0517, 3.23338, 1.11 ) }
    dend_43 { pt3dadd( -7.32378, 11.2633, 3.44683, 0.83 ) }
    dend_43 { pt3dadd( -8.88238, 12.4301, 3.63808, 0.83 ) }
    dend_43 { pt3dadd( -9.80518, 13.0955, 3.74289, 1.11 ) }
    dend_43 { pt3dadd( -12.695, 15.1747, 4.07878, 1.11 ) }
    dend_43 { pt3dadd( -17.8637, 18.7342, 4.67253, 0.83 ) }
    dend_43 { pt3dadd( -19.7258, 19.9678, 4.86861, 0.83 ) }
    dend_43 { pt3dadd( -21.2004, 20.9155, 4.99039, 0.83 ) }
    dend_43 { pt3dadd( -22.6384, 21.8548, 5.09581, 0.83 ) }
    dend_43 { pt3dadd( -23.8089, 22.629, 5.15269, 0.55 ) }
    dend_43 { pt3dadd( -24.6887, 23.1532, 5.21042, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.31578, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 5.23608, 6.35522, -6.41048, 0.55 ) }
    dend_28 { pt3dadd( 8.8254, 7.11226, -7.21205, 0.55 ) }
    dend_28 { pt3dadd( 10.9081, 7.30336, -8.27268, 0.83 ) }
    dend_28 { pt3dadd( 14.2045, 7.50673, -10.2429, 0.55 ) }
    dend_28 { pt3dadd( 15.7957, 7.6049, -11.1939, 1.38 ) }
    dend_28 { pt3dadd( 19.7081, 7.84628, -13.5323, 0.55 ) }
    dend_28 { pt3dadd( 21.3744, 7.76454, -14.6481, 0.83 ) }
    dend_28 { pt3dadd( 29.9942, 6.2655, -20.9171, 0.55 ) }
    dend_28 { pt3dadd( 30.8281, 6.06392, -21.6068, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.03197, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.69107, -10.8176, 3.45229, 1.11 ) }
    dend_1 { pt3dadd( -0.752604, -16.1111, 5.39866, 1.11 ) }
    dend_1 { pt3dadd( -0.777665, -18.267, 6.19135, 0.83 ) }
    dend_1 { pt3dadd( -0.810959, -21.1312, 7.24447, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.41203, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.90323, 9.6203, -1.37817, 1.11 ) }
    dend_0 { pt3dadd( 1.01478, 11.5654, -1.36361, 1.11 ) }
    dend_0 { pt3dadd( 1.19225, 14.7389, -1.22066, 1.38 ) }
    dend_0 { pt3dadd( 1.20539, 14.9156, -1.20956, 1.38 ) }
    dend_0 { pt3dadd( 1.50384, 17.0999, -1.05412, 0.83 ) }
    dend_0 { pt3dadd( 1.92002, 19.408, -0.766284, 0.83 ) }
    dend_0 { pt3dadd( 2.62985, 22.01, -0.125124, 0.83 ) }
    dend_0 { pt3dadd( 3.02914, 22.9949, 0.238759, 0.83 ) }
    dend_0 { pt3dadd( 3.41958, 23.7065, 0.573036, 1.11 ) }
    dend_0 { pt3dadd( 4.55323, 25.4372, 1.4308, 0.55 ) }
    dend_0 { pt3dadd( 5.87069, 27.2415, 2.45674, 0.83 ) }
    dend_0 { pt3dadd( 7.58373, 29.0919, 3.6121, 0.55 ) }
    dend_0 { pt3dadd( 8.45282, 29.8581, 4.13175, 0.83 ) }
    dend_0 { pt3dadd( 9.67096, 30.8951, 4.94838, 0.55 ) }
    dend_0 { pt3dadd( 11.1844, 32.2145, 6.06013, 0.55 ) }
    dend_0 { pt3dadd( 13.3062, 34.2023, 7.76735, 0.55 ) }
    dend_0 { pt3dadd( 15.6456, 36.4758, 9.65267, 0.55 ) }
    dend_0 { pt3dadd( 17.1308, 37.9515, 11.073, 0.55 ) }
    dend_0 { pt3dadd( 18.9627, 39.8176, 13.09, 0.55 ) }
    dend_0 { pt3dadd( 19.3449, 40.1916, 13.5492, 0.83 ) }
    dend_0 { pt3dadd( 20.3573, 41.1797, 14.8472, 0.55 ) }
    dend_0 { pt3dadd( 21.2057, 41.949, 15.8638, 0.83 ) }
    dend_0 { pt3dadd( 23.1659, 44.0569, 18.2772, 0.55 ) }
    dend_0 { pt3dadd( 23.8955, 44.8268, 18.9752, 0.83 ) }
    dend_0 { pt3dadd( 24.5692, 45.3922, 19.4406, 0.55 ) }
    dend_0 { pt3dadd( 25.2324, 45.878, 19.7909, 0.83 ) }
    dend_0 { pt3dadd( 26.6946, 46.7777, 20.414, 0.83 ) }
    dend_0 { pt3dadd( 28.6219, 48.0038, 21.0674, 0.83 ) }
    dend_0 { pt3dadd( 29.7998, 48.816, 21.3414, 0.55 ) }
    dend_0 { pt3dadd( 30.6993, 49.5206, 21.5555, 0.55 ) }
    dend_0 { pt3dadd( 33.0553, 51.3407, 22.0815, 0.83 ) }
    dend_0 { pt3dadd( 34.5743, 52.5078, 22.3601, 0.55 ) }
    dend_0 { pt3dadd( 36.8755, 54.2166, 22.6895, 0.55 ) }
    dend_0 { pt3dadd( 38.9786, 55.6468, 22.9069, 0.55 ) }
    dend_0 { pt3dadd( 40.8566, 56.8571, 23.0508, 0.55 ) }
    dend_0 { pt3dadd( 43.2236, 58.2727, 23.1247, 0.55 ) }
    dend_0 { pt3dadd( 44.6659, 58.9622, 23.1225, 0.55 ) }
    dend_0 { pt3dadd( 45.6434, 59.3476, 23.0029, 0.55 ) }
    dend_0 { pt3dadd( 46.9337, 59.6277, 22.7336, 0.55 ) }
    dend_0 { pt3dadd( 48.848, 59.7381, 22.1718, 0.55 ) }
    dend_0 { pt3dadd( 50.0375, 59.6574, 21.7746, 0.55 ) }
    dend_0 { pt3dadd( 51.7811, 59.4925, 21.318, 0.55 ) }
    dend_0 { pt3dadd( 55.1181, 59.282, 20.7495, 0.55 ) }
    dend_0 { pt3dadd( 57.747, 59.2355, 20.4917, 0.55 ) }
    dend_0 { pt3dadd( 60.5431, 59.3159, 20.386, 0.55 ) }
    dend_0 { pt3dadd( 62.3434, 59.427, 20.46, 0.55 ) }
    dend_0 { pt3dadd( 67.0407, 60.1266, 20.9604, 0.55 ) }
    dend_0 { pt3dadd( 69.8324, 60.7474, 21.4649, 0.55 ) }
    dend_0 { pt3dadd( 71.9367, 61.3448, 22.0374, 0.55 ) }
    dend_0 { pt3dadd( 73.2202, 61.9115, 22.4346, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 74.7101, 62.7605, 22.8883, 0.55 ) }
    dend_0 { pt3dadd( 77.2241, 64.4408, 23.4361, 0.55 ) }
    dend_0 { pt3dadd( 77.7973, 64.8461, 23.4833, 0.55 ) }
    dend_0 { pt3dadd( 79.4354, 65.9282, 23.5112, 0.55 ) }
    dend_0 { pt3dadd( 80.9425, 67.0843, 23.5316, 0.83 ) }
    dend_0 { pt3dadd( 81.7644, 67.7259, 23.5298, 0.55 ) }
    dend_0 { pt3dadd( 82.9948, 68.8296, 23.4789, 0.83 ) }
    dend_0 { pt3dadd( 89.5558, 74.7215, 24.9072, 0.83 ) }
    dend_0 { pt3dadd( 95.2601, 81.5063, 25.7097, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -24.6887, 23.1532, 5.21042, 0.55 ) }
    dend_55 { pt3dadd( -25.7481, 23.8947, 4.55411, 0.55 ) }
    dend_55 { pt3dadd( -26.9, 24.7009, 3.84043, 0.55 ) }
    dend_55 { pt3dadd( -28.2902, 25.6739, 2.97918, 0.55 ) }
    dend_55 { pt3dadd( -29.4381, 26.4774, 2.26802, 0.83 ) }
    dend_55 { pt3dadd( -30.4, 27.1507, 1.67207, 0.55 ) }
    dend_55 { pt3dadd( -32.1855, 28.4003, 0.565905, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -24.6887, 23.1532, 5.21042, 0.55 ) }
    dend_44 { pt3dadd( -26.8989, 23.5305, 4.99674, 0.55 ) }
    dend_44 { pt3dadd( -29.244, 23.8659, 5.00473, 0.55 ) }
    dend_44 { pt3dadd( -31.9014, 24.2436, 5.0788, 0.55 ) }
    dend_44 { pt3dadd( -35.7402, 24.7581, 5.54096, 0.55 ) }
    dend_44 { pt3dadd( -38.9456, 25.1025, 6.15948, 0.55 ) }
    dend_44 { pt3dadd( -42.3031, 25.4163, 6.95423, 0.55 ) }
    dend_44 { pt3dadd( -45.5373, 25.5117, 8.0813, 0.55 ) }
    dend_44 { pt3dadd( -48.312, 25.3325, 9.33183, 0.55 ) }
    dend_44 { pt3dadd( -51.7572, 24.8778, 11.2741, 0.55 ) }
    dend_44 { pt3dadd( -53.2485, 24.5755, 12.3352, 0.55 ) }
    dend_44 { pt3dadd( -54.8572, 24.2335, 13.5534, 0.55 ) }
    dend_44 { pt3dadd( -57.697, 23.4117, 15.5747, 0.55 ) }
    dend_44 { pt3dadd( -59.215, 22.9733, 16.4051, 0.55 ) }
    dend_44 { pt3dadd( -60.8049, 22.4652, 17.2665, 0.55 ) }
    dend_44 { pt3dadd( -62.7013, 21.8803, 18.0938, 0.55 ) }
    dend_44 { pt3dadd( -64.7641, 21.2859, 18.9341, 0.55 ) }
    dend_44 { pt3dadd( -67.7099, 20.429, 20.068, 0.55 ) }
    dend_44 { pt3dadd( -71.6563, 19.5372, 21.2157, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 30.8281, 6.06392, -21.6068, 0.55 ) }
    dend_34 { pt3dadd( 37.1363, 7.78653, -22.9651, 0.55 ) }
    dend_34 { pt3dadd( 40.7791, 8.56566, -24.2629, 0.55 ) }
    dend_34 { pt3dadd( 44.3781, 9.1757, -25.5957, 0.55 ) }
    dend_34 { pt3dadd( 46.8391, 9.49616, -26.505, 0.55 ) }
    dend_34 { pt3dadd( 50.4375, 9.88291, -27.806, 0.55 ) }
    dend_34 { pt3dadd( 57.9064, 10.5421, -30.7386, 0.55 ) }
    dend_34 { pt3dadd( 66.3834, 11.2333, -34.6326, 0.55 ) }
    dend_34 { pt3dadd( 70.5007, 11.315, -36.8057, 0.55 ) }
    dend_34 { pt3dadd( 72.7076, 11.3047, -38.1145, 0.55 ) }
    dend_34 { pt3dadd( 75.1277, 11.3041, -39.648, 0.55 ) }
    dend_34 { pt3dadd( 79.4486, 11.1853, -42.3672, 0.55 ) }
    dend_34 { pt3dadd( 81.0199, 11.0518, -43.4066, 0.55 ) }
    dend_34 { pt3dadd( 87.6713, 10.6448, -48.322, 0.55 ) }
    dend_34 { pt3dadd( 92.3794, 10.428, -52.1504, 0.55 ) }
    dend_34 { pt3dadd( 95.0894, 10.3541, -54.4295, 0.55 ) }
    dend_34 { pt3dadd( 97.7927, 10.2571, -56.7004, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 30.8281, 6.06392, -21.6068, 0.83 ) }
    dend_29 { pt3dadd( 32.7692, 7.01094, -21.5489, 0.83 ) }
    dend_29 { pt3dadd( 33.8777, 7.5581, -21.5642, 0.55 ) }
    dend_29 { pt3dadd( 35.5097, 8.41536, -21.7145, 0.83 ) }
    dend_29 { pt3dadd( 36.6085, 9.0222, -21.8436, 0.55 ) }
    dend_29 { pt3dadd( 38.1276, 9.89364, -21.9953, 0.83 ) }
    dend_29 { pt3dadd( 39.9585, 10.9656, -22.1092, 0.55 ) }
    dend_29 { pt3dadd( 40.875, 11.4372, -22.1389, 0.55 ) }
    dend_29 { pt3dadd( 42.9642, 12.2373, -22.1017, 0.83 ) }
    dend_29 { pt3dadd( 44.847, 12.7171, -21.8599, 0.55 ) }
    dend_29 { pt3dadd( 45.9005, 12.9613, -21.6284, 0.83 ) }
    dend_29 { pt3dadd( 47.4872, 13.3379, -21.1155, 0.55 ) }
    dend_29 { pt3dadd( 49.775, 13.8778, -20.0922, 0.55 ) }
    dend_29 { pt3dadd( 52.9417, 14.4527, -18.5349, 0.55 ) }
    dend_29 { pt3dadd( 55.9564, 14.8712, -16.8623, 0.55 ) }
    dend_29 { pt3dadd( 58.3435, 15.1731, -15.4989, 0.55 ) }
    dend_29 { pt3dadd( 62.2807, 15.6852, -13.2288, 0.55 ) }
    dend_29 { pt3dadd( 65.169, 16.129, -11.4961, 0.55 ) }
    dend_29 { pt3dadd( 66.9256, 16.5252, -10.3693, 0.55 ) }
    dend_29 { pt3dadd( 70.1868, 17.5591, -8.22345, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.810959, -21.1312, 7.24447, 0.83 ) }
    dend_11 { pt3dadd( -1.18522, -23.7334, 7.16103, 0.83 ) }
    dend_11 { pt3dadd( -1.54985, -26.2688, 7.07973, 0.83 ) }
    dend_11 { pt3dadd( -1.95696, -29.0996, 6.98895, 0.83 ) }
    dend_11 { pt3dadd( -2.16956, -30.5778, 6.94155, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.810959, -21.1312, 7.24447, 0.55 ) }
    dend_2 { pt3dadd( -0.330033, -22.4668, 8.22031, 0.55 ) }
    dend_2 { pt3dadd( 0.0876015, -24.1043, 9.48335, 0.55 ) }
    dend_2 { pt3dadd( 0.293417, -26.2543, 11.2163, 0.55 ) }
    dend_2 { pt3dadd( 0.312235, -27.0908, 11.9112, 0.83 ) }
    dend_2 { pt3dadd( 0.150146, -29.2276, 13.9298, 0.55 ) }
    dend_2 { pt3dadd( -0.0275397, -30.3321, 14.9909, 0.55 ) }
    dend_2 { pt3dadd( -0.422973, -32.4806, 17.1467, 0.83 ) }
    dend_2 { pt3dadd( -0.814795, -34.077, 18.8489, 0.55 ) }
    dend_2 { pt3dadd( -1.25785, -35.3954, 20.2282, 0.55 ) }
    dend_2 { pt3dadd( -2.15328, -37.8929, 22.7921, 0.55 ) }
    dend_2 { pt3dadd( -2.86409, -39.8835, 24.8117, 0.55 ) }
    dend_2 { pt3dadd( -3.40137, -41.4789, 26.4547, 0.55 ) }
    dend_2 { pt3dadd( -3.87403, -43.1716, 28.1473, 0.28 ) }
    dend_2 { pt3dadd( -4.009, -43.876, 28.8264, 0.55 ) }
    dend_2 { pt3dadd( -4.22099, -45.1767, 30.0058, 0.28 ) }
    dend_2 { pt3dadd( -4.25674, -47.2042, 31.531, 0.55 ) }
    dend_2 { pt3dadd( -6.06334, -53.9689, 36.9283, 0.55 ) }
    dend_2 { pt3dadd( -8.07351, -60.2221, 42.8746, 0.55 ) }
    dend_2 { pt3dadd( -9.73076, -65.3585, 49.9476, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -32.1855, 28.4003, 0.565905, 0.55 ) }
    dend_61 { pt3dadd( -35.3579, 29.042, 2.67594, 0.55 ) }
    dend_61 { pt3dadd( -36.6728, 29.257, 3.74793, 0.83 ) }
    dend_61 { pt3dadd( -38.1856, 29.4534, 5.23253, 0.55 ) }
    dend_61 { pt3dadd( -39.3293, 29.6166, 6.48423, 0.83 ) }
    dend_61 { pt3dadd( -42.3278, 30.1571, 9.72085, 0.55 ) }
    dend_61 { pt3dadd( -43.4616, 30.3836, 10.9539, 0.28 ) }
    dend_61 { pt3dadd( -45.3302, 30.805, 13.1854, 0.55 ) }
    dend_61 { pt3dadd( -47.8387, 31.3851, 16.1643, 0.55 ) }
    dend_61 { pt3dadd( -49.7554, 31.8146, 18.3272, 0.55 ) }
    dend_61 { pt3dadd( -52.3269, 32.377, 21.1248, 0.28 ) }
    dend_61 { pt3dadd( -53.006, 32.5181, 21.7609, 0.55 ) }
    dend_61 { pt3dadd( -54.4183, 32.8211, 23.0168, 0.28 ) }
    dend_61 { pt3dadd( -55.3888, 33.042, 23.7678, 0.55 ) }
    dend_61 { pt3dadd( -57.393, 33.4566, 25.1167, 0.28 ) }
    dend_61 { pt3dadd( -58.5787, 33.6244, 25.8512, 0.55 ) }
    dend_61 { pt3dadd( -60.6714, 33.764, 27.1842, 0.28 ) }
    dend_61 { pt3dadd( -62.0835, 33.842, 28.0283, 0.55 ) }
    dend_61 { pt3dadd( -70.2078, 34.0816, 37.296, 0.55 ) }
    dend_61 { pt3dadd( -77.5006, 33.2388, 47.1878, 0.55 ) }
    dend_61 { pt3dadd( -84.5, 31.2597, 57.1121, 0.55 ) }
    dend_61 { pt3dadd( -91.5466, 27.8476, 66.5735, 0.55 ) }
    dend_61 { pt3dadd( -97.0908, 25.0237, 77.1716, 0.55 ) }
    dend_61 { pt3dadd( -103.579, 22.6087, 87.3347, 0.55 ) }
    dend_61 { pt3dadd( -110.123, 22.1819, 97.7664, 0.55 ) }
    dend_61 { pt3dadd( -116.667, 20.7926, 108.101, 0.55 ) }
    dend_61 { pt3dadd( -122.931, 20.2246, 118.695, 0.55 ) }
    dend_61 { pt3dadd( -128.598, 19.5051, 129.609, 0.55 ) }
    dend_61 { pt3dadd( -133.064, 17.4433, 140.884, 0.55 ) }
    dend_61 { pt3dadd( -137.594, 16.5108, 152.298, 0.55 ) }
    dend_61 { pt3dadd( -142.35, 14.3573, 163.435, 0.55 ) }
    dend_61 { pt3dadd( -145.65, 11.708, 174.974, 0.55 ) }
    dend_61 { pt3dadd( -146.815, 9.8864, 187.087, 0.55 ) }
    dend_61 { pt3dadd( -148.037, 5.80395, 198.584, 0.55 ) }
    dend_61 { pt3dadd( -147.509, 1.45201, 210.03, 0.55 ) }
    dend_61 { pt3dadd( -147.598, -2.36374, 221.689, 0.55 ) }
    dend_61 { pt3dadd( -148.955, -5.26369, 233.551, 0.55 ) }
    dend_61 { pt3dadd( -152.824, -6.25295, 245.201, 0.55 ) }
    dend_61 { pt3dadd( -155.664, -8.58963, 256.934, 0.55 ) }
    dend_61 { pt3dadd( -156.083, -8.93209, 269.243, 0.55 ) }
    dend_61 { pt3dadd( -158.461, -8.36424, 281.326, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -32.1855, 28.4003, 0.565905, 0.55 ) }
    dend_56 { pt3dadd( -33.5051, 29.2995, -1.37813, 0.55 ) }
    dend_56 { pt3dadd( -34.4394, 30.2798, -3.48293, 0.55 ) }
    dend_56 { pt3dadd( -35.2768, 31.4481, -5.67955, 0.55 ) }
    dend_56 { pt3dadd( -35.8013, 32.1797, -7.05504, 0.55 ) }
    dend_56 { pt3dadd( -36.7578, 33.5141, -9.5641, 0.83 ) }
    dend_56 { pt3dadd( -37.4577, 34.4904, -11.3997, 0.55 ) }
    dend_56 { pt3dadd( -38.1841, 35.8347, -14.0701, 0.83 ) }
    dend_56 { pt3dadd( -38.3806, 36.7073, -15.5336, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -71.6563, 19.5372, 21.2157, 0.28 ) }
    dend_48 { pt3dadd( -72.7103, 17.4251, 21.2636, 0.28 ) }
    dend_48 { pt3dadd( -73.2248, 16.5014, 21.2144, 0.28 ) }
    dend_48 { pt3dadd( -73.8943, 15.1902, 21.0946, 0.55 ) }
    dend_48 { pt3dadd( -74.4435, 14.0408, 20.9957, 0.28 ) }
    dend_48 { pt3dadd( -75.2501, 12.2948, 20.8638, 0.55 ) }
    dend_48 { pt3dadd( -77.479, 7.18329, 20.5456, 0.28 ) }
    dend_48 { pt3dadd( -78.2136, 5.36917, 20.2932, 0.55 ) }
    dend_48 { pt3dadd( -79.333, 2.56044, 19.8141, 0.28 ) }
    dend_48 { pt3dadd( -79.9805, 0.86907, 19.4546, 0.55 ) }
    dend_48 { pt3dadd( -80.4301, -0.301242, 19.1808, 0.28 ) }
    dend_48 { pt3dadd( -80.9415, -1.64247, 18.8764, 0.55 ) }
    dend_48 { pt3dadd( -82.4697, -6.09266, 17.9495, 0.28 ) }
    dend_48 { pt3dadd( -82.9554, -7.44763, 17.6262, 0.55 ) }
    dend_48 { pt3dadd( -83.8277, -9.56006, 16.942, 0.28 ) }
    dend_48 { pt3dadd( -84.5593, -10.9392, 16.4089, 0.28 ) }
    dend_48 { pt3dadd( -85.2202, -11.8733, 16.034, 0.55 ) }
    dend_48 { pt3dadd( -87.519, -14.5032, 15.0771, 0.28 ) }
    dend_48 { pt3dadd( -88.5866, -15.5703, 14.7189, 0.55 ) }
    dend_48 { pt3dadd( -91.2108, -18.0322, 13.7824, 0.28 ) }
    dend_48 { pt3dadd( -93.8407, -20.2326, 12.9273, 0.28 ) }
    dend_48 { pt3dadd( -96.709, -22.3637, 12.0414, 0.28 ) }
    dend_48 { pt3dadd( -98.0228, -23.178, 11.716, 0.55 ) }
    dend_48 { pt3dadd( -104.188, -31.4731, 9.75448, 0.55 ) }
    dend_48 { pt3dadd( -110.896, -39.5762, 9.78706, 0.55 ) }
    dend_48 { pt3dadd( -117.612, -47.5339, 8.2094, 0.55 ) }
    dend_48 { pt3dadd( -124.613, -55.0102, 5.66978, 0.55 ) }
    dend_48 { pt3dadd( -131.819, -61.9011, 2.14316, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -71.6563, 19.5372, 21.2157, 0.55 ) }
    dend_45 { pt3dadd( -72.3248, 19.5396, 21.2327, 0.55 ) }
    dend_45 { pt3dadd( -74.237, 19.4574, 21.5042, 0.55 ) }
    dend_45 { pt3dadd( -74.9614, 19.3962, 21.634, 0.55 ) }
    dend_45 { pt3dadd( -76.6723, 19.1981, 21.9439, 0.55 ) }
    dend_45 { pt3dadd( -79.2876, 18.9628, 22.317, 0.55 ) }
    dend_45 { pt3dadd( -80.6404, 18.8857, 22.5046, 0.28 ) }
    dend_45 { pt3dadd( -82.7453, 18.7408, 22.7426, 0.55 ) }
    dend_45 { pt3dadd( -84.3053, 18.6257, 22.8573, 0.55 ) }
    dend_45 { pt3dadd( -84.9646, 18.5728, 22.9054, 0.28 ) }
    dend_45 { pt3dadd( -88.9191, 18.2555, 23.1884, 0.55 ) }
    dend_45 { pt3dadd( -90.763, 18.0741, 23.1881, 0.28 ) }
    dend_45 { pt3dadd( -93.2352, 17.8748, 23.0527, 0.28 ) }
    dend_45 { pt3dadd( -95.3501, 17.7768, 22.8344, 0.55 ) }
    dend_45 { pt3dadd( -103.686, 17.7999, 24.0679, 0.55 ) }
    dend_45 { pt3dadd( -111.861, 17.2689, 26.045, 0.55 ) }
    dend_45 { pt3dadd( -119.753, 15.6076, 28.4786, 0.55 ) }
    dend_45 { pt3dadd( -127.363, 14.9464, 32.0376, 0.55 ) }
    dend_45 { pt3dadd( -134.11, 13.376, 36.8383, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -139.725, 11.6582, 42.8824, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 97.7927, 10.2571, -56.7004, 0.55 ) }
    dend_42 { pt3dadd( 101.006, 11.214, -59.3791, 0.55 ) }
    dend_42 { pt3dadd( 102.023, 11.4698, -60.2891, 0.55 ) }
    dend_42 { pt3dadd( 103.296, 11.749, -61.4112, 0.55 ) }
    dend_42 { pt3dadd( 105.606, 12.2301, -63.5843, 0.55 ) }
    dend_42 { pt3dadd( 108.019, 12.6312, -65.9094, 0.55 ) }
    dend_42 { pt3dadd( 109.201, 12.7345, -67.0127, 0.83 ) }
    dend_42 { pt3dadd( 110.176, 12.75, -67.993, 0.55 ) }
    dend_42 { pt3dadd( 110.906, 12.6987, -68.7988, 0.83 ) }
    dend_42 { pt3dadd( 112.67, 12.3254, -70.8558, 0.55 ) }
    dend_42 { pt3dadd( 114.126, 11.8826, -72.5552, 0.55 ) }
    dend_42 { pt3dadd( 115.801, 11.3652, -74.4256, 0.55 ) }
    dend_42 { pt3dadd( 117.664, 10.8409, -76.5485, 0.55 ) }
    dend_42 { pt3dadd( 118.915, 10.4586, -78.0029, 0.55 ) }
    dend_42 { pt3dadd( 120.325, 10.0212, -79.689, 0.55 ) }
    dend_42 { pt3dadd( 121.543, 9.68283, -81.2341, 0.55 ) }
    dend_42 { pt3dadd( 122.307, 9.53573, -82.312, 0.55 ) }
    dend_42 { pt3dadd( 123.274, 9.26827, -84.482, 0.55 ) }
    dend_42 { pt3dadd( 123.802, 9.05812, -85.8373, 0.55 ) }
    dend_42 { pt3dadd( 124.257, 8.69724, -87.6344, 0.55 ) }
    dend_42 { pt3dadd( 124.883, 7.99438, -90.6681, 0.55 ) }
    dend_42 { pt3dadd( 125.011, 7.81034, -91.351, 0.28 ) }
    dend_42 { pt3dadd( 126.671, 5.48369, -99.65, 0.28 ) }
    dend_42 { pt3dadd( 127.231, 4.81875, -102.087, 0.83 ) }
    dend_42 { pt3dadd( 129.439, 2.31307, -110.724, 0.83 ) }
    dend_42 { pt3dadd( 130.576, 0.993323, -114.729, 0.83 ) }
    dend_42 { pt3dadd( 131.123, 0.395419, -116.347, 0.55 ) }
    dend_42 { pt3dadd( 131.751, -0.192508, -117.924, 0.55 ) }
    dend_42 { pt3dadd( 133.484, -1.33993, -120.843, 0.55 ) }
    dend_42 { pt3dadd( 135.338, -2.36835, -123.406, 0.28 ) }
    dend_42 { pt3dadd( 135.899, -2.54255, -123.549, 0.55 ) }
    dend_42 { pt3dadd( 137.131, -2.82297, -123.428, 0.28 ) }
    dend_42 { pt3dadd( 137.893, -2.93882, -123.245, 0.55 ) }
    dend_42 { pt3dadd( 138.688, -3.06712, -122.985, 0.28 ) }
    dend_42 { pt3dadd( 139.641, -3.17262, -122.632, 0.55 ) }
    dend_42 { pt3dadd( 141.065, -3.26307, -122.259, 0.28 ) }
    dend_42 { pt3dadd( 142.209, -3.37172, -121.995, 0.55 ) }
    dend_42 { pt3dadd( 143.473, -3.41389, -121.808, 0.28 ) }
    dend_42 { pt3dadd( 145.192, -3.47196, -121.707, 0.55 ) }
    dend_42 { pt3dadd( 147.119, -3.49821, -121.711, 0.55 ) }
    dend_42 { pt3dadd( 148.813, -3.50633, -121.828, 0.28 ) }
    dend_42 { pt3dadd( 151.156, -3.50196, -122.122, 0.55 ) }
    dend_42 { pt3dadd( 155.206, -3.40278, -123.066, 0.55 ) }
    dend_42 { pt3dadd( 156.993, -3.27709, -123.704, 0.55 ) }
    dend_42 { pt3dadd( 157.76, -3.19513, -124.062, 0.83 ) }
    dend_42 { pt3dadd( 159.222, -3.03442, -124.881, 0.55 ) }
    dend_42 { pt3dadd( 160.235, -2.88507, -125.514, 0.83 ) }
    dend_42 { pt3dadd( 162.961, -2.41369, -127.253, 0.55 ) }
    dend_42 { pt3dadd( 164.627, -2.24091, -128.354, 0.28 ) }
    dend_42 { pt3dadd( 165.329, -2.20787, -128.736, 0.55 ) }
    dend_42 { pt3dadd( 167.257, -2.28361, -129.561, 0.28 ) }
    dend_42 { pt3dadd( 167.934, -2.36922, -129.802, 0.55 ) }
    dend_42 { pt3dadd( 169.33, -2.62209, -130.081, 0.28 ) }
    dend_42 { pt3dadd( 170.753, -3.00393, -130.114, 0.55 ) }
    dend_42 { pt3dadd( 173.633, -3.90425, -129.669, 0.28 ) }
    dend_42 { pt3dadd( 174.962, -4.37038, -129.32, 0.55 ) }
    dend_42 { pt3dadd( 176.94, -5.16951, -128.692, 0.28 ) }
    dend_42 { pt3dadd( 179.439, -6.16572, -127.809, 0.55 ) }
    dend_42 { pt3dadd( 181.246, -6.86089, -127.144, 0.55 ) }
    dend_42 { pt3dadd( 184.375, -7.96742, -125.943, 0.28 ) }
    dend_42 { pt3dadd( 185.657, -8.36833, -125.558, 0.55 ) }
    dend_42 { pt3dadd( 187.866, -8.94691, -125.141, 0.28 ) }
    dend_42 { pt3dadd( 190.064, -9.36586, -124.886, 0.55 ) }
    dend_42 { pt3dadd( 191.266, -9.46966, -124.919, 0.28 ) }
    dend_42 { pt3dadd( 192.35, -9.4241, -125.041, 0.55 ) }
    dend_42 { pt3dadd( 195.406, -9.12905, -125.681, 0.28 ) }
    dend_42 { pt3dadd( 197.586, -8.77149, -126.18, 0.28 ) }
    dend_42 { pt3dadd( 199.479, -8.32593, -126.647, 0.55 ) }
    dend_42 { pt3dadd( 201.567, -7.78113, -127.272, 0.28 ) }
    dend_42 { pt3dadd( 202.092, -7.61057, -127.413, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 97.7927, 10.2571, -56.7004, 0.55 ) }
    dend_35 { pt3dadd( 98.5459, 7.98712, -58.2333, 0.55 ) }
    dend_35 { pt3dadd( 99.0068, 6.05292, -59.39, 0.28 ) }
    dend_35 { pt3dadd( 99.4267, 4.28006, -60.2942, 0.55 ) }
    dend_35 { pt3dadd( 100.514, 0.536092, -62.2481, 0.28 ) }
    dend_35 { pt3dadd( 100.576, 0.300169, -62.4053, 0.55 ) }
    dend_35 { pt3dadd( 100.936, -0.93278, -63.3338, 0.28 ) }
    dend_35 { pt3dadd( 101.138, -1.95846, -64.2687, 0.55 ) }
    dend_35 { pt3dadd( 101.286, -3.03279, -65.37, 0.28 ) }
    dend_35 { pt3dadd( 101.446, -4.50081, -66.9417, 0.55 ) }
    dend_35 { pt3dadd( 101.843, -8.18763, -70.8167, 0.55 ) }
    dend_35 { pt3dadd( 102.165, -11.5503, -74.4096, 0.55 ) }
    dend_35 { pt3dadd( 102.396, -14.2399, -77.285, 0.55 ) }
    dend_35 { pt3dadd( 102.574, -16.8873, -80.0631, 0.55 ) }
    dend_35 { pt3dadd( 102.617, -17.5717, -80.7511, 0.28 ) }
    dend_35 { pt3dadd( 102.685, -18.3016, -81.4238, 0.55 ) }
    dend_35 { pt3dadd( 102.874, -19.3066, -82.2605, 0.28 ) }
    dend_35 { pt3dadd( 103.399, -21.0968, -83.5916, 0.55 ) }
    dend_35 { pt3dadd( 104.704, -24.5078, -85.5821, 0.55 ) }
    dend_35 { pt3dadd( 105.422, -26.3418, -86.4824, 0.28 ) }
    dend_35 { pt3dadd( 106.04, -28.2132, -87.4815, 0.55 ) }
    dend_35 { pt3dadd( 106.711, -30.8465, -88.9813, 0.28 ) }
    dend_35 { pt3dadd( 107.114, -32.9807, -90.2422, 0.55 ) }
    dend_35 { pt3dadd( 107.579, -36.1806, -92.1331, 0.28 ) }
    dend_35 { pt3dadd( 108.084, -39.4904, -93.9856, 0.55 ) }
    dend_35 { pt3dadd( 108.752, -44.3, -96.7179, 0.28 ) }
    dend_35 { pt3dadd( 109.052, -46.8675, -98.1825, 0.55 ) }
    dend_35 { pt3dadd( 109.317, -49.4962, -99.7435, 0.28 ) }
    dend_35 { pt3dadd( 109.525, -51.812, -101.264, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 109.887, -54.702, -103.419, 0.55 ) }
    dend_35 { pt3dadd( 110.409, -57.3691, -105.349, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 70.1868, 17.5591, -8.22345, 0.55 ) }
    dend_31 { pt3dadd( 72.914, 16.8301, -7.92963, 0.55 ) }
    dend_31 { pt3dadd( 74.8827, 16.272, -7.91933, 0.55 ) }
    dend_31 { pt3dadd( 79.1739, 15.0581, -8.13235, 0.55 ) }
    dend_31 { pt3dadd( 81.089, 14.5162, -8.40923, 0.55 ) }
    dend_31 { pt3dadd( 83.1779, 13.995, -8.80763, 0.55 ) }
    dend_31 { pt3dadd( 85.9764, 13.3934, -9.53076, 0.55 ) }
    dend_31 { pt3dadd( 88.9023, 12.7525, -10.5948, 0.55 ) }
    dend_31 { pt3dadd( 90.4249, 12.4409, -11.3367, 0.55 ) }
    dend_31 { pt3dadd( 93.4924, 11.915, -13.2785, 0.55 ) }
    dend_31 { pt3dadd( 94.9036, 11.6963, -14.2165, 0.55 ) }
    dend_31 { pt3dadd( 98.1972, 11.1419, -16.5191, 0.55 ) }
    dend_31 { pt3dadd( 100.418, 10.6703, -18.0818, 0.55 ) }
    dend_31 { pt3dadd( 102.057, 10.2931, -19.1563, 0.83 ) }
    dend_31 { pt3dadd( 104.663, 9.58328, -20.8664, 0.55 ) }
    dend_31 { pt3dadd( 107.208, 8.73397, -22.4681, 0.83 ) }
    dend_31 { pt3dadd( 109.359, 7.89058, -23.7709, 0.55 ) }
    dend_31 { pt3dadd( 111.284, 7.14225, -24.8168, 0.55 ) }
    dend_31 { pt3dadd( 112.389, 6.75005, -25.3356, 0.83 ) }
    dend_31 { pt3dadd( 114.978, 5.80692, -26.4027, 0.28 ) }
    dend_31 { pt3dadd( 116.278, 5.37064, -26.8349, 0.28 ) }
    dend_31 { pt3dadd( 117.522, 4.88505, -27.3399, 0.28 ) }
    dend_31 { pt3dadd( 118.87, 4.39827, -27.8831, 0.28 ) }
    dend_31 { pt3dadd( 121.03, 3.67217, -28.7887, 0.28 ) }
    dend_31 { pt3dadd( 121.902, 3.38413, -29.1235, 0.55 ) }
    dend_31 { pt3dadd( 124.004, 2.66374, -29.7074, 0.55 ) }
    dend_31 { pt3dadd( 127.797, 1.28143, -30.5716, 0.55 ) }
    dend_31 { pt3dadd( 128.846, 0.859318, -30.7703, 0.55 ) }
    dend_31 { pt3dadd( 129.781, 0.4414, -30.9142, 0.83 ) }
    dend_31 { pt3dadd( 131.833, -0.445898, -31.0426, 0.55 ) }
    dend_31 { pt3dadd( 133.619, -1.22103, -31.1243, 0.55 ) }
    dend_31 { pt3dadd( 135.308, -1.94836, -31.1917, 0.55 ) }
    dend_31 { pt3dadd( 136.61, -2.52474, -31.2872, 0.55 ) }
    dend_31 { pt3dadd( 138.651, -3.55605, -31.5773, 0.55 ) }
    dend_31 { pt3dadd( 141.019, -4.95014, -32.1099, 0.55 ) }
    dend_31 { pt3dadd( 144.625, -7.47216, -33.3147, 0.55 ) }
    dend_31 { pt3dadd( 146.556, -9.12738, -34.1876, 0.55 ) }
    dend_31 { pt3dadd( 148.183, -10.8458, -35.1144, 0.28 ) }
    dend_31 { pt3dadd( 148.65, -11.4681, -35.4525, 0.55 ) }
    dend_31 { pt3dadd( 149.63, -13.1866, -36.3538, 0.28 ) }
    dend_31 { pt3dadd( 150.409, -15.0959, -37.2967, 0.55 ) }
    dend_31 { pt3dadd( 151.067, -17.4988, -38.2505, 0.55 ) }
    dend_31 { pt3dadd( 151.523, -19.0988, -38.8026, 0.28 ) }
    dend_31 { pt3dadd( 151.695, -19.6717, -38.9707, 0.55 ) }
    dend_31 { pt3dadd( 152.149, -21.1018, -39.3712, 0.28 ) }
    dend_31 { pt3dadd( 152.785, -22.9769, -39.8516, 0.55 ) }
    dend_31 { pt3dadd( 154.498, -27.5369, -40.9141, 0.55 ) }
    dend_31 { pt3dadd( 155.403, -29.8498, -41.4062, 0.55 ) }
    dend_31 { pt3dadd( 156.249, -31.9753, -41.8401, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 70.1868, 17.5591, -8.22345, 0.55 ) }
    dend_30 { pt3dadd( 72.2929, 17.6556, -6.52923, 0.55 ) }
    dend_30 { pt3dadd( 72.9698, 17.6849, -6.0238, 0.55 ) }
    dend_30 { pt3dadd( 75.4899, 17.6761, -4.2548, 0.55 ) }
    dend_30 { pt3dadd( 78.3047, 17.7203, -2.23581, 0.55 ) }
    dend_30 { pt3dadd( 81.9078, 17.7668, 0.449379, 0.55 ) }
    dend_30 { pt3dadd( 82.9033, 17.781, 1.1843, 0.55 ) }
    dend_30 { pt3dadd( 84.6867, 17.7384, 2.48288, 0.55 ) }
    dend_30 { pt3dadd( 86.6472, 17.7385, 3.83224, 0.55 ) }
    dend_30 { pt3dadd( 88.9343, 17.8041, 5.29853, 0.55 ) }
    dend_30 { pt3dadd( 91.0908, 17.8961, 6.68904, 0.55 ) }
    dend_30 { pt3dadd( 92.279, 18.0011, 7.39781, 0.55 ) }
    dend_30 { pt3dadd( 93.6761, 18.1641, 8.22878, 0.55 ) }
    dend_30 { pt3dadd( 95.4083, 18.4156, 9.2269, 0.83 ) }
    dend_30 { pt3dadd( 98.2575, 18.8285, 10.5629, 0.55 ) }
    dend_30 { pt3dadd( 100.145, 19.0313, 11.3545, 0.83 ) }
    dend_30 { pt3dadd( 102.761, 19.1976, 12.3597, 0.55 ) }
    dend_30 { pt3dadd( 103.563, 19.2062, 12.6554, 0.55 ) }
    dend_30 { pt3dadd( 106.047, 19.1131, 13.5169, 0.55 ) }
    dend_30 { pt3dadd( 110.485, 18.6875, 14.8711, 0.55 ) }
    dend_30 { pt3dadd( 113.728, 18.2004, 15.782, 0.55 ) }
    dend_30 { pt3dadd( 116.287, 17.6959, 16.5601, 0.55 ) }
    dend_30 { pt3dadd( 118.885, 17.0437, 17.4395, 0.55 ) }
    dend_30 { pt3dadd( 119.43, 16.8919, 17.6269, 0.28 ) }
    dend_30 { pt3dadd( 120.535, 16.54, 18.0026, 0.83 ) }
    dend_30 { pt3dadd( 125.064, 15.0286, 19.5702, 0.55 ) }
    dend_30 { pt3dadd( 128.235, 13.9766, 20.6039, 0.55 ) }
    dend_30 { pt3dadd( 130.839, 13.1772, 21.5217, 0.55 ) }
    dend_30 { pt3dadd( 132.394, 12.6945, 22.0852, 0.83 ) }
    dend_30 { pt3dadd( 133.619, 12.3322, 22.5316, 0.28 ) }
    dend_30 { pt3dadd( 134.73, 12.0056, 22.9259, 0.55 ) }
    dend_30 { pt3dadd( 143.454, 11.5314, 27.3491, 0.55 ) }
    dend_30 { pt3dadd( 152.681, 9.62313, 30.0317, 0.55 ) }
    dend_30 { pt3dadd( 161.915, 8.85795, 33.2097, 0.55 ) }
    dend_30 { pt3dadd( 170.006, 6.76492, 38.3225, 0.55 ) }
    dend_30 { pt3dadd( 177.426, 3.42753, 43.7726, 0.55 ) }
    dend_30 { pt3dadd( 185.579, -1.22933, 46.4831, 0.55 ) }
    dend_30 { pt3dadd( 193.588, -6.69614, 47.5127, 0.55 ) }
    dend_30 { pt3dadd( 202.566, -10.5387, 48.0589, 0.55 ) }
    dend_30 { pt3dadd( 211.411, -14.5385, 49.2458, 0.55 ) }
    dend_30 { pt3dadd( 220.715, -17.5211, 49.8696, 0.55 ) }
    dend_30 { pt3dadd( 229.965, -20.1263, 51.7642, 0.55 ) }
    dend_30 { pt3dadd( 238.5, -24.306, 54.0739, 0.55 ) }
    dend_30 { pt3dadd( 247.34, -26.8735, 57.4211, 0.55 ) }
    dend_30 { pt3dadd( 255.828, -28.0651, 62.1653, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.16956, -30.5778, 6.94155, 1.38 ) }
    dend_13 { pt3dadd( 0.537482, -33.8865, 5.60657, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -2.16956, -30.5778, 6.94155, 0.55 ) }
    dend_12 { pt3dadd( -3.38733, -31.8612, 7.20476, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -4.75077, -33.5214, 7.49457, 0.55 ) }
    dend_12 { pt3dadd( -5.79535, -34.6101, 7.73294, 0.55 ) }
    dend_12 { pt3dadd( -6.70351, -35.5166, 7.80257, 0.55 ) }
    dend_12 { pt3dadd( -8.71484, -37.3836, 7.78209, 0.55 ) }
    dend_12 { pt3dadd( -10.1285, -38.6248, 7.73261, 0.55 ) }
    dend_12 { pt3dadd( -11.3954, -39.7374, 7.64528, 0.55 ) }
    dend_12 { pt3dadd( -14.6382, -42.4335, 7.42504, 0.55 ) }
    dend_12 { pt3dadd( -18.5197, -45.5455, 7.18959, 0.55 ) }
    dend_12 { pt3dadd( -21.5317, -47.8967, 6.96035, 0.55 ) }
    dend_12 { pt3dadd( -23.4629, -49.444, 6.78839, 0.55 ) }
    dend_12 { pt3dadd( -25.6836, -51.308, 6.59638, 0.55 ) }
    dend_12 { pt3dadd( -28.5173, -54.0085, 6.38319, 0.55 ) }
    dend_12 { pt3dadd( -30.194, -55.9503, 6.28662, 0.55 ) }
    dend_12 { pt3dadd( -32.2576, -58.7712, 6.32435, 0.55 ) }
    dend_12 { pt3dadd( -33.9202, -61.4357, 6.40856, 0.55 ) }
    dend_12 { pt3dadd( -35.6423, -64.788, 6.51322, 0.55 ) }
    dend_12 { pt3dadd( -37.311, -68.7512, 6.66465, 0.55 ) }
    dend_12 { pt3dadd( -38.265, -71.8053, 6.78981, 0.55 ) }
    dend_12 { pt3dadd( -38.6125, -73.3353, 6.93106, 0.55 ) }
    dend_12 { pt3dadd( -39.1679, -76.9511, 7.41509, 0.55 ) }
    dend_12 { pt3dadd( -39.6077, -80.3408, 7.94431, 0.55 ) }
    dend_12 { pt3dadd( -39.8196, -83.7742, 8.6942, 0.55 ) }
    dend_12 { pt3dadd( -39.9386, -85.7447, 9.23653, 0.55 ) }
    dend_12 { pt3dadd( -40.2213, -91.8446, 11.1297, 0.55 ) }
    dend_12 { pt3dadd( -40.2434, -92.2937, 11.2776, 0.55 ) }
    dend_12 { pt3dadd( -40.3126, -95.0493, 12.2398, 0.55 ) }
    dend_12 { pt3dadd( -40.6405, -99.9622, 14.1253, 0.55 ) }
    dend_12 { pt3dadd( -40.7807, -101.602, 14.6601, 0.55 ) }
    dend_12 { pt3dadd( -41.158, -104.152, 15.0688, 0.55 ) }
    dend_12 { pt3dadd( -41.3205, -105.097, 14.9966, 0.55 ) }
    dend_12 { pt3dadd( -41.8582, -108.292, 14.1144, 0.55 ) }
    dend_12 { pt3dadd( -42.1847, -110.361, 13.0762, 0.55 ) }
    dend_12 { pt3dadd( -42.7595, -113.65, 10.7247, 0.55 ) }
    dend_12 { pt3dadd( -43.3655, -117.679, 7.49662, 0.28 ) }
    dend_12 { pt3dadd( -43.5288, -118.673, 6.55875, 0.55 ) }
    dend_12 { pt3dadd( -43.8004, -120.178, 5.00085, 0.28 ) }
    dend_12 { pt3dadd( -43.8461, -120.405, 4.75428, 0.55 ) }
    dend_12 { pt3dadd( -44.0809, -121.646, 3.51406, 0.28 ) }
    dend_12 { pt3dadd( -44.1687, -122.067, 3.19805, 0.55 ) }
    dend_12 { pt3dadd( -44.5829, -124.264, 1.99683, 0.28 ) }
    dend_12 { pt3dadd( -44.7511, -125.009, 1.60401, 0.55 ) }
    dend_12 { pt3dadd( -45.2381, -127.164, 0.598727, 0.28 ) }
    dend_12 { pt3dadd( -45.3877, -127.843, 0.284134, 0.55 ) }
    dend_12 { pt3dadd( -45.9154, -130.185, -0.758363, 0.28 ) }
    dend_12 { pt3dadd( -46.1536, -131.263, -1.24476, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -9.73076, -65.3585, 49.9476, 0.55 ) }
    dend_10 { pt3dadd( -14.6166, -74.2246, 57.8704, 0.55 ) }
    dend_10 { pt3dadd( -20.896, -82.1042, 65.9086, 0.55 ) }
    dend_10 { pt3dadd( -26.6734, -90.7815, 73.4433, 0.55 ) }
    dend_10 { pt3dadd( -32.6371, -99.525, 80.7496, 0.55 ) }
    dend_10 { pt3dadd( -37.0109, -109.566, 87.394, 0.55 ) }
    dend_10 { pt3dadd( -41.3872, -119.185, 94.6635, 0.55 ) }
    dend_10 { pt3dadd( -43.7846, -130.654, 99.6805, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -9.73076, -65.3585, 49.9476, 0.55 ) }
    dend_3 { pt3dadd( -9.48721, -71.9124, 56.9543, 0.55 ) }
    dend_3 { pt3dadd( -8.42518, -79.4525, 62.7283, 0.55 ) }
    dend_3 { pt3dadd( -8.85859, -87.2979, 68.1595, 0.55 ) }
    dend_3 { pt3dadd( -9.58178, -95.687, 72.6247, 0.55 ) }
    dend_3 { pt3dadd( -9.96187, -103.979, 77.3119, 0.55 ) }
    dend_3 { pt3dadd( -10.445, -111.919, 82.5926, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -38.3806, 36.7073, -15.5336, 0.83 ) }
    dend_60 { pt3dadd( -38.3513, 37.2053, -16.7391, 0.83 ) }
    dend_60 { pt3dadd( -38.2905, 38.4686, -19.4799, 0.55 ) }
    dend_60 { pt3dadd( -38.2427, 39.037, -20.5904, 0.83 ) }
    dend_60 { pt3dadd( -38.1702, 39.6652, -21.716, 0.55 ) }
    dend_60 { pt3dadd( -38.0579, 40.3559, -22.7391, 0.55 ) }
    dend_60 { pt3dadd( -37.9801, 40.7224, -23.1925, 0.28 ) }
    dend_60 { pt3dadd( -37.9267, 40.9951, -23.4086, 0.55 ) }
    dend_60 { pt3dadd( -37.6511, 41.9732, -23.9135, 0.28 ) }
    dend_60 { pt3dadd( -37.5152, 42.3969, -24.1096, 0.55 ) }
    dend_60 { pt3dadd( -37.0442, 43.8942, -24.7231, 0.28 ) }
    dend_60 { pt3dadd( -36.6921, 45.1003, -25.1595, 0.55 ) }
    dend_60 { pt3dadd( -36.2207, 47.0205, -25.7579, 0.28 ) }
    dend_60 { pt3dadd( -35.8587, 48.7299, -26.2365, 0.28 ) }
    dend_60 { pt3dadd( -35.7076, 49.7027, -26.4721, 0.55 ) }
    dend_60 { pt3dadd( -35.6, 50.8688, -26.7334, 0.28 ) }
    dend_60 { pt3dadd( -35.5831, 51.4341, -26.8416, 0.55 ) }
    dend_60 { pt3dadd( -35.6314, 52.7574, -27.1357, 0.28 ) }
    dend_60 { pt3dadd( -35.7344, 53.635, -27.3614, 0.28 ) }
    dend_60 { pt3dadd( -35.8611, 54.492, -27.6038, 0.28 ) }
    dend_60 { pt3dadd( -35.9113, 54.9413, -27.7378, 0.55 ) }
    dend_60 { pt3dadd( -36.0284, 56.7294, -28.3454, 0.28 ) }
    dend_60 { pt3dadd( -36.1064, 58.8233, -29.121, 0.55 ) }
    dend_60 { pt3dadd( -36.1232, 59.5438, -29.3944, 0.55 ) }
    dend_60 { pt3dadd( -36.1475, 60.2731, -29.65, 0.55 ) }
    dend_60 { pt3dadd( -36.2906, 61.8282, -30.1974, 0.55 ) }
    dend_60 { pt3dadd( -36.4581, 62.8527, -30.5618, 0.28 ) }
    dend_60 { pt3dadd( -36.5688, 63.2461, -30.6936, 0.55 ) }
    dend_60 { pt3dadd( -36.9376, 64.3304, -31.0101, 0.28 ) }
    dend_60 { pt3dadd( -37.3895, 65.4779, -31.379, 0.55 ) }
    dend_60 { pt3dadd( -38.2098, 67.1314, -31.9332, 0.28 ) }
    dend_60 { pt3dadd( -38.6327, 67.8261, -32.1675, 0.28 ) }
    dend_60 { pt3dadd( -39.3697, 68.7813, -32.5551, 0.55 ) }
    dend_60 { pt3dadd( -40.2184, 69.7702, -32.993, 0.28 ) }
    dend_60 { pt3dadd( -40.3773, 69.9266, -33.0634, 0.55 ) }
    dend_60 { pt3dadd( -40.9595, 70.4294, -33.2905, 0.28 ) }
    dend_60 { pt3dadd( -42.9765, 72.0592, -33.9927, 0.55 ) }
    dend_60 { pt3dadd( -45.8529, 74.0558, -34.9817, 0.28 ) }
    dend_60 { pt3dadd( -46.3988, 74.3835, -35.1825, 0.55 ) }
    dend_60 { pt3dadd( -47.9134, 75.2233, -35.7372, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -48.5555, 75.5629, -35.9827, 0.28 ) }
    dend_60 { pt3dadd( -49.1231, 75.8376, -36.2153, 0.55 ) }
    dend_60 { pt3dadd( -50.8484, 76.4313, -36.9436, 0.28 ) }
    dend_60 { pt3dadd( -52.0716, 76.759, -37.3772, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -38.3806, 36.7073, -15.5336, 0.55 ) }
    dend_57 { pt3dadd( -38.4775, 37.9795, -15.8122, 0.55 ) }
    dend_57 { pt3dadd( -38.5494, 38.7387, -15.9033, 0.28 ) }
    dend_57 { pt3dadd( -38.7019, 39.302, -15.8266, 0.55 ) }
    dend_57 { pt3dadd( -39.0521, 40.5954, -15.6506, 0.28 ) }
    dend_57 { pt3dadd( -39.2981, 41.504, -15.5269, 0.55 ) }
    dend_57 { pt3dadd( -39.7515, 43.1788, -15.2989, 0.28 ) }
    dend_57 { pt3dadd( -40.0732, 44.0971, -15.018, 0.55 ) }
    dend_57 { pt3dadd( -41.4145, 46.3951, -13.5659, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -131.819, -61.9011, 2.14316, 0.55 ) }
    dend_52 { pt3dadd( -134.718, -65.8988, 1.19215, 0.55 ) }
    dend_52 { pt3dadd( -136.832, -70.2435, -0.142404, 0.55 ) }
    dend_52 { pt3dadd( -138.651, -74.2685, -2.53767, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -131.819, -61.9011, 2.14316, 0.55 ) }
    dend_49 { pt3dadd( -138.816, -70.0471, -1.50232, 0.55 ) }
    dend_49 { pt3dadd( -144.791, -78.2882, -6.49124, 0.55 ) }
    dend_49 { pt3dadd( -150.32, -86.6728, -11.7349, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -139.725, 11.6582, 42.8824, 0.55 ) }
    dend_47 { pt3dadd( -147.8, 10.7317, 47.2183, 0.55 ) }
    dend_47 { pt3dadd( -156.134, 11.2074, 51.1057, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -139.725, 11.6582, 42.8824, 0.55 ) }
    dend_46 { pt3dadd( -147.842, 10.5579, 44.8497, 0.55 ) }
    dend_46 { pt3dadd( -155.931, 10.7617, 47.2003, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 110.409, -57.3691, -105.349, 0.28 ) }
    dend_39 { pt3dadd( 118.032, -61.5814, -116.866, 0.28 ) }
    dend_39 { pt3dadd( 118.777, -62.056, -117.885, 0.55 ) }
    dend_39 { pt3dadd( 120.035, -62.8573, -119.605, 0.28 ) }
    dend_39 { pt3dadd( 121.094, -63.532, -121.053, 0.28 ) }
    dend_39 { pt3dadd( 122.496, -64.4251, -122.97, 0.55 ) }
    dend_39 { pt3dadd( 124.345, -65.6027, -125.497, 0.55 ) }
    dend_39 { pt3dadd( 126.65, -67.5935, -126.695, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 110.409, -57.3691, -105.349, 0.55 ) }
    dend_36 { pt3dadd( 111.263, -58.6796, -106.602, 0.55 ) }
    dend_36 { pt3dadd( 111.536, -59.2812, -107.155, 0.28 ) }
    dend_36 { pt3dadd( 111.948, -60.3215, -108.122, 0.55 ) }
    dend_36 { pt3dadd( 112.856, -62.6132, -110.255, 0.28 ) }
    dend_36 { pt3dadd( 113.485, -64.2014, -111.732, 0.55 ) }
    dend_36 { pt3dadd( 114.551, -66.8922, -114.236, 0.28 ) }
    dend_36 { pt3dadd( 115.754, -70.2164, -117.553, 0.28 ) }
    dend_36 { pt3dadd( 116.242, -71.7561, -119.107, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 156.249, -31.9753, -41.8401, 0.28 ) }
    dend_33 { pt3dadd( 158.375, -35.7542, -42.0218, 0.28 ) }
    dend_33 { pt3dadd( 161.037, -40.8435, -41.8748, 0.28 ) }
    dend_33 { pt3dadd( 162.711, -44.1762, -41.6564, 0.55 ) }
    dend_33 { pt3dadd( 163.744, -46.0503, -41.4546, 0.28 ) }
    dend_33 { pt3dadd( 164.291, -47.0609, -41.3371, 0.28 ) }
    dend_33 { pt3dadd( 167.008, -52.0324, -40.8266, 0.55 ) }
    dend_33 { pt3dadd( 167.639, -53.1772, -40.5833, 0.28 ) }
    dend_33 { pt3dadd( 169.097, -56.2243, -39.7624, 0.55 ) }
    dend_33 { pt3dadd( 170.334, -58.844, -39.1435, 0.28 ) }
    dend_33 { pt3dadd( 171.433, -60.973, -38.6774, 0.55 ) }
    dend_33 { pt3dadd( 172.714, -63.4775, -38.2586, 0.55 ) }
    dend_33 { pt3dadd( 174.751, -67.3325, -38.0382, 0.55 ) }
    dend_33 { pt3dadd( 175.239, -68.2686, -38.0153, 0.55 ) }
    dend_33 { pt3dadd( 176.968, -71.7449, -37.9649, 0.28 ) }
    dend_33 { pt3dadd( 177.627, -73.151, -37.9787, 0.55 ) }
    dend_33 { pt3dadd( 178.57, -74.9552, -38.0035, 0.28 ) }
    dend_33 { pt3dadd( 179.899, -77.4854, -38.1478, 0.55 ) }
    dend_33 { pt3dadd( 182.125, -81.3355, -38.9237, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 156.249, -31.9753, -41.8401, 0.55 ) }
    dend_32 { pt3dadd( 153.305, -31.6363, -41.7237, 0.55 ) }
    dend_32 { pt3dadd( 150.914, -31.361, -41.6292, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 0.537482, -33.8865, 5.60657, 0.83 ) }
    dend_17 { pt3dadd( 0.658871, -34.1607, 5.56943, 0.83 ) }
    dend_17 { pt3dadd( 2.11221, -36.5986, 5.36068, 0.83 ) }
    dend_17 { pt3dadd( 3.37295, -38.7323, 5.03378, 0.55 ) }
    dend_17 { pt3dadd( 4.37875, -40.4345, 4.77298, 0.55 ) }
    dend_17 { pt3dadd( 6.51662, -44.0526, 4.21865, 0.83 ) }
    dend_17 { pt3dadd( 9.10971, -48.441, 3.54628, 0.55 ) }
    dend_17 { pt3dadd( 10.5325, -50.7403, 3.23504, 0.83 ) }
    dend_17 { pt3dadd( 13.0845, -54.4075, 2.88092, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.537482, -33.8865, 5.60657, 0.55 ) }
    dend_14 { pt3dadd( -0.971204, -34.8872, 2.61826, 0.55 ) }
    dend_14 { pt3dadd( -2.5906, -35.9613, -0.589319, 0.55 ) }
    dend_14 { pt3dadd( -4.5023, -37.2292, -4.3759, 0.55 ) }
    dend_14 { pt3dadd( -6.82373, -38.769, -8.97402, 0.55 ) }
    dend_14 { pt3dadd( -8.14106, -39.6427, -11.5833, 0.55 ) }
    dend_14 { pt3dadd( -8.40569, -39.8182, -12.1075, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -10.445, -111.919, 82.5926, 0.55 ) }
    dend_7 { pt3dadd( -10.3027, -119.745, 88.6651, 0.55 ) }
    dend_7 { pt3dadd( -8.60014, -127.921, 93.9581, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -10.445, -111.919, 82.5926, 0.55 ) }
    dend_4 { pt3dadd( -10.8496, -118.975, 86.8499, 0.55 ) }
    dend_4 { pt3dadd( -11.6605, -125.877, 91.31, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -41.4145, 46.3951, -13.5659, 0.28 ) }
    dend_59 { pt3dadd( -42.5817, 48.5589, -11.8266, 0.28 ) }
    dend_59 { pt3dadd( -43.009, 49.3894, -11.0805, 0.55 ) }
    dend_59 { pt3dadd( -44.217, 51.7998, -8.87613, 0.28 ) }
    dend_59 { pt3dadd( -44.8341, 52.9806, -7.89447, 0.55 ) }
    dend_59 { pt3dadd( -46.5417, 56.1654, -5.33876, 0.28 ) }
    dend_59 { pt3dadd( -48.2773, 59.4023, -2.74122, 0.55 ) }
    dend_59 { pt3dadd( -51.1665, 64.5226, 1.63584, 0.28 ) }
    dend_59 { pt3dadd( -51.7806, 65.621, 2.56772, 0.55 ) }
    dend_59 { pt3dadd( -53.1296, 68.1597, 4.51882, 0.28 ) }
    dend_59 { pt3dadd( -53.649, 69.2036, 5.27766, 0.55 ) }
    dend_59 { pt3dadd( -60.2454, 76.5997, 12.2556, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -67.9009, 84.9594, 16.4421, 0.55 ) }
    dend_59 { pt3dadd( -74.0923, 93.7267, 21.9791, 0.55 ) }
    dend_59 { pt3dadd( -78.6243, 103.734, 26.8797, 0.55 ) }
    dend_59 { pt3dadd( -84.5402, 113.295, 31.1967, 0.55 ) }
    dend_59 { pt3dadd( -91.4546, 121.325, 37.0386, 0.55 ) }
    dend_59 { pt3dadd( -97.4483, 128.631, 44.6341, 0.55 ) }
    dend_59 { pt3dadd( -102.23, 134.894, 53.8791, 0.55 ) }
    dend_59 { pt3dadd( -107.026, 141.773, 62.6521, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -41.4145, 46.3951, -13.5659, 0.55 ) }
    dend_58 { pt3dadd( -43.4944, 46.2165, -11.9658, 0.55 ) }
    dend_58 { pt3dadd( -44.5792, 46.0848, -11.1261, 0.28 ) }
    dend_58 { pt3dadd( -45.3865, 45.9868, -10.5012, 0.55 ) }
    dend_58 { pt3dadd( -46.0593, 45.9051, -9.98033, 0.28 ) }
    dend_58 { pt3dadd( -46.5306, 45.8479, -9.61552, 0.55 ) }
    dend_58 { pt3dadd( -47.8301, 45.6901, -8.60955, 0.28 ) }
    dend_58 { pt3dadd( -48.7314, 45.4779, -8.03581, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -138.651, -74.2685, -2.53767, 0.55 ) }
    dend_54 { pt3dadd( -144.231, -87.5973, -1.13375, 0.55 ) }
    dend_54 { pt3dadd( -149.465, -100.778, 1.90905, 0.55 ) }
    dend_54 { pt3dadd( -153.662, -114.651, 2.40016, 0.55 ) }
    dend_54 { pt3dadd( -159.298, -127.817, 4.75504, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -138.651, -74.2685, -2.53767, 0.55 ) }
    dend_53 { pt3dadd( -142.817, -80.4206, -7.84955, 0.55 ) }
    dend_53 { pt3dadd( -146.602, -85.6731, -14.3299, 0.55 ) }
    dend_53 { pt3dadd( -151.094, -91.6496, -19.5836, 0.55 ) }
    dend_53 { pt3dadd( -157.407, -96.1337, -24.4932, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -150.32, -86.6728, -11.7349, 0.55 ) }
    dend_51 { pt3dadd( -155.445, -94.5195, -18.1782, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -150.32, -86.6728, -11.7349, 0.55 ) }
    dend_50 { pt3dadd( -154.464, -95.6039, -8.58653, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 126.65, -67.5935, -126.695, 0.28 ) }
    dend_41 { pt3dadd( 128.638, -68.7958, -127.706, 0.28 ) }
    dend_41 { pt3dadd( 129.561, -69.3544, -128.175, 0.55 ) }
    dend_41 { pt3dadd( 131.321, -70.4194, -129.071, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 126.65, -67.5935, -126.695, 0.55 ) }
    dend_40 { pt3dadd( 126.261, -68.3759, -128.201, 0.55 ) }
    dend_40 { pt3dadd( 125.481, -69.941, -131.213, 0.28 ) }
    dend_40 { pt3dadd( 125.227, -70.4508, -132.194, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 116.242, -71.7561, -119.107, 0.28 ) }
    dend_38 { pt3dadd( 117.518, -75.1224, -122.732, 0.28 ) }
    dend_38 { pt3dadd( 118.15, -76.7892, -124.526, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 116.242, -71.7561, -119.107, 0.55 ) }
    dend_37 { pt3dadd( 115.263, -72.1205, -118.726, 0.55 ) }
    dend_37 { pt3dadd( 112.536, -73.1366, -117.665, 0.28 ) }
    dend_37 { pt3dadd( 111.888, -73.378, -117.413, 0.55 ) }
    dend_37 { pt3dadd( 110.115, -74.0383, -116.723, 0.28 ) }
    dend_37 { pt3dadd( 108.973, -74.464, -116.278, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 13.0845, -54.4075, 2.88092, 0.83 ) }
    dend_23 { pt3dadd( 13.0984, -54.6039, 2.85498, 0.83 ) }
    dend_23 { pt3dadd( 13.3294, -57.1733, 2.58175, 0.83 ) }
    dend_23 { pt3dadd( 13.3527, -59.0928, 2.52697, 0.83 ) }
    dend_23 { pt3dadd( 13.273, -60.9399, 2.68842, 0.83 ) }
    dend_23 { pt3dadd( 13.1072, -63.3931, 3.10566, 0.83 ) }
    dend_23 { pt3dadd( 12.8529, -66.2157, 3.70501, 0.83 ) }
    dend_23 { pt3dadd( 12.6084, -69.3649, 4.54107, 0.83 ) }
    dend_23 { pt3dadd( 12.3939, -72.4216, 5.49758, 0.83 ) }
    dend_23 { pt3dadd( 11.8664, -76.1694, 6.62088, 0.83 ) }
    dend_23 { pt3dadd( 11.5116, -77.8904, 7.0513, 0.83 ) }
    dend_23 { pt3dadd( 11.2268, -79.186, 7.29188, 0.83 ) }
    dend_23 { pt3dadd( 10.6178, -81.6712, 7.7076, 0.83 ) }
    dend_23 { pt3dadd( 10.1068, -83.9007, 7.94543, 0.83 ) }
    dend_23 { pt3dadd( 9.19867, -88.6714, 7.86774, 0.83 ) }
    dend_23 { pt3dadd( 8.67979, -91.2874, 7.47247, 0.83 ) }
    dend_23 { pt3dadd( 8.1726, -93.7009, 6.92888, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 13.0845, -54.4075, 2.88092, 0.55 ) }
    dend_18 { pt3dadd( 11.9588, -56.7323, 2.88321, 0.55 ) }
    dend_18 { pt3dadd( 11.1084, -58.4213, 3.01478, 0.55 ) }
    dend_18 { pt3dadd( 10.5875, -59.5033, 3.21334, 0.55 ) }
    dend_18 { pt3dadd( 9.84501, -61.2003, 3.69974, 0.55 ) }
    dend_18 { pt3dadd( 8.45116, -64.5651, 4.89193, 0.55 ) }
    dend_18 { pt3dadd( 7.35664, -67.1154, 6.08222, 0.55 ) }
    dend_18 { pt3dadd( 6.46758, -69.1625, 7.26134, 0.55 ) }
    dend_18 { pt3dadd( 5.50862, -71.2312, 8.60002, 0.55 ) }
    dend_18 { pt3dadd( 4.69296, -72.9477, 9.80163, 0.28 ) }
    dend_18 { pt3dadd( 3.99289, -74.3525, 10.9934, 0.55 ) }
    dend_18 { pt3dadd( 2.63594, -76.9123, 13.5276, 0.55 ) }
    dend_18 { pt3dadd( 1.70548, -78.4819, 15.2498, 0.55 ) }
    dend_18 { pt3dadd( 1.17478, -79.3609, 16.205, 0.55 ) }
    dend_18 { pt3dadd( 0.498273, -80.396, 17.2724, 0.83 ) }
    dend_18 { pt3dadd( -1.52332, -83.4623, 20.2239, 0.28 ) }
    dend_18 { pt3dadd( -2.1896, -84.4767, 21.1721, 0.55 ) }
    dend_18 { pt3dadd( -3.32971, -86.3086, 22.8258, 0.28 ) }
    dend_18 { pt3dadd( -3.68319, -86.8737, 23.3781, 0.55 ) }
    dend_18 { pt3dadd( -4.43507, -88.2021, 24.6528, 0.28 ) }
    dend_18 { pt3dadd( -4.85396, -88.9569, 25.3205, 0.55 ) }
    dend_18 { pt3dadd( -6.33356, -91.4022, 26.7999, 0.55 ) }
    dend_18 { pt3dadd( -8.76543, -98.0576, 33.5685, 0.55 ) }
    dend_18 { pt3dadd( -10.7459, -104.415, 40.7716, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -8.40569, -39.8182, -12.1075, 0.55 ) }
    dend_16 { pt3dadd( -9.89348, -40.5504, -14.5953, 0.55 ) }
    dend_16 { pt3dadd( -10.3384, -40.7184, -15.3019, 0.55 ) }
    dend_16 { pt3dadd( -11.4711, -41.1406, -17.0211, 0.55 ) }
    dend_16 { pt3dadd( -13.9838, -41.9679, -20.6499, 0.28 ) }
    dend_16 { pt3dadd( -14.3656, -42.0801, -21.1605, 0.55 ) }
    dend_16 { pt3dadd( -15.9807, -42.603, -23.2141, 0.55 ) }
    dend_16 { pt3dadd( -18.2613, -43.3212, -25.7695, 0.55 ) }
    dend_16 { pt3dadd( -19.1393, -43.564, -26.7226, 0.28 ) }
    dend_16 { pt3dadd( -19.92, -43.7162, -27.5071, 0.28 ) }
    dend_16 { pt3dadd( -21.304, -43.9466, -28.6444, 0.55 ) }
    dend_16 { pt3dadd( -22.9732, -44.1415, -30.1002, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -24.502, -44.1768, -31.483, 0.55 ) }
    dend_16 { pt3dadd( -25.6871, -44.0962, -32.5271, 0.55 ) }
    dend_16 { pt3dadd( -26.4942, -43.9654, -33.2745, 0.55 ) }
    dend_16 { pt3dadd( -28.8436, -43.4618, -35.55, 0.55 ) }
    dend_16 { pt3dadd( -31.3243, -42.7431, -37.8925, 0.55 ) }
    dend_16 { pt3dadd( -32.3544, -42.383, -38.8318, 0.28 ) }
    dend_16 { pt3dadd( -33.3288, -42.0581, -39.7444, 0.55 ) }
    dend_16 { pt3dadd( -35.3161, -41.542, -41.5733, 0.28 ) }
    dend_16 { pt3dadd( -35.9873, -41.3897, -42.1813, 0.83 ) }
    dend_16 { pt3dadd( -37.2639, -41.0895, -43.2221, 0.28 ) }
    dend_16 { pt3dadd( -38.2177, -40.9491, -43.8414, 0.55 ) }
    dend_16 { pt3dadd( -39.6113, -40.7963, -44.7114, 0.28 ) }
    dend_16 { pt3dadd( -40.1706, -40.728, -45.0387, 0.55 ) }
    dend_16 { pt3dadd( -41.2213, -40.6221, -45.5875, 0.55 ) }
    dend_16 { pt3dadd( -42.8177, -40.3002, -46.3543, 0.55 ) }
    dend_16 { pt3dadd( -43.8717, -40.025, -46.7953, 0.28 ) }
    dend_16 { pt3dadd( -44.7325, -39.6982, -47.0823, 0.55 ) }
    dend_16 { pt3dadd( -45.7418, -39.19, -47.4249, 0.28 ) }
    dend_16 { pt3dadd( -45.9062, -39.0932, -47.4869, 0.55 ) }
    dend_16 { pt3dadd( -47.3691, -38.1644, -48.3266, 0.28 ) }
    dend_16 { pt3dadd( -48.4058, -37.4674, -49.0551, 0.55 ) }
    dend_16 { pt3dadd( -49.7285, -36.4506, -50.2197, 0.83 ) }
    dend_16 { pt3dadd( -50.7887, -35.5847, -51.3156, 0.28 ) }
    dend_16 { pt3dadd( -51.0561, -35.363, -51.6298, 0.55 ) }
    dend_16 { pt3dadd( -53.0801, -33.6976, -54.1746, 0.28 ) }
    dend_16 { pt3dadd( -53.4256, -33.4128, -54.6618, 0.55 ) }
    dend_16 { pt3dadd( -54.4248, -32.4884, -56.178, 0.28 ) }
    dend_16 { pt3dadd( -54.6822, -32.2506, -56.5717, 0.55 ) }
    dend_16 { pt3dadd( -55.3553, -31.6323, -57.5251, 0.28 ) }
    dend_16 { pt3dadd( -55.8402, -31.1877, -58.1631, 0.55 ) }
    dend_16 { pt3dadd( -56.9679, -30.1963, -59.3887, 0.28 ) }
    dend_16 { pt3dadd( -57.6472, -29.663, -60.0863, 0.55 ) }
    dend_16 { pt3dadd( -59.1227, -28.6298, -61.4857, 0.28 ) }
    dend_16 { pt3dadd( -59.5655, -28.3494, -61.8947, 0.55 ) }
    dend_16 { pt3dadd( -60.2695, -27.9701, -62.5075, 0.28 ) }
    dend_16 { pt3dadd( -60.8731, -27.6509, -62.9941, 0.55 ) }
    dend_16 { pt3dadd( -62.1459, -27.007, -63.9212, 0.28 ) }
    dend_16 { pt3dadd( -62.5328, -26.8225, -64.1867, 0.55 ) }
    dend_16 { pt3dadd( -65.4343, -25.3925, -66.0143, 0.28 ) }
    dend_16 { pt3dadd( -66.4673, -24.8154, -66.5593, 0.55 ) }
    dend_16 { pt3dadd( -68.3296, -23.6943, -67.4056, 0.28 ) }
    dend_16 { pt3dadd( -69.1723, -23.1548, -67.7596, 0.55 ) }
    dend_16 { pt3dadd( -71.1266, -21.9332, -68.4551, 0.28 ) }
    dend_16 { pt3dadd( -71.8517, -21.5176, -68.678, 0.55 ) }
    dend_16 { pt3dadd( -74.5133, -20.2529, -69.3399, 0.28 ) }
    dend_16 { pt3dadd( -75.6326, -19.8643, -69.6059, 0.55 ) }
    dend_16 { pt3dadd( -77.2476, -19.5692, -69.9676, 0.55 ) }
    dend_16 { pt3dadd( -78.2484, -19.4497, -70.1663, 0.55 ) }
    dend_16 { pt3dadd( -80.3152, -19.2589, -70.415, 0.28 ) }
    dend_16 { pt3dadd( -82.3669, -19.0919, -70.5329, 0.28 ) }
    dend_16 { pt3dadd( -84.0818, -18.9472, -70.5821, 0.55 ) }
    dend_16 { pt3dadd( -86.1936, -18.5996, -70.4158, 0.28 ) }
    dend_16 { pt3dadd( -87.2435, -18.3053, -70.1953, 0.55 ) }
    dend_16 { pt3dadd( -89.7346, -17.2265, -69.4239, 0.28 ) }
    dend_16 { pt3dadd( -91.0118, -16.4334, -68.723, 0.55 ) }
    dend_16 { pt3dadd( -91.8291, -15.7986, -68.0884, 0.28 ) }
    dend_16 { pt3dadd( -92.7385, -15.0854, -67.1481, 0.55 ) }
    dend_16 { pt3dadd( -93.8657, -14.1533, -65.8271, 0.28 ) }
    dend_16 { pt3dadd( -94.2969, -13.8246, -65.332, 0.55 ) }
    dend_16 { pt3dadd( -96.5773, -12.3445, -63.0545, 0.28 ) }
    dend_16 { pt3dadd( -97.3511, -11.8773, -62.2954, 0.55 ) }
    dend_16 { pt3dadd( -99.1926, -10.8418, -60.4415, 0.28 ) }
    dend_16 { pt3dadd( -100.194, -10.292, -59.4351, 0.55 ) }
    dend_16 { pt3dadd( -101.019, -9.84162, -58.6095, 0.55 ) }
    dend_16 { pt3dadd( -102.008, -9.31094, -57.6509, 0.28 ) }
    dend_16 { pt3dadd( -102.537, -9.03968, -57.2432, 0.55 ) }
    dend_16 { pt3dadd( -104.318, -8.06928, -55.9894, 0.28 ) }
    dend_16 { pt3dadd( -105.239, -7.45166, -55.3119, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -8.40569, -39.8182, -12.1075, 0.55 ) }
    dend_15 { pt3dadd( -7.50785, -40.0802, -13.2433, 0.55 ) }
    dend_15 { pt3dadd( -6.55692, -40.1911, -14.3613, 0.55 ) }
    dend_15 { pt3dadd( -5.29169, -40.2128, -15.6939, 0.55 ) }
    dend_15 { pt3dadd( -4.20598, -40.1208, -16.7353, 0.55 ) }
    dend_15 { pt3dadd( 3.45813, -38.6026, -23.0268, 0.55 ) }
    dend_15 { pt3dadd( 5.19842, -38.0359, -24.4685, 0.55 ) }
    dend_15 { pt3dadd( 7.76179, -36.9864, -26.6517, 0.55 ) }
    dend_15 { pt3dadd( 9.57672, -36.174, -28.2086, 0.55 ) }
    dend_15 { pt3dadd( 11.3747, -35.2656, -29.6841, 0.28 ) }
    dend_15 { pt3dadd( 14.2223, -33.6951, -31.8148, 0.55 ) }
    dend_15 { pt3dadd( 18.5809, -31.2194, -34.7498, 0.28 ) }
    dend_15 { pt3dadd( 18.9179, -31.0824, -35.1005, 0.55 ) }
    dend_15 { pt3dadd( 20.5369, -30.7289, -37.9446, 0.28 ) }
    dend_15 { pt3dadd( 21.2988, -30.6072, -40.0395, 0.55 ) }
    dend_15 { pt3dadd( 21.9028, -30.629, -42.3846, 0.55 ) }
    dend_15 { pt3dadd( 22.9158, -30.878, -46.6127, 0.55 ) }
    dend_15 { pt3dadd( 24.9229, -31.4261, -54.9037, 0.55 ) }
    dend_15 { pt3dadd( 26.3653, -31.8567, -60.4451, 0.55 ) }
    dend_15 { pt3dadd( 26.9128, -32.0249, -62.3432, 0.55 ) }
    dend_15 { pt3dadd( 30.811, -33.0439, -74.7273, 0.55 ) }
    dend_15 { pt3dadd( 32.0104, -33.2767, -78.0338, 0.55 ) }
    dend_15 { pt3dadd( 32.8227, -33.4135, -79.837, 0.55 ) }
    dend_15 { pt3dadd( 35.0764, -33.8563, -83.8714, 0.55 ) }
    dend_15 { pt3dadd( 41.021, -35.4757, -93.2219, 0.55 ) }
    dend_15 { pt3dadd( 42.7242, -36.0311, -95.6687, 0.28 ) }
    dend_15 { pt3dadd( 43.7963, -36.4221, -96.9852, 0.55 ) }
    dend_15 { pt3dadd( 45.4174, -37.0998, -98.9038, 0.28 ) }
    dend_15 { pt3dadd( 46.1378, -37.4776, -99.6384, 0.55 ) }
    dend_15 { pt3dadd( 48.7486, -39.0402, -101.201, 0.28 ) }
    dend_15 { pt3dadd( 50.8113, -40.9537, -101.074, 0.55 ) }
    dend_15 { pt3dadd( 52.023, -42.2929, -100.902, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 53.0959, -43.7447, -100.581, 0.55 ) }
    dend_15 { pt3dadd( 53.9983, -45.3032, -100.189, 0.28 ) }
    dend_15 { pt3dadd( 54.3801, -46.1011, -100.033, 0.55 ) }
    dend_15 { pt3dadd( 55.2316, -48.1775, -99.5663, 0.28 ) }
    dend_15 { pt3dadd( 55.4562, -48.7979, -99.5338, 0.55 ) }
    dend_15 { pt3dadd( 56.7606, -52.3609, -99.5508, 0.28 ) }
    dend_15 { pt3dadd( 57.4447, -54.0193, -99.7646, 0.55 ) }
    dend_15 { pt3dadd( 59.0979, -57.5828, -100.6, 0.28 ) }
    dend_15 { pt3dadd( 59.7845, -58.9032, -101.045, 0.55 ) }
    dend_15 { pt3dadd( 62.2505, -63.2569, -102.741, 0.28 ) }
    dend_15 { pt3dadd( 62.8639, -64.3172, -103.197, 0.55 ) }
    dend_15 { pt3dadd( 64.7323, -67.6737, -104.776, 0.28 ) }
    dend_15 { pt3dadd( 65.1155, -68.4557, -105.093, 0.55 ) }
    dend_15 { pt3dadd( 66.0568, -70.5181, -105.924, 0.28 ) }
    dend_15 { pt3dadd( 66.6322, -71.7191, -106.52, 0.55 ) }
    dend_15 { pt3dadd( 67.2523, -72.9037, -107.192, 0.55 ) }
    dend_15 { pt3dadd( 68.4882, -75.2667, -108.515, 0.28 ) }
    dend_15 { pt3dadd( 69.4138, -76.7413, -109.482, 0.55 ) }
    dend_15 { pt3dadd( 72.567, -80.4889, -112.617, 0.28 ) }
    dend_15 { pt3dadd( 73.8431, -81.7252, -113.9, 0.55 ) }
    dend_15 { pt3dadd( 74.7455, -82.5163, -114.766, 0.28 ) }
    dend_15 { pt3dadd( 75.6834, -83.2462, -115.626, 0.55 ) }
    dend_15 { pt3dadd( 78.6436, -85.3129, -118.214, 0.28 ) }
    dend_15 { pt3dadd( 80.8943, -86.911, -120.106, 0.55 ) }
    dend_15 { pt3dadd( 84.7425, -89.9105, -123.008, 0.28 ) }
    dend_15 { pt3dadd( 85.9576, -90.8449, -123.916, 0.55 ) }
    dend_15 { pt3dadd( 88.328, -92.5676, -125.438, 0.28 ) }
    dend_15 { pt3dadd( 89.1263, -93.1328, -125.877, 0.55 ) }
    dend_15 { pt3dadd( 90.4417, -94.0343, -126.345, 0.28 ) }
    dend_15 { pt3dadd( 91.6109, -94.7966, -126.655, 0.55 ) }
    dend_15 { pt3dadd( 94.8078, -96.6993, -127.162, 0.28 ) }
    dend_15 { pt3dadd( 98.4963, -98.7365, -127.682, 0.28 ) }
    dend_15 { pt3dadd( 100.374, -99.6841, -127.813, 0.28 ) }
    dend_15 { pt3dadd( 102.277, -100.585, -128.06, 0.55 ) }
    dend_15 { pt3dadd( 105.075, -101.779, -128.435, 0.28 ) }
    dend_15 { pt3dadd( 106.322, -102.291, -128.576, 0.83 ) }
    dend_15 { pt3dadd( 109.494, -103.637, -128.812, 0.28 ) }
    dend_15 { pt3dadd( 110.867, -104.252, -128.991, 0.55 ) }
    dend_15 { pt3dadd( 116.88, -107.177, -130.055, 0.28 ) }
    dend_15 { pt3dadd( 119.883, -108.678, -130.829, 0.28 ) }
    dend_15 { pt3dadd( 122.065, -109.772, -131.536, 0.55 ) }
    dend_15 { pt3dadd( 123.33, -110.437, -132.092, 0.55 ) }
    dend_15 { pt3dadd( 126.67, -112.251, -133.835, 0.28 ) }
    dend_15 { pt3dadd( 129.764, -114.086, -135.592, 0.55 ) }
    dend_15 { pt3dadd( 132.569, -115.844, -137.191, 0.28 ) }
    dend_15 { pt3dadd( 135.091, -117.471, -138.775, 0.55 ) }
    dend_15 { pt3dadd( 137.182, -118.792, -140.072, 0.28 ) }
    dend_15 { pt3dadd( 138.918, -119.749, -141.04, 0.55 ) }
    dend_15 { pt3dadd( 143.158, -121.824, -143.18, 0.28 ) }
    dend_15 { pt3dadd( 145.314, -122.871, -144.174, 0.55 ) }
    dend_15 { pt3dadd( 148.559, -124.451, -145.548, 0.28 ) }
    dend_15 { pt3dadd( 151.229, -125.669, -146.611, 0.55 ) }
    dend_15 { pt3dadd( 157.519, -128.255, -149.112, 0.28 ) }
    dend_15 { pt3dadd( 160.091, -129.171, -150.304, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -8.60014, -127.921, 93.9581, 0.55 ) }
    dend_9 { pt3dadd( -7.67999, -137.687, 99.3094, 0.55 ) }
    dend_9 { pt3dadd( -4.91958, -147.999, 102.5, 0.55 ) }
    dend_9 { pt3dadd( -3.25505, -158.073, 106.996, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -8.60014, -127.921, 93.9581, 0.55 ) }
    dend_8 { pt3dadd( -7.4611, -136.839, 101.798, 0.55 ) }
    dend_8 { pt3dadd( -8.66121, -144.839, 110.629, 0.55 ) }
    dend_8 { pt3dadd( -10.7623, -150.96, 120.776, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -11.6605, -125.877, 91.31, 0.55 ) }
    dend_6 { pt3dadd( -11.398, -134.282, 96.2989, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -11.6605, -125.877, 91.31, 0.55 ) }
    dend_5 { pt3dadd( -13.4913, -136.097, 97.7299, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 8.1726, -93.7009, 6.92888, 0.83 ) }
    dend_25 { pt3dadd( 9.13607, -97.9204, 7.59046, 0.83 ) }
    dend_25 { pt3dadd( 10.1175, -101.472, 8.41427, 0.83 ) }
    dend_25 { pt3dadd( 11.093, -105.003, 9.23315, 0.83 ) }
    dend_25 { pt3dadd( 12.0195, -108.357, 10.0108, 0.83 ) }
    dend_25 { pt3dadd( 13.4472, -113.524, 11.2093, 0.83 ) }
    dend_25 { pt3dadd( 14.8646, -118.655, 12.399, 0.83 ) }
    dend_25 { pt3dadd( 16.086, -122.044, 13.6311, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 8.1726, -93.7009, 6.92888, 0.55 ) }
    dend_24 { pt3dadd( 9.75861, -96.0334, 6.61361, 0.55 ) }
    dend_24 { pt3dadd( 10.9026, -97.861, 6.06444, 0.55 ) }
    dend_24 { pt3dadd( 11.6572, -99.2139, 5.54262, 0.55 ) }
    dend_24 { pt3dadd( 12.261, -100.798, 4.79202, 0.83 ) }
    dend_24 { pt3dadd( 12.7796, -102.6, 3.75374, 0.55 ) }
    dend_24 { pt3dadd( 13.2869, -104.362, 2.73817, 0.83 ) }
    dend_24 { pt3dadd( 13.6903, -106.274, 1.4891, 0.55 ) }
    dend_24 { pt3dadd( 13.8979, -107.386, 0.664154, 0.83 ) }
    dend_24 { pt3dadd( 14.3567, -110.985, -2.24359, 0.55 ) }
    dend_24 { pt3dadd( 14.448, -113.809, -4.64457, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -10.7459, -104.415, 40.7716, 0.55 ) }
    dend_20 { pt3dadd( -14.9832, -112.241, 45.6927, 0.55 ) }
    dend_20 { pt3dadd( -20.6253, -119.117, 50.6993, 0.55 ) }
    dend_20 { pt3dadd( -27.0065, -125.065, 56.0558, 0.55 ) }
    dend_20 { pt3dadd( -34.2673, -129.857, 61.5088, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -10.7459, -104.415, 40.7716, 0.55 ) }
    dend_19 { pt3dadd( -13.4236, -110.986, 46.4578, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 16.086, -122.044, 13.6311, 0.55 ) }
    dend_27 { pt3dadd( 16.1006, -123.441, 14.0098, 0.55 ) }
    dend_27 { pt3dadd( 16.1551, -125.223, 14.5511, 0.55 ) }
    dend_27 { pt3dadd( 16.2096, -126.906, 15.0531, 0.55 ) }
    dend_27 { pt3dadd( 16.2398, -128.102, 15.3881, 0.55 ) }
    dend_27 { pt3dadd( 16.2791, -130.238, 15.9467, 0.55 ) }
    dend_27 { pt3dadd( 16.522, -136.237, 17.3901, 0.55 ) }
    dend_27 { pt3dadd( 16.6774, -138.273, 17.8067, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 16.8122, -139.707, 18.0304, 0.55 ) }
    dend_27 { pt3dadd( 17.0156, -141.345, 18.1591, 0.55 ) }
    dend_27 { pt3dadd( 17.1825, -142.61, 18.1412, 0.55 ) }
    dend_27 { pt3dadd( 17.6931, -145.565, 18.0018, 0.55 ) }
    dend_27 { pt3dadd( 18.0037, -147.811, 17.8717, 0.55 ) }
    dend_27 { pt3dadd( 18.2352, -149.284, 17.8403, 0.55 ) }
    dend_27 { pt3dadd( 18.769, -153.107, 17.9501, 0.55 ) }
    dend_27 { pt3dadd( 19.0808, -155.679, 18.1329, 0.55 ) }
    dend_27 { pt3dadd( 19.4481, -158.995, 18.5585, 0.55 ) }
    dend_27 { pt3dadd( 19.8355, -162.76, 19.3428, 0.55 ) }
    dend_27 { pt3dadd( 20.1651, -165.271, 20.0513, 0.55 ) }
    dend_27 { pt3dadd( 20.3849, -166.754, 20.5191, 0.55 ) }
    dend_27 { pt3dadd( 20.5634, -168.122, 20.9397, 0.55 ) }
    dend_27 { pt3dadd( 20.8405, -169.853, 21.3988, 0.55 ) }
    dend_27 { pt3dadd( 21.5348, -174.026, 22.2103, 0.55 ) }
    dend_27 { pt3dadd( 21.874, -175.639, 22.4791, 0.55 ) }
    dend_27 { pt3dadd( 22.2122, -177.435, 22.7547, 0.55 ) }
    dend_27 { pt3dadd( 22.7016, -180.134, 23.1488, 0.55 ) }
    dend_27 { pt3dadd( 22.9761, -182.212, 23.446, 0.55 ) }
    dend_27 { pt3dadd( 23.1297, -184.189, 23.6727, 0.55 ) }
    dend_27 { pt3dadd( 23.1925, -186.076, 23.8669, 0.55 ) }
    dend_27 { pt3dadd( 23.2153, -187.919, 24.0748, 0.55 ) }
    dend_27 { pt3dadd( 23.2429, -189.23, 24.2118, 0.55 ) }
    dend_27 { pt3dadd( 23.3213, -191.375, 24.3658, 0.55 ) }
    dend_27 { pt3dadd( 23.4326, -193.949, 24.3459, 0.55 ) }
    dend_27 { pt3dadd( 23.5444, -195.197, 24.251, 0.55 ) }
    dend_27 { pt3dadd( 23.6772, -196.293, 24.0879, 0.55 ) }
    dend_27 { pt3dadd( 24.0563, -198.355, 23.6826, 0.55 ) }
    dend_27 { pt3dadd( 24.2932, -199.663, 23.3855, 0.55 ) }
    dend_27 { pt3dadd( 24.5868, -201.274, 23.0854, 0.55 ) }
    dend_27 { pt3dadd( 24.7313, -202.409, 22.932, 0.55 ) }
    dend_27 { pt3dadd( 25.0222, -205.362, 22.6347, 0.55 ) }
    dend_27 { pt3dadd( 25.1422, -207.576, 22.556, 0.55 ) }
    dend_27 { pt3dadd( 25.1939, -211.007, 22.6995, 0.55 ) }
    dend_27 { pt3dadd( 25.2177, -213.222, 23.0132, 0.55 ) }
    dend_27 { pt3dadd( 25.2041, -215.548, 23.413, 0.28 ) }
    dend_27 { pt3dadd( 25.165, -216.484, 23.6059, 0.28 ) }
    dend_27 { pt3dadd( 25.0029, -218.758, 24.2763, 0.28 ) }
    dend_27 { pt3dadd( 24.7881, -220.861, 25.0563, 0.28 ) }
    dend_27 { pt3dadd( 24.6797, -223.636, 26.4408, 0.28 ) }
    dend_27 { pt3dadd( 25.6849, -229.84, 28.1884, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 16.086, -122.044, 13.6311, 0.55 ) }
    dend_26 { pt3dadd( 16.7564, -122.406, 14.5408, 0.55 ) }
    dend_26 { pt3dadd( 18.0293, -123.337, 16.5223, 0.55 ) }
    dend_26 { pt3dadd( 19.0758, -124.255, 18.288, 0.28 ) }
    dend_26 { pt3dadd( 20.1576, -125.301, 20.2248, 0.55 ) }
    dend_26 { pt3dadd( 20.6942, -125.972, 21.5107, 0.28 ) }
    dend_26 { pt3dadd( 21.4847, -127.185, 23.8784, 0.55 ) }
    dend_26 { pt3dadd( 21.6329, -127.831, 25.0427, 0.28 ) }
    dend_26 { pt3dadd( 21.642, -128.066, 25.5048, 0.28 ) }
    dend_26 { pt3dadd( 21.6508, -128.403, 26.3098, 0.55 ) }
    dend_26 { pt3dadd( 21.8268, -129.51, 29.336, 0.28 ) }
    dend_26 { pt3dadd( 21.9338, -129.941, 30.5997, 0.55 ) }
    dend_26 { pt3dadd( 22.5393, -131.185, 34.2026, 0.28 ) }
    dend_26 { pt3dadd( 22.9635, -131.796, 36.0856, 0.28 ) }
    dend_26 { pt3dadd( 23.5904, -132.578, 38.355, 0.55 ) }
    dend_26 { pt3dadd( 24.7365, -133.785, 41.5603, 0.28 ) }
    dend_26 { pt3dadd( 24.9262, -133.944, 41.9653, 0.55 ) }
    dend_26 { pt3dadd( 25.9656, -134.716, 43.8683, 0.28 ) }
    dend_26 { pt3dadd( 26.0752, -134.788, 44.0274, 0.55 ) }
    dend_26 { pt3dadd( 27.01, -135.634, 45.4619, 0.28 ) }
    dend_26 { pt3dadd( 27.4211, -136.097, 46.1758, 0.55 ) }
    dend_26 { pt3dadd( 30.7517, -139.524, 52.0919, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -34.2673, -129.857, 61.5088, 0.55 ) }
    dend_22 { pt3dadd( -40.7325, -134.471, 68.3249, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -34.2673, -129.857, 61.5088, 0.55 ) }
    dend_21 { pt3dadd( -40.2513, -137.784, 64.124, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 7
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 17
    dend_48 nseg = 5
    dend_45 nseg = 3
    dend_42 nseg = 7
    dend_35 nseg = 5
    dend_31 nseg = 5
    dend_30 nseg = 11
    dend_12 nseg = 7
    dend_10 nseg = 5
    dend_3 nseg = 3
    dend_60 nseg = 3
    dend_33 nseg = 3
    dend_59 nseg = 7
    dend_54 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 7
    dend_15 nseg = 13
    dend_20 nseg = 3
    dend_27 nseg = 5
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L5_BP_55bc20256d_0_0


