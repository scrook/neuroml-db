// Cell: cACint209_L6_SBC_63156a236c_0_0
/*
{
  "id" : "cACint209_L6_SBC_63156a236c_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.488402, 10.6886, -0.10439, 2.1741", "0.446743, 9.60874, -0.0969525, 3.70718", "0.405084, 8.52883, -0.0895152, 5.34259", "0.363425, 7.44892, -0.0820778, 6.31081", "0.321766, 6.36901, -0.0746405, 7.2239", "0.280106, 5.2891, -0.0672032, 7.79497", "0.238447, 4.20919, -0.0597659, 8.16787", "0.196788, 3.12928, -0.0523285, 8.65603", "0.155129, 2.04937, -0.0448912, 9.27596", "0.11347, 0.969459, -0.0374539, 9.68183", "0.0718107, -0.110451, -0.0300165, 9.60108", "0.0301515, -1.19036, -0.0225792, 9.40911", "-0.0115077, -2.27027, -0.0151419, 8.85229", "-0.0531668, -3.35018, -0.00770454, 8.34531", "-0.094826, -4.43009, -2.67214E-4, 7.89073", "-0.136485, -5.51, 0.00717012, 7.34681", "-0.178144, -6.58991, 0.0146074, 6.74183", "-0.219803, -7.66982, 0.0220448, 6.06339", "-0.261463, -8.74973, 0.0294821, 5.33412", "-0.303122, -9.82964, 0.0369194, 3.6506", "-0.344781, -10.9096, 0.0443568, 2.18196" ]
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "1.87458, 3.07242, 11.4844, 0.81", "1.37229, 4.05051, 11.4844, 0.81", "0.816372, 5.13303, 11.4844, 0.81", "-0.00429189, 6.73108, 11.4844, 0.81", "-0.647058, 7.98272, 11.4844, 0.81", "-1.42197, 9.49169, 11.4844, 1.4", "-1.62018, 9.87766, 11.4844, 1.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999773444601353
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-1.37542, -9.69758, 0.224411, 4.05", "-1.37542, -9.69758, 0.224411, 4.05", "-1.76379, -11.0011, 0.23221, 3.61", "-2.30216, -12.908, 0.190308, 2.87", "-2.7575, -14.6809, 0.0563411, 2.36", "-3.1563, -16.406, -0.0809829, 2.36", "-3.53615, -18.2192, -0.207294, 2.65", "-3.84538, -19.7679, -0.324726, 2.65", "-4.10179, -21.1838, -0.448599, 2.8", "-4.44234, -23.3852, -0.669882, 2.43", "-4.70037, -25.339, -0.892938, 2.28", "-4.9283, -27.4357, -1.15759, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999773444601353
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.565422, 10.3624, -2.89559, 3.17", "-0.565422, 10.3624, -2.89559, 3.17", "-2.01624, 11.8441, -2.99819, 2.8", "-3.4303, 13.2208, -3.09254, 2.8", "-4.70752, 14.4381, -3.17227, 2.8", "-6.33834, 16.0097, -3.25816, 2.8", "-7.58157, 17.2771, -3.31566, 2.58", "-8.44976, 18.2084, -3.34936, 2.58", "-9.18318, 19.0538, -3.371, 2.36", "-9.84261, 19.9553, -3.38068, 1.92", "-10.6638, 21.5256, -3.38275, 1.92", "-11.1198, 23.1053, -3.36984, 1.92", "-11.2866, 24.5057, -3.36111, 1.92", "-11.2609, 25.7078, -3.35807, 2.21", "-11.0783, 26.986, -3.42876, 2.21", "-10.8178, 28.0488, -3.54315, 1.84", "-10.3168, 29.5899, -3.78251, 1.84", "-9.96211, 30.5832, -3.96753, 1.84", "-9.5569, 31.6972, -4.22597, 1.84", "-8.822, 33.8548, -4.82377, 1.69", "-8.56316, 34.7412, -5.10251, 1.69", "-8.23942, 36.0724, -5.62843, 1.69", "-8.01906, 37.3029, -6.20802, 1.84", "-7.88447, 38.3525, -6.75342, 1.99", "-7.81755, 39.3741, -7.31115, 1.99", "-7.77642, 40.5271, -7.94798, 1.99", "-7.75988, 42.2424, -9.00462, 2.14", "-7.77646, 43.1471, -9.63864, 2.14", "-7.81371, 43.9549, -10.2614, 2.14", "-7.87049, 44.7592, -10.8821, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999773444601353,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.344781, -10.9096, 0.0443568, 0.553183", "-0.922998, -25.8985, 0.0443568, 0.553183", "-1.50121, -40.8873, 0.0443568, 0.553183" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-1.62018, 9.87766, 11.4844, 0.81", "-2.23274, 12.6261, 9.81665, 0.81", "-2.54261, 13.9926, 9.08275, 0.81", "-2.81373, 15.0458, 8.57469, 1.03", "-3.10074, 16.0179, 8.14579, 1.03", "-3.50328, 17.2159, 7.65574, 0.59", "-3.94963, 18.3952, 7.21211, 0.37", "-4.42206, 19.4723, 6.96406, 0.37", "-4.87909, 20.4208, 6.75085, 0.59", "-5.25953, 21.1943, 6.57108, 0.59", "-5.63256, 21.903, 6.39841, 0.66", "-6.15342, 22.8731, 6.09181, 0.59", "-6.67027, 23.8192, 5.66765, 0.44", "-7.26683, 25.0088, 4.9176, 0.44", "-7.52293, 25.595, 4.48594, 0.96", "-7.84342, 26.4201, 3.84837, 1.33", "-8.09875, 27.1813, 3.26164, 1.55", "-8.48337, 28.5343, 2.24681, 1.03", "-8.93231, 30.5068, 0.922279, 0.52", "-9.01129, 31.0438, 0.61947, 0.88", "-9.09131, 32.1355, 0.104967, 0.52", "-9.08128, 33.0767, -0.235747, 0.52", "-9.02244, 33.8844, -0.447013, 0.52", "-8.863, 35.3107, -0.737346, 0.88", "-8.69125, 36.7926, -1.01905, 0.74", "-8.6319, 37.6572, -1.20841, 0.59", "-8.65017, 39.4874, -1.68379, 0.59", "-8.81165, 40.6381, -2.02359, 1.25", "-9.1761, 41.8342, -2.43373, 1.4", "-9.63041, 42.6834, -2.75875, 1.18", "-10.2586, 43.5373, -3.08459, 0.88", "-11.1017, 44.5136, -3.45577, 0.66", "-11.7563, 45.1805, -3.69573, 0.66", "-12.2443, 45.6877, -3.84885, 0.66", "-12.9461, 46.575, -4.0103, 0.59", "-13.3532, 47.3645, -4.06625, 0.59", "-13.5908, 48.3218, -4.03527, 0.74", "-13.6367, 48.7702, -3.98418, 0.88", "-13.6702, 49.3761, -3.87814, 0.88", "-13.7107, 50.1355, -3.70941, 1.03", "-13.8042, 51.0377, -3.48382, 0.66", "-14.0397, 52.4225, -3.10856, 0.44", "-14.263, 53.5065, -2.79697, 0.44", "-14.4568, 54.541, -2.58219, 0.59", "-14.5365, 55.1044, -2.5234, 0.96", "-14.6037, 56.3837, -2.51023, 1.18", "-14.5486, 57.053, -2.56304, 1.18", "-14.3088, 58.1228, -2.73169, 0.74", "-13.6215, 60.2058, -3.09505, 0.37", "-13.2376, 61.2409, -3.27812, 0.29", "-12.8366, 62.3069, -3.44975, 0.29", "-12.4254, 63.4269, -3.61458, 0.37", "-12.1812, 64.277, -3.7141, 0.37", "-11.9824, 65.5752, -3.78462, 0.29", "-11.9928, 66.5246, -3.73327, 0.37", "-12.0902, 67.2705, -3.66371, 0.74", "-12.2021, 67.7855, -3.61063, 0.74", "-12.3752, 68.4773, -3.56223, 0.44", "-12.5845, 69.5835, -3.5266, 0.66", "-12.7052, 70.6575, -3.57686, 1.25", "-12.7498, 71.3091, -3.63543, 1.47", "-12.797, 72.0346, -3.72493, 1.47", "-12.896, 73.3239, -3.92175, 1.11", "-13.038, 75.0021, -4.22214, 0.29", "-13.1552, 76.22, -4.46258, 0.66", "-13.2318, 76.9023, -4.61425, 0.52", "-13.3861, 77.9967, -4.90567, 0.52", "-13.6342, 79.3162, -5.27586, 0.66", "-13.9837, 80.8381, -5.68364, 0.88", "-14.1926, 81.5772, -5.88177, 1.47", "-14.4589, 82.5123, -6.10245, 1.47", "-14.7609, 83.6104, -6.3446, 0.74", "-15.0749, 84.6494, -6.5865, 0.74", "-15.4062, 85.5451, -6.79307, 0.74", "-15.8353, 86.4978, -7.00088, 0.37", "-16.377, 87.601, -7.21022, 0.37", "-16.8228, 88.4826, -7.3533, 0.29", "-17.2278, 89.3207, -7.48451, 0.29", "-17.6961, 90.3649, -7.68352, 0.29", "-17.9469, 90.9998, -7.81911, 0.29", "-18.224, 92.0268, -8.11009, 0.88", "-18.3213, 92.7108, -8.33836, 1.47", "-18.3259, 93.3975, -8.58013, 1.47", "-18.2713, 93.9892, -8.77412, 1.47", "-18.1189, 94.8396, -9.04141, 1.18", "-17.7439, 96.4672, -9.50585, 0.37", "-17.5185, 97.3512, -9.70924, 0.37", "-17.3342, 98.2408, -9.8411, 0.37", "-17.2477, 98.8788, -9.89314, 0.96", "-17.1943, 99.6823, -9.91071, 1.03", "-17.1996, 100.139, -9.88188, 1.03", "-17.2861, 101.384, -9.74425, 0.37", "-17.3998, 102.613, -9.67727, 0.37", "-17.4651, 103.314, -9.6762, 0.29", "-17.5148, 104.107, -9.81216, 0.29", "-17.5527, 105.282, -10.1466, 0.29", "-17.5251, 106.128, -10.4685, 0.29", "-17.4402, 107.281, -10.9883, 1.18", "-17.3656, 107.858, -11.2632, 1.47", "-16.9064, 110.341, -12.549, 0.22", "-16.846, 110.607, -12.6992, 0.44", "-16.5622, 111.631, -13.3057, 0.66", "-16.2811, 112.538, -13.8149, 0.22", "-15.9919, 113.414, -14.277, 0.22", "-15.4763, 114.966, -15.0639, 0.88", "-15.2038, 115.787, -15.4427, 0.88", "-14.9628, 116.573, -15.8283, 0.88", "-14.5928, 117.929, -16.5629, 0.37", "-14.3729, 118.888, -17.1544, 0.37", "-14.3191, 119.306, -17.4343, 0.88", "-14.3054, 119.883, -17.8164, 0.88", "-14.3474, 120.783, -18.4626, 0.52", "-14.437, 121.558, -19.068, 0.29", "-14.5684, 122.415, -19.7751, 0.29", "-14.7328, 123.392, -20.5558, 1.11", "-14.7951, 124.033, -21.0621, 1.33", "-14.829, 124.787, -21.6644, 1.55", "-14.8346, 125.526, -22.2626, 1.55", "-14.8143, 126.601, -23.1495, 0.52", "-14.7973, 127.612, -23.9809, 0.44", "-14.8223, 129.262, -25.2987, 1.47", "-14.8515, 130.061, -25.8912, 1.47", "-14.9543, 131.915, -27.122, 0.44", "-15.0199, 132.917, -27.7509, 0.44", "-15.0978, 134.186, -28.5158, 0.44", "-15.1646, 135.428, -29.2303, 0.37", "-15.2425, 136.608, -29.8367, 0.37", "-15.294, 138.528, -30.6528, 1.47", "-15.2648, 139.27, -30.8792, 1.77", "-15.0925, 141.162, -31.284, 0.29", "-14.9703, 142.069, -31.4136, 1.03", "-14.886, 142.598, -31.4472, 1.03", "-14.5911, 144.458, -31.4032, 0.66", "-14.2642, 146.725, -31.1283, 0.29", "-14.1323, 147.872, -30.8989, 1.03", "-14.0952, 148.35, -30.7655, 1.25", "-14.0498, 149.595, -30.3967, 0.22", "-14.0579, 150.195, -30.2316, 0.44", "-14.1406, 151.317, -29.9586, 0.22", "-14.2537, 152.199, -29.7189, 0.52", "-14.3468, 152.853, -29.5374, 0.52", "-14.5457, 154.498, -29.0706, 0.22", "-14.6225, 155.385, -28.8152, 0.29", "-14.673, 156.287, -28.5549, 0.29", "-14.7406, 158.096, -28.0457, 1.11", "-14.7437, 158.701, -27.8958, 1.33", "-14.7007, 159.817, -27.6345, 0.29", "-14.6018, 160.919, -27.3822, 0.29", "-14.5425, 161.357, -27.2898, 0.44", "-14.3401, 162.568, -27.0764, 0.22", "-14.1191, 163.811, -26.9083, 0.66", "-14.0645, 164.197, -26.8613, 1.18", "-14.019, 164.755, -26.8056, 1.18", "-13.9862, 165.2, -26.763, 0.74", "-13.8495, 166.858, -26.6058, 0.22", "-13.7871, 167.507, -26.549, 0.66", "-13.7322, 168.629, -26.4378, 0.22", "-13.7313, 169.185, -26.3812, 0.52" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-1.62018, 9.87766, 11.4844, 0.44", "-1.04766, 11.0822, 10.7314, 0.44", "-0.763087, 11.756, 10.32, 0.44", "-0.427133, 12.5751, 9.83719, 0.96", "-0.190532, 13.1081, 9.53033, 0.96", "0.44483, 14.5792, 8.81045, 0.52", "0.655979, 15.124, 8.60447, 0.52", "0.816235, 15.6334, 8.4334, 0.66", "0.941037, 16.348, 8.31726, 0.37", "0.988491, 16.8944, 8.38437, 0.37", "1.11672, 17.9975, 8.68398, 0.37", "1.28147, 19.0239, 9.03404, 0.59", "1.398, 19.6129, 9.21378, 0.81", "1.5234, 20.1925, 9.37562, 0.81", "1.83582, 21.7121, 9.8135, 0.29", "2.06734, 22.8385, 10.0792, 0.29", "2.27822, 23.7341, 10.2509, 0.29", "2.49052, 24.4671, 10.366, 0.29", "2.70531, 25.1321, 10.4657, 0.88", "2.98119, 25.9828, 10.5712, 0.88", "3.10809, 26.687, 10.6526, 0.52", "3.09922, 27.4449, 10.8443, 0.37" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-4.9283, -27.4357, -1.15759, 1.77", "-4.557, -28.938, -1.26993, 1.77", "-4.33832, -29.688, -1.28032, 1.77", "-4.06132, -30.4992, -1.49882, 1.77", "-3.68024, -31.3669, -1.9352, 1.77", "-3.24039, -32.3683, -2.43888, 1.92", "-2.90365, -33.135, -2.82449, 2.14", "-2.38452, -34.1008, -3.39324, 2.36", "-0.83979, -36.6917, -5.42239, 1.77", "-0.266597, -37.5285, -6.35974, 1.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-4.9283, -27.4357, -1.15759, 0.81", "-3.84211, -28.7372, -0.792541, 0.81", "-2.05898, -30.5168, -0.445027, 0.66", "-1.30674, -31.1219, -0.376896, 0.88", "-0.0682825, -31.9781, -0.370135, 0.59", "1.18174, -32.7537, -0.488895, 0.88", "2.53485, -33.5254, -0.752662, 1.18", "3.61371, -34.0515, -1.19617, 0.81", "4.86376, -34.5334, -1.88489, 0.66", "5.72106, -34.8281, -2.39996, 0.59", "6.89773, -35.2102, -3.15014, 0.88", "7.94218, -35.5577, -3.85221, 0.74", "9.02594, -35.9767, -4.61691, 0.59", "10.1405, -36.4666, -5.42556, 0.74", "11.1293, -36.9528, -6.12972, 0.74", "11.733, -37.2786, -6.53681, 0.88", "12.4034, -37.689, -6.95643, 0.88", "13.2572, -38.2905, -7.47717, 0.66", "14.091, -39.0202, -8.02234, 0.66", "14.556, -39.5859, -8.3858, 0.52", "15.0258, -40.3991, -8.81593, 0.52", "15.2628, -41.0257, -9.04443, 0.96", "15.3932, -41.4753, -9.14688, 1.18", "15.6628, -42.4776, -9.29224, 1.03", "15.843, -43.018, -9.30607, 1.18", "16.1884, -43.7478, -9.24899, 1.03", "16.9204, -44.8563, -9.05094, 0.37", "17.6819, -45.7504, -8.79952, 0.74", "18.161, -46.237, -8.60092, 0.88", "19.2826, -47.2958, -8.05943, 0.59", "19.8698, -47.8538, -7.75179, 0.59", "20.555, -48.5418, -7.36952, 0.88", "21.3657, -49.4445, -6.89705, 0.74", "22.0528, -50.3261, -6.47508, 1.25", "22.4751, -50.9118, -6.24822, 1.25", "22.9599, -51.6195, -6.06683, 0.81", "23.4337, -52.3523, -5.93486, 0.59", "23.9769, -53.2094, -5.84859, 0.59", "24.4393, -53.9152, -5.8648, 0.59", "25.2437, -55.003, -5.9871, 0.44", "25.8052, -55.6447, -6.0792, 0.52", "26.4106, -56.2325, -6.1836, 0.44", "27.1524, -56.881, -6.31681, 0.44", "27.7475, -57.3938, -6.4233, 0.52", "28.4858, -58.0723, -6.53646, 0.66", "29.1439, -58.7313, -6.64894, 0.66", "29.9823, -59.672, -6.78093, 0.52", "30.3712, -60.1325, -6.80364, 0.81", "30.8302, -60.7436, -6.77629, 0.81", "31.3205, -61.4806, -6.69794, 0.66", "32.0338, -62.6916, -6.54632, 0.52", "32.6648, -63.8757, -6.37604, 0.52", "33.2194, -64.9796, -6.18184, 1.18", "33.5019, -65.5317, -6.07254, 1.4", "33.9911, -66.4195, -5.87679, 1.25", "34.6003, -67.438, -5.59289, 1.03", "34.8244, -67.7759, -5.4665, 1.03" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-7.87049, 44.7592, -10.8821, 1.33", "-8.58586, 45.9064, -11.0321, 1.33", "-9.30274, 47.1853, -11.1515, 1.33", "-9.97265, 48.4682, -11.1797, 1.33", "-10.6885, 49.9593, -11.1103, 1.33", "-11.4192, 51.6359, -10.9528, 1.47", "-11.8968, 52.8713, -10.7915, 1.69", "-12.2002, 53.9189, -10.5913, 1.77", "-12.4669, 55.1231, -10.2926, 1.99", "-12.6759, 56.3341, -9.97033, 2.14", "-12.8938, 57.7921, -9.57758, 1.84", "-13.1654, 59.5094, -9.14569, 1.84", "-13.4509, 61.0011, -8.83876, 1.84", "-13.683, 62.0154, -8.70233, 1.92", "-14.0176, 63.2808, -8.6178, 1.92", "-14.3704, 64.4961, -8.5754, 1.92", "-14.7725, 65.7295, -8.56506, 1.62", "-15.3343, 67.2251, -8.60901, 1.62", "-15.9174, 68.6147, -8.69543, 1.77", "-16.4522, 69.8256, -8.80681, 2.14" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-7.87049, 44.7592, -10.8821, 0.66", "-6.99205, 46.5248, -10.8139, 0.66", "-6.44804, 47.4727, -10.6785, 0.66", "-6.23413, 47.8149, -10.5922, 0.96", "-5.82675, 48.4553, -10.3643, 0.96", "-5.53869, 48.9676, -10.1013, 0.74", "-5.34239, 49.3754, -9.8713, 0.66", "-5.0449, 50.0152, -9.40076, 0.66", "-4.78673, 50.5537, -9.00349, 0.66", "-4.52115, 51.0645, -8.64954, 0.66", "-3.73164, 52.3519, -7.87143, 0.88", "-3.12872, 53.1791, -7.45632, 0.29", "-2.57203, 53.7959, -7.23949, 0.29", "-1.694, 54.4575, -7.20465, 1.18", "-1.24153, 54.705, -7.28404, 1.62", "-0.0618797, 55.2274, -7.6159, 0.81", "0.656931, 55.4969, -7.8663, 0.81", "1.36308, 55.7171, -8.13331, 1.03", "2.45263, 56.0371, -8.58595, 0.44", "3.38236, 56.3133, -9.00206, 0.44", "3.97343, 56.5158, -9.25922, 1.18", "4.42533, 56.714, -9.42487, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-1.50121, -40.8873, 0.0443568, 0.15", "-2.07943, -55.8762, 0.0443568, 0.15", "-2.65765, -70.865, 0.0443568, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-0.266597, -37.5285, -6.35974, 1.03", "-1.62505, -38.9597, -8.50669, 1.03", "-2.89501, -40.0817, -9.89375, 0.81", "-3.53939, -40.5785, -10.4368, 0.81", "-4.3163, -41.0787, -10.9697, 0.81", "-4.99379, -41.4486, -11.3807, 1.11", "-5.74357, -41.784, -11.7663, 1.11", "-6.75163, -42.0449, -11.9978, 1.4", "-7.44312, -42.1431, -12.089, 1.4", "-8.63925, -42.1808, -12.3023, 1.11", "-9.28174, -42.0898, -12.4584, 1.33", "-10.4554, -41.6961, -12.8183, 1.03", "-11.1936, -41.3253, -13.2462, 0.81", "-11.6645, -41.0688, -13.5942, 0.81", "-12.7567, -40.5482, -14.5026, 0.81", "-13.895, -40.127, -15.5388, 1.03", "-14.7701, -39.9176, -16.3678, 1.33", "-17.6361, -39.732, -19.1855, 1.03", "-18.5987, -39.8712, -20.0914, 1.03", "-19.8012, -40.2976, -21.0882, 1.33", "-20.7285, -40.8082, -21.721, 1.33", "-21.4842, -41.3422, -22.1349, 1.47", "-22.6873, -42.2922, -22.5558, 1.11", "-23.6381, -43.0502, -22.6596, 0.88", "-24.3404, -43.5196, -22.6948, 1.55", "-25.1032, -43.8951, -22.7113, 1.84", "-25.9401, -44.1484, -22.7269, 1.99", "-27.4055, -44.2931, -22.7307, 1.18", "-28.3917, -44.178, -22.7066, 0.88", "-29.4, -43.8537, -22.6742, 1.25", "-30.1819, -43.4089, -22.6512, 1.47", "-31.1111, -42.6918, -22.7326, 1.18", "-32.1569, -41.9441, -23.2504, 0.96", "-32.5204, -41.7692, -23.6297, 1.18", "-32.8653, -41.6722, -24.0637, 1.18", "-33.604, -41.5576, -24.9818, 0.74", "-35.0963, -41.4769, -26.7474, 0.74", "-37.7727, -41.5029, -30.0288, 1.47", "-39.3559, -41.6003, -32.016, 1.99", "-40.7449, -41.7536, -33.7695, 1.47", "-41.552, -41.887, -34.7901, 1.62", "-42.7181, -42.1579, -36.266, 1.33" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-0.266597, -37.5285, -6.35974, 0.88", "1.02811, -38.3877, -7.60388, 0.88", "1.93902, -39.1847, -8.70368, 1.03", "2.7046, -40.1576, -9.87286, 1.03", "3.22727, -41.2629, -11.015, 0.88", "3.60086, -42.6081, -12.2331, 0.81", "3.8052, -44.2699, -13.664, 1.03", "3.63472, -45.2276, -14.4124, 1.33", "2.96189, -46.6245, -15.5712, 0.88", "1.87876, -48.0671, -16.863, 0.66", "1.19548, -48.7877, -17.65, 0.96", "0.37999, -49.572, -18.8408, 0.66", "-0.189687, -50.1626, -20.077, 0.74", "-0.877024, -51.2201, -23.1246, 0.88", "-0.868133, -51.535, -24.3041, 1.11", "-0.389242, -52.343, -27.5584, 0.88", "0.261266, -53.285, -31.1222, 0.74", "0.816224, -54.0873, -33.6474, 0.74", "1.26368, -54.809, -35.5855, 0.74", "1.66633, -55.5679, -37.2996, 0.66", "2.33619, -57.157, -40.3805, 0.96", "2.77663, -58.486, -42.4658, 1.25", "3.17906, -59.8977, -44.3671, 0.81", "3.65032, -61.619, -46.5414, 0.74", "4.02592, -62.6773, -47.8273, 0.88", "4.79672, -64.0163, -49.2932, 0.59", "6.04356, -65.2823, -50.4774, 0.59", "7.37509, -66.2607, -51.2842, 1.18", "8.10064, -66.6691, -51.5206, 1.62", "8.9248, -67.0561, -51.6401, 1.84", "11.2199, -67.979, -51.7788, 1.18", "12.9774, -68.5981, -51.9476, 0.81", "13.6988, -68.8356, -52.0822, 0.96", "15.5128, -69.4532, -52.7753, 0.59", "16.1184, -69.6873, -53.1409, 0.66", "17.1809, -70.1762, -54.0065, 0.52", "19.169, -71.3968, -56.3066, 1.18", "19.8708, -71.9794, -57.3199, 1.25", "20.9749, -73.1311, -59.5634, 0.88", "21.4065, -73.6281, -60.6134, 0.88", "21.986, -74.2815, -62.0584, 0.66", "23.074, -75.3466, -64.8139, 1.47", "23.5793, -75.7418, -66.0698, 1.69", "25.9803, -77.1999, -71.914, 0.81", "26.5261, -77.4545, -73.1617, 0.81", "27.2373, -77.71, -74.6476, 0.66", "29.0143, -78.1566, -77.8747, 1.03", "29.6747, -78.2632, -78.8264, 1.03", "30.64, -78.4427, -79.8989, 1.33", "32.4198, -78.9523, -81.1047, 0.88", "33.7895, -79.5243, -81.8393, 0.88", "34.9189, -80.1539, -82.2434, 0.74", "35.3896, -80.4562, -82.3371, 0.88", "36.8208, -81.4054, -82.5322, 0.44", "38.052, -82.1968, -82.6353, 1.77", "38.7342, -82.6387, -82.6563, 2.06", "39.5357, -83.2656, -82.6291, 2.06" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-16.4522, 69.8256, -8.80681, 1.25", "-15.4093, 71.5389, -9.59352, 1.25", "-14.995, 72.2515, -9.82811, 1.4", "-14.3724, 73.5199, -10.1392, 1.11", "-13.7073, 75.1565, -10.4501, 1.33", "-13.322, 76.3088, -10.6305, 1.25", "-12.8608, 77.8994, -10.8516, 1.25", "-12.4079, 79.6852, -11.0037, 1.47", "-12.0141, 81.3898, -11.0929, 1.69", "-11.7513, 82.8895, -11.0922, 1.84", "-11.6298, 84.1797, -11.0405, 2.14", "-11.627, 85.446, -11.0085, 2.14" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-16.4522, 69.8256, -8.80681, 0.96", "-17.0346, 70.9315, -8.35872, 0.96", "-17.4882, 71.657, -8.15568, 0.81", "-18.4301, 72.9104, -7.93741, 0.66", "-19.0007, 73.5296, -7.89865, 0.59", "-19.7341, 74.2043, -7.9157, 0.59", "-20.7111, 74.9732, -8.01247, 0.74", "-21.5784, 75.4681, -8.21549, 0.74", "-22.3182, 75.8002, -8.45881, 1.11", "-23.2353, 76.1459, -8.81177, 0.74", "-23.8839, 76.3896, -9.06735, 1.25", "-24.8432, 76.8046, -9.44888, 0.96", "-25.8588, 77.3881, -9.80219, 0.44", "-26.2153, 77.6874, -9.92869, 0.44", "-26.5459, 78.115, -10.0598, 0.74", "-26.8618, 78.7639, -10.1949, 0.74", "-27.1171, 79.5269, -10.2247, 0.74", "-27.3266, 80.4517, -10.0494, 0.59", "-27.4336, 81.1394, -9.77048, 0.59", "-27.4992, 81.8363, -9.35284, 0.88", "-27.525, 82.4691, -8.91926, 0.66", "-27.5615, 83.9647, -7.65487, 0.66", "-27.5992, 85.0288, -6.64209, 0.96", "-27.6322, 85.5805, -6.08615, 0.66", "-27.7045, 86.2701, -5.36058, 0.52", "-27.8391, 87.0777, -4.51034, 0.88", "-28.1056, 88.2171, -3.43051, 0.59", "-28.2918, 88.8063, -2.99419, 0.59", "-28.5112, 89.3348, -2.66128, 0.59", "-28.9738, 90.2224, -2.13328, 0.59", "-29.4455, 90.99, -1.68482, 1.11", "-30.1, 91.9586, -1.12612, 0.59", "-30.5258, 92.5566, -0.83653, 0.59", "-31.045, 93.2456, -0.500067, 0.81", "-31.5711, 93.9277, -0.184996, 0.81", "-32.1355, 94.6378, 0.0917025, 0.96", "-32.6505, 95.2521, 0.314022, 1.03", "-33.1712, 95.8026, 0.516957, 1.33", "-33.7185, 96.3389, 0.747068, 1.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "4.42533, 56.714, -9.42487, 0.88", "5.27616, 57.0184, -9.28545, 0.88", "5.97136, 57.2029, -9.17515, 0.66", "6.49565, 57.3094, -9.09452, 1.03", "7.10277, 57.4318, -9.02196, 1.18", "7.63679, 57.5617, -8.98583, 1.18", "8.05005, 57.6847, -8.97935, 0.81", "8.57822, 57.8672, -9.01705, 0.44", "9.17298, 58.1398, -9.11152, 0.44", "9.83253, 58.5793, -9.27365, 0.44", "10.4303, 59.1156, -9.45329, 0.59", "10.8306, 59.5364, -9.57587, 0.81", "11.1387, 59.8718, -9.66033, 0.81", "11.5176, 60.2856, -9.74445, 0.66", "11.9879, 60.7503, -9.80738, 0.66", "12.5665, 61.2102, -9.8145, 0.66", "13.0821, 61.5069, -9.77433, 0.88", "13.6466, 61.7392, -9.70688, 0.52", "14.0655, 61.8539, -9.65086, 0.96", "14.5959, 61.9182, -9.58043, 0.96", "15.0161, 61.901, -9.5251, 1.11", "15.568, 61.779, -9.46929, 1.18", "15.9761, 61.6215, -9.43785, 1.18", "16.473, 61.3464, -9.42999, 0.66", "17.1736, 60.8457, -9.47617, 0.96", "17.8569, 60.2327, -9.58551, 0.44", "18.6445, 59.4246, -9.81129, 0.37", "19.0748, 58.9633, -9.9797, 1.18", "19.5538, 58.4559, -10.2044, 1.33", "19.9257, 58.0723, -10.4072, 1.33", "20.5693, 57.4236, -10.8474, 0.59", "21.1802, 56.8096, -11.3662, 0.37", "21.5877, 56.3872, -11.7758, 0.37", "21.8898, 56.054, -12.1499, 0.37", "22.1906, 55.7022, -12.5737, 0.37", "22.6375, 55.1292, -13.3116, 0.52", "22.9771, 54.6535, -13.9508, 0.52", "23.2604, 54.2012, -14.5244, 0.52", "23.8044, 53.2288, -15.5847, 0.96", "24.1614, 52.5858, -16.1842, 1.47", "24.4913, 52.0529, -16.6113, 1.69", "24.7528, 51.6904, -16.853, 1.92", "25.1239, 51.245, -17.1059, 1.92", "26.0512, 50.2555, -17.559, 0.74", "26.7928, 49.5249, -17.7855, 0.37", "27.302, 49.0767, -17.8915, 0.88", "27.6563, 48.8145, -17.9364, 1.11", "27.9776, 48.6111, -17.9678, 1.11", "28.4187, 48.3635, -18.0025, 1.33", "28.6849, 48.2221, -18.0187, 1.33", "29.1361, 47.9129, -18.0261, 0.81", "29.5119, 47.4889, -18.0537, 0.44", "29.8532, 46.9632, -18.1358, 0.37", "30.2356, 46.3052, -18.2916, 0.37", "30.4688, 45.897, -18.417, 1.18", "30.7347, 45.4416, -18.5833, 1.4", "31.3283, 44.4956, -19.0152, 0.29", "31.9664, 43.6701, -19.5091, 0.66", "32.5598, 43.0756, -19.9675, 1.11", "32.9942, 42.7024, -20.3104, 1.62", "33.1965, 42.5322, -20.4766, 1.84", "33.7166, 42.0995, -20.9045, 1.84", "34.4433, 41.464, -21.5419, 0.81", "35.0134, 40.916, -22.0524, 0.44", "35.3946, 40.5157, -22.3881, 0.44", "35.9752, 39.8932, -22.8453, 0.44", "36.3641, 39.4773, -23.1076, 0.59", "37.2489, 38.5719, -23.5617, 0.52", "37.7236, 38.1324, -23.7326, 0.37", "38.1661, 37.8111, -23.8693, 0.96", "38.8085, 37.4233, -24.0692, 1.62", "39.1063, 37.257, -24.1591, 1.99", "39.6816, 36.9186, -24.338, 1.99", "40.0414, 36.6924, -24.4387, 1.47", "41.3543, 35.7719, -24.8343, 0.52", "42.1483, 35.207, -25.0723, 0.52", "42.7613, 34.7739, -25.2482, 0.88", "43.3868, 34.3512, -25.4089, 0.59", "43.9201, 34.0023, -25.5213, 0.37", "44.3497, 33.7291, -25.5669, 0.37", "44.9253, 33.3806, -25.5188, 0.74", "45.2838, 33.1717, -25.4896, 0.74", "45.6062, 32.9717, -25.4959, 0.37", "45.8285, 32.809, -25.5305, 0.37", "46.3338, 32.3747, -25.6809, 0.81", "46.5366, 32.1606, -25.7748, 1.03", "47.2842, 31.2449, -26.1964, 0.37", "47.7774, 30.5965, -26.5059, 1.18", "48.1496, 30.0827, -26.7563, 1.47", "48.6088, 29.4676, -27.0588, 0.66", "49.2158, 28.7455, -27.4412, 0.29", "49.4938, 28.4556, -27.5889, 1.25", "49.8122, 28.1688, -27.7386, 1.55", "50.154, 27.9109, -27.8871, 1.55", "51.1002, 27.3296, -28.2527, 0.44", "52.2079, 26.7962, -28.6417, 1.18", "53.0588, 26.4586, -28.9136, 1.84", "54.0699, 26.1018, -29.2247, 2.06", "55.2706, 25.7309, -29.6004, 0.29", "55.9973, 25.5342, -29.8358, 0.29", "56.8071, 25.3132, -30.1014, 1.18", "57.4712, 25.0946, -30.3092, 0.88", "57.9004, 24.9411, -30.4356, 0.52", "58.802, 24.5935, -30.6573, 0.52", "59.3384, 24.3627, -30.7908, 0.52", "60.1244, 23.9852, -30.9768, 0.29", "60.7566, 23.6567, -31.0973, 0.29", "61.3546, 23.348, -31.1971, 0.66", "61.8955, 23.0505, -31.27, 0.81", "62.1095, 22.9225, -31.2871, 0.81", "62.9378, 22.4233, -31.3634, 0.29", "63.5612, 22.067, -31.4324, 0.96", "64.136, 21.7537, -31.5191, 1.03", "64.801, 21.3812, -31.6318, 0.29", "65.1979, 21.1622, -31.6987, 0.29", "65.822, 20.8405, -31.7945, 0.96", "66.4504, 20.5453, -31.8685, 0.96", "67.2918, 20.1989, -31.9432, 0.37", "68.1221, 19.9008, -31.974, 0.66", "68.4773, 19.7757, -31.9797, 0.96", "69.3341, 19.4512, -31.9734, 0.29", "70.2136, 19.0968, -31.9377, 1.03", "70.5284, 18.9718, -31.9229, 1.33", "71.341, 18.6754, -31.8676, 0.37", "72.1164, 18.4596, -31.8252, 0.37", "72.7928, 18.3172, -31.8158, 0.37", "73.2186, 18.2555, -31.825, 0.74", "73.9062, 18.174, -31.8564, 0.74", "74.4148, 18.112, -31.8875, 0.37", "75.0711, 18.0481, -31.9345, 0.29", "75.7499, 18.0192, -31.9779, 0.29", "76.2956, 18.0159, -32.0077, 0.88", "76.8781, 18.0207, -32.031, 1.25", "77.5606, 18.0314, -32.054, 1.18", "78.4626, 18.0571, -32.084, 0.29", "79.1137, 18.1001, -32.1081, 0.74", "79.6592, 18.1509, -32.1262, 0.74", "80.3011, 18.2196, -32.1734, 0.37", "81.1006, 18.305, -32.2702, 0.96", "81.5706, 18.343, -32.3382, 1.33", "82.0464, 18.346, -32.4231, 1.33", "82.8221, 18.2783, -32.5667, 0.37", "83.6478, 18.1396, -32.7203, 0.44", "84.2185, 18.0127, -32.8214, 0.44", "84.8485, 17.8595, -32.9128, 0.44", "85.7504, 17.6347, -33.0177, 0.96", "86.326, 17.4757, -33.0631, 1.03", "86.7289, 17.3523, -33.0772, 0.81", "87.2577, 17.1669, -33.0725, 0.52", "87.8819, 16.9246, -33.0526, 0.29", "88.2167, 16.7945, -33.0475, 0.29", "88.7981, 16.5806, -32.9931, 0.88", "89.3412, 16.3829, -32.9113, 1.25", "89.5601, 16.2933, -32.8686, 1.25", "90.3023, 15.9231, -32.7062, 0.29", "90.8293, 15.5997, -32.5894, 0.29", "91.7221, 14.9934, -32.3912, 0.29", "92.0345, 14.7792, -32.3272, 0.29", "92.7001, 14.3394, -32.2153, 0.96", "93.2175, 14.0359, -32.1513, 0.96", "93.8041, 13.739, -32.1157, 0.44", "94.2002, 13.5703, -32.1161, 0.37", "94.6824, 13.4145, -32.167, 0.81", "95.4092, 13.264, -32.2843, 0.29", "96.0017, 13.1671, -32.4103, 0.29", "96.5377, 13.0704, -32.5378, 0.74", "97.1694, 12.924, -32.71, 0.96", "97.8302, 12.7212, -32.9087, 0.96", "98.7216, 12.3841, -33.1792, 0.44", "99.4522, 12.0548, -33.4239, 0.29", "100.059, 11.7314, -33.6405, 0.29", "100.619, 11.393, -33.8339, 0.96", "100.923, 11.1969, -33.9313, 1.11", "101.444, 10.8659, -34.0681, 1.18", "102.314, 10.3343, -34.2996, 0.37", "102.809, 10.0742, -34.4416, 0.37", "103.542, 9.72776, -34.6762, 0.29", "104.25, 9.42791, -34.9142, 0.29", "104.933, 9.16551, -35.152, 0.96", "105.992, 8.80731, -35.5164, 0.44", "106.493, 8.66528, -35.669, 1.03", "106.887, 8.56896, -35.7769, 1.03", "107.742, 8.40426, -35.9965, 0.29", "108.175, 8.346, -36.0844, 0.29", "108.683, 8.31269, -36.1708, 0.96", "109.325, 8.30217, -36.2562, 0.96", "109.723, 8.29644, -36.3112, 0.37", "110.388, 8.27835, -36.4123, 0.22", "111.133, 8.23327, -36.5439, 1.11", "111.957, 8.19098, -36.7035, 1.11", "113.086, 8.14429, -36.95, 0.44", "113.622, 8.12483, -37.0821, 1.03", "113.988, 8.10003, -37.1795, 1.03", "114.754, 7.9743, -37.3941, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "4.42533, 56.714, -9.42487, 0.29", "4.87719, 58.5103, -9.62896, 0.29", "5.11413, 59.356, -9.74506, 0.29", "5.55911, 60.9783, -9.96859, 0.29", "5.86892, 62.0992, -10.1274, 0.81", "6.05736, 62.7574, -10.2286, 0.81", "6.43494, 64.1192, -10.4476, 0.29", "6.82291, 65.3866, -10.6657, 0.29", "7.19007, 66.5923, -10.8896, 0.88", "7.29475, 66.9625, -10.9626, 0.88", "7.59213, 68.0172, -11.1935, 0.22", "7.95903, 69.318, -11.477, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-42.7181, -42.1579, -36.266, 0.88", "-47.0648, -41.6933, -45.8842, 0.88", "-47.7034, -41.657, -47.1177, 0.52", "-48.0121, -41.6482, -47.6539, 0.52", "-48.8023, -41.6416, -48.8819, 0.52", "-49.6692, -41.661, -50.0533, 0.52", "-50.4221, -41.7008, -50.9133, 1.03", "-50.9525, -41.815, -50.9502, 1.62", "-51.219, -41.8792, -50.9529, 1.99", "-51.8701, -42.0054, -50.9359, 2.14", "-52.9756, -42.0764, -50.9328, 1.55", "-53.9903, -42.0131, -51.0984, 0.74", "-54.9538, -41.8808, -51.4709, 0.37", "-55.8527, -41.7429, -51.9449, 0.37", "-56.4812, -41.7017, -52.385, 0.37", "-57.9396, -41.709, -53.5949, 0.74", "-59.4034, -41.7907, -54.8989, 1.4", "-60.1794, -41.8684, -55.5897, 1.92", "-60.5626, -41.9227, -55.9225, 2.21", "-62.7296, -42.2708, -57.8644, 0.52", "-63.3979, -42.3859, -58.487, 0.52", "-64.2355, -42.5363, -59.2888, 0.52", "-64.8503, -42.5989, -59.9166, 0.59", "-65.2987, -42.5945, -60.4277, 0.59", "-66.7866, -42.3531, -62.2506, 1.69", "-68.0794, -41.8703, -63.9238, 2.06", "-69.1597, -41.3454, -65.3372, 1.03", "-69.6728, -41.0514, -66.028, 0.29", "-70.2202, -40.7426, -66.726, 0.29", "-70.938, -40.3769, -67.4981, 1.25", "-71.4026, -40.1966, -67.88, 1.62", "-72.067, -39.9982, -68.3501, 1.92", "-74.0584, -39.6488, -69.686, 0.81", "-75.069, -39.6349, -70.3206, 1.11", "-75.5773, -39.6791, -70.6638, 1.11", "-76.7315, -39.8335, -71.5466, 0.37", "-77.4579, -39.9361, -72.1553, 0.29", "-78.2699, -40.0721, -72.8442, 0.29", "-79.1366, -40.2175, -73.5245, 0.29", "-80.8168, -40.4277, -74.9232, 1.33", "-81.4647, -40.4753, -75.5158, 1.55", "-82.0661, -40.4795, -76.1296, 1.77" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-42.7181, -42.1579, -36.266, 1.18", "-43.9438, -42.7844, -36.4457, 1.18", "-45.3746, -43.5981, -36.5891, 0.52", "-46.2004, -44.0691, -36.6494, 0.52", "-48.0538, -45.1695, -36.6108, 0.88", "-49.1784, -45.8643, -36.4973, 1.18", "-49.9892, -46.4025, -36.3776, 1.18", "-50.9273, -47.1237, -36.1665, 1.25", "-51.7361, -47.8244, -35.9403, 1.11", "-52.9999, -49.0846, -35.4072, 0.88", "-53.7281, -49.8921, -34.9805, 0.59", "-54.3233, -50.5644, -34.6039, 0.44", "-54.7584, -51.049, -34.3137, 0.29", "-55.2389, -51.5658, -33.98, 0.29", "-55.8086, -52.1354, -33.6109, 0.88", "-56.3797, -52.5849, -33.3358, 1.25", "-56.7366, -52.8183, -33.1922, 1.47", "-57.3244, -53.1587, -32.9794, 1.47", "-57.8254, -53.448, -32.8241, 1.33", "-58.5856, -53.9152, -32.6262, 0.59", "-59.3694, -54.4349, -32.4685, 0.44", "-60.3558, -55.1225, -32.3031, 0.37", "-60.9592, -55.5463, -32.2098, 0.96", "-61.7346, -56.0836, -32.0933, 0.59", "-62.8086, -56.8028, -31.927, 0.52", "-63.4254, -57.182, -31.8247, 0.52", "-64.0822, -57.5273, -31.7084, 1.11", "-64.6777, -57.7766, -31.59, 1.99", "-65.3307, -57.986, -31.4476, 2.28", "-66.032, -58.1419, -31.2879, 1.99", "-66.9007, -58.2641, -31.0863, 1.69", "-67.7237, -58.3417, -30.9114, 1.4", "-68.3875, -58.4046, -30.7915, 0.66", "-69.1783, -58.5086, -30.6746, 0.52", "-69.9641, -58.6689, -30.586, 0.52", "-70.5601, -58.8823, -30.5454, 0.29", "-71.1146, -59.2836, -30.5445, 0.29", "-71.6995, -59.995, -30.5533, 0.81", "-71.9875, -60.4588, -30.5331, 1.11", "-72.3451, -61.1606, -30.4423, 0.96", "-72.7345, -62.0143, -30.1943, 0.74", "-73.0947, -62.6922, -29.8755, 0.37", "-73.6067, -63.4135, -29.2822, 1.11", "-73.9484, -63.8108, -28.8551, 1.84", "-74.3369, -64.1718, -28.3452, 2.36", "-75.0046, -64.629, -27.4271, 2.58", "-75.7102, -64.9522, -26.4228, 0.59", "-76.3136, -65.1202, -25.5235, 0.81" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "39.5357, -83.2656, -82.6291, 0.74", "40.8487, -84.3455, -83.2681, 0.74", "41.8066, -85.0992, -83.8718, 0.66", "42.3901, -85.5447, -84.2938, 1.11", "42.8695, -85.8909, -84.6796, 1.11", "43.8682, -86.5431, -85.5337, 0.88", "44.5989, -86.9791, -86.1897, 0.59", "45.3224, -87.3884, -86.9521, 1.11", "45.5451, -87.5033, -87.2174, 1.47", "46.0003, -87.6978, -87.7724, 1.69", "46.6268, -87.9104, -88.5133, 1.69", "47.4347, -88.0808, -89.3631, 1.77", "47.906, -88.1611, -89.8487, 1.77" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "39.5357, -83.2656, -82.6291, 0.37", "39.3378, -83.8775, -83.6095, 0.37", "39.0675, -84.4606, -84.5431, 1.03", "38.6632, -85.2032, -85.6886, 1.25", "38.0039, -86.088, -87.1389, 0.66", "37.751, -86.3599, -87.6181, 0.81", "36.7987, -87.2204, -89.3066, 1.11", "36.3688, -87.5045, -89.9582, 1.4", "35.8501, -87.7753, -90.6308, 0.88", "34.5667, -88.28, -92.0765, 0.22", "33.3165, -88.6865, -93.3757, 0.37", "31.9116, -89.1172, -94.8161, 1.03", "31.1803, -89.3375, -95.5767, 1.69", "30.7248, -89.5142, -96.1591, 1.69", "28.7195, -90.4722, -98.9339, 0.15", "28.406, -90.6888, -99.4905, 0.15", "28.1785, -90.8986, -99.9993, 1.18", "27.8942, -91.2486, -100.792, 1.47", "27.0553, -92.5944, -103.665, 0.88", "26.7181, -93.3086, -105.099, 1.55", "26.2424, -94.787, -107.89, 0.81", "26.0563, -95.3415, -108.933, 0.37", "25.9415, -95.6452, -109.477, 0.52", "25.783, -96.0378, -110.088, 0.52", "25.6643, -96.4013, -110.467, 0.37", "25.5009, -97.0001, -110.876, 0.37", "25.2709, -97.6039, -111.009, 0.81", "25.0633, -98.1396, -111.081, 1.11", "24.8171, -98.9753, -111.162, 1.25", "24.5586, -100.109, -111.286, 0.29", "24.4312, -100.752, -111.353, 0.29", "24.1908, -101.883, -111.441, 1.55", "24.0359, -102.495, -111.476, 1.77", "23.5954, -103.934, -111.543, 0.29", "23.144, -105.057, -111.57, 0.22", "22.4491, -106.284, -111.559, 0.22", "21.7632, -107.236, -111.505, 0.66", "21.2484, -107.793, -111.448, 1.4", "21.1372, -107.891, -111.433, 1.92", "20.5053, -108.368, -111.32, 1.62", "19.7863, -108.894, -111.16, 0.52", "19.1379, -109.373, -111.023, 0.29", "18.4102, -109.946, -110.883, 0.52", "18.0936, -110.201, -110.823, 0.52", "17.4316, -110.755, -110.698, 0.37", "17.1475, -110.994, -110.643, 0.88", "16.7094, -111.349, -110.57, 0.88", "16.2005, -111.743, -110.5, 0.44", "15.6535, -112.182, -110.437, 0.22", "15.2338, -112.545, -110.405, 0.96", "14.6832, -113.061, -110.407, 0.96", "13.7536, -114.046, -110.472, 0.29", "13.3558, -114.522, -110.531, 1.25", "12.9912, -114.966, -110.597, 1.25", "12.5468, -115.524, -110.699, 0.96", "12.0084, -116.245, -110.867, 0.96", "11.2741, -117.369, -111.207, 0.29", "10.8005, -118.202, -111.495, 0.29", "10.4406, -118.908, -111.768, 0.66", "10.1463, -119.53, -112.043, 0.37", "9.73904, -120.354, -112.497, 0.96", "9.39773, -121.033, -112.981, 1.18", "9.22568, -121.366, -113.279, 0.81", "8.81344, -122.133, -114.045, 0.52", "8.38918, -122.908, -114.798, 0.44", "7.72367, -124.024, -115.875, 0.96", "6.75809, -125.464, -117.299, 0.37", "6.23349, -126.205, -118.033, 0.37", "5.52976, -127.217, -119.051, 0.37", "4.91973, -128.165, -119.959, 1.18", "4.60421, -128.733, -120.46, 1.47", "4.36567, -129.246, -120.876, 1.47", "3.76434, -130.845, -122.096, 0.74", "3.48919, -131.837, -122.829, 0.29", "3.33185, -132.702, -123.449, 0.29", "3.18799, -134.009, -124.356, 0.96", "3.1651, -134.499, -124.658, 1.11", "3.19229, -135.391, -125.143, 0.29", "3.302, -136.182, -125.528, 0.29", "3.47905, -136.917, -125.864, 0.44", "3.66174, -137.436, -126.1, 0.29", "3.87463, -137.973, -126.297, 1.03", "4.07017, -138.495, -126.463, 1.03", "4.45474, -139.569, -126.789, 0.29", "4.79933, -140.396, -127.032, 1.11", "4.96205, -140.757, -127.135, 1.25", "5.42179, -141.789, -127.389, 0.22", "5.53711, -142.079, -127.441, 0.74", "5.63488, -142.364, -127.479, 0.74", "5.86733, -143.137, -127.54, 0.22", "6.01224, -143.667, -127.576, 0.66", "6.14698, -144.132, -127.611, 0.66", "6.34365, -144.77, -127.663, 0.22", "6.46841, -145.223, -127.698, 0.81", "6.63845, -145.943, -127.744, 0.22", "6.81999, -146.884, -127.791, 0.52", "6.91905, -147.48, -127.815, 0.66", "6.9712, -147.82, -127.825, 0.66", "7.10002, -148.64, -127.846, 0.29", "7.278, -149.843, -127.865, 0.29", "7.37203, -150.474, -127.875, 0.81", "7.40711, -150.712, -127.878, 0.81", "7.54889, -151.661, -127.887, 0.29", "7.67936, -152.483, -127.896, 0.66" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-11.627, 85.446, -11.0085, 1.25", "-11.6295, 87.8107, -9.1918, 1.25", "-11.545, 88.616, -8.9241, 1.25", "-11.4006, 89.8346, -8.88586, 1.03", "-11.3245, 90.4725, -8.95255, 1.11", "-11.1874, 91.6196, -9.14138, 1.11", "-11.0558, 92.8215, -9.36709, 1.03", "-10.846, 94.4944, -9.88027, 0.96", "-10.6954, 95.9651, -10.3929, 1.18", "-10.6071, 97.213, -10.8645, 1.18", "-10.56, 98.3822, -11.31, 1.4", "-10.5581, 99.7095, -11.7812, 1.55", "-10.606, 101.282, -12.2891, 1.18", "-10.6618, 102.448, -12.6214, 0.96", "-10.73, 103.886, -13.0059, 1.25", "-10.8061, 104.994, -13.2885, 1.25", "-10.89, 105.992, -13.5258, 1.03", "-11.0385, 107.426, -13.819, 1.03", "-11.1733, 108.386, -13.9741, 1.03", "-11.4125, 109.893, -14.1582, 1.03", "-11.699, 111.617, -14.2857, 1.03", "-11.8319, 112.39, -14.3165, 1.33", "-12.133, 114.129, -14.3433, 1.62", "-12.3797, 115.531, -14.3302, 1.11", "-12.6538, 116.884, -14.2025, 1.4", "-12.8776, 117.931, -14.0319, 1.25", "-13.1176, 119.192, -13.7632, 1.55", "-13.1598, 119.448, -13.7011, 1.47", "-13.3808, 121.085, -13.27, 1.62", "-13.6452, 123.277, -12.6812, 1.47", "-13.7693, 124.185, -12.4623, 1.55", "-13.8929, 125.035, -12.3037, 1.11", "-14.1119, 126.609, -12.0825, 0.88", "-14.2382, 127.68, -11.9835, 0.88", "-14.3127, 128.697, -11.9469, 0.88", "-14.319, 130.15, -11.9711, 0.88", "-14.2474, 131.258, -11.9716, 1.18", "-14.0615, 132.544, -11.9726, 1.18", "-13.8454, 133.487, -11.9657, 1.33", "-13.5444, 134.577, -11.9091, 1.33", "-13.039, 136.282, -11.7172, 1.11", "-12.5367, 137.984, -11.4216, 0.88", "-12.2331, 139.147, -11.1496, 0.88", "-11.9568, 140.485, -10.7824, 1.03", "-11.7896, 141.812, -10.3943, 1.33", "-11.7475, 143.053, -10.0281, 1.33", "-11.8082, 144.089, -9.74923, 1.47", "-11.9547, 145.06, -9.48888, 1.4", "-12.1456, 145.955, -9.25092, 1.4", "-12.392, 146.958, -9.01611, 1.18", "-12.6786, 148.129, -8.78887, 1.18", "-12.8698, 148.945, -8.63518, 1.03", "-13.1181, 150.176, -8.40114, 1.03", "-13.2687, 151.314, -8.1885, 0.88", "-13.3082, 152.547, -8.04617, 1.03", "-13.2719, 153.685, -7.967, 0.96", "-13.1925, 154.563, -7.9681, 0.96", "-13.0383, 155.764, -8.05053, 0.96", "-12.767, 157.346, -8.33352, 0.96", "-12.2504, 159.737, -9.09806, 0.81", "-11.9275, 161.209, -9.75942, 1.03", "-11.7519, 162.11, -10.2427, 1.03", "-11.542, 163.4, -10.9518, 0.88", "-11.2893, 165.257, -11.9512, 1.03", "-11.0812, 167.27, -12.9503, 1.03", "-10.9973, 168.436, -13.4094, 1.25", "-10.9488, 169.966, -13.9048, 1.25", "-11.0043, 172.121, -14.4088, 1.03", "-11.0852, 173.236, -14.5766, 1.03", "-11.2114, 174.749, -14.7175, 1.03", "-11.3359, 176.7, -14.8133, 1.03", "-11.3618, 178.775, -14.8765, 0.88", "-11.2783, 180.593, -14.9161, 0.88", "-11.1389, 182.181, -14.9362, 0.88", "-10.8017, 185.118, -14.9324, 0.74", "-10.5344, 187.032, -14.8932, 0.74", "-10.2293, 189.015, -14.7922, 0.74", "-9.96215, 190.644, -14.7122, 0.74", "-9.74228, 192.358, -14.7447, 0.74", "-9.65918, 194.148, -15.0366, 0.74", "-9.71, 194.996, -15.2948, 0.88", "-9.81604, 195.983, -15.7284, 1.03", "-9.99481, 197.724, -16.56, 0.74", "-10.1781, 200.175, -17.6962, 0.74", "-10.233, 202.267, -18.6116, 0.59", "-10.218, 203.215, -18.9728, 0.88", "-10.1503, 204.829, -19.4899, 1.11", "-9.98442, 207.154, -20.0473, 1.55", "-9.82992, 209.026, -20.2922, 1.33", "-9.68318, 210.626, -20.3721, 1.11", "-9.48659, 212.647, -20.4045, 1.11", "-9.31151, 214.257, -20.4107, 1.11", "-9.0961, 215.884, -20.37, 1.03", "-8.77809, 217.739, -20.2693, 0.88", "-8.54952, 218.743, -20.1808, 1.18", "-8.38027, 219.373, -20.0939, 1.4", "-8.12525, 220.282, -19.9323, 1.25", "-7.85008, 221.337, -19.7451, 1.25", "-7.70907, 221.998, -19.6645, 1.11", "-7.58864, 222.754, -19.6152, 0.96", "-7.53545, 223.714, -19.5948, 0.96", "-7.5462, 224.386, -19.6048, 0.88", "-7.6168, 225.707, -19.6408, 0.66", "-7.67505, 226.566, -19.6227, 0.81", "-7.72616, 227.472, -19.5436, 0.81", "-7.75668, 228.526, -19.3577, 0.74", "-7.73161, 230.587, -18.8254, 0.88", "-7.70992, 231.142, -18.6334, 1.18", "-7.58543, 232.576, -18.0143, 1.18", "-7.47917, 233.385, -17.6073, 1.18", "-7.32197, 234.241, -17.1475, 1.11", "-7.09392, 235.223, -16.6119, 0.96", "-6.93223, 235.899, -16.2472, 0.96", "-6.735, 236.728, -15.8736, 0.81", "-6.52894, 237.591, -15.5713, 1.11", "-6.40291, 238.086, -15.4551, 1.47", "-6.10641, 239.171, -15.3419, 1.03", "-5.85062, 240.083, -15.3355, 1.03", "-5.55487, 241.087, -15.4206, 1.25", "-5.37532, 241.785, -15.4999, 1.25", "-5.02463, 243.478, -15.6718, 0.88", "-4.90438, 244.362, -15.7151, 0.88", "-4.83662, 245.486, -15.7129, 1.18", "-4.83995, 246.706, -15.6344, 0.96", "-4.91171, 248.06, -15.4185, 0.81", "-5.01202, 249.237, -15.1178, 1.25", "-5.11029, 250.174, -14.7855, 0.66", "-5.2053, 251.115, -14.4013, 0.96", "-5.26956, 251.979, -14.0512, 1.25", "-5.30316, 252.825, -13.7265, 0.96", "-5.27839, 253.65, -13.4712, 0.96", "-5.20728, 254.594, -13.2067, 1.25", "-5.12817, 255.324, -13.0009, 1.55", "-5.01, 256.199, -12.7434, 1.55", "-4.90532, 256.836, -12.558, 1.25", "-4.74736, 257.767, -12.3356, 0.96" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-11.627, 85.446, -11.0085, 0.59", "-11.4152, 87.3866, -11.7382, 0.59", "-11.3576, 88.1055, -11.9879, 0.88", "-11.3133, 88.9578, -12.2448, 1.18", "-11.2602, 90.0271, -12.5128, 1.18", "-11.1963, 90.7752, -12.6961, 0.96", "-11.1153, 91.6109, -12.8951, 0.59", "-11.0768, 92.1465, -12.9837, 0.96", "-11.0129, 93.0207, -13.1283, 0.96", "-10.9461, 94.0583, -13.3244, 0.96", "-10.9087, 95.0324, -13.5334, 0.52", "-10.9159, 95.7416, -13.7027, 0.37", "-10.9646, 96.2001, -13.8383, 0.37", "-11.0835, 96.661, -13.9963, 0.81", "-11.2571, 97.0468, -14.1757, 1.18", "-11.3916, 97.3127, -14.3111, 1.18", "-11.6075, 97.788, -14.5264, 0.66", "-11.749, 98.214, -14.7054, 0.66", "-11.9051, 98.9236, -14.9605, 0.59", "-12.0086, 99.7981, -15.2242, 0.88", "-12.0688, 101.05, -15.5479, 1.11", "-12.0668, 101.747, -15.7005, 1.11", "-12.046, 102.343, -15.7964, 1.11", "-12.0202, 103.058, -15.854, 0.37", "-12.0202, 103.826, -15.8385, 0.37", "-12.0625, 104.335, -15.7687, 0.74", "-12.09, 104.496, -15.7377, 0.88", "-12.2385, 105.219, -15.5743, 0.88", "-12.3509, 105.766, -15.4195, 0.66", "-12.4816, 106.514, -15.1725, 0.52", "-12.5138, 106.864, -15.0663, 0.52", "-12.5085, 107.533, -14.9047, 0.96", "-12.4568, 107.989, -14.8328, 0.96", "-12.3805, 108.367, -14.8037, 1.18", "-12.308, 108.681, -14.8002, 1.18", "-12.1307, 109.505, -14.8262, 0.66", "-12.0689, 109.966, -14.8546, 0.88", "-12.052, 110.577, -14.9019, 0.88", "-12.0687, 111.057, -14.9617, 0.44", "-12.1043, 111.582, -15.0316, 0.74", "-12.1305, 111.905, -15.0689, 0.74", "-12.1625, 112.334, -15.0987, 0.52", "-12.1749, 112.87, -15.1259, 0.37", "-12.1605, 113.32, -15.1373, 0.37", "-12.1068, 113.871, -15.1318, 0.74", "-12.0535, 114.221, -15.1172, 0.74", "-11.9724, 114.69, -15.0901, 0.66", "-11.8367, 115.449, -15.0361, 0.74", "-11.7946, 115.677, -15.0168, 1.4", "-11.6868, 116.158, -14.9635, 1.4", "-11.5621, 116.606, -14.9277, 1.33", "-11.287, 117.404, -14.886, 0.44", "-11.0, 118.093, -14.8649, 0.44", "-10.7981, 118.551, -14.8663, 0.37", "-10.4444, 119.38, -14.9004, 0.37", "-10.1651, 120.077, -14.9515, 0.59", "-10.0152, 120.511, -15.0001, 0.59", "-9.91261, 120.912, -15.0621, 0.29", "-9.85195, 121.894, -15.243, 0.88", "-9.90913, 122.361, -15.3274, 1.77", "-10.009, 122.785, -15.3893, 2.06", "-10.1133, 123.155, -15.4248, 1.69", "-10.2676, 123.688, -15.4787, 1.18", "-10.4979, 124.503, -15.5763, 0.44", "-10.7023, 125.233, -15.6698, 0.37", "-10.929, 126.057, -15.782, 0.74", "-11.0247, 126.393, -15.8343, 0.74", "-11.2285, 127.122, -15.9673, 0.52", "-11.3845, 127.653, -16.0484, 0.44", "-11.4877, 127.986, -16.081, 0.66", "-11.6065, 128.31, -16.0908, 0.66", "-11.7892, 128.741, -16.0904, 0.37", "-11.9366, 129.069, -16.0688, 0.37", "-12.3862, 130.025, -15.8877, 0.59", "-12.6764, 130.697, -15.6947, 1.03", "-12.8175, 131.074, -15.5649, 1.4" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-33.7185, 96.3389, 0.747068, 0.29", "-33.8778, 97.5178, 0.982669, 0.29", "-34.0026, 98.0752, 1.09616, 0.44", "-34.1688, 98.4829, 1.21209, 0.66", "-34.4594, 98.9119, 1.41655, 0.29", "-34.805, 99.2962, 1.64862, 0.29", "-34.9996, 99.4943, 1.7761, 0.74", "-35.2769, 99.701, 1.95627, 0.88", "-35.9163, 100.133, 2.33638, 0.44", "-36.538, 100.561, 2.6759, 0.52", "-36.7134, 100.701, 2.7706, 0.81", "-36.9921, 101.009, 2.9456, 0.44", "-37.2255, 101.364, 3.144, 0.88", "-37.443, 101.804, 3.40523, 0.59", "-37.5916, 102.264, 3.62788, 0.29", "-37.6788, 102.662, 3.79317, 0.29", "-37.8021, 103.358, 4.06185, 0.96", "-37.9033, 103.984, 4.29602, 1.18", "-37.9956, 104.632, 4.53899, 0.81", "-38.1138, 105.526, 4.83745, 0.52", "-38.1788, 105.995, 4.97877, 0.52", "-38.2923, 106.7, 5.13595, 0.44", "-38.3921, 107.255, 5.23242, 0.66", "-38.5072, 107.876, 5.35285, 0.88", "-38.5821, 108.246, 5.4343, 0.52", "-38.6747, 108.702, 5.56341, 0.29", "-38.8071, 109.34, 5.74363, 0.29", "-38.9809, 110.191, 5.9798, 0.52", "-39.1466, 110.843, 6.14887, 0.81", "-39.3099, 111.438, 6.26826, 0.22", "-39.4261, 111.886, 6.34605, 0.22", "-39.6252, 112.628, 6.45667, 0.37", "-39.74, 113.01, 6.50419, 0.37", "-40.0143, 113.812, 6.58737, 0.37", "-40.302, 114.58, 6.66383, 0.29", "-40.5844, 115.377, 6.75845, 0.52", "-40.7176, 115.799, 6.80974, 0.88", "-40.9253, 116.662, 6.91626, 0.59", "-41.0045, 117.116, 6.96813, 0.44", "-41.0574, 117.676, 7.03445, 0.22", "-41.1242, 118.796, 7.16744, 0.22", "-41.1285, 119.299, 7.21458, 0.81", "-41.1075, 119.718, 7.23109, 1.33", "-41.0777, 120.128, 7.22317, 1.33", "-41.0073, 120.876, 7.18129, 0.59", "-40.9402, 121.368, 7.13332, 0.81", "-40.857, 121.822, 7.07171, 0.81", "-40.7046, 122.526, 6.93642, 0.52", "-40.4936, 123.417, 6.71783, 0.22", "-40.3144, 124.12, 6.51845, 0.22", "-40.0778, 124.965, 6.25145, 0.59", "-39.9127, 125.495, 6.08342, 0.81", "-39.6775, 126.242, 5.8435, 0.29", "-39.51, 126.784, 5.69017, 0.22", "-39.4338, 127.064, 5.6143, 0.59", "-39.4081, 127.279, 5.56071, 0.59", "-39.4778, 127.836, 5.42852, 0.22", "-39.6361, 128.332, 5.28524, 0.29", "-39.7854, 128.664, 5.16554, 0.81", "-39.8993, 128.89, 5.05543, 1.11", "-39.9839, 129.064, 4.95999, 1.11", "-40.3444, 129.915, 4.47845, 0.37", "-40.4721, 130.311, 4.27503, 0.96", "-40.6053, 130.871, 4.02511, 0.88", "-40.7039, 131.317, 3.83949, 0.88", "-40.8508, 131.918, 3.61523, 0.52", "-40.9685, 132.365, 3.4681, 0.74", "-41.194, 133.165, 3.24478, 0.29", "-41.429, 133.903, 3.02737, 0.59", "-41.6118, 134.405, 2.86805, 0.59", "-41.8303, 135.037, 2.59535, 0.29", "-41.9964, 135.547, 2.29491, 1.18", "-42.06, 135.782, 2.12938, 1.47", "-42.1692, 136.342, 1.68353, 1.18", "-42.2448, 136.888, 1.25051, 0.44", "-42.3254, 137.829, 0.530732, 0.22", "-42.3346, 138.198, 0.24095, 0.22", "-42.3239, 138.941, -0.303879, 1.18", "-42.3132, 139.131, -0.431337, 1.4", "-42.2139, 139.999, -0.930703, 0.44", "-42.1293, 140.499, -1.18806, 0.66", "-42.0555, 140.977, -1.39251, 0.66", "-41.9116, 141.656, -1.68541, 0.22", "-41.8249, 141.947, -1.82235, 0.59", "-41.6657, 142.391, -2.04198, 0.52", "-41.4529, 142.9, -2.29346, 0.96", "-41.2747, 143.372, -2.54949, 0.59", "-41.1173, 143.823, -2.80918, 0.37", "-40.9527, 144.28, -3.08988, 0.59", "-40.8312, 144.593, -3.26857, 0.81", "-40.551, 145.336, -3.68225, 0.22", "-40.3194, 145.973, -4.00336, 0.59", "-40.1807, 146.377, -4.19366, 0.52", "-40.0446, 146.858, -4.40785, 0.22", "-39.8605, 147.6, -4.72446, 0.22", "-39.6783, 148.422, -5.07043, 0.88", "-39.5902, 148.895, -5.26174, 1.69", "-39.5535, 149.159, -5.35376, 1.92", "-39.5203, 149.66, -5.53706, 1.25" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-33.7185, 96.3389, 0.747068, 0.52", "-34.7097, 96.5732, 0.767724, 0.52", "-35.3504, 96.7128, 0.783838, 0.59", "-36.0442, 96.8581, 0.805261, 0.44", "-36.52, 96.9717, 0.823449, 0.59", "-37.0562, 97.1291, 0.852829, 0.59", "-37.7039, 97.3582, 0.89739, 0.52", "-38.1165, 97.5277, 0.935438, 0.74", "-38.6445, 97.7848, 0.994839, 0.37", "-39.0393, 97.9984, 1.05292, 0.37", "-39.545, 98.2822, 1.13705, 0.37", "-39.989, 98.5161, 1.22154, 0.52", "-40.554, 98.7337, 1.32049, 0.52", "-40.9994, 98.8068, 1.37905, 0.29", "-41.6119, 98.8089, 1.41225, 0.81", "-41.9841, 98.7815, 1.41315, 1.11", "-42.5002, 98.7351, 1.39562, 1.25", "-43.3009, 98.6712, 1.3514, 0.66", "-43.9924, 98.6362, 1.29435, 0.37", "-44.9804, 98.6494, 1.15797, 0.37", "-45.6311, 98.7103, 1.02169, 0.29", "-46.4815, 98.849, 0.795186, 0.66", "-46.8076, 98.9289, 0.684417, 0.88", "-47.2687, 99.0777, 0.470108, 0.59", "-47.9773, 99.3205, 0.0508824, 0.37", "-48.4592, 99.4714, -0.289106, 0.37", "-48.8189, 99.5624, -0.574861, 0.96", "-49.3863, 99.6609, -1.08431, 1.18", "-50.3514, 99.7623, -1.97297, 0.59", "-50.7116, 99.7794, -2.30383, 0.44", "-51.1191, 99.7707, -2.65415, 0.29", "-51.6019, 99.7352, -3.03326, 0.15", "-52.3932, 99.6361, -3.60688, 0.88", "-52.7677, 99.584, -3.83608, 1.18", "-53.3015, 99.5315, -4.11188, 0.44", "-53.8085, 99.5177, -4.34262, 0.37", "-54.2748, 99.5365, -4.51607, 0.96", "-55.0471, 99.6266, -4.71395, 1.25", "-55.8723, 99.7945, -4.82121, 0.44", "-56.4026, 99.9402, -4.83442, 0.44", "-57.0814, 100.164, -4.79012, 1.03", "-57.6366, 100.378, -4.69453, 0.88", "-58.3602, 100.686, -4.52808, 0.74", "-59.4576, 101.198, -4.18322, 0.37", "-60.1905, 101.549, -3.90108, 0.88", "-60.4251, 101.661, -3.79401, 1.18", "-61.0274, 101.976, -3.481, 1.18" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "114.754, 7.9743, -37.3941, 0.29", "116.254, 10.2646, -41.2302, 0.29", "116.616, 10.9466, -42.1969, 0.52", "116.709, 11.1818, -42.4768, 0.52", "116.94, 12.0475, -43.3499, 0.29", "117.08, 12.8707, -44.0799, 0.96", "117.12, 13.1363, -44.2953, 1.33", "117.119, 13.5238, -44.4546, 1.33", "117.136, 14.3074, -44.7739, 0.59", "117.235, 15.0263, -45.1137, 0.37", "117.496, 15.6777, -45.5297, 0.22", "118.166, 16.3643, -46.1311, 0.22", "118.525, 16.5489, -46.3636, 0.59", "119.191, 16.7327, -46.7207, 0.59", "119.782, 16.81, -46.9895, 0.37", "120.535, 16.8444, -47.29, 0.96", "121.272, 16.8448, -47.5494, 0.96", "122.24, 16.814, -47.8785, 0.44", "122.729, 16.795, -48.0455, 0.52", "123.364, 16.7556, -48.2694, 0.22", "123.801, 16.7339, -48.4365, 0.74", "124.751, 16.7145, -48.814, 0.29", "125.187, 16.7297, -48.9973, 0.29", "125.866, 16.8062, -49.3068, 0.88", "126.671, 16.946, -49.6915, 0.37", "128.026, 17.2791, -50.3638, 0.96", "128.622, 17.4805, -50.6722, 1.4", "129.158, 17.7326, -50.9627, 0.59", "129.995, 18.2657, -51.4338, 0.22", "130.718, 18.8785, -51.8539, 0.22", "131.288, 19.54, -52.2014, 1.11", "131.676, 20.1935, -52.4664, 1.33", "132.016, 20.9464, -52.738, 1.33", "132.234, 21.5454, -52.9227, 1.33", "132.397, 22.1215, -53.066, 0.59", "132.644, 23.1202, -53.2875, 0.22", "132.968, 24.2457, -53.5004, 1.4", "133.171, 24.7746, -53.5946, 1.69", "133.662, 25.7922, -53.7878, 0.29", "133.93, 26.204, -53.9088, 0.66", "134.409, 26.7246, -54.1705, 0.66", "135.269, 27.2249, -54.7681, 0.22", "136.008, 27.3324, -55.4816, 1.03", "136.332, 27.2663, -55.9364, 1.03", "137.155, 26.7907, -57.6371, 0.74", "137.593, 26.4567, -58.6432, 1.03", "138.165, 25.8701, -60.1584, 1.11", "138.638, 25.2043, -61.6992, 1.11", "139.032, 24.4458, -63.3099, 0.74", "139.314, 23.7062, -64.834, 0.96" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "114.754, 7.9743, -37.3941, 0.37", "117.338, 5.95838, -37.8337, 0.37", "118.227, 5.26028, -37.7056, 0.44", "118.721, 4.82152, -37.4037, 0.44", "120.198, 3.46858, -36.0554, 0.74", "120.412, 3.29504, -35.8277, 0.88", "121.177, 2.76349, -34.9941, 0.37", "122.136, 2.14068, -33.7587, 0.37", "123.605, 1.22544, -31.7712, 0.88", "124.116, 0.921043, -31.0585, 1.03", "124.901, 0.47782, -29.9691, 0.29", "125.64, 0.0687457, -28.8845, 0.29", "126.22, -0.240991, -27.971, 0.29", "127.408, -0.725143, -26.3266, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-82.0661, -40.4795, -76.1296, 0.74", "-82.8938, -40.0068, -76.7451, 0.74", "-83.5475, -39.6581, -77.1996, 1.03", "-84.6299, -39.1522, -77.9728, 0.37", "-85.1989, -38.9315, -78.3975, 0.22", "-85.8984, -38.7141, -78.9445, 1.4", "-86.3937, -38.5828, -79.3397, 1.55", "-87.0626, -38.4729, -79.888, 1.55", "-88.2175, -38.3734, -80.8631, 0.81", "-89.0651, -38.3558, -81.5747, 0.52", "-89.7964, -38.379, -82.1702, 0.88", "-90.6315, -38.4279, -82.8523, 0.22", "-91.2685, -38.4587, -83.3847, 0.74", "-91.8168, -38.4529, -83.8635, 0.74", "-92.2246, -38.419, -84.2953, 0.74", "-92.8819, -38.336, -85.1187, 0.44", "-93.4082, -38.271, -85.8404, 0.22", "-93.6853, -38.2563, -86.2689, 0.81", "-94.0872, -38.2443, -86.9038, 0.81", "-95.5687, -38.1985, -89.2529, 0.52", "-96.157, -38.1824, -90.1538, 1.03", "-96.6593, -38.1809, -90.8476, 1.4", "-97.5212, -38.1936, -91.9141, 1.18", "-98.0407, -38.2052, -92.4972, 0.66", "-98.8428, -38.2104, -93.3294, 1.18", "-99.3159, -38.1941, -93.7772, 1.55", "-100.42, -38.1469, -94.8553, 0.52", "-100.873, -38.1352, -95.3271, 1.18", "-101.508, -38.1379, -96.0186, 1.18", "-102.626, -38.1835, -97.3559, 0.29", "-103.05, -38.222, -97.9167, 0.29", "-103.543, -38.2777, -98.6156, 0.29", "-104.086, -38.3356, -99.4303, 0.59", "-104.574, -38.3859, -100.177, 0.59", "-104.932, -38.4052, -100.721, 0.44", "-105.776, -38.4003, -101.98, 1.03", "-106.186, -38.3806, -102.631, 1.33", "-107.121, -38.2916, -104.123, 0.29", "-107.529, -38.2273, -104.756, 0.29", "-107.9, -38.1473, -105.308, 0.96", "-108.397, -38.0118, -105.992, 0.96", "-110.059, -37.3745, -107.969, 0.29", "-110.377, -37.2108, -108.292, 0.29", "-110.94, -36.8778, -108.745, 1.03", "-111.507, -36.5215, -109.101, 1.33", "-112.217, -36.0511, -109.441, 0.74", "-113.202, -35.3581, -109.796, 0.37", "-114.39, -34.4811, -110.096, 0.29", "-115.095, -33.9743, -110.282, 0.22", "-115.856, -33.4475, -110.478, 0.22", "-116.627, -32.9002, -110.686, 0.52", "-117.187, -32.494, -110.848, 0.96", "-117.671, -32.1432, -111.007, 1.18", "-118.169, -31.7991, -111.176, 1.18", "-118.86, -31.2971, -111.425, 0.74", "-119.496, -30.8375, -111.646, 0.22", "-119.819, -30.6056, -111.745, 0.44", "-120.25, -30.2862, -111.853, 0.44", "-120.776, -29.8613, -111.981, 0.22", "-121.301, -29.3947, -112.106, 0.22", "-121.645, -29.0605, -112.19, 0.88", "-122.015, -28.6837, -112.274, 1.25", "-122.185, -28.4843, -112.313, 1.25", "-122.927, -27.4732, -112.497, 0.22", "-123.287, -26.9155, -112.598, 0.22", "-123.636, -26.3113, -112.714, 0.88", "-123.912, -25.7738, -112.824, 1.25", "-124.296, -24.9303, -113.004, 0.22", "-124.722, -23.8869, -113.235, 0.22", "-125.034, -23.0156, -113.445, 0.88", "-125.201, -22.4744, -113.582, 0.88", "-125.333, -21.9487, -113.692, 0.37", "-125.491, -21.1038, -113.826, 0.15", "-125.595, -20.2532, -113.927, 0.96", "-125.643, -19.618, -113.982, 1.18", "-125.741, -17.9709, -114.029, 0.22", "-125.837, -16.4502, -113.998, 0.81", "-125.875, -15.65, -113.957, 0.74", "-125.896, -14.5996, -113.862, 0.29", "-125.897, -14.2378, -113.818, 0.29", "-125.893, -13.2279, -113.669, 0.52", "-125.881, -12.7283, -113.59, 0.66", "-125.817, -11.8053, -113.517, 0.22", "-125.758, -11.3454, -113.51, 0.22", "-125.586, -10.5813, -113.544, 0.81", "-125.446, -10.1679, -113.601, 1.11", "-125.16, -9.57853, -113.764, 1.11", "-124.645, -8.74624, -114.11, 0.22", "-124.342, -8.33261, -114.345, 0.59", "-124.154, -8.08426, -114.506, 0.59", "-123.783, -7.58446, -114.843, 0.29", "-123.252, -6.79732, -115.403, 0.22", "-122.752, -6.01345, -115.992, 0.88", "-122.351, -5.29656, -116.508, 1.11", "-121.772, -4.13408, -117.279, 0.22", "-121.519, -3.58968, -117.617, 0.52", "-121.15, -2.71532, -118.164, 0.22", "-120.782, -1.7191, -118.804, 0.22", "-120.444, -0.702666, -119.474, 0.66", "-120.185, 0.117684, -120.052, 0.66", "-119.919, 0.990388, -120.762, 0.88", "-119.615, 1.99549, -121.648, 0.66", "-119.431, 2.63284, -122.238, 0.44", "-119.285, 3.20025, -122.8, 0.66", "-119.218, 3.44251, -123.074, 0.66", "-118.959, 4.43818, -124.324, 0.22", "-118.795, 5.14296, -125.231, 0.22", "-118.698, 5.50135, -125.655, 1.33" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-82.0661, -40.4795, -76.1296, 0.44", "-83.2696, -41.7443, -76.4286, 0.44", "-84.1855, -42.7371, -76.7212, 0.29", "-84.6168, -43.2078, -76.8953, 0.66", "-85.0654, -43.6882, -77.126, 0.66", "-85.863, -44.5288, -77.6564, 0.29", "-86.2747, -44.9435, -77.9533, 0.59", "-86.9311, -45.6366, -78.5147, 0.37", "-87.6748, -46.4287, -79.2374, 1.18", "-88.3146, -47.172, -79.9595, 1.62", "-88.9282, -48.0787, -80.919, 1.62", "-89.6397, -49.55, -82.6135, 0.29", "-89.8719, -50.2262, -83.4313, 0.29", "-89.981, -50.6895, -83.9977, 0.66", "-90.1615, -51.6485, -85.1214, 0.52", "-90.4984, -53.539, -87.1792, 1.18", "-90.729, -54.8702, -88.5079, 1.77", "-90.8762, -55.6623, -89.2659, 1.77", "-91.4791, -57.6959, -91.22, 0.29", "-91.8012, -58.5099, -91.9456, 0.29", "-92.1799, -59.3453, -92.6298, 0.29", "-92.7487, -60.6168, -93.6016, 1.62", "-93.0677, -61.461, -94.2429, 1.69", "-94.0395, -64.962, -96.9516, 0.29", "-94.2252, -66.0534, -97.81, 0.29", "-94.285, -66.9565, -98.5338, 0.29", "-94.2066, -68.988, -100.138, 1.25", "-93.9336, -70.5996, -101.387, 0.66", "-93.5038, -71.9065, -102.328, 0.29", "-93.0486, -72.7851, -102.886, 1.03", "-92.627, -73.4785, -103.342, 1.03", "-92.0963, -74.3036, -103.847, 0.44", "-91.3397, -75.3849, -104.424, 0.29", "-90.8709, -76.043, -104.758, 0.88", "-90.5831, -76.4645, -104.965, 1.33", "-89.1635, -78.9233, -106.225, 0.29", "-88.7852, -79.7753, -106.651, 0.96", "-88.6215, -80.2942, -106.9, 0.81", "-88.4337, -81.2699, -107.372, 0.37", "-88.2804, -82.5272, -108.0, 0.66", "-88.1447, -84.1229, -108.805, 0.52", "-88.0843, -85.1179, -109.317, 0.88", "-88.0337, -85.8691, -109.767, 0.88", "-87.8045, -88.1674, -111.53, 0.44", "-87.7282, -88.9505, -112.262, 0.37", "-87.609, -90.0218, -113.404, 0.29", "-87.4771, -90.8058, -114.307, 0.96", "-87.2379, -92.0051, -115.784, 1.03", "-86.7414, -94.3424, -118.709, 0.74", "-86.4549, -95.7009, -120.358, 1.33", "-86.2372, -96.8326, -121.627, 1.11", "-86.0647, -97.9094, -122.703, 0.44", "-85.9662, -98.691, -123.347, 0.81", "-85.8476, -99.6795, -123.973, 0.88", "-85.6338, -101.395, -124.809, 0.22", "-85.4551, -102.466, -125.336, 0.22", "-85.3663, -103.026, -125.645, 0.59", "-85.2677, -103.764, -126.097, 0.59", "-84.9978, -105.76, -127.435, 0.37", "-84.8298, -106.865, -128.295, 0.59", "-84.5883, -108.38, -129.577, 0.44", "-84.4644, -109.155, -130.334, 0.74", "-84.3922, -109.694, -130.897, 0.74", "-84.3192, -110.641, -131.915, 0.37", "-84.2807, -112.247, -133.876, 0.96", "-84.2807, -112.922, -134.821, 0.88", "-84.4011, -114.879, -137.826, 0.66", "-84.4646, -115.567, -138.956, 0.96", "-84.5466, -116.204, -140.047, 0.96", "-84.9467, -118.585, -144.185, 0.66", "-85.2887, -120.367, -147.12, 0.66", "-85.7158, -122.531, -150.472, 0.44", "-85.991, -123.893, -152.323, 0.74", "-86.1353, -124.63, -153.194, 0.37", "-86.3086, -125.52, -154.045, 0.81", "-86.6832, -127.21, -155.116, 0.22", "-86.8611, -128.035, -155.483, 0.81", "-87.1471, -129.657, -155.925, 0.22", "-87.4859, -131.672, -156.305, 0.22", "-87.6264, -132.576, -156.465, 0.88", "-87.7394, -133.257, -156.594, 0.88" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-76.3136, -65.1202, -25.5235, 0.96", "-77.7984, -66.1732, -26.3787, 0.96", "-78.7892, -66.8326, -26.7762, 0.22", "-79.2968, -67.1704, -26.9798, 0.52", "-79.6961, -67.4362, -27.14, 0.66", "-80.2928, -67.8333, -27.3794, 0.44", "-80.9687, -68.2831, -27.6505, 1.33", "-81.9421, -68.7387, -27.7875, 1.84" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-76.3136, -65.1202, -25.5235, 0.37", "-77.7704, -64.7129, -23.6861, 0.37", "-78.2657, -64.6063, -23.0524, 0.37", "-79.0966, -64.4274, -21.9891, 0.22", "-79.5455, -64.3308, -21.4148, 1.03", "-80.0064, -64.2315, -20.825, 1.77", "-80.5558, -64.1133, -20.122, 2.14", "-80.9479, -64.0584, -19.7334, 2.14" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "47.906, -88.1611, -89.8487, 0.44", "48.9114, -88.1057, -89.7067, 0.44", "49.5462, -88.0075, -89.6051, 0.22", "50.1595, -87.7989, -89.5332, 0.22", "50.8816, -87.487, -89.515, 0.44", "51.1061, -87.3674, -89.538, 0.81", "51.4714, -87.1547, -89.5942, 0.81", "51.8021, -86.9182, -89.725, 0.37", "52.4458, -86.3463, -90.1335, 0.44", "52.7498, -85.9929, -90.5153, 0.59", "53.1631, -85.4264, -91.2296, 0.15", "53.4288, -85.0438, -91.7713, 0.29", "53.9131, -84.3495, -92.8435, 1.18", "54.1812, -83.9736, -93.4695, 1.18", "55.2736, -82.5289, -95.9741, 0.74", "55.4787, -82.2654, -96.418, 0.74", "55.759, -81.9248, -96.9791, 0.96", "56.0122, -81.6315, -97.4328, 0.96", "56.4607, -81.1444, -98.0699, 0.52", "57.0322, -80.5368, -98.6865, 0.29", "57.5645, -80.006, -99.0739, 0.29", "58.2585, -79.3134, -99.5221, 1.33", "58.6038, -78.9725, -99.7141, 1.33", "59.3034, -78.285, -100.031, 0.44", "60.0267, -77.5851, -100.273, 0.37", "60.6162, -77.0227, -100.397, 0.37", "60.8871, -76.7807, -100.42, 0.37", "61.3841, -76.3614, -100.41, 0.22", "62.4341, -75.5238, -100.342, 1.55", "62.8802, -75.197, -100.293, 1.77", "63.9257, -74.4368, -100.179, 0.37", "64.2844, -74.1386, -100.134, 0.44", "64.5463, -73.8829, -100.101, 0.44", "64.8107, -73.5914, -100.073, 0.44", "65.4159, -72.8925, -100.036, 0.29", "65.8149, -72.4128, -100.032, 0.22", "66.273, -71.8568, -100.045, 0.22", "67.0721, -70.8898, -100.059, 1.18", "67.5744, -70.2801, -100.05, 1.4", "67.7538, -70.0668, -100.039, 1.62", "67.9778, -69.8111, -100.026, 1.62", "68.5523, -69.2496, -100.032, 0.96", "69.0037, -68.8602, -100.053, 0.59", "69.6781, -68.3121, -100.105, 0.52", "70.389, -67.7451, -100.162, 0.37", "70.9482, -67.3157, -100.214, 1.03", "72.197, -66.4551, -100.35, 0.22", "72.6342, -66.2051, -100.401, 0.66", "72.9596, -66.0634, -100.436, 0.66", "73.7161, -65.8921, -100.505, 0.29", "74.2634, -65.9507, -100.523, 0.29", "74.9535, -66.2803, -100.611, 0.29", "75.6559, -66.8901, -100.81, 1.33", "75.9589, -67.2506, -101.001, 1.47", "76.4186, -67.8825, -101.44, 0.74", "76.78, -68.3956, -101.875, 0.44", "77.7117, -69.5833, -103.112, 0.96", "78.0001, -69.8902, -103.503, 0.74", "78.7591, -70.5772, -104.52, 0.29", "79.1946, -70.8977, -105.031, 0.52", "79.7629, -71.2443, -105.584, 0.29", "80.3712, -71.5663, -106.048, 0.66", "80.7752, -71.7522, -106.266, 0.66", "81.3525, -71.9543, -106.552, 0.29", "82.3554, -72.2427, -107.011, 0.96", "82.9945, -72.4325, -107.316, 0.29", "83.6668, -72.6275, -107.659, 1.11", "84.73, -72.9153, -108.215, 0.37", "85.8166, -73.1719, -108.78, 0.96", "86.5654, -73.3126, -109.164, 0.52", "87.2518, -73.4225, -109.513, 0.96", "87.5112, -73.4592, -109.637, 0.96", "88.5039, -73.6107, -110.089, 0.29", "88.9668, -73.6933, -110.271, 0.81", "89.3168, -73.7596, -110.375, 0.81", "90.1097, -73.8785, -110.574, 0.29", "90.7453, -73.9443, -110.705, 0.81" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "47.906, -88.1611, -89.8487, 0.74", "48.1763, -89.4909, -89.8399, 0.74", "48.4724, -90.4972, -89.7507, 0.81", "48.8597, -91.5334, -89.6037, 0.81", "49.3617, -92.6407, -89.4102, 0.59", "49.833, -93.4977, -89.2401, 0.37", "50.1412, -93.9685, -89.1241, 0.37", "50.8334, -94.8614, -88.8113, 0.88", "51.1363, -95.1788, -88.6842, 0.88", "51.4988, -95.5355, -88.5368, 0.88", "51.9792, -96.0393, -88.3795, 0.29", "52.7558, -97.0415, -88.19, 0.29", "53.1252, -97.6902, -88.1469, 1.03", "53.3539, -98.1674, -88.137, 1.33", "53.7356, -98.9929, -88.1101, 1.18", "54.2071, -99.9626, -88.0616, 1.03", "54.6059, -100.686, -88.0098, 0.81", "55.3262, -101.682, -87.8799, 0.37", "56.1688, -102.545, -87.675, 0.96", "56.7308, -102.997, -87.5278, 1.18", "57.363, -103.401, -87.3364, 1.18", "57.9885, -103.713, -87.1444, 0.88", "58.9924, -104.085, -86.8967, 0.44", "59.4898, -104.208, -86.8429, 0.44", "60.4289, -104.369, -86.892, 0.37", "61.1949, -104.46, -87.0595, 0.37", "62.2848, -104.568, -87.4666, 0.66", "63.0807, -104.661, -87.8554, 1.03", "64.0956, -104.756, -88.4443, 0.74", "64.7885, -104.808, -88.8908, 0.52", "65.6671, -104.85, -89.5251, 0.44", "66.3696, -104.901, -90.091, 0.44", "67.07, -105.019, -90.657, 0.37" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-4.74736, 257.767, -12.3356, 0.29", "-4.94055, 260.32, -12.7525, 0.29", "-4.91944, 260.89, -12.767, 0.29", "-4.89459, 261.49, -12.7267, 0.66", "-4.92121, 262.119, -12.6208, 0.88", "-5.01497, 262.862, -12.45, 0.88", "-5.28406, 264.126, -11.9495, 0.52", "-5.5718, 265.076, -11.284, 0.66", "-5.81009, 265.631, -10.7251, 0.81", "-6.24069, 266.418, -9.77517, 0.37", "-6.60131, 266.965, -9.05465, 0.52", "-7.44455, 268.063, -7.52295, 0.74", "-8.11157, 268.823, -6.45799, 1.03", "-9.37523, 270.113, -4.60765, 1.03", "-9.98476, 270.717, -3.7536, 0.74", "-10.4686, 271.224, -3.07837, 0.44", "-10.9308, 271.732, -2.43531, 0.44", "-11.667, 272.582, -1.4698, 0.44", "-12.7655, 273.908, -0.0876969, 0.88", "-13.3452, 274.662, 0.623159, 1.18", "-13.733, 275.201, 1.14458, 0.52", "-14.1227, 275.801, 1.73247, 0.52", "-14.593, 276.667, 2.52764, 0.59", "-14.8636, 277.297, 3.02014, 0.81", "-15.1558, 278.116, 3.48105, 0.29", "-15.3672, 278.609, 3.71737, 0.29", "-15.7054, 279.169, 3.97791, 0.66", "-16.1134, 279.639, 4.27493, 0.66", "-16.4893, 280.009, 4.59401, 0.37", "-16.8565, 280.361, 4.97685, 0.66", "-17.3234, 280.852, 5.53189, 0.81", "-17.7078, 281.331, 6.03938, 0.74", "-18.702, 282.858, 7.56284, 0.44", "-19.0271, 283.542, 8.18788, 0.37", "-19.2031, 284.182, 8.68753, 0.37", "-19.2909, 285.081, 9.25889, 0.29", "-19.2733, 285.78, 9.6439, 0.15", "-19.1995, 286.333, 9.8876, 0.44", "-19.1248, 286.635, 9.96286, 0.44", "-19.0602, 286.912, 10.0271, 0.44", "-18.8298, 288.719, 10.5766, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-4.74736, 257.767, -12.3356, 0.74", "-4.74706, 259.026, -12.8413, 0.74", "-4.80402, 260.13, -13.2486, 0.74", "-4.97065, 261.905, -13.8657, 0.96", "-5.15745, 263.196, -14.2395, 0.96", "-5.46123, 264.716, -14.5826, 0.74", "-5.96606, 266.815, -14.9596, 0.59", "-6.26418, 267.832, -15.0603, 0.81", "-6.67209, 269.173, -15.0963, 0.81", "-7.17753, 270.868, -15.0215, 0.81", "-7.64957, 272.731, -14.8324, 0.96", "-7.89701, 273.99, -14.6558, 0.96", "-8.14666, 276.115, -14.335, 0.74", "-8.18181, 277.286, -14.154, 1.03", "-8.12706, 278.132, -14.0303, 1.03", "-7.91851, 279.576, -13.8847, 1.03", "-7.78175, 280.337, -13.8345, 1.03", "-7.61017, 281.492, -13.8082, 1.03", "-7.55194, 282.48, -13.8029, 1.03", "-7.58354, 283.627, -13.8271, 0.96", "-7.74904, 284.892, -13.8788, 0.74", "-7.96648, 285.923, -13.9484, 0.74", "-8.2965, 287.133, -14.0333, 0.88", "-8.80743, 288.681, -14.1348, 1.11", "-9.24025, 289.845, -14.2181, 1.11", "-9.97914, 291.733, -14.3461, 0.96", "-10.3719, 292.766, -14.3995, 0.96", "-10.7388, 293.774, -14.4239, 0.96", "-11.0536, 294.635, -14.4218, 0.96", "-11.4671, 295.725, -14.3918, 0.81", "-11.9566, 297.045, -14.3221, 0.96", "-12.3007, 298.029, -14.2301, 0.96", "-12.6877, 299.184, -14.0511, 0.96", "-12.9415, 300.051, -13.8753, 1.25", "-13.2055, 301.078, -13.5907, 1.25", "-13.5253, 302.574, -13.0644, 1.11", "-13.7127, 303.845, -12.5941, 0.88", "-13.7876, 305.169, -12.1005, 0.74", "-13.7453, 306.075, -11.7917, 1.18", "-13.5974, 307.154, -11.4435, 1.18", "-13.482, 307.831, -11.222, 1.18", "-13.2882, 309.059, -10.8137, 0.96", "-13.1767, 309.97, -10.5598, 0.81", "-13.1077, 310.976, -10.3345, 0.81", "-13.0904, 312.133, -10.1016, 0.81", "-13.1155, 313.591, -9.84227, 0.81", "-13.1826, 314.752, -9.63992, 1.11", "-13.2892, 315.99, -9.44526, 1.11", "-13.4169, 317.309, -9.34992, 0.96", "-13.5593, 318.686, -9.36452, 0.96", "-13.7658, 320.561, -9.56405, 0.88", "-13.956, 322.274, -9.90602, 0.88", "-14.1215, 323.722, -10.3036, 0.88", "-14.3695, 325.971, -11.0367, 0.88", "-14.5522, 327.652, -11.626, 1.11", "-14.6989, 329.042, -12.1404, 1.11", "-14.8384, 330.325, -12.5564, 1.11", "-14.9639, 331.794, -12.8988, 0.81", "-15.0731, 334.074, -13.1916, 1.11", "-15.0715, 335.032, -13.2002, 1.11", "-14.9695, 336.621, -13.1263, 1.11", "-14.7212, 339.007, -12.9254, 0.96", "-14.4887, 340.829, -12.7333, 0.96", "-14.3186, 342.057, -12.6394, 0.96", "-14.1718, 343.103, -12.6272, 0.96", "-13.861, 345.056, -12.6868, 0.81", "-13.6169, 346.358, -12.7712, 0.81", "-13.3195, 347.875, -12.9244, 0.66", "-12.8668, 350.216, -13.2024, 0.66", "-12.5278, 352.142, -13.4343, 0.66", "-12.2073, 354.517, -13.7333, 1.03", "-12.1185, 355.612, -13.8602, 1.03", "-12.0361, 357.739, -14.1661, 0.81", "-12.0481, 359.025, -14.3791, 0.81", "-12.1247, 360.361, -14.6152, 0.96", "-12.3014, 362.322, -15.0002, 0.66", "-12.4624, 363.738, -15.3071, 0.88", "-12.634, 365.375, -15.6373, 0.88", "-12.7894, 367.144, -15.9314, 0.88", "-12.9259, 369.14, -16.1755, 1.03", "-12.9476, 370.241, -16.2944, 1.03", "-12.9232, 371.361, -16.3975, 1.03", "-12.8482, 373.309, -16.5295, 0.81", "-12.7927, 375.155, -16.5909, 0.81", "-12.7849, 376.385, -16.623, 0.81", "-12.8533, 378.914, -16.6678, 0.81", "-13.0054, 380.781, -16.7091, 1.25", "-13.099, 381.446, -16.738, 1.33", "-13.3005, 382.556, -16.8209, 1.33", "-13.5516, 383.814, -16.9481, 1.18", "-13.7632, 384.881, -17.0872, 0.74", "-14.0863, 386.426, -17.305, 0.66", "-14.3187, 387.662, -17.516, 0.96", "-14.4861, 388.785, -17.7327, 0.96", "-14.5838, 389.772, -17.906, 0.66", "-14.653, 391.092, -18.0565, 0.66", "-14.7107, 392.775, -18.148, 0.66", "-14.754, 394.096, -18.1488, 0.96", "-14.8175, 395.134, -18.1379, 0.96", "-14.9292, 396.249, -18.1693, 0.74", "-15.2231, 398.726, -18.3296, 0.74", "-15.3292, 399.53, -18.3984, 0.88", "-15.6072, 401.618, -18.6327, 0.96", "-15.8737, 403.578, -18.8672, 0.81", "-16.1447, 405.593, -19.1294, 0.66", "-16.3477, 407.357, -19.3778, 0.81", "-16.4848, 408.76, -19.5473, 0.96", "-16.6354, 410.875, -19.7386, 0.74", "-16.7024, 411.93, -19.7917, 1.03", "-16.8098, 413.281, -19.7609, 1.03", "-17.0123, 415.227, -19.6337, 1.33", "-17.1742, 416.469, -19.5479, 1.55", "-17.4739, 418.497, -19.412, 0.81", "-17.717, 419.878, -19.3342, 0.66", "-17.9951, 421.272, -19.2928, 0.66", "-18.2161, 422.284, -19.3028, 0.66", "-18.5506, 423.826, -19.3835, 0.66", "-18.7843, 425.115, -19.4823, 0.66", "-18.9886, 426.514, -19.5715, 1.25", "-19.0523, 427.144, -19.612, 1.03", "-19.1429, 428.853, -19.7308, 0.81", "-19.1762, 430.38, -19.8113, 0.81", "-19.1691, 432.062, -19.8903, 0.66", "-19.1199, 433.48, -19.9326, 0.66", "-19.036, 434.886, -19.9474, 0.96", "-18.948, 436.122, -19.9406, 1.4", "-18.8723, 437.113, -19.9205, 1.4", "-18.8284, 437.845, -19.906, 1.4", "-18.7931, 439.15, -19.889, 0.88", "-18.7632, 440.766, -19.8784, 0.74", "-18.7351, 441.824, -19.8792, 0.74", "-18.6886, 443.578, -19.8949, 0.74", "-18.6324, 445.065, -19.919, 0.66", "-18.546, 446.737, -19.9616, 0.66", "-18.4012, 449.015, -20.0449, 0.66", "-18.2673, 450.671, -20.1041, 0.74", "-18.1601, 451.697, -20.1393, 0.74", "-18.0016, 452.914, -20.1788, 0.96", "-17.844, 454.0, -20.2042, 1.11", "-17.7258, 454.815, -20.2253, 1.11", "-17.5652, 456.208, -20.271, 0.74", "-17.4455, 457.413, -20.3283, 0.59", "-17.2996, 458.777, -20.3912, 0.59", "-17.1331, 460.076, -20.4611, 0.88", "-17.049, 460.716, -20.5073, 1.25", "-16.9282, 461.676, -20.5969, 1.4", "-16.8515, 462.35, -20.6751, 1.4", "-16.7676, 463.365, -20.8099, 0.88", "-16.7044, 464.587, -20.9897, 0.66", "-16.6799, 466.184, -21.2352, 0.66", "-16.6918, 467.374, -21.3978, 0.66", "-16.7181, 468.174, -21.4978, 0.52", "-16.7921, 469.699, -21.6709, 0.81", "-16.8621, 470.882, -21.8085, 0.81", "-16.9278, 472.043, -21.9299, 0.66", "-16.984, 473.804, -22.0864, 0.59", "-16.9959, 474.776, -22.154, 0.88", "-16.9875, 475.93, -22.2247, 1.11", "-16.9598, 477.078, -22.2814, 1.11", "-16.9251, 477.996, -22.3188, 1.11", "-16.8796, 478.837, -22.3467, 0.88", "-16.8008, 479.854, -22.3927, 0.52", "-16.7074, 480.88, -22.4364, 0.81", "-16.6151, 481.92, -22.4618, 0.81", "-16.5725, 482.533, -22.4575, 0.81", "-16.5115, 483.63, -22.4408, 0.96", "-16.4628, 484.993, -22.4131, 0.59", "-16.4345, 485.969, -22.3899, 0.44", "-16.3957, 487.391, -22.3335, 0.44", "-16.3638, 488.473, -22.2782, 1.11", "-16.354, 488.963, -22.2494, 1.4", "-16.3754, 490.018, -22.1692, 1.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-12.8175, 131.074, -15.5649, 0.29", "-13.532, 132.285, -16.0258, 0.29", "-14.078, 133.32, -16.5026, 0.52", "-14.4489, 134.054, -16.878, 0.52", "-15.1087, 135.435, -17.5995, 0.66", "-15.36, 135.992, -17.8918, 0.66", "-15.6165, 136.564, -18.1411, 0.37", "-16.2909, 138.183, -18.5898, 0.29", "-16.5021, 138.782, -18.6594, 0.59", "-16.7213, 139.52, -18.6656, 0.81", "-16.8451, 139.974, -18.6205, 0.81", "-17.3709, 141.895, -18.298, 0.74", "-17.6686, 142.923, -18.0665, 0.74", "-18.0842, 144.186, -17.7212, 0.44", "-18.3752, 145.027, -17.5227, 0.29", "-18.6752, 145.871, -17.3736, 0.29", "-18.877, 146.437, -17.3177, 0.52", "-19.0912, 147.101, -17.3319, 0.52", "-19.3312, 147.909, -17.4013, 0.52", "-19.7021, 149.199, -17.5787, 0.74", "-19.9195, 149.988, -17.7232, 0.96", "-20.064, 150.564, -17.8439, 0.96", "-20.2463, 151.387, -18.0221, 0.59", "-20.4327, 152.391, -18.2434, 0.37", "-20.5399, 153.328, -18.5096, 0.22", "-20.5668, 153.954, -18.7082, 0.22", "-20.566, 154.544, -18.8875, 0.74", "-20.5436, 155.408, -19.1499, 1.03", "-20.5351, 155.867, -19.2867, 1.03", "-20.5174, 157.601, -19.7841, 0.44", "-20.4913, 158.801, -20.1257, 0.44", "-20.4809, 159.886, -20.396, 0.37", "-20.4851, 160.87, -20.6174, 0.37", "-20.4996, 161.807, -20.7977, 0.37", "-20.5197, 162.799, -20.9319, 0.37", "-20.5209, 163.761, -21.0045, 0.37", "-20.4246, 165.29, -21.1074, 0.88", "-20.3272, 166.065, -21.1393, 1.18", "-20.2276, 166.642, -21.1506, 1.18", "-20.0285, 167.571, -21.151, 0.74", "-19.7515, 168.773, -21.127, 0.52", "-19.5016, 169.894, -21.0943, 0.44", "-19.2147, 171.139, -21.0484, 0.37", "-19.0631, 171.8, -21.0098, 0.37", "-18.8291, 172.826, -20.9159, 0.37", "-18.5512, 174.06, -20.749, 0.59", "-18.384, 174.831, -20.6036, 1.03", "-18.2264, 175.55, -20.445, 1.03", "-18.0666, 176.325, -20.2656, 0.96", "-17.8997, 177.397, -20.0211, 0.29", "-17.794, 178.388, -19.8449, 0.29", "-17.763, 178.951, -19.7818, 0.52", "-17.7675, 179.486, -19.7454, 0.52", "-17.8108, 180.128, -19.7289, 0.29", "-17.9111, 181.012, -19.746, 0.52", "-18.0589, 182.079, -19.7701, 0.66", "-18.1532, 183.0, -19.7431, 0.66", "-18.1853, 183.867, -19.68, 0.52", "-18.1719, 184.463, -19.6281, 0.81", "-18.1188, 185.133, -19.5949, 1.11", "-18.0091, 186.193, -19.5922, 0.15", "-17.8922, 187.212, -19.6133, 0.15", "-17.7926, 187.92, -19.6467, 0.52", "-17.592, 189.122, -19.7372, 0.59", "-17.3486, 190.463, -19.8603, 0.29", "-17.1651, 191.526, -19.9743, 0.29", "-17.0242, 192.408, -20.1014, 0.96", "-16.9597, 192.895, -20.1738, 0.96", "-16.8608, 193.69, -20.2556, 0.59", "-16.7576, 194.421, -20.3116, 0.22", "-16.624, 195.456, -20.3675, 0.22", "-16.5177, 196.336, -20.4289, 0.88", "-16.4759, 196.846, -20.4757, 0.88", "-16.4538, 197.48, -20.5427, 0.88", "-16.4655, 198.548, -20.6797, 0.29", "-16.5424, 199.603, -20.8393, 0.22", "-16.6161, 200.064, -20.9075, 0.22", "-16.8681, 201.043, -21.0249, 0.81", "-17.0166, 201.543, -21.0538, 1.11", "-17.1028, 201.835, -21.0519, 1.11", "-17.2678, 202.683, -21.0122, 0.88", "-17.3324, 203.522, -20.9736, 0.59", "-17.3269, 204.494, -20.9306, 0.29", "-17.2443, 205.871, -20.8741, 0.29", "-17.1684, 206.978, -20.8439, 0.74", "-17.0446, 208.699, -20.8721, 0.52", "-16.9561, 209.769, -20.9574, 1.03", "-16.8904, 210.612, -21.0878, 1.03", "-16.8783, 211.136, -21.2082, 0.74", "-16.968, 212.25, -21.5779, 0.44", "-17.198, 213.392, -22.0023, 0.88", "-17.4018, 214.118, -22.2606, 1.18", "-17.4992, 214.48, -22.3943, 1.18", "-17.6962, 215.305, -22.6878, 0.59", "-17.9297, 216.538, -23.0871, 0.29", "-18.1102, 217.822, -23.4413, 0.81", "-18.2633, 219.06, -23.7191, 0.52", "-18.3619, 219.871, -23.8868, 0.52", "-18.4554, 220.669, -24.054, 0.74", "-18.5883, 221.664, -24.2579, 0.74", "-18.7804, 222.765, -24.4594, 0.22", "-18.8745, 223.165, -24.5476, 0.22", "-19.0546, 223.783, -24.6953, 0.52", "-19.1903, 224.22, -24.787, 0.52", "-19.4333, 225.067, -24.9655, 0.29", "-19.6214, 225.788, -25.1136, 0.29", "-19.8293, 226.682, -25.2947, 1.03", "-19.9788, 227.441, -25.4336, 1.03", "-20.0742, 227.969, -25.5083, 1.03", "-20.2001, 228.745, -25.5747, 0.52", "-20.2811, 229.396, -25.5893, 0.29", "-20.3644, 230.065, -25.5626, 0.59", "-20.418, 230.516, -25.5054, 0.59", "-20.5031, 231.458, -25.3407, 0.22", "-20.5609, 232.41, -25.1465, 0.81", "-20.5728, 233.032, -25.0054, 1.03", "-20.5677, 233.252, -24.9551, 1.03", "-20.5384, 234.181, -24.7571, 0.59", "-20.5296, 235.099, -24.5841, 0.37", "-20.5536, 235.615, -24.4969, 0.37", "-20.6489, 236.307, -24.3994, 0.66", "-20.742, 236.746, -24.3446, 0.66", "-21.1017, 237.978, -24.2369, 0.29", "-21.3168, 238.575, -24.2127, 0.29", "-21.6878, 239.509, -24.2019, 0.74", "-21.9737, 240.219, -24.1972, 0.74", "-22.2829, 240.992, -24.1865, 0.74", "-22.6797, 242.041, -24.1497, 0.29", "-23.0027, 242.979, -24.0941, 0.29", "-23.3783, 244.35, -23.9531, 1.33", "-23.5145, 245.042, -23.8342, 1.33", "-23.6369, 246.026, -23.6226, 1.11", "-23.6795, 246.864, -23.4061, 0.59", "-23.6287, 247.759, -23.1515, 0.44", "-23.3472, 249.553, -22.6935, 0.29", "-23.0036, 250.83, -22.4268, 0.74", "-22.752, 251.57, -22.3326, 0.81", "-22.5053, 252.197, -22.3104, 0.44", "-21.9981, 253.414, -22.3746, 0.22", "-21.545, 254.472, -22.5102, 0.81", "-21.3309, 254.954, -22.6081, 0.81", "-20.9026, 255.931, -22.8478, 0.22", "-20.5861, 256.704, -23.0218, 0.22", "-20.2229, 257.647, -23.2316, 0.81", "-20.1296, 257.914, -23.2799, 0.81", "-19.8044, 258.851, -23.4089, 0.29", "-19.5297, 259.623, -23.4933, 0.88", "-19.2032, 260.482, -23.5458, 0.88", "-18.708, 261.818, -23.5853, 0.22", "-18.4081, 262.755, -23.5953, 0.74", "-18.3302, 263.056, -23.5923, 0.88", "-18.1465, 264.108, -23.5957, 0.15", "-18.0432, 264.975, -23.5993, 0.52", "-17.985, 265.734, -23.6069, 0.22", "-17.9478, 266.49, -23.6427, 0.66", "-17.9349, 266.868, -23.6836, 0.88", "-17.9299, 268.399, -23.935, 0.22", "-17.9472, 268.862, -24.0327, 0.59", "-17.9897, 269.518, -24.1968, 0.44", "-18.0755, 270.422, -24.4163, 0.22", "-18.1422, 270.972, -24.5333, 0.37", "-18.2997, 271.944, -24.6998, 0.15", "-18.5014, 272.891, -24.8105, 0.81", "-18.6304, 273.442, -24.8569, 1.11", "-18.8412, 274.302, -24.8955, 1.03", "-19.0385, 275.11, -24.8997, 0.29", "-19.223, 275.911, -24.9016, 0.29", "-19.3932, 276.641, -24.9118, 0.29", "-19.6953, 277.951, -24.9505, 0.22", "-19.8811, 278.75, -24.9861, 0.74", "-20.2839, 280.501, -25.1053, 0.22", "-20.5366, 281.547, -25.1904, 0.81", "-21.073, 283.695, -25.3861, 0.22", "-21.1681, 284.071, -25.4222, 0.22", "-21.3618, 284.855, -25.4971, 0.81", "-21.4269, 285.145, -25.5189, 1.03", "-21.5693, 285.835, -25.5502, 0.22", "-21.7064, 286.488, -25.5512, 0.44", "-21.8743, 287.312, -25.52, 0.22", "-21.9998, 287.941, -25.4873, 0.44", "-22.1554, 288.739, -25.4315, 0.22", "-22.3234, 289.523, -25.3752, 0.44", "-22.53, 290.338, -25.3131, 0.59", "-22.7783, 291.195, -25.2927, 0.29", "-23.1296, 292.298, -25.3466, 0.44", "-23.524, 293.431, -25.4668, 0.44", "-24.0783, 294.992, -25.6938, 0.81", "-24.3559, 295.859, -25.8694, 0.96", "-24.6805, 297.016, -26.1869, 0.66", "-25.119, 298.487, -26.7101, 0.29", "-25.2683, 298.958, -26.9204, 0.44", "-25.5047, 299.729, -27.3255, 0.15", "-25.8063, 300.818, -27.9781, 0.44", "-25.9882, 301.592, -28.4562, 0.44", "-26.1782, 302.427, -28.9341, 0.15", "-26.2416, 302.736, -29.135, 0.74" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-12.8175, 131.074, -15.5649, 0.22", "-12.1374, 131.988, -15.9912, 0.22", "-11.7751, 132.385, -16.159, 0.22", "-11.4246, 132.77, -16.3214, 0.22", "-11.0582, 133.172, -16.4911, 0.22", "-10.7656, 133.492, -16.6266, 0.44", "-10.2032, 134.109, -16.8871, 0.74", "-9.80321, 134.57, -17.0184, 0.88" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-61.0274, 101.976, -3.481, 0.29", "-62.2271, 101.572, -3.47006, 0.29", "-62.951, 101.328, -3.46346, 0.29", "-64.0178, 100.969, -3.45373, 0.29", "-65.1928, 100.573, -3.44301, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-61.0274, 101.976, -3.481, 0.22", "-61.7737, 103.113, -3.47345, 0.22", "-62.1595, 103.7, -3.46954, 0.66", "-62.332, 103.963, -3.4678, 0.66", "-62.6574, 104.458, -3.4645, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-118.698, 5.50135, -125.655, 0.22", "-116.997, 6.35253, -128.09, 0.22", "-116.586, 6.55825, -128.679, 0.22", "-115.792, 6.95553, -129.816, 0.88", "-115.537, 7.08337, -130.181, 0.66", "-115.317, 7.19355, -130.497, 0.66" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-118.698, 5.50135, -125.655, 0.22", "-119.192, 6.51337, -126.369, 0.22", "-119.438, 6.87449, -126.671, 0.44", "-119.952, 7.5112, -127.269, 0.22", "-120.16, 7.74688, -127.496, 0.59", "-120.723, 8.3905, -128.088, 0.29", "-121.422, 9.18897, -128.823, 0.29", "-121.826, 9.57543, -129.219, 0.29", "-122.164, 9.84415, -129.545, 0.59", "-122.672, 10.1672, -130.031, 0.22", "-123.1, 10.4228, -130.428, 0.44" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-81.9421, -68.7387, -27.7875, 0.37", "-82.1383, -70.6398, -28.2448, 0.37", "-82.2481, -71.9657, -28.5402, 0.15", "-82.303, -73.0698, -28.7266, 0.44", "-82.3419, -74.0156, -28.856, 0.44", "-82.3916, -75.3509, -29.0091, 0.22", "-82.4426, -76.4871, -29.1123, 1.03", "-82.468, -76.923, -29.1142, 1.03", "-82.5878, -78.4714, -29.0027, 0.29", "-82.699, -79.5067, -28.8807, 1.03", "-82.8462, -80.4772, -28.7054, 1.03", "-83.0351, -81.4376, -28.4811, 0.29", "-83.3247, -82.7265, -28.1145, 0.29", "-83.5032, -83.4403, -27.8697, 0.81", "-83.703, -84.1279, -27.5953, 0.52", "-84.1842, -85.6663, -26.9277, 0.29", "-84.6075, -86.9355, -26.3458, 0.74", "-84.8718, -87.6492, -25.963, 1.03", "-85.4723, -89.1406, -25.0727, 0.22", "-85.7622, -89.8033, -24.6334, 0.22", "-85.927, -90.1375, -24.3852, 0.59", "-86.0604, -90.387, -24.1943, 0.59", "-86.8495, -91.8796, -23.0791, 0.59", "-87.2295, -92.6655, -22.6078, 0.37", "-87.8155, -93.9273, -21.9798, 1.25", "-88.023, -94.4022, -21.7691, 1.47", "-88.5673, -95.6575, -21.2721, 0.37", "-88.9482, -96.4978, -21.0063, 1.03", "-89.6538, -97.9842, -20.6787, 0.29", "-89.9893, -98.6236, -20.5411, 0.44", "-90.2004, -99.0324, -20.4191, 0.66", "-90.4067, -99.4569, -20.2568, 0.52", "-90.8247, -100.303, -19.7989, 0.29", "-91.1871, -101.052, -19.2548, 0.74", "-91.3133, -101.344, -18.9557, 0.74", "-91.8366, -102.753, -17.421, 0.22", "-91.9402, -103.111, -17.0235, 0.44", "-92.0265, -103.542, -16.5019, 0.59", "-92.155, -104.26, -15.5731, 0.37", "-92.3172, -105.108, -14.4737, 0.74", "-92.4351, -105.56, -13.9085, 0.74", "-92.6565, -106.19, -13.1986, 0.29", "-93.0827, -107.3, -12.0532, 1.03", "-93.5354, -108.413, -11.0607, 0.22", "-93.7487, -108.875, -10.6985, 0.88", "-94.4368, -110.253, -9.80907, 0.29", "-94.8934, -111.115, -9.30926, 0.15", "-95.2691, -111.773, -8.99351, 0.74", "-95.8832, -112.784, -8.66481, 1.03", "-96.3361, -113.509, -8.50658, 1.11", "-97.2262, -114.886, -8.30059, 0.22", "-97.4571, -115.245, -8.27384, 0.59", "-97.6335, -115.538, -8.26144, 0.59", "-98.5256, -117.106, -8.22481, 0.22", "-98.8015, -117.667, -8.21043, 0.74", "-99.0388, -118.29, -8.14704, 0.74", "-99.2908, -119.374, -7.88203, 0.22", "-99.3935, -120.591, -7.47591, 0.59", "-99.3727, -121.078, -7.29747, 0.74", "-99.1977, -122.216, -6.86128, 0.22", "-98.9151, -123.579, -6.28109, 0.88", "-98.5019, -125.085, -5.57973, 0.15", "-98.3164, -125.595, -5.30673, 0.15", "-97.9734, -126.391, -4.78799, 0.74", "-97.7285, -126.93, -4.4266, 0.74" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-81.9421, -68.7387, -27.7875, 0.29", "-82.858, -67.6816, -27.8191, 0.29", "-83.7108, -66.8584, -27.8234, 0.29", "-84.6211, -66.0652, -27.7431, 0.29", "-85.0765, -65.691, -27.6831, 0.29", "-86.1144, -64.8858, -27.5074, 0.52", "-86.8062, -64.4047, -27.3744, 0.74", "-87.4977, -63.9796, -27.1867, 0.37", "-88.4386, -63.4895, -26.9138, 0.66", "-88.8193, -63.3356, -26.809, 1.03", "-89.722, -63.058, -26.535, 1.03", "-90.9812, -62.7961, -26.0931, 0.22", "-91.7762, -62.6827, -25.7763, 0.22", "-92.5972, -62.6356, -25.3331, 0.44", "-93.1158, -62.641, -24.9996, 0.44", "-93.8936, -62.6784, -24.4193, 0.29", "-94.5751, -62.7583, -23.8378, 1.11", "-94.9145, -62.8196, -23.5205, 1.25", "-96.2909, -63.1677, -22.1677, 0.66", "-97.0473, -63.3996, -21.3845, 0.22", "-97.4711, -63.5575, -20.9153, 0.22", "-97.9491, -63.7847, -20.3312, 0.22", "-98.3539, -64.0281, -19.8291, 0.81", "-98.6794, -64.2523, -19.4404, 0.81", "-99.0464, -64.5439, -19.0452, 0.29", "-99.6332, -65.005, -18.4563, 0.88", "-100.598, -65.6554, -17.6128, 0.22", "-101.008, -65.8707, -17.3182, 0.52", "-101.657, -66.1515, -16.9197, 0.29", "-102.149, -66.3364, -16.6739, 0.66", "-103.138, -66.6697, -16.2927, 0.29", "-103.633, -66.8554, -16.1576, 0.96", "-103.94, -66.9785, -16.0904, 0.96", "-105.023, -67.4219, -15.8388, 0.29", "-105.672, -67.6864, -15.643, 1.33", "-106.3, -67.9204, -15.4128, 1.55", "-107.36, -68.2428, -14.9711, 0.29", "-107.893, -68.3665, -14.7216, 0.29", "-108.621, -68.4998, -14.3343, 0.52", "-109.542, -68.6178, -13.8387, 0.96", "-110.173, -68.6717, -13.4632, 0.44", "-110.955, -68.7119, -12.9334, 0.29", "-111.942, -68.7063, -12.1773, 0.88", "-112.585, -68.7297, -11.6404, 0.96" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-80.9479, -64.0584, -19.7334, 0.29", "-81.5676, -64.7293, -20.0706, 0.29", "-82.0387, -65.6236, -20.3339, 0.29", "-82.3457, -66.4316, -20.4688, 0.81", "-82.563, -67.1454, -20.5098, 0.81", "-82.732, -67.9288, -20.446, 0.37", "-82.966, -69.7577, -20.0329, 0.37", "-82.9352, -70.6052, -19.6331, 0.59", "-82.884, -71.1603, -19.2899, 0.88", "-82.8088, -71.7779, -18.8528, 0.88", "-82.6548, -72.7937, -18.0891, 1.03", "-82.5005, -73.6723, -17.4297, 1.03", "-82.2465, -74.8429, -16.6071, 0.59", "-81.9921, -75.6801, -16.1121, 0.37", "-81.5685, -76.7833, -15.631, 0.37", "-81.1244, -77.8271, -15.3432, 0.66", "-80.7717, -78.6525, -15.2388, 0.96", "-80.131, -80.1685, -15.196, 1.03", "-79.653, -81.2975, -15.2185, 0.44", "-79.2728, -82.2038, -15.2166, 0.44", "-79.04, -82.7724, -15.216, 0.66", "-78.7853, -83.4021, -15.2006, 0.88", "-78.3379, -84.1586, -15.0851, 0.88", "-77.6193, -85.0401, -14.8686, 0.44", "-76.8455, -85.7765, -14.6321, 0.74", "-76.0931, -86.3613, -14.4461, 0.74", "-75.1522, -86.9592, -14.2829, 1.03", "-72.3271, -88.4222, -13.9379, 0.44", "-71.5355, -88.7429, -13.8756, 0.44", "-71.1731, -88.8499, -13.849, 0.74", "-70.1336, -89.0816, -13.7585, 0.74", "-69.0915, -89.2575, -13.6125, 0.66", "-68.454, -89.3007, -13.4785, 0.52", "-67.7605, -89.258, -13.2929, 0.52", "-66.1656, -89.0077, -12.5391, 1.03", "-65.1929, -88.6836, -11.7869, 0.22", "-64.8452, -88.364, -11.1225, 0.22", "-64.7714, -87.7555, -9.74315, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-80.9479, -64.0584, -19.7334, 0.29", "-82.2879, -63.7783, -18.6629, 0.29", "-82.8079, -63.7299, -18.1062, 0.29", "-83.1196, -63.7305, -17.6235, 0.66", "-83.4399, -63.7378, -17.0564, 0.66", "-83.8291, -63.77, -16.334, 0.44", "-84.211, -63.8015, -15.625, 0.29", "-84.8987, -63.952, -14.215, 0.59", "-85.3765, -64.1204, -12.981, 1.03", "-85.6872, -64.2762, -11.9466, 1.4", "-85.7849, -64.355, -11.4796, 1.4" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "67.07, -105.019, -90.657, 0.81", "67.8394, -105.712, -92.0899, 0.81", "68.2631, -106.099, -92.819, 1.11", "70.5723, -108.064, -96.4144, 0.44", "71.0073, -108.383, -97.024, 0.29", "71.5683, -108.736, -97.7332, 0.29", "72.5764, -109.316, -98.9451, 0.29", "73.3138, -109.614, -99.8089, 0.59", "73.7836, -109.787, -100.539, 0.74", "74.3433, -109.965, -101.431, 0.37", "74.9545, -110.091, -102.492, 0.81", "75.2736, -110.122, -103.056, 0.96", "76.5066, -110.159, -105.301, 1.4", "78.6984, -110.028, -110.037, 0.74", "79.2598, -109.955, -111.369, 0.29", "79.7724, -109.865, -112.643, 0.29", "80.0706, -109.796, -113.381, 0.66", "81.3142, -109.486, -116.258, 1.69", "83.6774, -108.887, -121.155, 1.18", "85.3738, -108.523, -124.29, 0.74", "86.2901, -108.418, -125.958, 1.47", "86.6432, -108.429, -126.569, 1.47", "87.5657, -108.596, -128.063, 0.29", "88.6586, -109.051, -129.497, 0.29", "89.7415, -109.904, -130.489, 1.11", "90.6862, -110.991, -131.22, 0.29", "91.2565, -111.835, -131.629, 1.25", "91.5687, -112.359, -131.857, 1.25", "92.2182, -113.556, -132.344, 0.15", "92.6325, -114.209, -132.632, 0.59", "92.9288, -114.521, -132.825, 0.59", "93.8118, -115.199, -133.405, 0.22", "94.8668, -115.85, -134.067, 1.84", "95.5859, -116.221, -134.499, 1.84", "97.1457, -116.899, -135.388, 0.22", "98.1349, -117.307, -135.899, 0.59", "99.3262, -117.823, -136.463, 0.22", "100.252, -118.268, -136.866, 0.22", "101.213, -118.846, -137.229, 0.88", "101.735, -119.211, -137.403, 1.11", "103.166, -120.356, -137.826, 0.22", "103.906, -120.984, -138.014, 1.33", "104.305, -121.34, -138.117, 1.55", "105.38, -122.422, -138.404, 0.22", "106.056, -123.177, -138.589, 0.66", "106.393, -123.593, -138.693, 0.66", "107.057, -124.5, -138.943, 0.22", "107.65, -125.34, -139.199, 0.44", "108.125, -126.034, -139.435, 0.22", "108.582, -126.695, -139.693, 0.96", "108.942, -127.213, -139.861, 1.18", "110.144, -128.99, -140.321, 0.15", "110.639, -129.706, -140.465, 0.96", "111.004, -130.203, -140.595, 0.96", "111.665, -131.086, -140.868, 0.15", "112.979, -132.854, -141.488, 0.81", "113.654, -133.72, -141.876, 0.81", "114.569, -134.804, -142.478, 0.29", "116.09, -136.431, -143.587, 0.44", "116.697, -136.996, -144.051, 0.81", "117.181, -137.35, -144.429, 0.81", "118.39, -137.99, -145.459, 0.37", "119.224, -138.312, -146.129, 0.29", "120.143, -138.598, -146.788, 0.59", "121.084, -138.867, -147.379, 0.44", "122.294, -139.183, -148.111, 0.29", "123.81, -139.56, -148.971, 0.59", "124.747, -139.776, -149.541, 0.59", "125.569, -139.942, -150.093, 0.29", "126.924, -140.171, -151.04, 0.29", "127.74, -140.297, -151.634, 0.29", "128.443, -140.417, -152.104, 0.74", "130.181, -140.709, -153.136, 0.74", "130.96, -140.855, -153.589, 0.37", "131.456, -140.955, -153.868, 1.03", "132.168, -141.103, -154.252, 1.03", "133.611, -141.474, -155.042, 0.29", "135.729, -142.151, -156.162, 1.11", "137.31, -142.774, -156.899, 0.44", "137.783, -142.985, -157.14, 0.22" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "67.07, -105.019, -90.657, 0.52", "68.1284, -105.032, -90.5235, 0.52", "68.8143, -104.998, -90.4564, 0.52", "69.5179, -104.94, -90.3937, 0.81", "70.0536, -104.845, -90.3609, 0.81", "70.9511, -104.603, -90.3264, 0.29", "71.6289, -104.346, -90.3241, 0.29", "72.2019, -103.973, -90.3707, 0.88", "72.6605, -103.543, -90.433, 1.11", "73.201, -102.861, -90.5562, 0.44", "73.5891, -102.17, -90.703, 0.37", "73.9123, -101.359, -90.9011, 0.37", "74.2238, -100.268, -91.1501, 0.66", "74.3666, -99.5523, -91.2998, 1.03", "74.4635, -98.7982, -91.4156, 1.03", "74.5498, -97.6044, -91.4745, 0.52", "74.5698, -97.1598, -91.4501, 0.37", "74.6115, -96.4236, -91.3299, 1.03", "74.6578, -95.9845, -91.2086, 1.03", "74.8371, -95.0321, -90.8934, 0.29", "75.2454, -93.515, -90.2971, 0.22", "75.4348, -92.9784, -90.0583, 0.66", "75.6145, -92.523, -89.8618, 0.52", "75.8823, -91.8598, -89.6215, 0.37", "76.2695, -90.9595, -89.3504, 0.74", "76.5471, -90.3825, -89.2007, 0.22", "76.9113, -89.6818, -89.0225, 0.88", "77.0802, -89.326, -88.9203, 0.88", "77.503, -88.325, -88.6174, 0.29", "77.6833, -87.8106, -88.4609, 0.44", "77.8346, -87.2764, -88.2895, 0.29", "77.9727, -86.6755, -88.1364, 0.29", "78.1104, -85.7829, -87.9689, 0.81", "78.1912, -85.1316, -87.8588, 1.03", "78.2324, -84.6793, -87.7956, 1.03", "78.2573, -84.178, -87.7465, 0.22", "78.3016, -83.1873, -87.6504, 0.22", "78.374, -82.3871, -87.5211, 0.81", "78.4424, -81.9941, -87.4143, 0.81", "78.6007, -81.4366, -87.1591, 0.44", "78.814, -80.9007, -86.8369, 0.44", "79.1546, -80.1712, -86.3141, 0.96", "79.5063, -79.4625, -85.7213, 0.96", "79.7352, -78.9914, -85.3218, 1.11", "80.0525, -78.3134, -84.7782, 0.29", "80.3059, -77.7801, -84.3643, 0.81", "80.5987, -77.1977, -83.9426, 0.81", "81.0274, -76.3819, -83.4542, 0.44", "81.4104, -75.5939, -83.0734, 1.11", "81.6798, -75.0313, -82.836, 1.11", "81.8762, -74.6256, -82.6866, 0.81", "82.1145, -74.2114, -82.5383, 0.52", "82.7133, -73.4082, -82.2743, 0.22", "83.3836, -72.7523, -82.1069, 0.22", "83.9316, -72.4, -82.0572, 0.59", "84.1478, -72.3148, -82.0671, 0.59", "85.4064, -72.005, -82.2574, 0.52", "86.145, -71.9127, -82.4124, 0.29", "87.1215, -71.866, -82.6501, 0.52", "88.0708, -71.8316, -82.9162, 0.44", "88.7077, -71.7947, -83.1169, 0.81", "89.2462, -71.7313, -83.2912, 1.03", "90.2449, -71.5137, -83.6017, 0.29", "90.7496, -71.3636, -83.7117, 0.29", "91.3327, -71.1743, -83.7829, 0.81", "91.7413, -71.0507, -83.8027, 0.81", "92.5634, -70.8574, -83.8041, 0.52", "93.6137, -70.7397, -83.7495, 0.15", "94.4289, -70.7968, -83.6546, 0.44", "94.9705, -70.9288, -83.5151, 0.74", "95.3718, -71.0562, -83.3681, 1.03", "95.791, -71.1907, -83.1842, 1.03", "96.3988, -71.3637, -82.8654, 0.88", "97.1796, -71.4772, -82.4083, 0.37", "98.3824, -71.3396, -81.7374, 0.81", "99.0199, -71.0952, -81.4121, 0.81", "99.6305, -70.7063, -81.0692, 0.29", "100.05, -70.3531, -80.8042, 0.29", "100.624, -69.7785, -80.423, 0.15", "101.097, -69.3117, -80.1399, 1.03", "101.394, -69.0574, -79.9779, 1.03", "102.639, -68.2299, -79.3203, 0.52", "103.338, -67.8859, -78.9649, 0.52", "104.122, -67.6175, -78.5891, 0.44", "105.468, -67.3079, -77.9915, 0.88", "106.293, -67.1652, -77.6665, 0.74", "107.095, -67.0624, -77.4227, 0.44", "107.635, -67.0253, -77.3202, 0.37", "108.346, -67.0063, -77.2308, 0.22", "108.953, -67.0261, -77.1903, 0.22", "109.761, -67.0515, -77.1703, 0.44", "110.273, -67.0511, -77.1847, 0.22", "110.951, -67.0306, -77.2236, 0.22", "111.623, -67.0097, -77.2933, 0.44", "112.714, -67.0382, -77.4583, 0.29" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-16.3754, 490.018, -22.1692, 0.74", "-16.2494, 491.309, -22.4237, 0.74", "-16.2073, 491.851, -22.5142, 0.52", "-16.1659, 492.384, -22.5825, 0.37", "-16.1125, 493.23, -22.6738, 0.37", "-16.0947, 493.548, -22.7033, 0.59", "-16.0535, 494.224, -22.7542, 0.74", "-16.0332, 494.649, -22.7659, 0.74", "-15.9779, 495.459, -22.8006, 0.37", "-15.9344, 496.051, -22.832, 0.37", "-15.861, 497.075, -22.8892, 0.81", "-15.814, 497.762, -22.9294, 0.96", "-15.7642, 498.461, -22.9668, 0.96", "-15.6993, 499.375, -23.0159, 0.66", "-15.6651, 499.91, -23.0462, 0.44", "-15.6391, 500.326, -23.0646, 0.44", "-15.6038, 501.108, -23.0952, 0.44", "-15.5878, 501.797, -23.119, 0.81", "-15.5905, 502.272, -23.1354, 1.03", "-15.6032, 502.767, -23.1527, 1.03", "-15.6378, 503.598, -23.196, 0.74", "-15.6782, 504.246, -23.241, 0.74", "-15.7658, 505.283, -23.3217, 0.44", "-15.8776, 506.307, -23.4166, 0.44", "-15.9307, 506.802, -23.473, 1.03", "-15.9767, 507.279, -23.5364, 1.18", "-16.0338, 508.05, -23.6665, 0.52", "-16.0612, 508.794, -23.8275, 0.74", "-16.0677, 509.547, -24.0338, 1.11", "-16.0575, 510.243, -24.2494, 0.44", "-16.0442, 510.862, -24.4578, 0.37", "-16.0194, 511.525, -24.6862, 0.37", "-15.971, 512.456, -25.005, 0.59", "-15.9286, 513.134, -25.2238, 0.96", "-15.8971, 513.616, -25.3551, 1.18", "-15.8715, 514.059, -25.4467, 1.18", "-15.8057, 515.044, -25.5968, 0.44", "-15.7541, 515.728, -25.6485, 0.37", "-15.7089, 516.216, -25.655, 0.59", "-15.6345, 516.825, -25.6509, 0.44", "-15.5299, 517.567, -25.6607, 0.44", "-15.4468, 518.117, -25.6786, 0.74", "-15.3872, 518.528, -25.7016, 0.74", "-15.3458, 518.843, -25.7298, 0.74", "-15.2768, 519.479, -25.806, 0.37", "-15.2104, 520.261, -25.9164, 1.18", "-15.1906, 520.551, -25.9577, 1.18", "-15.1465, 521.18, -26.028, 0.88", "-15.0927, 521.813, -26.0774, 0.59", "-15.0146, 522.638, -26.1097, 0.88", "-14.962, 523.239, -26.1149, 1.11", "-14.908, 523.849, -26.1012, 1.11", "-14.8267, 524.673, -26.0752, 0.52", "-14.7247, 525.491, -26.0386, 0.44", "-14.652, 525.951, -26.0106, 0.44" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-16.3754, 490.018, -22.1692, 0.29", "-16.6153, 491.0, -21.6327, 0.29", "-16.8392, 492.077, -21.109, 0.66", "-16.9655, 492.701, -20.8089, 0.66", "-17.0745, 493.261, -20.5336, 0.37", "-17.2621, 494.213, -20.048, 0.22", "-17.3216, 494.509, -19.8917, 0.66", "-17.3835, 494.896, -19.682, 0.66", "-17.5502, 495.963, -19.1456, 0.37", "-17.6652, 496.609, -18.8358, 0.37", "-17.8359, 497.481, -18.4523, 0.59", "-17.908, 497.891, -18.2903, 0.37", "-18.0134, 498.523, -18.0579, 0.29", "-18.1304, 499.235, -17.8297, 0.74", "-18.1937, 499.63, -17.7281, 0.96", "-18.2804, 500.151, -17.6011, 0.52", "-18.4173, 500.885, -17.4296, 0.44", "-18.5455, 501.565, -17.2517, 0.29", "-18.7123, 502.465, -16.9682, 0.29", "-18.8214, 503.029, -16.7506, 0.66", "-18.9286, 503.622, -16.4954, 0.81", "-19.0788, 504.616, -16.0395, 0.29", "-19.22, 505.87, -15.4364, 0.29", "-19.278, 506.739, -15.009, 0.29", "-19.2928, 507.496, -14.651, 0.88", "-19.2848, 508.074, -14.4024, 0.88", "-19.2568, 508.76, -14.134, 0.29", "-19.1763, 509.618, -13.8568, 0.29", "-19.1439, 509.889, -13.7934, 0.52", "-19.0, 510.855, -13.627, 0.22", "-18.8793, 511.438, -13.553, 0.52", "-18.7424, 511.977, -13.4885, 0.52", "-18.3018, 513.393, -13.317, 0.44", "-18.0261, 514.148, -13.2279, 0.96", "-17.8421, 514.591, -13.1752, 0.96", "-17.3869, 515.577, -13.0456, 0.29", "-16.9853, 516.383, -12.9346, 0.22", "-16.6099, 517.108, -12.8248, 0.81", "-16.1662, 517.951, -12.6722, 0.29", "-15.8235, 518.611, -12.5405, 0.29", "-15.5189, 519.221, -12.4041, 0.66", "-15.3991, 519.473, -12.335, 0.81", "-15.0504, 520.242, -12.0954, 0.29", "-14.8483, 520.727, -11.9275, 0.29", "-14.7132, 521.084, -11.7931, 0.81", "-14.5841, 521.467, -11.6496, 0.81", "-14.3491, 522.254, -11.3884, 0.29", "-14.0953, 523.232, -11.103, 0.29", "-13.9321, 523.958, -10.9175, 0.88", "-13.8519, 524.347, -10.831, 1.03", "-13.7291, 524.955, -10.7085, 0.74", "-13.3923, 526.674, -10.3917, 0.22", "-13.258, 527.336, -10.2775, 0.96", "-13.1368, 527.862, -10.1776, 1.11", "-12.8736, 528.964, -9.95337, 0.29", "-12.7239, 529.568, -9.82113, 0.59", "-12.6234, 530.012, -9.70466, 0.59", "-12.4808, 530.698, -9.49088, 0.59", "-12.3197, 531.567, -9.17812, 0.29", "-12.2131, 532.198, -8.92244, 0.44", "-12.1133, 533.181, -8.46984, 0.29", "-12.0631, 534.209, -7.97122, 0.81", "-12.0557, 534.496, -7.8249, 0.81", "-12.0557, 534.869, -7.63117, 1.03", "-12.0568, 535.453, -7.32453, 0.37", "-12.0388, 536.454, -6.78225, 0.29", "-12.0144, 537.008, -6.50045, 0.29", "-11.945, 538.076, -6.01859, 0.29", "-11.9052, 538.624, -5.81693, 0.81", "-11.8522, 539.702, -5.48053, 0.37", "-11.8326, 540.56, -5.20178, 0.29", "-11.7965, 541.404, -4.89996, 1.11", "-11.7963, 541.94, -4.67807, 0.66", "-11.8981, 542.969, -4.17144, 0.29", "-12.0754, 543.886, -3.61356, 0.29", "-12.3553, 544.852, -2.87058, 0.29", "-12.5205, 545.384, -2.34948, 0.29", "-12.6706, 545.82, -1.86721, 0.29", "-12.911, 546.427, -1.16386, 0.81", "-13.0836, 546.767, -0.748553, 1.11", "-13.301, 547.212, -0.252998, 0.88", "-13.8756, 548.552, 0.998503, 0.29", "-14.0747, 549.097, 1.46677, 0.29", "-14.2428, 549.696, 1.93852, 0.74", "-14.4676, 550.614, 2.57426, 0.29", "-14.6703, 551.394, 3.06061, 0.29", "-14.9009, 552.271, 3.55405, 0.66", "-14.9888, 552.674, 3.74218, 0.88", "-15.0746, 553.597, 4.15656, 0.22", "-15.0585, 554.219, 4.40681, 0.37", "-15.0538, 554.281, 4.42376, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-85.7849, -64.355, -11.4796, 0.22", "-86.7553, -65.2168, -10.621, 0.22", "-87.1622, -65.6032, -10.2918, 0.22", "-87.7541, -66.2016, -9.85884, 0.37", "-88.3524, -66.8323, -9.45458, 0.22", "-89.1033, -67.6502, -8.9815, 0.22", "-89.8917, -68.5215, -8.50208, 0.81", "-90.2731, -68.9476, -8.29979, 0.81", "-90.7896, -69.533, -8.06538, 0.52", "-91.2539, -70.062, -7.89134, 0.29", "-91.6464, -70.5054, -7.75962, 0.66", "-92.2367, -71.1209, -7.57798, 0.66", "-92.7213, -71.5784, -7.42088, 0.29", "-93.4283, -72.1875, -7.1947, 0.29", "-94.1547, -72.7526, -6.95786, 0.96", "-94.9156, -73.2452, -6.75267, 1.03", "-96.0329, -73.8883, -6.4999, 0.22", "-96.3311, -74.0466, -6.4449, 0.22", "-96.9052, -74.3462, -6.35946, 0.88", "-97.407, -74.6133, -6.32207, 0.88", "-98.806, -75.3448, -6.32544, 0.22", "-99.5694, -75.7186, -6.38488, 0.22", "-100.245, -76.0597, -6.48256, 0.22", "-100.831, -76.371, -6.61114, 0.88", "-101.478, -76.7415, -6.84517, 1.11", "-102.218, -77.1833, -7.25756, 0.88", "-103.166, -77.8009, -8.05098, 0.29", "-103.818, -78.2138, -8.79398, 1.18", "-104.144, -78.4124, -9.21588, 1.33", "-104.872, -78.8312, -10.2713, 0.29", "-105.348, -79.1127, -11.1125, 0.22", "-105.651, -79.3625, -11.8996, 0.22", "-105.873, -79.6631, -12.9802, 0.96" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-85.7849, -64.355, -11.4796, 0.66", "-84.7165, -66.3084, -8.98272, 0.66", "-84.3539, -66.8778, -8.14156, 0.66", "-83.8925, -67.5007, -7.0581, 0.81", "-83.5175, -68.0008, -6.0947, 0.81", "-82.7065, -69.2058, -3.74893, 0.96", "-82.145, -70.1598, -1.90724, 1.33", "-81.9013, -70.684, -0.73896, 0.44", "-81.7494, -71.1117, 0.304661, 0.44", "-81.7378, -71.4559, 1.26453, 0.37", "-82.0555, -71.8628, 2.67146, 0.37", "-82.3734, -72.0035, 3.19447, 0.37", "-83.0965, -72.2449, 4.02614, 0.29", "-83.8932, -72.537, 4.85536, 0.66", "-84.4192, -72.804, 5.49306, 0.88", "-84.9485, -73.1806, 6.26029, 0.88", "-85.5351, -73.8571, 7.31781, 0.66", "-85.7371, -74.4014, 7.92978, 0.66", "-85.8347, -75.2327, 8.69303, 0.81", "-85.7797, -77.4872, 10.6033, 0.81", "-85.6285, -78.497, 11.4703, 0.59", "-85.3379, -79.5947, 12.4868, 0.44", "-84.932, -80.6744, 13.6505, 0.44", "-84.6936, -81.2202, 14.3703, 0.37", "-84.486, -81.6937, 15.2595, 0.37", "-84.4042, -81.9906, 16.4901, 0.66", "-84.4877, -82.064, 17.5079, 0.66", "-84.8156, -82.0335, 18.6504, 0.44", "-85.264, -82.0204, 19.4514, 0.66", "-85.8017, -82.0925, 20.0592, 0.66", "-86.6618, -82.3314, 20.7829, 0.66", "-88.6637, -83.1197, 22.2011, 0.37", "-89.4108, -83.488, 22.7008, 0.66", "-90.4644, -84.09, 23.3739, 0.66", "-91.2818, -84.6514, 23.9013, 0.44", "-91.9867, -85.2342, 24.3787, 0.37", "-92.444, -85.7533, 24.7644, 0.59", "-92.9909, -86.6506, 25.4149, 0.44", "-93.3371, -87.3008, 25.875, 0.37", "-93.7337, -88.1863, 26.4992, 0.37", "-94.2053, -89.358, 27.2948, 0.37", "-94.7818, -90.9245, 28.3363, 0.37", "-95.1548, -92.024, 29.0704, 0.29", "-95.353, -92.606, 29.479, 0.52", "-95.7923, -93.7741, 30.4175, 0.29", "-96.1454, -94.7143, 31.2386, 0.37", "-96.3843, -95.2805, 31.7895, 0.37", "-96.7164, -95.7965, 32.3812, 0.96", "-97.2047, -96.3648, 33.1782, 0.66", "-97.5432, -96.6799, 33.7338, 0.44" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-14.652, 525.951, -26.0106, 0.52", "-14.5891, 527.427, -26.0707, 0.52", "-14.5632, 528.568, -26.12, 1.03", "-14.5535, 529.49, -26.162, 1.03", "-14.5446, 531.273, -26.2617, 1.11", "-14.5329, 533.332, -26.3578, 0.29", "-14.5063, 535.238, -26.4474, 0.29", "-14.4536, 537.024, -26.5473, 0.96", "-14.4333, 537.841, -26.5801, 1.11", "-14.4097, 539.705, -26.6228, 0.66", "-14.4332, 541.787, -26.6446, 0.52", "-14.5064, 543.633, -26.6432, 0.52", "-14.6177, 545.55, -26.6106, 0.52", "-14.7416, 546.987, -26.5617, 0.81", "-14.9948, 549.337, -26.4665, 1.11", "-15.1603, 550.639, -26.4017, 1.33", "-15.6262, 553.916, -26.2526, 0.44", "-15.8519, 555.428, -26.1833, 0.44", "-16.2109, 558.047, -26.0736, 0.37", "-16.3924, 559.625, -26.0131, 0.96", "-16.5276, 561.299, -25.9599, 1.25", "-16.5751, 562.413, -25.9274, 1.25", "-16.5699, 563.628, -25.888, 1.03", "-16.5369, 564.567, -25.8541, 0.74", "-16.4641, 565.916, -25.7975, 0.52", "-16.4184, 567.155, -25.7373, 0.37", "-16.3874, 568.469, -25.6677, 0.37", "-16.3843, 570.165, -25.5644, 0.37", "-16.4222, 572.322, -25.4398, 0.66", "-16.4669, 573.517, -25.3792, 0.66", "-16.5433, 575.523, -25.2986, 0.66", "-16.6177, 577.25, -25.2357, 0.29", "-16.6767, 578.794, -25.195, 0.29", "-16.7187, 579.878, -25.1757, 0.81", "-16.784, 581.791, -25.1627, 1.03", "-16.8365, 583.337, -25.1635, 1.18", "-16.8707, 584.511, -25.1735, 0.81", "-16.9157, 586.125, -25.2101, 0.29", "-16.9559, 587.553, -25.2458, 0.29", "-16.9935, 589.009, -25.2809, 0.96", "-17.042, 590.665, -25.3206, 1.11", "-17.072, 591.907, -25.3347, 1.11", "-17.0904, 593.951, -25.3408, 0.74", "-17.0939, 595.716, -25.3188, 0.44", "-17.0797, 597.491, -25.265, 0.88", "-17.0669, 598.773, -25.2101, 0.88", "-17.0305, 600.596, -25.1198, 0.52", "-16.97, 602.52, -25.0135, 0.52", "-16.8891, 604.45, -24.8959, 0.52", "-16.8179, 606.478, -24.7878, 0.52", "-16.7909, 608.14, -24.7174, 1.11", "-16.7846, 608.99, -24.6911, 1.11", "-16.8038, 610.587, -24.6622, 0.81", "-16.8419, 612.746, -24.6385, 0.29", "-16.8899, 614.793, -24.6383, 0.29", "-16.9309, 615.984, -24.647, 0.96", "-17.0037, 617.334, -24.6533, 1.11", "-17.1322, 618.752, -24.662, 1.4" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-14.652, 525.951, -26.0106, 0.44", "-14.2417, 525.42, -25.5769, 0.44", "-13.9566, 525.051, -25.2756, 0.37", "-13.498, 524.458, -24.7909, 0.29", "-13.2788, 524.174, -24.5593, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-97.5432, -96.6799, 33.7338, 0.22", "-96.873, -95.7647, 33.9927, 0.22", "-96.3977, -95.1156, 34.1763, 0.22", "-95.9264, -94.4719, 34.3584, 0.59", "-95.6071, -94.0359, 34.4818, 0.59", "-95.1883, -93.464, 34.6436, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-97.5432, -96.6799, 33.7338, 0.37", "-97.8288, -96.8732, 35.071, 0.37", "-98.0913, -97.0616, 36.1033, 0.37", "-98.3906, -97.284, 37.1172, 0.22", "-98.7114, -97.5223, 38.2035, 0.22", "-98.9421, -97.6936, 38.9845, 0.22", "-99.1895, -97.8774, 39.8224, 0.22", "-99.2832, -97.9527, 40.0893, 0.52", "-99.5245, -98.1553, 40.6386, 0.66" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-17.1322, 618.752, -24.662, 0.22", "-15.9754, 621.24, -26.4668, 0.22", "-15.8366, 621.684, -26.8178, 0.29", "-15.6888, 622.457, -27.502, 0.29", "-15.6862, 622.689, -27.7745, 0.66", "-15.7371, 623.015, -28.2378, 0.66", "-15.8271, 623.42, -28.815, 0.29", "-16.157, 623.883, -29.512, 0.88", "-16.3184, 624.095, -29.8232, 0.88", "-16.8711, 624.815, -30.8185, 0.29", "-17.0895, 625.142, -31.1917, 0.29", "-17.3729, 625.686, -31.6332, 0.29", "-17.6106, 626.394, -32.0435, 0.66", "-17.7794, 627.085, -32.3721, 0.22", "-17.9016, 627.64, -32.6106, 0.22", "-18.0401, 628.21, -32.8511, 0.22", "-18.3312, 629.219, -33.3191, 0.96", "-18.7238, 630.355, -33.9485, 1.33", "-19.192, 631.567, -34.7189, 0.29", "-19.335, 631.934, -34.9639, 0.29", "-19.6551, 632.704, -35.5031, 0.29", "-19.9308, 633.288, -35.9531, 0.29", "-20.2833, 633.83, -36.4493, 0.96", "-20.5286, 634.07, -36.7013, 1.11" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-17.1322, 618.752, -24.662, 0.29", "-17.2127, 620.402, -24.4684, 0.29", "-17.2748, 621.646, -24.3228, 0.29", "-17.379, 623.416, -24.1301, 0.29", "-17.4791, 624.906, -23.9791, 0.74", "-17.5579, 625.959, -23.88, 1.03", "-17.6167, 626.687, -23.8154, 1.03", "-17.7704, 628.47, -23.6607, 0.29", "-17.8946, 630.072, -23.5134, 0.29", "-17.9532, 630.87, -23.4347, 0.96", "-18.009, 631.668, -23.3517, 1.18", "-18.0939, 632.91, -23.2257, 0.59", "-18.174, 634.083, -23.0991, 0.37", "-18.281, 635.789, -22.8956, 0.37", "-18.3559, 637.174, -22.7127, 0.29", "-18.4617, 639.009, -22.4716, 0.29", "-18.5572, 640.309, -22.3075, 0.88", "-18.6016, 640.819, -22.248, 1.03", "-18.6902, 641.662, -22.1658, 1.03", "-18.8192, 642.778, -22.0706, 1.03", "-18.9913, 644.298, -21.9458, 0.44", "-19.1405, 645.765, -21.8147, 0.74", "-19.187, 646.24, -21.7735, 0.74", "-19.2961, 647.406, -21.686, 0.44", "-19.3652, 648.09, -21.6414, 0.37", "-19.4392, 648.91, -21.5826, 0.74", "-19.4827, 649.595, -21.5191, 0.96", "-19.5191, 650.767, -21.3994, 0.29", "-19.5319, 651.439, -21.3185, 0.29", "-19.5367, 652.455, -21.1817, 0.81", "-19.5324, 652.823, -21.1269, 0.81", "-19.5138, 653.554, -21.0183, 0.37", "-19.5021, 654.67, -20.8709, 0.37", "-19.5003, 655.405, -20.7852, 1.03", "-19.5206, 656.054, -20.734, 1.03", "-19.5967, 657.329, -20.6698, 1.03", "-19.7031, 658.511, -20.6465, 0.37", "-19.9057, 660.116, -20.6524, 0.29", "-20.0452, 660.997, -20.6708, 0.29", "-20.2651, 662.188, -20.7058, 0.88", "-20.4153, 662.913, -20.7274, 1.25", "-20.5679, 663.552, -20.7472, 1.25", "-20.8208, 664.564, -20.7598, 0.74", "-21.0324, 665.422, -20.7544, 0.74", "-21.4165, 666.993, -20.7204, 1.25", "-21.613, 667.855, -20.6905, 1.25", "-21.7779, 668.614, -20.666, 0.52", "-21.9846, 669.624, -20.6333, 0.29", "-22.1373, 670.42, -20.6125, 0.52", "-22.2814, 671.211, -20.5945, 0.81", "-22.6226, 673.164, -20.5713, 0.37", "-22.8757, 674.609, -20.5629, 0.37", "-22.9385, 674.976, -20.5618, 1.03", "-23.068, 675.709, -20.5635, 1.4", "-23.1564, 676.203, -20.5657, 1.4", "-23.3943, 677.581, -20.5637, 0.52", "-23.5883, 678.742, -20.5559, 0.52", "-23.7727, 679.91, -20.5379, 0.81", "-23.8991, 680.775, -20.5147, 0.81", "-24.0171, 681.647, -20.4824, 0.81", "-24.1526, 682.708, -20.4355, 0.44", "-24.2368, 683.433, -20.3955, 0.44", "-24.3526, 684.52, -20.3256, 0.81", "-24.4685, 685.64, -20.2503, 0.88", "-24.5858, 686.868, -20.1585, 1.18", "-24.6893, 687.961, -20.0758, 1.4", "-24.7394, 688.487, -20.0362, 1.4", "-24.8043, 689.278, -19.9766, 0.88", "-24.9407, 691.319, -19.8142, 0.37", "-24.9968, 692.374, -19.7261, 0.37", "-25.0254, 693.105, -19.6604, 0.66", "-25.0464, 693.833, -19.5884, 0.96", "-25.0661, 694.708, -19.4934, 0.37", "-25.0779, 695.403, -19.4138, 0.74", "-25.081, 696.592, -19.283, 0.37", "-25.0847, 697.63, -19.1778, 0.81", "-25.0873, 698.584, -19.0908, 1.03", "-25.0807, 700.453, -18.9625, 0.22", "-25.0724, 701.757, -18.8926, 0.22", "-25.0513, 703.276, -18.8304, 0.22", "-25.0185, 704.68, -18.7968, 1.25", "-24.9937, 705.37, -18.7935, 1.33", "-24.9454, 706.544, -18.8091, 0.44", "-24.8868, 707.538, -18.8462, 0.44", "-24.7899, 708.76, -18.8939, 0.44", "-24.6967, 709.739, -18.9289, 0.37", "-24.5535, 711.184, -18.9773, 0.37", "-24.4847, 711.922, -18.9871, 0.37", "-24.4021, 713.003, -18.9877, 0.74", "-24.352, 713.801, -18.9895, 1.03", "-24.3181, 714.637, -18.9832, 0.74", "-24.3094, 715.317, -18.9596, 0.29", "-24.3254, 716.336, -18.8991, 0.29", "-24.3505, 716.917, -18.8552, 0.66", "-24.4037, 717.733, -18.7806, 0.66", "-24.4899, 718.899, -18.6817, 0.22", "-24.5593, 719.778, -18.6024, 0.52", "-24.6033, 720.391, -18.544, 0.52", "-24.7601, 722.51, -18.3273, 0.22", "-24.8435, 723.705, -18.1706, 0.59", "-24.874, 724.141, -18.1041, 0.59", "-24.9513, 725.24, -17.9125, 0.22", "-25.0004, 725.948, -17.7809, 0.81", "-25.035, 726.462, -17.6807, 0.81", "-25.1105, 727.824, -17.4008, 0.22", "-25.1358, 728.393, -17.2839, 0.59", "-25.1426, 728.71, -17.2179, 0.59", "-25.1662, 730.83, -16.807, 0.22", "-25.1769, 731.497, -16.6919, 0.22", "-25.1991, 732.649, -16.5204, 0.74", "-25.2189, 733.193, -16.4569, 0.81", "-25.2619, 733.99, -16.3735, 0.81", "-25.3588, 735.366, -16.2432, 0.22", "-25.4753, 736.748, -16.1232, 0.22", "-25.5591, 737.617, -16.0531, 0.22", "-25.6804, 738.716, -15.9737, 0.81", "-25.7148, 739.013, -15.9528, 0.81", "-25.9046, 740.822, -15.8191, 0.22", "-25.9118, 740.914, -15.8115, 0.52", "-26.0019, 742.979, -15.6121, 0.29", "-26.0208, 744.144, -15.4881, 0.88", "-26.0146, 744.809, -15.4127, 0.88", "-25.9939, 746.011, -15.2807, 0.22", "-25.9848, 746.776, -15.205, 0.22", "-25.9714, 747.672, -15.1114, 0.96", "-25.9646, 748.042, -15.0699, 0.96", "-25.9383, 749.524, -14.8898, 0.22", "-25.9398, 750.399, -14.7857, 0.22", "-25.9579, 751.563, -14.6354, 0.88", "-25.9886, 752.735, -14.4793, 0.22", "-26.032, 753.911, -14.3258, 0.88", "-26.0426, 754.276, -14.2753, 0.88", "-26.0644, 755.499, -14.0935, 0.22", "-26.0632, 756.397, -13.9436, 0.96" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-20.5286, 634.07, -36.7013, 0.37", "-20.9774, 635.605, -37.4352, 0.37", "-21.1177, 636.122, -37.6781, 0.59", "-21.3474, 637.079, -38.0897, 0.59", "-21.508, 637.896, -38.4097, 0.29", "-21.7464, 639.309, -38.9598, 0.29", "-21.8614, 640.08, -39.2666, 0.29", "-21.9177, 640.765, -39.5702, 0.52", "-21.9247, 641.427, -39.8868, 0.22", "-21.882, 642.263, -40.3281, 0.52", "-21.8368, 643.163, -40.8366, 0.81", "-21.8268, 643.803, -41.1854, 0.81", "-21.8897, 645.384, -42.0597, 0.22", "-21.9658, 646.172, -42.5042, 0.81", "-22.1096, 647.019, -42.9836, 0.81", "-22.3475, 647.97, -43.4915, 0.29", "-22.7507, 649.301, -44.1683, 0.29", "-23.0711, 650.232, -44.6601, 0.81", "-23.3301, 650.911, -45.0577, 1.11", "-23.5352, 651.525, -45.457, 0.74", "-23.7548, 652.366, -46.0154, 0.29", "-23.9998, 653.541, -46.8309, 0.29", "-24.1862, 654.511, -47.5067, 0.29", "-24.4078, 655.855, -48.3986, 1.03", "-24.581, 656.977, -49.0937, 1.18", "-24.8734, 658.951, -50.243, 0.29", "-24.9811, 659.724, -50.6559, 0.29", "-25.1406, 660.971, -51.2513, 1.55", "-25.2215, 661.639, -51.5506, 1.33", "-25.3541, 662.583, -51.9789, 0.81", "-25.5119, 663.575, -52.4691, 0.52", "-25.7459, 665.034, -53.2417, 0.29", "-25.9343, 666.284, -53.9147, 0.52", "-26.0003, 666.76, -54.1614, 0.81", "-26.2636, 668.726, -55.1064, 0.22", "-26.4167, 670.09, -55.6885, 0.22", "-26.4986, 670.82, -55.94, 0.66", "-26.562, 671.621, -56.1546, 0.66", "-26.6121, 673.164, -56.4675, 0.22", "-26.572, 673.869, -56.5988, 0.52", "-26.4975, 674.481, -56.7176, 0.52", "-26.3511, 675.802, -57.0356, 0.29", "-26.2294, 677.193, -57.4431, 0.96", "-26.195, 677.901, -57.6834, 0.96", "-26.1156, 680.086, -58.5253, 0.22", "-26.0902, 681.636, -59.1766, 0.96", "-26.1018, 682.707, -59.6735, 0.22", "-26.1297, 683.211, -59.94, 0.59", "-26.2188, 683.763, -60.253, 0.59" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-20.5286, 634.07, -36.7013, 0.15", "-21.409, 633.576, -38.4701, 0.15", "-21.6848, 633.438, -38.9797, 0.52", "-21.8694, 633.351, -39.3088, 0.66", "-22.5414, 633.036, -40.4873, 0.22", "-23.1556, 632.741, -41.5349, 0.22", "-23.4224, 632.61, -41.9615, 0.59", "-23.8416, 632.438, -42.5899, 0.66", "-24.6134, 632.119, -43.6806, 0.29", "-24.9033, 631.997, -44.0644, 0.81", "-25.4897, 631.732, -44.8212, 0.96", "-26.144, 631.417, -45.6922, 0.15", "-26.7926, 631.084, -46.6041, 0.15", "-27.4124, 630.754, -47.5029, 0.15", "-27.9245, 630.477, -48.2501, 0.88", "-28.2903, 630.253, -48.7995, 0.88", "-29.2791, 629.622, -50.3413, 0.22", "-29.6485, 629.367, -50.9482, 0.74", "-30.152, 628.981, -51.7847, 0.74", "-30.7236, 628.486, -52.7645, 0.29", "-31.2114, 628.028, -53.5966, 0.29" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_54", "dend_27", "dend_0", "dend_56", "dend_55", "dend_29", "dend_28", "dend_6", "dend_1", "dend_37", "dend_30", "dend_12", "dend_7", "dend_3", "dend_2", "dend_49", "dend_38", "dend_32", "dend_31", "dend_16", "dend_13", "dend_11", "dend_8", "dend_5", "dend_4", "dend_51", "dend_50", "dend_46", "dend_39", "dend_36", "dend_33", "dend_26", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_40", "dend_35", "dend_34", "dend_19", "dend_18", "dend_44", "dend_41", "dend_21", "dend_20", "dend_43", "dend_42", "dend_23", "dend_22", "dend_25", "dend_24" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_54", "dend_27", "dend_0", "dend_56", "dend_55", "dend_29", "dend_28", "dend_6", "dend_1", "dend_37", "dend_30", "dend_12", "dend_7", "dend_3", "dend_2", "dend_49", "dend_38", "dend_32", "dend_31", "dend_16", "dend_13", "dend_11", "dend_8", "dend_5", "dend_4", "dend_51", "dend_50", "dend_46", "dend_39", "dend_36", "dend_33", "dend_26", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_40", "dend_35", "dend_34", "dend_19", "dend_18", "dend_44", "dend_41", "dend_21", "dend_20", "dend_43", "dend_42", "dend_23", "dend_22", "dend_25", "dend_24" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_54", "dend_27", "dend_0", "axon_0", "dend_56", "dend_55", "dend_29", "dend_28", "dend_6", "dend_1", "axon_1", "dend_37", "dend_30", "dend_12", "dend_7", "dend_3", "dend_2", "dend_49", "dend_38", "dend_32", "dend_31", "dend_16", "dend_13", "dend_11", "dend_8", "dend_5", "dend_4", "dend_51", "dend_50", "dend_46", "dend_39", "dend_36", "dend_33", "dend_26", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_53", "dend_52", "dend_48", "dend_47", "dend_45", "dend_40", "dend_35", "dend_34", "dend_19", "dend_18", "dend_44", "dend_41", "dend_21", "dend_20", "dend_43", "dend_42", "dend_23", "dend_22", "dend_25", "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L6_SBC_63156a236c_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_54, id: dend_54, parent: soma_0
create dend_54
public dend_54
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_37, id: dend_37, parent: dend_29
create dend_37
public dend_37
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_12, id: dend_12, parent: dend_6
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_49, id: dend_49, parent: dend_37
create dend_49
public dend_49
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_38
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_16
create dend_26
public dend_26
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_39
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_54, dend_27, dend_0, axon_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, axon_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_60
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_54(0), soma_0(0.49999773444601353)
    connect dend_27(0), soma_0(0.49999773444601353)
    connect dend_0(0), soma_0(0.49999773444601353)
    connect axon_0(0), soma_0(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_37(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_12(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_49(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_26(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.488402, 10.6886, -0.10439, 2.1741 ) }
    soma_0 { pt3dadd( 0.446743, 9.60874, -0.0969525, 3.70718 ) }
    soma_0 { pt3dadd( 0.405084, 8.52883, -0.0895152, 5.34259 ) }
    soma_0 { pt3dadd( 0.363425, 7.44892, -0.0820778, 6.31081 ) }
    soma_0 { pt3dadd( 0.321766, 6.36901, -0.0746405, 7.2239 ) }
    soma_0 { pt3dadd( 0.280106, 5.2891, -0.0672032, 7.79497 ) }
    soma_0 { pt3dadd( 0.238447, 4.20919, -0.0597659, 8.16787 ) }
    soma_0 { pt3dadd( 0.196788, 3.12928, -0.0523285, 8.65603 ) }
    soma_0 { pt3dadd( 0.155129, 2.04937, -0.0448912, 9.27596 ) }
    soma_0 { pt3dadd( 0.11347, 0.969459, -0.0374539, 9.68183 ) }
    soma_0 { pt3dadd( 0.0718107, -0.110451, -0.0300165, 9.60108 ) }
    soma_0 { pt3dadd( 0.0301515, -1.19036, -0.0225792, 9.40911 ) }
    soma_0 { pt3dadd( -0.0115077, -2.27027, -0.0151419, 8.85229 ) }
    soma_0 { pt3dadd( -0.0531668, -3.35018, -0.00770454, 8.34531 ) }
    soma_0 { pt3dadd( -0.094826, -4.43009, -2.67214E-4, 7.89073 ) }
    soma_0 { pt3dadd( -0.136485, -5.51, 0.00717012, 7.34681 ) }
    soma_0 { pt3dadd( -0.178144, -6.58991, 0.0146074, 6.74183 ) }
    soma_0 { pt3dadd( -0.219803, -7.66982, 0.0220448, 6.06339 ) }
    soma_0 { pt3dadd( -0.261463, -8.74973, 0.0294821, 5.33412 ) }
    soma_0 { pt3dadd( -0.303122, -9.82964, 0.0369194, 3.6506 ) }
    soma_0 { pt3dadd( -0.344781, -10.9096, 0.0443568, 2.18196 ) }
    // Section: dend_54, id: dend_54, parent: soma_0 (entry count 21/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 1.87458, 3.07242, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( 1.37229, 4.05051, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( 0.816372, 5.13303, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( -0.00429189, 6.73108, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( -0.647058, 7.98272, 11.4844, 0.81 ) }
    dend_54 { pt3dadd( -1.42197, 9.49169, 11.4844, 1.4 ) }
    dend_54 { pt3dadd( -1.62018, 9.87766, 11.4844, 1.4 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 28/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -1.37542, -9.69758, 0.224411, 4.05 ) }
    dend_27 { pt3dadd( -1.37542, -9.69758, 0.224411, 4.05 ) }
    dend_27 { pt3dadd( -1.76379, -11.0011, 0.23221, 3.61 ) }
    dend_27 { pt3dadd( -2.30216, -12.908, 0.190308, 2.87 ) }
    dend_27 { pt3dadd( -2.7575, -14.6809, 0.0563411, 2.36 ) }
    dend_27 { pt3dadd( -3.1563, -16.406, -0.0809829, 2.36 ) }
    dend_27 { pt3dadd( -3.53615, -18.2192, -0.207294, 2.65 ) }
    dend_27 { pt3dadd( -3.84538, -19.7679, -0.324726, 2.65 ) }
    dend_27 { pt3dadd( -4.10179, -21.1838, -0.448599, 2.8 ) }
    dend_27 { pt3dadd( -4.44234, -23.3852, -0.669882, 2.43 ) }
    dend_27 { pt3dadd( -4.70037, -25.339, -0.892938, 2.28 ) }
    dend_27 { pt3dadd( -4.9283, -27.4357, -1.15759, 2.14 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 40/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.565422, 10.3624, -2.89559, 3.17 ) }
    dend_0 { pt3dadd( -0.565422, 10.3624, -2.89559, 3.17 ) }
    dend_0 { pt3dadd( -2.01624, 11.8441, -2.99819, 2.8 ) }
    dend_0 { pt3dadd( -3.4303, 13.2208, -3.09254, 2.8 ) }
    dend_0 { pt3dadd( -4.70752, 14.4381, -3.17227, 2.8 ) }
    dend_0 { pt3dadd( -6.33834, 16.0097, -3.25816, 2.8 ) }
    dend_0 { pt3dadd( -7.58157, 17.2771, -3.31566, 2.58 ) }
    dend_0 { pt3dadd( -8.44976, 18.2084, -3.34936, 2.58 ) }
    dend_0 { pt3dadd( -9.18318, 19.0538, -3.371, 2.36 ) }
    dend_0 { pt3dadd( -9.84261, 19.9553, -3.38068, 1.92 ) }
    dend_0 { pt3dadd( -10.6638, 21.5256, -3.38275, 1.92 ) }
    dend_0 { pt3dadd( -11.1198, 23.1053, -3.36984, 1.92 ) }
    dend_0 { pt3dadd( -11.2866, 24.5057, -3.36111, 1.92 ) }
    dend_0 { pt3dadd( -11.2609, 25.7078, -3.35807, 2.21 ) }
    dend_0 { pt3dadd( -11.0783, 26.986, -3.42876, 2.21 ) }
    dend_0 { pt3dadd( -10.8178, 28.0488, -3.54315, 1.84 ) }
    dend_0 { pt3dadd( -10.3168, 29.5899, -3.78251, 1.84 ) }
    dend_0 { pt3dadd( -9.96211, 30.5832, -3.96753, 1.84 ) }
    dend_0 { pt3dadd( -9.5569, 31.6972, -4.22597, 1.84 ) }
    dend_0 { pt3dadd( -8.822, 33.8548, -4.82377, 1.69 ) }
    dend_0 { pt3dadd( -8.56316, 34.7412, -5.10251, 1.69 ) }
    dend_0 { pt3dadd( -8.23942, 36.0724, -5.62843, 1.69 ) }
    dend_0 { pt3dadd( -8.01906, 37.3029, -6.20802, 1.84 ) }
    dend_0 { pt3dadd( -7.88447, 38.3525, -6.75342, 1.99 ) }
    dend_0 { pt3dadd( -7.81755, 39.3741, -7.31115, 1.99 ) }
    dend_0 { pt3dadd( -7.77642, 40.5271, -7.94798, 1.99 ) }
    dend_0 { pt3dadd( -7.75988, 42.2424, -9.00462, 2.14 ) }
    dend_0 { pt3dadd( -7.77646, 43.1471, -9.63864, 2.14 ) }
    dend_0 { pt3dadd( -7.81371, 43.9549, -10.2614, 2.14 ) }
    dend_0 { pt3dadd( -7.87049, 44.7592, -10.8821, 2.14 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 70/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.344781, -10.9096, 0.0443568, 0.553183 ) }
    axon_0 { pt3dadd( -0.922998, -25.8985, 0.0443568, 0.553183 ) }
    axon_0 { pt3dadd( -1.50121, -40.8873, 0.0443568, 0.553183 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 73/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -1.62018, 9.87766, 11.4844, 0.81 ) }
    dend_56 { pt3dadd( -2.23274, 12.6261, 9.81665, 0.81 ) }
    dend_56 { pt3dadd( -2.54261, 13.9926, 9.08275, 0.81 ) }
    dend_56 { pt3dadd( -2.81373, 15.0458, 8.57469, 1.03 ) }
    dend_56 { pt3dadd( -3.10074, 16.0179, 8.14579, 1.03 ) }
    dend_56 { pt3dadd( -3.50328, 17.2159, 7.65574, 0.59 ) }
    dend_56 { pt3dadd( -3.94963, 18.3952, 7.21211, 0.37 ) }
    dend_56 { pt3dadd( -4.42206, 19.4723, 6.96406, 0.37 ) }
    dend_56 { pt3dadd( -4.87909, 20.4208, 6.75085, 0.59 ) }
    dend_56 { pt3dadd( -5.25953, 21.1943, 6.57108, 0.59 ) }
    dend_56 { pt3dadd( -5.63256, 21.903, 6.39841, 0.66 ) }
    dend_56 { pt3dadd( -6.15342, 22.8731, 6.09181, 0.59 ) }
    dend_56 { pt3dadd( -6.67027, 23.8192, 5.66765, 0.44 ) }
    dend_56 { pt3dadd( -7.26683, 25.0088, 4.9176, 0.44 ) }
    dend_56 { pt3dadd( -7.52293, 25.595, 4.48594, 0.96 ) }
    dend_56 { pt3dadd( -7.84342, 26.4201, 3.84837, 1.33 ) }
    dend_56 { pt3dadd( -8.09875, 27.1813, 3.26164, 1.55 ) }
    dend_56 { pt3dadd( -8.48337, 28.5343, 2.24681, 1.03 ) }
    dend_56 { pt3dadd( -8.93231, 30.5068, 0.922279, 0.52 ) }
    dend_56 { pt3dadd( -9.01129, 31.0438, 0.61947, 0.88 ) }
    dend_56 { pt3dadd( -9.09131, 32.1355, 0.104967, 0.52 ) }
    dend_56 { pt3dadd( -9.08128, 33.0767, -0.235747, 0.52 ) }
    dend_56 { pt3dadd( -9.02244, 33.8844, -0.447013, 0.52 ) }
    dend_56 { pt3dadd( -8.863, 35.3107, -0.737346, 0.88 ) }
    dend_56 { pt3dadd( -8.69125, 36.7926, -1.01905, 0.74 ) }
    dend_56 { pt3dadd( -8.6319, 37.6572, -1.20841, 0.59 ) }
    dend_56 { pt3dadd( -8.65017, 39.4874, -1.68379, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_56 { pt3dadd( -8.81165, 40.6381, -2.02359, 1.25 ) }
    dend_56 { pt3dadd( -9.1761, 41.8342, -2.43373, 1.4 ) }
    dend_56 { pt3dadd( -9.63041, 42.6834, -2.75875, 1.18 ) }
    dend_56 { pt3dadd( -10.2586, 43.5373, -3.08459, 0.88 ) }
    dend_56 { pt3dadd( -11.1017, 44.5136, -3.45577, 0.66 ) }
    dend_56 { pt3dadd( -11.7563, 45.1805, -3.69573, 0.66 ) }
    dend_56 { pt3dadd( -12.2443, 45.6877, -3.84885, 0.66 ) }
    dend_56 { pt3dadd( -12.9461, 46.575, -4.0103, 0.59 ) }
    dend_56 { pt3dadd( -13.3532, 47.3645, -4.06625, 0.59 ) }
    dend_56 { pt3dadd( -13.5908, 48.3218, -4.03527, 0.74 ) }
    dend_56 { pt3dadd( -13.6367, 48.7702, -3.98418, 0.88 ) }
    dend_56 { pt3dadd( -13.6702, 49.3761, -3.87814, 0.88 ) }
    dend_56 { pt3dadd( -13.7107, 50.1355, -3.70941, 1.03 ) }
    dend_56 { pt3dadd( -13.8042, 51.0377, -3.48382, 0.66 ) }
    dend_56 { pt3dadd( -14.0397, 52.4225, -3.10856, 0.44 ) }
    dend_56 { pt3dadd( -14.263, 53.5065, -2.79697, 0.44 ) }
    dend_56 { pt3dadd( -14.4568, 54.541, -2.58219, 0.59 ) }
    dend_56 { pt3dadd( -14.5365, 55.1044, -2.5234, 0.96 ) }
    dend_56 { pt3dadd( -14.6037, 56.3837, -2.51023, 1.18 ) }
    dend_56 { pt3dadd( -14.5486, 57.053, -2.56304, 1.18 ) }
    dend_56 { pt3dadd( -14.3088, 58.1228, -2.73169, 0.74 ) }
    dend_56 { pt3dadd( -13.6215, 60.2058, -3.09505, 0.37 ) }
    dend_56 { pt3dadd( -13.2376, 61.2409, -3.27812, 0.29 ) }
    dend_56 { pt3dadd( -12.8366, 62.3069, -3.44975, 0.29 ) }
    dend_56 { pt3dadd( -12.4254, 63.4269, -3.61458, 0.37 ) }
    dend_56 { pt3dadd( -12.1812, 64.277, -3.7141, 0.37 ) }
    dend_56 { pt3dadd( -11.9824, 65.5752, -3.78462, 0.29 ) }
    dend_56 { pt3dadd( -11.9928, 66.5246, -3.73327, 0.37 ) }
    dend_56 { pt3dadd( -12.0902, 67.2705, -3.66371, 0.74 ) }
    dend_56 { pt3dadd( -12.2021, 67.7855, -3.61063, 0.74 ) }
    dend_56 { pt3dadd( -12.3752, 68.4773, -3.56223, 0.44 ) }
    dend_56 { pt3dadd( -12.5845, 69.5835, -3.5266, 0.66 ) }
    dend_56 { pt3dadd( -12.7052, 70.6575, -3.57686, 1.25 ) }
    dend_56 { pt3dadd( -12.7498, 71.3091, -3.63543, 1.47 ) }
    dend_56 { pt3dadd( -12.797, 72.0346, -3.72493, 1.47 ) }
    dend_56 { pt3dadd( -12.896, 73.3239, -3.92175, 1.11 ) }
    dend_56 { pt3dadd( -13.038, 75.0021, -4.22214, 0.29 ) }
    dend_56 { pt3dadd( -13.1552, 76.22, -4.46258, 0.66 ) }
    dend_56 { pt3dadd( -13.2318, 76.9023, -4.61425, 0.52 ) }
    dend_56 { pt3dadd( -13.3861, 77.9967, -4.90567, 0.52 ) }
    dend_56 { pt3dadd( -13.6342, 79.3162, -5.27586, 0.66 ) }
    dend_56 { pt3dadd( -13.9837, 80.8381, -5.68364, 0.88 ) }
    dend_56 { pt3dadd( -14.1926, 81.5772, -5.88177, 1.47 ) }
    dend_56 { pt3dadd( -14.4589, 82.5123, -6.10245, 1.47 ) }
    dend_56 { pt3dadd( -14.7609, 83.6104, -6.3446, 0.74 ) }
    dend_56 { pt3dadd( -15.0749, 84.6494, -6.5865, 0.74 ) }
    dend_56 { pt3dadd( -15.4062, 85.5451, -6.79307, 0.74 ) }
    dend_56 { pt3dadd( -15.8353, 86.4978, -7.00088, 0.37 ) }
    dend_56 { pt3dadd( -16.377, 87.601, -7.21022, 0.37 ) }
    dend_56 { pt3dadd( -16.8228, 88.4826, -7.3533, 0.29 ) }
    dend_56 { pt3dadd( -17.2278, 89.3207, -7.48451, 0.29 ) }
    dend_56 { pt3dadd( -17.6961, 90.3649, -7.68352, 0.29 ) }
    dend_56 { pt3dadd( -17.9469, 90.9998, -7.81911, 0.29 ) }
    dend_56 { pt3dadd( -18.224, 92.0268, -8.11009, 0.88 ) }
    dend_56 { pt3dadd( -18.3213, 92.7108, -8.33836, 1.47 ) }
    dend_56 { pt3dadd( -18.3259, 93.3975, -8.58013, 1.47 ) }
    dend_56 { pt3dadd( -18.2713, 93.9892, -8.77412, 1.47 ) }
    dend_56 { pt3dadd( -18.1189, 94.8396, -9.04141, 1.18 ) }
    dend_56 { pt3dadd( -17.7439, 96.4672, -9.50585, 0.37 ) }
    dend_56 { pt3dadd( -17.5185, 97.3512, -9.70924, 0.37 ) }
    dend_56 { pt3dadd( -17.3342, 98.2408, -9.8411, 0.37 ) }
    dend_56 { pt3dadd( -17.2477, 98.8788, -9.89314, 0.96 ) }
    dend_56 { pt3dadd( -17.1943, 99.6823, -9.91071, 1.03 ) }
    dend_56 { pt3dadd( -17.1996, 100.139, -9.88188, 1.03 ) }
    dend_56 { pt3dadd( -17.2861, 101.384, -9.74425, 0.37 ) }
    dend_56 { pt3dadd( -17.3998, 102.613, -9.67727, 0.37 ) }
    dend_56 { pt3dadd( -17.4651, 103.314, -9.6762, 0.29 ) }
    dend_56 { pt3dadd( -17.5148, 104.107, -9.81216, 0.29 ) }
    dend_56 { pt3dadd( -17.5527, 105.282, -10.1466, 0.29 ) }
    dend_56 { pt3dadd( -17.5251, 106.128, -10.4685, 0.29 ) }
    dend_56 { pt3dadd( -17.4402, 107.281, -10.9883, 1.18 ) }
    dend_56 { pt3dadd( -17.3656, 107.858, -11.2632, 1.47 ) }
    dend_56 { pt3dadd( -16.9064, 110.341, -12.549, 0.22 ) }
    dend_56 { pt3dadd( -16.846, 110.607, -12.6992, 0.44 ) }
    dend_56 { pt3dadd( -16.5622, 111.631, -13.3057, 0.66 ) }
    dend_56 { pt3dadd( -16.2811, 112.538, -13.8149, 0.22 ) }
    dend_56 { pt3dadd( -15.9919, 113.414, -14.277, 0.22 ) }
    dend_56 { pt3dadd( -15.4763, 114.966, -15.0639, 0.88 ) }
    dend_56 { pt3dadd( -15.2038, 115.787, -15.4427, 0.88 ) }
    dend_56 { pt3dadd( -14.9628, 116.573, -15.8283, 0.88 ) }
    dend_56 { pt3dadd( -14.5928, 117.929, -16.5629, 0.37 ) }
    dend_56 { pt3dadd( -14.3729, 118.888, -17.1544, 0.37 ) }
    dend_56 { pt3dadd( -14.3191, 119.306, -17.4343, 0.88 ) }
    dend_56 { pt3dadd( -14.3054, 119.883, -17.8164, 0.88 ) }
    dend_56 { pt3dadd( -14.3474, 120.783, -18.4626, 0.52 ) }
    dend_56 { pt3dadd( -14.437, 121.558, -19.068, 0.29 ) }
    dend_56 { pt3dadd( -14.5684, 122.415, -19.7751, 0.29 ) }
    dend_56 { pt3dadd( -14.7328, 123.392, -20.5558, 1.11 ) }
    dend_56 { pt3dadd( -14.7951, 124.033, -21.0621, 1.33 ) }
    dend_56 { pt3dadd( -14.829, 124.787, -21.6644, 1.55 ) }
    dend_56 { pt3dadd( -14.8346, 125.526, -22.2626, 1.55 ) }
    dend_56 { pt3dadd( -14.8143, 126.601, -23.1495, 0.52 ) }
    dend_56 { pt3dadd( -14.7973, 127.612, -23.9809, 0.44 ) }
    dend_56 { pt3dadd( -14.8223, 129.262, -25.2987, 1.47 ) }
    dend_56 { pt3dadd( -14.8515, 130.061, -25.8912, 1.47 ) }
    dend_56 { pt3dadd( -14.9543, 131.915, -27.122, 0.44 ) }
    dend_56 { pt3dadd( -15.0199, 132.917, -27.7509, 0.44 ) }
    dend_56 { pt3dadd( -15.0978, 134.186, -28.5158, 0.44 ) }
    dend_56 { pt3dadd( -15.1646, 135.428, -29.2303, 0.37 ) }
    dend_56 { pt3dadd( -15.2425, 136.608, -29.8367, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_56 { pt3dadd( -15.294, 138.528, -30.6528, 1.47 ) }
    dend_56 { pt3dadd( -15.2648, 139.27, -30.8792, 1.77 ) }
    dend_56 { pt3dadd( -15.0925, 141.162, -31.284, 0.29 ) }
    dend_56 { pt3dadd( -14.9703, 142.069, -31.4136, 1.03 ) }
    dend_56 { pt3dadd( -14.886, 142.598, -31.4472, 1.03 ) }
    dend_56 { pt3dadd( -14.5911, 144.458, -31.4032, 0.66 ) }
    dend_56 { pt3dadd( -14.2642, 146.725, -31.1283, 0.29 ) }
    dend_56 { pt3dadd( -14.1323, 147.872, -30.8989, 1.03 ) }
    dend_56 { pt3dadd( -14.0952, 148.35, -30.7655, 1.25 ) }
    dend_56 { pt3dadd( -14.0498, 149.595, -30.3967, 0.22 ) }
    dend_56 { pt3dadd( -14.0579, 150.195, -30.2316, 0.44 ) }
    dend_56 { pt3dadd( -14.1406, 151.317, -29.9586, 0.22 ) }
    dend_56 { pt3dadd( -14.2537, 152.199, -29.7189, 0.52 ) }
    dend_56 { pt3dadd( -14.3468, 152.853, -29.5374, 0.52 ) }
    dend_56 { pt3dadd( -14.5457, 154.498, -29.0706, 0.22 ) }
    dend_56 { pt3dadd( -14.6225, 155.385, -28.8152, 0.29 ) }
    dend_56 { pt3dadd( -14.673, 156.287, -28.5549, 0.29 ) }
    dend_56 { pt3dadd( -14.7406, 158.096, -28.0457, 1.11 ) }
    dend_56 { pt3dadd( -14.7437, 158.701, -27.8958, 1.33 ) }
    dend_56 { pt3dadd( -14.7007, 159.817, -27.6345, 0.29 ) }
    dend_56 { pt3dadd( -14.6018, 160.919, -27.3822, 0.29 ) }
    dend_56 { pt3dadd( -14.5425, 161.357, -27.2898, 0.44 ) }
    dend_56 { pt3dadd( -14.3401, 162.568, -27.0764, 0.22 ) }
    dend_56 { pt3dadd( -14.1191, 163.811, -26.9083, 0.66 ) }
    dend_56 { pt3dadd( -14.0645, 164.197, -26.8613, 1.18 ) }
    dend_56 { pt3dadd( -14.019, 164.755, -26.8056, 1.18 ) }
    dend_56 { pt3dadd( -13.9862, 165.2, -26.763, 0.74 ) }
    dend_56 { pt3dadd( -13.8495, 166.858, -26.6058, 0.22 ) }
    dend_56 { pt3dadd( -13.7871, 167.507, -26.549, 0.66 ) }
    dend_56 { pt3dadd( -13.7322, 168.629, -26.4378, 0.22 ) }
    dend_56 { pt3dadd( -13.7313, 169.185, -26.3812, 0.52 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 31/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -1.62018, 9.87766, 11.4844, 0.44 ) }
    dend_55 { pt3dadd( -1.04766, 11.0822, 10.7314, 0.44 ) }
    dend_55 { pt3dadd( -0.763087, 11.756, 10.32, 0.44 ) }
    dend_55 { pt3dadd( -0.427133, 12.5751, 9.83719, 0.96 ) }
    dend_55 { pt3dadd( -0.190532, 13.1081, 9.53033, 0.96 ) }
    dend_55 { pt3dadd( 0.44483, 14.5792, 8.81045, 0.52 ) }
    dend_55 { pt3dadd( 0.655979, 15.124, 8.60447, 0.52 ) }
    dend_55 { pt3dadd( 0.816235, 15.6334, 8.4334, 0.66 ) }
    dend_55 { pt3dadd( 0.941037, 16.348, 8.31726, 0.37 ) }
    dend_55 { pt3dadd( 0.988491, 16.8944, 8.38437, 0.37 ) }
    dend_55 { pt3dadd( 1.11672, 17.9975, 8.68398, 0.37 ) }
    dend_55 { pt3dadd( 1.28147, 19.0239, 9.03404, 0.59 ) }
    dend_55 { pt3dadd( 1.398, 19.6129, 9.21378, 0.81 ) }
    dend_55 { pt3dadd( 1.5234, 20.1925, 9.37562, 0.81 ) }
    dend_55 { pt3dadd( 1.83582, 21.7121, 9.8135, 0.29 ) }
    dend_55 { pt3dadd( 2.06734, 22.8385, 10.0792, 0.29 ) }
    dend_55 { pt3dadd( 2.27822, 23.7341, 10.2509, 0.29 ) }
    dend_55 { pt3dadd( 2.49052, 24.4671, 10.366, 0.29 ) }
    dend_55 { pt3dadd( 2.70531, 25.1321, 10.4657, 0.88 ) }
    dend_55 { pt3dadd( 2.98119, 25.9828, 10.5712, 0.88 ) }
    dend_55 { pt3dadd( 3.10809, 26.687, 10.6526, 0.52 ) }
    dend_55 { pt3dadd( 3.09922, 27.4449, 10.8443, 0.37 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 53/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -4.9283, -27.4357, -1.15759, 1.77 ) }
    dend_29 { pt3dadd( -4.557, -28.938, -1.26993, 1.77 ) }
    dend_29 { pt3dadd( -4.33832, -29.688, -1.28032, 1.77 ) }
    dend_29 { pt3dadd( -4.06132, -30.4992, -1.49882, 1.77 ) }
    dend_29 { pt3dadd( -3.68024, -31.3669, -1.9352, 1.77 ) }
    dend_29 { pt3dadd( -3.24039, -32.3683, -2.43888, 1.92 ) }
    dend_29 { pt3dadd( -2.90365, -33.135, -2.82449, 2.14 ) }
    dend_29 { pt3dadd( -2.38452, -34.1008, -3.39324, 2.36 ) }
    dend_29 { pt3dadd( -0.83979, -36.6917, -5.42239, 1.77 ) }
    dend_29 { pt3dadd( -0.266597, -37.5285, -6.35974, 1.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 63/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -4.9283, -27.4357, -1.15759, 0.81 ) }
    dend_28 { pt3dadd( -3.84211, -28.7372, -0.792541, 0.81 ) }
    dend_28 { pt3dadd( -2.05898, -30.5168, -0.445027, 0.66 ) }
    dend_28 { pt3dadd( -1.30674, -31.1219, -0.376896, 0.88 ) }
    dend_28 { pt3dadd( -0.0682825, -31.9781, -0.370135, 0.59 ) }
    dend_28 { pt3dadd( 1.18174, -32.7537, -0.488895, 0.88 ) }
    dend_28 { pt3dadd( 2.53485, -33.5254, -0.752662, 1.18 ) }
    dend_28 { pt3dadd( 3.61371, -34.0515, -1.19617, 0.81 ) }
    dend_28 { pt3dadd( 4.86376, -34.5334, -1.88489, 0.66 ) }
    dend_28 { pt3dadd( 5.72106, -34.8281, -2.39996, 0.59 ) }
    dend_28 { pt3dadd( 6.89773, -35.2102, -3.15014, 0.88 ) }
    dend_28 { pt3dadd( 7.94218, -35.5577, -3.85221, 0.74 ) }
    dend_28 { pt3dadd( 9.02594, -35.9767, -4.61691, 0.59 ) }
    dend_28 { pt3dadd( 10.1405, -36.4666, -5.42556, 0.74 ) }
    dend_28 { pt3dadd( 11.1293, -36.9528, -6.12972, 0.74 ) }
    dend_28 { pt3dadd( 11.733, -37.2786, -6.53681, 0.88 ) }
    dend_28 { pt3dadd( 12.4034, -37.689, -6.95643, 0.88 ) }
    dend_28 { pt3dadd( 13.2572, -38.2905, -7.47717, 0.66 ) }
    dend_28 { pt3dadd( 14.091, -39.0202, -8.02234, 0.66 ) }
    dend_28 { pt3dadd( 14.556, -39.5859, -8.3858, 0.52 ) }
    dend_28 { pt3dadd( 15.0258, -40.3991, -8.81593, 0.52 ) }
    dend_28 { pt3dadd( 15.2628, -41.0257, -9.04443, 0.96 ) }
    dend_28 { pt3dadd( 15.3932, -41.4753, -9.14688, 1.18 ) }
    dend_28 { pt3dadd( 15.6628, -42.4776, -9.29224, 1.03 ) }
    dend_28 { pt3dadd( 15.843, -43.018, -9.30607, 1.18 ) }
    dend_28 { pt3dadd( 16.1884, -43.7478, -9.24899, 1.03 ) }
    dend_28 { pt3dadd( 16.9204, -44.8563, -9.05094, 0.37 ) }
    dend_28 { pt3dadd( 17.6819, -45.7504, -8.79952, 0.74 ) }
    dend_28 { pt3dadd( 18.161, -46.237, -8.60092, 0.88 ) }
    dend_28 { pt3dadd( 19.2826, -47.2958, -8.05943, 0.59 ) }
    dend_28 { pt3dadd( 19.8698, -47.8538, -7.75179, 0.59 ) }
    dend_28 { pt3dadd( 20.555, -48.5418, -7.36952, 0.88 ) }
    dend_28 { pt3dadd( 21.3657, -49.4445, -6.89705, 0.74 ) }
    dend_28 { pt3dadd( 22.0528, -50.3261, -6.47508, 1.25 ) }
    dend_28 { pt3dadd( 22.4751, -50.9118, -6.24822, 1.25 ) }
    dend_28 { pt3dadd( 22.9599, -51.6195, -6.06683, 0.81 ) }
    dend_28 { pt3dadd( 23.4337, -52.3523, -5.93486, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_28 { pt3dadd( 23.9769, -53.2094, -5.84859, 0.59 ) }
    dend_28 { pt3dadd( 24.4393, -53.9152, -5.8648, 0.59 ) }
    dend_28 { pt3dadd( 25.2437, -55.003, -5.9871, 0.44 ) }
    dend_28 { pt3dadd( 25.8052, -55.6447, -6.0792, 0.52 ) }
    dend_28 { pt3dadd( 26.4106, -56.2325, -6.1836, 0.44 ) }
    dend_28 { pt3dadd( 27.1524, -56.881, -6.31681, 0.44 ) }
    dend_28 { pt3dadd( 27.7475, -57.3938, -6.4233, 0.52 ) }
    dend_28 { pt3dadd( 28.4858, -58.0723, -6.53646, 0.66 ) }
    dend_28 { pt3dadd( 29.1439, -58.7313, -6.64894, 0.66 ) }
    dend_28 { pt3dadd( 29.9823, -59.672, -6.78093, 0.52 ) }
    dend_28 { pt3dadd( 30.3712, -60.1325, -6.80364, 0.81 ) }
    dend_28 { pt3dadd( 30.8302, -60.7436, -6.77629, 0.81 ) }
    dend_28 { pt3dadd( 31.3205, -61.4806, -6.69794, 0.66 ) }
    dend_28 { pt3dadd( 32.0338, -62.6916, -6.54632, 0.52 ) }
    dend_28 { pt3dadd( 32.6648, -63.8757, -6.37604, 0.52 ) }
    dend_28 { pt3dadd( 33.2194, -64.9796, -6.18184, 1.18 ) }
    dend_28 { pt3dadd( 33.5019, -65.5317, -6.07254, 1.4 ) }
    dend_28 { pt3dadd( 33.9911, -66.4195, -5.87679, 1.25 ) }
    dend_28 { pt3dadd( 34.6003, -67.438, -5.59289, 1.03 ) }
    dend_28 { pt3dadd( 34.8244, -67.7759, -5.4665, 1.03 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 20/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -7.87049, 44.7592, -10.8821, 1.33 ) }
    dend_6 { pt3dadd( -8.58586, 45.9064, -11.0321, 1.33 ) }
    dend_6 { pt3dadd( -9.30274, 47.1853, -11.1515, 1.33 ) }
    dend_6 { pt3dadd( -9.97265, 48.4682, -11.1797, 1.33 ) }
    dend_6 { pt3dadd( -10.6885, 49.9593, -11.1103, 1.33 ) }
    dend_6 { pt3dadd( -11.4192, 51.6359, -10.9528, 1.47 ) }
    dend_6 { pt3dadd( -11.8968, 52.8713, -10.7915, 1.69 ) }
    dend_6 { pt3dadd( -12.2002, 53.9189, -10.5913, 1.77 ) }
    dend_6 { pt3dadd( -12.4669, 55.1231, -10.2926, 1.99 ) }
    dend_6 { pt3dadd( -12.6759, 56.3341, -9.97033, 2.14 ) }
    dend_6 { pt3dadd( -12.8938, 57.7921, -9.57758, 1.84 ) }
    dend_6 { pt3dadd( -13.1654, 59.5094, -9.14569, 1.84 ) }
    dend_6 { pt3dadd( -13.4509, 61.0011, -8.83876, 1.84 ) }
    dend_6 { pt3dadd( -13.683, 62.0154, -8.70233, 1.92 ) }
    dend_6 { pt3dadd( -14.0176, 63.2808, -8.6178, 1.92 ) }
    dend_6 { pt3dadd( -14.3704, 64.4961, -8.5754, 1.92 ) }
    dend_6 { pt3dadd( -14.7725, 65.7295, -8.56506, 1.62 ) }
    dend_6 { pt3dadd( -15.3343, 67.2251, -8.60901, 1.62 ) }
    dend_6 { pt3dadd( -15.9174, 68.6147, -8.69543, 1.77 ) }
    dend_6 { pt3dadd( -16.4522, 69.8256, -8.80681, 2.14 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -7.87049, 44.7592, -10.8821, 0.66 ) }
    dend_1 { pt3dadd( -6.99205, 46.5248, -10.8139, 0.66 ) }
    dend_1 { pt3dadd( -6.44804, 47.4727, -10.6785, 0.66 ) }
    dend_1 { pt3dadd( -6.23413, 47.8149, -10.5922, 0.96 ) }
    dend_1 { pt3dadd( -5.82675, 48.4553, -10.3643, 0.96 ) }
    dend_1 { pt3dadd( -5.53869, 48.9676, -10.1013, 0.74 ) }
    dend_1 { pt3dadd( -5.34239, 49.3754, -9.8713, 0.66 ) }
    dend_1 { pt3dadd( -5.0449, 50.0152, -9.40076, 0.66 ) }
    dend_1 { pt3dadd( -4.78673, 50.5537, -9.00349, 0.66 ) }
    dend_1 { pt3dadd( -4.52115, 51.0645, -8.64954, 0.66 ) }
    dend_1 { pt3dadd( -3.73164, 52.3519, -7.87143, 0.88 ) }
    dend_1 { pt3dadd( -3.12872, 53.1791, -7.45632, 0.29 ) }
    dend_1 { pt3dadd( -2.57203, 53.7959, -7.23949, 0.29 ) }
    dend_1 { pt3dadd( -1.694, 54.4575, -7.20465, 1.18 ) }
    dend_1 { pt3dadd( -1.24153, 54.705, -7.28404, 1.62 ) }
    dend_1 { pt3dadd( -0.0618797, 55.2274, -7.6159, 0.81 ) }
    dend_1 { pt3dadd( 0.656931, 55.4969, -7.8663, 0.81 ) }
    dend_1 { pt3dadd( 1.36308, 55.7171, -8.13331, 1.03 ) }
    dend_1 { pt3dadd( 2.45263, 56.0371, -8.58595, 0.44 ) }
    dend_1 { pt3dadd( 3.38236, 56.3133, -9.00206, 0.44 ) }
    dend_1 { pt3dadd( 3.97343, 56.5158, -9.25922, 1.18 ) }
    dend_1 { pt3dadd( 4.42533, 56.714, -9.42487, 1.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 62/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -1.50121, -40.8873, 0.0443568, 0.15 ) }
    axon_1 { pt3dadd( -2.07943, -55.8762, 0.0443568, 0.15 ) }
    axon_1 { pt3dadd( -2.65765, -70.865, 0.0443568, 0.15 ) }
    // Section: dend_37, id: dend_37, parent: dend_29 (entry count 65/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -0.266597, -37.5285, -6.35974, 1.03 ) }
    dend_37 { pt3dadd( -1.62505, -38.9597, -8.50669, 1.03 ) }
    dend_37 { pt3dadd( -2.89501, -40.0817, -9.89375, 0.81 ) }
    dend_37 { pt3dadd( -3.53939, -40.5785, -10.4368, 0.81 ) }
    dend_37 { pt3dadd( -4.3163, -41.0787, -10.9697, 0.81 ) }
    dend_37 { pt3dadd( -4.99379, -41.4486, -11.3807, 1.11 ) }
    dend_37 { pt3dadd( -5.74357, -41.784, -11.7663, 1.11 ) }
    dend_37 { pt3dadd( -6.75163, -42.0449, -11.9978, 1.4 ) }
    dend_37 { pt3dadd( -7.44312, -42.1431, -12.089, 1.4 ) }
    dend_37 { pt3dadd( -8.63925, -42.1808, -12.3023, 1.11 ) }
    dend_37 { pt3dadd( -9.28174, -42.0898, -12.4584, 1.33 ) }
    dend_37 { pt3dadd( -10.4554, -41.6961, -12.8183, 1.03 ) }
    dend_37 { pt3dadd( -11.1936, -41.3253, -13.2462, 0.81 ) }
    dend_37 { pt3dadd( -11.6645, -41.0688, -13.5942, 0.81 ) }
    dend_37 { pt3dadd( -12.7567, -40.5482, -14.5026, 0.81 ) }
    dend_37 { pt3dadd( -13.895, -40.127, -15.5388, 1.03 ) }
    dend_37 { pt3dadd( -14.7701, -39.9176, -16.3678, 1.33 ) }
    dend_37 { pt3dadd( -17.6361, -39.732, -19.1855, 1.03 ) }
    dend_37 { pt3dadd( -18.5987, -39.8712, -20.0914, 1.03 ) }
    dend_37 { pt3dadd( -19.8012, -40.2976, -21.0882, 1.33 ) }
    dend_37 { pt3dadd( -20.7285, -40.8082, -21.721, 1.33 ) }
    dend_37 { pt3dadd( -21.4842, -41.3422, -22.1349, 1.47 ) }
    dend_37 { pt3dadd( -22.6873, -42.2922, -22.5558, 1.11 ) }
    dend_37 { pt3dadd( -23.6381, -43.0502, -22.6596, 0.88 ) }
    dend_37 { pt3dadd( -24.3404, -43.5196, -22.6948, 1.55 ) }
    dend_37 { pt3dadd( -25.1032, -43.8951, -22.7113, 1.84 ) }
    dend_37 { pt3dadd( -25.9401, -44.1484, -22.7269, 1.99 ) }
    dend_37 { pt3dadd( -27.4055, -44.2931, -22.7307, 1.18 ) }
    dend_37 { pt3dadd( -28.3917, -44.178, -22.7066, 0.88 ) }
    dend_37 { pt3dadd( -29.4, -43.8537, -22.6742, 1.25 ) }
    dend_37 { pt3dadd( -30.1819, -43.4089, -22.6512, 1.47 ) }
    dend_37 { pt3dadd( -31.1111, -42.6918, -22.7326, 1.18 ) }
    dend_37 { pt3dadd( -32.1569, -41.9441, -23.2504, 0.96 ) }
    dend_37 { pt3dadd( -32.5204, -41.7692, -23.6297, 1.18 ) }
    dend_37 { pt3dadd( -32.8653, -41.6722, -24.0637, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_37 { pt3dadd( -33.604, -41.5576, -24.9818, 0.74 ) }
    dend_37 { pt3dadd( -35.0963, -41.4769, -26.7474, 0.74 ) }
    dend_37 { pt3dadd( -37.7727, -41.5029, -30.0288, 1.47 ) }
    dend_37 { pt3dadd( -39.3559, -41.6003, -32.016, 1.99 ) }
    dend_37 { pt3dadd( -40.7449, -41.7536, -33.7695, 1.47 ) }
    dend_37 { pt3dadd( -41.552, -41.887, -34.7901, 1.62 ) }
    dend_37 { pt3dadd( -42.7181, -42.1579, -36.266, 1.33 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 7/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -0.266597, -37.5285, -6.35974, 0.88 ) }
    dend_30 { pt3dadd( 1.02811, -38.3877, -7.60388, 0.88 ) }
    dend_30 { pt3dadd( 1.93902, -39.1847, -8.70368, 1.03 ) }
    dend_30 { pt3dadd( 2.7046, -40.1576, -9.87286, 1.03 ) }
    dend_30 { pt3dadd( 3.22727, -41.2629, -11.015, 0.88 ) }
    dend_30 { pt3dadd( 3.60086, -42.6081, -12.2331, 0.81 ) }
    dend_30 { pt3dadd( 3.8052, -44.2699, -13.664, 1.03 ) }
    dend_30 { pt3dadd( 3.63472, -45.2276, -14.4124, 1.33 ) }
    dend_30 { pt3dadd( 2.96189, -46.6245, -15.5712, 0.88 ) }
    dend_30 { pt3dadd( 1.87876, -48.0671, -16.863, 0.66 ) }
    dend_30 { pt3dadd( 1.19548, -48.7877, -17.65, 0.96 ) }
    dend_30 { pt3dadd( 0.37999, -49.572, -18.8408, 0.66 ) }
    dend_30 { pt3dadd( -0.189687, -50.1626, -20.077, 0.74 ) }
    dend_30 { pt3dadd( -0.877024, -51.2201, -23.1246, 0.88 ) }
    dend_30 { pt3dadd( -0.868133, -51.535, -24.3041, 1.11 ) }
    dend_30 { pt3dadd( -0.389242, -52.343, -27.5584, 0.88 ) }
    dend_30 { pt3dadd( 0.261266, -53.285, -31.1222, 0.74 ) }
    dend_30 { pt3dadd( 0.816224, -54.0873, -33.6474, 0.74 ) }
    dend_30 { pt3dadd( 1.26368, -54.809, -35.5855, 0.74 ) }
    dend_30 { pt3dadd( 1.66633, -55.5679, -37.2996, 0.66 ) }
    dend_30 { pt3dadd( 2.33619, -57.157, -40.3805, 0.96 ) }
    dend_30 { pt3dadd( 2.77663, -58.486, -42.4658, 1.25 ) }
    dend_30 { pt3dadd( 3.17906, -59.8977, -44.3671, 0.81 ) }
    dend_30 { pt3dadd( 3.65032, -61.619, -46.5414, 0.74 ) }
    dend_30 { pt3dadd( 4.02592, -62.6773, -47.8273, 0.88 ) }
    dend_30 { pt3dadd( 4.79672, -64.0163, -49.2932, 0.59 ) }
    dend_30 { pt3dadd( 6.04356, -65.2823, -50.4774, 0.59 ) }
    dend_30 { pt3dadd( 7.37509, -66.2607, -51.2842, 1.18 ) }
    dend_30 { pt3dadd( 8.10064, -66.6691, -51.5206, 1.62 ) }
    dend_30 { pt3dadd( 8.9248, -67.0561, -51.6401, 1.84 ) }
    dend_30 { pt3dadd( 11.2199, -67.979, -51.7788, 1.18 ) }
    dend_30 { pt3dadd( 12.9774, -68.5981, -51.9476, 0.81 ) }
    dend_30 { pt3dadd( 13.6988, -68.8356, -52.0822, 0.96 ) }
    dend_30 { pt3dadd( 15.5128, -69.4532, -52.7753, 0.59 ) }
    dend_30 { pt3dadd( 16.1184, -69.6873, -53.1409, 0.66 ) }
    dend_30 { pt3dadd( 17.1809, -70.1762, -54.0065, 0.52 ) }
    dend_30 { pt3dadd( 19.169, -71.3968, -56.3066, 1.18 ) }
    dend_30 { pt3dadd( 19.8708, -71.9794, -57.3199, 1.25 ) }
    dend_30 { pt3dadd( 20.9749, -73.1311, -59.5634, 0.88 ) }
    dend_30 { pt3dadd( 21.4065, -73.6281, -60.6134, 0.88 ) }
    dend_30 { pt3dadd( 21.986, -74.2815, -62.0584, 0.66 ) }
    dend_30 { pt3dadd( 23.074, -75.3466, -64.8139, 1.47 ) }
    dend_30 { pt3dadd( 23.5793, -75.7418, -66.0698, 1.69 ) }
    dend_30 { pt3dadd( 25.9803, -77.1999, -71.914, 0.81 ) }
    dend_30 { pt3dadd( 26.5261, -77.4545, -73.1617, 0.81 ) }
    dend_30 { pt3dadd( 27.2373, -77.71, -74.6476, 0.66 ) }
    dend_30 { pt3dadd( 29.0143, -78.1566, -77.8747, 1.03 ) }
    dend_30 { pt3dadd( 29.6747, -78.2632, -78.8264, 1.03 ) }
    dend_30 { pt3dadd( 30.64, -78.4427, -79.8989, 1.33 ) }
    dend_30 { pt3dadd( 32.4198, -78.9523, -81.1047, 0.88 ) }
    dend_30 { pt3dadd( 33.7895, -79.5243, -81.8393, 0.88 ) }
    dend_30 { pt3dadd( 34.9189, -80.1539, -82.2434, 0.74 ) }
    dend_30 { pt3dadd( 35.3896, -80.4562, -82.3371, 0.88 ) }
    dend_30 { pt3dadd( 36.8208, -81.4054, -82.5322, 0.44 ) }
    dend_30 { pt3dadd( 38.052, -82.1968, -82.6353, 1.77 ) }
    dend_30 { pt3dadd( 38.7342, -82.6387, -82.6563, 2.06 ) }
    dend_30 { pt3dadd( 39.5357, -83.2656, -82.6291, 2.06 ) }
    // Section: dend_12, id: dend_12, parent: dend_6 (entry count 64/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -16.4522, 69.8256, -8.80681, 1.25 ) }
    dend_12 { pt3dadd( -15.4093, 71.5389, -9.59352, 1.25 ) }
    dend_12 { pt3dadd( -14.995, 72.2515, -9.82811, 1.4 ) }
    dend_12 { pt3dadd( -14.3724, 73.5199, -10.1392, 1.11 ) }
    dend_12 { pt3dadd( -13.7073, 75.1565, -10.4501, 1.33 ) }
    dend_12 { pt3dadd( -13.322, 76.3088, -10.6305, 1.25 ) }
    dend_12 { pt3dadd( -12.8608, 77.8994, -10.8516, 1.25 ) }
    dend_12 { pt3dadd( -12.4079, 79.6852, -11.0037, 1.47 ) }
    dend_12 { pt3dadd( -12.0141, 81.3898, -11.0929, 1.69 ) }
    dend_12 { pt3dadd( -11.7513, 82.8895, -11.0922, 1.84 ) }
    dend_12 { pt3dadd( -11.6298, 84.1797, -11.0405, 2.14 ) }
    dend_12 { pt3dadd( -11.627, 85.446, -11.0085, 2.14 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 76/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -16.4522, 69.8256, -8.80681, 0.96 ) }
    dend_7 { pt3dadd( -17.0346, 70.9315, -8.35872, 0.96 ) }
    dend_7 { pt3dadd( -17.4882, 71.657, -8.15568, 0.81 ) }
    dend_7 { pt3dadd( -18.4301, 72.9104, -7.93741, 0.66 ) }
    dend_7 { pt3dadd( -19.0007, 73.5296, -7.89865, 0.59 ) }
    dend_7 { pt3dadd( -19.7341, 74.2043, -7.9157, 0.59 ) }
    dend_7 { pt3dadd( -20.7111, 74.9732, -8.01247, 0.74 ) }
    dend_7 { pt3dadd( -21.5784, 75.4681, -8.21549, 0.74 ) }
    dend_7 { pt3dadd( -22.3182, 75.8002, -8.45881, 1.11 ) }
    dend_7 { pt3dadd( -23.2353, 76.1459, -8.81177, 0.74 ) }
    dend_7 { pt3dadd( -23.8839, 76.3896, -9.06735, 1.25 ) }
    dend_7 { pt3dadd( -24.8432, 76.8046, -9.44888, 0.96 ) }
    dend_7 { pt3dadd( -25.8588, 77.3881, -9.80219, 0.44 ) }
    dend_7 { pt3dadd( -26.2153, 77.6874, -9.92869, 0.44 ) }
    dend_7 { pt3dadd( -26.5459, 78.115, -10.0598, 0.74 ) }
    dend_7 { pt3dadd( -26.8618, 78.7639, -10.1949, 0.74 ) }
    dend_7 { pt3dadd( -27.1171, 79.5269, -10.2247, 0.74 ) }
    dend_7 { pt3dadd( -27.3266, 80.4517, -10.0494, 0.59 ) }
    dend_7 { pt3dadd( -27.4336, 81.1394, -9.77048, 0.59 ) }
    dend_7 { pt3dadd( -27.4992, 81.8363, -9.35284, 0.88 ) }
    dend_7 { pt3dadd( -27.525, 82.4691, -8.91926, 0.66 ) }
    dend_7 { pt3dadd( -27.5615, 83.9647, -7.65487, 0.66 ) }
    dend_7 { pt3dadd( -27.5992, 85.0288, -6.64209, 0.96 ) }
    dend_7 { pt3dadd( -27.6322, 85.5805, -6.08615, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_7 { pt3dadd( -27.7045, 86.2701, -5.36058, 0.52 ) }
    dend_7 { pt3dadd( -27.8391, 87.0777, -4.51034, 0.88 ) }
    dend_7 { pt3dadd( -28.1056, 88.2171, -3.43051, 0.59 ) }
    dend_7 { pt3dadd( -28.2918, 88.8063, -2.99419, 0.59 ) }
    dend_7 { pt3dadd( -28.5112, 89.3348, -2.66128, 0.59 ) }
    dend_7 { pt3dadd( -28.9738, 90.2224, -2.13328, 0.59 ) }
    dend_7 { pt3dadd( -29.4455, 90.99, -1.68482, 1.11 ) }
    dend_7 { pt3dadd( -30.1, 91.9586, -1.12612, 0.59 ) }
    dend_7 { pt3dadd( -30.5258, 92.5566, -0.83653, 0.59 ) }
    dend_7 { pt3dadd( -31.045, 93.2456, -0.500067, 0.81 ) }
    dend_7 { pt3dadd( -31.5711, 93.9277, -0.184996, 0.81 ) }
    dend_7 { pt3dadd( -32.1355, 94.6378, 0.0917025, 0.96 ) }
    dend_7 { pt3dadd( -32.6505, 95.2521, 0.314022, 1.03 ) }
    dend_7 { pt3dadd( -33.1712, 95.8026, 0.516957, 1.33 ) }
    dend_7 { pt3dadd( -33.7185, 96.3389, 0.747068, 1.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 15/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 4.42533, 56.714, -9.42487, 0.88 ) }
    dend_3 { pt3dadd( 5.27616, 57.0184, -9.28545, 0.88 ) }
    dend_3 { pt3dadd( 5.97136, 57.2029, -9.17515, 0.66 ) }
    dend_3 { pt3dadd( 6.49565, 57.3094, -9.09452, 1.03 ) }
    dend_3 { pt3dadd( 7.10277, 57.4318, -9.02196, 1.18 ) }
    dend_3 { pt3dadd( 7.63679, 57.5617, -8.98583, 1.18 ) }
    dend_3 { pt3dadd( 8.05005, 57.6847, -8.97935, 0.81 ) }
    dend_3 { pt3dadd( 8.57822, 57.8672, -9.01705, 0.44 ) }
    dend_3 { pt3dadd( 9.17298, 58.1398, -9.11152, 0.44 ) }
    dend_3 { pt3dadd( 9.83253, 58.5793, -9.27365, 0.44 ) }
    dend_3 { pt3dadd( 10.4303, 59.1156, -9.45329, 0.59 ) }
    dend_3 { pt3dadd( 10.8306, 59.5364, -9.57587, 0.81 ) }
    dend_3 { pt3dadd( 11.1387, 59.8718, -9.66033, 0.81 ) }
    dend_3 { pt3dadd( 11.5176, 60.2856, -9.74445, 0.66 ) }
    dend_3 { pt3dadd( 11.9879, 60.7503, -9.80738, 0.66 ) }
    dend_3 { pt3dadd( 12.5665, 61.2102, -9.8145, 0.66 ) }
    dend_3 { pt3dadd( 13.0821, 61.5069, -9.77433, 0.88 ) }
    dend_3 { pt3dadd( 13.6466, 61.7392, -9.70688, 0.52 ) }
    dend_3 { pt3dadd( 14.0655, 61.8539, -9.65086, 0.96 ) }
    dend_3 { pt3dadd( 14.5959, 61.9182, -9.58043, 0.96 ) }
    dend_3 { pt3dadd( 15.0161, 61.901, -9.5251, 1.11 ) }
    dend_3 { pt3dadd( 15.568, 61.779, -9.46929, 1.18 ) }
    dend_3 { pt3dadd( 15.9761, 61.6215, -9.43785, 1.18 ) }
    dend_3 { pt3dadd( 16.473, 61.3464, -9.42999, 0.66 ) }
    dend_3 { pt3dadd( 17.1736, 60.8457, -9.47617, 0.96 ) }
    dend_3 { pt3dadd( 17.8569, 60.2327, -9.58551, 0.44 ) }
    dend_3 { pt3dadd( 18.6445, 59.4246, -9.81129, 0.37 ) }
    dend_3 { pt3dadd( 19.0748, 58.9633, -9.9797, 1.18 ) }
    dend_3 { pt3dadd( 19.5538, 58.4559, -10.2044, 1.33 ) }
    dend_3 { pt3dadd( 19.9257, 58.0723, -10.4072, 1.33 ) }
    dend_3 { pt3dadd( 20.5693, 57.4236, -10.8474, 0.59 ) }
    dend_3 { pt3dadd( 21.1802, 56.8096, -11.3662, 0.37 ) }
    dend_3 { pt3dadd( 21.5877, 56.3872, -11.7758, 0.37 ) }
    dend_3 { pt3dadd( 21.8898, 56.054, -12.1499, 0.37 ) }
    dend_3 { pt3dadd( 22.1906, 55.7022, -12.5737, 0.37 ) }
    dend_3 { pt3dadd( 22.6375, 55.1292, -13.3116, 0.52 ) }
    dend_3 { pt3dadd( 22.9771, 54.6535, -13.9508, 0.52 ) }
    dend_3 { pt3dadd( 23.2604, 54.2012, -14.5244, 0.52 ) }
    dend_3 { pt3dadd( 23.8044, 53.2288, -15.5847, 0.96 ) }
    dend_3 { pt3dadd( 24.1614, 52.5858, -16.1842, 1.47 ) }
    dend_3 { pt3dadd( 24.4913, 52.0529, -16.6113, 1.69 ) }
    dend_3 { pt3dadd( 24.7528, 51.6904, -16.853, 1.92 ) }
    dend_3 { pt3dadd( 25.1239, 51.245, -17.1059, 1.92 ) }
    dend_3 { pt3dadd( 26.0512, 50.2555, -17.559, 0.74 ) }
    dend_3 { pt3dadd( 26.7928, 49.5249, -17.7855, 0.37 ) }
    dend_3 { pt3dadd( 27.302, 49.0767, -17.8915, 0.88 ) }
    dend_3 { pt3dadd( 27.6563, 48.8145, -17.9364, 1.11 ) }
    dend_3 { pt3dadd( 27.9776, 48.6111, -17.9678, 1.11 ) }
    dend_3 { pt3dadd( 28.4187, 48.3635, -18.0025, 1.33 ) }
    dend_3 { pt3dadd( 28.6849, 48.2221, -18.0187, 1.33 ) }
    dend_3 { pt3dadd( 29.1361, 47.9129, -18.0261, 0.81 ) }
    dend_3 { pt3dadd( 29.5119, 47.4889, -18.0537, 0.44 ) }
    dend_3 { pt3dadd( 29.8532, 46.9632, -18.1358, 0.37 ) }
    dend_3 { pt3dadd( 30.2356, 46.3052, -18.2916, 0.37 ) }
    dend_3 { pt3dadd( 30.4688, 45.897, -18.417, 1.18 ) }
    dend_3 { pt3dadd( 30.7347, 45.4416, -18.5833, 1.4 ) }
    dend_3 { pt3dadd( 31.3283, 44.4956, -19.0152, 0.29 ) }
    dend_3 { pt3dadd( 31.9664, 43.6701, -19.5091, 0.66 ) }
    dend_3 { pt3dadd( 32.5598, 43.0756, -19.9675, 1.11 ) }
    dend_3 { pt3dadd( 32.9942, 42.7024, -20.3104, 1.62 ) }
    dend_3 { pt3dadd( 33.1965, 42.5322, -20.4766, 1.84 ) }
    dend_3 { pt3dadd( 33.7166, 42.0995, -20.9045, 1.84 ) }
    dend_3 { pt3dadd( 34.4433, 41.464, -21.5419, 0.81 ) }
    dend_3 { pt3dadd( 35.0134, 40.916, -22.0524, 0.44 ) }
    dend_3 { pt3dadd( 35.3946, 40.5157, -22.3881, 0.44 ) }
    dend_3 { pt3dadd( 35.9752, 39.8932, -22.8453, 0.44 ) }
    dend_3 { pt3dadd( 36.3641, 39.4773, -23.1076, 0.59 ) }
    dend_3 { pt3dadd( 37.2489, 38.5719, -23.5617, 0.52 ) }
    dend_3 { pt3dadd( 37.7236, 38.1324, -23.7326, 0.37 ) }
    dend_3 { pt3dadd( 38.1661, 37.8111, -23.8693, 0.96 ) }
    dend_3 { pt3dadd( 38.8085, 37.4233, -24.0692, 1.62 ) }
    dend_3 { pt3dadd( 39.1063, 37.257, -24.1591, 1.99 ) }
    dend_3 { pt3dadd( 39.6816, 36.9186, -24.338, 1.99 ) }
    dend_3 { pt3dadd( 40.0414, 36.6924, -24.4387, 1.47 ) }
    dend_3 { pt3dadd( 41.3543, 35.7719, -24.8343, 0.52 ) }
    dend_3 { pt3dadd( 42.1483, 35.207, -25.0723, 0.52 ) }
    dend_3 { pt3dadd( 42.7613, 34.7739, -25.2482, 0.88 ) }
    dend_3 { pt3dadd( 43.3868, 34.3512, -25.4089, 0.59 ) }
    dend_3 { pt3dadd( 43.9201, 34.0023, -25.5213, 0.37 ) }
    dend_3 { pt3dadd( 44.3497, 33.7291, -25.5669, 0.37 ) }
    dend_3 { pt3dadd( 44.9253, 33.3806, -25.5188, 0.74 ) }
    dend_3 { pt3dadd( 45.2838, 33.1717, -25.4896, 0.74 ) }
    dend_3 { pt3dadd( 45.6062, 32.9717, -25.4959, 0.37 ) }
    dend_3 { pt3dadd( 45.8285, 32.809, -25.5305, 0.37 ) }
    dend_3 { pt3dadd( 46.3338, 32.3747, -25.6809, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_3 { pt3dadd( 46.5366, 32.1606, -25.7748, 1.03 ) }
    dend_3 { pt3dadd( 47.2842, 31.2449, -26.1964, 0.37 ) }
    dend_3 { pt3dadd( 47.7774, 30.5965, -26.5059, 1.18 ) }
    dend_3 { pt3dadd( 48.1496, 30.0827, -26.7563, 1.47 ) }
    dend_3 { pt3dadd( 48.6088, 29.4676, -27.0588, 0.66 ) }
    dend_3 { pt3dadd( 49.2158, 28.7455, -27.4412, 0.29 ) }
    dend_3 { pt3dadd( 49.4938, 28.4556, -27.5889, 1.25 ) }
    dend_3 { pt3dadd( 49.8122, 28.1688, -27.7386, 1.55 ) }
    dend_3 { pt3dadd( 50.154, 27.9109, -27.8871, 1.55 ) }
    dend_3 { pt3dadd( 51.1002, 27.3296, -28.2527, 0.44 ) }
    dend_3 { pt3dadd( 52.2079, 26.7962, -28.6417, 1.18 ) }
    dend_3 { pt3dadd( 53.0588, 26.4586, -28.9136, 1.84 ) }
    dend_3 { pt3dadd( 54.0699, 26.1018, -29.2247, 2.06 ) }
    dend_3 { pt3dadd( 55.2706, 25.7309, -29.6004, 0.29 ) }
    dend_3 { pt3dadd( 55.9973, 25.5342, -29.8358, 0.29 ) }
    dend_3 { pt3dadd( 56.8071, 25.3132, -30.1014, 1.18 ) }
    dend_3 { pt3dadd( 57.4712, 25.0946, -30.3092, 0.88 ) }
    dend_3 { pt3dadd( 57.9004, 24.9411, -30.4356, 0.52 ) }
    dend_3 { pt3dadd( 58.802, 24.5935, -30.6573, 0.52 ) }
    dend_3 { pt3dadd( 59.3384, 24.3627, -30.7908, 0.52 ) }
    dend_3 { pt3dadd( 60.1244, 23.9852, -30.9768, 0.29 ) }
    dend_3 { pt3dadd( 60.7566, 23.6567, -31.0973, 0.29 ) }
    dend_3 { pt3dadd( 61.3546, 23.348, -31.1971, 0.66 ) }
    dend_3 { pt3dadd( 61.8955, 23.0505, -31.27, 0.81 ) }
    dend_3 { pt3dadd( 62.1095, 22.9225, -31.2871, 0.81 ) }
    dend_3 { pt3dadd( 62.9378, 22.4233, -31.3634, 0.29 ) }
    dend_3 { pt3dadd( 63.5612, 22.067, -31.4324, 0.96 ) }
    dend_3 { pt3dadd( 64.136, 21.7537, -31.5191, 1.03 ) }
    dend_3 { pt3dadd( 64.801, 21.3812, -31.6318, 0.29 ) }
    dend_3 { pt3dadd( 65.1979, 21.1622, -31.6987, 0.29 ) }
    dend_3 { pt3dadd( 65.822, 20.8405, -31.7945, 0.96 ) }
    dend_3 { pt3dadd( 66.4504, 20.5453, -31.8685, 0.96 ) }
    dend_3 { pt3dadd( 67.2918, 20.1989, -31.9432, 0.37 ) }
    dend_3 { pt3dadd( 68.1221, 19.9008, -31.974, 0.66 ) }
    dend_3 { pt3dadd( 68.4773, 19.7757, -31.9797, 0.96 ) }
    dend_3 { pt3dadd( 69.3341, 19.4512, -31.9734, 0.29 ) }
    dend_3 { pt3dadd( 70.2136, 19.0968, -31.9377, 1.03 ) }
    dend_3 { pt3dadd( 70.5284, 18.9718, -31.9229, 1.33 ) }
    dend_3 { pt3dadd( 71.341, 18.6754, -31.8676, 0.37 ) }
    dend_3 { pt3dadd( 72.1164, 18.4596, -31.8252, 0.37 ) }
    dend_3 { pt3dadd( 72.7928, 18.3172, -31.8158, 0.37 ) }
    dend_3 { pt3dadd( 73.2186, 18.2555, -31.825, 0.74 ) }
    dend_3 { pt3dadd( 73.9062, 18.174, -31.8564, 0.74 ) }
    dend_3 { pt3dadd( 74.4148, 18.112, -31.8875, 0.37 ) }
    dend_3 { pt3dadd( 75.0711, 18.0481, -31.9345, 0.29 ) }
    dend_3 { pt3dadd( 75.7499, 18.0192, -31.9779, 0.29 ) }
    dend_3 { pt3dadd( 76.2956, 18.0159, -32.0077, 0.88 ) }
    dend_3 { pt3dadd( 76.8781, 18.0207, -32.031, 1.25 ) }
    dend_3 { pt3dadd( 77.5606, 18.0314, -32.054, 1.18 ) }
    dend_3 { pt3dadd( 78.4626, 18.0571, -32.084, 0.29 ) }
    dend_3 { pt3dadd( 79.1137, 18.1001, -32.1081, 0.74 ) }
    dend_3 { pt3dadd( 79.6592, 18.1509, -32.1262, 0.74 ) }
    dend_3 { pt3dadd( 80.3011, 18.2196, -32.1734, 0.37 ) }
    dend_3 { pt3dadd( 81.1006, 18.305, -32.2702, 0.96 ) }
    dend_3 { pt3dadd( 81.5706, 18.343, -32.3382, 1.33 ) }
    dend_3 { pt3dadd( 82.0464, 18.346, -32.4231, 1.33 ) }
    dend_3 { pt3dadd( 82.8221, 18.2783, -32.5667, 0.37 ) }
    dend_3 { pt3dadd( 83.6478, 18.1396, -32.7203, 0.44 ) }
    dend_3 { pt3dadd( 84.2185, 18.0127, -32.8214, 0.44 ) }
    dend_3 { pt3dadd( 84.8485, 17.8595, -32.9128, 0.44 ) }
    dend_3 { pt3dadd( 85.7504, 17.6347, -33.0177, 0.96 ) }
    dend_3 { pt3dadd( 86.326, 17.4757, -33.0631, 1.03 ) }
    dend_3 { pt3dadd( 86.7289, 17.3523, -33.0772, 0.81 ) }
    dend_3 { pt3dadd( 87.2577, 17.1669, -33.0725, 0.52 ) }
    dend_3 { pt3dadd( 87.8819, 16.9246, -33.0526, 0.29 ) }
    dend_3 { pt3dadd( 88.2167, 16.7945, -33.0475, 0.29 ) }
    dend_3 { pt3dadd( 88.7981, 16.5806, -32.9931, 0.88 ) }
    dend_3 { pt3dadd( 89.3412, 16.3829, -32.9113, 1.25 ) }
    dend_3 { pt3dadd( 89.5601, 16.2933, -32.8686, 1.25 ) }
    dend_3 { pt3dadd( 90.3023, 15.9231, -32.7062, 0.29 ) }
    dend_3 { pt3dadd( 90.8293, 15.5997, -32.5894, 0.29 ) }
    dend_3 { pt3dadd( 91.7221, 14.9934, -32.3912, 0.29 ) }
    dend_3 { pt3dadd( 92.0345, 14.7792, -32.3272, 0.29 ) }
    dend_3 { pt3dadd( 92.7001, 14.3394, -32.2153, 0.96 ) }
    dend_3 { pt3dadd( 93.2175, 14.0359, -32.1513, 0.96 ) }
    dend_3 { pt3dadd( 93.8041, 13.739, -32.1157, 0.44 ) }
    dend_3 { pt3dadd( 94.2002, 13.5703, -32.1161, 0.37 ) }
    dend_3 { pt3dadd( 94.6824, 13.4145, -32.167, 0.81 ) }
    dend_3 { pt3dadd( 95.4092, 13.264, -32.2843, 0.29 ) }
    dend_3 { pt3dadd( 96.0017, 13.1671, -32.4103, 0.29 ) }
    dend_3 { pt3dadd( 96.5377, 13.0704, -32.5378, 0.74 ) }
    dend_3 { pt3dadd( 97.1694, 12.924, -32.71, 0.96 ) }
    dend_3 { pt3dadd( 97.8302, 12.7212, -32.9087, 0.96 ) }
    dend_3 { pt3dadd( 98.7216, 12.3841, -33.1792, 0.44 ) }
    dend_3 { pt3dadd( 99.4522, 12.0548, -33.4239, 0.29 ) }
    dend_3 { pt3dadd( 100.059, 11.7314, -33.6405, 0.29 ) }
    dend_3 { pt3dadd( 100.619, 11.393, -33.8339, 0.96 ) }
    dend_3 { pt3dadd( 100.923, 11.1969, -33.9313, 1.11 ) }
    dend_3 { pt3dadd( 101.444, 10.8659, -34.0681, 1.18 ) }
    dend_3 { pt3dadd( 102.314, 10.3343, -34.2996, 0.37 ) }
    dend_3 { pt3dadd( 102.809, 10.0742, -34.4416, 0.37 ) }
    dend_3 { pt3dadd( 103.542, 9.72776, -34.6762, 0.29 ) }
    dend_3 { pt3dadd( 104.25, 9.42791, -34.9142, 0.29 ) }
    dend_3 { pt3dadd( 104.933, 9.16551, -35.152, 0.96 ) }
    dend_3 { pt3dadd( 105.992, 8.80731, -35.5164, 0.44 ) }
    dend_3 { pt3dadd( 106.493, 8.66528, -35.669, 1.03 ) }
    dend_3 { pt3dadd( 106.887, 8.56896, -35.7769, 1.03 ) }
    dend_3 { pt3dadd( 107.742, 8.40426, -35.9965, 0.29 ) }
    dend_3 { pt3dadd( 108.175, 8.346, -36.0844, 0.29 ) }
    dend_3 { pt3dadd( 108.683, 8.31269, -36.1708, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_3 { pt3dadd( 109.325, 8.30217, -36.2562, 0.96 ) }
    dend_3 { pt3dadd( 109.723, 8.29644, -36.3112, 0.37 ) }
    dend_3 { pt3dadd( 110.388, 8.27835, -36.4123, 0.22 ) }
    dend_3 { pt3dadd( 111.133, 8.23327, -36.5439, 1.11 ) }
    dend_3 { pt3dadd( 111.957, 8.19098, -36.7035, 1.11 ) }
    dend_3 { pt3dadd( 113.086, 8.14429, -36.95, 0.44 ) }
    dend_3 { pt3dadd( 113.622, 8.12483, -37.0821, 1.03 ) }
    dend_3 { pt3dadd( 113.988, 8.10003, -37.1795, 1.03 ) }
    dend_3 { pt3dadd( 114.754, 7.9743, -37.3941, 0.74 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 9/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 4.42533, 56.714, -9.42487, 0.29 ) }
    dend_2 { pt3dadd( 4.87719, 58.5103, -9.62896, 0.29 ) }
    dend_2 { pt3dadd( 5.11413, 59.356, -9.74506, 0.29 ) }
    dend_2 { pt3dadd( 5.55911, 60.9783, -9.96859, 0.29 ) }
    dend_2 { pt3dadd( 5.86892, 62.0992, -10.1274, 0.81 ) }
    dend_2 { pt3dadd( 6.05736, 62.7574, -10.2286, 0.81 ) }
    dend_2 { pt3dadd( 6.43494, 64.1192, -10.4476, 0.29 ) }
    dend_2 { pt3dadd( 6.82291, 65.3866, -10.6657, 0.29 ) }
    dend_2 { pt3dadd( 7.19007, 66.5923, -10.8896, 0.88 ) }
    dend_2 { pt3dadd( 7.29475, 66.9625, -10.9626, 0.88 ) }
    dend_2 { pt3dadd( 7.59213, 68.0172, -11.1935, 0.22 ) }
    dend_2 { pt3dadd( 7.95903, 69.318, -11.477, 0.74 ) }
    // Section: dend_49, id: dend_49, parent: dend_37 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -42.7181, -42.1579, -36.266, 0.88 ) }
    dend_49 { pt3dadd( -47.0648, -41.6933, -45.8842, 0.88 ) }
    dend_49 { pt3dadd( -47.7034, -41.657, -47.1177, 0.52 ) }
    dend_49 { pt3dadd( -48.0121, -41.6482, -47.6539, 0.52 ) }
    dend_49 { pt3dadd( -48.8023, -41.6416, -48.8819, 0.52 ) }
    dend_49 { pt3dadd( -49.6692, -41.661, -50.0533, 0.52 ) }
    dend_49 { pt3dadd( -50.4221, -41.7008, -50.9133, 1.03 ) }
    dend_49 { pt3dadd( -50.9525, -41.815, -50.9502, 1.62 ) }
    dend_49 { pt3dadd( -51.219, -41.8792, -50.9529, 1.99 ) }
    dend_49 { pt3dadd( -51.8701, -42.0054, -50.9359, 2.14 ) }
    dend_49 { pt3dadd( -52.9756, -42.0764, -50.9328, 1.55 ) }
    dend_49 { pt3dadd( -53.9903, -42.0131, -51.0984, 0.74 ) }
    dend_49 { pt3dadd( -54.9538, -41.8808, -51.4709, 0.37 ) }
    dend_49 { pt3dadd( -55.8527, -41.7429, -51.9449, 0.37 ) }
    dend_49 { pt3dadd( -56.4812, -41.7017, -52.385, 0.37 ) }
    dend_49 { pt3dadd( -57.9396, -41.709, -53.5949, 0.74 ) }
    dend_49 { pt3dadd( -59.4034, -41.7907, -54.8989, 1.4 ) }
    dend_49 { pt3dadd( -60.1794, -41.8684, -55.5897, 1.92 ) }
    dend_49 { pt3dadd( -60.5626, -41.9227, -55.9225, 2.21 ) }
    dend_49 { pt3dadd( -62.7296, -42.2708, -57.8644, 0.52 ) }
    dend_49 { pt3dadd( -63.3979, -42.3859, -58.487, 0.52 ) }
    dend_49 { pt3dadd( -64.2355, -42.5363, -59.2888, 0.52 ) }
    dend_49 { pt3dadd( -64.8503, -42.5989, -59.9166, 0.59 ) }
    dend_49 { pt3dadd( -65.2987, -42.5945, -60.4277, 0.59 ) }
    dend_49 { pt3dadd( -66.7866, -42.3531, -62.2506, 1.69 ) }
    dend_49 { pt3dadd( -68.0794, -41.8703, -63.9238, 2.06 ) }
    dend_49 { pt3dadd( -69.1597, -41.3454, -65.3372, 1.03 ) }
    dend_49 { pt3dadd( -69.6728, -41.0514, -66.028, 0.29 ) }
    dend_49 { pt3dadd( -70.2202, -40.7426, -66.726, 0.29 ) }
    dend_49 { pt3dadd( -70.938, -40.3769, -67.4981, 1.25 ) }
    dend_49 { pt3dadd( -71.4026, -40.1966, -67.88, 1.62 ) }
    dend_49 { pt3dadd( -72.067, -39.9982, -68.3501, 1.92 ) }
    dend_49 { pt3dadd( -74.0584, -39.6488, -69.686, 0.81 ) }
    dend_49 { pt3dadd( -75.069, -39.6349, -70.3206, 1.11 ) }
    dend_49 { pt3dadd( -75.5773, -39.6791, -70.6638, 1.11 ) }
    dend_49 { pt3dadd( -76.7315, -39.8335, -71.5466, 0.37 ) }
    dend_49 { pt3dadd( -77.4579, -39.9361, -72.1553, 0.29 ) }
    dend_49 { pt3dadd( -78.2699, -40.0721, -72.8442, 0.29 ) }
    dend_49 { pt3dadd( -79.1366, -40.2175, -73.5245, 0.29 ) }
    dend_49 { pt3dadd( -80.8168, -40.4277, -74.9232, 1.33 ) }
    dend_49 { pt3dadd( -81.4647, -40.4753, -75.5158, 1.55 ) }
    dend_49 { pt3dadd( -82.0661, -40.4795, -76.1296, 1.77 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 63/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -42.7181, -42.1579, -36.266, 1.18 ) }
    dend_38 { pt3dadd( -43.9438, -42.7844, -36.4457, 1.18 ) }
    dend_38 { pt3dadd( -45.3746, -43.5981, -36.5891, 0.52 ) }
    dend_38 { pt3dadd( -46.2004, -44.0691, -36.6494, 0.52 ) }
    dend_38 { pt3dadd( -48.0538, -45.1695, -36.6108, 0.88 ) }
    dend_38 { pt3dadd( -49.1784, -45.8643, -36.4973, 1.18 ) }
    dend_38 { pt3dadd( -49.9892, -46.4025, -36.3776, 1.18 ) }
    dend_38 { pt3dadd( -50.9273, -47.1237, -36.1665, 1.25 ) }
    dend_38 { pt3dadd( -51.7361, -47.8244, -35.9403, 1.11 ) }
    dend_38 { pt3dadd( -52.9999, -49.0846, -35.4072, 0.88 ) }
    dend_38 { pt3dadd( -53.7281, -49.8921, -34.9805, 0.59 ) }
    dend_38 { pt3dadd( -54.3233, -50.5644, -34.6039, 0.44 ) }
    dend_38 { pt3dadd( -54.7584, -51.049, -34.3137, 0.29 ) }
    dend_38 { pt3dadd( -55.2389, -51.5658, -33.98, 0.29 ) }
    dend_38 { pt3dadd( -55.8086, -52.1354, -33.6109, 0.88 ) }
    dend_38 { pt3dadd( -56.3797, -52.5849, -33.3358, 1.25 ) }
    dend_38 { pt3dadd( -56.7366, -52.8183, -33.1922, 1.47 ) }
    dend_38 { pt3dadd( -57.3244, -53.1587, -32.9794, 1.47 ) }
    dend_38 { pt3dadd( -57.8254, -53.448, -32.8241, 1.33 ) }
    dend_38 { pt3dadd( -58.5856, -53.9152, -32.6262, 0.59 ) }
    dend_38 { pt3dadd( -59.3694, -54.4349, -32.4685, 0.44 ) }
    dend_38 { pt3dadd( -60.3558, -55.1225, -32.3031, 0.37 ) }
    dend_38 { pt3dadd( -60.9592, -55.5463, -32.2098, 0.96 ) }
    dend_38 { pt3dadd( -61.7346, -56.0836, -32.0933, 0.59 ) }
    dend_38 { pt3dadd( -62.8086, -56.8028, -31.927, 0.52 ) }
    dend_38 { pt3dadd( -63.4254, -57.182, -31.8247, 0.52 ) }
    dend_38 { pt3dadd( -64.0822, -57.5273, -31.7084, 1.11 ) }
    dend_38 { pt3dadd( -64.6777, -57.7766, -31.59, 1.99 ) }
    dend_38 { pt3dadd( -65.3307, -57.986, -31.4476, 2.28 ) }
    dend_38 { pt3dadd( -66.032, -58.1419, -31.2879, 1.99 ) }
    dend_38 { pt3dadd( -66.9007, -58.2641, -31.0863, 1.69 ) }
    dend_38 { pt3dadd( -67.7237, -58.3417, -30.9114, 1.4 ) }
    dend_38 { pt3dadd( -68.3875, -58.4046, -30.7915, 0.66 ) }
    dend_38 { pt3dadd( -69.1783, -58.5086, -30.6746, 0.52 ) }
    dend_38 { pt3dadd( -69.9641, -58.6689, -30.586, 0.52 ) }
    dend_38 { pt3dadd( -70.5601, -58.8823, -30.5454, 0.29 ) }
    dend_38 { pt3dadd( -71.1146, -59.2836, -30.5445, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_38 { pt3dadd( -71.6995, -59.995, -30.5533, 0.81 ) }
    dend_38 { pt3dadd( -71.9875, -60.4588, -30.5331, 1.11 ) }
    dend_38 { pt3dadd( -72.3451, -61.1606, -30.4423, 0.96 ) }
    dend_38 { pt3dadd( -72.7345, -62.0143, -30.1943, 0.74 ) }
    dend_38 { pt3dadd( -73.0947, -62.6922, -29.8755, 0.37 ) }
    dend_38 { pt3dadd( -73.6067, -63.4135, -29.2822, 1.11 ) }
    dend_38 { pt3dadd( -73.9484, -63.8108, -28.8551, 1.84 ) }
    dend_38 { pt3dadd( -74.3369, -64.1718, -28.3452, 2.36 ) }
    dend_38 { pt3dadd( -75.0046, -64.629, -27.4271, 2.58 ) }
    dend_38 { pt3dadd( -75.7102, -64.9522, -26.4228, 0.59 ) }
    dend_38 { pt3dadd( -76.3136, -65.1202, -25.5235, 0.81 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 11/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 39.5357, -83.2656, -82.6291, 0.74 ) }
    dend_32 { pt3dadd( 40.8487, -84.3455, -83.2681, 0.74 ) }
    dend_32 { pt3dadd( 41.8066, -85.0992, -83.8718, 0.66 ) }
    dend_32 { pt3dadd( 42.3901, -85.5447, -84.2938, 1.11 ) }
    dend_32 { pt3dadd( 42.8695, -85.8909, -84.6796, 1.11 ) }
    dend_32 { pt3dadd( 43.8682, -86.5431, -85.5337, 0.88 ) }
    dend_32 { pt3dadd( 44.5989, -86.9791, -86.1897, 0.59 ) }
    dend_32 { pt3dadd( 45.3224, -87.3884, -86.9521, 1.11 ) }
    dend_32 { pt3dadd( 45.5451, -87.5033, -87.2174, 1.47 ) }
    dend_32 { pt3dadd( 46.0003, -87.6978, -87.7724, 1.69 ) }
    dend_32 { pt3dadd( 46.6268, -87.9104, -88.5133, 1.69 ) }
    dend_32 { pt3dadd( 47.4347, -88.0808, -89.3631, 1.77 ) }
    dend_32 { pt3dadd( 47.906, -88.1611, -89.8487, 1.77 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 24/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 39.5357, -83.2656, -82.6291, 0.37 ) }
    dend_31 { pt3dadd( 39.3378, -83.8775, -83.6095, 0.37 ) }
    dend_31 { pt3dadd( 39.0675, -84.4606, -84.5431, 1.03 ) }
    dend_31 { pt3dadd( 38.6632, -85.2032, -85.6886, 1.25 ) }
    dend_31 { pt3dadd( 38.0039, -86.088, -87.1389, 0.66 ) }
    dend_31 { pt3dadd( 37.751, -86.3599, -87.6181, 0.81 ) }
    dend_31 { pt3dadd( 36.7987, -87.2204, -89.3066, 1.11 ) }
    dend_31 { pt3dadd( 36.3688, -87.5045, -89.9582, 1.4 ) }
    dend_31 { pt3dadd( 35.8501, -87.7753, -90.6308, 0.88 ) }
    dend_31 { pt3dadd( 34.5667, -88.28, -92.0765, 0.22 ) }
    dend_31 { pt3dadd( 33.3165, -88.6865, -93.3757, 0.37 ) }
    dend_31 { pt3dadd( 31.9116, -89.1172, -94.8161, 1.03 ) }
    dend_31 { pt3dadd( 31.1803, -89.3375, -95.5767, 1.69 ) }
    dend_31 { pt3dadd( 30.7248, -89.5142, -96.1591, 1.69 ) }
    dend_31 { pt3dadd( 28.7195, -90.4722, -98.9339, 0.15 ) }
    dend_31 { pt3dadd( 28.406, -90.6888, -99.4905, 0.15 ) }
    dend_31 { pt3dadd( 28.1785, -90.8986, -99.9993, 1.18 ) }
    dend_31 { pt3dadd( 27.8942, -91.2486, -100.792, 1.47 ) }
    dend_31 { pt3dadd( 27.0553, -92.5944, -103.665, 0.88 ) }
    dend_31 { pt3dadd( 26.7181, -93.3086, -105.099, 1.55 ) }
    dend_31 { pt3dadd( 26.2424, -94.787, -107.89, 0.81 ) }
    dend_31 { pt3dadd( 26.0563, -95.3415, -108.933, 0.37 ) }
    dend_31 { pt3dadd( 25.9415, -95.6452, -109.477, 0.52 ) }
    dend_31 { pt3dadd( 25.783, -96.0378, -110.088, 0.52 ) }
    dend_31 { pt3dadd( 25.6643, -96.4013, -110.467, 0.37 ) }
    dend_31 { pt3dadd( 25.5009, -97.0001, -110.876, 0.37 ) }
    dend_31 { pt3dadd( 25.2709, -97.6039, -111.009, 0.81 ) }
    dend_31 { pt3dadd( 25.0633, -98.1396, -111.081, 1.11 ) }
    dend_31 { pt3dadd( 24.8171, -98.9753, -111.162, 1.25 ) }
    dend_31 { pt3dadd( 24.5586, -100.109, -111.286, 0.29 ) }
    dend_31 { pt3dadd( 24.4312, -100.752, -111.353, 0.29 ) }
    dend_31 { pt3dadd( 24.1908, -101.883, -111.441, 1.55 ) }
    dend_31 { pt3dadd( 24.0359, -102.495, -111.476, 1.77 ) }
    dend_31 { pt3dadd( 23.5954, -103.934, -111.543, 0.29 ) }
    dend_31 { pt3dadd( 23.144, -105.057, -111.57, 0.22 ) }
    dend_31 { pt3dadd( 22.4491, -106.284, -111.559, 0.22 ) }
    dend_31 { pt3dadd( 21.7632, -107.236, -111.505, 0.66 ) }
    dend_31 { pt3dadd( 21.2484, -107.793, -111.448, 1.4 ) }
    dend_31 { pt3dadd( 21.1372, -107.891, -111.433, 1.92 ) }
    dend_31 { pt3dadd( 20.5053, -108.368, -111.32, 1.62 ) }
    dend_31 { pt3dadd( 19.7863, -108.894, -111.16, 0.52 ) }
    dend_31 { pt3dadd( 19.1379, -109.373, -111.023, 0.29 ) }
    dend_31 { pt3dadd( 18.4102, -109.946, -110.883, 0.52 ) }
    dend_31 { pt3dadd( 18.0936, -110.201, -110.823, 0.52 ) }
    dend_31 { pt3dadd( 17.4316, -110.755, -110.698, 0.37 ) }
    dend_31 { pt3dadd( 17.1475, -110.994, -110.643, 0.88 ) }
    dend_31 { pt3dadd( 16.7094, -111.349, -110.57, 0.88 ) }
    dend_31 { pt3dadd( 16.2005, -111.743, -110.5, 0.44 ) }
    dend_31 { pt3dadd( 15.6535, -112.182, -110.437, 0.22 ) }
    dend_31 { pt3dadd( 15.2338, -112.545, -110.405, 0.96 ) }
    dend_31 { pt3dadd( 14.6832, -113.061, -110.407, 0.96 ) }
    dend_31 { pt3dadd( 13.7536, -114.046, -110.472, 0.29 ) }
    dend_31 { pt3dadd( 13.3558, -114.522, -110.531, 1.25 ) }
    dend_31 { pt3dadd( 12.9912, -114.966, -110.597, 1.25 ) }
    dend_31 { pt3dadd( 12.5468, -115.524, -110.699, 0.96 ) }
    dend_31 { pt3dadd( 12.0084, -116.245, -110.867, 0.96 ) }
    dend_31 { pt3dadd( 11.2741, -117.369, -111.207, 0.29 ) }
    dend_31 { pt3dadd( 10.8005, -118.202, -111.495, 0.29 ) }
    dend_31 { pt3dadd( 10.4406, -118.908, -111.768, 0.66 ) }
    dend_31 { pt3dadd( 10.1463, -119.53, -112.043, 0.37 ) }
    dend_31 { pt3dadd( 9.73904, -120.354, -112.497, 0.96 ) }
    dend_31 { pt3dadd( 9.39773, -121.033, -112.981, 1.18 ) }
    dend_31 { pt3dadd( 9.22568, -121.366, -113.279, 0.81 ) }
    dend_31 { pt3dadd( 8.81344, -122.133, -114.045, 0.52 ) }
    dend_31 { pt3dadd( 8.38918, -122.908, -114.798, 0.44 ) }
    dend_31 { pt3dadd( 7.72367, -124.024, -115.875, 0.96 ) }
    dend_31 { pt3dadd( 6.75809, -125.464, -117.299, 0.37 ) }
    dend_31 { pt3dadd( 6.23349, -126.205, -118.033, 0.37 ) }
    dend_31 { pt3dadd( 5.52976, -127.217, -119.051, 0.37 ) }
    dend_31 { pt3dadd( 4.91973, -128.165, -119.959, 1.18 ) }
    dend_31 { pt3dadd( 4.60421, -128.733, -120.46, 1.47 ) }
    dend_31 { pt3dadd( 4.36567, -129.246, -120.876, 1.47 ) }
    dend_31 { pt3dadd( 3.76434, -130.845, -122.096, 0.74 ) }
    dend_31 { pt3dadd( 3.48919, -131.837, -122.829, 0.29 ) }
    dend_31 { pt3dadd( 3.33185, -132.702, -123.449, 0.29 ) }
    dend_31 { pt3dadd( 3.18799, -134.009, -124.356, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_31 { pt3dadd( 3.1651, -134.499, -124.658, 1.11 ) }
    dend_31 { pt3dadd( 3.19229, -135.391, -125.143, 0.29 ) }
    dend_31 { pt3dadd( 3.302, -136.182, -125.528, 0.29 ) }
    dend_31 { pt3dadd( 3.47905, -136.917, -125.864, 0.44 ) }
    dend_31 { pt3dadd( 3.66174, -137.436, -126.1, 0.29 ) }
    dend_31 { pt3dadd( 3.87463, -137.973, -126.297, 1.03 ) }
    dend_31 { pt3dadd( 4.07017, -138.495, -126.463, 1.03 ) }
    dend_31 { pt3dadd( 4.45474, -139.569, -126.789, 0.29 ) }
    dend_31 { pt3dadd( 4.79933, -140.396, -127.032, 1.11 ) }
    dend_31 { pt3dadd( 4.96205, -140.757, -127.135, 1.25 ) }
    dend_31 { pt3dadd( 5.42179, -141.789, -127.389, 0.22 ) }
    dend_31 { pt3dadd( 5.53711, -142.079, -127.441, 0.74 ) }
    dend_31 { pt3dadd( 5.63488, -142.364, -127.479, 0.74 ) }
    dend_31 { pt3dadd( 5.86733, -143.137, -127.54, 0.22 ) }
    dend_31 { pt3dadd( 6.01224, -143.667, -127.576, 0.66 ) }
    dend_31 { pt3dadd( 6.14698, -144.132, -127.611, 0.66 ) }
    dend_31 { pt3dadd( 6.34365, -144.77, -127.663, 0.22 ) }
    dend_31 { pt3dadd( 6.46841, -145.223, -127.698, 0.81 ) }
    dend_31 { pt3dadd( 6.63845, -145.943, -127.744, 0.22 ) }
    dend_31 { pt3dadd( 6.81999, -146.884, -127.791, 0.52 ) }
    dend_31 { pt3dadd( 6.91905, -147.48, -127.815, 0.66 ) }
    dend_31 { pt3dadd( 6.9712, -147.82, -127.825, 0.66 ) }
    dend_31 { pt3dadd( 7.10002, -148.64, -127.846, 0.29 ) }
    dend_31 { pt3dadd( 7.278, -149.843, -127.865, 0.29 ) }
    dend_31 { pt3dadd( 7.37203, -150.474, -127.875, 0.81 ) }
    dend_31 { pt3dadd( 7.40711, -150.712, -127.878, 0.81 ) }
    dend_31 { pt3dadd( 7.54889, -151.661, -127.887, 0.29 ) }
    dend_31 { pt3dadd( 7.67936, -152.483, -127.896, 0.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 28/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -11.627, 85.446, -11.0085, 1.25 ) }
    dend_16 { pt3dadd( -11.6295, 87.8107, -9.1918, 1.25 ) }
    dend_16 { pt3dadd( -11.545, 88.616, -8.9241, 1.25 ) }
    dend_16 { pt3dadd( -11.4006, 89.8346, -8.88586, 1.03 ) }
    dend_16 { pt3dadd( -11.3245, 90.4725, -8.95255, 1.11 ) }
    dend_16 { pt3dadd( -11.1874, 91.6196, -9.14138, 1.11 ) }
    dend_16 { pt3dadd( -11.0558, 92.8215, -9.36709, 1.03 ) }
    dend_16 { pt3dadd( -10.846, 94.4944, -9.88027, 0.96 ) }
    dend_16 { pt3dadd( -10.6954, 95.9651, -10.3929, 1.18 ) }
    dend_16 { pt3dadd( -10.6071, 97.213, -10.8645, 1.18 ) }
    dend_16 { pt3dadd( -10.56, 98.3822, -11.31, 1.4 ) }
    dend_16 { pt3dadd( -10.5581, 99.7095, -11.7812, 1.55 ) }
    dend_16 { pt3dadd( -10.606, 101.282, -12.2891, 1.18 ) }
    dend_16 { pt3dadd( -10.6618, 102.448, -12.6214, 0.96 ) }
    dend_16 { pt3dadd( -10.73, 103.886, -13.0059, 1.25 ) }
    dend_16 { pt3dadd( -10.8061, 104.994, -13.2885, 1.25 ) }
    dend_16 { pt3dadd( -10.89, 105.992, -13.5258, 1.03 ) }
    dend_16 { pt3dadd( -11.0385, 107.426, -13.819, 1.03 ) }
    dend_16 { pt3dadd( -11.1733, 108.386, -13.9741, 1.03 ) }
    dend_16 { pt3dadd( -11.4125, 109.893, -14.1582, 1.03 ) }
    dend_16 { pt3dadd( -11.699, 111.617, -14.2857, 1.03 ) }
    dend_16 { pt3dadd( -11.8319, 112.39, -14.3165, 1.33 ) }
    dend_16 { pt3dadd( -12.133, 114.129, -14.3433, 1.62 ) }
    dend_16 { pt3dadd( -12.3797, 115.531, -14.3302, 1.11 ) }
    dend_16 { pt3dadd( -12.6538, 116.884, -14.2025, 1.4 ) }
    dend_16 { pt3dadd( -12.8776, 117.931, -14.0319, 1.25 ) }
    dend_16 { pt3dadd( -13.1176, 119.192, -13.7632, 1.55 ) }
    dend_16 { pt3dadd( -13.1598, 119.448, -13.7011, 1.47 ) }
    dend_16 { pt3dadd( -13.3808, 121.085, -13.27, 1.62 ) }
    dend_16 { pt3dadd( -13.6452, 123.277, -12.6812, 1.47 ) }
    dend_16 { pt3dadd( -13.7693, 124.185, -12.4623, 1.55 ) }
    dend_16 { pt3dadd( -13.8929, 125.035, -12.3037, 1.11 ) }
    dend_16 { pt3dadd( -14.1119, 126.609, -12.0825, 0.88 ) }
    dend_16 { pt3dadd( -14.2382, 127.68, -11.9835, 0.88 ) }
    dend_16 { pt3dadd( -14.3127, 128.697, -11.9469, 0.88 ) }
    dend_16 { pt3dadd( -14.319, 130.15, -11.9711, 0.88 ) }
    dend_16 { pt3dadd( -14.2474, 131.258, -11.9716, 1.18 ) }
    dend_16 { pt3dadd( -14.0615, 132.544, -11.9726, 1.18 ) }
    dend_16 { pt3dadd( -13.8454, 133.487, -11.9657, 1.33 ) }
    dend_16 { pt3dadd( -13.5444, 134.577, -11.9091, 1.33 ) }
    dend_16 { pt3dadd( -13.039, 136.282, -11.7172, 1.11 ) }
    dend_16 { pt3dadd( -12.5367, 137.984, -11.4216, 0.88 ) }
    dend_16 { pt3dadd( -12.2331, 139.147, -11.1496, 0.88 ) }
    dend_16 { pt3dadd( -11.9568, 140.485, -10.7824, 1.03 ) }
    dend_16 { pt3dadd( -11.7896, 141.812, -10.3943, 1.33 ) }
    dend_16 { pt3dadd( -11.7475, 143.053, -10.0281, 1.33 ) }
    dend_16 { pt3dadd( -11.8082, 144.089, -9.74923, 1.47 ) }
    dend_16 { pt3dadd( -11.9547, 145.06, -9.48888, 1.4 ) }
    dend_16 { pt3dadd( -12.1456, 145.955, -9.25092, 1.4 ) }
    dend_16 { pt3dadd( -12.392, 146.958, -9.01611, 1.18 ) }
    dend_16 { pt3dadd( -12.6786, 148.129, -8.78887, 1.18 ) }
    dend_16 { pt3dadd( -12.8698, 148.945, -8.63518, 1.03 ) }
    dend_16 { pt3dadd( -13.1181, 150.176, -8.40114, 1.03 ) }
    dend_16 { pt3dadd( -13.2687, 151.314, -8.1885, 0.88 ) }
    dend_16 { pt3dadd( -13.3082, 152.547, -8.04617, 1.03 ) }
    dend_16 { pt3dadd( -13.2719, 153.685, -7.967, 0.96 ) }
    dend_16 { pt3dadd( -13.1925, 154.563, -7.9681, 0.96 ) }
    dend_16 { pt3dadd( -13.0383, 155.764, -8.05053, 0.96 ) }
    dend_16 { pt3dadd( -12.767, 157.346, -8.33352, 0.96 ) }
    dend_16 { pt3dadd( -12.2504, 159.737, -9.09806, 0.81 ) }
    dend_16 { pt3dadd( -11.9275, 161.209, -9.75942, 1.03 ) }
    dend_16 { pt3dadd( -11.7519, 162.11, -10.2427, 1.03 ) }
    dend_16 { pt3dadd( -11.542, 163.4, -10.9518, 0.88 ) }
    dend_16 { pt3dadd( -11.2893, 165.257, -11.9512, 1.03 ) }
    dend_16 { pt3dadd( -11.0812, 167.27, -12.9503, 1.03 ) }
    dend_16 { pt3dadd( -10.9973, 168.436, -13.4094, 1.25 ) }
    dend_16 { pt3dadd( -10.9488, 169.966, -13.9048, 1.25 ) }
    dend_16 { pt3dadd( -11.0043, 172.121, -14.4088, 1.03 ) }
    dend_16 { pt3dadd( -11.0852, 173.236, -14.5766, 1.03 ) }
    dend_16 { pt3dadd( -11.2114, 174.749, -14.7175, 1.03 ) }
    dend_16 { pt3dadd( -11.3359, 176.7, -14.8133, 1.03 ) }
    dend_16 { pt3dadd( -11.3618, 178.775, -14.8765, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_16 { pt3dadd( -11.2783, 180.593, -14.9161, 0.88 ) }
    dend_16 { pt3dadd( -11.1389, 182.181, -14.9362, 0.88 ) }
    dend_16 { pt3dadd( -10.8017, 185.118, -14.9324, 0.74 ) }
    dend_16 { pt3dadd( -10.5344, 187.032, -14.8932, 0.74 ) }
    dend_16 { pt3dadd( -10.2293, 189.015, -14.7922, 0.74 ) }
    dend_16 { pt3dadd( -9.96215, 190.644, -14.7122, 0.74 ) }
    dend_16 { pt3dadd( -9.74228, 192.358, -14.7447, 0.74 ) }
    dend_16 { pt3dadd( -9.65918, 194.148, -15.0366, 0.74 ) }
    dend_16 { pt3dadd( -9.71, 194.996, -15.2948, 0.88 ) }
    dend_16 { pt3dadd( -9.81604, 195.983, -15.7284, 1.03 ) }
    dend_16 { pt3dadd( -9.99481, 197.724, -16.56, 0.74 ) }
    dend_16 { pt3dadd( -10.1781, 200.175, -17.6962, 0.74 ) }
    dend_16 { pt3dadd( -10.233, 202.267, -18.6116, 0.59 ) }
    dend_16 { pt3dadd( -10.218, 203.215, -18.9728, 0.88 ) }
    dend_16 { pt3dadd( -10.1503, 204.829, -19.4899, 1.11 ) }
    dend_16 { pt3dadd( -9.98442, 207.154, -20.0473, 1.55 ) }
    dend_16 { pt3dadd( -9.82992, 209.026, -20.2922, 1.33 ) }
    dend_16 { pt3dadd( -9.68318, 210.626, -20.3721, 1.11 ) }
    dend_16 { pt3dadd( -9.48659, 212.647, -20.4045, 1.11 ) }
    dend_16 { pt3dadd( -9.31151, 214.257, -20.4107, 1.11 ) }
    dend_16 { pt3dadd( -9.0961, 215.884, -20.37, 1.03 ) }
    dend_16 { pt3dadd( -8.77809, 217.739, -20.2693, 0.88 ) }
    dend_16 { pt3dadd( -8.54952, 218.743, -20.1808, 1.18 ) }
    dend_16 { pt3dadd( -8.38027, 219.373, -20.0939, 1.4 ) }
    dend_16 { pt3dadd( -8.12525, 220.282, -19.9323, 1.25 ) }
    dend_16 { pt3dadd( -7.85008, 221.337, -19.7451, 1.25 ) }
    dend_16 { pt3dadd( -7.70907, 221.998, -19.6645, 1.11 ) }
    dend_16 { pt3dadd( -7.58864, 222.754, -19.6152, 0.96 ) }
    dend_16 { pt3dadd( -7.53545, 223.714, -19.5948, 0.96 ) }
    dend_16 { pt3dadd( -7.5462, 224.386, -19.6048, 0.88 ) }
    dend_16 { pt3dadd( -7.6168, 225.707, -19.6408, 0.66 ) }
    dend_16 { pt3dadd( -7.67505, 226.566, -19.6227, 0.81 ) }
    dend_16 { pt3dadd( -7.72616, 227.472, -19.5436, 0.81 ) }
    dend_16 { pt3dadd( -7.75668, 228.526, -19.3577, 0.74 ) }
    dend_16 { pt3dadd( -7.73161, 230.587, -18.8254, 0.88 ) }
    dend_16 { pt3dadd( -7.70992, 231.142, -18.6334, 1.18 ) }
    dend_16 { pt3dadd( -7.58543, 232.576, -18.0143, 1.18 ) }
    dend_16 { pt3dadd( -7.47917, 233.385, -17.6073, 1.18 ) }
    dend_16 { pt3dadd( -7.32197, 234.241, -17.1475, 1.11 ) }
    dend_16 { pt3dadd( -7.09392, 235.223, -16.6119, 0.96 ) }
    dend_16 { pt3dadd( -6.93223, 235.899, -16.2472, 0.96 ) }
    dend_16 { pt3dadd( -6.735, 236.728, -15.8736, 0.81 ) }
    dend_16 { pt3dadd( -6.52894, 237.591, -15.5713, 1.11 ) }
    dend_16 { pt3dadd( -6.40291, 238.086, -15.4551, 1.47 ) }
    dend_16 { pt3dadd( -6.10641, 239.171, -15.3419, 1.03 ) }
    dend_16 { pt3dadd( -5.85062, 240.083, -15.3355, 1.03 ) }
    dend_16 { pt3dadd( -5.55487, 241.087, -15.4206, 1.25 ) }
    dend_16 { pt3dadd( -5.37532, 241.785, -15.4999, 1.25 ) }
    dend_16 { pt3dadd( -5.02463, 243.478, -15.6718, 0.88 ) }
    dend_16 { pt3dadd( -4.90438, 244.362, -15.7151, 0.88 ) }
    dend_16 { pt3dadd( -4.83662, 245.486, -15.7129, 1.18 ) }
    dend_16 { pt3dadd( -4.83995, 246.706, -15.6344, 0.96 ) }
    dend_16 { pt3dadd( -4.91171, 248.06, -15.4185, 0.81 ) }
    dend_16 { pt3dadd( -5.01202, 249.237, -15.1178, 1.25 ) }
    dend_16 { pt3dadd( -5.11029, 250.174, -14.7855, 0.66 ) }
    dend_16 { pt3dadd( -5.2053, 251.115, -14.4013, 0.96 ) }
    dend_16 { pt3dadd( -5.26956, 251.979, -14.0512, 1.25 ) }
    dend_16 { pt3dadd( -5.30316, 252.825, -13.7265, 0.96 ) }
    dend_16 { pt3dadd( -5.27839, 253.65, -13.4712, 0.96 ) }
    dend_16 { pt3dadd( -5.20728, 254.594, -13.2067, 1.25 ) }
    dend_16 { pt3dadd( -5.12817, 255.324, -13.0009, 1.55 ) }
    dend_16 { pt3dadd( -5.01, 256.199, -12.7434, 1.55 ) }
    dend_16 { pt3dadd( -4.90532, 256.836, -12.558, 1.25 ) }
    dend_16 { pt3dadd( -4.74736, 257.767, -12.3356, 0.96 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 64/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -11.627, 85.446, -11.0085, 0.59 ) }
    dend_13 { pt3dadd( -11.4152, 87.3866, -11.7382, 0.59 ) }
    dend_13 { pt3dadd( -11.3576, 88.1055, -11.9879, 0.88 ) }
    dend_13 { pt3dadd( -11.3133, 88.9578, -12.2448, 1.18 ) }
    dend_13 { pt3dadd( -11.2602, 90.0271, -12.5128, 1.18 ) }
    dend_13 { pt3dadd( -11.1963, 90.7752, -12.6961, 0.96 ) }
    dend_13 { pt3dadd( -11.1153, 91.6109, -12.8951, 0.59 ) }
    dend_13 { pt3dadd( -11.0768, 92.1465, -12.9837, 0.96 ) }
    dend_13 { pt3dadd( -11.0129, 93.0207, -13.1283, 0.96 ) }
    dend_13 { pt3dadd( -10.9461, 94.0583, -13.3244, 0.96 ) }
    dend_13 { pt3dadd( -10.9087, 95.0324, -13.5334, 0.52 ) }
    dend_13 { pt3dadd( -10.9159, 95.7416, -13.7027, 0.37 ) }
    dend_13 { pt3dadd( -10.9646, 96.2001, -13.8383, 0.37 ) }
    dend_13 { pt3dadd( -11.0835, 96.661, -13.9963, 0.81 ) }
    dend_13 { pt3dadd( -11.2571, 97.0468, -14.1757, 1.18 ) }
    dend_13 { pt3dadd( -11.3916, 97.3127, -14.3111, 1.18 ) }
    dend_13 { pt3dadd( -11.6075, 97.788, -14.5264, 0.66 ) }
    dend_13 { pt3dadd( -11.749, 98.214, -14.7054, 0.66 ) }
    dend_13 { pt3dadd( -11.9051, 98.9236, -14.9605, 0.59 ) }
    dend_13 { pt3dadd( -12.0086, 99.7981, -15.2242, 0.88 ) }
    dend_13 { pt3dadd( -12.0688, 101.05, -15.5479, 1.11 ) }
    dend_13 { pt3dadd( -12.0668, 101.747, -15.7005, 1.11 ) }
    dend_13 { pt3dadd( -12.046, 102.343, -15.7964, 1.11 ) }
    dend_13 { pt3dadd( -12.0202, 103.058, -15.854, 0.37 ) }
    dend_13 { pt3dadd( -12.0202, 103.826, -15.8385, 0.37 ) }
    dend_13 { pt3dadd( -12.0625, 104.335, -15.7687, 0.74 ) }
    dend_13 { pt3dadd( -12.09, 104.496, -15.7377, 0.88 ) }
    dend_13 { pt3dadd( -12.2385, 105.219, -15.5743, 0.88 ) }
    dend_13 { pt3dadd( -12.3509, 105.766, -15.4195, 0.66 ) }
    dend_13 { pt3dadd( -12.4816, 106.514, -15.1725, 0.52 ) }
    dend_13 { pt3dadd( -12.5138, 106.864, -15.0663, 0.52 ) }
    dend_13 { pt3dadd( -12.5085, 107.533, -14.9047, 0.96 ) }
    dend_13 { pt3dadd( -12.4568, 107.989, -14.8328, 0.96 ) }
    dend_13 { pt3dadd( -12.3805, 108.367, -14.8037, 1.18 ) }
    dend_13 { pt3dadd( -12.308, 108.681, -14.8002, 1.18 ) }
    dend_13 { pt3dadd( -12.1307, 109.505, -14.8262, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( -12.0689, 109.966, -14.8546, 0.88 ) }
    dend_13 { pt3dadd( -12.052, 110.577, -14.9019, 0.88 ) }
    dend_13 { pt3dadd( -12.0687, 111.057, -14.9617, 0.44 ) }
    dend_13 { pt3dadd( -12.1043, 111.582, -15.0316, 0.74 ) }
    dend_13 { pt3dadd( -12.1305, 111.905, -15.0689, 0.74 ) }
    dend_13 { pt3dadd( -12.1625, 112.334, -15.0987, 0.52 ) }
    dend_13 { pt3dadd( -12.1749, 112.87, -15.1259, 0.37 ) }
    dend_13 { pt3dadd( -12.1605, 113.32, -15.1373, 0.37 ) }
    dend_13 { pt3dadd( -12.1068, 113.871, -15.1318, 0.74 ) }
    dend_13 { pt3dadd( -12.0535, 114.221, -15.1172, 0.74 ) }
    dend_13 { pt3dadd( -11.9724, 114.69, -15.0901, 0.66 ) }
    dend_13 { pt3dadd( -11.8367, 115.449, -15.0361, 0.74 ) }
    dend_13 { pt3dadd( -11.7946, 115.677, -15.0168, 1.4 ) }
    dend_13 { pt3dadd( -11.6868, 116.158, -14.9635, 1.4 ) }
    dend_13 { pt3dadd( -11.5621, 116.606, -14.9277, 1.33 ) }
    dend_13 { pt3dadd( -11.287, 117.404, -14.886, 0.44 ) }
    dend_13 { pt3dadd( -11.0, 118.093, -14.8649, 0.44 ) }
    dend_13 { pt3dadd( -10.7981, 118.551, -14.8663, 0.37 ) }
    dend_13 { pt3dadd( -10.4444, 119.38, -14.9004, 0.37 ) }
    dend_13 { pt3dadd( -10.1651, 120.077, -14.9515, 0.59 ) }
    dend_13 { pt3dadd( -10.0152, 120.511, -15.0001, 0.59 ) }
    dend_13 { pt3dadd( -9.91261, 120.912, -15.0621, 0.29 ) }
    dend_13 { pt3dadd( -9.85195, 121.894, -15.243, 0.88 ) }
    dend_13 { pt3dadd( -9.90913, 122.361, -15.3274, 1.77 ) }
    dend_13 { pt3dadd( -10.009, 122.785, -15.3893, 2.06 ) }
    dend_13 { pt3dadd( -10.1133, 123.155, -15.4248, 1.69 ) }
    dend_13 { pt3dadd( -10.2676, 123.688, -15.4787, 1.18 ) }
    dend_13 { pt3dadd( -10.4979, 124.503, -15.5763, 0.44 ) }
    dend_13 { pt3dadd( -10.7023, 125.233, -15.6698, 0.37 ) }
    dend_13 { pt3dadd( -10.929, 126.057, -15.782, 0.74 ) }
    dend_13 { pt3dadd( -11.0247, 126.393, -15.8343, 0.74 ) }
    dend_13 { pt3dadd( -11.2285, 127.122, -15.9673, 0.52 ) }
    dend_13 { pt3dadd( -11.3845, 127.653, -16.0484, 0.44 ) }
    dend_13 { pt3dadd( -11.4877, 127.986, -16.081, 0.66 ) }
    dend_13 { pt3dadd( -11.6065, 128.31, -16.0908, 0.66 ) }
    dend_13 { pt3dadd( -11.7892, 128.741, -16.0904, 0.37 ) }
    dend_13 { pt3dadd( -11.9366, 129.069, -16.0688, 0.37 ) }
    dend_13 { pt3dadd( -12.3862, 130.025, -15.8877, 0.59 ) }
    dend_13 { pt3dadd( -12.6764, 130.697, -15.6947, 1.03 ) }
    dend_13 { pt3dadd( -12.8175, 131.074, -15.5649, 1.4 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 40/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -33.7185, 96.3389, 0.747068, 0.29 ) }
    dend_11 { pt3dadd( -33.8778, 97.5178, 0.982669, 0.29 ) }
    dend_11 { pt3dadd( -34.0026, 98.0752, 1.09616, 0.44 ) }
    dend_11 { pt3dadd( -34.1688, 98.4829, 1.21209, 0.66 ) }
    dend_11 { pt3dadd( -34.4594, 98.9119, 1.41655, 0.29 ) }
    dend_11 { pt3dadd( -34.805, 99.2962, 1.64862, 0.29 ) }
    dend_11 { pt3dadd( -34.9996, 99.4943, 1.7761, 0.74 ) }
    dend_11 { pt3dadd( -35.2769, 99.701, 1.95627, 0.88 ) }
    dend_11 { pt3dadd( -35.9163, 100.133, 2.33638, 0.44 ) }
    dend_11 { pt3dadd( -36.538, 100.561, 2.6759, 0.52 ) }
    dend_11 { pt3dadd( -36.7134, 100.701, 2.7706, 0.81 ) }
    dend_11 { pt3dadd( -36.9921, 101.009, 2.9456, 0.44 ) }
    dend_11 { pt3dadd( -37.2255, 101.364, 3.144, 0.88 ) }
    dend_11 { pt3dadd( -37.443, 101.804, 3.40523, 0.59 ) }
    dend_11 { pt3dadd( -37.5916, 102.264, 3.62788, 0.29 ) }
    dend_11 { pt3dadd( -37.6788, 102.662, 3.79317, 0.29 ) }
    dend_11 { pt3dadd( -37.8021, 103.358, 4.06185, 0.96 ) }
    dend_11 { pt3dadd( -37.9033, 103.984, 4.29602, 1.18 ) }
    dend_11 { pt3dadd( -37.9956, 104.632, 4.53899, 0.81 ) }
    dend_11 { pt3dadd( -38.1138, 105.526, 4.83745, 0.52 ) }
    dend_11 { pt3dadd( -38.1788, 105.995, 4.97877, 0.52 ) }
    dend_11 { pt3dadd( -38.2923, 106.7, 5.13595, 0.44 ) }
    dend_11 { pt3dadd( -38.3921, 107.255, 5.23242, 0.66 ) }
    dend_11 { pt3dadd( -38.5072, 107.876, 5.35285, 0.88 ) }
    dend_11 { pt3dadd( -38.5821, 108.246, 5.4343, 0.52 ) }
    dend_11 { pt3dadd( -38.6747, 108.702, 5.56341, 0.29 ) }
    dend_11 { pt3dadd( -38.8071, 109.34, 5.74363, 0.29 ) }
    dend_11 { pt3dadd( -38.9809, 110.191, 5.9798, 0.52 ) }
    dend_11 { pt3dadd( -39.1466, 110.843, 6.14887, 0.81 ) }
    dend_11 { pt3dadd( -39.3099, 111.438, 6.26826, 0.22 ) }
    dend_11 { pt3dadd( -39.4261, 111.886, 6.34605, 0.22 ) }
    dend_11 { pt3dadd( -39.6252, 112.628, 6.45667, 0.37 ) }
    dend_11 { pt3dadd( -39.74, 113.01, 6.50419, 0.37 ) }
    dend_11 { pt3dadd( -40.0143, 113.812, 6.58737, 0.37 ) }
    dend_11 { pt3dadd( -40.302, 114.58, 6.66383, 0.29 ) }
    dend_11 { pt3dadd( -40.5844, 115.377, 6.75845, 0.52 ) }
    dend_11 { pt3dadd( -40.7176, 115.799, 6.80974, 0.88 ) }
    dend_11 { pt3dadd( -40.9253, 116.662, 6.91626, 0.59 ) }
    dend_11 { pt3dadd( -41.0045, 117.116, 6.96813, 0.44 ) }
    dend_11 { pt3dadd( -41.0574, 117.676, 7.03445, 0.22 ) }
    dend_11 { pt3dadd( -41.1242, 118.796, 7.16744, 0.22 ) }
    dend_11 { pt3dadd( -41.1285, 119.299, 7.21458, 0.81 ) }
    dend_11 { pt3dadd( -41.1075, 119.718, 7.23109, 1.33 ) }
    dend_11 { pt3dadd( -41.0777, 120.128, 7.22317, 1.33 ) }
    dend_11 { pt3dadd( -41.0073, 120.876, 7.18129, 0.59 ) }
    dend_11 { pt3dadd( -40.9402, 121.368, 7.13332, 0.81 ) }
    dend_11 { pt3dadd( -40.857, 121.822, 7.07171, 0.81 ) }
    dend_11 { pt3dadd( -40.7046, 122.526, 6.93642, 0.52 ) }
    dend_11 { pt3dadd( -40.4936, 123.417, 6.71783, 0.22 ) }
    dend_11 { pt3dadd( -40.3144, 124.12, 6.51845, 0.22 ) }
    dend_11 { pt3dadd( -40.0778, 124.965, 6.25145, 0.59 ) }
    dend_11 { pt3dadd( -39.9127, 125.495, 6.08342, 0.81 ) }
    dend_11 { pt3dadd( -39.6775, 126.242, 5.8435, 0.29 ) }
    dend_11 { pt3dadd( -39.51, 126.784, 5.69017, 0.22 ) }
    dend_11 { pt3dadd( -39.4338, 127.064, 5.6143, 0.59 ) }
    dend_11 { pt3dadd( -39.4081, 127.279, 5.56071, 0.59 ) }
    dend_11 { pt3dadd( -39.4778, 127.836, 5.42852, 0.22 ) }
    dend_11 { pt3dadd( -39.6361, 128.332, 5.28524, 0.29 ) }
    dend_11 { pt3dadd( -39.7854, 128.664, 5.16554, 0.81 ) }
    dend_11 { pt3dadd( -39.8993, 128.89, 5.05543, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_11 { pt3dadd( -39.9839, 129.064, 4.95999, 1.11 ) }
    dend_11 { pt3dadd( -40.3444, 129.915, 4.47845, 0.37 ) }
    dend_11 { pt3dadd( -40.4721, 130.311, 4.27503, 0.96 ) }
    dend_11 { pt3dadd( -40.6053, 130.871, 4.02511, 0.88 ) }
    dend_11 { pt3dadd( -40.7039, 131.317, 3.83949, 0.88 ) }
    dend_11 { pt3dadd( -40.8508, 131.918, 3.61523, 0.52 ) }
    dend_11 { pt3dadd( -40.9685, 132.365, 3.4681, 0.74 ) }
    dend_11 { pt3dadd( -41.194, 133.165, 3.24478, 0.29 ) }
    dend_11 { pt3dadd( -41.429, 133.903, 3.02737, 0.59 ) }
    dend_11 { pt3dadd( -41.6118, 134.405, 2.86805, 0.59 ) }
    dend_11 { pt3dadd( -41.8303, 135.037, 2.59535, 0.29 ) }
    dend_11 { pt3dadd( -41.9964, 135.547, 2.29491, 1.18 ) }
    dend_11 { pt3dadd( -42.06, 135.782, 2.12938, 1.47 ) }
    dend_11 { pt3dadd( -42.1692, 136.342, 1.68353, 1.18 ) }
    dend_11 { pt3dadd( -42.2448, 136.888, 1.25051, 0.44 ) }
    dend_11 { pt3dadd( -42.3254, 137.829, 0.530732, 0.22 ) }
    dend_11 { pt3dadd( -42.3346, 138.198, 0.24095, 0.22 ) }
    dend_11 { pt3dadd( -42.3239, 138.941, -0.303879, 1.18 ) }
    dend_11 { pt3dadd( -42.3132, 139.131, -0.431337, 1.4 ) }
    dend_11 { pt3dadd( -42.2139, 139.999, -0.930703, 0.44 ) }
    dend_11 { pt3dadd( -42.1293, 140.499, -1.18806, 0.66 ) }
    dend_11 { pt3dadd( -42.0555, 140.977, -1.39251, 0.66 ) }
    dend_11 { pt3dadd( -41.9116, 141.656, -1.68541, 0.22 ) }
    dend_11 { pt3dadd( -41.8249, 141.947, -1.82235, 0.59 ) }
    dend_11 { pt3dadd( -41.6657, 142.391, -2.04198, 0.52 ) }
    dend_11 { pt3dadd( -41.4529, 142.9, -2.29346, 0.96 ) }
    dend_11 { pt3dadd( -41.2747, 143.372, -2.54949, 0.59 ) }
    dend_11 { pt3dadd( -41.1173, 143.823, -2.80918, 0.37 ) }
    dend_11 { pt3dadd( -40.9527, 144.28, -3.08988, 0.59 ) }
    dend_11 { pt3dadd( -40.8312, 144.593, -3.26857, 0.81 ) }
    dend_11 { pt3dadd( -40.551, 145.336, -3.68225, 0.22 ) }
    dend_11 { pt3dadd( -40.3194, 145.973, -4.00336, 0.59 ) }
    dend_11 { pt3dadd( -40.1807, 146.377, -4.19366, 0.52 ) }
    dend_11 { pt3dadd( -40.0446, 146.858, -4.40785, 0.22 ) }
    dend_11 { pt3dadd( -39.8605, 147.6, -4.72446, 0.22 ) }
    dend_11 { pt3dadd( -39.6783, 148.422, -5.07043, 0.88 ) }
    dend_11 { pt3dadd( -39.5902, 148.895, -5.26174, 1.69 ) }
    dend_11 { pt3dadd( -39.5535, 149.159, -5.35376, 1.92 ) }
    dend_11 { pt3dadd( -39.5203, 149.66, -5.53706, 1.25 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 39/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -33.7185, 96.3389, 0.747068, 0.52 ) }
    dend_8 { pt3dadd( -34.7097, 96.5732, 0.767724, 0.52 ) }
    dend_8 { pt3dadd( -35.3504, 96.7128, 0.783838, 0.59 ) }
    dend_8 { pt3dadd( -36.0442, 96.8581, 0.805261, 0.44 ) }
    dend_8 { pt3dadd( -36.52, 96.9717, 0.823449, 0.59 ) }
    dend_8 { pt3dadd( -37.0562, 97.1291, 0.852829, 0.59 ) }
    dend_8 { pt3dadd( -37.7039, 97.3582, 0.89739, 0.52 ) }
    dend_8 { pt3dadd( -38.1165, 97.5277, 0.935438, 0.74 ) }
    dend_8 { pt3dadd( -38.6445, 97.7848, 0.994839, 0.37 ) }
    dend_8 { pt3dadd( -39.0393, 97.9984, 1.05292, 0.37 ) }
    dend_8 { pt3dadd( -39.545, 98.2822, 1.13705, 0.37 ) }
    dend_8 { pt3dadd( -39.989, 98.5161, 1.22154, 0.52 ) }
    dend_8 { pt3dadd( -40.554, 98.7337, 1.32049, 0.52 ) }
    dend_8 { pt3dadd( -40.9994, 98.8068, 1.37905, 0.29 ) }
    dend_8 { pt3dadd( -41.6119, 98.8089, 1.41225, 0.81 ) }
    dend_8 { pt3dadd( -41.9841, 98.7815, 1.41315, 1.11 ) }
    dend_8 { pt3dadd( -42.5002, 98.7351, 1.39562, 1.25 ) }
    dend_8 { pt3dadd( -43.3009, 98.6712, 1.3514, 0.66 ) }
    dend_8 { pt3dadd( -43.9924, 98.6362, 1.29435, 0.37 ) }
    dend_8 { pt3dadd( -44.9804, 98.6494, 1.15797, 0.37 ) }
    dend_8 { pt3dadd( -45.6311, 98.7103, 1.02169, 0.29 ) }
    dend_8 { pt3dadd( -46.4815, 98.849, 0.795186, 0.66 ) }
    dend_8 { pt3dadd( -46.8076, 98.9289, 0.684417, 0.88 ) }
    dend_8 { pt3dadd( -47.2687, 99.0777, 0.470108, 0.59 ) }
    dend_8 { pt3dadd( -47.9773, 99.3205, 0.0508824, 0.37 ) }
    dend_8 { pt3dadd( -48.4592, 99.4714, -0.289106, 0.37 ) }
    dend_8 { pt3dadd( -48.8189, 99.5624, -0.574861, 0.96 ) }
    dend_8 { pt3dadd( -49.3863, 99.6609, -1.08431, 1.18 ) }
    dend_8 { pt3dadd( -50.3514, 99.7623, -1.97297, 0.59 ) }
    dend_8 { pt3dadd( -50.7116, 99.7794, -2.30383, 0.44 ) }
    dend_8 { pt3dadd( -51.1191, 99.7707, -2.65415, 0.29 ) }
    dend_8 { pt3dadd( -51.6019, 99.7352, -3.03326, 0.15 ) }
    dend_8 { pt3dadd( -52.3932, 99.6361, -3.60688, 0.88 ) }
    dend_8 { pt3dadd( -52.7677, 99.584, -3.83608, 1.18 ) }
    dend_8 { pt3dadd( -53.3015, 99.5315, -4.11188, 0.44 ) }
    dend_8 { pt3dadd( -53.8085, 99.5177, -4.34262, 0.37 ) }
    dend_8 { pt3dadd( -54.2748, 99.5365, -4.51607, 0.96 ) }
    dend_8 { pt3dadd( -55.0471, 99.6266, -4.71395, 1.25 ) }
    dend_8 { pt3dadd( -55.8723, 99.7945, -4.82121, 0.44 ) }
    dend_8 { pt3dadd( -56.4026, 99.9402, -4.83442, 0.44 ) }
    dend_8 { pt3dadd( -57.0814, 100.164, -4.79012, 1.03 ) }
    dend_8 { pt3dadd( -57.6366, 100.378, -4.69453, 0.88 ) }
    dend_8 { pt3dadd( -58.3602, 100.686, -4.52808, 0.74 ) }
    dend_8 { pt3dadd( -59.4576, 101.198, -4.18322, 0.37 ) }
    dend_8 { pt3dadd( -60.1905, 101.549, -3.90108, 0.88 ) }
    dend_8 { pt3dadd( -60.4251, 101.661, -3.79401, 1.18 ) }
    dend_8 { pt3dadd( -61.0274, 101.976, -3.481, 1.18 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 86/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 114.754, 7.9743, -37.3941, 0.29 ) }
    dend_5 { pt3dadd( 116.254, 10.2646, -41.2302, 0.29 ) }
    dend_5 { pt3dadd( 116.616, 10.9466, -42.1969, 0.52 ) }
    dend_5 { pt3dadd( 116.709, 11.1818, -42.4768, 0.52 ) }
    dend_5 { pt3dadd( 116.94, 12.0475, -43.3499, 0.29 ) }
    dend_5 { pt3dadd( 117.08, 12.8707, -44.0799, 0.96 ) }
    dend_5 { pt3dadd( 117.12, 13.1363, -44.2953, 1.33 ) }
    dend_5 { pt3dadd( 117.119, 13.5238, -44.4546, 1.33 ) }
    dend_5 { pt3dadd( 117.136, 14.3074, -44.7739, 0.59 ) }
    dend_5 { pt3dadd( 117.235, 15.0263, -45.1137, 0.37 ) }
    dend_5 { pt3dadd( 117.496, 15.6777, -45.5297, 0.22 ) }
    dend_5 { pt3dadd( 118.166, 16.3643, -46.1311, 0.22 ) }
    dend_5 { pt3dadd( 118.525, 16.5489, -46.3636, 0.59 ) }
    dend_5 { pt3dadd( 119.191, 16.7327, -46.7207, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_5 { pt3dadd( 119.782, 16.81, -46.9895, 0.37 ) }
    dend_5 { pt3dadd( 120.535, 16.8444, -47.29, 0.96 ) }
    dend_5 { pt3dadd( 121.272, 16.8448, -47.5494, 0.96 ) }
    dend_5 { pt3dadd( 122.24, 16.814, -47.8785, 0.44 ) }
    dend_5 { pt3dadd( 122.729, 16.795, -48.0455, 0.52 ) }
    dend_5 { pt3dadd( 123.364, 16.7556, -48.2694, 0.22 ) }
    dend_5 { pt3dadd( 123.801, 16.7339, -48.4365, 0.74 ) }
    dend_5 { pt3dadd( 124.751, 16.7145, -48.814, 0.29 ) }
    dend_5 { pt3dadd( 125.187, 16.7297, -48.9973, 0.29 ) }
    dend_5 { pt3dadd( 125.866, 16.8062, -49.3068, 0.88 ) }
    dend_5 { pt3dadd( 126.671, 16.946, -49.6915, 0.37 ) }
    dend_5 { pt3dadd( 128.026, 17.2791, -50.3638, 0.96 ) }
    dend_5 { pt3dadd( 128.622, 17.4805, -50.6722, 1.4 ) }
    dend_5 { pt3dadd( 129.158, 17.7326, -50.9627, 0.59 ) }
    dend_5 { pt3dadd( 129.995, 18.2657, -51.4338, 0.22 ) }
    dend_5 { pt3dadd( 130.718, 18.8785, -51.8539, 0.22 ) }
    dend_5 { pt3dadd( 131.288, 19.54, -52.2014, 1.11 ) }
    dend_5 { pt3dadd( 131.676, 20.1935, -52.4664, 1.33 ) }
    dend_5 { pt3dadd( 132.016, 20.9464, -52.738, 1.33 ) }
    dend_5 { pt3dadd( 132.234, 21.5454, -52.9227, 1.33 ) }
    dend_5 { pt3dadd( 132.397, 22.1215, -53.066, 0.59 ) }
    dend_5 { pt3dadd( 132.644, 23.1202, -53.2875, 0.22 ) }
    dend_5 { pt3dadd( 132.968, 24.2457, -53.5004, 1.4 ) }
    dend_5 { pt3dadd( 133.171, 24.7746, -53.5946, 1.69 ) }
    dend_5 { pt3dadd( 133.662, 25.7922, -53.7878, 0.29 ) }
    dend_5 { pt3dadd( 133.93, 26.204, -53.9088, 0.66 ) }
    dend_5 { pt3dadd( 134.409, 26.7246, -54.1705, 0.66 ) }
    dend_5 { pt3dadd( 135.269, 27.2249, -54.7681, 0.22 ) }
    dend_5 { pt3dadd( 136.008, 27.3324, -55.4816, 1.03 ) }
    dend_5 { pt3dadd( 136.332, 27.2663, -55.9364, 1.03 ) }
    dend_5 { pt3dadd( 137.155, 26.7907, -57.6371, 0.74 ) }
    dend_5 { pt3dadd( 137.593, 26.4567, -58.6432, 1.03 ) }
    dend_5 { pt3dadd( 138.165, 25.8701, -60.1584, 1.11 ) }
    dend_5 { pt3dadd( 138.638, 25.2043, -61.6992, 1.11 ) }
    dend_5 { pt3dadd( 139.032, 24.4458, -63.3099, 0.74 ) }
    dend_5 { pt3dadd( 139.314, 23.7062, -64.834, 0.96 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 36/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 114.754, 7.9743, -37.3941, 0.37 ) }
    dend_4 { pt3dadd( 117.338, 5.95838, -37.8337, 0.37 ) }
    dend_4 { pt3dadd( 118.227, 5.26028, -37.7056, 0.44 ) }
    dend_4 { pt3dadd( 118.721, 4.82152, -37.4037, 0.44 ) }
    dend_4 { pt3dadd( 120.198, 3.46858, -36.0554, 0.74 ) }
    dend_4 { pt3dadd( 120.412, 3.29504, -35.8277, 0.88 ) }
    dend_4 { pt3dadd( 121.177, 2.76349, -34.9941, 0.37 ) }
    dend_4 { pt3dadd( 122.136, 2.14068, -33.7587, 0.37 ) }
    dend_4 { pt3dadd( 123.605, 1.22544, -31.7712, 0.88 ) }
    dend_4 { pt3dadd( 124.116, 0.921043, -31.0585, 1.03 ) }
    dend_4 { pt3dadd( 124.901, 0.47782, -29.9691, 0.29 ) }
    dend_4 { pt3dadd( 125.64, 0.0687457, -28.8845, 0.29 ) }
    dend_4 { pt3dadd( 126.22, -0.240991, -27.971, 0.29 ) }
    dend_4 { pt3dadd( 127.408, -0.725143, -26.3266, 0.81 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 50/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -82.0661, -40.4795, -76.1296, 0.74 ) }
    dend_51 { pt3dadd( -82.8938, -40.0068, -76.7451, 0.74 ) }
    dend_51 { pt3dadd( -83.5475, -39.6581, -77.1996, 1.03 ) }
    dend_51 { pt3dadd( -84.6299, -39.1522, -77.9728, 0.37 ) }
    dend_51 { pt3dadd( -85.1989, -38.9315, -78.3975, 0.22 ) }
    dend_51 { pt3dadd( -85.8984, -38.7141, -78.9445, 1.4 ) }
    dend_51 { pt3dadd( -86.3937, -38.5828, -79.3397, 1.55 ) }
    dend_51 { pt3dadd( -87.0626, -38.4729, -79.888, 1.55 ) }
    dend_51 { pt3dadd( -88.2175, -38.3734, -80.8631, 0.81 ) }
    dend_51 { pt3dadd( -89.0651, -38.3558, -81.5747, 0.52 ) }
    dend_51 { pt3dadd( -89.7964, -38.379, -82.1702, 0.88 ) }
    dend_51 { pt3dadd( -90.6315, -38.4279, -82.8523, 0.22 ) }
    dend_51 { pt3dadd( -91.2685, -38.4587, -83.3847, 0.74 ) }
    dend_51 { pt3dadd( -91.8168, -38.4529, -83.8635, 0.74 ) }
    dend_51 { pt3dadd( -92.2246, -38.419, -84.2953, 0.74 ) }
    dend_51 { pt3dadd( -92.8819, -38.336, -85.1187, 0.44 ) }
    dend_51 { pt3dadd( -93.4082, -38.271, -85.8404, 0.22 ) }
    dend_51 { pt3dadd( -93.6853, -38.2563, -86.2689, 0.81 ) }
    dend_51 { pt3dadd( -94.0872, -38.2443, -86.9038, 0.81 ) }
    dend_51 { pt3dadd( -95.5687, -38.1985, -89.2529, 0.52 ) }
    dend_51 { pt3dadd( -96.157, -38.1824, -90.1538, 1.03 ) }
    dend_51 { pt3dadd( -96.6593, -38.1809, -90.8476, 1.4 ) }
    dend_51 { pt3dadd( -97.5212, -38.1936, -91.9141, 1.18 ) }
    dend_51 { pt3dadd( -98.0407, -38.2052, -92.4972, 0.66 ) }
    dend_51 { pt3dadd( -98.8428, -38.2104, -93.3294, 1.18 ) }
    dend_51 { pt3dadd( -99.3159, -38.1941, -93.7772, 1.55 ) }
    dend_51 { pt3dadd( -100.42, -38.1469, -94.8553, 0.52 ) }
    dend_51 { pt3dadd( -100.873, -38.1352, -95.3271, 1.18 ) }
    dend_51 { pt3dadd( -101.508, -38.1379, -96.0186, 1.18 ) }
    dend_51 { pt3dadd( -102.626, -38.1835, -97.3559, 0.29 ) }
    dend_51 { pt3dadd( -103.05, -38.222, -97.9167, 0.29 ) }
    dend_51 { pt3dadd( -103.543, -38.2777, -98.6156, 0.29 ) }
    dend_51 { pt3dadd( -104.086, -38.3356, -99.4303, 0.59 ) }
    dend_51 { pt3dadd( -104.574, -38.3859, -100.177, 0.59 ) }
    dend_51 { pt3dadd( -104.932, -38.4052, -100.721, 0.44 ) }
    dend_51 { pt3dadd( -105.776, -38.4003, -101.98, 1.03 ) }
    dend_51 { pt3dadd( -106.186, -38.3806, -102.631, 1.33 ) }
    dend_51 { pt3dadd( -107.121, -38.2916, -104.123, 0.29 ) }
    dend_51 { pt3dadd( -107.529, -38.2273, -104.756, 0.29 ) }
    dend_51 { pt3dadd( -107.9, -38.1473, -105.308, 0.96 ) }
    dend_51 { pt3dadd( -108.397, -38.0118, -105.992, 0.96 ) }
    dend_51 { pt3dadd( -110.059, -37.3745, -107.969, 0.29 ) }
    dend_51 { pt3dadd( -110.377, -37.2108, -108.292, 0.29 ) }
    dend_51 { pt3dadd( -110.94, -36.8778, -108.745, 1.03 ) }
    dend_51 { pt3dadd( -111.507, -36.5215, -109.101, 1.33 ) }
    dend_51 { pt3dadd( -112.217, -36.0511, -109.441, 0.74 ) }
    dend_51 { pt3dadd( -113.202, -35.3581, -109.796, 0.37 ) }
    dend_51 { pt3dadd( -114.39, -34.4811, -110.096, 0.29 ) }
    dend_51 { pt3dadd( -115.095, -33.9743, -110.282, 0.22 ) }
    dend_51 { pt3dadd( -115.856, -33.4475, -110.478, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_51 { pt3dadd( -116.627, -32.9002, -110.686, 0.52 ) }
    dend_51 { pt3dadd( -117.187, -32.494, -110.848, 0.96 ) }
    dend_51 { pt3dadd( -117.671, -32.1432, -111.007, 1.18 ) }
    dend_51 { pt3dadd( -118.169, -31.7991, -111.176, 1.18 ) }
    dend_51 { pt3dadd( -118.86, -31.2971, -111.425, 0.74 ) }
    dend_51 { pt3dadd( -119.496, -30.8375, -111.646, 0.22 ) }
    dend_51 { pt3dadd( -119.819, -30.6056, -111.745, 0.44 ) }
    dend_51 { pt3dadd( -120.25, -30.2862, -111.853, 0.44 ) }
    dend_51 { pt3dadd( -120.776, -29.8613, -111.981, 0.22 ) }
    dend_51 { pt3dadd( -121.301, -29.3947, -112.106, 0.22 ) }
    dend_51 { pt3dadd( -121.645, -29.0605, -112.19, 0.88 ) }
    dend_51 { pt3dadd( -122.015, -28.6837, -112.274, 1.25 ) }
    dend_51 { pt3dadd( -122.185, -28.4843, -112.313, 1.25 ) }
    dend_51 { pt3dadd( -122.927, -27.4732, -112.497, 0.22 ) }
    dend_51 { pt3dadd( -123.287, -26.9155, -112.598, 0.22 ) }
    dend_51 { pt3dadd( -123.636, -26.3113, -112.714, 0.88 ) }
    dend_51 { pt3dadd( -123.912, -25.7738, -112.824, 1.25 ) }
    dend_51 { pt3dadd( -124.296, -24.9303, -113.004, 0.22 ) }
    dend_51 { pt3dadd( -124.722, -23.8869, -113.235, 0.22 ) }
    dend_51 { pt3dadd( -125.034, -23.0156, -113.445, 0.88 ) }
    dend_51 { pt3dadd( -125.201, -22.4744, -113.582, 0.88 ) }
    dend_51 { pt3dadd( -125.333, -21.9487, -113.692, 0.37 ) }
    dend_51 { pt3dadd( -125.491, -21.1038, -113.826, 0.15 ) }
    dend_51 { pt3dadd( -125.595, -20.2532, -113.927, 0.96 ) }
    dend_51 { pt3dadd( -125.643, -19.618, -113.982, 1.18 ) }
    dend_51 { pt3dadd( -125.741, -17.9709, -114.029, 0.22 ) }
    dend_51 { pt3dadd( -125.837, -16.4502, -113.998, 0.81 ) }
    dend_51 { pt3dadd( -125.875, -15.65, -113.957, 0.74 ) }
    dend_51 { pt3dadd( -125.896, -14.5996, -113.862, 0.29 ) }
    dend_51 { pt3dadd( -125.897, -14.2378, -113.818, 0.29 ) }
    dend_51 { pt3dadd( -125.893, -13.2279, -113.669, 0.52 ) }
    dend_51 { pt3dadd( -125.881, -12.7283, -113.59, 0.66 ) }
    dend_51 { pt3dadd( -125.817, -11.8053, -113.517, 0.22 ) }
    dend_51 { pt3dadd( -125.758, -11.3454, -113.51, 0.22 ) }
    dend_51 { pt3dadd( -125.586, -10.5813, -113.544, 0.81 ) }
    dend_51 { pt3dadd( -125.446, -10.1679, -113.601, 1.11 ) }
    dend_51 { pt3dadd( -125.16, -9.57853, -113.764, 1.11 ) }
    dend_51 { pt3dadd( -124.645, -8.74624, -114.11, 0.22 ) }
    dend_51 { pt3dadd( -124.342, -8.33261, -114.345, 0.59 ) }
    dend_51 { pt3dadd( -124.154, -8.08426, -114.506, 0.59 ) }
    dend_51 { pt3dadd( -123.783, -7.58446, -114.843, 0.29 ) }
    dend_51 { pt3dadd( -123.252, -6.79732, -115.403, 0.22 ) }
    dend_51 { pt3dadd( -122.752, -6.01345, -115.992, 0.88 ) }
    dend_51 { pt3dadd( -122.351, -5.29656, -116.508, 1.11 ) }
    dend_51 { pt3dadd( -121.772, -4.13408, -117.279, 0.22 ) }
    dend_51 { pt3dadd( -121.519, -3.58968, -117.617, 0.52 ) }
    dend_51 { pt3dadd( -121.15, -2.71532, -118.164, 0.22 ) }
    dend_51 { pt3dadd( -120.782, -1.7191, -118.804, 0.22 ) }
    dend_51 { pt3dadd( -120.444, -0.702666, -119.474, 0.66 ) }
    dend_51 { pt3dadd( -120.185, 0.117684, -120.052, 0.66 ) }
    dend_51 { pt3dadd( -119.919, 0.990388, -120.762, 0.88 ) }
    dend_51 { pt3dadd( -119.615, 1.99549, -121.648, 0.66 ) }
    dend_51 { pt3dadd( -119.431, 2.63284, -122.238, 0.44 ) }
    dend_51 { pt3dadd( -119.285, 3.20025, -122.8, 0.66 ) }
    dend_51 { pt3dadd( -119.218, 3.44251, -123.074, 0.66 ) }
    dend_51 { pt3dadd( -118.959, 4.43818, -124.324, 0.22 ) }
    dend_51 { pt3dadd( -118.795, 5.14296, -125.231, 0.22 ) }
    dend_51 { pt3dadd( -118.698, 5.50135, -125.655, 1.33 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 58/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -82.0661, -40.4795, -76.1296, 0.44 ) }
    dend_50 { pt3dadd( -83.2696, -41.7443, -76.4286, 0.44 ) }
    dend_50 { pt3dadd( -84.1855, -42.7371, -76.7212, 0.29 ) }
    dend_50 { pt3dadd( -84.6168, -43.2078, -76.8953, 0.66 ) }
    dend_50 { pt3dadd( -85.0654, -43.6882, -77.126, 0.66 ) }
    dend_50 { pt3dadd( -85.863, -44.5288, -77.6564, 0.29 ) }
    dend_50 { pt3dadd( -86.2747, -44.9435, -77.9533, 0.59 ) }
    dend_50 { pt3dadd( -86.9311, -45.6366, -78.5147, 0.37 ) }
    dend_50 { pt3dadd( -87.6748, -46.4287, -79.2374, 1.18 ) }
    dend_50 { pt3dadd( -88.3146, -47.172, -79.9595, 1.62 ) }
    dend_50 { pt3dadd( -88.9282, -48.0787, -80.919, 1.62 ) }
    dend_50 { pt3dadd( -89.6397, -49.55, -82.6135, 0.29 ) }
    dend_50 { pt3dadd( -89.8719, -50.2262, -83.4313, 0.29 ) }
    dend_50 { pt3dadd( -89.981, -50.6895, -83.9977, 0.66 ) }
    dend_50 { pt3dadd( -90.1615, -51.6485, -85.1214, 0.52 ) }
    dend_50 { pt3dadd( -90.4984, -53.539, -87.1792, 1.18 ) }
    dend_50 { pt3dadd( -90.729, -54.8702, -88.5079, 1.77 ) }
    dend_50 { pt3dadd( -90.8762, -55.6623, -89.2659, 1.77 ) }
    dend_50 { pt3dadd( -91.4791, -57.6959, -91.22, 0.29 ) }
    dend_50 { pt3dadd( -91.8012, -58.5099, -91.9456, 0.29 ) }
    dend_50 { pt3dadd( -92.1799, -59.3453, -92.6298, 0.29 ) }
    dend_50 { pt3dadd( -92.7487, -60.6168, -93.6016, 1.62 ) }
    dend_50 { pt3dadd( -93.0677, -61.461, -94.2429, 1.69 ) }
    dend_50 { pt3dadd( -94.0395, -64.962, -96.9516, 0.29 ) }
    dend_50 { pt3dadd( -94.2252, -66.0534, -97.81, 0.29 ) }
    dend_50 { pt3dadd( -94.285, -66.9565, -98.5338, 0.29 ) }
    dend_50 { pt3dadd( -94.2066, -68.988, -100.138, 1.25 ) }
    dend_50 { pt3dadd( -93.9336, -70.5996, -101.387, 0.66 ) }
    dend_50 { pt3dadd( -93.5038, -71.9065, -102.328, 0.29 ) }
    dend_50 { pt3dadd( -93.0486, -72.7851, -102.886, 1.03 ) }
    dend_50 { pt3dadd( -92.627, -73.4785, -103.342, 1.03 ) }
    dend_50 { pt3dadd( -92.0963, -74.3036, -103.847, 0.44 ) }
    dend_50 { pt3dadd( -91.3397, -75.3849, -104.424, 0.29 ) }
    dend_50 { pt3dadd( -90.8709, -76.043, -104.758, 0.88 ) }
    dend_50 { pt3dadd( -90.5831, -76.4645, -104.965, 1.33 ) }
    dend_50 { pt3dadd( -89.1635, -78.9233, -106.225, 0.29 ) }
    dend_50 { pt3dadd( -88.7852, -79.7753, -106.651, 0.96 ) }
    dend_50 { pt3dadd( -88.6215, -80.2942, -106.9, 0.81 ) }
    dend_50 { pt3dadd( -88.4337, -81.2699, -107.372, 0.37 ) }
    dend_50 { pt3dadd( -88.2804, -82.5272, -108.0, 0.66 ) }
    dend_50 { pt3dadd( -88.1447, -84.1229, -108.805, 0.52 ) }
    dend_50 { pt3dadd( -88.0843, -85.1179, -109.317, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_50 { pt3dadd( -88.0337, -85.8691, -109.767, 0.88 ) }
    dend_50 { pt3dadd( -87.8045, -88.1674, -111.53, 0.44 ) }
    dend_50 { pt3dadd( -87.7282, -88.9505, -112.262, 0.37 ) }
    dend_50 { pt3dadd( -87.609, -90.0218, -113.404, 0.29 ) }
    dend_50 { pt3dadd( -87.4771, -90.8058, -114.307, 0.96 ) }
    dend_50 { pt3dadd( -87.2379, -92.0051, -115.784, 1.03 ) }
    dend_50 { pt3dadd( -86.7414, -94.3424, -118.709, 0.74 ) }
    dend_50 { pt3dadd( -86.4549, -95.7009, -120.358, 1.33 ) }
    dend_50 { pt3dadd( -86.2372, -96.8326, -121.627, 1.11 ) }
    dend_50 { pt3dadd( -86.0647, -97.9094, -122.703, 0.44 ) }
    dend_50 { pt3dadd( -85.9662, -98.691, -123.347, 0.81 ) }
    dend_50 { pt3dadd( -85.8476, -99.6795, -123.973, 0.88 ) }
    dend_50 { pt3dadd( -85.6338, -101.395, -124.809, 0.22 ) }
    dend_50 { pt3dadd( -85.4551, -102.466, -125.336, 0.22 ) }
    dend_50 { pt3dadd( -85.3663, -103.026, -125.645, 0.59 ) }
    dend_50 { pt3dadd( -85.2677, -103.764, -126.097, 0.59 ) }
    dend_50 { pt3dadd( -84.9978, -105.76, -127.435, 0.37 ) }
    dend_50 { pt3dadd( -84.8298, -106.865, -128.295, 0.59 ) }
    dend_50 { pt3dadd( -84.5883, -108.38, -129.577, 0.44 ) }
    dend_50 { pt3dadd( -84.4644, -109.155, -130.334, 0.74 ) }
    dend_50 { pt3dadd( -84.3922, -109.694, -130.897, 0.74 ) }
    dend_50 { pt3dadd( -84.3192, -110.641, -131.915, 0.37 ) }
    dend_50 { pt3dadd( -84.2807, -112.247, -133.876, 0.96 ) }
    dend_50 { pt3dadd( -84.2807, -112.922, -134.821, 0.88 ) }
    dend_50 { pt3dadd( -84.4011, -114.879, -137.826, 0.66 ) }
    dend_50 { pt3dadd( -84.4646, -115.567, -138.956, 0.96 ) }
    dend_50 { pt3dadd( -84.5466, -116.204, -140.047, 0.96 ) }
    dend_50 { pt3dadd( -84.9467, -118.585, -144.185, 0.66 ) }
    dend_50 { pt3dadd( -85.2887, -120.367, -147.12, 0.66 ) }
    dend_50 { pt3dadd( -85.7158, -122.531, -150.472, 0.44 ) }
    dend_50 { pt3dadd( -85.991, -123.893, -152.323, 0.74 ) }
    dend_50 { pt3dadd( -86.1353, -124.63, -153.194, 0.37 ) }
    dend_50 { pt3dadd( -86.3086, -125.52, -154.045, 0.81 ) }
    dend_50 { pt3dadd( -86.6832, -127.21, -155.116, 0.22 ) }
    dend_50 { pt3dadd( -86.8611, -128.035, -155.483, 0.81 ) }
    dend_50 { pt3dadd( -87.1471, -129.657, -155.925, 0.22 ) }
    dend_50 { pt3dadd( -87.4859, -131.672, -156.305, 0.22 ) }
    dend_50 { pt3dadd( -87.6264, -132.576, -156.465, 0.88 ) }
    dend_50 { pt3dadd( -87.7394, -133.257, -156.594, 0.88 ) }
    // Section: dend_46, id: dend_46, parent: dend_38 (entry count 39/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -76.3136, -65.1202, -25.5235, 0.96 ) }
    dend_46 { pt3dadd( -77.7984, -66.1732, -26.3787, 0.96 ) }
    dend_46 { pt3dadd( -78.7892, -66.8326, -26.7762, 0.22 ) }
    dend_46 { pt3dadd( -79.2968, -67.1704, -26.9798, 0.52 ) }
    dend_46 { pt3dadd( -79.6961, -67.4362, -27.14, 0.66 ) }
    dend_46 { pt3dadd( -80.2928, -67.8333, -27.3794, 0.44 ) }
    dend_46 { pt3dadd( -80.9687, -68.2831, -27.6505, 1.33 ) }
    dend_46 { pt3dadd( -81.9421, -68.7387, -27.7875, 1.84 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 47/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -76.3136, -65.1202, -25.5235, 0.37 ) }
    dend_39 { pt3dadd( -77.7704, -64.7129, -23.6861, 0.37 ) }
    dend_39 { pt3dadd( -78.2657, -64.6063, -23.0524, 0.37 ) }
    dend_39 { pt3dadd( -79.0966, -64.4274, -21.9891, 0.22 ) }
    dend_39 { pt3dadd( -79.5455, -64.3308, -21.4148, 1.03 ) }
    dend_39 { pt3dadd( -80.0064, -64.2315, -20.825, 1.77 ) }
    dend_39 { pt3dadd( -80.5558, -64.1133, -20.122, 2.14 ) }
    dend_39 { pt3dadd( -80.9479, -64.0584, -19.7334, 2.14 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 55/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 47.906, -88.1611, -89.8487, 0.44 ) }
    dend_36 { pt3dadd( 48.9114, -88.1057, -89.7067, 0.44 ) }
    dend_36 { pt3dadd( 49.5462, -88.0075, -89.6051, 0.22 ) }
    dend_36 { pt3dadd( 50.1595, -87.7989, -89.5332, 0.22 ) }
    dend_36 { pt3dadd( 50.8816, -87.487, -89.515, 0.44 ) }
    dend_36 { pt3dadd( 51.1061, -87.3674, -89.538, 0.81 ) }
    dend_36 { pt3dadd( 51.4714, -87.1547, -89.5942, 0.81 ) }
    dend_36 { pt3dadd( 51.8021, -86.9182, -89.725, 0.37 ) }
    dend_36 { pt3dadd( 52.4458, -86.3463, -90.1335, 0.44 ) }
    dend_36 { pt3dadd( 52.7498, -85.9929, -90.5153, 0.59 ) }
    dend_36 { pt3dadd( 53.1631, -85.4264, -91.2296, 0.15 ) }
    dend_36 { pt3dadd( 53.4288, -85.0438, -91.7713, 0.29 ) }
    dend_36 { pt3dadd( 53.9131, -84.3495, -92.8435, 1.18 ) }
    dend_36 { pt3dadd( 54.1812, -83.9736, -93.4695, 1.18 ) }
    dend_36 { pt3dadd( 55.2736, -82.5289, -95.9741, 0.74 ) }
    dend_36 { pt3dadd( 55.4787, -82.2654, -96.418, 0.74 ) }
    dend_36 { pt3dadd( 55.759, -81.9248, -96.9791, 0.96 ) }
    dend_36 { pt3dadd( 56.0122, -81.6315, -97.4328, 0.96 ) }
    dend_36 { pt3dadd( 56.4607, -81.1444, -98.0699, 0.52 ) }
    dend_36 { pt3dadd( 57.0322, -80.5368, -98.6865, 0.29 ) }
    dend_36 { pt3dadd( 57.5645, -80.006, -99.0739, 0.29 ) }
    dend_36 { pt3dadd( 58.2585, -79.3134, -99.5221, 1.33 ) }
    dend_36 { pt3dadd( 58.6038, -78.9725, -99.7141, 1.33 ) }
    dend_36 { pt3dadd( 59.3034, -78.285, -100.031, 0.44 ) }
    dend_36 { pt3dadd( 60.0267, -77.5851, -100.273, 0.37 ) }
    dend_36 { pt3dadd( 60.6162, -77.0227, -100.397, 0.37 ) }
    dend_36 { pt3dadd( 60.8871, -76.7807, -100.42, 0.37 ) }
    dend_36 { pt3dadd( 61.3841, -76.3614, -100.41, 0.22 ) }
    dend_36 { pt3dadd( 62.4341, -75.5238, -100.342, 1.55 ) }
    dend_36 { pt3dadd( 62.8802, -75.197, -100.293, 1.77 ) }
    dend_36 { pt3dadd( 63.9257, -74.4368, -100.179, 0.37 ) }
    dend_36 { pt3dadd( 64.2844, -74.1386, -100.134, 0.44 ) }
    dend_36 { pt3dadd( 64.5463, -73.8829, -100.101, 0.44 ) }
    dend_36 { pt3dadd( 64.8107, -73.5914, -100.073, 0.44 ) }
    dend_36 { pt3dadd( 65.4159, -72.8925, -100.036, 0.29 ) }
    dend_36 { pt3dadd( 65.8149, -72.4128, -100.032, 0.22 ) }
    dend_36 { pt3dadd( 66.273, -71.8568, -100.045, 0.22 ) }
    dend_36 { pt3dadd( 67.0721, -70.8898, -100.059, 1.18 ) }
    dend_36 { pt3dadd( 67.5744, -70.2801, -100.05, 1.4 ) }
    dend_36 { pt3dadd( 67.7538, -70.0668, -100.039, 1.62 ) }
    dend_36 { pt3dadd( 67.9778, -69.8111, -100.026, 1.62 ) }
    dend_36 { pt3dadd( 68.5523, -69.2496, -100.032, 0.96 ) }
    dend_36 { pt3dadd( 69.0037, -68.8602, -100.053, 0.59 ) }
    dend_36 { pt3dadd( 69.6781, -68.3121, -100.105, 0.52 ) }
    dend_36 { pt3dadd( 70.389, -67.7451, -100.162, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_36 { pt3dadd( 70.9482, -67.3157, -100.214, 1.03 ) }
    dend_36 { pt3dadd( 72.197, -66.4551, -100.35, 0.22 ) }
    dend_36 { pt3dadd( 72.6342, -66.2051, -100.401, 0.66 ) }
    dend_36 { pt3dadd( 72.9596, -66.0634, -100.436, 0.66 ) }
    dend_36 { pt3dadd( 73.7161, -65.8921, -100.505, 0.29 ) }
    dend_36 { pt3dadd( 74.2634, -65.9507, -100.523, 0.29 ) }
    dend_36 { pt3dadd( 74.9535, -66.2803, -100.611, 0.29 ) }
    dend_36 { pt3dadd( 75.6559, -66.8901, -100.81, 1.33 ) }
    dend_36 { pt3dadd( 75.9589, -67.2506, -101.001, 1.47 ) }
    dend_36 { pt3dadd( 76.4186, -67.8825, -101.44, 0.74 ) }
    dend_36 { pt3dadd( 76.78, -68.3956, -101.875, 0.44 ) }
    dend_36 { pt3dadd( 77.7117, -69.5833, -103.112, 0.96 ) }
    dend_36 { pt3dadd( 78.0001, -69.8902, -103.503, 0.74 ) }
    dend_36 { pt3dadd( 78.7591, -70.5772, -104.52, 0.29 ) }
    dend_36 { pt3dadd( 79.1946, -70.8977, -105.031, 0.52 ) }
    dend_36 { pt3dadd( 79.7629, -71.2443, -105.584, 0.29 ) }
    dend_36 { pt3dadd( 80.3712, -71.5663, -106.048, 0.66 ) }
    dend_36 { pt3dadd( 80.7752, -71.7522, -106.266, 0.66 ) }
    dend_36 { pt3dadd( 81.3525, -71.9543, -106.552, 0.29 ) }
    dend_36 { pt3dadd( 82.3554, -72.2427, -107.011, 0.96 ) }
    dend_36 { pt3dadd( 82.9945, -72.4325, -107.316, 0.29 ) }
    dend_36 { pt3dadd( 83.6668, -72.6275, -107.659, 1.11 ) }
    dend_36 { pt3dadd( 84.73, -72.9153, -108.215, 0.37 ) }
    dend_36 { pt3dadd( 85.8166, -73.1719, -108.78, 0.96 ) }
    dend_36 { pt3dadd( 86.5654, -73.3126, -109.164, 0.52 ) }
    dend_36 { pt3dadd( 87.2518, -73.4225, -109.513, 0.96 ) }
    dend_36 { pt3dadd( 87.5112, -73.4592, -109.637, 0.96 ) }
    dend_36 { pt3dadd( 88.5039, -73.6107, -110.089, 0.29 ) }
    dend_36 { pt3dadd( 88.9668, -73.6933, -110.271, 0.81 ) }
    dend_36 { pt3dadd( 89.3168, -73.7596, -110.375, 0.81 ) }
    dend_36 { pt3dadd( 90.1097, -73.8785, -110.574, 0.29 ) }
    dend_36 { pt3dadd( 90.7453, -73.9443, -110.705, 0.81 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 32/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 47.906, -88.1611, -89.8487, 0.74 ) }
    dend_33 { pt3dadd( 48.1763, -89.4909, -89.8399, 0.74 ) }
    dend_33 { pt3dadd( 48.4724, -90.4972, -89.7507, 0.81 ) }
    dend_33 { pt3dadd( 48.8597, -91.5334, -89.6037, 0.81 ) }
    dend_33 { pt3dadd( 49.3617, -92.6407, -89.4102, 0.59 ) }
    dend_33 { pt3dadd( 49.833, -93.4977, -89.2401, 0.37 ) }
    dend_33 { pt3dadd( 50.1412, -93.9685, -89.1241, 0.37 ) }
    dend_33 { pt3dadd( 50.8334, -94.8614, -88.8113, 0.88 ) }
    dend_33 { pt3dadd( 51.1363, -95.1788, -88.6842, 0.88 ) }
    dend_33 { pt3dadd( 51.4988, -95.5355, -88.5368, 0.88 ) }
    dend_33 { pt3dadd( 51.9792, -96.0393, -88.3795, 0.29 ) }
    dend_33 { pt3dadd( 52.7558, -97.0415, -88.19, 0.29 ) }
    dend_33 { pt3dadd( 53.1252, -97.6902, -88.1469, 1.03 ) }
    dend_33 { pt3dadd( 53.3539, -98.1674, -88.137, 1.33 ) }
    dend_33 { pt3dadd( 53.7356, -98.9929, -88.1101, 1.18 ) }
    dend_33 { pt3dadd( 54.2071, -99.9626, -88.0616, 1.03 ) }
    dend_33 { pt3dadd( 54.6059, -100.686, -88.0098, 0.81 ) }
    dend_33 { pt3dadd( 55.3262, -101.682, -87.8799, 0.37 ) }
    dend_33 { pt3dadd( 56.1688, -102.545, -87.675, 0.96 ) }
    dend_33 { pt3dadd( 56.7308, -102.997, -87.5278, 1.18 ) }
    dend_33 { pt3dadd( 57.363, -103.401, -87.3364, 1.18 ) }
    dend_33 { pt3dadd( 57.9885, -103.713, -87.1444, 0.88 ) }
    dend_33 { pt3dadd( 58.9924, -104.085, -86.8967, 0.44 ) }
    dend_33 { pt3dadd( 59.4898, -104.208, -86.8429, 0.44 ) }
    dend_33 { pt3dadd( 60.4289, -104.369, -86.892, 0.37 ) }
    dend_33 { pt3dadd( 61.1949, -104.46, -87.0595, 0.37 ) }
    dend_33 { pt3dadd( 62.2848, -104.568, -87.4666, 0.66 ) }
    dend_33 { pt3dadd( 63.0807, -104.661, -87.8554, 1.03 ) }
    dend_33 { pt3dadd( 64.0956, -104.756, -88.4443, 0.74 ) }
    dend_33 { pt3dadd( 64.7885, -104.808, -88.8908, 0.52 ) }
    dend_33 { pt3dadd( 65.6671, -104.85, -89.5251, 0.44 ) }
    dend_33 { pt3dadd( 66.3696, -104.901, -90.091, 0.44 ) }
    dend_33 { pt3dadd( 67.07, -105.019, -90.657, 0.37 ) }
    // Section: dend_26, id: dend_26, parent: dend_16 (entry count 65/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -4.74736, 257.767, -12.3356, 0.29 ) }
    dend_26 { pt3dadd( -4.94055, 260.32, -12.7525, 0.29 ) }
    dend_26 { pt3dadd( -4.91944, 260.89, -12.767, 0.29 ) }
    dend_26 { pt3dadd( -4.89459, 261.49, -12.7267, 0.66 ) }
    dend_26 { pt3dadd( -4.92121, 262.119, -12.6208, 0.88 ) }
    dend_26 { pt3dadd( -5.01497, 262.862, -12.45, 0.88 ) }
    dend_26 { pt3dadd( -5.28406, 264.126, -11.9495, 0.52 ) }
    dend_26 { pt3dadd( -5.5718, 265.076, -11.284, 0.66 ) }
    dend_26 { pt3dadd( -5.81009, 265.631, -10.7251, 0.81 ) }
    dend_26 { pt3dadd( -6.24069, 266.418, -9.77517, 0.37 ) }
    dend_26 { pt3dadd( -6.60131, 266.965, -9.05465, 0.52 ) }
    dend_26 { pt3dadd( -7.44455, 268.063, -7.52295, 0.74 ) }
    dend_26 { pt3dadd( -8.11157, 268.823, -6.45799, 1.03 ) }
    dend_26 { pt3dadd( -9.37523, 270.113, -4.60765, 1.03 ) }
    dend_26 { pt3dadd( -9.98476, 270.717, -3.7536, 0.74 ) }
    dend_26 { pt3dadd( -10.4686, 271.224, -3.07837, 0.44 ) }
    dend_26 { pt3dadd( -10.9308, 271.732, -2.43531, 0.44 ) }
    dend_26 { pt3dadd( -11.667, 272.582, -1.4698, 0.44 ) }
    dend_26 { pt3dadd( -12.7655, 273.908, -0.0876969, 0.88 ) }
    dend_26 { pt3dadd( -13.3452, 274.662, 0.623159, 1.18 ) }
    dend_26 { pt3dadd( -13.733, 275.201, 1.14458, 0.52 ) }
    dend_26 { pt3dadd( -14.1227, 275.801, 1.73247, 0.52 ) }
    dend_26 { pt3dadd( -14.593, 276.667, 2.52764, 0.59 ) }
    dend_26 { pt3dadd( -14.8636, 277.297, 3.02014, 0.81 ) }
    dend_26 { pt3dadd( -15.1558, 278.116, 3.48105, 0.29 ) }
    dend_26 { pt3dadd( -15.3672, 278.609, 3.71737, 0.29 ) }
    dend_26 { pt3dadd( -15.7054, 279.169, 3.97791, 0.66 ) }
    dend_26 { pt3dadd( -16.1134, 279.639, 4.27493, 0.66 ) }
    dend_26 { pt3dadd( -16.4893, 280.009, 4.59401, 0.37 ) }
    dend_26 { pt3dadd( -16.8565, 280.361, 4.97685, 0.66 ) }
    dend_26 { pt3dadd( -17.3234, 280.852, 5.53189, 0.81 ) }
    dend_26 { pt3dadd( -17.7078, 281.331, 6.03938, 0.74 ) }
    dend_26 { pt3dadd( -18.702, 282.858, 7.56284, 0.44 ) }
    dend_26 { pt3dadd( -19.0271, 283.542, 8.18788, 0.37 ) }
    dend_26 { pt3dadd( -19.2031, 284.182, 8.68753, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_26 { pt3dadd( -19.2909, 285.081, 9.25889, 0.29 ) }
    dend_26 { pt3dadd( -19.2733, 285.78, 9.6439, 0.15 ) }
    dend_26 { pt3dadd( -19.1995, 286.333, 9.8876, 0.44 ) }
    dend_26 { pt3dadd( -19.1248, 286.635, 9.96286, 0.44 ) }
    dend_26 { pt3dadd( -19.0602, 286.912, 10.0271, 0.44 ) }
    dend_26 { pt3dadd( -18.8298, 288.719, 10.5766, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 6/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -4.74736, 257.767, -12.3356, 0.74 ) }
    dend_17 { pt3dadd( -4.74706, 259.026, -12.8413, 0.74 ) }
    dend_17 { pt3dadd( -4.80402, 260.13, -13.2486, 0.74 ) }
    dend_17 { pt3dadd( -4.97065, 261.905, -13.8657, 0.96 ) }
    dend_17 { pt3dadd( -5.15745, 263.196, -14.2395, 0.96 ) }
    dend_17 { pt3dadd( -5.46123, 264.716, -14.5826, 0.74 ) }
    dend_17 { pt3dadd( -5.96606, 266.815, -14.9596, 0.59 ) }
    dend_17 { pt3dadd( -6.26418, 267.832, -15.0603, 0.81 ) }
    dend_17 { pt3dadd( -6.67209, 269.173, -15.0963, 0.81 ) }
    dend_17 { pt3dadd( -7.17753, 270.868, -15.0215, 0.81 ) }
    dend_17 { pt3dadd( -7.64957, 272.731, -14.8324, 0.96 ) }
    dend_17 { pt3dadd( -7.89701, 273.99, -14.6558, 0.96 ) }
    dend_17 { pt3dadd( -8.14666, 276.115, -14.335, 0.74 ) }
    dend_17 { pt3dadd( -8.18181, 277.286, -14.154, 1.03 ) }
    dend_17 { pt3dadd( -8.12706, 278.132, -14.0303, 1.03 ) }
    dend_17 { pt3dadd( -7.91851, 279.576, -13.8847, 1.03 ) }
    dend_17 { pt3dadd( -7.78175, 280.337, -13.8345, 1.03 ) }
    dend_17 { pt3dadd( -7.61017, 281.492, -13.8082, 1.03 ) }
    dend_17 { pt3dadd( -7.55194, 282.48, -13.8029, 1.03 ) }
    dend_17 { pt3dadd( -7.58354, 283.627, -13.8271, 0.96 ) }
    dend_17 { pt3dadd( -7.74904, 284.892, -13.8788, 0.74 ) }
    dend_17 { pt3dadd( -7.96648, 285.923, -13.9484, 0.74 ) }
    dend_17 { pt3dadd( -8.2965, 287.133, -14.0333, 0.88 ) }
    dend_17 { pt3dadd( -8.80743, 288.681, -14.1348, 1.11 ) }
    dend_17 { pt3dadd( -9.24025, 289.845, -14.2181, 1.11 ) }
    dend_17 { pt3dadd( -9.97914, 291.733, -14.3461, 0.96 ) }
    dend_17 { pt3dadd( -10.3719, 292.766, -14.3995, 0.96 ) }
    dend_17 { pt3dadd( -10.7388, 293.774, -14.4239, 0.96 ) }
    dend_17 { pt3dadd( -11.0536, 294.635, -14.4218, 0.96 ) }
    dend_17 { pt3dadd( -11.4671, 295.725, -14.3918, 0.81 ) }
    dend_17 { pt3dadd( -11.9566, 297.045, -14.3221, 0.96 ) }
    dend_17 { pt3dadd( -12.3007, 298.029, -14.2301, 0.96 ) }
    dend_17 { pt3dadd( -12.6877, 299.184, -14.0511, 0.96 ) }
    dend_17 { pt3dadd( -12.9415, 300.051, -13.8753, 1.25 ) }
    dend_17 { pt3dadd( -13.2055, 301.078, -13.5907, 1.25 ) }
    dend_17 { pt3dadd( -13.5253, 302.574, -13.0644, 1.11 ) }
    dend_17 { pt3dadd( -13.7127, 303.845, -12.5941, 0.88 ) }
    dend_17 { pt3dadd( -13.7876, 305.169, -12.1005, 0.74 ) }
    dend_17 { pt3dadd( -13.7453, 306.075, -11.7917, 1.18 ) }
    dend_17 { pt3dadd( -13.5974, 307.154, -11.4435, 1.18 ) }
    dend_17 { pt3dadd( -13.482, 307.831, -11.222, 1.18 ) }
    dend_17 { pt3dadd( -13.2882, 309.059, -10.8137, 0.96 ) }
    dend_17 { pt3dadd( -13.1767, 309.97, -10.5598, 0.81 ) }
    dend_17 { pt3dadd( -13.1077, 310.976, -10.3345, 0.81 ) }
    dend_17 { pt3dadd( -13.0904, 312.133, -10.1016, 0.81 ) }
    dend_17 { pt3dadd( -13.1155, 313.591, -9.84227, 0.81 ) }
    dend_17 { pt3dadd( -13.1826, 314.752, -9.63992, 1.11 ) }
    dend_17 { pt3dadd( -13.2892, 315.99, -9.44526, 1.11 ) }
    dend_17 { pt3dadd( -13.4169, 317.309, -9.34992, 0.96 ) }
    dend_17 { pt3dadd( -13.5593, 318.686, -9.36452, 0.96 ) }
    dend_17 { pt3dadd( -13.7658, 320.561, -9.56405, 0.88 ) }
    dend_17 { pt3dadd( -13.956, 322.274, -9.90602, 0.88 ) }
    dend_17 { pt3dadd( -14.1215, 323.722, -10.3036, 0.88 ) }
    dend_17 { pt3dadd( -14.3695, 325.971, -11.0367, 0.88 ) }
    dend_17 { pt3dadd( -14.5522, 327.652, -11.626, 1.11 ) }
    dend_17 { pt3dadd( -14.6989, 329.042, -12.1404, 1.11 ) }
    dend_17 { pt3dadd( -14.8384, 330.325, -12.5564, 1.11 ) }
    dend_17 { pt3dadd( -14.9639, 331.794, -12.8988, 0.81 ) }
    dend_17 { pt3dadd( -15.0731, 334.074, -13.1916, 1.11 ) }
    dend_17 { pt3dadd( -15.0715, 335.032, -13.2002, 1.11 ) }
    dend_17 { pt3dadd( -14.9695, 336.621, -13.1263, 1.11 ) }
    dend_17 { pt3dadd( -14.7212, 339.007, -12.9254, 0.96 ) }
    dend_17 { pt3dadd( -14.4887, 340.829, -12.7333, 0.96 ) }
    dend_17 { pt3dadd( -14.3186, 342.057, -12.6394, 0.96 ) }
    dend_17 { pt3dadd( -14.1718, 343.103, -12.6272, 0.96 ) }
    dend_17 { pt3dadd( -13.861, 345.056, -12.6868, 0.81 ) }
    dend_17 { pt3dadd( -13.6169, 346.358, -12.7712, 0.81 ) }
    dend_17 { pt3dadd( -13.3195, 347.875, -12.9244, 0.66 ) }
    dend_17 { pt3dadd( -12.8668, 350.216, -13.2024, 0.66 ) }
    dend_17 { pt3dadd( -12.5278, 352.142, -13.4343, 0.66 ) }
    dend_17 { pt3dadd( -12.2073, 354.517, -13.7333, 1.03 ) }
    dend_17 { pt3dadd( -12.1185, 355.612, -13.8602, 1.03 ) }
    dend_17 { pt3dadd( -12.0361, 357.739, -14.1661, 0.81 ) }
    dend_17 { pt3dadd( -12.0481, 359.025, -14.3791, 0.81 ) }
    dend_17 { pt3dadd( -12.1247, 360.361, -14.6152, 0.96 ) }
    dend_17 { pt3dadd( -12.3014, 362.322, -15.0002, 0.66 ) }
    dend_17 { pt3dadd( -12.4624, 363.738, -15.3071, 0.88 ) }
    dend_17 { pt3dadd( -12.634, 365.375, -15.6373, 0.88 ) }
    dend_17 { pt3dadd( -12.7894, 367.144, -15.9314, 0.88 ) }
    dend_17 { pt3dadd( -12.9259, 369.14, -16.1755, 1.03 ) }
    dend_17 { pt3dadd( -12.9476, 370.241, -16.2944, 1.03 ) }
    dend_17 { pt3dadd( -12.9232, 371.361, -16.3975, 1.03 ) }
    dend_17 { pt3dadd( -12.8482, 373.309, -16.5295, 0.81 ) }
    dend_17 { pt3dadd( -12.7927, 375.155, -16.5909, 0.81 ) }
    dend_17 { pt3dadd( -12.7849, 376.385, -16.623, 0.81 ) }
    dend_17 { pt3dadd( -12.8533, 378.914, -16.6678, 0.81 ) }
    dend_17 { pt3dadd( -13.0054, 380.781, -16.7091, 1.25 ) }
    dend_17 { pt3dadd( -13.099, 381.446, -16.738, 1.33 ) }
    dend_17 { pt3dadd( -13.3005, 382.556, -16.8209, 1.33 ) }
    dend_17 { pt3dadd( -13.5516, 383.814, -16.9481, 1.18 ) }
    dend_17 { pt3dadd( -13.7632, 384.881, -17.0872, 0.74 ) }
    dend_17 { pt3dadd( -14.0863, 386.426, -17.305, 0.66 ) }
    dend_17 { pt3dadd( -14.3187, 387.662, -17.516, 0.96 ) }
    dend_17 { pt3dadd( -14.4861, 388.785, -17.7327, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_17 { pt3dadd( -14.5838, 389.772, -17.906, 0.66 ) }
    dend_17 { pt3dadd( -14.653, 391.092, -18.0565, 0.66 ) }
    dend_17 { pt3dadd( -14.7107, 392.775, -18.148, 0.66 ) }
    dend_17 { pt3dadd( -14.754, 394.096, -18.1488, 0.96 ) }
    dend_17 { pt3dadd( -14.8175, 395.134, -18.1379, 0.96 ) }
    dend_17 { pt3dadd( -14.9292, 396.249, -18.1693, 0.74 ) }
    dend_17 { pt3dadd( -15.2231, 398.726, -18.3296, 0.74 ) }
    dend_17 { pt3dadd( -15.3292, 399.53, -18.3984, 0.88 ) }
    dend_17 { pt3dadd( -15.6072, 401.618, -18.6327, 0.96 ) }
    dend_17 { pt3dadd( -15.8737, 403.578, -18.8672, 0.81 ) }
    dend_17 { pt3dadd( -16.1447, 405.593, -19.1294, 0.66 ) }
    dend_17 { pt3dadd( -16.3477, 407.357, -19.3778, 0.81 ) }
    dend_17 { pt3dadd( -16.4848, 408.76, -19.5473, 0.96 ) }
    dend_17 { pt3dadd( -16.6354, 410.875, -19.7386, 0.74 ) }
    dend_17 { pt3dadd( -16.7024, 411.93, -19.7917, 1.03 ) }
    dend_17 { pt3dadd( -16.8098, 413.281, -19.7609, 1.03 ) }
    dend_17 { pt3dadd( -17.0123, 415.227, -19.6337, 1.33 ) }
    dend_17 { pt3dadd( -17.1742, 416.469, -19.5479, 1.55 ) }
    dend_17 { pt3dadd( -17.4739, 418.497, -19.412, 0.81 ) }
    dend_17 { pt3dadd( -17.717, 419.878, -19.3342, 0.66 ) }
    dend_17 { pt3dadd( -17.9951, 421.272, -19.2928, 0.66 ) }
    dend_17 { pt3dadd( -18.2161, 422.284, -19.3028, 0.66 ) }
    dend_17 { pt3dadd( -18.5506, 423.826, -19.3835, 0.66 ) }
    dend_17 { pt3dadd( -18.7843, 425.115, -19.4823, 0.66 ) }
    dend_17 { pt3dadd( -18.9886, 426.514, -19.5715, 1.25 ) }
    dend_17 { pt3dadd( -19.0523, 427.144, -19.612, 1.03 ) }
    dend_17 { pt3dadd( -19.1429, 428.853, -19.7308, 0.81 ) }
    dend_17 { pt3dadd( -19.1762, 430.38, -19.8113, 0.81 ) }
    dend_17 { pt3dadd( -19.1691, 432.062, -19.8903, 0.66 ) }
    dend_17 { pt3dadd( -19.1199, 433.48, -19.9326, 0.66 ) }
    dend_17 { pt3dadd( -19.036, 434.886, -19.9474, 0.96 ) }
    dend_17 { pt3dadd( -18.948, 436.122, -19.9406, 1.4 ) }
    dend_17 { pt3dadd( -18.8723, 437.113, -19.9205, 1.4 ) }
    dend_17 { pt3dadd( -18.8284, 437.845, -19.906, 1.4 ) }
    dend_17 { pt3dadd( -18.7931, 439.15, -19.889, 0.88 ) }
    dend_17 { pt3dadd( -18.7632, 440.766, -19.8784, 0.74 ) }
    dend_17 { pt3dadd( -18.7351, 441.824, -19.8792, 0.74 ) }
    dend_17 { pt3dadd( -18.6886, 443.578, -19.8949, 0.74 ) }
    dend_17 { pt3dadd( -18.6324, 445.065, -19.919, 0.66 ) }
    dend_17 { pt3dadd( -18.546, 446.737, -19.9616, 0.66 ) }
    dend_17 { pt3dadd( -18.4012, 449.015, -20.0449, 0.66 ) }
    dend_17 { pt3dadd( -18.2673, 450.671, -20.1041, 0.74 ) }
    dend_17 { pt3dadd( -18.1601, 451.697, -20.1393, 0.74 ) }
    dend_17 { pt3dadd( -18.0016, 452.914, -20.1788, 0.96 ) }
    dend_17 { pt3dadd( -17.844, 454.0, -20.2042, 1.11 ) }
    dend_17 { pt3dadd( -17.7258, 454.815, -20.2253, 1.11 ) }
    dend_17 { pt3dadd( -17.5652, 456.208, -20.271, 0.74 ) }
    dend_17 { pt3dadd( -17.4455, 457.413, -20.3283, 0.59 ) }
    dend_17 { pt3dadd( -17.2996, 458.777, -20.3912, 0.59 ) }
    dend_17 { pt3dadd( -17.1331, 460.076, -20.4611, 0.88 ) }
    dend_17 { pt3dadd( -17.049, 460.716, -20.5073, 1.25 ) }
    dend_17 { pt3dadd( -16.9282, 461.676, -20.5969, 1.4 ) }
    dend_17 { pt3dadd( -16.8515, 462.35, -20.6751, 1.4 ) }
    dend_17 { pt3dadd( -16.7676, 463.365, -20.8099, 0.88 ) }
    dend_17 { pt3dadd( -16.7044, 464.587, -20.9897, 0.66 ) }
    dend_17 { pt3dadd( -16.6799, 466.184, -21.2352, 0.66 ) }
    dend_17 { pt3dadd( -16.6918, 467.374, -21.3978, 0.66 ) }
    dend_17 { pt3dadd( -16.7181, 468.174, -21.4978, 0.52 ) }
    dend_17 { pt3dadd( -16.7921, 469.699, -21.6709, 0.81 ) }
    dend_17 { pt3dadd( -16.8621, 470.882, -21.8085, 0.81 ) }
    dend_17 { pt3dadd( -16.9278, 472.043, -21.9299, 0.66 ) }
    dend_17 { pt3dadd( -16.984, 473.804, -22.0864, 0.59 ) }
    dend_17 { pt3dadd( -16.9959, 474.776, -22.154, 0.88 ) }
    dend_17 { pt3dadd( -16.9875, 475.93, -22.2247, 1.11 ) }
    dend_17 { pt3dadd( -16.9598, 477.078, -22.2814, 1.11 ) }
    dend_17 { pt3dadd( -16.9251, 477.996, -22.3188, 1.11 ) }
    dend_17 { pt3dadd( -16.8796, 478.837, -22.3467, 0.88 ) }
    dend_17 { pt3dadd( -16.8008, 479.854, -22.3927, 0.52 ) }
    dend_17 { pt3dadd( -16.7074, 480.88, -22.4364, 0.81 ) }
    dend_17 { pt3dadd( -16.6151, 481.92, -22.4618, 0.81 ) }
    dend_17 { pt3dadd( -16.5725, 482.533, -22.4575, 0.81 ) }
    dend_17 { pt3dadd( -16.5115, 483.63, -22.4408, 0.96 ) }
    dend_17 { pt3dadd( -16.4628, 484.993, -22.4131, 0.59 ) }
    dend_17 { pt3dadd( -16.4345, 485.969, -22.3899, 0.44 ) }
    dend_17 { pt3dadd( -16.3957, 487.391, -22.3335, 0.44 ) }
    dend_17 { pt3dadd( -16.3638, 488.473, -22.2782, 1.11 ) }
    dend_17 { pt3dadd( -16.354, 488.963, -22.2494, 1.4 ) }
    dend_17 { pt3dadd( -16.3754, 490.018, -22.1692, 1.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 78/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -12.8175, 131.074, -15.5649, 0.29 ) }
    dend_15 { pt3dadd( -13.532, 132.285, -16.0258, 0.29 ) }
    dend_15 { pt3dadd( -14.078, 133.32, -16.5026, 0.52 ) }
    dend_15 { pt3dadd( -14.4489, 134.054, -16.878, 0.52 ) }
    dend_15 { pt3dadd( -15.1087, 135.435, -17.5995, 0.66 ) }
    dend_15 { pt3dadd( -15.36, 135.992, -17.8918, 0.66 ) }
    dend_15 { pt3dadd( -15.6165, 136.564, -18.1411, 0.37 ) }
    dend_15 { pt3dadd( -16.2909, 138.183, -18.5898, 0.29 ) }
    dend_15 { pt3dadd( -16.5021, 138.782, -18.6594, 0.59 ) }
    dend_15 { pt3dadd( -16.7213, 139.52, -18.6656, 0.81 ) }
    dend_15 { pt3dadd( -16.8451, 139.974, -18.6205, 0.81 ) }
    dend_15 { pt3dadd( -17.3709, 141.895, -18.298, 0.74 ) }
    dend_15 { pt3dadd( -17.6686, 142.923, -18.0665, 0.74 ) }
    dend_15 { pt3dadd( -18.0842, 144.186, -17.7212, 0.44 ) }
    dend_15 { pt3dadd( -18.3752, 145.027, -17.5227, 0.29 ) }
    dend_15 { pt3dadd( -18.6752, 145.871, -17.3736, 0.29 ) }
    dend_15 { pt3dadd( -18.877, 146.437, -17.3177, 0.52 ) }
    dend_15 { pt3dadd( -19.0912, 147.101, -17.3319, 0.52 ) }
    dend_15 { pt3dadd( -19.3312, 147.909, -17.4013, 0.52 ) }
    dend_15 { pt3dadd( -19.7021, 149.199, -17.5787, 0.74 ) }
    dend_15 { pt3dadd( -19.9195, 149.988, -17.7232, 0.96 ) }
    dend_15 { pt3dadd( -20.064, 150.564, -17.8439, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_15 { pt3dadd( -20.2463, 151.387, -18.0221, 0.59 ) }
    dend_15 { pt3dadd( -20.4327, 152.391, -18.2434, 0.37 ) }
    dend_15 { pt3dadd( -20.5399, 153.328, -18.5096, 0.22 ) }
    dend_15 { pt3dadd( -20.5668, 153.954, -18.7082, 0.22 ) }
    dend_15 { pt3dadd( -20.566, 154.544, -18.8875, 0.74 ) }
    dend_15 { pt3dadd( -20.5436, 155.408, -19.1499, 1.03 ) }
    dend_15 { pt3dadd( -20.5351, 155.867, -19.2867, 1.03 ) }
    dend_15 { pt3dadd( -20.5174, 157.601, -19.7841, 0.44 ) }
    dend_15 { pt3dadd( -20.4913, 158.801, -20.1257, 0.44 ) }
    dend_15 { pt3dadd( -20.4809, 159.886, -20.396, 0.37 ) }
    dend_15 { pt3dadd( -20.4851, 160.87, -20.6174, 0.37 ) }
    dend_15 { pt3dadd( -20.4996, 161.807, -20.7977, 0.37 ) }
    dend_15 { pt3dadd( -20.5197, 162.799, -20.9319, 0.37 ) }
    dend_15 { pt3dadd( -20.5209, 163.761, -21.0045, 0.37 ) }
    dend_15 { pt3dadd( -20.4246, 165.29, -21.1074, 0.88 ) }
    dend_15 { pt3dadd( -20.3272, 166.065, -21.1393, 1.18 ) }
    dend_15 { pt3dadd( -20.2276, 166.642, -21.1506, 1.18 ) }
    dend_15 { pt3dadd( -20.0285, 167.571, -21.151, 0.74 ) }
    dend_15 { pt3dadd( -19.7515, 168.773, -21.127, 0.52 ) }
    dend_15 { pt3dadd( -19.5016, 169.894, -21.0943, 0.44 ) }
    dend_15 { pt3dadd( -19.2147, 171.139, -21.0484, 0.37 ) }
    dend_15 { pt3dadd( -19.0631, 171.8, -21.0098, 0.37 ) }
    dend_15 { pt3dadd( -18.8291, 172.826, -20.9159, 0.37 ) }
    dend_15 { pt3dadd( -18.5512, 174.06, -20.749, 0.59 ) }
    dend_15 { pt3dadd( -18.384, 174.831, -20.6036, 1.03 ) }
    dend_15 { pt3dadd( -18.2264, 175.55, -20.445, 1.03 ) }
    dend_15 { pt3dadd( -18.0666, 176.325, -20.2656, 0.96 ) }
    dend_15 { pt3dadd( -17.8997, 177.397, -20.0211, 0.29 ) }
    dend_15 { pt3dadd( -17.794, 178.388, -19.8449, 0.29 ) }
    dend_15 { pt3dadd( -17.763, 178.951, -19.7818, 0.52 ) }
    dend_15 { pt3dadd( -17.7675, 179.486, -19.7454, 0.52 ) }
    dend_15 { pt3dadd( -17.8108, 180.128, -19.7289, 0.29 ) }
    dend_15 { pt3dadd( -17.9111, 181.012, -19.746, 0.52 ) }
    dend_15 { pt3dadd( -18.0589, 182.079, -19.7701, 0.66 ) }
    dend_15 { pt3dadd( -18.1532, 183.0, -19.7431, 0.66 ) }
    dend_15 { pt3dadd( -18.1853, 183.867, -19.68, 0.52 ) }
    dend_15 { pt3dadd( -18.1719, 184.463, -19.6281, 0.81 ) }
    dend_15 { pt3dadd( -18.1188, 185.133, -19.5949, 1.11 ) }
    dend_15 { pt3dadd( -18.0091, 186.193, -19.5922, 0.15 ) }
    dend_15 { pt3dadd( -17.8922, 187.212, -19.6133, 0.15 ) }
    dend_15 { pt3dadd( -17.7926, 187.92, -19.6467, 0.52 ) }
    dend_15 { pt3dadd( -17.592, 189.122, -19.7372, 0.59 ) }
    dend_15 { pt3dadd( -17.3486, 190.463, -19.8603, 0.29 ) }
    dend_15 { pt3dadd( -17.1651, 191.526, -19.9743, 0.29 ) }
    dend_15 { pt3dadd( -17.0242, 192.408, -20.1014, 0.96 ) }
    dend_15 { pt3dadd( -16.9597, 192.895, -20.1738, 0.96 ) }
    dend_15 { pt3dadd( -16.8608, 193.69, -20.2556, 0.59 ) }
    dend_15 { pt3dadd( -16.7576, 194.421, -20.3116, 0.22 ) }
    dend_15 { pt3dadd( -16.624, 195.456, -20.3675, 0.22 ) }
    dend_15 { pt3dadd( -16.5177, 196.336, -20.4289, 0.88 ) }
    dend_15 { pt3dadd( -16.4759, 196.846, -20.4757, 0.88 ) }
    dend_15 { pt3dadd( -16.4538, 197.48, -20.5427, 0.88 ) }
    dend_15 { pt3dadd( -16.4655, 198.548, -20.6797, 0.29 ) }
    dend_15 { pt3dadd( -16.5424, 199.603, -20.8393, 0.22 ) }
    dend_15 { pt3dadd( -16.6161, 200.064, -20.9075, 0.22 ) }
    dend_15 { pt3dadd( -16.8681, 201.043, -21.0249, 0.81 ) }
    dend_15 { pt3dadd( -17.0166, 201.543, -21.0538, 1.11 ) }
    dend_15 { pt3dadd( -17.1028, 201.835, -21.0519, 1.11 ) }
    dend_15 { pt3dadd( -17.2678, 202.683, -21.0122, 0.88 ) }
    dend_15 { pt3dadd( -17.3324, 203.522, -20.9736, 0.59 ) }
    dend_15 { pt3dadd( -17.3269, 204.494, -20.9306, 0.29 ) }
    dend_15 { pt3dadd( -17.2443, 205.871, -20.8741, 0.29 ) }
    dend_15 { pt3dadd( -17.1684, 206.978, -20.8439, 0.74 ) }
    dend_15 { pt3dadd( -17.0446, 208.699, -20.8721, 0.52 ) }
    dend_15 { pt3dadd( -16.9561, 209.769, -20.9574, 1.03 ) }
    dend_15 { pt3dadd( -16.8904, 210.612, -21.0878, 1.03 ) }
    dend_15 { pt3dadd( -16.8783, 211.136, -21.2082, 0.74 ) }
    dend_15 { pt3dadd( -16.968, 212.25, -21.5779, 0.44 ) }
    dend_15 { pt3dadd( -17.198, 213.392, -22.0023, 0.88 ) }
    dend_15 { pt3dadd( -17.4018, 214.118, -22.2606, 1.18 ) }
    dend_15 { pt3dadd( -17.4992, 214.48, -22.3943, 1.18 ) }
    dend_15 { pt3dadd( -17.6962, 215.305, -22.6878, 0.59 ) }
    dend_15 { pt3dadd( -17.9297, 216.538, -23.0871, 0.29 ) }
    dend_15 { pt3dadd( -18.1102, 217.822, -23.4413, 0.81 ) }
    dend_15 { pt3dadd( -18.2633, 219.06, -23.7191, 0.52 ) }
    dend_15 { pt3dadd( -18.3619, 219.871, -23.8868, 0.52 ) }
    dend_15 { pt3dadd( -18.4554, 220.669, -24.054, 0.74 ) }
    dend_15 { pt3dadd( -18.5883, 221.664, -24.2579, 0.74 ) }
    dend_15 { pt3dadd( -18.7804, 222.765, -24.4594, 0.22 ) }
    dend_15 { pt3dadd( -18.8745, 223.165, -24.5476, 0.22 ) }
    dend_15 { pt3dadd( -19.0546, 223.783, -24.6953, 0.52 ) }
    dend_15 { pt3dadd( -19.1903, 224.22, -24.787, 0.52 ) }
    dend_15 { pt3dadd( -19.4333, 225.067, -24.9655, 0.29 ) }
    dend_15 { pt3dadd( -19.6214, 225.788, -25.1136, 0.29 ) }
    dend_15 { pt3dadd( -19.8293, 226.682, -25.2947, 1.03 ) }
    dend_15 { pt3dadd( -19.9788, 227.441, -25.4336, 1.03 ) }
    dend_15 { pt3dadd( -20.0742, 227.969, -25.5083, 1.03 ) }
    dend_15 { pt3dadd( -20.2001, 228.745, -25.5747, 0.52 ) }
    dend_15 { pt3dadd( -20.2811, 229.396, -25.5893, 0.29 ) }
    dend_15 { pt3dadd( -20.3644, 230.065, -25.5626, 0.59 ) }
    dend_15 { pt3dadd( -20.418, 230.516, -25.5054, 0.59 ) }
    dend_15 { pt3dadd( -20.5031, 231.458, -25.3407, 0.22 ) }
    dend_15 { pt3dadd( -20.5609, 232.41, -25.1465, 0.81 ) }
    dend_15 { pt3dadd( -20.5728, 233.032, -25.0054, 1.03 ) }
    dend_15 { pt3dadd( -20.5677, 233.252, -24.9551, 1.03 ) }
    dend_15 { pt3dadd( -20.5384, 234.181, -24.7571, 0.59 ) }
    dend_15 { pt3dadd( -20.5296, 235.099, -24.5841, 0.37 ) }
    dend_15 { pt3dadd( -20.5536, 235.615, -24.4969, 0.37 ) }
    dend_15 { pt3dadd( -20.6489, 236.307, -24.3994, 0.66 ) }
    dend_15 { pt3dadd( -20.742, 236.746, -24.3446, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_15 { pt3dadd( -21.1017, 237.978, -24.2369, 0.29 ) }
    dend_15 { pt3dadd( -21.3168, 238.575, -24.2127, 0.29 ) }
    dend_15 { pt3dadd( -21.6878, 239.509, -24.2019, 0.74 ) }
    dend_15 { pt3dadd( -21.9737, 240.219, -24.1972, 0.74 ) }
    dend_15 { pt3dadd( -22.2829, 240.992, -24.1865, 0.74 ) }
    dend_15 { pt3dadd( -22.6797, 242.041, -24.1497, 0.29 ) }
    dend_15 { pt3dadd( -23.0027, 242.979, -24.0941, 0.29 ) }
    dend_15 { pt3dadd( -23.3783, 244.35, -23.9531, 1.33 ) }
    dend_15 { pt3dadd( -23.5145, 245.042, -23.8342, 1.33 ) }
    dend_15 { pt3dadd( -23.6369, 246.026, -23.6226, 1.11 ) }
    dend_15 { pt3dadd( -23.6795, 246.864, -23.4061, 0.59 ) }
    dend_15 { pt3dadd( -23.6287, 247.759, -23.1515, 0.44 ) }
    dend_15 { pt3dadd( -23.3472, 249.553, -22.6935, 0.29 ) }
    dend_15 { pt3dadd( -23.0036, 250.83, -22.4268, 0.74 ) }
    dend_15 { pt3dadd( -22.752, 251.57, -22.3326, 0.81 ) }
    dend_15 { pt3dadd( -22.5053, 252.197, -22.3104, 0.44 ) }
    dend_15 { pt3dadd( -21.9981, 253.414, -22.3746, 0.22 ) }
    dend_15 { pt3dadd( -21.545, 254.472, -22.5102, 0.81 ) }
    dend_15 { pt3dadd( -21.3309, 254.954, -22.6081, 0.81 ) }
    dend_15 { pt3dadd( -20.9026, 255.931, -22.8478, 0.22 ) }
    dend_15 { pt3dadd( -20.5861, 256.704, -23.0218, 0.22 ) }
    dend_15 { pt3dadd( -20.2229, 257.647, -23.2316, 0.81 ) }
    dend_15 { pt3dadd( -20.1296, 257.914, -23.2799, 0.81 ) }
    dend_15 { pt3dadd( -19.8044, 258.851, -23.4089, 0.29 ) }
    dend_15 { pt3dadd( -19.5297, 259.623, -23.4933, 0.88 ) }
    dend_15 { pt3dadd( -19.2032, 260.482, -23.5458, 0.88 ) }
    dend_15 { pt3dadd( -18.708, 261.818, -23.5853, 0.22 ) }
    dend_15 { pt3dadd( -18.4081, 262.755, -23.5953, 0.74 ) }
    dend_15 { pt3dadd( -18.3302, 263.056, -23.5923, 0.88 ) }
    dend_15 { pt3dadd( -18.1465, 264.108, -23.5957, 0.15 ) }
    dend_15 { pt3dadd( -18.0432, 264.975, -23.5993, 0.52 ) }
    dend_15 { pt3dadd( -17.985, 265.734, -23.6069, 0.22 ) }
    dend_15 { pt3dadd( -17.9478, 266.49, -23.6427, 0.66 ) }
    dend_15 { pt3dadd( -17.9349, 266.868, -23.6836, 0.88 ) }
    dend_15 { pt3dadd( -17.9299, 268.399, -23.935, 0.22 ) }
    dend_15 { pt3dadd( -17.9472, 268.862, -24.0327, 0.59 ) }
    dend_15 { pt3dadd( -17.9897, 269.518, -24.1968, 0.44 ) }
    dend_15 { pt3dadd( -18.0755, 270.422, -24.4163, 0.22 ) }
    dend_15 { pt3dadd( -18.1422, 270.972, -24.5333, 0.37 ) }
    dend_15 { pt3dadd( -18.2997, 271.944, -24.6998, 0.15 ) }
    dend_15 { pt3dadd( -18.5014, 272.891, -24.8105, 0.81 ) }
    dend_15 { pt3dadd( -18.6304, 273.442, -24.8569, 1.11 ) }
    dend_15 { pt3dadd( -18.8412, 274.302, -24.8955, 1.03 ) }
    dend_15 { pt3dadd( -19.0385, 275.11, -24.8997, 0.29 ) }
    dend_15 { pt3dadd( -19.223, 275.911, -24.9016, 0.29 ) }
    dend_15 { pt3dadd( -19.3932, 276.641, -24.9118, 0.29 ) }
    dend_15 { pt3dadd( -19.6953, 277.951, -24.9505, 0.22 ) }
    dend_15 { pt3dadd( -19.8811, 278.75, -24.9861, 0.74 ) }
    dend_15 { pt3dadd( -20.2839, 280.501, -25.1053, 0.22 ) }
    dend_15 { pt3dadd( -20.5366, 281.547, -25.1904, 0.81 ) }
    dend_15 { pt3dadd( -21.073, 283.695, -25.3861, 0.22 ) }
    dend_15 { pt3dadd( -21.1681, 284.071, -25.4222, 0.22 ) }
    dend_15 { pt3dadd( -21.3618, 284.855, -25.4971, 0.81 ) }
    dend_15 { pt3dadd( -21.4269, 285.145, -25.5189, 1.03 ) }
    dend_15 { pt3dadd( -21.5693, 285.835, -25.5502, 0.22 ) }
    dend_15 { pt3dadd( -21.7064, 286.488, -25.5512, 0.44 ) }
    dend_15 { pt3dadd( -21.8743, 287.312, -25.52, 0.22 ) }
    dend_15 { pt3dadd( -21.9998, 287.941, -25.4873, 0.44 ) }
    dend_15 { pt3dadd( -22.1554, 288.739, -25.4315, 0.22 ) }
    dend_15 { pt3dadd( -22.3234, 289.523, -25.3752, 0.44 ) }
    dend_15 { pt3dadd( -22.53, 290.338, -25.3131, 0.59 ) }
    dend_15 { pt3dadd( -22.7783, 291.195, -25.2927, 0.29 ) }
    dend_15 { pt3dadd( -23.1296, 292.298, -25.3466, 0.44 ) }
    dend_15 { pt3dadd( -23.524, 293.431, -25.4668, 0.44 ) }
    dend_15 { pt3dadd( -24.0783, 294.992, -25.6938, 0.81 ) }
    dend_15 { pt3dadd( -24.3559, 295.859, -25.8694, 0.96 ) }
    dend_15 { pt3dadd( -24.6805, 297.016, -26.1869, 0.66 ) }
    dend_15 { pt3dadd( -25.119, 298.487, -26.7101, 0.29 ) }
    dend_15 { pt3dadd( -25.2683, 298.958, -26.9204, 0.44 ) }
    dend_15 { pt3dadd( -25.5047, 299.729, -27.3255, 0.15 ) }
    dend_15 { pt3dadd( -25.8063, 300.818, -27.9781, 0.44 ) }
    dend_15 { pt3dadd( -25.9882, 301.592, -28.4562, 0.44 ) }
    dend_15 { pt3dadd( -26.1782, 302.427, -28.9341, 0.15 ) }
    dend_15 { pt3dadd( -26.2416, 302.736, -29.135, 0.74 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 74/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -12.8175, 131.074, -15.5649, 0.22 ) }
    dend_14 { pt3dadd( -12.1374, 131.988, -15.9912, 0.22 ) }
    dend_14 { pt3dadd( -11.7751, 132.385, -16.159, 0.22 ) }
    dend_14 { pt3dadd( -11.4246, 132.77, -16.3214, 0.22 ) }
    dend_14 { pt3dadd( -11.0582, 133.172, -16.4911, 0.22 ) }
    dend_14 { pt3dadd( -10.7656, 133.492, -16.6266, 0.44 ) }
    dend_14 { pt3dadd( -10.2032, 134.109, -16.8871, 0.74 ) }
    dend_14 { pt3dadd( -9.80321, 134.57, -17.0184, 0.88 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 82/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -61.0274, 101.976, -3.481, 0.29 ) }
    dend_10 { pt3dadd( -62.2271, 101.572, -3.47006, 0.29 ) }
    dend_10 { pt3dadd( -62.951, 101.328, -3.46346, 0.29 ) }
    dend_10 { pt3dadd( -64.0178, 100.969, -3.45373, 0.29 ) }
    dend_10 { pt3dadd( -65.1928, 100.573, -3.44301, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 87/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -61.0274, 101.976, -3.481, 0.22 ) }
    dend_9 { pt3dadd( -61.7737, 103.113, -3.47345, 0.22 ) }
    dend_9 { pt3dadd( -62.1595, 103.7, -3.46954, 0.66 ) }
    dend_9 { pt3dadd( -62.332, 103.963, -3.4678, 0.66 ) }
    dend_9 { pt3dadd( -62.6574, 104.458, -3.4645, 0.29 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 92/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -118.698, 5.50135, -125.655, 0.22 ) }
    dend_53 { pt3dadd( -116.997, 6.35253, -128.09, 0.22 ) }
    dend_53 { pt3dadd( -116.586, 6.55825, -128.679, 0.22 ) }
    dend_53 { pt3dadd( -115.792, 6.95553, -129.816, 0.88 ) }
    dend_53 { pt3dadd( -115.537, 7.08337, -130.181, 0.66 ) }
    dend_53 { pt3dadd( -115.317, 7.19355, -130.497, 0.66 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 98/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -118.698, 5.50135, -125.655, 0.22 ) }
    dend_52 { pt3dadd( -119.192, 6.51337, -126.369, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_52 { pt3dadd( -119.438, 6.87449, -126.671, 0.44 ) }
    dend_52 { pt3dadd( -119.952, 7.5112, -127.269, 0.22 ) }
    dend_52 { pt3dadd( -120.16, 7.74688, -127.496, 0.59 ) }
    dend_52 { pt3dadd( -120.723, 8.3905, -128.088, 0.29 ) }
    dend_52 { pt3dadd( -121.422, 9.18897, -128.823, 0.29 ) }
    dend_52 { pt3dadd( -121.826, 9.57543, -129.219, 0.29 ) }
    dend_52 { pt3dadd( -122.164, 9.84415, -129.545, 0.59 ) }
    dend_52 { pt3dadd( -122.672, 10.1672, -130.031, 0.22 ) }
    dend_52 { pt3dadd( -123.1, 10.4228, -130.428, 0.44 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 9/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -81.9421, -68.7387, -27.7875, 0.37 ) }
    dend_48 { pt3dadd( -82.1383, -70.6398, -28.2448, 0.37 ) }
    dend_48 { pt3dadd( -82.2481, -71.9657, -28.5402, 0.15 ) }
    dend_48 { pt3dadd( -82.303, -73.0698, -28.7266, 0.44 ) }
    dend_48 { pt3dadd( -82.3419, -74.0156, -28.856, 0.44 ) }
    dend_48 { pt3dadd( -82.3916, -75.3509, -29.0091, 0.22 ) }
    dend_48 { pt3dadd( -82.4426, -76.4871, -29.1123, 1.03 ) }
    dend_48 { pt3dadd( -82.468, -76.923, -29.1142, 1.03 ) }
    dend_48 { pt3dadd( -82.5878, -78.4714, -29.0027, 0.29 ) }
    dend_48 { pt3dadd( -82.699, -79.5067, -28.8807, 1.03 ) }
    dend_48 { pt3dadd( -82.8462, -80.4772, -28.7054, 1.03 ) }
    dend_48 { pt3dadd( -83.0351, -81.4376, -28.4811, 0.29 ) }
    dend_48 { pt3dadd( -83.3247, -82.7265, -28.1145, 0.29 ) }
    dend_48 { pt3dadd( -83.5032, -83.4403, -27.8697, 0.81 ) }
    dend_48 { pt3dadd( -83.703, -84.1279, -27.5953, 0.52 ) }
    dend_48 { pt3dadd( -84.1842, -85.6663, -26.9277, 0.29 ) }
    dend_48 { pt3dadd( -84.6075, -86.9355, -26.3458, 0.74 ) }
    dend_48 { pt3dadd( -84.8718, -87.6492, -25.963, 1.03 ) }
    dend_48 { pt3dadd( -85.4723, -89.1406, -25.0727, 0.22 ) }
    dend_48 { pt3dadd( -85.7622, -89.8033, -24.6334, 0.22 ) }
    dend_48 { pt3dadd( -85.927, -90.1375, -24.3852, 0.59 ) }
    dend_48 { pt3dadd( -86.0604, -90.387, -24.1943, 0.59 ) }
    dend_48 { pt3dadd( -86.8495, -91.8796, -23.0791, 0.59 ) }
    dend_48 { pt3dadd( -87.2295, -92.6655, -22.6078, 0.37 ) }
    dend_48 { pt3dadd( -87.8155, -93.9273, -21.9798, 1.25 ) }
    dend_48 { pt3dadd( -88.023, -94.4022, -21.7691, 1.47 ) }
    dend_48 { pt3dadd( -88.5673, -95.6575, -21.2721, 0.37 ) }
    dend_48 { pt3dadd( -88.9482, -96.4978, -21.0063, 1.03 ) }
    dend_48 { pt3dadd( -89.6538, -97.9842, -20.6787, 0.29 ) }
    dend_48 { pt3dadd( -89.9893, -98.6236, -20.5411, 0.44 ) }
    dend_48 { pt3dadd( -90.2004, -99.0324, -20.4191, 0.66 ) }
    dend_48 { pt3dadd( -90.4067, -99.4569, -20.2568, 0.52 ) }
    dend_48 { pt3dadd( -90.8247, -100.303, -19.7989, 0.29 ) }
    dend_48 { pt3dadd( -91.1871, -101.052, -19.2548, 0.74 ) }
    dend_48 { pt3dadd( -91.3133, -101.344, -18.9557, 0.74 ) }
    dend_48 { pt3dadd( -91.8366, -102.753, -17.421, 0.22 ) }
    dend_48 { pt3dadd( -91.9402, -103.111, -17.0235, 0.44 ) }
    dend_48 { pt3dadd( -92.0265, -103.542, -16.5019, 0.59 ) }
    dend_48 { pt3dadd( -92.155, -104.26, -15.5731, 0.37 ) }
    dend_48 { pt3dadd( -92.3172, -105.108, -14.4737, 0.74 ) }
    dend_48 { pt3dadd( -92.4351, -105.56, -13.9085, 0.74 ) }
    dend_48 { pt3dadd( -92.6565, -106.19, -13.1986, 0.29 ) }
    dend_48 { pt3dadd( -93.0827, -107.3, -12.0532, 1.03 ) }
    dend_48 { pt3dadd( -93.5354, -108.413, -11.0607, 0.22 ) }
    dend_48 { pt3dadd( -93.7487, -108.875, -10.6985, 0.88 ) }
    dend_48 { pt3dadd( -94.4368, -110.253, -9.80907, 0.29 ) }
    dend_48 { pt3dadd( -94.8934, -111.115, -9.30926, 0.15 ) }
    dend_48 { pt3dadd( -95.2691, -111.773, -8.99351, 0.74 ) }
    dend_48 { pt3dadd( -95.8832, -112.784, -8.66481, 1.03 ) }
    dend_48 { pt3dadd( -96.3361, -113.509, -8.50658, 1.11 ) }
    dend_48 { pt3dadd( -97.2262, -114.886, -8.30059, 0.22 ) }
    dend_48 { pt3dadd( -97.4571, -115.245, -8.27384, 0.59 ) }
    dend_48 { pt3dadd( -97.6335, -115.538, -8.26144, 0.59 ) }
    dend_48 { pt3dadd( -98.5256, -117.106, -8.22481, 0.22 ) }
    dend_48 { pt3dadd( -98.8015, -117.667, -8.21043, 0.74 ) }
    dend_48 { pt3dadd( -99.0388, -118.29, -8.14704, 0.74 ) }
    dend_48 { pt3dadd( -99.2908, -119.374, -7.88203, 0.22 ) }
    dend_48 { pt3dadd( -99.3935, -120.591, -7.47591, 0.59 ) }
    dend_48 { pt3dadd( -99.3727, -121.078, -7.29747, 0.74 ) }
    dend_48 { pt3dadd( -99.1977, -122.216, -6.86128, 0.22 ) }
    dend_48 { pt3dadd( -98.9151, -123.579, -6.28109, 0.88 ) }
    dend_48 { pt3dadd( -98.5019, -125.085, -5.57973, 0.15 ) }
    dend_48 { pt3dadd( -98.3164, -125.595, -5.30673, 0.15 ) }
    dend_48 { pt3dadd( -97.9734, -126.391, -4.78799, 0.74 ) }
    dend_48 { pt3dadd( -97.7285, -126.93, -4.4266, 0.74 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 74/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -81.9421, -68.7387, -27.7875, 0.29 ) }
    dend_47 { pt3dadd( -82.858, -67.6816, -27.8191, 0.29 ) }
    dend_47 { pt3dadd( -83.7108, -66.8584, -27.8234, 0.29 ) }
    dend_47 { pt3dadd( -84.6211, -66.0652, -27.7431, 0.29 ) }
    dend_47 { pt3dadd( -85.0765, -65.691, -27.6831, 0.29 ) }
    dend_47 { pt3dadd( -86.1144, -64.8858, -27.5074, 0.52 ) }
    dend_47 { pt3dadd( -86.8062, -64.4047, -27.3744, 0.74 ) }
    dend_47 { pt3dadd( -87.4977, -63.9796, -27.1867, 0.37 ) }
    dend_47 { pt3dadd( -88.4386, -63.4895, -26.9138, 0.66 ) }
    dend_47 { pt3dadd( -88.8193, -63.3356, -26.809, 1.03 ) }
    dend_47 { pt3dadd( -89.722, -63.058, -26.535, 1.03 ) }
    dend_47 { pt3dadd( -90.9812, -62.7961, -26.0931, 0.22 ) }
    dend_47 { pt3dadd( -91.7762, -62.6827, -25.7763, 0.22 ) }
    dend_47 { pt3dadd( -92.5972, -62.6356, -25.3331, 0.44 ) }
    dend_47 { pt3dadd( -93.1158, -62.641, -24.9996, 0.44 ) }
    dend_47 { pt3dadd( -93.8936, -62.6784, -24.4193, 0.29 ) }
    dend_47 { pt3dadd( -94.5751, -62.7583, -23.8378, 1.11 ) }
    dend_47 { pt3dadd( -94.9145, -62.8196, -23.5205, 1.25 ) }
    dend_47 { pt3dadd( -96.2909, -63.1677, -22.1677, 0.66 ) }
    dend_47 { pt3dadd( -97.0473, -63.3996, -21.3845, 0.22 ) }
    dend_47 { pt3dadd( -97.4711, -63.5575, -20.9153, 0.22 ) }
    dend_47 { pt3dadd( -97.9491, -63.7847, -20.3312, 0.22 ) }
    dend_47 { pt3dadd( -98.3539, -64.0281, -19.8291, 0.81 ) }
    dend_47 { pt3dadd( -98.6794, -64.2523, -19.4404, 0.81 ) }
    dend_47 { pt3dadd( -99.0464, -64.5439, -19.0452, 0.29 ) }
    dend_47 { pt3dadd( -99.6332, -65.005, -18.4563, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_47 { pt3dadd( -100.598, -65.6554, -17.6128, 0.22 ) }
    dend_47 { pt3dadd( -101.008, -65.8707, -17.3182, 0.52 ) }
    dend_47 { pt3dadd( -101.657, -66.1515, -16.9197, 0.29 ) }
    dend_47 { pt3dadd( -102.149, -66.3364, -16.6739, 0.66 ) }
    dend_47 { pt3dadd( -103.138, -66.6697, -16.2927, 0.29 ) }
    dend_47 { pt3dadd( -103.633, -66.8554, -16.1576, 0.96 ) }
    dend_47 { pt3dadd( -103.94, -66.9785, -16.0904, 0.96 ) }
    dend_47 { pt3dadd( -105.023, -67.4219, -15.8388, 0.29 ) }
    dend_47 { pt3dadd( -105.672, -67.6864, -15.643, 1.33 ) }
    dend_47 { pt3dadd( -106.3, -67.9204, -15.4128, 1.55 ) }
    dend_47 { pt3dadd( -107.36, -68.2428, -14.9711, 0.29 ) }
    dend_47 { pt3dadd( -107.893, -68.3665, -14.7216, 0.29 ) }
    dend_47 { pt3dadd( -108.621, -68.4998, -14.3343, 0.52 ) }
    dend_47 { pt3dadd( -109.542, -68.6178, -13.8387, 0.96 ) }
    dend_47 { pt3dadd( -110.173, -68.6717, -13.4632, 0.44 ) }
    dend_47 { pt3dadd( -110.955, -68.7119, -12.9334, 0.29 ) }
    dend_47 { pt3dadd( -111.942, -68.7063, -12.1773, 0.88 ) }
    dend_47 { pt3dadd( -112.585, -68.7297, -11.6404, 0.96 ) }
    // Section: dend_45, id: dend_45, parent: dend_39 (entry count 18/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -80.9479, -64.0584, -19.7334, 0.29 ) }
    dend_45 { pt3dadd( -81.5676, -64.7293, -20.0706, 0.29 ) }
    dend_45 { pt3dadd( -82.0387, -65.6236, -20.3339, 0.29 ) }
    dend_45 { pt3dadd( -82.3457, -66.4316, -20.4688, 0.81 ) }
    dend_45 { pt3dadd( -82.563, -67.1454, -20.5098, 0.81 ) }
    dend_45 { pt3dadd( -82.732, -67.9288, -20.446, 0.37 ) }
    dend_45 { pt3dadd( -82.966, -69.7577, -20.0329, 0.37 ) }
    dend_45 { pt3dadd( -82.9352, -70.6052, -19.6331, 0.59 ) }
    dend_45 { pt3dadd( -82.884, -71.1603, -19.2899, 0.88 ) }
    dend_45 { pt3dadd( -82.8088, -71.7779, -18.8528, 0.88 ) }
    dend_45 { pt3dadd( -82.6548, -72.7937, -18.0891, 1.03 ) }
    dend_45 { pt3dadd( -82.5005, -73.6723, -17.4297, 1.03 ) }
    dend_45 { pt3dadd( -82.2465, -74.8429, -16.6071, 0.59 ) }
    dend_45 { pt3dadd( -81.9921, -75.6801, -16.1121, 0.37 ) }
    dend_45 { pt3dadd( -81.5685, -76.7833, -15.631, 0.37 ) }
    dend_45 { pt3dadd( -81.1244, -77.8271, -15.3432, 0.66 ) }
    dend_45 { pt3dadd( -80.7717, -78.6525, -15.2388, 0.96 ) }
    dend_45 { pt3dadd( -80.131, -80.1685, -15.196, 1.03 ) }
    dend_45 { pt3dadd( -79.653, -81.2975, -15.2185, 0.44 ) }
    dend_45 { pt3dadd( -79.2728, -82.2038, -15.2166, 0.44 ) }
    dend_45 { pt3dadd( -79.04, -82.7724, -15.216, 0.66 ) }
    dend_45 { pt3dadd( -78.7853, -83.4021, -15.2006, 0.88 ) }
    dend_45 { pt3dadd( -78.3379, -84.1586, -15.0851, 0.88 ) }
    dend_45 { pt3dadd( -77.6193, -85.0401, -14.8686, 0.44 ) }
    dend_45 { pt3dadd( -76.8455, -85.7765, -14.6321, 0.74 ) }
    dend_45 { pt3dadd( -76.0931, -86.3613, -14.4461, 0.74 ) }
    dend_45 { pt3dadd( -75.1522, -86.9592, -14.2829, 1.03 ) }
    dend_45 { pt3dadd( -72.3271, -88.4222, -13.9379, 0.44 ) }
    dend_45 { pt3dadd( -71.5355, -88.7429, -13.8756, 0.44 ) }
    dend_45 { pt3dadd( -71.1731, -88.8499, -13.849, 0.74 ) }
    dend_45 { pt3dadd( -70.1336, -89.0816, -13.7585, 0.74 ) }
    dend_45 { pt3dadd( -69.0915, -89.2575, -13.6125, 0.66 ) }
    dend_45 { pt3dadd( -68.454, -89.3007, -13.4785, 0.52 ) }
    dend_45 { pt3dadd( -67.7605, -89.258, -13.2929, 0.52 ) }
    dend_45 { pt3dadd( -66.1656, -89.0077, -12.5391, 1.03 ) }
    dend_45 { pt3dadd( -65.1929, -88.6836, -11.7869, 0.22 ) }
    dend_45 { pt3dadd( -64.8452, -88.364, -11.1225, 0.22 ) }
    dend_45 { pt3dadd( -64.7714, -87.7555, -9.74315, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 56/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -80.9479, -64.0584, -19.7334, 0.29 ) }
    dend_40 { pt3dadd( -82.2879, -63.7783, -18.6629, 0.29 ) }
    dend_40 { pt3dadd( -82.8079, -63.7299, -18.1062, 0.29 ) }
    dend_40 { pt3dadd( -83.1196, -63.7305, -17.6235, 0.66 ) }
    dend_40 { pt3dadd( -83.4399, -63.7378, -17.0564, 0.66 ) }
    dend_40 { pt3dadd( -83.8291, -63.77, -16.334, 0.44 ) }
    dend_40 { pt3dadd( -84.211, -63.8015, -15.625, 0.29 ) }
    dend_40 { pt3dadd( -84.8987, -63.952, -14.215, 0.59 ) }
    dend_40 { pt3dadd( -85.3765, -64.1204, -12.981, 1.03 ) }
    dend_40 { pt3dadd( -85.6872, -64.2762, -11.9466, 1.4 ) }
    dend_40 { pt3dadd( -85.7849, -64.355, -11.4796, 1.4 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 67/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 67.07, -105.019, -90.657, 0.81 ) }
    dend_35 { pt3dadd( 67.8394, -105.712, -92.0899, 0.81 ) }
    dend_35 { pt3dadd( 68.2631, -106.099, -92.819, 1.11 ) }
    dend_35 { pt3dadd( 70.5723, -108.064, -96.4144, 0.44 ) }
    dend_35 { pt3dadd( 71.0073, -108.383, -97.024, 0.29 ) }
    dend_35 { pt3dadd( 71.5683, -108.736, -97.7332, 0.29 ) }
    dend_35 { pt3dadd( 72.5764, -109.316, -98.9451, 0.29 ) }
    dend_35 { pt3dadd( 73.3138, -109.614, -99.8089, 0.59 ) }
    dend_35 { pt3dadd( 73.7836, -109.787, -100.539, 0.74 ) }
    dend_35 { pt3dadd( 74.3433, -109.965, -101.431, 0.37 ) }
    dend_35 { pt3dadd( 74.9545, -110.091, -102.492, 0.81 ) }
    dend_35 { pt3dadd( 75.2736, -110.122, -103.056, 0.96 ) }
    dend_35 { pt3dadd( 76.5066, -110.159, -105.301, 1.4 ) }
    dend_35 { pt3dadd( 78.6984, -110.028, -110.037, 0.74 ) }
    dend_35 { pt3dadd( 79.2598, -109.955, -111.369, 0.29 ) }
    dend_35 { pt3dadd( 79.7724, -109.865, -112.643, 0.29 ) }
    dend_35 { pt3dadd( 80.0706, -109.796, -113.381, 0.66 ) }
    dend_35 { pt3dadd( 81.3142, -109.486, -116.258, 1.69 ) }
    dend_35 { pt3dadd( 83.6774, -108.887, -121.155, 1.18 ) }
    dend_35 { pt3dadd( 85.3738, -108.523, -124.29, 0.74 ) }
    dend_35 { pt3dadd( 86.2901, -108.418, -125.958, 1.47 ) }
    dend_35 { pt3dadd( 86.6432, -108.429, -126.569, 1.47 ) }
    dend_35 { pt3dadd( 87.5657, -108.596, -128.063, 0.29 ) }
    dend_35 { pt3dadd( 88.6586, -109.051, -129.497, 0.29 ) }
    dend_35 { pt3dadd( 89.7415, -109.904, -130.489, 1.11 ) }
    dend_35 { pt3dadd( 90.6862, -110.991, -131.22, 0.29 ) }
    dend_35 { pt3dadd( 91.2565, -111.835, -131.629, 1.25 ) }
    dend_35 { pt3dadd( 91.5687, -112.359, -131.857, 1.25 ) }
    dend_35 { pt3dadd( 92.2182, -113.556, -132.344, 0.15 ) }
    dend_35 { pt3dadd( 92.6325, -114.209, -132.632, 0.59 ) }
    dend_35 { pt3dadd( 92.9288, -114.521, -132.825, 0.59 ) }
    dend_35 { pt3dadd( 93.8118, -115.199, -133.405, 0.22 ) }
    dend_35 { pt3dadd( 94.8668, -115.85, -134.067, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_35 { pt3dadd( 95.5859, -116.221, -134.499, 1.84 ) }
    dend_35 { pt3dadd( 97.1457, -116.899, -135.388, 0.22 ) }
    dend_35 { pt3dadd( 98.1349, -117.307, -135.899, 0.59 ) }
    dend_35 { pt3dadd( 99.3262, -117.823, -136.463, 0.22 ) }
    dend_35 { pt3dadd( 100.252, -118.268, -136.866, 0.22 ) }
    dend_35 { pt3dadd( 101.213, -118.846, -137.229, 0.88 ) }
    dend_35 { pt3dadd( 101.735, -119.211, -137.403, 1.11 ) }
    dend_35 { pt3dadd( 103.166, -120.356, -137.826, 0.22 ) }
    dend_35 { pt3dadd( 103.906, -120.984, -138.014, 1.33 ) }
    dend_35 { pt3dadd( 104.305, -121.34, -138.117, 1.55 ) }
    dend_35 { pt3dadd( 105.38, -122.422, -138.404, 0.22 ) }
    dend_35 { pt3dadd( 106.056, -123.177, -138.589, 0.66 ) }
    dend_35 { pt3dadd( 106.393, -123.593, -138.693, 0.66 ) }
    dend_35 { pt3dadd( 107.057, -124.5, -138.943, 0.22 ) }
    dend_35 { pt3dadd( 107.65, -125.34, -139.199, 0.44 ) }
    dend_35 { pt3dadd( 108.125, -126.034, -139.435, 0.22 ) }
    dend_35 { pt3dadd( 108.582, -126.695, -139.693, 0.96 ) }
    dend_35 { pt3dadd( 108.942, -127.213, -139.861, 1.18 ) }
    dend_35 { pt3dadd( 110.144, -128.99, -140.321, 0.15 ) }
    dend_35 { pt3dadd( 110.639, -129.706, -140.465, 0.96 ) }
    dend_35 { pt3dadd( 111.004, -130.203, -140.595, 0.96 ) }
    dend_35 { pt3dadd( 111.665, -131.086, -140.868, 0.15 ) }
    dend_35 { pt3dadd( 112.979, -132.854, -141.488, 0.81 ) }
    dend_35 { pt3dadd( 113.654, -133.72, -141.876, 0.81 ) }
    dend_35 { pt3dadd( 114.569, -134.804, -142.478, 0.29 ) }
    dend_35 { pt3dadd( 116.09, -136.431, -143.587, 0.44 ) }
    dend_35 { pt3dadd( 116.697, -136.996, -144.051, 0.81 ) }
    dend_35 { pt3dadd( 117.181, -137.35, -144.429, 0.81 ) }
    dend_35 { pt3dadd( 118.39, -137.99, -145.459, 0.37 ) }
    dend_35 { pt3dadd( 119.224, -138.312, -146.129, 0.29 ) }
    dend_35 { pt3dadd( 120.143, -138.598, -146.788, 0.59 ) }
    dend_35 { pt3dadd( 121.084, -138.867, -147.379, 0.44 ) }
    dend_35 { pt3dadd( 122.294, -139.183, -148.111, 0.29 ) }
    dend_35 { pt3dadd( 123.81, -139.56, -148.971, 0.59 ) }
    dend_35 { pt3dadd( 124.747, -139.776, -149.541, 0.59 ) }
    dend_35 { pt3dadd( 125.569, -139.942, -150.093, 0.29 ) }
    dend_35 { pt3dadd( 126.924, -140.171, -151.04, 0.29 ) }
    dend_35 { pt3dadd( 127.74, -140.297, -151.634, 0.29 ) }
    dend_35 { pt3dadd( 128.443, -140.417, -152.104, 0.74 ) }
    dend_35 { pt3dadd( 130.181, -140.709, -153.136, 0.74 ) }
    dend_35 { pt3dadd( 130.96, -140.855, -153.589, 0.37 ) }
    dend_35 { pt3dadd( 131.456, -140.955, -153.868, 1.03 ) }
    dend_35 { pt3dadd( 132.168, -141.103, -154.252, 1.03 ) }
    dend_35 { pt3dadd( 133.611, -141.474, -155.042, 0.29 ) }
    dend_35 { pt3dadd( 135.729, -142.151, -156.162, 1.11 ) }
    dend_35 { pt3dadd( 137.31, -142.774, -156.899, 0.44 ) }
    dend_35 { pt3dadd( 137.783, -142.985, -157.14, 0.22 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 47/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 67.07, -105.019, -90.657, 0.52 ) }
    dend_34 { pt3dadd( 68.1284, -105.032, -90.5235, 0.52 ) }
    dend_34 { pt3dadd( 68.8143, -104.998, -90.4564, 0.52 ) }
    dend_34 { pt3dadd( 69.5179, -104.94, -90.3937, 0.81 ) }
    dend_34 { pt3dadd( 70.0536, -104.845, -90.3609, 0.81 ) }
    dend_34 { pt3dadd( 70.9511, -104.603, -90.3264, 0.29 ) }
    dend_34 { pt3dadd( 71.6289, -104.346, -90.3241, 0.29 ) }
    dend_34 { pt3dadd( 72.2019, -103.973, -90.3707, 0.88 ) }
    dend_34 { pt3dadd( 72.6605, -103.543, -90.433, 1.11 ) }
    dend_34 { pt3dadd( 73.201, -102.861, -90.5562, 0.44 ) }
    dend_34 { pt3dadd( 73.5891, -102.17, -90.703, 0.37 ) }
    dend_34 { pt3dadd( 73.9123, -101.359, -90.9011, 0.37 ) }
    dend_34 { pt3dadd( 74.2238, -100.268, -91.1501, 0.66 ) }
    dend_34 { pt3dadd( 74.3666, -99.5523, -91.2998, 1.03 ) }
    dend_34 { pt3dadd( 74.4635, -98.7982, -91.4156, 1.03 ) }
    dend_34 { pt3dadd( 74.5498, -97.6044, -91.4745, 0.52 ) }
    dend_34 { pt3dadd( 74.5698, -97.1598, -91.4501, 0.37 ) }
    dend_34 { pt3dadd( 74.6115, -96.4236, -91.3299, 1.03 ) }
    dend_34 { pt3dadd( 74.6578, -95.9845, -91.2086, 1.03 ) }
    dend_34 { pt3dadd( 74.8371, -95.0321, -90.8934, 0.29 ) }
    dend_34 { pt3dadd( 75.2454, -93.515, -90.2971, 0.22 ) }
    dend_34 { pt3dadd( 75.4348, -92.9784, -90.0583, 0.66 ) }
    dend_34 { pt3dadd( 75.6145, -92.523, -89.8618, 0.52 ) }
    dend_34 { pt3dadd( 75.8823, -91.8598, -89.6215, 0.37 ) }
    dend_34 { pt3dadd( 76.2695, -90.9595, -89.3504, 0.74 ) }
    dend_34 { pt3dadd( 76.5471, -90.3825, -89.2007, 0.22 ) }
    dend_34 { pt3dadd( 76.9113, -89.6818, -89.0225, 0.88 ) }
    dend_34 { pt3dadd( 77.0802, -89.326, -88.9203, 0.88 ) }
    dend_34 { pt3dadd( 77.503, -88.325, -88.6174, 0.29 ) }
    dend_34 { pt3dadd( 77.6833, -87.8106, -88.4609, 0.44 ) }
    dend_34 { pt3dadd( 77.8346, -87.2764, -88.2895, 0.29 ) }
    dend_34 { pt3dadd( 77.9727, -86.6755, -88.1364, 0.29 ) }
    dend_34 { pt3dadd( 78.1104, -85.7829, -87.9689, 0.81 ) }
    dend_34 { pt3dadd( 78.1912, -85.1316, -87.8588, 1.03 ) }
    dend_34 { pt3dadd( 78.2324, -84.6793, -87.7956, 1.03 ) }
    dend_34 { pt3dadd( 78.2573, -84.178, -87.7465, 0.22 ) }
    dend_34 { pt3dadd( 78.3016, -83.1873, -87.6504, 0.22 ) }
    dend_34 { pt3dadd( 78.374, -82.3871, -87.5211, 0.81 ) }
    dend_34 { pt3dadd( 78.4424, -81.9941, -87.4143, 0.81 ) }
    dend_34 { pt3dadd( 78.6007, -81.4366, -87.1591, 0.44 ) }
    dend_34 { pt3dadd( 78.814, -80.9007, -86.8369, 0.44 ) }
    dend_34 { pt3dadd( 79.1546, -80.1712, -86.3141, 0.96 ) }
    dend_34 { pt3dadd( 79.5063, -79.4625, -85.7213, 0.96 ) }
    dend_34 { pt3dadd( 79.7352, -78.9914, -85.3218, 1.11 ) }
    dend_34 { pt3dadd( 80.0525, -78.3134, -84.7782, 0.29 ) }
    dend_34 { pt3dadd( 80.3059, -77.7801, -84.3643, 0.81 ) }
    dend_34 { pt3dadd( 80.5987, -77.1977, -83.9426, 0.81 ) }
    dend_34 { pt3dadd( 81.0274, -76.3819, -83.4542, 0.44 ) }
    dend_34 { pt3dadd( 81.4104, -75.5939, -83.0734, 1.11 ) }
    dend_34 { pt3dadd( 81.6798, -75.0313, -82.836, 1.11 ) }
    dend_34 { pt3dadd( 81.8762, -74.6256, -82.6866, 0.81 ) }
    dend_34 { pt3dadd( 82.1145, -74.2114, -82.5383, 0.52 ) }
    dend_34 { pt3dadd( 82.7133, -73.4082, -82.2743, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_34 { pt3dadd( 83.3836, -72.7523, -82.1069, 0.22 ) }
    dend_34 { pt3dadd( 83.9316, -72.4, -82.0572, 0.59 ) }
    dend_34 { pt3dadd( 84.1478, -72.3148, -82.0671, 0.59 ) }
    dend_34 { pt3dadd( 85.4064, -72.005, -82.2574, 0.52 ) }
    dend_34 { pt3dadd( 86.145, -71.9127, -82.4124, 0.29 ) }
    dend_34 { pt3dadd( 87.1215, -71.866, -82.6501, 0.52 ) }
    dend_34 { pt3dadd( 88.0708, -71.8316, -82.9162, 0.44 ) }
    dend_34 { pt3dadd( 88.7077, -71.7947, -83.1169, 0.81 ) }
    dend_34 { pt3dadd( 89.2462, -71.7313, -83.2912, 1.03 ) }
    dend_34 { pt3dadd( 90.2449, -71.5137, -83.6017, 0.29 ) }
    dend_34 { pt3dadd( 90.7496, -71.3636, -83.7117, 0.29 ) }
    dend_34 { pt3dadd( 91.3327, -71.1743, -83.7829, 0.81 ) }
    dend_34 { pt3dadd( 91.7413, -71.0507, -83.8027, 0.81 ) }
    dend_34 { pt3dadd( 92.5634, -70.8574, -83.8041, 0.52 ) }
    dend_34 { pt3dadd( 93.6137, -70.7397, -83.7495, 0.15 ) }
    dend_34 { pt3dadd( 94.4289, -70.7968, -83.6546, 0.44 ) }
    dend_34 { pt3dadd( 94.9705, -70.9288, -83.5151, 0.74 ) }
    dend_34 { pt3dadd( 95.3718, -71.0562, -83.3681, 1.03 ) }
    dend_34 { pt3dadd( 95.791, -71.1907, -83.1842, 1.03 ) }
    dend_34 { pt3dadd( 96.3988, -71.3637, -82.8654, 0.88 ) }
    dend_34 { pt3dadd( 97.1796, -71.4772, -82.4083, 0.37 ) }
    dend_34 { pt3dadd( 98.3824, -71.3396, -81.7374, 0.81 ) }
    dend_34 { pt3dadd( 99.0199, -71.0952, -81.4121, 0.81 ) }
    dend_34 { pt3dadd( 99.6305, -70.7063, -81.0692, 0.29 ) }
    dend_34 { pt3dadd( 100.05, -70.3531, -80.8042, 0.29 ) }
    dend_34 { pt3dadd( 100.624, -69.7785, -80.423, 0.15 ) }
    dend_34 { pt3dadd( 101.097, -69.3117, -80.1399, 1.03 ) }
    dend_34 { pt3dadd( 101.394, -69.0574, -79.9779, 1.03 ) }
    dend_34 { pt3dadd( 102.639, -68.2299, -79.3203, 0.52 ) }
    dend_34 { pt3dadd( 103.338, -67.8859, -78.9649, 0.52 ) }
    dend_34 { pt3dadd( 104.122, -67.6175, -78.5891, 0.44 ) }
    dend_34 { pt3dadd( 105.468, -67.3079, -77.9915, 0.88 ) }
    dend_34 { pt3dadd( 106.293, -67.1652, -77.6665, 0.74 ) }
    dend_34 { pt3dadd( 107.095, -67.0624, -77.4227, 0.44 ) }
    dend_34 { pt3dadd( 107.635, -67.0253, -77.3202, 0.37 ) }
    dend_34 { pt3dadd( 108.346, -67.0063, -77.2308, 0.22 ) }
    dend_34 { pt3dadd( 108.953, -67.0261, -77.1903, 0.22 ) }
    dend_34 { pt3dadd( 109.761, -67.0515, -77.1703, 0.44 ) }
    dend_34 { pt3dadd( 110.273, -67.0511, -77.1847, 0.22 ) }
    dend_34 { pt3dadd( 110.951, -67.0306, -77.2236, 0.22 ) }
    dend_34 { pt3dadd( 111.623, -67.0097, -77.2933, 0.44 ) }
    dend_34 { pt3dadd( 112.714, -67.0382, -77.4583, 0.29 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 42/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -16.3754, 490.018, -22.1692, 0.74 ) }
    dend_19 { pt3dadd( -16.2494, 491.309, -22.4237, 0.74 ) }
    dend_19 { pt3dadd( -16.2073, 491.851, -22.5142, 0.52 ) }
    dend_19 { pt3dadd( -16.1659, 492.384, -22.5825, 0.37 ) }
    dend_19 { pt3dadd( -16.1125, 493.23, -22.6738, 0.37 ) }
    dend_19 { pt3dadd( -16.0947, 493.548, -22.7033, 0.59 ) }
    dend_19 { pt3dadd( -16.0535, 494.224, -22.7542, 0.74 ) }
    dend_19 { pt3dadd( -16.0332, 494.649, -22.7659, 0.74 ) }
    dend_19 { pt3dadd( -15.9779, 495.459, -22.8006, 0.37 ) }
    dend_19 { pt3dadd( -15.9344, 496.051, -22.832, 0.37 ) }
    dend_19 { pt3dadd( -15.861, 497.075, -22.8892, 0.81 ) }
    dend_19 { pt3dadd( -15.814, 497.762, -22.9294, 0.96 ) }
    dend_19 { pt3dadd( -15.7642, 498.461, -22.9668, 0.96 ) }
    dend_19 { pt3dadd( -15.6993, 499.375, -23.0159, 0.66 ) }
    dend_19 { pt3dadd( -15.6651, 499.91, -23.0462, 0.44 ) }
    dend_19 { pt3dadd( -15.6391, 500.326, -23.0646, 0.44 ) }
    dend_19 { pt3dadd( -15.6038, 501.108, -23.0952, 0.44 ) }
    dend_19 { pt3dadd( -15.5878, 501.797, -23.119, 0.81 ) }
    dend_19 { pt3dadd( -15.5905, 502.272, -23.1354, 1.03 ) }
    dend_19 { pt3dadd( -15.6032, 502.767, -23.1527, 1.03 ) }
    dend_19 { pt3dadd( -15.6378, 503.598, -23.196, 0.74 ) }
    dend_19 { pt3dadd( -15.6782, 504.246, -23.241, 0.74 ) }
    dend_19 { pt3dadd( -15.7658, 505.283, -23.3217, 0.44 ) }
    dend_19 { pt3dadd( -15.8776, 506.307, -23.4166, 0.44 ) }
    dend_19 { pt3dadd( -15.9307, 506.802, -23.473, 1.03 ) }
    dend_19 { pt3dadd( -15.9767, 507.279, -23.5364, 1.18 ) }
    dend_19 { pt3dadd( -16.0338, 508.05, -23.6665, 0.52 ) }
    dend_19 { pt3dadd( -16.0612, 508.794, -23.8275, 0.74 ) }
    dend_19 { pt3dadd( -16.0677, 509.547, -24.0338, 1.11 ) }
    dend_19 { pt3dadd( -16.0575, 510.243, -24.2494, 0.44 ) }
    dend_19 { pt3dadd( -16.0442, 510.862, -24.4578, 0.37 ) }
    dend_19 { pt3dadd( -16.0194, 511.525, -24.6862, 0.37 ) }
    dend_19 { pt3dadd( -15.971, 512.456, -25.005, 0.59 ) }
    dend_19 { pt3dadd( -15.9286, 513.134, -25.2238, 0.96 ) }
    dend_19 { pt3dadd( -15.8971, 513.616, -25.3551, 1.18 ) }
    dend_19 { pt3dadd( -15.8715, 514.059, -25.4467, 1.18 ) }
    dend_19 { pt3dadd( -15.8057, 515.044, -25.5968, 0.44 ) }
    dend_19 { pt3dadd( -15.7541, 515.728, -25.6485, 0.37 ) }
    dend_19 { pt3dadd( -15.7089, 516.216, -25.655, 0.59 ) }
    dend_19 { pt3dadd( -15.6345, 516.825, -25.6509, 0.44 ) }
    dend_19 { pt3dadd( -15.5299, 517.567, -25.6607, 0.44 ) }
    dend_19 { pt3dadd( -15.4468, 518.117, -25.6786, 0.74 ) }
    dend_19 { pt3dadd( -15.3872, 518.528, -25.7016, 0.74 ) }
    dend_19 { pt3dadd( -15.3458, 518.843, -25.7298, 0.74 ) }
    dend_19 { pt3dadd( -15.2768, 519.479, -25.806, 0.37 ) }
    dend_19 { pt3dadd( -15.2104, 520.261, -25.9164, 1.18 ) }
    dend_19 { pt3dadd( -15.1906, 520.551, -25.9577, 1.18 ) }
    dend_19 { pt3dadd( -15.1465, 521.18, -26.028, 0.88 ) }
    dend_19 { pt3dadd( -15.0927, 521.813, -26.0774, 0.59 ) }
    dend_19 { pt3dadd( -15.0146, 522.638, -26.1097, 0.88 ) }
    dend_19 { pt3dadd( -14.962, 523.239, -26.1149, 1.11 ) }
    dend_19 { pt3dadd( -14.908, 523.849, -26.1012, 1.11 ) }
    dend_19 { pt3dadd( -14.8267, 524.673, -26.0752, 0.52 ) }
    dend_19 { pt3dadd( -14.7247, 525.491, -26.0386, 0.44 ) }
    dend_19 { pt3dadd( -14.652, 525.951, -26.0106, 0.44 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 97/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -16.3754, 490.018, -22.1692, 0.29 ) }
    dend_18 { pt3dadd( -16.6153, 491.0, -21.6327, 0.29 ) }
    dend_18 { pt3dadd( -16.8392, 492.077, -21.109, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_18 { pt3dadd( -16.9655, 492.701, -20.8089, 0.66 ) }
    dend_18 { pt3dadd( -17.0745, 493.261, -20.5336, 0.37 ) }
    dend_18 { pt3dadd( -17.2621, 494.213, -20.048, 0.22 ) }
    dend_18 { pt3dadd( -17.3216, 494.509, -19.8917, 0.66 ) }
    dend_18 { pt3dadd( -17.3835, 494.896, -19.682, 0.66 ) }
    dend_18 { pt3dadd( -17.5502, 495.963, -19.1456, 0.37 ) }
    dend_18 { pt3dadd( -17.6652, 496.609, -18.8358, 0.37 ) }
    dend_18 { pt3dadd( -17.8359, 497.481, -18.4523, 0.59 ) }
    dend_18 { pt3dadd( -17.908, 497.891, -18.2903, 0.37 ) }
    dend_18 { pt3dadd( -18.0134, 498.523, -18.0579, 0.29 ) }
    dend_18 { pt3dadd( -18.1304, 499.235, -17.8297, 0.74 ) }
    dend_18 { pt3dadd( -18.1937, 499.63, -17.7281, 0.96 ) }
    dend_18 { pt3dadd( -18.2804, 500.151, -17.6011, 0.52 ) }
    dend_18 { pt3dadd( -18.4173, 500.885, -17.4296, 0.44 ) }
    dend_18 { pt3dadd( -18.5455, 501.565, -17.2517, 0.29 ) }
    dend_18 { pt3dadd( -18.7123, 502.465, -16.9682, 0.29 ) }
    dend_18 { pt3dadd( -18.8214, 503.029, -16.7506, 0.66 ) }
    dend_18 { pt3dadd( -18.9286, 503.622, -16.4954, 0.81 ) }
    dend_18 { pt3dadd( -19.0788, 504.616, -16.0395, 0.29 ) }
    dend_18 { pt3dadd( -19.22, 505.87, -15.4364, 0.29 ) }
    dend_18 { pt3dadd( -19.278, 506.739, -15.009, 0.29 ) }
    dend_18 { pt3dadd( -19.2928, 507.496, -14.651, 0.88 ) }
    dend_18 { pt3dadd( -19.2848, 508.074, -14.4024, 0.88 ) }
    dend_18 { pt3dadd( -19.2568, 508.76, -14.134, 0.29 ) }
    dend_18 { pt3dadd( -19.1763, 509.618, -13.8568, 0.29 ) }
    dend_18 { pt3dadd( -19.1439, 509.889, -13.7934, 0.52 ) }
    dend_18 { pt3dadd( -19.0, 510.855, -13.627, 0.22 ) }
    dend_18 { pt3dadd( -18.8793, 511.438, -13.553, 0.52 ) }
    dend_18 { pt3dadd( -18.7424, 511.977, -13.4885, 0.52 ) }
    dend_18 { pt3dadd( -18.3018, 513.393, -13.317, 0.44 ) }
    dend_18 { pt3dadd( -18.0261, 514.148, -13.2279, 0.96 ) }
    dend_18 { pt3dadd( -17.8421, 514.591, -13.1752, 0.96 ) }
    dend_18 { pt3dadd( -17.3869, 515.577, -13.0456, 0.29 ) }
    dend_18 { pt3dadd( -16.9853, 516.383, -12.9346, 0.22 ) }
    dend_18 { pt3dadd( -16.6099, 517.108, -12.8248, 0.81 ) }
    dend_18 { pt3dadd( -16.1662, 517.951, -12.6722, 0.29 ) }
    dend_18 { pt3dadd( -15.8235, 518.611, -12.5405, 0.29 ) }
    dend_18 { pt3dadd( -15.5189, 519.221, -12.4041, 0.66 ) }
    dend_18 { pt3dadd( -15.3991, 519.473, -12.335, 0.81 ) }
    dend_18 { pt3dadd( -15.0504, 520.242, -12.0954, 0.29 ) }
    dend_18 { pt3dadd( -14.8483, 520.727, -11.9275, 0.29 ) }
    dend_18 { pt3dadd( -14.7132, 521.084, -11.7931, 0.81 ) }
    dend_18 { pt3dadd( -14.5841, 521.467, -11.6496, 0.81 ) }
    dend_18 { pt3dadd( -14.3491, 522.254, -11.3884, 0.29 ) }
    dend_18 { pt3dadd( -14.0953, 523.232, -11.103, 0.29 ) }
    dend_18 { pt3dadd( -13.9321, 523.958, -10.9175, 0.88 ) }
    dend_18 { pt3dadd( -13.8519, 524.347, -10.831, 1.03 ) }
    dend_18 { pt3dadd( -13.7291, 524.955, -10.7085, 0.74 ) }
    dend_18 { pt3dadd( -13.3923, 526.674, -10.3917, 0.22 ) }
    dend_18 { pt3dadd( -13.258, 527.336, -10.2775, 0.96 ) }
    dend_18 { pt3dadd( -13.1368, 527.862, -10.1776, 1.11 ) }
    dend_18 { pt3dadd( -12.8736, 528.964, -9.95337, 0.29 ) }
    dend_18 { pt3dadd( -12.7239, 529.568, -9.82113, 0.59 ) }
    dend_18 { pt3dadd( -12.6234, 530.012, -9.70466, 0.59 ) }
    dend_18 { pt3dadd( -12.4808, 530.698, -9.49088, 0.59 ) }
    dend_18 { pt3dadd( -12.3197, 531.567, -9.17812, 0.29 ) }
    dend_18 { pt3dadd( -12.2131, 532.198, -8.92244, 0.44 ) }
    dend_18 { pt3dadd( -12.1133, 533.181, -8.46984, 0.29 ) }
    dend_18 { pt3dadd( -12.0631, 534.209, -7.97122, 0.81 ) }
    dend_18 { pt3dadd( -12.0557, 534.496, -7.8249, 0.81 ) }
    dend_18 { pt3dadd( -12.0557, 534.869, -7.63117, 1.03 ) }
    dend_18 { pt3dadd( -12.0568, 535.453, -7.32453, 0.37 ) }
    dend_18 { pt3dadd( -12.0388, 536.454, -6.78225, 0.29 ) }
    dend_18 { pt3dadd( -12.0144, 537.008, -6.50045, 0.29 ) }
    dend_18 { pt3dadd( -11.945, 538.076, -6.01859, 0.29 ) }
    dend_18 { pt3dadd( -11.9052, 538.624, -5.81693, 0.81 ) }
    dend_18 { pt3dadd( -11.8522, 539.702, -5.48053, 0.37 ) }
    dend_18 { pt3dadd( -11.8326, 540.56, -5.20178, 0.29 ) }
    dend_18 { pt3dadd( -11.7965, 541.404, -4.89996, 1.11 ) }
    dend_18 { pt3dadd( -11.7963, 541.94, -4.67807, 0.66 ) }
    dend_18 { pt3dadd( -11.8981, 542.969, -4.17144, 0.29 ) }
    dend_18 { pt3dadd( -12.0754, 543.886, -3.61356, 0.29 ) }
    dend_18 { pt3dadd( -12.3553, 544.852, -2.87058, 0.29 ) }
    dend_18 { pt3dadd( -12.5205, 545.384, -2.34948, 0.29 ) }
    dend_18 { pt3dadd( -12.6706, 545.82, -1.86721, 0.29 ) }
    dend_18 { pt3dadd( -12.911, 546.427, -1.16386, 0.81 ) }
    dend_18 { pt3dadd( -13.0836, 546.767, -0.748553, 1.11 ) }
    dend_18 { pt3dadd( -13.301, 547.212, -0.252998, 0.88 ) }
    dend_18 { pt3dadd( -13.8756, 548.552, 0.998503, 0.29 ) }
    dend_18 { pt3dadd( -14.0747, 549.097, 1.46677, 0.29 ) }
    dend_18 { pt3dadd( -14.2428, 549.696, 1.93852, 0.74 ) }
    dend_18 { pt3dadd( -14.4676, 550.614, 2.57426, 0.29 ) }
    dend_18 { pt3dadd( -14.6703, 551.394, 3.06061, 0.29 ) }
    dend_18 { pt3dadd( -14.9009, 552.271, 3.55405, 0.66 ) }
    dend_18 { pt3dadd( -14.9888, 552.674, 3.74218, 0.88 ) }
    dend_18 { pt3dadd( -15.0746, 553.597, 4.15656, 0.22 ) }
    dend_18 { pt3dadd( -15.0585, 554.219, 4.40681, 0.37 ) }
    dend_18 { pt3dadd( -15.0538, 554.281, 4.42376, 0.37 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 88/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -85.7849, -64.355, -11.4796, 0.22 ) }
    dend_44 { pt3dadd( -86.7553, -65.2168, -10.621, 0.22 ) }
    dend_44 { pt3dadd( -87.1622, -65.6032, -10.2918, 0.22 ) }
    dend_44 { pt3dadd( -87.7541, -66.2016, -9.85884, 0.37 ) }
    dend_44 { pt3dadd( -88.3524, -66.8323, -9.45458, 0.22 ) }
    dend_44 { pt3dadd( -89.1033, -67.6502, -8.9815, 0.22 ) }
    dend_44 { pt3dadd( -89.8917, -68.5215, -8.50208, 0.81 ) }
    dend_44 { pt3dadd( -90.2731, -68.9476, -8.29979, 0.81 ) }
    dend_44 { pt3dadd( -90.7896, -69.533, -8.06538, 0.52 ) }
    dend_44 { pt3dadd( -91.2539, -70.062, -7.89134, 0.29 ) }
    dend_44 { pt3dadd( -91.6464, -70.5054, -7.75962, 0.66 ) }
    dend_44 { pt3dadd( -92.2367, -71.1209, -7.57798, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_44 { pt3dadd( -92.7213, -71.5784, -7.42088, 0.29 ) }
    dend_44 { pt3dadd( -93.4283, -72.1875, -7.1947, 0.29 ) }
    dend_44 { pt3dadd( -94.1547, -72.7526, -6.95786, 0.96 ) }
    dend_44 { pt3dadd( -94.9156, -73.2452, -6.75267, 1.03 ) }
    dend_44 { pt3dadd( -96.0329, -73.8883, -6.4999, 0.22 ) }
    dend_44 { pt3dadd( -96.3311, -74.0466, -6.4449, 0.22 ) }
    dend_44 { pt3dadd( -96.9052, -74.3462, -6.35946, 0.88 ) }
    dend_44 { pt3dadd( -97.407, -74.6133, -6.32207, 0.88 ) }
    dend_44 { pt3dadd( -98.806, -75.3448, -6.32544, 0.22 ) }
    dend_44 { pt3dadd( -99.5694, -75.7186, -6.38488, 0.22 ) }
    dend_44 { pt3dadd( -100.245, -76.0597, -6.48256, 0.22 ) }
    dend_44 { pt3dadd( -100.831, -76.371, -6.61114, 0.88 ) }
    dend_44 { pt3dadd( -101.478, -76.7415, -6.84517, 1.11 ) }
    dend_44 { pt3dadd( -102.218, -77.1833, -7.25756, 0.88 ) }
    dend_44 { pt3dadd( -103.166, -77.8009, -8.05098, 0.29 ) }
    dend_44 { pt3dadd( -103.818, -78.2138, -8.79398, 1.18 ) }
    dend_44 { pt3dadd( -104.144, -78.4124, -9.21588, 1.33 ) }
    dend_44 { pt3dadd( -104.872, -78.8312, -10.2713, 0.29 ) }
    dend_44 { pt3dadd( -105.348, -79.1127, -11.1125, 0.22 ) }
    dend_44 { pt3dadd( -105.651, -79.3625, -11.8996, 0.22 ) }
    dend_44 { pt3dadd( -105.873, -79.6631, -12.9802, 0.96 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 21/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -85.7849, -64.355, -11.4796, 0.66 ) }
    dend_41 { pt3dadd( -84.7165, -66.3084, -8.98272, 0.66 ) }
    dend_41 { pt3dadd( -84.3539, -66.8778, -8.14156, 0.66 ) }
    dend_41 { pt3dadd( -83.8925, -67.5007, -7.0581, 0.81 ) }
    dend_41 { pt3dadd( -83.5175, -68.0008, -6.0947, 0.81 ) }
    dend_41 { pt3dadd( -82.7065, -69.2058, -3.74893, 0.96 ) }
    dend_41 { pt3dadd( -82.145, -70.1598, -1.90724, 1.33 ) }
    dend_41 { pt3dadd( -81.9013, -70.684, -0.73896, 0.44 ) }
    dend_41 { pt3dadd( -81.7494, -71.1117, 0.304661, 0.44 ) }
    dend_41 { pt3dadd( -81.7378, -71.4559, 1.26453, 0.37 ) }
    dend_41 { pt3dadd( -82.0555, -71.8628, 2.67146, 0.37 ) }
    dend_41 { pt3dadd( -82.3734, -72.0035, 3.19447, 0.37 ) }
    dend_41 { pt3dadd( -83.0965, -72.2449, 4.02614, 0.29 ) }
    dend_41 { pt3dadd( -83.8932, -72.537, 4.85536, 0.66 ) }
    dend_41 { pt3dadd( -84.4192, -72.804, 5.49306, 0.88 ) }
    dend_41 { pt3dadd( -84.9485, -73.1806, 6.26029, 0.88 ) }
    dend_41 { pt3dadd( -85.5351, -73.8571, 7.31781, 0.66 ) }
    dend_41 { pt3dadd( -85.7371, -74.4014, 7.92978, 0.66 ) }
    dend_41 { pt3dadd( -85.8347, -75.2327, 8.69303, 0.81 ) }
    dend_41 { pt3dadd( -85.7797, -77.4872, 10.6033, 0.81 ) }
    dend_41 { pt3dadd( -85.6285, -78.497, 11.4703, 0.59 ) }
    dend_41 { pt3dadd( -85.3379, -79.5947, 12.4868, 0.44 ) }
    dend_41 { pt3dadd( -84.932, -80.6744, 13.6505, 0.44 ) }
    dend_41 { pt3dadd( -84.6936, -81.2202, 14.3703, 0.37 ) }
    dend_41 { pt3dadd( -84.486, -81.6937, 15.2595, 0.37 ) }
    dend_41 { pt3dadd( -84.4042, -81.9906, 16.4901, 0.66 ) }
    dend_41 { pt3dadd( -84.4877, -82.064, 17.5079, 0.66 ) }
    dend_41 { pt3dadd( -84.8156, -82.0335, 18.6504, 0.44 ) }
    dend_41 { pt3dadd( -85.264, -82.0204, 19.4514, 0.66 ) }
    dend_41 { pt3dadd( -85.8017, -82.0925, 20.0592, 0.66 ) }
    dend_41 { pt3dadd( -86.6618, -82.3314, 20.7829, 0.66 ) }
    dend_41 { pt3dadd( -88.6637, -83.1197, 22.2011, 0.37 ) }
    dend_41 { pt3dadd( -89.4108, -83.488, 22.7008, 0.66 ) }
    dend_41 { pt3dadd( -90.4644, -84.09, 23.3739, 0.66 ) }
    dend_41 { pt3dadd( -91.2818, -84.6514, 23.9013, 0.44 ) }
    dend_41 { pt3dadd( -91.9867, -85.2342, 24.3787, 0.37 ) }
    dend_41 { pt3dadd( -92.444, -85.7533, 24.7644, 0.59 ) }
    dend_41 { pt3dadd( -92.9909, -86.6506, 25.4149, 0.44 ) }
    dend_41 { pt3dadd( -93.3371, -87.3008, 25.875, 0.37 ) }
    dend_41 { pt3dadd( -93.7337, -88.1863, 26.4992, 0.37 ) }
    dend_41 { pt3dadd( -94.2053, -89.358, 27.2948, 0.37 ) }
    dend_41 { pt3dadd( -94.7818, -90.9245, 28.3363, 0.37 ) }
    dend_41 { pt3dadd( -95.1548, -92.024, 29.0704, 0.29 ) }
    dend_41 { pt3dadd( -95.353, -92.606, 29.479, 0.52 ) }
    dend_41 { pt3dadd( -95.7923, -93.7741, 30.4175, 0.29 ) }
    dend_41 { pt3dadd( -96.1454, -94.7143, 31.2386, 0.37 ) }
    dend_41 { pt3dadd( -96.3843, -95.2805, 31.7895, 0.37 ) }
    dend_41 { pt3dadd( -96.7164, -95.7965, 32.3812, 0.96 ) }
    dend_41 { pt3dadd( -97.2047, -96.3648, 33.1782, 0.66 ) }
    dend_41 { pt3dadd( -97.5432, -96.6799, 33.7338, 0.44 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 71/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -14.652, 525.951, -26.0106, 0.52 ) }
    dend_21 { pt3dadd( -14.5891, 527.427, -26.0707, 0.52 ) }
    dend_21 { pt3dadd( -14.5632, 528.568, -26.12, 1.03 ) }
    dend_21 { pt3dadd( -14.5535, 529.49, -26.162, 1.03 ) }
    dend_21 { pt3dadd( -14.5446, 531.273, -26.2617, 1.11 ) }
    dend_21 { pt3dadd( -14.5329, 533.332, -26.3578, 0.29 ) }
    dend_21 { pt3dadd( -14.5063, 535.238, -26.4474, 0.29 ) }
    dend_21 { pt3dadd( -14.4536, 537.024, -26.5473, 0.96 ) }
    dend_21 { pt3dadd( -14.4333, 537.841, -26.5801, 1.11 ) }
    dend_21 { pt3dadd( -14.4097, 539.705, -26.6228, 0.66 ) }
    dend_21 { pt3dadd( -14.4332, 541.787, -26.6446, 0.52 ) }
    dend_21 { pt3dadd( -14.5064, 543.633, -26.6432, 0.52 ) }
    dend_21 { pt3dadd( -14.6177, 545.55, -26.6106, 0.52 ) }
    dend_21 { pt3dadd( -14.7416, 546.987, -26.5617, 0.81 ) }
    dend_21 { pt3dadd( -14.9948, 549.337, -26.4665, 1.11 ) }
    dend_21 { pt3dadd( -15.1603, 550.639, -26.4017, 1.33 ) }
    dend_21 { pt3dadd( -15.6262, 553.916, -26.2526, 0.44 ) }
    dend_21 { pt3dadd( -15.8519, 555.428, -26.1833, 0.44 ) }
    dend_21 { pt3dadd( -16.2109, 558.047, -26.0736, 0.37 ) }
    dend_21 { pt3dadd( -16.3924, 559.625, -26.0131, 0.96 ) }
    dend_21 { pt3dadd( -16.5276, 561.299, -25.9599, 1.25 ) }
    dend_21 { pt3dadd( -16.5751, 562.413, -25.9274, 1.25 ) }
    dend_21 { pt3dadd( -16.5699, 563.628, -25.888, 1.03 ) }
    dend_21 { pt3dadd( -16.5369, 564.567, -25.8541, 0.74 ) }
    dend_21 { pt3dadd( -16.4641, 565.916, -25.7975, 0.52 ) }
    dend_21 { pt3dadd( -16.4184, 567.155, -25.7373, 0.37 ) }
    dend_21 { pt3dadd( -16.3874, 568.469, -25.6677, 0.37 ) }
    dend_21 { pt3dadd( -16.3843, 570.165, -25.5644, 0.37 ) }
    dend_21 { pt3dadd( -16.4222, 572.322, -25.4398, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_21 { pt3dadd( -16.4669, 573.517, -25.3792, 0.66 ) }
    dend_21 { pt3dadd( -16.5433, 575.523, -25.2986, 0.66 ) }
    dend_21 { pt3dadd( -16.6177, 577.25, -25.2357, 0.29 ) }
    dend_21 { pt3dadd( -16.6767, 578.794, -25.195, 0.29 ) }
    dend_21 { pt3dadd( -16.7187, 579.878, -25.1757, 0.81 ) }
    dend_21 { pt3dadd( -16.784, 581.791, -25.1627, 1.03 ) }
    dend_21 { pt3dadd( -16.8365, 583.337, -25.1635, 1.18 ) }
    dend_21 { pt3dadd( -16.8707, 584.511, -25.1735, 0.81 ) }
    dend_21 { pt3dadd( -16.9157, 586.125, -25.2101, 0.29 ) }
    dend_21 { pt3dadd( -16.9559, 587.553, -25.2458, 0.29 ) }
    dend_21 { pt3dadd( -16.9935, 589.009, -25.2809, 0.96 ) }
    dend_21 { pt3dadd( -17.042, 590.665, -25.3206, 1.11 ) }
    dend_21 { pt3dadd( -17.072, 591.907, -25.3347, 1.11 ) }
    dend_21 { pt3dadd( -17.0904, 593.951, -25.3408, 0.74 ) }
    dend_21 { pt3dadd( -17.0939, 595.716, -25.3188, 0.44 ) }
    dend_21 { pt3dadd( -17.0797, 597.491, -25.265, 0.88 ) }
    dend_21 { pt3dadd( -17.0669, 598.773, -25.2101, 0.88 ) }
    dend_21 { pt3dadd( -17.0305, 600.596, -25.1198, 0.52 ) }
    dend_21 { pt3dadd( -16.97, 602.52, -25.0135, 0.52 ) }
    dend_21 { pt3dadd( -16.8891, 604.45, -24.8959, 0.52 ) }
    dend_21 { pt3dadd( -16.8179, 606.478, -24.7878, 0.52 ) }
    dend_21 { pt3dadd( -16.7909, 608.14, -24.7174, 1.11 ) }
    dend_21 { pt3dadd( -16.7846, 608.99, -24.6911, 1.11 ) }
    dend_21 { pt3dadd( -16.8038, 610.587, -24.6622, 0.81 ) }
    dend_21 { pt3dadd( -16.8419, 612.746, -24.6385, 0.29 ) }
    dend_21 { pt3dadd( -16.8899, 614.793, -24.6383, 0.29 ) }
    dend_21 { pt3dadd( -16.9309, 615.984, -24.647, 0.96 ) }
    dend_21 { pt3dadd( -17.0037, 617.334, -24.6533, 1.11 ) }
    dend_21 { pt3dadd( -17.1322, 618.752, -24.662, 1.4 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 29/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -14.652, 525.951, -26.0106, 0.44 ) }
    dend_20 { pt3dadd( -14.2417, 525.42, -25.5769, 0.44 ) }
    dend_20 { pt3dadd( -13.9566, 525.051, -25.2756, 0.37 ) }
    dend_20 { pt3dadd( -13.498, 524.458, -24.7909, 0.29 ) }
    dend_20 { pt3dadd( -13.2788, 524.174, -24.5593, 0.29 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 34/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -97.5432, -96.6799, 33.7338, 0.22 ) }
    dend_43 { pt3dadd( -96.873, -95.7647, 33.9927, 0.22 ) }
    dend_43 { pt3dadd( -96.3977, -95.1156, 34.1763, 0.22 ) }
    dend_43 { pt3dadd( -95.9264, -94.4719, 34.3584, 0.59 ) }
    dend_43 { pt3dadd( -95.6071, -94.0359, 34.4818, 0.59 ) }
    dend_43 { pt3dadd( -95.1883, -93.464, 34.6436, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 40/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -97.5432, -96.6799, 33.7338, 0.37 ) }
    dend_42 { pt3dadd( -97.8288, -96.8732, 35.071, 0.37 ) }
    dend_42 { pt3dadd( -98.0913, -97.0616, 36.1033, 0.37 ) }
    dend_42 { pt3dadd( -98.3906, -97.284, 37.1172, 0.22 ) }
    dend_42 { pt3dadd( -98.7114, -97.5223, 38.2035, 0.22 ) }
    dend_42 { pt3dadd( -98.9421, -97.6936, 38.9845, 0.22 ) }
    dend_42 { pt3dadd( -99.1895, -97.8774, 39.8224, 0.22 ) }
    dend_42 { pt3dadd( -99.2832, -97.9527, 40.0893, 0.52 ) }
    dend_42 { pt3dadd( -99.5245, -98.1553, 40.6386, 0.66 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 49/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -17.1322, 618.752, -24.662, 0.22 ) }
    dend_23 { pt3dadd( -15.9754, 621.24, -26.4668, 0.22 ) }
    dend_23 { pt3dadd( -15.8366, 621.684, -26.8178, 0.29 ) }
    dend_23 { pt3dadd( -15.6888, 622.457, -27.502, 0.29 ) }
    dend_23 { pt3dadd( -15.6862, 622.689, -27.7745, 0.66 ) }
    dend_23 { pt3dadd( -15.7371, 623.015, -28.2378, 0.66 ) }
    dend_23 { pt3dadd( -15.8271, 623.42, -28.815, 0.29 ) }
    dend_23 { pt3dadd( -16.157, 623.883, -29.512, 0.88 ) }
    dend_23 { pt3dadd( -16.3184, 624.095, -29.8232, 0.88 ) }
    dend_23 { pt3dadd( -16.8711, 624.815, -30.8185, 0.29 ) }
    dend_23 { pt3dadd( -17.0895, 625.142, -31.1917, 0.29 ) }
    dend_23 { pt3dadd( -17.3729, 625.686, -31.6332, 0.29 ) }
    dend_23 { pt3dadd( -17.6106, 626.394, -32.0435, 0.66 ) }
    dend_23 { pt3dadd( -17.7794, 627.085, -32.3721, 0.22 ) }
    dend_23 { pt3dadd( -17.9016, 627.64, -32.6106, 0.22 ) }
    dend_23 { pt3dadd( -18.0401, 628.21, -32.8511, 0.22 ) }
    dend_23 { pt3dadd( -18.3312, 629.219, -33.3191, 0.96 ) }
    dend_23 { pt3dadd( -18.7238, 630.355, -33.9485, 1.33 ) }
    dend_23 { pt3dadd( -19.192, 631.567, -34.7189, 0.29 ) }
    dend_23 { pt3dadd( -19.335, 631.934, -34.9639, 0.29 ) }
    dend_23 { pt3dadd( -19.6551, 632.704, -35.5031, 0.29 ) }
    dend_23 { pt3dadd( -19.9308, 633.288, -35.9531, 0.29 ) }
    dend_23 { pt3dadd( -20.2833, 633.83, -36.4493, 0.96 ) }
    dend_23 { pt3dadd( -20.5286, 634.07, -36.7013, 1.11 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 73/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -17.1322, 618.752, -24.662, 0.29 ) }
    dend_22 { pt3dadd( -17.2127, 620.402, -24.4684, 0.29 ) }
    dend_22 { pt3dadd( -17.2748, 621.646, -24.3228, 0.29 ) }
    dend_22 { pt3dadd( -17.379, 623.416, -24.1301, 0.29 ) }
    dend_22 { pt3dadd( -17.4791, 624.906, -23.9791, 0.74 ) }
    dend_22 { pt3dadd( -17.5579, 625.959, -23.88, 1.03 ) }
    dend_22 { pt3dadd( -17.6167, 626.687, -23.8154, 1.03 ) }
    dend_22 { pt3dadd( -17.7704, 628.47, -23.6607, 0.29 ) }
    dend_22 { pt3dadd( -17.8946, 630.072, -23.5134, 0.29 ) }
    dend_22 { pt3dadd( -17.9532, 630.87, -23.4347, 0.96 ) }
    dend_22 { pt3dadd( -18.009, 631.668, -23.3517, 1.18 ) }
    dend_22 { pt3dadd( -18.0939, 632.91, -23.2257, 0.59 ) }
    dend_22 { pt3dadd( -18.174, 634.083, -23.0991, 0.37 ) }
    dend_22 { pt3dadd( -18.281, 635.789, -22.8956, 0.37 ) }
    dend_22 { pt3dadd( -18.3559, 637.174, -22.7127, 0.29 ) }
    dend_22 { pt3dadd( -18.4617, 639.009, -22.4716, 0.29 ) }
    dend_22 { pt3dadd( -18.5572, 640.309, -22.3075, 0.88 ) }
    dend_22 { pt3dadd( -18.6016, 640.819, -22.248, 1.03 ) }
    dend_22 { pt3dadd( -18.6902, 641.662, -22.1658, 1.03 ) }
    dend_22 { pt3dadd( -18.8192, 642.778, -22.0706, 1.03 ) }
    dend_22 { pt3dadd( -18.9913, 644.298, -21.9458, 0.44 ) }
    dend_22 { pt3dadd( -19.1405, 645.765, -21.8147, 0.74 ) }
    dend_22 { pt3dadd( -19.187, 646.24, -21.7735, 0.74 ) }
    dend_22 { pt3dadd( -19.2961, 647.406, -21.686, 0.44 ) }
    dend_22 { pt3dadd( -19.3652, 648.09, -21.6414, 0.37 ) }
    dend_22 { pt3dadd( -19.4392, 648.91, -21.5826, 0.74 ) }
    dend_22 { pt3dadd( -19.4827, 649.595, -21.5191, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_22 { pt3dadd( -19.5191, 650.767, -21.3994, 0.29 ) }
    dend_22 { pt3dadd( -19.5319, 651.439, -21.3185, 0.29 ) }
    dend_22 { pt3dadd( -19.5367, 652.455, -21.1817, 0.81 ) }
    dend_22 { pt3dadd( -19.5324, 652.823, -21.1269, 0.81 ) }
    dend_22 { pt3dadd( -19.5138, 653.554, -21.0183, 0.37 ) }
    dend_22 { pt3dadd( -19.5021, 654.67, -20.8709, 0.37 ) }
    dend_22 { pt3dadd( -19.5003, 655.405, -20.7852, 1.03 ) }
    dend_22 { pt3dadd( -19.5206, 656.054, -20.734, 1.03 ) }
    dend_22 { pt3dadd( -19.5967, 657.329, -20.6698, 1.03 ) }
    dend_22 { pt3dadd( -19.7031, 658.511, -20.6465, 0.37 ) }
    dend_22 { pt3dadd( -19.9057, 660.116, -20.6524, 0.29 ) }
    dend_22 { pt3dadd( -20.0452, 660.997, -20.6708, 0.29 ) }
    dend_22 { pt3dadd( -20.2651, 662.188, -20.7058, 0.88 ) }
    dend_22 { pt3dadd( -20.4153, 662.913, -20.7274, 1.25 ) }
    dend_22 { pt3dadd( -20.5679, 663.552, -20.7472, 1.25 ) }
    dend_22 { pt3dadd( -20.8208, 664.564, -20.7598, 0.74 ) }
    dend_22 { pt3dadd( -21.0324, 665.422, -20.7544, 0.74 ) }
    dend_22 { pt3dadd( -21.4165, 666.993, -20.7204, 1.25 ) }
    dend_22 { pt3dadd( -21.613, 667.855, -20.6905, 1.25 ) }
    dend_22 { pt3dadd( -21.7779, 668.614, -20.666, 0.52 ) }
    dend_22 { pt3dadd( -21.9846, 669.624, -20.6333, 0.29 ) }
    dend_22 { pt3dadd( -22.1373, 670.42, -20.6125, 0.52 ) }
    dend_22 { pt3dadd( -22.2814, 671.211, -20.5945, 0.81 ) }
    dend_22 { pt3dadd( -22.6226, 673.164, -20.5713, 0.37 ) }
    dend_22 { pt3dadd( -22.8757, 674.609, -20.5629, 0.37 ) }
    dend_22 { pt3dadd( -22.9385, 674.976, -20.5618, 1.03 ) }
    dend_22 { pt3dadd( -23.068, 675.709, -20.5635, 1.4 ) }
    dend_22 { pt3dadd( -23.1564, 676.203, -20.5657, 1.4 ) }
    dend_22 { pt3dadd( -23.3943, 677.581, -20.5637, 0.52 ) }
    dend_22 { pt3dadd( -23.5883, 678.742, -20.5559, 0.52 ) }
    dend_22 { pt3dadd( -23.7727, 679.91, -20.5379, 0.81 ) }
    dend_22 { pt3dadd( -23.8991, 680.775, -20.5147, 0.81 ) }
    dend_22 { pt3dadd( -24.0171, 681.647, -20.4824, 0.81 ) }
    dend_22 { pt3dadd( -24.1526, 682.708, -20.4355, 0.44 ) }
    dend_22 { pt3dadd( -24.2368, 683.433, -20.3955, 0.44 ) }
    dend_22 { pt3dadd( -24.3526, 684.52, -20.3256, 0.81 ) }
    dend_22 { pt3dadd( -24.4685, 685.64, -20.2503, 0.88 ) }
    dend_22 { pt3dadd( -24.5858, 686.868, -20.1585, 1.18 ) }
    dend_22 { pt3dadd( -24.6893, 687.961, -20.0758, 1.4 ) }
    dend_22 { pt3dadd( -24.7394, 688.487, -20.0362, 1.4 ) }
    dend_22 { pt3dadd( -24.8043, 689.278, -19.9766, 0.88 ) }
    dend_22 { pt3dadd( -24.9407, 691.319, -19.8142, 0.37 ) }
    dend_22 { pt3dadd( -24.9968, 692.374, -19.7261, 0.37 ) }
    dend_22 { pt3dadd( -25.0254, 693.105, -19.6604, 0.66 ) }
    dend_22 { pt3dadd( -25.0464, 693.833, -19.5884, 0.96 ) }
    dend_22 { pt3dadd( -25.0661, 694.708, -19.4934, 0.37 ) }
    dend_22 { pt3dadd( -25.0779, 695.403, -19.4138, 0.74 ) }
    dend_22 { pt3dadd( -25.081, 696.592, -19.283, 0.37 ) }
    dend_22 { pt3dadd( -25.0847, 697.63, -19.1778, 0.81 ) }
    dend_22 { pt3dadd( -25.0873, 698.584, -19.0908, 1.03 ) }
    dend_22 { pt3dadd( -25.0807, 700.453, -18.9625, 0.22 ) }
    dend_22 { pt3dadd( -25.0724, 701.757, -18.8926, 0.22 ) }
    dend_22 { pt3dadd( -25.0513, 703.276, -18.8304, 0.22 ) }
    dend_22 { pt3dadd( -25.0185, 704.68, -18.7968, 1.25 ) }
    dend_22 { pt3dadd( -24.9937, 705.37, -18.7935, 1.33 ) }
    dend_22 { pt3dadd( -24.9454, 706.544, -18.8091, 0.44 ) }
    dend_22 { pt3dadd( -24.8868, 707.538, -18.8462, 0.44 ) }
    dend_22 { pt3dadd( -24.7899, 708.76, -18.8939, 0.44 ) }
    dend_22 { pt3dadd( -24.6967, 709.739, -18.9289, 0.37 ) }
    dend_22 { pt3dadd( -24.5535, 711.184, -18.9773, 0.37 ) }
    dend_22 { pt3dadd( -24.4847, 711.922, -18.9871, 0.37 ) }
    dend_22 { pt3dadd( -24.4021, 713.003, -18.9877, 0.74 ) }
    dend_22 { pt3dadd( -24.352, 713.801, -18.9895, 1.03 ) }
    dend_22 { pt3dadd( -24.3181, 714.637, -18.9832, 0.74 ) }
    dend_22 { pt3dadd( -24.3094, 715.317, -18.9596, 0.29 ) }
    dend_22 { pt3dadd( -24.3254, 716.336, -18.8991, 0.29 ) }
    dend_22 { pt3dadd( -24.3505, 716.917, -18.8552, 0.66 ) }
    dend_22 { pt3dadd( -24.4037, 717.733, -18.7806, 0.66 ) }
    dend_22 { pt3dadd( -24.4899, 718.899, -18.6817, 0.22 ) }
    dend_22 { pt3dadd( -24.5593, 719.778, -18.6024, 0.52 ) }
    dend_22 { pt3dadd( -24.6033, 720.391, -18.544, 0.52 ) }
    dend_22 { pt3dadd( -24.7601, 722.51, -18.3273, 0.22 ) }
    dend_22 { pt3dadd( -24.8435, 723.705, -18.1706, 0.59 ) }
    dend_22 { pt3dadd( -24.874, 724.141, -18.1041, 0.59 ) }
    dend_22 { pt3dadd( -24.9513, 725.24, -17.9125, 0.22 ) }
    dend_22 { pt3dadd( -25.0004, 725.948, -17.7809, 0.81 ) }
    dend_22 { pt3dadd( -25.035, 726.462, -17.6807, 0.81 ) }
    dend_22 { pt3dadd( -25.1105, 727.824, -17.4008, 0.22 ) }
    dend_22 { pt3dadd( -25.1358, 728.393, -17.2839, 0.59 ) }
    dend_22 { pt3dadd( -25.1426, 728.71, -17.2179, 0.59 ) }
    dend_22 { pt3dadd( -25.1662, 730.83, -16.807, 0.22 ) }
    dend_22 { pt3dadd( -25.1769, 731.497, -16.6919, 0.22 ) }
    dend_22 { pt3dadd( -25.1991, 732.649, -16.5204, 0.74 ) }
    dend_22 { pt3dadd( -25.2189, 733.193, -16.4569, 0.81 ) }
    dend_22 { pt3dadd( -25.2619, 733.99, -16.3735, 0.81 ) }
    dend_22 { pt3dadd( -25.3588, 735.366, -16.2432, 0.22 ) }
    dend_22 { pt3dadd( -25.4753, 736.748, -16.1232, 0.22 ) }
    dend_22 { pt3dadd( -25.5591, 737.617, -16.0531, 0.22 ) }
    dend_22 { pt3dadd( -25.6804, 738.716, -15.9737, 0.81 ) }
    dend_22 { pt3dadd( -25.7148, 739.013, -15.9528, 0.81 ) }
    dend_22 { pt3dadd( -25.9046, 740.822, -15.8191, 0.22 ) }
    dend_22 { pt3dadd( -25.9118, 740.914, -15.8115, 0.52 ) }
    dend_22 { pt3dadd( -26.0019, 742.979, -15.6121, 0.29 ) }
    dend_22 { pt3dadd( -26.0208, 744.144, -15.4881, 0.88 ) }
    dend_22 { pt3dadd( -26.0146, 744.809, -15.4127, 0.88 ) }
    dend_22 { pt3dadd( -25.9939, 746.011, -15.2807, 0.22 ) }
    dend_22 { pt3dadd( -25.9848, 746.776, -15.205, 0.22 ) }
    dend_22 { pt3dadd( -25.9714, 747.672, -15.1114, 0.96 ) }
    dend_22 { pt3dadd( -25.9646, 748.042, -15.0699, 0.96 ) }
    dend_22 { pt3dadd( -25.9383, 749.524, -14.8898, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_22 { pt3dadd( -25.9398, 750.399, -14.7857, 0.22 ) }
    dend_22 { pt3dadd( -25.9579, 751.563, -14.6354, 0.88 ) }
    dend_22 { pt3dadd( -25.9886, 752.735, -14.4793, 0.22 ) }
    dend_22 { pt3dadd( -26.032, 753.911, -14.3258, 0.88 ) }
    dend_22 { pt3dadd( -26.0426, 754.276, -14.2753, 0.88 ) }
    dend_22 { pt3dadd( -26.0644, 755.499, -14.0935, 0.22 ) }
    dend_22 { pt3dadd( -26.0632, 756.397, -13.9436, 0.96 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 7/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -20.5286, 634.07, -36.7013, 0.37 ) }
    dend_25 { pt3dadd( -20.9774, 635.605, -37.4352, 0.37 ) }
    dend_25 { pt3dadd( -21.1177, 636.122, -37.6781, 0.59 ) }
    dend_25 { pt3dadd( -21.3474, 637.079, -38.0897, 0.59 ) }
    dend_25 { pt3dadd( -21.508, 637.896, -38.4097, 0.29 ) }
    dend_25 { pt3dadd( -21.7464, 639.309, -38.9598, 0.29 ) }
    dend_25 { pt3dadd( -21.8614, 640.08, -39.2666, 0.29 ) }
    dend_25 { pt3dadd( -21.9177, 640.765, -39.5702, 0.52 ) }
    dend_25 { pt3dadd( -21.9247, 641.427, -39.8868, 0.22 ) }
    dend_25 { pt3dadd( -21.882, 642.263, -40.3281, 0.52 ) }
    dend_25 { pt3dadd( -21.8368, 643.163, -40.8366, 0.81 ) }
    dend_25 { pt3dadd( -21.8268, 643.803, -41.1854, 0.81 ) }
    dend_25 { pt3dadd( -21.8897, 645.384, -42.0597, 0.22 ) }
    dend_25 { pt3dadd( -21.9658, 646.172, -42.5042, 0.81 ) }
    dend_25 { pt3dadd( -22.1096, 647.019, -42.9836, 0.81 ) }
    dend_25 { pt3dadd( -22.3475, 647.97, -43.4915, 0.29 ) }
    dend_25 { pt3dadd( -22.7507, 649.301, -44.1683, 0.29 ) }
    dend_25 { pt3dadd( -23.0711, 650.232, -44.6601, 0.81 ) }
    dend_25 { pt3dadd( -23.3301, 650.911, -45.0577, 1.11 ) }
    dend_25 { pt3dadd( -23.5352, 651.525, -45.457, 0.74 ) }
    dend_25 { pt3dadd( -23.7548, 652.366, -46.0154, 0.29 ) }
    dend_25 { pt3dadd( -23.9998, 653.541, -46.8309, 0.29 ) }
    dend_25 { pt3dadd( -24.1862, 654.511, -47.5067, 0.29 ) }
    dend_25 { pt3dadd( -24.4078, 655.855, -48.3986, 1.03 ) }
    dend_25 { pt3dadd( -24.581, 656.977, -49.0937, 1.18 ) }
    dend_25 { pt3dadd( -24.8734, 658.951, -50.243, 0.29 ) }
    dend_25 { pt3dadd( -24.9811, 659.724, -50.6559, 0.29 ) }
    dend_25 { pt3dadd( -25.1406, 660.971, -51.2513, 1.55 ) }
    dend_25 { pt3dadd( -25.2215, 661.639, -51.5506, 1.33 ) }
    dend_25 { pt3dadd( -25.3541, 662.583, -51.9789, 0.81 ) }
    dend_25 { pt3dadd( -25.5119, 663.575, -52.4691, 0.52 ) }
    dend_25 { pt3dadd( -25.7459, 665.034, -53.2417, 0.29 ) }
    dend_25 { pt3dadd( -25.9343, 666.284, -53.9147, 0.52 ) }
    dend_25 { pt3dadd( -26.0003, 666.76, -54.1614, 0.81 ) }
    dend_25 { pt3dadd( -26.2636, 668.726, -55.1064, 0.22 ) }
    dend_25 { pt3dadd( -26.4167, 670.09, -55.6885, 0.22 ) }
    dend_25 { pt3dadd( -26.4986, 670.82, -55.94, 0.66 ) }
    dend_25 { pt3dadd( -26.562, 671.621, -56.1546, 0.66 ) }
    dend_25 { pt3dadd( -26.6121, 673.164, -56.4675, 0.22 ) }
    dend_25 { pt3dadd( -26.572, 673.869, -56.5988, 0.52 ) }
    dend_25 { pt3dadd( -26.4975, 674.481, -56.7176, 0.52 ) }
    dend_25 { pt3dadd( -26.3511, 675.802, -57.0356, 0.29 ) }
    dend_25 { pt3dadd( -26.2294, 677.193, -57.4431, 0.96 ) }
    dend_25 { pt3dadd( -26.195, 677.901, -57.6834, 0.96 ) }
    dend_25 { pt3dadd( -26.1156, 680.086, -58.5253, 0.22 ) }
    dend_25 { pt3dadd( -26.0902, 681.636, -59.1766, 0.96 ) }
    dend_25 { pt3dadd( -26.1018, 682.707, -59.6735, 0.22 ) }
    dend_25 { pt3dadd( -26.1297, 683.211, -59.94, 0.59 ) }
    dend_25 { pt3dadd( -26.2188, 683.763, -60.253, 0.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 56/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -20.5286, 634.07, -36.7013, 0.15 ) }
    dend_24 { pt3dadd( -21.409, 633.576, -38.4701, 0.15 ) }
    dend_24 { pt3dadd( -21.6848, 633.438, -38.9797, 0.52 ) }
    dend_24 { pt3dadd( -21.8694, 633.351, -39.3088, 0.66 ) }
    dend_24 { pt3dadd( -22.5414, 633.036, -40.4873, 0.22 ) }
    dend_24 { pt3dadd( -23.1556, 632.741, -41.5349, 0.22 ) }
    dend_24 { pt3dadd( -23.4224, 632.61, -41.9615, 0.59 ) }
    dend_24 { pt3dadd( -23.8416, 632.438, -42.5899, 0.66 ) }
    dend_24 { pt3dadd( -24.6134, 632.119, -43.6806, 0.29 ) }
    dend_24 { pt3dadd( -24.9033, 631.997, -44.0644, 0.81 ) }
    dend_24 { pt3dadd( -25.4897, 631.732, -44.8212, 0.96 ) }
    dend_24 { pt3dadd( -26.144, 631.417, -45.6922, 0.15 ) }
    dend_24 { pt3dadd( -26.7926, 631.084, -46.6041, 0.15 ) }
    dend_24 { pt3dadd( -27.4124, 630.754, -47.5029, 0.15 ) }
    dend_24 { pt3dadd( -27.9245, 630.477, -48.2501, 0.88 ) }
    dend_24 { pt3dadd( -28.2903, 630.253, -48.7995, 0.88 ) }
    dend_24 { pt3dadd( -29.2791, 629.622, -50.3413, 0.22 ) }
    dend_24 { pt3dadd( -29.6485, 629.367, -50.9482, 0.74 ) }
    dend_24 { pt3dadd( -30.152, 628.981, -51.7847, 0.74 ) }
    dend_24 { pt3dadd( -30.7236, 628.486, -52.7645, 0.29 ) }
    dend_24 { pt3dadd( -31.2114, 628.028, -53.5966, 0.29 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
    ModelViewParmSubset_2 = new SectionList()
    dend_54 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_54, dend_27, dend_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_54, dend_27, dend_0, axon_0, dend_56, dend_55, dend_29, dend_28, dend_6, dend_1, axon_1, dend_37, dend_30, dend_12, dend_7, dend_3, dend_2, dend_49, dend_38, dend_32, dend_31, dend_16, dend_13, dend_11, dend_8, dend_5, dend_4, dend_51, dend_50, dend_46, dend_39, dend_36, dend_33, dend_26, dend_17, dend_15, dend_14, dend_10, dend_9, dend_53, dend_52, dend_48, dend_47, dend_45, dend_40, dend_35, dend_34, dend_19, dend_18, dend_44, dend_41, dend_21, dend_20, dend_43, dend_42, dend_23, dend_22, dend_25, dend_24]}
    ModelViewParmSubset_5 = new SectionList()
    dend_54 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_56 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_28 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_37 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_30 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_3 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_49 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_38 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_31 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_16 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_13 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_11 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_5 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_51 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_50 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_26 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_15 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_48 OneSecGrp_SectionRef_43.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_45 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_35 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_34 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_18 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_41 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_21 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_22 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_25 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_54 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_27 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_29 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_6 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_2 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_12 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_7 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_8 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_14 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_9 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_10 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_40 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_32 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_47 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_44 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_43 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_42 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_53 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_52 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_19 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_20 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_23 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_24 OneSecGrp_SectionRef_60.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 3
    dend_56 nseg = 9
    dend_28 nseg = 3
    dend_37 nseg = 3
    dend_30 nseg = 5
    dend_3 nseg = 7
    dend_49 nseg = 3
    dend_38 nseg = 3
    dend_31 nseg = 5
    dend_16 nseg = 9
    dend_13 nseg = 3
    dend_11 nseg = 3
    dend_5 nseg = 3
    dend_51 nseg = 5
    dend_50 nseg = 7
    dend_36 nseg = 3
    dend_26 nseg = 3
    dend_17 nseg = 11
    dend_15 nseg = 9
    dend_48 nseg = 3
    dend_45 nseg = 3
    dend_35 nseg = 5
    dend_34 nseg = 3
    dend_18 nseg = 3
    dend_41 nseg = 3
    dend_21 nseg = 5
    dend_22 nseg = 7
    dend_25 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L6_SBC_63156a236c_0_0


