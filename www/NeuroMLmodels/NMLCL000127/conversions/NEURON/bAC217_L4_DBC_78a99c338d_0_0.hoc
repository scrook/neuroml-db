// Cell: bAC217_L4_DBC_78a99c338d_0_0
/*
{
  "id" : "bAC217_L4_DBC_78a99c338d_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.03775, -11.4909, 0.0, 3.43439", "1.89325, -10.3873, 0.0, 4.10946", "1.74876, -9.28361, 0.0, 5.49512", "1.60426, -8.17996, 0.0, 6.92062", "1.45977, -7.07631, 0.0, 8.33776", "1.31528, -5.97266, 0.0, 9.37588", "1.17078, -4.86901, 0.0, 10.388", "1.02629, -3.76536, 0.0, 11.4001", "0.881794, -2.66171, 0.0, 12.0337", "0.7373, -1.55806, 0.0, 11.8609", "0.592806, -0.454415, 0.0, 11.675", "0.448312, 0.649234, 0.0, 11.6509", "0.303818, 1.75288, 0.0, 11.6321", "0.159324, 2.85653, 0.0, 10.7321", "0.0148298, 3.96018, 0.0, 9.70998", "-0.129664, 5.06383, 0.0, 8.74071", "-0.274158, 6.16748, 0.0, 7.95018", "-0.418652, 7.27113, 0.0, 6.7513", "-0.563146, 8.37478, 0.0, 5.22686", "-0.70764, 9.47842, 0.0, 3.48033", "-0.852134, 10.5821, 0.0, 2.02048" ]
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.596014, -11.9246, -2.34, 2.22", "-1.16032, -16.9953, -0.349777, 2.22", "-1.65418, -22.1694, 1.52026, 2.49", "-2.39542, -31.157, 4.49652, 2.49", "-2.82913, -39.8419, 6.94429, 2.49", "-2.951, -43.7832, 7.92313, 1.94", "-3.00556, -48.031, 8.86411, 1.38", "-2.8874, -53.1981, 9.86267, 1.11", "-2.73222, -56.683, 10.38, 0.83", "-2.3086, -65.4259, 11.1579, 1.11", "-2.17278, -68.9534, 11.2027, 1.11", "-2.00295, -73.1751, 11.1506, 1.38", "-1.81115, -77.2154, 11.0364, 0.83", "-1.60902, -80.6538, 10.9574, 1.66", "-1.37093, -83.9076, 10.9077, 1.11", "-0.7972, -90.953, 10.7336, 1.66", "-0.451981, -94.8143, 10.6293, 1.38", "0.0429402, -99.7806, 10.4827, 1.94", "0.691396, -105.017, 10.3164, 1.38", "1.58407, -110.458, 10.1363, 1.38", "2.94203, -117.17, 9.91462, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999993435552117,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.59602, 9.70538, -0.86, 2.22", "-1.09611, 13.8478, -0.836866, 1.94", "-0.813041, 17.0869, -0.737, 1.94", "-0.526261, 21.9353, -0.438096, 1.94", "-0.450384, 23.7032, -0.30726, 1.38", "-0.216025, 27.6993, -0.0259123, 2.22", "0.0139932, 31.6213, 0.250223, 1.94", "0.313302, 36.9251, 0.644441, 1.94", "0.485473, 40.7464, 1.00838, 1.94", "0.554988, 44.4446, 1.47536, 1.94", "0.607211, 49.4545, 2.11412, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999993435552117
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.852134, 10.5821, 0.0, 0.55", "-2.79938, 25.4552, 0.0, 0.55", "-4.74662, 40.3282, 0.0, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "2.94203, -117.17, 9.91462, 0.55", "3.76071, -118.65, 10.1564, 0.55", "4.60977, -119.918, 10.5125, 0.55", "5.89825, -121.641, 11.2202, 0.28", "7.38204, -123.289, 11.9479, 0.55", "9.15495, -125.09, 12.7215, 0.28", "10.6658, -126.494, 13.427, 1.11", "13.1032, -128.601, 14.6472, 0.28", "14.7382, -129.866, 15.6441, 0.83", "17.1988, -131.597, 17.2658, 0.83", "18.6809, -132.601, 18.2921, 0.83", "21.1885, -134.323, 20.0567, 0.83", "22.4951, -135.211, 20.9833, 1.11", "26.4499, -138.114, 23.6193, 0.28", "27.3065, -138.812, 24.1207, 0.28", "28.0364, -139.451, 24.5023, 0.55", "29.0843, -140.374, 24.9089, 0.55", "31.1998, -142.257, 25.3589, 0.55", "33.1466, -143.9, 25.5406, 0.55", "35.2119, -145.661, 25.455, 0.83", "37.1505, -147.169, 25.348, 1.11", "38.846, -148.454, 25.2584, 0.55", "39.7715, -149.171, 25.2211, 1.38", "40.9846, -150.101, 25.1896, 0.55", "42.3607, -150.983, 25.1445, 1.11", "45.2969, -152.715, 24.9735, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "2.94203, -117.17, 9.91462, 1.38", "2.75984, -118.284, 9.74117, 1.38", "2.1564, -121.555, 9.49872, 1.38", "1.78034, -123.594, 9.34763, 1.11", "0.96302, -128.024, 9.01926, 1.66", "0.442179, -130.847, 8.81, 2.22", "0.176593, -132.287, 8.70329, 2.22", "-0.489232, -136.418, 8.30944, 1.66" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "0.607211, 49.4545, 2.11412, 1.38", "0.573107, 51.1043, 2.10193, 1.38", "0.590081, 52.2224, 2.0917, 1.38", "0.644127, 53.8562, 2.07146, 1.11", "0.765629, 56.3693, 2.07829, 1.38", "0.822329, 57.6246, 2.07781, 1.38", "0.872517, 59.8177, 2.07815, 1.38", "0.904166, 62.5933, 2.07375, 1.38", "0.879567, 64.6163, 2.06292, 1.38", "0.837013, 66.4996, 2.05304, 1.38", "0.743714, 68.259, 2.03893, 1.38", "0.454989, 71.1968, 1.99822, 1.66", "0.219153, 72.8847, 1.9663, 1.38", "-0.074164, 74.8052, 1.87209, 1.38", "-0.402463, 77.0111, 1.69888, 1.38", "-0.623212, 78.7705, 1.51725, 1.38", "-0.704491, 79.7038, 1.41758, 1.38", "-0.77978, 81.1477, 1.2611, 1.11", "-0.851502, 83.3318, 1.04126, 1.11", "-0.83088, 85.6318, 0.838727, 1.11", "-0.770144, 87.9536, 0.668812, 1.38", "-0.713599, 89.5134, 0.598385, 1.11", "-0.675519, 91.0108, 0.569976, 1.38", "-0.663671, 91.9761, 0.598154, 1.38", "-0.663146, 93.5193, 0.76339, 1.38", "-0.70363, 95.7296, 1.0627, 1.94", "-0.720583, 96.8986, 1.24062, 1.66", "-0.723587, 97.3898, 1.31319, 1.66", "-0.729103, 98.9219, 1.51874, 1.66", "-0.736829, 101.339, 1.8201, 1.66", "-0.765291, 102.6, 1.95811, 1.38", "-0.829227, 104.591, 2.13748, 1.66", "-0.865446, 106.346, 2.25067, 1.11", "-0.891584, 108.29, 2.35436, 1.11", "-0.908239, 109.373, 2.38768, 1.11", "-0.912127, 110.568, 2.41261, 1.11", "-0.894323, 111.463, 2.44368, 1.11", "-0.802316, 113.362, 2.53604, 1.38", "-0.697652, 114.808, 2.6207, 1.11", "-0.610527, 115.892, 2.68297, 1.38", "-0.511197, 117.123, 2.74744, 1.38", "-0.420584, 118.527, 2.80585, 0.83", "-0.352622, 120.227, 2.85471, 1.38", "-0.342385, 121.585, 2.87048, 0.83", "-0.35808, 122.964, 2.8626, 1.38", "-0.40864, 124.051, 2.84952, 1.38", "-0.532933, 125.835, 2.80642, 1.38", "-0.580053, 126.622, 2.78388, 1.38", "-0.623144, 127.844, 2.74776, 1.11", "-0.6186, 129.362, 2.70716, 1.11", "-0.537121, 131.553, 2.65313, 1.66", "-0.422734, 132.963, 2.62379, 1.11", "-0.368188, 133.52, 2.6449, 1.11", "-0.305728, 134.488, 2.72127, 1.38", "-0.256643, 135.712, 2.86518, 1.38", "-0.250762, 137.093, 3.06957, 1.94", "-0.309477, 138.525, 3.31144, 1.94", "-0.511436, 140.862, 3.7058, 1.11", "-0.680141, 142.165, 3.8978, 1.11", "-0.887615, 143.399, 4.05414, 1.38", "-1.18129, 144.884, 4.20024, 1.38", "-1.42799, 146.127, 4.28221, 1.11", "-1.65601, 147.492, 4.32062, 0.83", "-1.86161, 149.053, 4.28711, 0.83", "-1.97165, 149.953, 4.26838, 0.83", "-2.16564, 151.517, 4.23326, 1.11", "-2.30354, 152.89, 4.19573, 1.11", "-2.44192, 154.303, 4.14642, 1.38", "-2.65579, 156.452, 4.06097, 1.38", "-2.77022, 157.768, 4.00697, 1.11", "-2.89725, 159.329, 3.94092, 1.38", "-3.01305, 160.61, 3.86528, 0.83", "-3.20015, 162.322, 3.74676, 0.83", "-3.33738, 163.679, 3.63902, 1.38", "-3.36638, 164.29, 3.59084, 1.38", "-3.40388, 165.408, 3.49748, 1.11", "-3.46759, 167.256, 3.33264, 1.38", "-3.49291, 168.38, 3.23163, 1.11", "-3.4727, 169.485, 3.12954, 1.11", "-3.44078, 170.591, 3.02873, 1.11", "-3.40384, 171.969, 2.90207, 1.11", "-3.32492, 174.341, 2.67661, 1.11", "-3.25932, 175.732, 2.55131, 1.11", "-3.20695, 177.268, 2.44423, 1.38", "-3.18612, 178.846, 2.37383, 1.38", "-3.19479, 180.322, 2.33909, 0.83", "-3.19954, 181.458, 2.34631, 1.38", "-3.20012, 182.529, 2.38989, 1.38", "-3.21397, 183.986, 2.4855, 1.11", "-3.21824, 184.953, 2.57011, 0.55", "-3.17424, 185.916, 2.668, 1.11", "-3.1239, 186.827, 2.76019, 1.11", "-3.06183, 187.8, 2.84231, 0.83", "-2.98318, 188.828, 2.89324, 0.83", "-2.90623, 189.762, 2.90367, 0.83", "-2.81594, 191.464, 2.91369, 1.11", "-2.75203, 192.574, 2.90213, 1.66", "-2.72643, 193.643, 2.87181, 1.66", "-2.75003, 195.028, 2.81578, 0.83", "-2.7786, 196.141, 2.76044, 0.83", "-2.80031, 197.711, 2.67984, 1.11", "-2.85049, 199.58, 2.57432, 0.83", "-2.89326, 201.668, 2.46036, 0.83", "-2.9167, 202.863, 2.39469, 0.83", "-2.97458, 205.332, 2.25939, 1.38", "-3.05865, 207.8, 2.12844, 1.38", "-3.10449, 208.899, 2.07552, 1.11", "-3.23413, 210.605, 2.00345, 1.11", "-3.32843, 211.689, 1.95486, 0.83", "-3.42859, 212.45, 1.91633, 0.83", "-3.68035, 213.727, 1.8992, 1.38", "-3.82186, 214.391, 1.93835, 1.38", "-4.08249, 215.946, 2.11317, 0.83", "-4.21316, 217.009, 2.2787, 0.83", "-4.35394, 218.704, 2.49068, 0.83", "-4.43726, 220.289, 2.71249, 0.83", "-4.48324, 222.322, 3.03167, 1.38", "-4.49554, 223.703, 3.26362, 1.38", "-4.4423, 224.664, 3.4466, 1.38", "-4.17406, 226.887, 3.8776, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.607211, 49.4545, 2.11412, 1.11", "1.55833, 54.7265, -3.08881, 1.11", "1.85583, 56.3556, -4.47565, 1.11", "2.29062, 59.1615, -6.92249, 1.11", "3.37019, 67.2067, -13.6887, 1.11", "3.69788, 70.1894, -15.9144, 1.11", "4.05705, 74.3788, -18.7729, 0.83", "4.16297, 76.8849, -20.231, 0.83", "4.4482, 84.047, -23.9559, 1.11", "4.55359, 87.3231, -25.3384, 1.11", "4.43376, 92.4734, -26.8122, 1.11", "4.07832, 97.193, -27.7884, 1.11", "3.72811, 100.484, -28.1567, 1.38", "3.49648, 102.793, -28.1203, 1.38", "3.28085, 105.469, -27.8138, 1.11", "2.88994, 110.569, -27.1994, 1.11", "2.55408, 115.959, -26.6755, 0.83", "2.5142, 116.811, -26.569, 0.83", "2.36903, 122.013, -26.0719, 1.66", "2.24018, 126.47, -25.9003, 0.83", "2.21834, 127.326, -25.9223, 0.83", "2.19205, 130.96, -26.227, 1.66", "2.16057, 133.244, -26.5194, 1.66", "2.08931, 136.136, -26.8018, 1.11", "1.91786, 139.543, -27.0919, 1.11", "1.69657, 143.2, -27.2725, 1.11", "1.47614, 147.562, -27.5185, 1.66", "1.28732, 151.684, -27.697, 1.66", "1.06407, 155.991, -27.974, 0.83", "0.882774, 159.781, -28.366, 0.83", "0.809308, 162.457, -28.7571, 0.83", "0.802155, 166.295, -29.4009, 1.66", "0.846852, 169.971, -30.0782, 0.55", "0.89916, 173.554, -30.7284, 0.55", "1.03689, 177.558, -31.3704, 1.38", "1.22962, 180.894, -31.7557, 1.94", "1.45781, 184.919, -32.0789, 0.83", "1.55589, 187.16, -32.175, 0.83", "1.65206, 190.942, -32.2653, 1.94", "1.7137, 195.701, -32.1786, 1.94", "1.69084, 198.801, -32.087, 1.11", "1.66132, 202.441, -31.7734, 1.11", "1.60681, 205.737, -31.3799, 1.11", "1.57321, 207.637, -31.0945, 1.11", "1.52142, 209.58, -30.7971, 1.11", "1.20214, 216.81, -29.6901, 2.22", "0.901639, 225.082, -28.463, 0.83", "0.856876, 227.495, -28.1469, 0.83", "0.884592, 230.755, -27.7903, 1.11", "0.944395, 234.817, -27.483, 0.55", "0.902626, 237.978, -27.3962, 2.22", "0.828265, 239.953, -27.5129, 1.94", "0.732985, 242.817, -27.9444, 0.83", "0.695939, 245.868, -28.387, 0.83", "0.71037, 248.934, -28.7852, 0.83", "0.673611, 252.172, -29.1105, 1.66", "0.60307, 255.735, -29.4401, 0.83", "0.553018, 257.774, -29.5889, 0.83", "0.507298, 259.502, -29.7179, 1.11", "0.403225, 262.174, -29.9415, 0.83", "0.281025, 266.845, -30.377, 0.83", "0.254297, 267.689, -30.456, 0.83", "-0.0161746, 272.351, -30.8618, 1.94", "-0.2245, 275.827, -31.1692, 0.55", "-0.429426, 279.755, -31.6006, 0.55", "-0.471155, 280.462, -31.709, 0.55", "-0.844709, 286.053, -32.7292, 2.22", "-1.04396, 290.323, -33.5401, 0.83", "-1.0839, 292.257, -33.8891, 0.83", "-1.06929, 296.836, -34.6294, 1.38", "-0.91738, 300.871, -35.2274, 0.55", "-0.732153, 304.453, -35.6731, 0.55", "-0.344086, 309.431, -36.304, 0.83", "0.33153, 316.433, -36.7916, 0.83", "0.54165, 318.402, -36.825, 2.49", "0.964409, 322.204, -36.6724, 2.49", "1.59638, 328.117, -36.2209, 0.83", "1.93349, 331.446, -35.9283, 0.83", "2.28393, 338.055, -35.3276, 0.83", "2.34922, 340.012, -35.1444, 0.83", "2.3248, 344.266, -34.7971, 1.66", "2.23754, 348.567, -34.5048, 0.83", "2.15699, 351.71, -34.3362, 0.83", "2.0215, 356.407, -34.1671, 0.83", "1.95283, 360.036, -34.1831, 1.94", "1.97326, 366.037, -34.1943, 0.83", "2.08561, 372.225, -34.1954, 0.83", "2.1623, 375.002, -34.1929, 0.83", "2.24785, 378.499, -34.191, 1.11", "2.30709, 381.208, -34.1903, 2.49", "2.29638, 385.848, -34.202, 0.83", "2.23636, 387.446, -34.2125, 0.83", "2.05767, 390.144, -34.2389, 0.83", "1.75535, 394.616, -34.2835, 0.83", "1.51661, 398.984, -34.4109, 0.83", "1.21843, 404.098, -34.649, 1.11", "1.02244, 408.572, -34.9606, 1.66", "0.933654, 412.857, -35.2991, 0.83", "0.916323, 416.361, -35.6267, 0.83", "1.07447, 420.394, -36.0433, 0.83", "1.26968, 423.354, -36.374, 0.83", "1.4718, 426.616, -36.768, 0.83", "1.79102, 431.714, -37.3776, 1.66", "2.02496, 435.763, -37.8492, 0.83", "2.13697, 437.908, -38.0704, 0.83", "2.33239, 443.112, -38.4644, 1.38", "2.59305, 447.996, -38.807, 0.83", "2.71345, 450.706, -38.979, 0.83", "2.7838, 452.329, -39.101, 1.66", "2.87649, 455.618, -39.318, 1.66", "2.8244, 458.934, -39.5446, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-4.74662, 40.3282, 0.0, 0.28", "-6.69386, 55.2013, 0.0, 0.28", "-8.6411, 70.0744, 0.0, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "45.2969, -152.715, 24.9735, 0.83", "46.7483, -152.657, 26.1623, 0.83", "47.7046, -152.599, 27.0275, 0.28", "50.0064, -152.458, 29.1101, 0.55", "50.9138, -152.403, 29.9312, 0.55", "52.2225, -152.323, 31.1152, 0.55", "56.4299, -152.065, 34.922, 0.28", "56.9674, -152.079, 35.5027, 0.28" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "45.2969, -152.715, 24.9735, 0.55", "47.6388, -154.562, 26.2702, 0.55", "48.284, -154.865, 26.6012, 0.83", "49.8931, -155.691, 27.5042, 0.28", "50.5763, -156.046, 27.9494, 0.83", "51.9185, -156.724, 28.8043, 0.83", "55.1361, -158.345, 30.8019, 0.83", "59.2748, -160.261, 33.0945, 0.83", "60.8953, -160.871, 34.0519, 0.83", "65.0403, -161.909, 36.4913, 1.11", "66.4048, -162.065, 37.4134, 0.83", "66.884, -162.04, 37.781, 0.83", "68.4524, -161.486, 39.2066, 0.83", "71.1492, -159.527, 42.1668, 0.83", "72.962, -157.772, 44.1873, 0.83", "74.9872, -155.035, 46.632, 0.83", "75.8938, -153.623, 47.915, 1.11", "77.1316, -151.428, 49.9068, 0.28", "77.3228, -150.999, 50.3049, 0.55", "77.9951, -149.057, 51.7408, 0.28", "78.1232, -147.976, 52.7741, 1.11" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-0.489232, -136.418, 8.30944, 1.11", "-1.32965, -137.446, 8.92569, 1.11", "-2.28651, -138.86, 9.69875, 1.11", "-4.48653, -142.833, 11.5551, 1.38", "-5.62528, -145.202, 12.7021, 1.38", "-6.46419, -146.947, 13.5472, 1.66", "-7.79461, -149.715, 14.8873, 1.11", "-8.45675, -151.318, 15.657, 1.11", "-9.24618, -153.816, 16.7797, 1.38", "-10.1567, -158.09, 18.4239, 2.77" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-0.489232, -136.418, 8.30944, 1.38", "-0.469731, -141.625, 8.36729, 1.38", "-0.379447, -145.833, 8.5246, 1.94", "-0.214382, -148.887, 8.41908, 1.38", "0.336494, -153.949, 7.60422, 1.94", "0.985139, -157.875, 6.68963, 0.83", "1.49289, -160.246, 6.00822, 0.83", "2.36722, -163.284, 5.00123, 1.38", "4.15056, -167.841, 3.09491, 1.94", "6.60087, -172.662, 0.551889, 0.83", "7.51102, -174.137, -0.405705, 0.83", "10.0162, -177.725, -3.28445, 1.11", "11.5291, -179.778, -5.01447, 0.55", "12.3033, -180.855, -5.9961, 0.55", "13.7908, -183.078, -8.02471, 0.55", "14.4942, -184.232, -9.20731, 0.83", "16.0117, -186.818, -12.0985, 0.55", "17.5118, -189.365, -15.2499, 1.66", "19.7289, -193.386, -20.3914, 0.55", "20.5668, -195.129, -22.5994, 1.66", "22.0994, -198.9, -27.1918, 0.55", "22.7968, -200.552, -29.2354, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-4.17406, 226.887, 3.8776, 0.83", "-4.26322, 228.886, 2.39203, 0.83", "-4.46425, 231.093, 0.77333, 0.83", "-4.66798, 233.983, -1.11659, 0.55", "-4.75055, 236.847, -2.88585, 0.83", "-4.78197, 239.744, -4.52477, 0.28", "-4.79063, 241.089, -5.2189, 0.55", "-4.85167, 242.011, -5.6707, 0.55", "-4.96707, 244.708, -6.84378, 1.11", "-4.97465, 247.017, -7.63077, 0.55", "-4.95344, 249.004, -8.20174, 1.11", "-4.92332, 250.723, -8.59662, 1.11", "-4.87968, 253.313, -9.07886, 0.28", "-4.9353, 256.678, -9.78383, 0.55", "-5.14493, 260.62, -10.6553, 0.55", "-5.2292, 262.639, -11.0457, 0.55", "-5.26814, 264.12, -11.3051, 0.28", "-5.23819, 266.282, -11.5273, 0.83", "-5.06506, 270.52, -11.592, 1.38", "-5.02457, 272.541, -11.5016, 1.38", "-4.83331, 277.168, -11.0874, 0.83", "-4.74884, 279.376, -10.8258, 0.83", "-4.48339, 285.496, -9.8685, 0.83", "-4.39987, 287.603, -9.48606, 0.83", "-4.22071, 290.972, -8.69435, 0.83", "-4.18567, 291.83, -8.482, 0.83", "-4.07177, 294.77, -7.77605, 1.38", "-3.95853, 296.83, -7.3526, 0.55", "-3.83353, 299.317, -7.01845, 0.55", "-3.68415, 300.686, -6.92142, 0.55", "-3.53208, 301.686, -6.9033, 0.28", "-3.05213, 304.454, -6.99359, 0.83", "-2.61418, 306.586, -7.22287, 0.55", "-2.07922, 308.877, -7.58548, 0.83", "-1.30509, 312.168, -8.16775, 0.55", "-0.879804, 314.079, -8.51946, 1.66", "-0.253615, 317.067, -9.07724, 1.66", "0.35356, 320.338, -9.66667, 0.83", "0.774083, 322.971, -10.1097, 0.83", "1.04867, 325.136, -10.4283, 0.83", "1.1543, 326.431, -10.5772, 0.28", "1.25477, 328.625, -10.7323, 1.11", "1.21991, 331.927, -10.8236, 0.55", "1.1383, 333.829, -10.816, 0.55", "1.02261, 335.816, -10.8287, 0.55", "0.911929, 337.129, -10.8569, 0.55", "0.649984, 339.028, -10.9138, 1.11", "0.270446, 341.118, -10.9943, 0.28", "0.0785794, 342.096, -11.0391, 0.55", "-0.236032, 344.425, -11.1656, 0.55", "-0.533215, 348.134, -11.3879, 0.55", "-0.559017, 349.441, -11.4634, 0.83", "-0.526885, 351.51, -11.6239, 0.83", "-0.39049, 354.477, -11.8195, 0.83", "-0.145844, 357.291, -11.9402, 0.83", "0.173317, 359.452, -12.0163, 0.83", "1.25231, 364.194, -12.197, 1.11", "1.92031, 366.619, -12.2979, 0.28", "2.39962, 368.055, -12.3869, 0.55", "2.98467, 369.616, -12.3345, 0.55", "3.52687, 370.939, -12.1611, 0.55", "3.98259, 371.833, -11.9622, 0.55", "5.7143, 374.549, -11.2368, 0.55", "6.9152, 376.477, -10.7291, 0.83", "9.82781, 381.349, -9.87983, 0.55", "10.2992, 382.185, -9.74274, 0.83", "11.1522, 383.845, -9.49401, 0.83", "12.115, 385.929, -9.25066, 0.55", "12.892, 387.836, -9.13466, 0.83", "13.9379, 390.934, -9.1622, 0.83", "14.7239, 393.66, -9.31859, 0.55", "14.9731, 394.666, -9.30583, 0.55", "15.4749, 396.924, -9.15336, 0.55", "15.6932, 398.018, -9.02448, 0.83", "16.0934, 399.945, -8.74484, 0.83", "16.6566, 403.366, -8.2566, 0.55", "16.9169, 405.028, -8.09046, 0.55", "17.2886, 407.526, -7.81994, 0.55", "17.5584, 409.581, -7.60309, 0.55", "18.0947, 413.403, -7.22138, 0.55", "18.4693, 416.106, -7.02423, 0.83", "18.6513, 417.504, -6.995, 1.11", "18.9132, 420.285, -6.91018, 0.55", "19.1028, 424.272, -6.67716, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-4.17406, 226.887, 3.8776, 0.55", "-5.4016, 229.636, 3.75168, 0.55", "-6.19793, 231.609, 3.7041, 0.55", "-6.784, 233.285, 3.68144, 0.55", "-7.2629, 234.798, 3.66618, 0.55", "-8.20665, 237.898, 3.65377, 0.55", "-8.75174, 239.697, 3.65041, 0.83", "-9.43724, 241.96, 3.72828, 0.83", "-10.1166, 244.313, 3.79654, 0.83", "-10.583, 246.282, 3.82717, 0.55", "-10.9047, 247.935, 3.83803, 0.55", "-11.3508, 250.205, 3.8807, 0.83", "-11.7085, 252.033, 3.92972, 0.83", "-12.3234, 254.9, 4.02866, 0.83", "-12.7355, 256.776, 4.10684, 0.83", "-13.0326, 258.236, 4.17783, 0.55", "-13.3552, 260.121, 4.27429, 0.83", "-13.6331, 262.217, 4.41351, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "2.8244, 458.934, -39.5446, 0.55", "2.79947, 461.163, -39.5533, 0.55", "2.7634, 464.386, -39.5658, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "2.8244, 458.934, -39.5446, 0.55", "0.131329, 459.406, -37.6561, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "56.9674, -152.079, 35.5027, 0.28", "56.3192, -155.963, 33.9288, 0.28", "56.1997, -156.679, 33.6386, 1.11", "55.6324, -160.077, 32.2612, 0.28", "55.5753, -160.419, 32.1227, 1.11" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "56.9674, -152.079, 35.5027, 1.66", "57.3568, -151.005, 36.5366, 1.66", "58.0276, -148.06, 38.8503, 0.83", "58.614, -145.12, 41.0347, 0.28", "58.736, -144.123, 41.7253, 0.55", "58.9157, -140.68, 43.8863, 0.28", "58.9914, -138.618, 45.1379, 0.83", "58.9862, -135.941, 46.7772, 0.83", "58.8804, -134.254, 47.7034, 0.28", "58.6442, -131.811, 48.919, 0.55", "58.1716, -129.601, 49.9139, 0.55", "57.2833, -126.917, 50.9964, 0.28", "56.9398, -126.117, 51.3176, 0.83", "55.9261, -123.877, 52.1984, 0.28", "54.6239, -121.271, 53.1544, 0.55", "52.9366, -118.125, 54.2837, 0.28", "51.5991, -115.956, 55.0235, 1.11", "50.4352, -114.346, 55.4708, 0.28", "48.8944, -112.297, 55.9845, 0.83" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-10.1567, -158.09, 18.4239, 0.83", "-9.44712, -161.765, 18.5833, 0.83", "-9.03518, -163.564, 18.6451, 0.83", "-8.3794, -166.754, 18.7402, 0.83", "-8.00383, -169.116, 18.9772, 0.55", "-7.77055, -171.302, 19.3622, 0.83", "-7.64169, -173.401, 19.8918, 0.83", "-7.60216, -174.962, 20.5112, 0.83", "-7.68038, -177.519, 21.7738, 0.83", "-7.93622, -180.597, 23.5204, 0.83", "-8.22577, -182.604, 24.7148, 0.83", "-8.84302, -185.794, 26.7367, 1.11", "-9.37925, -188.181, 28.295, 0.55", "-9.73772, -189.896, 29.3418, 0.55", "-10.1396, -192.04, 30.4939, 0.83", "-10.389, -193.434, 31.0683, 0.83", "-10.5757, -194.647, 31.4766, 0.28", "-10.7747, -195.919, 31.8438, 0.55", "-11.1888, -198.609, 32.5214, 1.11", "-11.4323, -200.504, 32.935, 0.28", "-11.57, -201.573, 33.1401, 0.55", "-12.0503, -204.615, 33.6761, 0.28", "-12.1438, -205.198, 33.7867, 0.83", "-12.4669, -207.536, 34.2572, 0.83", "-12.7889, -209.965, 34.7554, 0.28", "-12.8218, -210.329, 34.8191, 1.11", "-12.937, -211.963, 35.0283, 1.11", "-13.1615, -214.383, 35.2337, 0.55", "-13.3107, -216.262, 35.4365, 1.11", "-13.4019, -217.83, 35.6604, 1.11", "-13.459, -218.927, 35.894, 1.11", "-13.5455, -220.378, 36.2102, 0.28", "-13.5491, -221.279, 36.4661, 0.55", "-13.5007, -222.678, 36.9129, 0.28", "-13.442, -223.378, 37.2436, 0.83", "-13.305, -224.747, 37.9928, 0.28", "-13.2276, -225.472, 38.3925, 0.83", "-12.8586, -228.195, 39.8364, 0.28", "-12.7696, -229.032, 40.2186, 0.83", "-12.6162, -231.384, 41.0965, 0.55", "-12.5697, -232.966, 41.5982, 1.11", "-12.5802, -234.677, 42.0163, 0.28", "-12.6062, -235.597, 42.1759, 0.83", "-12.7886, -238.077, 42.3883, 0.83", "-12.8584, -239.413, 42.5551, 0.28", "-12.8651, -240.237, 42.6671, 0.28", "-12.8134, -241.161, 42.8751, 0.83", "-12.6717, -242.281, 43.2074, 0.83", "-12.393, -243.783, 43.7296, 0.55", "-11.7407, -246.518, 44.763, 0.28", "-11.5851, -247.279, 45.0659, 1.11", "-11.3937, -248.397, 45.4771, 0.83", "-11.0801, -250.674, 46.205, 0.28", "-11.0333, -251.025, 46.2889, 0.55", "-10.8129, -252.573, 46.5016, 0.55", "-10.5283, -254.251, 46.5388, 0.55", "-10.2849, -255.626, 46.5139, 0.55", "-10.0915, -256.793, 46.4587, 0.55", "-9.85917, -258.306, 46.3905, 0.55", "-9.50517, -260.225, 46.2831, 0.55", "-9.11114, -262.082, 46.1609, 0.55", "-8.6982, -263.898, 46.026, 0.55", "-8.42402, -265.203, 45.9631, 0.28", "-8.13326, -266.786, 45.9008, 0.83", "-7.84693, -269.004, 45.8407, 0.83" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-10.1567, -158.09, 18.4239, 1.38", "-13.0027, -158.741, 19.0583, 1.38", "-16.4271, -159.525, 19.8216, 1.38" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "22.7968, -200.552, -29.2354, 0.55", "23.1341, -204.294, -29.5622, 0.55", "23.266, -206.15, -29.8096, 0.55", "23.4426, -208.369, -30.1415, 2.49", "23.5968, -210.156, -30.4797, 0.55", "23.7423, -211.882, -30.843, 0.55", "23.9264, -214.068, -31.3027, 0.83", "23.9683, -215.961, -31.789, 0.28", "24.0204, -216.844, -32.0489, 0.55", "24.145, -218.258, -32.53, 0.28", "24.2351, -219.14, -32.8521, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "22.7968, -200.552, -29.2354, 0.83", "25.0431, -200.816, -29.1417, 0.83", "26.9896, -200.9, -28.9235, 0.83", "29.0912, -200.912, -28.6848, 0.55", "31.6962, -200.956, -28.3775, 0.55", "32.5934, -201.033, -28.3145, 0.83", "34.4127, -201.379, -28.1858, 0.55", "36.0271, -201.856, -28.0428, 1.11", "37.6976, -202.622, -27.8841, 0.28", "38.8591, -203.35, -27.7658, 0.83", "41.1316, -205.136, -27.6435, 0.28", "43.2693, -207.041, -27.6447, 1.38", "44.4968, -208.259, -27.5736, 0.55", "45.4125, -209.281, -27.4269, 0.55", "46.6514, -210.852, -26.9573, 0.83", "47.5026, -212.05, -26.4555, 0.28", "48.6085, -213.647, -25.6527, 0.55", "50.7609, -216.772, -23.722, 0.28", "51.7683, -218.162, -22.7047, 0.83", "53.364, -220.154, -20.9873, 0.55", "53.9225, -220.774, -20.349, 0.55", "55.619, -222.474, -18.4172, 1.94", "57.6968, -224.454, -16.2379, 0.55", "58.691, -225.305, -15.3079, 0.55", "59.5683, -225.999, -14.4832, 0.55", "61.334, -227.501, -12.8748, 0.28", "61.938, -228.12, -12.3215, 1.38", "63.1036, -229.608, -11.2178, 1.38", "64.679, -232.06, -10.0717, 0.55", "65.2867, -233.39, -9.27437, 0.55", "66.3104, -236.095, -7.47393, 1.11", "67.0881, -238.452, -5.91898, 0.28", "67.2181, -238.909, -5.60578, 0.83", "67.8122, -241.411, -3.74889, 0.28", "69.3294, -249.624, 2.62315, 0.83", "69.4341, -250.765, 3.87725, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-13.6331, 262.217, 4.41351, 0.55", "-13.6668, 263.599, 4.47803, 0.55", "-13.6106, 264.948, 4.72564, 0.28", "-13.6055, 266.157, 5.05502, 0.55", "-13.6754, 267.012, 5.37582, 0.28", "-13.8594, 268.255, 5.84658, 0.83", "-14.0651, 269.52, 6.28723, 0.83", "-14.2712, 271.482, 7.33217, 0.55", "-14.3278, 272.606, 8.06133, 0.55", "-14.356, 274.733, 9.60406, 0.83", "-14.3713, 275.911, 10.5224, 0.83", "-14.331, 277.252, 11.6629, 0.83", "-14.3674, 281.502, 15.2393, 0.55", "-14.3638, 282.366, 15.9071, 0.55", "-14.3428, 282.77, 16.1965, 0.83", "-14.2582, 283.69, 16.8032, 0.55", "-14.0055, 286.532, 18.3781, 1.11", "-13.8571, 289.012, 19.4145, 0.83", "-13.8142, 290.757, 19.8564, 0.55", "-13.7466, 292.06, 20.1468, 1.11", "-13.6328, 293.507, 20.4659, 0.55", "-13.36, 295.892, 20.9621, 1.11", "-13.1645, 297.726, 21.3208, 0.55", "-12.9616, 299.368, 21.7033, 0.55", "-12.8994, 300.26, 21.9448, 0.28", "-12.8253, 301.855, 22.4032, 0.83", "-12.8103, 303.471, 22.8387, 0.55", "-12.8551, 304.919, 23.193, 0.83", "-12.9576, 306.293, 23.5011, 0.83", "-13.1964, 308.272, 23.9421, 0.55", "-13.4916, 310.242, 24.3396, 0.55", "-13.9557, 312.777, 24.7994, 0.83", "-14.4641, 315.286, 25.2473, 0.83", "-14.9466, 317.629, 25.6547, 0.83", "-15.2619, 319.087, 25.9008, 0.83", "-15.6736, 321.032, 26.191, 0.83", "-16.0485, 322.735, 26.4585, 0.83", "-16.3692, 324.589, 26.7789, 0.83", "-16.5291, 325.677, 26.9783, 0.83", "-16.6858, 327.189, 27.2768, 0.55", "-16.8428, 328.474, 27.4962, 0.83", "-17.0467, 330.047, 27.7888, 0.83", "-17.3662, 332.603, 28.276, 0.55", "-17.7045, 335.065, 28.7906, 0.83", "-18.1107, 337.693, 29.3842, 0.55", "-18.6826, 340.514, 30.1015, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-13.6331, 262.217, 4.41351, 0.55", "-15.5255, 265.76, 6.23375, 0.55", "-17.1182, 268.594, 7.26937, 0.28", "-17.9006, 269.896, 7.64601, 0.83", "-19.0529, 271.702, 8.0982, 0.28", "-19.6314, 272.606, 8.30002, 0.28", "-20.5841, 274.064, 8.58759, 0.83", "-22.3927, 277.017, 8.88988, 0.83", "-23.3132, 278.561, 8.92608, 0.28", "-24.6137, 280.87, 9.01826, 0.83", "-25.283, 282.05, 9.06917, 0.55", "-26.5518, 284.347, 9.23368, 1.11", "-27.7217, 286.583, 9.40932, 0.55", "-28.6202, 288.48, 9.55592, 1.11", "-29.5481, 290.632, 9.71838, 0.55", "-30.7377, 293.657, 9.93795, 1.11", "-31.4471, 295.473, 10.0891, 0.28", "-31.9918, 296.914, 10.2354, 0.55", "-32.6704, 298.566, 10.4503, 0.28", "-33.147, 299.736, 10.6308, 0.83", "-33.6744, 301.293, 10.7798, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "2.7634, 464.386, -39.5658, 0.83", "3.55449, 467.507, -39.8708, 0.83", "3.93886, 469.206, -40.0618, 0.83", "4.49537, 471.742, -40.3439, 2.22", "5.02079, 474.31, -40.6524, 1.66", "5.65931, 477.44, -40.9082, 0.83", "5.86016, 478.473, -40.9681, 0.83", "6.22368, 480.776, -41.0799, 0.83", "6.65265, 483.955, -41.1518, 1.66", "6.86429, 486.429, -41.1622, 0.55", "6.92781, 488.92, -41.2172, 0.55", "6.90912, 490.475, -41.294, 1.11", "6.83921, 493.141, -41.5499, 0.55", "6.65326, 497.506, -42.2027, 1.66", "6.63123, 499.723, -42.5975, 0.83", "6.71519, 503.344, -43.2978, 0.83", "6.79883, 505.096, -43.6742, 0.83", "6.98857, 507.049, -44.0527, 1.66", "7.37063, 509.701, -44.4918, 0.83", "8.10585, 513.771, -44.9935, 0.83", "8.75142, 516.816, -45.2099, 0.83", "9.03002, 517.972, -45.215, 0.83", "9.64286, 520.568, -45.1664, 0.83", "10.0184, 522.28, -45.1381, 1.38", "10.5801, 524.951, -45.0829, 0.55", "10.9749, 526.721, -45.0449, 1.38", "11.7675, 530.104, -44.9645, 1.38", "12.4094, 533.002, -44.9012, 0.83", "13.064, 536.148, -44.8319, 0.83", "13.8094, 539.587, -44.7422, 1.11", "14.4097, 542.411, -44.6605, 0.55", "14.8371, 544.682, -44.594, 0.55", "15.1628, 546.482, -44.5989, 0.55", "15.9228, 550.469, -44.7009, 2.22", "16.2719, 552.254, -44.7887, 0.55", "16.644, 554.038, -44.9054, 0.55", "16.8223, 554.919, -44.9711, 1.11", "17.6852, 559.105, -45.2827, 0.55", "18.1129, 561.418, -45.4572, 0.55", "18.2464, 562.326, -45.5263, 0.55", "18.5173, 565.16, -45.7142, 1.11", "18.6715, 567.888, -45.922, 1.11", "18.7424, 570.13, -46.0693, 0.83", "18.6921, 572.474, -46.1725, 0.83", "18.6283, 573.954, -46.257, 0.83", "18.3961, 576.911, -46.4771, 0.83", "17.9621, 580.258, -46.8237, 2.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "2.7634, 464.386, -39.5658, 0.55", "1.01999, 464.328, -40.0313, 0.55", "-0.803474, 464.267, -40.518, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-16.4271, -159.525, 19.8216, 1.11", "-16.3968, -161.001, 19.8195, 1.11", "-16.3456, -163.496, 19.816, 1.11" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-16.4271, -159.525, 19.8216, 1.11", "-19.3403, -157.869, 18.8477, 1.11", "-20.2838, -157.206, 18.5892, 0.28", "-20.8886, -156.778, 18.5891, 0.83", "-23.0929, -155.218, 18.9141, 0.55", "-24.0941, -154.556, 19.1367, 0.55", "-25.0715, -153.936, 19.3229, 0.55", "-26.4276, -153.155, 19.6162, 0.55", "-29.8294, -151.406, 20.2317, 1.11", "-31.8412, -150.402, 20.5719, 0.55", "-33.1481, -149.762, 20.801, 0.55", "-36.1765, -148.495, 21.2474, 0.83", "-38.0186, -147.819, 21.4939, 0.55", "-39.8292, -147.243, 21.7137, 1.11", "-42.7845, -146.428, 21.9736, 0.83", "-43.8229, -146.197, 22.0951, 0.83", "-45.255, -145.904, 22.3472, 0.83", "-47.4554, -145.57, 22.9102, 0.83", "-50.2303, -145.263, 23.6581, 1.11", "-51.5395, -145.187, 23.9624, 0.83", "-53.4399, -145.159, 24.3302, 0.83", "-56.2633, -145.181, 24.7867, 0.83", "-58.1369, -145.261, 24.99, 0.55", "-59.5526, -145.435, 25.0767, 1.38", "-61.6194, -145.711, 25.0693, 0.55", "-63.5065, -145.881, 24.9926, 0.55", "-64.6705, -145.996, 24.8875, 0.55", "-66.4254, -146.168, 24.6204, 0.55", "-67.3835, -146.219, 24.4319, 0.83", "-70.5974, -146.161, 23.6967, 0.55", "-71.7286, -146.107, 23.4126, 0.55", "-73.0113, -145.984, 23.0798, 0.55", "-75.4461, -145.667, 22.6042, 0.55", "-77.9521, -145.281, 22.2852, 1.11", "-80.4693, -144.894, 22.0898, 0.55", "-81.1352, -144.818, 22.0883, 0.55", "-83.3492, -144.673, 22.2365, 0.55", "-85.828, -144.558, 22.656, 1.94", "-87.5419, -144.599, 23.211, 0.83", "-88.1544, -144.648, 23.443, 0.28", "-89.2347, -144.822, 23.854, 0.55", "-90.7989, -145.149, 24.4204, 0.55", "-92.164, -145.501, 24.8851, 0.28", "-94.559, -146.161, 25.7458, 1.11", "-96.3168, -146.712, 26.4763, 0.28", "-98.2183, -147.222, 27.3427, 0.83", "-99.668, -147.538, 28.0861, 0.28", "-100.281, -147.627, 28.4438, 0.28", "-101.762, -147.721, 29.444, 0.28", "-102.54, -147.68, 30.0546, 0.55", "-104.058, -147.384, 31.3389, 0.55", "-104.696, -147.12, 31.8145, 0.83", "-105.761, -146.586, 32.4805, 0.28", "-106.031, -146.455, 32.6252, 0.83", "-107.794, -145.626, 33.4309, 0.83", "-109.241, -144.953, 34.0674, 0.83", "-110.908, -144.283, 34.7712, 0.55", "-111.759, -143.98, 35.1181, 0.55", "-113.357, -143.523, 35.769, 1.38", "-115.068, -143.133, 36.473, 1.38", "-116.494, -142.899, 37.0677, 0.28", "-117.663, -142.852, 37.5265, 0.83", "-118.595, -142.93, 37.8769, 0.28", "-119.49, -143.113, 38.1895, 1.38", "-120.86, -143.514, 38.628, 0.28", "-121.343, -143.727, 38.7657, 0.83", "-122.69, -144.478, 39.1054, 0.55", "-123.413, -144.903, 39.2637, 0.55", "-124.692, -145.632, 39.5061, 1.11" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "24.2351, -219.14, -32.8521, 0.83", "24.3387, -220.606, -32.9081, 0.83", "24.3787, -222.002, -33.1152, 1.94", "24.4204, -223.407, -33.3811, 1.94", "24.4168, -226.199, -34.0105, 0.83", "24.3922, -228.146, -34.4581, 1.38", "24.2144, -233.205, -35.7413, 0.28", "24.1966, -233.65, -35.8703, 0.83", "24.1246, -234.925, -36.3127, 0.55", "23.9487, -236.693, -37.0522, 0.28", "23.6672, -238.37, -37.9099, 0.55", "23.2346, -240.634, -39.0302, 3.6" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "24.2351, -219.14, -32.8521, 0.28", "21.8057, -218.116, -29.7804, 0.28", "21.459, -217.97, -29.3421, 1.38", "18.9694, -216.92, -26.1942, 0.55", "17.5448, -216.32, -24.3929, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "69.4341, -250.765, 3.87725, 1.38", "69.9326, -253.75, 3.88689, 1.38" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "69.4341, -250.765, 3.87725, 0.55", "70.748, -249.725, 3.15192, 0.55", "71.5943, -249.055, 2.68477, 0.55", "73.8261, -247.287, 1.45279, 0.28", "74.5493, -246.714, 1.05354, 1.11", "76.7641, -244.961, -0.169017, 0.28", "78.6185, -243.492, -1.1927, 0.83" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-18.6826, 340.514, 30.1015, 1.38", "-18.5317, 341.321, 30.2447, 1.38", "-18.4451, 342.046, 30.4231, 0.55", "-18.3986, 342.657, 30.6927, 0.55", "-18.3581, 343.188, 30.9273, 0.55", "-18.3111, 343.806, 31.1996, 1.11", "-18.217, 345.042, 31.745, 0.55", "-18.19, 345.924, 32.2307, 1.11", "-18.1754, 347.207, 33.0712, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-18.6826, 340.514, 30.1015, 0.55", "-19.8544, 344.449, 30.105, 0.55", "-20.4324, 346.095, 30.3131, 0.28", "-21.1908, 347.651, 30.5693, 0.83", "-22.6581, 350.39, 31.0696, 0.28", "-24.008, 352.728, 31.5957, 0.55", "-25.3034, 354.905, 32.1505, 0.55", "-27.8837, 358.656, 33.3793, 1.11", "-30.1921, 361.737, 34.6576, 0.55", "-31.1142, 362.877, 35.131, 0.55", "-33.2066, 365.413, 36.1932, 0.83", "-34.6972, 367.136, 36.8837, 0.83", "-37.0215, 369.675, 37.6867, 0.83", "-38.3, 371.028, 38.0272, 0.83", "-41.4374, 374.608, 38.6273, 0.55", "-43.9844, 377.615, 38.7242, 0.83", "-45.6744, 379.553, 38.549, 0.83", "-48.6523, 382.962, 38.0256, 0.55", "-51.0964, 385.875, 37.4574, 0.55", "-52.6123, 387.677, 37.0752, 0.83", "-56.1676, 391.822, 36.3269, 0.83", "-58.3632, 394.363, 35.829, 0.83", "-59.951, 396.183, 35.4684, 0.28", "-61.2086, 397.538, 35.1298, 0.55", "-63.8324, 399.816, 33.9723, 0.55", "-65.4211, 401.041, 33.1986, 0.55", "-66.8357, 402.026, 32.4546, 0.55", "-70.5552, 404.408, 30.4102, 0.55", "-74.5901, 406.596, 28.1619, 0.83", "-81.2565, 409.715, 24.6296, 0.28", "-83.4613, 410.526, 23.4674, 0.28", "-84.7422, 410.913, 22.7579, 0.55", "-86.4549, 411.352, 21.7246, 0.28", "-87.5515, 411.62, 21.0004, 0.83", "-89.2352, 412.112, 19.8299, 0.83", "-94.7593, 413.935, 15.6104, 0.83", "-98.9169, 415.273, 12.2302, 0.28", "-102.924, 416.479, 8.89969, 1.11", "-108.833, 418.192, 3.95273, 0.55", "-110.415, 418.622, 2.69017, 0.55", "-113.341, 419.28, 0.50197, 0.55", "-115.411, 419.662, -0.836462, 0.55", "-117.761, 419.971, -2.13565, 0.83", "-122.073, 420.394, -4.16857, 0.55", "-125.262, 420.659, -5.56118, 1.11", "-135.174, 421.497, -9.7453, 0.28", "-136.38, 421.637, -10.291, 0.55", "-140.545, 422.302, -12.229, 0.28", "-143.669, 422.855, -13.7562, 1.11", "-148.645, 423.765, -16.3522, 0.55", "-150.888, 424.241, -17.7223, 1.11", "-156.055, 425.495, -21.2743, 0.55", "-157.418, 425.873, -22.3278, 0.55", "-160.802, 426.891, -25.1922, 1.11", "-162.466, 427.439, -26.7382, 1.11", "-168.136, 429.487, -32.4683, 0.28", "-169.768, 430.092, -34.1874, 0.83", "-173.785, 431.512, -38.2644, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-33.6744, 301.293, 10.7798, 0.55", "-34.0371, 302.532, 11.2447, 0.55", "-34.5259, 304.072, 11.7767, 0.28", "-35.2795, 306.248, 12.4596, 1.38", "-36.4742, 309.371, 13.364, 0.28", "-37.5521, 312.007, 14.0752, 0.55", "-38.1393, 313.431, 14.4335, 0.55", "-38.6498, 314.636, 14.7072, 0.83", "-39.4319, 316.374, 15.0539, 0.28", "-40.1031, 317.787, 15.2396, 0.83", "-40.5693, 318.813, 15.2881, 0.28", "-40.9944, 319.835, 15.3509, 0.28", "-41.6456, 321.408, 15.4497, 0.83", "-42.3973, 323.277, 15.5644, 0.28", "-42.7605, 324.216, 15.6184, 0.55", "-43.5911, 326.388, 15.7358, 0.55", "-44.2183, 328.006, 15.8314, 0.28", "-44.5466, 328.814, 15.8829, 0.28", "-45.1157, 330.269, 15.9743, 1.11", "-45.7644, 332.127, 15.9749, 0.28", "-46.1929, 333.415, 15.8777, 0.83", "-46.611, 334.835, 15.6456, 0.28", "-46.9601, 336.504, 15.258, 0.83", "-47.1179, 337.535, 14.9904, 0.83", "-47.4199, 340.257, 14.2237, 0.55", "-47.5778, 342.094, 13.7115, 0.55", "-47.6813, 343.267, 13.4097, 0.55", "-47.8811, 345.395, 12.921, 0.83", "-48.0577, 347.193, 12.5866, 0.55", "-48.378, 349.828, 12.2312, 1.11", "-48.6234, 351.662, 12.0753, 0.55", "-48.872, 353.384, 11.9569, 0.55", "-49.0493, 354.479, 11.8507, 0.83", "-49.1938, 355.318, 11.7056, 0.55", "-49.6172, 358.24, 11.0229, 0.83", "-49.7637, 359.428, 10.5793, 0.28", "-49.7928, 359.669, 10.461, 0.28", "-49.8996, 360.701, 9.87466, 0.55", "-50.1543, 363.342, 8.27268, 0.28", "-50.2039, 363.839, 7.99264, 0.55", "-50.4511, 366.417, 6.62399, 0.28", "-50.5454, 367.466, 6.15176, 0.83", "-50.7794, 369.288, 5.47317, 0.83", "-50.8917, 370.057, 5.25637, 0.28", "-51.1415, 372.366, 4.79777, 0.55", "-51.2862, 373.87, 4.57594, 0.28", "-51.4175, 375.826, 4.55792, 0.83", "-51.5262, 378.411, 4.69385, 0.28", "-51.5292, 379.531, 4.84586, 0.28", "-51.4936, 381.093, 5.1685, 0.55", "-51.4395, 383.483, 5.68712, 0.83", "-51.4274, 386.646, 6.41838, 0.28", "-51.4081, 387.981, 6.67189, 0.83", "-51.3833, 390.192, 6.90318, 0.28", "-51.3406, 393.1, 6.79863, 1.38", "-51.3117, 395.69, 6.42726, 0.28", "-51.2307, 397.954, 5.90267, 0.83", "-51.1317, 400.13, 5.22222, 0.83", "-50.9445, 403.55, 4.07009, 0.55", "-50.8369, 407.043, 2.8334, 0.55", "-50.7576, 409.506, 2.0738, 0.83", "-50.701, 411.405, 1.7433, 0.83", "-50.6562, 413.869, 1.59295, 0.55", "-50.6654, 415.5, 1.8184, 0.55", "-50.6601, 417.897, 2.57502, 1.38", "-50.7389, 420.859, 3.84993, 0.83", "-50.816, 424.261, 5.62588, 1.11", "-50.8557, 425.934, 6.66511, 1.11", "-50.8382, 429.314, 9.17619, 0.83", "-50.7883, 430.045, 9.77827, 0.83" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-33.6744, 301.293, 10.7798, 0.28", "-32.0721, 301.11, 11.8477, 0.28", "-31.6641, 301.063, 12.1196, 0.83", "-30.4069, 300.92, 12.9575, 0.28", "-30.2227, 300.899, 13.0803, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "17.9621, 580.258, -46.8237, 0.55", "18.7718, 582.842, -46.478, 0.55", "19.6613, 585.723, -46.1713, 0.55", "20.1442, 587.382, -46.0347, 0.55", "20.8526, 589.542, -45.8256, 0.28", "21.591, 591.52, -45.6006, 0.83", "22.744, 594.53, -45.2471, 0.28", "23.1971, 595.738, -45.1232, 0.83", "23.8378, 597.595, -44.9741, 0.55", "24.7695, 600.207, -44.8047, 0.55", "25.3082, 601.758, -44.7348, 0.83", "25.8972, 603.719, -44.6995, 0.28", "26.3222, 605.324, -44.6457, 0.83", "26.7702, 607.149, -44.6178, 0.83", "27.1033, 608.49, -44.6948, 0.28", "27.4524, 610.419, -44.9526, 0.83", "27.6708, 612.028, -45.3088, 0.83", "27.9432, 614.023, -46.1425, 0.83", "28.1995, 616.246, -47.4504, 1.11", "28.5817, 618.791, -49.6057, 0.55", "28.7512, 620.612, -51.6089, 0.55", "28.8289, 622.249, -53.7675, 1.11", "28.9278, 624.964, -58.0374, 0.28", "28.9725, 625.659, -59.2557, 0.28", "29.1368, 627.803, -63.2432, 0.83", "29.3095, 629.036, -65.6602, 0.55", "29.4272, 629.451, -66.5381, 0.55", "29.8582, 630.816, -69.2863, 0.55", "30.1786, 631.857, -71.2975, 0.83", "30.7927, 633.761, -75.1783, 0.55", "31.8243, 637.156, -82.2465, 1.94", "32.9316, 640.02, -88.6727, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "17.9621, 580.258, -46.8237, 0.55", "17.3632, 582.431, -47.2631, 0.55", "16.8495, 584.444, -47.7158, 0.83", "16.63, 585.425, -47.9965, 0.55", "16.3201, 587.609, -48.6359, 0.83", "16.005, 590.762, -49.5897, 0.55", "15.8385, 592.13, -50.0706, 0.55", "15.7124, 593.412, -50.6751, 1.11", "15.6297, 595.209, -51.6368, 0.83", "15.564, 597.443, -52.985, 0.83", "15.4587, 600.037, -54.7442, 0.83", "15.1985, 602.193, -56.3655, 0.55", "14.8044, 604.608, -58.2237, 0.28", "14.3687, 606.931, -60.6191, 0.83", "13.998, 608.666, -62.6756, 0.55", "13.5339, 610.628, -65.2394, 1.38", "13.1567, 612.457, -67.7185, 0.55", "12.9668, 613.563, -69.1682, 0.55", "11.7647, 620.916, -78.4162, 0.83", "11.5691, 622.008, -79.8061, 0.55", "11.5358, 622.274, -80.1233, 0.55", "11.387, 623.957, -81.9258, 1.38", "11.3319, 625.293, -83.0539, 1.38", "11.1385, 628.037, -84.3701, 0.28", "10.9765, 629.251, -84.3041, 0.55", "10.7764, 631.334, -84.0219, 0.28", "10.542, 633.576, -83.6326, 0.55", "10.0404, 637.504, -82.6847, 0.55", "9.70632, 639.909, -82.0206, 0.55", "9.30076, 642.76, -81.1254, 0.55", "9.06414, 645.097, -80.2665, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-16.3456, -163.496, 19.816, 0.55", "-17.4099, -164.044, 21.0573, 0.55", "-18.257, -164.483, 22.0646, 0.28", "-19.0338, -164.886, 22.9884, 1.11", "-21.8741, -166.358, 26.366, 0.28", "-22.2443, -166.55, 26.8062, 1.11", "-24.1618, -167.544, 29.0864, 0.28", "-24.62, -167.791, 29.7613, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-16.3456, -163.496, 19.816, 0.83", "-17.6681, -165.16, 21.2384, 0.83", "-18.9436, -166.521, 22.5988, 0.83", "-20.0646, -167.43, 23.924, 0.83", "-22.0293, -168.89, 26.2575, 0.83", "-23.2891, -170.024, 28.2102, 0.83", "-24.8064, -171.698, 31.0646, 0.83", "-25.5603, -172.686, 32.7449, 0.83", "-27.0182, -175.361, 36.7955, 1.11", "-27.2432, -176.067, 37.7666, 1.11", "-27.7667, -179.692, 42.0825, 1.11", "-27.9067, -182.226, 44.7079, 1.11", "-27.8999, -184.57, 46.815, 1.11", "-27.7714, -186.751, 48.5864, 1.38", "-27.429, -190.278, 51.0385, 0.55", "-27.3111, -191.77, 52.011, 0.83", "-27.2993, -193.236, 52.8139, 0.83", "-27.2363, -194.487, 53.5051, 0.83", "-27.1971, -195.679, 54.2222, 0.83", "-27.162, -197.983, 55.3668, 0.55", "-27.2792, -199.553, 55.8563, 0.55", "-27.4078, -200.427, 56.0449, 1.11", "-27.7143, -202.052, 56.2505, 0.28", "-27.9191, -202.928, 56.3238, 1.11", "-28.5373, -204.849, 56.3446, 0.55", "-29.2782, -206.709, 56.106, 0.55", "-30.3136, -208.777, 55.7265, 0.28", "-30.6838, -209.432, 55.5543, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-124.692, -145.632, 39.5061, 1.11", "-126.768, -145.278, 40.3615, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-124.692, -145.632, 39.5061, 0.28", "-125.773, -147.788, 39.0587, 0.28", "-125.978, -148.196, 38.9739, 0.83", "-126.989, -150.21, 38.5558, 0.28", "-127.274, -150.777, 38.438, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "23.2346, -240.634, -39.0302, 0.55", "22.1905, -242.066, -37.6633, 0.55", "21.4127, -243.065, -36.7926, 0.55", "20.0684, -244.837, -34.8667, 0.28", "19.6982, -245.392, -34.3023, 0.55", "19.1272, -246.248, -33.4336, 1.11", "18.3962, -247.372, -32.3258, 0.28", "17.7961, -248.207, -31.4449, 0.55", "16.0025, -250.508, -29.0924, 0.28", "14.4493, -252.423, -27.2164, 0.83", "12.9201, -254.375, -25.2738, 0.28", "12.4971, -254.94, -24.7074, 0.83", "11.4195, -256.365, -23.2641, 0.83", "10.2386, -257.784, -21.8601, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "23.2346, -240.634, -39.0302, 0.28", "23.2555, -244.622, -38.769, 0.28", "23.2891, -246.023, -38.6134, 0.55", "23.3783, -248.38, -38.3045, 0.28", "23.5119, -251.216, -37.9102, 1.11", "23.7014, -254.588, -37.4326, 0.28", "23.7711, -255.484, -37.3107, 0.55", "23.8794, -256.875, -36.9999, 0.28", "23.9609, -257.744, -36.7786, 0.55", "24.0285, -258.853, -36.4474, 0.28", "24.0507, -259.467, -36.2818, 0.55", "24.0738, -261.491, -35.9899, 0.28", "24.0874, -263.281, -35.8204, 1.11", "24.0737, -267.06, -35.2687, 0.28", "24.0849, -269.246, -34.8934, 1.11", "24.0865, -270.987, -34.5846, 1.11", "24.0742, -274.22, -33.9994, 0.28", "24.0631, -276.268, -33.6245, 0.83", "24.2153, -280.625, -32.9151, 0.55", "24.3679, -283.041, -32.6772, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "69.9326, -253.75, 3.88689, 0.28", "71.7311, -255.338, 5.39676, 0.28", "72.3648, -255.882, 5.92429, 0.83", "73.3697, -256.747, 6.73573, 0.28", "74.7877, -257.979, 7.84779, 0.83", "76.2105, -259.271, 8.93002, 0.28", "77.2754, -260.216, 9.72245, 0.55", "77.8509, -260.68, 10.1505, 0.28", "79.1366, -261.606, 11.0715, 0.55", "79.9997, -262.192, 11.6665, 0.28", "80.9759, -262.819, 12.3327, 0.55", "82.2575, -263.545, 13.1881, 0.55", "83.5957, -264.223, 13.9764, 0.55", "85.4528, -265.157, 14.9615, 0.83", "86.6403, -265.726, 15.4427, 0.28", "87.7988, -266.329, 15.8076, 0.83", "88.8804, -267.017, 16.3086, 1.38", "91.0798, -268.733, 17.6289, 0.28", "92.2614, -269.788, 18.3516, 0.83", "94.061, -271.486, 19.4914, 0.28", "95.1658, -272.574, 20.2569, 1.11", "99.139, -276.812, 23.4821, 0.28", "99.6199, -277.362, 23.9321, 0.55", "101.934, -280.125, 26.3298, 0.28", "103.482, -282.024, 27.9213, 0.28", "104.148, -282.918, 28.5899, 0.55", "105.289, -284.336, 29.5069, 0.28", "106.065, -285.223, 29.8374, 0.28", "107.012, -286.407, 30.2838, 0.55", "107.942, -287.921, 31.0289, 0.55", "108.522, -289.181, 31.3378, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "69.9326, -253.75, 3.88689, 0.55", "68.4706, -254.682, 2.96069, 0.55", "67.8647, -255.068, 2.57682, 0.55", "67.1178, -255.545, 2.10365, 0.28", "66.1299, -256.175, 1.47775, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-18.1754, 347.207, 33.0712, 0.83", "-18.1862, 349.565, 34.0198, 0.83", "-18.1547, 353.206, 35.4597, 0.83", "-18.1086, 355.692, 36.4582, 0.83", "-18.1726, 360.848, 38.4931, 0.83", "-18.1862, 361.445, 38.6869, 1.11", "-18.2478, 363.002, 39.1054, 0.55", "-18.32, 363.925, 39.3067, 0.83", "-18.5437, 364.682, 37.6282, 0.28", "-18.5871, 365.413, 35.8317, 0.55", "-18.3671, 367.78, 30.2128, 0.28", "-18.2678, 368.555, 28.603, 0.83", "-18.153, 369.196, 27.3752, 0.83", "-17.1429, 373.586, 19.9321, 0.55", "-16.7525, 374.906, 17.9732, 0.55", "-16.2724, 376.233, 16.6148, 1.11", "-14.7561, 380.974, 14.7098, 0.55", "-14.5582, 381.645, 14.6213, 0.83", "-14.2928, 382.727, 14.806, 0.28", "-14.1946, 383.305, 15.0302, 0.55", "-14.1377, 384.236, 15.2745, 0.28", "-14.1221, 385.528, 15.3917, 0.83", "-14.0265, 386.884, 15.3004, 0.28", "-13.9748, 387.784, 15.2255, 0.83", "-13.8275, 390.674, 14.7203, 0.55", "-13.6878, 393.296, 14.0946, 0.55", "-13.5987, 395.236, 13.5584, 0.55", "-13.4714, 397.942, 12.7918, 0.55", "-13.406, 399.759, 12.2275, 0.55", "-13.3063, 403.693, 11.0389, 0.55", "-13.2582, 404.915, 10.6609, 0.28", "-13.204, 405.998, 10.2931, 0.55", "-13.1679, 407.5, 9.77006, 0.28", "-13.2294, 409.83, 8.89845, 0.55", "-13.2575, 410.795, 8.5618, 0.55", "-13.2713, 412.622, 8.01336, 0.28", "-13.224, 414.346, 7.39214, 0.28", "-13.1242, 415.228, 7.04803, 0.55", "-12.6702, 417.182, 5.82401, 0.28", "-12.256, 418.189, 4.93982, 0.83", "-11.7719, 419.251, 3.92526, 0.83", "-10.8018, 421.108, 1.99517, 0.55", "-9.98284, 422.458, 0.423811, 0.55", "-7.35466, 426.363, -4.55054, 0.28", "-5.49618, 428.767, -7.93305, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-18.1754, 347.207, 33.0712, 0.55", "-19.5177, 349.62, 33.6854, 0.55", "-21.2841, 352.796, 34.4936, 0.55", "-22.5267, 355.03, 35.0622, 0.55", "-23.6055, 356.969, 35.5558, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-50.7883, 430.045, 9.77827, 0.28", "-50.9944, 430.671, 7.86726, 0.28", "-51.0518, 430.845, 7.33574, 0.55", "-51.6159, 432.558, 2.10748, 0.28", "-51.6799, 432.753, 1.51412, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-50.7883, 430.045, 9.77827, 0.28", "-52.3469, 431.658, 10.0782, 0.28", "-53.3103, 432.656, 10.2635, 0.83", "-54.0307, 433.401, 10.4021, 0.83", "-54.4865, 433.873, 10.4898, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "32.9316, 640.02, -88.6727, 0.55", "30.295, 641.142, -90.0249, 0.55", "27.2584, 642.505, -91.8477, 0.55", "24.9911, 643.523, -93.2086, 0.55", "22.3584, 644.706, -94.789, 0.28", "19.9772, 645.775, -96.2183, 0.83", "18.1421, 646.599, -97.3198, 0.83", "16.2825, 647.605, -98.6877, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "32.9316, 640.02, -88.6727, 0.55", "32.2487, 642.441, -89.4486, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-126.768, -145.278, 40.3615, 0.28", "-128.045, -145.104, 40.959, 0.28", "-129.304, -144.863, 41.5811, 0.55", "-130.699, -144.573, 42.292, 0.28", "-131.469, -144.429, 42.7117, 1.11", "-132.63, -144.215, 43.3853, 0.28", "-132.933, -144.152, 43.5485, 0.55", "-134.669, -143.791, 44.4148, 0.28", "-135.166, -143.676, 44.6602, 1.11", "-136.295, -143.44, 45.2074, 0.28", "-136.961, -143.306, 45.5366, 1.11", "-138.515, -143.012, 46.3721, 1.11", "-139.621, -142.833, 46.8936, 0.55" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-126.768, -145.278, 40.3615, 0.83", "-129.327, -147.858, 40.2429, 0.83" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "10.2386, -257.784, -21.8601, 0.83", "9.50197, -258.827, -22.5403, 0.83", "8.26858, -260.573, -23.6793, 0.28", "7.23408, -262.037, -24.6347, 1.11", "4.31084, -266.175, -27.3343, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "10.2386, -257.784, -21.8601, 1.11", "8.20106, -255.77, -20.6734, 1.11" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-54.4865, 433.873, 10.4898, 0.55", "-53.4956, 434.984, 8.78256, 0.55", "-52.4133, 436.023, 7.27383, 0.28", "-52.1468, 436.271, 6.75812, 0.55", "-50.2655, 438.024, 3.11832, 0.28", "-49.3832, 438.846, 1.41139, 0.55", "-48.1838, 439.963, -0.909172, 0.28", "-47.4397, 440.764, -2.81765, 0.55", "-45.4841, 443.199, -9.10358, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-54.4865, 433.873, 10.4898, 0.28", "-55.3975, 434.043, 10.8604, 0.28", "-56.8035, 434.304, 11.4323, 0.55", "-57.9967, 434.526, 11.9177, 0.55", "-59.2557, 434.76, 12.4298, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "16.2825, 647.605, -98.6877, 0.55", "15.6876, 648.71, -98.8348, 0.55", "15.1126, 649.778, -98.977, 0.55", "14.59, 650.748, -99.1063, 0.83", "13.9557, 651.926, -99.2632, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "16.2825, 647.605, -98.6877, 0.28", "14.7505, 648.506, -100.238, 0.28", "14.3301, 648.753, -100.664, 0.28", "13.48, 649.253, -101.524, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "4.31084, -266.175, -27.3343, 1.11", "4.00201, -268.879, -25.3671, 1.11", "3.60386, -271.634, -23.2369, 0.28", "3.26082, -273.546, -21.7526, 1.11", "2.03494, -278.806, -17.3627, 0.28", "1.68858, -280.112, -16.2588, 1.94", "0.664016, -283.934, -13.2345, 1.11", "0.397978, -284.781, -12.5737, 0.28", "0.0517989, -285.756, -11.8325, 0.83", "-0.894545, -288.383, -10.1469, 0.28", "-1.31446, -289.624, -9.65349, 1.11", "-2.36713, -292.951, -8.62987, 0.28", "-3.19767, -295.62, -8.08748, 0.28", "-3.58772, -297.024, -7.81885, 1.11", "-3.58772, -297.024, -7.81885, 1.11", "-3.98605, -298.787, -7.66576, 0.55", "-4.17736, -299.557, -7.57965, 1.38", "-5.09603, -302.472, -7.06931, 0.28", "-5.19593, -302.784, -6.99007, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "4.31084, -266.175, -27.3343, 0.55", "1.39973, -265.967, -26.0016, 0.55", "-0.404121, -265.838, -25.1759, 0.55", "-1.9495, -265.727, -24.4685, 0.83" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-59.2557, 434.76, 12.4298, 0.55", "-59.8225, 436.177, 12.7558, 0.55", "-60.6673, 438.775, 13.4259, 0.55", "-61.078, 440.519, 13.8354, 0.55", "-61.5382, 442.678, 14.2622, 0.55", "-61.9231, 444.668, 14.7125, 0.28", "-62.0868, 445.58, 14.869, 0.83", "-62.4429, 448.182, 15.1914, 0.83", "-62.6063, 450.422, 15.4204, 0.83", "-62.6707, 451.57, 15.4876, 0.55", "-62.6497, 454.501, 15.5536, 0.83", "-62.4354, 457.821, 15.3928, 0.28", "-62.3462, 459.411, 15.1771, 0.28" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-59.2557, 434.76, 12.4298, 0.55", "-61.7822, 433.424, 14.6937, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_0", "dend_57", "dend_30", "dend_12", "dend_1", "dend_59", "dend_58", "dend_46", "dend_31", "dend_28", "dend_13", "dend_3", "dend_2", "dend_61", "dend_60", "dend_56", "dend_47", "dend_37", "dend_32", "dend_23", "dend_14", "dend_5", "dend_4", "dend_53", "dend_48", "dend_39", "dend_38", "dend_34", "dend_33", "dend_25", "dend_24", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_49", "dend_41", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_22", "dend_17", "dend_9", "dend_8", "dend_52", "dend_51", "dend_43", "dend_42", "dend_21", "dend_18", "dend_11", "dend_10", "dend_45", "dend_44", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_29", "dend_0", "dend_57", "dend_30", "dend_12", "dend_1", "dend_59", "dend_58", "dend_46", "dend_31", "dend_28", "dend_13", "dend_3", "dend_2", "dend_61", "dend_60", "dend_56", "dend_47", "dend_37", "dend_32", "dend_23", "dend_14", "dend_5", "dend_4", "dend_53", "dend_48", "dend_39", "dend_38", "dend_34", "dend_33", "dend_25", "dend_24", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_49", "dend_41", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_22", "dend_17", "dend_9", "dend_8", "dend_52", "dend_51", "dend_43", "dend_42", "dend_21", "dend_18", "dend_11", "dend_10", "dend_45", "dend_44", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_3", "dend_3", "dend_2", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_47", "dend_47", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L4_DBC_78a99c338d_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_57, id: dend_57, parent: dend_29
create dend_57
public dend_57
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_46, id: dend_46, parent: dend_30
create dend_46
public dend_46
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_12
create dend_28
public dend_28
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_56, id: dend_56, parent: dend_46
create dend_56
public dend_56
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_37, id: dend_37, parent: dend_31
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_13
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_53, id: dend_53, parent: dend_47
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_60
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_2, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_47, dend_47, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_43, dend_43, dend_43, dend_43, dend_42, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_29(0), soma_0(0.4999993435552117)
    connect dend_0(0), soma_0(0.4999993435552117)
    connect axon_0(0), soma_0(1.0)
    connect dend_57(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_46(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_28(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_56(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_37(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_23(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_53(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.03775, -11.4909, 0.0, 3.43439 ) }
    soma_0 { pt3dadd( 1.89325, -10.3873, 0.0, 4.10946 ) }
    soma_0 { pt3dadd( 1.74876, -9.28361, 0.0, 5.49512 ) }
    soma_0 { pt3dadd( 1.60426, -8.17996, 0.0, 6.92062 ) }
    soma_0 { pt3dadd( 1.45977, -7.07631, 0.0, 8.33776 ) }
    soma_0 { pt3dadd( 1.31528, -5.97266, 0.0, 9.37588 ) }
    soma_0 { pt3dadd( 1.17078, -4.86901, 0.0, 10.388 ) }
    soma_0 { pt3dadd( 1.02629, -3.76536, 0.0, 11.4001 ) }
    soma_0 { pt3dadd( 0.881794, -2.66171, 0.0, 12.0337 ) }
    soma_0 { pt3dadd( 0.7373, -1.55806, 0.0, 11.8609 ) }
    soma_0 { pt3dadd( 0.592806, -0.454415, 0.0, 11.675 ) }
    soma_0 { pt3dadd( 0.448312, 0.649234, 0.0, 11.6509 ) }
    soma_0 { pt3dadd( 0.303818, 1.75288, 0.0, 11.6321 ) }
    soma_0 { pt3dadd( 0.159324, 2.85653, 0.0, 10.7321 ) }
    soma_0 { pt3dadd( 0.0148298, 3.96018, 0.0, 9.70998 ) }
    soma_0 { pt3dadd( -0.129664, 5.06383, 0.0, 8.74071 ) }
    soma_0 { pt3dadd( -0.274158, 6.16748, 0.0, 7.95018 ) }
    soma_0 { pt3dadd( -0.418652, 7.27113, 0.0, 6.7513 ) }
    soma_0 { pt3dadd( -0.563146, 8.37478, 0.0, 5.22686 ) }
    soma_0 { pt3dadd( -0.70764, 9.47842, 0.0, 3.48033 ) }
    soma_0 { pt3dadd( -0.852134, 10.5821, 0.0, 2.02048 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 21/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.596014, -11.9246, -2.34, 2.22 ) }
    dend_29 { pt3dadd( -1.16032, -16.9953, -0.349777, 2.22 ) }
    dend_29 { pt3dadd( -1.65418, -22.1694, 1.52026, 2.49 ) }
    dend_29 { pt3dadd( -2.39542, -31.157, 4.49652, 2.49 ) }
    dend_29 { pt3dadd( -2.82913, -39.8419, 6.94429, 2.49 ) }
    dend_29 { pt3dadd( -2.951, -43.7832, 7.92313, 1.94 ) }
    dend_29 { pt3dadd( -3.00556, -48.031, 8.86411, 1.38 ) }
    dend_29 { pt3dadd( -2.8874, -53.1981, 9.86267, 1.11 ) }
    dend_29 { pt3dadd( -2.73222, -56.683, 10.38, 0.83 ) }
    dend_29 { pt3dadd( -2.3086, -65.4259, 11.1579, 1.11 ) }
    dend_29 { pt3dadd( -2.17278, -68.9534, 11.2027, 1.11 ) }
    dend_29 { pt3dadd( -2.00295, -73.1751, 11.1506, 1.38 ) }
    dend_29 { pt3dadd( -1.81115, -77.2154, 11.0364, 0.83 ) }
    dend_29 { pt3dadd( -1.60902, -80.6538, 10.9574, 1.66 ) }
    dend_29 { pt3dadd( -1.37093, -83.9076, 10.9077, 1.11 ) }
    dend_29 { pt3dadd( -0.7972, -90.953, 10.7336, 1.66 ) }
    dend_29 { pt3dadd( -0.451981, -94.8143, 10.6293, 1.38 ) }
    dend_29 { pt3dadd( 0.0429402, -99.7806, 10.4827, 1.94 ) }
    dend_29 { pt3dadd( 0.691396, -105.017, 10.3164, 1.38 ) }
    dend_29 { pt3dadd( 1.58407, -110.458, 10.1363, 1.38 ) }
    dend_29 { pt3dadd( 2.94203, -117.17, 9.91462, 1.38 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 42/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.59602, 9.70538, -0.86, 2.22 ) }
    dend_0 { pt3dadd( -1.09611, 13.8478, -0.836866, 1.94 ) }
    dend_0 { pt3dadd( -0.813041, 17.0869, -0.737, 1.94 ) }
    dend_0 { pt3dadd( -0.526261, 21.9353, -0.438096, 1.94 ) }
    dend_0 { pt3dadd( -0.450384, 23.7032, -0.30726, 1.38 ) }
    dend_0 { pt3dadd( -0.216025, 27.6993, -0.0259123, 2.22 ) }
    dend_0 { pt3dadd( 0.0139932, 31.6213, 0.250223, 1.94 ) }
    dend_0 { pt3dadd( 0.313302, 36.9251, 0.644441, 1.94 ) }
    dend_0 { pt3dadd( 0.485473, 40.7464, 1.00838, 1.94 ) }
    dend_0 { pt3dadd( 0.554988, 44.4446, 1.47536, 1.94 ) }
    dend_0 { pt3dadd( 0.607211, 49.4545, 2.11412, 2.49 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 53/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.852134, 10.5821, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -2.79938, 25.4552, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -4.74662, 40.3282, 0.0, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_29 (entry count 56/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 2.94203, -117.17, 9.91462, 0.55 ) }
    dend_57 { pt3dadd( 3.76071, -118.65, 10.1564, 0.55 ) }
    dend_57 { pt3dadd( 4.60977, -119.918, 10.5125, 0.55 ) }
    dend_57 { pt3dadd( 5.89825, -121.641, 11.2202, 0.28 ) }
    dend_57 { pt3dadd( 7.38204, -123.289, 11.9479, 0.55 ) }
    dend_57 { pt3dadd( 9.15495, -125.09, 12.7215, 0.28 ) }
    dend_57 { pt3dadd( 10.6658, -126.494, 13.427, 1.11 ) }
    dend_57 { pt3dadd( 13.1032, -128.601, 14.6472, 0.28 ) }
    dend_57 { pt3dadd( 14.7382, -129.866, 15.6441, 0.83 ) }
    dend_57 { pt3dadd( 17.1988, -131.597, 17.2658, 0.83 ) }
    dend_57 { pt3dadd( 18.6809, -132.601, 18.2921, 0.83 ) }
    dend_57 { pt3dadd( 21.1885, -134.323, 20.0567, 0.83 ) }
    dend_57 { pt3dadd( 22.4951, -135.211, 20.9833, 1.11 ) }
    dend_57 { pt3dadd( 26.4499, -138.114, 23.6193, 0.28 ) }
    dend_57 { pt3dadd( 27.3065, -138.812, 24.1207, 0.28 ) }
    dend_57 { pt3dadd( 28.0364, -139.451, 24.5023, 0.55 ) }
    dend_57 { pt3dadd( 29.0843, -140.374, 24.9089, 0.55 ) }
    dend_57 { pt3dadd( 31.1998, -142.257, 25.3589, 0.55 ) }
    dend_57 { pt3dadd( 33.1466, -143.9, 25.5406, 0.55 ) }
    dend_57 { pt3dadd( 35.2119, -145.661, 25.455, 0.83 ) }
    dend_57 { pt3dadd( 37.1505, -147.169, 25.348, 1.11 ) }
    dend_57 { pt3dadd( 38.846, -148.454, 25.2584, 0.55 ) }
    dend_57 { pt3dadd( 39.7715, -149.171, 25.2211, 1.38 ) }
    dend_57 { pt3dadd( 40.9846, -150.101, 25.1896, 0.55 ) }
    dend_57 { pt3dadd( 42.3607, -150.983, 25.1445, 1.11 ) }
    dend_57 { pt3dadd( 45.2969, -152.715, 24.9735, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 82/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 2.94203, -117.17, 9.91462, 1.38 ) }
    dend_30 { pt3dadd( 2.75984, -118.284, 9.74117, 1.38 ) }
    dend_30 { pt3dadd( 2.1564, -121.555, 9.49872, 1.38 ) }
    dend_30 { pt3dadd( 1.78034, -123.594, 9.34763, 1.11 ) }
    dend_30 { pt3dadd( 0.96302, -128.024, 9.01926, 1.66 ) }
    dend_30 { pt3dadd( 0.442179, -130.847, 8.81, 2.22 ) }
    dend_30 { pt3dadd( 0.176593, -132.287, 8.70329, 2.22 ) }
    dend_30 { pt3dadd( -0.489232, -136.418, 8.30944, 1.66 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 90/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 0.607211, 49.4545, 2.11412, 1.38 ) }
    dend_12 { pt3dadd( 0.573107, 51.1043, 2.10193, 1.38 ) }
    dend_12 { pt3dadd( 0.590081, 52.2224, 2.0917, 1.38 ) }
    dend_12 { pt3dadd( 0.644127, 53.8562, 2.07146, 1.11 ) }
    dend_12 { pt3dadd( 0.765629, 56.3693, 2.07829, 1.38 ) }
    dend_12 { pt3dadd( 0.822329, 57.6246, 2.07781, 1.38 ) }
    dend_12 { pt3dadd( 0.872517, 59.8177, 2.07815, 1.38 ) }
    dend_12 { pt3dadd( 0.904166, 62.5933, 2.07375, 1.38 ) }
    dend_12 { pt3dadd( 0.879567, 64.6163, 2.06292, 1.38 ) }
    dend_12 { pt3dadd( 0.837013, 66.4996, 2.05304, 1.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_12 { pt3dadd( 0.743714, 68.259, 2.03893, 1.38 ) }
    dend_12 { pt3dadd( 0.454989, 71.1968, 1.99822, 1.66 ) }
    dend_12 { pt3dadd( 0.219153, 72.8847, 1.9663, 1.38 ) }
    dend_12 { pt3dadd( -0.074164, 74.8052, 1.87209, 1.38 ) }
    dend_12 { pt3dadd( -0.402463, 77.0111, 1.69888, 1.38 ) }
    dend_12 { pt3dadd( -0.623212, 78.7705, 1.51725, 1.38 ) }
    dend_12 { pt3dadd( -0.704491, 79.7038, 1.41758, 1.38 ) }
    dend_12 { pt3dadd( -0.77978, 81.1477, 1.2611, 1.11 ) }
    dend_12 { pt3dadd( -0.851502, 83.3318, 1.04126, 1.11 ) }
    dend_12 { pt3dadd( -0.83088, 85.6318, 0.838727, 1.11 ) }
    dend_12 { pt3dadd( -0.770144, 87.9536, 0.668812, 1.38 ) }
    dend_12 { pt3dadd( -0.713599, 89.5134, 0.598385, 1.11 ) }
    dend_12 { pt3dadd( -0.675519, 91.0108, 0.569976, 1.38 ) }
    dend_12 { pt3dadd( -0.663671, 91.9761, 0.598154, 1.38 ) }
    dend_12 { pt3dadd( -0.663146, 93.5193, 0.76339, 1.38 ) }
    dend_12 { pt3dadd( -0.70363, 95.7296, 1.0627, 1.94 ) }
    dend_12 { pt3dadd( -0.720583, 96.8986, 1.24062, 1.66 ) }
    dend_12 { pt3dadd( -0.723587, 97.3898, 1.31319, 1.66 ) }
    dend_12 { pt3dadd( -0.729103, 98.9219, 1.51874, 1.66 ) }
    dend_12 { pt3dadd( -0.736829, 101.339, 1.8201, 1.66 ) }
    dend_12 { pt3dadd( -0.765291, 102.6, 1.95811, 1.38 ) }
    dend_12 { pt3dadd( -0.829227, 104.591, 2.13748, 1.66 ) }
    dend_12 { pt3dadd( -0.865446, 106.346, 2.25067, 1.11 ) }
    dend_12 { pt3dadd( -0.891584, 108.29, 2.35436, 1.11 ) }
    dend_12 { pt3dadd( -0.908239, 109.373, 2.38768, 1.11 ) }
    dend_12 { pt3dadd( -0.912127, 110.568, 2.41261, 1.11 ) }
    dend_12 { pt3dadd( -0.894323, 111.463, 2.44368, 1.11 ) }
    dend_12 { pt3dadd( -0.802316, 113.362, 2.53604, 1.38 ) }
    dend_12 { pt3dadd( -0.697652, 114.808, 2.6207, 1.11 ) }
    dend_12 { pt3dadd( -0.610527, 115.892, 2.68297, 1.38 ) }
    dend_12 { pt3dadd( -0.511197, 117.123, 2.74744, 1.38 ) }
    dend_12 { pt3dadd( -0.420584, 118.527, 2.80585, 0.83 ) }
    dend_12 { pt3dadd( -0.352622, 120.227, 2.85471, 1.38 ) }
    dend_12 { pt3dadd( -0.342385, 121.585, 2.87048, 0.83 ) }
    dend_12 { pt3dadd( -0.35808, 122.964, 2.8626, 1.38 ) }
    dend_12 { pt3dadd( -0.40864, 124.051, 2.84952, 1.38 ) }
    dend_12 { pt3dadd( -0.532933, 125.835, 2.80642, 1.38 ) }
    dend_12 { pt3dadd( -0.580053, 126.622, 2.78388, 1.38 ) }
    dend_12 { pt3dadd( -0.623144, 127.844, 2.74776, 1.11 ) }
    dend_12 { pt3dadd( -0.6186, 129.362, 2.70716, 1.11 ) }
    dend_12 { pt3dadd( -0.537121, 131.553, 2.65313, 1.66 ) }
    dend_12 { pt3dadd( -0.422734, 132.963, 2.62379, 1.11 ) }
    dend_12 { pt3dadd( -0.368188, 133.52, 2.6449, 1.11 ) }
    dend_12 { pt3dadd( -0.305728, 134.488, 2.72127, 1.38 ) }
    dend_12 { pt3dadd( -0.256643, 135.712, 2.86518, 1.38 ) }
    dend_12 { pt3dadd( -0.250762, 137.093, 3.06957, 1.94 ) }
    dend_12 { pt3dadd( -0.309477, 138.525, 3.31144, 1.94 ) }
    dend_12 { pt3dadd( -0.511436, 140.862, 3.7058, 1.11 ) }
    dend_12 { pt3dadd( -0.680141, 142.165, 3.8978, 1.11 ) }
    dend_12 { pt3dadd( -0.887615, 143.399, 4.05414, 1.38 ) }
    dend_12 { pt3dadd( -1.18129, 144.884, 4.20024, 1.38 ) }
    dend_12 { pt3dadd( -1.42799, 146.127, 4.28221, 1.11 ) }
    dend_12 { pt3dadd( -1.65601, 147.492, 4.32062, 0.83 ) }
    dend_12 { pt3dadd( -1.86161, 149.053, 4.28711, 0.83 ) }
    dend_12 { pt3dadd( -1.97165, 149.953, 4.26838, 0.83 ) }
    dend_12 { pt3dadd( -2.16564, 151.517, 4.23326, 1.11 ) }
    dend_12 { pt3dadd( -2.30354, 152.89, 4.19573, 1.11 ) }
    dend_12 { pt3dadd( -2.44192, 154.303, 4.14642, 1.38 ) }
    dend_12 { pt3dadd( -2.65579, 156.452, 4.06097, 1.38 ) }
    dend_12 { pt3dadd( -2.77022, 157.768, 4.00697, 1.11 ) }
    dend_12 { pt3dadd( -2.89725, 159.329, 3.94092, 1.38 ) }
    dend_12 { pt3dadd( -3.01305, 160.61, 3.86528, 0.83 ) }
    dend_12 { pt3dadd( -3.20015, 162.322, 3.74676, 0.83 ) }
    dend_12 { pt3dadd( -3.33738, 163.679, 3.63902, 1.38 ) }
    dend_12 { pt3dadd( -3.36638, 164.29, 3.59084, 1.38 ) }
    dend_12 { pt3dadd( -3.40388, 165.408, 3.49748, 1.11 ) }
    dend_12 { pt3dadd( -3.46759, 167.256, 3.33264, 1.38 ) }
    dend_12 { pt3dadd( -3.49291, 168.38, 3.23163, 1.11 ) }
    dend_12 { pt3dadd( -3.4727, 169.485, 3.12954, 1.11 ) }
    dend_12 { pt3dadd( -3.44078, 170.591, 3.02873, 1.11 ) }
    dend_12 { pt3dadd( -3.40384, 171.969, 2.90207, 1.11 ) }
    dend_12 { pt3dadd( -3.32492, 174.341, 2.67661, 1.11 ) }
    dend_12 { pt3dadd( -3.25932, 175.732, 2.55131, 1.11 ) }
    dend_12 { pt3dadd( -3.20695, 177.268, 2.44423, 1.38 ) }
    dend_12 { pt3dadd( -3.18612, 178.846, 2.37383, 1.38 ) }
    dend_12 { pt3dadd( -3.19479, 180.322, 2.33909, 0.83 ) }
    dend_12 { pt3dadd( -3.19954, 181.458, 2.34631, 1.38 ) }
    dend_12 { pt3dadd( -3.20012, 182.529, 2.38989, 1.38 ) }
    dend_12 { pt3dadd( -3.21397, 183.986, 2.4855, 1.11 ) }
    dend_12 { pt3dadd( -3.21824, 184.953, 2.57011, 0.55 ) }
    dend_12 { pt3dadd( -3.17424, 185.916, 2.668, 1.11 ) }
    dend_12 { pt3dadd( -3.1239, 186.827, 2.76019, 1.11 ) }
    dend_12 { pt3dadd( -3.06183, 187.8, 2.84231, 0.83 ) }
    dend_12 { pt3dadd( -2.98318, 188.828, 2.89324, 0.83 ) }
    dend_12 { pt3dadd( -2.90623, 189.762, 2.90367, 0.83 ) }
    dend_12 { pt3dadd( -2.81594, 191.464, 2.91369, 1.11 ) }
    dend_12 { pt3dadd( -2.75203, 192.574, 2.90213, 1.66 ) }
    dend_12 { pt3dadd( -2.72643, 193.643, 2.87181, 1.66 ) }
    dend_12 { pt3dadd( -2.75003, 195.028, 2.81578, 0.83 ) }
    dend_12 { pt3dadd( -2.7786, 196.141, 2.76044, 0.83 ) }
    dend_12 { pt3dadd( -2.80031, 197.711, 2.67984, 1.11 ) }
    dend_12 { pt3dadd( -2.85049, 199.58, 2.57432, 0.83 ) }
    dend_12 { pt3dadd( -2.89326, 201.668, 2.46036, 0.83 ) }
    dend_12 { pt3dadd( -2.9167, 202.863, 2.39469, 0.83 ) }
    dend_12 { pt3dadd( -2.97458, 205.332, 2.25939, 1.38 ) }
    dend_12 { pt3dadd( -3.05865, 207.8, 2.12844, 1.38 ) }
    dend_12 { pt3dadd( -3.10449, 208.899, 2.07552, 1.11 ) }
    dend_12 { pt3dadd( -3.23413, 210.605, 2.00345, 1.11 ) }
    dend_12 { pt3dadd( -3.32843, 211.689, 1.95486, 0.83 ) }
    dend_12 { pt3dadd( -3.42859, 212.45, 1.91633, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_12 { pt3dadd( -3.68035, 213.727, 1.8992, 1.38 ) }
    dend_12 { pt3dadd( -3.82186, 214.391, 1.93835, 1.38 ) }
    dend_12 { pt3dadd( -4.08249, 215.946, 2.11317, 0.83 ) }
    dend_12 { pt3dadd( -4.21316, 217.009, 2.2787, 0.83 ) }
    dend_12 { pt3dadd( -4.35394, 218.704, 2.49068, 0.83 ) }
    dend_12 { pt3dadd( -4.43726, 220.289, 2.71249, 0.83 ) }
    dend_12 { pt3dadd( -4.48324, 222.322, 3.03167, 1.38 ) }
    dend_12 { pt3dadd( -4.49554, 223.703, 3.26362, 1.38 ) }
    dend_12 { pt3dadd( -4.4423, 224.664, 3.4466, 1.38 ) }
    dend_12 { pt3dadd( -4.17406, 226.887, 3.8776, 1.38 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 10/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.607211, 49.4545, 2.11412, 1.11 ) }
    dend_1 { pt3dadd( 1.55833, 54.7265, -3.08881, 1.11 ) }
    dend_1 { pt3dadd( 1.85583, 56.3556, -4.47565, 1.11 ) }
    dend_1 { pt3dadd( 2.29062, 59.1615, -6.92249, 1.11 ) }
    dend_1 { pt3dadd( 3.37019, 67.2067, -13.6887, 1.11 ) }
    dend_1 { pt3dadd( 3.69788, 70.1894, -15.9144, 1.11 ) }
    dend_1 { pt3dadd( 4.05705, 74.3788, -18.7729, 0.83 ) }
    dend_1 { pt3dadd( 4.16297, 76.8849, -20.231, 0.83 ) }
    dend_1 { pt3dadd( 4.4482, 84.047, -23.9559, 1.11 ) }
    dend_1 { pt3dadd( 4.55359, 87.3231, -25.3384, 1.11 ) }
    dend_1 { pt3dadd( 4.43376, 92.4734, -26.8122, 1.11 ) }
    dend_1 { pt3dadd( 4.07832, 97.193, -27.7884, 1.11 ) }
    dend_1 { pt3dadd( 3.72811, 100.484, -28.1567, 1.38 ) }
    dend_1 { pt3dadd( 3.49648, 102.793, -28.1203, 1.38 ) }
    dend_1 { pt3dadd( 3.28085, 105.469, -27.8138, 1.11 ) }
    dend_1 { pt3dadd( 2.88994, 110.569, -27.1994, 1.11 ) }
    dend_1 { pt3dadd( 2.55408, 115.959, -26.6755, 0.83 ) }
    dend_1 { pt3dadd( 2.5142, 116.811, -26.569, 0.83 ) }
    dend_1 { pt3dadd( 2.36903, 122.013, -26.0719, 1.66 ) }
    dend_1 { pt3dadd( 2.24018, 126.47, -25.9003, 0.83 ) }
    dend_1 { pt3dadd( 2.21834, 127.326, -25.9223, 0.83 ) }
    dend_1 { pt3dadd( 2.19205, 130.96, -26.227, 1.66 ) }
    dend_1 { pt3dadd( 2.16057, 133.244, -26.5194, 1.66 ) }
    dend_1 { pt3dadd( 2.08931, 136.136, -26.8018, 1.11 ) }
    dend_1 { pt3dadd( 1.91786, 139.543, -27.0919, 1.11 ) }
    dend_1 { pt3dadd( 1.69657, 143.2, -27.2725, 1.11 ) }
    dend_1 { pt3dadd( 1.47614, 147.562, -27.5185, 1.66 ) }
    dend_1 { pt3dadd( 1.28732, 151.684, -27.697, 1.66 ) }
    dend_1 { pt3dadd( 1.06407, 155.991, -27.974, 0.83 ) }
    dend_1 { pt3dadd( 0.882774, 159.781, -28.366, 0.83 ) }
    dend_1 { pt3dadd( 0.809308, 162.457, -28.7571, 0.83 ) }
    dend_1 { pt3dadd( 0.802155, 166.295, -29.4009, 1.66 ) }
    dend_1 { pt3dadd( 0.846852, 169.971, -30.0782, 0.55 ) }
    dend_1 { pt3dadd( 0.89916, 173.554, -30.7284, 0.55 ) }
    dend_1 { pt3dadd( 1.03689, 177.558, -31.3704, 1.38 ) }
    dend_1 { pt3dadd( 1.22962, 180.894, -31.7557, 1.94 ) }
    dend_1 { pt3dadd( 1.45781, 184.919, -32.0789, 0.83 ) }
    dend_1 { pt3dadd( 1.55589, 187.16, -32.175, 0.83 ) }
    dend_1 { pt3dadd( 1.65206, 190.942, -32.2653, 1.94 ) }
    dend_1 { pt3dadd( 1.7137, 195.701, -32.1786, 1.94 ) }
    dend_1 { pt3dadd( 1.69084, 198.801, -32.087, 1.11 ) }
    dend_1 { pt3dadd( 1.66132, 202.441, -31.7734, 1.11 ) }
    dend_1 { pt3dadd( 1.60681, 205.737, -31.3799, 1.11 ) }
    dend_1 { pt3dadd( 1.57321, 207.637, -31.0945, 1.11 ) }
    dend_1 { pt3dadd( 1.52142, 209.58, -30.7971, 1.11 ) }
    dend_1 { pt3dadd( 1.20214, 216.81, -29.6901, 2.22 ) }
    dend_1 { pt3dadd( 0.901639, 225.082, -28.463, 0.83 ) }
    dend_1 { pt3dadd( 0.856876, 227.495, -28.1469, 0.83 ) }
    dend_1 { pt3dadd( 0.884592, 230.755, -27.7903, 1.11 ) }
    dend_1 { pt3dadd( 0.944395, 234.817, -27.483, 0.55 ) }
    dend_1 { pt3dadd( 0.902626, 237.978, -27.3962, 2.22 ) }
    dend_1 { pt3dadd( 0.828265, 239.953, -27.5129, 1.94 ) }
    dend_1 { pt3dadd( 0.732985, 242.817, -27.9444, 0.83 ) }
    dend_1 { pt3dadd( 0.695939, 245.868, -28.387, 0.83 ) }
    dend_1 { pt3dadd( 0.71037, 248.934, -28.7852, 0.83 ) }
    dend_1 { pt3dadd( 0.673611, 252.172, -29.1105, 1.66 ) }
    dend_1 { pt3dadd( 0.60307, 255.735, -29.4401, 0.83 ) }
    dend_1 { pt3dadd( 0.553018, 257.774, -29.5889, 0.83 ) }
    dend_1 { pt3dadd( 0.507298, 259.502, -29.7179, 1.11 ) }
    dend_1 { pt3dadd( 0.403225, 262.174, -29.9415, 0.83 ) }
    dend_1 { pt3dadd( 0.281025, 266.845, -30.377, 0.83 ) }
    dend_1 { pt3dadd( 0.254297, 267.689, -30.456, 0.83 ) }
    dend_1 { pt3dadd( -0.0161746, 272.351, -30.8618, 1.94 ) }
    dend_1 { pt3dadd( -0.2245, 275.827, -31.1692, 0.55 ) }
    dend_1 { pt3dadd( -0.429426, 279.755, -31.6006, 0.55 ) }
    dend_1 { pt3dadd( -0.471155, 280.462, -31.709, 0.55 ) }
    dend_1 { pt3dadd( -0.844709, 286.053, -32.7292, 2.22 ) }
    dend_1 { pt3dadd( -1.04396, 290.323, -33.5401, 0.83 ) }
    dend_1 { pt3dadd( -1.0839, 292.257, -33.8891, 0.83 ) }
    dend_1 { pt3dadd( -1.06929, 296.836, -34.6294, 1.38 ) }
    dend_1 { pt3dadd( -0.91738, 300.871, -35.2274, 0.55 ) }
    dend_1 { pt3dadd( -0.732153, 304.453, -35.6731, 0.55 ) }
    dend_1 { pt3dadd( -0.344086, 309.431, -36.304, 0.83 ) }
    dend_1 { pt3dadd( 0.33153, 316.433, -36.7916, 0.83 ) }
    dend_1 { pt3dadd( 0.54165, 318.402, -36.825, 2.49 ) }
    dend_1 { pt3dadd( 0.964409, 322.204, -36.6724, 2.49 ) }
    dend_1 { pt3dadd( 1.59638, 328.117, -36.2209, 0.83 ) }
    dend_1 { pt3dadd( 1.93349, 331.446, -35.9283, 0.83 ) }
    dend_1 { pt3dadd( 2.28393, 338.055, -35.3276, 0.83 ) }
    dend_1 { pt3dadd( 2.34922, 340.012, -35.1444, 0.83 ) }
    dend_1 { pt3dadd( 2.3248, 344.266, -34.7971, 1.66 ) }
    dend_1 { pt3dadd( 2.23754, 348.567, -34.5048, 0.83 ) }
    dend_1 { pt3dadd( 2.15699, 351.71, -34.3362, 0.83 ) }
    dend_1 { pt3dadd( 2.0215, 356.407, -34.1671, 0.83 ) }
    dend_1 { pt3dadd( 1.95283, 360.036, -34.1831, 1.94 ) }
    dend_1 { pt3dadd( 1.97326, 366.037, -34.1943, 0.83 ) }
    dend_1 { pt3dadd( 2.08561, 372.225, -34.1954, 0.83 ) }
    dend_1 { pt3dadd( 2.1623, 375.002, -34.1929, 0.83 ) }
    dend_1 { pt3dadd( 2.24785, 378.499, -34.191, 1.11 ) }
    dend_1 { pt3dadd( 2.30709, 381.208, -34.1903, 2.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( 2.29638, 385.848, -34.202, 0.83 ) }
    dend_1 { pt3dadd( 2.23636, 387.446, -34.2125, 0.83 ) }
    dend_1 { pt3dadd( 2.05767, 390.144, -34.2389, 0.83 ) }
    dend_1 { pt3dadd( 1.75535, 394.616, -34.2835, 0.83 ) }
    dend_1 { pt3dadd( 1.51661, 398.984, -34.4109, 0.83 ) }
    dend_1 { pt3dadd( 1.21843, 404.098, -34.649, 1.11 ) }
    dend_1 { pt3dadd( 1.02244, 408.572, -34.9606, 1.66 ) }
    dend_1 { pt3dadd( 0.933654, 412.857, -35.2991, 0.83 ) }
    dend_1 { pt3dadd( 0.916323, 416.361, -35.6267, 0.83 ) }
    dend_1 { pt3dadd( 1.07447, 420.394, -36.0433, 0.83 ) }
    dend_1 { pt3dadd( 1.26968, 423.354, -36.374, 0.83 ) }
    dend_1 { pt3dadd( 1.4718, 426.616, -36.768, 0.83 ) }
    dend_1 { pt3dadd( 1.79102, 431.714, -37.3776, 1.66 ) }
    dend_1 { pt3dadd( 2.02496, 435.763, -37.8492, 0.83 ) }
    dend_1 { pt3dadd( 2.13697, 437.908, -38.0704, 0.83 ) }
    dend_1 { pt3dadd( 2.33239, 443.112, -38.4644, 1.38 ) }
    dend_1 { pt3dadd( 2.59305, 447.996, -38.807, 0.83 ) }
    dend_1 { pt3dadd( 2.71345, 450.706, -38.979, 0.83 ) }
    dend_1 { pt3dadd( 2.7838, 452.329, -39.101, 1.66 ) }
    dend_1 { pt3dadd( 2.87649, 455.618, -39.318, 1.66 ) }
    dend_1 { pt3dadd( 2.8244, 458.934, -39.5446, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 21/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -4.74662, 40.3282, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -6.69386, 55.2013, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -8.6411, 70.0744, 0.0, 0.28 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 24/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 45.2969, -152.715, 24.9735, 0.83 ) }
    dend_59 { pt3dadd( 46.7483, -152.657, 26.1623, 0.83 ) }
    dend_59 { pt3dadd( 47.7046, -152.599, 27.0275, 0.28 ) }
    dend_59 { pt3dadd( 50.0064, -152.458, 29.1101, 0.55 ) }
    dend_59 { pt3dadd( 50.9138, -152.403, 29.9312, 0.55 ) }
    dend_59 { pt3dadd( 52.2225, -152.323, 31.1152, 0.55 ) }
    dend_59 { pt3dadd( 56.4299, -152.065, 34.922, 0.28 ) }
    dend_59 { pt3dadd( 56.9674, -152.079, 35.5027, 0.28 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 32/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 45.2969, -152.715, 24.9735, 0.55 ) }
    dend_58 { pt3dadd( 47.6388, -154.562, 26.2702, 0.55 ) }
    dend_58 { pt3dadd( 48.284, -154.865, 26.6012, 0.83 ) }
    dend_58 { pt3dadd( 49.8931, -155.691, 27.5042, 0.28 ) }
    dend_58 { pt3dadd( 50.5763, -156.046, 27.9494, 0.83 ) }
    dend_58 { pt3dadd( 51.9185, -156.724, 28.8043, 0.83 ) }
    dend_58 { pt3dadd( 55.1361, -158.345, 30.8019, 0.83 ) }
    dend_58 { pt3dadd( 59.2748, -160.261, 33.0945, 0.83 ) }
    dend_58 { pt3dadd( 60.8953, -160.871, 34.0519, 0.83 ) }
    dend_58 { pt3dadd( 65.0403, -161.909, 36.4913, 1.11 ) }
    dend_58 { pt3dadd( 66.4048, -162.065, 37.4134, 0.83 ) }
    dend_58 { pt3dadd( 66.884, -162.04, 37.781, 0.83 ) }
    dend_58 { pt3dadd( 68.4524, -161.486, 39.2066, 0.83 ) }
    dend_58 { pt3dadd( 71.1492, -159.527, 42.1668, 0.83 ) }
    dend_58 { pt3dadd( 72.962, -157.772, 44.1873, 0.83 ) }
    dend_58 { pt3dadd( 74.9872, -155.035, 46.632, 0.83 ) }
    dend_58 { pt3dadd( 75.8938, -153.623, 47.915, 1.11 ) }
    dend_58 { pt3dadd( 77.1316, -151.428, 49.9068, 0.28 ) }
    dend_58 { pt3dadd( 77.3228, -150.999, 50.3049, 0.55 ) }
    dend_58 { pt3dadd( 77.9951, -149.057, 51.7408, 0.28 ) }
    dend_58 { pt3dadd( 78.1232, -147.976, 52.7741, 1.11 ) }
    // Section: dend_46, id: dend_46, parent: dend_30 (entry count 53/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -0.489232, -136.418, 8.30944, 1.11 ) }
    dend_46 { pt3dadd( -1.32965, -137.446, 8.92569, 1.11 ) }
    dend_46 { pt3dadd( -2.28651, -138.86, 9.69875, 1.11 ) }
    dend_46 { pt3dadd( -4.48653, -142.833, 11.5551, 1.38 ) }
    dend_46 { pt3dadd( -5.62528, -145.202, 12.7021, 1.38 ) }
    dend_46 { pt3dadd( -6.46419, -146.947, 13.5472, 1.66 ) }
    dend_46 { pt3dadd( -7.79461, -149.715, 14.8873, 1.11 ) }
    dend_46 { pt3dadd( -8.45675, -151.318, 15.657, 1.11 ) }
    dend_46 { pt3dadd( -9.24618, -153.816, 16.7797, 1.38 ) }
    dend_46 { pt3dadd( -10.1567, -158.09, 18.4239, 2.77 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 63/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -0.489232, -136.418, 8.30944, 1.38 ) }
    dend_31 { pt3dadd( -0.469731, -141.625, 8.36729, 1.38 ) }
    dend_31 { pt3dadd( -0.379447, -145.833, 8.5246, 1.94 ) }
    dend_31 { pt3dadd( -0.214382, -148.887, 8.41908, 1.38 ) }
    dend_31 { pt3dadd( 0.336494, -153.949, 7.60422, 1.94 ) }
    dend_31 { pt3dadd( 0.985139, -157.875, 6.68963, 0.83 ) }
    dend_31 { pt3dadd( 1.49289, -160.246, 6.00822, 0.83 ) }
    dend_31 { pt3dadd( 2.36722, -163.284, 5.00123, 1.38 ) }
    dend_31 { pt3dadd( 4.15056, -167.841, 3.09491, 1.94 ) }
    dend_31 { pt3dadd( 6.60087, -172.662, 0.551889, 0.83 ) }
    dend_31 { pt3dadd( 7.51102, -174.137, -0.405705, 0.83 ) }
    dend_31 { pt3dadd( 10.0162, -177.725, -3.28445, 1.11 ) }
    dend_31 { pt3dadd( 11.5291, -179.778, -5.01447, 0.55 ) }
    dend_31 { pt3dadd( 12.3033, -180.855, -5.9961, 0.55 ) }
    dend_31 { pt3dadd( 13.7908, -183.078, -8.02471, 0.55 ) }
    dend_31 { pt3dadd( 14.4942, -184.232, -9.20731, 0.83 ) }
    dend_31 { pt3dadd( 16.0117, -186.818, -12.0985, 0.55 ) }
    dend_31 { pt3dadd( 17.5118, -189.365, -15.2499, 1.66 ) }
    dend_31 { pt3dadd( 19.7289, -193.386, -20.3914, 0.55 ) }
    dend_31 { pt3dadd( 20.5668, -195.129, -22.5994, 1.66 ) }
    dend_31 { pt3dadd( 22.0994, -198.9, -27.1918, 0.55 ) }
    dend_31 { pt3dadd( 22.7968, -200.552, -29.2354, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_12 (entry count 85/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -4.17406, 226.887, 3.8776, 0.83 ) }
    dend_28 { pt3dadd( -4.26322, 228.886, 2.39203, 0.83 ) }
    dend_28 { pt3dadd( -4.46425, 231.093, 0.77333, 0.83 ) }
    dend_28 { pt3dadd( -4.66798, 233.983, -1.11659, 0.55 ) }
    dend_28 { pt3dadd( -4.75055, 236.847, -2.88585, 0.83 ) }
    dend_28 { pt3dadd( -4.78197, 239.744, -4.52477, 0.28 ) }
    dend_28 { pt3dadd( -4.79063, 241.089, -5.2189, 0.55 ) }
    dend_28 { pt3dadd( -4.85167, 242.011, -5.6707, 0.55 ) }
    dend_28 { pt3dadd( -4.96707, 244.708, -6.84378, 1.11 ) }
    dend_28 { pt3dadd( -4.97465, 247.017, -7.63077, 0.55 ) }
    dend_28 { pt3dadd( -4.95344, 249.004, -8.20174, 1.11 ) }
    dend_28 { pt3dadd( -4.92332, 250.723, -8.59662, 1.11 ) }
    dend_28 { pt3dadd( -4.87968, 253.313, -9.07886, 0.28 ) }
    dend_28 { pt3dadd( -4.9353, 256.678, -9.78383, 0.55 ) }
    dend_28 { pt3dadd( -5.14493, 260.62, -10.6553, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_28 { pt3dadd( -5.2292, 262.639, -11.0457, 0.55 ) }
    dend_28 { pt3dadd( -5.26814, 264.12, -11.3051, 0.28 ) }
    dend_28 { pt3dadd( -5.23819, 266.282, -11.5273, 0.83 ) }
    dend_28 { pt3dadd( -5.06506, 270.52, -11.592, 1.38 ) }
    dend_28 { pt3dadd( -5.02457, 272.541, -11.5016, 1.38 ) }
    dend_28 { pt3dadd( -4.83331, 277.168, -11.0874, 0.83 ) }
    dend_28 { pt3dadd( -4.74884, 279.376, -10.8258, 0.83 ) }
    dend_28 { pt3dadd( -4.48339, 285.496, -9.8685, 0.83 ) }
    dend_28 { pt3dadd( -4.39987, 287.603, -9.48606, 0.83 ) }
    dend_28 { pt3dadd( -4.22071, 290.972, -8.69435, 0.83 ) }
    dend_28 { pt3dadd( -4.18567, 291.83, -8.482, 0.83 ) }
    dend_28 { pt3dadd( -4.07177, 294.77, -7.77605, 1.38 ) }
    dend_28 { pt3dadd( -3.95853, 296.83, -7.3526, 0.55 ) }
    dend_28 { pt3dadd( -3.83353, 299.317, -7.01845, 0.55 ) }
    dend_28 { pt3dadd( -3.68415, 300.686, -6.92142, 0.55 ) }
    dend_28 { pt3dadd( -3.53208, 301.686, -6.9033, 0.28 ) }
    dend_28 { pt3dadd( -3.05213, 304.454, -6.99359, 0.83 ) }
    dend_28 { pt3dadd( -2.61418, 306.586, -7.22287, 0.55 ) }
    dend_28 { pt3dadd( -2.07922, 308.877, -7.58548, 0.83 ) }
    dend_28 { pt3dadd( -1.30509, 312.168, -8.16775, 0.55 ) }
    dend_28 { pt3dadd( -0.879804, 314.079, -8.51946, 1.66 ) }
    dend_28 { pt3dadd( -0.253615, 317.067, -9.07724, 1.66 ) }
    dend_28 { pt3dadd( 0.35356, 320.338, -9.66667, 0.83 ) }
    dend_28 { pt3dadd( 0.774083, 322.971, -10.1097, 0.83 ) }
    dend_28 { pt3dadd( 1.04867, 325.136, -10.4283, 0.83 ) }
    dend_28 { pt3dadd( 1.1543, 326.431, -10.5772, 0.28 ) }
    dend_28 { pt3dadd( 1.25477, 328.625, -10.7323, 1.11 ) }
    dend_28 { pt3dadd( 1.21991, 331.927, -10.8236, 0.55 ) }
    dend_28 { pt3dadd( 1.1383, 333.829, -10.816, 0.55 ) }
    dend_28 { pt3dadd( 1.02261, 335.816, -10.8287, 0.55 ) }
    dend_28 { pt3dadd( 0.911929, 337.129, -10.8569, 0.55 ) }
    dend_28 { pt3dadd( 0.649984, 339.028, -10.9138, 1.11 ) }
    dend_28 { pt3dadd( 0.270446, 341.118, -10.9943, 0.28 ) }
    dend_28 { pt3dadd( 0.0785794, 342.096, -11.0391, 0.55 ) }
    dend_28 { pt3dadd( -0.236032, 344.425, -11.1656, 0.55 ) }
    dend_28 { pt3dadd( -0.533215, 348.134, -11.3879, 0.55 ) }
    dend_28 { pt3dadd( -0.559017, 349.441, -11.4634, 0.83 ) }
    dend_28 { pt3dadd( -0.526885, 351.51, -11.6239, 0.83 ) }
    dend_28 { pt3dadd( -0.39049, 354.477, -11.8195, 0.83 ) }
    dend_28 { pt3dadd( -0.145844, 357.291, -11.9402, 0.83 ) }
    dend_28 { pt3dadd( 0.173317, 359.452, -12.0163, 0.83 ) }
    dend_28 { pt3dadd( 1.25231, 364.194, -12.197, 1.11 ) }
    dend_28 { pt3dadd( 1.92031, 366.619, -12.2979, 0.28 ) }
    dend_28 { pt3dadd( 2.39962, 368.055, -12.3869, 0.55 ) }
    dend_28 { pt3dadd( 2.98467, 369.616, -12.3345, 0.55 ) }
    dend_28 { pt3dadd( 3.52687, 370.939, -12.1611, 0.55 ) }
    dend_28 { pt3dadd( 3.98259, 371.833, -11.9622, 0.55 ) }
    dend_28 { pt3dadd( 5.7143, 374.549, -11.2368, 0.55 ) }
    dend_28 { pt3dadd( 6.9152, 376.477, -10.7291, 0.83 ) }
    dend_28 { pt3dadd( 9.82781, 381.349, -9.87983, 0.55 ) }
    dend_28 { pt3dadd( 10.2992, 382.185, -9.74274, 0.83 ) }
    dend_28 { pt3dadd( 11.1522, 383.845, -9.49401, 0.83 ) }
    dend_28 { pt3dadd( 12.115, 385.929, -9.25066, 0.55 ) }
    dend_28 { pt3dadd( 12.892, 387.836, -9.13466, 0.83 ) }
    dend_28 { pt3dadd( 13.9379, 390.934, -9.1622, 0.83 ) }
    dend_28 { pt3dadd( 14.7239, 393.66, -9.31859, 0.55 ) }
    dend_28 { pt3dadd( 14.9731, 394.666, -9.30583, 0.55 ) }
    dend_28 { pt3dadd( 15.4749, 396.924, -9.15336, 0.55 ) }
    dend_28 { pt3dadd( 15.6932, 398.018, -9.02448, 0.83 ) }
    dend_28 { pt3dadd( 16.0934, 399.945, -8.74484, 0.83 ) }
    dend_28 { pt3dadd( 16.6566, 403.366, -8.2566, 0.55 ) }
    dend_28 { pt3dadd( 16.9169, 405.028, -8.09046, 0.55 ) }
    dend_28 { pt3dadd( 17.2886, 407.526, -7.81994, 0.55 ) }
    dend_28 { pt3dadd( 17.5584, 409.581, -7.60309, 0.55 ) }
    dend_28 { pt3dadd( 18.0947, 413.403, -7.22138, 0.55 ) }
    dend_28 { pt3dadd( 18.4693, 416.106, -7.02423, 0.83 ) }
    dend_28 { pt3dadd( 18.6513, 417.504, -6.995, 1.11 ) }
    dend_28 { pt3dadd( 18.9132, 420.285, -6.91018, 0.55 ) }
    dend_28 { pt3dadd( 19.1028, 424.272, -6.67716, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 69/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -4.17406, 226.887, 3.8776, 0.55 ) }
    dend_13 { pt3dadd( -5.4016, 229.636, 3.75168, 0.55 ) }
    dend_13 { pt3dadd( -6.19793, 231.609, 3.7041, 0.55 ) }
    dend_13 { pt3dadd( -6.784, 233.285, 3.68144, 0.55 ) }
    dend_13 { pt3dadd( -7.2629, 234.798, 3.66618, 0.55 ) }
    dend_13 { pt3dadd( -8.20665, 237.898, 3.65377, 0.55 ) }
    dend_13 { pt3dadd( -8.75174, 239.697, 3.65041, 0.83 ) }
    dend_13 { pt3dadd( -9.43724, 241.96, 3.72828, 0.83 ) }
    dend_13 { pt3dadd( -10.1166, 244.313, 3.79654, 0.83 ) }
    dend_13 { pt3dadd( -10.583, 246.282, 3.82717, 0.55 ) }
    dend_13 { pt3dadd( -10.9047, 247.935, 3.83803, 0.55 ) }
    dend_13 { pt3dadd( -11.3508, 250.205, 3.8807, 0.83 ) }
    dend_13 { pt3dadd( -11.7085, 252.033, 3.92972, 0.83 ) }
    dend_13 { pt3dadd( -12.3234, 254.9, 4.02866, 0.83 ) }
    dend_13 { pt3dadd( -12.7355, 256.776, 4.10684, 0.83 ) }
    dend_13 { pt3dadd( -13.0326, 258.236, 4.17783, 0.55 ) }
    dend_13 { pt3dadd( -13.3552, 260.121, 4.27429, 0.83 ) }
    dend_13 { pt3dadd( -13.6331, 262.217, 4.41351, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 87/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 2.8244, 458.934, -39.5446, 0.55 ) }
    dend_3 { pt3dadd( 2.79947, 461.163, -39.5533, 0.55 ) }
    dend_3 { pt3dadd( 2.7634, 464.386, -39.5658, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 90/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 2.8244, 458.934, -39.5446, 0.55 ) }
    dend_2 { pt3dadd( 0.131329, 459.406, -37.6561, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 92/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 56.9674, -152.079, 35.5027, 0.28 ) }
    dend_61 { pt3dadd( 56.3192, -155.963, 33.9288, 0.28 ) }
    dend_61 { pt3dadd( 56.1997, -156.679, 33.6386, 1.11 ) }
    dend_61 { pt3dadd( 55.6324, -160.077, 32.2612, 0.28 ) }
    dend_61 { pt3dadd( 55.5753, -160.419, 32.1227, 1.11 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 97/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 56.9674, -152.079, 35.5027, 1.66 ) }
    dend_60 { pt3dadd( 57.3568, -151.005, 36.5366, 1.66 ) }
    dend_60 { pt3dadd( 58.0276, -148.06, 38.8503, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_60 { pt3dadd( 58.614, -145.12, 41.0347, 0.28 ) }
    dend_60 { pt3dadd( 58.736, -144.123, 41.7253, 0.55 ) }
    dend_60 { pt3dadd( 58.9157, -140.68, 43.8863, 0.28 ) }
    dend_60 { pt3dadd( 58.9914, -138.618, 45.1379, 0.83 ) }
    dend_60 { pt3dadd( 58.9862, -135.941, 46.7772, 0.83 ) }
    dend_60 { pt3dadd( 58.8804, -134.254, 47.7034, 0.28 ) }
    dend_60 { pt3dadd( 58.6442, -131.811, 48.919, 0.55 ) }
    dend_60 { pt3dadd( 58.1716, -129.601, 49.9139, 0.55 ) }
    dend_60 { pt3dadd( 57.2833, -126.917, 50.9964, 0.28 ) }
    dend_60 { pt3dadd( 56.9398, -126.117, 51.3176, 0.83 ) }
    dend_60 { pt3dadd( 55.9261, -123.877, 52.1984, 0.28 ) }
    dend_60 { pt3dadd( 54.6239, -121.271, 53.1544, 0.55 ) }
    dend_60 { pt3dadd( 52.9366, -118.125, 54.2837, 0.28 ) }
    dend_60 { pt3dadd( 51.5991, -115.956, 55.0235, 1.11 ) }
    dend_60 { pt3dadd( 50.4352, -114.346, 55.4708, 0.28 ) }
    dend_60 { pt3dadd( 48.8944, -112.297, 55.9845, 0.83 ) }
    // Section: dend_56, id: dend_56, parent: dend_46 (entry count 16/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -10.1567, -158.09, 18.4239, 0.83 ) }
    dend_56 { pt3dadd( -9.44712, -161.765, 18.5833, 0.83 ) }
    dend_56 { pt3dadd( -9.03518, -163.564, 18.6451, 0.83 ) }
    dend_56 { pt3dadd( -8.3794, -166.754, 18.7402, 0.83 ) }
    dend_56 { pt3dadd( -8.00383, -169.116, 18.9772, 0.55 ) }
    dend_56 { pt3dadd( -7.77055, -171.302, 19.3622, 0.83 ) }
    dend_56 { pt3dadd( -7.64169, -173.401, 19.8918, 0.83 ) }
    dend_56 { pt3dadd( -7.60216, -174.962, 20.5112, 0.83 ) }
    dend_56 { pt3dadd( -7.68038, -177.519, 21.7738, 0.83 ) }
    dend_56 { pt3dadd( -7.93622, -180.597, 23.5204, 0.83 ) }
    dend_56 { pt3dadd( -8.22577, -182.604, 24.7148, 0.83 ) }
    dend_56 { pt3dadd( -8.84302, -185.794, 26.7367, 1.11 ) }
    dend_56 { pt3dadd( -9.37925, -188.181, 28.295, 0.55 ) }
    dend_56 { pt3dadd( -9.73772, -189.896, 29.3418, 0.55 ) }
    dend_56 { pt3dadd( -10.1396, -192.04, 30.4939, 0.83 ) }
    dend_56 { pt3dadd( -10.389, -193.434, 31.0683, 0.83 ) }
    dend_56 { pt3dadd( -10.5757, -194.647, 31.4766, 0.28 ) }
    dend_56 { pt3dadd( -10.7747, -195.919, 31.8438, 0.55 ) }
    dend_56 { pt3dadd( -11.1888, -198.609, 32.5214, 1.11 ) }
    dend_56 { pt3dadd( -11.4323, -200.504, 32.935, 0.28 ) }
    dend_56 { pt3dadd( -11.57, -201.573, 33.1401, 0.55 ) }
    dend_56 { pt3dadd( -12.0503, -204.615, 33.6761, 0.28 ) }
    dend_56 { pt3dadd( -12.1438, -205.198, 33.7867, 0.83 ) }
    dend_56 { pt3dadd( -12.4669, -207.536, 34.2572, 0.83 ) }
    dend_56 { pt3dadd( -12.7889, -209.965, 34.7554, 0.28 ) }
    dend_56 { pt3dadd( -12.8218, -210.329, 34.8191, 1.11 ) }
    dend_56 { pt3dadd( -12.937, -211.963, 35.0283, 1.11 ) }
    dend_56 { pt3dadd( -13.1615, -214.383, 35.2337, 0.55 ) }
    dend_56 { pt3dadd( -13.3107, -216.262, 35.4365, 1.11 ) }
    dend_56 { pt3dadd( -13.4019, -217.83, 35.6604, 1.11 ) }
    dend_56 { pt3dadd( -13.459, -218.927, 35.894, 1.11 ) }
    dend_56 { pt3dadd( -13.5455, -220.378, 36.2102, 0.28 ) }
    dend_56 { pt3dadd( -13.5491, -221.279, 36.4661, 0.55 ) }
    dend_56 { pt3dadd( -13.5007, -222.678, 36.9129, 0.28 ) }
    dend_56 { pt3dadd( -13.442, -223.378, 37.2436, 0.83 ) }
    dend_56 { pt3dadd( -13.305, -224.747, 37.9928, 0.28 ) }
    dend_56 { pt3dadd( -13.2276, -225.472, 38.3925, 0.83 ) }
    dend_56 { pt3dadd( -12.8586, -228.195, 39.8364, 0.28 ) }
    dend_56 { pt3dadd( -12.7696, -229.032, 40.2186, 0.83 ) }
    dend_56 { pt3dadd( -12.6162, -231.384, 41.0965, 0.55 ) }
    dend_56 { pt3dadd( -12.5697, -232.966, 41.5982, 1.11 ) }
    dend_56 { pt3dadd( -12.5802, -234.677, 42.0163, 0.28 ) }
    dend_56 { pt3dadd( -12.6062, -235.597, 42.1759, 0.83 ) }
    dend_56 { pt3dadd( -12.7886, -238.077, 42.3883, 0.83 ) }
    dend_56 { pt3dadd( -12.8584, -239.413, 42.5551, 0.28 ) }
    dend_56 { pt3dadd( -12.8651, -240.237, 42.6671, 0.28 ) }
    dend_56 { pt3dadd( -12.8134, -241.161, 42.8751, 0.83 ) }
    dend_56 { pt3dadd( -12.6717, -242.281, 43.2074, 0.83 ) }
    dend_56 { pt3dadd( -12.393, -243.783, 43.7296, 0.55 ) }
    dend_56 { pt3dadd( -11.7407, -246.518, 44.763, 0.28 ) }
    dend_56 { pt3dadd( -11.5851, -247.279, 45.0659, 1.11 ) }
    dend_56 { pt3dadd( -11.3937, -248.397, 45.4771, 0.83 ) }
    dend_56 { pt3dadd( -11.0801, -250.674, 46.205, 0.28 ) }
    dend_56 { pt3dadd( -11.0333, -251.025, 46.2889, 0.55 ) }
    dend_56 { pt3dadd( -10.8129, -252.573, 46.5016, 0.55 ) }
    dend_56 { pt3dadd( -10.5283, -254.251, 46.5388, 0.55 ) }
    dend_56 { pt3dadd( -10.2849, -255.626, 46.5139, 0.55 ) }
    dend_56 { pt3dadd( -10.0915, -256.793, 46.4587, 0.55 ) }
    dend_56 { pt3dadd( -9.85917, -258.306, 46.3905, 0.55 ) }
    dend_56 { pt3dadd( -9.50517, -260.225, 46.2831, 0.55 ) }
    dend_56 { pt3dadd( -9.11114, -262.082, 46.1609, 0.55 ) }
    dend_56 { pt3dadd( -8.6982, -263.898, 46.026, 0.55 ) }
    dend_56 { pt3dadd( -8.42402, -265.203, 45.9631, 0.28 ) }
    dend_56 { pt3dadd( -8.13326, -266.786, 45.9008, 0.83 ) }
    dend_56 { pt3dadd( -7.84693, -269.004, 45.8407, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 81/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -10.1567, -158.09, 18.4239, 1.38 ) }
    dend_47 { pt3dadd( -13.0027, -158.741, 19.0583, 1.38 ) }
    dend_47 { pt3dadd( -16.4271, -159.525, 19.8216, 1.38 ) }
    // Section: dend_37, id: dend_37, parent: dend_31 (entry count 84/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 22.7968, -200.552, -29.2354, 0.55 ) }
    dend_37 { pt3dadd( 23.1341, -204.294, -29.5622, 0.55 ) }
    dend_37 { pt3dadd( 23.266, -206.15, -29.8096, 0.55 ) }
    dend_37 { pt3dadd( 23.4426, -208.369, -30.1415, 2.49 ) }
    dend_37 { pt3dadd( 23.5968, -210.156, -30.4797, 0.55 ) }
    dend_37 { pt3dadd( 23.7423, -211.882, -30.843, 0.55 ) }
    dend_37 { pt3dadd( 23.9264, -214.068, -31.3027, 0.83 ) }
    dend_37 { pt3dadd( 23.9683, -215.961, -31.789, 0.28 ) }
    dend_37 { pt3dadd( 24.0204, -216.844, -32.0489, 0.55 ) }
    dend_37 { pt3dadd( 24.145, -218.258, -32.53, 0.28 ) }
    dend_37 { pt3dadd( 24.2351, -219.14, -32.8521, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 95/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 22.7968, -200.552, -29.2354, 0.83 ) }
    dend_32 { pt3dadd( 25.0431, -200.816, -29.1417, 0.83 ) }
    dend_32 { pt3dadd( 26.9896, -200.9, -28.9235, 0.83 ) }
    dend_32 { pt3dadd( 29.0912, -200.912, -28.6848, 0.55 ) }
    dend_32 { pt3dadd( 31.6962, -200.956, -28.3775, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_32 { pt3dadd( 32.5934, -201.033, -28.3145, 0.83 ) }
    dend_32 { pt3dadd( 34.4127, -201.379, -28.1858, 0.55 ) }
    dend_32 { pt3dadd( 36.0271, -201.856, -28.0428, 1.11 ) }
    dend_32 { pt3dadd( 37.6976, -202.622, -27.8841, 0.28 ) }
    dend_32 { pt3dadd( 38.8591, -203.35, -27.7658, 0.83 ) }
    dend_32 { pt3dadd( 41.1316, -205.136, -27.6435, 0.28 ) }
    dend_32 { pt3dadd( 43.2693, -207.041, -27.6447, 1.38 ) }
    dend_32 { pt3dadd( 44.4968, -208.259, -27.5736, 0.55 ) }
    dend_32 { pt3dadd( 45.4125, -209.281, -27.4269, 0.55 ) }
    dend_32 { pt3dadd( 46.6514, -210.852, -26.9573, 0.83 ) }
    dend_32 { pt3dadd( 47.5026, -212.05, -26.4555, 0.28 ) }
    dend_32 { pt3dadd( 48.6085, -213.647, -25.6527, 0.55 ) }
    dend_32 { pt3dadd( 50.7609, -216.772, -23.722, 0.28 ) }
    dend_32 { pt3dadd( 51.7683, -218.162, -22.7047, 0.83 ) }
    dend_32 { pt3dadd( 53.364, -220.154, -20.9873, 0.55 ) }
    dend_32 { pt3dadd( 53.9225, -220.774, -20.349, 0.55 ) }
    dend_32 { pt3dadd( 55.619, -222.474, -18.4172, 1.94 ) }
    dend_32 { pt3dadd( 57.6968, -224.454, -16.2379, 0.55 ) }
    dend_32 { pt3dadd( 58.691, -225.305, -15.3079, 0.55 ) }
    dend_32 { pt3dadd( 59.5683, -225.999, -14.4832, 0.55 ) }
    dend_32 { pt3dadd( 61.334, -227.501, -12.8748, 0.28 ) }
    dend_32 { pt3dadd( 61.938, -228.12, -12.3215, 1.38 ) }
    dend_32 { pt3dadd( 63.1036, -229.608, -11.2178, 1.38 ) }
    dend_32 { pt3dadd( 64.679, -232.06, -10.0717, 0.55 ) }
    dend_32 { pt3dadd( 65.2867, -233.39, -9.27437, 0.55 ) }
    dend_32 { pt3dadd( 66.3104, -236.095, -7.47393, 1.11 ) }
    dend_32 { pt3dadd( 67.0881, -238.452, -5.91898, 0.28 ) }
    dend_32 { pt3dadd( 67.2181, -238.909, -5.60578, 0.83 ) }
    dend_32 { pt3dadd( 67.8122, -241.411, -3.74889, 0.28 ) }
    dend_32 { pt3dadd( 69.3294, -249.624, 2.62315, 0.83 ) }
    dend_32 { pt3dadd( 69.4341, -250.765, 3.87725, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_13 (entry count 31/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -13.6331, 262.217, 4.41351, 0.55 ) }
    dend_23 { pt3dadd( -13.6668, 263.599, 4.47803, 0.55 ) }
    dend_23 { pt3dadd( -13.6106, 264.948, 4.72564, 0.28 ) }
    dend_23 { pt3dadd( -13.6055, 266.157, 5.05502, 0.55 ) }
    dend_23 { pt3dadd( -13.6754, 267.012, 5.37582, 0.28 ) }
    dend_23 { pt3dadd( -13.8594, 268.255, 5.84658, 0.83 ) }
    dend_23 { pt3dadd( -14.0651, 269.52, 6.28723, 0.83 ) }
    dend_23 { pt3dadd( -14.2712, 271.482, 7.33217, 0.55 ) }
    dend_23 { pt3dadd( -14.3278, 272.606, 8.06133, 0.55 ) }
    dend_23 { pt3dadd( -14.356, 274.733, 9.60406, 0.83 ) }
    dend_23 { pt3dadd( -14.3713, 275.911, 10.5224, 0.83 ) }
    dend_23 { pt3dadd( -14.331, 277.252, 11.6629, 0.83 ) }
    dend_23 { pt3dadd( -14.3674, 281.502, 15.2393, 0.55 ) }
    dend_23 { pt3dadd( -14.3638, 282.366, 15.9071, 0.55 ) }
    dend_23 { pt3dadd( -14.3428, 282.77, 16.1965, 0.83 ) }
    dend_23 { pt3dadd( -14.2582, 283.69, 16.8032, 0.55 ) }
    dend_23 { pt3dadd( -14.0055, 286.532, 18.3781, 1.11 ) }
    dend_23 { pt3dadd( -13.8571, 289.012, 19.4145, 0.83 ) }
    dend_23 { pt3dadd( -13.8142, 290.757, 19.8564, 0.55 ) }
    dend_23 { pt3dadd( -13.7466, 292.06, 20.1468, 1.11 ) }
    dend_23 { pt3dadd( -13.6328, 293.507, 20.4659, 0.55 ) }
    dend_23 { pt3dadd( -13.36, 295.892, 20.9621, 1.11 ) }
    dend_23 { pt3dadd( -13.1645, 297.726, 21.3208, 0.55 ) }
    dend_23 { pt3dadd( -12.9616, 299.368, 21.7033, 0.55 ) }
    dend_23 { pt3dadd( -12.8994, 300.26, 21.9448, 0.28 ) }
    dend_23 { pt3dadd( -12.8253, 301.855, 22.4032, 0.83 ) }
    dend_23 { pt3dadd( -12.8103, 303.471, 22.8387, 0.55 ) }
    dend_23 { pt3dadd( -12.8551, 304.919, 23.193, 0.83 ) }
    dend_23 { pt3dadd( -12.9576, 306.293, 23.5011, 0.83 ) }
    dend_23 { pt3dadd( -13.1964, 308.272, 23.9421, 0.55 ) }
    dend_23 { pt3dadd( -13.4916, 310.242, 24.3396, 0.55 ) }
    dend_23 { pt3dadd( -13.9557, 312.777, 24.7994, 0.83 ) }
    dend_23 { pt3dadd( -14.4641, 315.286, 25.2473, 0.83 ) }
    dend_23 { pt3dadd( -14.9466, 317.629, 25.6547, 0.83 ) }
    dend_23 { pt3dadd( -15.2619, 319.087, 25.9008, 0.83 ) }
    dend_23 { pt3dadd( -15.6736, 321.032, 26.191, 0.83 ) }
    dend_23 { pt3dadd( -16.0485, 322.735, 26.4585, 0.83 ) }
    dend_23 { pt3dadd( -16.3692, 324.589, 26.7789, 0.83 ) }
    dend_23 { pt3dadd( -16.5291, 325.677, 26.9783, 0.83 ) }
    dend_23 { pt3dadd( -16.6858, 327.189, 27.2768, 0.55 ) }
    dend_23 { pt3dadd( -16.8428, 328.474, 27.4962, 0.83 ) }
    dend_23 { pt3dadd( -17.0467, 330.047, 27.7888, 0.83 ) }
    dend_23 { pt3dadd( -17.3662, 332.603, 28.276, 0.55 ) }
    dend_23 { pt3dadd( -17.7045, 335.065, 28.7906, 0.83 ) }
    dend_23 { pt3dadd( -18.1107, 337.693, 29.3842, 0.55 ) }
    dend_23 { pt3dadd( -18.6826, 340.514, 30.1015, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 77/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -13.6331, 262.217, 4.41351, 0.55 ) }
    dend_14 { pt3dadd( -15.5255, 265.76, 6.23375, 0.55 ) }
    dend_14 { pt3dadd( -17.1182, 268.594, 7.26937, 0.28 ) }
    dend_14 { pt3dadd( -17.9006, 269.896, 7.64601, 0.83 ) }
    dend_14 { pt3dadd( -19.0529, 271.702, 8.0982, 0.28 ) }
    dend_14 { pt3dadd( -19.6314, 272.606, 8.30002, 0.28 ) }
    dend_14 { pt3dadd( -20.5841, 274.064, 8.58759, 0.83 ) }
    dend_14 { pt3dadd( -22.3927, 277.017, 8.88988, 0.83 ) }
    dend_14 { pt3dadd( -23.3132, 278.561, 8.92608, 0.28 ) }
    dend_14 { pt3dadd( -24.6137, 280.87, 9.01826, 0.83 ) }
    dend_14 { pt3dadd( -25.283, 282.05, 9.06917, 0.55 ) }
    dend_14 { pt3dadd( -26.5518, 284.347, 9.23368, 1.11 ) }
    dend_14 { pt3dadd( -27.7217, 286.583, 9.40932, 0.55 ) }
    dend_14 { pt3dadd( -28.6202, 288.48, 9.55592, 1.11 ) }
    dend_14 { pt3dadd( -29.5481, 290.632, 9.71838, 0.55 ) }
    dend_14 { pt3dadd( -30.7377, 293.657, 9.93795, 1.11 ) }
    dend_14 { pt3dadd( -31.4471, 295.473, 10.0891, 0.28 ) }
    dend_14 { pt3dadd( -31.9918, 296.914, 10.2354, 0.55 ) }
    dend_14 { pt3dadd( -32.6704, 298.566, 10.4503, 0.28 ) }
    dend_14 { pt3dadd( -33.147, 299.736, 10.6308, 0.83 ) }
    dend_14 { pt3dadd( -33.6744, 301.293, 10.7798, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 98/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 2.7634, 464.386, -39.5658, 0.83 ) }
    dend_5 { pt3dadd( 3.55449, 467.507, -39.8708, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_5 { pt3dadd( 3.93886, 469.206, -40.0618, 0.83 ) }
    dend_5 { pt3dadd( 4.49537, 471.742, -40.3439, 2.22 ) }
    dend_5 { pt3dadd( 5.02079, 474.31, -40.6524, 1.66 ) }
    dend_5 { pt3dadd( 5.65931, 477.44, -40.9082, 0.83 ) }
    dend_5 { pt3dadd( 5.86016, 478.473, -40.9681, 0.83 ) }
    dend_5 { pt3dadd( 6.22368, 480.776, -41.0799, 0.83 ) }
    dend_5 { pt3dadd( 6.65265, 483.955, -41.1518, 1.66 ) }
    dend_5 { pt3dadd( 6.86429, 486.429, -41.1622, 0.55 ) }
    dend_5 { pt3dadd( 6.92781, 488.92, -41.2172, 0.55 ) }
    dend_5 { pt3dadd( 6.90912, 490.475, -41.294, 1.11 ) }
    dend_5 { pt3dadd( 6.83921, 493.141, -41.5499, 0.55 ) }
    dend_5 { pt3dadd( 6.65326, 497.506, -42.2027, 1.66 ) }
    dend_5 { pt3dadd( 6.63123, 499.723, -42.5975, 0.83 ) }
    dend_5 { pt3dadd( 6.71519, 503.344, -43.2978, 0.83 ) }
    dend_5 { pt3dadd( 6.79883, 505.096, -43.6742, 0.83 ) }
    dend_5 { pt3dadd( 6.98857, 507.049, -44.0527, 1.66 ) }
    dend_5 { pt3dadd( 7.37063, 509.701, -44.4918, 0.83 ) }
    dend_5 { pt3dadd( 8.10585, 513.771, -44.9935, 0.83 ) }
    dend_5 { pt3dadd( 8.75142, 516.816, -45.2099, 0.83 ) }
    dend_5 { pt3dadd( 9.03002, 517.972, -45.215, 0.83 ) }
    dend_5 { pt3dadd( 9.64286, 520.568, -45.1664, 0.83 ) }
    dend_5 { pt3dadd( 10.0184, 522.28, -45.1381, 1.38 ) }
    dend_5 { pt3dadd( 10.5801, 524.951, -45.0829, 0.55 ) }
    dend_5 { pt3dadd( 10.9749, 526.721, -45.0449, 1.38 ) }
    dend_5 { pt3dadd( 11.7675, 530.104, -44.9645, 1.38 ) }
    dend_5 { pt3dadd( 12.4094, 533.002, -44.9012, 0.83 ) }
    dend_5 { pt3dadd( 13.064, 536.148, -44.8319, 0.83 ) }
    dend_5 { pt3dadd( 13.8094, 539.587, -44.7422, 1.11 ) }
    dend_5 { pt3dadd( 14.4097, 542.411, -44.6605, 0.55 ) }
    dend_5 { pt3dadd( 14.8371, 544.682, -44.594, 0.55 ) }
    dend_5 { pt3dadd( 15.1628, 546.482, -44.5989, 0.55 ) }
    dend_5 { pt3dadd( 15.9228, 550.469, -44.7009, 2.22 ) }
    dend_5 { pt3dadd( 16.2719, 552.254, -44.7887, 0.55 ) }
    dend_5 { pt3dadd( 16.644, 554.038, -44.9054, 0.55 ) }
    dend_5 { pt3dadd( 16.8223, 554.919, -44.9711, 1.11 ) }
    dend_5 { pt3dadd( 17.6852, 559.105, -45.2827, 0.55 ) }
    dend_5 { pt3dadd( 18.1129, 561.418, -45.4572, 0.55 ) }
    dend_5 { pt3dadd( 18.2464, 562.326, -45.5263, 0.55 ) }
    dend_5 { pt3dadd( 18.5173, 565.16, -45.7142, 1.11 ) }
    dend_5 { pt3dadd( 18.6715, 567.888, -45.922, 1.11 ) }
    dend_5 { pt3dadd( 18.7424, 570.13, -46.0693, 0.83 ) }
    dend_5 { pt3dadd( 18.6921, 572.474, -46.1725, 0.83 ) }
    dend_5 { pt3dadd( 18.6283, 573.954, -46.257, 0.83 ) }
    dend_5 { pt3dadd( 18.3961, 576.911, -46.4771, 0.83 ) }
    dend_5 { pt3dadd( 17.9621, 580.258, -46.8237, 2.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 45/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 2.7634, 464.386, -39.5658, 0.55 ) }
    dend_4 { pt3dadd( 1.01999, 464.328, -40.0313, 0.55 ) }
    dend_4 { pt3dadd( -0.803474, 464.267, -40.518, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_47 (entry count 48/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -16.4271, -159.525, 19.8216, 1.11 ) }
    dend_53 { pt3dadd( -16.3968, -161.001, 19.8195, 1.11 ) }
    dend_53 { pt3dadd( -16.3456, -163.496, 19.816, 1.11 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 51/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -16.4271, -159.525, 19.8216, 1.11 ) }
    dend_48 { pt3dadd( -19.3403, -157.869, 18.8477, 1.11 ) }
    dend_48 { pt3dadd( -20.2838, -157.206, 18.5892, 0.28 ) }
    dend_48 { pt3dadd( -20.8886, -156.778, 18.5891, 0.83 ) }
    dend_48 { pt3dadd( -23.0929, -155.218, 18.9141, 0.55 ) }
    dend_48 { pt3dadd( -24.0941, -154.556, 19.1367, 0.55 ) }
    dend_48 { pt3dadd( -25.0715, -153.936, 19.3229, 0.55 ) }
    dend_48 { pt3dadd( -26.4276, -153.155, 19.6162, 0.55 ) }
    dend_48 { pt3dadd( -29.8294, -151.406, 20.2317, 1.11 ) }
    dend_48 { pt3dadd( -31.8412, -150.402, 20.5719, 0.55 ) }
    dend_48 { pt3dadd( -33.1481, -149.762, 20.801, 0.55 ) }
    dend_48 { pt3dadd( -36.1765, -148.495, 21.2474, 0.83 ) }
    dend_48 { pt3dadd( -38.0186, -147.819, 21.4939, 0.55 ) }
    dend_48 { pt3dadd( -39.8292, -147.243, 21.7137, 1.11 ) }
    dend_48 { pt3dadd( -42.7845, -146.428, 21.9736, 0.83 ) }
    dend_48 { pt3dadd( -43.8229, -146.197, 22.0951, 0.83 ) }
    dend_48 { pt3dadd( -45.255, -145.904, 22.3472, 0.83 ) }
    dend_48 { pt3dadd( -47.4554, -145.57, 22.9102, 0.83 ) }
    dend_48 { pt3dadd( -50.2303, -145.263, 23.6581, 1.11 ) }
    dend_48 { pt3dadd( -51.5395, -145.187, 23.9624, 0.83 ) }
    dend_48 { pt3dadd( -53.4399, -145.159, 24.3302, 0.83 ) }
    dend_48 { pt3dadd( -56.2633, -145.181, 24.7867, 0.83 ) }
    dend_48 { pt3dadd( -58.1369, -145.261, 24.99, 0.55 ) }
    dend_48 { pt3dadd( -59.5526, -145.435, 25.0767, 1.38 ) }
    dend_48 { pt3dadd( -61.6194, -145.711, 25.0693, 0.55 ) }
    dend_48 { pt3dadd( -63.5065, -145.881, 24.9926, 0.55 ) }
    dend_48 { pt3dadd( -64.6705, -145.996, 24.8875, 0.55 ) }
    dend_48 { pt3dadd( -66.4254, -146.168, 24.6204, 0.55 ) }
    dend_48 { pt3dadd( -67.3835, -146.219, 24.4319, 0.83 ) }
    dend_48 { pt3dadd( -70.5974, -146.161, 23.6967, 0.55 ) }
    dend_48 { pt3dadd( -71.7286, -146.107, 23.4126, 0.55 ) }
    dend_48 { pt3dadd( -73.0113, -145.984, 23.0798, 0.55 ) }
    dend_48 { pt3dadd( -75.4461, -145.667, 22.6042, 0.55 ) }
    dend_48 { pt3dadd( -77.9521, -145.281, 22.2852, 1.11 ) }
    dend_48 { pt3dadd( -80.4693, -144.894, 22.0898, 0.55 ) }
    dend_48 { pt3dadd( -81.1352, -144.818, 22.0883, 0.55 ) }
    dend_48 { pt3dadd( -83.3492, -144.673, 22.2365, 0.55 ) }
    dend_48 { pt3dadd( -85.828, -144.558, 22.656, 1.94 ) }
    dend_48 { pt3dadd( -87.5419, -144.599, 23.211, 0.83 ) }
    dend_48 { pt3dadd( -88.1544, -144.648, 23.443, 0.28 ) }
    dend_48 { pt3dadd( -89.2347, -144.822, 23.854, 0.55 ) }
    dend_48 { pt3dadd( -90.7989, -145.149, 24.4204, 0.55 ) }
    dend_48 { pt3dadd( -92.164, -145.501, 24.8851, 0.28 ) }
    dend_48 { pt3dadd( -94.559, -146.161, 25.7458, 1.11 ) }
    dend_48 { pt3dadd( -96.3168, -146.712, 26.4763, 0.28 ) }
    dend_48 { pt3dadd( -98.2183, -147.222, 27.3427, 0.83 ) }
    dend_48 { pt3dadd( -99.668, -147.538, 28.0861, 0.28 ) }
    dend_48 { pt3dadd( -100.281, -147.627, 28.4438, 0.28 ) }
    dend_48 { pt3dadd( -101.762, -147.721, 29.444, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_48 { pt3dadd( -102.54, -147.68, 30.0546, 0.55 ) }
    dend_48 { pt3dadd( -104.058, -147.384, 31.3389, 0.55 ) }
    dend_48 { pt3dadd( -104.696, -147.12, 31.8145, 0.83 ) }
    dend_48 { pt3dadd( -105.761, -146.586, 32.4805, 0.28 ) }
    dend_48 { pt3dadd( -106.031, -146.455, 32.6252, 0.83 ) }
    dend_48 { pt3dadd( -107.794, -145.626, 33.4309, 0.83 ) }
    dend_48 { pt3dadd( -109.241, -144.953, 34.0674, 0.83 ) }
    dend_48 { pt3dadd( -110.908, -144.283, 34.7712, 0.55 ) }
    dend_48 { pt3dadd( -111.759, -143.98, 35.1181, 0.55 ) }
    dend_48 { pt3dadd( -113.357, -143.523, 35.769, 1.38 ) }
    dend_48 { pt3dadd( -115.068, -143.133, 36.473, 1.38 ) }
    dend_48 { pt3dadd( -116.494, -142.899, 37.0677, 0.28 ) }
    dend_48 { pt3dadd( -117.663, -142.852, 37.5265, 0.83 ) }
    dend_48 { pt3dadd( -118.595, -142.93, 37.8769, 0.28 ) }
    dend_48 { pt3dadd( -119.49, -143.113, 38.1895, 1.38 ) }
    dend_48 { pt3dadd( -120.86, -143.514, 38.628, 0.28 ) }
    dend_48 { pt3dadd( -121.343, -143.727, 38.7657, 0.83 ) }
    dend_48 { pt3dadd( -122.69, -144.478, 39.1054, 0.55 ) }
    dend_48 { pt3dadd( -123.413, -144.903, 39.2637, 0.55 ) }
    dend_48 { pt3dadd( -124.692, -145.632, 39.5061, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 20/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 24.2351, -219.14, -32.8521, 0.83 ) }
    dend_39 { pt3dadd( 24.3387, -220.606, -32.9081, 0.83 ) }
    dend_39 { pt3dadd( 24.3787, -222.002, -33.1152, 1.94 ) }
    dend_39 { pt3dadd( 24.4204, -223.407, -33.3811, 1.94 ) }
    dend_39 { pt3dadd( 24.4168, -226.199, -34.0105, 0.83 ) }
    dend_39 { pt3dadd( 24.3922, -228.146, -34.4581, 1.38 ) }
    dend_39 { pt3dadd( 24.2144, -233.205, -35.7413, 0.28 ) }
    dend_39 { pt3dadd( 24.1966, -233.65, -35.8703, 0.83 ) }
    dend_39 { pt3dadd( 24.1246, -234.925, -36.3127, 0.55 ) }
    dend_39 { pt3dadd( 23.9487, -236.693, -37.0522, 0.28 ) }
    dend_39 { pt3dadd( 23.6672, -238.37, -37.9099, 0.55 ) }
    dend_39 { pt3dadd( 23.2346, -240.634, -39.0302, 3.6 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 32/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 24.2351, -219.14, -32.8521, 0.28 ) }
    dend_38 { pt3dadd( 21.8057, -218.116, -29.7804, 0.28 ) }
    dend_38 { pt3dadd( 21.459, -217.97, -29.3421, 1.38 ) }
    dend_38 { pt3dadd( 18.9694, -216.92, -26.1942, 0.55 ) }
    dend_38 { pt3dadd( 17.5448, -216.32, -24.3929, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 37/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 69.4341, -250.765, 3.87725, 1.38 ) }
    dend_34 { pt3dadd( 69.9326, -253.75, 3.88689, 1.38 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 39/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 69.4341, -250.765, 3.87725, 0.55 ) }
    dend_33 { pt3dadd( 70.748, -249.725, 3.15192, 0.55 ) }
    dend_33 { pt3dadd( 71.5943, -249.055, 2.68477, 0.55 ) }
    dend_33 { pt3dadd( 73.8261, -247.287, 1.45279, 0.28 ) }
    dend_33 { pt3dadd( 74.5493, -246.714, 1.05354, 1.11 ) }
    dend_33 { pt3dadd( 76.7641, -244.961, -0.169017, 0.28 ) }
    dend_33 { pt3dadd( 78.6185, -243.492, -1.1927, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 46/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -18.6826, 340.514, 30.1015, 1.38 ) }
    dend_25 { pt3dadd( -18.5317, 341.321, 30.2447, 1.38 ) }
    dend_25 { pt3dadd( -18.4451, 342.046, 30.4231, 0.55 ) }
    dend_25 { pt3dadd( -18.3986, 342.657, 30.6927, 0.55 ) }
    dend_25 { pt3dadd( -18.3581, 343.188, 30.9273, 0.55 ) }
    dend_25 { pt3dadd( -18.3111, 343.806, 31.1996, 1.11 ) }
    dend_25 { pt3dadd( -18.217, 345.042, 31.745, 0.55 ) }
    dend_25 { pt3dadd( -18.19, 345.924, 32.2307, 1.11 ) }
    dend_25 { pt3dadd( -18.1754, 347.207, 33.0712, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 55/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -18.6826, 340.514, 30.1015, 0.55 ) }
    dend_24 { pt3dadd( -19.8544, 344.449, 30.105, 0.55 ) }
    dend_24 { pt3dadd( -20.4324, 346.095, 30.3131, 0.28 ) }
    dend_24 { pt3dadd( -21.1908, 347.651, 30.5693, 0.83 ) }
    dend_24 { pt3dadd( -22.6581, 350.39, 31.0696, 0.28 ) }
    dend_24 { pt3dadd( -24.008, 352.728, 31.5957, 0.55 ) }
    dend_24 { pt3dadd( -25.3034, 354.905, 32.1505, 0.55 ) }
    dend_24 { pt3dadd( -27.8837, 358.656, 33.3793, 1.11 ) }
    dend_24 { pt3dadd( -30.1921, 361.737, 34.6576, 0.55 ) }
    dend_24 { pt3dadd( -31.1142, 362.877, 35.131, 0.55 ) }
    dend_24 { pt3dadd( -33.2066, 365.413, 36.1932, 0.83 ) }
    dend_24 { pt3dadd( -34.6972, 367.136, 36.8837, 0.83 ) }
    dend_24 { pt3dadd( -37.0215, 369.675, 37.6867, 0.83 ) }
    dend_24 { pt3dadd( -38.3, 371.028, 38.0272, 0.83 ) }
    dend_24 { pt3dadd( -41.4374, 374.608, 38.6273, 0.55 ) }
    dend_24 { pt3dadd( -43.9844, 377.615, 38.7242, 0.83 ) }
    dend_24 { pt3dadd( -45.6744, 379.553, 38.549, 0.83 ) }
    dend_24 { pt3dadd( -48.6523, 382.962, 38.0256, 0.55 ) }
    dend_24 { pt3dadd( -51.0964, 385.875, 37.4574, 0.55 ) }
    dend_24 { pt3dadd( -52.6123, 387.677, 37.0752, 0.83 ) }
    dend_24 { pt3dadd( -56.1676, 391.822, 36.3269, 0.83 ) }
    dend_24 { pt3dadd( -58.3632, 394.363, 35.829, 0.83 ) }
    dend_24 { pt3dadd( -59.951, 396.183, 35.4684, 0.28 ) }
    dend_24 { pt3dadd( -61.2086, 397.538, 35.1298, 0.55 ) }
    dend_24 { pt3dadd( -63.8324, 399.816, 33.9723, 0.55 ) }
    dend_24 { pt3dadd( -65.4211, 401.041, 33.1986, 0.55 ) }
    dend_24 { pt3dadd( -66.8357, 402.026, 32.4546, 0.55 ) }
    dend_24 { pt3dadd( -70.5552, 404.408, 30.4102, 0.55 ) }
    dend_24 { pt3dadd( -74.5901, 406.596, 28.1619, 0.83 ) }
    dend_24 { pt3dadd( -81.2565, 409.715, 24.6296, 0.28 ) }
    dend_24 { pt3dadd( -83.4613, 410.526, 23.4674, 0.28 ) }
    dend_24 { pt3dadd( -84.7422, 410.913, 22.7579, 0.55 ) }
    dend_24 { pt3dadd( -86.4549, 411.352, 21.7246, 0.28 ) }
    dend_24 { pt3dadd( -87.5515, 411.62, 21.0004, 0.83 ) }
    dend_24 { pt3dadd( -89.2352, 412.112, 19.8299, 0.83 ) }
    dend_24 { pt3dadd( -94.7593, 413.935, 15.6104, 0.83 ) }
    dend_24 { pt3dadd( -98.9169, 415.273, 12.2302, 0.28 ) }
    dend_24 { pt3dadd( -102.924, 416.479, 8.89969, 1.11 ) }
    dend_24 { pt3dadd( -108.833, 418.192, 3.95273, 0.55 ) }
    dend_24 { pt3dadd( -110.415, 418.622, 2.69017, 0.55 ) }
    dend_24 { pt3dadd( -113.341, 419.28, 0.50197, 0.55 ) }
    dend_24 { pt3dadd( -115.411, 419.662, -0.836462, 0.55 ) }
    dend_24 { pt3dadd( -117.761, 419.971, -2.13565, 0.83 ) }
    dend_24 { pt3dadd( -122.073, 420.394, -4.16857, 0.55 ) }
    dend_24 { pt3dadd( -125.262, 420.659, -5.56118, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_24 { pt3dadd( -135.174, 421.497, -9.7453, 0.28 ) }
    dend_24 { pt3dadd( -136.38, 421.637, -10.291, 0.55 ) }
    dend_24 { pt3dadd( -140.545, 422.302, -12.229, 0.28 ) }
    dend_24 { pt3dadd( -143.669, 422.855, -13.7562, 1.11 ) }
    dend_24 { pt3dadd( -148.645, 423.765, -16.3522, 0.55 ) }
    dend_24 { pt3dadd( -150.888, 424.241, -17.7223, 1.11 ) }
    dend_24 { pt3dadd( -156.055, 425.495, -21.2743, 0.55 ) }
    dend_24 { pt3dadd( -157.418, 425.873, -22.3278, 0.55 ) }
    dend_24 { pt3dadd( -160.802, 426.891, -25.1922, 1.11 ) }
    dend_24 { pt3dadd( -162.466, 427.439, -26.7382, 1.11 ) }
    dend_24 { pt3dadd( -168.136, 429.487, -32.4683, 0.28 ) }
    dend_24 { pt3dadd( -169.768, 430.092, -34.1874, 0.83 ) }
    dend_24 { pt3dadd( -173.785, 431.512, -38.2644, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 13/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -33.6744, 301.293, 10.7798, 0.55 ) }
    dend_16 { pt3dadd( -34.0371, 302.532, 11.2447, 0.55 ) }
    dend_16 { pt3dadd( -34.5259, 304.072, 11.7767, 0.28 ) }
    dend_16 { pt3dadd( -35.2795, 306.248, 12.4596, 1.38 ) }
    dend_16 { pt3dadd( -36.4742, 309.371, 13.364, 0.28 ) }
    dend_16 { pt3dadd( -37.5521, 312.007, 14.0752, 0.55 ) }
    dend_16 { pt3dadd( -38.1393, 313.431, 14.4335, 0.55 ) }
    dend_16 { pt3dadd( -38.6498, 314.636, 14.7072, 0.83 ) }
    dend_16 { pt3dadd( -39.4319, 316.374, 15.0539, 0.28 ) }
    dend_16 { pt3dadd( -40.1031, 317.787, 15.2396, 0.83 ) }
    dend_16 { pt3dadd( -40.5693, 318.813, 15.2881, 0.28 ) }
    dend_16 { pt3dadd( -40.9944, 319.835, 15.3509, 0.28 ) }
    dend_16 { pt3dadd( -41.6456, 321.408, 15.4497, 0.83 ) }
    dend_16 { pt3dadd( -42.3973, 323.277, 15.5644, 0.28 ) }
    dend_16 { pt3dadd( -42.7605, 324.216, 15.6184, 0.55 ) }
    dend_16 { pt3dadd( -43.5911, 326.388, 15.7358, 0.55 ) }
    dend_16 { pt3dadd( -44.2183, 328.006, 15.8314, 0.28 ) }
    dend_16 { pt3dadd( -44.5466, 328.814, 15.8829, 0.28 ) }
    dend_16 { pt3dadd( -45.1157, 330.269, 15.9743, 1.11 ) }
    dend_16 { pt3dadd( -45.7644, 332.127, 15.9749, 0.28 ) }
    dend_16 { pt3dadd( -46.1929, 333.415, 15.8777, 0.83 ) }
    dend_16 { pt3dadd( -46.611, 334.835, 15.6456, 0.28 ) }
    dend_16 { pt3dadd( -46.9601, 336.504, 15.258, 0.83 ) }
    dend_16 { pt3dadd( -47.1179, 337.535, 14.9904, 0.83 ) }
    dend_16 { pt3dadd( -47.4199, 340.257, 14.2237, 0.55 ) }
    dend_16 { pt3dadd( -47.5778, 342.094, 13.7115, 0.55 ) }
    dend_16 { pt3dadd( -47.6813, 343.267, 13.4097, 0.55 ) }
    dend_16 { pt3dadd( -47.8811, 345.395, 12.921, 0.83 ) }
    dend_16 { pt3dadd( -48.0577, 347.193, 12.5866, 0.55 ) }
    dend_16 { pt3dadd( -48.378, 349.828, 12.2312, 1.11 ) }
    dend_16 { pt3dadd( -48.6234, 351.662, 12.0753, 0.55 ) }
    dend_16 { pt3dadd( -48.872, 353.384, 11.9569, 0.55 ) }
    dend_16 { pt3dadd( -49.0493, 354.479, 11.8507, 0.83 ) }
    dend_16 { pt3dadd( -49.1938, 355.318, 11.7056, 0.55 ) }
    dend_16 { pt3dadd( -49.6172, 358.24, 11.0229, 0.83 ) }
    dend_16 { pt3dadd( -49.7637, 359.428, 10.5793, 0.28 ) }
    dend_16 { pt3dadd( -49.7928, 359.669, 10.461, 0.28 ) }
    dend_16 { pt3dadd( -49.8996, 360.701, 9.87466, 0.55 ) }
    dend_16 { pt3dadd( -50.1543, 363.342, 8.27268, 0.28 ) }
    dend_16 { pt3dadd( -50.2039, 363.839, 7.99264, 0.55 ) }
    dend_16 { pt3dadd( -50.4511, 366.417, 6.62399, 0.28 ) }
    dend_16 { pt3dadd( -50.5454, 367.466, 6.15176, 0.83 ) }
    dend_16 { pt3dadd( -50.7794, 369.288, 5.47317, 0.83 ) }
    dend_16 { pt3dadd( -50.8917, 370.057, 5.25637, 0.28 ) }
    dend_16 { pt3dadd( -51.1415, 372.366, 4.79777, 0.55 ) }
    dend_16 { pt3dadd( -51.2862, 373.87, 4.57594, 0.28 ) }
    dend_16 { pt3dadd( -51.4175, 375.826, 4.55792, 0.83 ) }
    dend_16 { pt3dadd( -51.5262, 378.411, 4.69385, 0.28 ) }
    dend_16 { pt3dadd( -51.5292, 379.531, 4.84586, 0.28 ) }
    dend_16 { pt3dadd( -51.4936, 381.093, 5.1685, 0.55 ) }
    dend_16 { pt3dadd( -51.4395, 383.483, 5.68712, 0.83 ) }
    dend_16 { pt3dadd( -51.4274, 386.646, 6.41838, 0.28 ) }
    dend_16 { pt3dadd( -51.4081, 387.981, 6.67189, 0.83 ) }
    dend_16 { pt3dadd( -51.3833, 390.192, 6.90318, 0.28 ) }
    dend_16 { pt3dadd( -51.3406, 393.1, 6.79863, 1.38 ) }
    dend_16 { pt3dadd( -51.3117, 395.69, 6.42726, 0.28 ) }
    dend_16 { pt3dadd( -51.2307, 397.954, 5.90267, 0.83 ) }
    dend_16 { pt3dadd( -51.1317, 400.13, 5.22222, 0.83 ) }
    dend_16 { pt3dadd( -50.9445, 403.55, 4.07009, 0.55 ) }
    dend_16 { pt3dadd( -50.8369, 407.043, 2.8334, 0.55 ) }
    dend_16 { pt3dadd( -50.7576, 409.506, 2.0738, 0.83 ) }
    dend_16 { pt3dadd( -50.701, 411.405, 1.7433, 0.83 ) }
    dend_16 { pt3dadd( -50.6562, 413.869, 1.59295, 0.55 ) }
    dend_16 { pt3dadd( -50.6654, 415.5, 1.8184, 0.55 ) }
    dend_16 { pt3dadd( -50.6601, 417.897, 2.57502, 1.38 ) }
    dend_16 { pt3dadd( -50.7389, 420.859, 3.84993, 0.83 ) }
    dend_16 { pt3dadd( -50.816, 424.261, 5.62588, 1.11 ) }
    dend_16 { pt3dadd( -50.8557, 425.934, 6.66511, 1.11 ) }
    dend_16 { pt3dadd( -50.8382, 429.314, 9.17619, 0.83 ) }
    dend_16 { pt3dadd( -50.7883, 430.045, 9.77827, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 83/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -33.6744, 301.293, 10.7798, 0.28 ) }
    dend_15 { pt3dadd( -32.0721, 301.11, 11.8477, 0.28 ) }
    dend_15 { pt3dadd( -31.6641, 301.063, 12.1196, 0.83 ) }
    dend_15 { pt3dadd( -30.4069, 300.92, 12.9575, 0.28 ) }
    dend_15 { pt3dadd( -30.2227, 300.899, 13.0803, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 88/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 17.9621, 580.258, -46.8237, 0.55 ) }
    dend_7 { pt3dadd( 18.7718, 582.842, -46.478, 0.55 ) }
    dend_7 { pt3dadd( 19.6613, 585.723, -46.1713, 0.55 ) }
    dend_7 { pt3dadd( 20.1442, 587.382, -46.0347, 0.55 ) }
    dend_7 { pt3dadd( 20.8526, 589.542, -45.8256, 0.28 ) }
    dend_7 { pt3dadd( 21.591, 591.52, -45.6006, 0.83 ) }
    dend_7 { pt3dadd( 22.744, 594.53, -45.2471, 0.28 ) }
    dend_7 { pt3dadd( 23.1971, 595.738, -45.1232, 0.83 ) }
    dend_7 { pt3dadd( 23.8378, 597.595, -44.9741, 0.55 ) }
    dend_7 { pt3dadd( 24.7695, 600.207, -44.8047, 0.55 ) }
    dend_7 { pt3dadd( 25.3082, 601.758, -44.7348, 0.83 ) }
    dend_7 { pt3dadd( 25.8972, 603.719, -44.6995, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_7 { pt3dadd( 26.3222, 605.324, -44.6457, 0.83 ) }
    dend_7 { pt3dadd( 26.7702, 607.149, -44.6178, 0.83 ) }
    dend_7 { pt3dadd( 27.1033, 608.49, -44.6948, 0.28 ) }
    dend_7 { pt3dadd( 27.4524, 610.419, -44.9526, 0.83 ) }
    dend_7 { pt3dadd( 27.6708, 612.028, -45.3088, 0.83 ) }
    dend_7 { pt3dadd( 27.9432, 614.023, -46.1425, 0.83 ) }
    dend_7 { pt3dadd( 28.1995, 616.246, -47.4504, 1.11 ) }
    dend_7 { pt3dadd( 28.5817, 618.791, -49.6057, 0.55 ) }
    dend_7 { pt3dadd( 28.7512, 620.612, -51.6089, 0.55 ) }
    dend_7 { pt3dadd( 28.8289, 622.249, -53.7675, 1.11 ) }
    dend_7 { pt3dadd( 28.9278, 624.964, -58.0374, 0.28 ) }
    dend_7 { pt3dadd( 28.9725, 625.659, -59.2557, 0.28 ) }
    dend_7 { pt3dadd( 29.1368, 627.803, -63.2432, 0.83 ) }
    dend_7 { pt3dadd( 29.3095, 629.036, -65.6602, 0.55 ) }
    dend_7 { pt3dadd( 29.4272, 629.451, -66.5381, 0.55 ) }
    dend_7 { pt3dadd( 29.8582, 630.816, -69.2863, 0.55 ) }
    dend_7 { pt3dadd( 30.1786, 631.857, -71.2975, 0.83 ) }
    dend_7 { pt3dadd( 30.7927, 633.761, -75.1783, 0.55 ) }
    dend_7 { pt3dadd( 31.8243, 637.156, -82.2465, 1.94 ) }
    dend_7 { pt3dadd( 32.9316, 640.02, -88.6727, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 20/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 17.9621, 580.258, -46.8237, 0.55 ) }
    dend_6 { pt3dadd( 17.3632, 582.431, -47.2631, 0.55 ) }
    dend_6 { pt3dadd( 16.8495, 584.444, -47.7158, 0.83 ) }
    dend_6 { pt3dadd( 16.63, 585.425, -47.9965, 0.55 ) }
    dend_6 { pt3dadd( 16.3201, 587.609, -48.6359, 0.83 ) }
    dend_6 { pt3dadd( 16.005, 590.762, -49.5897, 0.55 ) }
    dend_6 { pt3dadd( 15.8385, 592.13, -50.0706, 0.55 ) }
    dend_6 { pt3dadd( 15.7124, 593.412, -50.6751, 1.11 ) }
    dend_6 { pt3dadd( 15.6297, 595.209, -51.6368, 0.83 ) }
    dend_6 { pt3dadd( 15.564, 597.443, -52.985, 0.83 ) }
    dend_6 { pt3dadd( 15.4587, 600.037, -54.7442, 0.83 ) }
    dend_6 { pt3dadd( 15.1985, 602.193, -56.3655, 0.55 ) }
    dend_6 { pt3dadd( 14.8044, 604.608, -58.2237, 0.28 ) }
    dend_6 { pt3dadd( 14.3687, 606.931, -60.6191, 0.83 ) }
    dend_6 { pt3dadd( 13.998, 608.666, -62.6756, 0.55 ) }
    dend_6 { pt3dadd( 13.5339, 610.628, -65.2394, 1.38 ) }
    dend_6 { pt3dadd( 13.1567, 612.457, -67.7185, 0.55 ) }
    dend_6 { pt3dadd( 12.9668, 613.563, -69.1682, 0.55 ) }
    dend_6 { pt3dadd( 11.7647, 620.916, -78.4162, 0.83 ) }
    dend_6 { pt3dadd( 11.5691, 622.008, -79.8061, 0.55 ) }
    dend_6 { pt3dadd( 11.5358, 622.274, -80.1233, 0.55 ) }
    dend_6 { pt3dadd( 11.387, 623.957, -81.9258, 1.38 ) }
    dend_6 { pt3dadd( 11.3319, 625.293, -83.0539, 1.38 ) }
    dend_6 { pt3dadd( 11.1385, 628.037, -84.3701, 0.28 ) }
    dend_6 { pt3dadd( 10.9765, 629.251, -84.3041, 0.55 ) }
    dend_6 { pt3dadd( 10.7764, 631.334, -84.0219, 0.28 ) }
    dend_6 { pt3dadd( 10.542, 633.576, -83.6326, 0.55 ) }
    dend_6 { pt3dadd( 10.0404, 637.504, -82.6847, 0.55 ) }
    dend_6 { pt3dadd( 9.70632, 639.909, -82.0206, 0.55 ) }
    dend_6 { pt3dadd( 9.30076, 642.76, -81.1254, 0.55 ) }
    dend_6 { pt3dadd( 9.06414, 645.097, -80.2665, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 51/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -16.3456, -163.496, 19.816, 0.55 ) }
    dend_55 { pt3dadd( -17.4099, -164.044, 21.0573, 0.55 ) }
    dend_55 { pt3dadd( -18.257, -164.483, 22.0646, 0.28 ) }
    dend_55 { pt3dadd( -19.0338, -164.886, 22.9884, 1.11 ) }
    dend_55 { pt3dadd( -21.8741, -166.358, 26.366, 0.28 ) }
    dend_55 { pt3dadd( -22.2443, -166.55, 26.8062, 1.11 ) }
    dend_55 { pt3dadd( -24.1618, -167.544, 29.0864, 0.28 ) }
    dend_55 { pt3dadd( -24.62, -167.791, 29.7613, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 59/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -16.3456, -163.496, 19.816, 0.83 ) }
    dend_54 { pt3dadd( -17.6681, -165.16, 21.2384, 0.83 ) }
    dend_54 { pt3dadd( -18.9436, -166.521, 22.5988, 0.83 ) }
    dend_54 { pt3dadd( -20.0646, -167.43, 23.924, 0.83 ) }
    dend_54 { pt3dadd( -22.0293, -168.89, 26.2575, 0.83 ) }
    dend_54 { pt3dadd( -23.2891, -170.024, 28.2102, 0.83 ) }
    dend_54 { pt3dadd( -24.8064, -171.698, 31.0646, 0.83 ) }
    dend_54 { pt3dadd( -25.5603, -172.686, 32.7449, 0.83 ) }
    dend_54 { pt3dadd( -27.0182, -175.361, 36.7955, 1.11 ) }
    dend_54 { pt3dadd( -27.2432, -176.067, 37.7666, 1.11 ) }
    dend_54 { pt3dadd( -27.7667, -179.692, 42.0825, 1.11 ) }
    dend_54 { pt3dadd( -27.9067, -182.226, 44.7079, 1.11 ) }
    dend_54 { pt3dadd( -27.8999, -184.57, 46.815, 1.11 ) }
    dend_54 { pt3dadd( -27.7714, -186.751, 48.5864, 1.38 ) }
    dend_54 { pt3dadd( -27.429, -190.278, 51.0385, 0.55 ) }
    dend_54 { pt3dadd( -27.3111, -191.77, 52.011, 0.83 ) }
    dend_54 { pt3dadd( -27.2993, -193.236, 52.8139, 0.83 ) }
    dend_54 { pt3dadd( -27.2363, -194.487, 53.5051, 0.83 ) }
    dend_54 { pt3dadd( -27.1971, -195.679, 54.2222, 0.83 ) }
    dend_54 { pt3dadd( -27.162, -197.983, 55.3668, 0.55 ) }
    dend_54 { pt3dadd( -27.2792, -199.553, 55.8563, 0.55 ) }
    dend_54 { pt3dadd( -27.4078, -200.427, 56.0449, 1.11 ) }
    dend_54 { pt3dadd( -27.7143, -202.052, 56.2505, 0.28 ) }
    dend_54 { pt3dadd( -27.9191, -202.928, 56.3238, 1.11 ) }
    dend_54 { pt3dadd( -28.5373, -204.849, 56.3446, 0.55 ) }
    dend_54 { pt3dadd( -29.2782, -206.709, 56.106, 0.55 ) }
    dend_54 { pt3dadd( -30.3136, -208.777, 55.7265, 0.28 ) }
    dend_54 { pt3dadd( -30.6838, -209.432, 55.5543, 1.11 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 87/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -124.692, -145.632, 39.5061, 1.11 ) }
    dend_50 { pt3dadd( -126.768, -145.278, 40.3615, 1.11 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 89/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -124.692, -145.632, 39.5061, 0.28 ) }
    dend_49 { pt3dadd( -125.773, -147.788, 39.0587, 0.28 ) }
    dend_49 { pt3dadd( -125.978, -148.196, 38.9739, 0.83 ) }
    dend_49 { pt3dadd( -126.989, -150.21, 38.5558, 0.28 ) }
    dend_49 { pt3dadd( -127.274, -150.777, 38.438, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 94/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 23.2346, -240.634, -39.0302, 0.55 ) }
    dend_41 { pt3dadd( 22.1905, -242.066, -37.6633, 0.55 ) }
    dend_41 { pt3dadd( 21.4127, -243.065, -36.7926, 0.55 ) }
    dend_41 { pt3dadd( 20.0684, -244.837, -34.8667, 0.28 ) }
    dend_41 { pt3dadd( 19.6982, -245.392, -34.3023, 0.55 ) }
    dend_41 { pt3dadd( 19.1272, -246.248, -33.4336, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( 18.3962, -247.372, -32.3258, 0.28 ) }
    dend_41 { pt3dadd( 17.7961, -248.207, -31.4449, 0.55 ) }
    dend_41 { pt3dadd( 16.0025, -250.508, -29.0924, 0.28 ) }
    dend_41 { pt3dadd( 14.4493, -252.423, -27.2164, 0.83 ) }
    dend_41 { pt3dadd( 12.9201, -254.375, -25.2738, 0.28 ) }
    dend_41 { pt3dadd( 12.4971, -254.94, -24.7074, 0.83 ) }
    dend_41 { pt3dadd( 11.4195, -256.365, -23.2641, 0.83 ) }
    dend_41 { pt3dadd( 10.2386, -257.784, -21.8601, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 8/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 23.2346, -240.634, -39.0302, 0.28 ) }
    dend_40 { pt3dadd( 23.2555, -244.622, -38.769, 0.28 ) }
    dend_40 { pt3dadd( 23.2891, -246.023, -38.6134, 0.55 ) }
    dend_40 { pt3dadd( 23.3783, -248.38, -38.3045, 0.28 ) }
    dend_40 { pt3dadd( 23.5119, -251.216, -37.9102, 1.11 ) }
    dend_40 { pt3dadd( 23.7014, -254.588, -37.4326, 0.28 ) }
    dend_40 { pt3dadd( 23.7711, -255.484, -37.3107, 0.55 ) }
    dend_40 { pt3dadd( 23.8794, -256.875, -36.9999, 0.28 ) }
    dend_40 { pt3dadd( 23.9609, -257.744, -36.7786, 0.55 ) }
    dend_40 { pt3dadd( 24.0285, -258.853, -36.4474, 0.28 ) }
    dend_40 { pt3dadd( 24.0507, -259.467, -36.2818, 0.55 ) }
    dend_40 { pt3dadd( 24.0738, -261.491, -35.9899, 0.28 ) }
    dend_40 { pt3dadd( 24.0874, -263.281, -35.8204, 1.11 ) }
    dend_40 { pt3dadd( 24.0737, -267.06, -35.2687, 0.28 ) }
    dend_40 { pt3dadd( 24.0849, -269.246, -34.8934, 1.11 ) }
    dend_40 { pt3dadd( 24.0865, -270.987, -34.5846, 1.11 ) }
    dend_40 { pt3dadd( 24.0742, -274.22, -33.9994, 0.28 ) }
    dend_40 { pt3dadd( 24.0631, -276.268, -33.6245, 0.83 ) }
    dend_40 { pt3dadd( 24.2153, -280.625, -32.9151, 0.55 ) }
    dend_40 { pt3dadd( 24.3679, -283.041, -32.6772, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 28/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 69.9326, -253.75, 3.88689, 0.28 ) }
    dend_36 { pt3dadd( 71.7311, -255.338, 5.39676, 0.28 ) }
    dend_36 { pt3dadd( 72.3648, -255.882, 5.92429, 0.83 ) }
    dend_36 { pt3dadd( 73.3697, -256.747, 6.73573, 0.28 ) }
    dend_36 { pt3dadd( 74.7877, -257.979, 7.84779, 0.83 ) }
    dend_36 { pt3dadd( 76.2105, -259.271, 8.93002, 0.28 ) }
    dend_36 { pt3dadd( 77.2754, -260.216, 9.72245, 0.55 ) }
    dend_36 { pt3dadd( 77.8509, -260.68, 10.1505, 0.28 ) }
    dend_36 { pt3dadd( 79.1366, -261.606, 11.0715, 0.55 ) }
    dend_36 { pt3dadd( 79.9997, -262.192, 11.6665, 0.28 ) }
    dend_36 { pt3dadd( 80.9759, -262.819, 12.3327, 0.55 ) }
    dend_36 { pt3dadd( 82.2575, -263.545, 13.1881, 0.55 ) }
    dend_36 { pt3dadd( 83.5957, -264.223, 13.9764, 0.55 ) }
    dend_36 { pt3dadd( 85.4528, -265.157, 14.9615, 0.83 ) }
    dend_36 { pt3dadd( 86.6403, -265.726, 15.4427, 0.28 ) }
    dend_36 { pt3dadd( 87.7988, -266.329, 15.8076, 0.83 ) }
    dend_36 { pt3dadd( 88.8804, -267.017, 16.3086, 1.38 ) }
    dend_36 { pt3dadd( 91.0798, -268.733, 17.6289, 0.28 ) }
    dend_36 { pt3dadd( 92.2614, -269.788, 18.3516, 0.83 ) }
    dend_36 { pt3dadd( 94.061, -271.486, 19.4914, 0.28 ) }
    dend_36 { pt3dadd( 95.1658, -272.574, 20.2569, 1.11 ) }
    dend_36 { pt3dadd( 99.139, -276.812, 23.4821, 0.28 ) }
    dend_36 { pt3dadd( 99.6199, -277.362, 23.9321, 0.55 ) }
    dend_36 { pt3dadd( 101.934, -280.125, 26.3298, 0.28 ) }
    dend_36 { pt3dadd( 103.482, -282.024, 27.9213, 0.28 ) }
    dend_36 { pt3dadd( 104.148, -282.918, 28.5899, 0.55 ) }
    dend_36 { pt3dadd( 105.289, -284.336, 29.5069, 0.28 ) }
    dend_36 { pt3dadd( 106.065, -285.223, 29.8374, 0.28 ) }
    dend_36 { pt3dadd( 107.012, -286.407, 30.2838, 0.55 ) }
    dend_36 { pt3dadd( 107.942, -287.921, 31.0289, 0.55 ) }
    dend_36 { pt3dadd( 108.522, -289.181, 31.3378, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 59/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 69.9326, -253.75, 3.88689, 0.55 ) }
    dend_35 { pt3dadd( 68.4706, -254.682, 2.96069, 0.55 ) }
    dend_35 { pt3dadd( 67.8647, -255.068, 2.57682, 0.55 ) }
    dend_35 { pt3dadd( 67.1178, -255.545, 2.10365, 0.28 ) }
    dend_35 { pt3dadd( 66.1299, -256.175, 1.47775, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 64/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -18.1754, 347.207, 33.0712, 0.83 ) }
    dend_27 { pt3dadd( -18.1862, 349.565, 34.0198, 0.83 ) }
    dend_27 { pt3dadd( -18.1547, 353.206, 35.4597, 0.83 ) }
    dend_27 { pt3dadd( -18.1086, 355.692, 36.4582, 0.83 ) }
    dend_27 { pt3dadd( -18.1726, 360.848, 38.4931, 0.83 ) }
    dend_27 { pt3dadd( -18.1862, 361.445, 38.6869, 1.11 ) }
    dend_27 { pt3dadd( -18.2478, 363.002, 39.1054, 0.55 ) }
    dend_27 { pt3dadd( -18.32, 363.925, 39.3067, 0.83 ) }
    dend_27 { pt3dadd( -18.5437, 364.682, 37.6282, 0.28 ) }
    dend_27 { pt3dadd( -18.5871, 365.413, 35.8317, 0.55 ) }
    dend_27 { pt3dadd( -18.3671, 367.78, 30.2128, 0.28 ) }
    dend_27 { pt3dadd( -18.2678, 368.555, 28.603, 0.83 ) }
    dend_27 { pt3dadd( -18.153, 369.196, 27.3752, 0.83 ) }
    dend_27 { pt3dadd( -17.1429, 373.586, 19.9321, 0.55 ) }
    dend_27 { pt3dadd( -16.7525, 374.906, 17.9732, 0.55 ) }
    dend_27 { pt3dadd( -16.2724, 376.233, 16.6148, 1.11 ) }
    dend_27 { pt3dadd( -14.7561, 380.974, 14.7098, 0.55 ) }
    dend_27 { pt3dadd( -14.5582, 381.645, 14.6213, 0.83 ) }
    dend_27 { pt3dadd( -14.2928, 382.727, 14.806, 0.28 ) }
    dend_27 { pt3dadd( -14.1946, 383.305, 15.0302, 0.55 ) }
    dend_27 { pt3dadd( -14.1377, 384.236, 15.2745, 0.28 ) }
    dend_27 { pt3dadd( -14.1221, 385.528, 15.3917, 0.83 ) }
    dend_27 { pt3dadd( -14.0265, 386.884, 15.3004, 0.28 ) }
    dend_27 { pt3dadd( -13.9748, 387.784, 15.2255, 0.83 ) }
    dend_27 { pt3dadd( -13.8275, 390.674, 14.7203, 0.55 ) }
    dend_27 { pt3dadd( -13.6878, 393.296, 14.0946, 0.55 ) }
    dend_27 { pt3dadd( -13.5987, 395.236, 13.5584, 0.55 ) }
    dend_27 { pt3dadd( -13.4714, 397.942, 12.7918, 0.55 ) }
    dend_27 { pt3dadd( -13.406, 399.759, 12.2275, 0.55 ) }
    dend_27 { pt3dadd( -13.3063, 403.693, 11.0389, 0.55 ) }
    dend_27 { pt3dadd( -13.2582, 404.915, 10.6609, 0.28 ) }
    dend_27 { pt3dadd( -13.204, 405.998, 10.2931, 0.55 ) }
    dend_27 { pt3dadd( -13.1679, 407.5, 9.77006, 0.28 ) }
    dend_27 { pt3dadd( -13.2294, 409.83, 8.89845, 0.55 ) }
    dend_27 { pt3dadd( -13.2575, 410.795, 8.5618, 0.55 ) }
    dend_27 { pt3dadd( -13.2713, 412.622, 8.01336, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_27 { pt3dadd( -13.224, 414.346, 7.39214, 0.28 ) }
    dend_27 { pt3dadd( -13.1242, 415.228, 7.04803, 0.55 ) }
    dend_27 { pt3dadd( -12.6702, 417.182, 5.82401, 0.28 ) }
    dend_27 { pt3dadd( -12.256, 418.189, 4.93982, 0.83 ) }
    dend_27 { pt3dadd( -11.7719, 419.251, 3.92526, 0.83 ) }
    dend_27 { pt3dadd( -10.8018, 421.108, 1.99517, 0.55 ) }
    dend_27 { pt3dadd( -9.98284, 422.458, 0.423811, 0.55 ) }
    dend_27 { pt3dadd( -7.35466, 426.363, -4.55054, 0.28 ) }
    dend_27 { pt3dadd( -5.49618, 428.767, -7.93305, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 9/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -18.1754, 347.207, 33.0712, 0.55 ) }
    dend_26 { pt3dadd( -19.5177, 349.62, 33.6854, 0.55 ) }
    dend_26 { pt3dadd( -21.2841, 352.796, 34.4936, 0.55 ) }
    dend_26 { pt3dadd( -22.5267, 355.03, 35.0622, 0.55 ) }
    dend_26 { pt3dadd( -23.6055, 356.969, 35.5558, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 14/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -50.7883, 430.045, 9.77827, 0.28 ) }
    dend_22 { pt3dadd( -50.9944, 430.671, 7.86726, 0.28 ) }
    dend_22 { pt3dadd( -51.0518, 430.845, 7.33574, 0.55 ) }
    dend_22 { pt3dadd( -51.6159, 432.558, 2.10748, 0.28 ) }
    dend_22 { pt3dadd( -51.6799, 432.753, 1.51412, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 19/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -50.7883, 430.045, 9.77827, 0.28 ) }
    dend_17 { pt3dadd( -52.3469, 431.658, 10.0782, 0.28 ) }
    dend_17 { pt3dadd( -53.3103, 432.656, 10.2635, 0.83 ) }
    dend_17 { pt3dadd( -54.0307, 433.401, 10.4021, 0.83 ) }
    dend_17 { pt3dadd( -54.4865, 433.873, 10.4898, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 24/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 32.9316, 640.02, -88.6727, 0.55 ) }
    dend_9 { pt3dadd( 30.295, 641.142, -90.0249, 0.55 ) }
    dend_9 { pt3dadd( 27.2584, 642.505, -91.8477, 0.55 ) }
    dend_9 { pt3dadd( 24.9911, 643.523, -93.2086, 0.55 ) }
    dend_9 { pt3dadd( 22.3584, 644.706, -94.789, 0.28 ) }
    dend_9 { pt3dadd( 19.9772, 645.775, -96.2183, 0.83 ) }
    dend_9 { pt3dadd( 18.1421, 646.599, -97.3198, 0.83 ) }
    dend_9 { pt3dadd( 16.2825, 647.605, -98.6877, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 32/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 32.9316, 640.02, -88.6727, 0.55 ) }
    dend_8 { pt3dadd( 32.2487, 642.441, -89.4486, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 34/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -126.768, -145.278, 40.3615, 0.28 ) }
    dend_52 { pt3dadd( -128.045, -145.104, 40.959, 0.28 ) }
    dend_52 { pt3dadd( -129.304, -144.863, 41.5811, 0.55 ) }
    dend_52 { pt3dadd( -130.699, -144.573, 42.292, 0.28 ) }
    dend_52 { pt3dadd( -131.469, -144.429, 42.7117, 1.11 ) }
    dend_52 { pt3dadd( -132.63, -144.215, 43.3853, 0.28 ) }
    dend_52 { pt3dadd( -132.933, -144.152, 43.5485, 0.55 ) }
    dend_52 { pt3dadd( -134.669, -143.791, 44.4148, 0.28 ) }
    dend_52 { pt3dadd( -135.166, -143.676, 44.6602, 1.11 ) }
    dend_52 { pt3dadd( -136.295, -143.44, 45.2074, 0.28 ) }
    dend_52 { pt3dadd( -136.961, -143.306, 45.5366, 1.11 ) }
    dend_52 { pt3dadd( -138.515, -143.012, 46.3721, 1.11 ) }
    dend_52 { pt3dadd( -139.621, -142.833, 46.8936, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 47/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -126.768, -145.278, 40.3615, 0.83 ) }
    dend_51 { pt3dadd( -129.327, -147.858, 40.2429, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 49/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 10.2386, -257.784, -21.8601, 0.83 ) }
    dend_43 { pt3dadd( 9.50197, -258.827, -22.5403, 0.83 ) }
    dend_43 { pt3dadd( 8.26858, -260.573, -23.6793, 0.28 ) }
    dend_43 { pt3dadd( 7.23408, -262.037, -24.6347, 1.11 ) }
    dend_43 { pt3dadd( 4.31084, -266.175, -27.3343, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 54/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 10.2386, -257.784, -21.8601, 1.11 ) }
    dend_42 { pt3dadd( 8.20106, -255.77, -20.6734, 1.11 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 56/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -54.4865, 433.873, 10.4898, 0.55 ) }
    dend_21 { pt3dadd( -53.4956, 434.984, 8.78256, 0.55 ) }
    dend_21 { pt3dadd( -52.4133, 436.023, 7.27383, 0.28 ) }
    dend_21 { pt3dadd( -52.1468, 436.271, 6.75812, 0.55 ) }
    dend_21 { pt3dadd( -50.2655, 438.024, 3.11832, 0.28 ) }
    dend_21 { pt3dadd( -49.3832, 438.846, 1.41139, 0.55 ) }
    dend_21 { pt3dadd( -48.1838, 439.963, -0.909172, 0.28 ) }
    dend_21 { pt3dadd( -47.4397, 440.764, -2.81765, 0.55 ) }
    dend_21 { pt3dadd( -45.4841, 443.199, -9.10358, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 65/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -54.4865, 433.873, 10.4898, 0.28 ) }
    dend_18 { pt3dadd( -55.3975, 434.043, 10.8604, 0.28 ) }
    dend_18 { pt3dadd( -56.8035, 434.304, 11.4323, 0.55 ) }
    dend_18 { pt3dadd( -57.9967, 434.526, 11.9177, 0.55 ) }
    dend_18 { pt3dadd( -59.2557, 434.76, 12.4298, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 70/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 16.2825, 647.605, -98.6877, 0.55 ) }
    dend_11 { pt3dadd( 15.6876, 648.71, -98.8348, 0.55 ) }
    dend_11 { pt3dadd( 15.1126, 649.778, -98.977, 0.55 ) }
    dend_11 { pt3dadd( 14.59, 650.748, -99.1063, 0.83 ) }
    dend_11 { pt3dadd( 13.9557, 651.926, -99.2632, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 75/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 16.2825, 647.605, -98.6877, 0.28 ) }
    dend_10 { pt3dadd( 14.7505, 648.506, -100.238, 0.28 ) }
    dend_10 { pt3dadd( 14.3301, 648.753, -100.664, 0.28 ) }
    dend_10 { pt3dadd( 13.48, 649.253, -101.524, 0.83 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 79/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 4.31084, -266.175, -27.3343, 1.11 ) }
    dend_45 { pt3dadd( 4.00201, -268.879, -25.3671, 1.11 ) }
    dend_45 { pt3dadd( 3.60386, -271.634, -23.2369, 0.28 ) }
    dend_45 { pt3dadd( 3.26082, -273.546, -21.7526, 1.11 ) }
    dend_45 { pt3dadd( 2.03494, -278.806, -17.3627, 0.28 ) }
    dend_45 { pt3dadd( 1.68858, -280.112, -16.2588, 1.94 ) }
    dend_45 { pt3dadd( 0.664016, -283.934, -13.2345, 1.11 ) }
    dend_45 { pt3dadd( 0.397978, -284.781, -12.5737, 0.28 ) }
    dend_45 { pt3dadd( 0.0517989, -285.756, -11.8325, 0.83 ) }
    dend_45 { pt3dadd( -0.894545, -288.383, -10.1469, 0.28 ) }
    dend_45 { pt3dadd( -1.31446, -289.624, -9.65349, 1.11 ) }
    dend_45 { pt3dadd( -2.36713, -292.951, -8.62987, 0.28 ) }
    dend_45 { pt3dadd( -3.19767, -295.62, -8.08748, 0.28 ) }
    dend_45 { pt3dadd( -3.58772, -297.024, -7.81885, 1.11 ) }
    dend_45 { pt3dadd( -3.58772, -297.024, -7.81885, 1.11 ) }
    dend_45 { pt3dadd( -3.98605, -298.787, -7.66576, 0.55 ) }
    dend_45 { pt3dadd( -4.17736, -299.557, -7.57965, 1.38 ) }
    dend_45 { pt3dadd( -5.09603, -302.472, -7.06931, 0.28 ) }
    dend_45 { pt3dadd( -5.19593, -302.784, -6.99007, 1.11 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 98/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 4.31084, -266.175, -27.3343, 0.55 ) }
    dend_44 { pt3dadd( 1.39973, -265.967, -26.0016, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_44 { pt3dadd( -0.404121, -265.838, -25.1759, 0.55 ) }
    dend_44 { pt3dadd( -1.9495, -265.727, -24.4685, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -59.2557, 434.76, 12.4298, 0.55 ) }
    dend_20 { pt3dadd( -59.8225, 436.177, 12.7558, 0.55 ) }
    dend_20 { pt3dadd( -60.6673, 438.775, 13.4259, 0.55 ) }
    dend_20 { pt3dadd( -61.078, 440.519, 13.8354, 0.55 ) }
    dend_20 { pt3dadd( -61.5382, 442.678, 14.2622, 0.55 ) }
    dend_20 { pt3dadd( -61.9231, 444.668, 14.7125, 0.28 ) }
    dend_20 { pt3dadd( -62.0868, 445.58, 14.869, 0.83 ) }
    dend_20 { pt3dadd( -62.4429, 448.182, 15.1914, 0.83 ) }
    dend_20 { pt3dadd( -62.6063, 450.422, 15.4204, 0.83 ) }
    dend_20 { pt3dadd( -62.6707, 451.57, 15.4876, 0.55 ) }
    dend_20 { pt3dadd( -62.6497, 454.501, 15.5536, 0.83 ) }
    dend_20 { pt3dadd( -62.4354, 457.821, 15.3928, 0.28 ) }
    dend_20 { pt3dadd( -62.3462, 459.411, 15.1771, 0.28 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 15/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -59.2557, 434.76, 12.4298, 0.55 ) }
    dend_19 { pt3dadd( -61.7822, 433.424, 14.6937, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_29 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_29 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_57 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_12 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_58 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_31 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_60 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_56 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_32 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_23 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_14 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_5 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_48 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_24 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_16 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_6 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_54 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_40 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_36 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_27 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_45 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_30 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_46 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_47 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_53 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_55 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_59 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_61 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_37 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_38 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_39 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_13 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_41 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_50 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_42 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_49 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_51 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_43 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_52 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_44 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_35 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_15 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_33 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_25 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_26 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_17 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_22 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_18 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_19 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_21 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_3 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_4 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_20 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_8 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_9 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_10 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_11 OneSecGrp_SectionRef_60.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_2, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_47, dend_47, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_43, dend_43, dend_43, dend_43, dend_42, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_29 nseg = 5
    dend_57 nseg = 3
    dend_12 nseg = 9
    dend_1 nseg = 21
    dend_58 nseg = 3
    dend_31 nseg = 5
    dend_28 nseg = 11
    dend_60 nseg = 3
    dend_56 nseg = 5
    dend_32 nseg = 5
    dend_23 nseg = 5
    dend_14 nseg = 3
    dend_5 nseg = 5
    dend_48 nseg = 5
    dend_24 nseg = 11
    dend_16 nseg = 7
    dend_7 nseg = 5
    dend_6 nseg = 5
    dend_54 nseg = 3
    dend_40 nseg = 3
    dend_36 nseg = 3
    dend_27 nseg = 5
    dend_45 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L4_DBC_78a99c338d_0_0


